{
    "id": "dbpedia_4404_0",
    "rank": 87,
    "data": {
        "url": "https://martinfowler.com/architecture/",
        "read_more_link": "",
        "language": "en",
        "title": "Software Architecture Guide",
        "top_image": "https://martinfowler.com/logo-sq.png",
        "meta_img": "https://martinfowler.com/logo-sq.png",
        "images": [
            "https://martinfowler.com/mf-name-white.png",
            "https://martinfowler.com/mf.jpg",
            "https://martinfowler.com/architecture/ralph.png",
            "https://martinfowler.com/architecture/ieee-arch.png",
            "https://martinfowler.com/articles/is-quality-worth-cost/card.png",
            "https://martinfowler.com/articles/is-quality-worth-cost/both.png",
            "https://martinfowler.com/architecture/oscon.png",
            "https://martinfowler.com/microservices/microservices-sq.png",
            "https://martinfowler.com/articles/patterns-legacy-displacement/card.png",
            "https://martinfowler.com/articles/micro-frontends/card.png",
            "https://martinfowler.com/articles/serverless/sps.png",
            "https://martinfowler.com/bliki/images/presentationDomainDataLayering/all_basic.png",
            "https://martinfowler.com/books/joshi.jpg",
            "https://martinfowler.com/articles/feature-toggles/overview-diagram.png",
            "https://martinfowler.com/articles/modularizing-react-apps/evolution-5.png",
            "https://martinfowler.com/img/catalog/ieee-arch-team.png",
            "https://martinfowler.com/articles/creating-integrated-tech-strategy/card.png",
            "https://martinfowler.com/articles/architect-elevator/taipei101.jpg",
            "https://martinfowler.com/articles/ea-in-lean-enterprise/card.png",
            "https://martinfowler.com/articles/enterpriseREST/logical-environments.png",
            "https://martinfowler.com/thoughtworks_white.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Martin Fowler"
        ],
        "publish_date": "2019-08-01T00:00:00",
        "summary": "",
        "meta_description": "Software Architecture is the important aspects of a software system's internal design, usually its major components and aspects that are hard to change.",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "martinfowler.com",
        "canonical_link": "https://martinfowler.com/architecture/",
        "text": "When people in the software industry talk about “architecture”, they refer to a hazily defined notion of the most important aspects of the internal design of a software system. A good architecture is important, otherwise it becomes slower and more expensive to add new capabilities in the future.\n\nLike many in the software world, I’ve long been wary of the term “architecture” as it often suggests a separation from programming and an unhealthy dose of pomposity. But I resolve my concern by emphasizing that good architecture is something that supports its own evolution, and is deeply intertwined with programming. Most of my career has revolved about the questions of what good architecture looks like, how teams can create it, and how best to cultivate architectural thinking in our development organizations. This page outlines my view of software architecture and points you to more material about architecture on this site.\n\nWhat is architecture?\n\nPeople in the software world have long argued about a definition of architecture. For some it's something like the fundamental organization of a system, or the way the highest level components are wired together. My thinking on this was shaped by an email exchange with Ralph Johnson, who questioned this phrasing, arguing that there was no objective way to define what was fundamental, or high level and that a better view of architecture was the shared understanding that the expert developers have of the system design.\n\nA second common style of definition for architecture is that it's “the design decisions that need to be made early in a project”, but Ralph complained about this too, saying that it was more like the decisions you wish you could get right early in a project.\n\nHis conclusion was that “Architecture is about the important stuff. Whatever that is”. On first blush, that sounds trite, but I find it carries a lot of richness. It means that the heart of thinking architecturally about software is to decide what is important, (i.e. what is architectural), and then expend energy on keeping those architectural elements in good condition. For a developer to become an architect, they need to be able to recognize what elements are important, recognizing what elements are likely to result in serious problems should they not be controlled.\n\nWhy does architecture matter?\n\nArchitecture is a tricky subject for the customers and users of software products - as it isn't something they immediately perceive. But a poor architecture is a major contributor to the growth of cruft - elements of the software that impede the ability of developers to understand the software. Software that contains a lot of cruft is much harder to modify, leading to features that arrive more slowly and with more defects.\n\nThis situation is counter to our usual experience. We are used to something that is \"high quality\" as something that costs more. For some aspects of software, such as the user-experience, this can be true. But when it comes to the architecture, and other aspects of internal quality, this relationship is reversed. High internal quality leads to faster delivery of new features, because there is less cruft to get in the way.\n\nWhile it is true that we can sacrifice quality for faster delivery in the short term, before the build up of cruft has an impact, people underestimate how quickly the cruft leads to an overall slower delivery. While this isn't something that can be objectively measured, experienced developers reckon that attention to internal quality pays off in weeks not months.\n\nRead more…"
    }
}