{
    "id": "dbpedia_3788_1",
    "rank": 50,
    "data": {
        "url": "https://firebase.google.com/docs/cloud-messaging/ios/send-image",
        "read_more_link": "",
        "language": "en",
        "title": "Send an image in the notification payload",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.gstatic.com/devrel-devsite/prod/vd185cef2092d5507cf5d5de6d49d6afd8eb38fe69b728d88979eb4a70550ff03/firebase/images/lockup.svg",
            "https://www.gstatic.com/devrel-devsite/prod/vd185cef2092d5507cf5d5de6d49d6afd8eb38fe69b728d88979eb4a70550ff03/firebase/images/lockup.svg",
            "https://firebase.google.com/static/docs/cloud-messaging/images/Image_Notification_v2.png",
            "https://www.gstatic.com/devrel-devsite/prod/vd185cef2092d5507cf5d5de6d49d6afd8eb38fe69b728d88979eb4a70550ff03/firebase/images/lockup-google-for-developers.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://www.gstatic.com/devrel-devsite/prod/vd185cef2092d5507cf5d5de6d49d6afd8eb38fe69b728d88979eb4a70550ff03/firebase/images/favicon.png",
        "meta_site_name": "Firebase",
        "canonical_link": "https://firebase.google.com/docs/cloud-messaging/ios/send-image",
        "text": "The FCM HTTP v1 API and the Notifications composer support sending image links in the payload of a display notification, for image download to the device after delivery. This functionality supports both images and videos for Apple apps (see Apple documentation for file size limits).\n\nTo be able to receive and handle notification images in an Apple app, you must add a Notification Service Extension. The notification service extension allows your app to handle the image delivered in the FCM payload before displaying the notification to the end user.\n\nSet up the notification service extension\n\nTo add a service extension, perform the required setup tasks for modifying and presenting notifications in APNs, and then add the FCM extension helper API in NotificationService.m. Specifically, instead of completing the callback with self.contentHandler(self.bestAttemptContent);, complete it with FIRMessaging extensionHelper as shown:\n\n@interface NotificationService () <NSURLSessionDelegate> @property(nonatomic) void (^contentHandler)(UNNotificationContent *contentToDeliver); @property(nonatomic) UNMutableNotificationContent *bestAttemptContent; @end @implementation NotificationService - (void)didReceiveNotificationRequest:(UNNotificationRequest *)request withContentHandler:(void (^)(UNNotificationContent * _Nonnull))contentHandler { self.contentHandler = contentHandler; self.bestAttemptContent = [request.content mutableCopy]; // Modify the notification content here as you wish self.bestAttemptContent.title = [NSString stringWithFormat:@\"%@ [modified]\", self.bestAttemptContent.title]; // Call FIRMessaging extension helper API. [[FIRMessaging extensionHelper] populateNotificationContent:self.bestAttemptContent withContentHandler:contentHandler]; } ...\n\nBuild the send request\n\nIn your notification send request, set the following ApnsConfig options:\n\nfcm_options.image containing the image URL\n\nheaders({ \"mutable-content\": 1})\n\nThe following example send request sends a common notification title to all platforms, but it also sends an image. Here's an approximation of the visual effect on a user's device:\n\nSee the HTTP v1 reference documentation for complete detail on the keys available in platform-specific blocks in the message body."
    }
}