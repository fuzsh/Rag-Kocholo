{
    "id": "dbpedia_3788_3",
    "rank": 6,
    "data": {
        "url": "https://commons.wikimedia.org/wiki/User:Glrx",
        "read_more_link": "",
        "language": "en",
        "title": "Wikimedia Commons",
        "top_image": "https://commons.wikimedia.org/static/favicon/commons.ico",
        "meta_img": "https://commons.wikimedia.org/static/favicon/commons.ico",
        "images": [
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg/220px-Mona_Lisa%2C_by_Leonardo_da_Vinci%2C_from_C2RMF_retouched.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/24/Gibraltar_map-en.svg/220px-Gibraltar_map-en.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Arms_of_the_House_of_Rohan-Chabot.svg/103px-Arms_of_the_House_of_Rohan-Chabot.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/Audi_logo_detail.svg/120px-Audi_logo_detail.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7a/2808_audi_logo_nuevo_th_2.jpg/120px-2808_audi_logo_nuevo_th_2.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/90/SMAW_weld_area.svg/120px-SMAW_weld_area.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Peptidformationball.svg/120px-Peptidformationball.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Pictogram_TACAN.svg/120px-Pictogram_TACAN.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Pictogram_NDB.svg/120px-Pictogram_NDB.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Pictogram_NDB-DME.svg/120px-Pictogram_NDB-DME.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/SVG_test_dasharray.svg/120px-SVG_test_dasharray.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Blason_ville_fr_Dinard_%28Ille-et-Vilaine%29.svg/109px-Blason_ville_fr_Dinard_%28Ille-et-Vilaine%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Blason_ville_Chauvign%C3%A9_35.svg/109px-Blason_ville_Chauvign%C3%A9_35.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/28/Hermine_%28champ%29.svg/85px-Hermine_%28champ%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/SVG_CSS_Test.svg/320px-SVG_CSS_Test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/SVG_Test_CSS_Lengths.svg/440px-SVG_Test_CSS_Lengths.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Ipv6_header.svg/205px-Ipv6_header.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/TDR_SMA_APC7_prec_short.svg/198px-TDR_SMA_APC7_prec_short.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/TDR_SMA_open.svg/198px-TDR_SMA_open.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Paganese_Calcio_1926_logo-lite.png/256px-Paganese_Calcio_1926_logo-lite.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Symbol_Test.svg/220px-Symbol_Test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/SVG_Test_Font_Condensed.svg/600px-SVG_Test_Font_Condensed.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Liniennetz_Stadtbahn_Bielefeld_mit_Stationsnamen.svg/220px-Liniennetz_Stadtbahn_Bielefeld_mit_Stationsnamen.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Vietnamese-style_seal_of_the_Government-General_of_French_Indochina.svg/220px-Vietnamese-style_seal_of_the_Government-General_of_French_Indochina.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/72/Alberta_Highway_2.svg/90px-Alberta_Highway_2.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/01/Alberta_Highway_2A.svg/90px-Alberta_Highway_2A.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Alberta_Highway_93.svg/90px-Alberta_Highway_93.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Alberta_Highway_93A.svg/90px-Alberta_Highway_93A.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Abdomal_organs_body.svg/300px-Abdomal_organs_body.svg.png",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/a079e3f6f370aa2514d4bc0132ba7a10303e9a92",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/84f92a08c2769f4aeaed2dab80bed8adb5d44aaa",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/d31d8ccfbe27987301f7e05c9090f0a9023c23cf",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langde-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langde-ch-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langde-de-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langfr-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langfr-ch-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langtlh-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langzh-hans-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langzh-hant-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langzh-cn-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/SVG_MW_lang_test.svg/langzh-tw-120px-SVG_MW_lang_test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/23/SVG_test_symbol.svg/220px-SVG_test_symbol.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Silversmith.jpg/220px-Silversmith.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Cross-section_of_a_subduction_zone_and_back-arc_basin.jpg/483px-Cross-section_of_a_subduction_zone_and_back-arc_basin.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Hepatitis_B_virus_v2.png/439px-Hepatitis_B_virus_v2.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/SlapperDiag.png/500px-SlapperDiag.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/SlapperDetArea.png/278px-SlapperDetArea.png",
            "https://upload.wikimedia.org/wikipedia/commons/3/32/Continental_shelf.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/Horse_hoof_wild_bare_sagittal.jpg/367px-Horse_hoof_wild_bare_sagittal.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Bullet.svg/120px-Bullet.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Bulletfixed.PNG/86px-Bulletfixed.PNG",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Cartouche_Boxer.jpg/120px-Cartouche_Boxer.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Cartridge_cross_section.svg/120px-Cartridge_cross_section.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Copper%28II%29-sulfate-pentahydrate-xtal-1985-Cu-coord-3D-bs-17.png/400px-Copper%28II%29-sulfate-pentahydrate-xtal-1985-Cu-coord-3D-bs-17.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/CuSO4_%285aq%29.jpg/316px-CuSO4_%285aq%29.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/FiringGeometry.png/346px-FiringGeometry.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Cn3nucleus.png/310px-Cn3nucleus.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Alveoli_diagram.png/263px-Alveoli_diagram.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/10/Wien_Bridge_Oscillator.png/261px-Wien_Bridge_Oscillator.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2f/Intercept.png/284px-Intercept.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Intercept.svg/283px-Intercept.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Illu_nose_nasal_cavities.jpg/382px-Illu_nose_nasal_cavities.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/28/Littoral_Zones.jpg/440px-Littoral_Zones.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Map_of_battle_St._Mihiel.JPG/367px-Map_of_battle_St._Mihiel.JPG",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Anther-schematic.png/244px-Anther-schematic.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a6/Anther-schematic.svg/244px-Anther-schematic.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Aufbau_Southern-Blot.jpg/440px-Aufbau_Southern-Blot.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Kapillarblot.svg/440px-Kapillarblot.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Northern_blot_diagram.png/320px-Northern_blot_diagram.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Paganese_Calcio_1926_logo-lite.png/102px-Paganese_Calcio_1926_logo-lite.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2b/Electric_glow_discharge_schematic.png/289px-Electric_glow_discharge_schematic.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Electric_glow_discharge_schematic.svg/302px-Electric_glow_discharge_schematic.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Hair_follicle-en.svg/129px-Hair_follicle-en.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/LuettePalatineUvula.jpg/120px-LuettePalatineUvula.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/Palantine_uvula_annotated.jpg/120px-Palantine_uvula_annotated.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/LuettePalatineUvula.svg/120px-LuettePalatineUvula.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Illu_epithelium.jpg/440px-Illu_epithelium.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Stem_cells_diagram.png/241px-Stem_cells_diagram.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/14/Blausen_0316_DigestiveSystem.png/440px-Blausen_0316_DigestiveSystem.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Skin.png/428px-Skin.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Anatomy_Abdomen_Tiesworks.jpg/440px-Anatomy_Abdomen_Tiesworks.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Possible_Interiors_of_the_TRAPPIST-1_Exoplanets.jpg/440px-Possible_Interiors_of_the_TRAPPIST-1_Exoplanets.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/The_Earth_seen_from_Apollo_17.jpg/300px-The_Earth_seen_from_Apollo_17.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Wilson1900Fig2.jpg/440px-Wilson1900Fig2.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Arms_of_the_House_of_Fisichella_%282016%29.jpg/351px-Arms_of_the_House_of_Fisichella_%282016%29.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e3/Arms_of_the_House_of_Fisichella.svg/329px-Arms_of_the_House_of_Fisichella.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/Coral_polyp.jpg/303px-Coral_polyp.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c1/Coral_polyp_en.svg/311px-Coral_polyp_en.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Wikidata_Stamp_Rec_Light.svg/320px-Wikidata_Stamp_Rec_Light.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/Wikidata_stamp_rec_light.png/320px-Wikidata_stamp_rec_light.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Wikidata_Stamp_Rec_Dark.svg/320px-Wikidata_Stamp_Rec_Dark.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Wikidata_stamp_rec.png/320px-Wikidata_stamp_rec.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Wikidata_Stamp_Round_Light.svg/320px-Wikidata_Stamp_Round_Light.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Wikidata_stamp.png/320px-Wikidata_stamp.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/50/Wikidata_stamp.svg/320px-Wikidata_stamp.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Xilografia_canto_4.png/220px-Xilografia_canto_4.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/LB_trough.jpg/120px-LB_trough.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/cc/LB_trough.svg/120px-LB_trough.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/SVG_Test_dim_filter_mask.svg/220px-SVG_Test_dim_filter_mask.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Yellow_check.svg/15px-Yellow_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/24/Haber-Bosch.svg/634px-Haber-Bosch.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Haber-Bosch-es.svg/582px-Haber-Bosch-es.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/58/Greenhouse_Effect.svg/390px-Greenhouse_Effect.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/Effet_de_serre.svg/390px-Effet_de_serre.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Standard_Model_of_Elementary_Particles.svg/400px-Standard_Model_of_Elementary_Particles.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Standard_Model_of_Elementary_Particles-fr.svg/400px-Standard_Model_of_Elementary_Particles-fr.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Standard_Model_of_Elementary_Particles.svg/400px-Standard_Model_of_Elementary_Particles.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Standard_Model_of_Elementary_Particles.svg/langde-400px-Standard_Model_of_Elementary_Particles.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Map_of_achaean_Crete-ru.svg/360px-Map_of_achaean_Crete-ru.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Linear_B_tablet_Ng332.svg/303px-Linear_B_tablet_Ng332.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/First_Ionization_Energy.svg/langtlh-220px-First_Ionization_Energy.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/First_Ionization_Energy.svg/220px-First_Ionization_Energy.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/SVG_test_vertical.svg/220px-SVG_test_vertical.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/2022_Russian_invasion_of_Ukraine.svg/220px-2022_Russian_invasion_of_Ukraine.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/b43d0ea3c9c025af1be9128e62a18fa74bedda2a",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/33ee699558d09cf9d653f6351f9fda0b2f4aaa3e",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/d7daf493c8f6ef669c04c7b9715532fc35d12d60",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/6cf63e8f16cefbe25d3d028fbb464a8c4a53cc7b",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/cfa5ad1eb6cdaf3d8dfd77991ee9ce7bdf169184",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/4b0bfb3769bf24d80e15374dc37b0441e2616e33",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Pictogram_voting_info.svg/15px-Pictogram_voting_info.svg.png",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/4d18f12a11062ef18b9ab19d4c674e9272d267c4",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/05ccc92b1bc45b2139081028b50f4498017d8078",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/SVG_Test_Label.svg/400px-SVG_Test_Label.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Yes_check.svg/15px-Yes_check.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/Transformer3d_col3.svg/220px-Transformer3d_col3.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Abbe-diagram.svg/202px-Abbe-diagram.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/CNO_Cycle.svg/220px-CNO_Cycle.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/95/SVG_Switch_Test.svg/220px-SVG_Switch_Test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/SVG_Translate_test_namespace.svg/220px-SVG_Translate_test_namespace.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/SVG_Translate_test_namespace.svg/220px-SVG_Translate_test_namespace.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/95/SVG_Switch_Test.svg/220px-SVG_Switch_Test.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Twilight_subcategories.svg/220px-Twilight_subcategories.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Refractometer.jpg/400px-Refractometer.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/Prinzip_Refraktometer.png/200px-Prinzip_Refraktometer.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7c/Vierpolig-3str%C3%A4nge.svg/300px-Vierpolig-3str%C3%A4nge.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Asynchronous_Motor.svg/300px-Asynchronous_Motor.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Spleetpoolmotor.svg/195px-Spleetpoolmotor.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Braun_Camera-Werk_Novamat_M_330_-_shaded-pole_motor_EM2518-123-3104.jpg/120px-Braun_Camera-Werk_Novamat_M_330_-_shaded-pole_motor_EM2518-123-3104.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/eb/Shaded_pole_detail.jpg/190px-Shaded_pole_detail.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/B%C3%A4ndchenmikrofon.svg/174px-B%C3%A4ndchenmikrofon.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Mikrofon_szalag.png/120px-Mikrofon_szalag.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/Transformer3d_col3.svg/160px-Transformer3d_col3.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Lateral_mosfet.svg/300px-Lateral_mosfet.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Blast_Furnace_Reactions.jpg/412px-Blast_Furnace_Reactions.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Flow_chart_of_blast-furnace_production_%E2%80%94_%D0%A1%D1%85%D0%B5%D0%BC%D0%B0_%D0%B4%D0%BE%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D0%B3%D0%BE_%D0%B2%D0%B8%D1%80%D0%BE%D0%B1%D0%BD%D0%B8%D1%86%D1%82%D0%B2%D0%B0.PNG/392px-Flow_chart_of_blast-furnace_production_%E2%80%94_%D0%A1%D1%85%D0%B5%D0%BC%D0%B0_%D0%B4%D0%BE%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D0%B3%D0%BE_%D0%B2%D0%B8%D1%80%D0%BE%D0%B1%D0%BD%D0%B8%D1%86%D1%82%D0%B2%D0%B0.PNG",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2d/Rotary_vane_pump.svg/300px-Rotary_vane_pump.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Liquid_ring.png/300px-Liquid_ring.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/WPGaugeFace-2.jpg/240px-WPGaugeFace-2.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fd/WPPressGaugeMech-2.jpg/230px-WPPressGaugeMech-2.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/WPPressGaugeDetailHC.jpg/300px-WPPressGaugeDetailHC.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Galvanic_cell_labeled.svg/300px-Galvanic_cell_labeled.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Alkaline-battery-english.svg/300px-Alkaline-battery-english.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/Schnitt_Alkali-Mn-Batterie.jpg/300px-Schnitt_Alkali-Mn-Batterie.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Schnitt_Alkali-Mn-Batterie.svg/300px-Schnitt_Alkali-Mn-Batterie.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/CNX_Chem_17_05_AlkalineBat.png/300px-CNX_Chem_17_05_AlkalineBat.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Illu_blood_cell_lineage.jpg/400px-Illu_blood_cell_lineage.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Hematopoiesis_%28human%29_diagram.png/400px-Hematopoiesis_%28human%29_diagram.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Hematopoiesis_simple.png/400px-Hematopoiesis_simple.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Hematopoiesis_simple.svg/400px-Hematopoiesis_simple.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/B._metamyelocyte.svg/120px-B._metamyelocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/24/B._myelocyte.svg/120px-B._myelocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/B._band.svg/120px-B._band.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/B._promyelocyte.svg/120px-B._promyelocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/ad/Basophilic_erythoblast.svg/120px-Basophilic_erythoblast.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Basophil.svg/120px-Basophil.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a6/B_lymphocyte.svg/116px-B_lymphocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/61/Common_lymphoid_progenitor.svg/120px-Common_lymphoid_progenitor.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/E._band.svg/120px-E._band.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Common_myeloid_progenitor.svg/120px-Common_myeloid_progenitor.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/E._metamyelocyte.svg/120px-E._metamyelocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/E._promyelocyte.svg/120px-E._promyelocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/E._myelocyte.svg/120px-E._myelocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2b/Erythrocyte_%282%29.svg/120px-Erythrocyte_%282%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Eosinophil.svg/120px-Eosinophil.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Lymphoblast.svg/120px-Lymphoblast.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c6/Lymphoid_dendritic_cell_%283%29.svg/120px-Lymphoid_dendritic_cell_%283%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Megakaryoblast.svg/120px-Megakaryoblast.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/Mast_cell.svg/120px-Mast_cell.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/28/Megakaryocyte.svg/120px-Megakaryocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d1/Monoblast.svg/120px-Monoblast.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Multipotential_hematopoietic_stem_cell.svg/120px-Multipotential_hematopoietic_stem_cell.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Myeloblast.svg/120px-Myeloblast.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Myeloid_dendritic_cell_%283%29.svg/120px-Myeloid_dendritic_cell_%283%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/9/95/Monocyte.svg/120px-Monocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/N._band.svg/120px-N._band.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/N._metamyelocyte.svg/116px-N._metamyelocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/N._myelocyte.svg/120px-N._myelocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c6/N._promyelocyte.svg/120px-N._promyelocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Nautral_killer_cell_%28Large_granular_lymphocyte%29.svg/120px-Nautral_killer_cell_%28Large_granular_lymphocyte%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Orthochromatic_erythroblast_%28Normoblast%29.svg/109px-Orthochromatic_erythroblast_%28Normoblast%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7f/Polychromatic_erythtocyte_%281%29_%28Reticulocyte%29.svg/120px-Polychromatic_erythtocyte_%281%29_%28Reticulocyte%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/Plasma_cell.svg/120px-Plasma_cell.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b7/Polychromatic_erythroblast.svg/120px-Polychromatic_erythroblast.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Proerythroblast_%28Pronormoblast%29.svg/120px-Proerythroblast_%28Pronormoblast%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/Prolymphocyte.svg/120px-Prolymphocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/Promegakaryocyte.svg/120px-Promegakaryocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Promonocyte.svg/120px-Promonocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/Small_lymphocyte_%284%29.svg/116px-Small_lymphocyte_%284%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Thrombocytes.svg/120px-Thrombocytes.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/T_lymphocyte.svg/116px-T_lymphocyte.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Neutrophil.svg/117px-Neutrophil.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e3/Phases_of_the_Moon.png/600px-Phases_of_the_Moon.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/64/Sur3_Moon_phases_es.jpg/600px-Sur3_Moon_phases_es.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a6/Moon_phases_00.jpg/600px-Moon_phases_00.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/24/Direct_pawl_clicker_torque_concept.png/120px-Direct_pawl_clicker_torque_concept.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Deltavirus_virion_right-HBV.jpg/120px-Deltavirus_virion_right-HBV.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/HBV.png/120px-HBV.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Hepatitis_B_virus_v2.png/120px-Hepatitis_B_virus_v2.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Hepatitis_B_virus_v2.svg/120px-Hepatitis_B_virus_v2.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f4/Hepatitis_B_virus_v2_%282%29.svg/120px-Hepatitis_B_virus_v2_%282%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Hepatitis_B_virus_v2_%283%29.svg/120px-Hepatitis_B_virus_v2_%283%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/IPv6_header-en.svg/300px-IPv6_header-en.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/IPv6_header-en.svg/langaz-latn-300px-IPv6_header-en.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/4c/IPv6_header-en.svg/langaz-300px-IPv6_header-en.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/langfr-120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/langund-120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/langen-gb-120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/langfr-it-120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/langzh-tw-120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/langzh-120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/langzh-hans-120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c8/SVG_Test_System_Language.svg/langzh-hant-120px-SVG_Test_System_Language.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/OOjs_UI_icon_close-ltr-destructive.svg/20px-OOjs_UI_icon_close-ltr-destructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/OOjs_UI_icon_close-ltr-destructive.svg/20px-OOjs_UI_icon_close-ltr-destructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/OOjs_UI_icon_close-ltr-destructive.svg/20px-OOjs_UI_icon_close-ltr-destructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/OOjs_UI_icon_close-ltr-destructive.svg/20px-OOjs_UI_icon_close-ltr-destructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/20px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/OOjs_UI_icon_close-ltr-destructive.svg/20px-OOjs_UI_icon_close-ltr-destructive.svg.png",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/de8cc7dfc048bf7d883517d82fdf2f5689d5d8d6",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/de8cc7dfc048bf7d883517d82fdf2f5689d5d8d6",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/f9add4085095b9b6d28d045fd9c92c2c09f549a7",
            "https://wikimedia.org/api/rest_v1/media/math/render/svg/f9add4085095b9b6d28d045fd9c92c2c09f549a7",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Chainstitch1.gif/320px-Chainstitch1.gif",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Lockstitch.gif/268px-Lockstitch.gif",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Evolution_of_Hindu-Arabic_numerals.jpg/400px-Evolution_of_Hindu-Arabic_numerals.jpg",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://commons.wikimedia.org/static/images/footer/wikimedia-button.svg",
            "https://commons.wikimedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "1776-07-04T00:00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/commons.png",
        "meta_site_name": "",
        "canonical_link": "https://commons.wikimedia.org/wiki/User:Glrx",
        "text": "The current MediaWiki version is 1.43.0-wmf.17 (21482f8).\n\nsemver semantic versioning. https://semver.org/\n\nAn improved fix for T337139: Hyphenated langtags in Thumbor/7.3.2 and librsvg 2.44.10 do not show any text should happen after version 1.41.0-wmf.29 (ff3308b). Expect 1.41.0-wmf.30 on 2023-10-11.\n\nAn increase limit on SVG files for T270889: In SVG files larger than 256kB with <switch> elements, the translations are not recognized should appear in 1.42.0-wmf.18; 2024-02-13.\n\nWMF does some interesting processing when it displays images. One might think that a JPEG image of the Mona Lisa is just transmitted to a browser, but that is not the case. The File:Mona Lisa, by Leonardo da Vinci, from C2RMF retouched.jpg is 90 MB, and that much data takes time to transmit (about 1 second at 1 Gbit/s or 10 seconds at 100 Mbit/s) and could put a big dent in a modest cellular telephone data plan.\n\nInstead, WMF does something different. The 90 MB, 7,479 × 11,146 pixel, JPEG is downsampled to the display size. The result is a small image is transferred over the network. The transfer is faster, and the impact on data bandwidth and data plans is much smaller. For example, the downsampled JPEG is just 21143 bytes, a mere fraction of 90 MB.\n\nCHECK: If a JPEG is below a certain size, it may not be downsampled.\n\nThe wiki markup will specify a particular image to display. The markup will specify a desired size (such as a width of 160 pixels).\n\nBelow is speculation. JPEG and PNG files may be reparsed at each inclusion. I need to check the sources.\n\nI expect a database to hold critical properties. With quick access to some properties, it will not be necessary to parse the image file or the image description page. Such properties would be a base URL, file type, width, and height should be accessed quickly. From that information, one could quickly determine the HTML to include the image. The img element's width, height, and URL can be determined without reading the image file.\n\nIf a new image is uploaded, that upload should clear the server caches of that image, but the upload need not trigger rebuilds of all the pages that use the image. Those pages need to be rebuilt only when the aspect ratio changes. Such a change could impact the page layout. *** Check that the img element has both width and height attributes.\n\nSVG files may be different. SVG URLs many need to specify the desired language. If a language is added, then that may trigger the rebuild of all pages that use the image. Any of those pages may specify the recently added language. The MW database holds (at least some of) the IETF language tags that the file supports. Well, the list of pages to rebuild can be much shorter. If |lang= is set, then the page does not need to be rebuilt. That means if the SVG file adds the fr langtag, then only pages on wikis that default to use the fr langtag need to be rebuilt (the fr.Wiki). Any other wiki will not be affected. If such a wiki had requested a French version of the SVG, its pages would already have URLs that specify the French version. (Before the addition, the thumbnailer would not find a French version, so it would render the SVG default language.)\n\nNote: The MW database has an edited list of languages in its metadata. A MediaWiki API imageinfo query provides metadata and languages (MW type not IETF?):\n\nhttps://commons.wikimedia.org/w/api.php?action=query&format=jsonfm&prop=imageinfo&titles=File%3A2022_Russian_invasion_of_Ukraine.svg&iiprop=timestamp%7Cuser%7Cmetadata\n\nLanguages are filtered: zh_CN does not appear. Non-existent langtags also appear: zh.\n\nhttps://www.mediawiki.org/wiki/Manual:File_metadata_handling\n\nThe WMF servers confront a computational burden because they must downsample the requested image, but local server computation may be less expensive than data bandwidth.\n\nIn addition, WMF servers also cache the images that it downsamples. If I ask for Mona Lisa at a particular width, then a WMF server will generate that size. That work is stored in a cache, so if I or somebody else asks for the same size image at another time, the cached version is supplied rather than re-downsampling the image. The cache saves computation and time.\n\nThe moment when the caching is done is also significant. Although I can ask for images at particular sizes, the usual scenario is the image (such as Mona Lisa) is used on a wiki article page. When a wiki page is updated, MediaWiki rebuilds the wiki page (creating a cached version of the wiki page) and also caching any new images that were added to the page. That can require a lot of computation, but the result is the wiki page and all of its images are now in the server caches. Preloading the cache reduces the latency that a user would experience when he views the page. He need only wait for the data to be transferred; he would not wait for the downsampling because it has already been done.\n\nFurthermore, WMF tells my browser to cache local copies on my computer. If I view a wiki page with the Mona Lisa image on it, the wiki page and the Mona Lisa image are copied to my computer. I can leave that wiki page, but the local copies remain on my computer. If I reload the page later, my browser can display the page without re-downloading the page and image from the WMF server. (Some small network traffic may confirm that my cached copies are still valid.)\n\nThat local caching interaction can be involved. The mechanism is part of the Hyper Text Transfer Protocol (HTTP). When a server transfers web pages or images using HTTP, it will specify some caching information. That information tells my browser if it may cache the data and how long the cached data is accurate.[1]\n\nConsider srcset and displayed sizes. MW chooses fixed-size images. Changing the width of a browser window changes the layout on my screen, but it does not require downloading new thumbnails.\n\nSay wiki page ABC uses an image XYZ.\n\nIf page ABC is rebuilt every time it is accessed, then the page will always be up to date. If the page is cached, then the cache may have a stale version.\n\nIf somebody edits page ABC, then it is clear that page ABC should be purged from the cache.\n\nIf somebody edits image XYZ, then the cache should be cleared of XYZ. But the appearance of page ABC may also change even though none of the wikitext for page ABC has changed. How does page ABC get updated?\n\nIf the aspect ratio of XYZ does not change, then nothing much needs to happen. When page ABC is accessed, it comes out of the cache. The cached page has a reference to XYZ, but that image has been invalidated, so the new version of XYZ is fetched.\n\nIf the aspect ratio of XYZ changed, then the layout of ABC may have been altered. ABC needs to be rebuilt. MW maintains a database of where each image is used, so MW can invalidate all of the pages that use XYZ. There is a cascade: the invalidated pages may be transcluded, so more pages may need to be invalidated and rebuilt.\n\nThe server cache can be a separate set of servers positioned between the users and the actual servers. WMF uses Varnish.\n\nhttps://wp-rocket.me/blog/varnish-http-cache-server/ Varnish Cache: How It Works and How to Use It on Your WordPress Site, July 29, 2021, Alice Orru\n\nhttps://www.oreilly.com/library/view/getting-started-with/9781491972212/ch01.html Getting Started with Varnish Cache, 15 September 2016, Thijs Feryn\n\nw:Varnish (software)\n\nhttps://queue.acm.org/detail.cfm?id=1814327 You're Doing It Wrong, Queue vol. 8, no. 6, 11 June 2010, Poul-Henning Kamp\n\nDomain names such as commons.wikimedia.org or upload.wikimedia.org must be resolved to an IP address. That resolution need not be to a single IP address. Check namespace resolution and redirect messages as ways to shuffle the load.\n\nA domain name resolves to one IP address. Many domain names may resolve to the same IP address.[2] But I think a name may have many A records. I'm looking for information about random selection.[3]\n\nProposal about alt= text being added to HTML.\n\nCommons:Village_pump/Proposals#Adding_alt_texts_through_structured_data circa July 2022\n\nConsider a typical Wikipedia page. It will use templates and images.\n\nIf one of the templates is edited, then the Wikipedia page probably needs to be rebuilt. The template may affect the page content or layout. MediaWiki keeps track of which pages use a template, so when a template is edited, then MediaWiki knows which pages need to be regenerated. There can also be as cascade because some templates use other templates.\n\nThat means that editing a template that is used on thousands of Wikipedia pages would trigger the regeneration of thousands of Wikipedia pages. Editing commonly used templates should not be done lightly. Commonly used templates may be protected. For example, {{Cite book}} on the English Wikipedia affects almost 1.5 million pages.\n\nEditing an image does not require rebuilding the pages that use the image. The page still references the same image name, but now the image scalers will supply the new image rather than the old one. The cached HTML of the Wikipedia page is still good.\n\nWell, not quite. When MediaWiki builds a page, it specifies the width and height attributes of the img element. That allows the browser to layout the page before it has downloaded all the images. That avoids continual layout adjustments as image sizes are learned. So rebuilding pages may be required. WikiMedia could just do it all the time, or it could update pages only if a significant change occurred. If the image aspect ratio changed, then img elements would need to be updated. If a multilingual SVG file added another language, then pages may need updating.\n\nMediaWiki inserts images with the img element. That element has security advantages.\n\nscripts are not run\n\nanimation is run\n\n...\n\nCommons:Media for cleanup\n\nCategory:Media for cleanup\n\nWMF processes SVG images in a similar manner as JPEG images. Instead of serving the actual SVG file on a wiki page, WMF builds a PNG file of the requested width and serves the PNG. There are a couple of advantages to serving a PNG.\n\nFirst, serving the PNG file can be much smaller than the SVG file. For example, the SVG map of Gibraltar is 290 kB. The request above produced a 48 kB PNG file:\n\naccept-ranges: bytes access-control-allow-origin: * access-control-expose-headers: Age, Date, Content-Length, Content-Range, X-Content-Duration, X-Cache age: 74796 content-disposition: inline;filename*=UTF-8''Gibraltar_map-en.svg.png content-length: 47987 content-type: image/png date: Tue, 21 Dec 2021 02:25:44 GMT etag: 8391f68640a7f0cedd3971fef7b8b3d3 last-modified: Mon, 01 Feb 2021 12:23:52 GMT nel: { \"report_to\": \"wm_nel\", \"max_age\": 86400, \"failure_fraction\": 0.05, \"success_fraction\": 0.0} permissions-policy: interest-cohort=() report-to: { \"group\": \"wm_nel\", \"max_age\": 86400, \"endpoints\": [{ \"url\": \"https://intake-logging.wikimedia.org/v1/events?stream=w3c.reportingapi.network_error&schema_uri=/w3c/reportingapi/network_error/1.0.0\" }] } server: ATS/8.0.8 server-timing: cache;desc=\"hit-front\", host;desc=\"cp1078\" strict-transport-security: max-age=106384710; includeSubDomains; preload timing-allow-origin: * x-cache: cp1078 hit, cp1078 hit/2 x-cache-status: hit-front x-timestamp: 1612182231.00644\n\nHowever, the SVG file is transferred with GZip compression; the transfer size is only 89 kB. The compression factor is 290/89 = 3.26. The transfer size is larger than the PNG, but it is less than twice the size of the PNG (89/48 = 1.85).\n\nSecond, when WMF started supporting the SVG file format, the browser support for SVG was nonexistent or uneven. Serving PNG files had strong support. Serving PNG renditions of SVG files also gives a uniform presentation. SVG images can vary depending upon the availability of particular fonts and the depth of SVG support.\n\nSVG client side rendering (Phabricator T5593)\n\nThe img element allows animations but should block scripts. The object element allows scripts.\n\nScripts can be malicious. WMF blocks uploading SVG files that contain scripts.\n\nThere is also a concern with animated files triggering seizures. That has been cited as a reason to not serve SVG directly. Detecting animated SVG is also made difficult because there are both SMIL and CSS animations. Automatically detecting update rate may be difficult. Even with a fast update rate, an animation may not trigger a seizure. See Commons:Deletion requests/File:Color Flash.gif.\n\nWhat happens to mouse clicks? Wrap an a element around a bitmap file. Wrap it around an SVG file.\n\nSVG files can be malicious. An SVG file could be a computational nightmare that taxes the computer. PNG files will render in finite time. The SVG renderer on WMF servers put a time limit on the rendering. If it does not complete within a few seconds, then the process is terminated. There are some SVG files on Commons that can hit that time limit.\n\nThere are some language translation differences when an SVG file is directly served; see below.\n\nApparently, librsvg assumes the namespace is SVG. Many SVG files on Commmons will show thumbnails, but when loaded into a browser will show the XML text rather than the desired image.\n\nDislike XML.\n\nSVG has namespaces, but HTML does not. HTML lossage creeps in.\n\nIf XML is so good, why is CSS not XML?\n\nSome notes for later.\n\nThe XML Spec 1.0 (Fifth edition). https://www.w3.org/TR/xml/\n\nThe XML prolog is optional.\n\nXML version\n\nencoding (ASCII / ISO issue) EBCDIC and UTF 16.\n\nstandalone\n\nFrom the XML specification § 2.9:\n\nThe standalone document declaration must have the value \"no\" if any external markup declarations contain declarations of:\n\nattributes with default values, if elements to which these attributes apply appear in the document without specifications of values for these attributes, or\n\nentities (other than amp, lt, gt, apos, quot), if references to those entities appear in the document, or\n\nattributes with tokenized types, where the attribute appears in the document with a value such that normalization will produce a different value from that which would be produced in the absence of the declaration, or\n\nelement types with element content, if white space occurs directly within any instance of those types.\n\nThe default attribute values raise issues with #REQUIRED, #IMPLIED, #FIXED and default. https://www.w3.org/TR/xml/#dt-default\n\nThe SVG 1.1 style element has the type attribute, and that attribute is #REQUIRED. See https://www.w3.org/Graphics/SVG/1.1/styling.html#StyleElement That means Phab:T68672 (\"SVG style element ignored if no type attribute is specified\") may have been invalid, and that Commons:Commons SVG Checker should require type=\"text/css\".\n\nThe SVG 1.1 DTD has\n\nFor SVG 2.0, the type attribute has an initial value of text/css. https://svgwg.org/svg2-draft/styling.html#StyleElement\n\nThere is also the style element content being a CDATA section. The SVG 1.1 conservative view was\n\nThe CDATA section was needed to avoid entity interpretation and <. I remember having trouble at some point, but I think that was resolved by using CSS character literals rather than XML character literals. It may also be that the modern style element is a CDATA section rather than PCDATA. Find the references.\n\nThat SVG snippet also shows the style element within a defs element. That used to be common practice, but it may have never been needed. The advantage of the defs element was its content would never be rendered. There is more to say about defs; many elements (such as linearGradient) do not need to be within a defs element.\n\nSVG is XML rather than HTML, so its elements use camel case (e.g., linearGradient).\n\nSVG inherits attributes from case-insensitive HTML and CSS, so SVG uses some hyphenated attributes (e.g., font-family).\n\nOther attributes use camel case (e.g., markerWidth and refX).\n\nThen we get the clipPath element referenced by the clip-path attribute.\n\nSVG is about representing vector images, but it often steps into areas that do not affect the appearance of the image or where it has no authority.\n\nReinventing namespaces.\n\nEffectively merging xml:lang and lang attributes. If both exist, they must be equal. Why not just keep one? It also complicates the CSS lang() psuedo-selector. The only bad thing about xml:lang is its impact on RDF metadata, but that can be fixed with xml:lang=\"\". (Check XML specification.)\n\nDeprecating xml:space for CSS. XSLT knows how to handle xml:space but it does not know how to handle CSS. Compare the options. Also raise the issue about text-anchor and directions.\n\nSignificantly, xml:space is in the parent XML specification. SVG is a child of XML and not its master.\n\nWhy merge xlink:href and href? The XLink specification exists and was incorporated. Look at other parts of XLink. Yes, there are better ways to handle titles. List the XLink attributes. A more pointed complaint is that having adopted xlink:href in SVG 1.0, switching to href in SVG 2.0 is not downward compatible. Why make a breaking change?\n\nThe translate attribute is inherited from ITS and its its:translate attribute. The attribute tells language translators to not translate this text. It has no impact on the display of SVG. SVG is also missing features such as its:term. That tells language translators that the phrase is a technical term that should have a consistent translation. SVG should have just pointed to ITS and suggested its use. Yes, ITS should not be using multiple namespaces.\n\nThe data-* attributes reinvent what should be the data namespace. Inherited from HTML. Also inherited is the crazy case-insensitive mapping that is not needed in case-sensitive XML. Show some examples. These attributes have no impact on the display of SVG. They are there to simplify some handling in the DOM, but that should be a separable extension.\n\nThe aria-* attributes reinvent what should be the aria namespace. The SVG Working Group does not control the meaning of these screen reading attributes, so it should have just pointed to the ARIA specification. That specification should have used namespace syntax.\n\nSignificant advantage.\n\nLooking for type hierarchy, but not seeing what I want.\n\nDescriptive elements desc and title.\n\nMetadata element metadata.\n\nContainer elements such as g. SVG 2.0 says, \"An element which can have graphics elements and other container elements as child elements. Specifically: ‘a’, ‘clipPath’, ‘defs’, ‘g’, ‘marker’, ‘mask’, ‘pattern’, ‘svg’, ‘switch’ and ‘symbol’.\"\n\nGraphics elements such as line and text. Inherits from SVGGraphicsElement, so it has some methods, but not a type? Interface SVGGraphicsElement.\n\nI do not believe the SVG DOM makes all the style information available. A couple years ago I went looking for aural stylesheet information, and it was not there. Consequently, I do not believe that style properties such as -inkscape-font-specification are broken out. Does that mean that they disappear completely when the DOM is written out?\n\nIt may be that none of such style properties make any difference, so removing them could be seen as beneficial.\n\nIs there a list of Inkscape attributes that are always safe to remove? For example, Inkscape could always regenerate the node type list. If Inkscape can regenerate the information, then why keep it?\n\nsodipodi:nodetypes attribute can be regenerated\n\nsodipodi:role=\"line\"\n\n-inkscape-font-specification CSS can be removed\n\nline-height CSS (has multiple defaults)\n\nfont-style if default\n\nfont-weight if default\n\nfont-stretch if default\n\nfont-variant if default (short cut?)\n\nfont-variant-ligatures if default\n\nfont-variant-caps if default\n\nfont-variant-numeric if default\n\nfont-variant-east-asian if default\n\nletter-spacing property if default\n\nword-spacing property if default\n\nSome Inkscape and sodipodi attributes should be preserved. Some g elements are identified as layers. Information about drawing grids does not take up much space, so removing that information does not have much benefit.\n\ng element (perhaps toplevel) with inkscape:groupmode=\"layer\" and inkscape:label=\"name\" and id=\"identifier\"\n\nthe sodipodi:namedview element will have inkscape:current-layer=\"identifier\"\n\nThe significant benefit is removing verbose style information.\n\nAdditional information to remove would be needless graphics state. For example, if stroke=\"none\", then we probably do not care about stroke-width, stroke-dasharray, stroke-dashoffset, line joins, and end caps. Some font information may be a little different. If text has been converted to curves, keeping that information around would help in reconstructing the text.\n\nOne of the features of XML was supposed to be validation. Validation would enforce a well-formed requirement on all XML documents.\n\nPart of that was each XML document would have a DTD that could be used to check the syntactical correctness of the document. If a document had a DTD, then the document should conform to that DTD.\n\nMany years ago, I used some Java code to read an XML document. The program took a long time to start up. I traced that to the validator: when Java read the document, it also validated the document against the DTD. That was certainly an interesting thing to do, but it was a heavy performance hit. I had to set three switches to turn off validation. Pretty much everybody turned off validation.\n\nPretty much everyone also used extensions, so documents would not validate anyway.\n\nWhen XML introduced namespaces, it also showed the limitations of DTDs. DTDs are not namespace aware.\n\nThat gave rise to schema validators, but there were several. RelaxNG.\n\nTurning off validation is coming back to bite us now. Invalid documents would sometimes work in one application, but those documents might fail in a different application or when the original application is updated.\n\nW3C validator\n\noriginal DTD validator.\n\nThis now gives us some trouble. If the document does not have a DTD, then it will not validate it. User must select SVG 1.1 and revalidate.\n\nnu validator. Schema validator.\n\nDoes this handle files that have a DTD?\n\nCommons:Commons SVG Checker\n\nJarry1250's SVG Check\n\nRDF validator\n\nhttps://www.w3.org/RDF/Validator/\n\nvalidate\n\nConstructed with\n\n{{urlencode:{{filepath:First Ionization Energy.svg}}}}\n\n{{filepath:}} → (no argument would work in file namespace)\n\n{{filepath:First Ionization Energy.svg}} → https://upload.wikimedia.org/wikipedia/commons/1/1d/First_Ionization_Energy.svg\n\n{{filepath:File:First Ionization Energy.svg}} → https://upload.wikimedia.org/wikipedia/commons/1/1d/First_Ionization_Energy.svg\n\n{{urlencode:...}} → https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F1%2F1d%2FFirst_Ionization_Energy.svg\n\nThe W3C validator has changed. See Help talk:SVG#429 error in W3C validator. In particular, the Nu validator is no longer the default; DOCTYPE declarations are expected:\n\nApparently, the W3C checker now requires a DOCTYPE processing instruction. See https://www.w3.org/wiki/Validating_your_HTML?TB_iframe=true\n\nIn the past, the W3C checker would use the Nu validator when there was no DOCTYPE.\n\nIt looks like we now must use the Nu validator explicitly in the templates or files without a DOCTYPE will not validate:\n\nhttps://validator.nu/?doc=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F0%2F0a%2FExmouth_Gulf%252C_LT.svg\n\nhttps://validator.nu/?doc=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F1%2F1d%2FFirst_Ionization_Energy.svg\n\nhttps://validator.nu/?doc=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F1%2F11%2FConic_Sections.svg\n\nThat requires updating some templates.\n\nGlrx (talk) 19:24, 13 March 2023 (UTC)\n\n{{Valid SVG}} and {{Invalid SVG}}. Editing requires rights I do not have.\n\n|validateurl=//validator.w3.org/check<!-- -->{{#ifexist:File:{{PAGENAME}}|?uri=<!-- -->{{#if:{{{url|}}}|{{{url|}}}|{{urlencode:{{canonicalurl:Special:Filepath/{{PAGENAME}}}}}}}}&doctype=Inline{{#ifeq:{{{opt}}}|>||{{{opt|&ss=1}}}}}}}\n\nGlrx (talk) 19:47, 13 March 2023 (UTC)\n\nWhy is Special:Filepath being used? Doesn't that trigger a redirect?\n\n{{canonicalurl:Special:Filepath/First Ionization Energy.svg}} → https://commons.wikimedia.org/wiki/Special:Filepath/First_Ionization_Energy.svg\n\n{{filepath:First Ionization Energy.svg}} → https://upload.wikimedia.org/wikipedia/commons/1/1d/First_Ionization_Energy.svg\n\nTry some files:\n\nFile:First Ionization Energy.svg has an XML processing instruction and a DTD\n\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n\nit does not have any extensions (e.g., RDF)\n\nold: https://validator.w3.org/check?uri=https%3A%2F%2Fcommons.wikimedia.org%2Fwiki%2FSpecial%3AFilepath%2FFirst_Ionization_Energy.svg&doctype=Inline&ss=1#source\n\nnu: https://validator.nu/?doc=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F1%2F1d%2FFirst_Ionization_Energy.svg\n\nFile:Conic Sections.svg does not have an XML processing instruction or a DTD. It does have RDF\n\nold: https://validator.w3.org/check?uri=https%3A%2F%2Fcommons.wikimedia.org%2Fwiki%2FSpecial%3AFilepath%2FConic_Sections.svg&doctype=Inline&ss=1#source\n\nstates document cannot be checked. Select Doctype SVG 1.1 and revalidate.\n\n34 errors, 2 warnings\n\nno character encoding declared because no XML processing instruction\n\nno type attribute on style element.\n\nremaining errors were extensions\n\nold prime: https://validator.w3.org/check?uri=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F1%2F11%2FConic_Sections.svg&doctype=Inline&ss=1#source\n\nsame behavior as old. Notice modified URL that includes doctype=SVG+1.1\n\nhttps://validator.w3.org/check?uri=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F1%2F11%2FConic_Sections.svg&charset=%28detect+automatically%29&doctype=SVG+1.1&ss=1&group=0&user-agent=W3C_Validator%2F1.3+\n\ntry explict SVG 1.1: https://validator.w3.org/check?uri=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F1%2F11%2FConic_Sections.svg&doctype=SVG+1.1&ss=1#source\n\ntry no doctype (fails): https://validator.w3.org/check?uri=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F1%2F11%2FConic_Sections.svg&ss=1#source\n\nnu: https://validator.nu/?doc=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F1%2F11%2FConic_Sections.svg\n\nemits error for rdf:RDF child in metadata, but then says RDF subtrees are not checked (warning)\n\nFile:2022 Russian invasion of Ukraine.svg has an XML processing instruction but no DTD. It has RTF, sodipodi, and inkscape.\n\nold: https://validator.w3.org/check?uri=https%3A%2F%2Fcommons.wikimedia.org%2Fwiki%2FSpecial%3AFilepath%2F2022_Russian_invasion_of_Ukraine.svg&doctype=Inline&ss=1#source\n\ncannot be checked. select Doctype SVG 1.1 and revalidate.\n\n53 errors, 1 warning. Typical extensions + data-* attributes.\n\nnu: https://validator.nu/?doc=https%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2F4%2F4f%2F2022_Russian_invasion_of_Ukraine.svg\n\nemits 4 errors for data-* attributes. Understandable\n\nWhy doesn't the nu Validator also process sodipodi, inkscape, and RDF? Are there schemas for those extensions?\n\nMW does not allow scripts.\n\nPhab:T334953\n\nSmall size is a significant goal.\n\nSVG is not arbitrarily scalable. Scalable is more about eliminating jaggies.\n\nFixed width lines. (CSS can adjust.)\n\nSVG is not a good file format for bitmap images such as bar codes and QR codes. Those objects are not arbitrarily scalable; they must fit on a pixel grid. One could use barcode fonts within an SVG file; fonts will align to an underlying pixel grid.\n\nNot for photographs (but can be used to label photographs).\n\nLimited colors (can use color gradients). Color blocking suggestions rather than enormous detail.\n\nFilters can produce complex objects such as chalk textures and clouds.\n\nSVG files can be small, but they can also be surprisingly large.\n\nSome files are inordinately large. Extraneous clipping paths, gradients, and copied rather than instanced symbols.\n\nsimple figure is 348 kB\n\nAudi SVG is 9.96 MB. SVG is not accurate (x-ray vision). Compositing opportunity.\n\nAudi JPEG is only 22 kB\n\nWelding SVG is 206 kB. Path text. Fills. Path text has been removed; file is now 100 kB.\n\n318 kB. Some path text has been removed. No symbols. Lots of gradients.\n\nSee also SVG House of Estridsen.\n\nConsider some images from Category:NAVAID pictograms:[4]\n\nTACAN navigation symbol is a reasonable 4 kB.\n\nNDB navigation symbol is a huge 224 kB.\n\nNDB-DME navigation symbol is nearly as complex but uses only 11 kB.\n\nTest the display of zero-length dashes.\n\nThe first image is a central dot and 12 line segments, and it has a simple representation. The second image is problematic. it is a central dot, a central solid ring, and 10 dotted radial rings. It has a lot of dots, but why does it need so many bytes? Each dot is not a circle element, but rather a path that looks like a circle. The third image is nearly as complex (only 7 dotted rings), but it is a more efficient representation. Instead of round dots, it uses stroke-dasharray for the dots. Notice that the dash array has some issues along the north axis.\n\nWe can get dots easily. Use a circle element (stroked but no fill), set the stroke-dasharray=\"0 xxx\", and set stroke-linecap=\"round\". The value xxx is chosen to be an integer fraction of the circumference. A close look at the NDB-DME symbol shows dashes instead of dots.\n\nThere is a problem with librsvg: the stroke-dasharray attribute must use commas rather than spaces.\n\nHere is a simple file that takes 307 kB:\n\n307 kB on 2022-09-20.\n\nIt has linear and radial gradients, and many groups are scaled. It should use a pattern or feTile.\n\nDone Reduced file size to 9 kB. The interesting challenge here is the pattern fill. The shield outline is simple (and its path can be used for clipping). The shield can have a solid green fill that is overlaid with left and right red stripes. The white cross can be a path with a white fill (the path needs to be stroked within the shield, so overlaying two rectangles does not work). The pattern is difficult because it does not have a simple rectangular pitch. After filling the white cross, it is drawn two more times: first with a rectangular pattern of half the figures, and second with a similar pattern offset by half the pitch. The whole shield is then covered by a radial gradient. Finally, the outline of the shield is stroked at 3 pixels.\n\nThree are many similar designs at w:List of Breton flags.\n\nThis file should have a trivial size:\n\n164 kB on 2022-09-22.\n\nA file that has already been compressed using group elements.\n\n369 kB → 1 kB using pattern\n\nFile:Award-star-gold-3d.svg could use several SVG filters. Simple filter would be the shadow. Lighting would be more complicated.\n\nIllustrating metal badges such as File:Police Badge,P.R.China.svg at 274 kB.\n\nChinese Police & Army Badges\n\nThe magazine files.\n\nChemistry diagrams such as File:Calvin-cycle4.svg.\n\nFile:Fault types.svg (154 kB).\n\nFile:Peptidformationball.svg (318 kB) No use, Inkscape bloat, Inkscape gradient replication.\n\nFile:Scheme sodium-potassium pump-en.svg went from 187 kB to 26 kB.\n\nFile:CNO Cycle.svg went from 141 kB to 10 kB and became multilingual.\n\nFile:FinchArms.svg should reference rather than copy repeated subimage.\n\nI am in favor of optimized SVG files. Some editors include a lot of pointless information. For example, an unstroked path may have attributes specifying the stroke color and the stroke dash properties. A rect may have a font-family attribute.\n\nI'm also OK with bona fide structural groups sharing style information. If a group has several common elements, then it makes sense that they be styled similarly.\n\nThere are command-line SVG optimizers, such as\n\nsvgo (=SVGOmg)\n\nscour\n\nsvgcleaner.\n\nIn general, I'm skeptical of using such optimizers. The notion of optimization is often based on deleting as many bytes as possible. Consequently, path data attributes become difficult to read, and metadata may get tossed completely. While specifying coordinates to the micron is often pointless, truncating coordinates to a fixed number of digits is a pretty big hammer. I do not know for sure, but I believe some tools may group neighboring elements to share formatting information; that is a poor way of imposing styles.\n\nAlthough some files have pointless hierarchy, I've been frustrated with optimizers deleting g elements that do not have any attributes. The result is the ungrouping/flattening of the SVG file. The groups may hold semantic value.\n\nSee also\n\nHelp:SVG_guidelines#SVG_sourcecode_edits_without_visual_change\n\nOptimizers, if they do their job, do not change the appearance of the image.\n\nIt is reasonable to include title and desc elements. The title element produces a tooltip display in many browsers. The desc element is less useful.\n\nSVG 2.0 will allow language versions (using the lang or xml:lang attribute — not the systemLanguage attribute).[5] The acceptance of the language versions is not clear, and it has an at-risk warning in the SVG 2.0 specification. (Feature was removed in later version of SVG 2.0.)\n\nThe title and desc elements are not display elements. For that reason, they cannot be selected within a switch element. In that context, the elements would be giving a title and a description to the parent switch element.\n\nThere should be support for the Dublin Core dc:title and dc:description elements with xml:lang attributes.\n\nThis section needs reorganization and clarity about types. It is about machine readable metadata.\n\nMachine readable often turns to RDF. RDF is sophisticated, so the use is often a limited subset.\n\nThere are vocabularies such as Dublin Core. There are also schemas that describe how the vocabulary is used.\n\nThen there is how the metadata is actually used.\n\nMetadata and copyright are intertwined. Metadata should include information about the origin of an image, and several copyright licenses require that some information be provided.\n\nThe Creative Commons licenses require some specific information. For example, there should be a link to the CC license. Derivative works need to say what was changed. In many cases, these requirements may not be met.\n\nI believe all SVG files should include metadata. It is not hard to add, and it can be useful. Including license data in the image metadata may fulfill licensing requirements or at least provide a colorable defense. Failure to follow all licensing requirements may lead to trouble.[6][7][8][9]\n\nsee Commons:Copyleft trolling.\n\nMoral rights. Even if I do not need to credit an author, there may be a moral obligation to give them credit. Sometimes that moral right can become a legal right. Some contributors allow free use of some or all of their work. LadyofHats is a notable example. That means I can use the work for any purpose, and I do not need to give anyone credit. That does not seem reasonable or even right. I could take Herman Melville's Moby Dick and publish it under my own name. It seems far better to say it is Melville's work.\n\nProviding metadata also makes it easier for someone else to check the licensing rights. Commons encourages everybody (not just its wikipedia projects) to use the available art. Say Alice uses some CC0 SVG images from Commons on her website. The images are CC0, so Alice does not mention any licensing details. Bob sees Alice's website and likes the images, but how can Bob determine the licensing of the images?\n\nThe license check would be simple if the SVG file included the licensing information. Just given an image, it may be hard to find out who made it. If the image has metadata, then that information may be easy to find. The information may not be accurate (somebody may be license washing), but it is a starting point and could serve as a good defense.\n\nhttps://www.dublincore.org/specifications/dublin-core/dcq-rdf-xml/\n\nRecent (March/April 2024) discussions.\n\nCommons:Village pump/Proposals#Prohibit copyleft trolling\n\nCommons:Village pump#Guidance re possible copyleft trolling (March 28)\n\nUse metadata to automatically satisfy the license requirement. When an application inserts an image, it notices the CC license requirements and fulfills it.\n\nMuch like WMF projects use a link to the file page, a web page could include a similar link or add hover information. There could also be information that is printed when the file is printed. For example, use a class that becomes visible on print media. Or the information could be put in a footnote that appears at the bottom of the page or the end of the document.\n\nThe CC licenses also require a link to the license. Must one use the full URL or is it adequate to use \"CC-BY-SA 4.0\" because a web search will turn up that license? It does not make a difference on a web page, but a URL is rather long.\n\nLast night I watched another video that used content from Commons. When the credits rolled at the end, the only attribution was the generic \"Wikimedia Commons.\" Commons needs to do a better job of teaching reusers how to make attributions.\n\nThe video format also kills any metadata. Perhaps video editors need to collect that information.\n\nWhat is needed to meet the Creative Commons licenses?\n\nA link to the license is required, but check the text. URI is not necessarily a URL. Drauglis v Kappa Map Group found that \"CC-BY-SA-2.0\" was sufficient to qualify as a URN, so a URL was not needed. Also \"derivative work\" versus \"collective work\". Just using a photo without modifying it is a collective work.\n\nhttps://wiki.creativecommons.org/wiki/Drauglis_v._Kappa_Map_Group,_LLC\n\nhttps://law.justia.com/cases/federal/district-courts/district-of-columbia/dcdce/1:2014cv01043/166825/39/\n\nen:Creative_Commons_license (has advice about attribution)\n\nIs a copyright for each included work required? Or just copyright the entire work and give credit for included works.\n\nExample of long chain attribution....\n\nMetadata is not about just copyright information. Metadata can include other relevant information.\n\nFor photographs, there is latitude, longitude, altitude. More detail would be the aiming roll, pitch, and yaw. Even more would be the lens distortion coefficients.\n\nFor maps, the metadata may include information about the map projection. With that information, one could take the (x, y) location of a point on the map and convert it to the corresponding latitude and longitude.\n\nFor chemicals, the metadata may include structured descriptions of the chemical.\n\nFor illustrations, there might be metadata that says this file uses web colors or suitable for colorblind viewers. There might be a simple check for SVG files: use a finite number of colors, no gradients, no color-based filters, and the colors pass a color-difference test. Assessing a bitmap is tougher because colors mix at the boundaries and with anti-aliasing. A color histogram would be enough as long as there are large areas of color. Thin colored lines are a problem because their border can have as much area as their interior.\n\nI'm leery of too much metadata. SVG should be more of an output format rather than a container for detailed information. Providing a small amount of information is reasonable, but including lots of information may be inappropriate. The intended use of SVG is to display an image.\n\nThe issues with lang and xml:lang. Watch out for accidental captures.\n\nCreative Commons licenses are used extensively on Commons and WMF servers.\n\nState the common legal requirements of CC licenses.\n\nCC- requires a link to the CC license. That means a it is easy to find the license terms. Check if a CC0 license also has this requirement.\n\nCC-BY must provide reasonable attribution. May distribute and alter. May impose more restrictive license.\n\nCC-SA (implies a derivative work) must not use a more restrictive license and must describe the changes.\n\nCC-ND allows use but not modification.\n\nCC-NC does not allow commercial use. (What is the constraint on commercial? May a nonprofit use the work in its fundraising? May the Girl Scouts use it to sell their cookies? In the US, agency settles some of these questions.)\n\nState the failings.\n\nThe file description pages are often inadequate. Sometimes there are gross errors such as an improper license. Derivative works often omit the attribution information in the license. The description of a derivative work often fails to describe the changes made to the original work.\n\nMost file uses on WMF servers satisfy the requirements because MW links the file to its description page:\n\n[[File:Yellow banana.svg|A picture of a yellow banana.]]\n\nPresumably, the file description page has a link to the CC license and meets the attribution and modification requirements.\n\nHowever, the file use may alter that link (MW:Help:Images).\n\n[[File:Yellow banana.svg|link=https://www.nowhere.com/bitbucket|A picture of a yellow banana.]]\n\nor\n\n[[File:Yellow banana.svg|link=|A picture of a yellow banana.]]\n\nIf the override link does not provide the needed licensing information, then the license is violated. There can be disastrous ramifications. MW should not allow such links for CC-licensed material.\n\nReasonable SVG metadata should use both Dublin Core and Creative Commons vocabularies. The metadata can be expressed using RDF.\n\nA general reference:\n\nhttps://guides.library.ucsc.edu/c.php?g=618773&p=4306386\n\nIt suggests some vocabularies. Looking for \"Terman, Frederick\" gives the MARC value\n\nhttps://authorities.loc.gov/cgi-bin/Pwebrecon.cgi?AuthRecID=6104582&v1=1&HC=1&SEQ=20220810164445&PID=REbDGJ6P_nYjOw83gOGJlAHS490\n\npermalink: https://lccn.loc.gov/n2003015013\n\nDublin Core provides a vocabulary for references. There are two Dublin Core namespaces:\n\ndc: http://purl.org/dc/elements/1.1/ Original 15 element namespace defined in 2000.\n\ndcterms: http://purl.org/dc/terms/ Extended namespace defined in 2001. Everything in elements was mirrored in 2008.\n\nSometimes, the dcterms namespace uses the dc prefix. The goal is to use the dcterms vocabulary rather than the 15-element dc namespace. It is possible to translate dc to dcterms (e.g., using XSLT), but that translation may confuse existing software.\n\nDublin Core elements/1.1/ is a short (15 term), general, vocabulary for works:\n\ndc:title (there is also an SVG title element)\n\ndc:date\n\ndc:creator\n\ndc:contributor (I would use for translators)\n\ndc:source\n\ndc:format (less important) for SVG, use image/svg+xml\n\ndc:type (less important) often rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"\n\ndc:publisher (If empty, I would have this point to Wikimedia Commons)\n\ndc:subject DC states, \"Typically, the subject will be represented using keywords, key phrases, or classification codes. Recommended best practice is to use a controlled vocabulary.\" I do not see a widely adopted practice here. Most people would probably use a text string of comma-separated keyword phrases. That would match the HTML meta tag: e.g., <meta name=\"keywords\" content=\"HTML, CSS, Javascript\" >. However, the obvious RDF approach would use an rdf:Bag that holds each keyword phrase: <cc:license><rdf:Bag><rdf:li>HTML</rdf:li><rdf:li>CSS</rdf:li><rdf:li>Javascript</rdf:li></rdf:Bag></cc:license>. The dcterms: mirror is not a list of keywords.\n\ndc:coverage Time or location. Not widely used? E.g., Port Royal earthquake.\n\ndc:description\n\ndc:identifier\n\ndc:language\n\ndc:relation\n\ndc:rights The clearer practice here would be to use cc:license\n\nThe Dublin Core vocabulary uses general rather than specific terms. For example, the dc:creator predicate covers several possibilities such as author, composer, lyricist, illustrator, and photographer. There are vocabularies that make finer distinctions,[10] but those distinctions may not be necessary for many works, and most applications probably do not support the terms.\n\nUsage examples:\n\nhttps://www.dublincore.org/specifications/dublin-core/usageguide/2001-04-12/generic/\n\nhttps://www.dublincore.org/specifications/dublin-core/usageguide/2003-08-26/elements/\n\nlist creators separately...\n\nInteresting metadata in\n\nFile:DCMI-logo.svg\n\nSpecifies data types.\n\nHere is the metadata secion:\n\nMany of the Dublin Core fields are text. They will use rdf:datatype attributes. Some of those use the dcterms vocabulary, but sometimes they use some another set of types. Consider dc:date: it uses http://www.w3.org/2001/XMLSchemadate. Some other fields use rdf:resource rather than text. Is there a rewrite rule for rdf:resource? A URI string with a URI datatype?\n\nDublin Core schemas:\n\nhttps://www.dublincore.org/schemas/xmls/\n\nLooking at a schema for elements\n\nhttps://www.dublincore.org/schemas/xmls/simpledc20021212.xsd\n\nLooks like an arbitrary sequence of the 15 elements. Looks like the element content is text only (xml:lang attributes are allowed).\n\nSignificantly, this declaration does not show using rdf:resource attribute.\n\nI expected the dcterms schema to be more restrictive.\n\nhttps://www.dublincore.org/schemas/xmls/qdc/2008/02/11/dcterms.xsd\n\nHowever, the schema states\n\nEncoding schemes are defined as complexTypes which are restrictions of the dc:SimpleLiteral complexType. These complexTypes restrict values to an appropriates syntax or format using data typing, regular expressions, or enumerated lists. In order to specify one of these encodings an xsi:type attribute must be used in the instance document. Also, note that one shortcoming of this approach is that any type can be applied to any of the elements or refinements. There is no convenient way to restrict types to specific elements using this approach.\n\nHere's a dcterms to dc and what looks like a W3C Date-Time Format.\n\nThe details are both troubling and confusing. Dublin Core looks like simple text (simpleType). What impact does that have? For multiple authors, one either uses several creator elements or puts the list in simple text. The dcterms set does not provide access to rdf:Seq.\n\nDoes common usage of Dublin Core violate the schema?\n\nThe schemas, without more, do not do a sensible validation of, for example, date syntax.\n\nA reification from dcterms to elements is clear.\n\nCreative Commons adds some terms for specifying the license and attribution:\n\ncc:license (said to be the same as xhtml:license; Commons does not allow uploading SVG that uses the xhtml namespace)\n\ncc:attributionURL (may be needed for CC-BY; I would have this point to the File: page on Commons)\n\ncc:attributionName (may be needed for CC-BY)\n\nFor Commons files, making the cc:attributionURL point to the file page on Commons may satisfy the attribution requirements of CC-BY licenses.\n\nResource Description Framework (RDF) statements have a subject, a predicate, and an object.\n\nAlthough vocabularies are specified, how those vocabularies should be used is not nailed down. If there are two creators, how should that be specified? Should there be an RDF dc:creator statement for each creator? Should there be one dc:creator statement whose object is a set of the creators? The situation for licenses is more obvious. If the user gets to choose which of several licenses, then there should be one cc:license, and the object should be an rdf:Alt that identifies the alternative licenses. However, most software probably expects exactly one license rather than a list of alternatives. The simple approach is to offer only one license.\n\nThe lack of consistency implies problems. If a graphics program does not understand the input RDF, then it may get corrupted on output. The appropriate goal is to have metadata that most graphics editors understand. That way, the metadata is preserved during import and export.\n\nConsistency and accuracy are also missing in many Commons licenses.\n\nSay Alice creates a CC-BY-SA image and uploads it to Commons. Bob then reuses Alice's image. Bob is required to use a CC-BY-SA license, and Bob's image must carry attribution to Alice. Many mistakes happen on Commons. Bob's image may not mention Alice's licensed image. Bob may claim his work is CC0 (license washing). Bob may use CC-BY-SA, but he may not point out that Alice must be acknowledged, too. Given license information on Commons may be missing or incomplete, it is no surprise that license metadata may be haphazard, too.\n\nA CC-BY-SA license permits modification (i.e., derivative works). The licenses require the modifier to describe the changes, but Creative Commons does not have a vocabulary term for describing the modifications.\n\nCreative Commons does a good job for the original work. The license is declared, and there are constructs for attribution. If a work is used without modification, then the metadata has the information for proper attribution.\n\nThe metadata is insufficient when the original work is modified. The license requires that the changes be identified, but there are no XML elements for describing the changes.\n\nList the licenses and the issues.\n\n0\n\n-BY\n\n-SA\n\n-ND\n\n-NC\n\nAnother issue is how graphics editors can merge metadata.\n\nAdobe XMP uses the elements namespace:\n\n\"The [Dublin Core] namespace URI shall be http://purl.org/dc/elements/1.1/.\"\n\nSigh.\n\nAdobe Systems includes metadata, and it has settled on a specific syntax with its eXtensible Metadata Platform (XMP). Adobe solves the multiple creator problem by always using a set of creators (even if there is only one creator). Adobe also restricts the use of complex RDF syntax.\n\nIn XMP, the dc:creator should be an ordered list of ProperName.[11] A ProperName is a simple text value.\n\n<rdf:Descriptionrdf:about=\"\"> <dc:creator> <rdf:Seq> <rdf:li>John Smith</rdf:li> <rdf:li>Richard Roe</rdf:li> </rdf:Seq> </dc:creator> </rdf:Description>\n\nShould discuss the equivalent form.\n\n<cc:Workrdf:about=\"\"> <dc:creator>Alice</dc:creator> </cc:Work>\n\n<rdf:Descriptionrdf:about=\"\"> <rdf:typerdf:resource=\"http://creativecommons.org/ns#Work\"/> <dc:creator>Alice</dc:creator> </rdf:Description>\n\nWhich namespace does Inkscape use? elements or dcterms? If it uses elements, then it should upgrade. Or at least accept one or the other. I'm looking at a file I believe to be Inkscape, and it has xmlns:dc=\"http://purl.org/dc/elements/1.1/\".\n\nInkscape has a metadata form to fill in, but Inkscape uses an agent description. (Pull a copy of Inkscape metadata).\n\n<dc:creator> <cc:Agent> <dc:title>Andy Fitzsimon</dc:title> </cc:Agent> </dc:creator>\n\nPlease note that cc:Agent is not part of the http://creativecommons.org/ns namespace.\n\nDublin Core has a dc:Agent, so it is possible that Inkscape meant dc:Agent rather than cc:Agent.\n\nI'm not a happy camper...\n\nhttps://gitlab.com/inkscape/inkscape/-/blob/master/src/rdf.cpp\n\nThe page does not include the attributionName or attributionURL elements. It has a set of licenses. It also points to some SIL licenses.\n\nThere is a significant but unresolved issue here.[12] An original goal is to identify the license and the creator. Not a lot of information is needed to acknowledge those rights; a simple text reference to a name might be good enough. However, more details can be given about the rights holder, so should the representation give more details? At what point would there be too much information. More information could be added, but very few systems will be able to process that information. The simple approach is to keep the information simple enough to satisfy license requirements and avoid adding extraneous details.\n\nA URL is a better method of identifying a person than some text. Many people have the name John Smith, but the URL https://www.imdb.com/name/nm0808774/ identifies a particular John Smith. Unfortunately, many applications probably expect a text string and cannot handle a URL. If an application expects this input\n\n<dc:creator>John Smith</dc:creator>\n\nthen how will it handle this input (i.e., a URL that identifies a particular John Smith)?\n\n<dc:creatorrdf:resource=\"https://www.imdb.com/name/nm0808774/\"/>\n\nTry this out in Inkscape.... Try this out in Adobe Illustrator....\n\nCreative Commons wants a cc:License element that summarizes the license, but I do not like that practice for well-known licenses. What happens if the summary is inaccurate? Say the license URL is CC-BY-SA 4.0 but the license summary prohibits commercial use? Does the summary take precedence over the URL?\n\nIn theory, it should be easy to obtain the RDF description of a well-known license. For example, the license HTML at\n\nhttps://creativecommons.org/licenses/by-sa/4.0/\n\nhas a link in the HTML\n\n<link rel=\"alternate\" type=\"application/rdf+xml\" href=\"rdf\" />\n\nwhich refers to the license RDF at\n\nhttps://creativecommons.org/licenses/by-sa/4.0/rdf\n\nConsequently, an RDF description of a well-known license is available.\n\nIt is possible to check whether the license summary is consistent with the published URL.\n\nCreators also misuse CC-BY licenses on Commons by stating additional license terms. For example, the creator may state that the attribution must appear next to where the image is used. Creative Commons CC-BY licenses require attribution, but the license lets the licensee use any reasonable method of attribution. Here's the text about attribution from CC-BY-SA 4.0:\n\nAttribution — You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.\n\nIf a creator states the license is CC-BY-SA 4.0, then the creator should not be able to state additional requirements. Additional requirements contradict the terms of CC-BY-SA 4.0.\n\nIf there is only one author, then license information is simple. When a work builds on others, then the license is complicated.\n\nConsider File:Angriffe Antibiotika.svg. It is an improved copy of FEERERO's CC-SA 3.0 File:Angriffe Antibiotika.png. In addition, it borrows from\n\nFile:Prokaryote cell.svg (CC-BY-SA 4.0 by Ali Zifan).\n\nFile:Difference DNA RNA-DE.svg (CC-BY-SA 3.0 by Sponk).\n\nFile:Main protein structure levels en.svg (PD-USER by LadyofHats).\n\nFile:Green-Up-Arrow.svg (PD-ineligible by Palffy).\n\nConsequently, the metadata should contain a lot of information.\n\nA trivial solution has the metadata element just point to the Commons File: page.\n\nA few years ago, I did some tests on RDF XML validation.\n\nhttps://www.w3.org/RDF/Validator/\n\nRDF validate old version of File:First Ionization Energy.svg.\n\nA sophisticated metadata checker could...\n\nlook for appropriate namespaces\n\ncheck value consistency (ISO dates, finite set ranges)\n\ncalculate a list of ranges\n\nvalidate XML schemas (valid RDF, valid CC, ...)\n\nlearn frequency of metadata (lots of image/xml+svg but little cc:creator)\n\npossibility of rewriting metadata\n\npossibility of adding metadata\n\nMy notes on RDF. GRIDDL.\n\nA more general topic, SVG validation, is Help:SVG. There were more involved discussions about SVG validation. Validation is often too strict (complaining about extensions such as Inkscape or new SVG features).\n\nCommons:Overwriting existing files.\n\nRemoving metadata from an SVG file (or any other file) may be inappropriate. Removing metadata may trigger legal issues but leaving it in has minimal cost.\n\nConsider a signed painting. Should someone come along and paint over the signature?\n\nRemoving metadata is similar to removing a watermark. See Legal issues with the removal of watermarks and Removal of watermarks from Commons images. WMF legal staff opines that removing a watermark could violate the DMCA and even violate the terms of some Creative Commons licenses.\n\nCompare to removing a watermark that was not part of the original image. Sometimes a person who hosts an image may add a watermark.\n\nSometimes metadata is inadvertently removed. When librsvg produces a PNG, I doubt that it copies metadata from the SVG to the PNG.\n\nPerhaps a scan of files should look for comments that imply an optimizer was used. Optimizers often strip metadata. See Massive edits. For example, scanning history of File:BSicon hKRZWa red.svg would reveal the upload comment \"Slimmed down with svgomg\".\n\nImages on Commons should have free licenses, but many uploads violate the creator's license. Generally, Commons relies on its users to upload only free material.\n\nSome of that checking can be done automatically. Consider an image that is published on some website, and the website states a non-free license for that image. Alice likes the image, so she uploads it to Commons claiming it is her own work. Commons does not know.\n\nNow consider that the image has metadata that says the creator is Bob and the license is CC-BY-NC. Commons could read the metadata, realize it does not know that Alice is Bob, and recognize the CC-BY-NC license is not compatible with Commons. Thus Commons could refuse the upload automatically.\n\nAt upload, Commons could also notice that a work is CC-BY-SA with required attribution. Commons could fill in the attribution details.\n\nGraphics applications might also warn users about editing files that carry CC-BY-ND licenses.\n\nMany SVG files have transparent backgrounds. Such files can be overlaid on colored backgrounds without adding squares of white.\n\nThe transparency can be overdone. For example, the file\n\nFile:Agitated vessel.svg\n\nhas a transparent background, but that background includes the interior of the mixing vessel. That interior is not part of he background.\n\nAn unexpected issue. Instead of watermarks or timestamps, the information should be put in the file's metadata.\n\nSVG images with invisible watermarks\n\nSVG images with timestamp watermarks\n\nDetection of this information? Small fonts, strange fill colors, and outside of viewport.\n\nArtists often copy-paste an image component rather than creating and using a symbol.\n\nAlso works for text-to-curve images.\n\nThere is a difference between content and style. The content is the information, and the style is how it is displayed. Content that is in a particular class may be displayed the same way by using CSS to select and style SVG elements in that class.\n\nIn general, it is better to use CSS to achieve a consistent display rather than individually formatting graphics elements.\n\nIn particular, elements should not be grouped merely to impose a consistent style.\n\nConsider File:Periodic table.svg which uses g elements to group noble gases, alkali metals, halogens, etc. It puts the style information in one place, but graphics editors may have to ungroup the elements in order to edit one of their members. Structural grouping also makes it difficult to have one element be a member of several groups (e.g., the rows and columns of the table). In addition, the file does not use use elements to draw the element boxes (the box drawing information is repeated), and it does not group the boxes, the chemical symbol, and the atomic number together.\n\nConsider a map. We may want the rivers and the names of rivers displayed in blue. A river class can set the color for both the rivers and the font fill. Cities with a population under 100,000 may use a small dot and a small font, and cities over that size may use a larger dot and a larger font. CSS can set the font size and even the radius of a circle. Capital cities may use a star instead of a dot.\n\nUsing CSS and the class attribute can make the display both consistent and easy to change. Fill colors and font families are set in just the CSS rather than on each SVG element. Changing the CSS will apply the change to all elements in the class.\n\nGraphics editors should have a way to manage styles, but they may not round-trip them.\n\nWMF support has improved.\n\nNeed better understanding of merging styles (as Adobe Illustrator uses).\n\n.see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n\nAlso precedence.\n\nThe simple approach to always use pixels, but CSS has many other units that may allow more flexible layouts.\n\nhttps://www.w3schools.com/cssref/css_units.php\n\nhttps://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\n\nhttps://www.w3.org/TR/css-values-4/#dimensions\n\nabsolute and relative lengths\n\nPossible trick: font-size takes smaller and larger. Might use 0.7em and 1.3em.\n\nThe relative height px, em, ex are usually relative to the element, but they are relative to the parent for the font-size property.\n\nCSS Units Unit Version Description px 1.0 pixel (1/96 inch) cm 2.0 centimeter mm 2.0 millimeter in 2.0 inch pt 2.0 Adobe point (1/72 inch) pc 2.0 pica (1/6 inch) Q 3.0 quarter millimeters (Why?) lh 4.0 line height of the element rlh 4.0 line height of the root element em 1.0 font size rem 3.0 root font size ex 1.0 x-height rex 4.0 root x-height ch 3.0 character advance of narrow glyph (\"0\") rch 4.0 character advance of narrow glyph (\"0\") ic 4.0 character advance of full-width glyph (\"水\") ric 4.0 root element character advance of full-width glyph (\"水\") cap 4.0 capital height width rcap 4.0 root element capital height width vw 3.0 one percent of viewport width vh 3.0 one percent of viewport height vmin 3.0 one percent of viewport's smallest dim vmax 3.0 one percent of viewport's max dim vb 4.0 vi 4.0 percent of parent element svw, svh Example one percent of the small viewport lvw, lvh Example one percent of the large viewport dvw, dvh Example one percent of the dynamic viewport % 1.0 percent of parent element\n\nSVG allows images to adapt. Printing a color image in black and white may not produce a satisfactory result. A red fill may look similar to a dark gray fill. SVG can use CSS media queries and adjust the presentation.\n\nConsider the image on the right. If the media supports color, then the picture can have a blue background with white text and lines. If the media is black and white, then the background can be white, and the text and lines can be black. Mechanical drawings can be more complex. For color media, solid color fills may distinguish different components; for black and white media, crosshatches may distinguish the components.\n\nAn SVG style element has a media attribute. CSS syntax allows @media queries.\n\nSVG 1.1 / CSS 2 media query support is very limited. SVG 2.0 is much richer. There is some support, but it may not work well. In tests tried around 2019, one browser could distinguish color and monochrome requests, but it would not follow changes in the printer properties.\n\nConsider these images:\n\nremove colored backgrounds\n\nremove blue background and change to black traces.\n\nColor picture that should be drawn differently in black and white.\n\nThe color is nice, but when the image is printed on a black and white printer, the colors will be levels of gray.\n\nMedia queries can change the presentation on a black and white printer.\n\nThese svg element attributes can cause problems. Just using viewBox may prevent users from panning and zooming.\n\nSpecifying width and height gives a concrete size for the image and also implies clipping. If such an image is put in a small container, then that container can be scrolled and zoomed. For example, File:2022 Russian invasion of Ukraine.svg is a detailed file where zooming and panning make sense. To see the fine detail in the image, it must be scrolled.\n\nSpecifying viewBox sets a view port on the SVG and does not imply clipping. Parts of the image that are outside of the view port are still visible. Putting such an image in a small container just sizes the image to fit; it does not imply scrolling.\n\nI should do some tests and try them in different contexts.\n\nset width, height, and viewBox\n\nset width, height, but not viewBox\n\nset viewBox only\n\nConsider the effect of the big circle background trick:\n\n<circler=\"10000\"fill=\"white\"/>\n\nMaybe a separate background topic.\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/Scaling_of_SVG_backgrounds\n\nValidation is often overly strict: issues cited as errors are often reasonable extensions. For example, HTML 5 allows data-* attributes, and those attributes have found their way into the SVG 2.0 drafts. An SVG 1.1 validator will list them as errors, but they are harmless.\n\nI'm on the fence with some other errors. Some SVG tools emit invalid XML identifiers (e.g., an identifier beginning with a digit is invalid; for example, File:Diagram_of_IGNORE.svg). Most XML implementations will handle such identifiers, so they are not a big deal. However, it may also be reasonable to fix these legitimate errors. What if some future XML spec required implementation to throw an exception when encountering such identifiers? Similarly, duplicate identifiers (such as those emitted by SVG Translate) are errors that may be reasonable to fix. (Do the duplicate identifiers confuse SVG Translate?)\n\nIn general, the text within an SVG file should be in SVG text elements. Avoid converting text to paths/curves. Such path text expands the size of the file, and it is often unnecessary. Artistic text (such as used in logos) may need to be converted to curves.\n\nIn general, if an SVG file contains text, then users should be able to copy and paste that text from the SVG file. A simple test is to load the SVG file into a browser and then try to select all the text (control-A in Windows). If no text is selected, then the diagram's text has been converted to curves.\n\nThe text that is selected should be readable, grouped appropriately, and spaced correctly. Independent phrases should be in their own text element; they should not be combined with other phrases. Independent phrases that need two lines should not use two text elements but rather code the lines in tspan elements. That keeps the phrase together.\n\nIn addition, the selected text should not be missing spaces or have extra spaces. If the text is displayed on two lines, then it should have a space between those two lines. For example, the better result is \"Holy Roman Empire\" rather than \"Holy RomanEmpire\". Unfortunately, SVG does not handle spaces well. Spaces at the beginning or end of a line may not align as expected (the SVG hanging space problem of text-anchor).\n\n<text><tspan>Holy Roman</tspan><tspanx=\"0\"dy=\"20\">Empire</tspan></text> <text><tspan>Holy Roman</tspan><tspanx=\"0\"dy=\"20\">Empire</tspan></text>\n\nSometimes, text is spaced for emphasis. For example, a map of the United States may have text that looks like United States. That text should copy and paste without the additional spaces. Instead of inserting actual spaces to achieve the effect, the graphic artist should set the letter-spacing of the string. Furthermore, do not space text by individually placing the characters. That makes the text difficult to translate, and it may render poorly when fonts are substituted. Use the mechanisms that SVG provides.\n\nSimilarly, a string that displays as all capital letters should use text-transform: uppercase. For example, United States uses a text transform and will copy-paste as \"United States\". There are other text transforms, but they are less useful.\n\nSadly, text-transform is not very smart. The result of text-transform: capitalize applied to \"united states of america\" is united states of america. It also does not follow some language conventions such as capitalizing a Dutch \"IJ\": ijland; works with ĳ ligature character (U+133): ĳland.\n\nThe perils of hidden text. It can confuse editors. Any hidden elements can cause confusion.\n\nLooking at the SVG 1.1 specification.\n\nAn a element may have text children but not tspan children.\n\nA text element may have a a children. A tspan element may not have a children. So, according to the rules, this might be legal:\n\n<text> <tspan>The devil</tspan> <ahref=\"foo\"><text>Hi</text></a> <tspan>made me do it.</tspan> </text>\n\nThat does not seem reasonable; some other rule must prevent it. I would think only a #text node would be allowed.\n\nA tspan element may also contain descriptive attributes such as title.\n\nA text element may have a transform attribute, but a tspan element may not. That also suggests that tspan elements ignore CSS transform properties.\n\nThat makes rewrite rules for SVG text transforms simpler. Transforms are never added to tspan elements, but the x and y attributes need to be offset. (If an x or a y attribute is present, then it should not be removed! It must remain present to create a new text chunk.) The dx and dy attributes need to be scaled. The rotate attribute needs ...?\n\nThe usual case is modifying the x and y attributes in a group. Extract a common transform to use for the group and apply its inverse to all members of the group.\n\nStyle promotions are also involved. If all elements of the group have the same properties, then raising that property to enclosing container works. If some members inherit a different value, then they must have the property explicitly set (depressed).\n\nInkscape likes using xml:space, but that has further implications.\n\nIf xml:space is placed at the top of the file, then it applies to all elements. Under XML rules, that is a signal that the whitespace for elements such as switch is important. It is not. For SVG, the only element that needs to mind xml:space is the text element and its children.\n\nPoint to section about fonts and what scaling them means.\n\nA good example of the benefits of nonlinear scaling of fonts is a bar code font. The font symbols are scaled to integer pixel widths. The symbols use Manhattan geometry, so the edges are sharp; no anti-aliasing is needed. The strict symbol geometries are maintained.\n\nRecommend the CSS generic fonts serif and sans-serif. If possible, do not use exotic fonts.\n\nWMF also has problems because librsvg. There are times that we want a text string to be an exact length. SVG supports that with the textLength attribute, but librsvg does not support it.\n\nIn practice, there is not much support for particular font properties.\n\nfont-family\n\ndepends on system. Use CSS fallback.\n\nfont-size\n\nspecific size has excellent support; relative sizes may not be supported\n\nfont-style\n\nnormal, italic. Good support. Oblique....\n\nfont-weight\n\nnormal, bold. Other options have little support.\n\nfont-stretch\n\nnormal. Other options have little support.\n\nfont-variant\n\nall purpose OTF support depends on font.\n\nfont-size-adjust\n\nmumble.\n\nbaseline....\n\nIt may be appropriate to fix some SVG files. For example, File:Planets2013.svg uses font-family=\"Arial-BoldMT\" and does not have font-weight=\"bold\". Most font matchers will fail. There was a Phabricator request to have MediaWiki do that automatically, but it would be better as a robot task.\n\nThe WMF font list:\n\nhttps://noc.wikimedia.org/conf/fc-list\n\nPhab:T329576: SVG Checker doesn't have all fonts installed\n\nPhab:T280722: Commons SVG Checker has different fonts than Wikimedia rendering\n\nhttps://www.fontsquirrel.com/matcherator\n\nThe font for \"PAGANESE\" is a serif font, but has many uncommon characteristics. It seems heavier than bold. It is condensed; compare the \"A\" in PAGANESE and CALCIO.\n\nConsider en:PANOSE-1.\n\nPANOSE-1 Table Parameter Description Characters Value Times New Roman 1 Family Kind 2 (Latin) 2 (Latin) 2 Serif Style AIE 5 (obtuse square cove) 2 (Cove) 3 Weight HE 7 (demi) 6 (Medium) 4 Proportion HJOMSE 3 (Modern) 5 Contrast O 4 (low) 5 (Medium Low) 6 Stroke Variation O 4 (Transitional) 7 Arm Style and Termination of Open Curves AC 5 (straight arms, single serif) 5 (straight arms) 8 Slant and Shape of the Letter OH 2 (Round) 9 Midlines and Apexes EA 3 (Standard) 10 X-height and Behavior of Uppercase Letters Relative to Accents HxÅ 4 (Large)\n\nhttps://learn.microsoft.com/en-us/globalization/input/font-support\n\nGiven a script (4-letter IETF script), which fonts support it? Which languages does a font support?\n\nhttps://github.com/antoinecarme/UnicodeFontLists\n\nUnicode is common now, so most SVG files will use Unicode or a Unicode-compatible subset. In practice, that means UTF-8, but UTF-16 is also a possibility. UTF-16 wants a byte-order mark (BOM), and some UTF-8 files will also include a BOM. Software should handle those cases.\n\nEven though a file may claim to be Unicode, that does not mean the file uses Unicode. There are many special fonts that put exotic glyphs in non-Unicode character positions. The Adobe Symbol font, for example, uses its own character encoding.[13] Zapf Dingbats[14] and Adobe Sonata[15] also use their own encodings.\n\nSymbol\n\nABCDEabcde → ABCDEabcde\n\nZapf Dingbats, Wingdings\n\nABCDEabcde → ABCDEabcde\n\nSonata\n\nABCDEabcde → ABCDEabcde\n\nEven common fonts may have non-Unicode character assignments.[16] For example, many Adobe fonts use the Adobe Standard Encoding[17] which puts a dagger at 0xD1 (Ñ instead of U+2020: †) and the \"fi\" ligature at 0xAE (® instead of U+FB01: ﬁ).\n\nFiles that claim to be Unicode but use non-Unicode fonts should be recoded with Unicode fonts. Font substitution may not work when fonts use non-Unicode character encodings.\n\nSee Phab:T272133 Make all Postscript core 35 fonts available to SVG by installing some packages.\n\nAdobe Font list. https://adobe-type-tools.github.io/font-tech-notes/pdfs/5090.FontNameList.pdf\n\nCourier, Helvetica, Times, Symbol, Avant Garde Gothic, Bookman, New Century Schoolbook, Palatino, Zaph Chancery, Zaph Dingbats.\n\nFiles with non-Unicode characters:\n\nFile:Var RTP.svg\n\nFiles that use less common character encodings (such as Shift-JIS) do not need to be recoded if they use Unicode fonts. XML files that use such encodings can convert the text to Unicode.\n\nDetecting non-Unicode files would be involved. The first step is converting to Unicode. The XML charset attribute should be authoritative, and it offers a clear route to convert an XML file to Unicode. The XML DOM should automatically convert a known charset to a DOMString, which is essentially Unicode. (XML DOM now hides the character encoding.)\n\nThe second step is searching for fonts within an SVG file. If a font is Unicode, then the text content is OK. If the font uses a non-Unicode charset, then the text content should be searched for non-Unicode characters. If no non-Unicode assignments are used, then the text content is OK. If non-Unicode assignments are used, then select a Unicode font replacement, and edit the text content to change the non-Unicode characters to equivalent Unicode characters.\n\nThose steps require a significant database.\n\nfont family\n\ncharacter encoding (points to a (possibly standard) table)\n\nreplacement font\n\nCharacter sets\n\nhttps://www.iana.org/assignments/character-sets/character-sets.xml\n\nsee w:Mojibake\n\nDifferences in font metrics are expected. The character widths will vary. The cap-height and x-height will vary.\n\nThere are other technical placement issues that spell trouble.\n\nMusic fonts are problematic. Although the glyphs are identified, there is not a set standard for the position of those glyphs. Compare: Latin fonts have a baseline, but music fonts do not.\n\nFind the Phabricator item about SVG music and fonts.\n\nThe first music font was Adobe Sonata. It uses its own 8-bit character encodings. The common staff height is 1 em. The notehead centers were set on the baseline. So we can get the simple\n\nSonata\n\n=qq=\n\nUnicode defined a music block, but it did not specify the glyph sizes or positions. Google's Noto Music font has different note positioning but similar stem heights:\n\nNoto Music\n\n𝄚𝅘𝅥𝅘𝅥𝄚\n\nThe SMuFL Bravura font (for scoring) also uses the Unicode block character assignments, but it uses the Sonata note positions.\n\nBravura\n\n𝄚𝅘𝅥𝅘𝅥𝄚\n\nThe SMuFL Bravura Text font (for inclusion within text) also exists.\n\nBravura Text\n\n𝄚𝅘𝅥𝅘𝅥𝄚\n\nOther Unicode music fonts are less structured. A notehead may not fit between staff lines. The staff height may not be 1 em.\n\ndefault music font\n\n𝄚𝅘𝅥𝅘𝅥𝄚\n\nThe nonstandard position information poses a problem for typesetting music. SMuFL fonts should have a JSON file that specifies the metrics. Reading that file should make all SMuFL fonts compatible, but many tools do not read the JSON files. The tools just compile in that information for the fonts they use.\n\nen:SMuFL\n\nhttps://www.smufl.org/\n\nhttps://w3c.github.io/smufl/latest/\n\nTalk about what path text looks like in some contexts.\n\nThere are files that should have path text removed.\n\nFile:Chromosome.svg This file primarily has path text because flowRoot does not display. Done\n\nFile:Animal cell structure en.svg (227 kB) clean this file up and then use SVG Translate.... Many separate translations exist.\n\nfile structure compromised with SVG optimizer\n\nreverted to old (251 kB) and then converted paths to text. Result is 149 kB. Done\n\nFile:Tulejki zaciskowe.svg collet closing schemes\n\nFile:Volcanic Arc System SVG en.svg\n\nSVG files that have converted text to path are often marked with {{Path text SVG}}. Another (earlier?) convention was to explicitly categorize files that should use text to Category:Convert to TXT. The category has JPEG, PNG, and SVG files in it. Ah! It's from {{ShouldBeText}}. That template wants the figures to be converted to wikitext rather than using an illustration. It may be better to mark some files with {{Path text SVG}} or {{Convert to SVG}}.\n\nHere is a file in the category:\n\nFile:Ipv6 header.svg 30 kB Done\n\nThe file has not only converted the text to paths, each letter is a symbol, and the text is typeset by placing those symbols. This file is also interesting in that it describes a technical standard, and the text in the file are candidates for translate=\"no\".\n\nAnother file:\n\nFile:Thermostatic expansion valve.svg\n\nFiles with even more confusion (text as symbols and curves drawn as line segments):\n\nFile:6rd.svg 312 kB\n\nFile:Tunnel-ipv6.svg 270 kB\n\nSadly, some tools emit path text rather than text. See, for example, List of Famines.\n\nSome Inkscape files have aria-label attributes.\n\nFile:Regions of Finland labelled FI.svg (there are versions a few days later)\n\nHere is some curve text from the SVG:\n\nObservations:\n\nThe DOM can reconstruct some details.\n\nThe aria-label gives most of the text (it may be multiline).\n\nVarious font properties can be used to determine font, size, style, fill, and anchor.\n\nThe SVGDOM can determine the bounding box of the g element.\n\nThe SVGDOM can determine the bounding box of the synthesized text element.\n\nThe SVG has some contradictions such as font size being both 12 and 19.715 pixels and line height of 0 or 1.25.\n\nThe SVG has irrelevant stroke information.\n\nThe CORS issue....\n\nWhy did Inkscape do it this way? In the old days, glyphs would have been better. Now that glyphs are gone, why not create some definitions in the defs section and then use those definitions?\n\nSome graphics artists have hidden text and visible path text.\n\nGenerally, hidden text may indicate path text. Consider the cases\n\nhidden text (display=\"none\" or visibility=\"hidden\")\n\ntext outside of the viewport\n\noften used for notes or example graphics\n\nmay be part of a clipped or zoomed=in image\n\nThe difference between display and visibility\n\nhttps://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/display (element and its children are not displayed)\n\nhttps://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/visibility (the layout of hidden text is still calculated)\n\nHidden text may be a standard practice in Category:SVG labeled maps of administrative divisions (location map scheme), which has more than 2,500 files. Styles should be used instead of concrete formatting, but Inkscape makes that difficult.\n\nAn example file is File:Togo,_administrative_divisions_-_de_-_colored.svg.\n\n<gid=\"TT\"display=\"none\"> <gid=\"TT_Countries\"display=\"inline\"> <texttransform=\"matrix(1 0 0 1 8.2725 236.5)\"fill=\"#646464\"font-family=\"'DejaVuSans-Bold'\"font-size=\"18\">GHANA</text> <texttransform=\"matrix(1 0 0 1 41.6494 16.6387)\"fill=\"#646464\"font-family=\"'DejaVuSans-Bold'\"font-size=\"18\">BURKINA FASO</text> <texttransform=\"matrix(1 0 0 1 292.7539 119.7319)\"fill=\"#646464\"font-family=\"'DejaVuSans-Bold'\"font-size=\"18\">BENIN</text> </g> <textid=\"TT_Sea\"transform=\"matrix(0.75 0 0 1 239.7402 608.8057)\"display=\"inline\"fill=\"#0978AB\"font-family=\"'DejaVuSerif-BoldItalic'\"font-size=\"16\">ATLANTISCHER OZEAN</text> <gid=\"TT_Regions\"display=\"inline\"> <texttransform=\"matrix(0.8 0 0 1 97.8931 73.6895)\"><tspanx=\"0\"y=\"0\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"22\">Savanes</tspan><tspanx=\"93.168\"y=\"0\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"22\"letter-spacing=\"33.75\"></tspan></text> <texttransform=\"matrix(0.8 0 0 1 173.4487 197.23)\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"22\">Kara</text> <texttransform=\"matrix(0.8 0 0 1 172.1001 299.9858)\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"22\">Centrale</text> <texttransform=\"matrix(0.8 0 0 1 181.4487 442.9453)\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"22\">Plateaux</text> <texttransform=\"matrix(0.8 0 0 1 188.5601 537.9512)\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"22\">Maritime</text> </g> <gid=\"Nmbrs_Regions\"display=\"inline\"> <texttransform=\"matrix(0.8 0 0 1 135.1401 110.792)\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"50\">1</text> <texttransform=\"matrix(0.8 0 0 1 173.4487 197.23)\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"50\">2</text> <texttransform=\"matrix(0.8 0 0 1 188.5601 311.9995)\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"50\">3</text> <texttransform=\"matrix(0.8 0 0 1 203.7798 450.9453)\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"50\">4</text> <texttransform=\"matrix(0.8 0 0 1 223.1953 549.5059)\"fill=\"#646464\"font-family=\"'DejaVuSansCondensed-Bold'\"font-size=\"50\">5</text> </g> </g> <gid=\"PIX\"> <gid=\"TT_Countries_1_\"> ... </g> ... </g>\n\nIt has particular id elements. TT for TrueType?\n\nCategorize SVG with hidden text elements?\n\nMost of the text should be anchored to the middle rather than the start. File was made with Adobe Illustrator, which only emits SVG text with start coordinates (no middle or end alignment).\n\nThe map files burying the font characteristics in the font name. The font specification DejaVuSansCondensed-Bold should be font-family=\"DejaVu Sans, sans-serif\" font-weight=\"bold\" font-stretch=\"condensed\". File was made with Adobe Illustrator, which does not emit broken out font specifications.\n\nTEST: does this code produce the same text:\n\n<svgxmlns=\"http://www.w3.org/2000/svg\"viewBox=\"0 0 1000 300\"font-size=\"100\"> <rectwidth=\"100%\"height=\"100%\"fill=\"pink\"/> <textx=\"20\"y=\"150\"font-family=\"DejaVuSansCondensed-Bold\">The Atlantic Ocean</text> <textx=\"20\"y=\"250\"font-family=\"DejaVu Sans\"font-weight=\"bold\"font-stretch=\"condensed\">The Atlantic Ocean</text> </svg>\n\nAnswer: They do not look the same.\n\nShould SVG with such font names be edited?\n\nCategorize SVG with encoded font name?\n\nIn addition, the transform x-scale should be 1 rather than 0.8; automatic detection may be difficult. That might be an afterthought fix to emulate a condensed font. That would simplify the text position.\n\nNotice the SVG uses groups to impose consistent style information. Using structural hierarchy to impose style is an odd practice. The text is not grouped with the other graphics but rather with siblings. Separating one region would involve exploding several groups to remove irrelevant regions.\n\nAnother hidden-text example is File:Cochlea-crosssection.svg. It also has the unsupported flowRoot element, so the hidden text may not be such a bad thing.\n\nThis SVG file mostly works on Commons. The problem is that Liberation Sans with a condensed stretch should select Liberation Sans Narrow. Phab:T357488\n\nThis SVG file does not work in Chromium or Firefox on Windows. Font stretch appears to be ignored. I do not know if it is a configuration issue or some deeper problem.\n\nClassifier to style? These files may be simple. Would like to do some normalization (such as pulling out a default fill for the text).\n\nIs the algorithm simple? Say there is a group that imposes a characteristic such as fill. Generate a new style that specifies that fill. Then that group can be exploded. Generalize the explosion to a finite set of characteristics imposed by the group. Maybe that is the algorithm that Adobe Illustrator uses with its st* styles.\n\nThat leaves us with flat text with many styles. Then apply an equivalence algorithm to reduce the number of styles.\n\nAlthough some files have substantial path text burdens, it may not make sense to convert them to text.\n\nFile:Liniennetz Stadtbahn Bielefeld mit Stationsnamen.svg is 608 kB with path text. There is little reason to use path text here because the station names do not use a fancy font. It is not like a logo or a flag where the text metrics and font appearance are important.\n\nThe file seems to be a good candidate for converting to text. Or is it?\n\nThe effort of converting the file to text may not be worth it. The file is used in a small number of places. Perhaps the only advantage would be to reduce the file enough so that it would make sense to serve the SVG directly.\n\nThere is little need to translate the text in this file. Maybe the legend can be translated, but someone using the map probably wants the native names. So converting the file to text would not be a big translation benefit.\n\nFile:Mapa del Alto Mijares.svg has path text. Its scale uses text, but little else. Surprisingly, there are dozens of text elements that contain nothing.\n\nI'd like to key on city dots, find the closest path text, and then convert to text.\n\nSVG does not have a good sense of labels for symbols. AutoCAD allows symbols to have associated text. The closest that SVG can do is something such as\n\n<gtransform=\"translate(100 200)\"> <circlecx=\"0\"cy=\"0\"r=\"5\"fill=\"blue\"/> <textx=\"0\"y=\"-10\">City of Angels</text> </g>\n\nCompare to a file such as File:Ribosome mRNA translation en.svg. It is used in many places and has been translated into other languages.\n\nSVG user agents did not implement the tref element, and the SVG 2.0 specification drops the element. As specified, the element does not appear useful. Duplicating rather than referencing text is simple enough.\n\nConsider a map. Most place names (such as towns and cities) will be used once, so a reference would not be useful. A generic feature such as an airport may appear several times, but it can use a symbol to repeat the text.\n\nRivers, on the other hand, are long, so they may be labeled on a map a few times. For example, the Amazon may appear on a map several times. One could use symbol to do the repeat, but rivers are oven labeled using a path that follows the river. A tref might be convenient to label the river at several places along its twisting length.\n\n<defs> <textid=\"amazontext\">Amazon River</text> <pathid=\"amazonpath1\"d=\"...\"/> <pathid=\"amazonpath2\"d=\"...\"/> <pathid=\"amazonpath3\"d=\"...\"/> </defs> <text><textPathxlink:href=\"#amazonpath1\"><trefxlink:href=\"#amazontext\"/></textPath></text> <text><textPathxlink:href=\"#amazonpath2\"><trefxlink:href=\"#amazontext\"/></textPath></text> <text><textPathxlink:href=\"#amazonpath3\"><trefxlink:href=\"#amazontext\"/></textPath></text>\n\nHowever, the approach is not suitable for switch translations.\n\nA textPath element may have tref children.\n\nThe target of tref is not well specified. It sounds like it could point to any element with text content, but that does not mean that pointing to a switch element would provide just the rendered text.\n\nA construct using convertional translation tools and its:term would work better.\n\nThere may be a route by using startOffset, but I doubt this inheritance works:\n\n<gstartOffset=\"25%\"> <text...> ...<textPathxlink:href=\"#pathRiverName\"...> ...</textPath> ...</text> </g> <gstartOffset=\"50%\"> <text...> ...<textPathxlink:href=\"#pathRiverName\"...> ...</textPath> ...</text> </g> <gstartOffset=\"75%\"> <text...> ...<textPathxlink:href=\"#pathRiverName\"...> ...</textPath> ...</text> </g>\n\nIf the inheritance works, then the startOffset should also work with a use element. A check shows that the attribute is not inherited. The SVG 1.1 specification says if the attribute is not specified, then it defaults to 0.\n\nLater versions of CSS and content.\n\nThe overall goal is to keep one translation of a river name but use that translation in several textPath elements. Could CSS be used to set the path element? I do not think so. The use element would refer to a text element. The use would have to pick up some property that would be consumed not by the text element but by the textPath element embedded within the text element. Maybe a startOffset could be passed at the use element? No, startOffset is not a presentation attribute.\n\nSVG 1.0 and 1.1 have SVG elements that allow a user to embed a font.\n\nFor those cases where converting text to curves makes sense, using glyphs offers potential benefits.\n\nDiscussion at Commons:Graphic_Lab/Illustration_workshop/Archive/2021#Vietnamese-style_seal_of_the_Government-General_of_French_Indo-China (and several sections immediately following)\n\nAlso https://commons.wikimedia.org/w/index.php?title=Commons:Graphic_Lab/Illustration_workshop&oldid=753110204#The_seals_of_ministries_of_the_Nguy%E1%BB%85n_Dynasty\n\nFile:Vietnamese-style_seal_of_the_Government-General_of_French_Indochina.svg\n\nGeneral information about w:en:Seal script.\n\nThe seal is 115 kB for 15 characters. That is about 7700 bytes per character, which is rather large. Using the path element, one should be able to describe a line segment in less than 100 bytes. Examining the image with magnification shows that the character strokes have a lot of noise.\n\nModern script (not seal script) using writing-mode: vertical-rl:\n\n大法國欽命\n\n總統東法全\n\n權大臣管理\n\nSome SVG files embedded commercial fonts as glyphs. For example, an Adobe Illustration file might embed a portion of the Arial font in an SVG file. That practice should be discouraged.\n\nFor Unicode seal script, there is a list of Unicode documents at https://www.unicode.org/L2/topical/seal/\n\nsample files from that list\n\nhttps://www.unicode.org/L2/L2014/14242-n4634.pdf\n\nhttps://www.unicode.org/L2/L2022/22143-n5191-thx-properties.pdf\n\nFinding the corresponding characters in that document or a similar document might be helpful.\n\nFor example, the second document above maps 林 to Serial No.字序 04418\n\nSVG was developed when web fonts were not available, so SVG included a rudimentary embedded font mechanism.[18] With web fonts, such a facility is not as important, so the mechanism has been deprecrated. As of 2021, support may still be found in the Safari and Android browsers.\n\nThe Unicode specification will not add any new composed characters. That simplifies the number of characters needed. For example, Siddham script has thousands of glyphs, but most of those glyphs are composed characters. In Unicode, Siddham has a small number of fundamental characters. Composed characters are still drawn, but they no longer have exposed codepoints.\n\nSVG 2.0 may have dropped glyph support because web fonts are now available. In the past, web pages depended upon the fonts that a user already had on his local machine. If the local machine did not have the font, then it would substitute some other font. Those substitutions could lead to bizarre results.\n\nIt gets even more troublesome when the desired font is for uncommon Unicode scripts. Unicode supports many scripts, but most users will not have those scripts. Unicode has assignments for Egyptian hieroglyphics and ancient Sanskrit Siddham.\n\nCSS now has a mechanism to load web font.\n\nGoogle offers a lot of fonts, and it also has CSS files to use those fonts as web fonts. (Reference)\n\nThe downside is the webfonts allow some tracking. The web font files have a long caching time (was it a year?). A browser would download the font and use it without continually querying the Google servers. The CSS files have relatively short cache times, so the browser would be contacting Google servers often. (Reference)\n\nRoad signs can be thorny. They may contain artistic text, and they may contain ordinary text.\n\nEven with artistic text, the file sizes are often not large because the signs are simple (they do not contain much text).\n\nOld Alberta road signs could sensibly use a stylized font.\n\nFile:Alberta Highway 1A (1970s).svg\n\nThe modern road signs are too stylized.\n\nFile:Alberta Highway 2.svg\n\nFile:Alberta Highway 584.svg \"This SVG sign uses the path text method.\"\n\nSee Category:Alberta Highway shields\n\nUser:Highway Route Marker Bot\n\nFonts are not that important to signs. See File:AB69ewSigns-TwoFontsYMM (28172571140).jpg which shows two road signs using the old Alberta logo but the highway numbers are in different fonts.\n\nFont height may remain fixed, but the font weight (e.g., bold) or font stretch (e.g., condensed) may vary.\n\n2, 2A, 93, 93A\n\nw:en:Symbols_of_Alberta\n\nFile:Alberta wordmark 2009.svg\n\nFile:AB-provincial highway.svg\n\nhttps://commons.wikimedia.org/w/index.php?title=Commons:Village_pump&diff=prev&oldid=726272694#Polish_voivodeship_road_signs\n\nAbout wide variation in Category:Diagrams of Voivodeship road signs of Poland. Height is 270, but widths are all over the map.\n\nThe font is Drogowskaz. See en:Polish road signs typeface.\n\nArial is a reasonable facsimile: 0123456789.\n\nSVG files should use reasonable anchors. The usual choices are left aligned, center aligned, or right aligned. If I want text aligned on the right edge, I should not insert some left-aligned text and then move the position of the whole string so the right edge ends whene I want it to end.\n\nAlignment is important because font metrics vary. Text that seems to align correctly with one font may look ragged with another font.\n\nChoosing the correct text anchor is a simple defense against varying font metrics.\n\nThe leader lines should be placed with precision. The lines should be at the start, the middle, or end of the text. Consider a lengthy English label may translate to a single character. If the leader starts at the third character, it may be misaligned for Chinese. It's not a great example, but compare pancreas (Q9618) and 胰脏（Q9618）. Also, a leader line should be careful about character clearance. Starting just below the baseline will not work will if the translation has a descending character there. Similarly, starting a leader just above some English text may intersect with the Chinese translation because Chinese uses taller characters.\n\nLeader line conventions. Use dots to put a finger on a large object. Use arrowheads to point to a boundary. (Flow graphs use arrowheads, but they are not leader lines.)\n\nPerhaps show translation boxes?\n\nSVG is unusual. Normally, when text is justified, that justification ignores leading and trailing whitespace. That means the visible characters (the ones that make marks on the canvas) are centered. SVG treats spaces as visible characters.\n\nLeft: Now is the time for all good men to come to the aid of their country.\n\nCenter: Now is the time for all good men to come to the aid of their country.\n\nRight: Now is the time for all good men to come to the aid of their country.\n\nJustify: Now is the time for all good men to come to the aid of their country.\n\nThere are subtle problems with SVG text anchors. The SVG semantics do not play well with text direction. If the anchor sets a starting point, then left-to-right text builds to the right, but right-to-left text builds to the left. That can give screwy results.\n\nThe issue is a bit more complex. There is an interaction between the specified text direction and the Unicode BIDI algorithm. They will give reasonable results in simple cases.\n\nConsider start-aligned text: text-anchor=\"start\".\n\nFor English, we expect direction=\"ltr\", so we would expect\n\n|English\n\nFor Arabic, we expect direction=\"rtl\", so we would expect\n\ncibarA|\n\nBut if the Arabic is laid out with direction=\"ltr\", the layout sort of works due to BIDI:\n\n|cibarA\n\nDo nothing, and the layout sort of works. It fails when strings contain both LTR and RTL characters. Consider \"English 17 kg\". Where we want to keep the \"kg\" units. The result with direction=\"ltr\" is\n\n|English 17 kg |17 cibarA kg\n\nBIDI starts out in LTR. It sees the Arabic, so it starts a RTL block for \"Arabic\". The space is neutral, so it is added RTL. The numbers are weak LTR, so they are added to the RTL block as a subblock. The \"kg\" is strong LTR, so they terminate the blocks and go back to toplevel.\n\nHere are some span elements in HTML:\n\nEnglish 17 kg\n\nعربي 17 kg\n\nTo do it correctly, we need to set the direction for the entire phrase and swap the text-anchor. Here is the text setting the direction for the entire span\n\nEnglish 17 kg\n\nعربي 17 kg\n\nIdeally, the text element should set the text direction that is appropriate for the script. English text should set the text direction as left-to-right. Arabic text should set the text direction as right-to-left. Unicode BIDI will then layout the strings correctly, but now the layout will head in opposite directions. For expected results, one must change both the text anchor and the text direction. That's a headache.\n\nIn theory, CSS can fix the problem, but SVG agents may have weak CSS implementations.\n\nPhab:T271663 Offer to invert text-anchor for RTL languages\n\nSVG does not nest the graphics scope. The ex2 problem. In HTML, this cascaded form works correctly: the exponent 2 is scoped to the x graphics state. In SVG, the exponent 2 is scoped to the e graphics state.\n\nThe superscript and subscript problem. When there is both a subscript and a superscript, we want them on top of each other.\n\nHTML and SVG: 126C+42.\n\n.see https://stackoverflow.com/questions/3742975/subscript-and-superscript-for-the-same-element\n\n126C+42\n\n.see https://bytes.com/topic/html-css/answers/672245-both-sub-superscript-together\n\ntry a variation\n\n126C+42\n\nUsing MediaWiki <math>: 6 12 C 2 + 4 {\\displaystyle _{6}^{12}C_{2}^{+4}} ; also 1 2 ( 6 3 ) {\\displaystyle {1 \\over 2}{6 \\choose 3}}\n\nUsing MediaWiki <chem>: C 2 + 4 6 12 {\\displaystyle {\\ce {^{12}_6C^{+4}_2}}}\n\nSVG 1.1 uses the xlink: namespace. HTML does not have namespaces, so HTML uses just href rather than xlink:href. For some reason (perhaps embedding SVG within HTML), SVG 2.0 has decided to use href.\n\nThe problem with xml:lang and lang.\n\nSVG should be about making marks on a screen or a piece of paper. It should not be about myriad other topics. If the semantics are not about marks on paper, then the semantics do not belong in the SVG specification.\n\nFor example, there is a notion that some text might be translated to another language, while other text should not be. People who were interested in XML markup developed the Internationalization Tag Set for making such notations. Consequently, one could add rules and attributes to an XML file that translation utilities could use. The attribute its:translate=\"no\" means do not translate the content, and its:translate=\"yes\" means translate the content. The specification also included rules using XPATH patterns to identify what should or should not be translated. Everything in the its namespace is distinct from other namespaces (and the default namespace).\n\nHTML does not have namespaces, so the use of ITS is a bit awkward. So HTML added the translate attribute. It is not as powerful as the ITS specification, but it is simple. SVG comes along and copies the HTML translate attribute. There is no reason. SVG can support the its: namespace; it is not crippled like HTML.\n\nHTML does not have namespaces. Instead of following XML and adopting namespaces (as XHTML did), HTML invented a poor man's namespace. If attributes start with data- or aria-, then they are in a quasi-namespace. SVG is XML, so it need not stoop to such measures. SVG should have used data: and aria: namespaces.\n\nHTML ignores capitalization. Consequently, <Head> is the same as <HEAD>. It is the same for attributes. However, the data- attributes wanted to have database keys that were cases sensitive. So HTML uses a hyphen algorithm. Everything after the data- prefix is in lowercase unless it is immediately preceded by a hyphen. The attribute DATA-NAME=\"Smith\" sets database[\"name\"] = \"Smith\". If we wanted the database key to be all capitals, we must say data--N-A-M-E=\"Smith\". That's due to the case-insensitive nature of HTML. XML and SVG can be much simpler. They could say either data:name=\"Smith\" or data:NAME=\"Smith\". No need for a pseudo namespace, and no nee"
    }
}