{
    "id": "dbpedia_3788_1",
    "rank": 90,
    "data": {
        "url": "https://pub.dev/packages/cached_network_image",
        "read_more_link": "",
        "language": "en",
        "title": "cached_network_image",
        "top_image": "https://pub.dev/static/hash-l15m0lvm/img/pub-dev-icon-cover-image.png",
        "meta_img": "https://pub.dev/static/hash-l15m0lvm/img/pub-dev-icon-cover-image.png",
        "images": [
            "https://pub.dev/static/hash-l15m0lvm/img/pub-dev-logo.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/nav-mobile-foldable-icon.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/nav-mobile-foldable-icon.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/nav-mobile-foldable-icon.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/content-copy-icon.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/material-icon-verified.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/like-inactive.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/like-active.svg",
            "https://img.shields.io/pub/v/cached_network_image.svg",
            "https://codecov.io/gh/Baseflow/flutter_cached_network_image/branch/main/graph/badge.svg?token=I5qW0RvoXN",
            "https://github.com/Baseflow/flutter_cached_network_image/workflows/app_facing_package/badge.svg?branch=develop",
            "https://stream-blog.s3.amazonaws.com/blog/wp-content/uploads/fc148f0fc75d02841d017bb36e14e388/Stream-logo-with-background-.png",
            "https://pub.dev/static/hash-l15m0lvm/img/material-icon-verified.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/material-icon-balance.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/material-icon-verified.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/material-icon-balance.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/keyboard_arrow_left.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/keyboard_arrow_right.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/rss-feed-icon.svg",
            "https://pub.dev/static/hash-l15m0lvm/img/bug-report-white-96px.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2017-12-09T14:42:52.256317+00:00",
        "summary": "",
        "meta_description": "Flutter library to load and cache network images. Can also be used with placeholder and error widgets.",
        "meta_lang": "en",
        "meta_favicon": "/static/hash-l15m0lvm/img/flutter-logo-32x32.png",
        "meta_site_name": "Dart packages",
        "canonical_link": "https://pub.dev/packages/cached_network_image",
        "text": "Cached network image #\n\nA flutter library to show images from the internet and keep them in the cache directory.\n\nTry the Flutter Chat Tutorial ðŸ’¬\n\nHow to use #\n\nThe CachedNetworkImage can be used directly or through the ImageProvider. Both the CachedNetworkImage as CachedNetworkImageProvider have minimal support for web. It currently doesn't include caching.\n\nWith a placeholder:\n\nCachedNetworkImage( imageUrl: \"http://via.placeholder.com/350x150\", placeholder: (context, url) => CircularProgressIndicator(), errorWidget: (context, url, error) => Icon(Icons.error), ),\n\nOr with a progress indicator:\n\nCachedNetworkImage( imageUrl: \"http://via.placeholder.com/350x150\", progressIndicatorBuilder: (context, url, downloadProgress) => CircularProgressIndicator(value: downloadProgress.progress), errorWidget: (context, url, error) => Icon(Icons.error), ),\n\nImage(image: CachedNetworkImageProvider(url))\n\nWhen you want to have both the placeholder functionality and want to get the imageprovider to use in another widget you can provide an imageBuilder:\n\nCachedNetworkImage( imageUrl: \"http://via.placeholder.com/200x150\", imageBuilder: (context, imageProvider) => Container( decoration: BoxDecoration( image: DecorationImage( image: imageProvider, fit: BoxFit.cover, colorFilter: ColorFilter.mode(Colors.red, BlendMode.colorBurn)), ), ), placeholder: (context, url) => CircularProgressIndicator(), errorWidget: (context, url, error) => Icon(Icons.error), ),\n\nHow it works #\n\nThe cached network images stores and retrieves files using the flutter_cache_manager.\n\nFAQ #\n\nMy app crashes when the image loading failed. (I know, this is not really a question.) #\n\nDoes it really crash though? The debugger might pause, as the Dart VM doesn't recognize it as a caught exception; the console might print errors; even your crash reporting tool might report it (I know, that really sucks). However, does it really crash? Probably everything is just running fine. If you really get an app crashes you are fine to report an issue, but do that with a small example so we can reproduce that crash."
    }
}