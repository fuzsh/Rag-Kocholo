{
    "id": "dbpedia_3788_2",
    "rank": 35,
    "data": {
        "url": "https://www.mediawiki.org/wiki/Extension:PageImages",
        "read_more_link": "",
        "language": "en",
        "title": "Extension:PageImages",
        "top_image": "https://www.mediawiki.org/static/favicon/mediawiki.ico",
        "meta_img": "https://www.mediawiki.org/static/favicon/mediawiki.ico",
        "images": [
            "https://www.mediawiki.org/static/images/icons/mediawikiwiki.svg",
            "https://www.mediawiki.org/static/images/mobile/copyright/mediawikiwiki-wordmark.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/OOjs_UI_icon_advanced-invert.svg/40px-OOjs_UI_icon_advanced-invert.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/OOjs_UI_icon_check-constructive.svg/15px-OOjs_UI_icon_check-constructive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8b/Wikimedia-logo_black.svg/40px-Wikimedia-logo_black.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/OOjs_UI_icon_information-progressive.svg/40px-OOjs_UI_icon_information-progressive.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://www.mediawiki.org/static/images/footer/wikimedia-button.svg",
            "https://www.mediawiki.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/mediawiki.png",
        "meta_site_name": "MediaWiki",
        "canonical_link": "https://www.mediawiki.org/wiki/Extension:PageImages",
        "text": "This extension comes with MediaWiki 1.34 and above. Thus you do not have to download it again. However, you still need to follow the other instructions provided.\n\nThis extension is under code stewardship review and not actively maintained (task T252249). No new feature requests will be considered during this period.\n\nMediaWiki extensions manual PageImages\n\nRelease status: stable Implementation API , Parser extension Description Stores information about images representing a page Author(s) Max Semenik (MaxSemtalk) Latest version continuous updates Compatibility policy Snapshots releases along with MediaWiki. Master is not backward compatible. MediaWiki 1.37+ PHP 7.3.19+ Database changes No License WTFPL 2.0 Download\n\n$wgPageImagesOpenGraphFallbackImage\n\n$wgPageImagesDenylist\n\n$wgPageImagesScores\n\n$wgPageImagesNamespaces\n\n$wgPageImagesAPIDefaultLicense\n\n$wgPageImagesExpandOpenSearchXml\n\n$wgPageImagesLeadSectionOnly\n\n$wgPageImagesOpenGraph\n\n$wgPageImagesDenylistExpiry\n\nQuarterly downloads 140 (Ranked 41st) Public wikis using 2,271 (Ranked 191st) Translate the PageImages extension if it is available at translatewiki.net Issues Open tasks · Report a bug\n\nThe PageImages extension collects information about images used on a page.\n\nIts aim is to return the single most appropriate thumbnail associated with an article.\n\nPageImages also provides OpenGraph protocol metadata for articles on the wiki for 3rd parties like Facebook to extract.\n\nDownload and move the extracted PageImages folder to your extensions/ directory.\n\nDevelopers and code contributors should install the extension from Git instead, using:cd extensions/\n\ngit clone https://gerrit.wikimedia.org/r/mediawiki/extensions/PageImages\n\nAdd the following code at the bottom of your LocalSettings.php file:\n\nwfLoadExtension( 'PageImages' );\n\nConfigure as required\n\nTo initially assign the page images to the pages, run the \"initImageData.php\" script from the extensions maintenance directory (/path/to/extensions/PageImages/maintenance/)\n\nDone – Navigate to Special:Version on your wiki to verify that the extension is successfully installed.\n\n$wgPageImagesDenylist is an array of sources for image denylists. Listed images will never be selected as page images. Examples:\n\n$wgPageImagesDenylist = [ // Page on local wiki [ 'type' => 'db', 'page' => 'MediaWiki:Pageimages-denylist', 'db' => false, ], // Page on Wikimedia Commons, for other Wikimedia projects using direct DB access [ 'type' => 'db', 'page' => 'MediaWiki:Pageimages-denylist', 'db' => 'commonswiki', ], // Page on Commons, for third-party sites using web access [ 'type' => 'url', 'url' => 'http://commons.wikimedia.org/w/index.php?title=somepage&action=raw', ], ];\n\nMore than one source can be used at the same time.\n\nThe denylist itself should contain wikilinks to files, the rest of the content is irrelevant (and can contain links to other pages). For example:\n\n* [[:File:First denylisted file.png]] * [[:File:Second denylisted file.jpeg]] ...\n\nRemember that file links that result in images being added to the page will not work (these files are denylisted for a reason, right?), so don't forget the : in front of the links.\n\n$wgPageImagesDenylistExpiry determines how long the list will remain cached, in seconds. Default: 15 * 60 (15 minutes).\n\n$wgPageImagesExpandOpenSearchXml if set to true, PageImages will override the image detection in the opensearch API module with its own, more accurate results. Default: false.\n\n$wgPageImagesNamespaces is an array of namespaces PageImages will be activated on. Default: NS_MAIN.\n\nAfter the change, you'll have to run refreshLinks.php to generate the Page image information for those namespaces (hopefully, you can use the --namespace parameter to process only pages on the affected namespaces, since that script is very resource-intensive)\n\n$wgPageImagesOpenGraph enables or disables the OpenGraph meta tags (could be useful if other extensions manage these tags) (1.39+). Default: true\n\n$wgPageImagesOpenGraphFallbackImage is a URL to fallback image that will be shown when there is no image on a page. Default: false\n\nSince MediaWiki 1.37, $wgPageImagesBlacklist and $wgPageImagesBlacklistExpiry have been renamed to $wgPageImagesDenylist and $wgPageImagesDenylistExpiry respectively. There's no backwards compatibility code added to accept the old variable names, which means you should change the variable names during the upgrade, or define both variables in advance in preparation for the upgrade.\n\nSince MediaWiki 1.37, the default page value for $wgPageImagesDenylist has been changed from MediaWiki:Pageimages-blacklist to MediaWiki:Pageimages-denylist. If you've added content to MediaWiki:Pageimages-blacklist on your wiki, you should rename it during the upgrade. If you want to prepare in advance for the upgrade, you can rename the page to the new name, and also set $wgPageImagesBlacklist (the old variable name) to the new page name, and the default value will be used when upgrading, which should match your previous change.\n\nThe PageImages extension provides image information by adding a prop=pageimages to the properties API for action=query.\n\nprop=pageimages (pi)\n\n(main | query | pageimages)\n\nReturns information about images on the page, such as thumbnail and presence of photos.\n\n{ // piprop.name (and image exists) pageimage?:string// Source image filename (basename of original.source). // piprop.thumbnail (and image exists) thumbnail?:{ source:string// Thumbnail image URL. width:number// Thumbnail image width in pixels. height:number// Thumbnail image height in pixels. } // piprop.original (and image exists) original?:{ source:string// Source image URL. width:number// Source image width in pixels. height:number// Source image height in pixels. } }\n\nRequest page image for an article.\n\nWhen a page is saved with a local image, the parser runs the hooks ParserMakeImageParams and LinksUpdate. The PageImages extension responds to these (and other hooks) and inserts a new property for the page into the page_props table. The property name is page_image_free and its value is the name of the image.\n\nThe extension only stores the chosen image name. Other features may display the image, such as Page information, Hovercards, and Mobile search while typing.\n\nPage images will be listed on the ?action=info page.\n\nAll images in the page are collected and a score for each image is calculated. The image with the highest score is selected as the page image. If the wiki is configured such that images contain metadata that specifies images are not freely licensed, the image with the best score that is also freely licensed is also stored. If no suitable image is found or all the images score badly (i.e. have a negative score), the page will not have any images.\n\nIf $wgPageImagesLeadSectionOnly is true, only images in the lead section will be considered. Currently this is true for only Wikipedia projects; all other projects can pull images from outside the lead.\n\nThe best possible page image on Wikimedia wikis is one of the first four images in an article which has a width/height between 400-600px and a height/width which is twice the value of the other dimension.\n\nThe algorithm is configurable.\n\nScores are calculated by a combination of:\n\nImage widths as defined in $wgPageImagesScores['width']\n\nIn Wikimedia wikis, images smaller than 119 pixels are weighted highly negatively. Images with widths between 400px-600px are favoured, with a preference for the lower bound.\n\nImages inside galleries are scored separately using $wgPageImagesScores['galleryImageWidth']\n\nIn Wikimedia wikis gallery images which are smaller than 100 are disregarded.\n\nPosition in document is also considered as defined in $wgPageImagesScores['position']\n\nOn Wikimedia wikis, only the first 4 images that appear in the document are considered.\n\nThe ratio of the image's width to height is considered $wgPageImagesScores['ratio']\n\nOn Wikimedia wikis a ratio of 0.4 to 3.1 is allowed, with 0.6 to 2.1 preferred.\n\nThe default value is $wgPageImagesScores['ratio'] = [\"3\" => -100, \"5\" => 0, \"20\" => 5, \"30\"=> 0, \"31\"=> -100]; with the key representing the width divided by height, rounded to the tenths place, and the decimal shifted one position to the right. An image 400px wide by 300px high would have a value of 13. The key's value is the scoring multiple associated with that ratio. Keys are selected increasing from zero with a new scoring multiple not taking effect until the key has been met or exceeded its value but not exceeded the next key. Any other images will score negatively and be discarded.\n\nPageimages populates images whenever the LinksUpdate hook runs, e.g. when a page is being edited.\n\nYes!\n\nFor an entire wiki, there is a page that administrators can edit at MediaWiki:Pageimages-denylist (example). Any images that appear here will not be used as page images for any article.\n\nFor specific pages, add |class=notpageimage to each image you want to exclude. For example, [[File:Example.png|class=notpageimage]]. More details are at phab:T301588.\n\nUsing the Page information link in the sidebar (or adding ?action=info to the URL) you'll be able to see the current image choice.\n\nThe pageimage only changes when a link in an article changes. For emergencies, please add/remove links from the page, reverting if necessary. Purging will not work. For larger emergencies please file a Phabricator ticket.\n\nThis likely relates to video content in your article. If a video file begins with a blank screen, that will become the default thumbnail for the video and if used as the page image, it will become the page image. We are currently working on a fix for this, that will allow you to change the default thumbnail of a video. See: phab:T92457 and phab:T22647 for further information.\n\nExtension:Popups"
    }
}