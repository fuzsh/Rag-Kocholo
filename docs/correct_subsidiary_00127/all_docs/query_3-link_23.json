{
    "id": "correct_subsidiary_00127_3",
    "rank": 23,
    "data": {
        "url": "https://www.geeksforgeeks.org/servlet-crud-operation-with-example/",
        "read_more_link": "",
        "language": "en",
        "title": "CRUD Operation with Example",
        "top_image": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "meta_img": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "images": [
            "https://media.geeksforgeeks.org/gfg-gg-logo.svg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220115205718/geekapache1.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220115205756/geekapache2.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220115205757/geekdatabase.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220115211631/geekprojsetup.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220115214019/geekwebxml.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220116000528/geekregpage.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220116000530/geeksuccespage.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220116000534/geekviewuser.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/new-premium-rbanner.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/gfgFooterLogo.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/googleplay.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/appstore.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/suggestChangeIcon.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/createImprovementIcon.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Data Structures",
            "Algorithms",
            "Python",
            "Java",
            "C",
            "C++",
            "JavaScript",
            "Android Development",
            "SQL",
            "Data Science",
            "Machine Learning",
            "PHP",
            "Web Development",
            "System Design",
            "Tutorial",
            "Technical Blogs",
            "Interview Experience",
            "Interview Preparation",
            "Programming",
            "Competitive Programming",
            "Jobs",
            "Coding Contests",
            "GATE CSE",
            "HTML",
            "CSS",
            "React",
            "NodeJS",
            "Placement",
            "Aptitude",
            "Quiz",
            "Computer Science",
            "Programming Examples",
            "GeeksforGeeks Courses",
            "Puzzles",
            "SSC",
            "Banking",
            "UPSC",
            "Commerce",
            "Finance",
            "CBSE",
            "School",
            "k12",
            "General Knowledge",
            "News",
            "Mathematics",
            "Exams"
        ],
        "tags": null,
        "authors": [
            "GeeksforGeeks"
        ],
        "publish_date": "2022-01-31T12:00:37",
        "summary": "",
        "meta_description": "A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.",
        "meta_lang": "en",
        "meta_favicon": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_favicon.png",
        "meta_site_name": "GeeksforGeeks",
        "canonical_link": "https://www.geeksforgeeks.org/servlet-crud-operation-with-example/",
        "text": "CRUD means Create, Read, Update and Delete. These are the basic important operations carried out on the Database and in applications. We will build a simple User registration application using a Servlet, MYSQL, and JDBC for demonstration. In this example, we will be able to create users, read users, update users and delete users.\n\nTechnology tools:\n\nMySQL(workbench) Database\n\nIDE(Intellij)\n\nApache Tomcat(I used the Tomcat 9 version).\n\nFirst, we download Apache Tomcat from download Apache Tomcat, Extract into your working directory.\n\nThen we create a new project, am naming it app user. Usually, there are two approaches to this, the first is to create your project from the Database and the other one is to create the application first then set up the Database. In this article, we will be starting our project from the Database. So, let us set up our database, in this example am making use of MYSQL, check the image below for the demonstration on how to set up the database.\n\nAfter that we set up our project, for this example am using Intellij IDE,\n\nCreate a new project by selecting File( it will show you various options)\n\nSelect New, then project\n\nClick on Java Enterprise and choose web application as your project Template\n\nSetting Up Application server\n\nSelect the application and choose new\n\nSelect Tomcat base directory(The one saved in your working directory)\n\nThis is what the project structure will look like:\n\nThe coding aspect. First, we create a model class called User, which is a simple POJO class;\n\nUser.java\n\nThen we create a class that helps to perform CRUD operations on our database,\n\nUserDaoHandler.java\n\nAfter, we create our Servlet classes, each servlet class for the Create user, Update user, Read user, and Delete User from the database. Here are the classes;\n\nAdd User Servlet:\n\nThis method does a post method, it collects users’ information and adds it to the database, in this example, we are making use of “username”, “password” and “userId” as the field to be saved into the database.\n\nAddUser.java for adding users to the database.\n\nUpdate User Servlet:\n\nThis method gets the user id and matches it to the one in the database, then does an update on it.\n\nUpdateUser.java\n\nThe Patch Method:\n\nThis method simply exchanges information on the database to the input parameters gotten from the web page and saves it into the database.\n\nPatchUser.java\n\nView user Servlet:\n\nThis method gets all users from the database and displays it in a simple table format.\n\nViewUser.java\n\nDelete Servlet:\n\nThe method below deletes the user from the database and sends the user view response, displaying the current users in the database.\n\nDeleteUser.java\n\nOutput:\n\nThe Java servlet renders the Java server page anytime a user calls."
    }
}