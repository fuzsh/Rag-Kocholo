{
    "id": "correct_subsidiary_00127_3",
    "rank": 44,
    "data": {
        "url": "https://www.nsbasic.com/palm/info/kudos3.html",
        "read_more_link": "",
        "language": "en",
        "title": "Other development tools considered",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.nsbasic.com/images/nsblogo2.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Here are my main gripes with the other packages. By the way, I happen to own several. I have been writing programs on the pda since 1998, so I have a little practice at it.\n\nAlso, I make my living based on the programs that I sell. Mostly Field Service applications. So, I need my tool to work for me and to progress over time. Actually, we create full scale, multi-tiered client server programs. We use both the hotsync for local synchronization via cradle and Scout Sync for remote syncs via cell phones in the field. On the back end, we always have MSSql server, Oracle or DB2.\n\nHere is the story in case you guys want to hear it. Its a little long, but its worth mentioning.\n\nI have tried most of the tools out there over the years and I will give you my opinions. I currently have several applictions, some rather involved, using sat forms and/or appforge. I even use the Scout sync from Aether to sync multiple palms simultaneously over the internet. I have lots of money invested in this because it is how I make my living. So please understand that there is a lot of merit with what I am about to tell you.\n\nPendragon forms is cheap and easy to work with. It is very capable but is the low end development tool. If your requirments are simple, will stay simple and you are not the most experienced programmer, then it is a good choice. I started with this one but had to move up because my requirements became more sophisticated. This is not a high end tool.\n\nThen I moved to SatForms, version 2 at the time. It was 1998 then. It was good and the programming model was more traditional. There were a lot of bugs initially, but they worked them all out. I still primarily use it. The performance is really good considering that it is an interpreted language. The real benefit is the sfx controls you get from www.palmdatapro.com. Why build features when you can buy them. And its cheap to buy the controls. But, SatForms itself is now expensive, the support is amongst the worst I have ever experienced. But this was a while ago. It was so bad that I determined that I would never attempt to call for support ever again. This bad support trend started when Pumatech bought the product from SoftMagic. But a more stable product means that support is no longer needed. With the scripting language, you can code around most things. SatForms in an excellent tool in my opinion.\n\nSo I stayed with SatForms for the past 4+ years, all the time cursing the lack of support and communication from Pumatech.\n\nAt one point I was so frustrated with the support at Pumatech that I tried everything possible to get away from them. It was quite uncomfortable for me to base my living off of a product that had so many bugs and a support staff that was largely unresponsive (again, this has probably changed). So I bought NSBasic 2. It was and still is great. I would rank it almost even with SatForms in terms of capability and ease of use. As far as support goes, the NSBasic crew provides an unbelievable level of support and response, including issuing patches to fix problems. In all my days, I have never seen any company stand by their product like they do. But, Satforms and NSBasic are so much alike, that it was not worth my while to switch. My apps have anywhere from 35-70 tables and forms and there would be no benefit to changing. If I were starting something new and did not want to spend $1000 on a development tool, there is absolutely no doubt that I would go with NSBasic. It it better than Satforms today because it fully supports color and it supports all versions of the palm os including palm os 5.\n\nAppforge has all the external appearances of a company that has their finger on the pulse. They have a truly unique cross platform development tool for palm, pocketpc's, nokia, etc. They have an enormous runtime but that is only an issue for older devices with only 2mb of memory. It is large but you never seem to run out of space. They have a set of user interface controls that is excellent. They have Fancy grids, dropdown boxes, etc... and they use custom fonts. SatForms and NSBasic uses only the standard palmos fonts and controls. Your user interface will always be much more attractive using appforge. BUT, the external appearance fades quickly because you cannot code to the palm os 5 devices. Appforge charges a runtime, which is ok for me since all of my apps are commercial and I roll the costs in to my product price. Its usually 10-25$ per device. For palm os prior to 5, Appforge somehow got palm to pay them money so that they wouldn't charge developers for it. So, we never paid for runtimes on palm devices, only the others. With palm os 5, AppForge is trying to hijack Palm Inc. into making another payment to support the the tungsten device. Obviously palm refused. Therefore, appforge is now telling everyone that they cannot support palm os 5 devices because Palm Inc has not agreed to pay the fee. So, as good and as powerful as appforge is, it is USELESS because it lacks support for the new palm pilots. I would rather that they make the runtime available for a fee so some of us could get our work done. I have just finished converting my appforge application to SatForms so that I can run it on palm os 5. I probably won't take another look at appforge ever again. (money wasted)\n\nSo, I ported all of my AppForge programs back to SatForms because I was most familiar with it.\n\nAll of my customers are companies that tend to have older equipment (palm 3's and palm os 3.0.1). One of them bought a Tungsten device. Well, the version of Sat Forms that I was using did not support Palm OS 5. So I purchased an upgrade for $695 and converted my program. I installed it on the new device. It worked fine, but then I lost support for all my devices palm os 3.5 and lower. There was no backwards compatibility. To top it off, there were annoying little bugs that were not evident upon first using it. Naturally, Pumatech issued a email to everyone letting them know that there were known bugs and that they would send out a patch by the end of the month. It is not good for a guy like me to have bugs out there, but I had no choice. To make the customer happy, I went out and purchased 3 Palm M505 for them to temporarily use since these devices still ran on Palm os 4.1. Then I rolled back the version of SatForms to use. (I was trying to save face at this point, remember, I make my living on these programs that I sell for about $300 per user.) You might think that I could simply have two different PRC's, one for OS5 and one for OS4.1 and below. But that would make me look foolish to my customers. They are bound to load the wrong PRC on the wrong device. It is a support problem waiting to happen.\n\nThat was over three months ago that I started waiting for the next patch to SatForms.\n\nSo there I was with a $1000 appforge package and a $1000 Sat forms package, neither one being either forward or backwards compatible\n\nSat Forms is really an excellent tool and is equivalent to NSBasic is many ways. But do I tell all of my customers to throw away their Palm 3 and Palm 3E devices. What about the Handspring visors that many of them have.\n\nI had been following this group over the years and I realized it had an excellent community of followers and contributors.\n\nSo, I have decided to make the switch and port my applications over. A couple of things prompted the timing on this. 1. I am out of money for buying upgrades for products that don't work. 2. I am \"feature saturated\" on my current programs and am now on a six to 9 month upgrade cycle. I have until the end of the year before I have to roll out a new version. 3. I have sold the source code to my bread and butter program to my biggest client. They are hiring their own programmer and Sat Forms is now their problem. But they will be happy with it for now. 4. I have started development of 2 new applications that I think will be my bread and butter for 2004.\n\nSo I am giving NSBasic a chance. I am also looking forward to building PocketPC programs for the first time. Honestly though, my customers really don't care about devices. They focus on the application running on the device instead of the palm os vs. pocketpc issue. Most of them just think \"pda\". I like palms becuase they are cheaper and easier to use. But I need to have options. NSBasic Palm and NSBasic CE are an attractive combo.\n\nSo, this weekend, I jumped right in and built a small 8 form utility using NSBasic Palm. I figured out the database stuff pretty easily. I even built a large 2000 record table with sample data to test the access speed. It is insantaneous when accessing it by key. I am writing a little more code that I used to with Sat Forms, but that what programmers have to do.\n\nThe look and feel of SatForms programs and NSBasic programs are about the same, so it will not be difficult to build the interfaces that I am used to. I am looking forward to the use of color on the screens. I am really excited about being able to manually load my popup lists manually instead of binding them to a table. I am really looking forward to not having a proprietary pdb format an being able to have palm database that I can easily share between programs. I also look forward to eventually becoming a contributing member of this group (after I learn a little more)\n\nHowever, I will miss the filters and sfx controls with SatForms. I will also miss that Sat Forms had a built in ocx that automatically integrated with the hotsync process. But it is not worth keeping just for those.\n\nThe IDE in Sat Forms has a few little things that I am sure will mature over time. For example, if I get an error during compile, the bad line of code is highlighted, but I cannot type over anything until I click it. (this is insignificant in the grand scheme of things). After one weekend, I can clearly see that NSBasic apps run faster and I have significantly more control over the code.\n\nSo, there is the story. I have been quite successful over the years with sat forms. Me and my family have been eating and our bills are paid. But knowing what I know now, I have decided to transition to a tool that will take me into the future.\n\nI now have to figure out how to build a hotsync process that will allow me to connect to a MSSQLServer database directly. (Any recommendations would save me the trouble of trying them all)\n\nI also have to figure out how to convert the signature string into a windows BMP. I am sure that I will find and example somewhere. (By the way, storing the signature as a string is a genius idea)\n\nExchanging data with corporate databases (local or remote) and signature capture are the keys to selling applications to corporate customers. I now have to figure these things out.\n\nThanks for reading... -- Maurice Dorris"
    }
}