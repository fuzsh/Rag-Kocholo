{
    "id": "correct_subsidiary_00127_1",
    "rank": 4,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Symbian",
        "read_more_link": "",
        "language": "en",
        "title": "Wikipedia",
        "top_image": "https://upload.wikimedia.org/wikipedia/en/9/95/Nokia_Belle_OS_Feature_Pack_2_screenshot.png",
        "meta_img": "https://upload.wikimedia.org/wikipedia/en/9/95/Nokia_Belle_OS_Feature_Pack_2_screenshot.png",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Symbian_logo.svg/250px-Symbian_logo.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/9/95/Nokia_Belle_OS_Feature_Pack_2_screenshot.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/f/fa/Symbian_logo_4.svg/220px-Symbian_logo_4.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Samsung_Omnia_HD_%28i8910%29.png/200px-Samsung_Omnia_HD_%28i8910%29.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/NokiaE61.jpg/200px-NokiaE61.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/Telephone_icon_blue_gradient.svg/28px-Telephone_icon_blue_gradient.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/e/e2/Symbol_portal_class.svg/16px-Symbol_portal_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/d/db/Symbol_list_class.svg/16px-Symbol_list_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2003-03-27T19:53:08+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Symbian",
        "text": "Discontinued mobile operating system\n\nThis article is about the operating system. For other uses, see Symbian (disambiguation).\n\nOperating system\n\nSymbianDeveloperSymbian Ltd. (1998–2008)\n\nSymbian Foundation (2008–11)\n\nNokia (2010–11)\n\nAccenture on behalf of Nokia (2011–13)[1]Written inC++[2]OS familyEPOC (Symbian)Working stateDiscontinuedSource modelProprietary software,[3] formerly Free software (2010–11)Initial release5 June 1997; 27 years ago ( ) (as EPOC32)Final releaseNokia Belle Feature Pack 2 / 2 October 2012; 11 years ago ( )Marketing targetSmartphonesAvailable in48 languages\n\nList of languages\n\nArabic (Arabic, Urdu), Basque, Bulgarian, Catalan, Chinese (Traditional, Simplified), Croatian, Czech, Danish, Dutch, English (UK, US), Estonian, Finnish, French (France, Canada), Galician, German, Greek, Hebrew, Indian (Hindi, Tamil, Marathi), Hungarian, Icelandic, Indonesian, Italian, Japanese, Kazakh, Latvian, Lithuanian, Malay, Norwegian, Persian, Polish, Portuguese (Portugal, Brazil), Romanian, Russian, Serbian, Slovak, Slovene, Spanish (Spain, Latin America), Swedish, Tagalog, Thai, Turkish, Ukrainian, Vietnamese\n\nUpdate methodSymbian Signed certificatesPackage manager.sis, .sisx, .jad, .jarPlatformsARM, x86[4]Kernel typeReal-time microkernel, EKA2Default\n\nuser interfaceS60 (from 2009)LicenseProprietary software,[5] formerly Eclipse PublicOfficial websitesymbian .nokia .com (defunct as of May 2014), symbian .org (defunct as of 2009–10)Support statusUnsupported\n\nSymbian was a mobile operating system (OS) and computing platform designed for smartphones.[6] It was originally developed as a proprietary software OS for personal digital assistants in 1998 by the Symbian Ltd. consortium.[7] Symbian OS is a descendant of Psion's EPOC, and was released exclusively on ARM processors, although an unreleased x86 port existed. Symbian was used by many major mobile phone brands, like Samsung, Motorola, Sony Ericsson, and above all by Nokia. It was also prevalent in Japan by brands including Fujitsu, Sharp and Mitsubishi. As a pioneer that established the smartphone industry, it was the most popular smartphone OS on a worldwide average until the end of 2010, at a time when smartphones were in limited use, when it was overtaken by iOS and Android. It was notably less popular in North America.\n\nThe Symbian OS platform is formed of two components: one being the microkernel-based operating system with its associated libraries, and the other being the user interface (as middleware), which provides the graphical shell atop the OS.[8] The most prominent user interface was the S60 (formerly Series 60) platform built by Nokia, first released in 2002 and powering most Nokia Symbian devices. UIQ was a competing user interface mostly used by Motorola and Sony Ericsson that focused on pen-based devices, rather than a traditional keyboard interface from S60. Another interface was the MOAP(S) platform from carrier NTT DoCoMo in the Japanese market.[9][10] Applications for these different interfaces were not compatible with each other, despite each being built atop Symbian OS. Nokia became the largest shareholder of Symbian Ltd. in 2004 and purchased the entire company in 2008.[11] The non-profit Symbian Foundation was then created to make a royalty-free successor to Symbian OS. Seeking to unify the platform, S60 became the Foundation's favoured interface and UIQ stopped development. The touchscreen-focused Symbian^1 (or S60 5th Edition) was created as a result in 2009. Symbian^2 (based on MOAP) was used by NTT DoCoMo, one of the members of the Foundation, for the Japanese market. Symbian^3 was released in 2010 as the successor to S60 5th Edition, by which time it became fully free software. The transition from a proprietary operating system to a free software project is believed to be one of the largest in history.[12] Symbian^3 received the Anna and Belle updates in 2011.[13][14]\n\nThe Symbian Foundation disintegrated in late 2010 and Nokia took back control of the OS development.[15][16] In February 2011, Nokia, by then the only remaining company still supporting Symbian outside Japan, announced that it would use Microsoft's Windows Phone 7 as its primary smartphone platform, while Symbian would be gradually wound down.[17][18] Two months later, Nokia moved the OS to proprietary licensing, only collaborating with the Japanese OEMs[19] and later outsourced Symbian development to Accenture.[6][20] Although support was promised until 2016, including two major planned updates, by 2012 Nokia had mostly abandoned development and most Symbian developers had already left Accenture,[21] and in January 2014 Nokia stopped accepting new or changed Symbian software from developers.[22] The Nokia 808 PureView in 2012 was officially the last Symbian smartphone from Nokia.[23] NTT DoCoMo continued releasing OPP(S) (Operator Pack Symbian, successor of MOAP) devices in Japan, which still act as middleware on top of Symbian.[24] Phones running this include the F-07F [ja] from Fujitsu and SH-07F [ja] from Sharp in 2014.\n\nHistory[edit]\n\nSymbian originated from EPOC32, an operating system created by Psion in the 1990s. In June 1998, Psion Software became Symbian Ltd., a major joint venture between Psion and phone manufacturers Ericsson, Motorola, and Nokia.\n\nAfterwards, different software platforms were created for Symbian, backed by different groups of mobile phone manufacturers. They include S60 (Nokia, Samsung and LG), UIQ (Sony Ericsson and Motorola) and MOAP(S) (Japanese only such as Fujitsu, Sharp etc.).\n\nWith no major competition in the smartphone OS then (Palm OS and Windows Mobile were comparatively small players), Symbian reached as high as 67% of the global smartphone market share in 2006.[25]\n\nDespite its sizable market share then, Symbian was at various stages difficult to develop for: First (at around early-to-mid-2000s) due to the complexity of then the only native programming languages Open Programming Language (OPL) and Symbian C++, and of the OS; then the stubborn developer bureaucracy, along with high prices of various integrated development environments (IDEs) and software development kits (SDKs), which were prohibitive for independent or very small developers; and then the subsequent fragmentation, which was in part caused by infighting among and within manufacturers, each of which also had their own IDEs and SDKs. All of this discouraged third-party developers, and served to cause the native app ecosystem for Symbian not to evolve to a scale later reached by Apple's App Store or Android's Google Play.\n\nBy contrast, iPhone OS (renamed iOS in 2010) and Android had comparatively simpler design, provided easier and much more centralized infrastructure to create and obtain third-party apps, offered certain developer tools and programming languages with a manageable level of complexity, and having abilities such as multitasking and graphics to meet future consumer demands.\n\nAlthough Symbian was difficult to program for, this issue could be worked around by creating Java Mobile Edition apps, ostensibly under a \"write once, run anywhere\" slogan.[26] This wasn't always the case because of fragmentation due to different device screen sizes and differences in levels of Java ME support on various devices.\n\nIn June 2008, Nokia announced the acquisition of Symbian Ltd., and a new independent non-profit organization called the Symbian Foundation was established. Symbian OS and its associated user interfaces S60, UIQ, and MOAP(S) were contributed by their owners Nokia, NTT DoCoMo, Sony Ericsson, and Symbian Ltd., to the foundation with the objective of creating the Symbian platform as a royalty-free, Free software, under the Free Software Foundation (FSF) and Open Source Initiative (OSI) approved Eclipse Public License (EPL). The platform was designated as the successor to Symbian OS, following the official launch of the Symbian Foundation in April 2009. The Symbian platform was officially made available as Free software in February 2010.[27]\n\nNokia became the major contributor to Symbian's code, since it then possessed the development resources for both the Symbian OS core and the user interface. Since then Nokia maintained its own code repository for the platform development, regularly releasing its development to the public repository.[28] Symbian was intended to be developed by a community led by the Symbian Foundation, which was first announced in June 2008 and which officially launched in April 2009. Its objective was to publish the source code for the entire Symbian platform under the EPL. This was accomplished on 4 February 2010; the Symbian Foundation reported this event to be the largest codebase moved to Free software in history.[27][29]\n\nHowever, some important components within Symbian OS were licensed from third parties, which prevented the foundation from publishing the full source under EPL immediately; instead much of the source was published under a more restrictive Symbian Foundation License (SFL) and access to the full source code was limited to member companies only, although membership was open to any organisation.[30] Also, the Free software Qt framework was introduced to Symbian in 2010, as the primary upgrade path to MeeGo, which was to be the next mobile operating system to replace and supplant Symbian on high-end devices; Qt was by its nature free and very convenient to develop with. Several other frameworks were deployed to the platform, among them Standard C and C++, Python, Ruby, and Adobe Flash Lite. IDEs and SDKs were developed and then released for free, and application software (app) development for Symbian picked up.\n\nIn November 2010, the Symbian Foundation announced that due to changes in global economic and market conditions (and also a lack of support from members such as Samsung[31] and Sony Ericsson), it would transition to a licensing-only organisation;[30] Nokia announced it would take over the stewardship of the Symbian platform. Symbian Foundation would remain the trademark holder and licensing entity and would only have non-executive directors involved.\n\nWith market share sliding from 39% in Q32010 to 31% in Q42010,[32] Symbian was losing ground to iOS and Android quickly, eventually falling behind Android in Q42010.[33] Stephen Elop was appointed the CEO of Nokia in September 2010, and on 11 February 2011, he announced a partnership with Microsoft that would see Nokia adopt Windows Phone as its primary smartphone platform,[34] and Symbian would be gradually phased out, together with MeeGo.[18] As a consequence, Symbian's market share fell, and application developers for Symbian dropped out rapidly. Research in June 2011 indicated that over 39% of mobile developers using Symbian at the time of publication were planning to abandon the platform.[35]\n\nBy 5 April 2011, Nokia ceased to make free any portion of the Symbian software and reduced its collaboration to a small group of preselected partners in Japan.[5] Source code released under the original EPL remains available in third party repositories,[36] including a full set of all public code from the project as of 7 December 2010.[37]\n\nOn 22 June 2011, Nokia made an agreement with Accenture for an outsourcing program. Accenture will provide Symbian-based software development and support services to Nokia through 2016.[20] The transfer of Nokia employees to Accenture was completed on 30 September 2011 and 2,800 Nokia employees became Accenture employees as of October 2011.[6]\n\nNokia terminated its support of software development and maintenance for Symbian with effect from 1 January 2014, thereafter refusing to publish new or changed Symbian applications or content in the Nokia Store and terminating its 'Symbian Signed' program for software certification.[38]\n\nFeatures[edit]\n\nUser interface[edit]\n\nSymbian has had a native graphics toolkit since its inception, known as AVKON (formerly known as Series 60). S60 was designed to be manipulated by a keyboard-like interface metaphor, such as the ~15-key augmented telephone keypad, or the mini-QWERTY keyboards. AVKON-based software is binary-compatible with Symbian versions up to and including Symbian^3.\n\nSymbian^3 includes the Qt framework, which is now the recommended user interface toolkit for new applications. Qt can also be installed on older Symbian devices.\n\nSymbian^4 was planned to introduce a new GUI library framework specifically designed for a touch-based interface, known as \"UI Extensions for Mobile\" or UIEMO (internal project name \"Orbit\"), which was built on top of Qt Widget; a preview was released in January 2010, however in October 2010 Nokia announced that Orbit/UIEMO had been cancelled.\n\nNokia later recommended that developers use Qt Quick with QML, the new high-level declarative UI and scripting framework for creating visually rich touchscreen interfaces that allowed development for both Symbian and MeeGo; it would be delivered to existing Symbian^3 devices as a Qt update. When more applications gradually feature a user interface reworked in Qt, the legacy S60 framework (AVKON) would be deprecated and no longer included with new devices at some point, thus breaking binary compatibility with older S60 applications.[39][40]\n\nBrowser[edit]\n\nMain articles: S60 browser and Opera Mobile\n\nSymbian^3 and earlier have a built-in WebKit based browser. Symbian was the first mobile platform to make use of WebKit (in June 2005).[41] Some older Symbian models have Opera Mobile as their default browser.\n\nNokia released a new browser with the release of Symbian Anna with improved speed and an improved user interface.[42]\n\nMultiple language support[edit]\n\nSymbian had strong localization support enabling manufacturers and 3rd party application developers to localize Symbian based products to support global distribution. Nokia made languages available in the device, in language packs: a set of languages which cover those commonly spoken in the area where a device variant is to be sold. All language packs have in common English, or a locally relevant dialect of it. The last release, Symbian Belle, supports these 48 languages, with [dialects], and (scripts):\n\nSymbian Belle marks the introduction of Kazakh, while Korean is no longer supported.\n\nJapanese is only available on Symbian^2 devices as they are made in Japan, and on other Symbian devices Japanese is still supported with limitations.\n\nApplication development[edit]\n\nFrom 2010, Symbian switched to using standard C++ with Qt as the main SDK, which can be used with either Qt Creator or Carbide.c++. Qt supports the older Symbian/S60 3rd (starting with Feature Pack 1, a.k.a. S60 3.1) and Symbian/S60 5th Edition (a.k.a. S60 5.01b) releases, as well as the new Symbian platform. It also supports Maemo and MeeGo, Windows, Linux and Mac OS X.[43][44]\n\nAlternative application development can be done using Python (see Python for S60), Adobe Flash Lite or Java ME.\n\nSymbian OS previously used a Symbian specific C++ version, along with CodeWarrior and later Carbide.c++ integrated development environment (IDE), as the native application development environment.\n\nWeb Runtime (WRT) is a portable application framework that allows creating widgets on the S60 Platform; it is an extension to the S60 WebKit based browser that allows launching multiple browser instances as separate JavaScript applications.[45][46]\n\nApplication development[edit]\n\nQt[edit]\n\nAs of 2010, the SDK for Symbian is standard C++, using Qt. It can be used with either Qt Creator, or Carbide (the older IDE previously used for Symbian development).[43][47] A phone simulator allows testing of Qt apps. Apps compiled for the simulator are compiled to native code for the development platform, rather than having to be emulated.[48] Application development can either use C++ or QML.\n\nSymbian C++[edit]\n\nAs Symbian OS is written in C++ using Symbian Software's coding standards, it is possible to develop using Symbian C++, although it is not a standard implementation. Before the release of the Qt SDK, this was the standard development environment. There were multiple platforms based on Symbian OS that provided software development kits (SDKs) for application developers wishing to target Symbian OS devices, the main ones being UIQ and S60. Individual phone products, or families, often had SDKs or SDK extensions downloadable from the maker's website too.\n\nThe SDKs contain documentation, the header files and library files needed to build Symbian OS software, and a Windows-based emulator (\"WINS\"). Up until Symbian OS version 8, the SDKs also included a version of the GNU Compiler Collection (GCC) compiler (a cross-compiler) needed to build software to work on the device.\n\nSymbian OS 9 and the Symbian platform use a new application binary interface (ABI) and needed a different compiler. A choice of compilers is available including a newer version of GCC (see external links below).\n\nSymbian C++ programming has a steep learning curve, as Symbian C++ requires the use of special techniques such as descriptors, active objects and the cleanup stack. This can make even relatively simple programs initially harder to implement than in other environments. It is possible that the techniques, developed for the much more restricted mobile hardware and compilers of the 1990s, caused extra complexity in source code because programmers are required to concentrate on low-level details instead of more application-specific features. As of 2010, these issues are no longer the case when using standard C++, with the Qt SDK.\n\nSymbian C++ programming is commonly done with an integrated development environment (IDE). For earlier versions of Symbian OS, the commercial IDE CodeWarrior for Symbian OS was favoured. The CodeWarrior tools were replaced during 2006 by Carbide.c++, an Eclipse-based IDE developed by Nokia. Carbide.c++ is offered in four different versions: Express, Developer, Professional, and OEM, with increasing levels of capability. Fully featured software can be created and released with the Express edition, which is free. Features such as UI design, crash debugging etc. are available in the other, charged-for, editions. Microsoft Visual Studio 2003 and 2005 are also supported via the Carbide.vs plugin.\n\nOther languages[edit]\n\nSymbian devices can also be programmed using Python, Java ME, Flash Lite, Ruby, .NET, Web Runtime (WRT) Widgets and Standard C/C++.[49]\n\nVisual Basic programmers can use NS Basic to develop apps for S60 3rd Edition and UIQ 3 devices.\n\nIn the past, Visual Basic, Visual Basic .NET, and C# development for Symbian were possible through AppForge Crossfire, a plug-in for Microsoft Visual Studio. On 13 March 2007 AppForge ceased operations; Oracle purchased the intellectual property, but announced that they did not plan to sell or provide support for former AppForge products. Net60, a .NET compact framework for Symbian, which is developed by redFIVElabs, is sold as a commercial product. With Net60, VB.NET, and C# (and other) source code is compiled into an intermediate language (IL) which is executed within the Symbian OS using a just-in-time compiler. (As of 18 January 2010, RedFiveLabs has ceased development of Net60 with this announcement on their landing page: \"At this stage we are pursuing some options to sell the IP so that Net60 may continue to have a future.\")\n\nThere is also a version of a Borland IDE for Symbian OS. Symbian development is also possible on Linux and macOS using tools and methods developed by the community, partly enabled by Symbian releasing the source code for key tools. A plug-in that allows development of Symbian OS applications in Apple's Xcode IDE for Mac OS X was available.[50]\n\nJava ME applications for Symbian OS are developed using standard techniques and tools such as the Sun Java Wireless Toolkit (formerly the J2ME Wireless Toolkit). They are packaged as JAR (and possibly JAD) files. Both CLDC and CDC applications can be created with NetBeans. Other tools include SuperWaba, which can be used to build Symbian 7.0 and 7.0s programs using Java.\n\nNokia S60 phones can also run Python scripts when the interpreter Python for S60 is installed, with a custom made API that allows for Bluetooth support and such. There is also an interactive console to allow the user to write Python scripts directly from the phone.\n\nDeployment[edit]\n\nOnce developed, Symbian applications need to find a route to customers' mobile phones. They are packaged in SIS files which may be installed over-the-air, via PC connect, Bluetooth or on a memory card. An alternative is to partner with a phone manufacturer and have the software included on the phone itself. Applications must be Symbian Signed for Symbian OS 9.x to make use of certain capabilities (system capabilities, restricted capabilities and device manufacturer capabilities).[51] Applications could be signed for free in 2010.[52]\n\nArchitecture[edit]\n\nTechnology domains and packages[edit]\n\nSymbian's design is subdivided into technology domains,[53] each of which comprises a set of software packages.[54] Each technology domain has its own roadmap, and the Symbian Foundation has a team of technology managers who manage these technology domain roadmaps.\n\nEvery package is allocated to exactly one technology domain, based on the general functional area to which the package contributes and by which it may be influenced. By grouping related packages by themes, the Symbian Foundation hopes to encourage a strong community to form around them and to generate discussion and review.\n\nThe Symbian System Model[55] illustrates the scope of each of the technology domains across the platform packages.\n\nPackages are owned and maintained by a package owner, a named individual from an organization member of the Symbian Foundation, who accepts code contributions from the wider Symbian community and is responsible for package.\n\nSymbian kernel[edit]\n\nThe Symbian kernel (EKA2) supports sufficiently fast real-time response to build a single-core phone around it – that is, a phone in which a single processor core executes both the user applications and the signalling stack.[56] The real-time kernel has a microkernel architecture containing only the minimum, most basic primitives and functionality, for maximum robustness, availability and responsiveness. It has been termed a nanokernel, because it needs an extended kernel to implement any other abstractions. It contains a scheduler, memory management and device drivers, with networking, telephony, and file system support services in the OS Services Layer or the Base Services Layer. The inclusion of device drivers means the kernel is not a true microkernel.\n\nDesign[edit]\n\nSymbian features pre-emptive multitasking and memory protection, like other operating systems (especially those created for use on desktop computers). EPOC's approach to multitasking was inspired by VMS and is based on asynchronous server-based events.\n\nSymbian OS was created with three systems design principles in mind:\n\nthe integrity and security of user data is paramount\n\nuser time must not be wasted\n\nall resources are scarce\n\nTo best follow these principles, Symbian uses a microkernel, has a request-and-callback approach to services, and maintains separation between user interface and engine. The OS is optimised for low-power battery-based devices and for read-only memory (ROM)-based systems (e.g. features like XIP and re-entrancy in shared libraries). The OS, and application software, follows an object-oriented programming design named model–view–controller (MVC).\n\nLater OS iterations diluted this approach in response to market demands, notably with the introduction of a real-time kernel and a platform security model in versions 8 and 9.\n\nThere is a strong emphasis on conserving resources which is exemplified by Symbian-specific programming idioms like descriptors and a cleanup stack. Similar methods exist to conserve storage space. Further, all Symbian programming is event-based, and the central processing unit (CPU) is switched into a low power mode when applications are not directly dealing with an event. This is done via a programming idiom called active objects. Similarly the Symbian approach to threads and processes is driven by reducing overheads.\n\nOperating system[edit]\n\nThe All over Model contains the following layers, from top to bottom:\n\nUI Framework Layer\n\nApplication Services Layer\n\nJava ME\n\nOS Services Layer\n\ngeneric OS services\n\ncommunications services\n\nmultimedia and graphics services\n\nconnectivity services\n\nBase Services Layer\n\nKernel Services & Hardware Interface Layer\n\nThe Base Services Layer is the lowest level reachable by user-side operations; it includes the File Server and User Library, a Plug-In Framework which manages all plug-ins, Store, Central Repository, DBMS and cryptographic services. It also includes the Text Window Server and the Text Shell: the two basic services from which a completely functional port can be created without the need for any higher layer services.\n\nSymbian has a microkernel architecture, which means that the minimum necessary is within the kernel to maximise robustness, availability and responsiveness. It contains a scheduler, memory management and device drivers, but other services like networking, telephony and file system support are placed in the OS Services Layer or the Base Services Layer. The inclusion of device drivers means the kernel is not a true microkernel. The EKA2 real-time kernel, which has been termed a nanokernel, contains only the most basic primitives and requires an extended kernel to implement any other abstractions.\n\nSymbian is designed to emphasise compatibility with other devices, especially removable media file systems. Early development of EPOC led to adopting File Allocation Table (FAT) as the internal file system, and this remains, but an object-oriented persistence model was placed over the underlying FAT to provide a POSIX-style interface and a streaming model. The internal data formats rely on using the same APIs that create the data to run all file manipulations. This has resulted in data-dependence and associated difficulties with changes and data migration.\n\nThere is a large networking and communication subsystem, which has three main servers called: ETEL (EPOC telephony), ESOCK (EPOC sockets) and C32 (responsible for serial communication). Each of these has a plug-in scheme. For example, ESOCK allows different \".PRT\" protocol modules to implement various networking protocol schemes. The subsystem also contains code that supports short-range communication links, such as Bluetooth, IrDA and USB.\n\nThere is also a large volume of user interface (UI) Code. Only the base classes and substructure were contained in Symbian OS, while most of the actual user interfaces were maintained by third parties. This is no longer the case. The three major UIs – S60, UIQ and MOAP – were contributed to Symbian in 2009. Symbian also contains graphics, text layout and font rendering libraries.\n\nAll native Symbian C++ applications are built up from three framework classes defined by the application architecture: an application class, a document class and an application user interface class. These classes create the fundamental application behaviour. The remaining needed functions, the application view, data model and data interface, are created independently and interact solely through their APIs with the other classes.\n\nMany other things do not yet fit into this model – for example, SyncML, Java ME providing another set of APIs on top of most of the OS and multimedia. Many of these are frameworks, and vendors are expected to supply plug-ins to these frameworks from third parties (for example, Helix Player for multimedia codecs). This has the advantage that the APIs to such areas of functionality are the same on many phone models, and that vendors get a lot of flexibility. But it means that phone vendors needed to do a great deal of integration work to make a Symbian OS phone.\n\nSymbian includes a reference user-interface called \"TechView.\" It provides a basis for starting customisation and is the environment in which much Symbian test and example code runs. It is very similar to the user interface from the Psion Series 5 personal organiser and is not used for any production phone user interface.\n\nSymbian UI variants, platforms[edit]\n\nSymbian, as it advanced to OS version 7.0, spun off into several different graphical user interfaces, each backed by a certain company or group of companies. Unlike Android OS's cosmetic GUIs, Symbian GUIs are referred to as \"platforms\" due to more significant modifications and integrations. Things became more complicated when applications developed for different Symbian GUI platforms were not compatible with each other, and this led to OS fragmentation.[57]\n\nUser Interfaces platforms that run on or are based on Symbian OS include:\n\nS60, Symbian, also called Series 60. It was backed mainly by Nokia. There are several editions of this platform, appearing first as S60 (1st Edition) on Nokia 7650. It was followed by S60 2nd Edition (e.g. Nokia N70), S60 3rd Edition (e.g. Nokia N73) and S60 5th Edition (which introduced touch UI e.g. Nokia N97). The name, S60, was changed to just Symbian after the formation of Symbian Foundation, and subsequently called Symbian^1, 2 and 3.\n\nSeries 80 used by Nokia Communicators such as Nokia 9300i.\n\nSeries 90 Touch and button based. The only phone using this platform is Nokia 7710.\n\nUIQ backed mainly by Sony Ericsson and then Motorola. It is compatible with both buttons and touch/stylus based inputs. The last major release version is UIQ3.1 in 2008, on Sony Ericsson G900. It was discontinued after the formation of Symbian Foundation, and the decision to consolidate different Symbian UI variants into one led to the adoption of S60 as the version going forward.[58]\n\nMOAP (Mobile Oriented Applications Platform) [Japan Only] used by Fujitsu, Mitsubishi, Sony Ericsson and Sharp-developed phones for NTT DoCoMo. It uses an interface developed specifically for DoCoMo's FOMA \"Freedom of Mobile Access\" network brand and is based on the UI from earlier Fujitsu FOMA models. The user cannot install new C++ applications. (Japan Only)\n\nOPP [Japan Only], successor of MOAP, used on NTT DoCoMo's FOMA phone.\n\nVersion comparison[edit]\n\nFeature Symbian^3/Anna/Belle Symbian^2 Symbian^1/Series 60 5th Edition Series 60 3rd Edition UIQ (2.0) Series 80 Year released 2010 (Symbian^3), 2011 (Symbian Anna, Nokia Belle) 2010 (Japan only with MOAP/OPP middleware) 2008 2006 2002 2001 Company Symbian Foundation, later Nokia Symbian Foundation Symbian Foundation Nokia UIQ Technology Nokia Symbian OS version 9.5 (Symbian^3/Symbian Anna), 10.1 (Nokia Belle) ? 9.4 9.3 Series 60 version 5.2 (Symbian^3/Symbian Anna),[59] 5.3 (Nokia Belle), 5.4 (Nokia Belle FP1) 5.1 5th Edition 3rd Edition Feature Pack 2 N/A N/A Touch input support Yes Yes Yes No Yes No Multi touch input support Yes No No No No Number of customizable home screens Three to six (Five on Nokia E6 and Nokia 500, six on Nokia Belle) One Two One Wi-Fi version support B, G, N B, G B, G B, G B, G USB on the go support Yes No No DVB-H support Yes, with extra headset[60] Un­known, but have 1seg support[61] Yes, with extra headset Yes, with extra headset Short range FM transmitter support Yes Yes Yes No No FM radio support Yes ? Yes Yes Yes No External Storage Card Support MicroSD, up to 32GB MicroSD MicroSD MicroSD, MiniSD Memory Stick, MicroSD, MultiMedia Card MultiMedia Card Adobe Flash support Yes, Flash Lite native version 4.0, upgradable Yes, Flash Lite native version 3.1, upgradable Yes, Flash Lite native version 3.1, upgradable Yes, Flash native version 6, not upgradable Microsoft Silverlight support No[62][citation needed] Yes[63][64] No[65][citation needed] No OpenGL ES support Yes, version 2.0 No SQLite support Yes Yes Yes[66] CPU architecture support ARM SH-Mobile ARM ARM ARM Programmed in C++, Qt ? C++, Qt C++, Qt License Eclipse Public License;\n\nSince 31 March 2011: Nokia Symbian License 1.0 proprietary SFL license, while some portions of source code are EPL licensed. Public issues list No more Package manager .sis, .sisx ? .sis, .sisx .sis, .sisx .sis, .sisx .sis, .sisx Non English languages support Yes mainly Japanese Yes Yes Yes Yes Underlining spell checker Yes Yes[67] Yes Yes Keeps state on shutdown or crash No No No No Internal search Yes Yes[61] Yes Yes Yes Yes Proxy server Yes ? Yes Yes Yes Yes On-device encryption Yes Yes[61] Yes Yes Cut, copy, and paste support Yes Yes[67] Yes Yes Yes Yes Undo No No Yes Yes Yes Default Web Browser for S60, WebKit engine version 7.2, engine version 525 (Symbian^3);[68] version 7.3, engine version 533.4 (Symbian Anna) version 7.1.4, engine version 525; version 7.3, engine version 533.4 (for 9 selected units after firmware updates released in summer 2011) engine version 413 (Nokia N79) N/A N/A Official App Store Nokia Ovi Store i-αppli/i-Widget[67] Nokia Ovi Store, Sony Ericsson PlayNow Arena Nokia Ovi Store, Download! Email sync protocol support POP3, IMAP i-mode mail[67] POP3, IMAP POP3, IMAP POP3, IMAP POP3, IMAP NFC Support Yes No No No No No Push alerts Yes Yes Yes Yes Yes Voice recognition Yes Yes Yes Yes Tethering USB, Bluetooth; mobile Wi-Fi hotspot, with third-party software USB, Bluetooth; mobile Wi-Fi hotspot, with third-party software USB, Bluetooth; mobile Wi-Fi hotspot, with third-party software USB, Bluetooth; Text, document support Mobile Office Applications, PDF Mobile Office Applications, PDF Mobile Office Applications, PDF Mobile Office Applications, PDF Mobile Office Applications, PDF Mobile Office Applications, PDF Audio playback All wma,[61] aac[citation needed] All All wav, mp3 Video playback H.263, H.264, WMV, MPEG4, MPEG4@ HD 720p 25–30 frames/s, MKV, DivX, XviD WMV,[67] MPEG4[citation needed] H.263, WMV, MPEG4, 3GPP, 3GPP2 H.263, WMV, MPEG4, 3GPP, 3GPP2 H.263, 3GPP, 3GPP2 Turn-by-turn GPS Yes, with third-party software, or Nokia Maps Yes, with monthly paid Docomo Map Navi[69] (ドコモ地図ナビ[70]) Yes, with third-party software, or Nokia Maps Yes, with third-party software, or Nokia Maps Yes, with third-party software Video out Nokia AV (3.5mm), PAL, NTSC, HDMI, DLNA via Nokia Play To HDMI, and Nokia AV (3.5mm), PAL, NTSC Nokia AV (3.5mm), PAL, NTSC No Multitasking Yes Yes Yes Yes Yes Yes Desktop interactive widgets Yes Yes Yes No Integrated hardware keyboard Yes Yes Yes Yes Yes Yes Bluetooth keyboard Yes Yes[61] Yes Yes Yes Video conference front video camera Yes Yes Yes Yes Yes Yes Can share data via Bluetooth with all devices Yes Yes Yes Yes Yes Yes Skype, third-party software Yes[71] Yes[71] Yes[71] Facebook IM chat Yes ? Yes Yes Secure Shell (SSH) Yes, third-party software Yes, third-party software Yes, third-party software OpenVPN No, Nokia VPN can be used No, Nokia VPN can be used No, Nokia VPN can be used Yes, third-party software Remote frame buffer ? Screenshot Yes, third-party software[72] Yes, third-party software[72] Yes, third-party software[72] Yes Yes GPU acceleration Yes No Official SDK platform(s) Cross-platform, Windows (preferred is Qt), Carbide.c++, Java ME, Web Runtime Widgets, Flash Lite, Python for Symbian Cross-platform, Windows (preferred is Qt), Carbide.c++, Java ME, Web Runtime Widgets, Flash Lite, Python for Symbian Cross-platform, Windows (preferred is Qt), Carbide.c++, Java ME, Web Runtime Widget, Flash Lite, Python for Symbian Cross-platform, Windows (preferred is Qt), Carbide.c++, Java ME, third-party software (OPL) Status of updates ▲ Discontinued ? Discontinued Discontinued Discontinued Discontinued First device(s) Nokia N8 (Symbian^3), Nokia C7 (Symbian^3), Nokia X7, Nokia E6 (Anna), Nokia 603, Nokia 700, Nokia 701 (Belle) NTT DOCOMO STYLE Series F-07B Nokia 5800 (2 October 2008) Nokia N96, Nokia N78, Nokia 6210 Navigator and Nokia 6220 Classic (11 February 2008) Sony Ericsson P800 Nokia 9210 Devices Nokia N8, Nokia C6-01, Nokia C7-00, Nokia E7-00, Nokia E6, Nokia X7, Nokia 500, Nokia 603, Nokia 600 (cancelled), Nokia 700, Nokia 701, Nokia 808 PureView NTT DoCoMo: F-06B*,[73] F-07B*,[73] F-08B*,[73] SH-07B†,[73] F-10B,[74] Raku-Raku Phone 7,[74] F-01C*,[75] F-02C*,[75] F-03C*,[75] F-04C*,[75] F-05C*,[75] SH-01C†,[75] SH-02C†,[75] SH-04C†,[75] SH-05C†,[75] SH-06C†,[75] Touch Wood SH-08C†[75] Nokia: 5228, 5230, 5233, 5235, 5250, 5530 XpressMusic, 5800 XpressMusic, 5800 Navigation Edition, C5-03, C6-00, N97, N97 mini, X6;\n\nSamsung: i8910 Omnia HD,[76]\n\nSony Ericsson: Satio, Vivaz, Vivaz Pro\n\nNokia: 5320 XpressMusic, 5630 XpressMusic, 5730 XpressMusic, 6210 Navigator, 6220 Classic, 6650 fold, 6710 Navigator, 6720 Classic, 6730 Classic, 6760 Slide, 6790 Surge, E5-00, E51, E52, E55, E71, E72, E75, N78, N79, N82, N85, N86 8MP, N96, X5, C5-00;\n\nSamsung: GT-i8510 (INNOV8), GT-i7110 (Pilot), SGH-L870, SGH-i550, SGH-G810 Sony Ericsson ...\n\nMotorola ... Nokia 9210, Nokia 9300, Nokia 9300i, Nokia 9500 Latest firmware name Nokia Belle Feature Pack 2/ Belle Refresh Symbian^2 Symbian^1/Series 60 5th Edition Series 60 3rd Edition Feature Pack 2 UIQ ? Series 80\n\n* Manufactured by Fujitsu\n\n† Manufactured by Sharp\n\n▲ Software update service for Nokia Belle and Symbian (S60) phones is discontinued at the end of December 2015\n\nMarket share and competition[edit]\n\nIn Q1 2004 2.4 million Symbian phones were shipped, double the number as in Q1 2003. Symbian Ltd. was particularly impressed by progress made in Japan.[77]\n\n3.7 million devices were shipped in Q3 2004, a growth of 201% compared to Q3 2003 and market share growing from 30.5% to 50.2%. However, in the United States it was much less popular, with a 6% market share in Q3 2004, well behind Palm OS (43%) and Windows Mobile (25%). This has been attributed to North American customers preferring wireless PDAs over smartphones, as well as Nokia's low popularity there.[78]\n\nOn 16 November 2006, the 100 millionth smartphone running the OS was shipped.[79] As of 21 July 2009, more than 250 million devices running Symbian OS had been produced.[80]\n\nIn 2006, Symbian had 73% of the smartphone market,[81] compared with 22.1% of the market in the second quarter of 2011.[82]\n\nBy the end of May 2006, 10 million Symbian-powered phones were sold in Japan, representing 11% of Symbian's total worldwide shipments of 89 million.[83] By November 2007 the figure was 30 million, achieving a market share of 65% by June 2007 in the Japanese market.[84]\n\nSymbian has lost market share over the years as the market has dramatically grown, with new competing platforms entering the market, though its sales have increased during the same timeframe. E.g., although Symbian's share of the global smartphone market dropped from 52.4% in 2008 to 47.2% in 2009, shipments of Symbian devices grew 4.8%, from 74.9 million units to 78.5 million units.[85] From Q2 2009 to Q2 2010, shipments of Symbian devices grew 41.5%, by 8.0 million units, from 19,178,910 units to 27,129,340; compared to an increase of 9.6 million units for Android, 3.3 million units for RIM, and 3.2 million units for Apple.[86]\n\nPrior reports on device shipments as published in February 2010 showed that the Symbian devices formed a 47.2% share of the smart mobile devices shipped in 2009, with RIM having 20.8%, Apple having 15.1% (via iOS), Microsoft having 8.8% (via Windows CE and Windows Mobile) and Android having 4.7%.[85]\n\nIn the number of \"smart mobile device\" sales, Symbian devices were the market leaders for 2010. Statistics showed that Symbian devices formed a 37.6% share of smart mobile devices sold, with Android having 22.7%, RIM having 16%, and Apple having 15.7% (via iOS).[87] Some estimates indicate that the number of mobile devices shipped with the Symbian OS up to the end of Q2 2010 is 385 million.[88]\n\nOver the course of 2009–10, Motorola, Samsung, LG, and Sony Ericsson announced their withdrawal from Symbian in favour of alternative platforms including Google's Android, Microsoft's Windows Phone.[89][90][91][92]\n\nIn Q2 2012, according to IDC worldwide market share has dropped to an all-time low of 4.4%.[93]\n\nCriticism[edit]\n\nThe users of Symbian in the countries with non-Latin alphabets (such as Russia, Ukraine and others) have been criticizing the complicated method of language switching for many years.[94] For example, if a user wants to type a Latin letter, they must call the menu, click the languages item, use arrow keys to choose, for example, the English language from among many other languages, and then press the 'OK' button. After typing the Latin letter, the user must repeat the procedure to return to their native keyboard. This method slows down typing significantly. In touch-phones and QWERTY phones the procedure is slightly different but remains time-consuming. All other mobile operating systems, as well as Nokia's S40 phones, enable switching between two initially selected languages by one click or a single gesture.\n\nEarly versions of the firmware for the original Nokia N97, running on Symbian^1/Series 60 5th Edition have been heavily criticized as buggy (also contributed by the low amount of RAM installed in the phone).[95]\n\nIn November 2010, Smartphone blog All About Symbian criticized the performance of Symbian's default web browser and recommended the alternative browser Opera Mobile.[96] Nokia's Senior Vice President Jo Harlow promised an updated browser in the first quarter of 2011.[97]\n\nThere are many different versions and editions of Symbian, which led to fragmentation. Apps and software may be incompatible when installed across different versions of Symbian.[98]\n\nMalware[edit]\n\nMain article: Mobile virus\n\nSee also: Mobile security\n\nSymbian OS is subject to a variety of viruses, the best known of which is Cabir. Usually these send themselves from phone to phone by Bluetooth. So far, none have exploited any flaws in Symbian OS. Instead, they have all asked the user whether they want to install the software, with somewhat prominent warnings that it can't be trusted, although some rely on social engineering, often in the form of messages that come with the malware: rogue software purporting to be a utility, game, or some other application for Symbian.\n\nHowever, with a view that the average mobile phone user shouldn't have to worry about security, Symbian OS 9.x adopted a Unix-style capability model (permissions per process, not per object). Installed software is theoretically unable to do damaging things (such as costing the user money by sending network data) without being digitally signed – thus making it traceable. Commercial developers who can afford the cost can apply to have their software signed via the Symbian Signed program. Developers also have the option of self-signing their programs. However, the set of available features does not include access to Bluetooth, IrDA, GSM CellID, voice calls, GPS and few others. Some operators opted to disable all certificates other than the Symbian Signed certificates.\n\nSome other hostile programs are listed below, but all of them still require the input of the user to run.\n\nDrever.A is a malicious SIS file trojan that attempts to disable the automatic startup from Simworks and Kaspersky Symbian Anti-Virus applications.\n\nLocknut.B is a malicious SIS file trojan that pretends to be a patch for Symbian S60 mobile phones. When installed, it drops[clarification needed] a binary that will crash a critical system service component. This will prevent any application from being launched in the phone.\n\nMabir.A is basically Cabir with added MMS functionality. The two are written by the same author,[citation needed] and the code shares many similarities. It spreads using Bluetooth via the same routine as early variants of Cabir. As Mabir.A activates, it will search for the first phone it finds, and starts sending copies of itself to that phone.\n\nFontal.A is an SIS file trojan that installs a corrupted file which causes the phone to fail at reboot. If the user tries to reboot the infected phone, it will be permanently stuck on the reboot screen, and cannot be used without disinfection – that is, the use of the reformat key combination which causes the phone to lose all data. Being a trojan, Fontal cannot spread by itself – the most likely way for the user to get infected would be to acquire the file from untrusted sources, and then install it to the phone, inadvertently or otherwise.\n\nA new form of malware threat to Symbian OS in the form of 'cooked firmware' was demonstrated at the International Malware Conference, Malcon, December 2010, by Indian hacker Atul Alex.[99][100]\n\nBypassing platform security[edit]\n\nSymbian OS 9.x devices can be hacked to remove the platform security introduced in OS 9.1 onwards, allowing users to execute unsigned code.[101] This allows altering system files, and access to previously locked areas of the OS. The hack was criticised by Nokia for potentially increasing the threat posed by mobile viruses as unsigned code can be executed.[102]\n\nVersion history[edit]\n\nVersion Description EPOC16 EPOC16, originally simply named EPOC, was the operating system developed by Psion in the late 1980s and early 1990s for Psion's \"SIBO\" (SIxteen Bit Organisers) devices. All EPOC16 devices featured an 8086-family processor and a 16-bit architecture. EPOC16 was a single-user preemptive multitasking operating system, written in Intel 8086 assembly language and C and designed to be delivered in read-only memory (ROM). It supported a simple programming language named Open Programming Language (OPL) and an integrated development environment (IDE) named OVAL. SIBO devices included the: MC200, MC400, Series 3 (1991–98), Series 3a, Series 3c, Series 3mx, Siena, Workabout, and Workabout mx. The MC400 and MC200, the first EPOC16 devices, shipped in 1989.\n\nEPOC16 featured a primarily monochrome, keyboard-operated graphical interface[103] – the hardware for which it was designed originally had pointer input in the form of a digitiser panel.\n\nIn the late 1990s, the operating system was referred to as EPOC16 to distinguish it from Psion's then-new EPOC32 OS.\n\nEPOC32 (releases 1 to 5) The first version of EPOC32, Release 1 appeared on the Psion Series 5 ROM v1.0 in 1997. Later, ROM v1.1 featured Release 3. (Release 2 was never publicly available.) These were followed by the Psion Series 5mx, Revo / Revo plus, Psion Series 7 / netBook and netPad (which all featured Release 5).\n\nThe EPOC32 operating system, at the time simply referred to as EPOC, was later renamed Symbian OS. Adding to the confusion with names, before the change to Symbian, EPOC16 was often referred to as SIBO to distinguish it from the \"new\" EPOC. Despite the similarity of the names, EPOC32 and EPOC16 were completely different operating systems, EPOC32 being written in C++ from a new codebase with development beginning during the mid-1990s.\n\nEPOC32 was a pre-emptive multitasking, single user operating system with memory protection, which encourages the application developer to separate their program into an engine and an interface. The Psion line of PDAs come with a graphical user interface called EIKON which is specifically tailored for handheld machines with a keyboard (thus looking perhaps more similar to desktop GUIs than palmtop GUIs[104]). However, one of EPOC's characteristics is the ease with which new GUIs can be developed based on a core set of GUI classes, a feature which has been widely explored from Ericsson R380 and onwards.\n\nEPOC32 was originally developed for the ARM family of processors, including the ARM7, ARM9, StrongARM and Intel's XScale, but can be compiled towards target devices using several other processor types.\n\nDuring the development of EPOC32, Psion planned to license EPOC to third-party device manufacturers, and spin off its software division as Psion Software. One of the first licensees was the short-lived Geofox, which halted production with less than 1,000 units sold. Ericsson marketed a rebranded Psion Series 5mx called the MC218, and later created the EPOC Release 5.1 based smartphone, the R380. Oregon Scientific also released a budget EPOC device, the Osaris (notable as the only EPOC device to ship with Release 4).\n\nWork started on the 32-bit version in late 1994.\n\nThe Series 5 device, released in June 1997, used the first iterations of the EPOC32 OS, codenamed \"Protea\", and the \"Eikon\" graphical user interface.\n\nThe Oregon Scientific Osaris was the only PDA to use the ER4.\n\nThe Psion Series 5mx, Psion Series 7, Psion Revo, Diamond Mako, Psion netBook and Ericsson MC218 were released in 1999 using ER5. A phone project was announced at CeBIT, the Phillips Illium/Accent, but did not achieve a commercial release. This release has been retrospectively dubbed Symbian OS 5.\n\nThe first phone using ER5u, the Ericsson R380 was released in November 2000. It was not an open device: software could not be installed. Notably, several never-released Psion prototypes for next generation PDAs, including a Bluetooth Revo successor codenamed Conan, were using ER5u. The 'u' in the name refers to it supporting Unicode.\n\nIn June 1998, Psion Software became Symbian Ltd., a major joint venture between Psion and phone manufacturers Ericsson, Motorola, and Nokia. As of Release 6, EPOC was renamed Symbian OS.\n\nSymbian OS 6.0 and 6.1 The OS was renamed Symbian OS and envisioned as the base for a new range of smartphones. This release is sometimes called ER6. Psion gave 130 key staff to the new company and retained a 31% shareholding in the spin-off.\n\nThe first 'open' Symbian OS phone, the Nokia 9210 Communicator, was released in June 2001. Bluetooth support was added. Almost 500,000 Symbian phones were shipped in 2001, rising to 2.1 million the following year.\n\nDevelopment of different UIs was made generic with a \"reference design strategy\" for either 'smartphone' or 'communicator' devices, subdivided further into keyboard- or tablet-based designs. Two reference UIs (DFRDs or Device Family Reference Designs) were shipped: Quartz and Crystal. The former was merged with Ericsson's Ronneby design and became the basis for the UIQ interface; the latter reached the market as the Nokia Series 80 UI.\n\nLater DFRDs were Sapphire, Ruby, and Emerald. Only Sapphire came to market, evolving into the Pearl DFRD and finally the Nokia Series 60 UI, a keypad-based 'square' UI for the first true smartphones. The first one of them was the Nokia 7650 smartphone (featuring Symbian OS 6.1), which was also the first with a built-in camera, with VGA (0.3 Mpx = 640×480) resolution. Other notable S60 Symbian 6.1 devices are the Nokia 3650, the short lived Sendo X and Siemens SX1, the first and the last Symbian phone from Siemens.\n\nDespite these efforts to be generic, the UI was clearly split between competing companies: Crystal or Sapphire was Nokia, Quartz was Ericsson. DFRD was abandoned by Symbian in late 2002, as part of an active retreat from UI development in favour of headless delivery. Pearl was given to Nokia, Quartz development was spun off as UIQ Technology AB, and work with Japanese firms was quickly folded into the MOAP standard.\n\nSymbian OS 7.0 and 7.0s First shipped in 2003. This is an important Symbian release which appeared with all contemporary user interfaces including UIQ (Sony Ericsson P800, P900, P910, Motorola A925, A1000), Series 80 (Nokia 9300, 9500), Series 90 (Nokia 7710), Series 60 (Nokia 3230, 6260, 6600, 6670, 7610) as well as several FOMA phones in Japan. It also added EDGE support and IPv6. Java support was changed from pJava and JavaPhone to one based on the Java ME standard.\n\nOne million Symbian phones were shipped in Q1 2003, with the rate increasing to one million a month by the end of 2003.\n\nSymbian OS 7.0s was a version of 7.0 special adapted to have greater backward compatibility with Symbian OS 6.x, partly for compatibility between the Communicator 9500 and its predecessor the Communicator 9210.\n\nIn 2004, Psion sold its stake in Symbian. The same year, the first worm for mobile phones using Symbian OS, Cabir, was developed, which used Bluetooth to spread itself to nearby phones. See Cabir and Symbian OS threats.\n\nSymbian OS 8.0 First shipped in 2004, one of its advantages would have been a choice of two different kernels (EKA1 or EKA2). However, the EKA2 kernel version did not ship until Symbian OS 8.1b. The kernels behave more or less identically from user-side, but are internally very different. EKA1 was chosen by some manufacturers to maintain compatibility with old device drivers, while EKA2 was a real-time kernel. 8.0b was deproductised in 2003.\n\nAlso included were new APIs to support CDMA, 3G, two-way data streaming, DVB-H, and OpenGL ES with vector graphics and direct screen access.\n\nSymbian OS 8.1 An improved version of 8.0, this was available in 8.1a and 8.1b versions, with EKA1 and EKA2 kernels respectively. The 8.1b version, with EKA2's single-chip phone support but no additional security layer, was popular among Japanese phone companies desiring the real-time support but not allowing open application installation.\n\nThe first and maybe the most famous smartphone featuring Symbian OS 8.1a was Nokia N90 in 2005, Nokia's first in Nseries.\n\nSymbian OS 9.0 Symbian OS 9.0 was used for internal Symbian purposes only. It was de-productised in 2004. 9.0 marked the end of the road for EKA1. 8.1a is the final EKA1 version of Symbian OS.\n\nSymbian OS has generally maintained reasonable binary code compatibility. In theory the OS was BC from ER1-ER5, then from 6.0 to 8.1b. Substantial changes were needed for 9.0, related to tools and security, but this should be a one-off event. The move from requiring ARMv4 to requiring ARMv5 did not break backwards compatibility.\n\nSymbian OS 9.1 Released early 2005. It includes many new security related features, including platform security module facilitating mandatory code signing. The new ARM EABI binary model means developers need to retool and the security changes mean they may have to recode. S60 platform 3rd Edition phones have Symbian OS 9.1. Sony Ericsson is shipping the M600 and P990 based on Symbian OS 9.1. The earlier versions had a defect where the phone hangs temporarily after the owner sent a large number of SMS'es. However, on 13 September 2006, Nokia released a small program to fix this defect.[105] Support for Bluetooth 2.0 was also added.\n\nSymbian 9.1 introduced capabilities and a Platform Security framework. To access certain APIs, developers have to sign their application with a digital signature. Basic capabilities are user-grantable and developers can self-sign them, while more advanced capabilities require certification and signing via the Symbian Signed program, which uses independent 'test houses' and phone manufacturers for approval. For example, file writing is a user-grantable capability while access to Multimedia Device Drivers require phone manufacturer approval. A TC TrustCenter ACS Publisher ID certificate is required by the developer for signing applications.\n\nSymbian OS 9.2 Released Q1 2006. Support for OMA Device Management 1.2 (was 1.1.2). Vietnamese language support. S60 3rd Edition Feature Pack 1 phones have Symbian OS 9.2.\n\nNokia phones with Symbian OS 9.2 OS include the Nokia E71, Nokia E90, Nokia N95, Nokia N82, Nokia N81 and Nokia 5700.\n\nSymbian OS 9.3 Released on 12 July 2006. Upgrades include improved memory management and native support for Wifi 802.11, HSDPA. The Nokia E72, Nokia 5730 XpressMusic, Nokia N79, Nokia N96, Nokia E52, Nokia E75, Nokia 5320 XpressMusic, Sony Ericsson P1 and others feature Symbian OS 9.3. Symbian OS 9.4 Announced in March 2007. Provides the concept of demand paging which is available from v9.3 onwards. Applications should launch up to 75% faster. Additionally, SQL support is provided by SQLite. Ships with the Samsung i8910 Omnia HD, Nokia N97, Nokia N97 mini, Nokia 5800 XpressMusic, Nokia 5530 XpressMusic, Nokia 5228, Nokia 5230, Nokia 5233, Nokia 5235, Nokia C5-03, Nokia C6-00, Nokia X6, Sony Ericsson Satio, Sony Ericsson Vivaz, and Sony Ericsson Vivaz Pro.\n\nUsed as the basis for Symbian^1, the first Symbian platform release. The release is also better known as S60 5th edition, as it is the bundled interface for the OS.\n\nSymbian^2 Symbian^2 is a version of Symbian that only used by Japanese manufacturers[citation needed], started selling in Japan market since May 2010.[106] The version is not used by Nokia.[107] Symbian^3 (Symbian OS 9.5) and Symbian Anna Symbian^3 is an improvement over previous S60 5th Edition and features single touch menus in the user interface, as well as new Symbian OS kernel with hardware-accelerated graphics; further improvements will come in the first half of 2011 including portrait qwerty keyboard, a new browser and split-screen text input. Nokia announced that updates to Symbian^3 interface will be delivered gradually, as they are available; Symbian^4, the previously planned major release, is now discontinued and some of its intended features will be incorporated into Symbian^3 in successive releases, starting with Symbian Anna. Nokia Belle (Symbian OS 10.1) In the summer of 2011 videos showing an early leaked version of Symbian Belle (original name of Nokia Belle) running on a Nokia N8 were published on YouTube.[108]\n\nOn 24 August 2011, Nokia announced it officially for three new smartphones, the Nokia 600 (later replaced by Nokia 603), Nokia 700, and Nokia 701.[109]\n\nNokia officially renamed Symbian Belle to Nokia Belle in a company blog post.[110][111]\n\nNokia Belle adds to the Anna improvements with a pull-down status/notification bar, deeper near field communication integration, free-form re-sizable homescreen widgets, and six homescreens instead of the previous three. As of 7 February 2012, Nokia Belle update is available for most phone models through Nokia Suite, coming later to Australia. Users can check the availability at the Nokia homepage.[112]\n\nOn 1 March 2012, Nokia announced a Feature Pack 1 update for Nokia Belle which will be available as an update to Nokia 603, 700, 701 (excluding others), and for Nokia 808 PureView natively.\n\nSymbian Carla and Donna were the planned follow-up releases to Belle, to be released in late 2012 and late 2013 respectively. However it was acknowledged in May 2012 that these had been cancelled and that the upcoming Belle Feature Pack 2 would be the last version of the operating system.[113]\n\nThe latest software release for Nokia 1st generation Symbian Belle smartphones (Nokia N8, C7, C6-01, Oro, 500, X7, E7, E6) is Nokia Belle Refresh (111.040.1511).[114]\n\nIn October 2012, the Nokia Belle Feature Pack 2, widely considered the last major update for Symbian, was released for Nokia 603, 700, 701, and 808 PureView.[115]\n\nList of devices[edit]\n\nMain article: Comparison of Symbian devices\n\nSee also[edit]\n\nTelephones portal\n\nGeneral[edit]\n\nBada\n\nNokia Ovi suite\n\nNokia PC Suite, software package used to establish an interface between Nokia mobile devices and computers running Microsoft Windows operating system; not limited to Symbian\n\nNokia Software Updater\n\nOvi store Nokia's application store on the Internet, not limited to Symbian\n\nDevelopment-related[edit]\n\nAccredited Symbian Developer\n\nCarbide.c++, alternative application and OS development IDE\n\nCleanup stack\n\nP.I.P.S. Is POSIX on Symbian\n\nPython for S60, alternative application development language\n\nQt, preferred development tool, both for the OS and applications, not limited to Symbian\n\nQt Creator IDE\n\nQt Quick\n\nQML, JavaScript based language\n\nMBM (file format)\n\nReferences[edit]\n\nBibliography[edit]\n\n[edit]\n\nSymbian foundation blog (which the homepage redirects to)\n\nSymbian Archived 6 July 2012 at the Wayback Machine on Ohloh\n\nSymbian at Curlie\n\nSymbian^3 EPL source[edit]"
    }
}