{
    "id": "yago_24146_2",
    "rank": 57,
    "data": {
        "url": "https://iastate.pressbooks.pub/matlabguide/chapter/chapter-1/",
        "read_more_link": "",
        "language": "en",
        "title": "Chapter 1: Introduction – A Guide to MATLAB for ME 160",
        "top_image": "https://iastate.pressbooks.pub/app/themes/pressbooks-book/dist/images/favicon-32x32.png",
        "meta_img": "https://iastate.pressbooks.pub/app/themes/pressbooks-book/dist/images/favicon-32x32.png",
        "images": [
            "https://iastate.pressbooks.pub/app/uploads/2024/08/ISU-Digital-Press_Left_Red.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Screenshot-2022-03-12-151627-1024x757.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Screenshot-2022-03-12-152144-1024x710.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Picture3-1.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Screenshot-2022-03-12-153300-1024x555.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Picture5-152x300.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Picture6.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Picture7.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Current2.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/CurrentPhotos.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Editor1.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Editor2.png",
            "https://iastate.pressbooks.pub/app/uploads/sites/72/2021/12/Workspace.png",
            "https://iastate.pressbooks.pub/app/themes/pressbooks-book/packages/buckram/assets/images/cc-by-nc-sa.svg",
            "https://iastate.pressbooks.pub/app/themes/pressbooks-book/assets/images/yt_icon_mono_dark.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Austin Bray",
            "Reza Montazami"
        ],
        "publish_date": "2022-07-18T00:00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://iastate.pressbooks.pub/app/themes/pressbooks-book/dist/images/apple-touch-icon.png",
        "meta_site_name": "",
        "canonical_link": "https://iastate.pressbooks.pub/matlabguide/chapter/chapter-1/",
        "text": "Chapter 1: Introduction\n\nIndividuals employed in mechanical engineering careers attempt to solve engineering problems using the tools and information available to them. In situations where engineering needs to interpret, modify, or use data or other mathematical information efficiently the engineer may turn to a coding language to help them complete a task. A computer code functions by telling a computer a set of instructions created by the individual who wrote the code. In addition to running electronic devices around the world, computer code can be written by an engineer to compute mathematical operations, create a graphical depiction of data, or complete work much faster than the engineer would have been able to do by hand. By learning to code, engineers gain a useful tool to use when solving problems, studying data, or completing calculations within research or industry.\n\nME 160 at Iowa State introduces students to engineering problem-solving methods. Students will be introduced to the MATLAB program as a tool that can be used to solves problems engineers encounter within their education and their careers. To ensure students are best able to learn to code with MATLAB, this guide has been created as an additional reference that supplements the content being addressed by the instructor or other course texts. The first chapter of this text provides a general history and introduction to coding and the MATLAB program, providing background knowledge for students as they begin to explore the MATLAB program.\n\nAnother detail to consider when downloading MATLAB is the version you are downloading. MathWorks releases two versions of MATLAB each year, entitled MATLAB R20XXa or R20XXb, where 20XX corresponds with the year and a or b will denote the first or second version put out that year, respectively. This text was created after R2019b’s release, and most images of the software will be taken from this version. If you have a slightly older edition of the software, the most significant differences will be cosmetic modifications and should not cause issues within the scope of ME 160, though I do recommend trying to keep up to date with version updates.\n\nIn addition to making MATLAB a freely downloadable software for students, Iowa State University has provided the software on computers located within engineering computer labs. These labs are an excellent resource when students would like to work on MATLAB assignments with peers or would like to bypass the need of downloading software onto a personal device. These labs will update the software to the newest version, which should be the same version used in ME 160.\n\nLearning MATLAB\n\nMATLAB is free and available on campus computers without requiring a download. Search for MATLAB in the start menu to locate the program. Note that it is good practice to ensure that the version of MATLAB available on campus computers is the same version used on any personal device. This can help prevent codes from not being compatible with a new/old version.\n\nTo use MATLAB within ME 160 you must become familiar with the layout of the user interface of the software. Upon opening the software in Windows, the user will encounter the following page, which is divided into several useful windows. Each window has been colored and labeled in the image below and is discussed in the following section. MATLAB enables the user to make modifications to the position of each window by selecting alternative layouts in the “Layout” button in the toolbar. Different layouts may be more convenient for different users or applications, so feel free to find the layout that is best while coding in ME 160.\n\nThe Command Window\n\nPrograms and the Current Folder\n\nScript program files can be saved and referenced later or transferred to other computers, unlike code written directly through the command window. Within ME 160, it will be essential to save all scripts to the same folder, which is referred to as the current folder in MATLAB. The current folder is shown directly below the toolbar and is highlighted in yellow in the above window. By saving your scripts to the same folder you will be able to keep everything in the same place and reference different files without changing folders. Script files, which are saved in .m format, are listed within the red programs section of the MATLAB user interface image above. When a .m file is selected, information about the file will be displayed in the details window, which is depicted in orange in the above image.\n\nAs you continue in ME 160 you will save many files in this section, which will quickly reveal the importance of careful file naming. Develop a habit of including the name of the program and possibly the date the file was created within the file name to ensure it will be able to be referenced in the future. When naming files in MATLAB, it is important to note that file names cannot include spaces, hyphens, dashes, or numbers as their first digit. To make file names readable, I recommend using underscores and capital letters to make quality file names (i.e. “QuadraticEquation9_23_2019” is much more informative than “untitled5” and will be easy to locate when needed again.\n\nThe Editor\n\nThe editor window is the home of MATLAB script files- savable codes that can be shared and saved on a computer for use. MATLAB scripts are the files where all stand-alone programs that are written in ME 160 will be saved. When working in the command window every time an operation is typed and the enter key is pressed, the operation is completed by MATLAB. This fact means that codes are run step-by-step when written in the command folder. This is not the case for scripts within the editor. Codes are written by the user and only ran when commanded by the user by selecting the run button in the editor window of MATLAB.\n\nMultiple scripts opened at the same time overlaid with tabs showing the name of each script. Like programs in Microsoft Windows, scripts can be dragged and dropped to be viewed next to each other or above and below each other, allowing for easier usage when working on multiple scripts.\n\nThe editor window also is home to expanded views of variables. When a variable from within the variables window is selected by double-clicking, a window will overlay the editor and any open scripts to show the contents of the variable. This may be a single value, a matrix or array, or a symbolic input. Users may shift back and forth between viewing the contents of variables and scripts using the tabs that appear at the top of the editor window.\n\nThe Workspace\n\nWhen writing scripts in MATLAB many variables will be introduced to represent data or to be used in formulas. To assist the user in determining which variables have been assigned in a script, the workspace will show each variable and the values that are assigned to them. This will be helpful when writing long codes using many similar variables and will help keep track of variable meanings.\n\nVarious forms of variables that exist within the MATLAB coding language are displayed within the Workspace. This includes numbers, characters, words, and more complicated double objects with arrays and matrices, and histograms. An example of a workspace for a code with several variable types is included below. Notice how each variable is assigned its own name by the user, allowing for it to be identified within the code."
    }
}