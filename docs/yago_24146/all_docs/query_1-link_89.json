{
    "id": "yago_24146_1",
    "rank": 89,
    "data": {
        "url": "https://www.rath.org/matlab-is-a-terrible-programming-language.html",
        "read_more_link": "",
        "language": "en",
        "title": "MATLAB is a terrible programming language â€” Nikolaus Rath's Website",
        "top_image": "https://www.rath.org/images/favicon.png",
        "meta_img": "https://www.rath.org/images/favicon.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Nikolaus Rath"
        ],
        "publish_date": "2017-09-17T00:00:00-07:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "./images/favicon.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "I consider it fairly uncontroversial that, as a programming language, MATLAB is a terrible choice. However, I found out that to some people this isn't actually obvious at all - especially when their first exposure to programming was through MATLAB. Explaining why the MATLAB language is so bad isn't easy to do in a quick hallway conversation, so I wrote this blog post as a resource I can refer people to.\n\nThis post is inspired by Eevee's excellent PHP: A fractal of bad design blog post. While I wouldn't say that MATLAB is quite as bad as PHP, there are some interesting similarities. The MATLAB language was originally designed for numerical computation (like PHP was designed to insert small dynamic elements into mostly static HTML pages), but then kept gaining features that turn it into something closer to a general purpose programming language. And as for PHP, it is difficult to point at one specific thing and say that this is what makes it a bad language - it's more that there's a ton of small things that are all slightly wrong. Individually, none of them make the language bad, but taken together, they make writing and maintaining non-trivial MATLAB code a rather painful exercise.\n\nHere comes the list:\n\nCell Array Iteration is awkward\n\nAnother iteration problem comes about when iterating over cell arrays: instead of assigning the loop variable to each element of the array, the loop variable is assigned to a one-element cell array. So the following won't work:\n\ndata = { 'foo', 'bar', 'com' }; for el=data fprintf('Processing %s...\\n', el); end\n\nInstead you have to index into the loop variable first:\n\ndata = { 'foo', 'bar', 'com' }; for el=data el = el{1}; fprintf('Processing %s...\\n', el); end"
    }
}