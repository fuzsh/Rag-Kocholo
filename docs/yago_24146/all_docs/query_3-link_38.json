{
    "id": "yago_24146_3",
    "rank": 38,
    "data": {
        "url": "https://www.mathworks.com/help/matlab/matlab_oop/why-use-object-oriented-design.html",
        "read_more_link": "",
        "language": "en",
        "title": "MATLAB & Simulink",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.mathworks.com/images/responsive/global/pic-header-mathworks-logo.svg",
            "https://www.mathworks.com/images/responsive/global/pic-header-mathworks-logo.svg",
            "https://www.mathworks.com/help/matlab/matlab_oop/doublelink_new.png",
            "https://www.mathworks.com/help/matlab/matlab_oop/two2.png",
            "https://www.mathworks.com/images/responsive/global/pic-header-mathworks-logo2.svg",
            "https://www.mathworks.com/images/responsive/global/ico-facebook.svg",
            "https://www.mathworks.com/images/responsive/global/ico-x.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-instagram.svg",
            "https://www.mathworks.com/images/responsive/global/ico-youtube.svg",
            "https://www.mathworks.com/images/responsive/global/ico-linkedin.svg",
            "https://www.mathworks.com/images/responsive/global/ico-rss.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "MATLAB enables you to use object-oriented programming techniques for application development.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://www.mathworks.com/help/matlab/matlab_oop/why-use-object-oriented-design.html",
        "text": "Approaches to Writing MATLAB Programs\n\nCreating software applications typically involves designing the application data and implementing operations performed on that data. Procedural programs pass data to functions, which perform the necessary operations on the data. Object-oriented software encapsulates data and operations in objects that interact with each other via the object's interface.\n\nThe MATLABÂ® language enables you to create programs using both procedural and object-oriented techniques and to use objects and ordinary functions together in your programs.\n\nProcedural Program Design\n\nIn procedural programming, your design focuses on the steps that must execute to achieve a desired state. Typically, you represent data as individual variables or fields of a structure. You implement operations as functions that take the variables as arguments. Programs usually call a sequence of functions, each one of which is passed data, and then returns modified data. Each function performs an operation or many operations on the data.\n\nObject-Oriented Program Design\n\nThe object-oriented program design involves:\n\nIdentifying the components of the system or application that you want to build\n\nAnalyzing and identifying patterns to determine what components are used repeatedly or share characteristics\n\nClassifying components based on similarities and differences\n\nAfter performing this analysis, you define classes that describe the objects your application uses.\n\nClasses and Objects\n\nA class describes a set of objects with common characteristics. Objects are specific instances of a class. The values contained in an object's properties are what make an object different from other objects of the same class. The functions defined by the class (called methods) are what implement object behaviors that are common to all objects of a class.\n\nWhen Should You Create Object-Oriented Programs\n\nYou can implement simple programming tasks as simple functions. However, as the magnitude and complexity of your tasks increase, functions become more complex and difficult to manage.\n\nAs functions become too large, you can break them into smaller functions and pass data from one to function to another. However, as the number of functions becomes large, designing, and managing the data passed to functions becomes difficult and error prone. At this point, consider moving your MATLAB programming tasks to object-oriented designs.\n\nUnderstand a Problem in Terms of Its Objects\n\nThinking in terms of objects is simpler and more natural for some problems. Think of the nouns in your problem statement as the objects to define and the verbs as the operations to perform.\n\nConsider the design of classes to represent money lending institutions (banks, mortgage companies, individual money lenders, and so on). It is difficult to represent the various types of lenders as procedures. However, you can represent each one as an object that performs certain actions and contains certain data. The process of designing the objects involves identifying the characteristics of a lender that are important to your application.\n\nIdentify Commonalities. What do all money lenders have in common? All MoneyLender objects can have a loan method and an InterestRate property, for example.\n\nIdentify Differences. How does each money lender differ? One can provide loans to businesses while another provides loans only to individuals. Therefore, the loan operation might need to be different for different types of lending institutions. Subclasses of a base MoneyLender class can specialize the subclass versions of the loan method. Each lender can have a different value for its InterestRate property.\n\nFactor out commonalities into a superclass and implement what is specific to each type of lender in the subclass.\n\nAdd Only What Is Necessary. These institutions might engage in activities that are not of interest to your application. During the design phase, determine what operations and data an object must contain based on your problem definition.\n\nObjects Manage Internal State\n\nObjects provide several useful features not available from structures and cell arrays. For example, objects can:\n\nConstrain the data values assigned to any given property\n\nCalculate the value of a property only when it is queried\n\nBroadcast notices when any property value is queried or changed\n\nRestrict access to properties and methods\n\nReducing Redundancy\n\nAs the complexity of your program increases, the benefits of an object-oriented design become more apparent. For example, suppose that you implement the following procedure as part of your application:\n\nCheck inputs\n\nPerform computation on the first input argument\n\nTransform the result of step 2 based on the second input argument\n\nCheck validity of outputs and return values\n\nYou can implement this procedure as an ordinary function. But suppose that you use this procedure again somewhere in your application, except that step 2 must perform a different computation. You could copy and paste the first implementation, and then rewrite step 2. Or you could create a function that accepted an option indicating which computation to make, and so on. However, these options lead to more complicated code.\n\nAn object-oriented design can factor out the common code into what is called a base class. The base class would define the algorithm used and implement whatever is common to all cases that use this code. Step 2 could be defined syntactically, but not implemented, leaving the specialized implementation to the classes that you then derive from this base class.\n\nStep 1\n\nfunction checkInputs() % actual implementation end\n\nStep 2\n\nfunction results = computeOnFirstArg() % specify syntax only end\n\nStep 3\n\nfunction transformResults() % actual implementation end\n\nStep 4\n\nfunction out = checkOutputs() % actual implementation end\n\nThe code in the base class is not copied or modified. Classes you derive from the base class inherit this code. Inheritance reduces the amount of code to be tested, and isolates your program from changes to the basic procedure.\n\nDefining Consistent Interfaces\n\nThe use of a class as the basis for similar, but more specialized classes is a useful technique in object-oriented programming. This class defines a common interface. Incorporating this kind of class into your program design enables you to:\n\nIdentify the requirements of a particular objective\n\nEncode requirements into your program as an interface class\n\nReducing Complexity\n\nObjects reduce complexity by reducing what you must know to use a component or system:\n\nObjects provide an interface that hides implementation details.\n\nObjects enforce rules that control how objects interact.\n\nTo illustrate these advantages, consider the implementation of a data structure called a doubly linked list. See Implementing Linked Lists with Classes for the actual implementation.\n\nHere is a diagram of a three-element list:\n\nTo add a node to the list, disconnect the existing nodes in the list, insert the new node, and reconnect the nodes appropriately. Here are the basic steps:\n\nFirst disconnect the nodes:\n\nUnlink n2.Prev from n1\n\nUnlink n1.Next from n2\n\nNow create the new node, connect it, and renumber the original nodes:\n\nLink new.Prev to n1\n\nLink new.Next to n3 (was n2)\n\nLink n1.Next to new (will be n2)\n\nLink n3.Prev to new (will be n2)\n\nThe details of how methods perform these steps are encapsulated in the class design. Each node object contains the functionality to insert itself into or remove itself from the list.\n\nFor example, in this class, every node object has an insertAfter method. To add a node to a list, create the node object and then call its insertAfter method:\n\nnnew = NodeConstructor; nnew.insertAfter(n1)\n\nBecause the node class defines the code that implements these operations, this code is:\n\nImplemented in an optimal way by the class author\n\nAlways up to date with the current version of the class\n\nProperly tested\n\nCan automatically update old-versions of the objects when they are loaded from MAT-files.\n\nThe object methods enforce the rules for how the nodes interact. This design removes the responsibility for enforcing rules from the applications that use the objects. It also means that the application is less likely to generate errors in its own implementation of the process.\n\nOverloaded Functions and Operators\n\nWhen you define a class, you can overload existing MATLAB functions to work with your new object. For example, the MATLAB serial port class overloads the fread function to read data from the device connected to the port represented by this object. You can define various operations, such as equality (eq) or addition (plus), for a class you have defined to represent your data."
    }
}