{
    "id": "yago_24146_2",
    "rank": 30,
    "data": {
        "url": "https://blog.learnhub.africa/2023/09/24/the-top-20-programming-languages-and-their-origins/",
        "read_more_link": "",
        "language": "en",
        "title": "The Top 20 Programming Languages and Their Origins",
        "top_image": "https://learnhub.42web.io/wp-content/uploads/2022/09/LearnHub_Africa_Logo_Icon.png",
        "meta_img": "https://learnhub.42web.io/wp-content/uploads/2022/09/LearnHub_Africa_Logo_Icon.png",
        "images": [
            "https://blog.learnhub.africa/wp-content/uploads/2022/09/cropped-cropped-LearnHub_Africa_Logo_Icon-1-65x60.png",
            "https://blog.learnhub.africa/wp-content/uploads/2022/09/cropped-cropped-LearnHub_Africa_Logo_Icon-1-65x60.png",
            "https://blog.learnhub.africa/wp-content/uploads/2023/09/html5-html-file-type-386614-1024x724.jpg",
            "https://blog.learnhub.africa/wp-content/uploads/2022/10/Pictures-simple-backgrounds-wallpapers-HD-1024x640.jpeg",
            "https://blog.learnhub.africa/wp-content/uploads/2022/10/Wallpapers-HD-simple-backgrounds-1024x640.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "blackbird"
        ],
        "publish_date": "2023-09-24T00:00:00",
        "summary": "",
        "meta_description": "The Top 20 Programming Languages and Their Origins - The top programming languages were created over time to solve evolving software problems.",
        "meta_lang": "en",
        "meta_favicon": "https://blog.learnhub.africa/wp-content/uploads/2022/09/cropped-LearnHub_Africa_Logo_Icon-32x32.png",
        "meta_site_name": "LearnHub - We write about everything tech",
        "canonical_link": "https://blog.learnhub.africa/2023/09/24/the-top-20-programming-languages-and-their-origins/",
        "text": "Programming languages have evolved enormously over the decades since the first electronic computers emerged in the 1940s.\n\nThe earliest programming was done by rewiring circuits or via plugboards to control computer operations.\n\nSoon after came the first compilers to translate mathematical code into machine code, followed by higher-level languages using English-like syntax in the 1950s, such as Fortran and COBOL.\n\nOver the next few decades, many pivotal languages were developed that introduced new programming paradigms like object-oriented (Simula), functional (Lisp), and scripting (Perl) languages.\n\nThis evolution continued with emerging languages designed for the web (PHP, JavaScript) and new platforms like mobile and cloud computing.\n\nToday’s popular languages represent accumulated ideas and capabilities over 70+ years of programming language history, providing diverse tools for software development.\n\nUnderstanding this progression helps provide context on where languages came from and how they’ve advanced programming to where it is today.\n\nThis article will explore the top 20 most popular programming languages based on usage statistics and discuss when and why each was created.\n\nJavaScript\n\nCreated in: 1995\n\nCreated by: Brendan Eich at Netscape\n\nJavaScript is a scripting language that runs in web browsers and creates interactive effects and dynamic website behavior.\n\nIt was created in 1995 by Brendan Eich at Netscape to complement Java and was originally named LiveScript. It was renamed to JavaScript to capitalize on the popularity of Java.\n\nJavaScript is mainly used for client-side scripting and is supported by all major browsers.\n\nEstimated Users: 9.7 million\n\nPython\n\nCreated in: 1991\n\nCreated by: Guido van Rossum at CWI\n\nPython is an interpreted, high-level, general-purpose programming language. It was created by Guido van Rossum at CWI in 1991 as a successor to the ABC language.\n\nPython’s design philosophy emphasizes code readability with the use of significant indentation. It is used for web development, data analysis, artificial intelligence, and scientific computing.\n\nEstimated Users: 7.1 million\n\nJava\n\nCreated in: 1995\n\nCreated by: James Gosling at Sun Microsystems\n\nJava is a compiled, object-oriented language derived from C and C++. It was created by James Gosling at Sun Microsystems in 1995 as a platform-independent language for consumer electronics.\n\nJava revolutionized web development and is widely used for building server-side applications, mobile apps, and big data analysis.\n\nEstimated Users: 6.7 million\n\nC#\n\nCreated in: 2000\n\nCreated by: Microsoft\n\nC# is an object-oriented programming language based on C++ and Java. Microsoft created it in 2000 as part of the .NET initiative, and runs on the .NET Framework.\n\nC# was designed for enterprise development and aims to provide simplicity and modern features like garbage collection. It is used widely on Windows platforms.\n\nEstimated Users: 4.3 million\n\nPHP\n\nCreated in: 1995\n\nCreated by: Rasmus Lerdorf\n\nOriginally named Personal Home Page Tools, PHP is a server-side scripting language designed for web development.\n\nIt was created by Rasmus Lerdorf in 1995 for his personal website. PHP is used to manage dynamic content, databases, session tracking, and build web application backends.\n\nEstimated Users: 2.8 million\n\nC++\n\nCreated in: 1985\n\nCreated by: Bjarne Stroustrup\n\nC++ is a compiled, multi-paradigm language based on C. It was created by Bjarne Stroustrup at Bell Labs in 1985 as an extension of C with object-oriented features like classes and inheritance.\n\nC++ provides low-level memory manipulation, high performance, and direct hardware access, making it suitable for infrastructure software, drivers, and game engines.\n\nEstimated Users: 2.7 million\n\nC\n\nCreated in: 1972\n\nCreated by: Dennis Ritchie\n\nC is an imperative, procedural language developed by Dennis Ritchie at Bell Labs between 1969 and 1973 for use in the Unix operating system.\n\nIt was derived from the earlier languages B and BCPL. C provides features like static typing and low-level memory access, making it the language of choice for system programming.\n\nEstimated Users: 2.2 million\n\nR\n\nCreated in: 1993\n\nCreated by Ross Ihaka and Robert Gentleman\n\nR is a programming language specialized for statistical analysis and graphics. It was created in 1993 by Ross Ihaka and Robert Gentleman at the University of Auckland,\n\nNew Zealand. R provides a wide range of statistical and graphical techniques for data analysis, including machine learning algorithms. It is widely used among statisticians, data analysts, and data scientists.\n\nEstimated Users: 2 million\n\nSwift\n\nCreated in: 2014\n\nCreated by: Apple\n\nSwift is a general-purpose programming language created by Apple in 2014 for iOS, macOS, watchOS, and tvOS development.\n\nIt aims to provide concise and safe code with features like type inference, generics, and operator overloading. Swift is designed to work with Apple’s Cocoa and Cocoa Touch frameworks and existing Objective-C code.\n\nEstimated Users: 1.5 million\n\nMatlab\n\nCreated in: 1970s\n\nCreated by: Cleve Moler\n\nMATLAB (Matrix Laboratory) is a proprietary programming language developed by MathWorks. It was created in the 1970s by Cleve Moler to give students easy access to LINPACK and EISPACK.\n\nMATLAB allows matrix manipulations, plotting data and functions, implementing algorithms, creating user interfaces, and interfacing with other languages. It is widely used in academia and industry, especially for signal processing, control design, computer vision, and finance.\n\nEstimated Users: 1 million\n\nGo\n\nCreated in: 2009\n\nCreated by Robert Griesemer, Rob Pike, and Ken Thompson at Google\n\nGo is an open-source, compiled programming language developed at Google in 2009. It aims to provide efficiency, security, and ease of programming to support complex enterprise applications.\n\nKey features of Go include fast compilation, garbage collection, concurrent programming capabilities, and efficient memory management.\n\nIt is used for systems programming, web servers, networking, and cloud infrastructure.\n\nEstimated Users: 1 million\n\nRuby\n\nCreated in: 1995\n\nCreated by: Yukihiro “Matz” Matsumoto\n\nRuby is a dynamic, object-oriented scripting language created by Yukihiro “Matz” Matsumoto and released in 1995.\n\nIt emphasizes programmer productivity and fun with features like dynamic typing and pure object orientation. Ruby powers the popular Ruby on Rails web framework and is used for web apps, scripting, and prototyping.\n\nEstimated Users: 900,000\n\nRust\n\nCreated in: 2010\n\nCreated by: Graydon Hoare at Mozilla\n\nRust is a multi-paradigm, compiled language created by Graydon Hoare at Mozilla Research in 2010.\n\nIt focuses on performance, memory safety, and concurrency. Rust uses zero-cost abstractions, move semantics, guaranteed memory safety, threads without data races, trait-based generics, pattern matching, and efficient C bindings. It can be used for systems programming, web apps, DevOps, and embedded devices.\n\nEstimated Users: 700,000\n\nKotlin\n\nCreated in: 2011\n\nCreated by: JetBrains\n\nKotlin is a statically typed programming language developed by JetBrains for the JVM, Android, browser, and native. It was officially released in 2011 and combines object-oriented and functional programming features.\n\nKotlin is designed as a “better Java” and can seamlessly interoperate with Java code. It is used widely on Android and for server-side development.\n\nEstimated Users: 500,000\n\nScala\n\nCreated in: 2003\n\nCreated by: Martin Odersky\n\nScala (Scalable Language) is a general-purpose programming language created by Martin Odersky in 2003. It runs on the JVM and combines object-oriented and functional programming.\n\nKey features include type inference, immutability, pattern matching, lazy evaluation, and higher-order functions. It allows building high-performance systems and supports concurrent and distributed programming.\n\nEstimated Users: 300,000\n\nObjective-C\n\nCreated in: early 1980s\n\nCreated by: Brad Cox and Tom Love\n\nObjective-C is a general-purpose, object-oriented language based on C and Smalltalk. It was created in the early 1980s by Brad Cox and Tom Love to add object-oriented capabilities to C.\n\nObjective-C introduced key concepts like dynamic typing, interfaces, and protocols. It is the primary language for Apple’s Cocoa and Cocoa Touch frameworks and macOS and iOS development.\n\nEstimated Users: 250,000\n\nVB.NET\n\nCreated in: 2002\n\nCreated by: Microsoft\n\nVB.NET (Visual Basic .NET) is an object-oriented programming language based on the .NET framework.\n\nMicrosoft launched it in 2002 as the successor to Visual Basic 6. VB.NET adds features like inheritance, interfaces, and overloading while retaining the Visual Basic ease of use. It is used widely for Windows desktop application development.\n\nEstimated Users: 250,000\n\nPerl\n\nCreated in: 1987\n\nCreated by: Larry Wall\n\nPerl (Practical Extraction and Report Language) is a dynamic, procedural language designed by Larry Wall 1987 for text processing.\n\nPerl borrows features from C, shell scripting, AWK, and sed. It allows web developers to quickly write programs for manipulating text, files, and processes. Perl is known for its regular expressions and string-handling capabilities.\n\nEstimated Users: 200,000\n\nHaskell\n\nCreated in: 1990\n\nCreated by: Committee of researchers (including Simon Peyton Jones, Lennart Augustsson, Dave Barton, Brian Boutel, Warren Burton, Joseph Fasel, Kevin Hammond, Ralf Hinze, Paul Hudak, John Hughes, Thomas Johnsson, Mark Jones, John Launchbury, Erik Meijer, John Peterson, Alastair Reid, Colin Runciman, and Philip Wadler)\n\nHaskell is a statically typed, purely functional programming language created in 1990 for teaching, research, and industrial applications. It features lazy evaluation, monadic effects, static polymorphic typing, list comprehension, and pattern matching.\n\nHaskell’s pure functional approach makes it well-suited for correctness, concurrency, and parallelism. It is commonly used in academia, banking, and by NASA.\n\nEstimated Users: 150,000\n\nLua\n\nCreated in: 1993\n\nCreated by: Roberto Ierusalimschy, Luiz Henrique de Figueiredo, and Waldemar Celes at Tecgraf/PUC-Rio\n\nLua is a lightweight, embeddable scripting language developed in 1993 at Tecgraf/PUC-Rio, Brazil. It provides simple procedural syntax inspired by Pascal and data description constructs influenced by SOL (Simple Object Language). Lua emphasizes portability, speed, and a small footprint. It is used widely in games as well as by Adobe, Wikipedia, Cisco, and IBM.\n\nEstimated Users: 100,000\n\nCreating your own programming language In my next article, I will explain how programming languages are built and the process involved.\n\nConclusion\n\nThis covers the top 20 programming languages based on popularity and why each one was created.\n\nUnderstanding each language’s history and original purpose provides useful context for leveraging them in software development today.\n\nFrom systems programming languages like C and Rust to web languages like JavaScript and PHP to general-purpose languages like Python and Java, programmers have many options based on their specific needs.\n\nAs new challenges emerge, we will continue to see new programming languages created and evolve over time.\n\nIf you want to become a programmer, then this article is your guide to becoming one. It explains everything from start to finish on how to build technical skills and what to do."
    }
}