{
    "id": "correct_foundationPlace_00009_2",
    "rank": 39,
    "data": {
        "url": "https://aadinternals.com/aadinternals/",
        "read_more_link": "",
        "language": "en",
        "title": "Documentation",
        "top_image": "https://aadinternals.com/images/favicon-196x196.png",
        "meta_img": "https://aadinternals.com/images/favicon-196x196.png",
        "images": [
            "https://aadinternals.com/images/favicon-128.png",
            "https://aadinternals.com/images/aadint01.png",
            "https://aadinternals.com/images/posts/phishing_11.png",
            "https://aadinternals.com/images/posts/phishing_12.png",
            "https://aadinternals.com/images/tags.png",
            "https://aadinternals.com/images/nestori.jpg",
            "https://aadinternals.com/images/CC-BY.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2018-10-25T00:00:00+00:00",
        "summary": "",
        "meta_description": "The toolkit for Azure AD hackers, bounty hunters, red/blue teamers",
        "meta_lang": "en",
        "meta_favicon": "/images/favicon-196x196.png",
        "meta_site_name": "",
        "canonical_link": "https://aadinternals.com/aadinternals/",
        "text": "Introduction\n\nAADInternals toolkit is a PowerShell module containing tools for administering and hacking Azure AD and Office 365. It is listed in MITRE ATT&CK with id S0677.\n\nInstallation\n\nThe module can be installed from PowerShell:\n\nOutput:\n\n___ ___ ____ ____ __ __ / | / | / __ \\/ _/___ / /____ _________ ____ _/ /____ / /| | / /| | / / / // // __ \\/ __/ _ \\/ ___/ __ \\/ __ '/ / ___/ / ___ |/ ___ |/ /_/ _/ // / / / /_/ __/ / / / / / /_/ / (__ ) /_/ |_/_/ |_/_____/___/_/ /_/\\__/\\___/_/ /_/ /_/\\__,_/_/____/ v0.9.3 by @DrAzureAD (Nestori Syynimaa)\n\nThe module is also available in GitHub https://github.com/Gerenios/AADInternals and PowerShell Gallery.\n\nAbout\n\nAAD Internals is a PowerShell module where I’ve tried to put all the knowledge I’ve gained during the years spent with Office 365 and Azure AD. It is a result of hours of reverse-engineering and debugging of Microsoft tools related to Azure AD, such as PowerShell modules, directory synchronisation, and admin portals.\n\nThe module is a plain PowerShell script module, so you can copy and paste the code to your own scripts as needed. Having said that, the are some functions that are utilising the built-in functionality of Windows. Thus, everything might not work on every computer.\n\nThe module is now on beta, so all comments and ideas are more than welcome. You can comment to this article or post bugs and fixes to GitHub.\n\nI haven’t tried to duplicate all functionality MSOnline or AzureAD modules currently have. Instead, I decided to bring that information and functionality those modules doesn’t provide. Also, I have created some “blackhat” level functionality that allows administrators to do things that shouldn’t be even possible..\n\nDetailed help about parameters etc. can be seen using PowerShell Get-Help cmdlet:\n\nVersion info\n\nVersion Date Version notes 0.9.3 Jan 14th 2024 Added Test‑AADIntSARAPort and Resolve‑AADIntSARAHost.\n\nAdded Get‑AADIntB2CEncryptionKeys to export B2C token encryption keys, and New‑AADIntB2CRefreshToken & New‑AADIntB2CAuthorizationCode to exploit them.\n\nAdded Get‑AADIntAzureADFeatures, Get‑AADIntAzureADFeature, and Set‑AADIntAzureADFeature for listing and modifying Azure AD/Entra ID features.\n\nAdded Add‑AADIntSyncFabricServicePrincipal for adding a missing Microsoft.Azure.SyncFabric service principal if BPRT creation fails.\n\nModified ConvertTo‑AADIntBackdoor to add backdoor certificate to NextSigningCertificate if the domain is already federated.\n\nAdded Install‑AADIntForceNTHash, Remove‑AADIntForceNTHash, and Initialize‑AADIntFullPasswordSync. 0.9.2 Oct 2nd 2023 “TI Summit edition”.\n\nAdded support for external SQLExpress database to Get‑AADIntSyncCredentials.\n\nWhen using -Credential switch to get access token, ROPC flow is tried first. If it fails (due to MFA etc.), interactive authentication is used.\n\nAdded DKIM and MTA-STS to Invoke‑AADIntReconAsOutsider. 0.9.1 Aug 15th 2023 “DEFCON31 edition”.\n\nAdded Get‑AADIntMyTeams to show user’s teams.\n\nAdded Export‑AADIntSPOSiteFile to export files from SPO (and Teams & OneDrive).\n\nAdded Add‑AADIntSPOSiteFiles to spoof SPO files (modify user and timestamps) using SPMT protocol (bypasses logging).\n\nAdded Update‑AADIntSPOSiteFiles to tamper with existing SPO files (modify content, user and timestamps) using SPMT protocol (bypasses logging). 0.9.0 Jun 29th 2023 “TROOPERS23 edition”. Totally redesigned authentication and added support for PS7 - expect 🪲 to be found. Interactive login works now entirely in CMD line (no pop-up windows). Does automatic MFA if TAP or OTPSecretKey provided (and available for user)🔥\n\nAdded configuration functions to store settings and set User-Agent.\n\nAdded Set‑AADIntDeviceWHfBKey to set Windows Hello for Business key as MFA method to the given user.\n\nAdded Get‑AADIntUserNTHash for dumping NTHashes from Azure AD.\n\nUpdated Set‑AADIntUserPassword to support custom encryption certificate.\n\nAdded -CloudAP switch to Get‑AADIntUserPRTKeys for getting PRT and Session key using user’s credentials. 0.8.2 May 15th 2023 “Black Hat Asia 2023 edition”. Added Access Package functions to list Access Packages, Access Package Catalogs, and Access Package administrators.\n\nRefactored token cache and added automatic FOCI client handling. 0.8.1 Apr 4th 2023 Added Set‑AADIntAzureADGroupMember to modify members of synchronised groups.\n\nUpdated Get‑AADIntSyncCredentials to use a background process (doesn’t elevate the current PS session).\n\nUpdated Set‑AADIntUserPassword: -IncludeLegacy switch synchronises also legacy NTHash to Azure AD which will be synchronised to Azure AD Domain Services (AADDS) DCs.\n\nAdded DisplayName parameter to Set‑AADIntAzureADPolicyDetails.\n\nUpdated Invoke‑AADIntReconAsOutsider to show tenant’s Microsoft Defender for Identity (MDI) instance.\n\nAdded new authentication endpoint (RST2) to Invoke‑AADIntUserEnumerationAsOutsider.\n\nUpdated Invoke‑AADIntReconAsInsider to show tenant’s Azure AD SKU. 0.8.0 Nov 28th 2022 “BSides Orlando 2022 edition”.\n\nAdded Get‑AADIntAccessTokenUsingIMDS to get access tokens using Azure Instance Metadata Service (IMDS) for VM’s using managed identities.\n\nAdded New‑AADIntMOERADomain to add new Microsoft Online Email Routing Address (MOERA) domain (.onmicrosoft.com) to the tenant. Added Get‑AADIntAzureADPolicies and Set‑AADIntAzureADPolicyDetails. 0.7.8 Nov 4th 2022 “Def.Camp 2022 edition”.\n\nMoved bootstrap export functionality from Export‑AADIntProxyAgentCertificates to separate function Export‑AADIntProxyAgentBootstraps due to permission issues. 0.7.7 Oct 21th 2022 Updated Export‑AADIntTokenBrokerTokens to support TBRES files with version number 2. 0.7.6 Oct 20th 2022 Added missing TBRES.ps1 0.7.5 Oct 20th 2022 Added Export‑AADIntTokenBrokerTokens.\n\nUpdated Export‑AADIntTeamsTokens to support the updated schema.\n\nUpdated cache logic: If ClientId+Resource combination is not found from the cache, it uses the first entry with the same resource (regardless of the ClientId). This helps on using the exported tokens 😉 0.7.4 Oct 17th 2022 Fixed various functions using internal Set-BinaryContent function. Updated Invoke‑AADIntReconAsOutsider to include Tenant region. 0.7.3 Oct 1st 2022 Fixed Set‑AADIntSPOSiteMembers merge issues. 0.7.2 Oct 1st 2022 Added Export‑AADIntAzureCliTokens and Export‑AADIntTeamsTokens.\n\nAdded Get‑AADIntTenantDomain to get domain name using tenant id.\n\nAdded -GetRelayingParties switch to Invoke‑AADIntReconAsOutsider to extract Relaying Trust parties from the AD FS server.\n\nAdded Set‑AADIntSPOSiteMembers. 0.7.1 Sep 16th 2022 More bug fixes. 0.7.0 Sep 9th 2022 Bug fixes. 0.6.9 Sep 8th 2022 Added functionality to add tokens to cache, added gMSA support and account lookup to Get‑AADIntLSASecrets.\n\nUpdated Export‑AADIntADFSCertificates: Exports also custom certificates (not stored in config db). “Local export” now uses a service running as AD FS service account to fetch DKM decryption key from AD.\n\nAdded proof-of-concept CBA functionality.\n\nAdded CBA information to Invoke‑AADIntReconAsOutsider.\n\nAdded Export‑AADIntProxyAgentCertificates to export PTA & provisioning agent certificates. Fixed Set‑AADIntPTACertificate.\n\nExposed Get-AADIntAccessToken and Get‑AADIntAccessTokenWithRefreshToken 😱\n\nAdded -UpdateTrust option to Register-AADIntPTAAgent and Register‑AADIntSyncAgent for renewing certificates. Added functionality to add tokens to cache, added gMSA support and account lookup to Get‑AADIntLSASecrets.\n\nUpdated Export‑AADIntADFSCertificates: Exports also custom certificates (not stored in config db). “Local export” now uses a service running as AD FS service account to fetch DKM decryption key from AD.\n\nAdded proof-of-concept CBA functionality.\n\nAdded CBA information to Invoke‑AADIntReconAsOutsider.\n\nAdded Export‑AADIntProxyAgentCertificates to export PTA & provisioning agent certificates. Fixed Set‑AADIntPTACertificate.\n\nExposed Get-AADIntAccessToken and Get‑AADIntAccessTokenWithRefreshToken 😱\n\nAdded -UpdateTrust option to Register-AADIntPTAAgent and Register‑AADIntSyncAgent for renewing certificates. 0.6.8 Jun 3rd 2022 Added functionality to unprotect ESTSAUTHPERSISTENT cookie. 0.6.7 Jun 3rd 2022 Added functionality to list and modify sync features.\n\nRemoved Get-PassThroughAuthenticationStatus and Invoke-AADIntPTAAgent.\n\nAdded: Find-AADIntTeamsExternalUser for getting user’s Teams information (including Azure AD object id), Get-TeamsAvailability for getting user’s Teams availability information, Get-AADIntTranslation for translating any text to specified language, Get-AADIntTeanantOrganisationInformation for getting tenant information using tenantid (includes tenant name), and Start-AADIntSpeech for speaking out the given text. 0.6.6 Feb 15th 2022 Added functionality to export the device certificate and transport keys of Azure AD Joined and Registered devices.\n\nAdded functionality to configure (i.e. “join”) Windows devices using AADInternals generated or exported certificates. Added functionality to set proxy settings to help MITM.\n\nAdded Find-AADIntMSPartner. 0.6.5 Dec 13th 2021 Added MSPartner functionality & included in Invoke-AADIntReconAsInsider.\n\nAdded functions for creating and decoding AD FS refresh tokens.\n\nAdded some utilities + bug fixes. 0.6.4 Sep 21st 2021 “Commsverse edition”. Bug fix for loading System.Xml.XmlDictionary. 0.6.3 Sep 15th 2021 “Commsverse edition”. Minor bug fixes for Teams and access token functions. 0.6.2 Sep 1st 2021 Added Search-AADIntUnifiedAuditLog function!\n\nAdded Set-AADIntSelfServicePurchaseProduct for enabling and disabling self-service product purchases.\n\nUpdated Register-AADIntMFAApp to support OTP registration.\n\nAdded Open-AADIntOWA for opening OWA using provided access token. 0.6.1 Aug 26th 2021 “HelSec edition”. Bug fix to Get-AADIntAzureDirectoryActivityLog function. 0.6.0 Aug 26th 2021 “HelSec edition”. Decreased the module loading time by using .psd1 and .psm1 in a way they were meant to.\n\nAdded Get-AADIntAzureDirectoryActivityLog function. 0.5.0 Aug 23rd 2021 Added hybrid health functionality allowing spoofing Azure AD sign-ins log.\n\nFixed a bug getting access tokens with kerberos tickets.\n\nYet another new enumeration method for Invoke-AADIntUserEnumerationAsOutsider! 0.4.9 Jun 30th 2021 Updated Invoke-AADIntUserEnumerationAsOutsider (new enumeration method) and Get-AADIntSyncCredentials (support for multiple forests). Bug fixes for MFA apps, Azure AD Join and OneDrive. 0.4.8 May 11th 2021 “Teams Nation edition”. Fixed Send-AADIntTeamsMessage. Added AD FS policy store rule modification functionality. 0.4.7 Apr 27th 2021 Refactored Kerberos and AD FS certificate export functionality. Added remote AD FS configuration export. Added some DRS functionality from DSInternals. 0.4.6 Mar 3rd 2021 Added Azure AD register and Hybrid Join by federation functionality and some smaller improvements. Fixed access token for MySigns. Updated AD FS certificate export function.\n\nPRT can now be fetched with cached refresh token instead of credentials.\n\nUpdated SAML token signatures to SHA256. 0.4.5 Jan 31st 2021 Added BPRT (bulk PRT) and Hybrid Join functionality. Added functionality for handing Rollout Policies, Azure Diagnostic Settings, and Unified Audit Log Settings. 0.4.4 Oct 18th 2020 “Cloud Identity Summit 2020 edition”. Added device code authentication support access token functions (-UseDeviceCode).\n\nAdded phishing functionality.\n\nAdded -GetNonce switch for New-AADIntUserPRTToken.\n\nAdded Teams functionality. 0.4.3 Sep 29th 2020 Added Azure Cloud Shell functionality + updates to PRT/MDM. 0.4.2 Sep 9th 2020 Added MDM functionality. 0.4.1 Sep 1st 2020 Added functionality for joining “devices” to Azure AD and Intune MDM. Added PRT functionality. Some bug fixes. 0.4.0 Aug 6th 2020 Updated the Access Token cache behaviour. Now, when saved to cache, access token gets updated automatically if expired.\n\nAdded functionality for getting Azure AD tenant information and enumerating users as a an outsider, guest, and insider user. 0.3.3 Jun 3rd 2020 Added functionality for elevating Global Admin to Azure User Access Administrator and functions for accessing some Azure workloads 😁 0.3.2 May 28th 2020 “psconf.eu edition”. Bug fixes and some minor feature updates to existing functions. 0.3.1 May 17th 2020 Added functionality for registering Sync agents (Azure AD Connect cloud provisioning) and listing agent information. Fixed exporting Azure AD Connect credentials and added many AD related Mimikatz-like functions. 0.2.8 Mar 30th 2020 Added functionality for registering PTA Agents and configuring users’ MFA settings. Includes an experimental PTA Agent that emulates Azure AD pass-through authentication. 0.2.7 Dec 12th 2019 “Black Hat Europe edition”.\n\nAdded OneDrive for Business functions. Allows bypassing OneDrive (and SharePoint & Teams) domain restrictions. 0.2.6 Oct 30th 2019 “T2 infosec edition”.\n\nAdded Kerberos support. Allows getting Access Tokens using Kerberos tickets, and using Seamless Single-Sign-On as backdoor. 0.2.5 Aug 16th 2019 ADFS certificate export finally working! Bug fixes. 0.2.4 Aug 2nd 2019 “Black Hat edition”.\n\nAdded client, SPO, and SARA functions, several bug fixes. 0.2.3 May 29th 2019 Added functions to manipulate ADFS token signing certificates. 0.2.2 May 22nd 2019 Added PTASpy (pass-through authentication credential harvester and backdoor). 0.1.8 May 17th 2019 Added functions to extract and reset Azure AD Connect credentials. 0.1.7 May 10th 2019 Added Exchange Online and Outlook functionality + loads of other updates. 0.1.1 Oct 25th 2018 The first beta release.\n\nConfiguration\n\nSince version 0.9.0, AADInternals has a config.json file for storing persistent settings. The file is located in AADInternals module folder:\n\nC:\\Program Files\\WindowsPowerShell\\Modules\\AADInternals\\0.9.0\\AADInternals.psm1\n\nRead-AADIntConfiguration\n\nLoads AADInternals settings from config.json. All changes made after loading AADInternals module will be lost.\n\nSave-AADIntConfiguration\n\nSaves the current AADInternals settings to config.json. Settings will be loaded when AADInternals module is loaded.\n\nSettings saved.\n\nGet-AADIntConfiguration\n\nShows AADInternals settings\n\nName Value ---- ----- SecurityProtocol Tls12 User-Agent AADInternals\n\nSet-AADIntSetting\n\nSets the given setting with given value\n\nSet-AADIntUserAgent\n\nSets a pre configured User-Agent for a specific device that AADInternals will use in requests. Supported devices: ‘Windows’,‘MacOS’,‘Linux’,‘iOS’,‘Android’. To persist, use Save-AADIntConfiguration after setting the User-Agent.\n\nUsing different User-Agents may help evading Conditional Access policies 😉\n\nFunctionality\n\nPlaying with access tokens\n\nGet-AADIntAccessTokenFor<Service>\n\nMost of the functions are using REST APIs which require OAuth access tokens. The AADInternals module is using the following types of access tokens. Since version 0.4.0, all tokens are cached if -SaveToCache switch is used. If expired, cached tokens are automatically renewed with the corresponding refresh token.\n\nToken/API Function Remarks AAD Graph Get-AADIntAccessTokenForAADGraph Functions using AAD Graph access token. MS Graph Get-AADIntAccessTokenForMSGraph Functions using MS Graph access token. Pass Through Authentication Get-AADIntAccessTokenForPTA Used when enabling/disabling PTA and Seamless SSO (Desktop SSO) Azure Admin Portal Get-AADIntAccessTokenForAADIAMAPI Used when inviting guest users. Exchange Online Get-AADIntAccessTokenForEXO Used with Exchange Online and ActiveSync functions Support and Recovery Assistant Get-AADIntAccessTokenForSARA Used with Support and Recovery Assistant functions SharePoint Online Get-AADIntSPOAuthenticationHeader Used with SharePoint Online functions OneDrive for Business New-AADIntOneDriveSettings Used with OneDrive for Business functions Azure Core Management Get-AADIntAccessTokenForAzureCoreManagemnt Used with Azure Core Management functions Azure AD Join Get-AADIntAccessTokenForAADJoin Used with Azure AD join function Azure Intune MD Get-AADIntAccessTokenForIntuneMDM Used with Intune MDM functions Azure Cloud Shell Get-AADIntAccessTokenForCloudShell Used with Azure Cloud Shell\n\nTo get an AAD Graph access token and save it to cache, run the following function. The token will be valid for an hour, after that, a new access token is fetched using the refresh token.\n\nTo see the cached credentials:\n\nOutput:\n\nName : admin@company.com ClientId : d3590ed6-52b3-4102-aeff-aad2292ab01c Audience : https://management.core.windows.net Tenant : 2b55c1c4-ba18-46d0-9a7a-7a75b9493dbd IsExpired : False HasRefreshToken : True Name : admin@company.com ClientId : 1b730954-1685-4b74-9bfd-dac224a7b894 Audience : https://graph.windows.net Tenant : 2b55c1c4-ba18-46d0-9a7a-7a75b9493dbd IsExpired : False HasRefreshToken : True\n\nGet-AADIntAccessToken\n\nThis is an internal utility function used by all Get-AADIntAccessTokenFor<service> functions. Exposed in version 0.6.9.\n\nGets OAuth Access Token for the given client and resource. Using the given authentication method. If not provided, uses interactive logon.\n\nExample 1:\n\nExample 2:\n\nOutput:\n\nAccessToken saved to cache. Tenant : 9779e97e-de19-45be-87ab-a7ed3e86fa62 User : user@company.com Resource : https://graph.microsoft.com Client : d3590ed6-52b3-4102-aeff-aad2292ab01c\n\nGet-AADIntAccessTokenWithRefreshToken\n\nThis is an internal utility function used to renew access tokens. Exposed in version 0.6.9.\n\nGets OAuth Access Token for the given client and resource using the given refresh token. For FOCI refresh tokens, i.e.,Family Refresh Tokens (FRTs), you can use any FOCI client id.\n\nExample:\n\nOutput:\n\naud : https://graph.windows.net iss : https://sts.windows.net/9779e97e-de19-45be-87ab-a7ed3e86fa62/ iat : 1662455333 nbf : 1662455333 exp : 1662460717 acr : 1 aio : ATQAy/8TAAAAeOTMVmaomZFyHLApXlzZNnWkLLuRB/9yBsfn0Qp7GzMtntUBwQN6byqsy9RwHUK8 amr : {pwd} appid : 1fec8e78-bce4-4aaf-ab1b-5451cc387264 appidacr : 0 family_name : User given_name : Sample ipaddr : 1.143.35.120 name : Sample User oid : 47bd560e-fd5e-42c5-b51b-ce963892805f onprem_sid : S-1-5-21-2918793985-2280761178-2512057791-1151 puid : 10032[redacted] rh : 0.AXkAnZT_xZYmaEueEwVfGe0tUQIAAAAAAAAAwAAAAAAAAAB5AOw. scp : UserProfile.Read sub : DWAJiCPnQQkiJP_qBKOf9MX4p0YqJ5Yd0aUyovzlRR0 tenant_region_scope : EU tid : 9779e97e-de19-45be-87ab-a7ed3e86fa62 unique_name : user@company.com upn : user@company.com uti : 78SP1JP-wEWN5AgCCcDWAA ver : 1.0\n\nExport-AADIntAzureCliTokens\n\nSince version 0.7.2\n\nExports Azure CLI access tokens from the msal_token_cache.bin cache. On Windows, msal_token_cache.bin is a json file protected with DPAPI in LocalUser context.\n\nExample 1:\n\nOutput 1:\n\nUsers: user@company.com,user2@company.com UserName access_token -------- ------------ user@company.com eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGx... user@company.com eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGx... user2@company.com eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGx... user2@company.com eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGx...\n\nExample 2:\n\nOutput 2:\n\nUsers: user@company.com,user2@company.com 4 access tokens added to cache 4 access tokens copied to clipboard\n\nExport-AADIntTeamsTokens\n\nSince version 0.7.2\n\nExports Teams tokens from the provided Cookie database, or from current user’s local database. The Teams Cookies database is SQLite database.\n\nExample 1:\n\nOutput 1:\n\nName Value ---- ----- office_access_token eyJ0eXAiOiJKV1QiLCJub25jZSI6InlsUjJWRmp4SWFqeVVqeklZa3R... skypetoken_asm eyJhbGciOiJSUzI1NiIsImtpZCI6IjEwNiIsIng1dCI6Im9QMWFxQnl... authtoken eyJ0eXAiOiJKV1QiLCJub25jZSI6InpsUFY2bnRCUDR5NTFLTkNQR2l... SSOAUTHCOOKIE eyJ0eXAiOiJKV1QiLCJub25jZSI6Ik5sbHJiaFlzYl9rVnU3VzVSa01...\n\nExample 2:\n\nOutput 2:\n\nUser: user@company.com Name Value ---- ----- office_access_token eyJ0eXAiOiJKV1QiLCJub25jZSI6InlsUjJWRmp4SWFqeVVqeklZa3R... skypetoken_asm eyJhbGciOiJSUzI1NiIsImtpZCI6IjEwNiIsIng1dCI6Im9QMWFxQnl... authtoken eyJ0eXAiOiJKV1QiLCJub25jZSI6InpsUFY2bnRCUDR5NTFLTkNQR2l... SSOAUTHCOOKIE eyJ0eXAiOiJKV1QiLCJub25jZSI6Ik5sbHJiaFlzYl9rVnU3VzVSa01...\n\nExample 3:\n\nOutput 3:\n\nUser: user@company.com 3 access tokens added to cache Id Content DeletionTime MessageType Type DisplayName -- ------- ------------ ----------- ---- ----------- 1602842299338 1602846853687 RichText/Html MessageUpdate Bad User 1602844861358 1602858789696 RichText/Html MessageUpdate Bad User 1602846167606 1602858792943 Text MessageUpdate Bad User 1602846853687 1602858795517 Text MessageUpdate Bad User 1602833251951 1602833251951 Text MessageUpdate Bad User 1602833198442 1602833198442 Text MessageUpdate Bad User 1602859223294 Hola User! Text NewMessage Bad User 1602859423019 Hi User! Text NewMessage Bad User 1602859423019 Hi User! Text MessageUpdate Bad User 1602859473083 <div><div>Hi User!</div></div> RichText/Html NewMessage Bad User 1602859484420 Hey User! Text NewMessage Bad User 1602859528028 Hy User! Text NewMessage Bad User 1602859484420 Hey User! Text MessageUpdate Bad User 1602859590916 Hi User! Text NewMessage Bad User\n\nExport-AADIntTokenBrokerTokens\n\nSince version 0.7.5\n\nExports access tokens from the Token Broker cache.\n\nExample 1:\n\nOutput 1:\n\nUsers: user@company.com,user2@company.com UserName access_token -------- ------------ user@company.com eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGx... user@company.com eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGx... user2@company.com eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGx... user2@company.com eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjJaUXBKM1VwYmpBWVhZR2FYRUpsOGx...\n\nExample 2:\n\nOutput 2:\n\nUsers: user@company.com,user2@company.com 3 access tokens added to cache Id Content DeletionTime MessageType Type DisplayName -- ------- ------------ ----------- ---- ----------- 1602842299338 1602846853687 RichText/Html MessageUpdate Bad User 1602844861358 1602858789696 RichText/Html MessageUpdate Bad User 1602846167606 1602858792943 Text MessageUpdate Bad User 1602846853687 1602858795517 Text MessageUpdate Bad User 1602833251951 1602833251951 Text MessageUpdate Bad User 1602833198442 1602833198442 Text MessageUpdate Bad User 1602859223294 Hola User! Text NewMessage Bad User 1602859423019 Hi User! Text NewMessage Bad User 1602859423019 Hi User! Text MessageUpdate Bad User 1602859473083 <div><div>Hi User!</div></div> RichText/Html NewMessage Bad User 1602859484420 Hey User! Text NewMessage Bad User 1602859528028 Hy User! Text NewMessage Bad User 1602859484420 Hey User! Text MessageUpdate Bad User 1602859590916 Hi User! Text NewMessage Bad User\n\nGet-AADIntAccessTokenUsingIMDS\n\nSince version 0.8.0\n\nGets access token using Azure Instance Metadata Service (IMDS). The ClientId of the token is the (Enterprise) Application ID of the managed identity.\n\nExample:\n\nName : ClientId : 686d728a-2838-458d-9038-2d9808781b9a Audience : https://management.core.windows.net Tenant : ef35ef41-6e54-43f8-bdf0-b89827a3a991 IsExpired : False HasRefreshToken : False AuthMethods : Device :\n\nOutput:\n\nsubscriptionId displayName state -------------- ----------- ----- 233cd967-f2d4-41eb-897a-47ac77c7393d Production Enabled\n\nToken cache\n\nToken cache allows calling AADInternals functions without providing access token. If access token is not provided, AADInternals tries to get access token from the cache.\n\nAADInternals will return the first token it finds using the following steps:\n\nDoes access token with matching ClientId & Resource exist in cache?\n\nDoes access token with any ClientId and matching Resource exist in cache?\n\nIf required ClientId is FOCI client:\n\nDoes refresh token of any FOCI client exist in cache?\n\nGet access token for desired ClientId and Resource using FOCI client refresh token\n\nNote: There can be access tokens for multiple users and tenants in the cache. To make sure you are using a proper access token clear the cache always when changing user and/or tenant!\n\nTo see the cache:\n\nName ClientId Audience Tenant IsExpired HasRefreshToken ---- -------- -------- ------ --------- --------------- admin@company.com 1b730954-1685-4b74-9bfd-dac224a7b894 https://graph.windows.net 82205ae4-4c4e-4db5-890c-cb5e5a98d7a3 False True\n\nTo clear the cache:\n\nTo add tokens to cache (refresh token optional):\n\nName ClientId Audience Tenant IsExpired HasRefreshToken ---- -------- -------- ------ --------- --------------- admin@company.com 1b730954-1685-4b74-9bfd-dac224a7b894 https://graph.windows.net 82205ae4-4c4e-4db5-890c-cb5e5a98d7a3 False True\n\nTenant information and manipulation functions\n\nInformation functions are functions that can be used to retrieve information about users, tenants, and Office 365. Functions marked with * doesn’t need authentication. Functions marked with A uses AAD Graph access token.\n\nGet-AADIntLoginInformation (*)\n\nThis function returns login information for the given user (or domain).\n\nExample:\n\nOutput:\n\nFederation Protocol : WSTrust Pref Credential : 4 Consumer Domain : Cloud Instance audience urn : urn:federation:MicrosoftOnline Authentication Url : https://msft.sts.microsoft.com/adfs/ls/?username=nn%40microsoft.com&wa=wsignin1.0&wtrealm=urn%3afederation%3aMicrosoftOnline&wctx= Throttle Status : 1 Account Type : Federated Has Password : True Federation Active Authentication Url : https://msft.sts.microsoft.com/adfs/services/trust/2005/usernamemixed Exists : 0 Federation Metadata Url : https://msft.sts.microsoft.com/adfs/services/trust/mex Desktop Sso Enabled : Tenant Banner Logo : Tenant Locale : Cloud Instance : microsoftonline.com State : 3 Domain Type : 4 Domain Name : microsoft.com Tenant Banner Illustration : Federation Brand Name : Microsoft Federation Global Version : -1 User State : 2\n\nGet-AADIntEndpointInstances (*)\n\nThis function returns Office 365 instances and information when the latest changes have been made (e.g. ips & urls).\n\nExample:\n\nOutput:\n\ninstance latest -------- ------ Worldwide 2018100100 USGovDoD 2018100100 USGovGCCHigh 2018100100 China 2018100100 Germany 2018100100\n\nGet-AADIntEndpointIps (*)\n\nThis function returns Office 365 ip addresses and urls for the given instance. The information can be used to create firewall rules.\n\nExample:\n\nOutput:\n\nid : 1 serviceArea : Exchange serviceAreaDisplayName : Exchange Online urls : {outlook.office.com, outlook.office365.com} ips : {13.107.6.152/31, 13.107.9.152/31, 13.107.18.10/31, 13.107.19.10/31...} tcpPorts : 80,443 expressRoute : True category : Optimize required : True id : 2 serviceArea : Exchange serviceAreaDisplayName : Exchange Online urls : {smtp.office365.com} ips : {13.107.6.152/31, 13.107.9.152/31, 13.107.18.10/31, 13.107.19.10/31...} tcpPorts : 587 expressRoute : True category : Allow required : True\n\nGet-AADIntTenantDetails (A)\n\nThis function returns details for the given tenant.\n\nExample:\n\nOutput:\n\nodata.type : Microsoft.DirectoryServices.TenantDetail objectType : Company objectId : e21e0e8c-d2ed-4edf-aa91-937963949cdc deletionTimestamp : assignedPlans : .. city : companyLastDirSyncTime : 2018-10-25T12:53:43Z country : countryLetterCode : FI dirSyncEnabled : True displayName : Company Ltd marketingNotificationEmails : {} postalCode : preferredLanguage : en privacyProfile : provisionedPlans : .. provisioningErrors : {} securityComplianceNotificationMails : {} securityComplianceNotificationPhones : {} state : street : technicalNotificationMails : {user@alt.none} telephoneNumber : 123456789 verifiedDomains : ..\n\nGet-AADIntTenantID (*)\n\nSince version 0.1.6\n\nThis function returns tenant id for the given user, domain, or Access Token.\n\nExample:\n\nOutput:\n\n72f988bf-86f1-41af-91ab-2d7cd011db47\n\nGet-AADIntOpenIDConfiguration (*)\n\nSince version 0.1.6\n\nThis function returns the open ID configuration for the given user or domain.\n\nExample:\n\nOutput:\n\nauthorization_endpoint : https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/authorize token_endpoint : https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/token token_endpoint_auth_methods_supported : {client_secret_post, private_key_jwt, client_secret_basic} jwks_uri : https://login.microsoftonline.com/common/discovery/keys response_modes_supported : {query, fragment, form_post} subject_types_supported : {pairwise} id_token_signing_alg_values_supported : {RS256} http_logout_supported : True frontchannel_logout_supported : True end_session_endpoint : https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/logout response_types_supported : {code, id_token, code id_token, token id_token...} scopes_supported : {openid} issuer : https://sts.windows.net/72f988bf-86f1-41af-91ab-2d7cd011db47/ claims_supported : {sub, iss, cloud_instance_name, cloud_instance_host_name...} microsoft_multi_refresh_token : True check_session_iframe : https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/oauth2/checksession userinfo_endpoint : https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/openid/userinfo tenant_region_scope : WW cloud_instance_name : microsoftonline.com cloud_graph_host_name : graph.windows.net msgraph_host : graph.microsoft.com rbac_url : https://pas.windows.net\n\nGet-AADIntServiceLocations (A)\n\nThis function shows the tenant’s true service locations.\n\nExample:\n\nOutput:\n\nRegion Instance Name State Country ------ -------- ---- ----- ------- EU EU001 PowerBI IR EU PROD_MSUB01_02 SCO IE NA NA001 MultiFactorService US NA NA001 AzureAdvancedThreatAnalytics US EU Prod04 Adallom GB NA NA001 AADPremiumService US EU EURP191-001-01 exchange IE NA NA003 YammerEnterprise US NA NA001 To-Do US NA NA001 TeamspaceAPI US NA NA001 Sway US EU SPOS1196 SharePoint NL EU EU RMSOnline NL EU PROD_EU_Org_Ring_152 ProjectWorkManagement NL NA NA001 ProcessSimple US NA NA001 PowerAppsService US NA NA001 OfficeForms US NA NA001 MicrosoftStream US NA NorthAmerica1 MicrosoftOffice US EU EMEA-2E-S3 MicrosoftCommunicationsOnline NL EU emea05-01 ExchangeOnlineProtection NL NA NA001 Deskless US NA NA002 SMIT US NA NA001 Metro US EU EU003 DirectoryToCosmos GB NA * BecWSClients US NA NA033 BDM US EU EUGB02 AadAllTenantsNotifications GB\n\nGet-AADIntServicePlans (A)\n\nThis function returns information about tenant’s service plans, such as name, id, status, and when first assigned.\n\nExample:\n\nOutput:\n\nSKU ServicePlanId ServiceName ServiceType AssignedTimestamp CapabilityStatus ProvisioningStatus --- ------------- ----------- ----------- ----------------- ---------------- ------------------ ENTERPRISEPREMIUM b1188c4c-1b36-4018-b48b-ee07604f6feb PAM_ENTERPRISE Exchange 2018-09-27T15:47:45Z Enabled Success 76846ad7-7776-4c40-a281-a386362dd1b9 ProcessSimple 2018-09-27T15:47:25Z Deleted c87f142c-d1e9-4363-8630-aaea9c4d9ae5 To-Do 2018-09-27T15:47:24Z Deleted c68f8d98-5534-41c8-bf36-22fa496fa792 PowerAppsService 2018-09-27T15:47:25Z Deleted 9e700747-8b1d-45e5-ab8d-ef187ceec156 MicrosoftStream 2018-09-27T15:47:25Z Deleted 2789c901-c14e-48ab-a76a-be334d9d793a OfficeForms 2018-09-27T15:47:25Z Deleted ENTERPRISEPREMIUM 9f431833-0334-42de-a7dc-70aa40db46db LOCKBOX_ENTERPRISE Exchange 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM 3fb82609-8c27-4f7b-bd51-30634711ee67 BPOS_S_TODO_3 To-Do 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM 7547a3fe-08ee-4ccb-b430-5077c5041653 YAMMER_ENTERPRISE YammerEnterprise 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM 8e0c0a52-6a6c-4d40-8370-dd62790dcd70 THREAT_INTELLIGENCE Exchange 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM 9c0dab89-a30c-4117-86e7-97bda240acd2 POWERAPPS_O365_P3 PowerAppsService 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM b737dad2-2f6c-4c65-90e3-ca563267e8b9 PROJECTWORKMANAGEMENT ProjectWorkManagement 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM 5dbe027f-2339-4123-9542-606e4d348a72 SHAREPOINTENTERPRISE SharePoint 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM 8c098270-9dd4-4350-9b30-ba4703f3b36b ADALLOM_S_O365 Adallom 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM 6c6042f5-6f01-4d67-b8c1-eb99d36eed3e STREAM_O365_E5 MicrosoftStream 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM 07699545-9485-468e-95b6-2fca3738be01 FLOW_O365_P3 ProcessSimple 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM 4de31727-a228-4ec3-a5bf-8e45b5ca48cc EQUIVIO_ANALYTICS Exchange 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM 0feaeb32-d00e-4d66-bd5a-43b5b83db82c MCOSTANDARD MicrosoftCommunicationsOnline 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM 70d33638-9c74-4d01-bfd3-562de28bd4ba BI_AZURE_P2 PowerBI 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM 43de0ff5-c92c-492b-9116-175376d08c38 OFFICESUBSCRIPTION MicrosoftOffice 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM 3e26ee1f-8a5f-4d52-aee2-b81ce45c8f40 MCOMEETADV MicrosoftCommunicationsOnline 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM e95bec33-7c88-4a70-8e19-b10bd9d0c014 SHAREPOINTWAC SharePoint 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM 8c7d2df8-86f0-4902-b2ed-a0458298f3b3 Deskless Deskless 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM 57ff2da0-773e-42df-b2af-ffb7a2317929 TEAMS1 TeamspaceAPI 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM 4828c8ec-dc2e-4779-b502-87ac9ce28ab7 MCOEV MicrosoftCommunicationsOnline 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM 34c0d7a0-a70f-4668-9238-47f9fc208882 EXCHANGE_ANALYTICS Exchange 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM f20fedf3-f3c3-43c3-8267-2bfdd51c0939 ATP_ENTERPRISE Exchange 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM efb87545-963c-4e0d-99df-69c6916d9eb0 EXCHANGE_S_ENTERPRISE Exchange 2018-08-27T05:46:51Z Enabled Success ENTERPRISEPREMIUM e212cbc7-0961-4c40-9825-01117710dcb1 FORMS_PLAN_E5 OfficeForms 2018-08-27T05:46:50Z Enabled Success ENTERPRISEPREMIUM a23b959c-7ce8-4e57-9140-b90eb88a9e97 SWAY Sway 2018-08-27T05:46:51Z Enabled Success EMSPREMIUM 113feb6c-3fe4-4440-bddc-54d774bf0318 EXCHANGE_S_FOUNDATION Exchange 2018-08-13T10:17:31Z Enabled Success EMSPREMIUM eec0eb4f-6444-4f95-aba0-50c24d67f998 AAD_PREMIUM_P2 AADPremiumService 2018-08-13T10:17:33Z Enabled Success EMSPREMIUM c1ec4a95-1f05-45b3-a911-aa3fa01094f5 INTUNE_A SCO 2018-08-13T10:17:32Z Enabled Success EMSPREMIUM 2e2ddb96-6af9-4b1d-a3f0-d6ecfd22edb2 ADALLOM_S_STANDALONE Adallom 2018-08-13T10:17:31Z Enabled Success EMSPREMIUM 6c57d4b6-3b23-47a5-9bc9-69f17b4947b3 RMS_S_PREMIUM RMSOnline 2018-08-13T10:17:32Z Enabled Success EMSPREMIUM 41781fb2-bc02-4b7c-bd55-b576c07bb09d AAD_PREMIUM AADPremiumService 2018-08-13T10:17:34Z Enabled Success EMSPREMIUM 14ab5db5-e6c4-4b20-b4bc-13e36fd2227f ATA AzureAdvancedThreatAnalytics 2018-08-13T10:17:31Z Enabled Success EMSPREMIUM 8a256a2b-b617-496d-b51b-e76466e88db0 MFA_PREMIUM MultiFactorService 2018-08-13T10:17:33Z Enabled Success EMSPREMIUM 5689bec4-755d-4753-8b61-40975025187c RMS_S_PREMIUM2 RMSOnline 2018-08-13T10:17:31Z Enabled Success ENTERPRISEPREMIUM 882e1d05-acd1-4ccb-8708-6ee03664b117 INTUNE_O365 SCO 2018-07-26T15:47:50Z Deleted PendingActivation EMSPREMIUM bea4c11e-220a-4e6d-8eb8-8ea15d019f90 RMS_S_ENTERPRISE RMSOnline 2018-06-26T10:47:37Z Enabled Success\n\nGet-AADIntServicePrincipals (A)\n\nSince version 0.4.5\n\nExtracts Azure AD service principals.\n\nExample:\n\nOutput:\n\nAccountEnabled : true Addresses : AppPrincipalId : d32c68ad-72d2-4acb-a0c7-46bb2cf93873 DisplayName : Microsoft Activity Feed Service ObjectId : 321e7bdd-d7b0-4a64-8eb3-38c259c1304a ServicePrincipalNames : ServicePrincipalNames TrustedForDelegation : false AccountEnabled : true Addresses : Addresses AppPrincipalId : 0000000c-0000-0000-c000-000000000000 DisplayName : Microsoft App Access Panel ObjectId : a9e03f2f-4471-41f2-96c5-589d5d7117bc ServicePrincipalNames : ServicePrincipalNames TrustedForDelegation : false AccountEnabled : true Addresses : AppPrincipalId : dee7ba80-6a55-4f3b-a86c-746a9231ae49 DisplayName : Microsoft AppPlat EMA ObjectId : ae0b81fc-c521-4bfd-9eaa-04c520b4b5fd ServicePrincipalNames : ServicePrincipalNames TrustedForDelegation : false AccountEnabled : true Addresses : Addresses AppPrincipalId : 65d91a3d-ab74-42e6-8a2f-0add61688c74 DisplayName : Microsoft Approval Management ObjectId : d8ec5b95-e5f6-416e-8e7c-c6c52ec5a11f ServicePrincipalNames : ServicePrincipalNames TrustedForDelegation : false\n\nExample:\n\nOutput:\n\nodata.type : Microsoft.DirectoryServices.ServicePrincipal objectType : ServicePrincipal objectId : 321e7bdd-d7b0-4a64-8eb3-38c259c1304a deletionTimestamp : accountEnabled : True addIns : {} alternativeNames : {} appBranding : appCategory : appData : appDisplayName : Microsoft Activity Feed Service appId : d32c68ad-72d2-4acb-a0c7-46bb2cf93873 applicationTemplateId : appMetadata : appOwnerTenantId : f8cdef31-a31e-4b4a-93e4-5f571e91255a appRoleAssignmentRequired : False appRoles : {} authenticationPolicy : disabledByMicrosoftStatus : displayName : Microsoft Activity Feed Service errorUrl : homepage : informationalUrls : @{termsOfService=; support=; privacy=; marketing=} keyCredentials : {} logoutUrl : managedIdentityResourceId : microsoftFirstParty : True notificationEmailAddresses : {} oauth2Permissions : {...} passwordCredentials : {} preferredSingleSignOnMode : preferredTokenSigningKeyEndDateTime : preferredTokenSigningKeyThumbprint : publisherName : Microsoft Services replyUrls : {} samlMetadataUrl : samlSingleSignOnSettings : servicePrincipalNames : {d32c68ad-72d2-4acb-a0c7-46bb2cf93873, https://activity.windows.com, https://acti vity.microsoft.com, https://enterprise.activity.windows.com} tags : {} tokenEncryptionKeyId : servicePrincipalType : Application useCustomTokenSigningKey : verifiedPublisher : @{displayName=; verifiedPublisherId=; addedDateTime=}\n\nGet-AADIntSubscriptions (A)\n\nThis function returns tenant’s subscription details, such as name, id, number of licenses, and when created.\n\nExample:\n\nOutput:\n\nSkuPartNumber WarningUnits TotalLicenses IsTrial NextLifecycleDate OcpSubscriptionId ConsumedUnits ObjectId SkuId DateCreated ------------- ------------ ------------- ------- ----------------- ----------------- ------------- -------- ----- ----------- EMSPREMIUM 0 250 true 2018-11-13T00:00:00Z 76909010-12ed-4b05-b3d7-ee1b42c21b4e 21 58265dbe-24e0-4cdb-8b62-51197a4c1c13 b05e124f-c7cc-45a0-a6aa-8cf78c946968 2018-08-13T00:00:00Z ENTERPRISEPREMIUM 25 25 true 2018-10-27T15:47:40Z 7c206b83-2487-49fa-b91e-3d676de02ccb 21 df58544b-5062-4d6c-85de-937f203bbe0f c7df2760-2c81-4ef7-b578-5b5392b571df 2018-08-27T00:00:00Z\n\nGet-AADIntSPOServiceInformation (A)\n\nThis function returns details of tenant’s SharePoint Online instance, such as when created and last modified.\n\nExample:\n\nOutput: (sorted for clarity)\n\nCreatedOn : 6/26/2018 11:16:12 AM EnableOneDriveforSuiteUsers : False InstanceId : 44f5a625-f90e-4916-b8ab-ec45d38bdbb6 LastModifiedOn : 10/25/2018 7:37:38 AM OfficeGraphUrl : https://company-my.sharepoint.com/_layouts/15/me.aspx RootAdminUrl : https://company-admin.sharepoint.com/ RootIWSPOUrl : https://company-my.sharepoint.com/ SPO_LegacyPublicWebSiteEditPage : Pages/Forms/AllItems.aspx SPO_LegacyPublicWebSitePublicUrl : SPO_LegacyPublicWebSiteUrl : SPO_MySiteHostUrl : https://company-my.sharepoint.com/ SPO_MySiteHost_AboutMeUrl : https://company-my.sharepoint.com/person.aspx SPO_MySiteHost_DocumentsUrl : https://company-my.sharepoint.com/_layouts/15/MySite.aspx?MySiteRedirect=AllDocuments SPO_MySiteHost_NewsFeedUrl : https://company-my.sharepoint.com/default.aspx SPO_MySiteHost_ProjectSiteUrl : https://company-my.sharepoint.com/_layouts/15/MyProjects.aspx SPO_MySiteHost_SitesUrl : https://company-my.sharepoint.com/_layouts/15/MySite.aspx?MySiteRedirect=AllSites SPO_PublicWebSitePublicUrl : SPO_PublicWebSiteUrl : NotSupported SPO_RegionalRootSiteUrl : https://company.sharepoint.com/ SPO_RootSiteUrl : https://company.sharepoint.com/ SPO_TenantAdminUrl : https://company-admin.sharepoint.com/ SPO_TenantAdmin_CreateSiteCollectionUrl : https://company-admin.sharepoint.com/_layouts/15/online/CreateSiteFull.aspx SPO_TenantAdmin_ProjectAdminUrl : https://company-admin.sharepoint.com/ SPO_TenantAdmin_ViewSiteCollectionsUrl : https://company-admin.sharepoint.com/ SPO_TenantUpgradeUrl : https://company-admin.sharepoint.com/ ServiceInformation_LastChangeDate : 10/25/2018 7:37:22 AM ShowSites_InitialVisibility : True ShowSkyDrivePro_InitialVisibility : True ShowYammerNewsFeed_InitialVisibility : True VideoPortalServerRelativeUrl : /portals/hub/_layouts/15/videohome.aspx\n\nGet-AADIntCompanyInformation (A)\n\nThis function returns details about tenant’s company information. Pretty much same functionality than Get-MsolCompanyInformation cmdlet.\n\nExample:\n\nOutput:\n\nAllowAdHocSubscriptions : false AllowEmailVerifiedUsers : false AuthorizedServiceInstances : AuthorizedServiceInstances AuthorizedServices : City : CompanyDeletionStartTime : CompanyTags : CompanyTags CompanyType : CompanyTenant CompassEnabled : Country : CountryLetterCode : GB DapEnabled : DefaultUsageLocation : DirSyncAnchorAttribute : DirSyncApplicationType : 1651564e-7ce4-4d99-88be-0a65050d8dc3 DirSyncClientMachineName : SERVER2016 DirSyncClientVersion : 1.1.882.0 DirSyncServiceAccount : Sync_SERVER2016_acf4f37725ce@company.onmicrosoft.com DirectorySynchronizationEnabled : true DirectorySynchronizationStatus : Enabled DisplayName : Company Ltd InitialDomain : company.onmicrosoft.com LastDirSyncTime : 2018-10-25T13:53:46Z LastPasswordSyncTime : 2018-10-25T14:03:01Z MarketingNotificationEmails : MultipleDataLocationsForServicesEnabled : ObjectId : 6c1a3ac3-5416-4dd0-984e-228cc80dbc9f PasswordSynchronizationEnabled : true PortalSettings : PortalSettings PostalCode : PreferredLanguage : en ReleaseTrack : StagedRollout ReplicationScope : EU RmsViralSignUpEnabled : false SecurityComplianceNotificationEmails : SecurityComplianceNotificationPhones : SelfServePasswordResetEnabled : false ServiceInformation : ServiceInformation ServiceInstanceInformation : ServiceInstanceInformation State : Street : SubscriptionProvisioningLimited : false TechnicalNotificationEmails : TechnicalNotificationEmails TelephoneNumber : 123456789 UIExtensibilityUris : UsersPermissionToCreateGroupsEnabled : false UsersPermissionToCreateLOBAppsEnabled : false UsersPermissionToReadOtherUsersEnabled : true UsersPermissionToUserConsentToAppEnabled : false\n\nThis function returns tags attached to the tenant. Microsoft uses these to identity the status of certain changes, such as SharePoint version update.\n\nExample:\n\nOutput:\n\nazure.microsoft.com/azure=active o365.microsoft.com/startdate=635711754831829038 o365.microsoft.com/version=15 o365.microsoft.com/signupexperience=GeminiSignUpUI o365.microsoft.com/14to15UpgradeScheduled=True o365.microsoft.com/14to15UpgradeCompletedDate=04-16-2013\n\nGet-AADIntAADConnectStatus (Z)\n\nSince version 0.4.5 Shows the status of Azure AD Connect (AAD Connect).\n\nExample:\n\nOutput:\n\nverifiedDomainCount : 4 verifiedCustomDomainCount : 3 federatedDomainCount : 2 numberOfHoursFromLastSync : 0 dirSyncEnabled : True dirSyncConfigured : True passThroughAuthenticationEnabled : True seamlessSingleSignOnEnabled : True\n\nGet-AADIntSyncConfiguration (A)\n\nThis function returns synchronisation details.\n\nExample:\n\nOutput:\n\nTresholdCount : 501 UserContainer : TenantId : 6c1a3ac3-5416-4dd0-984e-228cc80dbc9f ApplicationVersion : 1651564e-7ce4-4d99-88be-0a65050d8dc3 DisplayName : Company Ltd IsPasswordSyncing : true AllowedFeatures : {ObjectWriteback, , PasswordWriteback} PreventAccidentalDeletion : EnabledForCount TotalConnectorSpaceObjects : 15 MaxLinksSupportedAcrossBatchInProvision : 15000 UnifiedGroupContainer : IsTrackingChanges : false ClientVersion : 1.1.882.0 DirSyncFeatures : 41021 SynchronizationInterval : PT30M AnchorAttribute : DirSyncClientMachine : SERVER2016 IsDirSyncing : true TresholdPercentage : 0\n\nGet-AADIntTenantDomain (M)\n\nSince version 0.7.2\n\nReturns the default domain for the given tenant id.\n\nExample:\n\nOutput:\n\nmicrosoft.onmicrosoft.com\n\nGet-AADIntTenantDomains (*)\n\nSince version 0.1.6\n\nThis function returns all registered domains from the tenant of the given domain.\n\nExample:\n\nOutput:\n\ncompany.com company.fi company.co.uk company.onmicrosoft.com company.mail.onmicrosoft.com\n\nNew-AADIntMOERADomain (Z)\n\nSince version 0.8.0\n\nAdds a new Microsoft Online Email Routing Address (MOERA) domain (.onmicrosoft.com) to the tenant. You can have add up to 30 MOERA domains, and can also add subdomains.\n\nExample 1:\n\nTenant User Resource Client ------ ---- -------- ------ 6e3846ee-e8ca-4609-a3ab-f405cfbd02cd 74658136-14ec-4630-ad9b-26e160ff0fc6 d3590ed6-52b3-4102-aeff-aad2292ab01c\n\nOutput 2:\n\nauthenticationType : isDefault : False isInitial : False isVerified : True name : mydomain.onmicrosoft.com forceDeleteState :\n\nTenant User Resource Client ------ ---- -------- ------ 6e3846ee-e8ca-4609-a3ab-f405cfbd02cd 74658136-14ec-4630-ad9b-26e160ff0fc6 d3590ed6-52b3-4102-aeff-aad2292ab01c\n\nOutput 2:\n\nNew-AADIntMOERADomain : Domain microsoft.onmicrosoft.com is already occupied by tenant 72f988bf-86f1-41af-91ab-2d7cd011db47\n\nGet-AADIntKerberosDomainSyncConfig (A)\n\nSince version 0.3.1\n\nGets tenant’s Kerberos domain sync configuration using Azure AD Sync API\n\nExample:\n\nOutput:\n\nPublicEncryptionKey SecuredEncryptionAlgorithm SecuredKeyId SecuredPartitionId ------------------- -------------------------- ------------ ------------------ RUNLMSAAAABOD8OPj7I3nfeuh7ELE47OtA3yvyryQ0wamf5jPy2uGKibaTRKJd/kFexTpJ8siBxszKCXC2sn1Fd9pEG2y7fu 5 2 15001\n\nGet-AADIntWindowsCredentialsSyncConfig (A)\n\nSince version 0.3.1\n\nGets tenant’s Windows credentials synchronization config\n\nExample:\n\nOutput:\n\nEnableWindowsLegacyCredentials EnableWindowsSupplementaCredentials SecretEncryptionCertificate ------------------------------ ----------------------------------- --------------------------- True False MIIDJTCCAg2gAwIBAgIQFwRSInW7I...\n\nGet-AADIntSyncDeviceConfiguration (A)\n\nSince version 0.3.1\n\nGets tenant’s Windows credentials synchronization config. Does not require admin rights.\n\nExample:\n\nOutput:\n\nPublicIssuerCertificates CloudPublicIssuerCertificates ------------------------ ----------------------------- {$null} {MIIDejCCAmKgAwIBAgIQzsvx7rE77rJM...\n\nGet-AADIntTenantAuthPolicy (M)\n\nSince version 0.4.3\n\nGets tenant’s authorization policy, including user and guest settings.\n\nExample:\n\nOutput:\n\nid : authorizationPolicy allowInvitesFrom : everyone allowedToSignUpEmailBasedSubscriptions : True allowedToUseSSPR : True allowEmailVerifiedUsersToJoinOrganization : False blockMsolPowerShell : False displayName : Authorization Policy description : Used to manage authorization related settings across the company. enabledPreviewFeatures : {} guestUserRoleId : a0b1b346-4d3e-4e8b-98f8-753987be4970 permissionGrantPolicyIdsAssignedToDefaultUserRole : {microsoft-user-default-legacy} defaultUserRolePermissions : @{allowedToCreateApps=True; allowedToCreateSecurityGroups=True; allowedToReadOtherUsers=True}\n\nGet-AADIntTenantGuestAccess (M)\n\nSince version 0.4.3\n\nGets the guest access level of the user’s tenant.\n\nAccess level Description Inclusive Guest users have the same access as members Normal Guest users have limited access to properties and memberships of directory objects Restricted Guest user access is restricted to properties and memberships of their own directory objects (most restrictive)\n\nExample:\n\nOutput:\n\nAccess Description RoleId ------ ----------- ------ Normal Guest users have limited access to properties and memberships of directory objects 10dae51f-b6af-4016-8d66-8c2a99b929b3\n\nSet-AADIntTenantGuestAccess (M)\n\nSince version 0.4.3\n\nSets the guest access level of the user’s tenant.\n\nAccess level Description Inclusive Guest users have the same access as members Normal Guest users have limited access to properties and memberships of directory objects Restricted Guest user access is restricted to properties and memberships of their own directory objects (most restrictive)\n\nExample:\n\nOutput:\n\nAccess Description RoleId ------ ----------- ------ Normal Guest users have limited access to properties and memberships of directory objects 10dae51f-b6af-4016-8d66-8c2a99b929b3\n\nEnable-AADIntTenantMsolAccess (M)\n\nSince version 0.4.3\n\nEnables Msol PowerShell module access for the user’s tenant.\n\nExample:\n\nOutput:\n\nblockMsolPowerShell ------------------- False\n\nDisable-AADIntTenantMsolAccess (M)\n\nSince version 0.4.3\n\nDisables Msol PowerShell module access for the user’s tenant.\n\nExample:\n\nOutput:\n\nblockMsolPowerShell ------------------- True\n\nGet-AADIntUnifiedAuditLogSettings (E)\n\nSince version 0.4.5\n\nGets Unified Audit Log settings with Get-AdminAuditLogConfig using Remote Exchange Online PowerShell.\n\nExample:\n\nOutput:\n\nUnifiedAuditLogIngestionEnabled UnifiedAuditLogFirstOptInDate ------------------------------- ----------------------------- true 2021-01-22T09:59:51.0870075Z\n\nSet-AADIntUnifiedAuditLogSettings (E)\n\nSince version 0.4.5\n\nEnables or disables Unified Audit log Set-AdminAuditLogConfig using Remote Exchange Online PowerShell.\n\nNote! It will take hours for the changes to take effect.\n\nExample:\n\nGet-AADIntComplianceAPICookies\n\nSince version 0.6.2\n\nGets cookies used with compliance API functions.\n\nNote! Uses interactive login form so AAD Joined or Registered computers may login automatically. If this happens, start PowerShell as another user and try again.\n\nExample1:\n\nExample2:\n\nExample3:\n\nSearch-AADIntUnifiedAuditLog (CA)\n\nSince version 0.6.2\n\nSearches Unified Audit Log using https://compliance.microsoft.com/api. By default, returns 150 first log entries. With -All switch returns all entries matching the query (max 50100).\n\nExample1:\n\nExample2:\n\nGet-AADIntConditionalAccessPolicies (A)\n\nSince version 0.4.7\n\nShows conditional access policies.\n\nExample:\n\nOutput:\n\nodata.type : Microsoft.DirectoryServices.Policy objectType : Policy objectId : 1a6a3b84-7d6d-4398-9c26-50fab315be8b deletionTimestamp : displayName : Default Policy keyCredentials : {} policyType : 18 policyDetail : {{\"Version\":0,\"State\":\"Disabled\"}} policyIdentifier : 2022-11-18T00:16:20.2379877Z tenantDefaultPolicy : 18 odata.type : Microsoft.DirectoryServices.Policy objectType : Policy objectId : 7f6ac8e5-bd21-4091-ae4c-0e48e0f4db04 deletionTimestamp : displayName : Block NestorW keyCredentials : {} policyType : 18 policyDetail : {{\"Version\":1,\"CreatedDateTime\":\"2022-11-18T00:16:19.461967Z\",\"State\":\"Enabled \",\"Conditions\":{\"Applications\":{\"Include\":[{\"Applications\":[\"None\"]}]},\"Users\" :{\"Include\":[{\"Users\":[\"8ab3ed0d-6668-49f7-a108-c50bb230c870\"]}]}},\"Controls\": [{\"Control\":[\"Block\"]}],\"EnforceAllPoliciesForEas\":true,\"IncludeOtherLegacyCli entTypeForEvaluation\":true}} policyIdentifier : tenantDefaultPolicy :\n\nGet-AADIntAzureADPolicies (A)\n\nSince version 0.8.0\n\nShows Azure AD policies.\n\nExample:\n\nOutput:\n\nodata.type : Microsoft.DirectoryServices.Policy objectType : Policy objectId : e35e4cd3-53f8-4d65-80bb-e3279c2c1b71 deletionTimestamp : displayName : On-Premise Authentication Flow Policy keyCredentials : {**} policyType : 8 policyDetail : {**} policyIdentifier : tenantDefaultPolicy : 8 odata.type : Microsoft.DirectoryServices.Policy objectType : Policy objectId : 259b810f-fb50-4e57-925b-ec2292c17883 deletionTimestamp : displayName : 2/5/2021 5:53:07 AM keyCredentials : {} policyType : 10 policyDetail : {{\"SecurityPolicy\":{\"Version\":0,\"SecurityDefaults\":{\"IgnoreBaselineProtectionPolicies\":true,\"I sEnabled\":false}}}} policyIdentifier : tenantDefaultPolicy : 10\n\nSet-AADIntAzureADPolicyDetails (A)\n\nSince version 0.8.0\n\nSets Azure AD policy details using Azure AD Graph API. This allows admins to modify policy details, including metadata of Conditional Access policies. Modifications are logged to audit log, but the modified properties are not shown.\n\nExample 1:\n\nodata.type : Microsoft.DirectoryServices.Policy objectType : Policy objectId : e35e4cd3-53f8-4d65-80bb-e3279c2c1b71 deletionTimestamp : displayName : On-Premise Authentication Flow Policy keyCredentials : {**} policyType : 8 policyDetail : {**} policyIdentifier : tenantDefaultPolicy : 8 odata.type : Microsoft.DirectoryServices.Policy objectType : Policy objectId : 259b810f-fb50-4e57-925b-ec2292c17883 deletionTimestamp : displayName : 2/5/2021 5:53:07 AM keyCredentials : {} policyType : 10 policyDetail : {{\"SecurityPolicy\":{\"Version\":0,\"SecurityDefaults\":{\"IgnoreBaselineProtectionPolicies\":true,\"IsEnabled\":true}}}} policyIdentifier : tenantDefaultPolicy : 10\n\nExample 2:\n\nGet-AADIntSelfServicePurchaseProducts (CM)\n\nSince version 0.6.2\n\nLists the status of self-service purchase products.\n\nExample:\n\nOutput:\n\nProduct Id Status ------- -- ------ Windows 365 Enterprise CFQ7TTC0HHS9 Enabled Windows 365 Business with Windows Hybrid Benefit CFQ7TTC0HX99 Enabled Windows 365 Business CFQ7TTC0J203 Enabled Power Automate per user CFQ7TTC0KP0N Enabled Power Apps per user CFQ7TTC0KP0P Enabled Power Automate RPA CFQ7TTC0KXG6 Enabled Power BI Premium (standalone) CFQ7TTC0KXG7 Enabled Visio Plan 2 CFQ7TTC0KXN8 Enabled Visio Plan 1 CFQ7TTC0KXN9 Enabled Project Plan 3 CFQ7TTC0KXNC Enabled Project Plan 1 CFQ7TTC0KXND Enabled Power BI Pro CFQ7TTC0L3PB Enabled\n\nSet-AADIntSelfServicePurchaseProduct (CM)\n\nSince version 0.6.2\n\nChange the status of the given self-service purchase product.\n\nExample1:\n\nOutput:\n\nProduct Id Status ------- -- ------ Power BI Pro CFQ7TTC0L3PB Disabled\n\nExample2:\n\nOutput:\n\nProduct Id Status ------- -- ------ Windows 365 Enterprise CFQ7TTC0HHS9 Disabled Windows 365 Business with Windows Hybrid Benefit CFQ7TTC0HX99 Disabled Windows 365 Business CFQ7TTC0J203 Disabled Power Automate per user CFQ7TTC0KP0N Disabled Power Apps per user CFQ7TTC0KP0P Disabled Power Automate RPA CFQ7TTC0KXG6 Disabled Power BI Premium (standalone) CFQ7TTC0KXG7 Disabled Visio Plan 2 CFQ7TTC0KXN8 Disabled Visio Plan 1 CFQ7TTC0KXN9 Disabled Project Plan 3 CFQ7TTC0KXNC Disabled Project Plan 1 CFQ7TTC0KXND Disabled Power BI Pro CFQ7TTC0L3PB Disabled\n\nUnprotect-AADIntEstsAuthPersistentCookie (*)\n\nSince version 0.6.8\n\nDecrypts and dumps users stored in ESTSAUTHPERSISTENT.\n\nExample:\n\nOutput:\n\nname : Some User login : user@company.com imageAAD : work_account.png imageMSA : personal_account.png isLive : False isGuest : False link : user@company.com authUrl : isSigned : True sessionID : 1fb5e6b3-09a4-4ceb-bcad-3d6d0ee89bf7 domainHint : isWindows : False name : Another User login : user2@company.com imageAAD : work_account.png imageMSA : personal_account.png isLive : False isGuest : False link : user2@company.com authUrl : isSigned : False sessionID : 1fb5e6b3-09a4-4ceb-bcad-3d6d0ee89bf7 domainHint : isWindows : False\n\nGet-AADIntSyncFeatures (A)\n\nSince version 0.6.7\n\nShow the status of synchronisation features.\n\nExample:\n\nOutput:\n\nBlockCloudObjectTakeoverThroughHardMatch : True BlockSoftMatch : False DeviceWriteback : False DirectoryExtensions : False DuplicateProxyAddressResiliency : True DuplicateUPNResiliency : True EnableSoftMatchOnUpn : True EnableUserForcePasswordChangeOnLogon : False EnforceCloudPasswordPolicyForPasswordSyncedUsers : False PassThroughAuthentication : False PasswordHashSync : True PasswordWriteBack : False SynchronizeUpnForManagedUsers : True UnifiedGroupWriteback : False UserWriteback : False\n\nSet-AADIntSyncFeatures (A)\n\nSince version 0.6.7\n\nEnables or disables synchronisation features using Azure AD Sync API. As such, doesn’t require “Global Administrator” credentials, “Directory Synchronization Accounts” credentials will do.\n\nExample:\n\nOutput:\n\nBlockCloudObjectTakeoverThroughHardMatch : True BlockSoftMatch : False DeviceWriteback : False DirectoryExtensions : False DuplicateProxyAddressResiliency : True DuplicateUPNResiliency : True EnableSoftMatchOnUpn : True EnableUserForcePasswordChangeOnLogon : False EnforceCloudPasswordPolicyForPasswordSyncedUsers : False PassThroughAuthentication : False PasswordHashSync : True PasswordWriteBack : False SynchronizeUpnForManagedUsers : True UnifiedGroupWriteback : False UserWriteback : False\n\nGet-AADIntTenantOrganisationInformation (AD)\n\nSince version 0.6.7\n\nReturns organisation information for the given tenant using commercial API used to get Partner Tenant information. Requires admin rights.\n\nExample:\n\nOutput:\n\nTenantId : 043050e2-7993-416a-ae66-108ab1951612 CompanyName : Company Ltd StreetAddress : 10 Wall Street ApartmentOrSuite : 666 City : New York StateOrProvince : NY PostalCode : 10005 CountryCode : US PhoneNumber : FirstName : LastName :\n\nGet-AADIntAzureADFeatures (A)\n\nSince version 0.9.3\n\nShow the status of Azure AD features.\n\nExample:\n\nOutput:\n\nFeature Enabled ------- ------- AllowEmailVerifiedUsers True AllowInvitations True AllowMemberUsersToInviteOthersAsMembers False AllowUsersToChangeTheirDisplayName False B2CFeature False BlockAllTenantAuth False ConsentedForMigrationToPublicCloud False CIAMFeature False CIAMTrialFeature False CIAMTrialUpgrade False EnableExchangeDualWrite False EnableHiddenMembership False EnableSharedEmailDomainApis False EnableWindowsLegacyCredentials False EnableWindowsSupplementalCredentials False ElevatedGuestsAccessEnabled False ExchangeDualWriteUsersV1 False GuestsCanInviteOthersEnabled True InvitationsEnabled True LargeScaleTenant False TestTenant False USGovTenant False DisableOnPremisesWindowsLegacyCredentialsSync False DisableOnPremisesWindowsSupplementalCredentialsSync False RestrictPublicNetworkAccess False AutoApproveSameTenantRequests False RedirectPpeUsersToMsaInt False LegacyTlsExceptionForEsts False LegacyTlsBlockForEsts False TenantAuthBlockReasonFraud False TenantAuthBlockReasonLifecycle False TenantExcludeDeprecateAADLicenses False\n\nGet-AADIntAzureADFeature (A)\n\nSince version 0.9.3\n\nShow the status of given Azure AD feature.\n\nExample:\n\nOutput:\n\nFalse\n\nSet-AADIntAzureADFeature (A)\n\nSince version 0.9.3\n\nEnables or disables the given Azure AD feature.\n\nExample:\n\nOutput:\n\nFeature Enabled ------- ------- B2CFeature True\n\nRollout policy functions\n\nRollout policy functions allows manipulating rollout policies. You list, create, edit, and delete policies. You can also add or remove groups from policies.\n\nWhen rollout policy is disabled from Azure Admin center, it still exists in Azure AD even though it is not visible. AADInternals allows you to list and delete also these policies.\n\nGet-AADIntRolloutPolicies (M)\n\nSince version 0.4.5\n\nGets the tenant’s rollout policies. Rollout policies allows organisations to transition from federation to cloud authentication in stages. This function can be used to list rollout policies not visible in Azure Admin center.\n\nExample:\n\nOutput:\n\nid : cdcb37e1-9c4a-4de9-a7f5-65fdf9f6241d displayName : passthroughAuthentication rollout policy description : feature : passthroughAuthentication isEnabled : True isAppliedToOrganization : False id : 3c89cd34-275c-4cba-8d8e-80338db7df91 displayName : seamlessSso rollout policy description : feature : seamlessSso isEnabled : True isAppliedToOrganization : False\n\nSet-AADIntRolloutPolicy (M)\n\nSince version 0.4.5\n\nCreates a new rollout policy or edits existing one. Supported policy types are passwordHashSync (PHS), passthroughAuthentication (PTA), and seamlessSso (SSSO)\n\nExample 1:\n\nOutput:\n\n@odata.context : https://graph.microsoft.com/beta/$metadata#directory/featureRolloutPolicies/$entity id : cdcb37e1-9c4a-4de9-a7f5-65fdf9f6241d displayName : passthroughAuthentication rollout policy description : feature : passthroughAuthentication isEnabled : True isAppliedToOrganization : False\n\nExample 2:\n\nOutput:\n\nid : cdcb37e1-9c4a-4de9-a7f5-65fdf9f6241d displayName : passthroughAuthentication rollout policy description : feature : passthroughAuthentication isEnabled : True isAppliedToOrganization : False id : 3c89cd34-275c-4cba-8d8e-80338db7df91 displayName : seamlessSso rollout policy description : feature : seamlessSso isEnabled : True isAppliedToOrganization : False\n\nRemove-AADIntRolloutPolicy (M)\n\nSince version 0.4.5\n\nRemoves the given rollout policy. The policy MUST be disabled before it can be removed. If not, it won’t be removed but no error is given.\n\nExample:\n\nOutput:\n\nid : cdcb37e1-9c4a-4de9-a7f5-65fdf9f6241d displayName : passthroughAuthentication rollout policy description : feature : passthroughAuthentication isEnabled : True isAppliedToOrganization : False id : 3c89cd34-275c-4cba-8d8e-80338db7df91 displayName : seamlessSso rollout policy description : feature : seamlessSso isEnabled : True isAppliedToOrganization : False\n\nGet-AADIntRolloutPolicyGroups (M)\n\nSince version 0.4.5\n\nLists the groups of the given rollout policy.\n\nExample:\n\nOutput:\n\nid : cdcb37e1-9c4a-4de9-a7f5-65fdf9f6241d displayName : passthroughAuthentication rollout policy description : feature : passthroughAuthentication isEnabled : True isAppliedToOrganization : False id : 3c89cd34-275c-4cba-8d8e-80338db7df91 displayName : seamlessSso rollout policy description : feature : seamlessSso isEnabled : True isAppliedToOrganization : False\n\nOutput:\n\ndisplayName id ----------- -- PTA SSO Sales b9faf3ba-db5f-4ed2-b9c8-0fd5916de1f3 PTA SSO Marketing f35d712f-dcdb-4040-a93d-ffd04aff3f75\n\nAdd-AADIntRolloutPolicyGroups (M)\n\nSince version 0.4.5\n\nAdds given groups to the given rollout policy.\n\nReturn value meanings:\n\nStatus Description 204 The group successfully added 400 Invalid group id 404 Invalid policy id\n\nExample:\n\nOutput:\n\nid : cdcb37e1-9c4a-4de9-a7f5-65fdf9f6241d displayName : passthroughAuthentication rollout policy description : feature : passthroughAuthentication isEnabled : True isAppliedToOrganization : False id : 3c89cd34-275c-4cba-8d8e-80338db7df91 displayName : seamlessSso rollout policy description : feature : seamlessSso isEnabled : True isAppliedToOrganization : False\n\nOutput:\n\nid status -- ------ b9faf3ba-db5f-4ed2-b9c8-0fd5916de1f3 204 f35d712f-dcdb-4040-a93d-ffd04aff3f75 204\n\nRemove-AADIntRolloutPolicyGroups (M)\n\nSince version 0.4.5\n\nRemoves given groups from the given rollout policy.\n\nReturn value meanings:\n\nStatus Description 204 The group successfully added 400 Invalid group id 404 Invalid policy id\n\nExample:\n\nOutput:\n\nid : cdcb37e1-9c4a-4de9-a7f5-65fdf9f6241d displayName : passthroughAuthentication rollout policy description : feature : passthroughAuthentication isEnabled : True isAppliedToOrganization : False id : 3c89cd34-275c-4cba-8d8e-80338db7df91 displayName : seamlessSso rollout policy description : feature : seamlessSso isEnabled : True isAppliedToOrganization : False\n\nOutput:\n\ndisplayName id ----------- -- PTA SSO Sales b9faf3ba-db5f-4ed2-b9c8-0fd5916de1f3 PTA SSO Marketing f35d712f-dcdb-4040-a93d-ffd04aff3f75\n\nOutput:\n\nid status -- ------ b9faf3ba-db5f-4ed2-b9c8-0fd5916de1f3 204 f35d712f-dcdb-4040-a93d-ffd04aff3f75 204\n\nUtilities\n\nUtilities provide the functionality for troubleshooting etc.\n\nRead-AADIntAccesstoken (*)\n\nThis function show access (and id and refresh) token information. For debugging, the most important values are the audience (aud) and the issuer (iss). Use -validate switch to validate the signature and to check the expiration.\n\nYou can also show details from the token copied from the browser session’s authorization -header.\n\nExample1:\n\nOutput1:\n\naud : https://graph.windows.net iss : https://sts.windows.net/fe177079-66f4-4f9f-bcb6-e085b92e3c8a/ iat : 1540478026 nbf : 1540478026 exp : 1540481926 acr : 1 aio : ASQA2/8JAAAAXhS3vMo2OGlXvBZG0tScm9njsJUDhvoHtwdSlUx2Jvg= amr : {pwd} appid : 1b730954-1685-4b74-9bfd-dac224a7b894 appidacr : 0 family_name : demo given_name : admin ipaddr : 127.0.0.1 name : admin demo oid : 69be7da7-e29f-4753-b8c7-0417a63a1804 puid : 1003BFFDABE606EE scp : user_impersonation sub : SaN7kFxdXhzQN6B7C8ThGEg4gBIrcXo3lzcayeoReps tenant_region_scope : EU tid : 6217f557-602d-4fc8-b2f9-5cb948f6ce26 unique_name : admin@company.onmicrosoft.com upn : admin@company.onmicrosoft.com uti : bH3Bzy9D5ESLcW_S0KkoAA ver : 1.0\n\nExample2:\n\nOutput1:\n\nRead-Accesstoken : Access Token is expired At line:1 char:1 + Read-Accesstoken -AccessToken $at -Validate -verbose + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : NotSpecified: (:) [Write-Error], WriteErrorException + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Read-Accesstoken aud : https://graph.windows.net iss : https://sts.windows.net/fe177079-66f4-4f9f-bcb6-e085b92e3c8a/ iat : 1540478026 nbf : 1540478026 exp : 1540481926 acr : 1 aio : ASQA2/8JAAAAXhS3vMo2OGlXvBZG0tScm9njsJUDhvoHtwdSlUx2Jvg= amr : {pwd} appid : 1b730954-1685-4b74-9bfd-dac224a7b894 appidacr : 0 family_name : demo given_name : admin ipaddr : 127.0.0.1 name : admin demo oid : 69be7da7-e29f-4753-b8c7-0417a63a1804 puid : 1003BFFDABE606EE scp : user_impersonation sub : SaN7kFxdXhzQN6B7C8ThGEg4gBIrcXo3lzcayeoReps tenant_region_scope : EU tid : 6217f557-602d-4fc8-b2f9-5cb948f6ce26 unique_name : admin@company.onmicrosoft.com upn : admin@company.onmicrosoft.com uti : bH3Bzy9D5ESLcW_S0KkoAA ver : 1.0\n\nGet-AADIntImmutableID (*)\n\nThis function returns ImmutableId for the given ADUser -object. Must be run on a computer having ActiveDirectory -module\n\nExample:\n\nOutput:\n\nZjk1OGUxZTctNDE4ZS00Njk5LTg1ZjgtN2YyNGM2NTcwNW==\n\nStart-AADIntCloudShell ( C)\n\nSince version 0.4.3\n\nStarts an Azure Cloud Shell (PowerShell) session for the given user. Use -shell bash parameter to start Bash session.\n\nNote! Does not work with VSCode or ISE.\n\nExample:\n\nSet-AADIntProxySettings\n\nSince version 0.6.6\n\nSets proxy settings of the local Windows machine for:\n\n.NET Framework (both 32 & 64 bit) by editing machine.config\n\nLocalSystem using BITSAdmin\n\nNetworkService using BITSAdmin\n\nwinhttp using netsh\n\nLocal user by modifying registry\n\nMachine level by modifying registry\n\nForce machine level proxy by modifying registry\n\nTrusts Fiddler root certificate by importing it to Local Machine truster root certificates\n\nExample 1:\n\nOutput:\n\nSetting proxies for x86 & x64 .NET Frameworks: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\Config\\machine.config C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Config\\machine.config Setting proxy for LocalSystem: BITSADMIN version 3.0 BITS administration utility. (C) Copyright Microsoft Corp. Internet proxy settings for account LocalSystem were set. (connection = default) Proxy usage set to Manual_proxy Proxy list set to http://10.0.0.1:8080 Proxy bypass list set to <empty> Setting proxy for NetworkService: BITSADMIN version 3.0 BITS administration utility. (C) Copyright Microsoft Corp. Internet proxy settings for account NetworkService were set. (connection = default) Proxy usage set to Manual_proxy Proxy list set to http://10.0.0.1:8080 Proxy bypass list set to <empty> Setting winhttp proxy: Current WinHTTP proxy settings: Proxy Server(s) : 10.0.0.1:8080 Bypass List : (none) Setting the proxy of local user Internet Settings: VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections Property: DefaultConnectionSettings\". VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections Property: SavedLegacySettings\". Setting the proxy of machine Internet Settings: VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections Property: DefaultConnectionSettings\". VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections Property: SavedLegacySettings\". Setting machine level procy policy for Internet Settings: VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\CurrentVersion\\Internet Settings Property: ProxySettingsPerUser\".\n\nExample 2:\n\nOutput:\n\nSetting proxies for x86 & x64 .NET Frameworks: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\Config\\machine.config C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Config\\machine.config Setting proxy for LocalSystem: BITSADMIN version 3.0 BITS administration utility. (C) Copyright Microsoft Corp. Internet proxy settings for account LocalSystem were set. (connection = default) Proxy usage set to Manual_proxy Proxy list set to http://10.0.0.1:8080 Proxy bypass list set to <empty> Setting proxy for NetworkService: BITSADMIN version 3.0 BITS administration utility. (C) Copyright Microsoft Corp. Internet proxy settings for account NetworkService were set. (connection = default) Proxy usage set to Manual_proxy Proxy list set to http://10.0.0.1:8080 Proxy bypass list set to <empty> Setting winhttp proxy: Current WinHTTP proxy settings: Proxy Server(s) : 10.0.0.1:8080 Bypass List : (none) Setting the proxy of local user Internet Settings: VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections Property: DefaultConnectionSettings\". VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections Property: SavedLegacySettings\". Setting the proxy of machine Internet Settings: VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections Property: DefaultConnectionSettings\". VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections Property: SavedLegacySettings\". Setting machine level procy policy for Internet Settings: VERBOSE: Performing the operation \"Set Property\" on target \"Item: HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows\\CurrentVersion\\Internet Settings Property: ProxySettingsPerUser\". Trusting Fiddler root certificate: PSParentPath: Microsoft.PowerShell.Security\\Certificate::LocalMachine\\Root Thumbprint Subject ---------- ------- 33D6FCEE2850DC53EEED517F3E8E72EB944BD467 CN=DO_NOT_TRUST_FiddlerRoot, O=DO_NOT_TRUST, OU=Created by http://...\n\nUser manipulation\n\nUser manipulation functions provide the basic user adding/editing/deleting functionality and some extras.\n\nGet-AADIntUsers (A)\n\nThis function returns users of the tenant.\n\nExample:\n\nOutput:\n\nUserPrincipalName ObjectId ImmutableId ----------------- -------- ----------- LeeG@company.com 2eee0a36-9e2f-4985-80e1-4172ed8b3213 7jYndBUFCEqlXQNZEO3uwQ== LidiaH@company.com 34289155-2798-432d-9398-53e7e0918f38 W3clIieLs0ivUeoY1lu1fg== AllanD@company.com 3a0eea57-9f74-4ee5-8e84-353c35581cc2 BzPotuy3G0ySBJN5tZwB4w==\n\nGet-AADIntUser (A)\n\nThis function returns information for the given user.\n\nExample:\n\nOutput:\n\nAlternateEmailAddresses : AlternateMobilePhones : AlternativeSecurityIds : BlockCredential : false City : CloudExchangeRecipientDisplayType : 1073741824 Country : Department : Manufacturing DirSyncProvisioningErrors : DisplayName : Lee Gu Errors : Fax : FirstName : Lee ImmutableId : 7jYndBUFCEqlXQNZEO3uwQ== IndirectLicenseErrors : IsBlackberryUser : false IsLicensed : true LastDirSyncTime : 2018-06-26T11:04:16Z LastName : Gu LastPasswordChangeTimestamp : 2017-10-03T04:44:43Z LicenseAssignmentDetails : LicenseAssignmentDetails LicenseReconciliationNeeded : false Licenses : Licenses LiveId : 1003BFFDABE61DB7 MSExchRecipientTypeDetails : MSRtcSipDeploymentLocator : MSRtcSipPrimaryUserAddress : MobilePhone : OathTokenMetadata : ObjectId : 2eee0a36-9e2f-4985-80e1-4172ed8b3213 Office : 23/3101 OverallProvisioningStatus : PendingInput PasswordNeverExpires : true PasswordResetNotRequiredDuringActivate : true PhoneNumber : +1 913 555 0101 PortalSettings : PostalCode : 66210 PreferredDataLocation : PreferredLanguage : ProxyAddresses : ProxyAddresses ReleaseTrack : ServiceInformation : SignInName : LeeG@company.com SoftDeletionTimestamp : State : KS StreetAddress : 10801 Mastin Blvd., Suite 620 StrongAuthenticationMethods : StrongAuthenticationPhoneAppDetails : StrongAuthenticationProofupTime : StrongAuthenticationRequirements : StrongAuthenticationUserDetails : StrongPasswordRequired : true StsRefreshTokensValidFrom : 2017-10-03T04:44:43Z Title : Director UsageLocation : FI UserLandingPageIdentifierForO365Shell : UserPrincipalName : LeeG@company.com UserThemeIdentifierForO365Shell : UserType : Member ValidationStatus : Healthy WhenCreated : 2018-06-26T11:04:14Z\n\nNew-AADIntUser (A)\n\nThis function creates a new user. Currently supports only UserPrincipalName and DisplayName.\n\nExample:\n\nOutput:\n\nAlternateEmailAddresses : AlternateMobilePhones : AlternativeSecurityIds : BlockCredential : false City : CloudExchangeRecipientDisplayType : Country : Department : DirSyncProvisioningErrors : DisplayName : New User Errors : Fax : FirstName : ImmutableId : IndirectLicenseErrors : IsBlackberryUser : false IsLicensed : false LastDirSyncTime : LastName : LastPasswordChangeTimestamp : 2018-10-25T15:13:10.8686574Z LicenseAssignmentDetails : LicenseReconciliationNeeded : false Licenses : LiveId : 1003BFFDAEE167C0 MSExchRecipientTypeDetails : MSRtcSipDeploymentLocator : MSRtcSipPrimaryUserAddress : MobilePhone : OathTokenMetadata : ObjectId : 13e121db-4132-43c8-a784-a9b12f2bd4e3 Office : OverallProvisioningStatus : None PasswordNeverExpires : false PasswordResetNotRequiredDuringActivate : PhoneNumber : PortalSettings : PostalCode : PreferredDataLocation : PreferredLanguage : ProxyAddresses : ReleaseTrack : ServiceInformation : SignInName : new.user@company.com SoftDeletionTimestamp : State : StreetAddress : StrongAuthenticationMethods : StrongAuthenticationPhoneAppDetails : StrongAuthenticationProofupTime : StrongAuthenticationRequirements : StrongAuthenticationUserDetails : StrongPasswordRequired : true StsRefreshTokensValidFrom : 2018-10-25T15:13:10.8686574Z Title : UsageLocation : UserLandingPageIdentifierForO365Shell : UserPrincipalName : new.user@company.com UserThemeIdentifierForO365Shell : UserType : Member ValidationStatus : Healthy WhenCreated : Password : Tog59451\n\nSet-AADIntUser (A)\n\nThis function changes user’s information.\n\nExample:\n\nRemove-AADIntUser (A)\n\nThis function removes a user.\n\nExample:\n\nGet-AADIntGlobalAdmins (A)\n\nThis function returns all Global Admins of the tenant.\n\nExample:\n\nOutput:\n\nDisplayName UserPrincipalName ----------- ----------------- admin demo admin@company.onmicrosoft.com Dave the Admin dave@company.com\n\nUser MFA manipulation\n\nGet-AADIntUserMFA (A)\n\nSince version 0.2.8\n\nGets user’s MFA settings\n\nExample:\n\nOutput:\n\nUserPrincipalName : user@company.com State : Enforced PhoneNumber : +1 123456789 AlternativePhoneNumber : +358 123456789 Email : someone@hotmail.com DefaultMethod : OneWaySMS Pin : OldPin : StartTime :\n\nSet-AADIntUserMFA (A)\n\nSince version 0.2.8\n\nSets user’s MFA settings\n\nExample:\n\nGet-AADIntUserMFAApps (A)\n\nSince version 0.4.0\n\nGets user’s MFA Authentication App settings\n\nExample:\n\nOutput:\n\nAuthenticationType : Notification, OTP DeviceName : SM-R2D2 DeviceTag : SoftwareTokenActivated DeviceToken : APA91... Id : 454b8d53-d97e-4ead-a69c-724166394334 NotificationType : GCM OathTokenTimeDrift : 0 OathSecretKey : PhoneAppVersion : 6.2001.0140 TimeInterval : AuthenticationType : OTP DeviceName : NO_DEVICE DeviceTag : SoftwareTokenActivated DeviceToken : NO_DEVICE_TOKEN Id : aba89d77-0a69-43fa-9e5d-6f41c7b9bb16 NotificationType : Invalid OathTokenTimeDrift : 0 OathSecretKey : PhoneAppVersion : NO_PHONE_APP_VERSION TimeInterval :\n\nSet-AADIntUserMFAApps (A)\n\nSince version 0.4.0\n\nSets user’s MFA Authentication App settings.\n\nExample:\n\nRegister-AADIntMFAApp (MY)\n\nSince version 0.4.0\n\nRegisters AADInternals Authenticator App or OTP appfor the user.\n\nRequirements for App:\n\nAADInternals Authentication app is installed.\n\nDevice Token is copied from the app.\n\nThe user have registered at least one MFA method, e.g. SMS. This is because Access Token creation performs MFA.\n\nRegistration is done through https://mysignins.microsoft.com so “Users can use the combined security information registration experience” MUST be activated for the tenant.\n\nExample1:\n\nOutput:\n\nDefaultMethodOptions : 1 DefaultMethod : 0 Username : user@company.com TenantId : 9a79b12c-f563-4bdc-9d18-6e6d0d52f73b AzureObjectId : dce60ee2-d907-4478-9f36-de3d74708381 ConfirmationCode : 1481770594613653 OathTokenSecretKey : dzv5osvdx6dhtly4av2apcts32eqh4bg OathTokenEnabled : true\n\nExample2:\n\nOutput:\n\nOathSecretKey DefaultMethodOptions DefaultMethod ------------- -------------------- ------------- 5bhbqsrb6ft5rxdx 1 0\n\nNew-AADIntOTPSecret\n\nSince version 0.4.0\n\nGenerates a one-time-password (OTP) secret which can be used to reset user’s OathSecretKey.\n\nNote! Set only to “apps” which AuthenticationType is OTP!\n\nExample 1:\n\nOutput:\n\nnjny7gdb6tnfihy3\n\nExample 2:\n\nOutput\n\nOTP secret copied to clipboard.\n\nNew-AADIntOTP\n\nSince version 0.4.0\n\nGenerates a one-time-password (OTP) using the given secret. Can be used for MFA if the user’s secret is known.\n\nExample 1:\n\nOutput:\n\nOTP Valid --- ----- 502 109 26s\n\nExample 2:\n\nOutput:\n\nOTP copied to clipboard, valid for 26s\n\nSet-AADIntDeviceWHfBKey\n\nSince version 0.9.0\n\nSets a Windows Hello for Business (WHfB) key of the device.\n\nExample 1:\n\nOutput:\n\nDevice Window Hello for Business key successfully added to the user: DeviceId: b27db620-2673-4dac-a565-cec81bfafbaa Key Id: a07b4c9c-1515-4d79-9ce2-7f7954049adf UPN: user@company.com Key file name : \"b27db620-2673-4dac-a565-cec81bfafbaa_a07b4c9c-1515-4d79-9ce2-7f7954049adf_user@company.com_whfb.pem\"\n\nExample 2:\n\nOutput:\n\nDevice successfully registered to Azure AD: DisplayName: \"My device\" DeviceId: b27db620-2673-4dac-a565-cec81bfafbaa ObjectId: 4fbbb5f6-1563-4237-974c-dfabcc5c533c TenantId: 01a09bec-7584-45a5-8048-e7f1b4181f20 Cert thumbprint: 593E3D7F8F8CE0DB74725EE3B5AC1B5F58D92994 Cert file name : \"b27db620-2673-4dac-a565-cec81bfafbaa.pfx\" Local SID: S-1-5-32-544 Additional SIDs: S-1-12-1-1173396554-1264637767-1283444156-383767028 S-1-12-1-727559687-1332680371-478291341-2778853572 S-1-12-1-1337701878-1110906211-2883538071-1012096204\n\nKeys saved to b27db620-2673-4dac-a565-cec81bfafbaa.json\n\nDevice Window Hello for Business key successfully added to the user: DeviceId: b27db620-2673-4dac-a565-cec81bfafbaa Key Id: a07b4c9c-1515-4d79-9ce2-7f7954049adf UPN: user@company.com\n\nUser manipulation with AD sync api\n\nThese functions provide some functionality allowing manipulation of Azure AD objects otherwise impossible.\n\nNOTE! these function uses Azure AD synchronization API and may cause severe harm to the tenant!! USE ON YOUR OWN RISK!\n\nGet-AADIntSyncObjects (A)\n\nThis function returns all Azure AD objects that are not synced to the on-premises AD.\n\nExample:\n\nOutput:\n\nUserPrincipalName ----------------- BrianJ@company.com LynneR@company.com MiriamG@company.com AllanD@company.com IsaiahL@company.com\n\nSet-AADIntAzureADObject (A)\n\nThis function creates new OR modifies existing Azure AD object.\n\nAllows setting all Azure AD attributes. The sourceAnchor attribute is the most important one and is automatically set only to synced users. This is typically the ImmutableID (Base64 encoded on-prem AD object’s GUID), but can be any string that is unique tenant wide.\n\nExample:\n\nOutput:\n\nCloudAnchor : User_d14f7322-c997-4e87-912b-f43c906cec81 ErrorDetails : ErrorDetails ObjectType : User ResultCode : Success ResultErrorCode : 0 ResultErrorDescription : ResultErrorDescription SourceAnchor : ABC SyncOperation : Add\n\nRemove-AADIntAzureADObject (A)\n\nThis function removes an AAD object.\n\nExample:\n\nOutput:\n\nCloudAnchor : User_d14f7322-c997-4e87-912b-f43c906cec81 ErrorDetails : ErrorDetails ObjectType : User ResultCode : Success ResultErrorCode : 0 ResultErrorDescription : ResultErrorDescription SourceAnchor : ABC SyncOperation : Add\n\nSet-AADIntAzureADGroupMember (A)\n\nAdds or removes an Azure AD object to/from the given synchronised group using Azure AD Sync API.\n\nExample 1:\n\nOutput 1:\n\nCloudAnchor : Group_0a149b4b-6940-459d-864f-36e0e3a5b3ab ErrorDetails : ErrorDetails ObjectType : Group ResultCode : Success ResultErrorCode : 0 ResultErrorDescription : ResultErrorDescription SourceAnchor : SourceAnchor SyncOperation : Set\n\nExample 2:\n\nOutput 2:\n\nCloudAnchor : Group_0a149b4b-6940-459d-864f-36e0e3a5b3ab ErrorDetails : ErrorDetails ObjectType : Group ResultCode : Success ResultErrorCode : 0 ResultErrorDescription : ResultErrorDescription SourceAnchor : 5p5s0btFu02TjRUAs00FVg== SyncOperation : Set\n\nSet-AADIntUserPassword (A)\n\nThis function sets the user’s password. Also the last change time can be set, must be before the current time.\n\nExample 1:\n\nOutput 1: (Result 0 = success)\n\nCloudAnchor Result SourceAnchor ----------- ------ ------------ CloudAnchor 0 qIMPTm2Q3kimHgg4KQyveA==\n\nExample 2:\n\nOutput 2: (Result 0 = success)\n\nCloudAnchor Result SourceAnchor ----------- ------ ------------ User_60f87269-f258-4473-8cca-267b50110e7a 0 SourceAnchor\n\nExample 3:\n\nOutput 3: (Result 0 = success)\n\nCloudAnchor Result SourceAnchor ----------- ------ ------------ User_60f87269-f258-4473-8cca-267b50110e7a 0 SourceAnchor\n\nReset-AADIntServiceAccount (A)\n\nThis function creates a new service account (or reset the password for existing one). The created user will have DirectorySynchronizationAccount role.\n\nAzure AD Connect uses this during the configuration stage to create the service account and stores the username and password to the configuration database.\n\nExample:\n\nOutput:\n\nPassword UserName -------- -------- 5(]lCy=Q{.#@lb}p Sync_MyServer_nnnnnnn@company.onmicrosoft.com\n\nExchange Online functions\n\nEachange Online functions are used to manipulate devices and send mail using ActiveSync and Outlook APIs. Functions marked with E uses Exchange Online access token.\n\nGet-AADIntEASAutoDiscover (*)\n\nSince version 0.1.6\n\nReturns endpoints for the given protocol for the given email address. If the email address is invalid (i.e. the user does not exists) this takes ages..\n\nExample:\n\nOutput:\n\nProtocol Url -------- --- Substrate https://substrate.office.com\n\nGet-AADIntEASAutoDiscoverV1 (E)\n\nSince version 0.1.6\n\nReturns ActiveSync endpoint for the given user (credentials or access token).\n\nExample:\n\nOutput:\n\nhttps://outlook.office365.com/Microsoft-Server-ActiveSync\n\nSet-AADIntEASSettings (E)\n\nSince version 0.1.6\n\nAdds new or modifies existing ActiveSync device for the given user (credentials or access token). The added or modified device can be used to send emails with Send-AADIntEASMessage\n\nExample:\n\nOutput:\n\nGet-AADIntMobileDevices (E)\n\nSince version 0.1.6\n\nGets mobile devices from Exchange Online. Devices can be used to send emails with Send-AADIntEASMessage\n\nExample:\n\nOutput:\n\nDeviceId DeviceType ClientType UserDisplayName -------- ---------- ---------- --------------- 430847304 TestActiveSyncConnectivity EAS EURP189A002.PROD.OUTLOOK.COM/Microsoft Exchange Hosted Organizat android01234 Android EAS EURP189A002.PROD.OUTLOOK.COM/Microsoft Exchange Hosted Organizat\n\nSend-AADIntEASMessage (E)\n\nSince version 0.1.6\n\nSends an email from the given user via ActiveSync using the given device.\n\nExample:\n\nOutput:\n\nWARNING: Message was not Base64 encoded, converting..\n\nSend-AADIntOutlookMessage (E)\n\nSince version 0.1.6\n\nSends an email from the given user via Outlook API.\n\nExample:\n\nOpen-AADIntOWA (O)\n\nSince version 0.6.2\n\nOpens OWA in a browser control window as the given user.\n\nExample1:\n\nExample2:\n\nSharePoint Online functions\n\nEachange Online functions are used to retrieve information of users and groups of SharePoint sites.\n\nGet-AADIntSPOSiteUsers (S)\n\nSince version 0.2.4\n\nReturns users of the given site. Only visitor (read-access) is needed :)\n\nExample:\n\nOutput:\n\nIsSiteAdmin : True Id : 17 LoginName : c:0t.c|tenant|a200e3ee-47d0-4b9b-99c6-554b85823042 PrincipalType : 4 IsEmailAuthenticationGuestUser : False UserPrincipalName : IsShareByEmailGuestUser : False IsHiddenInUI : False NameId : NameIdIssuer : Title : SharePoint Service Administrator Email : IsSiteAdmin : False Id : 1073741823 LoginName : SHAREPOINT\\system PrincipalType : 1 IsEmailAuthenticationGuestUser : False UserPrincipalName : IsShareByEmailGuestUser : False IsHiddenInUI : False NameId : S-1-0-0 NameIdIssuer : urn:offic€:idp:activedirectory Title : System Account Email : IsSiteAdmin : False Id : 23 LoginName : i:0#.f|membership|user@company.com PrincipalType : 1 IsEmailAuthenticationGuestUser : False UserPrincipalName : user@company.com IsShareByEmailGuestUser : False IsHiddenInUI : False NameId : 10030000b5466d52 NameIdIssuer : urn:federation:microsoftonline Title : user Email : user@company.com\n\nGet-AADIntSPOUserProperties (S)\n\nSince version 0.2.4\n\nReturns detailed information of the given user. Only visitor (read-access) is needed :)\n\nNote: the user’s name must be in SharePoint “LoginName” format as above.\n\nExample:\n\nOutput:\n\nUpdated : 2019-08-16T07:59:30Z Author : AccountName : i:0#.f|membership|user@company.com DirectReports : DisplayName : user Email : user@company.com ExtendedManagers : ExtendedReports : i:0#.f|membership|user@company.com IsFollowed : False Peers : PersonalUrl : https://company-my.sharepoint.com/personal/user_company_com/ PictureURL : UserUrl : https://company-my.sharepoint.com:443/Person.aspx?accountname=i:0#.f|membership|user@company.com Title : UserProfile_GUID : f6b3014d-c4d7-4775-a37c-1e6f14fa98f9 SID : i:0h.f|membership|10030000a5566b50@live.com ADGuid : System.Byte[] FirstName : SPS-PhoneticFirstName : LastName : SPS-PhoneticLastName : PreferredName : user SPS-PhoneticDisplayName : WorkPhone : Department : SPS-Department : Manager : AboutMe : PersonalSpace : /personal/user_company_com/ UserName : user@company.com QuickLinks : WebSite : PublicSiteRedirect : SPS-JobTitle : SPS-Dotted-line : SPS-Peers : SPS-Responsibility : SPS-SipAddress : user@company.com SPS-MySiteUpgrade : SPS-ProxyAddresses : SPS-HireDate : SPS-DisplayOrder : SPS-ClaimID : user@company.com SPS-ClaimProviderID : membership SPS-ResourceSID : SPS-ResourceAccountName : SPS-MasterAccountName : SPS-UserPrincipalName : user@company.com SPS-O15FirstRunExperience : SPS-PersonalSiteInstantiationState : 2 SPS-DistinguishedName : CN=abf7eff8-59a5-456f-a723-976f07b14420,OU=a200e3ee-47d0-4b9b-99c6-554b85823042,OU=Tenants,OU=MSO nline,DC=SPODS44818354,DC=msoprd,DC=msft,DC=net SPS-SourceObjectDN : SPS-ClaimProviderType : Forms SPS-SavedAccountName : SPODS44833354\\$JUHIC0-TJJO02Q7PVM2 SPS-SavedSID : System.Byte[] SPS-ObjectExists : SPS-PersonalSiteCapabilities : 4 SPS-PersonalSiteFirstCreationTime : 10/2/2017 5:50:10 PM SPS-PersonalSiteLastCreationTime : 10/2/2017 5:50:10 PM SPS-PersonalSiteNumberOfRetries : 1 SPS-PersonalSiteFirstCreationError : SPS-FeedIdentifier : WorkEmail : user@company.com CellPhone : Fax : HomePhone : Office : SPS-Location : Assistant : SPS-PastProjects : SPS-Skills : SPS-School : SPS-Birthday : SPS-StatusNotes : SPS-Interests : SPS-HashTags : SPS-EmailOptin : SPS-PrivacyPeople : True SPS-PrivacyActivity : 4095 SPS-PictureTimestamp : SPS-PicturePlaceholderState : SPS-PictureExchangeSyncState : SPS-TimeZone : OfficeGraphEnabled : SPS-UserType : 0 SPS-HideFromAddressLists : False SPS-RecipientTypeDetails : DelveFlags : msOnline-ObjectId : abf7eff8-59a5-456f-a723-976f07b14420 SPS-PointPublishingUrl : SPS-TenantInstanceId : SPS-SharePointHomeExperienceState : SPS-MultiGeoFlags : PreferredDataLocation :\n\nGet-AADIntSPOSiteGroups (S)\n\nSince version 0.2.4\n\nReturns groups of the given site. Only visitor (read-access) is needed :)\n\nExample:\n\nOutput:\n\nAllowRequestToJoinLeave : False Id : 3 LoginName : Excel Services Viewers AllowMembersEditMembership : False AutoAcceptRequestToJoinLeave : False PrincipalType : 8 OnlyAllowMembersViewMembership : True IsHiddenInUI : False Description : Title : Excel Services Viewers OwnerTitle : System Account AllowRequestToJoinLeave : False Id : 19 LoginName : SharePointHome OrgLinks Admins AllowMembersEditMembership : False AutoAcceptRequestToJoinLeave : False PrincipalType : 8 OnlyAllowMembersViewMembership : True IsHiddenInUI : False Description : Title : SharePointHome OrgLinks Admins OwnerTitle : SharePointHome OrgLinks Admins AllowRequestToJoinLeave : False Id : 20 LoginName : SharePointHome OrgLinks Editors AllowMembersEditMembership : False AutoAcceptRequestToJoinLeave : False PrincipalType : 8 OnlyAllowMembersViewMembership : True IsHiddenInUI : False Description : Title : SharePointHome OrgLinks Editors OwnerTitle : SharePointHome OrgLinks Editors AllowRequestToJoinLeave : False Id : 21 LoginName : SharePointHome OrgLinks Viewers AllowMembersEditMembership : False AutoAcceptRequestToJoinLeave : False PrincipalType : 8 OnlyAllowMembersViewMembership : True IsHiddenInUI : False Description : Title : SharePointHome OrgLinks Viewers OwnerTitle : SharePointHome OrgLinks Admins AllowRequestToJoinLeave : False Id : 9 LoginName : Team Site Members AllowMembersEditMembership : True AutoAcceptRequestToJoinLeave : False PrincipalType : 8 OnlyAllowMembersViewMembership : False IsHiddenInUI : False Description : Title : Team Site Members OwnerTitle : Team Site Owners AllowRequestToJoinLeave : False Id : 7 LoginName : Team Site Owners AllowMembersEditMembership : False AutoAcceptRequestToJoinLeave : False PrincipalType : 8 OnlyAllowMembersViewMembership : False IsHiddenInUI : False Description : Title : Team Site Owners OwnerTitle : Team Site Owners AllowRequestToJoinLeave : False Id : 8 LoginName : Team Site Visitors AllowMembersEditMembership : False AutoAcceptRequestToJoinLeave : False PrincipalType : 8 OnlyAllowMembersViewMembership : False IsHiddenInUI : False Description : Title : Team Site Visitors OwnerTitle : Team Site Owners\n\nSet-AADIntSPOSiteMembers (S)\n\nSince version 0.7.2\n\nReturns groups of the given site. Only visitor (read-access) is needed :)\n\nExample:\n\nOutput:\n\nUser user@company.com was added to group CompanyWiki!\n\nExport-AADIntSPOSiteFile (S)\n\nSince version 0.9.1\n\nDownloads the given file from SPO.\n\nExample:\n\nOutput:\n\nFile saved to sales.xlsx\n\nAdd-AADIntSPOSiteFiles (S)\n\nSince version 0.9.1\n\nSend given file(s) to given SPO site using SharePoint Migration Tool protocol. File additions are NOT LOGGED and metadata can be spoofed.\n\nNote: Can take up to 10 minutes to complete.\n\nExample1:\n\nOutput1:\n\nSending 2 files as \"SHAREPOINT\\system\" to site \"https://company.sharepoint.com/sales/Shared Documents\" 11/28/2022 08:59:35.042 JobQueued 11/28/2022 09:01:55.986 JobLogFileCreate 11/28/2022 09:01:56.018 JobStart 11/28/2022 09:01:57.580 JobEnd 2 files (2,322,536 bytes) created.\n\nExample2:\n\nOutput2:\n\nSending 2 files as \"i:0#.f|membership|user2@company.com\" to site \"https://company.sharepoint.com/sales/Shared Documents\" 11/28/2022 08:59:35.042 JobQueued 11/28/2022 09:01:55.986 JobLogFileCreate 11/28/2022 09:01:56.018 JobStart 11/28/2022 09:01:57.580 JobEnd 2 files (2,322,536 bytes) created.\n\nSince version 0.9.1\n\nReplaces an existing file in SPO site with the given file using SharePoint Migration Tool protocol. File modifications are NOT LOGGED and metadata can be spoofed.\n\nNote: Can take up to 10 minutes to complete.\n\nExample1:\n\nOutput1:\n\nSending 1 files as \"i:0#.f|membership|user1@company.com\" to site \"https://company.sharepoint.com/sales/Shared Documents\" 11/28/2022 08:59:35.042 JobQueued 11/28/2022 09:01:55.986 JobLogFileCreate 11/28/2022 09:01:56.018 JobStart 11/28/2022 09:01:57.580 JobEnd 1 files (322,536 bytes) created.\n\nExample2:\n\nOutput2:\n\nSending 1 files as \"i:0#.f|membership|user2@company.com\" to site \"https://company.sharepoint.com/sales/Shared Documents\" 11/28/2022 08:59:35.042 JobQueued 11/28/2022 09:01:55.986 JobLogFileCreate 11/28/2022 09:01:56.018 JobStart 11/28/2022 09:01:57.580 JobEnd 1 files (322,536 bytes) created.\n\nOneDrive for Business functions\n\nOneDrive functions are used to download, send, and modify files using OneDrive for Business APIs.\n\nNew-AADIntOneDriveSettings\n\nSince version 0.2.7\n\nCreates a new OneDriveSettings object used with other OneDrive for Business functions.\n\nTo create new settings using interactive authentication (promtps twice for both OfficeApps and OneDrive APIs):\n\nExample:\n\nTo create new settings using Kerberos tickets:\n\nExample:\n\nGet-AADIntOneDriveFiles (O)\n\nSince version 0.2.7\n\nDownloads user’s OneDrive for Business files (all of them).\n\nBesides downloading the files, the following information is returned per file.\n\nAttribute Description Path The relative path of the file or folder Size Size in bytes ETag Resource id and the next version number of the file in format “{},“ Created The time when the file was created Modified The time when the file was modified ResourceID The unique id of the file or folder MimeType The mime type of the file Url The “pre-authenticated” url of the file XORHash Xor-hash value of the file\n\nNote! If you only want to list the files and folders, use -PrintOnly switch. If sync is restricted to only the members of specific domain(s), use the -DomainGuid parameter.\n\nTo download user’s OneDrive files, use the following commands:\n\nExample:\n\nOutput:\n\nPath Size Created Modified ResourceID ---- ---- ------- -------- ---------- \\RootFolder\\Document1.docx 11032 2.12.2019 20.47.23 2.12.2019 20.48.46 5e7acf393a2e45f18c1ce6caa7... \\RootFolder\\Book.xlsx 8388 2.12.2019 20.49.14 2.12.2019 20.50.14 b26c0a38d4d14b23b785576e29... \\RootFolder\\Docs\\Document1.docx 84567 9.12.2019 11.24.40 9.12.2019 12.17.50 d9d51e47b66c4805aff3a08763... \\RootFolder\\Docs\\Document2.docx 31145 7.12.2019 17.28.37 7.12.2019 17.28.37 972f9c317e1e468fb2b6080ac2...\n\nSend-AADIntOneDriveFile (O)\n\nSince version 0.2.7\n\nSends a local file to user’s OneDrive to a specific folder.\n\nNote! To send file, you need ResourceId of the folder you are sending the file.\n\nNote! If sync is restricted to only the members of specific domain(s), use the -DomainGuid parameter.\n\nTo send a file to user’s OneDrive to Documents folder:\n\nExample:\n\nPath ResourceID ---- ---------- \\RootFolder 1679e14635404542880e3885b4374c3f \\RootFolder\\Documents a2a54a01b586480ebbddf04cfaa36191 \\RootFolder\\Sales bd59baa485a2411e951234fe6cbd8c5d\n\nOutput:\n\nResourceID : 32b66e08379d4c448e001e9659777c71 ETag : \"{32B66E08-379D-4C44-8E00-1E9659777C71},2\" DateModified : 2019-12-11T11:18:38.0000000Z RelationshipName : Document.docx ParentResourceID : a2a54a01b586480ebbddf04cfaa36191 fsshttpstate.xschema.storage.live.com : fsshttpstate.xschema.storage.live.com DocumentStreams : DocumentStreams WriteStatus : Success\n\nIf the file exists etc. you’ll get following error or similar:\n\nRelationshipName ParentResourceID WriteStatus ---------------- ---------------- ----------- Document a2a54a01b586480ebbddf04cfaa36191 ItemAlreadyExists\n\nTo update existing file, you also need to know the ETag: Example:\n\nOutput:\n\nResourceID : 32b66e08379d4c448e001e9659777c71 ETag : \"{32B66E08-379D-4C44-8E00-1E9659777C71},3\" DateModified : 2019-14-11T12:08:55.0000000Z RelationshipName : Document.docx ParentResourceID : a2a54a01b586480ebbddf04cfaa36191 fsshttpstate.xschema.storage.live.com : fsshttpstate.xschema.storage.live.com DocumentStreams : DocumentStreams WriteStatus : Success\n\nTeams functions\n\nTeams functions are used to send and delete Teams messages.\n\nGet-AADIntSkypeToken (T)\n\nSince version 0.4.4\n\nGets SkypeToken used for authentication for certain Teams services.\n\nExample:\n\nSet-AADIntTeamsAvailability (T)\n\nSince version 0.4.4\n\nSets the availability status of the user to Available, Busy, DoNotDisturb, BeRightBack, or Away\n\nExample:\n\nSet-AADIntTeamsStatusMessage (T)\n\nSince version 0.4.4\n\nSets the Teams status message status of the user.\n\nExample:\n\nSearch-AADIntTeamsUser (T)\n\nSince version 0.4.4\n\nSearhes users with the given searchstring.\n\nExample:\n\nOutput:\n\nUserPrincipalName DisplayName ----------------- ----------- first.user@company.com First User second.user@company.com Second User\n\nSend-AADIntTeamsMessage (T)\n\nSince version 0.4.4\n\nSends a Teams message to given recipients.\n\nExample 1:\n\nOutput:\n\nSent MessageID ---- --------- 16/10/2020 14.40.23 132473328207053858\n\nExample 2:\n\nLink ---- 19:a84fdc0c-519c-4467-b2e6-323a48ce09af_4d40755a-020b-422b-b9cf-2f1f50602377@unq.gbl.spaces 19:a84fdc0c-519c-4467-b2e6-323a48ce09af_4d40755a-020b-422b-b9cf-2f1f50602377@unq.gbl.spaces 19:292f1d53677d45ff9d61d333cb0b4853@thread.tacv2 19:292f1d53677d45ff9d61d333cb0b4853@thread.tacv2 19:292f1d53677d45ff9d61d333cb0b4853@thread.tacv2\n\nOutput:\n\nSent MessageID ---- --------- 16/10/2020 14.40.23 132473328207053858\n\nGet-AADIntTeamsMessages (T)\n\nSince version 0.4.4\n\nGets user’s latest Teams messages.\n\nExample:\n\nOutput:\n\nId Content DeletionTime MessageType Type DisplayName -- ------- ------------ ----------- ---- ----------- 1602842299338 1602846853687 RichText/Html MessageUpdate Bad User 1602844861358 1602858789696 RichText/Html MessageUpdate Bad User 1602846167606 1602858792943 Text MessageUpdate Bad User 1602846853687 1602858795517 Text MessageUpdate Bad User 1602833251951 1602833251951 Text MessageUpdate Bad User 1602833198442 1602833198442 Text MessageUpdate Bad User 1602859223294 Hola User! Text NewMessage Bad User 1602859423019 Hi User! Text NewMessage Bad User 1602859423019 Hi User! Text MessageUpdate Bad User 1602859473083 <div><div>Hi User!</div></div> RichText/Html NewMessage Bad User 1602859484420 Hey User! Text NewMessage Bad User 1602859528028 Hy User! Text NewMessage Bad User 1602859484420 Hey User! Text MessageUpdate Bad User 1602859590916 Hi User! Text NewMessage Bad User\n\nSet-AADIntTeamsMessageEmotion (T)\n\nSince version 0.4.5\n\nSets emotion for the given Teams message (like, heart, laugh, surprised, sad, or angry). Emotions are not automatically cleared, so multiple emotions per message can be set. To clear the emotion, use the -Clear switch.\n\nExample 1:\n\nOutput:\n\nId Content DeletionTime MessageType Type DisplayName -- ------- ------------ ----------- ---- ----------- 1602842299338 1602846853687 RichText/Html MessageUpdate Bad User 1602844861358 1602858789696 RichText/Html MessageUpdate Bad User 1602846167606 1602858792943 Text MessageUpdate Bad User 1602846853687 1602858795517 Text MessageUpdate Bad User 1602833251951 1602833251951 Text MessageUpdate Bad User 1602833198442 1602833198442 Text MessageUpdate Bad User 1602859223294 Hola User! Text NewMessage Bad User 1602859423019 Hi User! Text NewMessage Bad User 1602859423019 Hi User! Text MessageUpdate Bad User 1602859473083 <div><div>Hi User!</div></div> RichText/Html NewMessage Bad User 1602859484420 Hey User! Text NewMessage Bad User 1602859528028 Hy User! Text NewMessage Bad User 1602859484420 Hey User! Text MessageUpdate Bad User 1602859590916 Hi User! Text NewMessage Bad User\n\nExample 2:\n\nRemove-AADIntTeamsMessages (T)\n\nSince version 0.4.4\n\nDeletes given Teams messages.\n\nExample:\n\nId Content DeletionTime MessageType Type DisplayName -- ------- ------------ ----------- ---- ----------- 1602842299338 1602846853687 RichText/Html MessageUpdate Bad User 1602844861358 1602858789696 RichText/Html MessageUpdate Bad User 1602846167606 1602858792943 Text MessageUpdate Bad User 1602846853687 1602858795517 Text MessageUpdate Bad User 1602833251951 1602833251951 Text MessageUpdate Bad User 1602833198442 1602833198442 Text MessageUpdate Bad User 1602859223294 Hola User! Text NewMessage Bad User 1602859423019 Hi User! Text NewMessage Bad User 1602859423019 Hi User! Text MessageUpdate Bad User 1602859473083 <div><div>Hi User!</div></div> RichText/Html NewMessage Bad User 1602859484420 Hey User! Text NewMessage Bad User 1602859528028 Hy User! Text NewMessage Bad User 1602859484420 Hey User! Text MessageUpdate Bad User 1602859590916 Hi User! Text NewMessage Bad User\n\nFind-AADIntTeamsExternalUser (T)\n\nSince version 0.6.7\n\nFinds the given external Teams user.\n\nExample:\n\ntenantId : dcc7d7bf-e3f5-4778-b6e0-aa7207bdb033 isShortProfile : False accountEnabled : True featureSettings : @{coExistenceMode=TeamsOnly} userPrincipalName : johnd@company.com givenName : JohnD@company.com surname : email : JohnD@company.com displayName : John Doe type : Federated mri : 8:orgid:84bdccdb-eaba-4545-9729-4eff71b76841 objectId : fe401a12-879c-4e5b-8b51-03e1985fa62f\n\nGet-AADIntTeamsAvailability (T)\n\nSince version 0.6.7\n\nShows the availability of the given user.\n\nExample:\n\ntenantId : dcc7d"
    }
}