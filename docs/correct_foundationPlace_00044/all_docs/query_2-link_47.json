{
    "id": "correct_foundationPlace_00044_2",
    "rank": 47,
    "data": {
        "url": "http://qliksite.io/news/qlik-sense-2.2-for-developers",
        "read_more_link": "",
        "language": "en",
        "title": "Qlik Sense 2.2 for developers",
        "top_image": "http://qliksite.io/news/images/thumb.jpg",
        "meta_img": "http://qliksite.io/news/images/thumb.jpg",
        "images": [
            "http://qliksite.io/assets/images/qliksite.io-logo.png",
            "http://qliksite.io/assets/images/qliksite.io-logo@2x.png",
            "http://qliksite.io/news/images/engine-api-explorer.png",
            "http://qliksite.io/news/images/QlikAnalyticsForVisualStudio_1.png",
            "http://qliksite.io/news/images/visualization-api.png",
            "http://qliksite.io/news/images/qlik-visuals-result.png",
            "http://qliksite.io/news/images/ext_list.png",
            "http://qliksite.io/news/images/qlik-styles.png",
            "http://qliksite.io/news/images/css-frameworks.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Stefan Walther"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Get some first insight into what Qlik Sense 2.2 brings to you as a developer.",
        "meta_lang": "en",
        "meta_favicon": "/assets/favicon/apple-icon-57x57.png",
        "meta_site_name": "qliksite.io",
        "canonical_link": null,
        "text": "Qlik Sense 2.2 is a big release from a Qlik Analytics perspective. A lot of new exciting functionality for developers has been added:\n\nRevamped Engine Api Explorer\n\nThe Engine API represents the true power behind QlikView and Qlik Sense, thus the so called QIX Engine.\n\nIn Qlik Sense 2.1.1 the new Dev-Hub has been introduced, but the Engine API Explorer didn't change a lot compared to the old \"Protocol Tester\" (available since Qlik Sense 1.0).\n\nThe new Engine API Explorer focuses on making the start with the Engine API as enjoyable as possible, thus focuses on:\n\nA consistent UI compared to the other tools in Dev-Hub\n\nAn easy flow to start working with the Engine API\n\nSome convenience features, like easy copy&paste, etc.\n\nQlik Analytics for Visual Studio\n\nQlik Analytics for Visual Studio is a completely new offering introduced with Qlik Sense 2.2.\n\nBasically it can be installed independently from Qlik Sense as a Visual Studio 2015 plugin and is therefore available on Microsoft's plugin site.\n\nThe Visual Studio plugin is a development toolbox created to simplify the process of integrating Qlik Sense functionality into other environments. Qlik Analytics for Visual Studio provides quick access to relevant information from your Qlik Sense environment, which for instance makes it easy to integrate Qlik Sense visualizations into an existing web site.\n\nYou will be able to:\n\nExplore apps and its related sheets and objects.\n\nSee all your apps, with related sheets and objects.\n\nSee a preview of the object.\n\nSee the properties of the server and charts.\n\nDrag-and-drop objects (in different modes) directly into your code.\n\nVisualization API\n\nPrio to Qlik Sense 2.2 a developer had to create visualization objects first in Qlik Sense to embed those into mashup based websites.\n\nBy using the newly introduced JavaScript API Visualization API it is now possible to create all objects on the fly. You just need a Qlik Sense app (containing the data model and data) and then you are ready to go:\n\nQlik Visuals\n\nBased on the Visualization API Qlik Visuals allows you to create visualization objects on the fly in a 100% declarative manner:\n\n<qlik-visual appid=\"Helpdesk Management.qvf\" type=\"barchart\" cols='[\"Case Owner Group\",\"=Avg([Case Duration Time])\"]' options='{\"title\":\"On the fly barchart\"}'> </qlik-visual>\n\nResults into:\n\nVisualization Extensons on the fly (in Mashups)\n\nVisualization Extensions can now be used in Mashup solutions without having them registered/imported first on Qlik Sense server. Just reference the code of your Visualization Extension by using qlik.registerExtension and load it on the fly:\n\n// Determine the path var path = window.location.href.substr( 0, location.href.lastIndexOf( \"/\" ) ); // Register the desired extension require( [path + \"/myextension/myextension.js\"], function ( myextension ) { qlik.registerExtension( 'myextension', myextension ); } );\n\nMore properties in Visualization Extensions\n\nQlik Sense 2.2 also gives more power to Visualization Extension developers. The following property-types are now officially supported and documented to be used in Visualization Extensions:\n\narray/list\n\nbutton\n\ncolor-picker (experimental)\n\nlink\n\nmedia (experimental)\n\ntext\n\ntextarea\n\nExample: The array/list property:\n\nMore on defining custom properties can be found in the official Qlik Sense Developers help.\n\nFaster Mashup Loading\n\nMashups will load faster in the future since the size of qlik-styles.css has been reduced from 750KB down to a portion of its original size.\n\nApp Integration API\n\nThe newly introduced complements the set of URL based APIs to integration Qlik Sense into existing websites, workflows and processes.\n\nThe App Integration API provides parameters that can be used to create an URL that returns a complete HTML page containing the embedded app. This URL can be embedded in a web page, for example by including it in an iframe.\n\nIt allows you to pass parameters to an app and to open an app with one or several selections applied.\n\nExample 1: Clear selections + new selection\n\n<iframe src=\"https://%server-name%/ sense/app/%app-id%/ sheet/%sheet-id%/ state/analysis/ options/clearselections/ select/Region Name/[International]\" />\n\nExample 2: Call a bookmark\n\n<iframe src=\"https://%server-name%/ sense/app/%app-id%/ sheet/%sheet-id%/ state/analysis/ bookmark/%bookmark-id%\" />\n\nMore information can be found on the Qlik Sense Developers help site.\n\nNon clashing CSS frameworks\n\nPrior to Qlik Sense 2.2 it was unfortunately quite often the case that mashup developers struggled using one of the most common CSS frameworks in combination with Qlik Sense. The reality was, that the frameworksâ styles and Qlik Sense CSS declarations clashed immediately.\n\nStarting with Qlik Sense 2.2 the experience is a completely different. We have put big efforts into allow living the CSS frameworks side by side with Qlik Sense.\n\nThe following six most common CSS frameworks should now work out of the box with Qlik Sense:\n\nBootstrap (http://getbootstrap.com/)\n\nFoundation (http://foundation.zurb.com/)\n\njQuery UI (https://jqueryui.com/)\n\nMaterial Design (https://design.google.com/)\n\nSemantic UI (http://semantic-ui.com/)\n\nPure CSS (http://purecss.io/)\n\nNote: Due to the fact that all these frameworks can basically change over night, it will never be possible to support these frameworks officially, but the ambitious aim is to make them just working out of the box in the future.\n\nAPI Improvements\n\nThe following improvements have been added:\n\nEngine API\n\nData can be exported from pivot tables\n\nSorting has been improved in pivot tables\n\nUpdated API for search\n\nSelection API\n\nAn new Capability API has been added, to better support Visualization Extensions & Mashup developers to bring Qlik Sense' unique selection capabilities into their solutions.\n\n// Get the current selection state qlik.app.selectionState(state);\n\nReference: Selection API in Qlik Sense Developers help\n\n.NET SDK\n\nImprovement of the asynchroneous behavior\n\nYou can now use more versions of the NuGet packages\n\nQlik Sense Repository Sevice API"
    }
}