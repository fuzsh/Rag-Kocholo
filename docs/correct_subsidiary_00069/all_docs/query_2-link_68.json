{
    "id": "correct_subsidiary_00069_2",
    "rank": 68,
    "data": {
        "url": "https://activecollab.com/blog/project-management/rational-unified-process-rup",
        "read_more_link": "",
        "language": "en",
        "title": "Rational Unified Process (RUP) · Blog · ActiveCollab",
        "top_image": "https://activecollab.com/upload/blog/175/cover.png",
        "meta_img": "https://activecollab.com/upload/blog/175/cover.png",
        "images": [
            "https://activecollab.com/upload/website-widgets/1/featured_image.png",
            "https://activecollab.com/upload/website-widgets/1/AC_Male_01-1-1.png",
            "https://activecollab.com/upload/website-widgets/1/What's-New-Thumbnail-(1).png",
            "https://activecollab.com/upload/website-widgets/1/imagex222323.png",
            "https://activecollab.com/upload/website-widgets/1/imagex2x2.png",
            "https://activecollab.com/upload/website-widgets/1/featured_image.png",
            "https://activecollab.com/upload/website-widgets/1/featured_image.png",
            "https://activecollab.com/upload/website-widgets/1/What's-New-Thumbnail-(1).png",
            "https://activecollab.com/upload/website-widgets/1/imagex222323.png",
            "https://activecollab.com/upload/website-widgets/1/imagex2x2.png",
            "https://activecollab.com/downloads/blog-authors/maja-mrsic.png",
            "https://activecollab.com/upload/blog/175/cover.png",
            "https://accounts.activecollab.com/upload/blog/175/rational-unified-process-rup-activities-processes-artifacts.png",
            "https://accounts.activecollab.com/upload/blog/175/rational-unified-process-rup-phases-milestones.png",
            "https://activecollab.com/upload/website-widgets/130/AC_Male_02.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Rational Unified Process is a guide on how to assign tasks and responsibilities within an organization that develops a high-quality software.",
        "meta_lang": "en",
        "meta_favicon": "/website/images/browsers/favicon.ico",
        "meta_site_name": "ActiveCollab",
        "canonical_link": "https://activecollab.com/blog/project-management/rational-unified-process-rup",
        "text": "Rational Unified Process is the ultimate guide for assigning tasks and responsibilities within a development organization and developing high-quality software that meets the needs and requirements of its users. It was initially created by the Rational Software Corporation which IBM bought out in 2003.\n\nThe incredible success of RUP approach has made a wide range of organizations worldwide realize how important a well-defined and well-documented software process is, and stimulated them to start implementing it in their projects.\n\nAlthough this method is primarily used for big software development projects, many project managers assume that RUP is not the right solution for projects of limited scope, which donât require many resources. However, there are many examples of small projects that benefited greatly from incorporating RUP into their organization.\n\nFor example, TAP University (Technology as Promised) is an online learning management system. Their aim was to extend the face-to-face training and boost their online offerings to corporate and public customers and students.\n\nAlthough this was a small project, the implementation of RUP yielded remarkable results. It helped the organization build a necessary framework in terms of organization of their use cases and gave guidance for the company to begin the Construction stage, the third and the most important stage of Rational Unified Process.\n\nWhat is Rational Unified Process (RUP)?\n\nA processed product - the development team for RUP is working closely with customers, partners, groups organizations to ensure that the process is constantly updated\n\nThe RUP leverages team productivity - it allows the team to have a free access to a knowledge base with all the guidelines and tool mentors that help them overcome critical issues. This helps the entire team share the same language when developing a software\n\nThe RUP creates and maintain models - instead of producing a large amount of paperwork, this method creates models - semantically rich representations of the software system your team is developing\n\nThe RUP is a guide how to use Unified Modelling Language (UML) - UML allows your team to communicate their requirements, architecture, and design of the project.\n\nThe RUP is a configurable process - it is a simple and clear process that can fit both small development teams as well as large organizations.\n\nSix fundamental practices of RUP\n\nThere are six fundamental best practices that make RUP suitable for a wide range of projects worldwide:\n\nDevelop software iteratively - by tackling high-risk elements on every stage of the projects, it allows you to gain increasing understanding of the problem and make necessary changes until you reach the most reasonable solution\n\nManage requirements - describes how to organize and keep track of functionality requirement, documents, tradeoff, decisions and business needs\n\nUse component-based architecture - it structures the system architecture into components which are reusable not only on the project at hand but in future projects as well\n\nVisually model software - it shows you how to create a visual model of a software to capture the structure and behavior of architecture and components\n\nVerify Software Quality - it enables you to evaluate and control the quality of all activities during the software development\n\nControl changes to software - it gives you the ability to control, track and monitor changes which enable constant and successful development of the software. It also helps you create a secure workspace by isolating it from changes which in turn brings your team together making them work as a unit.\n\nThe structure of RUP\n\nThis approach describes who is doing what, how and when. RUP can be presented by using four main elements:\n\nWorkers - the âWhoâ\n\nIt defines the behavior and responsibilities of all team members who are all focus on one common goal - to produce artifacts. In RUP, the worker is more of a role defining how individuals should carry out their work. A worker should not only perform a certain set of activities but also be the owner of a set of artifacts.\n\nActivities - the âHowâ\n\nIt refers to the unit of work that a worker is to perform. Each activity has a clear purpose and is assigned to the specific worker. Activities mainly include creating or updating some artifacts such as a model, a class, or a plan.\n\nArtifacts - the âWhatâ\n\nThe thing or the information that the process produces modifies or uses while working towards the final outcome. Artifacts serve as input that workers use to perform an activity and are also results or output of those activities.\n\nWorkflows - theâWhenâ\n\nWorkflow represents a sequence of activities that produce an observable value. In UML terms, we can present workflow in a sequence diagram, a collaboration diagram, and activity diagram.\n\nThe lifecycle of RUP\n\nLike most methodologies, RUP lifecycle is broken into four main phases (cycles), each phase working on a new generation of the product:\n\nInception phase\n\nElaboration phase\n\nConstruction phase\n\nTransition phase\n\n1. Inception phase\n\nEssentially, in this cycle, your team determines the structure and the basic idea of the project. Also, the team will decide if the project is worth pursuing at all based on the estimated costs, the necessary resources and the goal they are trying to achieve with the project.\n\n2. Elaboration phase\n\nThe aim of this phase is to analyze the requirements and the architecture of the system, develop the project plan and eliminate the highest risk elements of the project. Itâs undoubtedly the most critical of all stages as it signifies the transition from low-risk to high-risk. Itâs an also the point when your team has to make a decision whether to start a construction (development and coding) or not.\n\n3. Construction phase\n\nAt this stage, your team is finally ready to develop all components and features and integrate them into the product. Itâs a manufacturing process where your team focuses on managing resources in order to optimize costs, schedules and the quality.\n\n4. Transition Phase\n\nThe transition phase is the moment when the product is finally finished, released and delivered to customers. However, once the product is given to the user, there are a number of issues that can arise. This requires the team to handle all the bug-fixes and correct problems, or to finish some features that were postponed.\n\nAt the end of each phase, there is an important Project Milestone - a point in time when your team confirms that certain goals have been achieved. At that moment they have to make some critical decisions, which will have an impact on the following phase.\n\nThe benefits of RUP\n\nIt allows you to deal with changing requirements regardless of whether they are coming from the customer or from the project itself.\n\nIt emphasizes the need for accurate documentation.\n\nIt forces integration to happen throughout the software development, more specifically in the construction phase.\n\nThe disadvantages of RUP"
    }
}