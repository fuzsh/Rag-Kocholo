{
    "id": "correct_subsidiary_00026_2",
    "rank": 55,
    "data": {
        "url": "https://readonlymemory.com/the-making-of-dune-ii/",
        "read_more_link": "",
        "language": "en",
        "title": "The Making of Dune II",
        "top_image": "https://readonlymemory.com/wp-content/uploads/2020/06/tmod2_tl.jpg",
        "meta_img": "https://readonlymemory.com/wp-content/uploads/2020/06/tmod2_tl.jpg",
        "images": [
            "https://readonlymemory.com/wp-content/themes/rom/images/svg/logo.svg",
            "https://readonlymemory.com/wp-content/themes/rom/images/svg/logo-light.svg",
            "https://readonlymemory.com/wp-includes/images/spinner.gif",
            "https://readonlymemory.com/wp-content/uploads/2016/03/tmod2_1-scaled.jpg",
            "https://readonlymemory.com/wp-content/uploads/2016/03/tmod2_2.png",
            "https://readonlymemory.com/wp-content/uploads/2016/03/tmod2_3.png",
            "https://readonlymemory.com/wp-content/uploads/2016/03/tmod2_4.png",
            "https://readonlymemory.com/wp-content/uploads/2016/03/tmod2_5.png",
            "https://readonlymemory.vg/wp-content/uploads/2016/03/tmod2_v_1-640x640.jpg",
            "https://readonlymemory.vg/wp-content/uploads/2016/03/tmod2_v_2-640x640.jpg",
            "https://readonlymemory.com/wp-content/uploads/2020/06/Cam-Winstanley-640x666.png",
            "https://readonlymemory.com/wp-content/uploads/2014/09/tmoss_tl_v4-1280x880.jpg",
            "https://readonlymemory.com/wp-content/uploads/2015/05/b_tl-1280x909.jpg",
            "https://www.facebook.com/tr?id=435492054099733&ev=PageView&noscript=1"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Darren Wall",
            "Cam Winstanley",
            "amongst others",
            "Geena Davis",
            "Robin Williams",
            "Angelina Jolie"
        ],
        "publish_date": "2020-06-09T20:33:35+00:00",
        "summary": "",
        "meta_description": "The birth of the real-time strategy game",
        "meta_lang": "en",
        "meta_favicon": "https://readonlymemory.com/favicon.ico",
        "meta_site_name": "Read-Only Memory",
        "canonical_link": "https://readonlymemory.com/the-making-of-dune-ii/",
        "text": "Despite its name suggesting otherwise, Dune II was a first – a real-time strategy game that sprang out of the box with almost every gameplay attribute and control system seen in every RTS since. In direct lineage, it was the father of the globally successful Command & Conquer franchise, in that its code was used as a basis of the first game of the series. Yet in terms of wider influence, the battles first fought out on the vibrant sands of Arrakis continue to echo through modern videogaming. While Dune II’s designer and programmer Joe Bostic humbly maintains that RTS games would have evolved eventually, with or without Dune II, the fact remains that he was instrumental in creating them. No Dune II, no Warcraft, no StarCraft and, arguably, a completely different timeline for global esports.\n\nYet Dune II actually invented very little and its key elements had already been seen across a handful of existing titles. The genius of the development team at Westwood Studios was to stand on the shoulders of giants to perfectly balance the tactics of wargaming against the time-critical awareness of arcade games. It wasn’t the first game to have map exploration or to tie unit deployment against weapon development and resource gathering. It wasn’t even the first Dune videogame although, confusingly, it wasn’t ever exactly a sequel either …\n\nDune: the videogame(s)\n\nDune II’s journey began in 1988 with Mastertronic founder Martin Alper looking to secure the rights to develop Dune games. Whether he liked Frank Herbert’s sci-fi novels or not is irrelevant. He’d figured that anything that had been in print for so long and translated so widely would give any game an instant fan base.\n\nThis sound reasoning had no doubt prompted movie producer Dino De Laurentis to bankroll a lavish $40 million movie adaptation in 1984, the same time that Indiana Jones and the Temple of Doom had been made for $28 million. Despite the cost, fans of the books had stayed at home in droves, the David Lynch-directed movie had tanked at the box office and, eventually, the production company had gone bankrupt. Hollywood’s loss became videogaming’s gain in 1990, when Mastertronic (now renamed Virgin Games due to mergers) was finally able to buy Dune’s adaption rights from Universal Pictures.\n\nAlper quickly signed up French company, Cryo Interactive, to develop a combined adventure and strategy game to closely follow the plot of the original Dune novel. While this was in development, Virgin Games acquired the Las Vegas-based Westwood Studios and set them to work on another Dune title. As things turned out, Dune and Dune II were developed at the same time, had nothing to do with each other and were eventually released virtually simultaneously.\n\nGearing up for war\n\nWestwood Studios had been started in 1985 as Westwood Associates, merged with Virgin Games in 1992 and, in later years, would be best known as the home of the insanely popular Command & Conquer series.\n\nFrank Klepacki, Dune II’s composer, was raised in Las Vegas by parents who worked as entertainers in its casino lounges. He was playing drums professionally at 11, learned keyboards and guitar at high school and, aged 16, took a summer job at Westwood as a games tester.\n\nFrank remembers the place being staffed by twenty-somethings who lived and breathed games. ‘I wasn’t the greatest tester because I was so distracted by everything else going on,’ Frank tells us via a Zoom chat from his instrument-filled living room.\n\n‘While I was definitely the kid in the bunch, I tried to show everyone how enthusiastic I was and I found that I was more intrigued by the process of making games than the process of testing them. Going round all the departments and asking questions was was exciting to me – like being behind the scenes of a movie set. Eventually, I made my way to the audio department and talked to their audio director at the time, Paul Mudra. We ended up jamming a bit together for fun and when I graduated high school a few years later, Paul gave me my first shot as a composer on the NES game, DragonStrike.’\n\nWestwood had cut its teeth making videogame versions of successful board game franchises, including BattleTech: The Crescent Hawk’s Revenge and the Dungeons & Dragons-based Eye of the Beholder. Although promoted as ‘real-time strategy games’, these and other early-’90s titles were often videogame iterations of turn-based board games, with the game handling the dice rolling while looping battle animations played on-screen. While not truly real-time, development of these titles meant that Westwood was already moving towards making a different, better kind of strategy game.\n\nFiring the opening shots\n\n‘At the time, everyone at Westwood was playing a few games we loved a lot,’ recalls Dune II’s lead programmer, Joe Bostic, ‘so when the Dune IP sort of fell into our lap, we thought that combining elements from these games into one would be a good idea.’\n\nAnd that’s the essence of Dune II’s development – to take a grab-bag of existing ideas and combine them in a previously unseen way, then add an intuitive control system. Delve into the ‘few games’ that Joe loved and how skilfully Westwood blended Dune II’s winning elements quickly becomes apparent …\n\nWe knew the mouse was going to be important to Dune II because of Populous … it showed us that mouse control was key to making that kind of game work simply and easily.\n\nHudsonsoft’s Military Madness is a Moon-based sci-fi war game that was a 1990 release for the TurboGrafx-16. Playable as both a single or multiplayer game, movement is turn-based and restricted to hex grids, giving it that board-game-to-videogame feeling typical of its time. Yet in its simple control interface, rapid combat resolution and clear graphics, the basis for Dune II is clear to see.\n\nAt first glance, Sid Meier’s Civilization seems less of a likely inspiration for a war game. Leading players on nothing less than a centuries-long quest to build an empire, this 1991 release spawned numerous sequels as well as the entire micromanagement build-’em-up genre. Two aspects fascinated the Dune II developers. Firstly, its technology development tied into resource management were integrated into Dune II as factories and spice harvesting. Secondly, its exploration mechanic hid the world under a black shroud until the player sent out voyages of discovery. This too would also become an essential Dune II feature.\n\nPopulous from Bullfrog was released in 1989 and invented its own genre – the god game. Giving the player the power to literally create a new world, the aim was to build islands that supported worshippers, then encourage these tiny followers to overwhelm tribes loyal to other deities. ‘We knew the mouse was going to be important to Dune II because of Populous,’ says Joe Bostic. ‘It was an an earlier real-time game where multiple units were also moving around a map and it showed us that mouse control was key to making that kind of game work simply and easily.’\n\nThe third game much-loved in early ’90s Westwood was both the most obscure yet also the most influential. Herzog Zwei from Technosoft was released in Japan for the Sega Mega Drive in 1989. A two-player sequel to 1988’s Herzog – the self-proclaimed ‘real-time combat simulation’ – Herzog Zwei was that rarest of offerings, a two-player Mega Drive/Genesis game that wasn’t a sports sim from out of the EA stable.\n\nPlaying split-screen, each player attempts to defeat the enemy’s base by first creating infantry, tank, anti-aircraft or boat units and then capturing no man’s land outposts from which to launch attacks. Units can be given simple commands such as ‘fight in place’, ‘patrol’ and ‘attack enemy base’, resulting in clashes of massed AI-controlled units. The player can only directly pilot a transforming mech that, as a mech-plane, can swiftly carry a single unit, while as a mech-tank, can engage ground forces.\n\nAs a personal aside, a grey-import version of Herzog Zwei with Japanese in-game text was my most-played game of 1992 before I joined Future Publishing as a staff writer for Amiga Power magazine. My friends and I found the tactical possibilities offered by its handful of maps to be huge, but also that the player-controlled mech-tank was so insanely over-powered, it could wipe out massed attacks that had taken half a game to assemble. The quick fix was a gentleman’s agreement to use only the plane-mech as transportation and never transform into the tank-mech. This instantly rebalanced the game by ensuring that matches were won or lost by the AI-controlled forces. In this iteration, the similarities between Herzog Zwei and Dune II are even more striking.\n\nBacked by Westwood’s track record of producing strategy games, inspired by a shopping list of killer concepts from other games and with a recognisable sci-fi franchise to base it all on, Dune II rolled into the production phase …\n\nIn order to give us the most freedom to take the IP into military ground combat realm, we decided to have Dune II take place thousands of years prior to the timeline of the books … This freed us from having to follow the plot of the book … We could create our own path since there wasn’t any game like it at the time.\n\nCreating Arrakis\n\nThe endless dune seas of the planet Arrakis, the fearsome giant sand worms, the priceless spice that all interstellar travel depends on … Frank Herbert’s Dune offered up numerous possibilities along with one unavoidable problem – how to make their Dune game different from the other one that Virgin Games already had in development. The solution was simply to go off at a tangent.\n\n‘In order to give us the most freedom to take the IP into military ground combat realm, we decided to have Dune II take place thousands of years prior to the timeline of the books,’ says Joe. ‘This freed us from having to follow the plot of the book, while also keeping us clear of conflict with the Dune game being created by Cryo. We could create our own path since there wasn’t any game like it at the time.’\n\nWith the building blocks already established from other titles, Joe skipped the concept stage and worked directly on the game engine. ‘Development teams were so small back then,’ he notes, ‘that formal development steps that are useful with a large team would just have slowed us down.’\n\nAt its heart, Dune II rewards players for finding the right balance. Each mission starts with a small base, a spice harvester and a few troops surrounded by vast tracts of blacked-out, unexplored desert. Somewhere out there are the spice deposits that will fuel expansion, yet also an enemy base also trying to build itself up.\n\nSuccess comes from balancing numerous competing sets of demands. Exploring the desert will reveal spice deposits to mine, yet this takes the player away from base building. Spice is a currency that must be spent wisely. Should you, for example, build the base up or create a vast mobile army? Should your base be full of production and research facilities, or be ringed by strong walls and fixed defenses? Should you have swarms of fast, light infantry or put your trust in slower, heavier armoured units? Should you make more of an existing kind of unit, or spend spice developing newer, better weapons?\n\nVictory also comes from making the right decisions at the right time. Proving the old military maxim that no plan survives contact with the enemy, many missions were lost by launching massed attacks against an enemy base just as they attacked yours, leaving your own base to fend for itself.\n\nThe development team would find their own balance points through game testing but first, they needed to put the building blocks into place. The planet of Arrakis provided very much of a level playing field, with maps composed mainly of flat sand and the only features being areas of exposed bedrock, which acted as refuges from the sand worms that would randomly appear from under the sand to swallow up units. Getting units to move around this expanse was a natural first step.\n\n‘I used what is called a “state machine”,’ says Joe, ‘so each vehicle would know where to move and what to attack. This state machine logic would be duplicated for every unit and the player could also change the state machine for each combatant to direct it to move, or attack specific enemies. This isn’t necessarily a difficult programming problem, although it was a new concept to me at the time.’\n\nIn most respects, the game always feels fair, with types of military unit differing between the three competing houses of Atreides, Harkonnen and Ordos, yet no single house having an obvious advantage. The computer-controlled enemy also seems to be playing by the same rules, with each unit appearing on the battlefield after an appropriate delay for construction and deployment. Much of the tension comes from knowing the enemy’s out there, hidden under the dark veil of unexplored terrain. As it turns out, all of this is how Joe programmed it.\n\n‘For the most part, the computer opponent follows the same rules as the player,’ he tells us. ‘The computer’s biggest single advantage is that it knows where your units are located, since it doesn’t have a shroud to block its view. It also gets a few more credits per harvester load. These were both necessary to balance the play against a smarter human player.’\n\nLevel designers would pre-build each enemy base to its completed end-state, then roll it back to a starting point. ‘As the mission progressed, the computer would then follow this base-building template,’ Joe explains. ‘In practice, it meant the computer’s base was well laid-out but still followed the same rules for base building as the human player.’\n\nBoth sides also had limits on how many military units could be produced and while this was explained away within the game, this of course was due to memory and processing limitations of early ’90s computers. ‘Much of the time spent programming was to find clever ways to make the game run more efficiently without hurting gameplay,’ says Joe. ‘One of those ways was limiting unit numbers.’\n\nWatching the way the units move, particularly when there’s a large number of infantry attacking together, is a particularly satisfying aspect of Dune II, giving players that brief calm before the storm between issuing and order and seeing battle commence. Yet this seemingly complex flowing movement is the product of the most basic instructions. Each unit’s ‘state machine’ told it where to move to and what to attack, yet it only ever considered itself as an isolated entity on the battlefield. From a unit’s limited point of view, friendly units and buildings are merely obstacles to move around. ‘Each unit follows its own path-finding logic and that’s it,’ admits Joe. ‘It only considers nearby units if they affect movement by blocking their way, or when engaging targets.’\n\nSo that flocking that players see when multiple attackers close in on a single target? That’s behaviour only seen in the mind of the player, not in the chipsets of the computer. ‘Sometimes it may appear that the units know about each other, but that’s just an illusion. The computer is just issuing the same order to different units nearby at the same time. So if the computer decides to mount an attack, it might advance several units that are sitting idle. While the player sees this as a complex, coordinated assault, each movement is actually autonomous.’\n\nSounds of battle\n\nAs Joe and the programming team started to present playable levels, Frank Klepacki was one of many Westwood employees getting their first glimpse of a new kind of strategy game. ‘There was some forward thinking there for sure,’ he says. ‘The idea of taking elements of the strategy games we’d been playing and applying them to a real-time situation really changed things for the player. You’d find yourself having to make any number of decisions simultaneously, without the enemy waiting for you. Before Dune II, games like this had always been turn-based, or you played to a point then waited for the enemy to react. This was all about everything happening now and seeing how you do.’\n\nFrank had also seen enough to start working on the game’s score. ‘The nice thing about working in-house, rather than as a freelancer, is that you have the advantage of seeing the game at every stage,’ notes Frank. ‘This way, you can make iterative decisions based on where you know the game is going during development and you have the time to creatively play around with things that may or may not work.’\n\nDune II was developed for the PC before later being ported to the Commodore Amiga and Sega Mega Drive/Genesis and while these ports required the PC version’s graphics and audio be downgraded, all three versions still had superior audio to what Frank had been used to working with.\n\n‘Game audio meant taking the best advantage of the computers or consoles of the day,’ says Frank. ‘I had started on the NES, which was particularly limiting – I think just four channels and maybe one for sound effects too. So basically, I had to write a melody, a bassline, a harmony voice and then a white noise channel for a drum beat and that was all the NES could do.\n\n‘By the time we got the PC and the Sega Genesis, I could utilise I think nine channels of FM synthesis, three of which were reserved for sound effects and six I used for music. This gave me the ability to create my own instruments instead of just using what came with the system. Something I applied to Dune II was creating my own instruments instead of just using what came with the system, then swapping them out every bar to make things sound more interesting. It was the furthest I’d ever pushed the technical limits of what the FM synthesis cards could do with MIDI data.\n\n‘While I composed the music for Dune II, I worked within a team that consisted of an audio director, a lead sound designer and me. Obviously, we all helped each other out, which is why I ended up in the game as the voice of the Harkonnen’s announcer, and was also the voice of the Emperor in the intro cinematic.’\n\nRelease and legacy\n\nWhen it came to crunch time for Dune II, there wasn’t much of one at all. ‘We’d never worked from a big design document and built the game by learning things as we went along,’ recalls Joe. ‘This meant that we used whatever resources and time were available within Westwood. So although we had to wrap it up and ship it at some point, we never felt as though we were heading towards a fixed completion point since we had never had any kind of master list of tasks to stick to.’\n\nFrank also can’t remember any sense of last-minute panic. ‘I know I was working on The Legend of Kyrandia round about the same time, plus some others I can’t remember,’ he says. ‘So finishing one really just meant moving onto the next game. I’m sure Westwood probably got a royalty of some kind if a game did especially well, but I don’t recall there being any fuss about Dune II being a huge success.’\n\nWe all had a blast developing [Command & Conquer] and were also addicted to playing the game ourselves … While we knew we had something special, we just didn’t know how special it would be in terms of critical and commercial reception.\n\nIt was certainly well regarded though, with each version scoring high-80s in the games press and, by 1996, over 250,000 copies had been sold. That same year, my old magazine, Amiga Power, rated it as the 11th best Amiga game of all time.\n\nWestwood had essentially created the blueprint for a new genre, yet a sequel to Dune II was never once considered within Westwood. ‘Since Dune was an existing IP, it meant that we’d have had to pay a chunk of change every time we wanted to use the Dune name,’ explains Frank. ‘So the thinking within Westwood was very much about focusing on this game model we’d just created and apply it to our own IP. Let’s just make the game we want to in this completely new genre, but do it free of licensing and external approval.’\n\nEnter Command & Conquer, a sequel in all but name that used Dune II’s code and once again had Joe Bostic as lead programmer and co-creator. ‘Over time,’ says Joe, ‘we evolved that into Red Alert and eventually into Tiberian Sun, after which the code was transferred to Westwood Pacific, where they made Red Alert 2.’\n\nThe Command & Conquer franchise became a runaway success, selling over 30 million copies across numerous platforms and spawning games that spanned the whole spectrum from classic to … well … let’s say some were loved far less. Such immediate success meant that, for a time, Westwood became a virtual Command & Conquer factory and, to this day, it’s the title that most people associate with the developer.\n\n‘We all had a blast developing C&C and were also addicted to playing the game ourselves,’ says Frank. ‘While we knew we had something special, we just didn’t know how special it would be in terms of critical and commercial reception. It was just a wild, creative, pioneering and very fun time. C&C was the first time we’d utilised video sequences, which they filmed on a primitive green screen stage that still got the job done. It was cool because we not only had the mission briefing videos for the first time but I also recognised the people playing those characters.’\n\n‘Dune II seems very old and clunky by today’s standards,’ says Joe. ‘The biggest single thing I should have added to it was the ability to drag-select units to allow a player to issue one order simultaneously to multiple units. Even though that seems like a simple feature, it was the key change that made C&C such a leap ahead of Dune II.’\n\nThat Joe can only find one fault speaks volumes to how much Dune II got right. While drag-select has gone on to become the default way that players of subsequent RTS games pick up and order multiple units, the same can be said for nearly every other Dune II game mechanic. RTS games limit production with resources, make use of context-sensitive mouse controls and tend to use the same kind of top-down or isometric view that gives an overview of the battlefield while still looking good. As a blueprint for a genre, Dune II may not have been perfect but it wasn’t far off.\n\nVideogame trends come and go and so it was here. Westwood Studios was closed by Electronic Arts in 2003 with the loss of around a hundred jobs, with former employees, including Joe, forming Petroglyph Games almost immediately and going straight back to the video game coal face. The RTS torch was passed from Command & Conquer to Blizzard’s StarCraft series. With its phenomenal success in South Korea as both a game to be played as well as watched, StarCraft has been instrumental in establishing esports as a form of entertainment.\n\nRecently, coming up to 30 years since the release of Dune II, Petroglyph released Command & Conquer Remastered, bringing the definitive versions of maps, music and games to life. Both Joe and Frank were onboard for this, bringing their work on the RTS full circle.\n\n‘That’s crazy, huh?’ says Frank. ‘Command & Conquer Remastered serves the nostalgia for all the old fans but it also removes a barrier to entry for a generation of gamers who will have heard about it but never had a chance to play it because until now, it hasn’t been available on modern systems.’\n\nCommand & Conquer Remastered might be able to take players back to the early days of the real-time strategy genre but it can’t take them all the way back to the start. Sadly the famously complicated issues of IP rights surrounding the Dune name make the chance of a Dune II re-release unlikely simply because it would almost certainly cost more to produce that it could ever recoup.\n\nDune 2000, released by Westwood in 1998 but developed by Intelligent Games, gives fans something between a remake and a sequel to play on PC and PlayStation, while we hear there’s even an unofficial Android version of the game. But unless you own a ’90s era PC, an Amiga or a 16-bit console, your chances of playing Dune II in its original glory are slim, which is a shame.\n\nAlthough not perfect, Dune II did a great job of hitting the hot sand running, not only creating a genre but also working as a piece of stand-alone entertainment. That it did so with a small team working at their own pace to problem solve as the game went through development, is just one of the many success stories dotted throughout videogame history. Sometimes landmark titles are born of multi-million dollar budgets, huge teams, vast levels of processing power and endless overtime. Other times, hugely significant games are a combination of the right people, right idea and right time. That’s Dune II for you."
    }
}