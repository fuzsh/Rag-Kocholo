{
    "id": "wrong_mix_property_subsidiary_00111_3",
    "rank": 65,
    "data": {
        "url": "https://www.javacodegeeks.com/2013/05/agile-methodology.html",
        "read_more_link": "",
        "language": "en",
        "title": "Agile methodology",
        "top_image": "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
        "meta_img": "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
        "images": [
            "https://www.javacodegeeks.com/wp-content/uploads/2012/12/JavaCodeGeeks-logo.png",
            "https://secure.gravatar.com/avatar/7ccac876a0b5efa1006381ee7e1f7674?s=140&d=mm&r=g",
            "https://secure.gravatar.com/avatar/7ccac876a0b5efa1006381ee7e1f7674?s=140&d=mm&r=g",
            "https://www.javacodegeeks.com/wp-content/uploads/2013/05/waterfall-model1.jpg?w=409&h=150",
            "https://www.javacodegeeks.com/wp-content/uploads/2013/05/waterfall-model1.jpg?w=409&h=150",
            "https://www.javacodegeeks.com/wp-content/uploads/2013/05/agile-model2.jpg?w=416&h=165",
            "https://www.javacodegeeks.com/wp-content/uploads/2013/05/agile-model2.jpg?w=416&h=165",
            "https://www.javacodegeeks.com/wp-content/uploads/2013/05/XP-feedback.gif",
            "https://www.javacodegeeks.com/wp-content/uploads/2013/05/XP-feedback.gif",
            "https://www.javacodegeeks.com/wp-content/uploads/2013/05/diagram02.png",
            "https://www.javacodegeeks.com/wp-content/uploads/2013/05/diagram02.png",
            "https://www.javacodegeeks.com/wp-content/uploads/2015/01/books_promo.png",
            "https://www.javacodegeeks.com/wp-content/uploads/2015/01/books_promo.png",
            "https://secure.gravatar.com/avatar/7ccac876a0b5efa1006381ee7e1f7674?s=140&d=mm&r=g",
            "https://secure.gravatar.com/avatar/7ccac876a0b5efa1006381ee7e1f7674?s=140&d=mm&r=g",
            "https://secure.gravatar.com/avatar/7ccac876a0b5efa1006381ee7e1f7674?s=180&d=mm&r=g",
            "https://secure.gravatar.com/avatar/7ccac876a0b5efa1006381ee7e1f7674?s=180&d=mm&r=g",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2012/10/agile-logo.jpg",
            "https://secure.gravatar.com/avatar/9b5f49b2e27748b8c26fdeeffb92ff3f?s=56&d=mm&r=g",
            "https://secure.gravatar.com/avatar/9b5f49b2e27748b8c26fdeeffb92ff3f?s=56&d=mm&r=g",
            "https://secure.gravatar.com/avatar/365cf8a9624dd9d81a3ed38b4ae8b37c?s=56&d=mm&r=g",
            "https://secure.gravatar.com/avatar/365cf8a9624dd9d81a3ed38b4ae8b37c?s=56&d=mm&r=g",
            "https://www.javacodegeeks.com/wp-content/uploads/2013/04/w4g-badge-150x150.png",
            "https://www.javacodegeeks.com/wp-content/uploads/2018/01/newsletter-bg.jpg",
            "https://www.javacodegeeks.com/wp-content/uploads/2018/01/newsletter-bg.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Nitin Kumar"
        ],
        "publish_date": "2013-05-25T12:00:42+00:00",
        "summary": "",
        "meta_description": "Introduction Waterfall model follows application development in phases with checkpoint and deliverable documents in each checkpoint. It advocates rigours",
        "meta_lang": "en",
        "meta_favicon": "https://www.javacodegeeks.com/wp-content/uploads/2012/12/JavaCodeGeeks-favIcon.png",
        "meta_site_name": "Java Code Geeks",
        "canonical_link": "https://www.javacodegeeks.com/2013/05/agile-methodology.html",
        "text": "Introduction\n\nWaterfall model follows application development in phases with checkpoint and deliverable documents in each checkpoint. It advocates rigours project management, strategy and processes to track the status. The main drawback is that it require more than 80% project understanding before kick off the project which is impossible in major cases. Cause of volatile requirements and understanding business feels, 80% of software projects using this methodology fail to meet their objectives.\n\nAgile methodology\n\nAgile mythology has small box iterations rather than phases. The output of each iteration will be production release deliverable and could be evaluate and get early feedback.\n\nAgile was a significant departure from the heavyweight document-driven software development methodologies—such as waterfall—in general use at the time\n\nAgile refers more collaboration and interaction between different departments at enterprise level and deliver the successful product with individual contribution\n\nAgile methodologies embrace iterations. Small teams work together with stakeholders to define quick prototypes, proof of concepts, or other visual means to describe the problem to be solved. The team defines the requirements for the iteration, develops the code, and defines and runs integrated test scripts, and the users verify the results. Verification occurs much earlier in the development process than it would with waterfall, allowing stakeholders to fine-tune requirements while they’re still relatively easy to change.\n\nIt promotes adaptive planning, evolutionary development & delivery, a time-boxed iterative approach, and encourages rapid and flexible response to change.\n\nXP (extreme programming)\n\nIt advocates frequent “release” in short development cycles, each release follows with several iterations. When the product release has enough features to satisfy user, the team terminates iteration cycle and release the software.\n\nOther elements of Extreme Programming include: programming in pairs, continuous integration, add only needed features for a particular release.\n\nUsers write story which help the team to estimate the time to build the release and to define acceptance testing. A user a part of XP team adds the detail requirement as the software is being built. This allows requirements to evolve as both users and developers define what the product will look like\n\nXP (extreme programming)\n\nIt advocates frequent “release” in short development cycles, each release follows with several iterations. When the product release has enough features to satisfy user, the team terminates iteration cycle and release the software.\n\nOther elements of Extreme Programming include: programming in pairs, continuous integration, add only needed features for a particular release.\n\nUsers write story which help the team to estimate the time to build the release and to define acceptance testing. A user a part of XP team adds the detail requirement as the software is being built. This allows requirements to evolve as both users and developers define what the product will look like\n\nContinuous Integration: Integrate often at least once a day using automated continuous integration tool.\n\nPair Programming: Pair programing to extensively code review while coding.\n\nProject velocity: Velocity is a measure of how much work is getting done on the project. This important metric drives release planning and schedule updates..\n\nScrum\n\nScrum is a way for teams to work together to develop a product whereas requirement change rapidly during development. Product development, using Scrum, occurs in small pieces, with each piece building upon previously created pieces. Building products one small piece at a time encourages creativity and enables teams to respond to feedback and change, to build exactly and only what is needed. Unlike XP, Scrum methodology includes both managerial and development processes.\n\nSprints: Short development process\n\nStand up meeting: Daily 10 minutes meeting status of the work to be done that day, progress from the day before, and any blocks that must be cleared\n\nScrum Master: The ScrumMaster is the person responsible for managing the Scrum project..\n\nSprint backlog: Sprint backlog is the list of backlog items assigned to a sprint, but not yet completed.\n\nBurndown chart: This chart, updated every day, shows the work remaining within the sprint. The burn down chart is used both to track sprint progress and to decide when items must be removed from the sprint backlog and deferred to the next sprint.\n\nProduct backlog: Product backlog is the complete list of requirements\n\nResources"
    }
}