{
    "id": "correct_foundationPlace_00071_3",
    "rank": 96,
    "data": {
        "url": "https://community.esri.com/t5/arcgis-geoevent-server-blog/bg-p/arcgis-geoevent-server-blog/page/7",
        "read_more_link": "",
        "language": "en",
        "title": "ArcGIS GeoEvent Server Blog",
        "top_image": "https://www.esri.com/content/dam/esrisites/en-us/common/favicon/esri-favicon-dark-32.png",
        "meta_img": "https://www.esri.com/content/dam/esrisites/en-us/common/favicon/esri-favicon-dark-32.png",
        "images": [
            "https://community.esri.com/skins/images/E5E2195037A1FB969DA0362116346768/responsive_peak/images/feedback_loading_trans.gif",
            "https://community.esri.com/html/assets/refresh.png",
            "https://community.esri.com/legacyfs/online/esri/avatars/a141666_OldIronside_WBG.png",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/esri/avatars/a141666_OldIronside_WBG.png",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/esri/avatars/a141666_OldIronside_WBG.png",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/esri/avatars/a141666_OldIronside_WBG.png",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/440051_pastedImage_9.png",
            "https://community.esri.com/legacyfs/online/440052_pastedImage_10.png",
            "https://community.esri.com/legacyfs/online/440054_pastedImage_14.png",
            "https://community.esri.com/legacyfs/online/440055_pastedImage_15.png",
            "https://community.esri.com/legacyfs/online/440072_pastedImage_26.png",
            "https://community.esri.com/legacyfs/online/440073_pastedImage_27.png",
            "https://community.esri.com/legacyfs/online/440056_pastedImage_25.png",
            "https://community.esri.com/legacyfs/online/esri/avatars/a141666_OldIronside_WBG.png",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/439610_pastedImage_1.png",
            "https://community.esri.com/legacyfs/online/439613_pastedImage_4.png",
            "https://community.esri.com/legacyfs/online/439612_pastedImage_3.png",
            "https://community.esri.com/legacyfs/online/439614_pastedImage_5.png",
            "https://community.esri.com/legacyfs/online/439615_pastedImage_6.png",
            "https://community.esri.com/legacyfs/online/439616_pastedImage_7.png",
            "https://community.esri.com/legacyfs/online/439617_pastedImage_8.png",
            "https://community.esri.com/legacyfs/online/439618_pastedImage_2.png",
            "https://community.esri.com/legacyfs/online/439619_pastedImage_3.png",
            "https://community.esri.com/legacyfs/online/439620_pastedImage_4.png",
            "https://community.esri.com/legacyfs/online/439621_pastedImage_5.png",
            "https://community.esri.com/legacyfs/online/439622_pastedImage_8.png",
            "https://community.esri.com/legacyfs/online/439623_pastedImage_9.png",
            "https://community.esri.com/t5/image/serverpage/image-id/15593iBC1028ACFF05ECB6/image-dimensions/50x50/image-coordinates/194%2C0%2C1222%2C1028/constrain-image/false?v=v2",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/441022_EpochConverter(1).png",
            "https://community.esri.com/legacyfs/online/439408_EpochConverter(2).png",
            "https://community.esri.com/legacyfs/online/439412_WebMap CustomAttribute.png",
            "https://community.esri.com/legacyfs/online/439413_webMap CustomPopup.png",
            "https://community.esri.com/legacyfs/online/esri/avatars/a141666_OldIronside_WBG.png",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/438469_pastedImage_1.png",
            "https://community.esri.com/legacyfs/online/438479_pastedImage_2.png",
            "https://community.esri.com/legacyfs/online/438499_pastedImage_64.png",
            "https://community.esri.com/legacyfs/online/438510_pastedImage_91.png",
            "https://community.esri.com/legacyfs/online/438498_pastedImage_46.png",
            "https://community.esri.com/legacyfs/online/438503_pastedImage_87.png",
            "https://community.esri.com/legacyfs/online/438525_pastedImage_1.png",
            "https://community.esri.com/legacyfs/online/esri/avatars/a141666_OldIronside_WBG.png",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/esri/avatars/a141666_OldIronside_WBG.png",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/437782_pastedImage_5.png",
            "https://community.esri.com/legacyfs/online/437781_pastedImage_3.png",
            "https://community.esri.com/legacyfs/online/437783_pastedImage_6.png",
            "https://community.esri.com/legacyfs/online/437784_pastedImage_7.png",
            "https://community.esri.com/legacyfs/online/437785_pastedImage_32.png",
            "https://community.esri.com/legacyfs/online/437789_pastedImage_33.png",
            "https://community.esri.com/legacyfs/online/437790_pastedImage_34.png",
            "https://community.esri.com/legacyfs/online/437791_pastedImage_35.png",
            "https://community.esri.com/legacyfs/online/esri/avatars/a141666_OldIronside_WBG.png",
            "https://communitystg.esri.com/html/@09C70CF6BB92070325EF7BBC54D73CCB/rank_icons/esri-logo-40.png?version=preview",
            "https://community.esri.com/legacyfs/online/437616_pastedImage_22.png",
            "https://community.esri.com/legacyfs/online/437617_pastedImage_23.png",
            "https://community.esri.com/legacyfs/online/437630_pastedImage_24.png",
            "https://community.esri.com/legacyfs/online/437633_pastedImage_27.png",
            "https://community.esri.com/legacyfs/online/437632_pastedImage_26.png",
            "https://community.esri.com/legacyfs/online/437634_pastedImage_28.png",
            "https://community.esri.com/legacyfs/online/437635_pastedImage_29.png",
            "https://community.esri.com/legacyfs/online/437637_pastedImage_31.png",
            "https://community.esri.com/legacyfs/online/437639_pastedImage_33.png",
            "https://community.esri.com/legacyfs/online/437641_pastedImage_35.png",
            "https://community.esri.com/t5/image/serverpage/image-id/15593iBC1028ACFF05ECB6/image-dimensions/50x50/image-coordinates/194%2C0%2C1222%2C1028?v=v2",
            "https://community.esri.com/t5/image/serverpage/image-id/77089i718159D88562B9F4/image-dimensions/50x50/image-coordinates/0%2C0%2C576%2C576?v=v2",
            "https://community.esri.com/legacyfs/online/esri/avatars/a195332_749px-Officer_EGA.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://www.esri.com/content/dam/esrisites/en-us/common/favicon/esri-favicon-180.png",
        "meta_site_name": "Esri Community",
        "canonical_link": "https://community.esri.com/t5/arcgis-geoevent-server-blog/bg-p/arcgis-geoevent-server-blog/page/7",
        "text": "As RJ Sunderman mentioned in his blog, automating administration of the GeoEvent Server using python scripts can be a powerful way to augment the way you manage your real-time system (such as stopping outputs before a reboot or starting those outputs after a restart). a blog post by Andy Ommen has an excellent description of how to do this (I've even updated his script here) - Scripting tasks using the GeoEvent Admin API\n\nScripting can also be useful for those times when GeoEvent needs a bit of help. For example if a property on an input or output must be periodically updated. One of those situations recently arose when a user's AVL provider required a URL Parameter to supply a timestamp for the data being requested. It is this scenario that I'll use as an example of how to modify properties of a GeoEvent component using a script. This methodology could be used to update any of the editable properties on any of your GeoEvent components that allow modification, as Jake Skinner shows in his article on updating a token.\n\nAn Input's \"since\" property...\n\nThe GeoEvent Admin API to the rescue...\n\nStep by Step\n\nCreate your GeoEvent Input\n\nIdentify your GeoEvent Input\n\nSet up the script\n\nOther scriptparameters you may update\n\nScriptconstants\n\nRunning the script\n\nInstalling\n\nTesting\n\nScheduling\n\nAn Input's \"since\" property...\n\nAn AVL provider supplies a HTTP RESTful API for polling vehicle data in JSON format. Yeah! The good news is that GeoEvent provides an Input Connector that does exactly that. But on further reading you find that the API expects the polling request to include a 'since' parameter in the URL. An example of the expected format is below:\n\nhttps://avl.trackingcompany.com/api1/json/currentLocations?user=john&pw=secret&since=2012-10-08T09:20:30Z\n\nUnfortunately, GeoEvent has no way to automatically update that date next to the 'since' parameter. So without any other solution, you'd be stuck manually updating the GeoEvent Input's properties every day (or every hour). What we need is a way to set that timestamp to something recent, so we can reduce the amount of duplicate data we recieve and reduce the load on both servers.\n\nThe GeoEvent Admin API to the rescue...\n\nFortunately, the GeoEvent Admin API allows us to update an input programatically and we can automate this using a little python scripting. To see what is offered from the GeoEvent Admin API, you can view the Swagger documentation on your GeoEvent Server by going to the following URL.\n\nhttps://<YourGES>:6143/geoevent/admin/api/index.html\n\nUsing this API we can do operations like get, add, update, delete, start, and stop on most of the compents within GeoEvent. So conceptually, to solve the problem above, we just need to:\n\nget the input with the 'since' parameter,\n\nset the value of that parameter,\n\nand update the input.\n\nStep by Step\n\nCreate your GeoEvent Input\n\nIn GeoEvent create a new 'Poll an external website for JSON' Input. Be sure to split the URL path from the parameters by using the Input's 'URL' and 'Parameters' properties. URL Paramters are any part of the URL after the '?'. For example\n\nGiven the URL:\n\nhttps://myserver.domain.com/api1/json/gateway?user=john&since=2019-03-21T14:22:12Z&pw=se...\n\nYour Input properties should look like this:\n\nIdentify your GeoEvent Input\n\nBy default the script will look through all inputs for URL Parameter properties containing a 'since' parameter. You can help the script narrow its search by providing the 'Name' of the input(s) you want it to look at. To do this, go into your GeoEvent's REST end poing and select your input.\n\nhttps://<yourGES>:6143/geoevent/rest/\n\nAfter you click on your input, you will see the list of properties. Note and/or Copy the value for the 'Name' property.\n\nSo in this case, we want to copy and save the 'Name' value \"a0e151b8-0c00-4c12-838d-16cdefb36ba8\".\n\nSet up the script\n\nYou can get the script from this GitHub repository. You want to download the file 'UpdateGEEInputURLParam.py'.\n\nOnce downloaded, the following parameters will need to be set before the script will run properly.\n\nserver_fqdn – This is the fully qualified domain name of the server where GeoEvent is installed.\n\nExample: server.domain.com\n\nusername – This is the username for the GeoEvent Server Manager login credentials\n\npassword – This is the password for the GeoEvent Server Manager login credentials\n\ngeeTargetInputList – This is a list of ‘name’ strings (leave empty if you want the script to look at all inputs). This is where you'd paste (inside of quotes) the 'Name' parameter of your input above.\n\nOther script parameters you may update\n\nurlParamName – This is the property on the URL Parameters you want to change.\n\nThe default is ‘since’ to match our context, but you might change this to anything that matches your use case.\n\nExamples: timeSince, token, startTime, ...\n\ntime_offset_sec – This is the amount of time to add (or subtract if you supply a negative number) to the current time.\n\nPositive numbers will add time the current time. Example: now() + 30 seconds.\n\nNegatvie numbers will subtract time from the current time. Example: now() - 60 seconds.\n\nThe default is -60 seconds (subtract 1 minute from the current time stamp)\n\nScript constants\n\nThere are a number of constants that follow the parameters above that shouldn't be modified in most cases. However, if you intend to extend this script, or have a non-default installation of GeoEvent, you might need to add or modify some of these.\n\nRunning the script\n\nInstalling\n\nThe script requires an external library to be installed into your Python before it will run correctly. The library is located here in GitHub, but to install, all you need to do is the folloiwing:\n\nOpen a command prompt on your machine\n\nNavigate (cd) to the scripts directory in your Python2.7 install (usually this is C:\\Python27\\ArcGISx6410.6\\Scripts)\n\nType ‘pip install arcrest_package’ and hit enter\n\nTesting\n\nIf you are editing the script in an IDE you will be able to run the script there. Outside of the IDE, you will want to be sure that Python is installed on your machine and is executable (on Windows, you can register .py files to run as python.exe files, or you can add the folder containing the python.exe to your system's PATH variable). This script can be run/tested on any machine that has network access to the GeoEvent machine.\n\nAs the script runs, it will print out log messages indicating the input(s) it is modifying:\n\nLooking at clientParameters on input named 'a0e151b8-0c00-4c12-838d-16cdefb36ba8'\n\nUpdating clientParameters 'since' parameter value =2019-03-21T04:43:46Z to 2019-03-21T14:22:12Z\n\nUpdated clientParameters 'since' parameter on input named a0e151b8-0c00-4c12-838d-16cdefb36ba8\n\nChecking your Inputs, the Parameter property should be updated and the value of the 'since' parameter will be the current time minus 1 minute.\n\nScheduling\n\nYou can use a scheduler (such as Windows Task Scheduler) to run your script at a specified time or interval (e.g. hourly).\n\nWhen someone asks you, \"What time is it?\", you are probably assuming he or she wants to know the local time where the two of you are right now. As I write this, the time now is Tuesday, March 12, 2019 at about 2:25 PM in Redlands, California, USA.\n\nTypically, we do not qualify our answers so explicitly. We say \"It's 2 o'clock\" and assume it's understood that this is the time right now in Redlands, California. But that is sort of like answering a query about length or distance by simply saying \"36\". Is that feet, meters, miles, or kilometers?\n\nLast weekend, here in California, we set our clocks ahead one hour to honor daylight savings time (DST). California is now observing Pacific Daylight Time (PDT) which is equal to UTC-7:00 hours. When we specify the time at which an event was observed, we should include the time zone in which the observation is made as well as whether or not the time reflects a local convention honoring daylight savings time.\n\nWhen ArcGIS GeoEvent Server receives data for processing, event records usually include a date/time value with each observation. Often the date/time value is expressed as a string and does not specify the time zone in which the date/time is expressed or whether the value reflects a daylight savings time offset. These are sort of like the \"units\" (e.g. feet, meters, miles, or kilometers) which qualify a date/time value.\n\nThe intent of this blog is to identify when GeoEvent Server assumes a date/time value is expressed in Coordinated Universal Time (UTC) versus when it is assumed that a date/time expresses a value consistent with the system's locale. We'll explore a couple situations where this might be important and the steps you can take to configure how date/time values are handled and displayed.\n\nEvent data ingest should generally assume date/time values are expressed as UTC values\n\nThere are several reasons for this. In the interest of brevity, I'll simply note that GeoEvent Server is running in a \"server\" context. The assumption is that the server machine is not necessarily located in the same time zone as the sensors from which it is receiving data and that clients interested in visualizing the data are likewise not necessarily in the same time zone as the server or the sensors. UTC is the time standard commonly used around the world. The world's timing centers have agreed to synchronize, or coordinate, their date/time values -- hence the name Coordinated Universal Time.(1)\n\nIf you have ever used the ArcGIS REST Services Directory to examine the JSON representation of feature records which include a date/time field whose data type is esriFieldTypeDate, you have probably noticed that the value is not a string, it is a number; an epoch long integer representing the number of milliseconds since the UNIX Epoch (January 1, 1970, midnight). The default is to express the value in UTC.(2)(3)\n\nWhen does GeoEvent Server assume the date/time values it receives are UTC values?\n\nOut-of-the-box, GeoEvent Server supports the ISO 8601 standard for representing date/time values.(4)\n\nIt is unusual, however, to find sensor data which expresses the date/time value \"March 12, 2019, 2:25:30 pm PDT\" as 2019-03-12T14:25:30-07:00. So when a GeoEvent Definition specifies that a particular attribute should be handled as a Date, inbound adapters used by GeoEvent Server inputs will compare received string values to see if they match one of a few commonly used date/time patterns.\n\nFor example, GeoEvent Server, out-of-the-box, will recognize the following date/time values as Date values:\n\nTue Mar 12 14:25:30 PDT 2019\n\n03/12/2019 02:25:30 PM\n\n03/12/2019 14:25:30\n\n1552400730000\n\nWhen one of the above date/time values is handled, and the input's Expected Date Format parameter does not specify a Java SimpleDateFormat expression / pattern, GeoEvent Server will assume the date/time value represents a Coordinated Universal Time (UTC) value.\n\nWhen will GeoEvent Server assume a date/time value is expressed in the server machine's locale?\n\nWhen a GeoEvent Server input is configured with a Java SimpleDateFormat expression / pattern the assumption is the input should convert date/time values it receives into an epoch long integer, but treat the value as a local time, not a UTC value.\n\nFor example, if your event data represents its date/time values as \"Mar 12 2019 14:25:30\" and you configure a new Receive JSON on a REST Endpoint input to use the pattern matching expression MMM dd yyyy HH:mm:ss as its Expected Date Format property, then GeoEvent Server will assume the event record's date/time expresses a value consistent with the system's locale and will convert the date/time to the long integer value 1552425930000.\n\nYou can use the EpochConverter online utility to show equivalent date/time string values for this long integer value. Notice in the illustration below that the value 1552425930000 (expressed in epoch milliseconds) is equivalent to both the 12th of March, 2019, at 9:25 PM Greenwich Mean Time (GMT) and 2:25 PM Pacific Daylight Time (PDT):\n\nThe utility's conversion notes that clocks in my time zone are currently seven hours behind GMT and that daylight savings time is currently being observed. You should note that while GMT and UTC are often used interchangeably, they are not the same.(5)\n\nWhat if I have to use a SimpleDateFormat expression, because my date/time values are not in a commonly recognized format, but my client applications expect date/time values will be expressed as UTC values?\n\nYou have a couple of options. First, if you have the ability to work with your data provider, you could request that the date/time values sent to you specify a time zone as well as the month, day, year, hour, minute, second (etc.).\n\nFor example, suppose the event data you want to process could be changed to specify \"Mar 12 2019 14:25:30 GMT\". This would enable you to configure a Receive JSON on a REST Endpoint input to use the pattern matching expression MMM dd yyyy HH:mm:ss zzz as its Expected Date Format property since information on the time zone is now included in the date/time string. The input will convert the date/time string to 1552400730000 which is a long integer equivalent of the received date/time string value.\n\nUsing the EpochConverter online utility to show the equivalent date/time string values for this long integer value, you can see that the Date value GeoEvent Server is using is a GMT/UTC value:\n\nIf the data feed from your data provider cannot be modified you can use GeoEvent Server to compute the proper UTC offset for the ingested \"local\" date/time value within a GeoEvent Service.\n\nBecause GeoEvent Server handles Date attribute values as long integers, in epoch milliseconds, you can use a Field Calculator to add (or subtract) a number of milliseconds equal to the number of hours you need to offset a date/time value to change its representation from \"local\" time to UTC.\n\nThe problem, for a long time, was that you had to use a hard-coded constant value in your Field Calculator's expression which rendered your GeoEvent Service vulnerable twice a year to time changes if your community started and later stopped observing daylight savings time. Beginning with the ArcGIS GeoEvent Server 10.5.1, the Field Calculator supports a new wrapper function that helps address this: currentOffsetUTC()\n\nA Field Calculator, running within a GeoEvent Service on my local server, evaluates currentOffsetUTC() and returns the value -25200000, the millisecond difference between my local system's current date/time and UTC. Currently, here in California, we are observing Pacific Daylight Time (PDT) which is equal to UTC-7:00.\n\nEven though GeoEvent Server assumes date/time values such as \"Mar 12 2019 14:25:30\" (received without any time zone \"units\") represent local time values -- because a pattern matching expression MMM dd yyyy HH:mm:ss must be used to interpret the received date/time string values -- I was able to calculate a new date/time value using a dynamic offset and output a value which represents the received date/time as a UTC value. All I had to do was route the event record, with its attribute value ReportedDT (data type: Date) through a Field Calculator configured with the expression: ReportedDT + currentOffsetUTC()\n\nHow do I configure a web map to display local time rather than UTC time values\n\nWhen recommending that date/time values should generally be expressed as UTC values, a frequent complaint when feature records updated by GeoEvent Server are visualized on a web map, is that the web map's pop-up values show the date/time values in UTC rather than local time.\n\nIt is true that, generally, we do not want to assume that a server machine and sensor network are both located in the same time zone as the localized client applications querying the feature record data. That does not mean that folks in different time zones want to perform the mental arithmetic needed to convert a date/time value displayed by a web map's pop-up from UTC to their local time.\n\nIn the past I have recommended data administrators work around this issue using a Field Calculator to offset the date/time, as I've shown above, by a number of hours to \"falsely\" represent date/time values in their database as local time values. I say \"falsely\" because most map/feature services are not configured to use a specified time zone. For a long time it wasn't even possible to change the time zone a map/feature service used to represent its temporal data values. There are web pages in the ArcGIS REST API which still specify that feature services return date/time values only as epoch long integers whose UTC values represent the number of milliseconds since the UNIX Epoch (January 1, 1970, midnight). So even if a map/feature service is configured to use a specific time zone, we should not expect all client applications to honor the service's specification.\n\nFor now, let's assume our published feature service's JSON specification follows the default and client apps expect UTC values returned when they query the map/feature service. If we use GeoEvent Server to falsely offset the date/time values to local time, the data values in our geodatabase are effectively a lie. Sure, it is easy to say that all client applications have been localized, and assume all server machines, client applications, and reporting sensors are all in one time zone; all we are trying to do is get a web map to stop displaying date/time values in UTC.\n\nBut there is a better way to handle this problem. Testing the latest public release (10.6.1) of the Enterprise portal web map and ArcGIS Online web map I found that pop-ups can be configured with custom expressions which dynamically calculate new values from existing feature record attributes. These new values can then be selected as the attributes to show in a web map's pop-up rather than the \"raw\" values from the feature service.\n\nBelow are the basic steps necessary to accomplish this:\n\nIn your web map, from the Content tab, expand the feature layer's context menu and click Configure Pop-up.\n\nOn the lower portion of the Configure Pop-up panel, beneath Attribute Expressions, click Add.\n\nSearch the available functions for date functions and build an expression like the one illustrated below.\n\nAssign the new custom attribute a descriptive name (e.g. localDateTime) and save the attribute calculation. You should now be able to select the dynamic attribute to display along with any other \"raw\" attributes from the feature layer.\n\nReferences:\n\n(1) UTC – Coordinated Universal Time\n\n(2) ArcGIS for Developers | ArcGIS REST API\n\n(3) ArcGIS for Developers | Common Data Types | Feature object\n\n(4) World Wide Web Consortium | Date and Time Formats\n\n(5) timeanddate.com - The Difference Between GMT and UTC\n\n(6) ArcGIS for Developers | ArcGIS REST API | Enterprise Administration | Server | Service Types"
    }
}