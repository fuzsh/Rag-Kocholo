{
    "id": "correct_birth_00147_3",
    "rank": 29,
    "data": {
        "url": "https://stackoverflow.com/questions/3636914/how-can-i-see-what-i-am-about-to-push-with-git",
        "read_more_link": "",
        "language": "en",
        "title": "How can I see what I am about to push with git?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://cdn.sstatic.net/Img/teams/overflowai.svg?v=d706fa76cdae",
            "https://i.sstatic.net/YUZlu.png",
            "https://www.gravatar.com/avatar/71770d043c0f7e3c7bc5f74190015c26?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/298e0497aa6b76a573f17e6a2bb22dec?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/7cefc64f7b1b53513625bf3487ecd16d?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/L5GMa.png",
            "https://i.sstatic.net/kbxlg.png",
            "https://www.gravatar.com/avatar/298e0497aa6b76a573f17e6a2bb22dec?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/cd627b21eb027107a4199884d0b92f20?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/6oDQD.jpg?s=64",
            "https://www.gravatar.com/avatar/9d42a3f7de3cb0868fb3dc2b9815d3ab?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/8742b28745bb31ae21b06fcc54c4475e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/5153e81ea2e8c98a0cf8910152001ba6?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/e6b5f70fbe18760634f733a9fe806c4a?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/hMEvO.jpg?s=64",
            "https://www.gravatar.com/avatar/dce43cb8158a14c3fed02bea797becd7?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/c8c7d6abccbdc7ba64c0aa329bc5134b?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/703f62ead2e305b1dff62066065a0554?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/zRo29.png?s=64",
            "https://i.sstatic.net/h9ozf.jpg?s=64",
            "https://www.gravatar.com/avatar/efa2f2054b374781f79e21f68301286c?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/7db2313538a841b5c5137c14c705bc07?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/ivOwF.png?s=64",
            "https://www.gravatar.com/avatar/79e0ca4de69e4c4809cfa42f8dbabc9e?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://lh4.googleusercontent.com/-5abeXNxNYzQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdLTcLcvJ5eqERZ0-PAyC7hWmoU2Q/photo.jpg?sz=64",
            "https://stackoverflow.com/posts/3636914/ivc/d6ba?prg=0af8ee58-7b1e-4da8-85c1-2089cf0938fb"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-09-03T14:51:54",
        "summary": "",
        "meta_description": "Is there a way to see what would be pushed if I did a git push command?\n\nWhat I'm picturing is something like the \"Files Changed\" tab of Github's \"pull request\" feature. When I issue a pull request...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/3636914/how-can-i-see-what-i-am-about-to-push-with-git",
        "text": "For a list of files to be pushed, run:\n\ngit diff --stat --cached [remote/branch]\n\nexample:\n\ngit diff --stat --cached origin/master\n\nFor the code diff of the files to be pushed, run:\n\ngit diff [remote repo/branch]\n\nTo see full file paths of the files that will change, run:\n\ngit diff --numstat [remote repo/branch]\n\nIf you want to see these diffs in a GUI, you will need to configure git for that. See How do I view 'git diff' output with a visual diff program?.\n\nThere is always dry-run:\n\ngit push --dry-run\n\nIt will do everything except for the actually sending of the data.\n\nIf you want a more graphical view you have a bunch of options.\n\nTig and the gitk script that come with git both display the current branch of your local copy and the branch of the remote or origin.\n\nSo any commits you make that are after the origin are the commits that will be pushed.\n\nOpen gitk from shell while in the branch you want to push by typing gitk&, then to see the difference between what is on the remote and what you are about to push to the remote, select your local unpushed commit and right-click on the remote and choose \"Diff this -> selected\":\n\nUse git gui, there you can see a list of what changed in your actual commit. You can also use gitk wich provides an easy interface for reflogs. Just compare between remotes/... and master to see, what will be pushed. It provides an interface similar to your screenshot.\n\nBoth programs are included in git.\n\nTo see which files are changed and view the actual code changes compared to the master branch you could use:\n\ngit diff --stat --patch origin master\n\nNOTE: If you happen to use any of the Intellij IDEs then you can right-click your top-level project, select Git > Compare with branch > and pick the origin you want e.g. origin/master. In the file tree that will appear you can double-click the files to see a visual diff. Unlike the command-line option above you can edit your local versions from the diff window.\n\nIf you are using Mac OS X, I would recommend you get Tower, it's a wonderful program that has made dealing with Git a pleasure for me. I now longer have to remember terminal commands and it offers a great GUI to view, track and solve differences in files.\n\nAnd no, I'm not affiliated with them, I just use their software and really like it.\n\nhttp://www.git-tower.com/\n\nJust to add my two cents... I wanted to implement this when running jobs in a gitlab pipeline on a gitlab runner. The best way to do this was to use this script:\n\ngit diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA\n\nAlso in my case I wanted to filter files by extension, to achieve this I used:\n\ngit diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA '*.py'\n\nAfter that you can for example forward this list somewhere else, a linter perhaps ;)\n\nHope this will help someone."
    }
}