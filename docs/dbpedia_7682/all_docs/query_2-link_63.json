{
    "id": "dbpedia_7682_2",
    "rank": 63,
    "data": {
        "url": "https://www.actionrocket.co/blog/white-lines-in-outlook",
        "read_more_link": "",
        "language": "en",
        "title": "Fixing White Lines in Outlook",
        "top_image": "https://framerusercontent.com/images/MxidYGhiLRfkYyNgyKW3xtCsI4.png",
        "meta_img": "https://framerusercontent.com/images/MxidYGhiLRfkYyNgyKW3xtCsI4.png",
        "images": [
            "https://framerusercontent.com/images/6Crq1DjfGxRzFMtnq6ZAVqfeTz8.jpg?scale-down-to=1024 767w,https://framerusercontent.com/images/6Crq1DjfGxRzFMtnq6ZAVqfeTz8.jpg 800w",
            "https://framerusercontent.com/images/6Crq1DjfGxRzFMtnq6ZAVqfeTz8.jpg?scale-down-to=1024 767w,https://framerusercontent.com/images/6Crq1DjfGxRzFMtnq6ZAVqfeTz8.jpg 800w",
            "https://framerusercontent.com/images/hmWEmuOwbdmbbGcAABPmbBlKw.png",
            "https://framerusercontent.com/images/mvzGOJ3TbLPCU4ipBCyLd7a6Vo.png",
            "https://framerusercontent.com/images/w0l8nOuWgX7QlD1yYftXsXCFZM.png",
            "https://framerusercontent.com/images/6jraPgdmlUK0NJPfV0GlItdug4.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Fixing White Lines in Outlook",
        "meta_lang": "en",
        "meta_favicon": "https://framerusercontent.com/images/IRSrkhj4X4XlQzXuPz94S6FAQcs.png",
        "meta_site_name": "",
        "canonical_link": "https://www.actionrocket.co/blog/white-lines-in-outlook",
        "text": "Last updated Feb 2024 - Jay\n\nYouâve spent hours meticulously crafting your latest email marketing campaign. Your copy is singing, youâve optimised your beautiful imagery, youâve triple checked your links, grammar, and tracking. Itâs rendering perfectly across all email clients and devices, and all stakeholders have (finally) approved! You send one final test to yourself and suddenlyâ¦Outlook strikes again.\n\nOutlook has many known (often joked about) rendering quirks but, with some creative coding and design, most can be easily fixed or avoided. However, none are quite as infuriating or perplexing as the 1px horizontal line bug.\n\n(The faint 1px white line in Outlook 120dpi)\n\nWhat makes this bug so difficult to fix is itâs inconsistency and difficulty to replicate. On many occasions, weâve tested the same HTML and seen the bug on one test but not another.\n\nParcel Unpacked Talk 2024: Pesky White Lines in Outlook\n\nAccompanying slides\n\nWhy do lines appear?\n\nSo if itâs not a problem in your HTML, why do these lines appear?\n\nIn what many might describe as a backwards step, Outlook 2007 was the first Outlook to switch from Internet Explorer rendering engine to Microsoft Word 2007's. This meant that HTML and Cascading Style Sheets (CSS) items not handled by Word were no longer supported (and explains why pre-2007 versions of Outlook are much better at rendering HTML emails).\n\nAs an editor primarily for print media, Microsoft Word (and thus Outlook) uses points (pt) for font size instead of pixels (px).\n\nHINT: A pixel (px) at 96DPI (dots per inch) is equal to 0.2645835â¬ millimeters, 0.010416675â¬ inches, or 0.75 point. It is a measurement of how tall a font is in pixels which are visible on your computer screen. So, if a font is 12 pixels in height, that means it takes up 12 pixels on your screen from the top of the letter, to the bottom, which also includes the characters that have sections which are under the guide-line, such as a âpâ character.\n\nThe 'point' (pt) on the other hand is a fixed unit of length, commonly used to measure the height of a font, but technically capable of measuring any length. In applications, 1pt is equal to exactly 1/72th of an inch; in traditional print technically 72pt is 0.996264 inches, although I think you'll be forgiven for rounding it up!\n\nWhy is this an issue? While Microsoft knows about the bug (and so far have been silent on it), testing suggests the bug appears when Outlook converts pixels to points and ends up with a decimal number. As a pixel is 0.75 of a point (at 96DPI), our pixel values can end up uneven (e.g 18px X 0.75 = 13.5pt).\n\nThe 1px line comes from Outlook converting px to pt - and if that ends up odd - like 13.5pt, the remaining 0.5 can cause a tiny white line.\n\nAnother theory about the white line is that it is a UI bug and nothing to do with your HTML - I know itâs no consolation when your client keeps getting it, but the way the window is set up, the Ui font-size, dpi settings on Windows, even just using the text zoom provided in the interface, can all lead to the bug appearing.\n\nPrevention\n\nKeeping all numbers divisible by 4, if possible?\n\nMake sure font-size, line-height, padding, margin and any other coded pixel numbers are divisible by 4 and you could mitigate it being a problem.\n\nKeep tables/sections short and contained.\n\nTry splitting the email into manageable smaller sections, often called modules. The more pixels being added together, the higher chance of coming out with an odd point amount. This will also allow you to narrow down where a problem is, if a white line occurs.\n\nRemove borders on table and images\n\nBy doing this, you remove extra lines, enforced padding and other issues that come with these attributes.\n\ndisplay: block or vertical-align: middle\n\nUsing display: block or vertical-align: middle on img elements to stop extra margin being added.\n\nRetina images divisible by 4!\n\nWhen using 2x size images (retina) ensure they are divisible by 4, both the width and height.\n\nCommon causes\n\nZoomed in on Outlook Desktop - if you have set heights and not everything is using relative units, sometimes 1px gaps will appear at odd levels of zoom, I canât count how many times someone has said, âIt was caused by the recipient having 125% zoom.â\n\nBorders - If you are stacking images with links on top of one another, some versions of Outlook will add a border surrounding the image or element. By ensuring border=â0â or border-collapse: collapse is set or that no border is set on elements, you can save yourself a headache.\n\nImages display default - img elements are by default display:inline therefore behave like text and any gap after them in the code will be treated as a space. Often when adding an image in a container, the closing tag is on the line after, and this adds a 4px gap. This can be confused with the 1px white line bug or add more pixels into the mix. By setting all images to display:block, this gap will be removed.\n\nUsing Retina images? - If you are using retina images, or images twice the size to enable better rendering on retina(higher resolution) screens. If the image height cannot be divided by two and not have a decimal, the remainder could cause a 1px line. For example, an image 200px x 200px when displayed at half the size would work out to 100px x 100px - this should not cause an issue. But if your image is 205px x 205px - this when halved would become 102.5px - adding an odd number into the mix.\n\nTable background color - In some instances the white line occurs within another colored table. This occurs for the same reason, numbers just not adding up! But also due to <tr> and <td> tags having default heights. By placing the surrounding color in the cell closest to the next background color there is less chance of a 1px line being seen.\n\nFor example the code below produces a thick black table cell with an orange table nested inside:\n\nBut this code will produce a thinner black outer table cell:\n\nPadding/Margin - As mentioned above the bug is due to calculating sizes and all layout attributes are taken into account. Starting from the outside, moving in and try to see what could be causing an inconsistency - margin > border > padding > element\n\nSolutions\n\nOkay, so you have tried to prevent white lines, youâve kept tables small, tried to keep even numbers throughout, but something is still causing it.\n\nBelow are a whole bunch of solutions I have used or been told about since starting as an email developer. Starting with the easiest to implement, to more drastic solutions.\n\nIt is worth noting that while one of the below fixes will work on one HTML document, itâs not guaranteed to work on a different HTML doc. In some cases, you may need to apply a mixture of the techniques to solve the issue, although again there are no guarantees.\n\nAdding background color\n\nOne way to stop the white line being a problem is to choose to use white as a background color (not really a good solution, but can solve it!) But a bit more help may be the choice of using a suitable color on the html or body tag.\n\nThe color may be getting pulled from the html or body tag so setting them using\n\nhtml, body {background: #e1e0db;} could pull the correct color through into the 1px gap.\n\nAlternatively wrap all the content in a table and add the correct background color.\n\nAdd a <br>&nbsp;\n\nSometimes this is all that is needed to even out all the inconsistencies. If adding a <br> tag doesnât affect the overall design and layout for other devices, youâre done! To add a break for only Outlook Windows you can use mso conditional comments. For example the below will target all versions:\n\nHINT: for specific versions, check out howtotarget.email and type in Outlook!! Unfortunately after Outlook 2016 - they stopped naming versions in comments, so Outlook 2016/Windows 10 Mail/Outlook 2019 are all mso 16.\n\nMargin/Padding\n\nYep - now you have made sure all your numbers are even, find the closest padding/margin tag to the bottom of your table and add/subtract a pixel at a time to see if it will fix it.\n\nAdd margin-bottom\n\nIf the white line is at the bottom of a table or element, try adding margin-bottom: 1px; or wrap the content in a <div> with margin-bottom: 1px.\n\nAdd an empty row\n\nCreating an empty row with 0 font size and line height with a &nbsp; will create an extra element that could smooth out all the issues. For example:\n\nNest the offending <table>\n\nThis is a good go to for padding/margin issues in Outlook - by nesting the content inside another table it could compound the problem, or could sort it by adding extra pixels.\n\nForcing the font-size and line-height to zero\n\nIf your table contains mainly images, you can add font-size:0;line-height:0; to the inline style on the table. Ensure all text inside the table, and images are given an inline font-size and line-height as well (donât want alt text to disappear!).\n\nForcing font-size, line-height and border-collapse across the email.\n\nThis solution is drastic and can affect a lot of rendering so use with caution! This has been recommended to me a number of times, but Iâve as yet not needed to use it.\n\nYou could set the style in the head to affect all the table rows <tr> and table tags in your HTML but only for Outlook, the below example specifically for Outlooks after 2013:\n\nborder-spacing: 0;\n\nWanted to share everything! Some suggestions use border-spacing:0; in setting styles in the head or âresetingâ email client styles. The initial value (default) is 0, so shouldnât need to be set, but could be worth a try!\n\nCoding for this in a Design System\n\nWhen coding an Email Design System, itâs impossible to know what content could be used in it (e.g text length, image height, copy etc). Unless of course you create a very strict Email Design System with, for example, fixed image height or character limits. But hereâs some helpful tips that should suppress the issue as much as possible.\n\nUse numbers divisible by 4\n\nIf you are setting up a design system, use a base of round numbers, from font-sizes, to suggested image sizes.\n\nKeep modules self contained\n\nTry to keep each of your modules as itâs own self-contained table (no wrapping table).\n\nKeep modules short\n\nArbitrary heights have been thrown around all over slack, twitter and forums, but ultimately keep containing tables short and split everything up.\n\nDefine sizes\n\nWhere possible, define specific font sizes and image sizes and test these, a good combination of even numbers and well defined size rules will go a long way to ensuring the dreaded white line doesnât appear.\n\nUsing email editors/WYSIWYG/drag and drop builders?\n\nA trick that we found out recently, if you canât enter in the HTML &nbsp; there are keyboard shortcuts!\n\nMac: Option + Spacebar\n\nPC: Ctrl + Shift + Spacebar\n\nMJML\n\nIf you are using MJML - all of the fixes mentioned can be added in an <mj-text> element, which will be left as is.\n\nSummary\n\nA bug often discussed and debated, with a mysterious origin, no solution from Microsoft and a whole bunch of other solutions.\n\nAt some point Outlook 2019 will be retired (Rumoured to be 2026 !!) and Outlook are moving away from the Word rendering engine ð with a move to 'One Outlook' - which has already seen Outlook webmail, Outlook Mac and Outlook app start to share rendering engines.\n\nHopefully we have shed some light on the issue and what we are 99% sure causes them and a long list of possible code and design solutions.\n\nKeep your numbers divisible by 4, your tables short and your image height divisible by 4â¦\n\nResources across the web\n\nhttps://github.com/hteumeuleu/email-bugs/issues/99\n\nhttps://social.technet.microsoft.com/Forums/forefront/en-US/1f4f1e03-8ad5-4079-bc18-8fcaaa7b785d/outlook-2016-renders-horizontal-lines-seemingly-randomly-in-html-emails#50febf9a-6110-4e16-a351-1a062834f1e8\n\nhttps://www.emailonacid.com/blog/article/email-development/how-do-i-get-rid-of-the-lines-in-outlook-emails/\n\nhttps://litmus.com/community/discussions/5286-mysterious-white-line-in-outlook\n\nhttps://litmus.com/community/discussions/4990-outlook-2016-1px-horizontal-lines-showing-up-in-the-body\n\nhttps://github.com/TedGoas/Cerberus/issues/115\n\nThis Blog post was originally posted in 2021 - from both Jay Oram (Head of Dev - ActionRocket) and Ben Tweedy (EDS Developer Taxi for Email)"
    }
}