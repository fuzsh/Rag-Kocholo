{
    "id": "dbpedia_5983_3",
    "rank": 26,
    "data": {
        "url": "https://jellyfin.org/docs/general/server/media/movies/",
        "read_more_link": "",
        "language": "en",
        "title": "Jellyfin",
        "top_image": "https://jellyfin.org/images/social.png",
        "meta_img": "https://jellyfin.org/images/social.png",
        "images": [
            "https://jellyfin.org/images/logo.svg",
            "https://jellyfin.org/images/logo.svg",
            "https://jellyfin.org/images/logo.svg",
            "https://jellyfin.org/images/logo.svg",
            "https://img.shields.io/github/release/jellyfin/jellyfin.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Movies should usually be in the library root directory or in a subfolder for the individual films. The subfolders allow for organization of metadata and images. Adding the year at the end in parentheses will yield the best results when scraping metadata.",
        "meta_lang": "en",
        "meta_favicon": "/images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://jellyfin.org/docs/general/server/media/movies",
        "text": "Movies\n\nMovies should usually be in the library root directory or in a subfolder for the individual films. The subfolders allow for organization of metadata and images. Adding the year at the end in parentheses will yield the best results when scraping metadata.\n\nMultiple versions of a movie can be stored together and presented as a single title. Place each movie version in the same folder and give each version a name with the folder name as a prefix as seen below.\n\nTo distinguish between versions, each filename needs to have a space, hyphen, space, and then a label. Labels are not predetermined and can be made up by the user.\n\nAdditionally, labels can be placed between brackets with the same result as seen below.\n\nIf labels are not added to the end of filenames, as shown above, each file will be treated as a unique movie and not a version of the same movie.\n\nMovie versions are presented in an alphabetically sorted list. An exception applies to resolution names, which are sorted in descending order from highest to lowest resolution. A version name qualifies as a resolution name when ending with either a p or an i.\n\n1080p, 2160p, 360p, 480p, 720p → 2160p, 1080p, 720p, 480p, 360p\n\nExtended Cut, Cinematic Cut, Director's Cut → Cinematic Cut, Director's Cut, Extended Cut\n\nMovie extras can include deleted scenes, interviews, and other various things that you would want to include alongside your movie. Jellyfin supports several different methods of adding these files.\n\nOne of the cleanest ways of adding extras is to place them in subfolders within your movie folder.\n\nSupported folder types are:\n\nbehind the scenes\n\ndeleted scenes\n\ninterviews\n\nscenes\n\nsamples\n\nshorts\n\nfeaturettes\n\nclips\n\nother - Generic catch all for extras of an unknown type.\n\nextras - Generic catch all for extras of an unknown type.\n\ntrailers\n\nSome types of extras support a special option if you only have a single of that type. These options are to name the filename a specific word when stored in the same folder as the movie.\n\nSupported filenames are:\n\ntrailer\n\nsample\n\ntheme - Audio file of the theme song\n\nIf you would rather keep everything in a single folder, you can append special suffixes to the filename which Jellyfin picks up and uses to identify the file as an extra. Note that, with a few noted exceptions, these suffixes DO NOT contain any spaces.\n\n-trailer\n\n.trailer\n\n_trailer\n\ntrailer - This is a space followed by the word trailer\n\n-sample\n\n.sample\n\n_sample\n\nsample - This is a space followed by the word sample\n\n-scene\n\n-clip\n\n-interview\n\n-behindthescenes\n\n-deleted\n\n-deletedscene\n\n-featurette\n\n-short\n\n-other\n\n-extra\n\nThe parser can recognize 3D files automatically if the proper tags are added to the file name, or you can manually assign the 3D attribute to a file using Jellyfin's metadata editor to select the correct 3D format. The metadata editor is accessible from the context menu on each item.\n\nTo identify 3D content by filename, the first tag is 3D, which must be combined with one of the following tags to specify the specific 3D format:\n\nhsbs = half side by side\n\nfsbs = full side by side\n\nhtab = half top and bottom\n\nftab = full top and bottom\n\nmvc = Multiview Video Coding\n\nThe tags are case-insensitive and must be surrounded by either a space, hyphen -, dot . or underscore _.\n\nAdditionally, 3D filename tags can be combined with the grouping functionality documented above. All text before the hyphen must match the folder name.\n\nThe following files may also be embedded into video containers that support it (such as mkv) and will be read out by the Embedded Image Extractor if enabled as an Image Extractor on the library configuration page.\n\nfolder.ext\n\nposter.ext\n\ncover.ext\n\ndefault.ext\n\nmovie.ext\n\nExamples:\n\nMovie (2010)/poster.jpg\n\nbackdrop.ext\n\nfanart.ext\n\nbackground.ext\n\nart.ext\n\nextrafanart/*.ext\n\nExamples:\n\nMovie (2010)/fanart.jpg for the first backdrop image\n\nMovie (2010)/extrafanart/fanart1.jpg, Movie (2010)/extrafanart/fanart2.jpg, etc for additional backdrop images\n\nlogo.ext\n\nclearlogo.ext\n\nExample:\n\nMovie (2010)/logo.png"
    }
}