{
    "id": "yago_19690_1",
    "rank": 16,
    "data": {
        "url": "https://www.i-programmer.info/news/181-algorithms/8768-another-chunk-of-art-of-computer-programming.html",
        "read_more_link": "",
        "language": "en",
        "title": "Another Chunk of The Art of Computer Programming",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.i-programmer.info/images/stories/News/2012/JAN/A/knuth.jpg",
            "https://www.i-programmer.info/images/stories/ComputerCreators/Knuth/taocp4f1.jpg",
            "https://www.i-programmer.info/images/stories/ComputerCreators/Knuth/artofprogfac1.jpg",
            "https://www.i-programmer.info/images/stories/News/2011/APRIL/theartofcomputerprogramming.jpg",
            "https://www.i-programmer.info/images/banners/newsbig.jpg",
            "https://www.i-programmer.info/images/stories/InArticle/kotlin.jpg",
            "https://www.i-programmer.info/components/com_ninjarsssyndicator/assets/images/buttons/rss20.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Programming book reviews",
            "programming tutorials",
            "programming news",
            "developer news",
            "software programmer news",
            "C#",
            "Ruby",
            "Python",
            "C",
            "C++",
            "PHP",
            "Visual Basic",
            "Computer book reviews",
            "computer history",
            "programming history",
            "joomla",
            "theory",
            "spreadsheets",
            "developer book reviews",
            "programmer news",
            "developer news",
            "news"
        ],
        "tags": null,
        "authors": [
            "Sue Gee"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Programming book reviews, programming tutorials,programming news, C#, Ruby, Python,C, C++, PHP, Visual Basic, Computer book reviews, computer history, programming history, joomla, theory, spreadsheets and more.",
        "meta_lang": "en",
        "meta_favicon": "/templates/news/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Donald Knuth's The Art of Computer Programming is a legend among computer science books. For those who are looking forward to the next installment of this multi-part work, the 2nd revision of pre-fascicle 6a is now available for download.\n\nAt the beginning of the 1960s Donald Knuth, who at the time was an associate professor at Caltech accepted a commission to write a book on programming language compilers but quickly realized that first a book on the fundamental theory of computer programming was required.\n\nKnuth was able to convince Addison Wesley that the book was a good idea and so he embarked on it, and by 1965 he had completed a draft of twelve chapters consisting of 3000 hand written pages, which was initially planned to be a single book.\n\nWhen the first chapter was sent to the publisher it was estimated that the finished book would be 2000 printed pages, which by the standards of the time was unthinkable. Having often criticized books of approaching 1000 pages as being unreadable because of their weight and tendency to fall apart it is easy to sympathize with Addison Wesley's decision to convert it into a multi-part work.\n\nSo it was that the first volume of The Art of Computer Programming, subtitled Fundamental Algorithms and published in 1968, consisted of just two chapters.\n\nTwo further volumes of what was expected to be a seven-volume set and given the abbreviation TAOCP, appeared in 1969 and 1973.\n\nVolume 2 – Seminumerical Algorithms (Chapters 3 and 4)\n\nVolume 3 – Sorting and Searching (Chapters 5 and 6).\n\nBy this time Knuth had joined Stanford University, to which he is still affiliated., and these first three volumes created, or at least consolidated, the subject of computer science with Knuth being described as the Euclid of computer science. His work has been endorsed by many with Bill Gates being quoted on the Pearson website as saying:\n\nIf you think you’re a really good programmer… read [Knuth’s] Art of Computer Programming… You should definitely send me a résumé if you can read the whole thing.\n\nAfter the publication of Volumes 1 -3 there was a long gap before Volume 4 began to appear. One reason for this being that Knuth became dissatisfied with the look of his books and decided to do something about it.\n\nThe few months that he intended to spend on the project turned into nine years during which time he invented TeX, a language for typography and Metafont, a font design system. All of the work he did has been placed in the public domain and Knuth's five-volume Computers & Typesetting, published in 1986 is the explanation of the theory, a user manual and a source of examples.\n\nThe other was that the topic of the original Chapter 7, \"combinatorial searching\" had expanded so much in the intervening period. This and Chapter 8 on recursion had been intened to be combined into a single volume but the plan changed.\n\nA new publishing strategy was adopted when Knuth resumed work on his magnum opus whereby short volumes, known as \"fascicles\" would be published. This led to the appearance in 2005 to 2009 of four slim books which were then combined into Volume 4A on the topic of combinatorial algorithms in 2011, followed shortly by a boxed set of Volumes 1-4A.\n\nLast year Knuth agreed to letting Pearson create electronic versions of Volumes 1, 2, 3 and 4A and also of Volume 1, Fascicle 1, MMIX -- A RISC Computer for the New Millennium, which is a volume devoted to the 64-bit RISC computer devised by Knuth to illustrate machine-level aspects of programming.\n\nIn 1999 explained the importance of MMIX to TAOCP:\n\nIt replaces MIX, the 1960s-style machine that formerly played such a role... I strove to design MMIX so that its machine language would be simple, elegant, and easy to learn. At the same time I was careful to include all of the complexities needed to achieve high performance in practice, so that MMIX could in principle be built and even perhaps be competitive with some of the fastest general-purpose computers in the marketplace.\n\nMMIX is so important that it now has another book devoted to it: MMIX Supplement, The: Supplement to The Art of Computer Programming Volumes 1, 2, 3 by Donald E. Knuth.\n\nThis has been authored by professor of mathematics and computer science at Munich University of Applied Sciences, Dr. Martin Ruckert, who maintains the MMIX home page.\n\n“I am thrilled to see the present book by Martin Ruckert: It is jam-packed with goodies from which an extraordinary amount can be learned. Martin has not merely transcribed my early programs for MIX and recast them in a modern idiom. He has penetrated to their essence and rendered them anew with elegance and good taste. His carefully checked code represents a significant contribution to the art of pedagogy as well as to the art of programming.”\n\nCurrently Knuth is working on Volume 4B and it is the middle third, fascicle 6a, that is now online for beta testing;\n\nKnuth says on his Recent News page:\n\n[this] will be a major introduction to the topic of Boolean Satisfiability, emphasizing its many applications, together with a variety of algorithms to solve SAT problems with greater and greater speed. I began studying this topic in autumn 2011, and found it to be amazingly interesting. Thus I've had great fun telling this story, and connecting SAT with many other aspects of computer science and math.\n\nIt's not a short story; indeed, this section has turned out to be the largest by far of any in The Art of Computer Programming. But the material is rich, beautiful, instructive, and important, so I'm pleased to have had the opportunity to pull it together from many sources.\n\nAddison Wesley plans to publish this fascicle in paperback before the end of 2015 and Knuth is asking for feedback that can be taken into account in the final stages of preparation before September 15. A note on his site says:\n\nI worked particularly hard while preparing some of those exercises, attempting to improve on expositions that I found in the literature; and in several noteworthy cases, nobody has yet pointed out any errors. It would be nice to believe that I actually got the details right in my first attempt. But that seems unlikely, because I had hundreds of chances to make mistakes. So I fear that the most probable hypothesis is that nobody has been sufficiently motivated to check these things out as yet.\n\nHe goes on to to ask for people to contact him to report that they have failed to find any errors in a long list of examples in prefascicle 6a.\n\nSo if you want to make a small contribution to this legendary work, visit Knuth's Recent News page download the 318-page pdf and check out some of its exercises.\n\nGoogle Releases Purrfect Code Developer Game\n\nGoogle has released a game for developers that is designed to challenge programmers to solve puzzles by writing code. This may sound like the normal work of most of us, but Purrfect Code is a new box- [ ... ]\n\nOverture Maps Foundation Releases Open Maps Datasets\n\nThe Overture Maps Foundation, a collaboration of companies working on interoperable open map services and products, has announced the General Availability of several of its global open maps datas [ ... ]\n\nSIGGRAPH 2024 - Some Of What You Are Missing\n\nGitHub Reveals Regional Variation In AI Usage\n\nGoogle's Machine Learning Engineer Learning Path\n\nDataChain - A Tool For AI Workflows\n\nPerl and Raku Conference 2024 Sessions Now Available Online\n\nDeepMind Plays Table Tennis\n\nPico 2 Faster With More Memory And RISCier\n\nMariaDB Introduces Vector Search\n\nNIST Announces Post-Quantum Cryptographic Algorithms\n\nGoogle Launches Spanner Graph\n\nChainguard Images Now Come With JCK Certified Java\n\nGoogle Drops Plans To Drop Cookies\n\nLinux At All-Time High, But Still Tiny On Desktop\n\nComments\n\nor email your comment to: comments@i-programmer.info\n\n<ASIN:0321751043>"
    }
}