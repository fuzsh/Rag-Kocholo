{
    "id": "dbpedia_8831_2",
    "rank": 44,
    "data": {
        "url": "https://outfox.wiki/dev/mode-support/txt-support",
        "read_more_link": "",
        "language": "en",
        "title": "TXT Compatibility",
        "top_image": "https://outfox.wiki/_assets/favicons/android-chrome-192x192.png",
        "meta_img": "https://outfox.wiki/_assets/favicons/android-chrome-192x192.png",
        "images": [
            "https://outfox.wiki/dev/mode-support/ultrastar.png",
            "https://outfox.wiki/dev/mode-support/pitchnotation.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/_assets/favicons/apple-touch-icon.png",
        "meta_site_name": "Project Outfox Wiki",
        "canonical_link": "https://wiki.projectoutfox.com/en/dev/mode-support/txt-support",
        "text": "Project OutFox is working on support on the parser for the Karaoke TXT (UltraStar) chart format, which is the standard format used in conjunction with the karaoke game types. The following page contains details on the Karaoke file parsing options that Project OutFox will support. This is a living document - it will be incomplete as Squirrel finds time to update and confirm/clarify items that are missing or unknown.\n\n¶ TXT Notedata support as of Alpha 0.5.0 - TBC\n\n¶ Headers\n\nThe mode uses a selection of headers to set up the song metadata, which appear to be based off of the old BMS style loading mechanisms. We'll list the known ones and whether or not Project OutFox supports them.\n\nUltraStar TXT files only follow the Header metadata of the old BMS system; it uses the #COMMAND:KEY structure. Something important to note, There are no spaces after the : in the headers. If you are using a known editor, this won't be a problem. If converting from other karaoke formats, ensure these headers are set up correctly, or most of the simulators will not read your file!\n\nAn Example Header Section\n\n#TITLE:Into My Dream #ARTIST:Lagoona #MP3:Into My Dream.ogg #CREATOR:-YOSEFU- in a Dream #LANGUAGE:English #COVER:Into My Dream-bn.mp4 #BACKGROUND: #VIDEO:Into My Dream-bga.mp4 #BPM:140.000 #GAP:121 #EDITION:OutFox Serenity Volume 2 #GENRE:Trance #UPDATED:20-oct-2022 #YEAR:2022 #COMMENT:https://projectoutfox.com/\n\n¶ NOTE: The chart MUST have the following headers to be considered a valid karaoke file:\n\n#TITLE\n\n#ARTIST\n\n#MP3\n\n#GAP (Offset) (Not all UltraStar versions need this.)\n\n#BPM\n\n¶ Common HEADER commands\n\n¶ #TITLE:title [string]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#TITLE:Into My Dream\n\nThe title command sets the SongTitle and this will be displayed on the song wheel to be selected, as well on the screen game-play and evaluation screen. It will also be recorded in high scores and on your profile etc.\n\n¶ #ARTIST:artist [string]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#ARTIST:Lagoona\n\nThe artist command sets the SongArtist and this is usually displayed on the song wheel when selected and on the evaluation screen. The artist information is usually recorded in high scores and on your profile.\n\n¶ #GAP:gap [float]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#GAP:121\n\nThis setting allows the chart to specify the offset to use at the beginning of a song. This has the effect of shifting all the lyrics based on the value entered here.\n\nThe value is in milliseconds, and a positive value will delay the lyrics, a negative value start them sooner. This value is used for songs with instrumentals or lead-ins at the start.\n\nIf the value is not set to 0, then a formula must be used to set the actual time in seconds for the text to be displayed. Using an example line from the lyric (Notedata), we can work it out:\n\n: 21 2 2 We've ^^ Second Column\n\n(We use the FIRST timestamp and the second column value for this calculation)\n\nThe formula to use is:\n\nDisplay Time = Time stamp of first lyric / BPM / 4 * 60 seconds + GAP\n\nso replacing this with numbers:\n\n21 / 140 / 4 * 60 + 0.121 = 2.371 seconds\n\nThis means the lyrics will be displayed after 2.371 seconds of the song starting.\n\nRelative files use starttime=GAP but Project OutFox does not support these files.\n\n¶ #BPM:bpm [0.0-1400.00] / [0-1400]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#BPM:140.000 #BPM:140\n\nThis setting allows the chart to specify the beginning (or starting) Beats per minute (BPM) of a song. This value will also be shown in the music wheel. This value used to require a whole number. Project OutFox allows for floats here - you are limited to 6 decimal places - so 143.000290 as an example.\n\nThis value sets the speed at which the lyrics will display, a high bpm means they will show quickly, and a lower bpm will be slower. Chart creators can use 'double' or 'half' bpm to adjust the lyric speed to help the singer, or to add a slightly different level of difficulty.\n\nIn UltraStar there is sometimes strange behaviour when using #BPM values of under 120, with the notes moving faster than they should. Most chart creators use a 'double time' BPM to work around this. Bear this in mind! We do not have this issue in OutFox, and not all versions of UltraStar have it, so check before you release.\n\nUsing floating point values in #BPM can cause issues with tools and features that work with the txt files, as they can sometimes misinterpret what the . or , can mean. If possible if you wish to maintain full UltraStar compatibility, use whole number #BPM values for major support.\n\n¶ #MP3:songfile [string]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#MP3:Into My Dream.ogg\n\nThe #MP3 tag is a bit misleading here; it actually should just be #SONG as it can load several different formats.\n\nProject OutFox is not limited in wave file bit depth, and supports the following file formats:\n\nwav, ogg, .mp3, .m4a, .FLAC, and .opus. If you plan to make your Karaoke file support other simulators, remember not all of them support these, or have limits on bit depth and sample rates!\n\nFor UltraStar, if you use audio formats other than mp3, be prepared that those files won't work on all the different systems, and remember any audio format where FFMPEG doesn't need slow indexing for predictive frame access is supported.\n\n¶ #GENRE:genre [string]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#GENRE:Trance\n\nThis command sets the genre or type of music that the chart is going to play. It could be used by the simulator for sorting or grouping charts, or to allow for just more information to be displayed on the song select screen.\n\n¶ #EDITION:edition [string]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#EDITION:OutFox Serenity Volume 2\n\nThis command sets the edition of the song, similar to ORIGIN in SSC files. UltraStar creators often put the game, or TV show, anime etc that the song was originally featured in.\n\n¶ #CREATOR:creator [string]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#CREATOR:-YOSEFU- in a Dream\n\nThe CREATOR command simply allows the author that timed the chart to add their credit so it will be displayed in the simulator.\n\n¶ #LANGUAGE:language [string]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#LANGUAGE:English\n\nThis command is used to give information on the language of a karaoke chart when a user has international song packs, or plays with different languages installed. Project OutFox at the moment parses this data, but the theme will need to be updated to show this information on the music wheel so it is available to all users.\n\n¶ #COVER:cover [string]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#COVER:Into My Dream-bn.mp4\n\nThis command is used to set an image for the song on the music selection screen of the simulator - when the song is scrolled to and is highlighted.\n\nThis can be most image formats, or a video, but remember the limitations, video covers may not work on other karaoke simulations.\n\nThese are usually square in Karaoke, and we will use a theme which uses square covers to ensure compatibility with already created content.\n\nIn Project OutFox we call these files banners.\n\n¶ #VIDEO:videofile [string]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#VIDEO:Into My Dream-bga.mp4\n\nThis command is used to set a video to be played when the song starts on the game-play. It is similar to #BACKGROUND on SSC files. Remember, OutFox supports BGCHANGES which can be used to add effects and flair to your files, but this would need to be done within an SSC in the editor, when we have added support for karaoke in the future.\n\nThis can be most video formats, but remember the limitations, videos may not work on other karaoke simulations!\n\nFor UltraStar, if you use files with video, be prepared that those files won't work on all the different systems, and remember any video format where FFMPEG doesn't need slow indexing for predictive frame access is supported. It is common for chart creators to use one file for their video which contains the audio for the song within, and this is placed within both the #MP3 and #VIDEO tags. We will need to add support for these charts in Project OutFox.\n\n¶ #VIDEOGAP:videogap [float]\n\nStatus: ❌ Unsupported TBC\n\nUsage Example:\n\n#VIDEOGAP:0.635\n\nThis setting allows the chart to specify the offset to use for when the video should be started at the beginning of a song. This has the effect of shifting the video playback time.\n\nThe value is in seconds, and a positive value will delay the video, a negative value start the video sooner. This value is used for songs which may have a slightly offset video.\n\nIf the value is not set to 0, then a formula must be used to set the actual time in seconds for the text to be displayed. Using an example line from the lyric (Notedata), we can work it out:\n\n: 21 2 2 We've ^^ Second Column\n\n(We use the FIRST timestamp and the second column value for this calculation)\n\nThe formula to use is:\n\nDisplay Time = Time stamp of first lyric / BPM / 4 * 60 seconds + VIDEOGAP\n\nso replacing this with numbers:\n\n21 / 140 / 4 * 60 + 0.635 = 2.885 seconds\n\nThis means the video will start after 2.885 seconds of the song starting.\n\nRelative files use starttime=VIDEOGAP but Project OutFox does not support these files.\n\nIt is often that files do not contain the VIDEOGAP command, when this happens and a video is specified, it will default to start when the song starts, rather than the lyrics.\n\n¶ #YEAR:year [int]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#YEAR:2022\n\nThis tag simply sets the year the song was created, and is used as a sort option by other karaoke simulators.\n\n¶ #PREVIEWSTART:previewstart [float]\n\nStatus: ✅ Supported\n\nUsage Example:\n\n#PREVIEWSTART:17.488\n\nThis value tells the game the time in seconds to play the preview section of the song in the music wheel.\n\nUnlike SM/SSC there is no #SAMPLELENGTH in this format that tells the game to loop or reset the point of playback. It will fall back to the default 15 second length when parsing. Most simulators just play from the middle of the song until the end.\n\nAs this variable uses the seconds value, it is usable as per the #SAMPLESTART SM/SSC variable.\n\n¶ #START:start [float]\n\nStatus: ⌛ TBC\n\nUsage Example:\n\n#START:27.759\n\nThis value tells the game the time in seconds when to begin the song playback. This is usually used in chart creation, as it can skip a long intro to jump straight to the lyrics/notes, or to test a specific part of the song.\n\nThese are used extensively on 'multi-song' music files that have 'chapters' (One file with different songs inside). These can also be 'parts' of the song, like chorus or verses.\n\nThere will usually be one txt file for the complete file, with extra txt files for the 'chapters'.\n\nThe main advantage for using this command is not having to create a dozen audio files for the same song, plus merging corrections from the main txt files to the chapter txt files is easier in this method.\n\n¶ #END:end [float]\n\nStatus: ⌛ TBC\n\nUsage Example:\n\n#END:187488\n\nThis value tells the game the time in milliseconds when to end the song playback. This is usually used in chart creation, as it can stop playing at a specific part of the song. We haven't decided yet on this one, as many of the charts we have found do not use these commands, as we have the end data in the 'NoteData' section below.\n\n¶ #DUETSINGERP1:duetsingerp1 [string]\n\n¶ #DUETSINGERP2:duetsingerp2 [string]\n\nStatus: ⌛ TBC\n\nUsage Example:\n\n#DUETSINGERP1:Shrek #DUETSINGERP2:Donkey\n\nThese two values tell the game to change the name in duet mode, so instead of just saying player1 and player2 it changes the name listed in that command. Used in charts for a bit of fun. Some UltraStar versions do not support this and will crash, just be warned!\n\n¶ #VOCALS:vocalsfile [string]\n\nStatus: ⌛ TBC\n\nUsage Example:\n\n#VOCALS:song.ogg\n\nThis command tells the game where vocals version of the song is for the selected chart. I haven't been able to find many uses for this, as many songs seem to have song.ogg in the #MP3 tag, and leave the instrumental (Karaoke) version not used. I guess this is to allow folks to have the vocals in the background when someone is learning the song, or provides an option in game to set either the 'song.ogg' or 'instrumental.ogg' versions.\n\nProject OutFox will likely have an option to select which one to use in time at the music wheel, if these are found, but if you know any other information about the #VOCALS tag, please let Squirrel know via our Discord server!\n\nIn earlier versions of UltraStar on older files, #MP3 would have the instrumental version, and #VOCALS would contain an a cappella track with just the vocals, and the game would mix the two together when selected to play the full track.\n\n¶ #RESOLUTION:resolution [1-16]\n\nStatus: ❌ Not Supported\n\nUsage Example:\n\n#RESOLUTION:4\n\nThis command seems to be an UltraStar editor only value that affects the lines drawn on beats, with every #RESOLUTION beat being drawn black. It defaults to a value of 4, and should not be set to 0 as it can make the game unstable.\n\nWe have no plans to support this in Project OutFox, as our editor is different.\n\n¶ #RELATIVE:relative [0/1]\n\nStatus: ❌ Not Supported\n\nUsage Example:\n\n#RELATIVE:0\n\nThis value defaults to 0 if it is not added to the header part of the chart. Project OutFox does not support this value, as it was used some time ago as an alternative method of charting. What this command does is it makes each line set relative to itself. The timestamp (Column 2) is reset to 0 for each line. The engine would need to keep a 'running tally' of the beats/time separately in this mode. We have spoken to a few people in regards to supporting this value, but most say it is deprecated/legacy and it is not used often enough to warrant adding the code for it.\n\nIf the demand is there, we can look at supporting it, but for the first instance, we will not.\n\nNote data in this mode is also set up differently as it resets on each line as so:\n\n: 0 2 2 Some : 3 3 2 body : 7 4 2 once : 12 3 4 told * 16 9 6 me - 36 : 0 3 4 the <-- Resets here to 0 : 4 6 2 world : 12 7 4 is : 20 7 6 gon : 23 4 6 na\n\nThe timestamp resets to 0 on each line, rather than counting from the beginning of the song. These files are considered legacy in the community, and will be ignored by Project OutFox when parsing. You will see a warning in the log about the file being unsupported, but the game will not crash like some other simulators.\n\n¶ NoteData\n\nExample NoteData:\n\n: 0 2 2 Some : 3 3 2 body : 7 4 2 once : 12 3 4 told * 16 9 6 me - 36 : 40 3 4 the : 44 6 2 world : 52 7 4 is : 60 7 6 gon : 63 4 6 na E\n\n¶ Lyric / Note Data Column Commands\n\nThe note data is arranged in five columns for lyrics, but there are exceptions. When a new line is required, there are only two or three columns, and to set a player or end a song, there is only one. We will go through these below.\n\nFor a lyric note it is typically arranged as so:\n\n¶ Line Break Column Commands\n\nA Line break is arranged as so:\n\nNote it is optional to include the beat end, as for the line break, the first number sets when the previous line disappears and the second one when included, sets when the next line appears. This is useful for controlling lyric lines on fast songs, or when you want to control slower lyrics that may disappear too soon, or too slowly.\n\nLine breaks with two numbers usually are used when there are songs which have a long instrumental or solo break where there are no lyrics for a time. This prevents the game placing up the next line of words too early, and allows the player to enjoy the solo/instrumental.\n\n¶ Single Column Note Commands\n\nThese types are for player set lyrics in duet mode. (See below)\n\nThis command sets the ending of the track, placed at the very end of the file. Do not place anything after this, as your file will not be considered clean.\n\n¶ Column One\n\n: 0 2 2 Some : 3 3 2 body : 7 4 2 once ^ Column One\n\nThe first column is usually a single character, except for duet mode (see below). They tell the game how to display the note, or if the note is freestyle, a bonus, or a line break. Every chart also has an 'ending note' which is placed at the end of the chart when the last lyric note is finished.\n\nThe table below lists all the note types that UltraStar commonly uses, and a definition of what those notes do in game. Do ensure you follow the correct layouts and setup for your chart, as the simulator will ignore it if there are any errors!\n\n¶ Karaoke \"Note\" Types\n\nThe file uses line beginnings to set the 'note type' (lyric type) that the player will see on the screen. UltraStar supports a range of these, and they will be detailed below.\n\n# = Commands in the note data section are ignored. Some versions of UltraStar will crash if this character is found, and your chart will not be considered a 'clean' txt with any of these characters at the beginning of a line.\n\n: = Regular Note. This is one of the most common things you will see in the chart, as it sets most of the song lyrics to be displayed on the screen. These lyrics can be assigned to either Player 1 or Player 2 if that note type is seen before a block, (see P1/P2 below).\n\n* = Golden Note. This note often has a sparkly or glow/shine affect around it in game to show the player it is a special note. The notes hit are set for 'pitch' accuracy and can account for up to 10% of the players' final score if hit correctly. It is worthwhile tuning those vocal chords (or humming chords)!\n\nF = Freestyle Note. This note (or syllable) is usually displayed without a 'pitch' value in game. This allows for songs which have 'spoken word' or normal 'dialogue' pieces, where the singer only needs to speak. These notes sometimes show up when a 'clap' is required in the song as well on some rarer charts.\n\nR = Rap Note. This note (or syllable) is usually displayed without a 'pitch' value in game. This allows for songs which have rapping or rhyming style sections, which need to finish on time (OutFox special mode), or the player can be punished. Most simulators do not follow the 'finish on time' rules, and just require the singer to reach a specific input loudness when rapping on per beat analysis.\n\nG = Rap Golden Note. This note (syllable) is displayed with a sparkly or glow/shine affect around it in game to show the player it is a special note. It has the affects of the Rap Note above.\n\n- = Line Break 'Note'. See 'Line Break Column Commands' above for more details.\n\nP1 = Player 1 note. Set Lyrics to Player 1 (Duet only). This allows for songs that require two singers to have distinct colours that signifies player 1 should be singing. This note sets the chart to a duet (see below), which means it is more like a 'doubles' or 'couples' song in the Project OutFox engine.\n\nP2 = Player 2 note. Set Lyrics to Player 2 (Duet only). This allows for songs that require two singers to have distinct colours that signifies player 2 should be singing. This note sets the chart to a duet (see below), which means it is more like a 'doubles' or 'couples' song in the Project OutFox engine.\n\nP3 = Both Players note. Set Lyrics to BOTH players (Legacy Duet charts only). This allows for songs that require two singers to have a distinct colour that signifies both player 1 and player 2 should be singing. The use of P3 is not common, and we want to use P3 as a third player in a future Harmony option for karaoke mode.\n\nE = End Chart note. This character is placed as the end of the chart to set the ending time of the song, and on some versions of UltraStar can be overwritten by #END, though this is uncommonly used by modern charters these days.\n\n¶ OutFox Specific Player Blocks\n\nP3 = Player 3 note. Set Lyrics to Player 3 (Harmony only). This allows for songs that require three singers to have distinct colours that signifies player 3 should be singing. This note sets the chart to a harmony chart, and is only supported in Project OutFox.\n\nP4 = Player 4 note. Set Lyrics to Player 4 (Harmony only). This allows for songs that require four singers to have distinct colours that signifies player 4 should be singing. This note sets the chart to a harmony chart, and is only supported in Project OutFox.\n\nP5 = Player 5 note. Set Lyrics to Player 5 (Harmony only). This allows for songs that require five singers to have distinct colours that signifies player 5 should be singing. This note sets the chart to a harmony chart, and is only supported in Project OutFox.\n\n¶ Column Two\n\n: 0 2 2 Some : 3 3 2 body : 7 4 2 once ^ Column Two\n\nThis column value is in beats and sets the time in the chart when the lyric or syllable appears. This is dependent on BPM, with higher BPM songs showing the note sooner, and lower BPM will take longer to show. Although Project OutFox supports BPM changes and gimmicks, the format itself provides no options for this at all.\n\n¶ Column Three\n\n: 0 2 2 Some : 3 3 2 body : 7 4 2 once ^ Column Three\n\nThis column value is in beats and specifies the length of time the lyric or syllable lasts. In the example above, the syllable of 'Some' lasts for 2 beats, with 'body' coming in on beat 3. This is important to remember as technically you cannot sing two notes at the same time, and it will be impossible to score this.\n\nMany simulators will either throw an error or crash on badly formed charts if syllables overlap, for example if 'Some' finished on beat 2, but 'body' started on beat 1, this would be considered an overlap. However, 'body' could start on beat 2 as 'Some' would be considered complete, this is accepted. Just ensure that you never overlap your syllables!\n\n¶ Column Four\n\n: 0 2 2 Some : 3 3 2 body : 7 4 2 once ^ Column Four\n\nThis column is responsible for the musical pitch of the syllable or lyric that the singer is expected to match or reproduce as the words are displayed on the screen.\n\nMost UltraStar clients are limited to displaying a single octave on the screen that the singer can see.\n\nWithout going into too much musical theory, that is usually C -> C. (If you remember the \"doe ray me far so la tea doe\" song from the Sound of Music These were the main notes of the octave.)\n\nAt this moment in time we haven't confirmed how our pitch grid will be constructed, as we do not have the limitations of UltraStar or it's derivatives. If you have any thoughts on this, do pop into the discord and give us them!\n\nThe values used in the UltraStar karaoke files start at 0. I have done a lot of research around the internet, and some people claim that this begins at C3, C1, C0, even C5 in one case!\n\nBut balancing a midi file of several example tracks and then cross referencing those notes with the syllables / lyric notes provided in the karaoke file shows that the 0 almost always runs on middle C or C4. We have learned that the game shifts the notes by 60 (Middle C MIDI Note) and bases the chart parsing of C0 = 0.\n\nThe following picture shows a standard piano 88 key layout. I have put this here to show how the format works out pitch and where to put the syllable layout on the screen.\n\n¶ A common layout showing C4 (Middle C)\n\nLet's take a few lines from an UltraStar file:\n\n: 0 5 4 Hey, : 9 6 4 hey, : 18 4 4 eve : 23 3 4 ry : 28 4 6 bo : 33 4 8 dy!\n\nLets take the note values in column four:\n\n4 4 4 4 6 8.\n\nUsing the piano layout above, count right the number of piano keys to match the numbers, remembering to count the sharp # black keys as well!\n\nFour notes on from C4 is E4, six notes on from C4 is F4#, and eight notes on from C4 is G4#. So replacing the numbered notes in musical notation:\n\nE E E E F4# G4#. These are the values the game uses for pitch matching, and to display on the pitch grid on screen.\n\nThis notation also works for negative numbers, you simply count backwards from C4 if the notes required are a lower pitch. Some songs do indeed have the whole base notes below 0, but this is often common with some genres. Be warned not every UltraStar version supports this!\n\nMost songs that have been charted tend to be within a 6 to 12 note range, so the pitch grids are not massive, and also to prevent the issue on some UltraStar clients where a note from a higher Octave, for example if the chart starts at G4 and there is a note for G5 this higher note would be drawn in the same place as the lower note, as the note would be considered an 'overflow', and would just be in the normal G4 row on screen.\n\nWe will add support to shift key for singers in Project OutFox to make it easier for players to sing in their natural range.\n\n¶ Column Five\n\n: 0 2 2 Some : 3 3 2 body : 7 4 2 once ^ Column Five\n\nAs I am sure you have realised by this point, there has been a glaring error in column 5 on this little example song code snippet! body has two syllables and should be on two different lines!\n\nAs you can probably tell by now, this column represents the syllable or 'lyrics' that the player will sing in time to the music.\n\nEach line in the chart specifies a syllable, it's duration, the pitch, and the time (in beats) it is meant to be sung. This format does not support 'pitch bending' during a syllable, to 'support' this, extra lines are often added which have simply a ~ for the syllable, to show that this is a 'long' syllable to the singer. If we were to extend 'Some' above, with a different pitch, the chart would be:\n\n: 0 2 2 Some : 2 2 4 ~ : 4 3 2 body\n\nThe game would show Some~ which is used to tell the singer that there is a pitch change, and to sing it as a different pitch.\n\nAnother important thing to realise is that the words in column 5 will automatically be joined together. If you forget where your spaces are, you will end up having a sentence with no spaces!\n\nLet's take this chart we used for the column four example:\n\n: 0 5 4 Hey, : 9 6 4 hey, : 18 4 4 eve : 23 3 4 ry : 28 4 6 bo : 33 4 8 dy!\n\nYou can see that there are spaces added at the beginning of the lines for \" hey,\" this is by design; you must pick your space arrangement when making your charts, some editors use 'space first', and some use 'space last'. 'Space last' places a space after the syllable, so would not begin with one. In the example above, the game would show \"Hey, hey, everybody!\" in the lyric section.\n\nIf you are creating charts yourself and tend to leave spaces at the end of lines, or use windows a lot, do take care to see where these spaces are in the file. We will write the parser to support both spacing modes, as is commonly done by UltraStar clients.\n\n¶ Duet Mode\n\nThis mode is available for songs which have two singers handling different parts of the song, and often singing the chorus together.\n\nEach player sings their words, and are scored as normal on the words they sing only.\n\nIn txt files, these are split up with the use of P1 and P2 in the note section of the file, with many charts repeating words which are sung by both players, but there has been a few charts that use P3 for this.\n\nIn Project OutFox we're planning to add a 'Harmony' Mode which could support up to five or six singers at once, and this would require the availability of P3 to P6, so it is likely where we will go on this, as P3 usage does not seem common in almost all charts."
    }
}