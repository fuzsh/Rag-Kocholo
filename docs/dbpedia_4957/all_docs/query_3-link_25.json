{
    "id": "dbpedia_4957_3",
    "rank": 25,
    "data": {
        "url": "https://pages.nist.gov/800-63-3/sp800-63b.html",
        "read_more_link": "",
        "language": "en",
        "title": "NIST Special Publication 800-63B",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://pages.nist.gov/800-63-3/sp800-63-3/media/div-1.png",
            "https://pages.nist.gov/800-63-3/sp800-63-3/media/div-2.png",
            "https://pages.nist.gov/800-63-3/sp800-63-3/media/csd.png",
            "https://pages.nist.gov/800-63-3/sp800-63-3/media/nist_logo.png",
            "https://pages.nist.gov/800-63-3/sp800-63-3/media/commerce_logo.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/Memorized-secret.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/Look-up-secrets.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/Out-of-band-OOB.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/Single-factor-otp-device.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/Multi-factor-otp-device.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/Single-factor-software-crypto.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/Single-factor-crypto.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/Multi-factor-software-crypto.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/Multi-factor-crypto-device.png",
            "https://pages.nist.gov/800-63-3/sp800-63b/media/use.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "NIST Special Publication 800-63B",
        "meta_lang": "",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://pages.nist.gov/sp800-63b.html",
        "text": "Mon, 16 Oct 2023 16:20:39 -0400\n\nAuthority\n\nThis publication has been developed by NIST in accordance with its statutory responsibilities under the Federal Information Security Modernization Act (FISMA) of 2014, 44 U.S.C. Â§ 3551 et seq., Public Law (P.L.) 113-283. NIST is responsible for developing information security standards and guidelines, including minimum requirements for federal systems, but such standards and guidelines shall not apply to national security systems without the express approval of appropriate federal officials exercising policy authority over such systems. This guideline is consistent with the requirements of the Office of Management and Budget (OMB) Circular A-130.\n\nNothing in this publication should be taken to contradict the standards and guidelines made mandatory and binding on federal agencies by the Secretary of Commerce under statutory authority. Nor should these guidelines be interpreted as altering or superseding the existing authorities of the Secretary of Commerce, Director of the OMB, or any other federal official. This publication may be used by nongovernmental organizations on a voluntary basis and is not subject to copyright in the United States. Attribution would, however, be appreciated by NIST.\n\nReports on Computer Systems Technology\n\nThe Information Technology Laboratory (ITL) at the National Institute of Standards and Technology (NIST) promotes the U.S. economy and public welfare by providing technical leadership for the Nationâs measurement and standards infrastructure. ITL develops tests, test methods, reference data, proof of concept implementations, and technical analyses to advance the development and productive use of information technology. ITLâs responsibilities include the development of management, administrative, technical, and physical standards and guidelines for the cost-effective security and privacy of other than national security-related information in federal information systems. The Special Publication 800-series reports on ITLâs research, guidelines, and outreach efforts in information system security, and its collaborative activities with industry, government, and academic organizations.\n\nAbstract\n\nThese guidelines provide technical requirements for federal agencies implementing digital identity services and are not intended to constrain the development or use of standards outside of this purpose. These guidelines focus on the authentication of subjects interacting with government systems over open networks, establishing that a given claimant is a subscriber who has been previously authenticated. The result of the authentication process may be used locally by the system performing the authentication or may be asserted elsewhere in a federated identity system. This document defines technical requirements for each of the three authenticator assurance levels. This publication supersedes corresponding sections of NIST Special Publication (SP) 800-63-2.\n\nKeywords\n\nauthentication; credential service provider; digital authentication; digital credentials; electronic authentication; electronic credentials, federation.\n\nAcknowledgements\n\nThe authors gratefully acknowledge Kaitlin Boeckl for her artistic graphics contributions to all volumes in the SP 800-63 suite and the contributions of our many reviewers, including Joni Brennan from the Digital ID & Authentication Council of Canada (DIACC), Kat Megas, Ellen Nadeau, and Ben Piccarreta from NIST, and Ryan Galluzzo and Danna Gabel OâRourke from Deloitte & Touche LLP.\n\nThe authors would also like to acknowledge the thought leadership and innovation of the original authors: Donna F. Dodson, W. Timothy Polk, Sarbari Gupta, and Emad A. Nabbus. Without their tireless efforts, we would not have had the incredible baseline from which to evolve 800-63 to the document it is today. In addition, special thanks to the Federal Privacy Councilâs Digital Authentication Task Force for the contributions to the development of privacy requirements and considerations.\n\nRequirements Notation and Conventions\n\nThe terms âSHALLâ and âSHALL NOTâ indicate requirements to be followed strictly in order to conform to the publication and from which no deviation is permitted.\n\nThe terms âSHOULDâ and âSHOULD NOTâ indicate that among several possibilities one is recommended as particularly suitable, without mentioning or excluding others, or that a certain course of action is preferred but not necessarily required, or that (in the negative form) a certain possibility or course of action is discouraged but not prohibited.\n\nThe terms âMAYâ and âNEED NOTâ indicate a course of action permissible within the limits of the publication.\n\nThe terms âCANâ and âCANNOTâ indicate a possibility or capability, whether material, physical or causal or, in the negative, the absence of that possibility or capability.\n\nTable of Contents\n\n1. Purpose\n\n2. Introduction\n\n3. Definitions and Abbreviations\n\n4. Authenticator Assurance Levels\n\n5. Authenticator and Verifier Requirements\n\n6. Authenticator Lifecycle Requirements\n\n7. Session Management\n\n8. Threats and Security Considerations\n\n9. Privacy Considerations\n\n10. Usability Considerations\n\n11. References\n\nAppendix A â Strength of Memorized Secrets\n\nErrata\n\nThis table contains changes that have been incorporated into Special Publication 800-63B. Errata updates can include corrections, clarifications, or other minor changes in the publication that are either editorial or substantive in nature.\n\nDate Type Change Location 2017-12-01 Editorial Updated AAL descriptions for consistency with other text in document Introduction Â Editorial Deleted âcryptographicâ to consistently reflect authenticator options at AAL3 Â§4.3 Â Substantive Refined the requirements about processing of attributes Â§4.4 Â Editorial Make language regarding activation factors for multifactor authenticators consistent Â§5.1.5.1, 5.1.8.1, and 5.1.9.1 Â Substantive Recognize use of hardware TPM as hardware crypto authenticator Â§5.1.7.1, 5.1.9.1 Â Editorial Improve normative language on authenticated protected channels for biometrics Â§5.2.3 Â Editorial Changed âtransactionâ to âbinding transactionâ to emphasize that requirement doesnât apply to authentication transactions Â§6.1.1 Â Editorial Replaced out-of-context note at end of section 7.2 Â§7.2 Â Editorial Changed IdP to CSP to match terminology used elsewhere in this document Table 8-1 Â Editorial Corrected capitalization of Side Channel Attack Table 8-2 Â Substantive Changed the title to processing limitation; clarified the language, incorporated privacy objectives language, and specified that consent is explicit Â§9.3 Â Editorial Added NISTIR 8062 as a reference Â§11.1 Â Editorial Corrected title of SP 800-63C Â§11.3 2020-03-02 Substantive Clarified wording of verifier impersonation resistance requirement Â§4.3.2 Â Editorial Emphasized use of key unlocked by additional factor to sign nonce Â§5.1.9.1 Â Editorial Provided examples of risk-based behavior observations Â§5.2.2 Â Editorial Removed redundant phrase Â§5.2.3 Â Editorial Updated URL for reference [Blacklists] Â§11.1\n\n1 Purpose\n\nThis section is informative.\n\nThis document and its companion documents, Special Publication (SP) 800-63, SP 800-63A, and SP 800-63C, provide technical guidelines to agencies for the implementation of digital authentication.\n\n2 Introduction\n\nThis section is informative.\n\nDigital identity is the unique representation of a subject engaged in an online transaction. A digital identity is always unique in the context of a digital service, but does not necessarily need to be traceable back to a specific real-life subject. In other words, accessing a digital service may not mean that the underlying subjectâs real-life representation is known. Identity proofing establishes that a subject is actually who they claim to be. Digital authentication is the process of determining the validity of one or more authenticators used to claim a digital identity. Authentication establishes that a subject attempting to access a digital service is in control of the technologies used to authenticate. For services in which return visits are applicable, successfully authenticating provides reasonable risk-based assurances that the subject accessing the service today is the same as the one who accessed the service previously. Digital identity presents a technical challenge because it often involves the proofing of individuals over an open network and always involves the authentication of individuals over an open network. This presents multiple opportunities for impersonation and other attacks which can lead to fraudulent claims of a subjectâs digital identity.\n\nThe ongoing authentication of subscribers is central to the process of associating a subscriber with their online activity. Subscriber authentication is performed by verifying that the claimant controls one or more authenticators (called tokens in earlier versions of SP 800-63) associated with a given subscriber. A successful authentication results in the assertion of an identifier, either pseudonymous or non-pseudonymous, and optionally other identity information, to the relying party (RP).\n\nThis document provides recommendations on types of authentication processes, including choices of authenticators, that may be used at various Authenticator Assurance Levels (AALs). It also provides recommendations on the lifecycle of authenticators, including revocation in the event of loss or theft.\n\nThis technical guideline applies to digital authentication of subjects to systems over a network. It does not address the authentication of a person for physical access (e.g., to a building), though some credentials used for digital access may also be used for physical access authentication. This technical guideline also requires that federal systems and service providers participating in authentication protocols be authenticated to subscribers.\n\nThe strength of an authentication transaction is characterized by an ordinal measurement known as the AAL. Stronger authentication (a higher AAL) requires malicious actors to have better capabilities and expend greater resources in order to successfully subvert the authentication process. Authentication at higher AALs can effectively reduce the risk of attacks. A high-level summary of the technical requirements for each of the AALs is provided below; see Sections 4 and 5 of this document for specific normative requirements.\n\nAuthenticator Assurance Level 1: AAL1 provides some assurance that the claimant controls an authenticator bound to the subscriberâs account. AAL1 requires either single-factor or multi-factor authentication using a wide range of available authentication technologies. Successful authentication requires that the claimant prove possession and control of the authenticator through a secure authentication protocol.\n\nAuthenticator Assurance Level 2: AAL2 provides high confidence that the claimant controls an authenticator(s) bound to the subscriberâs account. Proof of possession and control of two different authentication factors is required through secure authentication protocol(s). Approved cryptographic techniques are required at AAL2 and above.\n\nAuthenticator Assurance Level 3: AAL3 provides very high confidence that the claimant controls authenticator(s) bound to the subscriberâs account. Authentication at AAL3 is based on proof of possession of a key through a cryptographic protocol. AAL3 authentication requires a hardware-based authenticator and an authenticator that provides verifier impersonation resistance; the same device may fulfill both these requirements. In order to authenticate at AAL3, claimants are required to prove possession and control ofÂ two distinct authentication factorsÂ through secure authentication protocol(s).Â Approved cryptographicÂ techniques are required.\n\nThe following table states which sections of the document are normative and which are informative:\n\nSection Name Normative/Informative 1. Purpose Informative 2. Introduction Informative 3. Definitions and Abbreviations Informative 4. Authenticator Assurance Levels Normative 5. Authenticator and Verifier Requirements Normative 6. Authenticator Lifecycle Management Normative 7. Session Management Normative 8. Threat and Security Considerations Informative 9. Privacy Considerations Informative 10. Usability Considerations Informative 11. References Informative Appendix A â Strength of Memorized Secrets Informative\n\n3 Definitions and Abbreviations\n\nSee SP 800-63, Appendix A for a complete set of definitions and abbreviations.\n\n4 Authenticator Assurance Levels\n\nThis section contains both normative and informative material.\n\nTo satisfy the requirements of a given AAL, a claimant SHALL be authenticated with at least a given level of strength to be recognized as a subscriber. The result of an authentication process is an identifier that SHALL be used each time that subscriber authenticates to that RP. The identifier MAY be pseudonymous. Subscriber identifiers SHOULD NOT be reused for a different subject but SHOULD be reused when a previously-enrolled subject is re-enrolled by the CSP. Other attributes that identify the subscriber as a unique subject MAY also be provided.\n\nDetailed normative requirements for authenticators and verifiers at each AAL are provided in Section 5.\n\nSee SP 800-63 Section 6.2 for details on how to choose the most appropriate AAL.\n\nFIPS 140 requirements are satisfied by FIPS 140-2 or newer revisions.\n\nAt IAL1, it is possible that attributes are collected and made available by the digital identity service. Any PII or other personal information â whether self-asserted or validated â requires multi-factor authentication. Therefore, agencies SHALL select a minimum of AAL2 when self-asserted PII or other personal information is made available online.\n\n4.1 Authenticator Assurance Level 1\n\nThis section is normative.\n\nAAL1 provides some assurance that the claimant controls an authenticator bound to the subscriberâs account. AAL1 requires either single-factor or multi-factor authentication using a wide range of available authentication technologies. Successful authentication requires that the claimant prove possession and control of the authenticator through a secure authentication protocol.\n\n4.1.1 Permitted Authenticator Types\n\nAAL1 authentication SHALL occur by the use of any of the following authenticator types, which are defined in Section 5:\n\nMemorized Secret (Section 5.1.1)\n\nLook-Up Secret (Section 5.1.2)\n\nOut-of-Band Devices (Section 5.1.3)\n\nSingle-Factor One-Time Password (OTP) Device (Section 5.1.4)\n\nMulti-Factor OTP Device (Section 5.1.5)\n\nSingle-Factor Cryptographic Software (Section 5.1.6)\n\nSingle-Factor Cryptographic Device (Section 5.1.7)\n\nMulti-Factor Cryptographic Software (Section 5.1.8)\n\nMulti-Factor Cryptographic Device (Section 5.1.9)\n\n4.1.2 Authenticator and Verifier Requirements\n\nCryptographic authenticators used at AAL1 SHALL use approved cryptography. Software-based authenticators that operate within the context of an operating system MAY, where applicable, attempt to detect compromise (e.g., by malware) of the user endpoint in which they are running and SHOULD NOT complete the operation when such a compromise is detected.\n\nCommunication between the claimant and verifier (using the primary channel in the case of an out-of-band authenticator) SHALL be via an authenticated protected channel to provide confidentiality of the authenticator output and resistance to man-in-the-middle (MitM) attacks.\n\nVerifiers operated by government agencies at AAL1 SHALL be validated to meet the requirements of FIPS 140 Level 1.\n\n4.1.3 Reauthentication\n\nPeriodic reauthentication of subscriber sessions SHALL be performed as described in Section 7.2. At AAL1, reauthentication of the subscriber SHOULD be repeated at least once per 30 days during an extended usage session, regardless of user activity. The session SHOULD be terminated (i.e., logged out) when this time limit is reached.\n\n4.1.4 Security Controls\n\nThe CSP SHALL employ appropriately-tailored security controls from the low baseline of security controls defined in SP 800-53 or equivalent federal (e.g. FEDRAMP) or industry standard. The CSP SHALL ensure that the minimum assurance-related controls for low-impact systems, or equivalent, are satisfied.\n\n4.1.5 Records Retention Policy\n\nThe CSP shall comply with its respective records retention policies in accordance with applicable laws, regulations, and policies, including any National Archives and Records Administration (NARA) records retention schedules that may apply. If the CSP opts to retain records in the absence of any mandatory requirements, the CSP SHALL conduct a risk management process, including assessments of privacy and security risks, to determine how long records should be retained and SHALL inform the subscriber of that retention policy.\n\n4.2 Authenticator Assurance Level 2\n\nThis section is normative.\n\nAAL2 provides high confidence that the claimant controls authenticator(s) bound to the subscriberâs account. Proof of possession and control of two distinct authentication factors is required through secure authentication protocol(s). Approved cryptographic techniques are required at AAL2 and above.\n\n4.2.1 Permitted Authenticator Types\n\nAt AAL2, authentication SHALL occur by the use of either a multi-factor authenticator or a combination of two single-factor authenticators. A multi-factor authenticator requires two factors to execute a single authentication event, such as a cryptographically-secure device with an integrated biometric sensor that is required to activate the device. Authenticator requirements are specified in Section 5.\n\nWhen a multi-factor authenticator is used, any of the following MAY be used:\n\nMulti-Factor OTP Device (Section 5.1.5)\n\nMulti-Factor Cryptographic Software (Section 5.1.8)\n\nMulti-Factor Cryptographic Device (Section 5.1.9)\n\nWhen a combination of two single-factor authenticators is used, it SHALL include a Memorized Secret authenticator (Section 5.1.1) and one possession-based (i.e., âsomething you haveâ) authenticator from the following list:\n\nLook-Up Secret (Section 5.1.2)\n\nOut-of-Band Device (Section 5.1.3)\n\nSingle-Factor OTP Device (Section 5.1.4)\n\nSingle-Factor Cryptographic Software (Section 5.1.6)\n\nSingle-Factor Cryptographic Device (Section 5.1.7)\n\nNote: When biometric authentication meets the requirements in Section 5.2.3, the device has to be authenticated in addition to the biometric â a biometric is recognized as a factor, but not recognized as an authenticator by itself. Therefore, when conducting authentication with a biometric, it is unnecessary to use two authenticators because the associated device serves as âsomething you have,â while the biometric serves as âsomething you are.â\n\n4.2.2 Authenticator and Verifier Requirements\n\nCryptographic authenticators used at AAL2 SHALL use approved cryptography. Authenticators procured by government agencies SHALL be validated to meet the requirements of FIPS 140 Level 1. Software-based authenticators that operate within the context of an operating system MAY, where applicable, attempt to detect compromise of the platform in which they are running (e.g., by malware) and SHOULD NOT complete the operation when such a compromise is detected. At least one authenticator used at AAL2 SHALL be replay resistant as described in Section 5.2.8. Authentication at AAL2 SHOULD demonstrate authentication intent from at least one authenticator as discussed in Section 5.2.9.\n\nCommunication between the claimant and verifier (the primary channel in the case of an out-of-band authenticator) SHALL be via an authenticated protected channel to provide confidentiality of the authenticator output and resistance to MitM attacks.\n\nVerifiers operated by government agencies at AAL2 SHALL be validated to meet the requirements of FIPS 140 Level 1.\n\nWhen a device such as a smartphone is used in the authentication process, the unlocking of that device (typically done using a PIN or biometric) SHALL NOT be considered one of the authentication factors. Generally, it is not possible for a verifier to know that the device had been locked or if the unlock process met the requirements for the relevant authenticator type.\n\nWhen a biometric factor is used in authentication at AAL2, the performance requirements stated in Section 5.2.3 SHALL be met, and the verifier SHOULD make a determination that the biometric sensor and subsequent processing meet these requirements.\n\n4.2.3 Reauthentication\n\nPeriodic reauthentication of subscriber sessions SHALL be performed as described in Section 7.2. At AAL2, authentication of the subscriber SHALL be repeated at least once per 12 hours during an extended usage session, regardless of user activity. Reauthentication of the subscriber SHALL be repeated following any period of inactivity lasting 30 minutes or longer. The session SHALL be terminated (i.e., logged out) when either of these time limits is reached.\n\nReauthentication of a session that has not yet reached its time limit MAY require only a memorized secret or a biometric in conjunction with the still-valid session secret. The verifier MAY prompt the user to cause activity just before the inactivity timeout.\n\n4.2.4 Security Controls\n\nThe CSP SHALL employ appropriately-tailored security controls from the moderate baseline of security controls defined in SP 800-53 or equivalent federal (e.g., FEDRAMP) or industry standard. The CSP SHALL ensure that the minimum assurance-related controls for moderate-impact systems or equivalent are satisfied.\n\n4.2.5 Records Retention Policy\n\nThe CSP shall comply with its respective records retention policies in accordance with applicable laws, regulations, and policies, including any NARA records retention schedules that may apply. If the CSP opts to retain records in the absence of any mandatory requirements, the CSP SHALL conduct a risk management process, including assessments of privacy and security risks to determine how long records should be retained and SHALL inform the subscriber of that retention policy.\n\n4.3 Authenticator Assurance Level 3\n\nThis section is normative.\n\nAAL3 provides very high confidence that the claimant controls authenticator(s) bound to the subscriberâs account. Authentication at AAL3 is based on proof of possession of a key through a cryptographic protocol. AAL3 authentication SHALL use a hardware-based authenticator and an authenticator that provides verifier impersonation resistance â the same device MAY fulfill both these requirements. In order to authenticate at AAL3, claimants SHALL prove possession and control of two distinct authentication factors through secure authentication protocol(s). Approved cryptographic techniques are required.\n\n4.3.1 Permitted Authenticator Types\n\nAAL3 authentication SHALL occur by the use of one of a combination of authenticators satisfying the requirements in Section 4.3. Possible combinations are:\n\nMulti-Factor Cryptographic Device (Section 5.1.9)\n\nSingle-Factor Cryptographic Device (Section 5.1.7) used in conjunction with Memorized Secret (Section 5.1.1)\n\nMulti-Factor OTP device (software or hardware) (Section 5.1.5) used in conjunction with a Single-Factor Cryptographic Device (Section 5.1.7)\n\nMulti-Factor OTP device (hardware only) (Section 5.1.5) used in conjunction with a Single-Factor Cryptographic Software (Section 5.1.6)\n\nSingle-Factor OTP device (hardware only) (Section 5.1.4) used in conjunction with a Multi-Factor Cryptographic Software Authenticator (Section 5.1.8)\n\nSingle-Factor OTP device (hardware only) (Section 5.1.4) used in conjunction with a Single-Factor Cryptographic Software Authenticator (Section 5.1.6) and a Memorized Secret (Section 5.1.1)\n\n4.3.2 Authenticator and Verifier Requirements\n\nCommunication between the claimant and verifier SHALL be via an authenticated protected channel to provide confidentiality of the authenticator output and resistance to MitM attacks. At least one cryptographic authenticator used at AAL3 SHALL be verifier impersonation resistant as described in Section 5.2.5 and SHALL be replay resistant as described in Section 5.2.8. All authentication and reauthentication processes at AAL3 SHALL demonstrate authentication intent from at least one authenticator as described in Section 5.2.9.\n\nMulti-factor authenticators used at AAL3 SHALL be hardware cryptographic modules validated at FIPS 140 Level 2 or higher overall with at least FIPS 140 Level 3 physical security. Single-factor cryptographic devices used at AAL3 SHALL be validated at FIPS 140 Level 1 or higher overall with at least FIPS 140 Level 3 physical security.\n\nVerifiers at AAL3 SHALL be validated at FIPS 140 Level 1 or higher.\n\nVerifiers at AAL3 SHALL be verifier compromise resistant as described in Section 5.2.7 with respect to at least one authentication factor.\n\nHardware-based authenticators and verifiers at AAL3 SHOULD resist relevant side-channel (e.g., timing and power-consumption analysis) attacks. Relevant side-channel attacks SHALL be determined by a risk assessment performed by the CSP.\n\nWhen a device such a smartphone is used in the authentication process â presuming that the device is able to meet the requirements above â the unlocking of that device SHALL NOT be considered to satisfy one of the authentication factors. This is because it is generally not possible for verifier to know that the device had been locked nor whether the unlock process met the requirements for the relevant authenticator type.\n\nWhen a biometric factor is used in authentication at AAL3, the verifier SHALL make a determination that the biometric sensor and subsequent processing meet the performance requirements stated in Section 5.2.3.\n\n4.3.3 Reauthentication\n\nPeriodic reauthentication of subscriber sessions SHALL be performed as described in Section 7.2. At AAL3, authentication of the subscriber SHALL be repeated at least once per 12 hours during an extended usage session, regardless of user activity, as described in Section 7.2. Reauthentication of the subscriber SHALL be repeated following any period of inactivity lasting 15 minutes or longer. Reauthentication SHALL use both authentication factors. The session SHALL be terminated (i.e., logged out) when either of these time limits is reached. The verifier MAY prompt the user to cause activity just before the inactivity timeout.\n\n4.3.4 Security Controls\n\nThe CSP SHALL employ appropriately-tailored security controls from the high baseline of security controls defined in SP 800-53 or an equivalent federal (e.g., FEDRAMP) or industry standard. The CSP SHALL ensure that the minimum assurance-related controls for high-impact systems or equivalent are satisfied.\n\n4.3.5 Records Retention Policy\n\nThe CSP shall comply with its respective records retention policies in accordance with applicable laws, regulations, and policies, including any NARA records retention schedules that may apply. If the CSP opts to retain records in the absence of any mandatory requirements, the CSP SHALL conduct a risk management process, including assessments of privacy and security risks, to determine how long records should be retained and SHALL inform the subscriber of that retention policy.\n\n4.4 Privacy Requirements\n\nThe CSP SHALL employ appropriately-tailored privacy controls defined in SP 800-53 or equivalent industry standard.\n\nIf CSPs process attributes for purposes other than identity proofing, authentication, or attribute assertions (collectively âidentity serviceâ), related fraud mitigation, or to comply with law or legal process, CSPs SHALL implement measures to maintain predictability and manageability commensurate with the privacy risk arising from the additional processing. Measures MAY include providing clear notice, obtaining subscriber consent, or enabling selective use or disclosure of attributes. When CSPs use consent measures, CSPs SHALL NOT make consent for the additional processing a condition of the identity service.\n\nRegardless of whether the CSP is an agency or private sector provider, the following requirements apply to an agency offering or using the authentication service:\n\nThe agency SHALL consult with their Senior Agency Official for Privacy (SAOP) and conduct an analysis to determine whether the collection of PII to issue or maintain authenticators triggers the requirements of the Privacy Act of 1974 [Privacy Act] (see Section 9.4).\n\nThe agency SHALL publish a System of Records Notice (SORN) to cover such collections, as applicable.\n\nThe agency SHALL consult with their SAOP and conduct an analysis to determine whether the collection of PII to issue or maintain authenticators triggers the requirements of the E-Government Act of 2002 [E-Gov].\n\nThe agency SHALL publish a Privacy Impact Assessment (PIA) to cover such collection, as applicable.\n\n4.5 Summary of Requirements\n\nThis section is informative.\n\nTable 4-1 summarizes the requirements for each of the AALs:\n\nRequirement AAL1 AAL2 AAL3 Permitted authenticator types Memorized Secret;\n\nLook-up Secret;\n\nOut-of-Band;\n\nSF OTP Device;\n\nMF OTP Device;\n\nSF Crypto Software;\n\nSF Crypto Device;\n\nMF Crypto Software;\n\nMF Crypto Device\n\nMF OTP Device;\n\nMF Crypto Software;\n\nMF Crypto Device;\n\nor Memorized Secret plus:\n\nÂ â¢Â Look-up Secret\n\nÂ â¢Â Out-of-Band\n\nÂ â¢Â SF OTP Device\n\nÂ â¢Â SF Crypto Software\n\nÂ â¢Â SF Crypto Device\n\nMF Crypto Device;\n\nSF Crypto Device plus Â Â Memorized Secret;\n\nSF OTP Device plus MF Crypto Device or Software;\n\nSF OTP Device plus SF Crypto Software plus Memorized Secret FIPS 140 validation Level 1 (Government agency verifiers) Level 1 (Government agency authenticators and verifiers) Level 2 overall (MF authenticators)\n\nLevel 1 overall (verifiers and SF Crypto Devices)\n\nLevel 3 physical security (all authenticators) Reauthentication 30 days 12 hours or 30 minutes inactivity; MAY use one authentication factor 12 hours or 15 minutes inactivity; SHALL use both authentication factors Security controls SP 800-53 Low Baseline (or equivalent) SP 800-53 Moderate Baseline (or equivalent) SP 800-53 High Baseline (or equivalent) MitM resistance Required Required Required Verifier-impersonation resistance Not required Not required Required Verifier-compromise resistance Not required Not required Required Replay resistance Not required Required Required Authentication intent Not required Recommended Required Records Retention Policy Required Required Required Privacy Controls Required Required Required\n\n5 Authenticator and Verifier Requirements\n\nThis section is normative.\n\nThis section provides the detailed requirements specific to each type of authenticator. With the exception of reauthentication requirements specified in Section 4 and the requirement for verifier impersonation resistance at AAL3 described in Section 5.2.5, the technical requirements for each of the authenticator types are the same regardless of the AAL at which the authenticator is used.\n\n5.1 Requirements by Authenticator Type\n\n5.1.1 Memorized Secrets\n\n5.1.1.1 Memorized Secret Authenticators\n\nMemorized secrets SHALL be at least 8 characters in length if chosen by the subscriber. Memorized secrets chosen randomly by the CSP or verifier SHALL be at least 6 characters in length and MAY be entirely numeric. If the CSP or verifier disallows a chosen memorized secret based on its appearance on a blacklist of compromised values, the subscriber SHALL be required to choose a different memorized secret. No other complexity requirements for memorized secrets SHOULD be imposed. A rationale for this is presented in Appendix A Strength of Memorized Secrets.\n\n5.1.1.2 Memorized Secret Verifiers\n\nVerifiers SHALL require subscriber-chosen memorized secrets to be at least 8 characters in length. Verifiers SHOULD permit subscriber-chosen memorized secrets at least 64 characters in length. All printing ASCII [RFC 20] characters as well as the space character SHOULD be acceptable in memorized secrets. Unicode [ISO/ISC 10646] characters SHOULD be accepted as well. To make allowances for likely mistyping, verifiers MAY replace multiple consecutive space characters with a single space character prior to verification, provided that the result is at least 8 characters in length. Truncation of the secret SHALL NOT be performed. For purposes of the above length requirements, each Unicode code point SHALL be counted as a single character.\n\nIf Unicode characters are accepted in memorized secrets, the verifier SHOULD apply the Normalization Process for Stabilized Strings using either the NFKC or NFKD normalization defined in Section 12.1 of Unicode Standard Annex 15 [UAX 15]. This process is applied before hashing the byte string representing the memorized secret. Subscribers choosing memorized secrets containing Unicode characters SHOULD be advised that some characters may be represented differently by some endpoints, which can affect their ability to authenticate successfully.\n\nMemorized secrets that are randomly chosen by the CSP (e.g., at enrollment) or by the verifier (e.g., when a user requests a new PIN) SHALL be at least 6 characters in length and SHALL be generated using an approved random bit generator [SP 800-90Ar1].\n\nMemorized secret verifiers SHALL NOT permit the subscriber to store a âhintâ that is accessible to an unauthenticated claimant. Verifiers SHALL NOT prompt subscribers to use specific types of information (e.g., âWhat was the name of your first pet?â) when choosing memorized secrets.\n\nWhen processing requests to establish and change memorized secrets, verifiers SHALL compare the prospective secrets against a list that contains values known to be commonly-used, expected, or compromised. For example, the list MAY include, but is not limited to:\n\nPasswords obtained from previous breach corpuses.\n\nDictionary words.\n\nRepetitive or sequential characters (e.g. âaaaaaaâ, â1234abcdâ).\n\nContext-specific words, such as the name of the service, the username, and derivatives thereof.\n\nIf the chosen secret is found in the list, the CSP or verifier SHALL advise the subscriber that they need to select a different secret, SHALL provide the reason for rejection, and SHALL require the subscriber to choose a different value.\n\nVerifiers SHOULD offer guidance to the subscriber, such as a password-strength meter [Meters], to assist the user in choosing a strong memorized secret. This is particularly important following the rejection of a memorized secret on the above list as it discourages trivial modification of listed (and likely very weak) memorized secrets [Blacklists].\n\nVerifiers SHALL implement a rate-limiting mechanism that effectively limits the number of failed authentication attempts that can be made on the subscriberâs account as described in Section 5.2.2.\n\nVerifiers SHOULD NOT impose other composition rules (e.g., requiring mixtures of different character types or prohibiting consecutively repeated characters) for memorized secrets. Verifiers SHOULD NOT require memorized secrets to be changed arbitrarily (e.g., periodically). However, verifiers SHALL force a change if there is evidence of compromise of the authenticator.\n\nVerifiers SHOULD permit claimants to use âpasteâ functionality when entering a memorized secret. This facilitates the use of password managers, which are widely used and in many cases increase the likelihood that users will choose stronger memorized secrets.\n\nIn order to assist the claimant in successfully entering a memorized secret, the verifier SHOULD offer an option to display the secret â rather than a series of dots or asterisks â until it is entered. This allows the claimant to verify their entry if they are in a location where their screen is unlikely to be observed. The verifier MAY also permit the userâs device to display individual entered characters for a short time after each character is typed to verify correct entry. This is particularly applicable on mobile devices.\n\nThe verifier SHALL use approved encryption and an authenticated protected channel when requesting memorized secrets in order to provide resistance to eavesdropping and MitM attacks.\n\nVerifiers SHALL store memorized secrets in a form that is resistant to offline attacks. Memorized secrets SHALL be salted and hashed using a suitable one-way key derivation function. Key derivation functions take a password, a salt, and a cost factor as inputs then generate a password hash. Their purpose is to make each password guessing trial by an attacker who has obtained a password hash file expensive and therefore the cost of a guessing attack high or prohibitive. Examples of suitable key derivation functions include Password-based Key Derivation Function 2 (PBKDF2) [SP 800-132] and Balloon [BALLOON]. A memory-hard function SHOULD be used because it increases the cost of an attack. The key derivation function SHALL use an approved one-way function such as Keyed Hash Message Authentication Code (HMAC) [FIPS 198-1], any approved hash function in SP 800-107, Secure Hash Algorithm 3 (SHA-3) [FIPS 202], CMAC [SP 800-38B] or Keccak Message Authentication Code (KMAC), Customizable SHAKE (cSHAKE), or ParallelHash [SP 800-185]. The chosen output length of the key derivation function SHOULD be the same as the length of the underlying one-way function output.\n\nThe salt SHALL be at least 32 bits in length and be chosen arbitrarily so as to minimize salt value collisions among stored hashes. Both the salt value and the resulting hash SHALL be stored for each subscriber using a memorized secret authenticator.\n\nFor PBKDF2, the cost factor is an iteration count: the more times the PBKDF2 function is iterated, the longer it takes to compute the password hash. Therefore, the iteration count SHOULD be as large as verification server performance will allow, typically at least 10,000 iterations.\n\nIn addition, verifiers SHOULD perform an additional iteration of a key derivation function using a salt value that is secret and known only to the verifier. This salt value, if used, SHALL be generated by an approved random bit generator [SP 800-90Ar1] and provide at least the minimum security strength specified in the latest revision of SP 800-131A (112 bits as of the date of this publication). The secret salt value SHALL be stored separately from the hashed memorized secrets (e.g., in a specialized device like a hardware security module). With this additional iteration, brute-force attacks on the hashed memorized secrets are impractical as long as the secret salt value remains secret.\n\n5.1.2 Look-Up Secrets\n\n5.1.2.1 Look-Up Secret Authenticators\n\nCSPs creating look-up secret authenticators SHALL use an approved random bit generator [SP 800-90Ar1] to generate the list of secrets and SHALL deliver the authenticator securely to the subscriber. Look-up secrets SHALL have at least 20 bits of entropy.\n\nLook-up secrets MAY be distributed by the CSP in person, by postal mail to the subscriberâs address of record, or by online distribution. If distributed online, look-up secrets SHALL be distributed over a secure channel in accordance with the post-enrollment binding requirements in Section 6.1.2.\n\nIf the authenticator uses look-up secrets sequentially from a list, the subscriber MAY dispose of used secrets, but only after a successful authentication.\n\n5.1.2.2 Look-Up Secret Verifiers\n\nVerifiers of look-up secrets SHALL prompt the claimant for the next secret from their authenticator or for a specific (e.g., numbered) secret. A given secret from an authenticator SHALL be used successfully only once. If the look-up secret is derived from a grid card, each cell of the grid SHALL be used only once.\n\nVerifiers SHALL store look-up secrets in a form that is resistant to offline attacks. Look-up secrets having at least 112 bits of entropy SHALL be hashed with an approved one-way function as described in Section 5.1.1.2. Look-up secrets with fewer than 112 bits of entropy SHALL be salted and hashed using a suitable one-way key derivation function, also described in Section 5.1.1.2. The salt value SHALL be at least 32 in bits in length and arbitrarily chosen so as to minimize salt value collisions among stored hashes. Both the salt value and the resulting hash SHALL be stored for each look-up secret.\n\nFor look-up secrets that have less than 64 bits of entropy, the verifier SHALL implement a rate-limiting mechanism that effectively limits the number of failed authentication attempts that can be made on the subscriberâs account as described in Section 5.2.2.\n\nThe verifier SHALL use approved encryption and an authenticated protected channel when requesting look-up secrets in order to provide resistance to eavesdropping and MitM attacks.\n\n5.1.3 Out-of-Band Devices\n\n5.1.3.1 Out-of-Band Authenticators\n\nThe out-of-band authenticator SHALL establish a separate channel with the verifier in order to retrieve the out-of-band secret or authentication request. This channel is considered to be out-of-band with respect to the primary communication channel (even if it terminates on the same device) provided the device does not leak information from one channel to the other without the authorization of the claimant.\n\nThe out-of-band device SHOULD be uniquely addressable and communication over the secondary channel SHALL be encrypted unless sent via the public switched telephone network (PSTN). For additional authenticator requirements specific to the PSTN, see Section 5.1.3.3. Methods that do not prove possession of a specific device, such as voice-over-IP (VOIP) or email, SHALL NOT be used for out-of-band authentication.\n\nThe out-of-band authenticator SHALL uniquely authenticate itself in one of the following ways when communicating with the verifier:\n\nEstablish an authenticated protected channel to the verifier using approved cryptography. The key used SHALL be stored in suitably secure storage available to the authenticator application (e.g., keychain storage, TPM, TEE, secure element).\n\nAuthenticate to a public mobile telephone network using a SIM card or equivalent that uniquely identifies the device. This method SHALL only be used if a secret is being sent from the verifier to the out-of-band device via the PSTN (SMS or voice).\n\nIf a secret is sent by the verifier to the out-of-band device, the device SHOULD NOT display the authentication secret while it is locked by the owner (i.e., requires an entry of a PIN, passcode, or biometric to view). However, authenticators SHOULD indicate the receipt of an authentication secret on a locked device.\n\nIf the out-of-band authenticator sends an approval message over the secondary communication channel â rather than by the claimant transferring a received secret to the primary communication channel â it SHALL do one of the following:\n\nThe authenticator SHALL accept transfer of the secret from the primary channel which it SHALL send to the verifier over the secondary channel to associate the approval with the authentication transaction. The claimant MAY perform the transfer manually or use a technology such as a barcode or QR code to effect the transfer.\n\nThe authenticator SHALL present a secret received via the secondary channel from the verifier and prompt the claimant to verify the consistency of that secret with the primary channel, prior to accepting a yes/no response from the claimant. It SHALL then send that response to the verifier.\n\n5.1.3.2 Out-of-Band Verifiers\n\nFor additional verification requirements specific to the PSTN, see Section 5.1.3.3.\n\nIf out-of-band verification is to be made using a secure application, such as on a smart phone, the verifier MAY send a push notification to that device. The verifier then waits for the establishment of an authenticated protected channel and verifies the authenticatorâs identifying key. The verifier SHALL NOT store the identifying key itself, but SHALL use a verification method (e.g., an approved hash function or proof of possession of the identifying key) to uniquely identify the authenticator. Once authenticated, the verifier transmits the authentication secret to the authenticator.\n\nDepending on the type of out-of-band authenticator, one of the following SHALL take place:\n\nTransfer of secret to primary channel: The verifier MAY signal the device containing the subscriberâs authenticator to indicate readiness to authenticate. It SHALL then transmit a random secret to the out-of-band authenticator. The verifier SHALL then wait for the secret to be returned on the primary communication channel.\n\nTransfer of secret to secondary channel: The verifier SHALL display a random authentication secret to the claimant via the primary channel. It SHALL then wait for the secret to be returned on the secondary channel from the claimantâs out-of-band authenticator.\n\nVerification of secrets by claimant: The verifier SHALL display a random authentication secret to the claimant via the primary channel, and SHALL send the same secret to the out-of-band authenticator via the secondary channel for presentation to the claimant. It SHALL then wait for an approval (or disapproval) message via the secondary channel.\n\nIn all cases, the authentication SHALL be considered invalid if not completed within 10 minutes. In order to provide replay resistance as described in Section 5.2.8, verifiers SHALL accept a given authentication secret only once during the validity period.\n\nThe verifier SHALL generate random authentication secrets with at least 20 bits of entropy using an approved random bit generator [SP 800-90Ar1]. If the authentication secret has less than 64 bits of entropy, the verifier SHALL implement a rate-limiting mechanism that effectively limits the number of failed authentication attempts that can be made on the subscriberâs account as described in Section 5.2.2.\n\n5.1.3.3 Authentication using the Public Switched Telephone Network\n\nUse of the PSTN for out-of-band verification is RESTRICTED as described in this section and in Section 5.2.10. If out-of-band verification is to be made using the PSTN, the verifier SHALL verify that the pre-registered telephone number being used is associated with a specific physical device. Changing the pre-registered telephone number is considered to be the binding of a new authenticator and SHALL only occur as described in Section 6.1.2.\n\nVerifiers SHOULD consider risk indicators such as device swap, SIM change, number porting, or other abnormal behavior before using the PSTN to deliver an out-of-band authentication secret.\n\nNOTE: Consistent with the restriction of authenticators in Section 5.2.10, NIST may adjust the RESTRICTED status of the PSTN over time based on the evolution of the threat landscape and the technical operation of the PSTN.\n\n5.1.4 Single-Factor OTP Device\n\n5.1.4.1 Single-Factor OTP Authenticators\n\nSingle-factor OTP authenticators contain two persistent values. The first is a symmetric key that persists for the deviceâs lifetime. The second is a nonce that is either changed each time the authenticator is used or is based on a real-time clock.\n\nThe secret key and its algorithm SHALL provide at least the minimum security strength specified in the latest revision of SP 800-131A (112 bits as of the date of this publication). The nonce SHALL be of sufficient length to ensure that it is unique for each operation of the device over its lifetime. OTP authenticators â particularly software-based OTP generators â SHOULD discourage and SHALL NOT facilitate the cloning of the secret key onto multiple devices.\n\nThe authenticator output is obtained by using an approved block cipher or hash function to combine the key and nonce in a secure manner. The authenticator output MAY be truncated to as few as 6 decimal digits (approximately 20 bits of entropy).\n\nIf the nonce used to generate the authenticator output is based on a real-time clock, the nonce SHALL be changed at least once every 2 minutes. The OTP value associated with a given nonce SHALL be accepted only once.\n\n5.1.4.2 Single-Factor OTP Verifiers\n\nSingle-factor OTP verifiers effectively duplicate the process of generating the OTP used by the authenticator. As such, the symmetric keys used by authenticators are also present in the verifier, and SHALL be strongly protected against compromise.\n\nWhen a single-factor OTP authenticator is being associated with a subscriber account, the verifier or associated CSP SHALL use approved cryptography to either generate and exchange or to obtain the secrets required to duplicate the authenticator output.\n\nThe verifier SHALL use approved encryption and an authenticated protected channel when collecting the OTP in order to provide resistance to eavesdropping and MitM attacks. Time-based OTPs [RFC 6238] SHALL have a defined lifetime that is determined by the expected clock drift â in either direction â of the authenticator over its lifetime, plus allowance for network delay and user entry of the OTP. In order to provide replay resistance as described in Section 5.2.8, verifiers SHALL accept a given time-based OTP only once during the validity period.\n\nIf the authenticator output has less than 64 bits of entropy, the verifier SHALL implement a rate-limiting mechanism that effectively limits the number of failed authentication attempts that can be made on the subscriberâs account as described in Section 5.2.2.\n\n5.1.5 Multi-Factor OTP Devices\n\n5.1.5.1 Multi-Factor OTP Authenticators\n\nMulti-factor OTP authenticators operate in a similar manner to single-factor OTP authenticators (see Section 5.1.4.1), except that they require the entry of either a memorized secret or the use of a biometric to obtain the OTP from the authenticator. Each use of the authenticator SHALL require the input of the additional factor.\n\nIn addition to activation information, multi-factor OTP authenticators contain two persistent values. The first is a symmetric key that persists for the deviceâs lifetime. The second is a nonce that is either changed each time the authenticator is used or is based on a real-time clock.\n\nThe secret key and its algorithm SHALL provide at least the minimum security strength specified in the latest revision of [SP 800-131A] (112 bits as of the date of this publication). The nonce SHALL be of sufficient length to ensure that it is unique for each operation of the device over its lifetime. OTP authenticators â particularly software-based OTP generators â SHOULD discourage and SHALL NOT facilitate the cloning of the secret key onto multiple devices.\n\nThe authenticator output is obtained by using an approved block cipher or hash function to combine the key and nonce in a secure manner. The authenticator output MAY be truncated to as few as 6 decimal digits (approximately 20 bits of entropy).\n\nIf the nonce used to generate the authenticator output is based on a real-time clock, the nonce SHALL be changed at least once every 2 minutes. The OTP value associated with a given nonce SHALL be accepted only once.\n\nAny memorized secret used by the authenticator for activation SHALL be a randomly-chosen numeric secret at least 6 decimal digits in length or other memorized secret meeting the requirements of Section 5.1.1.2 and SHALL be rate limited as specified in Section 5.2.2. A biometric activation factor SHALL meet the requirements of Section 5.2.3, including limits on the number of consecutive authentication failures.\n\nThe unencrypted key and activation secret or biometric sample â and any biometric data derived from the biometric sample such as a probe produced through signal processing â SHALL be zeroized immediately after an OTP has been generated.\n\n5.1.5.2 Multi-Factor OTP Verifiers\n\nMulti-factor OTP verifiers effectively duplicate the process of generating the OTP used by the authenticator, but without the requirement that a second factor be provided. As such, the symmetric keys used by authenticators SHALL be strongly protected against compromise.\n\nWhen a multi-factor OTP authenticator is being associated with a subscriber account, the verifier or associated CSP SHALL use approved cryptography to either generate and exchange or to obtain the secrets required to duplicate the authenticator output. The verifier or CSP SHALL also establish, via the authenticator source, that the authenticator is a multi-factor device. In the absence of a trusted statement that it is a multi-factor device, the verifier SHALL treat the authenticator as single-factor, in accordance with Section 5.1.4.\n\nThe verifier SHALL use approved encryption and an authenticated protected channel when collecting the OTP in order to provide resistance to eavesdropping and MitM attacks. Time-based OTPs [RFC 6238] SHALL have a defined lifetime that is determined by the expected clock drift â in either direction â of the authenticator over its lifetime, plus allowance for network delay and user entry of the OTP. In order to provide replay resistance as described in Section 5.2.8, verifiers SHALL accept a given time-based OTP only once during the validity period. In the event a claimantâs authentication is denied due to duplicate use of an OTP, verifiers MAY warn the claimant in case an attacker has been able to authenticate in advance. Verifiers MAY also warn a subscriber in an existing session of the attempted duplicate use of an OTP.\n\nIf the authenticator output or activation secret has less than 64 bits of entropy, the verifier SHALL implement a rate-limiting mechanism that effectively limits the number of failed authentication attempts that can be made on the subscriberâs account as described in Section 5.2.2. A biometric activation factor SHALL meet the requirements of Section 5.2.3, including limits on the number of consecutive authentication failures.\n\n5.1.6 Single-Factor Cryptographic Software\n\n5.1.6.1 Single-Factor Cryptographic Software Authenticators\n\nSingle-factor software cryptographic authenticators encapsulate one or more secret keys unique to the authenticator. The key SHALL be stored in suitably secure storage available to the authenticator application (e.g., keychain storage, TPM, or TEE if available). The key SHALL be strongly protected against unauthorized disclosure by the use of access controls that limit access to the key to only those software components on the device requiring access. Single-factor cryptographic software authenticators SHOULD discourage and SHALL NOT facilitate the cloning of the secret key onto multiple devices.\n\n5.1.6.2 Single-Factor Cryptographic Software Verifiers\n\nThe requirements for a single-factor cryptographic software verifier are identical to those for a single-factor cryptographic device verifier, described in Section 5.1.7.2.\n\n5.1.7 Single-Factor Cryptographic Devices\n\n5.1.7.1 Single-Factor Cryptographic Device Authenticators\n\nSingle-factor cryptographic device authenticators encapsulate one or more secret keys unique to the device that SHALL NOT be exportable (i.e., cannot be removed from the device). The authenticator operates by signing a challenge nonce presented through a direct computer interface (e.g., a USB port). Alternatively, the authenticator could be a suitably secure processor integrated with the user endpoint itself (e.g., a hardware TPM). Although cryptographic devices contain software, they differ from cryptographic software authenticators in that all embedded software is under control of the CSP or issuer and that the entire authenticator is subject to all applicable FIPS 140 requirements at the AAL being authenticated.\n\nThe secret key and its algorithm SHALL provide at least the minimum security length specified in the latest revision of SP 800-131A (112 bits as of the date of this publication). The challenge nonce SHALL be at least 64 bits in length. Approved cryptography SHALL be used.\n\nSingle-factor cryptographic device authenticators SHOULD require a physical input (e.g., the pressing of a button) in order to operate. This provides defense against unintended operation of the device, which might occur if the endpoint to which it is connected is compromised.\n\n5.1.7.2 Single-Factor Cryptographic Device Verifiers\n\nSingle-factor cryptographic device verifiers generate a challenge nonce, send it to the corresponding authenticator, and use the authenticator output to verify possession of the device. The authenticator output is highly dependent on the specific cryptographic device and protocol, but it is generally some type of signed message.\n\nThe verifier has either symmetric or asymmetric cryptographic keys corresponding to each authenticator. While both types of keys SHALL be protected against modification, symmetric keys SHALL additionally be protected against unauthorized disclosure.\n\nThe challenge nonce SHALL be at least 64 bits in length, and SHALL either be unique over the authenticatorâs lifetime or statistically unique (i.e., generated using an approved random bit generator [SP 800-90Ar1]). The verification operation SHALL use approved cryptography.\n\n5.1.8 Multi-Factor Cryptographic Software\n\n5.1.8.1 Multi-Factor Cryptographic Software Authenticators\n\nMulti-factor software cryptographic authenticators encapsulate one or more secret keys unique to the authenticator and accessible only through the input of an additional factor, either a memorized secret or a biometric. The key SHOULD be stored in suitably secure storage available to the authenticator application (e.g., keychain storage, TPM, TEE). The key SHALL be strongly protected against unauthorized disclosure by the use of access controls that limit access to the key to only those software components on the device requiring access. Multi-factor cryptographic software authenticators SHOULD discourage and SHALL NOT facilitate the cloning of the secret key onto multiple devices.\n\nEach authentication operation using the authenticator SHALL require the input of both factors.\n\nAny memorized secret used by the authenticator for activation SHALL be a randomly-chosen numeric value at least 6 decimal digits in length or other memorized secret meeting the requirements of Section 5.1.1.2 and SHALL be rate limited as specified in Section 5.2.2. A biometric activation factor SHALL meet the requirements of Section 5.2.3, including limits on the number of consecutive authentication failures.\n\nThe unencrypted key and activation secret or biometric sample â and any biometric data derived from the biometric sample such as a probe produced through signal processing â SHALL be zeroized immediately after an authentication transaction has taken place.\n\n5.1.8.2 Multi-Factor Cryptographic Software Verifiers\n\nThe requirements for a multi-factor cryptographic software verifier are identical to those for a single-factor cryptographic device verifier, described in Section 5.1.7.2. Verification of the output from a multi-factor cryptographic software authenticator proves use of the activation factor.\n\n5.1.9 Multi-Factor Cryptographic Devices\n\n5.1.9.1 Multi-Factor Cryptographic Device Authenticators\n\nMulti-factor cryptographic device authenticators use tamper-resistant hardware to encapsulate one or more secret keys unique to the authenticator and accessible only through the input of an additional factor, either a memorized secret or a biometric. The authenticator operates by using a private key that was unlocked by the additional factor to sign a challenge nonce presented through a direct computer interface (e.g., a USB port). Alternatively, the authenticator could be a suitably secure processor integrated with the user endpoint itself (e.g., a hardware TPM). Although cryptographic devices contain software, they differ from cryptographic software authenticators in that all embedded software is under control of the CSP or issuer, and that the entire authenticator is subject to any applicable FIPS 140 requirements at the selected AAL.\n\nThe secret key and its algorithm SHALL provide at least the minimum security length specified in the latest revision of SP 800-131A (112 bits as of the date of this publication). The challenge nonce SHALL be at least 64 bits in length. Approved cryptography SHALL be used.\n\nEach authentication operation using the authenticator SHOULD require the input of the additional factor. Input of the additional factor MAY be accomplished via either direct input on the device or via a hardware connection (e.g., USB, smartcard).\n\nAny memorized secret used by the authenticator for activation SHALL be a randomly-chosen numeric value at least 6 decimal digits in length or other memorized secret meeting the requirements of Section 5.1.1.2 and SHALL be rate limited as specified in Section 5.2.2. A biometric activation factor SHALL meet the requirements of Section 5.2.3, including limits on the number of consecutive authentication failures.\n\nThe unencrypted key and activation secret or biometric sample â and any biometric data derived from the biometric sample such as a probe produced through signal processing â SHALL be zeroized immediately after an authentication transaction has taken place.\n\n5.1.9.2 Multi-Factor Cryptographic Device Verifiers\n\nThe requirements for a multi-factor cryptographic device verifier are identical to those for a single-factor cryptographic device verifier, described in Section 5.1.7.2. Verification of the authenticator output from a multi-factor cryptographic device proves use of the activation factor.\n\n5.2 General Authenticator Requirements\n\n5.2.1 Physical Authenticators\n\nCSPs SHALL provide subscriber instructions on how to appropriately protect the authenticator against theft or loss. The CSP SHALL provide a mechanism to revoke or suspend the authenticator immediately upon notification from subscriber that loss or theft of the authenticator is suspected.\n\n5.2.2 Rate Limiting (Throttling)\n\nWhen required by the authenticator type descriptions in Section 5.1, the verifier SHALL implement controls to protect against online guessing attacks. Unless otherwise specified in the description of a given authenticator, the verifier SHALL limit consecutive failed authentication attempts on a single account to no more than 100.\n\nAdditional techniques MAY be used to reduce the likelihood that an attacker will lock the legitimate claimant out as a result of rate limiting. These include:\n\nRequiring the claimant to complete a CAPTCHA before attempting authentication.\n\nRequiring the claimant to wait following a failed attempt for a period of time that increases as the account approaches its maximum allowance for consecutive failed attempts (e.g., 30 seconds up to an hour).\n\nAccepting only authentication requests that come from a white list of IP addresses from which the subscriber has been successfully authenticated before.\n\nLeveraging other risk-based or adaptive authentication techniques to identify user behavior that falls within, or out of, typical norms. These might, for example, include use of IP address, geolocation, timing of request patterns, or browser metadata.\n\nWhen the subscriber successfully authenticates, the verifier SHOULD disregard any previous failed attempts for that user from the same IP address.\n\n5.2.3 Use of Biometrics\n\nThe use of biometrics (something you are) in authentication includes both measurement of physical characteristics (e.g., fingerprint, iris, facial characteristics) and behavioral characteristics (e.g., typing cadence). Both classes are considered biometric modalities, although different modalities may differ in the extent to which they establish authentication intent as described in Section 5.2.9.\n\nFor a variety of reasons, this document supports only limited use of biometrics for authentication. These reasons include:\n\nThe biometric False Match Rate (FMR) does not provide confidence in the authentication of the subscriber by itself. In addition, FMR does not account for spoofing attacks.\n\nBiometric comparison is probabilistic, whereas the other authentication factors are deterministic.\n\nBiometric template protection schemes provide a method for revoking biometric credentials that is comparable to other authentication factors (e.g., PKI certificates and passwords). However, the availability of such solutions is limited, and standards for testing these methods are under development.\n\nBiometric characteristics do not constitute secrets. They can be obtained online or by taking a picture of someone with a camera phone (e.g., facial images) with or without their knowledge, lifted from objects someone touches (e.g., latent fingerprints), or captured with high resolution images (e.g., iris patterns). While presentation attack detection (PAD) technologies (e.g., liveness detection) can mitigate the risk of these types of attacks, additional trust in the sensor or biometric processing is required to ensure that PAD is operating in accordance with the needs of the CSP and the subscriber.\n\nTherefore, the limited use of biometrics for authentication is supported with the following requirements and guidelines:\n\nBiometrics SHALL be used only as part of multi-factor authentication with a physical authenticator (something you have).\n\nAn authenticated protected channel between sensor (or an endpoint containing a sensor that resists sensor replacement) and verifier SHALL be established and the sensor or endpoint SHALL be authenticated prior to capturing the biometric sample from the claimant.\n\nThe biometric system SHALL operate with an FMR [ISO/IEC 2382-37] of 1 in 1000 or better. This FMR SHALL be achieved under conditions of a conformant attack (i.e., zero-effort impostor attempt) as defined in [ISO/IEC 30107-1].\n\nThe biometric system SHOULD implement PAD. Testing of the biometric system to be deployed SHOULD demonstrate at least 90% resistance to presentation attacks for each relevant attack type (i.e., species), where resistance is defined as the number of thwarted presentation attacks divided by the number of trial presentation attacks. Testing of presentation attack resistance SHALL be in accordance with Clause 12 of [ISO/IEC 30107-3]. The PAD decision MAY be made either locally on the claimantâs device or by a central verifier.\n\nNote: PAD is being considered as a mandatory requirement in future editions of this guideline.\n\nThe biometric system SHALL allow no more than 5 consecutive failed authentication attempts or 10 consecutive failed attempts if PAD meeting the above requirements is implemented. Once that limit has been reached, the biometric authenticator SHALL either:\n\nImpose a delay of at least 30 seconds before the next attempt, increasing exponentially with each successive attempt (e.g., 1 minute before the following failed attempt, 2 minutes before the second following attempt), or\n\nDisable the biometric user authentication and offer another factor (e.g., a different biometric modality or a PIN/Passcode if it is not already a required factor) if such an alternative method is already available.\n\nThe verifier SHALL make a determination of sensor and endpoint performance, integrity, and authenticity. Acceptable methods for making this determination include, but are not limited to:\n\nAuthentication of the sensor or endpoint.\n\nCertification by an approved accreditation authority.\n\nRuntime interrogation of signed metadata (e.g., attestation) as described in Section 5.2.4.\n\nBiometric comparison can be performed locally on claimantâs device or at a central verifier. Since the potential for attacks on a larger scale is greater at central verifiers, local comparison is preferred.\n\nIf comparison is performed centrally:\n\nUse of the biometric as an authentication factor SHALL be limited to one or more specific devices that are identified using approved cryptography. Since the biometric has not yet unlocked the main authentication key, a separate key SHALL be used for identifying the device.\n\nBiometric revocation, referred to as biometric template protection in ISO/IEC 24745, SHALL be implemented.\n\nAll transmission of biometrics SHALL be over the authenticated protected channel.\n\nBiometric samples collected in the authentication process MAY be used to train comparison algorithms or â with user consent â for other research purposes. Biometric samples and any biometric data derived from the biometric sample such as a probe produced through signal processing SHALL be zeroized immediately after any training or research data has been derived.\n\nBiometrics are also used in some cases to prevent repudiation of enrollment and to verify that the same individual participates in all phases of the enrollment process as described in SP 800-63A.\n\n5.2.4 Attestation\n\nAn attestation is information conveyed to the verifier regarding a directly-connected authenticator or the endpoint involved in an authentication operation. Information conveyed by attestation MAY include, but is not limited to:\n\nThe provenance (e.g., manufacturer or supplier certification), health, and integrity of the authenticator and endpoint.\n\nSecurity features of the authenticator.\n\nSecurity and performance characteristics of biometric sensor(s).\n\nSensor modality.\n\nIf this attestation is signed, it SHALL be signed using a digital signature that provides at least the minimum security strength specified in the latest revision of SP 800-131A (112 bits as of the date of this publication).\n\nAttestation information MAY be used as part of a verifierâs risk-based authentication decision.\n\n5.2.5 Verifier Impersonation Resistance\n\nVerifier impersonation attacks, sometimes referred to as âphishing attacks,â are attempts by fraudulent verifiers and RPs to fool an unwary claimant into authenticating to an impostor website. In prior versions of SP 800-63, protocols resistant to verifier-impersonation attacks were also referred to as âstrongly MitM resistant.â\n\nA verifier impersonation-resistant authentication protocol SHALL establish an authenticated protected channel with the verifier. It SHALL then strongly and irreversibly bind a channel identifier that was negotiated in establishing the authenticated protected channel to the authenticator output (e.g., by signing the two values together using a private key controlled by the claimant for which the public key is known to the verifier). The verifier SHALL validate the signature or other information used to prove verifier impersonation resistance. This prevents an impostor verifier, even one that has obtained a certificate representing the actual verifier, from replaying that authentication on a different authenticated protected channel.\n\nApproved cryptographic algorithms SHALL be used to establish verifier impersonation resistance where it is required. Keys used for this purpose SHALL provide at least the minimum security strength specified in the latest revision of SP 800-131A (112 bits as of the date of this publication).\n\nOne example of a verifier impersonation-resistant authentication protocol is client-authenticated TLS, because the client signs the authenticator output along with earlier messages from the protocol that are unique to the particular TLS connection being negotiated.\n\nAuthenticators that involve the manual entry of an authenticator output, such as out-of-band and OTP authenticators, SHALL NOT be considered verifier impersonation-resistant because the manual entry does not bind the authenticator output to the specific session being authenticated. In a MitM attack, an impostor verifier could replay the OTP authenticator output to the verifier and successfully authenticate.\n\n5.2.6 Verifier-CSP Communications\n\nIn situations where the verifier and CSP are separate entities (as shown by the dotted line in SP 800-63-3 Figure 4-1), communications between the verifier and CSP SHALL occur through a mutually-authenticated secure channel (such as a client-authenticated TLS connection) using approved cryptography.\n\n5.2.7 Verifier-Compromise Resistance\n\nUse of some types of authenticators requires that the verifier store a copy of the authenticator secret. For example, an OTP authenticator (described in Section 5.1.4) requires that the verifier independently generate the authenticator output for comparison against the value sent by the claimant. Because of the potential for the verifier to be compromised and stored secrets stolen, authentication protocols that do not require the verifier to persistently store secrets that could be used for authentication are considered stronger, and are described herein as being verifier compromise resistant. Note that such verifiers are not resistant to all attacks. A verifier could be compromised in a different way, such as being manipulated into always accepting a particular authenticator output.\n\nVerifier compromise resistance can be achieved in different ways, for example:\n\nUse a cryptographic authenticator that requires the verifier store a public key corresponding to a private key held by the authenticator.\n\nStore the expected authenticator output in hashed form. This method can be used with some look-up secret authenticators (described in Section 5.1.2), for example.\n\nTo be considered verifier compromise resistant, public keys stored by the verifier SHALL be associated with the use of approved cryptographic algorithms and SHALL provide at least the minimum security strength specified in the latest revision of SP 800-131A (112 bits as of the date of this publication).\n\nOther verifier compromise resistant secrets SHALL use approved hash algorithms and the underlying secrets SHALL have at least the minimum security strength specified in the latest revision of SP 800-131A (112 bits as of the date of this publication). Secrets (e.g., memorized secrets) having lower complexity SHALL NOT be considered verifier compromise resistant when hashed because of the potential to defeat the hashing process through dictionary lookup or exhaustive search.\n\n5.2.8 Replay Resistance\n\nAn authentication process resists replay attacks if it is impractical to achieve a successful authentication by recording and replaying a previous authentication message. Replay resistance is in addition to the replay-resistant nature of authenticated protected channel protocols, since the output could be stolen prior to entry into the protected channel. Protocols that use nonces or challenges to prove the âfreshnessâ of the transaction are resistant to replay attacks since the verifier will easily detect when old protocol messages are replayed since they will not contain the appropriate nonces or timeliness data.\n\nExamples of replay-resistant authenticators are OTP devices, cryptographic authenticators, and look-up secrets.\n\nIn contrast, memorized secrets are not considered replay resistant because the authenticator output â the secret itself â is provided for each authentication.\n\n5.2.9 Authentication Intent\n\nAn authentication process demonstrates intent if it requires the subject to explicitly respond to each authentication or reauthentication request. The goal of authentication intent is to make it more difficult for directly-connected physical authenticators (e.g., multi-factor cryptographic devices) to be used without the subjectâs knowledge, such as by malware on the endpoint. Authentication intent SHALL be established by the authenticator itself, although multi-factor cryptographic devices MAY establish intent by reentry of the other authentication factor on the endpoint with which the authenticator is used.\n\nAuthentication intent MAY be established in a number of ways. Authentication processes that require the subjectâs intervention (e.g., a claimant entering an authenticator output from an OTP device) establish intent. Cryptographic devices that require user action (e.g., pushing a button or reinsertion) for each authentication or reauthentication operation are also establish intent.\n\nDepending on the modality, presentation of a biometric may or may not establish authentication intent. Presentation of a fingerprint would normally establish intent, while observation of the claimantâs face using a camera normally would not by itself. Behavioral biometrics similarly are less likely to establish authentication intent because they do not always require a specific action on the claimantâs part.\n\n5.2.10 Restricted Authenticators\n\nAs threats evolve, authenticatorsâ capability to resist attacks typically degrades. Conversely, some authenticatorsâ performance may improve â for example, when changes to their underlying standards increases their ability to resist particular attacks.\n\nTo account for these changes in authenticator performance, NIST places additional restrictions on authenticator types or specific classes or instantiations of an authenticator type.\n\nThe use of a RESTRICTED authenticator requires that the implementing organization assess, understand, and accept the risks associated with that RESTRICTED authenticator and acknowledge that risk will likely increase over time. It is the responsibility of the organization to determine the level of acceptable risk for their system(s) and associated data and to define any methods for mitigating excessive risks. If at any time the organization determines that the risk to any party is unacceptable, then that authenticator SHALL NOT be used.\n\nFurther, the risk of an authentication error is typically borne by multiple parties, including the implementing organization, organizations that rely on the authentication decision, and the subscriber. Because the subscriber may be exposed to additional risk when an organization accepts a RESTRICTED authenticator and that the subscriber may have a limited understanding of and ability to control that risk, the CSP SHALL:\n\nOffer subscribers at least one alternate authenticator that is not RESTRICTED and can be used to authenticate at the required AAL.\n\nProvide meaningful notice to subscribers regarding the security risks of the RESTRICTED authenticator and availability of alternative(s) that are not RESTRICTED.\n\nAddress any additional risk to subscribers in its risk assessment.\n\nDevelop a migration plan for the possibility that the RESTRICTED authenticator is no longer acceptable at some point in the future and include this migration plan in its digital identity acceptance statement.\n\n6 Authenticator Lifecycle Management\n\nThis section is normative.\n\nA number of events can occur over the lifecycle of a subscriberâs authenticator that affect that authenticatorâs use. These events include binding, loss, theft, unauthorized duplication, expiration, and revocation. This section describes the actions to be taken in response to those events.\n\n6.1 Authenticator Binding\n\nAuthenticator binding refers to the establishment of an association between a specific authenticator and a subscriberâs account, enabling the authenticator to be used â possibly in conjunction with other authenticators â to authenticate for that account.\n\nAuthenticators SHALL be bound to subscriber accounts by either:\n\nIssuance by the CSP as part of enrollment; or\n\nAssociating a subscriber-provided authenticator that is acceptable to the CSP.\n\nThese guidelines refer to the binding rather than the issuance of an authenticator as to accommodate both options.\n\nThroughout the digital identity lifecycle, CSPs SHALL maintain a record of all authenticators that are or have been associated with each identity. The CSP or verifier SHALL maintain the information required for throttling authentication attempts when required, as described in Section 5.2.2. The CSP SHALL also verify the type of user-provided authenticator (e.g., single-factor cryptographic device vs. multi-factor cryptographic device) so verifiers can determine compliance with requirements at each AAL.\n\nThe record created by the CSP SHALL contain the date and time the authenticator was bound to the account. The record SHOULD include information about the source of the binding (e.g., IP address, device identifier) of any device associated with the enrollment. If available, the record SHOULD also contain information about the source of unsuccessful authentications attempted with the authenticator.\n\nWhen any new authenticator is bound to a subscriber account, the CSP SHALL ensure that the binding protocol and the protocol for provisioning the associated key(s) are done at a level of security commensurate with the AAL at which the authenticator will be used. For example, protocols for key provisioning SHALL use authenticated protected channels or be performed in person to protect against man-in-the-middle attacks. Binding of multi-factor authenticators SHALL require multi-factor authentication or equivalent (e.g., association with the session in which identity proofing has been just completed) be used in order to bind the authenticator. The same conditions apply when a key pair is generated by the authenticator and the public key is sent to the CSP.\n\n6.1.1 Binding at Enrollment\n\nThe following requirements apply when an authenticator is bound to an identity as a result of a successful identity proofing transaction, as described in SP 800-63A. Since Executive Order 13681 [EO 13681] requires the use of multi-factor authentication for the release of any personal data, it is important that authenticators be bound to subscriber accounts at enrollment, enabling access to personal data, including that established by identity proofing.\n\nThe CSP SHALL bind at least one, and SHOULD bind at least two, physical (something you have) authenticators to the subscriberâs online identity, in addition to a memorized secret or one or more biometrics. Binding of multiple authenticators is preferred in order to recover from the loss or theft of the subscriberâs primary authenticator.\n\nWhile all identifying information is self-asserted at IAL1, preservation of online material or an online reputation makes it undesirable to lose control of an account due to the loss of an authenticator. The second authenticator makes it possible to securely recover from an authenticator loss. For this reason, a CSP SHOULD bind at least two physical authenticators to the subscriberâs credential at IAL1 as well.\n\nAt IAL2 and above, identifying information is associated with the digital identity and the subscriber has undergone an identity proofing process as described in SP 800-63A. As a result, authenticators at the same AAL as the desired IAL SHALL be bound to the account. For example, if the subscriber has successfully completed proofing at IAL2, then AAL2 or AAL3 authenticators are appropriate to bind to the IAL2 identity. While a CSP MAY bind an AAL1 authenticator to an IAL2 identity, if the subscriber is authenticated at AAL1, the CSP SHALL NOT expose personal information, even if self-asserted, to the subscriber. As stated in the previous paragraph, the availability of additional authenticators provides backup methods for authentication if an authenticator is damaged, lost, or stolen.\n\nIf enrollment and binding cannot be completed in a single physical encounter or electronic transaction (i.e., within a single protected session), the following methods SHALL be used to ensure that the same party acts as the applicant throughout the processes:\n\nFor remote transactions:\n\nThe applicant SHALL identify themselves in each new binding transaction by presenting a temporary secret which was either established during a prior transaction, or sent to the applicantâs phone number, email address, or postal address of record.\n\nLong-term authenticator secrets SHALL only be issued to the applicant within a protected session.\n\nFor in-person transactions:\n\nThe applicant SHALL identify themselves in person by either using a secret as described in remote transaction (1) above, or through use of a biometric that was recorded during a prior encounter.\n\nTemporary secrets SHALL NOT be reused.\n\nIf the CSP issues long-term authenticator secrets during a physical transaction, then they SHALL be loaded locally onto a physical device that is issued in person to the applicant or delivered in a manner that confirms the address of record.\n\n6.1.2 Post-Enrollment Binding\n\n6.1.2.1 Binding of an Additional Authenticator at Existing AAL\n\nWith the exception of memorized secrets, CSPs and verifiers SHOULD encourage subscribers to maintain at least two valid authenticators of each factor that they will be using. For example, a subscriber who usually uses an OTP device as a physical authenticator MAY also be issued a number of look-up secret authenticators, or register a device for out-of-band authentication, in case the physical authenticator is lost, stolen, or damaged. See Section 6.1.2.3 for more information on replacement of memorized secret authenticators.\n\nAccordingly, CSPs SHOULD permit the binding of additional authenticators to a subscriberâs account. Before adding the new authenticator, the CSP SHALL first require the subscriber to authenticate at the AAL (or a higher AAL) at which the new authenticator will be used. When an authenticator is added, the CSP SHOULD send a notification to the subscriber via a mechanism that is independent of the transaction binding the new authenticator (e.g., email to an address previously associated with the subscriber). The CSP MAY limit the number of authenticators that may be bound in this manner.\n\n6.1.2.2 Adding an Additional Factor to a Single-Factor Account\n\nIf the subscriberâs account has only one authentication factor bound to it (i.e., at IAL1/AAL1) and an additional authenticator of a different authentication factor is to be added, the subscriber MAY request that the account be upgraded to AAL2. The IAL would remain at IAL1.\n\nBefore binding the new authenticator, the CSP SHALL require the subscriber to authenticate at AAL1. The CSP SHOULD send a notification of the event to the subscriber via a mechanism independent of the transaction binding the new authenticator (e.g., email to an address previously associated with the subscriber).\n\n6.1.2.3 Replacement of a Lost Authentication Factor\n\nIf a subscriber loses all authenticators of a factor necessary to complete multi-factor authentication and has been identity proofed at IAL2 or IAL3, that subscriber SHALL repeat the identity proofing process described in SP 800-63A. An abbreviated proofing process, confirming the binding of the claimant to previously-supplied evidence, MAY be used if the CSP has retained the evidence from the original proofing process pursuant to a privacy risk assessment as described in SP 800-63A Section 4.2. The CSP SHALL require the claimant to authenticate using an authenticator of the remaining factor, if any, to confirm binding to the existing identity. Reestablishment of authentication factors at IAL3 SHALL be done in person, or through a supervised remote process as described in SP 800-63A Section 5.3.3.2, and SHALL verify the biometric collected during the original proofing process.\n\nThe CSP SHOULD send a notification of the event to the subscriber. This MAY be the same notice as is required as part of the proofing process.\n\nReplacement of a lost (i.e., forgotten) memorized secret is problematic because it is very common. Additional âbackupâ memorized secrets do not mitigate this because they are just as likely to also have been forgotten. If a biometric is bound to the account, the biometric and associated physical authenticator SHOULD be used to establish a new memorized secret.\n\nAs an alternative to the above re-proofing process when there is no biometric bound to the account, the CSP MAY bind a new memorized secret with authentication using two physical authenticators, along with a confirmation code that has been sent to one of the subscriberâs addresses of record. The confirmation code SHALL consist of at least 6 random alphanumeric characters generated by an approved random bit generator [SP 800-90Ar1]. Those sent to a postal address of record SHALL be valid for a maximum of 7 days but MAY be made valid up to 21 days via an exception process to accommodate addresses outside the direct reach of the U.S. Postal Service. Confirmation codes sent by means other than physical mail SHALL be valid for a maximum of 10 minutes.\n\nA subscriber may already possess authenticators suitable for authentication at a particular AAL. For example, they may have a two-factor authenticator from a social network provider, considered AAL2 and IAL1, and would like to use those credentials at an RP that requires IAL2.\n\nCSPs SHOULD, where practical, accommodate the use of subscriber-provided authenticators in order to relieve the burden to the subscriber of managing a large number of authenticators. Binding of these authenticators SHALL be done as described in Section 6.1.2.1. In situations where the authenticator strength is not self-evident (e.g., between single-factor and multi-factor authenticators of a given type), the CSP SHOULD assume the use of the weaker authenticator unless it is able to establish that the stronger authenticator is in fact being used (e.g., by verification with the issuer or manufacturer of the authenticator).\n\n6.1.4 Renewal\n\nThe CSP SHOULD bind an updated authenticator an appropriate amount of time before an existing authenticatorâs expiration. The process for this SHOULD conform closely to the initial authenticator binding process (e.g., confirming address of record). Following successful use of the new authenticator, the CSP MAY revoke the authenticator that it is replacing.\n\n6.2 Loss, Theft, Damage, and Unauthorized Duplication\n\nCompromised authenticators include those that have been lost, stolen, or subject to unauthorized duplication. Generally, one must assume that a lost authenticator has been stolen or compromised by someone that is not the legitimate subscriber of the authenticator. Damaged or malfunctioning authenticators are also considered compromised to guard against any possibility of extraction of the authenticator secret. One notable exception is a memorized secret that has been forgotten without other indications of having been compromised, such as having been obtained by an attacker.\n\nSuspension, revocation, or destruction of compromised authenticators SHOULD occur as promptly as practical following detection. Agencies SHOULD establish time limits for this process.\n\nTo facilitate secure reporting of the loss, theft, or damage to an authenticator, the CSP SHOULD provide the subscriber with a method of authenticating to the CSP using a backup or alternate authenticator. This backup authenticator SHALL be either a memorized secret or a physical authenticator. Either MAY be used, but only one authentication factor is required to make this report. Alternatively, the subscriber MAY establish an authenticated protected channel to the CSP and verify information collected during the proofing process. The CSP MAY choose to verify an address of record (i.e., email, telephone, postal) and suspend authenticator(s) reported to have been compromised. The suspension SHALL be reversible if the subscriber successfully authenticates to the CSP using a valid (i.e., not suspended) authenticator and requests reactivation of an authenticator suspended in this manner. The CSP MAY set a time limit after which a suspended authenticator can no longer be reactivated.\n\n6.3 Expiration\n\nCSPs MAY issue authenticators that expire. If and when an authenticator expires, it SHALL NOT be usable for authentication. When an authentication is attempted using an expired authenticator, the CSP SHOULD give an indication to the subscriber that the authentication failure is due to expiration rather than some other cause.\n\nThe CSP SHALL require subscribers to surrender or prove destruction of any physical authenticator containing attribute certificates signed by the CSP as soon as practical after expiration or receipt of a renewed authenticator.\n\n6.4 Revocation and Termination\n\nRevocation of an authenticator â sometimes referred to as termination, especially in the context of PIV authenticators â refers to removal of the binding between an authenticator and a credential the CSP maintains.\n\nCSPs SHALL revoke the binding of authenticators promptly when an online identity ceases to exist (e.g., subscriberâs death, discovery of a fraudulent subscriber), when requested by the subscriber, or when the CSP determines that the subscriber no longer meets its eligibility requirements.\n\nThe CSP SHALL require subscribers to surrender or certify destruction of any physical authenticator containing certified attributes signed by the CSP as soon as practical after revocation or termination takes place. This is necessary to block the use of the authenticatorâs certified attributes in offline situations between revocation/termination and expiration of the certification.\n\nFurther requirements on the termination of PIV authenticators are found in FIPS 201.\n\n7 Session Management\n\nThis section is normative.\n\nOnce an authentication event has taken place, it is often desirable to allow the subscriber to continue using the application across multiple subsequent interactions without requiring them to repeat the authentication event. This requirement is particularly true for federation scenarios â described in SP 800-63C â where the authentication event necessarily involves several components and parties coordinating across a network.\n\nTo facilitate this behavior, a session MAY be started in response to an authentication event, and continue the session until such time that it is terminated. The session MAY be terminated for any number of reasons, including but not limited to an inactivity timeout, an explicit logout event, or other means. The session MAY be continued through a reauthentication event â described in Section 7.2 â wherein the user repeats some or all of the initial authentication event, thereby re-establishing the session.\n\nSession management is preferable over continual presentation of credentials as the poor usability of continual presentation often creates incentives for workarounds such as cached unlocking credentials, negating the freshness of the authentication event.\n\n7.1 Session Bindings\n\nA session occurs between the software that a subscriber is running â such as a browser, application, or operating system (i.e., the session subject) â and the RP or CSP that the subscriber is accessing (i.e., the session host). A session secret SHALL be shared between the subscriberâs software and the service being accessed. This secret binds the two ends of the session, allowing the subscriber to continue using the service over time. The secret SHALL be presented directly by the subscriberâs software or possession of the secret SHALL be proven using a cryptographic mechanism.\n\nThe secret used for session binding SHALL be generated by the session host in direct response to an authentication event. A session SHOULD inherit the AAL properties of the authentication event which triggered its creation. A session MAY be considered at a lower AAL than the authentication event but SHALL NOT be considered at a higher AAL than the authentication event.\n\nSecrets used for session binding:\n\nSHALL be generated by the session host during an interaction, typically immediately following authentication.\n\nSHALL be generated by an approved random bit generator [SP 800-90Ar1] and contain at least 64 bits of entropy.\n\nSHALL be erased or invalidated by the session subject when the subscriber logs out.\n\nSHOULD be erased on the subscriber endpoint when the user logs out or when the secret is deemed to have expired.\n\nSHOULD NOT be placed in insecure locations such as HTML5 Local Storage due to the potential exposure of local storage to cross-site scripting (XSS) attacks.\n\nSHALL be sent to and received from the device using an authenticated protected channel.\n\nSHALL time out and not be accepted after the times specified in Sections 4.1.4, 4.2.4, and 4.3.4, as appropriate for the AAL.\n\nSHALL NOT be available to insecure communications between the host and subscriberâs endpoint. Authenticated sessions SHALL NOT fall back to an insecure transport, such as from https to http, following authentication.\n\nURLs or POST content SHALL contain a session identifier that SHALL be verified by the RP to ensure that actions taken outside the session do not affect the protected session.\n\nThere are several mechanisms for managing a session over time. The following sections give different examples along with additional requirements and considerations particular to each example technology. Additional informative guidance is available in the OWASP Session Management Cheat Sheet [OWASP-session].\n\n7.1.1 Browser Cookies\n\nBrowser cookies are the predominant mechanism by which a session will be created and tracked for a subscriber accessing a service.\n\nCookies:\n\nSHALL be tagged to be accessible only on secure (HTTPS) sessions.\n\nSHALL be accessible to the minimum practical set of hostnames and paths.\n\nSHOULD be tagged to be inaccessible via JavaScript (HttpOnly).\n\nSHOULD be tagged to expire at, or soon after, the sessionâs validity period. This requirement is intended to limit the accumulation of cookies, but SHALL NOT be depended upon to enforce session timeouts.\n\n7.1.2 Access Tokens\n\nAn access token â such as found in OAuth â is used to allow an application to access a set of services on a subscriberâs behalf following an authentication event. The presence of an OAuth access token SHALL NOT be interpreted by the RP as presence of the subscriber, in the absence of other signals. The OAuth access token, and any associated refresh tokens, MAY be valid long after the authentication session has ended and the subscriber has left the application.\n\n7.1.3 Device Identification\n\nOther methods of secure device identification â including but not limited to mutual TLS, token binding, or other mechanisms â MAY be used to enact a session between a subscriber and a service.\n\n7.2 Reauthentication\n\nContinuity of authenticated sessions SHALL be based upon the possession of a session secret issued by the verifier at the time of authentication and optionally refreshed during the session. The nature of a session depends on the application, including:\n\nA web browser session with a âsessionâ cookie, or\n\nAn instance of a mobile application that retains a session secret.\n\nSession secrets SHALL be non-persistent. That is, they SHALL NOT be retained across a restart of the associated application or a reboot of the host device.\n\nPeriodic reauthentication of sessions SHALL be performed to confirm the continued presence of the subscriber at an authenticated session (i.e., that the subscriber has not walked away without logging out).\n\nA session SHALL NOT be extended past the guidelines in Sections 4.1.3, 4.2.3, and 4.3.3 (depending on AAL) based on presentation of the session secret alone. Prior to session expiration, the reauthentication time limit SHALL be extended by prompting the subscriber for the authentication factor(s) specified in Table 7-1.\n\nWhen a session has been terminated, due to a time-out or other action, the user SHALL be required to establish a new session by authenticating again.\n\nAAL Requirement 1 Presentation of any one factor 2 Presentation of a memorized secret or biometric 3 Presentation of all factors\n\nNote: At AAL2, a memorized secret or biometric, and not a physical authenticator, is required because the session secret is something you have, and an additional authentication factor is required to continue the session.\n\n7.2.1 Reauthentication from a Federation or Assertion\n\nWhen using a federation protocol as described in SP 800-63C, Section 5 to connect the CSP and RP, special considerations apply to session management and reauthenticati"
    }
}