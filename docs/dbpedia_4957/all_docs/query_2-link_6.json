{
    "id": "dbpedia_4957_2",
    "rank": 6,
    "data": {
        "url": "https://github.com/umbraco/rfcs/blob/master/cms/0001-project-unicore-intro.md",
        "read_more_link": "",
        "language": "en",
        "title": "rfcs/cms/0001-project-unicore-intro.md at main ¬∑ umbraco/rfcs",
        "top_image": "https://opengraph.githubassets.com/dd697294c73d1d96ea29b9b160cffbb499134c873f220c9fdcd41e0d0d22e3a7/umbraco/rfcs",
        "meta_img": "https://opengraph.githubassets.com/dd697294c73d1d96ea29b9b160cffbb499134c873f220c9fdcd41e0d0d22e3a7/umbraco/rfcs",
        "images": [
            "https://github.com/umbraco/rfcs/raw/main/cms/assets/diagram.png",
            "https://camo.githubusercontent.com/0b68a46e432c7154c6cd75ba27cda95dd3a9c6c5b5d7894d97c94f6988743f6a/68747470733a2f2f706c616365686f6c642e69742f31352f6139393862612f3030303030303f746578743d2b",
            "https://camo.githubusercontent.com/1477fa36f008cbdae9f23e10a54c201d54d34b364f069bef16414b5ed0e92a60/68747470733a2f2f706c616365686f6c642e69742f31352f6363636363632f3030303030303f746578743d2b",
            "https://camo.githubusercontent.com/0420d82e83d8468a4159037802ae4117f3a31afd3715f2baeb0ba5e915a93240/68747470733a2f2f706c616365686f6c642e69742f31352f4343303030302f3030303030303f746578743d2b",
            "https://camo.githubusercontent.com/0420d82e83d8468a4159037802ae4117f3a31afd3715f2baeb0ba5e915a93240/68747470733a2f2f706c616365686f6c642e69742f31352f4343303030302f3030303030303f746578743d2b",
            "https://camo.githubusercontent.com/72b41a0b84aa31f170bd5ebe63a2201b3dfd3afcedef7723587c78321ab39b3a/68747470733a2f2f706c616365686f6c642e69742f31352f4646433330302f3030303030303f746578743d2b",
            "https://camo.githubusercontent.com/e2609ea8d7fb872e10a43ce45f1e8ed7dd7d475c0162b72a634dfe8c4a58be50/68747470733a2f2f706c616365686f6c642e69742f31352f4339643766312f3030303030303f746578743d2b",
            "https://camo.githubusercontent.com/023386abf7a0dd0c4f809c23444ba43e804a02945e3458f449718e5efe5565d8/68747470733a2f2f706c616365686f6c642e69742f31352f4441463741362f3030303030303f746578743d2b"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "RFCs for changes to Umbraco products. Contribute to umbraco/rfcs development by creating an account on GitHub.",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/umbraco/rfcs/blob/main/cms/0001-project-unicore-intro.md",
        "text": "Project UniCore ü¶Ñ\n\nRequest for Contribution (RFC) 1 : Introduction & Strategy\n\nCode of conduct\n\nPlease read and respect the RFC Code of Conduct\n\nIntended Audience\n\nThe intended audience for this RFC is technical users and developers.\n\nTitle: Project UniCore\n\nWe would like to proceed with moving the current Umbraco codebase from .Net Framework to be based on .Net Core.\n\nWe would like to make the porting of this code as simple as possible, both from the point of view of the engineers but more importantly the point of view of Umbraco end-users/developers.\n\nWhere possible, we hope to create a .Net Core build of Umbraco while keeping as many of the same existing APIs and paradigms that developers are currently used to.\n\nWe are calling this the ‚ÄúMinimal disruption‚Äù approach.\n\nCurrently Umbraco runs on ASP.Net Framework which is a technology that is not in actively enhanced by Microsoft. .Net Core is the default platform recommended by Microsoft and is the platform that Microsoft will continue to evolve into the future, therefore, it is the obvious platform for Umbraco to move to.\n\nThe motivation for the ‚ÄúMinimal disruption‚Äù approach is:\n\nFor the benefit of Umbraco end-users, developers, contributors and Umbraco HQ, we want to make the development process for this transition as simple and short as possible. This means we would like to keep any changes to the current concepts in Umbraco to a minimum. We want to make the transition from the current .Net Framework version of Umbraco to a .Net Core version of Umbraco as frictionless as possible.\n\nDetailed Design\n\nThe ‚ÄúProject UniCore‚Äù title is a code name for this project since we do not want to explicitly affiliate this project with an Umbraco numbered release.\n\nThere will be future RFCs ready when certain milestones are ready. See the ‚ÄúRelated RFCs‚Äù section at the end of this document.\n\nCritical Path diagram\n\nThe diagonal (top left to bottom right) is the ‚ÄúCritical Path‚Äù that will be taken to get to a .Net Core build.\n\nPurple: Main components of the ‚ÄúCritical Path‚Äù\n\nGrey: Sub modules of the main components (subject to change)\n\nRed text: means that those will be RFCs that will be released when those milestones are ready\n\nRed box: Areas of risk that may affect the timeline\n\nYellow: Areas that will be abstracted initially during the main phase of porting the project to .Net Core. Once the .Net Core switch milestone is ready to start, these areas will need to be developed in parallel with the ‚ÄúCritical Path‚Äù. The development of these areas should only be commenced with the consultation of Umbraco core development team.\n\nBlue: Out of scope for ‚ÄúProject UniCore‚Äù. Candidates for successive projects.flag\n\nGreen: Considerations for pre-launch of the Umbraco .Net Core build (i.e. ecosystem)\n\nThe next RFC is the ‚ÄúProject structure design‚Äù which will contain the details about how we plan to get to the ‚Äú.Net Core Switch‚Äù milestone\n\nThe final result of the ‚ÄúMinimal disruption‚Äù approach with regards to moving from the current .Net Framework version of Umbraco to a .Net Core version of Umbraco is that developers will be able to migrate their projects. The database will be able to be upgraded the same way as it is today. The solution will need to be migrated from .Net Framework projects to .Net Core projects and the existing code will need to be updated to support any breaking changes. Breaking changes will exist due to the ASP.Net change from .Net Framework to .Net Core and also for any necessary changes needed by the Umbraco .Net Core transition.\n\nNamespace changes in the Umbraco solution will be made. Although this is a breaking change we feel that this is overcome by a textual find + replace.\n\nDocumentation will be provided on how to transition to the Umbraco .Net Core version including what breaking changes exist and how to overcome the common changes.\n\nBreaking changes are unavoidable when moving from the current .Net Framework of Umbraco to the .Net Core version of Umbraco. The primary purpose of this RFC is to show that we want to minimize these breaking changes where possible.\n\nThe alternative to ‚ÄúMinimal disruption‚Äù approach is that we re-architect the majority of the Umbraco solution which would yield very large breaking changes and make the transition to this new version much more difficult and time consuming. There would be benefits of re-architecting large parts of the solution which would mean a cleaner Umbraco solution but we feel it‚Äôs more important to get to a .Net Core build faster and then make further architectural changes and enhancements in later versions.\n\nNot changing namespaces at all. This will make the development flow more difficult. We also feel that it‚Äôs a necessary stepping stone with minimal impact to move towards a cleaner solution in the future.\n\nDon‚Äôt move to .Net Core. We don‚Äôt feel that this is a viable option for a sustainable future of the Umbraco CMS.\n\nOut of Scope\n\nArchitectural changes and features that are not part of the ‚ÄúCritical Path‚Äù (including but not limited to Blue items)\n\nUnresolved Issues\n\nThe answers that we are hoping to get from the community is:\n\nIs this approach understandable?\n\nAre there aspects of this approach missing?\n\nDo you agree with the ‚ÄúMinimal disruption‚Äù approach? If not, why?\n\nRelated RFCs (where are we in roadmap?)\n\nRFC - Introduction & Strategy\n\nRFC - Project/solution restructure\n\nRFC - Database abstraction\n\nRFC - Imaging abstraction\n\nRFC - Configuration\n\nRFC - .Net Core Version choice\n\nRFC - Microsoft DI transition\n\nRFC - Linux / Docker\n\nThis RFC was compiled by:\n\nShannon Deminick (Umbraco HQ)\n\nCarole Logan (Umbraco Community)\n\nLars-Erik Aabech (Umbraco Community)\n\nSt√©phane Gay (Umbraco HQ)\n\nBjarke Berg (Umbraco HQ)\n\nUmbraco 2019 Retreat members"
    }
}