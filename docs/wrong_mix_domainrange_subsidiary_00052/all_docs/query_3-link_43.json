{
    "id": "wrong_mix_domainrange_subsidiary_00052_3",
    "rank": 43,
    "data": {
        "url": "https://ibm.github.io/waiops-tech-jam/labs/instana/explore-instana/explore/",
        "read_more_link": "",
        "language": "en",
        "title": "IBM AIOps Automation SWAT",
        "top_image": "https://ibm.github.io/waiops-tech-jam/img/favicon.svg",
        "meta_img": "https://ibm.github.io/waiops-tech-jam/img/favicon.svg",
        "images": [
            "https://ibm.github.io/waiops-tech-jam/img/ibm-watson-logo.png",
            "https://ibm.github.io/waiops-tech-jam/img/ibm-watson-logo.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/open-firefox-0f398188b48b31ca6f63f15688308eae.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/untrusted-cert-advance-954725e84d2839590377564af68c9d4c.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/login-4bfbf5fd724af14ce335dc516c1e7736.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/kubernetes-f5cd40fb37c16ed31815f91cdad1a18d.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/clusters-d02a1b1ce9a52921704caa624cb0786c.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/cluster-7c20903a9e658eee5548e8a84753138b.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/qotd-pods-cc49370fe899d682247fe7eb2e0f9584.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/infra-zones-3ca1aad539d0ed6d6923f3a6ef5a4e15.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/host-query-4f530d1437cb8898e5ed643329cd1b64.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/instana-flyover-1ffb5cede06d604edf6576cb4c84804e.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/mqace-flyover-fc6cc793682429d0535161587f5a9212.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/comparison-table-3479eef9c27c1bb4c393b511a63cf20a.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/tableContent-1cf66af6227bbe04fc9932b2a77f7328.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/map-1e579966703bbe646a240a8e1a110ad9.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/pizzaBox-8f198130551ccc3386f50a34bd59722a.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/mq-ace-open-modal-34e40b32f1696fd48fab0ea40d53c0a2.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/mq-ace-host-dashboard-c5c334b50bb818ab60c0c3d1f815189c.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/lastMinute-095bf232600fe0b9ea597e3df282fc7f.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/mq-ace-host-mq-sidebar-15a191904611c51ef472bc870d5b7d56.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/mq-channels-718c41da1877712f58f6b3386188f196.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/mq-channel-breadcrumbs-512f65ebf4c16b8cd5afd607085514ef.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/newApplication-a2ac9b38276bc5a94a25c3db72ed3b30.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/addRobotShop-602cc0a0dc7d864570bedb3263e1fc1a.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/all-downstream-services-87909fbc578555858f7271bc8e130d54.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/newApplication-a2ac9b38276bc5a94a25c3db72ed3b30.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/2022-05-27-18-48-03-890feb28475a046003c09f5e42190d8c.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/alternative-cdb871c2555aa0f5a4d20542ea3c9879.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/2022-05-27-18-51-01-424ce4da0d2a5f580940847a1183561b.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/dependencies-d2cd77ef916479b80e976b847fc10ace.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/qotd-dependencies-map-bc2260fee49018d3b521c948dd4016cd.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/flyover-qm-c1516736708b9f4f34ac77ab1f1f1e15.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/upstreamDownstream-173c1f730bb1a5985d9d8ecf8de6d037.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/2022-05-27-18-56-01-08c3dddd817fed79417a24c188a32e2a.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/2022-05-27-18-57-07-8595626d5721691220920a23dbbf65bc.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/qotdEngraving-a58f7e2d78e586e25e0d5b628cdb3670.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/analyzeCalls-88d6431e356ef5cbecc8d011a57aff82.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/analyze-qotd-engraving-87fd2f54c5ebe66db5eccd88375c4e9d.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/engravingCalls-716cf2a8ab088e228415e3977f3aaa18.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/call1-f3f2edab6949ffaaf3b717f61f0edf7d.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/qotd-engraving-service-endpoint-list-8cc13d15d11631128297ddd649dddd0d.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/engraving-calls-10741e89cd3a259ca75407d44ad97850.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/open-stacktrace-8e6a70a2787354284881c851513ee8a4.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/line-of-code-4985a656526730d878b52aa3f91b96c2.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/ace-analyse-0b38baa713a0122b55b62ea1e73ec038.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/mq-link-4220ee755806bd18ddaed8196ee548a0.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/queue-one-69e2167348aad4ab5cec5b4036a2e229.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/websites-and-mobile-apps-b600e676cf83e5c8e7a9efca630dc2c0.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/click-robot-shop-eum-700059c8e941bb09c278812e01e33c0b.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/robot-shop-dash-683d433fe511dffc778e2a410cf73e5d.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/websiteQOTD3-f38e78dccc2774abda7dbfc412d758c5.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/robot-shop-focus-group-16103fed21856a94f11dd83484557171.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/robot-shop-select-req-19b1462506c3590e0d8b6153bd0ea4f2.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/robot-shop-eum-req-39ff06d2f26da4c6408b4e355408dff4.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/robot-shop-web-trace-f5ab20a945749553d91d81599ed32488.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/analytics-6409753bf6cf1462b1d73ebb99b4dd89.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/typeOfCalls-0d13d53ec3b37eb94e32f6cf274834e0.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/analytics-filter-qotd-dd94086d9ea701fcd8ce040be4b84a8a.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/groupStatements-213bec588ca35c9352efce3d17c7c489.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/sort-d08f09076a118710240fbb00e1841dd5.png",
            "https://ibm.github.io/waiops-tech-jam/assets/images/get-page-link-b4d778afed9e07b97064a5dc8dd145d5.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Explore Instana and the Quote of the Day Application",
        "meta_lang": "en",
        "meta_favicon": "/waiops-tech-jam/img/favicon.svg",
        "meta_site_name": "",
        "canonical_link": "https://github.com/waiops-tech-jam/labs/instana/explore-instana/explore/",
        "text": "Explore Instana\n\nFollow this tutorial to explore some key Instana capabilities including:\n\nMonitoring of Kubernetes\n\nMonitoring of applications\n\nMonitoring of infrastructure\n\nFrom the Bastion host open the Firefox browser and select the Instana bookmark.\n\nWhen prompted, enter the username and password that you updated earlier.\n\nUsername: admin@instana.local\n\nPassword: Passw0rd\n\nUse the left navigation to select Platforms and then Kubernetes\n\nWhen you select Platforms in the classroom environment, you will only see kubernetes and Cloud Foundry. But, there are additional feature flags that can be enabled to add in other technologies like VMware, Power HMC, and Z HMC. You saw the feature flags for those technologies when you performed the Instana server installation.\n\nYou will see a list of Kubernetes clusters. In this environment there is only the SNO cluster named apps_cluster that we installed the OCP Instana Agent onto in an earlier lab.\n\nClick the cluster name to open the dashboard.\n\nYou should see a screen similar to the one below where you can see overall utilization of the Kubernetes cluster.\n\nSelect some of the other tabs to explore the Kubernetes monitoring. We recommend you look at the Events, Nodes, and Pods tabs. When you select the pods tab, you will see a list of all pods running within the cluster.\n\nIn the upper right corner of the Pods tab, add qotd into the search widget. You'll notice that it will filter the list to the pods related to the Quote of the Day application.\n\nClick on one of the links on the left side and drill into the pod utilization details.\n\nNext, explore the Infrastructure view. To do this, click on the \"Infrastructure\" icon on the left side.\n\nYou'll notice that there is a box surrounding the \"towers\" with the zone names that have been configured in the Agent configurations. The box is a \"zone\". In previous labs a zone name was specified during the install of the Instana Agent or added to the Instana Agent configuration file. The towers contained within the zones represents the OpenShift SNO cluster named Apps, the Instana server, and the virtual machine running ACE and MQ.\n\nIn a large environment, it can be difficult to find the server or zone that you are looking for. Fortunately, there are a number of ways that you can search for things within the Infrastructure view.\n\nIn the bottom right corner, click on some of the icons and explore different ways of organizing and filtering the Infrastructure view.\n\nOr, you can use the lucene query language in the filter/search bar at the top of the page. Before beginning the search, flyover one of the towers and identify the hostname of one of the servers. For example mqace\n\nClick in the filter bar and select \"Entity\"\n\nA list will popup. Start typing host and you will see the list filtered to \"host\". Once you see the single entry, select host.\n\nOnce you have select \"Host\", another list will popup. Select name.\n\nNow, you will see \"entity.host.name:\". After the \":\", you can do a wildcard search. For example \"entity.host.name: * abc * \". Type in a wildcard string that matches the beginning of the hostname you found earlier. In my example, I could specify \"entity.host.name: * mqace * \" to filter on the MQ/ACE server.\n\nOne you have specified the filter, you'll see that the infrastructure view is filtered to just a single server that matches your search.\n\nThere are many other types of queries that can be executed using the filter/search bar. For example, you can specify AND, OR, and NOT conditions. You can find detailed information on the lucene query language in the product documentation found here: lucene query language\n\nClear the filter at the top of the page by clicking on the X\n\nNext, flyover the tower that represents the Instana server. This tower is taller because there are more discovered entities running on it.\n\nYou'll notice that a number of components were automatically discovered and are instrumented for monitoring.\n\nNext, flyover the ACE/MQ tower.\n\nThis is the ACE and MQ server. You can see the MQ and ACE components along with a discovered JVM, and more.\n\nNext, click on the \"Comparison Table\" near the top of the page.\n\nThis table shows a sortable and searchable list of the Hosts that make up this environment. You can quickly find hosts consuming high CPU, high memory, or have poor health.\n\nIn addition, if you select where is says \"Hosts\", there is a dropdown list that allows you to see lists of JVMs, containers, etc.\n\nChange from \"Hosts\" to \"Docker Containers\" in the dropdown list and you'll see a complete list of containers and their utilization and health.\n\nSwitch back to the Map view by clicking on \"Map\" near the upper left corner.\n\nZoom in with the plus sign in the bottom right corner.\n\nYou'll notice that each tower is actually comprised of multiple pizza boxes. Each one represents an \"Entity\" such as an MQ Queue Manager or an ACE Integration Node.\n\nFlyover the ACE/MQ server again until you see a list of all discovered Entities. If you only see 1 entity, move your mouse to one of the corners of the tower. Once you see all of the entities, click your mouse. You'll see a dialog open\n\nUse the scroll bar to scroll down. You'll notice that you see each of the types of Entities that were discovered. Expand the MQ entity type and you'll see the Queue Manager that was discovered.\n\nIt is possible to click on either the \"Open Dashboard\" button or the links for the individual entities. If you clicked, you could navigate to either the Host operating system metrics or the specific middleware entity.\n\nClick on the Open Dashboard button and we'll examine the Host Agent dashboard.\n\nAfter you click on the button you'll see a screen that looks like this:\n\nYou can see fine grained metric data for the Host operating system. Most metrics are gathered at 1 second granularity. This can be very valuable in diagnosing problems. To see the 1 second metric data, let's shorten the time interval on the screen. Click on the time range dropdown in the upper right corner and select last minute. This will filter the data to the last minute of metric data.\n\nNow, click the Live button in the upper right corner. This will show you Live data as it is streaming into the Instana server in near-realtime.\n\nAfter examining the data, click the time range dropdown and select Last Hour to look at a more typical view within Instana.\n\nScroll down and explore the other metrics on the page.\n\nAs you scroll down the page, you'll notice a section on the left side of the screen that contains a list of Entity types that were discovered. This is the same list that you saw earlier on the Infrastructure view. By placing these links in context and leveraging the relationships that are discovered by Instana, it makes it easier to diagnose problems.\n\nExpand the IBM MQ Queue Manager section and select the link for the QM1@mqace queue manager\n\nYou will navigate to the dashboard for the MQ Queue Manager. Scroll down the page and examine the metrics. There are many tables that contain links that would allow you to drill into the listener, topics, queues, channels, and more. Let's focus on the Channels. Scroll down to the table labeled \"Channels\".\n\nClick on the blue text on the left to drill into the Channel. Examine the Channel metrics on the page.\n\nNext, look at the top of the screen. You'll notice that this is a breadcrumb that allows you to navigate back to where you were earlier in your navigation. It is also possible to use the back button in your browser.\n\nIf time permits at the end of the lab, you can explore some of the other elements within the MQ sensor or other middleware such as ACE.\n\nBefore we can investigate Applications within Instana, we need to create an Application Perspective. This section describes how to define the Application Perspective.\n\nApplication Perspectives allow you to group together a number of different services and endpoints into dashboard that shows the health and performance of a business application. In this section, you will create and Application Perspective for the Robot Shop application.\n\nOn the left hand navigation, select \"Applications\". You will see a screen open up that contains a list of all applications that are defined in the environment. Initially, this list maybe almost empty showing just All Services generic bucket.\n\nThe next thing you are going to do is define an application. You will see an \"Add\" button in the bottom right corner.\n\nClick the \"Add\" button\n\nA dialog will open with two options (one if Smart Alerts feature is not enabled yet on your server). We'll examine the \"Global Smart Alerts\" in the Administrative section of this lab. For now, click on the \"New Application Perspective\" button\n\nSwitch to the Advanced Mode in the upper right corner. Complete the definition to look like below.\n\nFirst, give the Application Perspective the name Robot Shop.\n\nAdd a filter, type in kubernetes and then select namespace. Then, click in the value field. You'll notice that when you click on it, the field is pre-populated with kubernetes namespaces that have applications being monitored. Select the robot-shop namespace.\n\nNext select All downstream services. This selection will allow the application perspective to limit the scope to all transactions within the robot-shop kubernetes namespace.\n\nScroll down further in the dialog and select to include All Calls.\n\nFinally, click the Create button to create the application perspective.\n\nWe can now repeat a similar process to the previous section to configure an Application Perspective for the Quote of the Day application.\n\nOn the left hand navigation, select \"Applications\".\n\nClick the \"Add\" button in the bottom right corner.\n\nA dialog will open with two options (one if Smart Alerts feature is not enabled yet on your server). We'll examine the \"Global Smart Alerts\" in the Administrative section of this lab. For now, click on the \"New Application Perspective\" button\n\nSwich to the Advanced Mode in the upper right corner. Then complete the definition to look like below.\n\nAs you add filters, you'll notice that Instana automatically populates the fields like the service name. As you add filters, notice that you need to add a combination of AND and OR conditions to achieve the results that you want.\n\nWhat this Application Perspective is doing is the following:\n\nWe are including the MQ Service by matching any service that contains the Queue Manager Name of QM1.\n\nWe're including any service that includes the name of our ACE Integration Server named BK1.\n\nWe're including any transactions that are in the qotd kubernetes namespace where the Quote of the Day application is installed. Using namespaces makes it very easy to build Application Perspectives for cloud native applications.\n\nFinally we added a filter to filter OUT any trace that has an endpoint name of GET /health. The GET /health requests are the readiness probes (heartbeating) that happens within kubernetes to ensure the pods are healthy. These transactions are not part of the application, so we want to exclude them.\n\nYou have now created an Application Perspective. In the next section, you'll explore the application (it can take few minutes before the data for application is populated).\n\nAfter creating the application, your screen should have automatically changed context to show the Application Perspective that you just defined.\n\nInitially, you probably won't see any metrics on the screen. In the upper right corner, click the \"Live\" button and within a short amount of time you should start to see metrics in the widgets.\n\nOn this page you can see the golden signals which include transaction volumes, the number of erroneous calls, and latency. You'll also see the top services that make up the application.\n\nYou'll notice a number of tabs across the top of the screen. Explore these tabs. In particular, let's take a look at the \"Dependencies\" tab.\n\nClick on the Dependencies tab.\n\nOn the dependencies tab, you'll see a full topology of the application services. This topology is discovered automatically. You can see transactions flowing between the different nodes in the topology. Most of these services are node.js based cloud-native services. There should be also be a node with a name that ends in BK1:EG2. BK1 is the ACE Integration Node and EG2 is the ACE Integration Server. The QM1 node in the topology is the MQ Queue Manager named \"QM1\".\n\nFly your mouse over the QM1 node. Flying over any node in the dependency graph will show you a summary of the traces going through that service. You'll see the percentage of calls that are erroneous and the latency of the calls.\n\nClick on the \"QM1\" node. Notice that there are 3 options that would allow you to navigate to the MQ dashboard, the transaction Flow within MQ, or analyze the transaction calls through MQ. For now, we'll skip this navigation, but we suggest you explore those options later.\n\nClick on \"Upstream/Downsteam\" near the top of the page. This will allow you to see a list of Upstream and Downstream services for the application.\n\nClick on \"Stack\" where you can view the Application, Kubernetes, and Infrastructure stack that makes up the application.\n\nAll of this contextual and relationship data helps you analyze and debug you applications to get to root cause as quickly as possible. In addition, Instana's built analytics uses this data to automatically group multiple related \"Events\" into a single \"Incident\" for diagnosis.\n\nClose the Stack dialog by either clicking on the Stack button or somewhere else on the background of the Instana GUI.\n\nClick on the Services tab\n\nYou will see a list of services that make up the application.\n\nScroll down on the page until you see the \"qotd-engraving\" service.\n\nClick on the qotd-engraving link on the left Column. The qotd-engraving service is the service that calls and ACE flow and then puts a message on the MQ queue. We want to explore this service in more detail.\n\nYou should see a page showing the transactional data filtered down to just the qotd-engraving service.\n\nClick on the \"Analyze Calls\" button to analyze the individual transactions that are executing within the \"qotd-engraving\" service.\n\nThis will take you to a screen showing all of the different types of calls taking place within the qotd-engraving service. At the top, there is a summary of all calls in terms of transaction rates, return codes, erroneous calls, and latency.\n\nOn the right side, click the arrow to expand the list of qotd-engraving \"POST /order\" calls. Instana is capturing 100% of the transactions so that you don't miss intermittent problems that might be occurring in the environment.\n\nSelect one of the requests\n\nYou are now looking at the tracing data for a single transaction. At the top of the screen, you will see a summary of the latency, sub-calls and timeline. On the right side of the screen, you'll see the details and stack trace.\n\nScroll down and you will see the service endpoint list\n\nFinally, scroll to the bottom of the screen and you will see a detailed call stack Calls. The call stack gives you the timing and sequence of the call going through the application.\n\nIf you select the text on the left or the timeline bar, the \"Details & Stack Trace\" context to the right of the page will change.\n\nExplore the different types of calls going through this transaction by selecting the individual call. When you select an entry, examine the detailed information on the right.\n\nYou should notice that different request types are color coded differently. Blue represents the HTTP requests going through an App Server or java process. Orange represents a database call. And green represents a messaging call (ACE and MQ).\n\nWhen you select the Node.js App Server requests, you'll see the StackTrace on the right hand side. Within the StackTrace, click one of the URLs.\n\nWhen you click on the link, Instana will decompile the code and show you the lines of code. The exact line of code that is executing will be highlighted in yellow.\n\nClick the X in the upper right corner to close the dialog.\n\nWhen you select the ACE portions of the call Stack (gen.supplychain, msgFlowTransaction, and postOrder) you will see key information including the flow name, Integration Node, Integration Server, IP address, and more on the right side of the screen.\n\nWhen you select the MQ portion of the call stack, you'll see key information related to the MQ environment on the right. The information includes the Queue Manager, Queue Name, and the message ID that was posted on the queue.\n\nScroll down to the very bottom on the right side of the screen and you will see a link named \"CP4I.DEMO.API.Q\". Click on the \"CP4I.DEMO.API.Q\" link and you will navigate to the Queue page of the MQ sensor for the CP4I.DEMO.API.Q queue. Instana places these links in context to make it easier to diagnose problems.\n\nEarlier, you explored the Queue Manager and the MQ Channels. You're now looking at the queue that is being used by this application. You'll notice key information like the oldest message on the queue, queue depth, input/output rates, and more.\n\nNext, let's take a look at Website and Mobile Application Monitoring. In this environment, Instana does not include any native mobile applications, however you should know that Instana can gather End User Monitoring (EUM) data from Mobile Applications too. For now, we'll investigate the website monitoring.\n\nUsing the left side navigation, select Websites & Mobile Apps\n\nYou will see a list of websites that are being monitored. In this environment, you'll see the Robot Shop application website. Click on the blue link for the Robot Shop website to drill down for more details.\n\nExplore the additional data available within the website monitoring by clicking on some of the other tabs.\n\nNext, explore the Filters that you see at the top of the screen.\n\nIn this environment, the filters will not be very interesting because there is only automated workload coming from a single location. But, usually, you can use this information to filter the web traffic down to specific browser types, OS's, geographic locations and key metadata tags. This can be very useful in identifying whether specific network locations, browser, or OS's are having performance problems. If you want to see typical EUM data, you can look at one of the IBM sales or Business Partner demo environments.\n\nAt the top of the screen, click on the Analyze Page Loads button\n\nYou will see a detailed list of the web requests grouped by URL path.\n\nSelect the Group icon next to one of the URL paths (robot-shop only has one). This will give you a page that is filtered to the transactions for just that single URL path. As with Tracing, Instana is capturing 100% of the web transactions.\n\nNext, select one of the requests.\n\nYou will see a detailed page showing the EUM data and more. At the top of the page, you'll notice that you can see the user that made the request. This sensitive data can be omitted by Instana if the customer desires. You'll also see the Browser version and operating system that was used to access the web page. Depending on the environment, you'll also see geolocation data for where the person accessed the application. In some cases the private IP addresses are not mapped and the User Location data will be empty.\n\nScroll down on the page and you'll see a detailed breakdown of the request including timings for the key page content.\n\nExpand one of the entries on the right by clicking the down arrow to view more details.\n\nWe are not going to do it for this lab, but if you click on the View Backend Trace button, you can investigate the backend trace data that you saw earlier in the lab.\n\nNext, we're going to investigate Instana's unbounded analytics. Navigate to the Analytics using the left side navigation.\n\nInitially, you will see a screen showing 100% of the Application Calls that are happening in the environment.\n\nSelect the dropdown at the top of the page labeled Applications / Calls to view other options. For example, you could analyze the traces, websites, mobile applications, or profiles. For now, close the dialog and we'll analyze the Application Calls\n\nOne of the key Instana capabilities is Unbounded Analytics. This allows you to apply ad-hoc queries to easily find the data you are looking for. On the screen, you'll see a couple of different ways that you can query/filter the metrics.\n\nOne the left side, you'll see a number of about of the box filters. Expand the dropdown arrows to see the options. Then, select one of the checkboxes to filter the data.\n\nNow, uncheck the checkbox to remove the filter.\n\nAnother option is to use the filter and group options at the top of the page. Let's try out an example. Let's say you want to find the slowest SQL statements in the environment. Let's try to implement a filter and group to accomplish that.\n\nSelect the Add Filter button at the top of the page. Then, select Call Type and select Database\n\nThis will filter the calls to just the database calls. But, the calls are not organized in a meaningful way. So, let's use the group option to group the statements.\n\nClick on the Add Group button. Then, type database in the filter box and select Statement\n\nThis will group all of the Database statements by unique SQL statements. You can then take these statements and sort them by latency, erroneous calls, etc.\n\nNow, let's explore one more key capability within Instana.\n\nIn the upper right corner of the screen, there is an icon of a chain link. Click on the link and a dialog will open. By clicking the Copy button, you can send a link to a team member. When they open the link, it will take them to a screen with the exact same context that you are looking at. This can be very valuable when collaborating with team members to diagnose a problem. Within the dialog, you'll see that there is a checkbox to Lock current time range. By locking the current time range, when the link it opened, it will take the person to a view with the exact same time range that you are looking at. Otherwise, they are taken to the most recent time range.\n\nThat completes the Explore section of the lab.\n\nIn this exercise lab have explored some of the key capabilities within Instana. You explored Kubernetes monitoring and the Infrastructure view. You also created two Application Perspectives for two different demo applications. You learned about website monitoring and the different types of End User Monitoring data that Instana can collect. Finally, you reviewed Instana unbounded analytics capabilities."
    }
}