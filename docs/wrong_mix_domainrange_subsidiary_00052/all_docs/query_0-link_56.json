{
    "id": "wrong_mix_domainrange_subsidiary_00052_0",
    "rank": 56,
    "data": {
        "url": "http://www.catb.org/~esr/hackerlore/sco-vs-ibm.html",
        "read_more_link": "",
        "language": "en",
        "title": "OSI Position Paper on the SCO-vs.-IBM Complaint",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://www.catb.org/~esr/hackerlore/timeline.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "McKusick Kirk Marshall",
            "Eric Raymond",
            "Rob Landley"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "The Open Source Initiative (OSI) is a 501(c)3 nonprofit educational association with offices in Palo Alto, California. OSI is one of the principal advocacy organizations of the open-source community, which is alleged in SCO/Caldera's complaint to have been beneficiary of tortious and illegal behavior by IBM.\n\nThe principal author of this position paper (Raymond) has been a Unix developer since 1982, is a technical specialist in systems programming technologies related to those at issue, and is a historian whose writings on the open-source community and Unix ([TNHD], [CATB], [TAOUP]) are widely considered authoritative both within the community and outside it. He has been since 1997 one of the leading theorists and (both in his individual capacity and as co-founder and first President of OSI) one of the principal spokespersons/ambassadors for the open-source community.\n\nWhile the authors are affiliated with the Linux community, our argument is also motivated by larger concerns. Unix, Linux, and the open-source movement are vital components of the Internet and the World Wide Web. SCO/Caldera's attempt to assert proprietary control of these technologies is an indirect but potent threat against the Internet and the culture that maintains it. What is at stake here is not just the disposition of a particular volume of computer code, but what amounts to a power grab against the future.\n\nThis document, originally proposed as a draft brief of amicus curiae, has been endorsed as an OSI position paper by OSI's Board of Directors. The Board has concluded on advice of counsel that OSI cannot seek amicus status in advance of pleadings. The option to seek amicus status at a future time remains open.\n\nThis document is an evolving work in progress. SCO/Caldera's complaint against IBM disparaged the work of thousands of individual open-source contributors. These contributors feel themselves personally and professionally wronged by SCO/Caldera's unfounded allegations. In the tradition of the open-source movement, hundreds of individuals are now sending in their patches to help inform and evolve the OSI's position.\n\nNote to persons who read the original Response paper: though the amended complaint has changed substantially (as we cover below) remarkably little in this paper had to be tweaked in order to cope with the changes in SCO's story. Most of the paragraphs we called out in the original version have different numbers but the same content. One substantive change is that because the case is now in Federal rather than state court, we can now request a finding in some general IP-law issues relevant to this case, including confirming the validity of the GPL.\n\nHistorical and technical background\n\nThe meaning of ‘Unix’\n\nThe falseness of SCO/Caldera's allegations is partly cloaked by the fact that their complaint uses the term “Unix” in three different ways.\n\nAmong technical people and computer programmers, “Unix” describes a family of computer operating systems with common design elements, all patterned on (but not necessarily derivative works of) the ancestral Unix invented at Bell Labs in 1969. As SCO/Caldera observes in its complaint, Unix operating systems dominate serious computing, and have for more than twenty years. There have been hundreds of different Unixes in this sense, exhibiting variations analogous to dialects within a language. Fortunately, only a handful of the principal dialects are relevant to this lawsuit.\n\nWhen we wish to be clear that this is the definition we are using, we will refer to “Unix-family” operating systems. Use of the term ‘Unix’ to describe any Unix-family operating system was common before SCO/Caldera's acquisition of the historical Unix codebase in 1995; AT&T's lawyers strove against it in vain as far back as the early 1980s. When we use the term ‘Unix’ without qualification elsewhere in this paper, this is the sense we intend.\n\nThe term “Unix” is sometimes also used (primarily by historians of computing) more strictly, to describe only those Unix-family operating systems which are derivative works of the original Bell Labs Unix. To avoid confusion, we shall call any operating system of this kind a “genetic Unix”.\n\nLegally, the term “Unix” has been since October 1993 a trademark of The Open Group[2], a technical standards organization, and describes any operating system (whether genetic-Unix or not) that has been verified to conform to the published Unix standard. We will refer to an operating system of this kind as a “trademark Unix”. The required attribution is “UNIX is a registered trademark of The Open Group”. [3] However, The Open Group's strict construction of the term “Unix” is more honored in the breach than the observance.\n\nNeither SCO/Caldera nor old SCO has ever owned the UNIX trademark. IBM neither requested nor required SCO's permission to call their AIX offering a Unix. That decision lies not with the adventitious owner of the historical Bell Labs source code, but with The Open Group.\n\nThe Linux operating system is Unix-family and generally referred to as a Unix, but is neither a genetic Unix nor a trademark Unix. Linux was independently created by Linus Torvalds in 1991[4], and most versions have not been put through the rather expensive process required to verify conformance with The Open Group standards.\n\nThe name is spelled either as ‘Unix’ or ’UNIX’; its inventors prefer the former.\n\nLinux and the advent of open-source programming\n\nSCO/Caldera's complaint cannot be understood without reference to a seismic shift now occurring in the software industry. The root of the shift lies in the approximate doubling of hardware capacity every eighteen months which has been the trend since the mid-1970s. This means that the typical complexity of software designed to fully utilize state-of-the-art hardware also doubles every eighteen months, escalating the difficulties of software engineering to previously unimagined levels.\n\nIn the mid-1990s it began to be understood that the traditional production models for software were running out of steam, increasingly unable to produce an acceptably low defect rate at these escalating complexity levels. There was much talk of a “software crisis” and attempts to resolve it through various attempts at process improvement.\n\nThese attempts at process improvement consisted largely of introducing more formality, rigor, centralization, and statistical monitoring into the software-development process. They had honorable precedents in the systematization of assembly-line manufacturing and industrial process control in the 20th century. But producing software is not like producing automobiles or soap flakes. The analogy to industrial process control turned out to be fundamentally misleading, and all these attempts failed, merely adding additional cost to the process without reliably reducing defect rates.\n\nRelief came from an unexpected quarter — from the loose-knit community of programmers and engineers associated with the Internet and the Unix operating system. Since the 1960s, the Internet and Unix hackers[5] had been pioneering a style of software engineering which reversed the premises of industrial software development.\n\nInstead of centralization in large programming teams, the Internet style used small distributed programming groups. Instead of process control and hierarchy, the Internet style used peer review and open standards. Most importantly, the Internet style abolished secrecy in favor of transparency and what came to be called “open source” code.\n\nEarly examples of this mode of development included Berkeley Unix from about 1977, the GNU project from 1985, and the X Consortium from 1983. All three flourished within the Unix community. When Linus Torvalds launched Linux in 1991 he was operating within a well-established tradition.\n\nTo the surprise of all concerned, after about 1997 it became apparent that this was the answer (or, at least, an important part of the answer) that the software industry had been looking for. Defect rates and costs associated with open-source software proved dramatically lower than for closed-source software[6]. The most skilled programmers flocked to the new mode. The explosive success of Linux, and IBM's adoption of it, is a consequence of the dynamism of open-source development. Caldera Systems International itself, the company now trading as SCO, was founded to ride the Linux wave.\n\nWe did not, however, use the term “seismic shift” casually. As with previous technological revolutions, one of the prompt effects has been what the economist Joseph Schumpeter famously called “creative destruction” — to wreck the business models of a great many companies attached to the legacy model of closed-source development.\n\nThe evolution of today's software industry is confusing to many people because it is proceeding in exactly the opposite direction from previous technological revolutions. Previously, the rationalization of production has been associated with movement away from decentralized cottage industry towards a factory system organized around concentrations of capital. This time, the move is away from the factory system, towards a new form of artisanship and individualism critically enabled by cheap PCs and the Internet. Thus, Linux.\n\nThis process panics companies like SCO/Caldera and Microsoft[7] who stand to lose everything if they fail to adapt, but it should not be viewed with alarm by any disinterested observer. What is actually happening is that the diseconomies of corporate scale are being competed out of software production — the market is seeking a new and more efficient equilibrium.\n\nSCO/Caldera's complaint is only a small piece of the fallout. There will be a lot more upheaval, and wailing and gnashing of teeth and waving of legal briefs, before this process fully resolves.\n\nThe Bell Labs codebase\n\nThere is a body of code and associated intellectual property (IP), originating in Bell Labs, which old SCO purchased from Novell in 1995. This IP had previously been owned by Unix Systems Laboratories (USL), and before that by AT&T. We will refer to this IP by its location of origin, as the Bell Labs code.\n\nThe contents of the historical Bell Labs codebase is well known; through most of its history, AT&T/USL/Novell tacitly ignored source license violations for non-commercial purposes, and many senior Unix programmers still possess bootleg copies of that source code. (The authors of this document could lay hands on several different releases without difficulty.) It is scarcely more difficult to obtain source copies of other major genetic Unixes such as AIX, HP-UX, and Solaris. The contents of these codebases, and the general pattern of copyrights and other intellectual-property claims in the source code, is therefore well known in the Unix community.\n\nUntil 19 May 2003, two full months after filing its complaint, SCO/Caldera and old SCO before it made the Version 5, Version 6, Version 7, 32V, and System III versions of the Unix source code available for free download on its website[8]. In fact, those sources are still available for entirely legal free download if you know where to look; we refrain from giving the location publicly only so that SCO's lawyers will not be able to harass the site with the odious and illegal threats they would otherwise undoubtedly bring to bear.\n\nIt is significant that SCO/Caldera has not asserted any direct IP claim over Linux on the basis of its ownership of the historical Bell Labs code. At best, ownership of the Bell Labs code could be construed to give SCO/Caldera certain proprietary rights with respect to genetic Unixes. Those rights are far more limited than SCO/Caldera would have one assume, a point which we will develop later in this position paper.\n\nRelationships among the Unix variants at issue\n\nHere is a schematic diagram of the relationships among the Unix variants at issue in this lawsuit:\n\nThis chart[9] shows the major Unix lineages at issue, indicating genetic relationships with arrows.\n\nVertical position on the chart indicates year of release. Horizontal position indicates which lineage the Unix belongs to. Though there are many Unix lineages not shown here, this chart covers all that are relevant to the issues raised in SCO/Caldera's complaint. We will briefly describe each lineage.\n\nAT&T lineage\n\nThese are the Unixes directly derived from the Bell Labs codebase. The AT&T lineage went through a succession of owners; first AT&T itself, then Unix Systems Laboratories (USL), then Novell, then old SCO, now SCO/Caldera.\n\nThe early releases in this lineage (Version 7, System III, System V releases 1 through 3, and ending with Release 4 in 1988) were developed at AT&T itself[10] and are collectively known as ‘AT&T Unix’.\n\nThe later releases are generally known as ‘UnixWare’ after the brand name applied to them at Unix Systems Labs and Novell[11]. UnixWare is the product old SCO acquired in 1995, which Caldera acquired along with the server division of old SCO in 2001 and sold alongside of its Linux distribution.\n\nAll Unixes in the AT&T lineage are genetic Unixes, trademark Unixes, and proprietary.\n\nAIX lineage\n\nAIX is IBM's own Unix, originally developed 1983-1985. Genetic Unix, trademark Unix, proprietary.\n\nSCO lineage\n\nSCO's own versions of Unix date back to 1979, originally under the name XENIX. After old SCO acquired the Bell Labs codebase in 1995 it sold two Unixes: OpenServer, which was an in-house port of the System V code, and the UnixWare descended from AT&T's own System V after Caldera acquired it from Novell in 1995. All SCO Unixes are genetic Unix, trademark Unix, and proprietary.\n\nBSD lineage\n\nBerkeley System Distribution (BSD) is is a series of Unix releases developed primarily at the University of California at Berkeley but incorporating code from hundreds of contributors at universities and research laboratories worldwide.\n\nBSD Unix is important for this lawsuit because its three modern variants are genetic Unix, but no proprietary rights to them can be claimed on the basis of ownership of the Bell Labs source code (for reasons we shall develop later in this position paper).\n\nThe BSDs are genetic Unixes, not trademark Unixes. They are open source.\n\nLinux lineage\n\nLaunched in Finland in 1991, developed on the Internet, contributed to by thousands of people. Neither genetic nor trademark Unix (‘Linux’ is a trademark of Linus Torvalds). Open source.\n\nNote that SCO OpenServer and SCO Unixware (at the end of the line of AT&T Unixes) are two different products of SCO. XENIX was old SCO's original Unix (cyan on the chart). After 1985 XENIX was replaced by SCO OpenServer, a SCO in-house port of System Vr4/386 (brown on the chart). UnixWare was what SCO picked up when it bought the AT&T codebase. For some years after the AT&T acquisition, SCO positioned OpenServer as their low-end and UnixWare as their high-end product. The dashed arrow between OpenServer and UnixWare 7 reflects the fact that the latter was a product designed to merge OpenServer 5 with UnixWare 2 (5 + 2 = 7).\n\nThe dashed red arrow from 4.2BSD to System V represents stolen property. AT&T, SCO/Caldera's predecessor in interest, took code from BSD Unix into System V, removing copyright notices and attributions in violation of the Berkeley license. We'll examine the consequences of this misappropriation later on.\n\nThe blue arrow from UnixWare 7 to AIX 5L represents code incorporated into AIX from UnixWare 7 during the Monterey project. SCO/Caldera alleges that IBM misappropriated this code and merged it into Linux, as represented by the dotted blue arrow.\n\nThe arrow from the open-source BSDs to Linux 2.0 represents sharing of some device drivers and system utilities.\n\nThere is another major variant, Solaris, not shown on the chart. Solaris enters the discussion because it is the leading enterprise-capable proprietary Unix; its features therefore provide a standard upon which to ground assertions about which technologies fall under that rubric. It derives from System V and BSD. As of mid-2003 it is still the dominant Unix in the enterprise market (sold in conjunction with server hardware by Sun Microsystems). Genetic Unix, trademark Unix, proprietary.\n\nCorporate history\n\nIn 1956, AT&T settled an antitrust action brought by the United States. Under the consent decree, AT&T's business was limited to “common carrier communications services.” Bell Laboratories was required to license its patents on reasonable and non-discriminatory terms.[12]\n\nThe consent decree or “Final Judgement” was still in full force when work on Unix began at AT&T's Bell Laboratories in 1969.\n\nOld SCO was founded in 1979 as a Unix porting and consulting company. The first Intel Unix port by SCO was in 1983.[13] [14] SCO bought and adapted for this purpose Microsoft's “Xenix”, originally launched in 1980.\n\nOn January 1, 1984, the Bell System was broken up. [15] The old regime of the “Final Judgement” had been overthrown by the “Modified Final Judgement”: AT&T could enter the software business. They did. That year, the corporation began to develop Unix as a commercial product.\n\nIn 1990, AT&T reorganized its business unit responsible for UNIX System V, the AT&T UNIX Software Operation, into a wholly-owned subsidiary, UNIX System Laboratories, Inc. (USL). [16] [17] The next year, AT&T sold a minority stake in USL to eleven selected companies. [18] [19] [20]\n\nLate in 1991, the Univel joint venture was formed between Novell and USL. [21] [22]\n\nIn 1993, Novell bought USL. [23] [24] USL and Univel became the Novell UNIX Systems Group. [25]\n\nIn October 1993, Novell transferred the UNIX trademark to X/Open (later to become The Open Group).[26] (Earlier versions of this document had cited the date incorrectly as 1994.)\n\nIn 1994, a group of Novell alumni formed Caldera Systems International with the backing of Novell's founder, Ray Noorda. Caldera was intended to be a Linux distributor, aiming at the business and enterprise market.\n\nIn 1995, Novell sold the UnixWare business to old SCO. [27] [28]\n\nIn 1998, old SCO, IBM, and Intel began cooperating on Project Monterey, a Unix port for the Intel Itanium, a 64-bit microprocessor. A detailed account of this cooperation is available[29]\n\nAlso in 1998, IBM ported its first application (DB2) to Linux. Late in 1999, IBM began to support Linux kernel development; we can specifically date this from when IBM joined the Trillian project on 10 August. That same month, IBM founded its Linux Technology Center.\n\nIn 2000, Caldera Systems International held an IPO as a Linux company.\n\nIn 2001, SCO split up. The rump of the company focused on its Tarantella product. The SCO brand, SCO OpenServer and the Bell Labs codebase were acquired by Caldera.\n\nIn 2002, Caldera began trading under the SCO name.\n\nIn March 2003, SCO filed its lawsuit.\n\nIn the remainder of this document, we will use the following terminology:\n\nCaldera Systems International\n\nCaldera before the 2001 acquisition of the SCO server division.\n\nold SCO\n\nSCO before the 2001 acquisition.\n\nSCO/Caldera\n\nThe merged company.\n\nSCO's history with open source\n\nCaldera Systems International, the corporate entity now trading as SCO, was founded as an open-source centered company by a group of former Novell executives who were enthusiastic about Linux. Its only product was a Linux distribution. Caldera Linux was not a market success, however. It became an also-ran in the commercial Linux distribution market dominated by Red Hat (a North Carolina corporation) and SuSE (a German import). In mid-2002 co-founder president and CEO Ransom Love was pushed out during the shakeup that accompanied Caldera's acquisition of old SCO's server division.\n\nOld SCO, prior to its acquisition by Caldera, did not produce its own Linux distribution, but became involved in open-source development between 1998 and 2000. It invested in Caldera and TurboLinux, bought out a popular on-line store called LinuxMall, and boasted of offering more open-source and Unix expertise than anyone else in the world.\n\nIn a press release at the time of the Project Monterey launch[30], Doug Michels (the co-founder of old SCO who remained at its head until Caldera Systems International acquired the brand in 2001) had this to say: “The whole idea of shared development has been ubiquitous in Unix for years. The Internet has magnified that and open source is bringing collaborative development to a new level.” He observed, correctly, that it would be important for Unix vendors to continue their embrace of the open-source community, most notably Linux. At that time, SCO got it.\n\nIn a web page from 2000 [31], (since removed from their site) old SCO repeated this theme: “The concept of collaborative development and shared source has been ubiquitous in the UNIX system industry from the beginning. Today, the Internet has magnified that trend dramatically and led to the exciting phenomenon that is Linux.”\n\nBetween the time Caldera acquired SCO in 2001 and early 2003, SCO/Caldera continued to trumpet its commitment to Linux and boast of its plans to merge leading-edge Linux technology into its UnixWare source code. This reflected the market reality that the UnixWare code base was generally perceived to be old, tired, and out of date.\n\nThe meaning of “enterprise scalability”\n\nSCO/Caldera uses the term “enterprise computing” and various other derivatives in its complaint, but fails to define it. It is a marketing term suggesting very high operational reliability. The term is generally held to encompass the following technologies:\n\nsymmetric multi-processing (SMP)\n\nThe ability to allocate work in a computer among multiple processor chips in such a way that all are as efficiently utilized as possible, leading to completion of programs in the shortest possible time.\n\njournaling file systems\n\nConstruction of an operating system's code for managing hard drives and other storage devices in such a way that data cannot be lost or garbled by power outages or most categories of hardware failure.\n\nlogical volume management (LVM)\n\nThe ability to make multiple physical disk storage devices appear to be a single large disk volume, incorporating redundant storage and error checking such that the failure of any one of the physical volumes still allows all the data to be recovered.\n\nnon-uniform memory access (NUMA)\n\nA method of configuring a cluster of microprocessors in a multiprocessing system so that they can share memory locally, improving performance and the ability of the system to be expanded.\n\nhot-swappable hardware\n\nThe capability to add and remove hardware while the system is running, without interrupting processing.\n\nsupport for large memory address spaces via 64-bit processors\n\nLarge database\n\nOther terms sometimes encountered include “transparent failover” and “high availability”. These features are largely consequences of the application of the technologies specified above, with hardware that permits a computer system to detect and compensate for internal errors.\n\nSolaris, the industry benchmark for a high-end enterprise-scalable Unix operating system, features all of these.\n\nSCO/Caldera misrepresents its own history and position\n\nSCO/Caldera's complaint is factually defective in that it implies claims about SCO/Caldera's business and technical capabilities that are untrue. It is, indeed, very cleverly crafted to deceive a reader without intimate knowledge of the technology and history of Unix; it gives false impressions by both the suppression of relevant facts, the ambiguous suggestion of falsehoods, and in a few instances by outright lying.\n\nSCO/Caldera's claim to have been a significant enterprise player is false\n\nSCO/Caldera's attempts to confuse the issues in this complaint begin early, in Paragraph 1.(c) where it asserts: “UNIX and SCO/UNIX are widely used in the corporate, or ‘enterprise’ computing environment.”\n\nWhile this claim is literally true, it is misleading in that it fails to distinguish between the market share of old SCO's own Unixes (SCO OpenServer and Unixware) and those of competitors such as Sun, Hewlett-Packard, and IBM. By failing to so distinguish, it conveys the impression that old SCO's market share in the enterprise segment was significant, thus magnifying the putative harm done by IBM's alleged misconduct.\n\nThe truth is otherwise. Old SCO never had significant enterprise market share either before or after its purchase of the Bell Labs codebase from Novell. Their strength has been in franchise operations including McDonald's, Burger King, Pizza Hut, and Ground Round, which involve lots of parallel small deployments with no individual site requiring enterprise technology.\n\nExamination of old SCO's 10Ks reveals that, even were we to assume that every dime of their revenue came from the enterprise market, their 2002 share could not have exceeded 3.1%[32]. This is at the level of statistical noise.\n\nIn fact, SCO/Caldera's own complaint concedes that its historical strength has been in low-end systems used by small businesses. The principal author did SCO Unix consulting in the early 1990s, configuring systems for a small-town police station and a dental practice; anyone familiar with the industry would recognize that these were entirely typical old SCO deployments. And SCO/Caldera's most recent 10K [33] states, in part “Our business is focused on serving the needs of small businesses, including replicated site franchisees of Fortune 1000 companies[34], to have reliable, cost effective Linux and Unix operating systems and software products to power computers running on Intel architecture.”\n\nConspicuously absent in SCO/Caldera's most recent mission statement is any talk of 16-way servers or enterprise data centers. In fact, SCO's history of non-performance in the enterprise market is not only consistent from long before the beginning of IBM's involvement with Linux in 1999-2000, it predates the 1991 origin of Linux itself. SCO/Caldera's claim that IBM's behavior with regard to improving Linux's enterprise scalability did it harm should be evaluated in the light of the failure of both incarnations of SCO, over more than a decade before that, to even seriously attempt to be competitive in the enterprise market.\n\nSCO/Caldera inflates its importance as an Intel Unix vendor\n\nIn paragraph 32 SCO/Caldera writes “Most of the primary UNIX vendors identified above did not attempt to develop a UNIX “flavor” to operate on an Intel-based processor chip set.”\n\nThis is at least more accurate than paragraph 23 of their original complaint, which read as follows: “Except for SCO, none of the primary UNIX vendors ever developed a UNIX ‘flavor’ to operate on an Intel-based processor chip set.”\n\nThe old version was flat-out false; the new is merely misleading. Sun Microsystems is a primary Unix vendor by anyone's definition, and their Solaris operating system was ported to the Intel 386 and sold on that platform. IBM's AIX was also ported to the 386 in 1987 and sold until 1995[35].\n\nBoth versions of the complaint misleadingly imply that Unix was not generally available on PCs other than from old SCO. But, in fact, AT&T Unix was ported to Intel chips by no fewer than six different software houses — and that's not counting “own brand” ports maintained by PC hardware vendors such as Dell.\n\nUp to 1994, when Linux made them irrelevant, the principal author maintained an on-line product comparison listing of all Intel Unixes known to him. The list of vendors from the final archival version [36] reads, in part:\n\nUnivel UnixWare Release 4.2 Consensys System V Release 4.2 UHC UnixWare Release 4.2 ESIX System V Release 4.0.4.1 Micro Station Technology SVr4 UNIX Microport System V Release 4.0 version 4 UHC Version 4.0.3.6 SCO Open Desktop 3.0 BSD/386 1.0 NEXTSTEP 3.1 Yggdrasil Linux/GNU/X Soft Landing Software\n\nThe author personally ran two of these — Microport and Yggdrasil — and a third not listed, which was the Dell own-brand port.\n\nAs far back as 1983, old SCO had already had serious competition in the 386 Unix market from Interactive Systems Corporation (later bought by Sun Microsystems).\n\nNot only was old SCO far from unique as an Intel Unix vendor, but SMP Unix implementations date as far back as 1985. The Sequent Corporation produced machines[37] featuring 2 to 30 80386 processors at that date. These machines ran DYNIX, a variant of Berkeley Unix.\n\nBetter yet, consider the following quote from a 1991 old SCO press release[38] (emphasis added):\n\nFor the benefit of the entire user base, as well as the industry as a whole, SCO encourages all UNIX System vendors for Intel processors to join SCO, USL, Intel, ISC and OSF in supporting the iBCS-2 standard for x86 applications.\n\nSCO's claim to have been unique in supporting Unix for PCs is therefore not merely false, it is a deliberate and egregious lie — not rendered less mendacious by the weasel-word ‘primary’ in its complaint.\n\nSCO/Caldera misrepresents the scope of its rights over Unix\n\nSCO/Caldera alleges (Paragraph 2): “ Through a series of corporate acquisitions, SCO presently owns all right, title and interest in and to UNIX and UnixWare operating system source code, software and sublicensing agreements, together with copyrights, additional licensing rights in and to UNIX and UnixWare, and claims against all parties breaching such agreements. Through agreements with UNIX vendors, SCO controls the right of all UNIX vendors to use and distribute UNIX. ”\n\nSCO/Caldera neglects to mention that those rights had been substantially impaired before its acquisition of the ancestral Bell Labs source code. There was a legal action in 1992-1993, in which Unix Systems Laboratories and Novell (SCO/Caldera's predecessors in interest) sued various parties including the University of California at Berkeley and Berkeley Systems Design, Inc. for alleged copyright infringement, trade secret disclosures, and trademark violations with regard to the release of substantial portions of the 4.4BSD operating system[39].\n\nThe suit was settled after AT&T's request for an injunction blocking distribution of BSD was denied in terms that made it clear the judge thought BSD likely to win its defense. The University of California then threatened to countersue over license violations by AT&T and USL. It seems that from as far back as before System V Release 4 in 1985, the historical Bell Labs codebase had been incorporating large amounts of software from the BSD sources. The University's cause of action lay in the fact that AT&T, USL and Novell had routinely violated the terms of the BSD license by removing license attributions and copyrights.\n\nThe exact terms of final settlement, and much of the judicial record, were sealed at Novell's insistence. The key provisions are, however, described in Twenty Years of Berkeley Unix: From AT&T-Owned to Freely Redistributable, [McKusick99]. The settlement itself was unsealed in November 2004 under the terms of the California Public Records Act (California Code § 6250-6270) and is on-line at Groklaw. Only three files out of eighteen thousand in the distribution were found to be the licit property of Novell (and removed). The rest were ruled to be freely redistributable, and continue to form the basis of the open-source BSD distributions today.\n\nTen years ago — at a time when Linux was in its infancy — the courts already found the contributions of other parties to what is now UnixWare to be so great, and Novell's proprietary entitlement in the code so small, that Novell's lawyers had to settle for a minor, face-saving gesture from the University of California or walk away with nothing at all.\n\nThis history is well-known in the open-source community, and helps explain why SCO/Caldera's claim that ownership of the historical Bell Labs code gives it substantial rights over other Unixes such as AIX is regarded among old Unix hands with near-universal disdain. Some of the court documents, including the 1993 ruling, are now available on the web [40].\n\nIf, as SCO/Caldera says, it inherited AT&T/USL/Novell's rights to Unix, it also inherited the res judicata that there are many sources of code and engineering experience in the Unix design tradition entirely independent of AT&T/USL/Novell's intellectual property. And that, seven years before IBM's behavior with respect to AIX and Linux became an issue, AT&T/USL/Novell's proprietary stake in at least one leading-edge Unix was already so diluted in comparison with the contributions it had received from elsewhere that said stake could scarcely be said to exist at all.\n\nSCO/Caldera would, for understandable reasons, prefer that the courts remain ignorant of the history, outcome, and implications of the BSD lawsuit. But, of course, it bears directly on SCO/Caldera's claim in Paragraph 91: “Rather, IBM is obligated not to open source AIX because it contains SCO's confidential and proprietary UNIX source code, derivative works, modifications and methods.”\n\nThe implied theory here is that “SCO's confidential and proprietary UNIX source code, derivative works, modifications and methods” encompasses the entirety, or at least a preponderance, of the AIX code, including those portions related to enterprise scalability issues; and that SCO/Caldera therefore may exercise ex post facto control, even for anti-competitive purposes, over IBM's use of Unix in its normal course of business.\n\nIn fact, SCO/Caldera's complaint relies on confusing two separate scopes of control. One: those rights entailed in SCO/Caldera's ownership of the SCO OpenServer codebase. Two: putative rights entailed in SCO's ownership of the historical Bell Labs source code (Unixware). (The original and first amended versions of the complaint confused both of these with a third scope, those rights that pertain to certain SCO shared libraries mentioned in paragraph 36 and following of the complaint, only to disappear from the exposition shortly afterwards. These mysterious libraries have now vanished from the Second Amended Complaint entirely.)\n\nSince IBM's AIX is well known to contain large portions of Berkeley code (towards which IBM has by all accounts met its license obligations), SCO/Caldera's theory is at best extremely dubious. In other words, to prove its right to relief SCO/Caldera will need to show that whatever code IBM gave to the open-source community was neither legally obtained by both IBM and old SCO from a common source nor independently developed.\n\nAnd, on top of all this, it now appears that SCO's claim to own the Unix intellectual property was a deliberate and conscious lie on the part of SCO's management. On 28 May 2003 Novell stated[41] that SCO owns neither the patents nor the copyrights to the Unix source code. A patent search verifies at least the former claim.\n\nIt is a matter of record that in 2002 SCO executives approached Novell attempting to acquire the copyrights which SCO later claimed to have been transferred in their previous asset purchase agreement. So, SCO not only does not hold blocking Unix copyrights, its present management knew that to be the case before filing its complaint.\n\n(2007 update: Judge Dale Kimball has ruled, in Novell's related suit against SCO, that the Unix copyrights were not in fact transferred by the asset purchase agreement.)\n\nFinally, SCO's claim that it controls the right of all UNIX vendors to use and distribute UNIX flies in the face of the many perpetual and irrevocable licenses that AT&T, Novell and SCO itself it has sold to IBM, Sun, Hewlett-Packard and other Unix vendors.\n\nSCO/Caldera's claim to own Unix scalability techniques is weak\n\nWe observed previously that substantial contributions from outside sources to the historical Bell Labs codebase actually date back to before System V Release 4 in 1985. But even if we were to stipulate SCO/Caldera's undiluted ownership of the entire Bell Labs code base, its claim to own the class of enterprise scalability techniques at issue in its complaint would be very weak.\n\nA major reason that the historical Bell Labs code base became nomadic among USL, Novell, and old SCO after 1990 is that it was already at that time senescent relative to newer Unixes like Solaris, Irix, HP-UX, Ultrix, and others. The Vax and 3B series minicomputers for which the late versions of the Bell Labs codebase were designed were years obsolete by 1995; the internal architecture of those variants of Unix is now primarily of historical interest. We noted previously that SCO/Caldera and old SCO made the “ancient Unix” Version 7 source code available for free, which rather disposes of the theory that the original Unix code had any residual IP value in the marketplace of today. (SCO belatedly terminated this offering on May 19th 2003, apparently realizing how badly it damaged the trade-secret claims they were making at the time and subsequently dropped.)\n\nFurthermore, as previously noted, many Unix developers possess copies of SVr1 through SVr4 versions of the historical Bell Labs source code, including some code that was associated with it but under separate license. We can therefore state that of the component technologies for enterprise scaling, the Bell Labs codebase includes a journaling file system (in the form of the VxFS Veritas journaling file system) and LVM (in the form of VxVM). But SMP for Intel processors only entered the line in 1995 with UnixWare 2. PCI hot-swapping came in only in 1998 with Unixware 7. Scaling to more than 4 processors did not arrive until 2005 with OpenServer 6.\n\nIronically, UnixWare did not get usable SMP on Intel until after Linux. The UnixWare implementation was unstable [42] until mid-1997; Linux got working SMP in 1996 with the release of 2.0[43].\n\nAs for 64-bit support, Linux had this in 1994, five years before IBM became involved in Linux development. Neither of SCO's products has this capability yet in 2006.\n\nIn fact, not one of the key enterprise-scalability technologies was present in the ancestral Unix code before UnixWare got a JFS in 1992. SCO's complaint alludes to this: in paragraphs 46 to 50 they observe that it required three years of development (1995-1998) to ‘harden’ UnixWare for enterprise use. On SCO's own representation, the Bell Labs minicomputer-centered codebase of 1989-1995 is hardly more relevant to today's enterprise scalability challenges on today's PCs than the inner workings of a WWII-era jeep would be to the design of this year's Formula One racing cars.\n\nSCO/Caldera's claim to own the scalability techniques certainly cannot be supported from the feature list of its own SCO OpenServer, a genetic Unix. Even the latest version[44] has no LVM, no NUMA, and no hot-swapping. That is, SCO/Caldera is alleging that IBM misappropriated from SCO technologies which do not appear in SCO's own product.\n\nSCO/Caldera ignores its own role in motivating the development it now decries\n\nSCO/Caldera charges (paragraph 80): “Unlike IBM, virtually none of these software developers and hobbyists had access to enterprise-scale equipment and testing facilities for Linux development.”\n\nIn making this claim, SCO/Caldera blithely ignores the existence of facilities such as the Open Source Development Lab[45], an organization funded by twenty-one companies including technology giants such as Intel, Hewlett-Packard, Cisco Systems, NEC, Dell, and Hitachi — and IBM. OSDL has lab facilities in Beaverton, Oregon, and Yokohama, Japan. OSDL opened its first lab in January 2001, four months before IBM's withdrawal from Project Monterey. From October 2000 to October 2002, one of its sponsors was Caldera Systems International!\n\nOSDL is explicitly dedicated to assisting projects aiming towards carrier-grade and data-center Linux. It has supported over a hundred projects, most directly concerned with Linux scalability, performance improvements, fail-over and precisely those technical areas in which SCO/Caldera alleges that Linux could have made no progress without the intervention of IBM.\n\nThe existence of OSDL demonstrates industry-wide interest from large hardware vendors in scalable Linux, sufficient to sustain development with or without IBM's participation. But there may be a more direct linkage.\n\nWhen OSDL spun up, IBM gained a choice: work with one small partner that lacks demonstrated expertise or focus on the enterprise market, or join a large consortium of industry heavyweights with man-centuries of relevant experience.\n\nThat seems just about enough time for an astute IBM strategist to conclude that old SCO was the less likely alternative to sustain a serious Linux development and support effort over time. To any technical person, SCO's own failure to develop expertise beyond its small-business roots seems a more plausible explanation for the switch to OSDL than some nefarious anti-SCO conspiracy by top IBM executives. To establish its right to relief, SCO/Caldera would have to show that switching horses to OSDL was not defensible as a normal business decision.\n\n(2007 note: Earlier this year OSDL dissolved and re-formed as the Linux Foundation.)\n\nBut the earlier role of Caldera in hoisting itself on its own petard was far more direct and less conjectural than this.\n\nSymmetric multiprocessing (SMP) takes an operating system from being able to manage a single processor to utilizing two. The steps from two to four, four to eight, and eight to sixteen are not trivial but are far less challenging by comparison. Thus, SMP was perhaps the single most significant barrier between the Linux of the early 1990s and what SCO/Caldera itself characterizes as enterprise scaling.\n\nAlan Cox (a key Linux developer generally considered Linus Torvalds's chief lieutenant) led the early work on symmetric multiprocessing in 1995. A web page[46], confirmed by a 1995 public newsgroup posting from an employee of Caldera[47] establishes that the dual-processor motherboard on which he performed the development was provided by none other than Caldera itself!\n\nThe timing is notable. Caldera began contributing directly to development of an enterprise-scalable Linux at around the same time old SCO acquired the historical Bell Labs codebase in 1995, five years before IBM became seriously involved in Linux development in 1999-2000.\n\nCaldera acquired the SCO brand in 2001. During the more than eighteen months between the cancellation of Project Monterey and the filing of the complaint, Caldera continued to garner revenues from the SMP-enabled kernel it distributed in SCO Linux.\n\nIf Darl McBride and complainants did not know at the time of the complaint that Caldera itself had played a lead role in the very development they accuse IBM of having unfairly and unlawfully pursued, they are incompetent. If they did know, their complaint appears to verge closely upon perjury.\n\nSCO/Caldera misrepresents the state of Linux now\n\nIn paragraph 85 of the original complaint, SCO/Caldera claimed: “For example, Linux is currently capable of coordinating the simultaneous performance of 4 computer processors. UNIX, on the other hand, commonly links 16 processors and can successfully link up to 32 processors for simultaneous operation.”\n\nNeither this claim or anything resembling it is in the amended complaints. This is because both halves are readily falsified from public information; Linux scales readily to 32 processors, and until June 2005 (two years after the filing of this lawsuit) SCO's version of Unix did not.\n\n32-processor SMP was already implemented under Linux in 2000.[48] 24-processor operation, three times the 8-processor limit of UnixWare, was demonstrated in 2000 on a Sun E10000[49].\n\nToday, SGI is shipping Altix 3000 cluster computers that run Linux on over 64 processors[50].\n\nSCO/Caldera grossly misrepresents the state of Linux before IBM\n\nIn paragraph 82, SCO alleges: “To make Linux of necessary quality for use by enterprise customers, it needed to be re-designed and upgraded to accommodate complex multi-processor functionality that has taken UNIX nearly 20 years to achieve. This re-design is not technologically feasible or even possible at the enterprise level without (a) a high degree of design coordination, (b) access to expensive and sophisticated design and testing equipment; (c) access to UNIX code and development methods; (d) UNIX architectural experience; and (e) a very significant financial investment. The contributions of IBM, which had access to UNIX System V Protected Materials and years of enterprise level experience, made possible this rapid redesign of Linux for enterprise use.”\n\nMost of SCO/Caldera's complaint (as exemplified in paragraph 82) turns on (a) representing pre-IBM Linux as a primitive makeshift being slapped together by garage-band amateurs. Their implied narrative is that (b) only the corporate intervention of IBM made Linux a competitive product, and that (c) IBM's intervention was in turn only efficacious due to the ineffable superiority of the primal Bell Labs code base.\n\nAll three of these assertions are not merely false, they are profoundly disrespectful to the many, many developers worldwide who labored with sweat and brilliance to craft Linux into a world-class operating system for eight years before IBM came on the scene.\n\nThese assertions depend on the presumption that the open-source community consists of amateurs and incompetents, incapable of coordinating to produce high-quality work. In fact, the Linux developers have consistently out-thought, out-imagined, and out-coded old SCO's and SCO/Caldera's — which is precisely why old SCO went into the Linux professional services business, why it added Linux application compatibility to OpenServer, and why SCO/Caldera now finds itself without a business model and reduced to suing the handiest pair of deep pockets.\n\nLet us take SCO/Caldera's pre-requisites in order:\n\n(1) a high degree of design coordination\n\nEarlier, we noted that the success of Linux has motivated a sweeping reappraisal of some of the central premises of software engineering. It is now generally accepted that a high degree of design coordination can be achieved within the decentralized structure of open-source and Linux development; this has been demonstrated repeatedly by open-source projects such as the Apache webserver, the Perl and Python scripting languages, and Linux itself.\n\nSCO/Caldera's implication that this is impossible is false and insulting. It is also dishonest. SCO/Caldera, and Caldera before it, participated in Linux development for eight years before this complaint and demonstrated understanding of the process through their actions (such as supplying Alan Cox with SMP hardware). They know better.\n\n(2) access to expensive and sophisticated design and testing equipment\n\nCaldera itself had a significant role in providing that access to Linux developers.\n\n(3) access to UNIX code and development methods\n\nSCO's original claim read “access to UNIX code, methods and concepts”. They have backed away from this, quite possibly because they learned from the first version of this response that access to Unix “methods and concepts” is general in the community from which Linux development springs, and that said access is through codebases not subject to SCO's proprietary control or IP rights. For more than thirty years there has been a flourishing technical literature describing Unix operating system architecture and concepts. UNIX system internals and architecture are routinely taught in university computer science courses. Indeed, old SCO's and SCO/Caldera's own free publication of the Version 7 source code gave many programmers licit access to the ancestral Unix code, methods, and concepts.\n\nTheir new claim is carefully crafted to imply that access to SCO's code was a necessary condition. Once again they ignore the existence of the Berkeley codebase and many other sources over which neither SCO nor its predecessors could assert proprietary rights.\n\n(4) UNIX architectural experience\n\nThe open-source community encompasses more man-centuries of Unix architectural experience than SCO/Caldera (or even the vastly larger IBM) could ever dream of hiring. A vast literature on Unix design and internals has been available for over a quarter century.\n\nA significant number of Linux developers (including the principal author) are old Unix hands whose experience stretches back to Unix's formative years in the 1970s and early 1980s. We read SCO/Caldera's animadversions not merely as an insult to us and our peers, but as a tendentious distortion of history.\n\n(5) a very significant financial investment\n\nWhile this might appear plausible to a layperson, and was true until relatively recently, it is no longer so. One of the characteristics of open-source development is that it is an inexpensive process. Not without costs; people still need to be fed and salaried. But PCs are cheap, and the personnel load of open-source development is spread across a wider range of organizations and user consortia than was the case when process secrecy required a high degree of centralization and formal management structure.\n\nPart of the reason SCO/Caldera is in distress is that the functional role it filled as a nexus of capital and management skills is near to being obsolete. Software development is simply outgrowing the need for such organizations. SCO/Caldera is on the wrong side of history.\n\nIn paragraph 97, SCO/Caldera continues: “The only way that the pathway is an ‘eight-lane highway’ for Linux to achieve the scalability, SMP support, fail-over capabilities and reliability of UNIX is by the improper extraction, use, and dissemination of the proprietary and confidential UNIX Software Code and libraries. Indeed, UNIX was able to achieve its status as the premiere operating system only after decades of hard work, beginning with the finest computer scientists at AT&T Bell Laboratories, plaintiff's predecessor in interest.”\n\nWe hope it is clear at this point just how meretricious this claim is. By wrapping itself in the mantle of Bell Labs, SCO/Caldera hopes to obscure the fact that its own non-Linux products do not in fact exhibit the enterprise-ready quality it accuses IBM of stealing, and never have. SCO/Caldera further attempts to confuse present-day claims arising from the Monterey project with claims putatively arising from the obsolete Bell Labs source code.\n\nWho owns Unix, anyway?\n\nThe issue of who owns Unix has always aroused passions of an intensity and nature difficult for strangers to the issue to understand. The drama here is not merely about money or the competing agendas of corporations, but about the Unix community's sense of ownership of its own work. That community, and that sense of ownership, is exceptionally powerful for reasons which bear materially on the matter of SCO/Caldera's complaint.\n\nUnix was born in 1969 at Bell Laboratories among computer science researchers. After 1975, much of its development was actually done by contributors outside Bell Labs, especially at UC Berkeley and elsewhere in academia. However, AT&T continued to formally own the results of that collective work. Indeed, they spent five years after 1983 in a largely fruitless quest to commercialize it as a product — a role which was played much more effectively by Sun Microsystems and other licensees, including old SCO and IBM.\n\nEven during the early days of Unix commercialization, the Unix code base was widely regarded as a commons worked by many hands. As time went on and Unix evolved, possession of an AT&T source license came to be seen as more a pro-forma gesture in the direction of history than a concession that AT&T's intellectual property still contributed a dominating part of the value. This was especially so after the Berkeley hackers added Internet capability to Unix around 1980.\n\nThus, the community of Unix hackers that had grown up around the pre-commercial releases never lost the conviction that, ethically, the Unix code belonged to them — the people who had the ideas and wrote the code — regardless of what the legal paperwork said. The outcome of the USL-vs.-Berkeley lawsuit in 1993, which severed the claims of AT&T and its successor Novell to the BSD source code, was universally regarded in the community as no more than simple and overdue justice.\n\nFrom 1975 to about 1995, therefore, the Unix vendors and the Unix hackers existed in a kind of half-symbiotic, half-antagonistic embrace. The Unix hackers (who needed the jobs vendors were providing to practice their craft) expressed their conviction of ownership by freely passing around bootlegged Unix sources among themselves for study and problem-solving. Vendors (who needed the hackers to fill job slots) looked the other way, routinely winking at behavior that was technically a massive theft of critical intellectual property as long as it stayed in the family and nobody's bottom line got hurt. But given this history, any attempt to make trade-secret claims based on the historical Bell Labs source code would be at best highly disingenuous (and in fact SCO, after making these claims in the original Complaint, dropped them from its amended Complaints).\n\nThis tacit truce began to disintegrate after 1990. The rise of the PC meant that the hackers had less need of massive corporate infrastructure and capital concentrations to support their art. The USL-vs.-Berkeley lawsuit was the first major confrontation that the hackers won. Under the settlement terms, the Berkeley source code — and the Unix tradition with it — achieved the autonomy in law that it had always deserved in the minds of Unix programmers.\n\nTwo related developments were going on at the same time between 1990 and 1995. One was the rise of open-source development, and the other was the senescence of the historical Bell Labs codebase. While corporate Unix vendors continued to pay formal obeisance to the Bell Labs codebase by buying Unix source code licenses from AT&T's successors in interest, the rise of Linux and the open-source BSDs made the disposition of the ancestral Unix sources increasingly seem a meaningless game played among lawyers, of little remaining interest to Unix hackers. The technical leading edge of the Unix tradition had moved elsewhere, notably to Linux. Nobody, neither the vendors nor the hackers, really needed the Bell Labs source code any more.\n\nIndeed, when the old-school Unix hackers who at that time ran old SCO purchased the ancestral Bell Labs code in 1995, it was widely viewed as little more than a bit of clever marketing, or even as a pure nostalgia trip by techies who had bought the ancestral source code just because they could. At that time (as we have noted in the section called “SCO's history with open source”') old SCO gave every evidence of understanding and endorsing Linux.\n\nBut SCO/Caldera is no longer run by Unix old hands. Their complaint, once again, has thrust the question of “who owns Unix” into the foreground of debate. This time around, the hacker community has corporate allies (IBM among them) who understand the new world of open source — and that it is to their own business advantage to respect the Unix hackers as the owners of their art.\n\nSCO/Caldera's complaint, in all its brazen mendacity, is the last gasp of proprietary Unix. We in the open-source community (and our allies) are more than competent to carry forward the Unix tradition we founded so many years ago. We pray that all assertions of exclusive corporate ownership over this tradition be given a swift and definitive end.\n\nPolicy implications and recommendations\n\nA judgment in favor of SCO/Caldera could do serious damage to the open-source community. SCO/Caldera's implication of wider claims could turn Linux into an intellectual-property minefield, with potential users and allies perpetually wary of being mugged by previously unasserted IP claims, and ever-more-outlandish theories of entitlement being propounded by parties with only the most tenuous relationship to anyone who ever wrote actual program code.\n\nOn behalf of the community that wrote most of today's Unix code, and whose claims to have done so were tacitly recognized by the impairment of AT&T's rights under the 1993 settlement, we protest that to allow this outcome would be a very grave injustice. We wrote our Unix and Linux code as a gift and an expression of art, to be enjoyed by our peers and used by others for all licit purposes both non-profit and for-profit. We did not write it to have it appropriated by men so dishonorable that after making profit from our gift for eight years they could turn around and insult our competence.\n\nDamage to the open-source community would matter, because we are both today's principal source of innovation in software and the guardians and maintainers of the open Internet. Our autonomy is everyone's bulwark against government and corporate control of the digital media that are increasingly central in political, commercial, and personal communications. Our creative energy is what perpetually renews and finds ever more exciting uses for computers and networks. The vigor of our culture today will translate into more possibilities for everyone tomorrow.\n\nOn behalf of Unix developers over the last thirty-five years, of today's Linux and open-source developers, and of all Internet users everywhere, we therefore express these hopes with respect to court findings:\n\nTo find against SCO/Caldera in its complaint against IBM, or for IBM on any motion for dismissal or summary judgment.\n\nTo ground the finding in terms which will foreclose any future claims by SCO/Caldera of proprietary control over technologies contributed to Linux.\n\nTo confirm that SCO/Caldera cannot re-litigate the USL/Novell-vs.-BSD action by stealth, and thus that SCO/Caldera's ownership of the ancestral Bell Labs source code gives it no authority or proprietary entitlement over the works of the open-source community and Unix developers at large.\n\nThat AT&T's successors in interest, having inherited the benefits that flowed from misappropriating BSD code into System V, are estopped from claiming proprietary rights in System V and derivatives.\n\nWe further suggest that SCO/Caldera's complaint is knowingly deceptive to a degree that recommends sanctions under the Utah and Federal Rule 11 of Civil Procedure.\n\nWe feel the facts of Unix history are sufficiently compelling and particular that the court would be justified in ruling as we recommend above without attempting to challenge and re-construct any of the legal theory of software intellectual property.\n\nSince the dispute has moved to Federal court, it is now within the court's purview to rule on more general issues of intellectual-property law as they pertain to this case. OSI pleads to the court to find as follows:\n\nTo find that claims of trade secrecy in software are incompatible with a routine business practice of selling the source code licenses to that software to educational institutions or for use as training materials. (Techniques commonly taught in classrooms cannot be considered secrets.)\n\nThat any software vendor, having partipated in an open-source commons and benefitted from the products thereof, is estopped from claiming proprietary rights that would prevent other participants from symmetrically collecting that same benefit. (If you drank from the well, you don't get to poison it.)\n\nThat the implication of the 1993 settlement is good; in cases of non-willful code contamination, removal of the infringing code is a sufficient remedy. (You cannot poison an entire project by getting a snippet of infringing code unknowingly accepted.)\n\nThat the GNU General Public License under which Linux is issued is in fact a valid license and does create binding legal obligations on those who accept its terms."
    }
}