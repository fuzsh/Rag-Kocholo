{
    "id": "correct_foundationPlace_00024_1",
    "rank": 74,
    "data": {
        "url": "https://www.linuxfoundation.jp/blog/2014/03/linux-kernel-developer-panel-preview-introductions-and-projects/",
        "read_more_link": "",
        "language": "en",
        "title": "Linux Kernel Developer Panel Preview: Introductions and Projects",
        "top_image": "https://www.linuxfoundation.jp/wp-content/uploads/2023/07/cropped-LF_Favicon-32x32.png",
        "meta_img": "https://www.linuxfoundation.jp/wp-content/uploads/2023/07/cropped-LF_Favicon-32x32.png",
        "images": [
            "https://www.linuxfoundation.jp/wp-content/uploads/2017/06/LF_logo_NEW_H_W.png",
            "https://www.linuxfoundation.jp/wp-content/uploads/flags/us.gif",
            "https://www.linuxfoundation.jp/sites/lcom/files/joomla/images/stories/41373/3427311514_3b85840a80_m.jpg",
            "https://www.linuxfoundation.jp/sites/lcom/files/joomla/images/stories/41373/jens-axboe-Facebook_copy.jpg",
            "https://www.linuxfoundation.jp/sites/lcom/files/joomla/images/stories/41373/Matthew-Garrett-Nebula_copy.jpg",
            "https://www.linuxfoundation.jp/sites/lcom/files/joomla/images/stories/41373/Mel-Gorman-SUSE.jpg",
            "https://www.linuxfoundation.jp/sites/lcom/files/joomla/images/stories/41373/greg-kroah-hartman.jpg",
            "https://www.linuxfoundation.jp/wp-content/uploads/gravatar/thumblf.png",
            "https://www.linuxfoundation.jp/wp-content/uploads/gravatar/thumblf.png",
            "https://www.linuxfoundation.jp/wp-content/uploads/flags/us.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "The Linux Foundation",
            "open standards",
            "open data",
            "Node.js",
            "www.facebook.com"
        ],
        "publish_date": "2014-03-17T21:00:00+00:00",
        "summary": "",
        "meta_description": "Unless you closely f...",
        "meta_lang": "ja",
        "meta_favicon": "https://www.linuxfoundation.jp/wp-content/uploads/2017/08/favicon.png",
        "meta_site_name": "The Linux Foundation",
        "canonical_link": "https://www.linuxfoundation.jp/blog/2014/03/linux-kernel-developer-panel-preview-introductions-and-projects/",
        "text": "Unless you closely follow the Linux kernel mailing list, it can be difficult to keep up with all of the latest kernel features and changes, especially as the pace and scale of development continues to rise. More than 1,300 developers from more than 200 companies contributed 12,127 patches to the 3.13 Linux kernel, released in January, according to LWN Editor Jon Corbet’s latest Linux weather forecast. And Linus Torvalds will soon release the 3.14 kernel, which will contain a whole new set of features and fixes.\n\nThe Linux kernel developer panel at Collaboration Summit in Napa, Calif. next week is our first opportunity this year to hear directly from Linux kernel developers about which issues and features are top-of-mind for the kernel community now and in the year ahead. Kernel developers Jens Axboe, Matthew Garrett, Mel Gorman, Greg Koah-Hartman, and Dave Chinner will take the stage for a technical discussion moderated by Jon Corbet. Here, the panelists have answered a few of Corbet’s preliminary questions to get the conversation started.\n\nJon Corbet: Who do you work for, why do they support your Linux kernel development, and what do they expect to get back from that investment?\n\nJens Axboe: I joined Facebook about two months ago. Facebook supports a lot of open source projects, not just the Linux kernel. They built their platform on top of open source technology, so they fully recognize the value in supporting and improving open source projects. They even take it a step further than most with the Open Compute Platform, opening up the hardware side as well. So I think it’s safe to say that they are serious about being open, and it has paid off economically as well.\n\nMatthew Garrett: I’m a security developer at Nebula, a company producing a private cloud solution. The Linux kernel is the foundation of our product, and the basis of many of the security technologies that we implement. Working upstream means we benefit from review by experts and avoids the need to spend time updating patches every time we want to move to a new kernel. It’s a little more initial effort, in the long term we end up with a better solution and less wasted developer time.\n\nMel Gorman: I work for in the R&D department within SUSE which is an independent business unit within The Attachmate Group. SUSE is a software and services provider whose principal product is SUSE Linux Enterprise (SLE) which is a GNU/Linux distribution. There are many projects that SUSE contributes to and one of those is the Linux kernel. Among our many internal projects, we develop and support a fork of the kernel with our source trees published publicly. Internal policy is that all feature development is first developed upstream and backported. There are exceptions to this policy but they are rare.\n\nOur work with the free software community is what our product and services are based on. We work on the various projects to implement solutions required by our customers, to remain competitive and sometimes because it’s just fun. The upstream policy for kernel development ensures that SLE features are widely reviewed and tested by both the company and the community and controls maintenance overhead. For example, in the event a bug is filed against the SLE kernel there is a chance that the same bug was encountered in the mainline kernel which reduces the time required to close the bug. Interoperability is one of the important benefits for our customers using SLE with many additional supporting products such as SUSE Manager. Merging features upstream first avoids introducing incompatibilities with other distributions.\n\nGreg Kroah-Hartman: The Linux Foundation. Because they are very nice and let me do development on a wide range of kernel subsystems and maintain the stable kernel releases. (In return they get) a constant stream of stable kernel releases.\n\nCorbet: What are you working on right now?\n\nJens Axboe: Right now I’m focused on blk-mq, the block multiqueue storage model. It was introduced in the 3.13 Linux kernel, but more work still remains. I’m busy improving the performance and extending the driver coverage, so we can hopefully end up with blk-mq being the one true storage interface for block drivers in the kernel.\n\nMatthew Garrett: Yet another iteration of kernel patches to support Secure Boot, integrating TPMs into our security policy, writing a library to allow runtime configuration of server firmware. And trying to make Linux run reasonably on this Mac.\n\nMel Gorman: The last feature I worked on was Automatic NUMA Balancing but while I do not consider the feature to be 100% complete I’m not developing it further right now. Right now I’m working on stabilizing the latest kernel that will be used for SLE, validating features, identifying any regressions that have been introduced since our last major release and resolving them. In some cases the regressions also exist in the mainline kernel in which case the bug will be fixed for the upstream, openSUSE and SLE kernels."
    }
}