{
    "id": "correct_subsidiary_00149_3",
    "rank": 71,
    "data": {
        "url": "https://docs.oracle.com/cd/B13224_01/caching.904/b10401/logs.htm",
        "read_more_link": "",
        "language": "en",
        "title": "Logging Events, Diagnostics, and Access Information",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/prodicon.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/bookicon.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/conticon.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/indxicon.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/larrow.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/rarrow.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/larrow.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/rarrow.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/oracle.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/prodicon.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/bookicon.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/conticon.gif",
            "https://docs.oracle.com/cd/B13224_01/dcommon/gifs/indxicon.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "This chapter explains how to use OracleAS Web Cache event and access logs.\n\nThis chapter contains these topics:\n\nEvaluating Event Logs\n\nDisplaying Diagnostic Information and Event Log Information in the HTML Body or Server-Response Header Field\n\nEvaluating Access Logs\n\nEvaluating Event Logs\n\nOracleAS Web Cache events and errors are stored in an event log . The event log can help you determine which documents or objects have been inserted into the cache. It can also identify listening port conflicts or startup and shutdown issues. By default, the event log has a file name of event_log and is stored in $ORACLE_HOME/webcache/logs on UNIX and ORACLE_HOME\\webcache\\logs on Windows.\n\nThis section contains the following topics:\n\nFormat of the Event Log File\n\nConfiguring Event Logs\n\nEvent Log Examples\n\nFormat of the Event Log File\n\nEvent messages are written using either of the following formats:\n\nThe default format displays a typical log message for each instance of an event. It displays the request ID and sequence number of the Oracle-ECID request header so that you can easily find the matching request detail line.\n\n[Timestamp][severity message_id][ecid: request_id, serial_number] Event_Log_ Message\n\nThe request detail format is displayed when you enable Include Request Details. The field [detail] indicates that the event is for a request. This format is logged the first time an event is logged for a request. In addition to the IP address, site name, and URL of the request, the ID and sequence number of the Oracle-ECID request header is logged. The Oracle-ECID request header is used to track requests.\n\n[Timestamp][module_name][detail][ecid: request_id, hop_number] [client: IP_ address] [host: site] [url: URL]\n\nTable 12-1 describes the fields for the default event log format.\n\nTable 12-1 Event Log Format\n\nFields Description\n\n[Timestamp]\n\nDate when the event occurred. Time is displayed in either local or Greenwich Mean Time.\n\n[severity message_id]\n\nSeverity level and message ID of event log message. Severity level can be one of the following:\n\ninternal error: An event that occurs due to a bug\n\nalert: An event that affects the entire OracleAS Web Cache instance and causes a lack of service in subsequent request/response transaction\n\nerror: An event that causes a lack of service only within the request/response transaction\n\nwarning: An event which is abnormal or potentially a sign of some problem\n\nnotification: An event that provides current status\n\ntrace: An event that indicates a trace activity\n\ndebug: An event that is a trace activity intended for Oracle Support Services and development\n\n[ecid: request_id, serial_number]\n\nRequest ID and hop-sequence number from the Oracle-ECID request header\n\nEvent_Log_Message\n\nEvent message\n\nTable 12-2 describes the fields for the request detail format.\n\nTable 12-2 Event Log Format for Request Details\n\nFields Description\n\nSee Also:\n\n\"Oracle-ECID Request-Header Field\" for a more detailed description of the Oracle-ECID request header\n\n\"Configuring Event Logs\" for further information about enabling the Include Request Details feature\n\nConfiguring Event Logs\n\nTo configure the event log settings:\n\nStart OracleAS Web Cache Manager.\n\nSee Also:\n\n\"Starting OracleAS Web Cache Manager\"\n\nIn the navigator frame, select Logging and Diagnostics > Event Logs.\n\nThe Event Logs page appears.\n\nSpecify cache-specific event log settings:\n\nFrom the Cache-Specific Event Log Configuration table, select a cache, and then click Edit Selected.\n\nThe Edit Cache-Specific Event Log Configuration dialog box appears.\n\nIn the Directory field, enter the directory in which to write event logs.\n\nThe default is $ORACLE_HOME/webcache/logs on UNIX and ORACLE_HOME\\webcache\\logs on Windows.\n\nIn the Buffering field, select Enabled to enable buffered logging or Disabled to disable buffered logging.\n\nWith buffered logging, OracleAS Web Cache writes to the event log after the buffer is full. The buffer size is set 2048 bytes. When the limit is reached, OracleAS Web Cache writes buffered events to the event log file.\n\nOracle Corporation recommends disabling buffering when you need to see the event log results immediately, such as when you are debugging OracleAS Web Cache.\n\nIf buffering is enabled, set the frequency at which buffered events are written to the event log file in the Flush Interval field.\n\nThe default is 10 seconds. When the interval is reached, OracleAS Web Cache writes buffered events to the event log file. Even if the buffer is not full, the event log is updated at least every 10 seconds. Oracle Corporation recommends not changing the default unless you need to lower the interval to see results more frequently.\n\nFrom the Verbosity list, select the needed level of detail for the event log. The levels are described in Table 12-3.\n\nTable 12-3 Verbosity Levels\n\nLevel Description\n\nClick Submit.\n\nSet the global event log settings:\n\nFrom the Global Event Log Configuration table, click Edit.\n\nThe Edit Global Event Log Configuration dialog box appears.\n\nIn the File Name field, enter a name for the event log file.\n\nThe default file name is event_log.\n\nFrom the Time Style list, select either LOCAL or GMT to modify the time stamp style associated with entries in the event log file.\n\nIn Include Request Details, select Yes to enable the logging of request details or No to disable logging of requests.\n\nOracle Corporation recommends selecting No if either of the following conditions apply:\n\nYou are concerned about the performance impact of event log entries for request details\n\nYou are running OracleAS Web Cache in a standalone environment without Oracle HTTP Server\n\nSee Also:\n\n\"Format of the Event Log File\" for further information about how request details are logged\n\nAppendix C for information about running OracleAS Web Cache in a standalone environment\n\nIn the Rollover Policy section, select Weekly, Daily, Hourly, or Never to specify how often you want OracleAS Web Cache to save current log information to event_log_file.yyyymmdd and write new log information to the current event log file.\n\nTable 12-4 describes additional configuration instructions for Weekly, Daily, and Hourly.\n\nTable 12-4 Configuring Weekly, Daily and Hourly Rollover Policies\n\nPolicy To configure:\n\nWeekly\n\nSelect a day of the week.\n\nUse the Time fields to enter the hour and minutes.\n\nFrom the Time Style list, select either Local or GMT.\n\nDaily\n\nFrom the Rollover times - each day list, select a time. If the time you require does not exist, use the Time fields to enter the hour and minutes.\n\nFrom the Time Style list, select either Local or GMT.\n\nHourly\n\nFrom the Rollover times - minutes past the hour list, select a time. If the time you require does not exist, use the Minutes past the hour field to enter the number of minutes, and then click Add.\n\nFrom the Time Style list, select either Local or GMT.\n\nIf you have a high-volume site, create a daily or hourly policy.\n\nSee Also:\n\n\"Rolling Over Event and Access Logs\" for instructions on immediately rolling over log files\n\nClick Submit.\n\nApply changes and restart OracleAS Web Cache:\n\nIn the OracleAS Web Cache Manager main window, choose Apply Changes.\n\nIn the Cache Operations page, choose Restart to restart OracleAS Web Cache.\n\nEvent Log Examples\n\nThis section contains the following event log examples:\n\nExample: Event Log with Startup Entries\n\nExample: Event Log with Unsuccessful Startup Entries\n\nExample: Event Log with Shutdown Entries\n\nExample: Event Log with Cache Miss and Cache Hit Entries\n\nExample: Event Log with an Invalidation Entry\n\nExample: Event Log with Invalidation Request Errors\n\nExample: Event Log with ESI Parsing Errors\n\nExample: Event Log with ESI Processing Errors\n\nExample: Event Log with Startup Entries\n\nThe following shows an event log excerpt with successful startup entries:\n\n[25/Jun/2003:19:08:52 +0000] [notification 9612] [ecid: -] OracleAS Web Cache version number: 9.0.4 [25/Jun/2003:19:08:52 +0000] [notification 9403] [ecid: -] Maximum number of file/socket descriptors set to 950. [25/Jun/2003:19:08:52 +0000] [notification 13002] [ecid: -] Maximum allowed incoming connections are 700 [25/Jun/2003:20:44:37 +0000] [notification 12209] [ecid: -] A 1 node cluster successfully initialized [25/Jun/2003:19:08:52 +0000] [notification 9608] [ecid: -] The cache server process started successfully.\n\nExample: Event Log with Unsuccessful Startup Entries\n\nThe following shows an event log excerpt with unsuccessful startup events. OracleAS Web Cache is unable to listen on port 7777, because it is already in use. This can occur if OracleAS Web Cache is already running and listening on that port or another application is using that port.\n\n[25/Jun/2003:19:12:40 +0000] [notification 9612] [ecid: -] OracleAS Web Cache version number: 9.0.4 [25/Jun/2003:19:12:40 +0000] [notification 9403] [ecid: -] Maximum number of file/socket descriptors set to 950. [25/Jun/2003:19:12:40 +0000] [notification 13002] [ecid: -] Maximum allowed incoming connections are 700 [25/Jun/2003:19:12:40 +0000] [alert 13305] [ecid: -] failed to assign port 7777, bind() error = Address already in use [25/Jun/2003:19:12:40 +0000] [alert 9707] [ecid: -] Failed to start the server. [25/Jun/2003:19:12:40 +0000] [alert 9609] [ecid: -] The server process could not initialize. [25/Jun/2003:19:12:40 +0000] [notification 9610] [ecid: -] The server is exiting.\n\nExample: Event Log with Shutdown Entries\n\nThe following shows an event log excerpt with typical shutdown entries:\n\n[25/Jun/2003:19:09:49 +0000] [notification 9703] [ecid: -] Stop Issued. The program will shut down after all accepted requests are served, or a timeout occurs. [25/Jun/2003:19:09:49 +0000] [notification 9610] [ecid: -] The server is exiting.\n\nExample: Event Log with Cache Miss and Cache Hit Entries\n\nThe following shows an event log excerpt containing events for a cache-miss request:\n\n[25/Jun/2003:19:46:26 +0000] [detail] [ecid: 20910180667,0] [client: 130.35.44.78] [host: www.company.com:80] [url: /index.html] [25/Jun/2003:19:46:26 +0000] [trace 11331] [ecid: 20910180667,0] The host request header matches configured site www.company.com:80. [25/Jun/2003:19:46:26 +0000] [trace 11351] [ecid: 20910180667,0] The complete site name is: www.company.com:80 [25/Jun/2003:19:46:26 +0000] [trace 11414] [ecid: 20910180667,0] The initial cache key is composed: /www.company.com:80/index.html . [25/Jun/2003:19:46:26 +0000] [trace 11304] [ecid: 20910180667,0] Cache miss request. [25/Jun/2003:19:46:26 +0000] [trace 11224] [ecid: 20910180667,0] Site www.company.com:80 matches site-to-server mapping www.company.com:80. [25/Jun/2003:19:46:26 +0000] [trace 11227] [ecid: 20910180667,0] Request is routed to origin server hhayashi-sun:7778 (id=0) using load balancing for site www.company.com:80. [25/Jun/2003:19:46:27 +0000] [trace 11403] [ecid: 20910180667,0] begin cacheability decision for following URL www.company.com:80/index.html [25/Jun/2003:19:46:27 +0000] [trace 11407] [ecid: 20910180667,0] URL matches caching rule \\.html?$. [25/Jun/2003:19:46:27 +0000] [trace 11446] [ecid: 20910180667,0] URL which will be cached is: www.company.com:80/index.html [25/Jun/2003:19:46:27 +0000] [trace 11415] [ecid: 20910180667,0] Final cache key is composed: /www.company.com:80/index.html . [25/Jun/2003:19:46:27 +0000] [trace 11088] [ecid: 20910180667,0] The following URL is now in the cache: www.company.com:80/index.html\n\nThe following shows an event log excerpt containing events for a subsequent cache-hit request:\n\n[25/Jun/2003:19:46:58 +0000] [detail] [ecid: 20910213770,0] [client: 130.35.44.78] [host: www.company.com:80] [url: /index.html] [25/Jun/2003:19:46:58 +0000] [trace 11331] [ecid: 20910213770,0] Host request header matches configured site www.company.com:80. [25/Jun/2003:19:46:58 +0000] [trace 11351] [ecid: 20910213770,0] The completed site name is: www.company.com:80 [25/Jun/2003:19:46:58 +0000] [trace 11414] [ecid: 20910213770,0] Initial cache key is composed: /www.company.com:80/index.html . [25/Jun/2003:19:46:58 +0000] [trace 11415] [ecid: 20910213770,0] Final cache key is composed: /www.company.com:80/index.html . [25/Jun/2003:19:46:58 +0000] [trace 11338] [ecid: 20910213770,0] URL is in the cache. [25/Jun/2003:19:46:58 +0000] [trace 11344] [ecid: 20910213770,0] Returning a freshly cached document.\n\nExample: Event Log with an Invalidation Entry\n\nThe following shows an event log excerpt with an event associated with an invalidation request for the removal of document cache.htm.\n\n[13/Dec/2002:19:26:46 +0000] [notification 11706][ecid: 21085932167,0] 10 objects (s) matching prefix '/cache/' are invalidated. [13/Dec/2002:19:26:46 +0000] [notification 11748] [ecid: 21085932167,0] Invalidation with INFO 'removing 15k document' has returned with status ' SUCCESS'; number of documents invalidated: '10'.\n\nExample: Event Log with Invalidation Request Errors\n\nThe following shows an event log excerpt with an XML invalidation request error. In this example, OracleAS Web Cache is unable to parse the request.\n\n[13/Dec/2002:19:37:36 +0000] [alert 13109] [ecid: 21086599201,0] XML parsing error in N/A. Error code 210: LPX-00210: expected '=' instead of 'H' [13/Dec/2002:19:37:36 +0000] [error 13112] [ecid: 21086599201,0] XML parsing failed. Error Code: 210 [13/Dec/2002:19:37:36 +0000] [error 11716] [ecid: 21086599201,0] Invalidation XML message cannot be parsed.\n\nExample: Event Log with ESI Parsing Errors\n\nThe following shows an event log excerpt with ESI parsing errors that indicate a problem with the src attribute and variable syntax:\n\n[16/Jan/2003:01:59:48 +0000] [detail] [ecid: 19734744942,0] [client: 127.0.0.1] [host: www.company.com:80] [url: /cgi-bin/esi-headers.sh?err1.htm] [16/Jan/2003:01:59:48 +0000] [error 12086] [ecid: 19734744942,0] ESI syntax error. Unrecognized keyword src is at line 3. [16/Jan/2003:01:59:48 +0000] [warning 11064] [ecid: 19734744942,0] ESI document www.company.com:80/cgi-bin/esi-headers.sh?err1.htm parsing error ... [16/Jan/2003:02:11:57 +0000] [detail] [ecid: 19735486051,0] [client: 127.0.0.1] [host: www.company.com] [url: /cgi-bin/esi-headers.sh?err1.htm] [16/Jan/2003:02:11:57 +0000] [error 12095] [ecid: 19735486051,0] ESI syntax error. A variable requires a key at line 3. [16/Jan/2003:02:11:57 +0000] [warning 11064] [ecid: 19735486051,0] ESI document www.company.com:80/cgi-bin/esi-headers.sh?err1.htm parsing error\n\nExample: Event Log with ESI Processing Errors\n\nThe following shows an event log excerpt with ESI processing errors that indicate an error fetching an ESI fragment named a.html and an unknown fragment for an undefined site:\n\n[16/Jan/2003:02:02:37 +0000] [detail] [ecid: 19734914560,0] [client: 127.0.0.1] [host: www.company.com:80] [url: /cgi-bin/esi-headers.sh?err1.htm] [16/Jan/2003:02:02:37 +0000] [warning 12005] [ecid: 19734914560,0] HTTP Client Error 4xx exception in ESI template www.company.com:80/cgi-bin/esi-headers.sh?err1.htm, fragment www.company.com:80/cgi-bin/a.html .... [16/Jan/2003:02:03:38 +0000] [detail] [ecid: 19734980113,0] [client: 127.0.0.1] [host: -] [url: /cgi-bin/esi-headers.sh?err1.htm] [16/Jan/2003:02:03:38 +0000] [warning 11295] [ecid: 19734980113,0] OracleAS Web Cache failed in DNS lookup for host www.company2.com:80. [16/Jan/2003:02:03:38 +0000] [warning 12003] [ecid: 19734980113,0] No connection exception in ESI template www.company.com:80/cgi-bin/esi-headers.sh?err1.htm, fragment www.company2.com:80/a.html\n\nDisplaying Diagnostic Information and Event Log Information in the HTML Body or Server-Response Header Field\n\nBy default, OracleAS Web Cache adds diagnostics information to the Server-response header field:\n\nServer: OracleAS/version Server_header_from_origin_server OracleAS-Web-Cache/version (diagnostic_information)\n\nFor diagnostics purposes, it can be useful to also display this information in the HTML response body of a document. Once enabled, you simply append a string to the URL of the document into the browser to see the diagnostic information string embedded in the response body. In addition to diagnostics information, you can optionally display event log information, with a verbosity level of TRACE, in the HTML response.\n\nTo configure where to display diagnostic information:\n\nIn the navigator frame, select Logging and Diagnostics > Diagnostics.\n\nThe Diagnostics page appears.\n\nFrom the Cache-Specific Page Body Diagnostics table, select a cache, and then click Enable to display diagnostic information in the HTML response body or Disable to disable the display of diagnostic information in the HTML response body.\n\nTo set diagnostic settings for the HTML response body:\n\nClick Edit.\n\nThe Edit Global Page Body Diagnostics Configuration dialog box displays.\n\nIn the URL Flag field, enter the string to append to the URL of the document.\n\nBy default, the string is set to +wcdebug.\n\nIn the Display Event Log Entries for Request field, select Yes to display diagnostic information and TRACE event log entries in the HTML response body, or select No to only display diagnostic information.\n\nClick Submit.\n\nTo enable or disable diagnostic settings in the Server response header, from the Global Server Header Diagnostics table, click Enable or Disable.\n\nEvaluating Access Logs\n\nOracleAS Web Cache generates an access log that contains information about the HTTP requests sent to OracleAS Web Cache. By default, the access log has a file name of access_log and is stored in $ORACLE_HOME/webcache/logs on UNIX and ORACLE_HOME\\webcache\\logs on Windows.\n\nThis section contains the following topics:\n\nFormat of the Access Log Files\n\nConfiguring Access Logs\n\nAnalyzing an Access Log File\n\nAccess Log Examples\n\nFormat of the Access Log Files\n\nYou can configure the content of the access log files by defining the fields to appear for each HTTP request event. These fields are based on the Extended LogFile Format (XLF). By default, OracleAS Web Cache provides support the following log formats:\n\nCommon LogFile Format (CLF)\n\nThis format is the default format applied to access logs. This format is appropriate for most configurations.\n\nThe CLF format provides support for the following fields:\n\nc-ip\n\nx-log-id\n\nx-auth-id\n\nx-clf-date\n\nx-req-line\n\nsc-status\n\nbytes\n\nCombined Format\n\nThe combined format provides support for the CLF fields and the following additional fields:\n\ncs(Referer)\n\ncs(User-Agent)\n\nSelect this format when you need to determine what kind of browser is sending the request, and where the browser was visiting before the request was forwarded to OracleAS Web Cache.\n\nWeb Cache Log Format (WCLF)\n\nThis format provides support for the following fields intended for end-user performance monitoring features:\n\nx-req-type\n\nx-date-start\n\nx-time-start\n\nc-ip\n\ns-ip\n\nx-auth-id\n\ncs(Host)\n\ncs-method\n\ncs-uri\n\nx-protocol\n\nsc-status\n\nbytes\n\ncs-bytes\n\nx-cache\n\ntime-taken\n\nr-time-taken\n\nx-time-delay\n\nx-os-timeout\n\nx-ecid\n\nx-cookie(ORACLE_SMP_CHRONOS_ST)\n\nx-cookie(ORACLE_SMP_CHRONOS_LT)\n\nx-cookie(ORACLE_SMP_CHRONOS_GL)\n\ncs(Referer)\n\ncs(User-Agent)\n\nx-esi-info\n\nIf the default formats are not suitable for your configuration, you can specify the fields that you require. Table 12-5 describes the supported fields. Fields prefixed with x or r are proprietary to OracleAS Web Cache.\n\nTable 12-5 Access Log Fields\n\nField Description\n\nbytes\n\nContent length of the request\n\nc-ip\n\nIP address of the browser\n\ncached\n\nInteger that specifies cache status. Cache status is reported as one of the following:\n\n0 specifies a cache miss. Equivalent to M, U, G, and N output of x-cache field.\n\n1 specifies a cache hit of a stale document. Equivalent to S output of x-cache field.\n\n2 specifies a cache hit. Equivalent to H output of x-cache field.\n\ncs(header_name)\n\nHTTP request header sent from the browser\n\nSee Also: \"cs(header_name) and sc(header_name) Access Log Fields\"\n\ncs-bytes\n\nBytes received from the browser\n\ncs-method\n\nBrowser-to-OracleAS Web Cache HTTP request method\n\ncs-uri\n\nBrowser-to-OracleAS Web Cache URI\n\ncs-uri-query\n\nBrowser-to-OracleAS Web Cache query portion of URI, omitting the stem\n\ncs-uri_stem\n\nBrowser-to-OracleAS Web Cache stem portion of URI, omitting the query\n\ndate\n\nDate the transaction completed, in the following format:\n\ndd/Mon/yyyy\n\nr-ip\n\nIP address and port number of origin server. For a cache cluster, this field displays the IP and port number of a peer cache in the cache cluster. The information is displayed in the following format:\n\nIP_address:port\n\nr-time-taken\n\nTime, in seconds (including microseconds), that OracleAS Web Cache spent communicating with the origin server or peer cache. The time is the duration between the following two points of time:\n\nThe time immediately before OracleAS Web Cache sent the first byte of the request to the origin server or peer cache.\n\nThe time immediately after receiving the last byte of the response from the origin server or peer cache.\n\nThis field is particularly helpful in providing time information for End-User Performance Monitoring.\n\ns-ip\n\nIP address of OracleAS Web Cache computer\n\nsc(header_name)\n\nHTTP response header sent from OracleAS Web Cache to the browser\n\nSee Also: \"cs(header_name) and sc(header_name) Access Log Fields\"\n\nsc-status\n\nOracleAS Web Cache-to-browser HTTP status code:\n\n1xx range messages are informational\n\n2xx range messages indicate success\n\n3xx range messages indicate redirection, that is, further action must be taken to complete the request\n\n4xx range messages indicate a client error\n\n5xx range messages indicate a OracleAS Web Cache error\n\nSee Also: http://www.ietf.org/rfc/rfc2616.txt for further information about HTTP status codes\n\ntime\n\nTime at which the response from OracleAS Web Cache completed. The time is displayed in the following format:\n\nhh:mm:ss\n\ntime-taken\n\nAmount of time taken, in seconds (including microseconds), for the transaction to complete\n\nx-auth-id\n\nUser name of a basic HTTP authentication request\n\nx-cache\n\nCache status. Cache status is reported as one of the following:\n\nH specifies a cache hit\n\nS specifies a cache hit of a stale document\n\nU specifies a cache update of a stale document\n\nG specifies a cache update of a document that was marked for removal but still physically resides in the cache\n\nM specifies a cacheable cache miss\n\nN specifies a non-cacheable cache miss\n\nx-cache-detail\n\nDiagnostic information, in the following format:\n\n{ESI_processing_type}{cache_request_type}\n\n[;max-age=expiration_time[+removal_time];age=document_age]\n\nESI_processing_type can be one of the following:\n\nT specifies that the document is an ESI template\n\nF specifies that the document is an ESI fragment\n\nEmpty specifies that the response does not require ESI processing\n\ncache_request_type can be one of the following:\n\nH specifies a cache hit\n\nS specifies a cache hit of a stale document\n\nU specifies a cache update of a stale document\n\nG specifies a cache update of a document that was marked for removal but still physically resides in the cache\n\nM specifies a cacheable cache miss\n\nN specifies a non-cacheable cache miss\n\nmax_age specifies the time, in seconds, to expire the document, and optionally, the time, in seconds, to remove the document from the cache after the expiration time. max_age does not appear if the cache_request_type is N.\n\nage shows how long, in seconds, the document has been in the cache. age does not appear if the document is non-cacheable.\n\nExample: H;max-age=60+30;age=50\n\nH means that this request resulted in cache hit\n\nmax-age=60+30 means that the document is to expire in 60 seconds from population and to be removed from the cache 30 seconds from the expiration. This provides a total of 90 seconds from population.\n\nage=50 means that 50 seconds have passed since population of the cache, meaning there is 10 seconds to expiration and 40 seconds to removal\n\nx-cache-key\n\nCache key value, in the following format:\n\n\"cache_key\"\n\nx-clf-date\n\nDate that the response from OracleAS Web Cache completed, in the following format:\n\ndd/Mon/yyyy:hh:mm:ss [+GMT]\n\nx-cluster\n\nSingle character that specifies the status of a cache cluster. The character is reported as one of the following:\n\nT specifies a request to a cache cluster member\n\nF specifies a request from a cache cluster member\n\nO specifies a request for owned content\n\nD specifies a request for on-demand content\n\nx-cookie(cookie_name)\n\nCookie value from browser request.\n\nx-date-start\n\nDate before OracleAS Web Cache received the first byte of the request, in the following format:\n\nyyyy-mm-dd\n\nx-date-end\n\nDate when OracleAS Web Cache sent the last byte of the response, in the following format:\n\nyyyy-mm-dd\n\nx-ecid\n\nID of the specified in Oracle-ECID request header, in the following format:\n\n\"ID, sequence_number\"\n\nSee Also: \"Oracle-ECID Request-Header Field\" for further information about the Oracle-ECID request header\n\nx-esi-info\n\nESI fragment log message from the log element of <esi:environment> or <esi:include> tags. It uses the following format:\n\n\"ESI_log_message\"\n\nThe log message only displays for requested ESI fragments in the access_log_file.fragment file. When a request ESI fragment is not configured with the log element, this field displays as a hyphen (-)\n\nx-log-id\n\nLogin user name of the client. OracleAS Web Cache is unable to obtain the value for this field. Therefore, OracleAS Web Cache displays a hyphen (-) in the output when this field is set.\n\nx-os-name\n\nOrigin server or cache cluster member that OracleAS Web Cache is forwarding the request, in the following format:\n\nhost:port\n\nx-os-timeout\n\nSingle character that specifies if the origin server timed out on a request. The character is reported as one of the following:\n\n0 specifies that the origin server did not timeout\n\n1 specifies that the origin server did timeout\n\nAn output of 1 can indicate a problem with the origin server itself.\n\nx-protocol\n\nProtocol and version from browser request, in the following format:\n\nprotocol/version\n\nx-req-line\n\nRequest line, in the following format:\n\n\"HTTP_request_method URI protocol/version\"\n\nExample: \"GET /cache.htm HTTP/1.1\"\n\nx-req-type\n\nRequest type. Request type is reported as one of the following:\n\nB specifies that the request is from the browser\n\nC specifies that the request is from another cache cluster member\n\nH specifies that the request is from another cache cluster or an OracleAS Web Cache that is not a member of the current cache cluster\n\nF specifies that the request is for an ESI fragment\n\nx-time-delay\n\nTime, in seconds (including microseconds), that OracleAS Web Cache spent communicating with the origin server or peer cache. The time is the duration between the following two points of time:\n\nThe time immediately before OracleAS Web Cache received the first byte of the request\n\nThe time immediately before OracleAS Web Cache sent the first byte of the request to the origin server or peer cache.\n\nThis field is particularly helpful in providing time information for End-User Performance Monitoring.\n\nx-time-end\n\nTime that OracleAS Web Cache sent the last byte of the response, in the following format:\n\nhh:mm:ss:ssssss\n\nx-time-handshake\n\nThe difference between the time the browser initiates a new connection and the time at which OracleAS Web Cache receives the first byte of the HTTP request.\n\nNote: Select this field only if instructed by Oracle Support Services.\n\nx-time-reqrecvlatency\n\nThe difference between the time at which OracleAS Web Cache receives the first and last byte of the HTTP request. This field indicates the time in reading the browser requests.\n\nNote: Select this field only if instructed by Oracle Support Services.\n\nx-time-reqsendlatency\n\nThe difference between the time at which OracleAS Web Cache sends the first and last byte of the HTTP request to the origin server. This field indicates the time taken in sending the request to the origin server.\n\nNote: Select this field only if instructed by Oracle Support Services.\n\nx-time-resprecvlatency\n\nThe difference between the time at which OracleAS Web Cache receives the first and last byte of the HTTP response from the origin server. This field indicates the time taken in receiving the response from the origin server.\n\nNote: Select this field only if instructed by Oracle Support Services.\n\nx-time-respsendlatency\n\nThe difference between the time at which OracleAS Web Cache sends the first and last byte of the HTTP response to the browser. This field indicates the time taken in sending the response to the client.\n\nNote: Select this field only if instructed by Oracle Support Services.\n\nx-time-reqblocked\n\nThe difference between when a request was blocked and unblocked because of garbage collection. If a request has already been sent to the origin server by OracleAS Web Cache to update an existing document, OracleAS Web Cache blocks all subsequent requests.\n\nNote: Select this field only if instructed by Oracle Support Services.\n\nx-time-reqqueued\n\nThe difference between when a request is queued and dequeued for the origin server. This field indicates the time a request spends in OracleAS Web Cache backend queue for an origin server (due to the maximum origin server capacity being reached) before the request is sent to the origin server for processing.\n\nNote: Select this field only if instructed by Oracle Support Services.\n\nx-time-start\n\nTime before OracleAS Web Cache received the first byte of the request, in the following format:\n\nhh:mm:ss:ssssss\n\ncs(header_name) and sc(header_name) Access Log Fields\n\nTable 12-6 lists examples of HTTP/1.1 headers that can be used for the cs(header_name) and sc(header_name) fields. This table lists only some of the possible headers. It is not an exhaustive list.\n\nTable 12-6 Examples of HTTP/1.1 Header Fields\n\ncs(header_name) Field sc(header_name) Field\n\nAccept\n\nCache-Control\n\nAuthorization\n\nContent-Encoding\n\nConnection\n\nContent-Language\n\nDate\n\nContent-Length\n\nHost\n\nContent-Type\n\nReferer\n\nDate\n\nCache-Control\n\nETag\n\nContent-Encoding\n\nExpires\n\nContent-Language\n\nLast-Modified\n\nContent-Length\n\nPragma\n\nContent-Type\n\nServer\n\nIf-None-Match\n\nTransfer-Encoding\n\nIf-Modified-Since\n\nVia\n\nLast-Modified\n\nPragma\n\nRange\n\nTE\n\nUser-Agent\n\nVia\n\nTable 12-7 lists examples of cookie-related headers that can be used for the cs(header_name) and sc(header_name) fields.\n\nTable 12-7 Supported Cookie-Related Header Fields\n\ncs(header_name) Field sc(header_name) Field\n\nCookie\n\nSet-Cookie\n\nTable 12-8 lists examples of OracleAS Web Cache headers that can be used for the cs(header_name) and sc(header_name) fields.\n\nTable 12-8 Supported OracleAS Web Cache Header Fields\n\ncs(header_name) Field sc(header_name) Field\n\nSurrogate-Capability\n\nSurrogate-Control\n\nConfiguring Access Logs\n\nTo establish access log configuration settings:\n\nStart OracleAS Web Cache Manager.\n\nSee Also:\n\n\"Starting OracleAS Web Cache Manager\"\n\nIn the navigator frame, select Logging and Diagnostics > Access Logs.\n\nThe Access Logs page appears.\n\nSpecify cache-specific access log settings:\n\nFrom the Cache-Specific Access Log Configuration table, select a cache, and then click Edit Selected.\n\nThe Edit Cache-Specific Access Log Configuration dialog box appears.\n\nIn the Directory field, enter the directory in which to write access logs.\n\nThe default is $ORACLE_HOME/webcache/logs on UNIX and ORACLE_HOME\\webcache\\logs on Windows.\n\nIn the Enabled field, select Yes to enable logging, or No to disable logging.\n\nIn the Buffering field, select Enabled to enable buffered logging or Disabled to disable buffered logging.\n\nWith buffered logging, OracleAS Web Cache writes to the access log after the buffer is full. The buffer size is set 2048 bytes. When the limit is reached, OracleAS Web Cache writes buffered events to the access log file.\n\nOracle Corporation recommends disabling buffering when you need to see the access log results immediately.\n\nIn the Flush Interval field, set the frequency at which buffered information is written to the access log file.\n\nThe default is 10 seconds. When the interval is reached, OracleAS Web Cache writes buffered information to the access log file. Even if the buffer is not full, the access log is updated at least every 10 seconds. Oracle Corporation recommends not changing the default, unless you need to lower the interval to see results more frequently.\n\nClick Submit.\n\nSpecify site-specific log settings:\n\nFrom the Site-Specific Access Log Configuration table, click Add.\n\nThe Edit/Add Site Specific Access Log Configuration dialog box appears.\n\nFrom the For Site list, select the Web site for which to specify access log settings.\n\nIn the File Name field, enter a name for the access log file.\n\nThe default file name is access_log.\n\nIn the Enabled field, select Yes to enable logging for the site or No to disable logging for the site.\n\nSite-specific logging only takes effect if logging is enabled for the cache. If you select Yes, ensure that Yes is also selected for the cache in Step 3c.\n\nIn the ESI Fragment Requests field, select Log to log the ESI fragment log messages from the log element of <esi:environment> or <esi:include> in the access_log_file.fragment file.\n\nIf the x-esi-info field is selected, select Log to log the events to the access_log_file.fragment file. If the x-esi-info field is not selected, select Don't Log. The x-esi-info field is automatically selected if the Format Style is WCLF.\n\nFrom the Format Style list, select an access log format.\n\nFrom the Rollover Policy list, select a rollover policy to specify how often you want to change the frequency at which OracleAS Web Cache saves current log information to access_log_file.yyyymmdd and writes new log information to the current access log file.\n\nFor high-volume sites, select a policy with a high frequency.\n\nClick Submit.\n\nIf the CLF, Combined, and WCLF formats are not suitable for your environment, create a log format that is:\n\nFrom the User-Defined Log Formats table, click Add.\n\nThe Edit/Add User-Defined Access Log Format dialog box displays.\n\nIn the Format Name field, enter a unique name for the format.\n\nFrom the Separator list, select the separator to use for separating access log fields.\n\nIn Print XLF Directive field, select Yes to include XLF directive information at the top of the access log or No to not include directive information in the access log.\n\nDirective information typically consists of version and date information. For example:\n\n#Version: 1.0\n\n#Date: 12-Dec-2002 00:00:00\n\n#Fields: c-ip x-auth-id x-clf-date cs(Host x-req-line sc-status bytes\n\nIn the XLF Fields section, select an access log field name from the Field name list.\n\nIf you selected field cs(header_name), sc(header_name), or x-cookie(cookie_name), then enter the header or cookie name in the Header/Cookie name field.\n\nClick Add.\n\nPerform Steps e and f for each format you want in the access log, and then use the Move Up and Move Down buttons to order the fields. The order in which fields are entered determines the order in which the fields are logged.\n\nClick Submit.\n\nOptionally, modify or create rollover policies:\n\nSelect an existing policy and click Edit Selected to modify and existing rollover policy, or click Add to create a new policy.\n\nThe Edit/Add Access Log Rollover Policy dialog box appears.\n\nIn the Rollover Policy Name field, enter the a unique name for the rollover policy.\n\nIn Rollover Policy section, select Weekly, Daily, Hourly, or Never to specify how often you want OracleAS Web Cache to save current log information to access_log_file.yyyymmdd and write new log information to the current access log file.\n\nTable 12-9 describes additional configuration instructions for Weekly, Daily, and Hourly.\n\nTable 12-9 Configuring Weekly, Daily and Hourly Rollover Policies\n\nPolicy To configure:\n\nWeekly\n\nSelect a day of the week.\n\nUse the Time fields to enter the hour and minutes.\n\nFrom the Time Style list, select either Local or GMT.\n\nDaily\n\nFrom the Rollover times - each day list, select a time. If the time you require does not exist, use the Time fields to enter the hour and minutes, and then click Add.\n\nFrom the Time Style list, select either Local or GMT.\n\nHourly\n\nFrom the Rollover times - minutes past the hour list, select a time. If the time you require does not exist, use the Minutes past the hour field to enter the number of minutes, and then click Add.\n\nFrom the Time Style list, select either Local or GMT.\n\nIf you have a high-volume site, create a daily or hourly policy.\n\nSee Also:\n\n\"Rolling Over Event and Access Logs\" for instructions on immediately rolling over log files\n\nClick Submit.\n\nApply changes and restart OracleAS Web Cache:\n\nIn the OracleAS Web Cache Manager main window, choose Apply Changes.\n\nIn the Cache Operations page, choose Restart to restart OracleAS Web Cache.\n\nAnalyzing an Access Log File\n\nThe following code shows an excerpt of an access log file:\n\n10.10.150.35 - - [19/Jul/2003:10:27:42 -0500] \"GET /~user/personal.htm HTTP/1.1\" 200 2438 10.10.150.35 - - [19/Jul/2003:10:27:54 -0500] \"GET /~user/personal.htm?UserName=Bob HTTP/1.1\" 200 2438 10.10.150.35 - - [19/Jul/2003:10:47:30 -0500] \"GET /~user/count.sh HTTP/1.1\" 403 289 10.10.150.35 - - [19/Jul/2003:10:47:34 -0500] \"GET /~user/sbin/count.sh HTTP/1.1\" 200 321\n\nIn the first line of the output, the fields have the following meaning:\n\n10.10.150.35 is the browser's IP address (c-ip)\n\n[19/Jul/2003:10:27:42 -0500] is the date ([x-clf-date])\n\n\"GET /~user/personal.htm HTTP/1.1\" is the request line (\"x-req-line\")\n\n200 is the HTTP status code (sc-status)\n\n2438 is the size of the document sent (bytes)\n\nAccess Log Examples\n\nThis section contains the following access log examples:\n\nExample: Access Log with Reload Entries\n\nExample: Access Log with Status Code 404 Entry\n\nExample: Access Log in Combined Format\n\nExample: Access Log with Site Information\n\nExample: Access Log with ESI Diagnostic Information\n\nExample: Access Log with ESI Log Information\n\nExcept where noted otherwise, the access log examples use the CLF format:\n\nc-ip x-log-id x-auth-id x-clf-date x-req-line sc-status bytes\n\nExample: Access Log with Reload Entries\n\nThe following shows an access log excerpt in which there are two Web browser reloads, followed by two shift reloads, and two more reloads:\n\n10.10.150.35 - - [19/Nov/2002:11:04:24 -0500] \"GET /cache.htm HTTP/1.1\" 200 250 10.10.150.35 - - [19/Nov/2002:11:04:26 -0500] \"GET /cache.htm HTTP/1.1\" 200 250 10.10.150.35 - - [19/Nov/2002:11:29:24 -0500] \"GET /cache.htm HTTP/1.1\" 304 0 10.10.150.35 - - [19/Nov/2002:11:29:25 -0500] \"GET /cache.htm HTTP/1.1\" 304 0 10.10.150.35 - - [19/Nov/2002:11:29:30 -0500] \"GET /cache.htm HTTP/1.1\" 200 250 10.10.150.35 - - [19/Nov/2002:11:29:35 -0500] \"GET /cache.htm HTTP/1.1\" 200 250\n\nThe third and forth entries return an HTTP status code of 304, indicating that document has not been modified and does not need to be returned again.\n\nExample: Access Log with Status Code 404 Entry\n\nThe following shows an access log excerpt in which OracleAS Web Cache cannot find any objects matching the requested URL /ows-img/chalk.jpg. This error is indicated by HTTP status code 404.\n\n10.10.150.35 - - [19/Nov/2002:10:49:44 -0500] \"GET /pls/coe/find_via_post HTTP/1.1\" 200 1119 10.10.150.35 - - [19/Nov/2002:10:49:44 -0500] \"GET /ows-img/chalk.jpg HTTP/1.1\" 404 284\n\nExample: Access Log in Combined Format\n\nThe following shows an access log excerpt in which the combined format is specified:\n\nc-ip x-log-id x-auth-id x-clf-date x-req-line sc-status bytes cs(Referer) cs(User-Agent) 148.87.1.180 - - [25/Jun/2003:20:09:47 +0000] \"GET /manual/sections.html HTTP/1.1\" 200 -1 \"http://www.company.com:80/manual/mod/directive-dict.html#Syntax\" \"Mozilla/4.78 [ja] (Win98; U)\" 148.87.1.180 - - [25/Jun/2003:20:09:50 +0000] \"GET /manual/mod/core.html HTTP/1.1\" 200 -1 \"http://www.company.com:80/manual/sections.html\" \"Mozilla/4.78 [ja] (Win98; U)\" 148.87.1.180 - - [25/Jun/2003:20:10:06 +0000] \"GET / HTTP/1.1\" 200 -1 - \"Mozilla/4.78 [ja] (Win98; U)\" 148.87.1.180 - - [25/Jun/2003:20:10:14 +0000] \"GET /manual/LICENSE HTTP/1.1\" 200 -1 \"http://www.company.com:80/manual/index.html\" \"Mozilla/4.78 [ja] (Win98; U)\"\n\nExample: Access Log with Site Information\n\nThe following shows an access log excerpt in which the following fields are specified:\n\nc-ip x-auth-id x-clf-date cs(Host) x-req-line sc-status bytes\n\ncs(Host) displays the output of Host request-header field, which specifies the site information. In this example, requests are sent to OracleAS Web Cache for site www.company.com:80.\n\n148.87.1.180 - [25/Jun/2003:20:05:51 +0000] \"www.company.com:80\" \"GET / HTTP/1.1\" 200 -1 148.87.1.180 - [25/Jun/2003:20:05:56 +0000] \"www.company.com:80\" \"GET /manual/index.html HTTP/1.1\" 200 -1 148.87.1.180 - [25/Jun/2003:20:05:59 +0000] \"www.company.com:80\" \"GET /manual/upgrading_to_1_3.html HTTP/1.1\" 200 -1 148.87.1.180 - [25/Jun/2003:20:06:02 +0000] \"www.company2.com:80\" \"GET /manual/mod/mod_dir.html HTTP/1.1\" 200 -1 148.87.1.180 - [25/Jun/2003:20:06:05 +0000] \"www.company2.com:80\" \"GET /manual/mod/directive-dict.html HTTP/1.1\" 200 -1\n\nExample: Access Log with ESI Diagnostic Information\n\nThe following shows an access log excerpt in which the following fields are specified:\n\nc-ip x-clf-date x-req-line sc-status bytes x-cache-detail\n\nx-cache-detail displays diagnostic information. In the following example:\n\nT means that this request is for an ESI template\n\nH means that this request resulted in cache hit\n\nmax-age=10+15 means that the document is to expire in 10 seconds from population and to be removed from the cache 15 seconds from the expiration. This provides a total of 25 seconds from population.\n\nage=0 means that 0 seconds have passed since population of the cache, meaning there is 10 seconds to expiration and 15 seconds to removal\n\n[16/Jan/2003:02:35:37 +0000] \"GET /cgi-bin/esi-headers.sh?err1.htm HTTP/1.0\" 200 42 TM;max-age=10+15;age=0\n\nExample: Access Log with ESI Log Information\n\nThe following shows an access log excerpt in which the following fields are specified:\n\nc-ip x-clf-date x-req-line sc-status bytes x-esi-info\n\nx-esi-info displays log information from the log element of <esi:environment> or <esi:include> tags."
    }
}