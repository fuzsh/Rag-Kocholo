{
    "id": "correct_subsidiary_00149_3",
    "rank": 10,
    "data": {
        "url": "https://docs.oracle.com/en/cloud/saas/transportation/24b/otmol/properties/glog/business.property.htm",
        "read_more_link": "",
        "language": "en",
        "title": "glog.business Properties",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/en/cloud/saas/transportation/24b/otmol/assets/images/feedback.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-03-05T19:06:30+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Property\n\nNew in Version\n\nDescription\n\nglog.business.action.changeEquipmentGroupCompatibilityCheck\n\n20B\n\nThis determines if the \"Change Equipment Group\" action should check the constraints for the order release, the location, and the itinerary leg. When enabled, OTM will check the constraints. This is off by default.\n\nglog.business.action.shipment.rerateredrive.ignoreOperationalDates\n\n19B\n\nThis property impacts redriving upstream and downstream shipments.\n\nWhen true (the default), the Rerate and Redrive action will allow theÂ upstream and downstream shipments the freedom to redrive regardless of the operational dates (they will be completely ignored).\n\nWhen false, the action honors the Operational Late Delivery of upstream shipments and the Operational Early Pickup of downstream shipments (when redriving upstream or downstream shipments).\n\nglog.business.autoassign.pushObjectDomain\n\nÂ\n\nThe logic for auto assign rules impersonates the domain of the object being created, if it is available, when obtaining the list of auto assign rules to run. Values can be set to True or False.\n\nDefault: True\n\nWhen False, any rules visible to the logged-in user will be used as opposed to the domain of the object. (Setting this property to False matches the functionality prior to version 5.5.)\n\nglog.business.buildShipmentOnPrimaryLeg.sortItineraryBasedOnNumOfLegs\n\n23A\n\nWhen this property is set to true, the Build Buy Shipment on Primary Leg action will sort the itineraries based on the number of legs in ascending order, and return the first solution when a shipment is successfully built on the leg.\n\nDefault: false\n\nglog.business.claim.CreateClaimLinesFromExtSys.className\n\nglog.business.claim.UpdateClaimLinesToExtSys.className\n\nÂ\n\nThese properties configure the client-created Java classes used to create claim lines in Oracle Transportation Management from an external system and update data from claim lines to an external system.Â If you want the Oracle Transportation Management claim interface to read from and write to a client-created external system, Java code can be written to interface with that system.\n\nglog.business.conopt.ConoptCostCalculator.createArbStops\n\n23C\n\nThis property determines whether the Container Optimization Cost Calculation logic will check via point stop arbitraries when determining whether an equipment group has a usable port-to-port rate for a specific source-destination location combination. The logic is needed to ensure, for theÂ arbitraries scenario, that the Container Optimization logic does not select an equipment group without a usable rate. The default is true.\n\nThis property can be set to false if every equipment group in theÂ arbitraries scenario will have a usable rate for every possible source-destination combination, in order to save run time.\n\nglog.business.conopt.CONSchedule.numDaysLateTimeAfterEarlyTime\n\n6.2.3\n\nIf there is no late delivery date on an order release, then Oracle Transportation Management takes the early date plus 60 days (the default of this property).\n\nWith this property, you may change this and make it longer to include more voyages.\n\nFor this logic to be called:\n\nParameter CONSIDER VOYAGE SCHEDULES IN CONTAINER OPT must be set to true.\n\nAND\n\nThe itinerary leg must have a via location (either via source or via destination).\n\nglog.business.conopt.ConoptConverter.CheckOrderDates\n\n6.3.5\n\nDetermines if OTM should skip the time window checks in container optimization. When set to false, the logic will skip the time window checks in container optimization and hence ignore the order release as well as order movement time windows in container optimization. The default is true.\n\nglog.business.conopt.checkSamePIs\n\n6.3.6\n\nThis property determines whether OTM checks commodities or packaged items when considering whether to allow mixing in a compartment depending on the Allow Commodity Mixing check box.\n\nWhen this is true, OTM will check packaged items (PI) instead of commodities for mixing in the compartment.\n\nWhen this is false, OTM will check the packaged item and not mix different packaged items.\n\nThe default is false.\n\nglog.business.conopt.useOneConoptObjectiveInEquipmentAssigner\n\n6.4.3\n\nThis property impacts the runtime performance of container optimization when called from Multistop. This is particularly useful when you enable multiple objectives in the container optimization logic configuration along with one or more 3D packing algorithms.\n\nWhen false, all specified container optimization objectives will be used during equipment assignment stage of multistop logic.\n\nWhen true, only the objective MAXIMIZE CONTAINER UTILIZATION Â will be used.\n\nThe default is true.\n\nglog.business.consolidation.bulkplan.batchCommitBulkPlanResult\n\n6.2\n\nWithout this property, the process is:\n\nFor each shipment graph (related shipments) in the batch.\n\nCommit the shipments in the graph.\n\nRead the bulkplan result from the database.\n\nUpdate the bulkplan result information in memory - increments several counts, weights, volumes and statistics.\n\nCommit the changes to the database.\n\nWith this property, the process is as follows:\n\nRead the bulkplan result from the database (before any batches are created). The information should be mostly empty.\n\nFor each shipment graph in the batch\n\nCommit the shipments in the graph\n\nUpdate the bulkplan result in memory (this step is still synchronized, but should be fairly quick as everything is in memory).\n\nAfter all the batches are done committing, the bulkplan results are committed to the database.\n\nDefault: false\n\nglog.business.consolidation.bulkplan.favorSameSWGConsolidation\n\n6.4.3\n\nIf this property is set to true, OTM bulk plan logic will favor same Ship with Group based consolidation when the parameter MULTISTOP FAVOR SAME SHIP WITH GROUP is false (the default). It is not necessary to set this property to true if MULTISTOP FAVOR SAME SHIP WITH GROUP parameter is true. However note that, unlike the parameter, this property setting does not influence the Multistop logic.\n\nglog.business.consolidation.bulkplan.filterOutFailedOrders\n\n6.2\n\nThis enables bulk plan to filter out failed orders. Once the failed orders are removed, the normal bulk planning process is done starting from order bundling, itinerary selection and shipment building.\n\nIn order to recognize the failed orders, each order release is bundled individually and planned into shipments. If successful, then the orders are chosen to proceed to the next step. Otherwise, they are filtered out. This property controls whether to include this filtering logic. The default is false. By setting this to true, failed order filtering logic will be executed.\n\nThis works for most cases, but will have undesirable results if either schedule instances or consol shipments exist.\n\nglog.business.consolidation.bulkplan.finishAfterFailedPass 24B\n\nThis property is used to skip the subsequent passesÂ when there is a failed pass in a bulk planÂ with a multipass setup. When the property is set to true, the logic willÂ skip the subsequent passes ifÂ there is a failed pass in a bulk planÂ with a multipass setup. If the Property is set to false, the logic will not skipÂ the subsequent passes whenÂ there is a failed pass in a bulk planÂ with a multipass setup.\n\nThe default value is true.\n\nNote: This property will be in effect whenÂ CARRIER RESOURCE REASSIGNMENT TYPE andÂ MAX NUM REPLAN are not set to zero i.e, when there is a multiple pass setup.\n\nglog.business.consolidation.bulkplan.orderMaxTotalVolume\n\n22A\n\nThis property specifies the maximum allowable total volume of an order. The default UOM (Unit of Measure) for volume in the planning domain is used as the UOM for this volume. An order will fail to plan if its total volume is more than this value.\n\nThe default value of this property is 1,000,000.\n\nglog.business.consolidation.bulkplan.orderMaxTotalWeight\n\n22A\n\nThis property specifies the maximum allowable total weight of an order. The default UOM (Unit of Measure) for weight in the planning domain is used as the UOM for this weight. An order will fail to plan if its total weight is more than this value.\n\nThe default value of this property is 10,000,000.\n\nglog.business.consolidation.bulkplan.orderSortByDateType\n\n6.2\n\nThis property specifies which date is used to sort the orders in order bundling.\n\n0 = SORT_BY_EARLY_PICKUP_DATE\n\n1 = SORT_BY_LATE_PICKUP_DATE\n\n2 = SORT_BY_EARLY_DELIVERY_DATE\n\n3 = SORT_BY_LATE_DELIVERY_DATE\n\nglog.business.consolidation.bulkplan.persistOMTimeConstraints\n\n21A\n\nThis allows you to set the time the time window (pick up and delivery time window) on the order movement so that the order movement bundle does not get broken due to drive result infeasibility.\n\nWhen set to true, OTM will persist the time window constraint from the network routing process. The default is false.\n\nSee Network Routing and Order Movements.\n\nglog.business.consolidation.bulkplan.relaxOrderBundlePickupWindow\n\n6.2.4\n\nWhen set to true, an order release with the date emphasis set to BOTH and a pickup window in the past can be unassigned.\n\nglog.business.consolidation.bulkplan.removeDeconsolPoolShipments\n\nÂ\n\nThe child nodes of all shipment graphs (related shipments) with deconsolidation pools will be deleted in bulk plan just before persisting to the database. Only the initial linehaul with the initial order pickups will be kept. For the case where orders go on linehauls into the pool, and pool drop shipments out, only the linehauls will be saved by bulkplan.\n\nDefault is off (false).\n\nglog.business.consolidation.bulkplan.skipMultiStopFallbackDirect\n\nÂ\n\nWhen this property is False (the default), the bulk plan works as usual. When this property is True, the bulkplan will skip the logic that tries to consolidate the \"fallback\" shipments after the pool selection logic.\n\nThis step could take a lot of run time and not change the solution so with this property you can skip the step.\n\nglog.business.consolidation.isNonOverlappingStopTimeWindowsRelaxed\n\n23A\n\nIf this property is set to true and the time windows on a stop from multiple orders are not overlapping, OTM will not fail the time window compatibility check and no exception will be thrown. Instead, OTM will construct a relaxed time window using the union of all the time windows rather than an overlap of them.\n\nThis applies to the agent action Order Release Mod - Propagate Changes before or after editing a shipment, or any other time window related planning actions, such as Unassign Order.\n\nDefault: false\n\nglog.business.consolidation.minimizeTimeGap\n\n6.2\n\nThis property minimizes the time gaps between shipments in a shipment graph. .\n\nWhen set to true, during the shipment graph consolidation phase of bulk plan, legs of an itinerary that are prior to the primary leg, will be redriven under a Hold As Late As Possible scenario. This will push the shipment to the latest possible time that can still end in time for the following leg.\n\nThe default is false.\n\nglog.business.consolidation.multistop.allowPlanningRates\n\n6.1\n\nThe usage of planning rates is contingent upon this property. If you need to use, you need to turn this property on. The default is off (false).\n\nglog.business.consolidation.multistop.clusterInitialMergePercentage\n\n21A\n\nThis property defines the percentage of direct shipments in the cluster that the cluster merge logic would attempt to merge. Valid values are 1-100. The default is 100.\n\nSee Bulk Plan Multi-stop Shipment Clustering Merge Algorithm.\n\nglog.business.consolidation.multistop.clusterMergeClusterNumMultiplier\n\n21A\n\nThis property sets a multiplier for candidate cluster centers. The default is 3.\n\nDo not change unless directed by Oracle.\n\nglog.business.consolidation.multistop.clusterMergeClusterSize\n\n21A\n\nThis defines the maximum number of direct shipments that a cluster can contain. When the value is set to be less than or equal to 0, it means OTM will not enforce this constraint. The default is -1.\n\nSee Bulk Plan Multi-stop Shipment Clustering Merge Algorithm.\n\nglog.business.consolidation.multistop.clusterMergeMaxiterationNum\n\n21A\n\nThis property sets the maximum number of iterations for the cluster building and build multi-stop shipments for clusters process.\n\nSee Bulk Plan Multi-stop Shipment Clustering Merge Algorithm.\n\nglog.business.consolidation.multistop.commodityBundlingCheckRequiredInMultistop\n\n6.4.2\n\nThis property provides an option to allow commodity check in multistop even when the order bundle rule set does not include the commodity rule. This can be done by setting this property to true.\n\nThe default is false.\n\nglog.business.consolidation.multistop.computeShipmentTimeWindowsInMultistop\n\n6.4.2\n\nTo have flexible time windows on multistop shipments, you need to set this property to true in addition to setting the parameter COMPUTE SHIPMENT TIME WINDOWS to true. When this is true, multistop logic will spend more time driving the shipments.\n\nglog.business.consolidation.multistop.doSavingsMergeAfterClusterMerge\n\n21A\n\nThis property controls whether to run additional sequential savings consolidation for the resulting shipments of cluster merge. Values are true and false.\n\nSee Bulk Plan Multi-stop Shipment Clustering Merge Algorithm.\n\nglog.business.consolidation.multistop.fallbackMergeAlgorithm\n\n19B\n\nIn clustering merge, if shipments in a cluster could not be merged into one shipment, OTM will use the fallback merge algorithm to merge them again.The fallback merge algorithm is specified by this property. The values are '0' for CONCURRENT SAVING (the default) and '1' for SEQUENTIAL SAVING. If fallback merge algorithm fails, it will fall back to the original direct shipments.glog.business.consolidation.multistop.fallbackMergeAlgorithm.\n\nglog.business.consolidation.multistop.priorityagressiveness\n\n6.0\n\nUse this property to control the influence of priority in multi-stop cost savings. Priorities are on order bases, order releases, and order movements and affect planning. Valid values are 0-100, 0 being no influence. The default is 50.\n\nThe value for this property is used in combination with the following parameters in order to increase the apparent savings gained by combining an order with orders of the same or higher priority.\n\nWEIGHT FOR HIGH PRIORITY\n\nWEIGHT FOR MEDIUM PRIORITY\n\nWEIGHT FOR LOW PRIORITY\n\nThis savings, if high enough, can counteract the savings due to geography.\n\nThe higher the value of the property, the priority factor in combining orders onto shipments is increased. In general, the savings from greatest to least will be:\n\nhigh with high\n\nhigh with medium\n\nmedium with medium\n\nhigh with low\n\nmedium with low\n\nlow with low\n\nglog.business.consolidation.multistop.prioritysavingsalgorithm\n\n6.0\n\nThis property determines the approach for calculating priority based savings:\n\n1 - Average weighted priority approach. This is the average of the weighted priorities of the 2 individual shipments. This approach favors combining shipments that have higher priorities.\n\n2 - Max of weighted priorities approach. This is determined as the highest weighted priority value between the two shipments. This also favors combining shipments that have higher priority.\n\n3 - Absolute difference of weighted priorities. This approach favors combining shipments that have closer weighted priority values (i.e., high to high, low to low)\n\nDefault: 1\n\nglog.business.consolidation.multistop.recreateshipmentorderbundle\n\n6.4.2\n\nDo not change this property unless directed by Support.\n\nglog.business.consolidation.multistop.tWMipSequencerMaxTime\n\n20C\n\nThis property sets the upper bound for time to spend on searching for the optimal solution when using MULTISTOP SEQUENCING ALGORITHM option \"6.Time Window MIP\". The default is 10 seconds (unit is seconds).\n\nNote that when the upper bound is reached, but the solver hasn't gotten the optimal solution, OTM will get the current best feasible solution.\n\nglog.business.consolidation.multistop.useTuplingLogic\n\n19B\n\nDo not change this property unless directed by Support.\n\nglog.business.continuousMoves.passHOSStateDownstream\n\n6.3.3\n\nThis property is used during the shipment graphing process.\n\nWhen set to TRUE (default), hours of service data is passed from shipment to shipment for continuous moves.\n\nWhen set to FALSE, hours of service information is not used during continuous moves calculations.\n\nglog.business.continuousMoves.redriveOnlyIfDiffRateService\n\n6.4.2\n\nThis property controls whether to redrive shipments while manually linking shipments into a continuous move shipment.\n\nWhen the property is true, OTM will redrive only if the rate service changes.\n\nWhen the property is false, OTM will redrive regardless of a rate service change. This is the pre-existing behavior.\n\nNote: The parameter CM REDRIVE must be set to true so for OTM to go into the redrive and check the property. Otherwise, there will be no redrive.\n\nThe default is false.\n\nglog.business.costFractionalDigits\n\nglog.business.costFractionalFlags\n\nÂ\n\nThis property controls default precision flags for typical currency totals:\n\nglog.business.costFractionalFlags=<comma-delimited list of flags>\n\nFlags may be:\n\nindividual. Each currency value is rounded before it is added to subtotals.\n\nsubtotal. Each subtotal (i.e. by currency) is rounded before it is added to the total.\n\ntotal. The final total cost is rounded.\n\nstandardBasis. If standardBasis is not set and the caller does not specify a basis, the basis will be set to the last currency encountered.\n\nThe following property specifies ISO precision for each currency:\n\nglog.business.costFractionalDigits.<currency>=<number of digits>\n\nglog.business.costFractionalDigits=<default number of digits>\n\nFor example, the following two settings denote 2 digit precision as a default, but 0 digits for Japanese Yen:\n\nglog.business.costFractionalDigits=2\n\nglog.business.costFractionalDigits.JPY=0\n\nglog.business.distance.oraclespatial.longlat.precision\n\n6.3.6\n\nThis property enables you to configure longitude and latitude precision. External Distance Engine request passes all digits of Longitude and Latitude to Oracle Map Cloud Services Engine so that accurate distance is retrieved.\n\nglog.business.driver.DriverPowerUnitEquipmentCacheManager.logCaches\n\n6.3.2\n\nThis property is used to log the cache values of driver-power unit-equipment relationships that are defined in OTM. If this is set to true, the cache values will be logged in Fleet_assignment logs. The default is false.\n\nglog.business.equipment.allowRotation\n\n6.3.3\n\nThis property allows or prohibits rotation of a ship unit or item inside equipment.\n\nIf this is true then the ship unit or the item inside the equipment can be rotated.\n\nIf false (default), rotation is not allowed.\n\nNote: This property does not impact load configuration.\n\nglog.business.equipment.packByMaxWgtVolUtilization 23C\n\nIn container optimization (Conopt), the logic parameters VOLUME METRIC and WEIGHT METRIC work as intended independently. However, when both VOLUME METRIC and WEIGHT METRIC are set to true, the previous behavior was that the application returned a random or a weight-based solution for the same cost.\n\nThis property is used to control this behavior. When set to true, Conopt results will be sorted based on the most utilized metric - either volume or weight - if both VOLUME METRIC and WEIGHT METRIC are true.\n\nThe default value of this property is true.\n\nWhen set to false, the previous behavior will take effect.\n\nglog.business.equipmentGroup.isUserBasedDomainCache 24A This property determines whether equipment group PKs are fetched from user based domain cache. glog.business.externalVoyage.assign.validateAllLegs 24A This property is used to enable or disable the validation of voyage service types for all legs.\n\nglog.business.fleet.checkDriverTypeCompatibility\n\n6.4.2\n\nWhen set to true, the property helps improve the Optimize Driver Assignment action performance. The default is false.\n\nThere is an alternate approach to perform driver assignments faster. The Fleet aware bulk plan should be used to speed up the process. You can set up resource schedules to simulate driver resources. These resource schedules are the resources used by the fleet aware bulk plan. Then you can perform the resource optimization using the fleet aware bulk plan, form shipment strings, and assign best feasible resources to those strings as a part of bulk plan. You can take those shipment strings and perform the Optimize Driver Assignment action on those shipments given the set of drivers. Each shipment is evaluated with all available drivers which is still not optimal for some scenarios where only a set of drivers are feasible for certain shipments. Driver types can be set on both resource schedules and drivers to make the driver assignment more optimal. Only a subset of drivers is evaluated for each shipment in this case. For shipments, the driver type is derived from the resource schedule which is associated to the work assignment that contains that shipment. The driver resources with matching driver types as shipment are the only ones that are evaluated for assignment against that shipment. This driver type checks and evaluates fewer drivers for each shipment and improves the overall Optimize Driver Assignment performance. This property is used to enable the driver type compatibility check.\n\nglog.business.fleetassignment.assignPowerUnitAfterRedrive\n\n21A\n\nThis property is used with the Optimize Driver Assignment action to assign proper power units for the case where they are shared across drivers. Setting this to true will allow the same power unit to be assigned to both shipments. The default is false.\n\nglog.business.fleetassignment.checkHomeStopPermForPrevShipLoad\n\n21A\n\nThis determines the consideration of the previous shipment during driver assignment, if set to true. The default is false.\n\nglog.business.fleetassignment.checkPreviousShipmentWithBasedOnShift 24B\n\nThis property is used to remove the NFR stops while appending shipments on a driver assignment using MARK DRIVER HOME STOP FIXED parameter based on Driver shifts or manual action (Based on shift). If the property is set to true, the logic will remove the NFR stops when MARK DRIVER HOME STOP FIXED parameter (Fleet Assignment Config) is either ânoâ or âbased on shiftsâ or manual action during the driver optimization(parameter set) or Special Services (STOP NOT REMOVABLE) is false. If the property is set to false, the logic will remove the NFR stop on previous shipment even with Special Services (STOP NOT REMOVABLE) defined.Â\n\nBy default, the property is set to true.\n\nglog.business.fleetassignment.defaultEquipmentPoolRole\n\n6.0\n\nThis property is used to restrict the fetching of equipment types with a location role. Default is \"not defined\" meaning that all roles are used.\n\nglog.business.fleetassignment.driver.considerWorkAssignmentInDriverOptimization\n\n6.4.2\n\nControls whether or not work assignments are considered when you run the Optimize Driver Assignment action. Default value of the property is false.\n\nYou should set this property to true to consider work assignments when you run the Optimize Driver Assignment action. That then assigns the same driver to all shipments in a particular work assignment.\n\nThis setting can also be made by setting the ASSIGN SAME DRIVER TO SHIPMENTS IN A WA parameter. If either the parameter or the property is set to true, the system sees the option as true.\n\nglog.business.fleetassignment.optimization.minNodeExtentions\n\n6.2\n\nThis property controls the number of shipments tried during the dispatch plan optimization (DPO) process. For example, we have 46 shipments in the DPO process. This property is set to 6 as default, when assigning drivers to these shipments, only the first 6 most profitable shipments are evaluated.\n\nglog.business.GGraphBuilder.plotCMShipments\n\nÂ\n\nUsed for controlling the building of shipment graphs (related shipments) for plotting continuous moves. Unless True, continuous moves will not be plotted.\n\nglog.business.procurement.crtupload.createbids.batchsize\n\n24A\n\nThis property specifies the count of rows processed in a single batch. If there are more than 1,000 rows in the spreadsheet, they are processed using multi-threading.\n\nglog.business.ratedistance.checkExceptionMethod.useSync\n\n22C\n\nIf the property is set to true after the cache is cleared, the loading and caching of the data with source and destination geo hierarchy as LOCATION will not be calledÂ multiple times if multiple users are trying to load at the same time.\n\nWhen the property is set to false, the loading and caching of the data with source and destination geo hierarchy as LOCATION will be called multiple times if multiple users are trying to load at the same time.\n\nDefault: false.\n\nglog.business.ratedistance.loadLocationHierarchyLocPairDistance.forceDBA\n\n22C\n\nIf the property is set to true, the application will use the \"DBA.ADMIN\" user while loading the distance records with source and destination geo hierarchy as LOCATION irrespective of the logged-in user. This will allow the cache to have the same number of records no matter which user is loading the cache.\n\nIf theÂ property is set to false, the application, while loading the distance records with source and destination geo hierarchy as LOCATION, will use the VPD of the logged-in user. This might result in the cache having an incorrect number of records.\n\nDefault: false.\n\nglog.business.vatAggr.vatcode.costFractionalFlags\n\n22B\n\nThis property is used to round off the VAT amount at the VAT code Level.Â\n\nIf the property value is 'individual', the VAT amount is rounded off before adding it to the total.Â\n\nIf the value is 'subtotal', VAT amounts of same currency type are grouped together and aggregated. Then the amount for each currency type is rounded off and aggregated.\n\nIf the value is 'total', the VAT amount is rounded off after aggregating all the vat amounts for a VAT code.\n\nIf no value is specified for the property, the application falls back to the standard precision flags (refer toÂ glog.business.costFractionalFlags property).\n\nDefault: individual\n\nglog.business.vatAggr.invoiceOrVoucher.costFractionalFlags\n\n22B\n\nThis property is used to round off the VAT amount at the invoice/voucher level. Â\n\nThis property can accept the values individual/subtotal/total.\n\nIf the value is 'individual', the VAT amount is rounded off before adding it to the total.Â\n\nIf the value is 'subtotal', VAT amounts of same currency type are grouped together and aggregated. Then the amount for each currency type is rounded off and aggregated for an invoice or a voucher.Â\n\nIf the value is 'total', the VAT amount is rounded off after aggregating all the VAT amounts of each line item or each vat code for invoice/voucher.Â\n\nIf no value is specified for the property, the system falls back to the standard precision flags.Â\n\nDefault: individual\n\nglog.business.itinerary.maxSplitOptions\n\n21A\n\nShipment building may create a huge number of shipment options and fill up memory in planning for scenarios with split order bundles and the following parameter settings:\n\nÂ Â Â Â ALLOW DIFFERENT RATE RECORDS FOR SPLIT ORDERS = true\n\nÂ Â Â Â MAX NUMBER OF RATE RECORDS FOR SPLIT ORDER > than the default of 3.\n\nThis property limits the maximum split options allowed. The default is 10000. If the number of split shipment options exceeds this value, the order planning will fail.\n\nNote that setting this to a higher value might cause a memory problem.\n\nIf the threshold is exceeded, the Planning log will include information about the failure.\n\nAlso, the warning section of the Bulk Plan Performance tab will indicate that this failure has occurred in a bulk plan.\n\nglog.business.itinerary.maxLegOptions\n\n22A\n\nUsed to provide control to limit the total number of leg options for an order bundle. This property specifies the maximum total number of leg options allowed for an order bundle on a leg. The default value of this property is 50,000.\n\nWhen the number of leg options is more than the specified limit, only the first allowed number of leg options will be considered for shipment planning.\n\nglog.business.itinerary.queryToLimitArbLegOptions\n\nÂ\n\nWhen True, and arbitraries are defined on the leg, the logic that builds leg options queries ahead attempting to limit arbitrary locations that do not have valid port or arbitrary rates. Normally, this should be left True, unless all options would have rates and should be tested. In that case, the query to look ahead at rates would not provide any benefit.\n\nWhen this is True, rates for the arbitrary locations should be set up as follows:\n\nFor source via points alone, a rate must be from a location or a region-of-locations.\n\nFor destination via points alone, a rate must be to a location or a region-of-locations.\n\nFor source and destination via points together a rate must be either location to location or (region-of-locations) to (region-of-locations).\n\nIn addition, the leg with the arbitraries should have either only via point location or only via point location profiles.\n\nglog.business.LNMBulkPlan.maxOrderReplanCount\n\n19B\n\nThis indicates the maximum number of times the order can be reconsidered for planning in the same scenario bulk plan action. It is only used by scenario bulk plans that run periodic bulk plans run in a series. If the order fails in the current periodic bulk plan, it will be reconsidered in subsequent bulk plans as long as they are feasible for the period considered in that bulk plan and the re-plan count is less than or equal to the maximum re-plan count defined in the property. The default is 5.\n\nglog.business.loadconfig.legClassificationLimitList\n\n6.4.1\n\nDetermines if the order release ship unit's load configuration setup for a shipment is used. When this property has values set (can be a comma separated list of leg classification XIDs), OTM applies the order ship unit's load configuration setup only if the leg classification XID on the shipment's leg matches one of the values set on the property. Otherwise, OTM ignores the order release ship units load configuration setup for that shipment.\n\nWhen no values are defined (default), OTM uses the order release ship unit load configuration setup always (backward compatible).\n\nFor example, the property value is \"Customer_Delivery\".\n\nIf the itinerary leg on the shipment being evaluated has a leg classification of \"Customer Delivery\", OTM will honor the load configuration setup on the order release ship unit since âCustomer Deliveryâ is specified in the property. However, if the itinerary leg on another shipment being evaluated has a leg classification of \"Pretransport\", then OTM will ignore the load configuration setup on the order release ship unit altogether and try to obtain one through the load configuration rules.\n\nNote: This property does not display in the properties servlet by default. It must be added manually.\n\nglog.business.location.inactiveLocationSetting\n\n19B\n\nThis allows you to configure OTM to prevent inactive locations from being used as intermediate locations when Network Routing is enabled, or as arbitrary via points (Port-of-Load or Port-of-Discharge) regardless of the Order Routing Method. Possible values are:\n\n0: (default for clients that upgrade) inactive locations can be used as throughpoints/via points\n\n1: (default for new clients) inactive locations cannot be used as throughpoints in Â Network Routing nor as via points (Network Routing or Cost-based Routing)\n\nglog.business.location.locationCapacityOptimizer.CalculateStopWaitUsingLCinBP\n\nÂ\n\nWhen set to False, this property checks location capacity after the service time calculation.\n\nIf True it changes the stop wait time inside service time calculation. Afterward it will not re-check the location capacity. When set to true, the service time calculations during the fleet aware bulk plan checks for feasible arrival/departure times at the stops in order to honor the location capacities defined on the stops. It might also add more wait time on the stops to achieve that.\n\nDefault: false.\n\nglog.business.location.locationCapacityOptimizer.checkLCinDrive 24A\n\nThis property is used to plan group of orders whose sum of an item count (total equipment reference unit) exceeds the maximum capacity usage for a day.\n\nWhen set to true, this property checks the location capacity in drive during the first run of bulk plan.\n\nDefault: false.\n\nglog.business.location.locationCapacityOptimizer.locationCapacityLoadingTimeWindow\n\nÂ\n\nThis is the duration on each side of the early pickup or late delivery if one of them is not specified. The location capacity information of the locations is loaded once up front for the time window thus determined. Duration in Number of Days.\n\nDefault: 14\n\nglog.business.location.locationCapacityOptimizer.maxNumShipmentStartTimes\n\n22A\n\nThis controls to Â limit the number of shipment start time options and avoid OutOfMemoryError. This specifies the maximum total number of start time options which will be evaluated Â for each shipment in the Location Capacity Optimizer. The default value is 5,000.\n\nAt the beginning of Location Capacity Optimization, the number of start times for a shipment can be estimated by driving time span with time step. If its estimated number of start times exceeds the specified limit, Â Location Â Capacity Optimization logic will be entirely skipped.\n\nglog.business.location.locationCapacityOptimizer.optimizeLocCapPlanningWindow 24A\n\nThis property is used to correctly calculate the Location Capacity Planning Window. When set to true, this property correctly calculates theÂ Location Capacity Planning Window if an Early Pickup date (EPD) is not provided, and a Late Delivery date (LDD) is provided on all the order releases.\n\nBy default, this property is set to false.\n\nglog.business.location.locationCapacityOptimizer.SmoothingUpdatePercentage 24A This property is used in Location Capacity Greedy Solver, where if the\n\ncapacity usage of all the available buckets have already met the target\n\nvalue, OTM will distribute the shipments in a smoothing(even) manner. It willÂ assign the shipment to the less loaded bucket. If the capacity type of theÂ bucket is weight or volume, this property can be used to control the\n\nsmoothing behaviourÂ during the step of increasing the maximal target value.\n\nglog.business.machinelearning.accessanalytics.user\n\n21A\n\nUser credential for directly accessing the analytics HDOWNER database from an OTM action.\n\nDefault: DBA.ADMIN\n\nglog.business.machinelearning.loadtoanalytics.batchsize\n\n21A\n\nThe batch size used in the action Load Data into Analytics. Shipments are pushed in batches with this size limit.\n\nDefault: 100000\n\nglog.business.machinelearning.minEventsInShipment\n\n22B\n\nThe minimum number of events on a shipment that are required in order for the shipment to qualify for training using the event-based ETA prediction model.\n\nDefault: 2\n\nglog.business.machinelearning.minShipmentDistance\n\n22B\n\nThe minimum shipment distance (km) between the source and destination locations that is required for the shipment to qualify for trainingÂ using the event-based ETA prediction model.\n\nDefault: 1\n\nglog.business.machinelearning.numCrossvalidationFolds 22B\n\nThe number of folds for cross-validation used for AutoML Hyper Parameter tuning. Increasing this value increases run time an may lower performance. The recommendation is to leave this at the default value of 3.\n\nDefault: 3\n\nMin: 2\n\nMax: 5\n\nglog.business.machinelearning.prediction.batchresultslimit\n\nÂ\n\nThis property determinesÂ the batch size limit used to show prediction results on a page.\n\nDefault: 50\n\nglog.business.machinelearning.process.getStatusTopicInvocationMaxRetryCount\n\n21A\n\nOnce the training rest call is initiated on a ML scenario, the training starts at the ML services end. To get the status and results of the training process, another REST call getLearningResult need to be initiated. This property will define the maximum number of times the get results call can be initiated. Â\n\nDefault: 20\n\nglog.business.machinelearning.process.getStatusTopicInvocationTimeGap\n\n21A\n\nOnce the training rest call is initiated on a ML scenario, the training starts at the ML services end. To get the status and results of the training process, another REST call getLearningResult need to be initiated. This property will define the time gap between each get result call that is being initiated.\n\nDefault: 120\n\nglog.business.machinelearning.process.maxShipmentsAllowedInPrediction\n\n21A\n\nMaximum number of Shipments considered for Prediction\n\nDefault: 10000\n\nglog.business.machinelearning.rest.requestBaseUrl\n\n21A\n\nContains the URL to the machine learning service for all Logistics Machine Learning actions.\n\nglog.business.machinelearning.rest.mlRestUserName\n\n21A\n\nContains the User name for the connection to the machine learning service for all Logistics Machine Learning actions. As entered in the OTM wallet.\n\nglog.business.machinelearning.rest.mlRestPassword\n\n21A\n\nContains the Password for the connection to the Oracle Machine Learning Cloud Service for all Logistics Machine Learning actions. As entered in the OTM wallet.\n\nglog.business.machinelearning.scenarioShipmentInsertBatchSize\n\nÂ\n\nThis property determines the number of Scenario Shipment that can be inserted in a batch.\n\nDefault: 1000\n\nglog.business.machinelearning.updateProjectWorkflowDuringTraining\n\n21C\n\nWhen set to true, the machine learning training process updates the project workflow with the advanced filters in the IoT side using a REST call. Set this property to true if you are migrating machine learning projects from 21A.\n\nBy default the property value is set to false and the project workflow is not updated during the training process.\n\nDefault = false\n\nglog.business.networkrouting.rateinquiry.checkCapacityForRateInqResults 22C\n\nThis property controls Network Routing logic which checks carrier capacity when routing orders. The default value is true. When the property is true, Network Routing logic will not route orders onto legs when there is no available carrier capacity on those legs. This logic is useful especially in a multi-pass bulk plan, where the first pass might use up the carrier capacity on certain legs, and the second pass should not route additional orders on those legs. When the property is false, Network Routing logic will be allowed to route orders onto legs when there is no available capacity.Â\n\nNote: There are scenarios where Network Routing logic may route orders onto legs with no available carrier capacity, even if the property is set to true, particularly when orders do not have overlapping pickup windows, and capacity is available for some of these windows and not others.\n\nglog.business.networkrouting.disbundleFailedBundleInDynamicClustering\n\n22A\n\nThis property is set to \"true\" by default. Â Setting this property to \"false\" will disable disbundling of failed order movement bundles in Dynamic Clustering.\n\nglog.business.networkrouting.flexCommodityCodeForRatingNetwork\n\n6.4.1\n\nThis property specifies the value of the flexible commodity qualifier code to be used during network creation.\n\nDefault = 70.0.\n\nglog.business.networkrouting.flexCommodityQualGidForRatingNetwork\n\n6.4.1\n\nThis property specifies the value of the flexible commodity qualifier GID to be used during network creation.\n\nDefault = NMFC_CLASS.\n\nglog.business.networkrouting.rateinquiry.disableAutoCacheClear 22B\n\nThis property helpsÂ to manage planning performance when using Network Routing.Â Planning logic uses the NetworkLegRateCache in order to save time when determining rating costs for order routing decisions. The default value of this property is set to \"false\". However, this cache is automaticallyÂ cleared when rate records or related data are changed, to keep the cached data up-to-date.Â This property, if set to \"true\", prevents the automatic clearing of the NetworkLegRateCache when rate data is changed.Â This setting can be convenient while rate data is being updated frequently.Â However, if the cache is not cleared, the data can become out-of-date. So it is up to the user to manually clear this cache in a timely and convenient way.\n\nglog.business.consolidation.isNonOverlappingStopTimeWindowsRelaxed\n\n22C\n\nWhen the property is set to true, ORDER RELEASE - MOD - PROPAGATE CHANGES, ORDER RELEASE - MOD â EDIT SHIPMENT and all other planning actions such as unassign, redrive etc that loads shipments, if order (order movements) being pickup or dropped off at a location do not have overlap time windows, the system will not fail the time window compatibility check and will not throw an exception. Instead, the system will construct a relaxed time window using the union of all time windows.\n\nDefault : false\n\nglog.business.omd.isPropagateLineChanges\n\n6.3.5\n\nThis controls if changes on order release lines are propagated to the ship unit when using the OMD automation agent actions 'Order ReleaseÂ - Mod - Edit Shipment' or 'Order Release - Mod - Propagate Changes'. Â\n\nThe default of TRUE propagates all changes on the order release lines to the ship unit. Set this to FALSE if you do not want the changes propagated. It is strongly recommended that you always set this to TRUE.\n\nglog.business.omd.isRemoveZeroQuantityOrderLines\n\n18C\n\nThis determines if an order release line with a quantity of zero will be kept or deleted if using order release modification actions. This only applies to line based orders, PREPACK, ONE TO ONE and AUTO CALC. It does not apply to ship unit based orders, such as SHIP UNITS or SHIP UNIT LINES.\n\nWhen this is set to true (default), the order release line with 0 quantity will be removed from the database, and the corresponding ship unit lines (and ship unit if contains no other lines) and shipment ship unit lines (and shipment ship units if contains no other lines) will be removed.\n\nWhen set to false, the order release line with 0 quantity will be kept, but corresponding ship unit lines (and ship unit if contains no other lines) Â and shipment ship unit lines (and shipment ship units if contains no other lines) will be removed.\n\nThe actions Order Release - Mod - Edit Shipment and Order Release - Mod - Propagate Changes both honor this property.\n\nglog.business.orderActions.unassign.redriveShipmentWithOptimalStartTime\n\n18.1-5\n\nWhen unassigning an order release, OTM redrives the remaining shipment with original shipment's start time that is being unassigned (default is false, existing default behavior). When set to true, OTM will redrive the shipments using the optimal start time in the unassign process.\n\nFor example, you have three orders releases with early pick up dates of the 19th, 20th and 21st. When planning these, the shipment is planned with a start time on the 21st. If you unassign the last one (early pick up date of the 21st), the resulting shipment is still planned with a start time on the 21st. When true, the shipment will be updated from the original start time (the 21st) to the next latest early pick up date on the remaining order releases (the 20th).\n\nNote: A change in order time window or use of a different planning parameter set could sometimes cause time windows at a stop not to overlap, thus, affecting the bundling logic. However, with this property any issue with time infeasibility or wrong time can be avoided during unassigning an order. For example, consider a shipment with two stops and two orders as follows:\n\nOrder 1: pickup time window is 11/01-11/03 and delivery time window is 11/02-11/04\n\nOrder 2: pickup time window is 11/02-11/03 and delivery time window is 11/02-11/04\n\nWhen you create a shipment for these two orders, the shipment start time will be 11/2.\n\nIf this property is set to false, after unassigning Â order 2, the shipment will still have the start time on 11/02.\n\nIf the property is set to true, after unassigning Â order 2, the shipment will start on 11/01.\n\nglog.business.order.ignoreCarrierCapacityWhenMoveOrdersToShipment\n\nÂ\n\nWhen true, carrier capacity is ignored in the Move Orders To Shipment and Move Order Movement To Shipment actions. It is equivalent to ignoring carrier capacity in the ignore criteria input screen for this action.\n\nglog.business.order.ignoreOrderMovementConstraints\n\n6.2.4\n\nWhen true, order movement constraints, such as service provider, transport mode etc will be ignored for shipment actions. The constraints from order release, if any, will still be used.\n\nDefault: false\n\nglog.business.order.packing.allowMixedTHUWithAllSameItems\n\n18D\n\nThis impacts grouping of mixed freight ship units. This property needs to be added and set to true to allow same items to go in mixed transport handling units (THU). The default is false.\n\nglog.business.order.packing.considerSameTiOrSameHiLikeItems\n\n22A\n\nWhen this property is set to true,Â LikeÂ item checking is relaxed so lines with different Packaged Item\n\nGIDs are considered \"Like\", if:\n\nPackaged Item Type is same and\n\neither Ti (Quantity per layer) or Hi (number of layers) is same Â\n\nDefault: false\n\nglog.business.order.packing.allowRemnantToSplit\n\n21A\n\nIf set to false, remnants will not split onto different ship unit during order ship unit building.\n\nDefault: true\n\nTo minimize splitting with ship unit building and ship unit repacking, set the glog.business.order.packing.allowRemnantToSplit property to false and set the glog.business.shipment.repacking.useCostBasedConoptParameters property to true. Then select logic configuration type of SUBLD CONTAINER OPTIMIZATION and select the parameter SUBLD COST-BASED CONOPT ALGORITHM, Â and select the parameter value \"5: Column Generation with Quick Pack and Single Container MIP\".\n\nÂ\n\nglog.business.order.packing.THUTiHiNormalizedCapacity\n\n21A\n\nThis property is set as the normalized capacity for every transport handling unit (THU) when formulating TiHi capacity. You should not change this value unless you run into rounding issues in ship unit building and are instructed by OTM support.\n\nThe default is 1000.\n\nglog.business.order.prevalidateInUnassignOrderMovements\n\n6.3.2\n\nControls whether OTM needs to check reuse equipment while unassigning order movements.\n\nDefault is false which means: do not pre-validate while unassigning order movements.\n\nglog.business.order.setOmDomainLikeShipment 23A\n\nWhen this property is set to true, a new buy order movement will be created in the current domain, which is the same domain as that for newly created shipments.Â When the property is false, new buy order movements will be created in the domain of the related order release.Â\n\nBy default, the property is false.\n\nglog.business.orderbase.shipmentLinker.activeTable\n\n6.4.1\n\nThis controls whether to add SHIPMENT_S_EQUIPMENT_JOIN to the Virtual Private Database (VPD) active table list.\n\nWithout the property, OTM defaults to SHIPMENT_S_EQUIPMENT_JOIN, and nothing changes for existing clients.\n\nTo avoid the problem of retrieving wrong data from another domain, set the property as follows:\n\nglog.business.orderbase.shipmentLinker.activeTable = NONE.\n\nglog.business.planningstreams.dataMaskingDefinitionID\n\n20A\n\nThis property identifies the Data Masking Definition ID to be used when exporting planning data. The default and only possible value is BASIC. If this value is removed, then the Apply Data Masking check box on the Export Planning Data page will not work.\n\nglog.business.planningstreams.dataobjects.includerankinmanifest\n\n20A\n\nControls whether to include the rank in the manifest.xml file when exporting planning data. Exported objects are sorted by rank.\n\nDefault: true\n\nglog.business.planningstreams.dataobjects.includenumobjectsinmanifest\n\n20A\n\nControls whether to include the number of objects in the manifest.xml file when exporting planning data.\n\nDefault: true\n\nglog.business.planningstreams.exportimportcachesize\n\n20A\n\nThis property defines the total number of records, across all object types, that can be stored in cache at one time when exporting or importing planning data.\n\nDefault: 2000\n\nglog.business.rate.extRatingAndDistanceWebservice.readResponse.useDOMAPI\n\n6.4.2\n\nReserved for internal use. Do not change unless directed by OTM Support.\n\nglog.business.rate.ratedistance.failRateOnInvalidDistance\n\n6.3.7\n\nIf the shipment distance calculation fails (when distance is not available between the locations provided in the shipment), rating of the shipment will be done based on the value of this property.\n\nIf false, (the default), and the shipment distance calculation fails, OTM will still rate the shipment.\n\nIf true and the shipment distance calculation fails, then OTM throws an exception and will not rate the shipment.\n\nglog.business.rate.rateEngine.rateFactor.useStepFuncForAccCostCalc\n\n19B\n\nIf you configure this value to true, the system will consider the next level rate factor cost as an accessorial cost. Otherwise it will calculate the exact cost for the rate factor and use it as an accessorial cost.\n\nFor example: If you configure a rate factor value as 1.5 and the rate factor rule details are as follows:\n\nCost Increase is 1 USD, factor increase 1. This means for 1 unit the rate factor cost increases by 1 USD.\n\nFor Rate Factor 1, the cost will be 1 USD.\n\nFor Rate Factor 2, the cost will be 2 USD.\n\nIf the property is true:\n\nSince the actual rate factor value (i.e., 1.5) is between 1 and 2, it will take the ceil value of 2 (rounding up from a Â fractional value to the next integer) of the rate factor, and uses its associated cost of 2 USD as an accessorial cost.\n\nIf this property is false it will calculate the exact rate factor value using the rate factor increase and cost increase values. In this example, it will return 1.5 USD as an accessorial cost.\n\nDefault: False\n\nglog.business.rate.rateEngine.rateCostEval.useROCurrency 23C\n\nThis property specifies whether to take the currency unit defined in the rate offering or the currency unit defined in the rate cost while evaluating a rate cost.\n\nWhen you set the property value to true, the application uses the currency unit defined in the rate offeringÂ and converts the cost accordingly.\n\nIf you set the property value to false, the application skips the currency unit defined in the rate offering and uses theÂ currency unit defined in the rate cost.\n\nDefault: true\n\nglog.business.rate.rateengine.allowIndividualCostMinAndMax\n\n22B\n\nIf the property is true:\n\nFor rate costs having the charge multiplier option 'Collect Costs Separately', the application honors minimum and maximum charges for individual cost. For rate costs having the multiplier option 'Add Individual Multiplier Values', minimum and maximum charges are not applied on aggregated cost but minimum and maximum charges are honored on the individual costs and these costs are added.\n\nIf the property is false:\n\nFor rate costs having the charge multiplier option 'Collect Costs Separately', minimum and maximum charges are not honored. For rate costs having the multiplier option 'Add Individual Multiplier Values', minimum and maximum charges are applied on aggregated cost.\n\nFor example:\n\nSuppose an order release has three order lines ORL1, ORL2, ORL3 of weights 1000 LB, 2000 LB, and 3000 LB respectively.\n\nRate cost is defined to charge 1 USD per 10 LB of order line weight. Minimum Charge is defined as 120 USD and maximum charge is defined as 270 USD.\n\nThe rate costs calculated for each of the order line would be:\n\nORL1 - 100 USD\n\nORL2 - 200 USD\n\nORL3 - 300 USD\n\nIf the property is set to true and the rate geo cost has the multiplier option 'Collect Costs Separately', then the cost would be as follows:\n\nORL1 - 120 USD (as minimumÂ charge is specified as 120 USD and the charge for ORL1 100 USD < 120 USD)\n\nORL2 - 200 USD\n\nORL3 - 270 USD (as maximum charge is specified as 270 USD and the charge for ORL3 300 USD > 270 USD)\n\nIf the property is set to true and the rate geo cost has the multiplier option 'Add Individual Multipliers', then the cost would be as follows:\n\nORL1 - 120 USD (as minimumÂ charge is specified as 120 USD and the charge for ORL1 100 USD < 120 USD)\n\nORL2 - 200 USD\n\nORL3 - 270 USD (as maximum charge is specified as 270 USD and the charge for ORL3 300 USD > 270 USD)\n\nAggregated cost is 120 USD + 200 USD + 270 USD = 590 USD. Individual charges are subjected to minimum and maximum charges and then aggregated.\n\nThis is to make sure that the aggregated cost remains the sameÂ with different charge multiplier options.\n\nÂ\n\nIf the property is set to false and the rate geo cost has the charge multiplier option 'Collect Costs Separately', then the cost would be as follows:\n\nORL1 - 100 USD\n\nORL2 - 200 USD\n\nORL3 - 300 USD\n\nÂ\n\nIf the property is set to false and the rate geo cost has the multiplier option 'Add Individual Multipliers', then the cost would be as follows:\n\nORL1 - 100 USD (as minimumÂ charge is specified as 120 USD and the charge for ORL1 100 USD < 120 USD)\n\nORL2 - 200 USD\n\nORL3 - 300 USD (as maximum charge is specified as 270 USD and the charge for ORL3 300 USD > 270 USD)\n\nAggregated cost is 100 USD + 200 USD + 300 USD = 600, USD but the aggregated cost is subjected to minimum and maximum charges. 600 USD is more than the minimum charge but exceeds the maximum charge 270 USD. So, the cost is set to the maximum charge of 270 USD.\n\nDefault: false\n\nglog.business.rate.rateengine.loadRatableObjects.forceDomainAdmin 24A\n\nThis property is used for impersonatingÂ the domain administrator while loading domain-level rating caches rather than loading only user-specific data in the caches.Â When this property is set to true, the application loads the rate caches such as rate attributes, rate offering types, rate quality factors, global accessorials, default accessorials, item accessorials, special services, dimensional factors, rate unit break profiles, and tiered rating time period definitions by impersonating domain administrator. If the property is set to false, only user-specific data is loaded which would not be loaded properly if there are vpd restrictions for users of the same domain.\n\nDefault: false.\n\nglog.business.rate.rateEngine.validateBaseRateGeoActiveEffExpDate\n\n23B\n\nThis property is used to validate whether the base rate records areÂ active and if they are not expired.\n\nSet the property value to true to enable the validation. If the value is set to false, the application doesn't enable the validation.\n\nDefault: false.\n\nglog.business.rate.ratefinder.activeTable 6.4.2\n\nThis property is used to specify which table to add as the active tableÂ for the VPD when searching for rates by lane.\n\nDefault: HNAME_SET_MEMBER.\n\nSee Rate Preferences and Active Tables.\n\nglog.business.rate.ratefinder.useActiveTable 6.4.2\n\nThis property is used for enabling or disabling the addition of an active table to the VPD when searching for the rates by lane and by zone. The default is true. When false, no active table will be added.\n\nSee Rate Preferences and Active Tables.\n\nglog.business.rate.ratefinder.preferredRatesByLane.activeTable\n\n6.4.2\n\nThis property is used to specify which table to add as the active table for the VPD when searching for preferred rates by lane. The default is RATE_PREFERENCE. The default is the table that was used previously (before this property was added). You can specify any other table to be used as the active table. E.g. HNAME_SET_MEMBER.\n\nSee Rate Preferences and Active Tables.\n\nglog.business.rate.ratefinder.preferredRatesByLane.useActiveTable\n\n6.4.2\n\nThis property is used for enabling or disabling the addition of an active table to the VPD when searching for preferred rates by lane. The default is true. When false, no active table will be added.\n\nSee Rate Preferences and Active Tables.\n\nglog.business.rate.ratefinder.preferredRatesByZone.activeTable\n\n6.4.2\n\nThis property is used to specify which table to add as the active table for the VPD when searching for preferred rates by zone. The default is RATE_PREFERENCE. The default is the table that was used previously (before this property was added). You can specify any other table to be used as active table. E.g. HNAME_SET_MEMBER.\n\nSee Rate Preferences and Active Tables.\n\nglog.business.rate.ratefinder.preferredRatesByZone.useActiveTable\n\n6.4.2\n\nThis property is used for enabling or disabling the addition of an active table to the VPD when searching for preferred rates by zone. The default is true. When false, no active table will be added.\n\nSee Rate Preferences and Active Tables.\n\nglog.business.rate.ratefinder.RateGeoFinderSession.activeTable 6.4.2\n\nThis property is used to specify which table to add as the active table for the VPD when searching for rates by zone.\n\nDefault: HNAME_SET_MEMBER.\n\nSee Rate Preferences and Active Tables.\n\nglog.business.rate.rateservice.backtrackDrive\n\n6.0\n\nWhen set to true, adjust number of days specified by this parameter NUM OF DAYS TO BACKTRACK DRIVE ahead of the previous drive start time to begin a new drive if no solution found in the previous drive, until we find a solution or reach the order early pickup time.\n\nglog.business.rate.sshipunit.considerZeroShipUnitCountAsOne\n\n22A\n\nWhile rating a shipment whose rate is based on the ship unit count, when the ship unit count is specified as '0' (zero) in the order release\n\nif this property is set to true, the ship unit count is considered as '1' (one).\n\nif this property is set to false, the ship unit count is considered as '0' (zero).\n\nThe default value of the property is \"true\".\n\nglog.business.rateservicescheduling.depressDepot\n\nÂ\n\nThe property is used to ignore depot stops for rate services that only work for two stop shipments (e.g. day duration).\n\nIt also controls how the Depot Applicable setting on the rate offering is considered. When this property is true and the rate offering has Depot Applicable set to false the drive logic will not consider depots when driving the shipment.\n\nThe default value of the property is \"true\".\n\nglog.business.rateservicescheduling.extraRangeDaysLoad 22C The property is used to control the number of extra days of padding that are added when loading time window data. The default value is 14. Increasing this value will extend the time period for which data is loaded. This allows the prevention of exceeding the loaded time window data which causes a large default wait time of 365 days.Â\n\nglog.business.rateservicescheduling.prevalidateStopTimes\n\n6.4.1\n\nPre-validation is performed on the earliest and latest possible arrival times of a shipment stop. This pre-validation determines if there is a feasible drive solution for the shipment. If not, the drive attempt is not performed.\n\nThis property can allow a drive attempt even when it is known that a feasible drive will not be found.\n\nWhen set to false, the pre-validation step will be skipped for all rate service drive attempts for all shipments. This will allow an infeasible drive solution to be found and potentially saved for the shipment. The default is true.\n\nFor example, this may be useful when processing a shipment actual. If processing the shipment actual results in stop time changes that require downstream shipments to be re-driven, the re-drive due to the pre-validation that was being performed should not be skipped. Skipping the re-drive prevents updating the downstream shipments with adjusted stop times. These should be adjusted to reflect the actual events even when they are not feasible.\n\nglog.business.releaseGroundSchedule.redriveDownstreamShipment\n\n23A\n\nIf this property is set to true, downstream shipments are loaded and re-driven during releasing ground schedule. Otherwise, downstream shipments are not loaded and not re-driven.\n\nDefault: true\n\nglog.business.rule.rate.RateOfferingVolumeRule.skipIfShipmentActualsPresent\n\nglog.business.rule.rate.RateOfferingWeightRule.skipIfShipmentActualsPresent\n\nÂ\n\nWhen True, OTM will skip the weight and volume constraint checks if the shipment has actuals assigned to it: so, if the order does not have a BOL_ACTUALS status of BOL_ACTUALS_NOT_ENTERED (then OTM considers actuals are assigned to the shipment).\n\nIf false, the rule is always checked.\n\nglog.business.secondarycharge.ruleType.stop.considerDebriefsForScCharge\n\nÂ\n\nThis property specifies whether to consider the debrief records while creating the secondary charge shipments for shipment stop.\n\nWhen the property value is set to true and the secondary chargeÂ Rule TypeÂ isÂ Shipment Stop and Quantity TypeÂ isÂ Picked UpÂ or Received, the actual planned or received ship units are considered while creating the secondary charge shipment.Â\n\nIf the property is set to false and even though actual picked up and received ship units are present at the stop, only the planned picked up or received ship units of the first and last stops are considered while creating the secondary charge shipment.\n\nDefault: falseÂ\n\nglog.business.secondarycharge.shipUnitDwellTimeCalc.truncateDates\n\n6.3.4\n\nThis property calculates dwell time for secondary charge shipments. Before calculating the dwell time, this property defines whether to truncate the departure and arrival time or not. When this property value is set to 'true', the departure and arrival time truncates to 12 A.M. For example, 08-04-2014 09:20:25 will be truncated to 08-04-2014 00:000:00) and then calculates the dwell time. If the property is set to 'false', the time is not truncated and the exact difference between departure time and arrival time is calculated as dwell time.\n\nThe default value for this property is 'true'.\n\nglog.business.serviceprovider.redriveShipments\n\n6.4.2\n\nIf using the parameter \"PLAN SHIPMENTS WITH CARRIER COMMITMENT\", this property allows you to prevent service provider assignment logic from redriving the shipment graphs of multi-leg shipments. This redrive does not work well with the parameter \"Hold as Late as Possible\" set, because it drives some shipments early.\n\nThe default is true.\n\nThe redrive can be avoided by setting this to false.\n\nWhen false, and the redrive is avoided, a problem may arise when first leg shipments are subject to service provider commitments among carriers with different first leg transit times.Â For example, if service provider assignment switches a first leg shipment to a service provider with a longer transit time than the original service provider, and does not redrive, then the first leg shipment may end before the second leg shipment begins. (This is the situation that the redrive is designed to prevent.)\n\nglog.business.serviceprovider.retender.skipServProv\n\n22B\n\nUnable to re-tender a shipment when one of the service provider in the flow is set to not allow tender. When you retender the shipment, the system evaluates all rates/carriers and does not remove carriers that cannot tender.\n\nWhile retendering, the system will now skip the service provider if the 'Allow Tender' check box is not selected for that service provider. Use this property to either enable or disable this logic.Â Set this property to true while re-tendering a shipment, the system skips the service provider that does not allow tendering and goes to the next available service provider.\n\nIf you want to use the old behavior you have to set this property value as false.\n\nDefault: true\n\nglog.business.session.useMatrixServiceToGenerateRushHours\n\n20C\n\nSet this property to true to use the HERE route matrix host for which the URL is specified in the here.route.matrix.host property.\n\nBoth of these properties are required to use the HERE route matrix host.\n\nThe default is false which means the Generate Rush Hours action will use the property of here.route.host.\n\nglog.business.shipGroup.action.createShipGroup.disableInputUI\n\n21C\n\nUse this property to enable or disable the screen for the Create Shipment Group action which displays the criteria based on which the shipment groups will be generated.\n\nThe default value is false.\n\nWhen the property is false, the action will not display the criteria screen and creates a shipment group based on the selected shipments and the information you provide.\n\nWhen the property is true, the action displays the criteria screen based on which the shipments groups are generated.\n\nglog.business.shipgroup.addRemoveShipment.reAssociateSecCharge\n\n23B\n\nThis property is used to control the re-association of secondary charge shipments for the web actionsÂ Add Shipments to Group, Add Partial Shipments to Group, Remove Shipments from Group, and Remove Partial Shipments from Group.\n\nWhile executing the above web actions if the property value is set to true, the system re-associates theÂ secondary charge shipments.Â\n\nIf the property value is set to false when executing the above web actions, the system doesn't re-associate the secondary charge shipments.\n\nDefault: true.\n\nglog.business.shipgroup.findValidRules.forShipmentsWithNoItinerary\n\n21A\n\nWhen creating the shipment groups, at the end of a bulk plan or when searching for shipment groups for the action Add Shipment to Shipment Group, OTM tries to fetch the valid rules for the shipment. In order to consider fetching of these valid rules for shipments that does not have any itinerary (Handling Shipments, Secondary Charge Shipments, and SAW Shipments) set the property value to true.\n\nDefault: false\n\nglog.business.shipment.action.createWAInput.sortByStartTime\n\n22A\n\nThis propertyÂ uses the start time of shipment and controls the sorting order of shipments, when you perform the Create Work Assignment action.\n\nIf the property is set to the values below:\n\nÂ Â Â Â Â Â A - sorts the selected shipments in ascending order of start time\n\nÂ Â Â Â Â Â D - sorts the selected shipments in descending order of start time\n\nBy default, if this property is not set to any value then the Create Work Assignment screen displays the order of shipment similar to the shipment order in the Shipment manager result screen.\n\nglog.business.shipment.actions.rerateAndRecalculate.useDigiFrtRates\n\n24A\n\nIf the shipment is currently planned with Digital Freight (DF) rate offering and this property is set to true, OTM considers DF rates for Rerate or Recalculate Shipment Cost shipment actions.\n\nIf this property is set to false, OTM does not consider the DF rates for Rerate or Recalculate Shipment Cost shipment actions.\n\nglog.business.shipment.bypassVpdForShipmentRemoval\n\nÂ 22C\n\nThis property is used to ignore a shipment-based VPD profile when an action removes a shipment. If a shipment-based VPD profile is too narrowly defined, so that the shipment is actually not accessible when the associated ship units have been removed, then the VPD profile may actually prevent the shipment from being deleted.Â\n\nSetting this property to true will avoid this problem. The default is false. When false, any shipment-based VPD profile will be enforced when an action tries to remove a shipment.Â\n\nglog.business.shipment.alreadyFailedRateServiceCache\n\nÂ\n\nWhen calculating service time, this property configures Oracle Transportation Management to \"remember\" rate services that did not meet service time so that additional rates using that rate service will not be tested again.\n\nglog.business.shipment.costFractionalDigits\n\nÂ\n\nThis sets the decimal place precision when calculating shipment costs. You can enter zero or any positive integer Â to define the precision.\n\nFor example, if you set this to 2, then Oracle Transportation Management will use 2 decimal places for all the shipment costs when adding them together. This prevents inaccurate calculations that may occur when adding decimals together as they appear in the database and then rounding or truncating them at the end of the calculation.\n\nThe default is null, which will use the numbers in the database exactly as they appear.\n\nglog.business.shipment.deleteShipments.retainOrderMovements\n\n6.0\n\nControls whether order movements are removed when shipments are deleted.\n\nWhen this is false (the default), order movements on the deleted shipments will be removed, and the order release will be put in planned unscheduled status. If there are related downstream/upstream order movements or if the order release is split, you will be asked to set this property to True. If false, in a multi-leg scenario where an order is planned across multiple legs, you cannot not delete a shipment on one leg using the \"Delete Shipment\".\n\nWhen the property is set to True, shipments and shipment ship units will be deleted, order movements on the deleted shipments will not be removed, and the order release will remain in planned final status. With the property set to true, the delete shipment function is essentially the same as querying all the order movements on that shipment and unassigning them.\n\nIf you plan order movements, you will probably want to set this to true. If you do not plan order movements, leave this as false.\n\nglog.business.shipment.estimateServiceTime\n\nÂ\n\nUsed for multi-leg planning where several leg options can be pruned using an estimated service time. Setting to On helps multi-leg logic run faster.\n\nglog.business.shipment.ignoreStopSpecialServiceWhenCalcBobtailDeadhead\n\n20A\n\nThis property is used to determine if a segment is bobtail or deadhead when using NFR stops and there is no shipment equipment for the segment. Set this to false to consider special services on the pickup or drop off stop when determining whether a segment is bobtail or deadhead. The default is true meaning special services are ignored when determining bobtail and deadhead on a segment.\n\nWhen false, to determine whether a segment is deadhead or bobtail, OTM will look beyond whether there is a shipment equipment cover for the segment and look at special services for the stop to determine whether a segment is bobtail or deadhead.\n\nFor example, for the segment:\n\nNFR --- PICKUPSTOP: if there is no shipment equipment going thru this segment, OTM will also look at the special service at PICKUPSTOP. If it is PICKLOADED, this segment will be considered bobtail, otherwise it will be considered deadhead.\n\nFor the segment:\n\nDROPOFFSTOP --- NFR: if there is no shipment equipment cover for this segment, OTM will also look at the special service at DROPOFFSTOP. If it is DROPLOADED, this segment will be considered as bobtail, otherwise it will be considered deadhead.\n\nglog.business.shipment.isZeroWeightVolumeShipmentUnloaded\n\n20A\n\nIndicates if the Loaded Distance on a shipment should be calculated as zero, \"0\", when you have a shipment with both the weight and the volume as zero. The default is false.\n\nglog.business.shipment.legOptionOptimizer.maxNumItineraryOptions\n\n19A\n\nOTM can run out of memory due to the many combinations of rates, equipment, and legs. Each of these combinations is an \"itinerary option\". This property can guard against this. The default is 100000.Â For any order bundle, the bulk plan will not create more than this number of itinerary options. If this number of itinerary options is reached, the bulk plan will proceed normally, but it is possible that OTM will not find a least-cost solution.\n\nNote: Even with this property, we do not recommend using Multi-modal Equipment Group Profile Sets on itinerary legs.\n\nSee Direct Shipment Building of Order Releases to Multi-leg Shipments.\n\nglog.business.shipment.maxAppendableShipments\n\n6.2\n\nThe maximum number of results being returned by Find Appendable Shipments and being displayed in Append Shipment action.\n\nglog.business.shipment.MaxNumberOfShipmentGroupsForSplitOrders\n\nÂ\n\nIf the number of shipments is greater than the value set by this property, the shipments are grouped into the number of groups specified by the property.\n\nHowever, it may not utilize the capacity of the cheapest carrier in some instances. In general, if the number of shipment groups, determined by this property, is increased it would give a better solution at the expense of run time and memory usage.\n\nglog.business.shipment.maxNumViaPointCombinations\n\n20B\n\nThis property determines the threshold for via point location combinations when the bulk plan is using an itinerary with lots of via point combinations. The default is 1000. It will fail an order bundle on this leg if there are too many via point combinations. If the threshold is exceeded, a warning will appear on the bulk plan results performance tab. Warnings will also appear in the logs and the diagnostics. For example, if there are 32 source via points, and 32 destination via points, then there would be 1024 possible combinations, which would exceed the threshold. Â\n\nglog.business.shipment.organizeShipmentGraphs 22C\n\nThis property addresses an unusual scenario wherein order releases each match to several \"Pool-Crossdock\" itineraries. If multiple order releases fit into a bundle, but cannot go on the same shipment due to time constraints (or other constraints not checked during bundling), and if the planning parameter ALLOW SMALL DIRECT ORDERS TO BE SPLITTABLE is not turned on, then enabling this property will avoid the possibility that an order release will incorrectly be planned onto multiple shipments. Setting the property to true will enable additional logic to prevent this problem.\n\nThe property is set to false by default.\n\nglog.business.shipment.propagateEquipmentWeight\n\n6.2.1\n\nUse this property to propagate scale weights.\n\nIf this property is set to false (default), the copy just fills in the scale weight field. If this property is set to true, the ship unit line weight is changed and the shipment total weight is corrected.\n\nglog.business.shipment.recomputeTimesForSplitBundle 22C\n\nThis property controls whether to run additional logic to compute accurate order bundle time windows when maximum bundle sizes are larger than any equipment. This additional logic is executed only when Network Routing is used, and when the planning parameters ALLOW DIFFERENT RATE SERVICES FOR SPLIT ORDERS and COMPUTE SHIPMENT TIME WINDOW are set to true.The additional logic is executed when the property is set to true.\n\nThe property is set to false by default.\n\nglog.business.shipment.recordForTieredRating.recalcShipImmAfterRecording 24A\n\nWhen the property is set to true, the application recalculates the shipment costs immediately after recording the shipment for tiered rating.Â This means if multiple shipments are being recorded, each shipment can getÂ into different tiers. When set to false, this property recalculates shipment costs of all the shipments after they have been recorded.This means all the shipments will be in the same tier.\n\nBy default, this property is set to false.\n\nglog.business.shipment.repacking.useCostBasedConoptParameters\n\n21A\n\nWhen true, you can select conopt optimization algorithms that are only available for cost based repacking used during non-cost based repacking.\n\nTo minimize splitting with ship unit building and ship unit repacking, set the glog.business.order.packing.allowRemnantToSplit property to false and set the glog.business.shipment.repacking.useCostBasedConoptParameters property to true. Then select logic configuration type of SUBLD CONTAINER OPTIMIZATION and select the parameter SUBLD COST-BASED CONOPT ALGORITHM, Â and select the parameter value \"5: Column Generation with Quick Pack and Single Container MIP\".\n\nBy default, the property is set to false.\n\nÂ\n\nglog.business.shipment.totalPackageCount.multiplyByShipUnitCount\n\nÂ\n\nDefault: False\n\nWhen False, the Shipment field Total Package Count will be calculated by summing the package count from each of the lines.\n\nWhen True, each package count will be multiplied by the ship unit count during summation. Setting the property to True enables the original behavior.\n\nglog.business.shipment.trackingEvent.disableAddTrackingEventButton\n\n23A\n\nThis property controls the appearance of the Add Shipment Tracking Event button on the Shipment Tracking Events page after performing the View Shipment Tracking Events web actionÂ on the Buy Shipment Events Manager screen.\n\nWhen you set the property to true, and view any Shipment Tracking Event, the Add Shipment Tracking Event buttonÂ will not be displayed.\n\nThe button will only be displayed when the ACL Shipment Event - Update is enabled and the property is set to false.Â If any of these is not enabled, the button will not be displayed.\n\nDefault: false\n\nglog.business.shipment.useLegacyUtilRecalc\n\n20C\n\nWhen you set this property to false and while saving a shipment into database (persisting a shipment) without using shipment actuals, you may see some improvement in performance (based on the volume of data) only when the parameterÂ CHECK EQUIPMENT CAPACITY IN REFERENCE UNITSÂ is set to false.\n\nBy default, the property is set to true.\n\nglog.business.shipment.useShipmentPlanningParameterSet\n\n6.2\n\nIf true, use the shipment's parameter set (if any) for shipment actions. Otherwise, use the default parameter set (for user or for domain).\n\nDefault: true\n\nglog.business.shipment.useTimeWindowRateCheck\n\n22A\n\nDefault: False When False, only the order's early pick up time is considered when finding applicable rates. This may result in the use of an expired rate for shipments on legs other than the first leg on a multi-leg scenario. When true, the system will be picking up the right rate for a second rate on a multi-leg scenario. Setting the property to true will invoke the new behavior.\n\nglog.business.shipmentactual.loadGraphThroughOrderReleases\n\n20C\n\nWhen you set this property to true, order movement graph in shipment actual will be loaded through order releases which are related to the actual shipment. If there are no related order releases, OTM will still load order movement graph through shipment.\n\nWhen this property is set to false, OTM will decide the best way to load order movement graph either through shipment or order releases or ship unit lines.\n\nBy default, this property is set to false.\n\nglog.business.shipmentactual.LockShipmentsOnly\n\n21C\n\nIf you want to lock only related shipments instead of locking all related shipments, order releases and order movements, you should set this property to true.\n\nBy default, Â this property is set to false and the system locks all related shipments, order releases, and order movements.\n\nglog.business.shipmentEquipment.dataPopulation\n\n5.5 CU4\n\nThis property provides the ability to turn off shipment equipment data population. The generation of the Equipment Initial/Number is not affected by this property, although the Equipment Group, Equipment Type and Tare Weight fields will not be populated if the property is False.\n\nDefault: True\n\nglog.business.shipmentUpdateSession.checkShipmentConflictWhenCommitting\n\n6.2.9\n\nThis property addresses conflicts which may arise when a current shipment being committed has been updated by another process during the execution of the current process.\n\nWhen the property value is 0, do not try to detect conflict at all. When the property value is 1, treat the conflict as error and throw an exception. When the property value is 2, ignore the conflict but log a warning.\n\nDefault: 0\n\nglog.business.shipmentUpdateSession.ignoreRemoveException.ShipmentInvolvedParty\n\n6.0\n\nIf true, and the ShipmentInvolvedParties to be removed, no longer exist in database, OTM will log the RemoveException. This will allow any actions in process to continue.\n\nDefault: False\n\nglog.business.shipment.useSShipUnitEquipRefUnit\n\n22A\n\nWhen this feature is turned on and if the parameter CHECK EQUIPMENT CAPACITY IN REFERENCE UNITS is set to true:\n\nfor all planning actions such as bulk plan, build shipment, merge shipment Â that involved equipment packing or equipment change, Â shipment ship unit equipment reference unit records will be created either derived from shipment ship unitâs order ship unit, or keep the shipment ship unit equipment reference unit when Fixed ERU Count on shipment ship unit is true.\n\nif Fixed ERU Count is true on shipment ship unit, the equipment reference units defined on this ship unit will be used during container optimization packing. If Fixed ERU count is false, equipment reference units are from order ship units are used during container optimization packing.\n\nif Fixed ERU Count is true, Â the shipment ship units equipment reference unit records will be kept on planned or planned order movements along with its shipment ship unit. Â Â If Fixed ERU Count is false, the shipment ship units equipment reference unit records will be removed from its shipment ship unit when order movement is unplanned\n\nthe shipment equipment reference unit section query the shipment ship unit equipment reference unit record\n\nWhen this property is turned off:\n\nthe system will not:\n\npersist the shipment ship unit equipment reference unit records\n\nload the shipment ship unit equipment reference unit records\n\nallow user to add or edit shipment ship unit equipment reference unit records in the Shipment Ship Unit manager\n\ndisplay the new Shipment Ship Unit Equipment Reference Units under the More section on the shipment view screen\n\nthe Fixed ERU Count field on the shipment ship unit edit screen should be read only or hidden from the user (can i say, disabled)?\n\nthe shipment equipment reference unit section does not query the shipment ship unit equipment reference unit record\n\nthe recalc of ERU utilization should not look at the shipment ship unit equipment reference unit record\n\nignores the shipment ship unit equipment reference unit Â records through integration, i.e. donât persist, donât export\n\nDefault: false.\n\nglog.business.shipment.validateEquipmentByTrueRating\n\n21C\n\nWhen the planning parameter VALIDATE EQUIPMENT BY RATES is set to true, setting property glog.business.shipment.validateEquipmentByTrueRating to true will direct the system to perform actual rating and consider all order constraints while finding the set of rate-valid pieces of equipment for the container optimization logic.\n\nDefault: false.\n\nglog.business.shipmentactual.usePlanningParameterSetOnShipment\n\n23A\n\nWhen this property is set to true and a shipment ID is provided in shipment actual, the planning parameter set defined on the shipment will be used instead of the domain-level planning parameter set.Â\n\nBut if a shipment ID is not provided, (for example when shipment actual is used to persist a new shipment), then the domain-level planning parameter set will be used even if the property is set to true.\n\nSetting the property to false will result in shipment actual using the domain-level planning parameter set instead of the parameter set available on the shipment.\n\nDefault: false\n\nglog.business.taxCalcPrecision\n\nÂ\n\nThis property is used to specify the precision for tax calculation.\n\nDefault: 5\n\nglog.business.TrailerBuild.IsConsolidation\n\nÂ\n\nThis is used for Trailer Builds. If True, the Break Bulk Location ID from shipment group rule is used as the shipment group source location ID. Otherwise, it is used as the group destination location ID. The default is FALSE.\n\nIn other words, when the property is true, the shipments in the shipment group are consolidated in the group source location. Otherwise, they are deconsolidated (break bulk) in the group destination location.\n\nglog.business.TrailerBuild.PerformRounding\n\nglog.business.TrailerBuild.RoundingFactor\n\n6.0\n\nÂ\n\nThis enables Trailer Build to build the shipment groups using the rounded weight and/or volume to determine the maximum weight/volume that could fit on a shipment group (trailer).\n\nWhile adding up the shipment weight and volume to get the shipment group total weight and volume, the weight and volume of each shipment are calculated as follows:\n\nIf PerformRounding is WEIGHT or BOTH:\n\nÂ Â weight = (CEIL(weight/RoundingFactor))*RoundingFactor\n\nIf PerformRounding is VOLUME or BOTH:\n\nÂ Â volume = (CEIL(volume/RoundingFactor))*RoundingFactor\n\nIf PerformRounding is NONE, no rounding for weight/volume.\n\n(CEIL is ceiling. CEIL(argument) is the smallest integer that is not less than the argument. For example, CEIL(3.1)= 4, CEIL(3.9)= 4, CEIL(3)= 3).\n\nValid values for perform rounding are: NONE, WEIGHT, VOLUME, BOTH. The default is NONE.\n\nDefault for rounding factor is 1.\n\nglog.business.unassignOrders.loadLimitedGraph\n\n6.2.3\n\nThis controls how many shipments and order movements are brought into the Unassign Order Release logic. When true, the Unassign Order Release logic will bring in only the shipments that actually have the to-be-unassigned order releases and the order movements on those shipments.\n\nOnly these shipments will be re-driven. This is recommended only when you are sure that no other shipments need to be re-driven as the result of the Unassign Order Release action.\n\nDefault: false\n\nglog.business.workAssignment.preAssignResourceToSingleShipmentsinWA\n\n18\n\nWhen set to true, work assignment formation logic will fetch a resource for single shipment earlier in the process, so OTM does not skip the single shipment opportunities that could go earlier in the day.\n\nDefault: false\n\nglog.business.workAssignment.sortBasedOnShipmentCost\n\nÂ\n\nThese properties are being replaced by Â the Logic Configuration - Resource Scheduler parameter,Â RS SEQUENTIAL SAVINGS SORT METHOD, if you select option \"1. Start time ascending\", \"2. Weight descending\" or \"4. Cost descending\". They will be considered only when the logic configuration parameter is set to the default of \"0. None\". The properties will be considered in this priority (sortBasedOnShipmentStartTime has highest priority followed by sortBasedOnShipmentWeight, followed by sortBasedOnShipmentCost). Â\n\nglog.business.workAssignment.sortBasedOnShipmentStartTime\n\n18\n\nglog.business.workAssignment.sortBasedOnShipmentWeight\n\n18\n\nglog.business.workassignment.useStopArrTmWinwithManualActioninWA 24B\n\n\"Re-drive and Rerate Work Assignment\" action on Work Assignment constraints the Shipment Stop to Shipment Late Delivery time (as shipments downstream are not re-driven) and fails due to service time infeasibility. Setting this property to true will open the Shipment Stop late delivery time based on Order's Late Delivery Time Window.\n\nBy default, this is set to false.\n\nNote: Downstream shipments in a multi-shipment are not re-driven automatically, and require manual action."
    }
}