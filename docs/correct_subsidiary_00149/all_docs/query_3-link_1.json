{
    "id": "correct_subsidiary_00149_3",
    "rank": 1,
    "data": {
        "url": "https://docs.oracle.com/en/cloud/saas/transportation/24c/otmol/properties/glog/integration.property.htm",
        "read_more_link": "",
        "language": "en",
        "title": "glog.integration Properties",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/en/cloud/saas/transportation/24c/otmol/assets/images/feedback.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-06-20T15:44:24+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Determines if buy shipment related details display in the outbound Billing XML when performing Send Bill Interface on a bill or if only sell shipment related details display.\n\nBy default only sell shipment related details will be visible (default is false). If you want buy shipment related details displayed, then set the property to true.\n\nThis is a set of properties that restricts changing data text to upper case. This property is associated with the following property \"glog.integration.enableCaseChange\". Valid values for this property are element names. Some data such as arguments should stay in the format (case) they are in. For example, since the argument name and argument value is not to be changed, you would set the following properties:\n\nglog.integration.casechange.element=ArgName\n\nglog.integration.casechange.element=ArgValue\n\nOverrides the name of the data queue.\n\nIf you have created an integration data queue, you must declare the name of the data queue in one of these properties. For example, if you needed to configure the Integration Out Transport - FTP data queue you would create a copy of it and edit the copy. Then indicate the name of the copy in a property, such as:\n\nglog.integration.dataqueue.transport.ftp=\n\nGUEST.MY_TRANSPORT_FTP_COPY\n\nThis property can be configured to set a default value for the ship_unit_origin column on the order_release table. Values for this property are BL=order base by line, BS=order base by ship unit, RL=order release by line, RS=order release by ship unit. If this field (ship_unit_origin) is not 'RS' (formerly 'U'), the system deletes all existing order ship units for the given order release, before calling new releasing logic to generate ship units.Â This is optional and on an as-needed basis.\n\nBL=order base by line\n\nBS=order base by ship unit\n\nRL=order release by line\n\nRS=order release by ship unit\n\nWhen new release comes in via integration, this property has no impact.\n\nWhen an update to a release is sent in via integration and if ship_unit_origin is null in the database, then the value of this property will be saved in the database for the ship_unit_origin column. For example, you set the property to BL and the ship_unit_origin is null. When the order release is updated via integration the BL from the property will be entered in the ship_unit_origin column.\n\nIf the property is not set, then the ship_unit_origin column will not be updated.\n\nIf set to \"true\", this property controls the creation of locations so that the creation is sequential rather than multiple threads attempting to create the same location at the same time. Defaults to false.\n\nThis property should be set to true only if you experience DUPLICATE KEY ERROR DUE TO SIMULTANEOUS LOCATION UPDATES. Otherwise, since the system forces location creation to be done sequentially, there can be some contention.\n\n1 - Allows the RemoteQueryReply element to be wrapped in the GLogXMLElement.\n\nThis allows users to send more than one RIQ into Oracle Transportation Management using the RemoteQuery interface. Since the RemoteQueryReply interface only sends one reply back, it will drop the additional RIQs. With this property set to 1, it will wrap the reply in the XML transmission which will send all the RIQs back in the reply.\n\nThe default is 0.\n\nThe element Transmission/TransmissionHeader/QueryReplyFormat when given in the XML to be uploaded provides an override to the property.\n\ntrue -Generate an error, if glog.integration.ShipmentStatus.findSSStopNumByLocationID is enabled and the LocationID is missing from the ShipmentStatus interface.\n\nfalse - No error is generated, even if glog.integration.ShipmentStatus.findSSStopNumByLocationID is enabled and the LocationID is missing from the ShipmentStatus interface.\n\nDefault: false.\n\nNote: Previously, you could set the property value to 0 or 1. Now, you will only be able to set the property value to true or false. For backward compatibility, the application supports the property value 0 or 1 if already set.\n\nNote: This must be set to false if you pass both LocationID and LocationName in the same transaction. Otherwise, the transaction will error out even though it is a non stop related event.\n\nWhen this property value is set to true, the application translates timeZone of the timezone gid \"Local\" to a real timeZone if there is sufficient stop level information available.\n\nWhen the property value is set to false, the application doesn't translate the timeZone.\n\nDefault: true.\n\nNote: Previously, you could set the property value to 0 or 1. Now, you will only be able to set the property value to true or false. For backward compatibility, the application supports the property value 0 or 1 if already set.\n\nWhen the property is set to true, both the tracking event and its related documents transmitted via inbound transmission are simultaneously persisted i.e. the agent actions listening to tracking event lifetime events have access to the related documents. When this property is set to false, then the tracking event is persisted before the related documents i.e. the agent actions listening to tracking event lifetime events may or may not have access to the related documents based onÂ whether the documents are persisted first or the agent actions run before that.Â Additionally, any errors encountered while saving documents will not impede the saving of the tracking event.\n\nSet this to true to acknowledge an inbound transmission immediately rather than only when all contained transactions have been staged for later processing. Although this capability, referenced as \"pre-staging,\" provides a quicker acknowledgment to the sending client, a greater benefit will be noticed when the number of transactions contained within the transmissions are large. In these use cases, it has been possible that client processes can time out before the transmission acknowledgment (TransmissionAck) has been returned. When enabled it will apply to ALL inbound transmissions. I.e. it is not possible to use the new pre-staging logic for specific transmissions. See the Integration Guide for more details.\n\nDefault: False\n\nControls whether the ObjectGid(s) that are found via the IntSavedQuery or other search logic should be re-used for a Transaction when a Transaction is re-processed. This will enable only the ObjectGid(s) that were not processed to be re-processed. The ObjectGid(s) are stored in the i_transaction_detail table and will be re-used when this property is true.\n\nWhen the property is false, the i_transaction_detail records will be deleted and the query will be re-run to generate a new set of ObjectGid(s).\n\nThe default behavior regarding the validation of inbound XML transmissions is controlled by the glog.integration.validation property.\n\nOnPersistErrorOnly - (Default) Oracle Transportation Management only validates fully after a database persistence error occurs. However, when the data is invalid, Oracle Transportation Management goes back and validates the XML in order to provide user-friendly error messages stated in terms of the XML rather than in database terms.\n\nNone - the only errors issued will be Oracle persistence errors.\n\nFull -Every inbound XML transmission is subjected to full validation. This causes the appserver to issue many SQL queries to validate foreign key constraints. This is the Oracle Transportation Management 3.0 behavior.\n\nThe integration implementer has the capability to define a custom XSLT stylesheet stored in the Stylesheet Content table and use it to correct any invalid XML messages that would otherwise be rejected.\n\nThe feature is available for inbound Transmission and DBXML XML requests and is enabled by setting one of these properties to have the value of the Stylesheet Content GID created to perform the correction.\n\nFor more information on using this property and the required stylesheet, see Using a Stylesheet to Correct Inbound XML Messages (Doc ID 2680823.1)."
    }
}