{
    "id": "correct_subsidiary_00149_3",
    "rank": 72,
    "data": {
        "url": "https://docs.oracle.com/en/cloud/saas/transportation/24b/otmol/planning/process_manager/process_manager/logs/system_log_ids.htm",
        "read_more_link": "",
        "language": "en",
        "title": "System Log IDs",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/en/cloud/saas/transportation/24b/otmol/assets/images/feedback.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-03-05T19:06:28+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "This page is accessed via Configuration and Administration > Power Data > Diagnostics > Log Files.\n\nThe System log is a default log file that records the time, severity, and other data about system events such as status changes, planning actions, and rate engine actions. Select Logs from the System Log Entry Selection page (accessed via Process Management under any menu option. Then, under Logs, select System.) To create Log files, go to the Log Files page. Each log file has a frequency at which it runs, as detailed in the Log Suppression ID Frequencies table.\n\nThe following is a list of system log ID and what they monitor.\n\nActionLog: Adds context headers and state information to action logs. This ID cannot be suppressed or disabled. It is automatically added to all action logs.\n\nAgent: Workflow agents and related processes.\n\nAllocation: Tracks the allocation process for financials.\n\nAppointment: Appointment Management business logic.\n\nAssetRule: Logs information when evaluating special service rules and remark rules during asset management.\n\nAssignEquipment: Log information about the Assign Equipment process.\n\nAutoAssign: Indicates when auto assign logic is starting and ending and which rules are being run.\n\nAutoAssignDetails: Detailed output of each rule as it is being applied and the conditions that are being tested.\n\nBDT: Bean Data Tree. For processes using a DirectSQL approach to bulk loading.\n\nBNRules: Processes related to the Business Number Generator.\n\nBulkPlanMilestone: High level steps during a bulk plan run.\n\nBulkPlanMilestoneDetails: High level steps during a bulk plan run - with a greater detail.\n\nBulkPlanning: A duplicate of the BulkPlanMilestone.\n\nBulkplanPkGen: Used to log the bulk plan XID generated by Business Number Generator for a bulk plan process.\n\nBusinessMap: Processes related to data persistence.\n\nBusinessMapDetails: Shows the map file details for the generic container persistence maps.\n\nBusinessObjectProcessor: Logs how update activity triggers lifetime events.\n\nCache: Low-level logging to track general Oracle Transportation Management cache additions and deletions.\n\nCalendar: Calendar calculations and processes. Deprecated. Do not use. See WorkPeriodSchedule.\n\nCapacityCommitmentAllocation: Logs the results of the Capacity Commitment Allocation action.\n\nCarrierCapacity: Logging for carrier capacity logic.\n\nNote: If the optional feature \"CONSIDER CAPACITY USAGE CACHE\" is enabled,Â capacity usage data will be cached in a process-based cache to reduce overall database querying and improve bulk plan performance. Logs with the multi-stop process-based cache initiation, usage with cached IDs, and termination will be created under CarrierCapacity log details.\n\nCarrierCommitment: Provides the logging for the service provider assignment logic pertaining to percent and count commitments in bulk plan and build shipment process.\n\nCarrierCommitmentDetails: Same as CARRIER_COMMITMENT with a lot more details. Â Since this could potentially generate a lot of log messages, use this with caution.\n\nClaim: For any of the logic surrounding claim actions. High level logging.\n\nClaimDetails: For any of the logic surrounding claim actions. Detailed level logging.\n\nClientSession: Traces management of client sessions. This log ID should never be turned on unless directed to do so by Oracle. It will print many log statements causing a much quicker rollover of logs and a performance degradation to the system.\n\nCMISCalls: Logs detailed session and call information for CMIS integration.\n\nCollaborative Testing: For internal use only.\n\nCommonInterface: High level flow for internal data-level API used by various components, e.g. REST API.\n\nCommonInterfaceDetails: Detail flow for CommonInterface.\n\nCompareEngine: Detect what data have been changed as a result of user, integration, business actions, and raise relevant lifetime events.\n\nConnectionPools: Used to debug the initialization of connection pools.\n\nConopt: Container optimization.\n\nContentManagement: Logs document parameter generation and platform-independent interactions with each CMS.\n\nContentSource: Lists the processing for the Content Source.\n\nContentSourceDetails: Includes details such as XML data sent and received.\n\nContinuousMoves: Logs all the high level steps using a continuous moves algorithm.\n\nContinuousMovesDetails: Logs detailed information for a continuous move.\n\nConversionError: If currency conversion errors are not suppressed and logged to the EXCEPTION log, the errors are logged in the ConversionError log ID. ConversionError is automatically enabled in the SYSTEM and WEB logs and not suppressed by default log suppression algorithms. You can opt to remove it from the logs if needed.\n\nConvertToRouteTemplate: Logs the results of the Convert to Route Template action on a CR Route.\n\nCoroute: Logging pertaining to cooperative route optimization and planning.\n\nCorouteAggregation: Logging pertaining to cooperative route aggregation logic.\n\nCorouteRouting: This will provide logs pertaining to the route generation of the cooperative routes. Since this produces too much logging, this is only active when the glog.coroute.app.business.route.allowRoutingLogging property is set.\n\nCorouteSolver: Logging pertaining to the optimization of cooperative route engine.\n\nCurrency: Currency processes including loading exchange rates, Federal Reserve, and IMF (International Monetary Fund) data.\n\nDashDetails: Detailed FICO XPRESS OPTIMIZER output for each optimization problem. Includes summary problem formulation.\n\nDataLoading: Use this log for loading data from database or generic container into a memory object, such as loading table shipments into the TShipment object.\n\nDataQueue: Data queue activity including insertion, polling and removal of records.\n\nDataQueueDetails: Logs each record enqueued and dequeued from the data queues. Also logs each time the queue is polled.\n\nDataSource: Tracks data source and connection pool activity.\n\nDBXML: Displays logs for DB.XML Export/Imports. For example, for Import this will show the SQL statements executed and the elapsed time for each statement in milliseconds.\n\nDecisionControlCenter: Replaces the DispatchBoard log. It monitors advanced layouts. This is a Web log ID.\n\nDemurrage: Displays high level steps to capture demurrage transaction (demurrage equipment movement) based on CLM or EDI 322.\n\nDemurrageDetails: Displays high level steps during a demurrage debit and credit calculation run and generate demurrage bill/settlement\n\nDevice: Shows log messages for device-specific messages like the logon and logout of devices.\n\nDirectSqlUpdate: Displays warnings and decisions made during the DIRECT SQL UPDATE execution. It includes details on which refresh option is used, and whether it needs to delegate to another refresh option; details on which records required refresh and how these were obtained; and details on migration decisions.\n\nDistance: Distance calculations, including these external distance engines: MilemakerEngine, and PCMilerEngine.\n\nDistanceDebug: It captures information like user, domain, and role while:\n\nClearing the cache.\n\nLoading the Rate Distance Exception cache (locationPairCache), where the distance of locations with source and destination hierarchy as LOCATION is loaded.\n\nTrying to get the distance between the source and destination using geographical hierarchies.DistanceDetails: Detailed logging about distance calculation.\n\nDocCloudCalls: Enable this log id, when you have to log the calls being made to Oracle Document Cloud for uploading, downloading the documents.\n\nNote: This storage provider will be deprecated. If youâre using this solution, consider moving to another option.\n\nDocuments: Provides detailed information during the generation of a Oracle Analytics Publisher document.\n\nDomainCopy: This log ID is for logging the Domain Copy process, which is when a DBA or Admin User copies a domain/sub-domain to a new domain/sub-domain during system maintenance period.\n\nEJB: Enterprise Java Bean processes.\n\nETL: ETL logging for Transportation Intelligence and Global Trade Intelligence. See Process Management: Transportation Intelligence for more details.\n\nNote: To see complete logging information like ODI Log Level, ODI User, ODI Scenario name, etc., turn on both the Workflow and ETL log IDs.\n\nEvents: Shipment event entry and modification.\n\nEventsDetails: Detailed logging regarding shipment events.\n\nException: Any problem which halts execution of an Oracle Transportation Management action or workflow. Includes a trace of the error for support. This logs any exception thrown out of a component, including handled and unhandled exceptions. Unhandled exceptions terminate a process and report an error to the user.\n\nFAN: FAN database events received by the system.\n\nFileContentAnalysis: Logging related to the analysis and validation of files uploaded for import into the system, excluding virus checking.\n\nFileTracking: Tracks file management additions and any errors occurring due to usage constraints, file management removals, catalog parsing, usage alerts, usage removals, and usage failures.\n\nFinder: Used in Finder and Finder Results related logs.\n\nFlashback: Logs database flashback activity.\n\nFleetAssignment: Logs transactions associated with equipment and drivers.\n\nFleetAssignmentDetails: Logs the details of transactions associated with equipment and drivers.\n\nFleetString: Used for logging the Optimize Driver Assignment Driver action.\n\nFleetStringDetails: Used for logging greater detail of the Optimize Driver Assignment Driver action.\n\nFTP: FTP (File Transfer Protocol) transmissions and events.\n\nNote: FTP is not supported.\n\nGLog: User logon and authentication processes.\n\nGTMCalculations: This log is used for allocation and rollup on trade transactions and declarations. This is also used to debug any issue that occur when running the Convert UOMs action on a declaration.\n\nGTMCampaign: Used for logging all the campaign related actions.\n\nGTMComplianceScreen: This is used to log compliance screening of trade transactions and declarations.\n\nGTMComplianceScreenDetails: Used for adding detail logging on compliance screening.\n\nGTMConsolidation: Used to log method invocations for trade consolidation.\n\nGTMConsolidationDetails: Used to give detail level of logging for trade transaction consolidation.\n\nGTMConstraintSet: Used for constraint set matching of transaction with item structure or license.\n\nGTMDataLoad: Details the process of loading data from the third party data provider into GTM.\n\nGTMDataTransfer: Used for logging the data transfer details and data configuration rule determination.\n\nGTMDataTransferLogic: Used for detailed logging of the data transfer logic for every data transfer attribute.\n\nGTMDeclaration: Used for logging all the declaration related actions on transaction.\n\nGTMDeclarationDetails: Not used anymore.\n\nGTMElcAdhocScreen: Not used anymore.\n\nGTMFormulaEngine: Used for logging the execution of forumlae.\n\nGTMLandedCostSimulation: Used for logging the details during landed cost simulation.\n\nGTMLicenseDetermination: Details of what parameters were used to determine the best fit license.\n\nGTMPartyScreen: This log is used for restricted party screening on contacts, trade transaction, and declarations.\n\nGTMPartyScreenDetails:Used for detailed logging of restricted party screening.\n\nGTMProductClassification: Used for logging the Lookup Product Classification Service.\n\nGTMProductClassificationDetails: Used for logging the Lookup Product Classification Service at detail level.\n\nGTMService: This log is used for all the services on a transaction (Compliance, Allocate actions, sum actions, and RPLS).\n\nGTMServiceDetail: Provides more details on GTM services on transactions.\n\nGTMShipment: Tracks Customs Filing Document Generation and the Filing Response Handling Process.\n\nGTMTax: Used for logging the tax callout to external system.\n\nGTMTradeTransaction: Used for logging the trade transaction related actions on OTM shipment and order release, and also logging the trade transaction/ trade transaction line related data loading or saving.\n\nHealthCheck: Logs health check success and failure log details.\n\nHTTP: HTTP (Hypertext Transfer Protocol) transmissions.\n\nICAP: Virus checking activity.\n\nIMessage: Shows processing for mobile messages.\n\nIMessageDetails: Shows detailed processing for mobile messages.\n\nImpersonation: Impersonate a security user to gain data visibility.\n\nIntegrationInbound: Inbound integration transmissions.\n\nIntegrationMerge: Integration merge processes.\n\nIntegrationNotify: Creation of XML notifications for outbound transmission.\n\nIntegrationOutbound: Outbound integration transmissions.\n\nIntegrationOutboundDetail: Provides additional outbound detail information during the generating of XML for outbound processing of integration.\n\nIntegrationTransform: User transformation of outbound transmissions.\n\nITMIntegration: Tracks the communication and data transferred between EBS and OTM instances.\n\nITMIntegrationDetails: Tracks the communication and data transferredÂ in greater detail between EBS and OTM instances.\n\nJakartaVelocity: Velocity is a template engine that can be used to send email notifications.\n\nJDBC: Database connection information.\n\nJMS: Java Message Service processes such as publishing and subscribing to message topics. JMS is used to access enterprise messaging systems from Java programs. This log ID is used for performance-related severities only.\n\nLDAP: Tracks each communication request to LDAP. The parameters of each request are logged along with the success or failure of the request. By default, user and password parameters are suppressed. To enable them, set ldap.debugUserNames=true and ldap.debugPasswords=true.\n\nLicense: Used to log license details.\n\nLifetime: Events that happen during the life cycle of an object.\n\nLoadConfig: Logs messages during the load configuration runs.\n\nLoadConfigDetails: Generates detailed load configuration steps.\n\nLoadConfigHighDetails: Data logging at a higher volume for load configurations.\n\nLoadservice: Load service requirements and processes.\n\nLocal: Provides detailed logging of Local J2EE subcomponents. If enabled, the system checks the glog.local.debug property for a comma-delimited list of subcomponents to track.\n\nLocOpt: Steps of location capacity constraints algorithm.\n\nLogisticsGuide: Monitors the Logistics Guide Building Process\n\nLogisticsGuideDetails: Monitors the details of the Logistics Guide Building Process.\n\nLogSuppression: Tracks when logging is suppressed from the Disable Logging process, logging is suppressed/enabled from the Log Overview screen, and logging is enabled from Log File edits.\n\nLongRunningTask: Monitor creation, changes, and completion of long running tasks in the logs.\n\nMachineLearning: Monitors the loading of data to Machine Learning Intelligence (OTI), exporting of data to Machine Learning Service, training on the machine learning service, and performing of predictions.\n\nMachine Learning Details: Monitors details of the loading of data to Machine Learning Intelligence (OTI), exporting of data to Machine Learning Service, training on the machine learning service, and performing of predictions.\n\nMail: Diagnostics for outbound email and fax messages. Whenever a mail session is refreshed, a log message is written to the Mail Log ID.\n\nMailError: If the glog.mail.suppressAddressExceptions property is set to \"true\", address failures in outbound email are logged to this log ID.Â All transport exceptions are echoed to the MailError log ID as well asÂ the EXCEPTION log. You can create a dedicated MailError log to ensure that these exceptions can be reviewed without worry of EXCEPTION log cycling.\n\nMailQuota: Logs activity related to mail quota groups that limit mail volumes in the cloud environment.\n\nMap: Used to log map-related actions.\n\nMapDetails: Used to log map actions using the color sequencing logic configurations.\n\nMediator: Logging of transaction sequencing.\n\nMediatorPoller: The MediatorPoller ID is used to view mediator activity specifically related to mediation polling. Background mediator activity is logged under the Mediator ID.\n\nMediatorUI: Reserved for system use.\n\nMetricDetails: Review of each individual metric operation in the database.\n\nMetrics: Overview of metric collection.\n\nMigrationProject: Logs high-level steps during promote to production.\n\nMigrationProjectDetail: Logs detailed information on each primary key used in promote to production.\n\nMobile: Logs information for mobile application issues. For logging mobile issues, make sure App and Web logging is turned on for Exception, Mobile, and RESTWebService.Â\n\nNote:Â The old Oracle Transportation Mobile iOS/Android app has been deprecated and is no longer supported.\n\nMobileDetails: More detailed mobile logging.\n\nNote:Â The old Oracle Transportation Mobile iOS/Android app has been deprecated and is no longer supported.\n\nModelingDataRule: Logs information about the data rules in network modeling.\n\nModeling Scenario: Logs information about the modeling scenario.\n\nModeling ScenarioDetails: Logs detailed information about the modeling scenario.\n\nMultistop: Processes related to building multi-stop shipments.\n\nMultistopDetails: Multi-stop processes related to pairing stops. This is a child of the multi-stop Log ID.\n\nNetworkRouting: Provides information about order routing using the Network Routing logic (when the parameter ORDER ROUTING METHOD set to \"Network Routing\").\n\nNetworkRoutingDetails: Provides detailed information about the optimization logic used within the Network Routing order routing logic (when the parameter ORDER ROUTING METHOD set to \"Network Routing\").\n\nNotificationFailure: If there is a failure with outbound notifications this logs the notification. Limited to batch notification.\n\nNotify: Processes related to notification transmissions sent to specific contacts.\n\nOAuth: Flow for outbound OAuth authorization used by REST client calls.\n\nObjectLock: Low-level logging to track contention between Oracle Transportation Management business objects.\n\nObjectLockPoller: The ObjectLockPoller ID is used to view object lock activity specifically related to object lock polling. Background object lock activity is logged under the ObjectLock ID.\n\nObjectLockUI: Logs object lock activity resulting from user action on the Object Lock diagnostic screen.\n\nOCI: Controls communication between the system and Oracle Cloud Infrastructure. This log can only be activated by Oracle.\n\nOptMip: Logging pertaining to the FICO XPRESS OPTIMIZER Solver - includes problem formulation and the solve using FICO XPRESS OPTIMIZER.\n\nOptMipData:Â Enable this log to export a CSV file of column generation information (like columns, dual, variable names and their OTM object references, load points) when it is used. This can be used to analyse the solution obtained from column generation.Â Only Container Optimization use case is currently supported for this diagnostic CSV file.\n\nOptMipDetails: Detailed logging of FICO XPRESS OPTIMIZER Solver - not only generates logs created by Oracle Transportation Management, but also includes the logs generated by FICO XPRESS OPTIMIZER Solver itself.\n\nOptPack: Log for pattern-based loading for boxes.\n\nOracleAdvancedQueue: Diagnostics for Oracle Advanced Queuing support.\n\nNote: Oracle Advanced Queueing (OAQ) is no longer supported and will not function.\n\nOracleAdvanceQueueDetails: Greater details for Oracle Advanced Queuing.\n\nNote: Oracle Advanced Queueing (OAQ) is no longer supported and will not function.\n\nOrderBundling: Processes related to bundling order bases and order releases when building shipments.\n\nOrderBundlingDetails: Detailed logging for order bundling logic.\n\nOracleConversationExperience: Logging for Oracle Content and Experience Cloud integration.\n\nOrderModification: Logs Order Modification changes.\n\nOrderMovementReplacement: Logs for order movement replacements.\n\nOrderPriorities: Logs all process events related to order prioritization in the planning logic.\n\nOrderReleasing: Logs activity related to the creation of order releases from order bases.\n\nPackingSolver: Logs pertaining to the container optimization logic.\n\nPackingSolverData: Turn this log on to store the data that goes into the container optimization in a CSV file. The CSV files can be sent to the Oracle Transportation Management development team for diagnosing container optimization related issues.\n\nPackingSolverDetails: Very details logs of container optimization. Generates a lot of logs and so use this with caution.\n\nPersistence: Persistence Service Engine processes.\n\nPersistenceDetails: Logs the data in a generic container as well as how the persistence engine Â persists the container.\n\nPinnedConnections: Enable to monitor the handling of connection pinning.\n\nPlanDiag: Logging for planning diagnostics.\n\nPlanningData: Logs pertaining to export planning data and import planning data functionality.\n\nPlanningDataDetails: Detailed logging for export planning data and import planning data functionality.\n\nPlanning: Shipment planning processes involving itineraries, equipment groups, capacity usage, building shipments, secondary charges, and shipment groups.\n\nPlanningDetails: Detailed logging for planning logic.\n\nPlanningGuide: Logs pertaining to the creation and usage of routing guide for cost based pool/cross dock selection.\n\nPlanningImprovement: The steps of the solution quality improvement algorithm.\n\nPlanningParameters: Output of the parameters used for planning.\n\nPlanningRegression: Turning this log on will provide logging information around querying and displaying of bulk plan results.\n\nPlanningStructure: Logs the building of the graph structure of the order movement and shipment planning objects.\n\nPoolXDockPlanning: Logging for pool and cross-dock planning logic.\n\nPostalCodeValidate: Logging for postal code validation logic.\n\nPrint: IPP printing details.\n\nPrintDebug: C aptures detail logs when printing documents from OTM.\n\nPrintDetails: Handles detailed parameter output for IPP printing.\n\nProcess: Workflow processes.\n\nProcessEvent: Used to debug the infrastructure for Oracle Transportation Management workflow and agent. Do not use this system log ID unless otherwise directed by the Oracle Transportation Management development team.\n\nProcessPoller: The ProcessPoller ID is used to view process event activity specifically related to process event polling. Background process event activity is logged under the ProcessEvent ID.\n\nProcessUI: Logs process activity resulting from user action on the Open Processes diagnostic screen.\n\nProcOpt: All the logs pertaining to Oracle Transportation Sourcing optimization that occurs when solving a scenario. Use in conjunction with the SOURCING and RateLoadProcess IDs to log details of many Oracle Transportation Sourcing processes.\n\nProducerDiag: If an object's corresponding XML document is 30% larger than average, a message will be written to this log.\n\nProxy: Logs information about OTM's use of a proxy server when calling out to external systems.\n\nQDLogs: Logs collected by the Collect Diagnostic Logs page.\n\nQuery: Miscellaneous UI logging.\n\nQueryStatistics: controls whether information for every generated query is written to a log file. If enabled, the following data is written for each query:\n\nid: a unique ID that can be correlated with the diagnostic screen\n\nquery: query class name\n\nfinder set (may be blank)\n\nsaved query name (may be blank)\n\nuser\n\nexecution time\n\ncriteria (field, operator, values). The number of values for an IN or OR operation is limited.\n\norder by (field, ascending/descending)\n\nif SQL tracking is enabled, the SQL statement and bind values\n\nNote: UI query performance logging is for a UI component property value.\n\nQueue: Data transmissions via Queue, such as Oracle Advanced Queue.\n\nRateEngine: Basic logging for rating engine logic. Basic Inputs, cost attributes, result feasible/Infeasible.\n\nRateEngineDebug: Internal logging for rating engine logic. Contains information logged in loops, and RBI method information. In order for RateEngineDebug to work you should have RateEngine, RateEngineDetails, and RateEngineDebug switched on.\n\nRateEngineDebugInitStaticData: This is turned on by default for the SYSTEM logfile. The logging for the static data will be done with this log. This logging is done only once so there is not an issue with too much logging.\n\nRateEngineDetails: Detailed logging for rating engine logic. Contains milestones, process steps - completed, method starting and end, method arguments, condition (positive, negative, and null checks), objects dumps, and RE object details. In order for RateEngineDetails to work you should have both RateEngine and RateEngineDetails switched on.\n\nRateLoadDownload: This log ID is not in use.\n\nRateLoadProcess: Logging for the Oracle Transportation Sourcing rate loading process. This process occurs when a carrier response template is updated and bids are created. Use in conjunction with the ProcOpt and SOURCING IDs to log details of many Oracle Transportation Sourcing processes.\n\nRateLoadUpload: This log ID is not in use.\n\nRateManagement: Basic logging for rate maintenance.\n\nRateManagementDetail: Detailed logging for rate maintenance.\n\nReport: Generation of reports via workflow.\n\nReportDetails: Logs internal activity needed to generate a report.\n\nReqdocValidate: Logs detailed information regarding the validation of a business object for standard document generation.\n\nResourceSchedule: Logs information about resource schedules and resource schedule instances as they relate to work assignment building.\n\nRESTClient: High level flow for outbound client calls from the system to an external REST API.\n\nRESTClientDetails: Detail flow for RESTClient.\n\nRESTUserInterface: Reserved for system use.\n\nRESTWebService: This log provides details of the REST APIs being called as well as the authentication and authorization of the user making the request.\n\nRESTWebServiceDetails: External calls into the public REST API.\n\nRichClientFramework: A Web log ID to monitor the rich client framework infrastructure.\n\nRMIConnections: Provides some logging of the web server to application server connections for Oracle Transportation Management running on OAS.\n\nNote: This functionality has been deprecated and will be removed in a later release."
    }
}