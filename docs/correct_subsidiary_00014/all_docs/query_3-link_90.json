{
    "id": "correct_subsidiary_00014_3",
    "rank": 90,
    "data": {
        "url": "https://patents.google.com/patent/US5546549A/ja",
        "read_more_link": "",
        "language": "en",
        "title": "US5546549A - Multi-path channel (MPC) interface with user transparent, unbalanced, dynamically alterable computer input/output channels - Google Patents",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://patentimages.storage.googleapis.com/da/78/92/c0bdb0fa3a9e6d/US5546549-drawings-page-2.png",
            "https://patentimages.storage.googleapis.com/d1/23/dc/b3200820e3fd4a/US5546549-drawings-page-3.png",
            "https://patentimages.storage.googleapis.com/73/33/3f/46147aab2496fb/US5546549-drawings-page-4.png",
            "https://patentimages.storage.googleapis.com/0a/c9/cc/31a2799b788879/US5546549-drawings-page-5.png",
            "https://patentimages.storage.googleapis.com/74/34/8c/5963299e12b6df/US5546549-drawings-page-6.png",
            "https://patentimages.storage.googleapis.com/78/3a/3a/9a903548e6ee0d/US5546549-drawings-page-7.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "1994-06-01T00:00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://patents.google.com/patent/US5546549A/ja",
        "text": "Multi-path channel (MPC) interface with user transparent, unbalanced, dynamically alterable computer input/output channels Download PDF\n\nInfo\n\nPublication number\n\nUS5546549A\n\nUS5546549A US08/252,020 US25202094A US5546549A US 5546549 A US5546549 A US 5546549A US 25202094 A US25202094 A US 25202094A US 5546549 A US5546549 A US 5546549A\n\nAuthority\n\nUS\n\nUnited States\n\nPrior art keywords\n\nsub\n\nchannel\n\ntransmission\n\ndata\n\nchannels\n\nPrior art date\n\n1994-06-01\n\nLegal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)\n\nExpired - Lifetime\n\nApplication number\n\nUS08/252,020\n\nOther languages\n\nEnglish (en)\n\nInventor\n\nLinda Barrett\n\nLynn D. Long\n\nLouis F. Menditto\n\nArthur J. Stagg\n\nRaymond E. Ward\n\nCurrent Assignee (The listed assignees may be inaccurate. Google has not performed a legal analysis and makes no representation or warranty as to the accuracy of the list.)\n\nInternational Business Machines Corp\n\nOriginal Assignee\n\nInternational Business Machines Corp\n\nPriority date (The priority date is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the date listed.)\n\n1994-06-01\n\nFiling date\n\n1994-06-01\n\nPublication date\n\n1996-08-13\n\n1994-06-01 Application filed by International Business Machines Corp filed Critical International Business Machines Corp\n\n1994-06-01 Priority to US08/252,020 priority Critical patent/US5546549A/en\n\n1994-06-01 Assigned to IBM CORPORATION reassignment IBM CORPORATION ASSIGNMENT OF ASSIGNORS INTEREST (SEE DOCUMENT FOR DETAILS). Assignors: BARRETT, LINDA, LONG, LYNN D., STAGG, ARTHUR J., WARD, RAYMOND E., MENDITTO, LOUIS F.\n\n1995-03-20 Priority to JP7060677A priority patent/JP3003977B2/ja\n\n1995-04-27 Priority to EP95480055A priority patent/EP0685952A1/en\n\n1996-05-01 Priority to US08/641,593 priority patent/US5699532A/en\n\n1996-08-13 Application granted granted Critical\n\n1996-08-13 Publication of US5546549A publication Critical patent/US5546549A/en\n\n2014-06-01 Anticipated expiration legal-status Critical\n\nStatus Expired - Lifetime legal-status Critical Current\n\nLinks\n\nUSPTO\n\nUSPTO PatentCenter\n\nUSPTO Assignment\n\nEspacenet\n\nGlobal Dossier\n\nDiscuss\n\nImages\n\nClassifications\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F13/00—Interconnection of, or transfer of information or other signals between, memories, input/output devices or central processing units\n\nG06F13/10—Program control for peripheral devices\n\nG06F13/12—Program control for peripheral devices using hardware independent of the central processor, e.g. channel or peripheral processor\n\nG06F13/122—Program control for peripheral devices using hardware independent of the central processor, e.g. channel or peripheral processor where hardware performs an I/O function other than control of data transfer\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F13/00—Interconnection of, or transfer of information or other signals between, memories, input/output devices or central processing units\n\nG06F13/38—Information transfer, e.g. on bus\n\nG06F13/382—Information transfer, e.g. on bus using universal interface adapter\n\nG06F13/385—Information transfer, e.g. on bus using universal interface adapter for adaptation of a particular data processing system to different peripheral devices\n\nH—ELECTRICITY\n\nH04—ELECTRIC COMMUNICATION TECHNIQUE\n\nH04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION\n\nH04L1/00—Arrangements for detecting or preventing errors in the information received\n\nH04L1/12—Arrangements for detecting or preventing errors in the information received by using return channel\n\nH04L1/16—Arrangements for detecting or preventing errors in the information received by using return channel in which the return channel carries supervisory signals, e.g. repetition request signals\n\nH04L1/18—Automatic repetition systems, e.g. Van Duuren systems\n\nH04L1/1809—Selective-repeat protocols\n\nH—ELECTRICITY\n\nH04—ELECTRIC COMMUNICATION TECHNIQUE\n\nH04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION\n\nH04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols\n\nH04L9/40—Network security protocols\n\nH—ELECTRICITY\n\nH04—ELECTRIC COMMUNICATION TECHNIQUE\n\nH04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION\n\nH04L1/00—Arrangements for detecting or preventing errors in the information received\n\nH04L2001/0092—Error control systems characterised by the topology of the transmission link\n\nH04L2001/0096—Channel splitting in point-to-point links\n\nH—ELECTRICITY\n\nH04—ELECTRIC COMMUNICATION TECHNIQUE\n\nH04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION\n\nH04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass\n\nH04L69/14—Multichannel or multilink protocols\n\nH—ELECTRICITY\n\nH04—ELECTRIC COMMUNICATION TECHNIQUE\n\nH04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION\n\nH04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass\n\nH04L69/24—Negotiation of communication capabilities\n\nDefinitions\n\nThis invention relates to data transfer mechanisms and, more particularly to multi-channel, user transparent, unbalanced, dynamically alterable computer input and output channels.\n\nMainframe computer systems such as the IBM S/390 exchange data between input/output devices and main storage by I/O operations collectively known as the channel subsystem.\n\nthe I/O devices and their control units attach to the channel subsystem.\n\nthe channel subsystem is a combination of hardware and software which directs the flow of information between the control units of the I/O devices and main storage to relieve the computer Central Processing Unit (CPU) of the task of communicating with the I/O devices. Input and output processing can therefore take place concurrently with normal data processing in the CPU.\n\nI/O processing includes path management, testing paths for availability, choosing an available channel path and initiating and terminating the execution of I/O operations with the I/O device.\n\na control unit is a mechanism for converting the characteristics of a particular I/O device to the standard forms used by the channel subsystem.\n\na sub-channel is provided for and dedicated to each I/O device accessible to the channel subsystem.\n\nSuch sub-channels are logical rather than physical transmission paths and are defined in terms of the specific requirements of the associated I/O device. The number of such sub-channels is limited only by address sizes recognized by the computer system.\n\nI/O devices are attached to the channel subsystem by means of logical sub-channels derived on the physical transmission media (called channel paths) and activated when I/O operations are required.\n\nLogical sub-channels are defined as transmission facilities for varying sized data packet lengths ranging from zero to 32 kilobytes in four kilobyte steps.\n\nI/O control units are attached to the channel subsystem by one or more of such logical sub-channels and an I/O device can be served by one or more control units.\n\nMost I/O devices are designed to transfer data at only one specific rate and must be served by a logical sub-channel equaling or exceeding this device rate.\n\nthe physical transmission media can be operated in half or full duplex mode, logical sub-channels have, for simplicity, nevertheless been defined for both directions of transmission to support both input and output.\n\nthe prior art provided only for logical transmission sub-channels which are equal, balanced and symmetrical for both directions of transmission. Devices were assigned unique sub-channels during their installation and communication over that sub-channel conformed to the communication protocols defined for that type of I/O device. Note that all sub-channels in the prior art are pre-defined for a particular I/O destination, are balanced, and are merely activated when the system requests I/O. A great deal of computer input and output programming exists using the protocols described above.\n\nthe number of logical sub-channels in such a system is independent of the number of channel paths; the same I/O device can be accessed by a number of different channel paths, represented by a single logical sub-channel.\n\nthe logical sub-channel maintains the main store addresses where the data is to be read or written, a count of the data transferred, the identity of the destination and storage for status information about the connected I/O device. This status information is accessible by programmed processes.\n\nlogical sub-channels were derived over multi-conductor cables with bits transferred in parallel over different copper conductors (byte multiplex mode). Such cables were limited in length (30-50 meters) and bandwidth (1.5-4.5 Mb/s) and much existing I/O programming is adapted to these limitations.\n\nThis older type of transmission medium is know as the parallel I/O interface and is further described in \"IBM System/360 and System/370 I/O Interface Channel to Control Unit OEMI (Original Equipment Manufacturer Interface),\" IBM System Library document GA22-6974, available from the IBM Corporation.\n\nserial I/O interface for the channel subsystem, has a bandwidth of at least 20 Mbytes/s and can be extended by many kilometers (50-60 kilometers) by RCE repeaters (Remote Channel Extenders).\n\nRCE repeaters Remote Channel Extenders\n\nOne type of serial interface channel path is known as an ESCON (Enterprise System Connectivity) channel and is further described in \"IBM Enterprise Systems Architecture/390 ESCON I/O Interface,\" IBM System Library Document SA22-7202, also available from the IBM Corporation.\n\nthe ESCON serial I/O interface utilizes bursts of serial bit packets (burst mode) and presents problems to the standard I/O sub-channel system due to the higher capacity bandwidth, the delay latency inherent in the longer distances covered by the medium, system integrity (assuring matching logical assignments at both ends of the medium), and synchronization problems arising from these changing physical parameters.\n\nI/O devices comprising simple devices such as printers, magnetic tape units, magnetic disk units, terminals and sub-channels of other data processing systems.\n\nSuch interconnected systems have different requirements than simpler I/O devices.\n\nservices such as multimedia distribution require heavily unbalanced transmission capabilities for the two opposite directions of transmission.\n\nI/O supervisors it is not always possible to have predetermined knowledge of the facilities available at the other end of a long I/O channel, and provision is not available in the prior art I/O supervisors to communicate the necessary parameters between the two ends of the sub-channel.\n\nPrior art channel interfaces provide for only balanced bandwidth allocation interfaces. Such balanced allocation interfaces require that the transmit, or write, bandwidth is equal to the receive, or read, bandwidth. While this approach is suitable and, indeed, desirable, in a prior art transactions or low performance batch environments due to the essentially balanced data flow, today's client/server environments, by their very nature, dictate heavily unbalanced bandwidth interfaces. Similarly, new Asynchronous Transfer Mode (ATM) services on Wide Area Networks (WANs) likewise provide for unbalanced network interfaces.\n\nATM Asynchronous Transfer Mode\n\nWANs Wide Area Networks\n\na multi-path channel (MPC) interface which forms a transparent interface between the prior art I/O channel-using user applications and the prior art channel path I/O supervisor processes for both byte multiplex and burst mode transmission paths. More particularly, a new I/O interface is provided which allows the user application to define multi-path channel groups (MPCs) for its use which may comprise unbalanced transmission capabilities between the computer host and the remote facility. In addition, user data is blocked to take advantage of the available transmission sub-channels and re-transmitted over the same or different sub-channels when data errors are detected.\n\nMPC multi-path channel\n\nRe-sequencing mechanisms are provided to assure proper re-assembly of the data stream in the face of divergent delays in initial transmission and error correcting re-transmissions of data packets. Such re-transmissions are particularly troublesome when it is necessary to re-segment data blocks to accommodate smaller capacity sub-channels available for such re-transmission. In accordance with the present invention, such sequence integrity is maintained by sub-indexing of data blocks re-segmented for error correcting re-transmission.\n\nthe normal exchange identification messages between the ends of I/O sub-channels are adapted for users to dynamically convey information to the other end of an I/O sub-channel about the facilities available to handle the I/O signals, such as buffer size or data link limitations.\n\nduplex exchanges of information between the two ends of the channel paths are minimized by utilizing duplex exchanges of only sub-channel verification and activation exchange of identification (XID) signals.\n\nXID signals can be utilized for a plurality of different user systems (SNA and APPN, for example), and, in order to support unbalanced transmissions, provide fields for multi-path channel group identifications and fields for the direction of transmission of each sub-channel.\n\nOptional XID fields are available to transmit information about the parameters of the local system which parameters are not known by the remote end of the sub-channel.\n\nthe XID exchange between the two ends of the transmission path is extended from a single exchange to two or more exchanges, allowing the two ends of the transmission paths to negotiate the values of terminal dependent transmission parameters such as buffer sizes or link sizes.\n\ndata is launched onto data sub-channels from a common queue whenever capacity is available on a channel path, regardless of the original sub-channel assignments. This \"pulling\" of data ensures the optimum use of the high capacity burst mode ESCON channel paths, and reduces the latency involved in the process dispatch function.\n\nFIG. 1 shows a general block diagram of a computer input-output system in which the multi-path channel interface of the present invention will find use;\n\nFIG. 2 shows a graphical representation of the structure of transmission blocks used for communication of input and output data and control signals in the system of FIG. 1 in accordance with the present invention\n\nFIG. 3 shows a more detailed block diagram of the multi-path channel interface shown in FIG. 1, showing the architecture of the interface;\n\nFIG. 4 shows a typical example of multi-path channel configurations which are created and which can be exploited by the multi-path channel interface of the present invention\n\nFIG. 5 shows the format of a typical exchange identification (XID) control signal which might be used in the multi-path channel interface system of the present invention for communication with a controller such as VTAM in an SNA packet network;\n\nXID exchange identification\n\nFIG. 6 shows an optional extension of the XID control signal format shown in FIG. 5 for indicating the maximum available read buffer size at the receiving end of an input-output transfer;\n\nFIG. 7 shows a detailed flow chart of the process of sub-channel activation used by the multi-path channel interface of FIG. 3 in accordance with the present invention\n\nFIG. 8 shows a more detailed flow chart of the exchange of exchange identification (XID) signals used in he activation process of FIG. 9;\n\nFIG. 9 shows a detailed flow chart of the segment sub-indexing process of the multi-path channel interface of FIG. 3, in accordance with the present invention, used when re-transmission of data segments must take place over sub-channels having a lower capacity than the capacity of the channel over which the original transmission of the segment took place.\n\nComputer 21 also includes a multi-path channel interface 12 which controls the input and output of data between computer 21 and a remote device or system 17 over one or more channel paths 22, 23 or 24.\n\nChannel paths 22-24 utilize adapters 14, 15, 16, 18, 19 and 20 to convert data signals for transmission on media 22-24.\n\nMulti-path channel interface 12 controls the connection of user data signals from user application 10 to media 22-24 by packaging the data in protocol data units (PDUs) suitable for the channel paths 22-24.\n\nPDUs protocol data units\n\nDevices or system 17 may comprise simple I/O devices such as printers, storage systems or terminals, or may comprise another host computer with which user application 10 wishes to communicate.\n\nSystem 17 may also comprise a gateway to a local area or wide area data distribution network having remotely located computers or I/O devices attached thereto.\n\nchannel paths 22, 23 . . . , 24 may comprise standard byte multiplex multi-conductor cables, burst mode optical fibers or any other form of transmission media over which data blocks can be transmitted.\n\nthe number of such channel paths can vary all of the way from a single half or full duplex path to as many as are required or desired to carry the data to be transmitted from computer 21.\n\neach of channel paths 22-24 is assumed to be used in the half duplex mode, transmitting in only one direction at a time. While the direction of transmission can be reversed, the possibly high delay latency dictates that such reversals be minimized.\n\nthe modifications necessary to take advantage of full duplex operation of paths 22-24 are believed to be obvious and will not be further described here.\n\na multi-path channel interface 12 is connected between user application 10 and channel paths 22-24 to provide a transparent interconnection between the prior art user application 10 and the prior art channel paths 22-24 which affords the same level of function in modern data transfer environments that was available in the prior art simpler and more localized systems.\n\nXID exchange identification\n\nFIGS. 5 through 8 a new set of exchange identification (XID) messages have been defined (to be discussed in connection with FIGS. 5 through 8) which provide the user with a set of functions which meet basic system interface requirements and, in addition, provide a set of optional user-defined data areas which can be used to implement application-specific requirements, some of which will be described below, but which include the negotiation of system parameters and the provision of user-supplied system verification (security) fields (e.g., encrypted passwords).\n\nsecurity system verification\n\nthe exchange of system parameters such as buffering size and control, data flow direction and higher level user protocol support permits efficient and rapid input-output data exchanges.\n\nFIG. 2 there is shown a graphical representation of a typical transmission block on transmission paths 22-24 comprising a transmission block header 25 followed by one or more protocol data units (PDUs) 27, 29, , each having its own header 26 and 28, respectively.\n\nPDU1 27 has a PDU header 26\n\nPDU2 29 has a PDU header 28.\n\nheaders 25 and 26 are also shown in FIG. 2 in the block below header 25 and connected by dashed lines to header 25.\n\ntransmission block header 25 is shown as including a segment number field 30 used to contain a number representing the sequence of this block in a plurality of blocks of data transmitted from the same user application 10 to the same destination. Also included in transmission block header 25 is a plurality of control fields 31 containing information necessary for various control actions at the remote end, particularly when the transmission block is intended for transmission on a packet network system at the remote end. Also included in control fields 31 is a flag marking the last segment of a segmented user data block. Field 32 contains a sequence number for this block when the original segment (such as the entire transmission block of FIG. 2) is re-blocked into smaller blocks when required for re-transmission after a failure to receive the original block. This sequence number is used, as will be described later, to recapture the proper sequence of re-blocked segments after reception at the remote end of the channel path.\n\nEach of PDUs 27, 29 . . . has a PDU header comprising a PDU length field 33 and a PDU flag field 34.\n\nPDUs can contain either user data or MPC control information.\n\nOne of the flags in field 34 indicates whether the following information is user data or MPC control signals.\n\nMPC control signal are the Exchange Identification (XID) signals to be discussed in connection with FIGS. 5 through 8.\n\nXID Exchange Identification\n\nFlags are also available in field 34 to indicate the type of data unit, if appropriate, and to identify the last PDU in a transmission block.\n\nProtocol identification field 35 is used to identify the protocol used by the user application which was the source of this data PDU.\n\nPDU header 26 also includes a sequence number field 36 to establish the initial sequence of a plurality of PDUs blocked together in the transmission block should such sequence numbers become necessary for re-assembly of a disassembled transmission block.\n\ncontrol PDUs may include optional fields which can be used by the user application to negotiate the values of variables to be used in blocking and queuing of user data.\n\nFIG. 3 there is shown a more detailed block diagram of the multi-path channel interface 12 of FIG. 1 which includes three major components.\n\nMPC data manager 45 interfaces with the user application 10 of FIG. 1 and includes an inbound data formatting process 46 which converts the data and control stream from the user application 10 into blocks suitable for transmission on the available channel paths 22-24.\n\nData manager 45 also includes inbound data queues which accept data from the remote end of the transmission paths 22-24 and store them for delivery to user application 10.\n\na multi-path channel interface transmission control subsystem 48 interfaces the control and data signals from data manager 45 with a plurality of logical input and output sub-channels 49 through 54 over which input and output transmissions can take place.\n\nthe outputs of processes 48 are logical sub-channels which are unidirectional and suitable for the transmission of fixed sized transmission blocks varying from zero to 64 kilobytes in length.\n\nthe prior art multi-path channel interface 12 (FIG. 1) converts these logical sub-channels into multiplexed physical transmission capacity on the physical channel paths 22-24, all in accordance with well known prior art procedures. It should be noted, however, that the logical sub-channels 49-54 shown in FIG. 3 need not be balanced and that more or fewer input channels can be combined with an unequal number of output channels.\n\nControlling data manager 45 and transmission control processes 48 are a set of MPC control processes 40. Included in processes 40 are a device or system allocate and de-allocate process 41 which utilizes control signals from user application 10 to allocate balanced or unbalanced multi-path channels to a user application. As noted above, these multi-path channel allocations merely verify that the requested transmission capabilities are available in the channel paths 22-24 (FIG. 1). Path activate and deactivate process 42 in FIG. 3 actually controls the exchange of signals which logically connect the allocated transmission groups to the user applications.\n\nProcess 43 detects errors in received transmission data blocks, typically by detecting missing segments by noting missing segment numbers. Error control process 43 also responds to error messages from the remote device or system indicating missing or corrupted data segments at the remote device or system. Data re-transmission process 44 responds to the error control process 43 to re-transmit missing or corrupted data blocks, as will be described in more detail in connection with FIG. 11.\n\nFIG. 4 there is shown a graphical representation of a typical balanced and a typical unbalanced multi-path channel allocated by the multi-path channel interface of FIG. 3 in response to requests (allocate a multi-path channel) of the user application 10 of FIG. 1.\n\nUser applications communicate with MPC 12 by means of messages implementing such functions as allocating or assigning sub-channels to a particular user application. Such allocations are merely logical reservations which are not activated until a different CCW (activate channel) signal is provided.\n\nthe allocate channel message allows the user to specify transmission groups with any combination of sub-channels of any size and arbitrary direction of transmission.\n\na prior art balanced channel group TG1 group 62 is shown in FIG. 4, comprising a write sub-channel 63 and a read sub-channel 64, both served through a channel path 70.\n\nChannel path 70 may, of course, comprise an OEMI multiplexed byte mode multi-conductor cable transmission medium, an ESCON burst mode optical fiber cable, or any other transmission medium.\n\nlocal user application 60 is communicating with a remote user application 81 at the other end of transmission paths 70 and 71.\n\na remote multi-path channel interface 72 serves the remote user 81 in the same fashion that local MPC 61 serves local user 60.\n\nFIG. 4 is therefore entirely symmetrical.\n\nwrite sub-channels 63, 66, 67 and 68 in local MPC 61 are read channels 73,75,76 and 77, respectively, in remote MPC 72 and read sub-channels 64 and 69 in local MPC 61 are write channels 74 and 78, respectively, in remote MPC 72. That is, each logical sub-channel is unidirectional.\n\nmulti-path channel groups 62 and 65 in local MPC 61 correspond precisely to multi-path channel groups 79 and 80, respectively, in remote MPC 72.\n\nthe allocation and activation of the sub-channels of FIG. 4 is initiated at both the local user application 60 and the remote user application 81 and, indeed, can be initiated simultaneously at both user applications 60 and 81.\n\na user application such as user application 60 in FIG. 4 communicates with the multi-path channel interface such as interface 61 in FIG. by means of messages directing the MPC to allocate, activate, and deactivate multi-path channel groups, and to start sending data and complete sending data.\n\nMPC 61 (or MPC 72) creates the logical mulit-path channel groups, activates these groups for actual transmission of data and notifies the user to begin sending data or to begin receiving data.\n\nthe group is deactivated and when the multi-path channel group is no longer valid, the group is de-allocated.\n\nCommunication between the MPCs 61 and 72 is by way of exchange identification (XID) signals which convey the necessary information to the remote partner for enabling and disabling transmission paths. More particularly, one or more XID control signal blocks is launched on each sub-channel of a multi-path channel group to effectuate the activation of that sub-channel. Only after all of the sub-channels of a group are successfully activated at both ends is the user signaled to begin the transmission of data.\n\nthese sub-channel activate signals include means for activating unbalanced transmission groups and for notifying the remote partner of currently available buffer and data link sizes, thereby permitting dynamic changes in the transmission group assignments to take advantage of, or to conform to, the currently available facilities.\n\nFIG. 5 there is shown a graphical representation of the format of an XID message for activating a particular sub-channel of a multi-path channel group such as those shown in FIG. 4.\n\nthe XID message of FIG. 5 comprises a header field 90 identifying the type of local station, the address of the destination and the length of the XID message.\n\nField 91 carries an identification of the multi-path channel group to be activated while field 92 contains the status of the multi-path channel group (active or inactive).\n\nField 93 contains an identification of a particular user protocol, for example, the SNA protocol.\n\nField 93 could, of course, contain the identify of a different user protocol (e.g., DECNet or TCP/IP) in which case different information might be included and different processing of the XID messages called for.\n\nthe protocol identification field 93 allows the same XID signal structure to be used with different protocols and thus makes the multi-path channel interface of the present invention totally independent of the user protocol.\n\nField 94 of the XID message of FIG. 5 contains the XID status (OK or NG) to be used as will be discussed in connection with FIG. 10 assist in correlating the operations at the two ends of the transmission group.\n\nthe source address field 95 identifies the sender to the remote receiving MPC interface while the XID option field 96 identifies this message as an multi-path channel group channel activate signal.\n\nField 97 identifies this channel as a read or write channel from the senders viewpoint and provides the basis for creating unbalanced transmission groups. That is, since an XID signal similar to that of FIG. 5 is transmitted on each sub-channel of the transmission group, the sending MPC has the capability of specifying unbalanced groups simply by specifying unbalanced read and write options in field 97.\n\nthe XID activate message of FIG. 5 can be optionally extended by the extension fields shown in FIG. 6 whenever the particular application requires such an extension.\n\nthe sender station does not necessarily know the size of the receiver buffers. It is therefore necessary for the two stations to specify the maximum buffer size available for reception of data blocks in field 98 of FIG. 6.\n\nfield 97 is used to notify the remote station that facilities are available locally to handle contiguous Protocol Data Units (PDUs).\n\nPDUs Protocol Data Units\n\nthe buffer size and contiguous handling ability are important parameters in determining the size and frequency of the data transmissions on the channel group and are used by the multi-path channel interface of FIG. 3, and particularly transmission control processes 48 of FIG. 3, to appropriately block and transmit the user data.\n\nthe XID message of FIGS. 5 and 6 permit unbalanced transmission groups and dynamic negotiation of certain communication parameters at the time a transmission group is activated, all in accordance with the present invention.\n\nthe possibility of formatting different XID messages for different user protocols makes the entire operation of the multi-path channel interface of the present invention independent of the protocol of the user application. This protocol independence permits a very wide variety of users to take advantage of the same MPC interface.\n\nthe process of allocating and activating a multi-path channel group is initiated in response to a request from the user application 10 of FIG. 1.\n\nThis process carried out in the local MPC interface, initially attempts to allocate the local communications facilities into a logical transmission group satisfying the request.\n\nEach of the local sub-channels is validated for availability.\n\nthe physical transmission paths are then established to permit the transmission of a first phase exchange identification (XID-1) message between the local and remote MPC interfaces.\n\nthe XID-1 message has the format described in connection with FIGS. 5-6, carrying mandatory and optional information about the transmission paths requested.\n\nThis XID-1 message is replicated and transmitted over each of the sub-channels of the requested multi-path channel group.\n\na similar user application will be requesting a similar multi-path channel group from the remote MPC interface, but conforming to the specific requirements of the remote user application. Since these requirements may be different from the requirements of the local user application, some mechanism for negotiating the parameter to be used is required.\n\na second phase of XID exchanges (XID-2) will be used to resolve these differences. Note, however, that the prior art protocols need not know about the multiple XID exchanges and will simply be notified to initiate data transmission when the multiple exchanges are successfully completed.\n\nthe XID-1 messages received on each of the sub-channels of the transmission group are compared to each other to determine if they are identical.\n\nthe remote MPC interface also verifies that XID-1 messages have been received over each of the sub-channels of the transmission group.\n\nthe remote MPC interface also validates the size and direction of the requested sub-channels to determine if these facilities are available at the remote MPC interface.\n\nthe local station meanwhile is doing the same thing with the XID-1 messages received from the remote MPC.\n\nBoth the local and the remote MPC interfaces also verify system integrity and system security fields in the received XID-1 messages. Finally, differences in requests for data handling parameters are resolved by whatever rules prescribed by the user application.\n\nboth the local and the remote MPC interfaces construct a tentative XID-2 message to confirm the values of the variable optional parameters.\n\na random number generated locally for each XID-1 message and included in the XID-1 message is used to determine which MPC interface will actually initiate the second phase (XID-2) message exchange.\n\nthe other MPC interface saves the constructed XID-2 message until a comparison can be made when the XID-2 message is received from the other MPC interface.\n\nthe two XID-2 messages are compared to determine if they are the same. If so, the saved XID-2 message is transmitted to the remote MPC interface for the validation and comparison at the remote MPC interface. Finally, if all validations and comparisons are successful, the two user applications are notified of the successful conclusion of the exchange identification process and data transmission can commence. If validation fails at any point in the process, the requested transmission group is taken down and the remote MPC interface notified to do the same. If a comparison of the XID-2 messages fails, the locally generated XID-2 message is used for confirmation. This process will be described in more detail in connection with FIGS. 9 and 10.\n\nFIG. 7 there is shown a flow chart of the activation of a multi-path channel group by the use of XID messages similar to that shown in FIGS. 5 and 6.\n\nthe process of FIG. 7 must, of course, be concurrently carried out for each sub-channel of the requested multi-path channel group.\n\nbox 111 is entered where the paths are allocated in accordance with the request from the user application.\n\nSuch requests may be for balanced or unbalanced multi-path channel groups corresponding, respectively to multi-path channel group MPC1 62 and MPC2 65 of FIG. 4. Indeed, more than one multi-path channel group can be requested for allocation, and only activated as required.\n\nSuch allocations merely select and ensure the availability of sub-channels of the size and directions requested, but do not actually set up the multi-path channels.\n\nthe protocol identification fields such as field 93 in FIG. 5, can include security information such as system identifications which are checked to determine whether or not communication is permitted with the remote end, i.e., to ensure that the requested multi-path channel group to the particular remote device or system is permissible under predetermined access rules.\n\nthe requested transport paths are actually activated, i.e., enabled for transmission. It is, of course, also possible to allocate multi-path channel groups statically by system declarations, as was done in the prior art, and merely activate these pre-established channel groups upon user request, as was also common in the prior art.\n\nXID exchange identification\n\npart of this exchange may be to determine the user protocols and to negotiate desired transmission parameters such as buffer sizes or link sizes.\n\nThis exchange takes place simultaneously over each sub-channel of the requested multi-path channel group to ensure the availability and the identity of both ends of the transmission sub-channel as well as of the necessary transmission parameters requested.\n\nDecision box 116 is then entered to determine if the XID exchange has completed successfully.\n\nbox 117 is entered to notify the user application that the requested channel group will not be activated for data transmission.\n\nBox 118 is then entered to de-allocate the transport paths established in box 114 for the XID exchange and the process terminates in terminal box 119. Note that this de-allocation requires a de-allocation message to the remote end of the transmission facility to ensure de-allocation at the other end. It is also important to note that the activation process represented by the flow chart of FIG. 9 can be initiated at either end of the transmission group and, indeed, can be initiated simultaneously at both ends of the transmission group.\n\nbox 120 is entered where the transport control processes 48 of the MPC interface of FIG. 3 are initialized to reflect the requested blocking sizes and blocking protocols requested or negotiated with the remote end of the transmission group.\n\nBox 121 is then entered to initialize the MPC data manager 45 (FIG. 3) to reflect the data queue 47 size requested or negotiated as well as the data formatting 46 requested.\n\nBox 122 is entered to assign the requested direction of transmission on the particular transmission sub-channel and box 123 is entered to select the transmission block size of this sub-channel. Note that boxes 122 and 123 imply the ability to dynamically assign both the direction of transmission as well as the sub-channel capacity at the time of activation.\n\nbox 124 is entered where the user application is notified of the availability of requested multi-path channel group.\n\nBox 125 can then be entered where the user application actually transfers data to the remote location over the allocated and activated channel group.\n\nthe process of FIG. 9 then terminates in terminal block 119.\n\na very similar process to that shown in FIG. 7 is used to de-activate and/or de-allocate the multi-path channel group once the data transmissions are complete or a transmission failure occurs.\n\nFIG. 8 there is shown a more detailed flow chart of the XID message exchange process which takes place in the box 115 of FIG. 7.\n\nbox 131 is entered where the user request for a multi-path channel group is received. Note that this request can be received at the multi-path channel interfaces (FIG. 3) at both ends of the channel group simultaneously. Since this simultaneous issuance is the most difficult case, it is assumed in the flow chart of FIG. 8 that the MPCs at both ends of the transmission group request the activation of the multi-path channel group at the same time.\n\nthe XID-1 message format is built. For convenience, it is assumed that the XID message format is that shown in FIGS. 5 and 6. Other XID message formats could be used instead for another user application in a manner that is obvious to persons of ordinary skill in the art.\n\nthe transmit size of field 98 is set up as well as the direction of data flow in field 97.\n\nAppropriate system integrity information is supplied, when desired, to fields 90 and 91 of FIG. 5 and fields 31 and 35 of the headers of FIG. 2.\n\nan ambiguity resolving signal is introduced into the sequence number field 30 of the header of FIG. 2.\n\nThis ambiguity resolving signal is a randomly generated number in the illustrative embodiment. This random number will be used at the remote MPC interface to select which of the XID-1 messages will take control of the second phase of the activation process.\n\nAnother method of resolving such an ambiguity include the use of a pre-defined table of rankings of terminal pairs, available at the two ends of each multi-path channel group.\n\nbox 133 is entered where the XID message is transmitted on each sub-channel within the allocated multi-path channel group to the remote MPC interface.\n\nthis XID-1 message is received at the remote MPC interface and, in box 136, the parameters in the XID-1 message are validated. That is, the system integrity signals are used to ensure system integrity; the direction of transmission for this sub-channel and the size of the sub-channel are used to ensure availability of the sub-channel and the buffer parameter is used to determine if such facilities are available.\n\nBox 136 is then entered where the format of a second phase XID-2 message is built for transmission back to the local MPC interface.\n\nthe format and field contents of the XID-2 message are identical to the XID-1 message, except for the variable buffer size parameter which may be modified to reflect the actual availability of these facilities.\n\nDecision box 137 is then entered where it is determined if the data in the received XID-1 message from the remote MPC interface is valid. If the validations of box 135 are all successful, box 139 is entered where the phase 2 XID-2 message is marked as \"OK\" in field 94 (FIG. 5). If the validations fail in any respect in box 135, the second phase XID-2 message is marked as \"no goodâ (NG) in field 94. Whether the received XID-1 message is valid or invalid, decision box 140 is entered where the random number in the received XID-1 header segment number field 30 (FIG.\n\nthe locally generated XID-2 signal is marked as \"OK\" in box 143 and transmitted to the remote MPC interface in box 144 to complete the confirmation process. If the random number is lower in the locally generated XID-1 message, or if the validation of a received XID-2 message fails in decision box 142, box 148 is entered where the XID-2 message is marked as no good (\"NG\") and box 144 again entered to transmit the XID-2 message to the remote MPC interface. Decision box 145 is then entered to determine if both the local and the remotely generated XID-2 messages are okay. If so, box 146 is entered to notify the user to start transmitting user data. If not, box 143 is entered to activate a failure procedure as described in connection with FIG. 7. In both events, terminal box 147 is then entered to terminate the XID exchange process of FIG. 8 and return to the process of FIG. 7.\n\nFIG. 9 there is shown a flow chart of the data segment sub-indexing in accordance with the present invention.\n\nbox 151 is entered where a local data block is queued in the local MPC interface such as interface 12 of FIG. 1 and shown in more detail in FIG. 3.\n\nthe XID message exchange has already taken place successfully between a local MPC interface 61 (FIG. 4) and a remote MPC interface 72 for all of the sub channels 66-69 of the transmission group MPC2 65-80.\n\nthe write sub-channels C and D (66 to 75 and 67 to 76 in FIG.\n\nbox 152 formats a sixteen kilobyte segment of data for transmission on path E while boxes 153 and 154 each format a four kilobyte segment of data for transmission on paths D and C, respectively. It is assumed in FIG. 9 that the four kilobyte segments transmitted on paths C and D are received successfully at the remote MPC in boxes 155 and 156, respectively.\n\nthe sixteen kilobyte segment transmitted on path E is somehow lost (e.g., by the failure of channel path 71 of FIG. 4), as detected by box 157 at the remote MPC interface. If the segment transmitted on path E is lost, as detected in box 157, box 158 is entered to de-allocate path E at the remote MPC interface. Since some failure has occurred in path E, it is important to remove this path from service, not only for this multi-path channel group, but for all previously defined channel groups.\n\nthe channel represented in FIG. 4 as Channel B (74 to 64 in FIG. 4) will present an error status indicating a path failure and identifying path E, all in accordance with the failure detection system of the prior art.\n\npath E is de-allocated at the local MPC interface in response to this failure message.\n\nre-transmit box 161 is entered where the lost data segment is re-transmitted to the remote MPC interface.\n\nthe sixteen kilobyte sub-channel E is no longer available in transmission group MPC2, the sixteen kilobyte data segment must be broken up into four 4 kilobyte data segments so that they can be transmitted over the available two 4 kilobyte sub-channels identified as paths C and D.\n\neach of these four kilobyte sub-segments has a segment number added to field 32 of header 25 (FIG. 2) of the transmission block.\n\nthe three data segments formed in boxes 152, 153 and 154 include sequence numbers in field 30 of the header 25 of the data transmission block carrying these data segments.\n\nthe purpose of these sequence numbers in field 30 is to allow the remote MPC interface to reassemble these data segments in the proper order in the event that they are delivered to the remote MPC interface in some other order due to delay anomalies in the varying physical channel paths over which the sub-channels are derived.\n\nthe segment numbers in the re-transmitted blocks of boxes 162-165 serve the same function for the re-segmented re-transmitted data segment.\n\nthe segment numbers allow the remote MPC interface to re-assemble the sub-segments in the proper order for delivery to the ultimate user. Note the original sequence number must be retained in sequence number field 30 (FIG. 2) to assure proper ordering of the original segments.\n\nsequence numbers used to properly order the data segments in a segmented data transmission are sometimes called segment indices and the process call segment indexing.\n\nthe second level indexing described above can therefore be called sub-indexing of re-transmitted, re-segmented data segments. Assuming that the re-transmitted re-segmented data sub-segments are all received successfully at the remote MPC interface, as indicated by boxes 166, 167, 168 and 169, the sequence numbers can be used to reassemble the original three segments in box 170.\n\nsegment numbers of the re-segmented, re-transmitted sub-segments of the sixteen kilobyte segment formed in box 152 and re-segmented in boxes 162-165 are used to properly re-assemble the sub-segments into a new sixteen kilobyte segment which, in turn, is assembled into the original data block in box 170.\n\nthe re-assembled data block is then delivered to the remote user application in box 171 and process of FIG. 11 terminated in terminal box 172.\n\nLandscapes\n\nEngineering & Computer Science (AREA)\n\nTheoretical Computer Science (AREA)\n\nComputer Security & Cryptography (AREA)\n\nComputer Networks & Wireless Communication (AREA)\n\nSignal Processing (AREA)\n\nPhysics & Mathematics (AREA)\n\nGeneral Engineering & Computer Science (AREA)\n\nGeneral Physics & Mathematics (AREA)\n\nComputer And Data Communications (AREA)\n\nCommunication Control (AREA)\n\nDebugging And Monitoring (AREA)\n\nUS08/252,020 1994-06-01 1994-06-01 Multi-path channel (MPC) interface with user transparent, unbalanced, dynamically alterable computer input/output channels Expired - Lifetime US5546549A (en)\n\nPriority Applications (4)\n\nApplication Number Priority Date Filing Date Title US08/252,020 US5546549A (en) 1994-06-01 1994-06-01 Multi-path channel (MPC) interface with user transparent, unbalanced, dynamically alterable computer input/output channels JP7060677A JP3003977B2 (ja) 1994-06-01 1995-03-20 å ¥åºåéä¿¡ãµãã·ã¹ãã åã³æ¹æ³ EP95480055A EP0685952A1 (en) 1994-06-01 1995-04-27 Improved channel interfaces for computer input/output channels US08/641,593 US5699532A (en) 1994-06-01 1996-05-01 Dynamic multipath channel interface for input/output channels\n\nApplications Claiming Priority (1)\n\nApplication Number Priority Date Filing Date Title US08/252,020 US5546549A (en) 1994-06-01 1994-06-01 Multi-path channel (MPC) interface with user transparent, unbalanced, dynamically alterable computer input/output channels\n\nRelated Child Applications (1)\n\nApplication Number Title Priority Date Filing Date US08/641,593 Continuation US5699532A (en) 1994-06-01 1996-05-01 Dynamic multipath channel interface for input/output channels\n\nPublications (1)\n\nPublication Number Publication Date US5546549A true US5546549A (en) 1996-08-13\n\nFamily\n\nID=22954292\n\nFamily Applications (2)\n\nApplication Number Title Priority Date Filing Date US08/252,020 Expired - Lifetime US5546549A (en) 1994-06-01 1994-06-01 Multi-path channel (MPC) interface with user transparent, unbalanced, dynamically alterable computer input/output channels US08/641,593 Expired - Fee Related US5699532A (en) 1994-06-01 1996-05-01 Dynamic multipath channel interface for input/output channels\n\nFamily Applications After (1)\n\nApplication Number Title Priority Date Filing Date US08/641,593 Expired - Fee Related US5699532A (en) 1994-06-01 1996-05-01 Dynamic multipath channel interface for input/output channels\n\nCountry Status (3)\n\nCountry Link US (2) US5546549A (ja) EP (1) EP0685952A1 (ja) JP (1) JP3003977B2 (ja)\n\nCited By (98)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title WO1997019411A1 (en) * 1995-11-17 1997-05-29 Mci Communications Corporation Registry communications middleware US5659796A (en) * 1995-04-13 1997-08-19 Cray Research, Inc. System for randomly modifying virtual channel allocation and accepting the random modification based on the cost function US5699532A (en) * 1994-06-01 1997-12-16 International Business Machines Corporation Dynamic multipath channel interface for input/output channels US5701416A (en) * 1995-04-13 1997-12-23 Cray Research, Inc. Adaptive routing mechanism for torus interconnection network US5805822A (en) * 1994-06-01 1998-09-08 International Business Machine Corp. Channel interface with data segmentation and re-segementation US5835925A (en) * 1996-03-13 1998-11-10 Cray Research, Inc. Using external registers to extend memory reference capabilities of a microprocessor US5842045A (en) * 1995-08-14 1998-11-24 Nec Corporation Terminal unit having a universal multi-protocol modular jack automatically sets its protocol to match with protocol of a modular plug connecting to the jack US5864738A (en) * 1996-03-13 1999-01-26 Cray Research, Inc. Massively parallel processing system using two data paths: one connecting router circuit to the interconnect network and the other connecting router circuit to I/O controller US5907553A (en) * 1997-04-08 1999-05-25 Level One Communications, Inc. Power savings in multiple technology physical layer devices supporting autonegotiation WO1999041862A1 (en) * 1998-02-11 1999-08-19 Mcdata Corporation Method and apparatus for establishment of dynamic escon connections from fibre channel frames US5956385A (en) * 1997-03-12 1999-09-21 Harris Corporation Test set interface for automatically detecting line type US5960216A (en) * 1993-04-23 1999-09-28 Emc Corporation Method and apparatus for interfacing two remotely disposed devices coupled via a transmission medium US5970232A (en) * 1997-11-17 1999-10-19 Cray Research, Inc. Router table lookup mechanism US5983272A (en) * 1997-08-29 1999-11-09 Cisco Technology, Inc. Option request protocol US5991302A (en) * 1997-04-10 1999-11-23 Cisco Technology, Inc. Technique for maintaining prioritization of data transferred among heterogeneous nodes of a computer network US6032193A (en) * 1997-03-20 2000-02-29 Niobrara Research And Development Corporation Computer system having virtual circuit address altered by local computer to switch to different physical data link to increase data transmission bandwidth US6055618A (en) * 1995-10-31 2000-04-25 Cray Research, Inc. Virtual maintenance network in multiprocessing system having a non-flow controlled virtual maintenance channel US6058433A (en) * 1996-07-23 2000-05-02 Gateway 2000, Inc. System and method for providing increased throughput through a computer serial port to a modem communications port US6065062A (en) * 1997-12-10 2000-05-16 Cisco Systems, Inc. Backup peer pool for a routed computer network US6085303A (en) * 1997-11-17 2000-07-04 Cray Research, Inc. Seralized race-free virtual barrier network US6101181A (en) * 1997-11-17 2000-08-08 Cray Research Inc. Virtual channel assignment in large torus systems US6115751A (en) * 1997-04-10 2000-09-05 Cisco Technology, Inc. Technique for capturing information needed to implement transmission priority routing among heterogeneous nodes of a computer network US6154743A (en) * 1998-06-16 2000-11-28 Cisco Technology, Inc. Technique for accessing heterogeneous directory services in an APPN environment US6182267B1 (en) 1998-11-20 2001-01-30 Cisco Technology, Inc. Ensuring accurate data checksum US6216174B1 (en) 1998-09-29 2001-04-10 Silicon Graphics, Inc. System and method for fast barrier synchronization US6230219B1 (en) * 1997-11-10 2001-05-08 International Business Machines Corporation High performance multichannel DMA controller for a PCI host bridge with a built-in cache US6230252B1 (en) 1997-11-17 2001-05-08 Silicon Graphics, Inc. Hybrid hypercube/torus architecture US6311226B1 (en) 1997-08-29 2001-10-30 Cisco Technology, Inc. Method and apparatus for dynamic link name negotiation US6378000B1 (en) 1999-04-29 2002-04-23 Mitsubish Electric Research Laboratories, Inc Address mapping in home entertainment network US6408348B1 (en) * 1999-08-20 2002-06-18 International Business Machines Corporation System, method, and program for managing I/O requests to a storage device US6496862B1 (en) 1998-08-25 2002-12-17 Mitsubishi Electric Research Laboratories, Inc. Remote monitoring and control of devices connected to an IEEE 1394 bus via a gateway device US6505255B1 (en) 1999-04-29 2003-01-07 Mitsubishi Electric Information Technology Center America, Inc. (Ita) Method for formatting and routing data between an external network and an internal network US6523064B1 (en) 1999-04-29 2003-02-18 Mitsubishi Electric Research Laboratories, Inc Network gateway for collecting geographic data information US6591303B1 (en) * 1997-03-07 2003-07-08 Sun Microsystems, Inc. Method and apparatus for parallel trunking of interfaces to increase transfer bandwidth US6631137B1 (en) 1998-08-07 2003-10-07 Cisco Technology, Inc. Method and system for improving high speed internetwork data transfers US6633547B1 (en) 1999-04-29 2003-10-14 Mitsubishi Electric Research Laboratories, Inc. Command and control transfer US6674720B1 (en) 1999-09-29 2004-01-06 Silicon Graphics, Inc. Age-based network arbitration system and method US6674742B1 (en) 1999-07-08 2004-01-06 Cisco Technology, Inc. Automatic SDLC role configuration on router interfaces US6711178B1 (en) 1998-09-08 2004-03-23 Cisco Technology, Inc. Enhanced claw packing protocol US6714986B2 (en) 1995-10-26 2004-03-30 Matsushita Electric Industrial, Co., Ltd. File system for handling real-time and non-real-time data US6751698B1 (en) 1999-09-29 2004-06-15 Silicon Graphics, Inc. Multiprocessor node controller circuit and method US6751683B1 (en) 2000-09-29 2004-06-15 International Business Machines Corporation Method, system and program products for projecting the impact of configuration changes on controllers US6791979B1 (en) 1997-04-10 2004-09-14 Cisco Technology, Inc. Mechanism for conveying data prioritization information among heterogeneous nodes of a computer network US20040213288A1 (en) * 2002-08-29 2004-10-28 Lynn James A. Method and apparatus for balancing a request load of communication channels US20050002411A1 (en) * 1998-09-24 2005-01-06 Keyvan Moataghed DSP voice buffersize negotiation between DSPs for voice packet end devices US6950888B1 (en) 2000-09-29 2005-09-27 International Business Machines Corporation Method, system and program products for determining whether I/O constraints exist for controllers of a computing environment US6961326B1 (en) * 1999-05-27 2005-11-01 Samsung Electronics Co., Ltd Apparatus and method for transmitting variable-length data according to a radio link protocol in a mobile communication system US20050264581A1 (en) * 2004-05-21 2005-12-01 Bea Systems, Inc. Dynamic program modification WO2005114454A2 (en) * 2004-05-21 2005-12-01 Bea Systems, Inc. Dynamic service composition and orchestration US20050267892A1 (en) * 2004-05-21 2005-12-01 Patrick Paul B Service proxy definition US20050267947A1 (en) * 2004-05-21 2005-12-01 Bea Systems, Inc. Service oriented architecture with message processing pipelines US20050273520A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Service oriented architecture with file transport protocol US20050273518A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Co-located service oriented architecture US20050270970A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Failsafe service oriented architecture US20050273517A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Service oriented architecture with credential management US20050273847A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Programmable message processing stage for a service oriented architecture US20050273502A1 (en) * 2004-05-21 2005-12-08 Patrick Paul B Service oriented architecture with message processing stages US20050273516A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Dynamic routing in a service oriented architecture US20050273521A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Dynamically configurable service oriented architecture US20050273497A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Service oriented architecture with electronic mail transport protocol US20050278335A1 (en) * 2004-05-21 2005-12-15 Bea Systems, Inc. Service oriented architecture with alerts US20050278374A1 (en) * 2004-05-21 2005-12-15 Bea Systems, Inc. Dynamic program modification US20060005063A1 (en) * 2004-05-21 2006-01-05 Bea Systems, Inc. Error handling for a service oriented architecture US20060007918A1 (en) * 2004-05-21 2006-01-12 Bea Systems, Inc. Scaleable service oriented architecture US20060026168A1 (en) * 2004-05-20 2006-02-02 Bea Systems, Inc. Data model for occasionally-connected application server US20060031354A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Service oriented architecture US20060031481A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Service oriented architecture with monitoring US20060031353A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Dynamic publishing in a service oriented architecture US20060031431A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Reliable updating for a service oriented architecture US20060031433A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Batch updating for a service oriented architecture US20060031355A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Programmable service oriented architecture US20060031432A1 (en) * 2004-05-21 2006-02-09 Bea Systens, Inc. Service oriented architecture with message processing pipelines US20060031930A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Dynamically configurable service oriented architecture US20060036463A1 (en) * 2004-05-21 2006-02-16 Patrick Paul B Liquid computing US20060034237A1 (en) * 2004-05-21 2006-02-16 Bea Systems, Inc. Dynamically configurable service oriented architecture US20060069791A1 (en) * 2004-05-21 2006-03-30 Bea Systems, Inc. Service oriented architecture with interchangeable transport protocols US20060080419A1 (en) * 2004-05-21 2006-04-13 Bea Systems, Inc. Reliable updating for a service oriented architecture US20060123128A1 (en) * 2004-12-03 2006-06-08 Microsoft Corporation Message exchange protocol extension negotiation US20060136555A1 (en) * 2004-05-21 2006-06-22 Bea Systems, Inc. Secure service oriented architecture US20070283127A1 (en) * 2003-08-18 2007-12-06 Cray Inc. Method and apparatus for indirectly addressed vector load-add-store across multi-processors US7334110B1 (en) 2003-08-18 2008-02-19 Cray Inc. Decoupled scalar/vector computer architecture system and method US7366873B1 (en) 2003-08-18 2008-04-29 Cray, Inc. Indirectly addressed vector load-operate-store method and apparatus US7437521B1 (en) 2003-08-18 2008-10-14 Cray Inc. Multistream processing memory-and barrier-synchronization method and apparatus US20080288304A1 (en) * 2007-05-18 2008-11-20 Bea Systems, Inc. System and Method for Enabling Decision Activities in a Process Management and Design Environment US20090006167A1 (en) * 2007-06-28 2009-01-01 Bea Systems, Inc. System and Method for Integrating a Business Process Management System with an Enterprise Service Bus US7503048B1 (en) 2003-08-18 2009-03-10 Cray Incorporated Scheduling synchronization of programs running as streams on multiple processors US7519771B1 (en) 2003-08-18 2009-04-14 Cray Inc. System and method for processing memory instructions using a forced order queue US7543133B1 (en) 2003-08-18 2009-06-02 Cray Inc. Latency tolerant distributed shared memory multiprocessor computer US20090300656A1 (en) * 2006-09-22 2009-12-03 Bea Systems, Inc. Mobile applications US7735088B1 (en) 2003-08-18 2010-06-08 Cray Inc. Scheduling synchronization of programs running as streams on multiple processors US7757497B1 (en) 2005-03-09 2010-07-20 Cray Inc. Method and apparatus for cooling electronic components US20110141973A1 (en) * 2009-12-15 2011-06-16 Electronics And Telecommunications Research Institute Method for reassembling medium access control protocol data unit and receiver performing the same US8307194B1 (en) 2003-08-18 2012-11-06 Cray Inc. Relaxed memory consistency model US20130223429A1 (en) * 1999-03-05 2013-08-29 Dennis D. Ferguson Variable rate coding for enabling high performance communication US20160043859A1 (en) * 2008-12-12 2016-02-11 At&T Mobility Ii Llc Devices and methods for asymmetrical multicarrier transmission and reception US9900893B2 (en) 2009-07-24 2018-02-20 At&T Mobility Ii Llc Asymmetrical receivers for wireless communication US10439878B1 (en) * 2018-05-31 2019-10-08 EMC IP Holding Company LLC Process-based load balancing and failover policy implementation in storage multi-path layer of host device US10498671B2 (en) 2016-07-01 2019-12-03 Kabushiki Kaisha Toshiba IC card, portable electronic apparatus, and IC card processing apparatus\n\nFamilies Citing this family (40)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US5917822A (en) 1995-11-15 1999-06-29 Xerox Corporation Method for providing integrated packet services over a shared-media network US5974466A (en) * 1995-12-28 1999-10-26 Hitachi, Ltd. ATM controller and ATM communication control device US6091725A (en) 1995-12-29 2000-07-18 Cisco Systems, Inc. Method for traffic management, traffic prioritization, access control, and packet forwarding in a datagram computer network US6243667B1 (en) * 1996-05-28 2001-06-05 Cisco Systems, Inc. Network flow switching and flow data export US5842040A (en) * 1996-06-18 1998-11-24 Storage Technology Corporation Policy caching method and apparatus for use in a communication device based on contents of one data unit in a subset of related data units CN1240080A (zh) * 1996-12-05 1999-12-29 è¥¿é¨å­å ¬å¸ æ°å­æ¶æ¯çè³å°ä¸ä¸ªæ®µç±ç¬¬ä¸ä¸ªè£ ç½®ä¼ è¾å°ä¸ä¸ªç¬¬äºè£ ç½®çæ¹æ³åç³»ç» US6151297A (en) * 1997-07-08 2000-11-21 Hewlett-Packard Company Method and system for link level server/switch trunking US6574234B1 (en) * 1997-09-05 2003-06-03 Amx Corporation Method and apparatus for controlling network devices JPH11103303A (ja) * 1997-09-26 1999-04-13 Sony Corp ãããã¯ã¼ã¯è³æºäºç´å¶å¾¡æ¹æ³ããã³è£ ç½®ãåä¿¡ç«¯æ«ãéä¿¡ç«¯æ«ãä¸¦ã³ã«ä¸­ç¶è£ ç½® GB9812430D0 (en) * 1998-06-09 1998-08-05 Radiant Networks Plc Data transfer method and apparatus US6084874A (en) * 1998-06-30 2000-07-04 Storage Technology Corporation Temporary data transfer connections US7324544B1 (en) 1998-09-11 2008-01-29 Cirrus Logic, Inc. Network slot synchronization scheme for a computer network communication channel EP1112641A2 (en) 1998-09-11 2001-07-04 Sharewave, Inc. Method and apparatus for accessing a computer network communication channel US7328270B1 (en) * 1999-02-25 2008-02-05 Advanced Micro Devices, Inc. Communication protocol processor having multiple microprocessor cores connected in series and dynamically reprogrammed during operation via instructions transmitted along the same data paths used to convey communication data US7213061B1 (en) 1999-04-29 2007-05-01 Amx Llc Internet control system and method US6657646B2 (en) 1999-06-08 2003-12-02 Amx Corporation System and method for multimedia display US6414036B1 (en) * 1999-09-01 2002-07-02 Van Beek Global/Ninkov Llc Composition for treatment of infections of humans and animals US7023833B1 (en) 1999-09-10 2006-04-04 Pulse-Link, Inc. Baseband wireless network for isochronous communication US7574494B1 (en) * 1999-10-15 2009-08-11 Thomson Licensing User interface for a bi-directional communication system US7088795B1 (en) 1999-11-03 2006-08-08 Pulse-Link, Inc. Ultra wide band base band receiver US6775248B1 (en) * 2000-09-05 2004-08-10 Raytheon Company Programmable bandwidth allocation between send and receive in a duplex communication path US7032045B2 (en) 2001-09-18 2006-04-18 Invensys Systems, Inc. Multi-protocol bus device US20030145089A1 (en) * 2002-01-29 2003-07-31 Xerox Corporation System and method for enabling arbitrary components to transfer data between each other US7224366B2 (en) 2002-10-17 2007-05-29 Amx, Llc Method and system for control system software US7703029B2 (en) 2003-07-28 2010-04-20 Sap Ag Grid browser component US7673054B2 (en) * 2003-07-28 2010-03-02 Sap Ag. Grid manageable application process management scheme US7568199B2 (en) * 2003-07-28 2009-07-28 Sap Ag. System for matching resource request that freeing the reserved first resource and forwarding the request to second resource if predetermined time period expired US7546553B2 (en) * 2003-07-28 2009-06-09 Sap Ag Grid landscape component US7594015B2 (en) 2003-07-28 2009-09-22 Sap Ag Grid organization US7631069B2 (en) 2003-07-28 2009-12-08 Sap Ag Maintainable grid managers US7574707B2 (en) * 2003-07-28 2009-08-11 Sap Ag Install-run-remove mechanism US20050044250A1 (en) * 2003-07-30 2005-02-24 Gay Lance Jeffrey File transfer system US7810090B2 (en) 2003-12-17 2010-10-05 Sap Ag Grid compute node software application deployment CN1674587A (zh) * 2004-03-23 2005-09-28 æ ªå¼ä¼ç¤¾ä¸è ä¿¡æ¯ç»ç«¯æºåå ¶æ°æ®ä¼ éæ¹æ³ US7565383B2 (en) * 2004-12-20 2009-07-21 Sap Ag. Application recovery US7793290B2 (en) 2004-12-20 2010-09-07 Sap Ag Grip application acceleration by executing grid application based on application usage history prior to user request for application execution JP4349349B2 (ja) * 2005-08-30 2009-10-21 ã½ãã¼æ ªå¼ä¼ç¤¾ ãã¼ã¿éåä¿¡ã·ã¹ãã ãéä¿¡è£ ç½®ãåä¿¡è£ ç½®åã³ãã¼ã¿éåä¿¡æ¹æ³ AU2006287639C1 (en) 2005-09-07 2012-06-28 Open Invention Network, Llc Method and computer program for device configuration WO2015158366A1 (en) * 2014-04-15 2015-10-22 Siemens Aktiengesellschaft Simplified exchange of data between devices KR20210060253A (ko) 2019-11-18 2021-05-26 ì¼ì±ì ìì£¼ìíì¬ ë©ëª¨ë¦¬ ì»¨í¸ë¡¤ë¬, ë©ëª¨ë¦¬ ìì¤í  ë° ì´ì ëì ë°©ë²\n\nCitations (10)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US4335426A (en) * 1980-03-10 1982-06-15 International Business Machines Corporation Remote processor initialization in a multi-station peer-to-peer intercommunication system US4551842A (en) * 1982-01-11 1985-11-05 U.S. Philips Corporation Error-protected data transmission device and communication network US4586134A (en) * 1983-03-04 1986-04-29 International Business Machines Corp. Computer network system and its use for information unit transmission US4677588A (en) * 1983-11-14 1987-06-30 International Business Machines Corp. Network interconnection without integration US4791566A (en) * 1987-03-27 1988-12-13 Digital Equipment Corporation Terminal device session management protocol US5018060A (en) * 1989-01-26 1991-05-21 Ibm Corporation Allocating data storage space of peripheral data storage devices using implied allocation based on user parameters US5109483A (en) * 1987-06-15 1992-04-28 International Business Machines Corp. Node initiating xid exchanges over an activated link including an exchange of sets of binding signals between nodes for establishing sessions US5224205A (en) * 1990-05-21 1993-06-29 International Business Machines Corp. Method of combining architecturally dissimilar computing networks into a single logical network US5241541A (en) * 1990-03-15 1993-08-31 International Business Machines Corporation Burst time division multiplex interface for integrated data link controller US5287500A (en) * 1991-06-03 1994-02-15 Digital Equipment Corporation System for allocating storage spaces based upon required and optional service attributes having assigned piorities\n\nFamily Cites Families (8)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US4437157A (en) * 1978-07-20 1984-03-13 Sperry Corporation Dynamic subchannel allocation US4954821A (en) * 1988-03-15 1990-09-04 International Business Machines Corporation Method of establishing transmission group numbers for network links US4905282A (en) * 1988-10-19 1990-02-27 Hayes Microcomputer Products, Inc. Feature negotiation protocol and dynamically adjustable retraining sequence for a high speed half duplex modem DE68924051T2 (de) * 1988-12-30 1996-05-02 Ibm Vielfacher Ein-/Ausgabe-Kanal. WO1991007038A2 (en) * 1989-11-03 1991-05-16 Microcom Systems, Inc. Method and apparatus for effecting efficient transmission of data US5231649A (en) * 1991-08-08 1993-07-27 Ascend Communications, Inc. Method and apparatus for dynamic bandwidth allocation in a digital communication session US5301323A (en) * 1992-10-30 1994-04-05 International Business Machines Corp. Data processing system including dynamic channel path management US5546549A (en) * 1994-06-01 1996-08-13 International Business Machines Corporation Multi-path channel (MPC) interface with user transparent, unbalanced, dynamically alterable computer input/output channels\n\n1994\n\n1994-06-01 US US08/252,020 patent/US5546549A/en not_active Expired - Lifetime\n\n1995\n\n1995-03-20 JP JP7060677A patent/JP3003977B2/ja not_active Expired - Fee Related\n\n1995-04-27 EP EP95480055A patent/EP0685952A1/en not_active Withdrawn\n\n1996\n\n1996-05-01 US US08/641,593 patent/US5699532A/en not_active Expired - Fee Related\n\nPatent Citations (10)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US4335426A (en) * 1980-03-10 1982-06-15 International Business Machines Corporation Remote processor initialization in a multi-station peer-to-peer intercommunication system US4551842A (en) * 1982-01-11 1985-11-05 U.S. Philips Corporation Error-protected data transmission device and communication network US4586134A (en) * 1983-03-04 1986-04-29 International Business Machines Corp. Computer network system and its use for information unit transmission US4677588A (en) * 1983-11-14 1987-06-30 International Business Machines Corp. Network interconnection without integration US4791566A (en) * 1987-03-27 1988-12-13 Digital Equipment Corporation Terminal device session management protocol US5109483A (en) * 1987-06-15 1992-04-28 International Business Machines Corp. Node initiating xid exchanges over an activated link including an exchange of sets of binding signals between nodes for establishing sessions US5018060A (en) * 1989-01-26 1991-05-21 Ibm Corporation Allocating data storage space of peripheral data storage devices using implied allocation based on user parameters US5241541A (en) * 1990-03-15 1993-08-31 International Business Machines Corporation Burst time division multiplex interface for integrated data link controller US5224205A (en) * 1990-05-21 1993-06-29 International Business Machines Corp. Method of combining architecturally dissimilar computing networks into a single logical network US5287500A (en) * 1991-06-03 1994-02-15 Digital Equipment Corporation System for allocating storage spaces based upon required and optional service attributes having assigned piorities\n\nCited By (129)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US6247046B1 (en) * 1993-04-23 2001-06-12 Emc Corporation Method and apparatus for interfacing two remotely disposed devices coupled via a transmission medium US5960216A (en) * 1993-04-23 1999-09-28 Emc Corporation Method and apparatus for interfacing two remotely disposed devices coupled via a transmission medium US5699532A (en) * 1994-06-01 1997-12-16 International Business Machines Corporation Dynamic multipath channel interface for input/output channels US5805822A (en) * 1994-06-01 1998-09-08 International Business Machine Corp. Channel interface with data segmentation and re-segementation US5659796A (en) * 1995-04-13 1997-08-19 Cray Research, Inc. System for randomly modifying virtual channel allocation and accepting the random modification based on the cost function US5701416A (en) * 1995-04-13 1997-12-23 Cray Research, Inc. Adaptive routing mechanism for torus interconnection network US5842045A (en) * 1995-08-14 1998-11-24 Nec Corporation Terminal unit having a universal multi-protocol modular jack automatically sets its protocol to match with protocol of a modular plug connecting to the jack US6714986B2 (en) 1995-10-26 2004-03-30 Matsushita Electric Industrial, Co., Ltd. File system for handling real-time and non-real-time data US6055618A (en) * 1995-10-31 2000-04-25 Cray Research, Inc. Virtual maintenance network in multiprocessing system having a non-flow controlled virtual maintenance channel WO1997019411A1 (en) * 1995-11-17 1997-05-29 Mci Communications Corporation Registry communications middleware US5864738A (en) * 1996-03-13 1999-01-26 Cray Research, Inc. Massively parallel processing system using two data paths: one connecting router circuit to the interconnect network and the other connecting router circuit to I/O controller US6029212A (en) * 1996-03-13 2000-02-22 Cray Research, Inc. Method of handling arbitrary size message queues in which a message is written into an aligned block of external registers within a plurality of external registers US5835925A (en) * 1996-03-13 1998-11-10 Cray Research, Inc. Using external registers to extend memory reference capabilities of a microprocessor US6058433A (en) * 1996-07-23 2000-05-02 Gateway 2000, Inc. System and method for providing increased throughput through a computer serial port to a modem communications port US6591303B1 (en) * 1997-03-07 2003-07-08 Sun Microsystems, Inc. Method and apparatus for parallel trunking of interfaces to increase transfer bandwidth US5956385A (en) * 1997-03-12 1999-09-21 Harris Corporation Test set interface for automatically detecting line type US6032193A (en) * 1997-03-20 2000-02-29 Niobrara Research And Development Corporation Computer system having virtual circuit address altered by local computer to switch to different physical data link to increase data transmission bandwidth US5907553A (en) * 1997-04-08 1999-05-25 Level One Communications, Inc. Power savings in multiple technology physical layer devices supporting autonegotiation US5991302A (en) * 1997-04-10 1999-11-23 Cisco Technology, Inc. Technique for maintaining prioritization of data transferred among heterogeneous nodes of a computer network US6791979B1 (en) 1997-04-10 2004-09-14 Cisco Technology, Inc. Mechanism for conveying data prioritization information among heterogeneous nodes of a computer network US6115751A (en) * 1997-04-10 2000-09-05 Cisco Technology, Inc. Technique for capturing information needed to implement transmission priority routing among heterogeneous nodes of a computer network US5983272A (en) * 1997-08-29 1999-11-09 Cisco Technology, Inc. Option request protocol US6643700B1 (en) 1997-08-29 2003-11-04 Cisco Technology, Inc. Option request protocol US6311226B1 (en) 1997-08-29 2001-10-30 Cisco Technology, Inc. Method and apparatus for dynamic link name negotiation US6230219B1 (en) * 1997-11-10 2001-05-08 International Business Machines Corporation High performance multichannel DMA controller for a PCI host bridge with a built-in cache US5970232A (en) * 1997-11-17 1999-10-19 Cray Research, Inc. Router table lookup mechanism US6230252B1 (en) 1997-11-17 2001-05-08 Silicon Graphics, Inc. Hybrid hypercube/torus architecture US6085303A (en) * 1997-11-17 2000-07-04 Cray Research, Inc. Seralized race-free virtual barrier network US6101181A (en) * 1997-11-17 2000-08-08 Cray Research Inc. Virtual channel assignment in large torus systems US6065062A (en) * 1997-12-10 2000-05-16 Cisco Systems, Inc. Backup peer pool for a routed computer network WO1999041862A1 (en) * 1998-02-11 1999-08-19 Mcdata Corporation Method and apparatus for establishment of dynamic escon connections from fibre channel frames US6148004A (en) * 1998-02-11 2000-11-14 Mcdata Corporation Method and apparatus for establishment of dynamic ESCON connections from fibre channel frames US6631137B1 (en) 1998-08-07 2003-10-07 Cisco Technology, Inc. Method and system for improving high speed internetwork data transfers US6711178B1 (en) 1998-09-08 2004-03-23 Cisco Technology, Inc. Enhanced claw packing protocol US20050002411A1 (en) * 1998-09-24 2005-01-06 Keyvan Moataghed DSP voice buffersize negotiation between DSPs for voice packet end devices US7742491B2 (en) * 1998-09-24 2010-06-22 Cisco Technology, Inc. DSP voice buffersize negotiation between DSPs for voice packet end devices US6216174B1 (en) 1998-09-29 2001-04-10 Silicon Graphics, Inc. System and method for fast barrier synchronization US6182267B1 (en) 1998-11-20 2001-01-30 Cisco Technology, Inc. Ensuring accurate data checksum US20130223429A1 (en) * 1999-03-05 2013-08-29 Dennis D. Ferguson Variable rate coding for enabling high performance communication US9306703B2 (en) * 1999-03-05 2016-04-05 Intel Corporation Variable rate coding for enabling high performance communication US9954635B2 (en) 1999-03-05 2018-04-24 Intel Corporation Variable rate coding for enabling high performance communication US6633547B1 (en) 1999-04-29 2003-10-14 Mitsubishi Electric Research Laboratories, Inc. Command and control transfer US6523064B1 (en) 1999-04-29 2003-02-18 Mitsubishi Electric Research Laboratories, Inc Network gateway for collecting geographic data information US6378000B1 (en) 1999-04-29 2002-04-23 Mitsubish Electric Research Laboratories, Inc Address mapping in home entertainment network US6674742B1 (en) 1999-07-08 2004-01-06 Cisco Technology, Inc. Automatic SDLC role configuration on router interfaces US6408348B1 (en) * 1999-08-20 2002-06-18 International Business Machines Corporation System, method, and program for managing I/O requests to a storage device US6751698B1 (en) 1999-09-29 2004-06-15 Silicon Graphics, Inc. Multiprocessor node controller circuit and method US6674720B1 (en) 1999-09-29 2004-01-06 Silicon Graphics, Inc. Age-based network arbitration system and method US7881321B2 (en) 1999-09-29 2011-02-01 Silicon Graphics International Multiprocessor node controller circuit and method US20090024833A1 (en) * 1999-09-29 2009-01-22 Silicon Graphics, Inc. Multiprocessor Node Controller Circuit and Method US6950888B1 (en) 2000-09-29 2005-09-27 International Business Machines Corporation Method, system and program products for determining whether I/O constraints exist for controllers of a computing environment US6751683B1 (en) 2000-09-29 2004-06-15 International Business Machines Corporation Method, system and program products for projecting the impact of configuration changes on controllers US20040213288A1 (en) * 2002-08-29 2004-10-28 Lynn James A. Method and apparatus for balancing a request load of communication channels US7260113B2 (en) * 2002-08-29 2007-08-21 Lsi Corporation Method and apparatus for balancing a request load of communication channels US7421565B1 (en) 2003-08-18 2008-09-02 Cray Inc. Method and apparatus for indirectly addressed vector load-add -store across multi-processors US7366873B1 (en) 2003-08-18 2008-04-29 Cray, Inc. Indirectly addressed vector load-operate-store method and apparatus US8307194B1 (en) 2003-08-18 2012-11-06 Cray Inc. Relaxed memory consistency model US7793073B2 (en) 2003-08-18 2010-09-07 Cray Inc. Method and apparatus for indirectly addressed vector load-add-store across multi-processors US7735088B1 (en) 2003-08-18 2010-06-08 Cray Inc. Scheduling synchronization of programs running as streams on multiple processors US7543133B1 (en) 2003-08-18 2009-06-02 Cray Inc. Latency tolerant distributed shared memory multiprocessor computer US7519771B1 (en) 2003-08-18 2009-04-14 Cray Inc. System and method for processing memory instructions using a forced order queue US7503048B1 (en) 2003-08-18 2009-03-10 Cray Incorporated Scheduling synchronization of programs running as streams on multiple processors US7437521B1 (en) 2003-08-18 2008-10-14 Cray Inc. Multistream processing memory-and barrier-synchronization method and apparatus US20070283127A1 (en) * 2003-08-18 2007-12-06 Cray Inc. Method and apparatus for indirectly addressed vector load-add-store across multi-processors US7334110B1 (en) 2003-08-18 2008-02-19 Cray Inc. Decoupled scalar/vector computer architecture system and method US20060026168A1 (en) * 2004-05-20 2006-02-02 Bea Systems, Inc. Data model for occasionally-connected application server US20060031256A1 (en) * 2004-05-20 2006-02-09 Bea Systems, Inc. Template language for mobile client US20060030292A1 (en) * 2004-05-20 2006-02-09 Bea Systems, Inc. Client programming for mobile client US20060031228A1 (en) * 2004-05-20 2006-02-09 Bea Systems, Inc. Adaptive user interface for occasionally-connected application server US20060031264A1 (en) * 2004-05-20 2006-02-09 Bea Systems, Inc. Synchronization protocol for occasionally-connected application server US20060053368A1 (en) * 2004-05-20 2006-03-09 Bea Systems, Inc. Conduit manager for occasionally-connected application server US7310684B2 (en) 2004-05-21 2007-12-18 Bea Systems, Inc. Message processing in a service oriented architecture US20050278335A1 (en) * 2004-05-21 2005-12-15 Bea Systems, Inc. Service oriented architecture with alerts US20060031431A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Reliable updating for a service oriented architecture US20060031355A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Programmable service oriented architecture US20060031432A1 (en) * 2004-05-21 2006-02-09 Bea Systens, Inc. Service oriented architecture with message processing pipelines US20060031930A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Dynamically configurable service oriented architecture US20060036463A1 (en) * 2004-05-21 2006-02-16 Patrick Paul B Liquid computing US20060034237A1 (en) * 2004-05-21 2006-02-16 Bea Systems, Inc. Dynamically configurable service oriented architecture US20060031353A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Dynamic publishing in a service oriented architecture US20060069791A1 (en) * 2004-05-21 2006-03-30 Bea Systems, Inc. Service oriented architecture with interchangeable transport protocols US20060080419A1 (en) * 2004-05-21 2006-04-13 Bea Systems, Inc. Reliable updating for a service oriented architecture US20050264581A1 (en) * 2004-05-21 2005-12-01 Bea Systems, Inc. Dynamic program modification US20060136555A1 (en) * 2004-05-21 2006-06-22 Bea Systems, Inc. Secure service oriented architecture US20060212593A1 (en) * 2004-05-21 2006-09-21 Bea Systems, Inc. Dynamic service composition and orchestration WO2005114454A3 (en) * 2004-05-21 2007-02-01 Bea Systems Inc Dynamic service composition and orchestration US20050273517A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Service oriented architecture with credential management US20060031481A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Service oriented architecture with monitoring US20050273847A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Programmable message processing stage for a service oriented architecture US20080034367A1 (en) * 2004-05-21 2008-02-07 Bea Systems, Inc. Message processing in a service oriented architecture US20060031354A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Service oriented architecture US20060007918A1 (en) * 2004-05-21 2006-01-12 Bea Systems, Inc. Scaleable service oriented architecture US20050270970A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Failsafe service oriented architecture US20060005063A1 (en) * 2004-05-21 2006-01-05 Bea Systems, Inc. Error handling for a service oriented architecture WO2005114454A2 (en) * 2004-05-21 2005-12-01 Bea Systems, Inc. Dynamic service composition and orchestration US8615601B2 (en) 2004-05-21 2013-12-24 Oracle International Corporation Liquid computing US20050273518A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Co-located service oriented architecture US20050278374A1 (en) * 2004-05-21 2005-12-15 Bea Systems, Inc. Dynamic program modification US20060031433A1 (en) * 2004-05-21 2006-02-09 Bea Systems, Inc. Batch updating for a service oriented architecture US20050273497A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Service oriented architecture with electronic mail transport protocol US20050267892A1 (en) * 2004-05-21 2005-12-01 Patrick Paul B Service proxy definition US7653008B2 (en) 2004-05-21 2010-01-26 Bea Systems, Inc. Dynamically configurable service oriented architecture US20050273521A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Dynamically configurable service oriented architecture US20050273520A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Service oriented architecture with file transport protocol US20050273502A1 (en) * 2004-05-21 2005-12-08 Patrick Paul B Service oriented architecture with message processing stages US7774485B2 (en) 2004-05-21 2010-08-10 Bea Systems, Inc. Dynamic service composition and orchestration US20050273516A1 (en) * 2004-05-21 2005-12-08 Bea Systems, Inc. Dynamic routing in a service oriented architecture US20050267947A1 (en) * 2004-05-21 2005-12-01 Bea Systems, Inc. Service oriented architecture with message processing pipelines US20060123128A1 (en) * 2004-12-03 2006-06-08 Microsoft Corporation Message exchange protocol extension negotiation US7912973B2 (en) * 2004-12-03 2011-03-22 Microsoft Corporation Message exchange protocol extension negotiation US7757497B1 (en) 2005-03-09 2010-07-20 Cray Inc. Method and apparatus for cooling electronic components US20090300656A1 (en) * 2006-09-22 2009-12-03 Bea Systems, Inc. Mobile applications US8645973B2 (en) 2006-09-22 2014-02-04 Oracle International Corporation Mobile applications US20080288304A1 (en) * 2007-05-18 2008-11-20 Bea Systems, Inc. System and Method for Enabling Decision Activities in a Process Management and Design Environment US8996394B2 (en) 2007-05-18 2015-03-31 Oracle International Corporation System and method for enabling decision activities in a process management and design environment US8185916B2 (en) 2007-06-28 2012-05-22 Oracle International Corporation System and method for integrating a business process management system with an enterprise service bus US20090006167A1 (en) * 2007-06-28 2009-01-01 Bea Systems, Inc. System and Method for Integrating a Business Process Management System with an Enterprise Service Bus US20160043859A1 (en) * 2008-12-12 2016-02-11 At&T Mobility Ii Llc Devices and methods for asymmetrical multicarrier transmission and reception US9998273B2 (en) * 2008-12-12 2018-06-12 At&T Mobility Ii Llc Devices and methods for asymmetrical multicarrier transmission and reception US10389511B2 (en) 2008-12-12 2019-08-20 At&T Mobility Ii Llc Devices and methods for asymmetrical multicarrier transmission and reception US11075742B2 (en) 2008-12-12 2021-07-27 At&T Mobility Ii Llc Devices and methods for asymmetrical multicarrier transmission and reception US9900893B2 (en) 2009-07-24 2018-02-20 At&T Mobility Ii Llc Asymmetrical receivers for wireless communication US20110141973A1 (en) * 2009-12-15 2011-06-16 Electronics And Telecommunications Research Institute Method for reassembling medium access control protocol data unit and receiver performing the same US10498671B2 (en) 2016-07-01 2019-12-03 Kabushiki Kaisha Toshiba IC card, portable electronic apparatus, and IC card processing apparatus US10439878B1 (en) * 2018-05-31 2019-10-08 EMC IP Holding Company LLC Process-based load balancing and failover policy implementation in storage multi-path layer of host device\n\nAlso Published As\n\nPublication number Publication date JP3003977B2 (ja) 2000-01-31 EP0685952A1 (en) 1995-12-06 US5699532A (en) 1997-12-16 JPH07325775A (ja) 1995-12-12\n\nSimilar Documents\n\nPublication Publication Date Title US5546549A (en) 1996-08-13 Multi-path channel (MPC) interface with user transparent, unbalanced, dynamically alterable computer input/output channels US5805822A (en) 1998-09-08 Channel interface with data segmentation and re-segementation US5793983A (en) 1998-08-11 Input/output channel interface which automatically deallocates failed subchannel and re-segments data block for transmitting over a reassigned subchannel JP4624110B2 (ja) 2011-02-02 ï¼ã¤ã¾ãã¯ããä»¥ä¸ã®æ©æ¢°ã®éã§ãã¼ã¿ãã¼ã¹åä½ãè¡ãªãããã®ç´æ¥ã¡ã¢ãªã¢ã¯ã»ã¹ã®ç¨æ³ US7281030B1 (en) 2007-10-09 Method of reading a remote memory US6389029B1 (en) 2002-05-14 Local area network incorporating universal serial bus protocol US5446868A (en) 1995-08-29 Network bridge method and apparatus US6600721B2 (en) 2003-07-29 End node pacing for QOS and bandwidth management CA2250108C (en) 2000-09-05 A method and apparatus for client managed flow control on a limited memory computer system US7200641B1 (en) 2007-04-03 Method and system for encoding SCSI requests for transmission using TCP/IP US20030018828A1 (en) 2003-01-23 Infiniband mixed semantic ethernet I/O path US8180928B2 (en) 2012-05-15 Method and system for supporting read operations with CRC for iSCSI and iSCSI chimney JP2001523856A (ja) 2001-11-27 ãªã³ãããã¡ã¢ãªã«ããããã¼ã¿å¥å ¨æ§ã®ããã®ï½ï½ï½ãç¨ããæ¹æ³ããã³è£ ç½® WO1999035793A1 (en) 1999-07-15 System and method for implementing multi-pathing data transfers in a system area network EP1759317B1 (en) 2010-05-26 Method and system for supporting read operations for iscsi and iscsi chimney EP0577361B1 (en) 1999-11-17 Fiber optic distribution of image data US5349583A (en) 1994-09-20 Multi-channel token ring KR20020060623A (ko) 2002-07-18 ë°ì´í°ë¥¼ ì ì¡íê¸° ìí ì ë¢°ì± ìë íë¡í ì½ì ì ê³µíëë°©ë² ë° ì¥ì¹ US20050283545A1 (en) 2005-12-22 Method and system for supporting write operations with CRC for iSCSI and iSCSI chimney US7647460B1 (en) 2010-01-12 Method and apparatus for implementing a remote mirroring data facility without employing a dedicated leased line to form the link between two remotely disposed storage devices US6052387A (en) 2000-04-18 Enhanced interface for an asynchronous transfer mode segmentation controller KR20050083861A (ko) 2005-08-26 ë°ì´í° ì²ë¦¬ ìì¤í  US6697895B1 (en) 2004-02-24 Network attached tape storage system JP3130226B2 (ja) 2001-01-31 å ¥åºåéä¿¡ãµãã·ã¹ãã åã³æ¹æ³ WO2002027507A2 (en) 2002-04-04 Device for protocol conversion using a canonical intermediate\n\nLegal Events\n\nDate Code Title Description"
    }
}