{
    "id": "dbpedia_8581_1",
    "rank": 44,
    "data": {
        "url": "https://www.jobsity.com/blog/6-reasons-c-is-still-in-use-today",
        "read_more_link": "",
        "language": "en",
        "title": "6 Reasons C++ Is Still In Use Today",
        "top_image": "https://cdn.jobsity.com/Technology_T_0a94da18d1/Technology_T_0a94da18d1.png",
        "meta_img": "https://cdn.jobsity.com/Technology_T_0a94da18d1/Technology_T_0a94da18d1.png",
        "images": [
            "https://cdn.jobsity.com/deskopt_Icon1_9349a948fc/deskopt_Icon1_9349a948fc.svg",
            "https://cdn.jobsity.com/Icons3_Desktop_d3b7246396/Icons3_Desktop_d3b7246396.svg",
            "https://cdn.jobsity.com/icon_languages_c2e009b7be/icon_languages_c2e009b7be.svg",
            "https://cdn.jobsity.com/Frame_1597880208_82fc249bf2/Frame_1597880208_82fc249bf2.svg",
            "https://cdn.jobsity.com/Frame_1597880206_39a0e39afb/Frame_1597880206_39a0e39afb.svg",
            "https://cdn.jobsity.com/icon_languages_mobile_6df87f70b5/icon_languages_mobile_6df87f70b5.svg",
            "https://cdn.jobsity.com/Technology_bd8ed4d867/Technology_bd8ed4d867.webp",
            "https://f.hubspotusercontent40.net/hubfs/5621549/01%20-%202021-12-21T185218-535-png.png",
            "https://f.hubspotusercontent40.net/hubfs/5621549/02%20(67)-png.png",
            "https://f.hubspotusercontent40.net/hubfs/5621549/03%20(38)-png.png",
            "https://5621549.fs1.hubspotusercontent-na1.net/hubfs/5621549/CTA_2.png",
            "https://cdn.jobsity.com/Linkedin_bff502f4c3/Linkedin_bff502f4c3.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2022-04-29T20:23:10+00:00",
        "summary": "",
        "meta_description": "An article on why C++ is still important. | The Jobsity Blog",
        "meta_lang": "en",
        "meta_favicon": "../favicon.png",
        "meta_site_name": "",
        "canonical_link": "https://www.jobsity.com/blog/6-reasons-c-is-still-in-use-today",
        "text": "The programming language known as C++ (or âC-plus-plusâ) is a general purpose coding language which has been used for game programming, software engineering, data structures, developing browsers, operating systems, applications, and more for over forty years.\n\nDeveloped by Bjarne Stroustrup in 1979, it supports procedural, object-oriented programming and functional programming, and was created as an extension to C language -- to which it is still easy to integrate. Because of this, it gives programmers a high level of control over system resources and memory, and is the basis of millions of existing programs and lines of code.\n\nBut with so many other programming languages developed since 1979 -- from Java to C# -- why is the C++ programming language still in use? And why do some developers even prefer it over newer, shiner, and more popular languages?\n\nIn this article, weâll break down some of those reasons, defining what makes C++ still relevant today -- and why itâs a unique tool in any developer's toolkit.\n\n#1. Itâs history\n\nC++ has been around for over 40 years which means, sure, itâs old. But it also means itâs been around for 40+ years -- and 40+ years means 40+ years worth of developers spending hundreds of thousands of hours building out libraries for its use, perfecting its methodology, developing test cases, and refining it into the best version of itself.\n\nFrom a devâs perspective, and in terms of computer science work, it also means there are millions of programs out there already written in C++, so even if nothing new was ever written in C++ thereâd still be a whole lot of work required just in keeping what exists going strong!\n\nFor that reason, C++ is important because itâs old. Even if its age may seem like a liability.\n\n#2. Itâs efficient\n\nLetâs be clear: C++ wouldnât be around today if it didnât work.\n\nC++ is known as a âlow-levelâ programming language -- meaning the language provides little (or no) abstraction from the architecture the computer uses (1s and 0s), and maintains similar structure to the processor's structure. And in that sense, it maintains the simplicity and directness of this âlow-levelâ function.\n\nAs such, its performance and memory are efficient, as there isnât a lot of intermediary between the code youâre writing and what it takes for the computer to understand that code.\n\nThis means that C++ runs well and runs efficiently. Thatâs part of the reason it's still in use, and why that use is expanding and not contracting.\n\n#3. Itâs versatile\n\nUnlike some programming languages, C++ has been able to stay useful, current, and vital, because it has been able to evolve as the needs for it have changed. Unlike other languages, C++ is adaptable, and has adapted quickly alongside programmer and software needs.\n\nIn addition, C++ is versatile because itâs been broadly used for so long that itâs highly compatible with most other languages on the market and for most emergent uses. You can use C++ for infrastructure on the client side, or for inter-processor and network communication. And more.\n\n#4. It has jobs\n\nWith so much code written in C++ already, itâs no surprise that there are plenty of jobs for devs who are proficient in C++. Top companies from Google to Microsoft often seek out and hire C++ devs -- and Jobsity has a strong record of placing the top 3% of LATAM C++ devs in jobs in companies all over North America.\n\nWhether itâs old or not, itâs still popular for building android apps, video games, virtual reality, and highly-reliable FinTech applications -- for this reason, itâs hosts a very active job market and should not be overlooked by devs and hiring managers who are building out strong nearshore or in-house teams.\n\n#5. Itâs the back-bone of OS, Browser, Libraries, and more\n\nRegardless of what youâre building, if itâs user-facing, itâs likely youâll be building it for use with an Operating System. That means itâll need to integrate with C++.\n\nWhy? Because almost all of the worldâs major operating systems are built with C++, including Microsoft Windows, Mac OS, and Linux. So regardless of the many uses of C++, this use makes it essential to understand.\n\nAnd this is the same as with all of the worldâs major web browsers. Their rendering engines are built in C++ because C++ is fast and simple, and we want our browser to render as quickly as possible (weâre impatient; letâs not pretend otherwise).\n\nFor this reason (speed), many libraries also depend on C++ -- including some of the most widely used Machine Learning libraries (like Tensorflow). If a library requires high-performance computation, involving the multiplications of huge matrices for Machine Learning training, then the optimum speed of C++ is a significant asset.\n\n#6. Its community\n\nAnother significant benefit of C++âs age and maturity is that it has a large community of users, and this community of users -- spread around the world and in every corner of the dev world, too -- supports C++ (and those writing in it) with a plethora of support, both paid and open source. Myriad online courses, code libraries, resource banks, and open source communities exist online for C++, making it the 6th most used and followed tag on StackOverflow and GitHub.\n\nThat means itâs not only easier to use, but itâs easier to learn. And for a new dev or an older one, thatâs a huge advantage.\n\nAt the end of the day, every programming project requires serious decision making around what language to use and why. Deciding whether C++ is the best language for your project is no casual matter. Taking into account delivery speed, price, and quality, it stands up pretty well to the competition -- though itâll matter what you are building and what your priorities are.\n\nBut youâd be naive to count C++ out just because itâs not the newest language in the bunch. And if the reasons above resonate with you and seem to align with the needs of the program youâre developing, we urge you to consider this versatile, fast, foundational, and efficient language."
    }
}