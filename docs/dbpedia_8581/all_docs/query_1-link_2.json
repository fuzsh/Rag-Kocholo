{
    "id": "dbpedia_8581_1",
    "rank": 2,
    "data": {
        "url": "https://stackoverflow.com/questions/2373861/is-c-still-actively-used-for-general-purpose-development",
        "read_more_link": "",
        "language": "en",
        "title": "Is C++ still actively used for general purpose development?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://stackoverflow.com/posts/2373861/ivc/3f38?prg=e65be7d2-f79b-4a94-a142-d386caf9e4ef"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-03-03T18:23:07",
        "summary": "",
        "meta_description": "Possible Duplicate:\n  Which sector of software industry uses C++?  \r\nC++ was for many years the holy grail of mission critical high performance development.  However, it seems that for the past 10 ...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/2373861/is-c-still-actively-used-for-general-purpose-development",
        "text": "First of all, I doubt anybody can give a definitive answer -- there's just no way to tell exactly how much any particular language is really used. Nearly anything you can measure is a secondary measurement, such as how many people are advertising jobs using that language. The problem is that this tends to show relatively new languages as dominating to a much greater degree than is real.\n\nThat said, my belief is as follows. At one time, C++ was the hot new language on the block, and there was a bubble when it dominated the market. That bubble deflated quite a while ago. Since then, use of C++ has been growing on an absolute basis, but the market has been growing (quite a bit) faster so its shrinking on a relative basis.\n\nThere are a couple of reasons this doesn't show up in most secondary measures such as job advertisements though. A couple of the obvious ones include:\n\nMany teams producing C++ have now had years to \"settle in\", so the turnover rate is relatively low.\n\nIt's now well established where it's used, so positions tend to be filled by internal promotions.\n\nThere's another effect I almost hesitate to mention, but it's true no matter how little a lot of people like it: there are both programmers and managers who are more excited about \"new\" than effective. This leads to a large group of wannabes who are constantly on the move to the latest and greatest \"technology\" (whether that happens to be a language, framework, platform, or whatever). They get a job, loaf (or worse, actually write some code), then move on to their next victim...er...employer. They cause a lot of \"churn\", and inflate the number of job advertisements, but produce little or nothing of any real value. That group moved from C++ to Java a long time ago, and have long since moved from Java to C# to Ruby on Rails to Hadoop to whatever the managers are excited about this week.\n\nLest I sound excessively negative, I should add that along the way, a few of them really find something they're good at, and (mostly) tend to stay with that. Unfortunately, for every one who does, there are at least five more new graduates to join the throng...\n\nC++ is still heavily used in many mission critical financial applications. For example, most of Bloomberg's platforms are based on C++ with very little front end in other languages. Many investment banks and hedge funds use algorithmic trading systems written completely in C++ (e.g., Tower Research Capital, Knight Capital, etc.).\n\nIf you've been out of C++ for a while, you may need to get used to a whole bunch of now-standard libraries. When I was doing most of my C++, STL was fairly new and you either adopted the Microsoft libs or did not. If I went back to C++ now, I'll have to learn all the new libraries to be effective.\n\nI think most of the movement to other languages is related to web development and web-centric development. The main exception to that would be Google, which still primarily use C++ and Python."
    }
}