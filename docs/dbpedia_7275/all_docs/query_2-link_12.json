{
    "id": "dbpedia_7275_2",
    "rank": 12,
    "data": {
        "url": "https://www.gnu.org/bulletins/bull21.html",
        "read_more_link": "",
        "language": "en",
        "title": "GNU's Bulletin, vol. 1 no. 21",
        "top_image": "https://www.gnu.org/graphics/gnu-head-mini.png",
        "meta_img": "https://www.gnu.org/graphics/gnu-head-mini.png",
        "images": [
            "https://www.gnu.org/graphics/heckert_gnu.transp.small.png",
            "https://www.gnu.org/graphics/fsf-logo-notext-small.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/graphics/gnu-head-mini.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "GNU's Bulletin, vol. 1 no. 21, July, 1996\n\nTable of Contents\n\nGNU's Who\n\nAdministrivia and Copyright\n\nOther GPL'ed Software\n\nWhat Is the FSF?\n\nWhat Is Copyleft?\n\nFirst Free Software Conference\n\nWhat Is the Hurd?\n\nWhat Is a GNU/Linux system?\n\nFSF and Debian Separate Amicably\n\nGNUs Flashes\n\nFree Software Redistributors Donate\n\nHelp from Free Software Companies\n\nSome Bad News about Pine\n\nFree Software Support\n\nWhat Is the LPF?\n\nNews from the LPF\n\nHelp the GNU Translation Project\n\nGNU & Other Free Software in Japan\n\nForthcoming GNUs\n\nGNU Software\n\nConfiguring GNU Software\n\nGNU Software Now Available\n\nProgram/Package Cross Reference\n\nThe Deluxe Distribution\n\nCD-ROMs\n\nPricing of the GNU CD-ROMs\n\nWhat Do the Different Prices Mean?\n\nWhy Is There an Individual Price?\n\nIs There a Maximum Price?\n\nDecember 1995 Compiler Tools Binaries CD-ROM\n\nMS-DOS/Windows Book with CD-ROM\n\nSource Code CD-ROMs\n\nJuly 1996 Source Code CD-ROMs\n\nDecember 1995 Source Code CD-ROMs\n\nNovember 1993 Source Code CD-ROM\n\nCD-ROM Subscription Service\n\nGNU Documentation\n\nHow to Get GNU Software\n\nFSF T-shirt\n\nFree Software for Microcomputers\n\nProject GNU Wish List\n\nThank GNUs\n\nDonations Translate Into Free Software\n\nCygnus Matches Donations!\n\nFree Software Foundation Order Form\n\nAddress Page\n\nGNU's Who\n\nMiles Bader and Thomas Bushnell, n/BSG (whose name used to be Michael) work on the Hurd. Roland McGrath still works on the Hurd and maintains make and the GNU C library; after 9 years with us, he has decided to join the University of Utah's Flux Project (see section GNUs Flashes, for information on this project). We thank him for his work and dedication. Karl Heuer enhances Emacs and is in charge of making Deluxe Distributions. Jim Blandy has returned to the FSF temporarily, and is working on a desktop interface.\n\nMelissa Weisshaus is working on special documentation projects.\n\nPeter H. Salus has joined us to do fundraising and publishing and manage the non-technical side of the FSF. He ran the section First Free Software Conference. Carol Botteron has joined us to manage the FSF Office, and Tami Friedman has joined the Office staff. Brian Youmans is our new Distribution Manager. Robert J. Chassell is our Secretary/Treasurer. Daniel Hagerty has left the FSF; we thank him for his hard work.\n\nThanks to volunteer Scott Ewing for helping to coordinate all the volunteers in the GNU Project. Richard Stallman continues as a volunteer who does countless tasks, such as Emacs maintenance. Volunteers Phil Nelson and Len Tower work on our Web site. Len also remains our online JOAT (jack-of-all-trades), for mailing lists, gnUSENET newsgroups, information requests, etc.\n\nAdministrivia and Copyright\n\nWritten and Edited by: Melissa Weisshaus, Robert J. Chassell, and Leonard H. Tower Jr.\n\nIllustrations by: Etienne Suvasa\n\nJapanese Edition by: Mieko Hikichi and Nobuyuki Hikichi\n\nISSN (International Standard Serial Number): 1075-7813\n\nThe GNU's Bulletin is published at the end of January and the end of July each year. Please note that there is no postal mailing list. To get a copy, send your name and address with your request to the address on the top menu. Enclosing $0.78 in U.S. Postage and/or a donation of a few dollars is appreciated but not required. If you're outside the USA, sending a mailing label and enough International Reply Coupons for a package of about 100 grams is appreciated but not required. (Including a few extra International Reply Coupons for copying costs is also appreciated.)\n\nCopyright (C) 1996 Free Software Foundation, Inc.\n\nThis page is licensed under a Creative Commons Attribution-NoDerivs 3.0 United States License.\n\nOther GPL'ed Software\n\nWe maintain a list of copylefted software that we do not presently distribute. FTP the file `/pub/gnu/GPLedSoftware' from a GNU FTP host (listed in section How to Get GNU Software). Please let us know of additional programs we should mention. We don't list Emacs Lisp Libraries; host archive.cis.ohio-state.edu has a list of those you can FTP in the file `/pub/gnu/emacs/elisp-archive/LCD-datafile.Z'.\n\nWhat Is the FSF?\n\nThe Free Software Foundation is dedicated to eliminating restrictions on people's right to use, copy, modify, and redistribute computer programs. We do this by promoting the development and use of free software. Specifically, we are putting together a complete, integrated software system named \"GNU\" (\"GNU's Not Unix\", pronounced \"guh-new\") that will be upwardly compatible with Unix. Most parts of this system are already being used and distributed.\n\nThe word \"free\" in our name refers to freedom, not price. You may or may not pay money to get GNU software, but either way you have three specific freedoms once you get it: first, the freedom to copy a program, and distribute it to your friends and co-workers; second, the freedom to change a program as you wish, by having full access to source code; third, the freedom to distribute a modified version and thus help build the community. Free software means you can study the source and learn how such programs are written; it means you can port it or improve it, and then share your work with others.\n\nIf you redistribute GNU software, you may charge a distribution fee or you may give it away, so long as you include the source code and the GNU General Public License; see section What Is Copyleft?, for details.\n\nOther organizations distribute whatever free software happens to be available. By contrast, the Free Software Foundation concentrates on the development of new free software, working towards a GNU system complete enough to eliminate the need to use a proprietary system.\n\nBesides developing GNU, the FSF distributes GNU software and manuals for a distribution fee, and accepts gifts (tax-deductible in the U.S.) to support GNU development. Most of the FSF's funds come from its distribution service.\n\nThe Board of the Foundation is: Richard M. Stallman, President; Robert J. Chassell, Secretary/Treasurer; Gerald J. Sussman, Harold Abelson, and Leonard H. Tower Jr., Directors.\n\nWhat Is Copyleft?\n\nThe simplest way to make a program free is to put it in the public domain, uncopyrighted. But this permits proprietary modified versions, which deny others the freedom to redistribute and modify; such versions undermine the goal of giving freedom to all users. To prevent this, copyleft uses copyrights in a novel manner. Typically, copyrights take away freedoms; copyleft preserves them. It is a legal instrument that requires those who pass on a program to include the rights to use, modify, and redistribute the code; the code and the freedoms become legally inseparable.\n\nThe copyleft used by the GNU Project is made from the combination of a regular copyright notice and the GNU General Public License (GPL). The GPL is a copying license which basically says that you have the aforementioned freedoms. An alternate form, the GNU Library General Public License (LGPL), applies to a few (but not most) GNU libraries. This license permits linking the libraries into proprietary executables under certain conditions. The appropriate license is included in each GNU source code distribution and in many manuals. Printed copies are available upon request.\n\nWe strongly encourage you to copyleft your programs and documentation, and we have made it as simple as possible for you to do so. The details on how to apply either form of GNU Public License appear at the end of each license.\n\nFirst Free Software Conference\n\nIn February, the FSF hosted the First Conference on Freely Redistributable Software at the Cambridge (MA) Marriott. The Conference drew 185 attendees from 14 countries, with Linus Torvalds and Richard M. Stallman as the keynote speakers, eight tutorials, eleven technical presentations, and a half dozen BoFs.\n\nThe Conference Proceedings have been published and are available from the FSF while supplies last (see the FSF Order Form, in the centerfold).\n\nThe FSF is currently negotiating with groups in Europe and the U.S. concerning co-sponsorship of future events.\n\nThe FSF thanks everyone who made this Conference a success, especially the program committee: Peter H. Salus (Chair), Lisa A. Bloch, Robert J. Chassell, Chris Demetriou, Marshall Kirk McKusick, Rich Morin, Eric S. Raymond, & Vernor Vinge. We also thank John Gilmore & Red Hat Software for subsidizing several of the European presenters, Stuart McRobert of Imperial College, London for producing the Proceedings, & Cygnus Support for donating the funds to print them.\n\nThe technical presentations were:\n\nAutomated Management of an Heterogeneous Distributed Production Environment - Ph. Defert et al., CERN\n\nFreely Redistributable Software across the Internet - Current Practice and Future Directions to Overcome the Bandwidth Crisis - Neil Smith, University of Kent at Canterbury\n\nCheap Operating Systems Research and Teaching with Linux - Victor Yodaiken, New Mexico Tech\n\nFreely Redistributable Instead of Commercial Software -- Yugoslav Experience - Radivoje Zonji'c, Belgrade University\n\nLinux on the OSF Mach3 Microkernel - Fran ois Barbou des Places, OSF Research Institute, Grenoble and Cambridge\n\nInternationalization in the GNU Project - Ulrich Drepper, University of Karlsruhe\n\nPerceptions - An Implementation of a Medical Information Support Environment with Freely Distributable Software - Drs. Greg W. Wettstein & Paul S. Etzell, Roger Maris Cancer Center\n\nThe RPM Packaging System - Marc Ewing & Erik Troan, Red Hat Software\n\nCoordinating Joint Cost/No-Cost Rights for Software Developed with SBIR Funding - Philip A. Wilsey & Dale E. Martin, University of Cincinnati\n\nLicensing Alternatives for Freely Redistributable Software - L. Peter Deutsch, Aladdin Enterprises\n\nThere will be a second conference, co-sponsored by Cygnus Support, in February, 1997. See the Web site at `http://www.gnu.ai.mit.edu' or contact gnu@prep.ai.mit.edu later this year for more information.\n\n------------------------------------------------------------------------------\n\nStrive for perfection in everything. Take the best that exists and make it better. If it doesn't exist, create it. Accept nothing nearly right or good enough.\n\n- Sir Henry Royce, co-founder of Rolls-Royce\n\n------------------------------------------------------------------------------\n\nWhat Is the Hurd?\n\nThe Hurd is a collection of server processes that run on top of Mach, a free message-passing microkernel developed at CMU. The Hurd and Mach together form the kernel of the GNU operating system. The GNU C Library implements the Unix \"system call\" interface by sending messages to Hurd servers as appropriate.\n\nThe Hurd allows users to create and share useful projects without knowing much about the internal workings of the system--projects that might never have been attempted without freely available source, a well-designed interface, and a multiple server design. The Hurd is thus like other expandable GNU software, e.g. Emacs and GUILE.\n\nCurrently, there are free ports of the Mach kernel to the 386 PC, the DEC PMAX workstation, and several other machines, with more in progress, including the Amiga, PA-RISC HP 700, & DEC Alpha-3000. Contact us if you want to help with one of these or start your own. Porting the GNU Hurd & GNU C Library is easy (easier than porting GNU Emacs, certainly easier than porting the compiler) once a Mach port to a particular platform exists. Right now we are using the University of Utah's Mach distribution which we hope will be unified with the distribution produced by the Open Software Foundation.\n\nThe first test version of the Hurd was just released. See section GNUs Flashes, for a report on recent progress.\n\nWe need help with significant Hurd-related projects. Experienced system programmers who are interested should send mail to gnu@prep.ai.mit.edu. Porting the Mach kernel or the GNU C Library to new systems is another way to help.\n\nYou can get the Hurd from prep.ai.mit.edu, our FTP distribution site, along with complete binaries for an i386 GNU system. We will not be distributing these things on CD-ROM until they are more stable.\n\nWhat Is a GNU/Linux system?\n\nby Richard M. Stallman\n\nA GNU/Linux system is a system which is a combination of Linux and GNU.\n\nLinux is a kernel, compatible with the Unix kernel, written by Linus Torvalds.\n\nGNU is a Unix-like operating system. We started the GNU Project in 1984 with the aim of bringing such a system into existence. A Unix-like operating system consists of many components; we had to obtain each of the important components somehow. The job was so large that many of the people who sympathized with the goal were discouraged from attempting it, but we decided we would reach the goal no matter how long it took.\n\nWe found some components already available as free software--for example, the X Window System and TeX. Naturally we decided to use them, since the job was big enough even with short cuts. We obtained other components by helping to convince their developers to make them free--for example, the Berkeley network utilities.\n\nThe rest of components, we had to write. These include GNU Emacs, the GNU C & C++ compilers & libraries, Bash, Ghostscript, Groff, & many others.\n\nAll of these various components--those we wrote, those we helped make free, and those we found already available--together make up the GNU system.\n\nUntil recently, users couldn't run the GNU system, because one part (the kernel; see section What Is the Hurd?) was not yet ready. (We made the first test release just recently.) However, for a couple of years now, it has been possible to put together the Linux kernel and the almost-complete GNU system, resulting in a complete Unix-like free operating system suitable for actual use.\n\nWhile commonly referred to as \"Linux systems\", we prefer the term \"Linux-based GNU systems,\" or \"GNU/Linux systems\" for short, since these systems are mostly the same as the GNU system. This gives Linus credit for the kernel that he wrote, while still indicating that these systems as a whole are essentially variants of the GNU system.\n\nWe also occasionally use the term \"GNU/Hurd system\" to emphasize that we mean a version of the GNU system which uses the Hurd rather than Linux.\n\nWe think it is proper to give the GNU Project credit for making the free Unix-like system that it set out for a decade ago. But there is a more important reason for friends of GNU to use names like \"Linux-based GNU system\" instead of \"Linux system.\" This is to help spread the GNU Project's philosophical idea: that there is ethical importance in freeing users to share software and cooperate in improving it; that free software belongs to a community, and people who benefit from the community should feel a moral obligation to help build the community when they have a chance.\n\nWhen users install a system which they call \"Linux,\" they can easily miss ever seeing the GNU idea. When businesses promote a system and call it \"Linux,\" they can easily avoid bringing the GNU idea to users' attention. And if the GNU idea is not widely known, fewer people will write free software.\n\nA conference was recently announced on the topic of developing \"Linux applications\"; although the conference is about using the GNU system, the conference announcement did not mention GNU.\n\nThe announcement does not even hint that there is any ethical reason to contribute to free software. On the contrary, it offers a panel entitled, \"Licenses and licensing--I don't want to give away my application!!!\" (The three `!' marks appear in the announcement). Even the title encourages people writing new software (which could enhance all free operating systems) to make it proprietary instead, thus contributing nothing to the free software community.\n\nIt would be harder to express that attitude if everyone knew that the topic is a variant of the GNU system. It is up to you and us to make sure they know. To do that, we have to inform people using variant GNU systems that that is what they are doing.\n\nSo please use the term \"Linux-based GNU system\" or \"GNU/Linux\" when you talk about a system which is a combination of Linux and GNU. At first, it may feel strange to go against the flow, but think how much more \"against the flow\" it was to start writing a free operating system. We did it, and you can do it.\n\nFSF and Debian Separate Amicably\n\nIan Murdock started the effort to put together Debian, a Linux-based GNU system designed to be easy to install & upgrade. He asked for & got the FSF's sponsorship for the project, hoping that besides being useful in its own right, it would give the FSF experience in packaging up a complete GNU system.\n\nThis March, Murdock stepped down as the head of Debian, having become too busy with other work. The new team head did not want FSF sponsorship. As a result, the FSF is no longer a sponsor of Debian. We wish the situation were otherwise. However, we are working together on some design issues.\n\nWe have not yet decided whether the FSF will distribute a CD-ROM of Debian, since we don't know if that would achieve enough of the goals that we previously hoped for as sponsors of the system.\n\nGNUs Flashes\n\nHurd Test Release! (Also see section What Is the Hurd?) We are pleased to announce the first public test release of the Hurd, version 0.0; it is very preliminary, and we don't recommend you try it unless you are in the mood to experiment. We are distributing it only by FTP until it becomes more stable. Much work remains to be done on reliability, efficiency, and on user-level features to take advantage of the underlying capabilities. We're making rapid progress on these tasks, and we plan to make further releases fairly often.\n\nPreliminary GNU System Released! The first test release of the Hurd has enabled us to release a complete GNU system in binary form, for 32-bit PC clones. Like the Hurd itself, this system release is preliminary, recommended for experimentation only, and available only by FTP. We have thus come in sight of the goal which the GNU project was founded to achieve. We will actually reach that goal when the system becomes reliable enough that we can recommend it for real use.\n\nwww.gnu.ai.mit.edu The GNU Project now has a site on the World Wide Web at URL: `http://www.gnu.ai.mit.edu'. We would like to thank Networks On-Line (URL: `http://www.nol.net') for donating use of the hardware & Internet connection, and their staff for setting up the machine. We would also like to thank Phil Nelson and Len Tower for being the site's webmasters. They are reachable at webmaster@www.gnu.ai.mit.edu.\n\nNew Source Code CD! (See section July 1996 Source Code CD-ROMs) We have released the July 1996 (Edition 8) Source Code CD-ROM. Once again, it is a two disk set. It includes several new programs: Automake, enscript, Exim, gcal, Generic NQS, geomview, GNAT, GNUMATH, ID Utils, Inetutils, Karma, Lynx, Maxima, Miscfiles, Smail, TIFF, and WN. See section GNU Software, for more information about these packages. Also on the CD-ROMs are full distributions of X11R6.1, MIT Scheme, Emacs, GCC, and current versions of all other GNU Software.\n\nGNU Miscellaneous Files Distribution We have just released the GNU Miscellaneous Files Distribution, which is a collection of non-crucial but useful files. All the files in version 1.0 have come from BSD, but files from other sources are eagerly solicited. Please send bug reports, as well as suggestions about new files to include to bug-gnu-utils@prep.ai.mit.edu. See the entry in section GNU Software Now Available, for more information.\n\nFree Java for Linux Machines on the way! Eric S. Raymond maintains a Linux \"HOWTO\" for running Java on Linux machines, including information about freely available Java software. See `http://sunsite.unc.edu/mdw/HOWTO/Java-HOWTO.html' for information.\n\nGive to GNU the United Way! As a 501(c)3 tax-exempt organization, the FSF is eligible to receive United Way funds. When donating to United Way, one can specify that all or part of the donation be directed to the FSF. On the donor form, check the \"Specific Requests\" box and include the sentence, \"Send my gift to the Free Software Foundation, 51 Franklin St, Fifth Floor, Boston, MA 02110.\"\n\nTapes and MS-DOS Diskettes No Longer Available from the FSF We no longer offer tapes or MS-DOS diskettes due to very low demand.\n\nGNU Software Works on MS-DOS (Also see section GNU Software) GNU Emacs 19 and many other GNU programs have been ported to MS-DOS for i386/i486/Pentium machines. We ship binaries & sources on the section December 1995 Compiler Tools Binaries CD-ROM. We will ship binaries & sources on the section MS-DOS/Windows Book with CD-ROM, when it is available.\n\nCalifornia's Department of Water Resources to use GNU GPL The Department of Water Resources (DWR) of the State of California plans to use the GNU General Public License to protect a numerical model, the \"Delta Simulation Model 2\" (DSM2), which is used to calculate flows, water quality, and particle movement in a tidal estuary. The DWR says that they wish to ensure that `DSM2 remain freely available to all who wish to use and modify the code for the benefit of the entire estuary community. The GPL is considered to be a practical way to achieve this goal.'\n\nNew Free Postscript Fonts Available! A commercial font supplier (URW++, of Hamburg, Germany) has released a commercial-quality set of the 35 standard Postscript Type 1 scalable fonts with the GPL. These sets include equivalents of the following type faces: Serif: Bookman, New Century Schoolbook, Palatino, Times; Sans-serif: Avant Garde, Helvetica, Helvetica Narrow; Serif, monospace: Courier; Script: Zapf Chancery; and Symbolic: Symbol, Zapf Dingbats. All but the symbolic fonts are available in plain, bold, italic (or oblique), and bold italic (or bold oblique) variants. The fonts are available in .PFB format (a standard Type 1 binary format originally used on PCs); the metrics are available in .AFM and .PFM formats for use by desktop publishing applications. The fonts are included in the most recent release of GNU Ghostscript, and are also available packaged separately. They replace the lower quality fonts previously released with Ghostscript.\n\nMULE Merge Almost Complete MULE is the Multi-Lingual Emacs developed by Ken'ichi Handa at the Electro-Technical Lab in Tsukuba, Japan. Handa has readied the code for merging into Emacs and we expect to complete the merge soon.\n\nGNU Emacs 19.32 (Also see section GNU Software)\n\nWe have just released Emacs 19.32. It mostly fixes bugs, but it has a few new features. The most noticeable one is that marking a region with the mouse now leaves the region highlighted at least until the next input event. Also, a new timer system lets you efficiently arrange to call a Lisp function at a particular time, and mouse tracking is much faster and more reliable.\n\nSupport for MS-DOS and Windows 95 is greatly improved. You can now compile Emacs with DJGPP version 2; asynchronous subprocesses now work on Windows 95; and many additional Lisp packages now work on MS-DOS.\n\nUtah Flux Project Software Fluke, to be the base of the Flux OS, is a new \"nanokernel.\" Design documentation, API documentation, & an experimental prototype are available. See the Web site or write to fluke-interest-request@cs.utah.edu. The Flux OS Toolkit is a framework & set of easily reusable modules to provide infrastructure needed to build OS components. To get an x86 alpha release, email oskit-users-request@cs.utah.edu, or see the Web site. Mach 4(x86) is a version of the Mach kernel which increases Mach 3's ease of use & practicality in a PC environment; has a much simpler GNU-style build environment; boots using GNU/Linux, NetBSD, FreeBSD, or Mach boot loaders; has source-compatibility with almost all Linux device drivers; and supports the Lites server. Utah provides sources & pre-built binaries for the kernel and Lites server, & the compiler tools to build Mach 4 under GNU/Linux, NetBSD, or FreeBSD. To get on the list, send mail to mach4-users-request@cs.utah.edu. Lites is a usable Mach-based Unix single server based on 4.4 BSD--Lite, originally done by CMU & HUT. x86 Lites supports binary compatibility with GNU/Linux, NetBSD, & FreeBSD, & groks Linux filesystems. Utah distributes the current Lites version, with binaries for x86 & PA-RISC. The PA version runs BSD/ELF & most HP-UX binaries. OMOS is a fully programmable class server/linker/loader using Scheme as its meta-language & the BFD package for portability. PA-RISC/SOM & x86/a.out are supported. FTP to `flux.cs.utah.edu:/flux' or see the Web page: `http://www.cs.utah.edu/projects/flux/' to get them. Send mail to flux-dist@cs.utah.edu or phone +1-801-585-3271 for more information.\n\nNew Release of GNU Make GNU make 3.75 runs native on three new ports since version 3.74: AmigaDOS, VMS, and Windows NT/Windows95.\n\nLynx now GPLed Lynx, the popular text-only Web browser is now distributed under the terms of the GNU GPL. For more information, see the Web site at `http://www.ukans.edu/'.\n\nNew/Updated Manuals since Last Bulletin (See section GNU Documentation) We recently published the GNU Awk Users' Guide by Arnold Robbins, which is a greatly expanded and rewritten version of our old GAWK Manual. We have a new edition of the Emacs Manual, for version 19.32, which describes changes since Emacs 19.29. Our GNU Make Manual is also a new edition with bug-fixes and additional information. Our Using and Porting GCC manual will soon be available in a lay-flat, bound edition.\n\nFree Software Redistributors Donate\n\nThe SNOW 2.1 CD producers added the words \"Includes $5 donation to the FSF\" to the front of their CD. Potential buyers will know just how much of the price is for the FSF & how much is for the redistributor.\n\nThe Sun Users Group Deutschland has made it even clearer: their CD says, \"Price 90 DM, + 12 DM donation to the FSF.\"\n\nASCII Corporation (Japan) has also donated to the FSF and plans to add a donation to the price of their next GNU software CD-ROM.\n\nAustin Code Works, a free software redistributor, supports free software development by giving the FSF 20% of the selling price for the GNU software CDs they produce & sell.\n\nTOHDO-SHA is donating 400 yen to the FSF for each copy of The GNU Emacs Lisp Reference Manual, Japanese Edition sold at bookstores in Japan.\n\nCQ Publishing made a large donation from the sales of their GAWK book in Japanese, and Specialized Systems Consultants, Inc. is donating 3% of the profits from selling \"Effective AWK Programming\", by Arnold Robbins. Walnut Creek CDROM gives us part of their selling price every month.\n\nIn the long run, the success of free software depends on how much new free software people develop. Free software distribution offers an opportunity to raise funds for such development in an ethical way. These redistributors have made use of the opportunity. Many others let it go to waste.\n\nYou can help promote free software development by convincing for-a-fee redistributors to contribute--either by doing development themselves or by donating to development organizations (the FSF and others).\n\nThe way to convince distributors to contribute is to demand and expect this of them. This means choosing among distributors partly by how much they give to free software development. Then you can show distributors they must compete to be the one who gives the most.\n\nTo make this work, you must insist on numbers that you can compare, such as, \"We will give ten dollars to the Foobar project for each disk sold.\" A vague commitment, such as \"A portion of the profits is donated,\" doesn't give you a basis for comparison. Even a precise fraction \"of the profits from this disk\" is not very meaningful, since creative accounting and unrelated business decisions can greatly alter what fraction of the sales price counts as profit.\n\nAlso, press developers for firm information about what kind of development they do or support. Some kinds make much more long-term difference than others. For example, maintaining a separate version of a GNU program contributes very little; maintaining a program on behalf of the GNU Project contributes much. Easy new ports contribute little, since someone else would surely do them; difficult ports such as adding a new CPU to the GNU compiler or Mach contribute more; major new features & programs contribute the most.\n\nBy establishing the idea that supporting further development is \"the proper thing to do\" when distributing free software for a fee, we can assure a steady flow of resources for making more free software.\n\nHelp from Free Software Companies\n\nWhen choosing a free software business, ask those you are considering how much they do to assist free software development, e.g., by contributing money to free software development or by writing free software improvements themselves for general use. By basing your decision partially on this factor, you can help encourage those who profit from free software to contribute to its growth.\n\nWingnut (SRA's special GNU support group) regularly donates a part of its income to the FSF to support the development of new GNU programs. Listing them here is our way of thanking them. Wingnut has made a pledge to donate 10% of their income to the FSF, and has purchased several Deluxe Distribution packages in Japan. Also see section Cygnus Matches Donations!.\n\nWingnut Project Software Research Associates, Inc. 1-1-1 Hirakawa-cho, Chiyoda-ku Tokyo 102, Japan Phone: (+81-3)3234-2611 Fax: (+81-3)3942-5174 E-mail: info-wingnut@sra.co.jp WWW: `http://www.sra.co.jp/public/sra/product/wingnut/'\n\nSome Bad News about Pine\n\nPine is a simple electronic mail reader for beginning users, which we have included on our Source CDs since 1995.\n\nIn March of 1996, the Pine developers released a new version with new usage restrictions. The new terms do not permit everyone to redistribute, and do not permit distribution of modified versions at all. Either restriction would be enough to prevent Pine from being free software.\n\nThe previous versions of Pine remain free; however, no substantial program is bug-free, and every program needs to be maintained. So this April the Free Software Foundation recruited a team of volunteers to carry on development of the free version of Pine, starting from the last available free release (3.91).\n\nForking a program is unfortunate; people should try their best to work together before giving up and working separately. So before embarking on separate development, we tried our best to persuade the old developers to make their work free software once again. In the end, though, they rejected our plea.\n\nThe new team has just started, and has yet to do a release. However, you can report bugs in Pine 3.91 to them at the address bug-pine@prep.ai.mit.edu, so they can be fixed in the next release of the free alternative version of Pine.\n\nFree Software Support\n\nThe Free Software Foundation does not provide technical support. Our mission is developing software, because that is the most time-efficient way to increase what free software can do. We leave it to others to earn a living providing support. We see programmers as providing a service, much as doctors and lawyers do now; both medical and legal knowledge are freely redistributable, but their practitioners charge for service.\n\nThe GNU Service Directory is a list of people who offer support and other consulting services. It is `/pub/gnu/GNUinfo/SERVICE' on a GNU FTP host (listed in section How to Get GNU Software), on the World Wide Web at URL `http://www.gnu.ai.mit.edu/mirror/prep/service.html', in the file `etc/SERVICE' in the GNU Emacs distribution, and the file `SERVICE' in the GCC distribution. Contact us to get a copy or to be listed in it. Those service providers who share their income with the FSF are listed in section Help from Free Software Companies.\n\nIf you find a deficiency in any GNU software, we want to know. We have many Internet mailing lists for bug reports, announcements, and questions. They are also gatewayed into USENET news as the gnu.* newsgroups. You can request a list of the mailing lists from either address on the top menu.\n\nWhen we receive a bug report, we usually try to fix the problem. While our bug fixes may seem like individual assistance, they are not; they are part of preparing a new improved version. We may send you a patch for a bug so that you can help us test the fix and ensure its quality. If your bug report does not evoke a solution from us, you may still get one from another user who reads our bug report mailing lists. Otherwise, use the Service Directory.\n\nPlease do not ask us to help you install software or learn how to use it--but do tell us how an installation script fails or where documentation is unclear.\n\nWhen choosing a service provider, ask those you are considering how much they do to assist free software development, e.g., by contributing money to free software development or by writing free software improvements themselves for general use. By basing your decision partially on this factor, you can encourage those who profit from free software to contribute to its growth.\n\nWhat Is the LPF?\n\nThe League for Programming Freedom (LPF) aims to protect the freedom to write software. This freedom is threatened by \"look-and-feel\" interface copyright lawsuits and by software patents.\n\nThe League is a grass-roots organization of professors, students, business people, programmers, users, & even software companies dedicated to bringing back the freedom to write programs. The League isn't opposed to the legal system that Congress intended--copyright on individual programs. The League aims to reverse recent changes made by judges in response to special interests.\n\nMembership dues in the League are $42 per year for programmers, managers, and professionals; $10.50 for students; $21 for others.\n\nTo join, please send a check and the following information:\n\nYour name and phone numbers (home, work, or both).\n\nThe address to use for League mailings, a few each year (please indicate whether it is your home address or your work address).\n\nThe company you work for, and your position.\n\nYour email address, so the League can contact you for political action. (If you don't want to be contacted for this, please say so, but please provide your email address anyway.)\n\nPlease mention anything about you which would enable your\n\nendorsement of the League to impress the public.\n\nPlease say whether you would like to help with League activities.\n\nThe League is not connected with the Free Software Foundation, and is not concerned with the issue of free software. The FSF supports the League because, like any software developer smaller than Microsoft, it is endangered by software patents and interface copyrights. You are in danger, too! It would be easy to ignore the problem until you or your employer is sued, but it is more prudent to organize before that happens.\n\nIf you haven't made up your mind yet, write to the League for more information:\n\nLeague for Programming Freedom One Kendall Square - #143 P.O. Box 9171 Cambridge, MA 02139 USA Electronic-Mail: lpf@uunet.uu.net World Wide Web: `http://www.lpf.org/' FTP: ftp.uu.net:/doc/lpf\n\nNews from the LPF\n\nby Dean Anderson, President, League for Programming Freedom\n\nStatement on Supreme Court Decision\n\nThe recent Supreme Court action in Lotus v. Borland represents a victory for Borland, the League, developers, and users. While we wish the Supreme Court was more specific and had provided a written opinion, the Supreme Court tie allows the First Circuit decision to stand as law for the First Circuit, and as an \"authoritative reference\" for other Circuits. Essentially, the action means that one cannot own the user interface to programs.\n\nThis action is a win for users because their investment in learning a user interface can be preserved when they change vendors. It will be more difficult to create software monopolies based on claiming an exclusive right to a user interface. This decision will promote competition in the software industry as software companies will now compete to provide better and cheaper software which speaks the languages that users already know.\n\nThe League can now focus its attention on the software patent problem. Software patents are now the major threat to software developers, and to users and the general public as prices are driven up by legal and licensing costs. Software innovations which would improve our quality of life may be blocked by patent disputes and licensing quagmires. As people become more dependent on computer networks and software, the software patent issue will become more critical.\n\nTell a Friend about the LPF\n\nThe user interface copyright battle was largely fought in the courtroom, and that involved some key moments of focus and coordination. But since we will probably be battling in Congress over software patents, our approach will have to be somewhat different. Therefore, it is very important to get more members. Membership is what will get us the most clout with Congress. In the next year, we will need to gear up to promote our ideas more widely, both inside & outside of the software world. Your help & support is very important to the success of this effort, so encourage everyone you know to join the LPF!\n\nKeep writing letters! Write the LPF, your representatives, newspapers, journals, and others. Be sure to send us copies of the articles you wrote, and the publications to which they were sent. See our Web page at `http://www.lpf.org/' for more info on how to help the LPF (send suggestions to webmasters@lpf.org).\n\nHelp the GNU Translation Project\n\nGNU is going international! Our Translation Project gets users, translators, and maintainers together, so GNU will gradually speak many native languages.\n\nTo complete the GNU Translation Project, we need many people who like their own language and write it well, and who are also able to synergize with other translators speaking the same language as part of \"translation teams\".\n\nIf you want to start a new team, or want more information on existing teams or other aspects of this project, write gnu-translation@gnu.ai.mit.edu. Also see section GNU Software, for information about gettext, the tool the GNU Translation Project uses to help translators and programmers.\n\nGNU & Other Free Software in Japan\n\nMieko (h-mieko@sra.co.jp) and Nobuyuki Hikichi (hikichi@sra.co.jp) continue to volunteer for the GNU Project in Japan. They translate each issue of this Bulletin into Japanese and distribute it widely, along with their translation of Version 2 of the GNU General Public License. This translation of the GPL is authorized by the FSF and is available by anonymous FTP from ftp.sra.co.jp in `/pub/gnu/local-fix/GPL2-j'. They are working on a formal translation of the GNU Library General Public License. They also solicit donations and offer GNU software consulting.\n\nnepoch (the Japanese version of Epoch) & MULE are available and widely used in Japan. MULE (the MULtilingual Enhancement of GNU Emacs) can handle many character sets at once. Its features are being merged into the principal version of Emacs. See section GNU Software, for more details on MULE. The FSF does not distribute nepoch, but MULE is available on the section July 1996 Source Code CD-ROMs. FTP it from sh.wide.ad.jp in `/JAPAN/mule', or etlport.etl.go.jp in `/pub/mule'.\n\nAn anonymous user in Japan has redistributed GNU material that was left over from an FSF Tokyo seminar. He bought these items for reader presents in magazines of Gijitsu Hyouron-Sha, a publishing company.\n\nThe Village Center, Inc. prints a Japanese translation (ISBN 4-938704-02-1) of the GNU Emacs Lisp Reference Manual and puts the Texinfo source on various bulletin boards. They also publish Nobuyuki & Mieko's Think GNU (ISBN 4-938704-10-2); this may be the first non-FSF copylefted publication in Japan. They also redistribute GNU CD-ROMs at this bookstore:\n\nShosen Grande 1-3-2 Kanda Jinbo-cho, Chiyoda-ku Tokyo 101, Japan Telephone: 03-3295-0011\n\nPart of Village Center's profits are donated to the FSF. Their address is:\n\nVillage Center, Inc. 3-2 Kanda Jinbo-cho, Chiyoda-ku Tokyo 101, Japan Telephone: 03-3221-3520 URL: http://www.villagecenter.co.jp/ URL: http://www.villagecenter.co.jp/gnu.html for GNU products info handling by Village Center\n\nAddison-Wesley Publishers Japan Ltd. has printed Japanese translations of the GNU Make Manual (ISBN 4-7952-9627-X) and the GAWK Manual (ISBN 4-7952-9672-8). Their address is:\n\nAddison-Wesley Publishers Japan Ltd. Nichibou Bldg. 2F 1-2-2 Sarugaku-cho, Chiyoda-ku Tokyo 101, Japan Telephone: 03-3291-4581\n\nThere is a mailing list in Japan to discuss both hardware & software which is under the GNU General Public License. It provides information about making your own computer system. The main language of the list is Japanese. If you are interested in getting information or having discussions in English, ask mka@apricot.juice.or.jp or ishiz@muraoka.info.waseda.ac.jp.\n\nMany groups in Japan now distribute GNU software. They include JUG, a PC user group; ASCII, a periodical and book publisher; the Fujitsu FM Towns users group; and SRA's special GNU users' support group, Wingnut, who also purchased the first Deluxe Distribution package in Japan (also see section Help from Free Software Companies). (Since then, there have been several other purchases of Deluxe Distribution packages in Japan.)\n\nIt is easy to place an order directly with the FSF from Japan, thus funding new software. To get an FSF Order Form written in Japanese, ask japan-fsf-orders@prep.ai.mit.edu. We encourage you to buy our software CDs: for example, 140 CD-ROM orders at the corporate rate allow the FSF to hire a programmer for a year to write more free software.\n\nMany programs in the field of parallel processing and knowledge processing were released to the public under the name of \"ICOT Free Software (IFS)\" in the Fifth Generation Computer Systems project. IFS was an 11-year Japanese project started in 1982 and FGCS was its 2-year follow-on project.\n\nAs of the end of March 1996, over 3,900 persons have accessed the ICOT Web page, and almost 21,000 files have been transferred since the first release in 1992. As ICOT was wound up in June, 1995, maintenance and further development of IFS was transferred to the Japan Information Processing Development Center (JIPDEC). JIPDEC established the Research Institute for Advanced Information Technology (AITEC). AITEC not only maintains, develops, and distributes IFS, but also develops parallel knowledge processing software in collaboration with several Japanese universities. Newly developed software will be released to the public with conditions similar to those of IFS.\n\nFor now, the domain name will remain icot.or.jp. For more information, please see URL `http://www.icot.or.jp/'.\n\nForthcoming GNUs\n\nInformation about the current status of released GNU programs can be found in section GNU Software. Here is some news of future plans.\n\nGNU C Library (For current status, see section GNU Software) Version 2.0 of the GNU C library is now in test release. GNU/Hurd support is now fully functional. Roland McGrath and Ulrich Drepper have been working steadily on support for GNU/Linux; the new GNU C library will eventually be the new standard system C library on GNU/Linux, `libc.so.6'. David Mosberger-Tang and Richard Henderson have contributed Alpha and 64-bit ELF support along with many fixes and improvements; the next major release of Linux/Alpha will use the GNU C library as the sole system library. Andreas Schwab has contributed Linux/m68k support. This release adds several new functions traditionally found in Unix systems & some small new GNU extensions, as well as major new internationalization support. Ulrich Drepper has made invaluable contributions to the library in recent months, including new floating-point printing/reading functions that are perfectly accurate & much faster than the old code; an `nsswitch.conf' mechanism for versatile name database lookup, paving the way for easy plug-in support of protocols like NIS; and a complete set of internationalization features including POSIX.2-compatible locale & localedef programs, & catalogs for displaying program messages in languages other than English. (Ulrich presented a paper on his internationalization work at the section First Free Software Conference; to order a copy of the Proceedings, see the FSF Order Form, in the centerfold). The library now builds as a shared library for systems that use the ELF object file format. Included is the run-time loader (ld.so) which sets up the shared libraries when a program runs; it works now with the Hurd & Linux kernels, and is easy to port to other ELF systems such as SVR4 & Solaris 2.\n\nGNU Emacs (For current status, see section GNU Software) Future versions of Emacs will: save the undo history in a file (which allows you to undo older changes in the history) and also have support for variable-width fonts, wide character sets, and the world's major languages. Our long term plan is to move it in the direction of a WYSIWYG word processor & make it easier for beginners to use.\n\nGNUstep (Also see \"Objective-C Library\" in section GNU Software) OpenStep is an object-oriented application programming interface specification being proposed as an open object standard. Since its announcement over two years ago, there has been much interest in a GNU implementation, named GNUstep. Work has begun on GNUstep, starting with a library written in Objective-C. Much remains to be done to bring this library close to the OpenStep specifications. Volunteers should contact office@gnustep.org. Check `http://www.gnustep.org/' for more info.\n\nrecode (For current status, see section GNU Software) The next recode release should give more flexible control over encodings of charsets, offer MIME conversions, & handle ISO-10646 (Unicode). It will install a library & support files to help work towards internationalizing GNU.\n\nGUILE GNU's Ubiquitous Extension Language is an SCM-based library which can be used to make any ordinary C program extensible (for SCM info, see \"JACAL\" in section GNU Software).\n\nAlso being developed are a POSIX.1 interface, an SCSH-like library, a module system, a Tk interface, & a byte-code interpreter; support for Emacs Lisp & a more C-like language is coming.\n\nptx (For current status, see section GNU Software) The next release of ptx should offer contextualized support for SGML texts as the first step towards a major overhaul for that package.\n\nGNU Common Lisp (For current status, see section GNU Software) Version 2.2 of GNU Common Lisp (GCL) was released in November '95. It now includes a graphical interface to the Tk widget system. All documentation is now Texinfo-based, with built-in regexp matching used to access the documentation. A first pass at the Common Lisp condition system is also included. Some new ports include DEC Alpha and ELF for GNU/Linux. Volunteers to help with the move to the ANSI standard are most welcome; contact schelter@math.utexas.edu.\n\nC Interpreter We hope to add interpreter facilities to our compiler and debugger. This task is partly finished. GCC has generated byte code for all supported languages, but that support is in flux at this time. A new effort to finish this work has begun. To make this work usable, we need to enhance GDB to load the byte code dynamically. We would also like support for compiling just a few selected functions in a file. Due to limited resources, the FSF cannot fund this. Interested volunteers should contact gnu@prep.ai.mit.edu.\n\nGCC (For current status, see section GNU Software) New front ends for GCC are being developed for Pascal and Chill. See the Fortran item in this article for news on that front end. See the GNAT item in section GNU Software, for news on GNU Ada.\n\nFortran (For info on f2c & GCC, see section GNU Software) The GNU Fortran (g77) front end is stable, but more work is needed to bring its overall packaging, feature set, and performance up to the levels the Fortran community expects. Tasks to be done include: improving documentation and diagnostics; speeding up compilation, especially for large, densely initialized data tables; completing existing support for INTEGER*2, INTEGER*8, and similar features; allowing intrinsics in PARAMETER statements; and providing debug information on COMMON and EQUIVALENCE variables. We don't know when these things will be done, but hope some will be finished in the coming months. You can speed progress by working on them or by offering funding. A mailing list exists for announcements about g77. To subscribe, ask info-gnu-fortran-request@prep.ai.mit.edu. To contact the developer of g77 or get current status, write or finger fortran@gnu.ai.mit.edu.\n\nSmalltalk (For current status, see section GNU Software) The next release, version 1.2, is planned to use Autoconf. It will have substantial performance improvements & memory requirement reductions, more control over memory allocation, ability to use the Smalltalk interpreter as a C callable library, better X Window System interfaces, ability to represent and manipulate C data structures in Smalltalk, conditional compilation facilities, large integer support, an advanced GUI-based class browsing system, better TCP/IP interfaces, exception support, weak references, & finalization support. It will run on Unix, DOS, & Windows NT.\n\nThe Dictionary Project The FSF has a copy of the unabridged Century Dictionary, now in the public domain, and we are planning to put it online. We tried OCR, but it wasn't reliable enough. Russell Nelson is coordinating the project. Volunteers have entered close to fifty pages so far, but the project needs more help; to volunteer, send mail to dictionary@gnu.ai.mit.edu or contact the FSF.\n\nGNU Software\n\nAll our software is available via FTP; see section How to Get GNU Software. We also offer section CD-ROMs, and printed section GNU Documentation, which includes manuals and reference cards. In the articles describing the contents of each medium, the version number listed after each program name was current when we published this Bulletin. When you order a newer CD-ROM, some of the programs may be newer and therefore the version number higher. See the see section Free Software Foundation Order Form, for ordering information.\n\nSome of the contents of our FTP distributions are compressed. We have software on our FTP sites to uncompress these files. Due to patent troubles with compress, we use another compression program, gzip. (Such prohibitions on software development are fought by the League for Programming Freedom; see section What Is the LPF?, for details.)\n\nYou may need to build GNU make before you build our other software. Some vendors supply no make utility at all and some native make programs lack the VPATH feature essential for using the GNU configure system to its full extent. The GNU make sources have a shell script to build make itself on such systems.\n\nWe welcome all bug reports and enhancements sent to the appropriate electronic mailing list (see section Free Software Support).\n\nConfiguring GNU Software\n\nWe are using Autoconf, a uniform scheme for configuring GNU software packages in order to compile them (see \"Autoconf\" and \"Automake\" below, in this article). The goal is to have all GNU software support the same alternatives for naming machine and system types.\n\nUltimately, it will be possible to configure and build the entire system all at once, eliminating the need to configure each individual package separately.\n\nYou can also specify both the host and target system to build cross-compilation tools. Most GNU programs now use Autoconf-generated configure scripts.\n\nGNU Software Now Available\n\nFor future programs and features, see section Forthcoming GNUs.\n\nKey to cross reference:\n\nBinCD December 1995 Binaries CD-ROM SrcCD December 1995 Source CD-ROMs\n\n[FSFman] shows that we sell a manual for that package. [FSFrc] shows we sell a reference card for that package. To order them, see the see section Free Software Foundation Order Form. See section GNU Documentation, for more information on the manuals. Source code for each manual or reference card is included with each package.\n\nacm (SrcCD) acm is a LAN-oriented, multiplayer, aerial combat simulation that runs under the X Window System. Players engage in air to air combat against one another using heat seeking missiles and cannons. We are working on a more accurate simulation of real airplane flight characteristics.\n\nApache (SrcCD) Apache is an HTTP server designed as a plug-in replacement for version 1.3 or 1.4 of the NCSA server. It fixes many bugs in the NCSA server, includes many frequently requested new features, and has an API which allows it to be extended to meet users' needs more easily.\n\nAutoconf (SrcCD) Autoconf produces shell scripts which automatically configure source code packages. These scripts adapt the packages to many kinds of Unix-like systems without manual user intervention. Autoconf creates a script for a package from a template file which lists the operating system features which the package can use, in the form of m4 macro calls. Autoconf requires GNU m4 to operate, but the resulting configure scripts it generates do not.\n\nAutomake (SrcCD) Automake is a tool for generating `Makefile.in's for use with Autoconf. The generated makefiles are compliant with GNU Makefile standards.\n\nBASH (SrcCD) GNU's shell, BASH (Bourne Again SHell), is compatible with the Unix sh and offers many extensions found in csh and ksh. BASH has job control, csh-style command history, command-line editing (with Emacs and vi modes built-in), and the ability to rebind keys via the readline library. BASH conforms to the POSIX 1003.2-1992 standard.\n\nbc (SrcCD) bc is an interactive algebraic language with arbitrary precision numbers. GNU bc follows the POSIX 1003.2-1992 standard with several extensions, including multi-character variable names, an else statement, and full Boolean expressions. The RPN calculator dc is now distributed as part of the same package, but GNU bc is not implemented as a dc preprocessor.\n\nBFD (BinCD, SrcCD) The Binary File Descriptor library allows a program which operates on object files (e.g., ld or GDB) to support many different formats in a clean way. BFD provides a portable interface, so that only BFD needs to know the details of a particular format. One result is that all programs using BFD will support formats such as a.out, COFF, and ELF. BFD comes with Texinfo source for a manual (not yet published on paper).\n\nAt present, BFD is not distributed separately; it is included with packages that use it.\n\nBinutils (BinCD, SrcCD) Binutils includes these programs: ar, c++filt, demangle, gas, gprof, ld, nlmconv, nm, objcopy, objdump, ranlib, size, strings, & strip. Binutils version 2 uses the BFD library. The GNU assembler, gas, supports the a29k, Alpha, H8/300, H8/500, HP-PA, i386, i960, m68k, m88k, MIPS, NS32K, SH, SPARC, Tahoe, Vax, and Z8000 CPUs, and attempts to be compatible with many other assemblers for Unix and embedded systems. It can produce mixed C and assembly listings, and includes a macro facility similar to that in some other assemblers. GNU's linker, ld, emits source-line numbered error messages for multiply-defined symbols and undefined references, and interprets a superset of AT&T's Linker Command Language, which gives control over where segments are placed in memory. nlmconv converts object files into Novell NetWare Loadable Modules. objdump can disassemble code for most of the CPUs listed above, and can display other data (e.g., symbols and relocations) from any file format read by BFD.\n\nBison (BinCD, SrcCD) [FSFman, FSFrc] Bison is an upwardly compatible replacement for the parser generator yacc. Texinfo source for the Bison Manual and reference card are included; see section GNU Documentation.\n\nA recent policy change allows non-free programs to use Bison-generated parsers.\n\nC Library See section Forthcoming GNUs (BinCD, SrcCD) [FSFman] The GNU C library supports ANSI C-1989, POSIX 1003.1-1990 and most of the functions in POSIX 1003.2-1992. It is upwardly compatible with 4.4BSD and includes many System V functions, plus GNU extensions. When used with the GNU Hurd, the C Library performs many functions of the Unix system calls directly. Mike Haertel has written a fast malloc which wastes less memory than the old GNU version. The GNU regular-expression functions (regex and rx) now nearly conform to the POSIX 1003.2 standard. GNU stdio lets you define new kinds of streams, just by writing a few C functions. The fmemopen function uses this to open a stream on a string, which can grow as necessary. You can define your own printf formats to use a C function you have written. For example, you can safely use format strings from user input to implement a printf-like function for another programming language. Extended getopt functions are already used to parse options, including long options, in many GNU utilities. Texinfo source for the GNU C Library Reference Manual is included (see section GNU Documentation). It runs on Sun-3 (SunOS 4.1), Sun-4 (SunOS 4.1 or Solaris 2), HP 9000/300 (4.3BSD), SONY News 800 (NewsOS 3 or 4), MIPS DECstation (Ultrix 4), DEC Alpha (OSF/1), i386/i486/Pentium (GNU/Hurd, GNU/Linux, System V, SVR4, BSD, SCO 3.2, & SCO ODT 2.0), Sequent Symmetry i386 (Dynix 3), & SGI (Irix 4).\n\nC++ Library (BinCD, SrcCD) The GNU C++ library (libg++) contains an extensive collection of container and utility classes, including Obstacks, multiple-precision Integers and Rationals, Complex numbers, BitSets, and BitStrings.\n\nThe distribution also includes the libstdc++ library. This implements library facilities defined by the forthcoming ANSI/ISO C++ standard, including strings, the iostream library, and a port of the Standard Template Library.\n\nCalc (SrcCD) [FSFman, FSFrc] Calc (written by Dave Gillespie in Emacs Lisp) is an extensible, advanced desk calculator & mathematical tool that runs as part of GNU Emacs. You can use Calc as a simple four-function calculator, but it has many more features including: choice of algebraic or RPN (stack-based) entry; logarithmic, trigonometric, & financial functions; arbitrary precision; complex numbers; vectors; matrices; dates; times; infinities; sets; algebraic simplification; & differentiation & integration. It outputs to gnuplot, & comes with source for a manual & reference card (see section GNU Documentation).\n\ncfengine (SrcCD) cfengine is used to maintain site-wide configuration of a heterogeneous Unix network using a simple high level language. Its appearance is similar to rdist, but allows many more operations to be performed automatically. See Mark Burgess, \"A Site Configuration Engine\", Computing Systems, Vol. 8, No. 3 (ask office@usenix.org how to get a copy).\n\nChess (SrcCD)\n\nGNU Chess lets most modern computers play a full game of chess. It has a plain terminal interface, a curses interface, & xboard's spiffy X Window interface.\n\nRecent improvements include fixes to the game analyzer, book, & hash table; smartening up draw & mate; improved thinking on opponent's time; Autoconf installation; a makefile for Windows NT compilation; forward pruning; unlimited quiescence captures; improved evaluation; improved null & time control logic; & repetition-detection.\n\nStuart Cracraft started GNU Chess. Improvements & rewrites are from John Stanback, Cha Kong Sian, Mike McGann, et al.\n\nSend bugs to bug-gnu-chess@prep.ai.mit.edu & general comments to info-gnu-chess@prep.ai.mit.edu.\n\nCLISP (SrcCD) CLISP is a Common Lisp implementation by Bruno Haible and Michael Stoll. It mostly supports the Lisp described by Common LISP: The Language (2nd edition) and the ANSI Common Lisp standard. CLISP includes an interpreter, a byte-compiler, a large subset of CLOS, a foreign language interface, and, for some machines, a screen editor. The user interface language (English, German, French) can be chosen at run time. Major packages that run in CLISP include CLX & Garnet. CLISP needs only 2 MB of memory & runs on many microcomputers (including MS-DOS systems, OS/2, Windows NT, Amiga 500--4000, and Acorn RISC PC) & Unix-like systems (GNU/Linux, Sun4, SVR4, SGI, HP-UX, DEC Alpha, NeXTStep, & others).\n\nCommon Lisp Also see section Forthcoming GNUs (SrcCD)\n\nGNU Common Lisp (GCL, formerly known as Kyoto Common Lisp) is a compiler & interpreter for Common Lisp. GCL is very portable & extremely efficient on a wide class of applications, & compares favorably in performance with commercial Lisps on several large theorem--prover & symbolic algebra systems. GCL supports the CLtL1 specification but is moving towards the proposed ANSI standard.\n\nGCL compiles to C & then uses the native optimizing C compiler (e.g., GCC). A function with a fixed number of args & one value turns into a C function of the same number of args, returning one value--so GCL is maximally efficient on such calls. Its conservative garbage collector gives great freedom to the C compiler to put Lisp values in registers. It has a source level Lisp debugger for interpreted code & displays source code in an Emacs window. Its profiler (based on the C profiling tools) counts function calls & the time spent in each function.\n\nThere is now a built-in interface to the Tk widget system. It runs in a separate process, so users may monitor progress on Lisp computations or interact with running computations via a windowing interface.\n\nThere is also an Xlib interface via C (xgcl-2). CLX runs with GCL, as does PCL (see \"PCL\" later in this article).\n\nGCL version 2.2 is released under the GNU Library General Public License.\n\nCLX (SrcCD) CLX is an X Window interface library for GCL. This is separate from the built-in TK interface.\n\ncpio (SrcCD) cpio is an archive program with all the features of SVR4 cpio, including support for the final POSIX 1003.1 ustar standard. mt, a program to position magnetic tapes, is included with cpio.\n\nCVS (SrcCD) CVS is a version control system (like RCS or SCCS) which allows you to keep old versions of files (usually source code), keep a log of who, when, and why changes occurred, etc. It handles multiple developers, multiple directories, triggers to enable/log/control various operations, and can work over a wide area network. It does not handle build management or bug-tracking; these are handled by make and GNATS, respectively.\n\nDejaGnu (SrcCD)\n\nDejaGnu is a framework to test programs with a single front end for all tests. DejaGnu's flexibility & consistency makes it easy to write tests.\n\nDejaGnu comes with expect, which runs scripts to conduct dialogs with programs.\n\nDiffutils (SrcCD) GNU diff compares files showing line-by-line changes in several flexible formats. It is much faster than traditional Unix versions. The Diffutils package contains diff, diff3, sdiff, & cmp. Recent improvements include more consistent handling of character sets and a new diff option to do all input/output in binary; this is useful on some non-POSIX hosts. Plans for the Diffutils package include support for internationalization (e.g., error messages in Chinese) and for some non-Unix PC environments.\n\nDJGPP (BinCD)\n\nDJ Delorie has ported GCC/G++ (see \"GCC\" in this article) to i386s running MS-DOS. DJGPP has a 32-bit i386 DOS extender with a symbolic debugger, development libraries, & ports of Bison, flex, & Binutils. Full source code is provided. It needs at least 5MB of hard disk space to install & 512K of RAM to use. It supports SVGA (up to 1024x768), XMS & VDISK memory allocation, himem.sys, VCPI (e.g., QEMM, DESQview, & 386MAX), & DPMI (e.g., Windows 3.x, OS/2, QEMM, & QDPMI). DJGPP Version 2 was released in Feb 1996, & needs a DPMI environment; a free DPMI server is included.\n\nFTP from `ftp.simtel.net' in `/pub/simtelnet/gnu/djgpp/' (or another SimTel mirror site).\n\nAsk listserv@delorie.com, to join a DJGPP users mailing list.\n\ndld (SrcCD) dld is a dynamic linker written by W. Wilson Ho. Linking your program with the dld library allows you to dynamically load object files into the running binary. dld supports a.out object types on the following platforms: Convex C-Series (BSD), i386/i486/Pentium (Linux), Sequent Symmetry i386 (Dynix 3), Sun-3 (SunOS 3 & 4), Sun-4 (SunOS 4), & VAX (Ultrix).\n\ndoschk (SrcCD) This program is a utility to help software developers ensure that their source file names are distinguishable on System V platforms with 14-character filenames and on MS-DOS systems with 8+3 character filenames.\n\necc (SrcCD) ecc is a Reed-Solomon error correction checking library and sample program, which can correct three byte errors in a block of 255 bytes and detect more severe errors. Contact fclim@acm.org for more information.\n\ned (SrcCD) ed is the standard text editor. It is line-oriented and can be used interactively or in scripts.\n\nElib (SrcCD) Elib is a small library of Emacs Lisp functions, including routines for using AVL trees and doubly-linked lists.\n\nElisp archive (SrcCD) This is a snapshot of Ohio State's GNU Emacs Lisp FTP Archive. FTP it from archive.cis.ohio-state.edu in `/pub/gnu/emacs/elisp-archive'.\n\nEmacs Also see section Forthcoming GNUs [FSFman(s), FSFrc] In 1975, Richard Stallman developed the first Emacs, an extensible, customizable real-time display editor & computing environment. GNU Emacs is his second implementation. It offers true Lisp--smoothly integrated into the editor--for writing extensions & provides an interface to the X Window System. It runs on Unix, MS-DOS, & Windows NT or 95. In addition to its powerful native command set, Emacs can emulate the editors vi & EDT (Digital's VMS editor). Emacs has many other features which make it a full computing support environment. Source for the GNU Emacs Manual & a reference card comes with the software. Sources for the GNU Emacs Lisp Reference Manual, & Programming in Emacs Lisp: An Introduction are distributed in separate packages. See section GNU Documentation.\n\nEmacs 19 (SrcCD) [FSFman(s), FSFrc] Emacs 19 works with character-only terminals & with the X Window System (with or without an X toolkit). New Emacs 19 features include: multiple X windows (\"frames\" to Emacs), with a separate X window for the minibuffer or a minibuffer attached to each X window; use of the X toolkit; interfacing with the X resource manager; property lists associated with regions of text in a buffer; multiple fonts & colors defined by those properties; simplified/improved processing of function keys, mouse movement & clicks; X selection processing, including clipboard selections; hooks to be run if the point or mouse moves outside a certain range; menu bars & popup menus defined by keymaps; scrollbars; before- & after-change hooks; a source-level debugger for Emacs Lisp programs; floating point numbers; improved buffer allocation, including returning storage to the system when a buffer is killed; many updated libraries; Autoconf-based configuration; support for version control systems (CVS, RCS, & SCCS); & European character sets. Recent features include the ability to open frames on more than one X display from a single Emacs job, operation under MS-DOS, MS Windows, and Windows NT, displaying multiple views of an outline at the same time, Lisp-level timers for real time and idle time, version control support for CVS and for multiple branches, text properties for formatting text, commands to edit text properties and save them in files, and GNU-standard long-named command line options. Also see section Forthcoming GNUs. Emacs 19.32 works on: Acorn RISC (RISCiX); Alliant FX/2800 (BSD); Alpha (OSF/1 or GNU/Linux); Apollo (DomainOS); Bull DPX/2 2nn & 3nn (SysV.3) & sps7 (SysV.2); Clipper; Convex (BSD); Cubix QBx (SysV); Data General Aviion (DGUX); DEC MIPS (Ultrix 4.2, OSF/1, not VMS); Elxsi 6400 (SysV); Gould Power Node & NP1 (4.2 & 4.3BSD); Harris Night Hawk 1200, 3000, 4000 & 5000 (cxux); Harris Night Hawk Power PC (powerunix); Honeywell XPS100 (SysV); HP 9000 series 200, 300, 700, 800 (but not 500) (4.3BSD; HP-UX 7, 8, 9; NextStep); Intel i386/i486/Pentium (GNU/Hurd, GNU/Linux, 386BSD, AIX, BSDI/386, FreeBSD, Esix, ISC, MS-DOS, NetBSD, SCO3.2v4, Solaris, SysV, Xenix, WindowsNT, Windows95); IBM RS/6000 (AIX 3.2) & RT/PC (AIX, BSD); Motorola Delta 147 & 187 (SysV.3, SysV.4, m88kbcs); National Semiconductor 32K (Genix); NeXT (BSD, Mach 2 w/ NeXTStep 3.0); Paragon (OSF/1); Prime EXL (SysV); Pyramid (BSD); Sequent Symmetry (BSD, ptx); Siemens RM400 & RM600 (SysV); SGI Iris 4D (Irix 4.x & 5.x); Sony News/RISC (NewsOS); Stardent i860 (SysV); Sun 3 & 4, SPARC 1, 1+, 2, 10, Classic (SunOS 4.0, 4.1, Solaris 2.0--2.3); Tadpole 68k (SysV); Tektronix XD88 (SysV.3) & 4300 (BSD); & Titan P2 & P3 (SysV).\n\nEmacs 18 (SrcCD) [FSFrc] Emacs 18 is several years old. We no longer maintain it, but still distribute it for those using platforms which Emacs 19 does not support: Alliant FX/80, Altos 3068, Amdahl (UTS), AT&T (3Bs & 7300 PC), CCI 5/32 & 6/32, Celerity, Digital (VAX VMS), Dual, Encore (APC, DPC, & XPC), HLH Orion (original & 1/05), ISI (Optimum V, 80386), Masscomp, NCR Tower 32 (SVR2 & SVR3), Nixdorf Targon 31, Nu (TI & LMI), pfa50, Plexus, Prime EXL, Stride (system rel. 2), Tahoe, Tandem Integrity S2, Tektronix 16000, Triton 88, Ustation E30 (SS5E), Whitechapel (MG1), & Wicat.\n\nes (SrcCD) es is an extensible shell (based on rc) with first-class functions, lexical scope, exceptions, and rich return values (i.e., functions can return values other than just numbers). es's extensibility comes from the ability to modify and extend the shell's built-in services, such as path searching and redirection. Like rc, it is great for both interactive use and scripting, particularly since its quoting rules are much less baroque than the C and Bourne shells.\n\nenscript (SrcCD) enscript is an upwardly-compatible replacement for the Adobe enscript program. It formats ASCII files (outputting in Postscript) and stores generated output to a file or sends it directly to the printer.\n\nExim (SrcCD) Exim is a new, somewhat experimental mail transfer agent, patterned after some of the lessons learned during the development of Smail. Exim can handle relatively high volume mail systems, caching of mail delivery, header rewriting, multiple local domains from one mail system, and control over which hosts/nets may use it as a relay.\n\nf2c (SrcCD) f2c converts Fortran-77 source into C or C++, which can be compiled with GCC or G++. Get bug fixes by FTP from site netlib.bell-labs.com or by email from netlib@netlib.bell-labs.com. For a summary, see the file `/netlib/f2c/readme.Z'. Also see the Fortran items later in this article, and in section Forthcoming GNUs.\n\nffcall (SrcCD) ffcall is a C library for implementing foreign function calls in embedded interpreters by Bill Triggs and Bruno Haible. It allows C functions with arbitrary argument lists and return types to be called or emulated (callbacks).\n\nFileutils (SrcCD) The Fileutils are: chgrp, chmod, chown, cp, dd, df, dir, dircolors, du, install, ln, ls, mkdir, mkfifo, mknod, mv, rm, rmdir, sync, touch, & vdir.\n\nFindutils (SrcCD) find is frequently used both interactively and in shell scripts to find files which match certain criteria and perform arbitrary operations on them. Also included are locate, which scans a database for file names that match a pattern, and xargs, which applies a command to a list of files.\n\nFinger (SrcCD) GNU Finger has more features than other finger programs. For sites with many hosts, a single host may be designated as the finger server host and other hosts at that site configured as finger clients. The server host collects information about who is logged in on the clients. To finger a user at a GNU Finger site, a query to any of its client hosts gets useful information. GNU Finger supports many customization features, including user output filters and site-programmable output for special target names.\n\nflex (BinCD, SrcCD) [FSFman, FSFrc] flex is a replacement for the lex scanner generator. flex was written by Vern Paxson of the Lawrence Berkeley Laboratory and generates far more efficient scanners than lex does. Sources for the Flex Manual and reference card are included (see section GNU Documentation).\n\nFortran (g77) Also see section Forthcoming GNUs (SrcCD) GNU Fortran (g77), developed by Craig Burley, is available for public beta testing on the Internet. For now, g77 produces code that is mostly object-compatible with f2c & uses the same run-time library (libf2c).\n\nFontutils (SrcCD) The Fontutils convert between font formats, create fonts for use with Ghostscript or TeX (starting with a scanned type image & converting the bitmaps to outlines), etc. It includes: bpltobzr, bzrto, charspace, fontconvert, gsrenderfont, imageto, imgrotate, limn, & xbfe.\n\nGAWK (SrcCD) [FSFman] GAWK is upwardly compatible with the latest POSIX specification of awk. It also provides several useful extensions not found in other awk implementations. Texinfo source for the The GNU Awk User's Guide comes with the software (see section GNU Documentation).\n\ngcal (SrcCD) gcal is a program for printing calendars. It displays different styled calendar sheets, eternal holiday lists, and fixed date warning lists.\n\nGCC Also see section Forthcoming GNUs (BinCD, SrcCD) [FSFman] Version 2 of the GNU C Compiler supports the languages C, C++, and Objective-C; the source file name suffix or a compiler option selects the language. Objective-C support was donated by NeXT. The runtime support needed to run Objective-C programs is now distributed with GCC (this does not include any Objective-C classes aside from object, but see \"GNUstep\" in section Forthcoming GNUs). As much as possible, G++ is kept compatible with the evolving draft ANSI standard, but not with cfront (AT&T's compiler), which has been diverging from ANSI. GCC is a fairly portable optimizing compiler which performs automatic register allocation, common sub-expression elimination (CSE) (including a certain amount of CSE between basic blocks -- though not all the supported machine descriptions provide for scheduling or delay slots), invariant code motion from loops, induction variable optimizations, constant propagation, copy propagation, delayed popping of function call arguments, tail recursion elimination, integration of inline functions & frame pointer elimination, instruction scheduling, loop unrolling, filling of delay slots, leaf function optimization, optimized multiplication by constants, the ability to assign attributes to instructions, & many local optimizations automatically deduced from the machine description. GCC can open-code most arithmetic on 64-bit values (type long long int). It supports extended floating point (type long double) on the 68k; other machines will follow. GCC supports full ANSI C, traditional C, & GNU C extensions (including: nested functions support, nonlocal gotos, & taking the address of a label). GCC can generate a.out, COFF, ELF, & OSF-Rose files when used with a suitable assembler. It can produce debugging information in these formats: BSD stabs, COFF, ECOFF, ECOFF with stabs, & DWARF. GCC generates code for many CPUs, including the a29k, Alpha, ARM, AT&T, DSP1610, Clipper, Convex cN, Elxsi, Fujitsu Gmicro, i370, i860, i960, MIL-STD-1750a, MIPS, ns32k, PDP-11, Pyramid, ROMP, RS/6000, SH, SPUR, Tahoe, VAX, & we32k. Position-independent code is generated for the Clipper, Hitachi H8/300, HP--PA (1.0 & 1.1), i386/i486/Pentium, m68k, m88k, SPARC, & SPARClite. Operating systems supported include: GNU/Hurd, GNU/Linux, ACIS, AIX, AOS, BSD, Clix, Concentrix, Ctix, DG/UX, Dynix, FreeBSD, Genix, HP-UX, Irix, ISC, Luna, LynxOS, Minix, NetBSD, NewsOS, NeXTStep, OS/2, OSF, OSF-Rose, RISCOS, SCO, Solaris 2, SunOS 4, System/370, SysV, Ultrix, Unos, VMS, & Windows/NT. Using the configuration scheme for GCC, building a cross-compiler is as easy as building a native compiler. Version 1 of GCC, G++, & libg++ are no longer maintained. Texinfo source for the Using and Porting GNU CC manual is included with GCC (see section GNU Documentation).\n\nGDB (BinCD, SrcCD) [FSFman, FSFrc] GDB, the GNU DeBugger, is a source-level debugger for C, C++, and Fortran. GDB can debug both C and C++ programs, and will work with executables produced by many different compilers; however, C++ debugging will have some limitations if you do not use GCC. GDB has a command line user interface, and Emacs has GDB mode as an interface. Two X interfaces (not distributed or maintained by the FSF) are: gdbtk (FTP it from ftp.cygnus.com in directory `/pub/gdb'); and xxgdb (FTP it from ftp.x.org in directory `/contrib/utilities'). Executable files and symbol tables are read via the BFD library, which allows a single copy of GDB to debug programs with multiple object file formats (e.g., a.out, COFF, ELF). Other features include a rich command language, remote debugging over serial lines or TCP/IP, and watchpoints (breakpoints triggered when the value of an expression changes). GDB uses a standard remote interface to a simulator library which (so far) has simulators for the ARM, Hitachi H8/300, Hitachi H8/500, Hitachi Super-H, PowerPC, WDC 65816, & Zilog Z8001/2. GDB can perform cross-debugging. To say that GDB targets a platform means it can perform native or cross-debugging for it. To say that GDB can host a given platform means that it can be built on it, but cannot necessarily debug native programs.\n\nGDB can:\n\ntarget & host: Amiga 3000 (Amix, NetBSD), DEC Alpha (OSF/1), DECstation 3100 & 5000 (Ultrix), HP 9000/300 (BSD, HP-UX), HP 9000/700 (HP-UX 9, 10), i386 (GNU/Hurd, GNU/Linux, BSD, FreeBSD, LynxOS, NetBSD, SCO, Windows NT), IBM RS/6000 (AIX 3.x, AIX 4.x, LynxOS), Motorola Delta m88k (System V, CX/UX), PC532 (NetBSD), Motorola m68k MVME-167 (LynxOS), NCR 3000 (SVR4), PowerPC (AIX 4.x, MacOS, Windows NT), SGI (Irix V3, V4, V5), SONY News (NewsOS 3.x), SPARC (LynxOS, NetBSD, Solaris 2.x, & SunOS 4.1 ) Sun-3 (SunOS 4.1), & Ultracomputer (a29k running Sym1).\n\ntarget, but not host: AMD 29000 (COFF & a.out), ARM (RDP), Hitachi H8/300, Hitachi SH (CMON, SH3, E7000), HP PA Pro (Winbond, Oki), i386 (a.out, COFF, OS/9000), i960 (MON960, Nindy, VxWorks), m68k/m68332 (a.out, COFF, CPU32BUG, EST, ROM68K, VxWorks), MIPS (ELF, IDT ecoff, PMON, VxWorks), PowerPC (PPCBug), Matra Sparclet, Fujitsu SPARClite (a.out, COFF), WDC 65816, & Z8000.\n\nhost, but not target: IBM RT/PC (AIX), HP/Apollo 68k (BSD), & m68k Apple Macintosh (MacOS).\n\nSources for the manual, Debugging with GDB, and a reference card are included (see section GNU Documentation).\n\ngdbm (SrcCD) gdbm is the GNU replacement for the traditional dbm and ndbm libraries. It implements a database using quick lookup by hashing. gdbm does not ordinarily make sparse files (unlike its Unix and BSD counterparts).\n\ngettext Also see section Help the GNU Translation Project (SrcCD) The GNU gettext tool set has everything maintainers need to internationalize a package's user messages. Once a package has been internationalized, gettext's many tools help translators localize messages to their native language and automate handling the translation files.\n\nGeneric NQS (SrcCD) Generic NQS is a network queuing system for spreading batch jobs across a network of machines. It is designed to be simple to install on a heterogeneous network of machines, and has optimizations for running on the high end, symmetric multiprocessing servers that are currently on the market. It inter-operates with other NQS systems, including Cray's NQE.\n\ngeomview (SrcCD) geomview is an interactive geometry viewing program. It allows multiple independently controllable objects and cameras. geomview provides interactive control for motion, appearances (including lighting, shading, and materials), picking on an object, edge or vertex level, and snapshots in SGI image file or Renderman RIB format. Adding or deleting objects is provided through direct mouse manipulation, control panels, and keyboard shortcuts. External programs can drive desired aspects of the viewer (such as continually loading changing geometry or controlling the motion of certain objects) while allowing interactive control of everything else.\n\nGhostscript Also see section Forthcoming GNUs (SrcCD) Ghostscript is an interpreter for the Postscript and PDF graphics languages.\n\nThe current version of GNU Ghostscript is 3.33. This version includes nearly a full Postscript Level 2 interpreter and also a PDF 1.0 interpreter. Significant new features include: support for anti-aliased characters; the ability to scan a directory and register all the fonts in it; support for Type 0 (Japanese / Chinese / Korean) fonts; and the ability to compile all the external initialization files into the executable. This version can also run as a 32-bit MS Windows application. Thanks to the generosity of URW++ (Hamburg, Germany), the low-quality bitmap-derived fonts distributed with older versions have been replaced with commercial-quality, hinted outline fonts. See section GNUs Flashes. Ghostscript executes commands in the Postscript language by writing directly to a printer, drawing on an X window, or writing to files for printing later or manipulating with other graphics programs.\n\nGhostscript includes a C-callable graphics library (for client programs that do not want to deal with the Postscript language). It also supports i386/i486/Pentiums running DOS with EGA, VGA or SuperVGA graphics (but please do not ask the FSF staff any questions about this; we do not use DOS).\n\nGhostview (SrcCD) Tim Theisen, ghostview@cs.wisc.edu, created Ghostview, a previewer for multi-page files with an X Window interface. Ghostview & Ghostscript work together; Ghostview creates a viewing window & Ghostscript draws in it.\n\nGIT (SrcCD) The GNU Interactive Tools package includes: an extensible file system browser, an ASCII/hex file viewer, a process viewer/killer, & other related utilities & shell scripts. It can be used to increase the speed & efficiency of many daily tasks, such as copying & moving files & directories, invoking editors, compressing/uncompressing files, creating & expanding archives, compiling programs, sending mail, etc. It looks nice, has colors (if the standard ANSI color sequences are supported), & is user-friendly.\n\ngmp (SrcCD) GNU mp is a library for arithmetic on arbitrary precision integers, rational numbers, and floating-point numbers. It has a rich set of functions with a regular interface.\n\nA major new release, version 2.0, is now out. Compared to previous versions, it is much faster, & contains lots of new functions. The main new feature is support for arbitrary precision floating-point numbers.\n\nGnans (SrcCD) Gnans is a program (and language) for the numerical study of deterministic and stochastic dynamical systems. The dynamical systems may evolve in continuous or discrete time. Gnans has graphical & command line interfaces.\n\nGNAT: The GNU Ada Translator (SrcCD) A front end for much of Ada 95 (GNAT: The GNU Ada Translator) is available via anonymous FTP from cs.nyu.edu in `/pub/gnat'. SGI and Digital have chosen GNU Ada as the Ada compiler for certain systems. News about GNAT is posted to the USENET newsgroup comp.lang.ada.\n\nGNATS (SrcCD) GNATS (GNats: A Tracking System, not to be confused with GNAT, The GNU Ada Translator) is a bug-tracking system. It is based upon the paradigm of a central site or organization which receives problem reports and negotiates their resolution by electronic mail. Although it has been used primarily as a software bug-tracking system so far, it is sufficiently generalized that it could be used for handling system administration issues, project management, or any number of other applications.\n\nGNUMATH (gnussl) (SrcCD) GNUMATH is a library (gnussl) designed to simplify scientific programming. Its focus is on problems that can be solved by a straight-forward application of numerical, linear algebra. It also handles plotting. GNUMATH is in beta release; it is expected to grow more versatile and offer a wider scope in time.\n\ngnuplot (SrcCD) gnuplot is an interactive program for plotting mathematical expressions and data. It plots both curves (2 dimensions) & surfaces (3 dimensions). It was neither written nor named for the GNU Project; the name is a coincidence. Various GNU programs use gnuplot.\n\ngnuserv (SrcCD) gnuserv is an enhanced version of Emacs' emacsclient program. It lets the user direct a running Emacs to edit files or evaluate arbitrary Emacs Lisp constructs from another process.\n\nGnuGo (SrcCD) GnuGo plays the game of Go (Wei-Chi); version 1.2 was released with minor changes for portability, but it is not yet very sophisticated.\n\ngperf (SrcCD) gperf generates perfect hash tables. The C version is in package cperf. The C++ version is in libg++. Both produce hash functions in either C or C++.\n\nGraphics (SrcCD) GNU Graphics produces x-y plots from ASCII or binary data. It outputs in Postscript, Tektronix 4010 compatible, and Unix device-independent \"plot\" formats. It has a previewer for the X Window System. Features include a spline interpolation program; examples of shell scripts using graph and plot; a statistics toolkit; and output in TekniCAD TDA and ln03 file formats. Email bugs or queries to Rich Murphey, Rich@lamprey.utmb.edu.\n\ngrep (SrcCD) This package has GNU grep, egrep, and fgrep, which find lines that match entered patterns. They are much faster than the traditional Unix versions.\n\nGroff (SrcCD) Groff is a document formatting system based on a device-independent version of troff, & includes: eqn, nroff, pic, refer, tbl, troff; the man, ms, & mm macros; & drivers for Postscript, TeX dvi format, the LaserJet 4 series of printers, and typewriter-like devices. Groff's mm macro package is almost compatible with the DWB mm macros with several extensions. Also included is a modified version of the Berkeley me macros and an enhanced version of the X11 xditview previewer. Written in C++, these programs can be compiled with GNU C++ Version 2.7.2 or later. Groff users are encouraged to contribute enhancements. Most needed are complete Texinfo documentation, a grap emulation (a pic preprocessor for typesetting graphs), a page-makeup postprocessor similar to pm (see Computing Systems, Vol. 2, No. 2; ask office@usenix.org how to get a copy), and an ASCII output class for pic to integrate pic with Texinfo. Questions and bug reports from users who have read the documentation provided with Groff can be sent to bug-groff@prep.ai.mit.edu.\n\ngzip (SrcCD) gzip can expand LZW-compressed files but uses another, unpatented algorithm for compression which generally produces better results. It also expands files compressed with System V's pack program.\n\nhello (SrcCD) The GNU hello program produces a familiar, friendly greeting. It allows non-programmers to use a classic computer science tool which would otherwise be unavailable to them. Because it is protected by the GNU General Public License, users are free to share and change it. hello is also a good example of a program that meets the GNU coding standards. Like any truly useful program, hello contains a built-in mail reader.\n\nhp2xx (SrcCD) GNU hp2xx reads HP-GL files, decomposes all drawing commands into elementary vectors, and converts them into a variety of vector and raster output formats. It is also an HP-GL previewer. Currently supported vector formats include encapsulated Postscript, Uniplex RGIP, Metafont, various special TeX-related formats, and simplified HP-GL (line drawing only) for imports. Raster formats supported include IMG, PBM, PCX, & HP-PCL (including Deskjet & DJ5xxC support). Previewers work under X11 (Unix), OS/2 (PM & full screen), & MS-DOS (SVGA, VGA, & HGC).\n\nHylaFAX (SrcCD)\n\nHylaFAX (once named FlexFAX) is a facsimile system for Unix systems. It supports sending, receiving, & polled retrieval of facsimile, as well as transparent shared data use of the modem.\n\nDetails are available on the World Wide Web at: `http://www.vix.com/hylafax/'.\n\nHyperbole (SrcCD) Hyperbole, written by Bob Weiner in Emacs Lisp, is an open, efficient, programmable information management & hypertext system, intended for everyday work on any platform supported by Emacs.\n\nID Utils (SrcCD) ID Utils is a package of simple, fast, high-capacity, language-independent identifier database tools. Actually, the term \"identifier\" is too limiting -- ID Utils stores tokens, be they program identifiers of any form, literal numbers, or words of human-readable text. Database queries can be issued from the command-line, or from within Emacs, serving as an augmented tags facility.\n\nindent (SrcCD)\n\nGNU indent formats C source code into the GNU indentation style. It also has options to output BSD, K&R, or your own special style. GNU indent is more robust & provides more functionality than other such programs, including handling C++ comments. It runs on a number of systems, including DOS & VMS.\n\nThe next version will also format C++ source code.\n\nInetutils (SrcCD) Inetutils is an interim distribution of common networking utilities and servers. This release is intended mainly to support the GNU Hurd, which is source compatible with BSD in many ways, and will probably only work on systems that are similarly compatible.\n\nIspell (SrcCD) Ispell is an interactive spell checker that suggests \"near misses\" to replace unrecognized words. System & user-maintained dictionaries for multiple languages can be used. Standalone & Emacs interfaces are available.\n\nJACAL Not available from the FSF except by FTP\n\nJACAL is a symbolic mathematics system for the manipulation and simplification of algebraic equations and expressions. It is written in Scheme using the SLIB portable Scheme Library. JACAL comes with SCM, an IEEE P1178 & R4RS compliant Scheme implementation written in C. SCM runs on Amiga, Atari-ST, MS-DOS, OS/2, NOS/VE, Unicos, VMS, Unix, & similar systems. New in JACAL is multivariate factoring from Michael Thomas (mjt@octavia.anu.edu.au). See JACAL's documentation at `http://www-swiss.ai.mit.edu/~jaffer/JACAL.html'.\n\nThe FSF is not distributing JACAL on any physical media. You can FTP it or get it from the Web site listed above.\n\nKarma (SrcCD) Karma is a signal and image processing library that provides interprocess communications, authentication, graphics display, and user interface to and manipulation of the Karma network data structure. Several foreign data formats are also supported. Karma comes packaged with a number of standard tools, including a general-purpose image/movie display tool and a volume rendering tool.\n\nless (SrcCD) less is a display paginator similar to more and pg, but with various features (such as the ability to scroll backwards) that most pagers lack.\n\nLynx (SrcCD) Lynx is a text-based World Wide Web browser for people running under \"dumb\" character-only terminals. For more information about Lynx, consult the URL `http://www.ukans.edu/'.\n\nm4 (SrcCD) GNU m4 is an implementation of the traditional Unix macro processor. It is mostly SVR4 compatible, although it has some extensions (e.g., handling more than 9 positional parameters to macros). m4 also has built-in functions for including files, running shell commands, doing arithmetic, etc.\n\nmake See section Forthcoming GNUs (BinCD, SrcCD) [FSFman] GNU make supports POSIX 1003.2 and has all but a few obscure features of the BSD and System V versions of make, and runs on MS-DOS, AmigaDOS, VMS, & Windows NT or 95, as well as all Unix-compatible systems. GNU extensions include long options, parallel compilation, flexible implicit pattern rules, conditional execution, & powerful text manipulation functions. Source for the Make Manual comes with the program (see section GNU Documentation).\n\nMandelSpawn (SrcCD) A parallel Mandelbrot generation program for the X Window System.\n\nMaxima (SrcCD) Maxima is a Common Lisp implementation of MIT's Macsyma system for computer based algebra.\n\nMidnight Commander (mc) (SrcCD) The Midnight Commander is a user friendly & colorful Unix file manager & shell, useful to novice & guru alike. It has a built-in virtual file system that manipulates files inside tar files or files on remote machines using the FTP protocol. This mechanism is extendable with external Unix programs.\n\nMiscellaneous Files Distribution (SrcCD) The GNU Miscellaneous Files Distribution includes non-crucial files which have come to be common on various systems over the years, including word lists, airport codes, ZIP codes and more.\n\nmkisofs (SrcCD)\n\nmkisofs is a pre-mastering program to generate an ISO 9660 file system. It takes a snapshot of a directory tree, and makes a binary image which corresponds to an ISO 9660 file system when written to a block device.\n\nIt can also generate the System Use Sharing Protocol records of the Rock Ridge Interchange Protocol (used to further describe the files in an ISO 9660 file system to a Unix host; it provides information such as longer filenames, uid/gid, permissions, and device nodes). The mkisofs program is frequently used with cdwrite. cdwrite works by taking the image that mkisofs generates and driving a cdwriter to actually burn the disk. cdwrite works under Linux, and supports popular cdwriters. Older versions of cdwrite were included with older versions of mkisofs; check sunsite.unc.edu & get /pub/Linux/utils/disk-management/cdwrite-2.0.tar.gz for the latest version.\n\nmtools (SrcCD) mtools is a set of public domain programs to allow Unix systems to read, write, and manipulate files on an MS-DOS file system (usually a diskette).\n\nMULE (SrcCD) MULE is a MULtilingual Enhancement to GNU Emacs. MULE text buffers can contain a mix of characters from many languages including: Japanese, Chinese, Korean, Vietnamese, Thai, modern European languages (including Greek & Russian), Arabic, & Hebrew. MULE also provides input methods for all of them. MULE is being merged into GNU Emacs. See section GNU & Other Free Software in Japan, for more information about MULE.\n\nncurses (SrcCD) ncurses is an implementation of the Unix curses library for developing screen-based programs that are terminal independent.\n\nNetHack (SrcCD) NetHack is a Rogue-like adventure game supporting character & X displays.\n\nNIH Class Library (SrcCD) The NIH Class Library (once known as \"OOPS\", Object-Oriented Program Support) is a portable collection of C++ classes (similar to those in Smalltalk-80) written in C++ by Keith Gorlen of the National Institutes of Health (NIH).\n\nnvi (SrcCD) nvi is a freely redistributable implementation of the vi/ex Unix editor. It has almost all the functionality of the original vi/ex, except \"open\" mode & the lisp option. Enhancements include multiple buffers, command-line editing & path completion, integrated Perl5 & Tcl scripting languages, Cscope support & tag stacks, 8-bit data support, infinite file/line lengths, infinite undo, message catalogs, incremental search, and extended regular expressions. It uses Autoconf for configuration and runs on any Unix-like system.\n\nOaklisp (SrcCD) Oaklisp is a fast, portable, object-oriented Scheme with first class types.\n\nObjective-C Library See \"GNUstep\" in section Forthcoming GNUs (SrcCD) Our Objective-C Class Library (gstep-base.tar.gz, libgnustep-base) has general-purpose, non-graphical Objective-C objects written by Andrew McCallum & other volunteers. It includes collection classes for maintaining groups of objects, I/O streams, coders for formatting objects & C types to streams, ports for network packet transmission, distributed objects (remote object messaging), string classes, invocations, notifications, event loops, timers, exceptions, pseudo-random number generators, & time handling facilities. It has the base classes for the GNUstep project; over 80 of them have already been written. Send queries & bugs to mccallum@gnu.ai.mit.edu.\n\nOBST (SrcCD) OBST is a persistent object management system with bindings to C++. OBST supports incremental loading of methods. Its graphical tools require the X Window System. It features a hands-on tutorial including sample programs. It compiles with G++, and should install easily on most Unix platforms.\n\nOctave (SrcCD)\n\nOctave is a high-level language similar to MATLAB, primarily intended for numerical computations. It has a convenient command line interface for solving linear & nonlinear problems numerically. Octave does arithmetic for real and complex scalars and matrices, solves sets of nonlinear algebraic equations, integrates systems of ordinary differential & differential-algebraic equations, and integrates functions over finite & infinite intervals. Two- & three-dimensional plotting is available using gnuplot.\n\nSend queries & bugs to: bug-octave@bevo.che.wisc.edu.\n\nTexinfo source is included for a 220+ page Octave manual, not yet published by the FSF.\n\nOleo (SrcCD) Oleo is a spreadsheet program (better for you than the more expensive spreadsheets). It supports the X Window System and character-based terminals, and can output Embedded Postscript renditions of spreadsheets. Keybindings should be familiar to Emacs users and are configurable. Oleo supports multiple variable-width fonts when used under the X Window System or outputting to Postscript devices.\n\np2c (SrcCD) p2c is Dave Gillespie's Pascal-to-C translator. It inputs many dialects (HP, ISO, Turbo, VAX, etc.) & generates readable, maintainable, portable C.\n\npatch (SrcCD) patch is our version of Larry Wall's program to take diff's output and apply those differences to an original file to generate the modified version.\n\nPCL (SrcCD) PCL is a free implementation of a large subset of CLOS, the Common Lisp Object System. It runs under both GCL and CLISP, mentioned above.\n\nperl (SrcCD) Larry Wall's perl combines the features & capabilities of C, sed, awk, & sh, and provides interfaces to the Unix system calls & many C library routines.\n\npine Also see section Some Bad News about Pine (SrcCD) pine is a friendly menu-driven electronic mail manager and user interface .\n\nptx Also see section Forthcoming GNUs (SrcCD)\n\nGNU ptx is our version of the traditional permuted index generator. It handles multiple input files at once, has TeX compatible output, & outputs readable KWIC (KeyWords In Context) indexes without using nroff.\n\nIt does not yet handle input files that do not fit in memory all at once.\n\nrc (SrcCD) rc is a shell that features a C-like syntax (much more so than csh) and far cleaner quoting rules than the C or Bourne shells. It's intended to be used interactively, but is also great for writing scripts. It inspired the shell es.\n\nRCS (SrcCD) RCS, the Revision Control System, is used for version control & management of software projects. Used with GNU diff, RCS can handle binary files (8-bit data, executables, object files, etc). RCS now conforms to GNU configuration standards & to POSIX 1003.1b-1993. Also see the CVS item above.\n\nrecode Also see section Forthcoming GNUs (SrcCD) GNU recode converts files between character sets and usages. When exact transliterations are not possible, it may delete the offending characters or fall back on approximations. This program recognizes or outputs nearly 150 different character sets and is able to transliterate files between almost any pair. Most RFC 1345 character sets are supported.\n\nregex (SrcCD) The GNU regular expression library supports POSIX.2, except for internationalization features. It is included in many GNU programs which do regular expression matching & is available separately. An alternate regular expression package, rx, is faster than regex in most cases & will replace regex over time.\n\nrx (SrcCD) Tom Lord has written rx, a new regular expression library which is faster than the older GNU regex library. It is now being distributed with sed and tar. rx will be used in th"
    }
}