{
    "id": "correct_foundationPlace_00075_3",
    "rank": 71,
    "data": {
        "url": "https://www.databasejournal.com/mysql/open-source-databases-a-brief-look-at-the-berkeley-db-derby-firebird-ingres-mysql-and-postgresql-dbms/",
        "read_more_link": "",
        "language": "en",
        "title": "Open Source Databases: A brief look at the Berkeley DB, Derby, Firebird, Ingres, MySQL and PostgreSQL DBMS'",
        "top_image": "https://assets.databasejournal.com/uploads/2021/12/DBJ_logo_Favicon.png",
        "meta_img": "https://assets.databasejournal.com/uploads/2021/12/DBJ_logo_Favicon.png",
        "images": [
            "https://assets.databasejournal.com/uploads/2021/12/DBJ_logo_MobileLogo-copy-2.png",
            "https://assets.databasejournal.com/uploads/2021/12/DBJ_logo_MobileLogo-copy-2.png",
            "https://assets.databasejournal.com/uploads/2021/12/DBJ_logo_MainLogo-copy-2.png",
            "https://assets.databasejournal.com/uploads/2021/12/DBJ_logo_MainLogo-copy-2.png",
            "https://secure.gravatar.com/avatar/c48d83173991ad1da745e52d217ff34f?s=80&d=mm&r=g 2x",
            "https://secure.gravatar.com/avatar/c48d83173991ad1da745e52d217ff34f?s=40&d=mm&r=g",
            "https://secure.gravatar.com/avatar/c48d83173991ad1da745e52d217ff34f?s=234&d=mm&r=g 2x",
            "https://secure.gravatar.com/avatar/c48d83173991ad1da745e52d217ff34f?s=117&d=mm&r=g",
            "https://assets.databasejournal.com/uploads/2021/12/DBJ_logo_MainLogo-copy-4.png",
            "https://assets.databasejournal.com/uploads/2021/12/DBJ_logo_MainLogo-copy-4.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Ian Gilfillan"
        ],
        "publish_date": "2005-03-08T18:03:00+00:00",
        "summary": "",
        "meta_description": "Introduction This month I take a brief look at Open Source Database Management Systems. I do not aim to find the 'best' one, or perform an in-depth",
        "meta_lang": "en",
        "meta_favicon": "https://assets.databasejournal.com/uploads/2021/12/DBJ_logo_Favicon.png",
        "meta_site_name": "Database Journal",
        "canonical_link": "https://www.databasejournal.com/mysql/open-source-databases-a-brief-look-at-the-berkeley-db-derby-firebird-ingres-mysql-and-postgresql-dbms/",
        "text": "Introduction\n\nThis month I take a brief\n\nlook at Open Source Database Management Systems. I do not aim to find the\n\n‘best’ one, or perform an in-depth feature-by-feature analysis, but rather a\n\nintroduce you to the variety of solutions out there. I am presuming readers of\n\nmy columns by now already have an understanding of what Open Source is, and why\n\none would use it. If not, see the resources at the end of the article.\n\nSo which are the Open\n\nSource databases? Most readers have probably heard of MySQL. Its byline is The\n\nWorld’s most popular Open Source database after all. There is also\n\nPostgreSQL (The World’s Most Advanced Open Source Database), as well as\n\nFirebird (The Relational Database for the New Millenium). However, there\n\nare others too. BerkeleyDB, although not directly comparable, deserves a\n\nmention, while Computer Associates recently released Ingres, and IBM did the\n\nsame to Cloudscape (under the name Derby).\n\nSo, in brief then, let’s\n\ntake a brief look at each of these products.\n\nBerkeley DB\n\nUnlike most of the others\n\nlisted here, Berkeley DB is not a full DBMS, complete with graphical reporting\n\ntools and the like. It does not even contain a query-processing layer. Instead,\n\nit is a lightweight embedded relational storage engine, meant for applications\n\nthat do not require a separate DBMS installation. Users of MySQL have the\n\noption to use the Berkeley DB storage engine (in the early days it was the only\n\nway to ensure transactional capability).\n\nDerby\n\nIf Derby has to have a byline,\n\nperhaps it should be World’s Most Popular Embedded Java Database. That\n\nshould give you an idea of the focus of this niched product. IBM released the\n\ncommercial Cloudscape database as Derby under an Open Source license to the\n\nApache foundation, where it remains under consideration as an incubator\n\nproject, shortly after Computer Associates released Ingres. Cloudscape is a\n\nJava-oriented embedded database, meaning that the DBMS becomes part of the Java\n\napplication, has a very light footprint and is designed to run without the need\n\nfor a dedicated DBA. It does not aim to be ‘enterprise quality’, but rather to\n\nserve the needs of Java developers in particular.\n\nFirebird\n\nInprise (now Borland)\n\nwere one of the first commercial companies to release a database under an Open\n\nSource license when they did so with their Interbase product in early 2000. Interbase\n\n6 was released under a variant of the Mozilla license. Borland have since\n\nreleased version 6.5, 7, 7.1 and 7.5 of the commercial product, but Firebird\n\nhas continued to develop based on the Interbase 6.0 source code. Firebird has a\n\nsmall but active user base, and until recently, it was usually forgotten in the\n\nMySQL\n\nvs PostgreSQL debates. Firebird has always been more fully featured than\n\nMySQL, and has, unlike PostgreSQL, it has always worked well on Windows as well\n\nas Linux and other ‘Nix variants. Firebird was however slightly hamstrung by\n\nBorland upon its release, as they did not release all the elements, and the\n\nbuild scripts did not even work! One important lack was a replication engine\n\n(though Firebird does have a shadowing feature, which keeps an identical copy\n\nof the live database). There are projects afoot, many commercial, but the Open\n\nSource ones do not seem that mature, or integrated into the main Firebird code.\n\nFirebird development has also been relatively slow, with the recently released\n\n1.5 aimed mainly at rewriting the code in C++ (from C), and not adding many new\n\nfeatures. However, Firebird was a relatively mature DBMS to start with, and its\n\naim remains replacing Oracle and SQL server in commercial applications.\n\nThere are two flavors\n\navailable: Classic and Super Server, with the Super server being less\n\nresource-intensive, and more suitable for high-volume environments (as well as\n\nwhere most of the development seems to be focused). There are also three\n\nvariants of SQL, varying in differing degrees in their adherence to ANSI\n\nstandards,\n\nFirebird has a loyal\n\nuser-base, and is a good product to work on, and if it can increase its\n\ndevelopment speed, as well as improve its marketing, it will be a strong\n\ncontender.\n\nIngres\n\nIngres began as a\n\nrelational database project at the University of California, Berkeley (the same\n\nAmerican university directly or indirectly responsible for so many\n\ncontributions to the Open Source world, including BSD Unix, Postgres, vi and Tcl.\n\nIt became one of the most influential projects in the database world. With code\n\nreleased under a variant of the BSD license, the proprietary products Sybase,\n\nSQL Server and Informix all have their roots in Ingres, as does PostgreSQL. In\n\n1982, Michael Stonebraker, one of the founders of the project, started Ingres\n\nCorporation, and attempted to commercialize the product. ASK and, eventually,\n\nComputer Associates bought the product, and continued to market and develop it.\n\nHowever, with Open Source databases making serious inroads in the commercial\n\ndatabase world, they released it under an Open Source license in 2004.\n\nIngres is known as a\n\nreliable and scalable database, but suffers from a reputation that it lags\n\nbehind in features, with Computer Associates seen as not having done much\n\ndevelopment since they bought it in 1994. Arguably, once ahead of Oracle, it is\n\nstill deployed in more enterprise environments than any other Open Source\n\ndatabase, and is ahead of MySQL in features, although online documentation is\n\npoor in comparison to the others. Important unusual features include:\n\nParallel\n\nqueries (allowing superb scalability, as a single query can get broken into\n\ncomponents that run across all available resources).\n\nonline table\n\nreorganization (no need to take the database offline to perform routine\n\nmaintenance)\n\nCA also\n\nput some financial commitment behind the project in the form of the Million\n\nDollar Challenge, whereby the Open Source community was invited to create\n\nsolutions enabling Oracle, SQL Server, Sybase, DB2, Informix, and/or MySQL\n\nusers to migrate to Ingres. Six winners will be announced at CA’s annual user\n\nconference, April 17-21, 2005. Once at the top of the pile, releasing Ingres\n\nunder an Open Source license has given it a new lease of life, and I expect to\n\nsee some rapid growth in the product.\n\nMySQL\n\nMySQL’s byline of most\n\npopular is certainly correct, as, fuelled by the Internet boom, it has\n\nbecome widely-used for websites. Initially fast and easy-to-use, but with\n\nlimited functionality, MySQL has worked on adding features to the product, and\n\nalthough it still lags the enterprise-level databases, its popularity, and huge\n\nuser-base mean there are lots of tools and applications that work with MySQL,\n\nwith lots of unofficial support to add to MySQL’s official support. MySQL lacks\n\nviews, triggers and stored procedures, important features for many users. Have\n\na look at the full list of features, as well as what is lacking in the article \"MySQL,\n\nStill Tomorrow’s Contender?\".\n\nMySQL achieved an\n\nimportant coup when SAP gave MySQL their SAPDB database. SAPDB is a\n\nfull-featured, mature DBMS that, although not yet well integrated into the rest\n\nof MySQL, gives MySQL an enterprise-ready answer to their critics. MySQL has\n\ntremendous momentum behind them, and if they can quickly add the missing\n\nfeatures, whilst maintaining the product’s ease of use and speed, they may have\n\nan unbeatable combination.\n\nPostgreSQL\n\nPostgreSQL first existed\n\nas a name in 1996, when Postgres95 was renamed, reflecting the importance of\n\nthe recently added SQL interpreter. Before that Postgres, also a project of the\n\nfamous Michael Stonebraker and designed as a successor to Ingres, used QUEL,\n\nwhich was very similar to SQL, and arguably more consistent in structure.\n\nHowever, the dominance of the SQL-based Oracle and DB2 meant that QUEL fell from\n\nfavor. Fortunately, Postgres was released under a BSD license, and even though\n\nthe Berkeley-led project had ended, the code was freely available, and the\n\nproject has continued to evolve into what it is today. Until the recently\n\nreleased version 8.0, PostgreSQL was not available for Windows, but I expect\n\nits market share to increase quickly as Windows users start to discover it. Its\n\nclaim of most advanced is not lightly made. It has almost all of the\n\nfeatures required by enterprise-level databases, as well as a number of other\n\nunusual and potentially useful features:\n\nUser-defined\n\ntypes and operators\n\nTable\n\ninheritance (where a table inherits all of the columns from its parent, but\n\nother columns can still be defined)\n\nPartial and\n\nexpressional indexes (indexes defined on only part of a table, as limited by a\n\ncondition, or created on the output of expressions)\n\nMultiple\n\nstored-procedure languages (including the native PL/PgSQL, PL/PHP, PL/Perl and\n\nPL/Python)\n\nPostgreSQL was slow in\n\nnot providing native Windows binaries, expecting their full feature-set alone\n\nto boost them. Now that they have rectified this, the momentum they have as the\n\nnumber two Open Source database may see them experience some rapid growth.\n\nResources\n\nThe Open Source Initiative (OSI)\n\nOSI Open Source Definition\n\nSleepycat Software (makers of BerkeleyDB)\n\nIBM’s Cloudscape\n\nDerby (on the Apache Incubator site)\n\nFirebird\n\nBorland Interbase\n\nIngres\n\nMySQL PostgreSQL"
    }
}