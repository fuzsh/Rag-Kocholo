{
    "id": "correct_foundationPlace_00075_1",
    "rank": 48,
    "data": {
        "url": "https://www.slideshare.net/slideshow/vulnerability-management-a-comprehensive-overview/270228966",
        "read_more_link": "",
        "language": "en",
        "title": "Vulnerability Management: A Comprehensive Overview",
        "top_image": "https://cdn.slidesharecdn.com/ss_thumbnails/vulnerabilitymanagementoverview-240713234749-24a3cdd9-thumbnail.jpg?width=640&height=640&fit=bounds",
        "meta_img": "https://cdn.slidesharecdn.com/ss_thumbnails/vulnerabilitymanagementoverview-240713234749-24a3cdd9-thumbnail.jpg?width=640&height=640&fit=bounds",
        "images": [
            "https://public.slidesharecdn.com/images/next/logo-slideshare-scribd-company.svg?w=128&q=75 1x, https://public.slidesharecdn.com/images/next/logo-slideshare-scribd-company.svg?w=256&q=75 2x",
            "https://cdn.slidesharecdn.com/profile-photo-StevenCarlson22-48x48.jpg?cb=1720896290",
            "https://image.slidesharecdn.com/vulnerabilitymanagementoverview-240713234749-24a3cdd9/85/Vulnerability-Management-A-Comprehensive-Overview-1-320.jpg 320w, https://image.slidesharecdn.com/vulnerabilitymanagementoverview-240713234749-24a3cdd9/85/Vulnerability-Management-A-Comprehensive-Overview-1-638.jpg 638w, https://image.slidesharecdn.com/vulnerabilitymanagementoverview-240713234749-24a3cdd9/75/Vulnerability-Management-A-Comprehensive-Overview-1-2048.jpg 2048w"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-07-13T23:47:49+00:00",
        "summary": "",
        "meta_description": "Vulnerability Management: A Comprehensive Overview - Download as a PDF or view online for free",
        "meta_lang": "en",
        "meta_favicon": "https://public.slidesharecdn.com/_next/static/media/favicon.7bc3d920.ico",
        "meta_site_name": "SlideShare",
        "canonical_link": "https://www.slideshare.net/slideshow/vulnerability-management-a-comprehensive-overview/270228966",
        "text": "1. Steven Carlson - 2024 Vulnerability Management: A Comprehensive Overview Product Security Journey\n\n2. Software Engineer who is passionate about clean secure code. Helpdesk -> Software Engineer -> Security -> DevOps -> Cloud -> Vulnerability Management https://about.me/rockrunner Steven Carlson\n\n3. The Talk Are you in the correct room? “This talk will break down a modern approach to vulnerability management. The main focus is to fi nd the root cause of software risk that may expose your organization to reputation damage. The presentation will be broken down into 3 main area, potential risk, occurrence, and exploitable risk. Each segment will help professionals understand why vulnerability management programs are so important.”\n\n4. Keeping Security Top of Mind Forethought vs Afterthought\n\n5. Generated with AI (Copilot | Designer)\n\n6. Overview The plan • Foundation • Potential Risk • Occurence • Exploitable Risk • Reporting\n\n7. Foundation\n\n8. CIA Con fi dentiality, Integrity, and Availability • Con fi dentiality: This involves ensuring that data remains secret and private. • Integrity: Integrity ensures that data remains accurate and unaltered. • Availability: Availability ensures that information and systems are accessible when needed.\n\n9. Vulnerability Security Finding? • A vulnerability is essentially a weakness in a system, application, or network that can be exploited by malicious actors to gain unauthorized access, steal sensitive data, disrupt operations, or cause other harm. It can exist in various forms. Generated with AI (Copilot | Designer)\n\n10. Triage Process Security Review • Identify the fi nding: This involves understanding the nature of the security fi nding. • Assess the severity: Evaluate the potential impact of the fi nding on the organization's assets, data, and reputation. • Determine the likelihood: Analyze the likelihood of an attacker successfully exploiting the vulnerability. • Make a decision: Based on the severity and likelihood of exploitation, security engineers decide on the appropriate course of action. Generated with AI (Copilot | Designer)\n\n11. Risk Matrix Likelihood x Impact • Impact is typically measured on a scale of High, Moderate, and Low, considering factors like fi nancial loss, reputational damage, safety hazards, etc. • Likelihood can be based on historical data, industry trends, expert opinions, or a combination of these. Generated with AI (Copilot)\n\n12. NIST Framework National Institute of Standards and Technology • NIST is a non-regulatory federal agency within the U.S. Department of Commerce. • NIST provides solutions that ensure measurement traceability, enable quality assurance, and harmonize documentary standards and regulatory practices. • NIST Cyber Security Framework Generated with AI (Copilot | Designer)\n\n13. Business Requirements In the real world • Prevent Breaches - exploiting vulnerabilities is one of the most common ways systems are breached. • Maintain Compliance - audits require mitigating vulnerabilities. • Customer Expectation - most enterprise customers have contractual requirements. Generated with AI (Copilot | Designer)\n\n14. Mitigating Risk Preventing risk from becoming a vulnerability • Identification - what/where/when/ why/how ?? • Disclosure - informing the correct person(s) • Patch Management - mitigating the risk that was found • Verification - validating the “fix” was completed successfully Generated with AI (Copilot | Designer)\n\n15. Dashboard Sharing vulnerabilities with other teams\n\n16. Generated with AI (Copilot | Designer)\n\n18. Potential Risk\n\n19. Potential Risk “Most left” • The possibility of harm or negative consequences arising from a speci fi c situation or action. It's a precautionary concept that acknowledges the uncertainty inherent in any future outcome. While it doesn't guarantee a negative event will occur, it highlights the need for awareness and possible mitigation strategies.\n\n20. Generated with AI (Copilot | Designer)\n\n21. Shift Left and Extend Right Oldie but a goodie • Embedding a security engineer within a product team • Accept work that is achievable and generally understood • Establish a partnership between the di ff erent business units\n\n22. Source Code Scanning Snyk • Open Source known issues • Coding practices with security risk • Passwords/Keys/tokens • Known framework issues\n\n23. Server-side request forgery (SSRF) https://learn.snyk.io/lesson/ssrf-server-side-request-forgery/\n\n24. Process Where does it fi t in • Early in a Software Development Lifecycle • At least before code goes into production • Store data in either Snyk or external DB • Before results are shared with external teams, risk should be actionable\n\n26. Source for Dashboard Source - SAST\n\n27. Occurence\n\n28. Occurrence Context is key • Refers to the frequency or number of times an event happens within the software. Also, understanding the entry point or layer where the risk resides. Understanding the context and additional information surrounding the risk is crucial to determine the severity of risk.\n\n29. Generated with AI (Copilot | Designer)\n\n30. Context is Key Building an inventory of fi ndings • What is the risk? • Where it was introduced? • What other layers are e ff ected? • How was it introduced?\n\n31. Infrastructure Scanning Prisma Cloud • Infrastructure as code scanning • Deployed service monitoring • Runtime protection • Container scanning\n\n32. Process Where does it fi t in • At least every once every 24 hours • Artifact Registries • Cloud services • Connected Services • User Access Generated with AI (Copilot | Designer)\n\n34. Source for Dashboard Source - Infra\n\n35. Exploitable Risk\n\n36. Exploitable Risk Is this real? • Refers to a vulnerability that has been successfully taken advantage of by attackers to compromise a system, network, or data. This is essentially the realized consequence of an exploitable risk, where the theoretical possibility of harm becomes an actual security breach with potentially damaging consequences.\n\n37. Generated with AI (Copilot | Designer)\n\n38. Triage The real job • Putting research to work • Understand the risk well enough to share with external teams • Layout a plan to mitigate the vulnerability • Create a risk register item unresolved risk Generated with AI (Copilot | Designer)\n\n39. Burp Suite https://portswigger.net/burp • Integrated platform for performing various web application security testing activities • O ff ers a suite of tools under one roof, simplifying work fl ow and enhancing e ffi ciency • Freely available community edition with most features, alongside a paid professional edition with additional functionalities\n\n40. NetSPI Resolve https://www.netspi.com/security-testing/penetration-testing-as-a-service • PEN testing to validate the occurrence and potential risk before a breach. • Attack Surface Monitoring to monitor known and unknown assets outside other engineering and security tools. • Breach and Attack Simulation to practice what breach could look like.\n\n41. Process Where does it fi t in? • 10%-25% of security engineer time • New risk shows up every day • Create tickets for teams while partnering with them to schedule mitigations • Providing context where it is lacking Generated with AI (Copilot | Designer)\n\n43. Source for Dashboard Source - External\n\n44. Reporting\n\n45. Generated with AI (Copilot | Designer)\n\n46. Generated with AI (Copilot | Designer)\n\n47. Reporting Don’t forget • E ff ective communication is crucial in cybersecurity. Security reports serve as a vital tool for conveying critical information about security posture, vulnerabilities, and incidents to stakeholders.\n\n48. Details High level • Executive Summary: Concise overview of the report's purpose, key fi ndings, and recommendations. • Findings: Detailed description of identi fi ed vulnerabilities, or risks. • Recommendations: Speci fi c actions proposed to address identi fi ed issues, prioritizing high-risk fi ndings. • Timeline: Chronological sequence of events related to the reported issue, including discovery, investigation, and remediation e ff orts. Generated with AI (Copilot | Designer)\n\n49. Enterprise Requirements What the business needs • Regular vulnerability scans and assessments against all system • Annual penetration tests against said any Internet-facing systems used in connection with the Services • Regular risk management assessments of the physical and logical security measures and safeguards it maintains applicable to its protection of Customer Data • Upon request, provide customers a summary reports with any signi fi cant risks identi fi ed and an overview of the remediation e ff ort(s) undertaken to address such risks.\n\n50. Custom Dashboard Inventory of Findings\n\n51. Automation Lots of Options • {dashboard tool} - {storage options} • Compliance Automation • Self Service Option - {bucket / drive} • Email / ChatOps Generated with AI (Copilot | Designer)\n\n52. Generated with AI (Copilot | Designer)\n\n53. Resources Books, Website, and more Books & Publications • Application Security Program Handbook by Derek Fisher • Designing Secure Software by Loren Kohnfelder • Clean Code by Robert Martin • Software Transparency by Chris Hugh and Tony Turner • Threats by Adam Shostack Online • SecurityChampionSuccessGuide.org • attack.mitre.org • nist.gov/itl/csd/secure-systems-and- applications • hockeyinjune.medium.com/product- security-14127b5838ba • santikris2003.medium.com/product- security-dev-sec-tips-2fdb1698a3b3 • https://media.defense.gov/2023/Jun/ 28/2003249466/-1/-1/0/ CSI_DEFENDING_CI_CD_ENVIRONMENT S.PDF\n\n54. Glossary Words and things • Application Security - the process of developing, adding, and testing security features within applications to prevent security vulnerabilities against threats. • Infrastructure Security - the security provided to protect infrastructure, especially critical infrastructure such as cloud or datacenter resources. • Security Operations - a centralized unit that deals with security issues on an organizational and technical level. • Software Development Life Cycle (SDLC) - a conceptual framework describing all activities in a software development project from planning to maintenance. This process is associated with several models, each including a variety of tasks and activities.\n\n55. Software Engineer who is passionate about clean secure code. Helpdesk -> Software Engineer -> Security -> DevOps -> Cloud -> Vulnerability Management https://about.me/rockrunner Steven Carlson\n\n56. Feedback Please remember to fi ll out the evaluation forms"
    }
}