{
    "id": "dbpedia_3483_3",
    "rank": 57,
    "data": {
        "url": "https://www.sanity.io/docs/query-cheat-sheet",
        "read_more_link": "",
        "language": "en",
        "title": "Sort, Filter & Array Examples",
        "top_image": "https://www.sanity.io/static/images/opengraph/social.png",
        "meta_img": "https://www.sanity.io/static/images/opengraph/social.png",
        "images": [
            "https://cdn.sanity.io/images/3do82whm/next/9bf6b9c4709e49f6f4bf095dc0e41224fd175027-337x384.svg?h=23&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/3f5108155bb69d40d75aa87de948917045d41abd-102x33.svg?h=6&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/a34029c180ece128552e9d9679027a8afa48ae11-1155x1000.svg?h=17&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/45a81b836dbb912b62b29b01b45954ef2948ae91-1155x1000.svg?h=17&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/24152f4f3fed326b8a2c5788393f53e8cecd4707-128x113.svg?h=18&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/0c35632d74ac27f807b72d4e22f3276ef223091a-128x113.svg?h=18&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/ae86b4b4fd1df833c37cfd4d651cb407366ceca7-512x512.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/6a645de167fec7716f99fd9de5fff6e87918b99f-173x113.svg?h=13&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/52b0db077b96d52ee119fe4da7155537bf99d24f-167x167.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/47d42c4fa3624d6ea85fc69f1bfb11c3ed521e63-167x167.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/25577d454c204896a36753b076126cd72039de1a-261x260.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/4b535960a5e22bbdf3bc8b601d95fbd215d4780e-261x260.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/f4dd7e2dcdf8fe6d492fffd0d4ecb40598193b9e-256x256.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/4cb60b175710d371792131799138bbe6491f9c1b-512x512.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/421d11ba972c786ace687e25ea06da6ea721b316-512x512.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/927baf1ce68df63ec3a59eb1c0fbb4e7442722ef-48x48.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/c6b479007ccaa0aa08c3032fc1cb368b2fffff23-48x48.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/a8dcfef47cf5288b5baf2658c65c323e5b96bef4-180x180.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/582a59c0eb08fff797225db48bf36f72b8d888a7-180x180.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/0e6ed17a14c915204a19a2d072ae017fccc06bba-900x900.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/4faaedf0321b47108141744556d770a93933bc83-47x48.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/59de1b788d6666a4e64958d92a28010addede8f1-800x800.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/6bdcdafeba3c1746a017fbf851267cae560fddaa-48x48.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/ecbde5b899fc5fba4e3e89e87be3cd1b3aa48db6-1281x1280.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/fe00bda132fc027c021e7b91eb0748041676c781-1280x1280.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/55422b54446d6aab92ce4fd2d06cf691c837250c-48x48.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/1bb4f3d4476d59a1e801ebb059a030b9bd741c1a-48x48.svg?h=20&fit=max&auto=format",
            "https://cdn.sanity.io/images/3do82whm/next/f35812cf780e6fba6e50447d476142b3d49c5c71-48x48.svg?h=20&fit=max&auto=format"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Data query examples.",
        "meta_lang": "en",
        "meta_favicon": "/static/images/favicons/apple-icon-57x57.png",
        "meta_site_name": "Sanity.io",
        "canonical_link": "https://www.sanity.io/docs/query-cheat-sheet",
        "text": "* *[] *[_type == \"movie\"] *[_id == \"abc.123\"] *[_type in [\"movie\", \"person\"]] *[_type == \"movie\" && popularity > 15 && releaseDate > \"2016-04-25\"] *[_type == \"movie\" && (popularity > 15 || releaseDate > \"2016-04-25\")] *[popularity < 15] *[popularity > 15] *[popularity <= 15] *[popularity >= 15] *[popularity == 15] *[releaseDate != \"2016-04-27\"] *[!(releaseDate == \"2016-04-27\")] *[!(releaseDate != \"2016-04-27\")] *[dateTime(_updatedAt) > dateTime('2018-04-20T20:43:31Z')] *[dateTime(_updatedAt) > dateTime(now()) - 60*60*24*7] *[name < \"Baker\"] *[awardWinner == true] *[awardWinner] *[!awardWinner] *[defined(awardWinner)] *[!defined(awardWinner)] *[title == \"Aliens\"] *[title in [\"Aliens\", \"Interstellar\", \"Passengers\"]] *[_id in path(\"a.b.c.*\")] *[_id in path(\"a.b.c.**\")] *[!(_id in path(\"drafts.**\"))] *[\"yolo\" in tags] *[status in [\"completed\", \"archived\"]] *[\"person_sigourney-weaver\" in castMembers[].person._ref] *[slug.current == \"some-slug\"] *[count((categories[]->slug.current)[@ in [\"action\", \"thriller\"]]) > 0] *[count((categories[]->slug.current)[@ in [\"action\", \"thriller\"]]) == 2]\n\n*[_type=='movie']{title,poster{asset->{path,url}}} *[_type=='movie']{title,'cast': castMembers[].person->name} *[_type=='movie']{title,'cast': castMembers[].person->{_id, name}} *[_type==\"person\"]{ name, \"relatedMovies\": *[_type=='movie' && references(^._id)]{ title } } *[_type == \"book\" && author._ref in *[_type==\"author\" && name==\"John Doe\"]._id ]{...}\n\n*[_type == 'movie']{title} *[_type == 'movie']{_id, _type, title} *[_type == 'movie']{'renamedId': _id, _type, title} *[_type == 'movie'].title *[_type == 'movie']{'characterNames': castMembers[].characterName} *[_type=='movie' && title == 'Arrival']{title,'posterUrl': poster.asset->url} *[_type == 'movie']{...} *[_type == 'movie']{'posterUrl': poster.asset->url, ...} *[_type == 'movie']{..., 'rating': coalesce(rating, 'unknown')} *[_type == 'movie']{\"actorCount\": count(actors)} *[_type == 'movie']{castMembers[]{characterName, person}} *[_type == 'movie']{castMembers[characterName match 'Ripley']{characterName, person}} *[_type == 'book']{authors[]->{name, bio}} {'threeMovieTitles': *[_type=='movie'][0..2].title} {'featuredMovie': *[_type == 'movie' && title == 'Alien'][0], 'scifiMovies': *[_type == 'movie' && 'sci-fi' in genres]}\n\n*[_type=='movie']{..., \"popularity\": select( popularity > 20 => \"high\", popularity > 10 => \"medium\", popularity <= 10 => \"low\" )} *[_type=='movie']{..., \"popularity\": select( popularity > 20 => \"high\", popularity > 10 => \"medium\", \"low\" )} *[_type=='movie']{ ..., releaseDate >= '2018-06-01' => { \"screenings\": *[_type == 'screening' && movie._ref == ^._id], \"news\": *[_type == 'news' && movie._ref == ^._id], }, popularity > 20 && rating > 7.0 => { \"featured\": true, \"awards\": *[_type == 'award' && movie._ref == ^._id], }, } *[_type=='movie']{ ..., ...select(releaseDate >= '2018-06-01' => { \"screenings\": *[_type == 'screening' && movie._ref == ^._id], \"news\": *[_type == 'news' && movie._ref == ^._id], }), ...select(popularity > 20 && rating > 7.0 => { \"featured\": true, \"awards\": *[_type == 'award' && movie._ref == ^._id], }), } content[]{ _type == 'type1' => { }, _type == 'type2' => { \"url\": file.asset->url } }\n\n*[references(\"person_sigourney-weaver\")]{title} *[_type==\"movie\" && references(*[_type==\"person\" && age > 99]._id)]{title} *[defined(tags)] *{\"title\": coalesce(title.fi, title.en)} count(*[_type == 'movie' && rating == 'R']) *[_type == 'movie']{ title, \"actorCount\": count(actors) } round(3.14) round(3.14, 1) *[_type == \"post\"] | score(description match \"GROQ\") | order(_score desc) { _score, title } *[_type == \"movie\" && movieRating > 3] | score( title match $term, boost(movieRating > 8, 3) ) *[_type == \"movie\" && movieRating > 3] | score( boost(title match $term, 4), boost(body match $term, 1) ) *[_type == \"post\"] { \"plaintextBody\": pt::text(body) }"
    }
}