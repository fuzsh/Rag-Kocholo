{
    "id": "correct_foundationPlace_00011_3",
    "rank": 59,
    "data": {
        "url": "https://pypi.org/project/yfinance/",
        "read_more_link": "",
        "language": "en",
        "title": "yfinance",
        "top_image": "https://pypi.org/static/images/twitter.abaf4b19.webp",
        "meta_img": "https://pypi.org/static/images/twitter.abaf4b19.webp",
        "images": [
            "https://pypi.org/static/images/logo-small.8998e9d1.svg",
            "https://pypi-camo.freetls.fastly.net/75707dd70735c7106c77cefd5ef37c712a893808/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f30383335626437316462306133396261306130363035643564633562393437323f73697a653d3530",
            "https://pypi-camo.freetls.fastly.net/0618c2e453bcdee07417f23ffb7c37ccce0edbfb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d322e372c253230332e362b2d626c75652e7376673f7374796c653d666c6174",
            "https://pypi-camo.freetls.fastly.net/59020f5e104ce5026bcd99c14f73211cb4af0805/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7966696e616e63652e7376673f6d61784167653d363025",
            "https://pypi-camo.freetls.fastly.net/9cb63134c2bb87f990e41cace73ca14640ce5f7c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f7966696e616e63652e7376673f6d61784167653d3630",
            "https://pypi-camo.freetls.fastly.net/f9e65ef595907a832b841a80f1237d9846e813b3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7966696e616e63652e7376673f6d61784167653d32353932303030266c6162656c3d696e7374616c6c7326636f6c6f723d253233323742314646",
            "https://pypi-camo.freetls.fastly.net/89dbe24c03f661c54e19aed6f722312f0cdb54c1/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f72616e61726f757373692f7966696e616e63652f6d61696e2e7376673f6d61784167653d31",
            "https://pypi-camo.freetls.fastly.net/1dd380d9b9c50d994e41520880aedfdf1743f9a5/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f72616e61726f757373692f7966696e616e63652f6261646765",
            "https://pypi-camo.freetls.fastly.net/2ec112141dda595d4f5437b5adca1620e282d21c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f72616e61726f757373692f7966696e616e63652e7376673f7374796c653d736f6369616c266c6162656c3d53746172266d61784167653d3630",
            "https://pypi-camo.freetls.fastly.net/513847a4fadfa421adcd30e919f443cfd6a8da07/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f61726f757373692e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77266d61784167653d3630",
            "https://pypi-camo.freetls.fastly.net/75707dd70735c7106c77cefd5ef37c712a893808/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f30383335626437316462306133396261306130363035643564633562393437323f73697a653d3530",
            "https://pypi.org/static/images/blue-cube.572a5bfb.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi.org/static/images/white-cube.2351a86c.svg",
            "https://pypi-camo.freetls.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67",
            "https://pypi-camo.freetls.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67",
            "https://pypi-camo.freetls.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67",
            "https://pypi-camo.freetls.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67",
            "https://pypi-camo.freetls.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67",
            "https://pypi-camo.freetls.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67",
            "https://pypi-camo.freetls.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67",
            "https://pypi-camo.freetls.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-07-19T15:05:39+00:00",
        "summary": "",
        "meta_description": "Download market data from Yahoo! Finance API",
        "meta_lang": "en",
        "meta_favicon": "/static/images/favicon.35549fe8.ico",
        "meta_site_name": "PyPI",
        "canonical_link": "https://pypi.org/project/yfinance/",
        "text": "Download market data from Yahoo! Finance's API\n\nyfinance offers a threaded and Pythonic way to download market data from Yahoo!Ⓡ finance.\n\n→ Check out this Blog post for a detailed tutorial with code examples.\n\nChangelog »\n\nInstallation\n\nQuick start\n\nAdvanced\n\nWiki\n\nContribute\n\nInstallation\n\nInstall yfinance using pip:\n\n$ pip install yfinance --upgrade --no-cache-dir\n\nWith Conda.\n\nTo install with optional dependencies, replace optional with: nospam for caching-requests, repair for price repair, or nospam,repair for both:\n\n$ pip install \"yfinance[optional]\"\n\nRequired dependencies , all dependencies.\n\nQuick Start\n\nThe Ticker module\n\nThe Ticker module, which allows you to access ticker data in a more Pythonic way:\n\nimport yfinance as yf msft = yf.Ticker(\"MSFT\") # get all stock info msft.info # get historical market data hist = msft.history(period=\"1mo\") # show meta information about the history (requires history() to be called first) msft.history_metadata # show actions (dividends, splits, capital gains) msft.actions msft.dividends msft.splits msft.capital_gains # only for mutual funds & etfs # show share count msft.get_shares_full(start=\"2022-01-01\", end=None) # show financials: # - income statement msft.income_stmt msft.quarterly_income_stmt # - balance sheet msft.balance_sheet msft.quarterly_balance_sheet # - cash flow statement msft.cashflow msft.quarterly_cashflow # see `Ticker.get_income_stmt()` for more options # show holders msft.major_holders msft.institutional_holders msft.mutualfund_holders msft.insider_transactions msft.insider_purchases msft.insider_roster_holders msfs.sustainability # show recommendations msft.recommendations msft.recommendations_summary msft.upgrades_downgrades # Show future and historic earnings dates, returns at most next 4 quarters and last 8 quarters by default. # Note: If more are needed use msft.get_earnings_dates(limit=XX) with increased limit argument. msft.earnings_dates # show ISIN code - *experimental* # ISIN = International Securities Identification Number msft.isin # show options expirations msft.options # show news msft.news # get option chain for specific expiration opt = msft.option_chain('YYYY-MM-DD') # data available via: opt.calls, opt.puts\n\nIf you want to use a proxy server for downloading data, use:\n\nimport yfinance as yf msft = yf.Ticker(\"MSFT\") msft.history(..., proxy=\"PROXY_SERVER\") msft.get_actions(proxy=\"PROXY_SERVER\") msft.get_dividends(proxy=\"PROXY_SERVER\") msft.get_splits(proxy=\"PROXY_SERVER\") msft.get_capital_gains(proxy=\"PROXY_SERVER\") msft.get_balance_sheet(proxy=\"PROXY_SERVER\") msft.get_cashflow(proxy=\"PROXY_SERVER\") msft.option_chain(..., proxy=\"PROXY_SERVER\") ...\n\nMultiple tickers\n\nTo initialize multiple Ticker objects, use\n\nimport yfinance as yf tickers = yf.Tickers('msft aapl goog') # access each ticker using (example) tickers.tickers['MSFT'].info tickers.tickers['AAPL'].history(period=\"1mo\") tickers.tickers['GOOG'].actions\n\nTo download price history into one table:\n\nimport yfinance as yf data = yf.download(\"SPY AAPL\", period=\"1mo\")\n\nyf.download() and Ticker.history() have many options for configuring fetching and processing. Review the Wiki for more options and detail.\n\nLogging\n\nyfinance now uses the logging module to handle messages, default behaviour is only print errors. If debugging, use yf.enable_debug_mode() to switch logging to debug with custom formatting.\n\nSmarter scraping\n\nInstall the nospam packages for smarter scraping using pip (see Installation). These packages help cache calls such that Yahoo is not spammed with requests.\n\nTo use a custom requests session, pass a session= argument to the Ticker constructor. This allows for caching calls to the API as well as a custom way to modify requests via the User-agent header.\n\nimport requests_cache session = requests_cache.CachedSession('yfinance.cache') session.headers['User-agent'] = 'my-program/1.0' ticker = yf.Ticker('msft', session=session) # The scraped response will be stored in the cache ticker.actions\n\nCombine requests_cache with rate-limiting to avoid triggering Yahoo's rate-limiter/blocker that can corrupt data.\n\nfrom requests import Session from requests_cache import CacheMixin, SQLiteCache from requests_ratelimiter import LimiterMixin, MemoryQueueBucket from pyrate_limiter import Duration, RequestRate, Limiter class CachedLimiterSession(CacheMixin, LimiterMixin, Session): pass session = CachedLimiterSession( limiter=Limiter(RequestRate(2, Duration.SECOND*5)), # max 2 requests per 5 seconds bucket_class=MemoryQueueBucket, backend=SQLiteCache(\"yfinance.cache\"), )\n\nManaging Multi-Level Columns\n\nThe following answer on Stack Overflow is for How to deal with multi-level column names downloaded with yfinance?\n\nyfinance returns a pandas.DataFrame with multi-level column names, with a level for the ticker and a level for the stock price data\n\nThe answer discusses:\n\nHow to correctly read the the multi-level columns after saving the dataframe to a csv with pandas.DataFrame.to_csv\n\nHow to download single or multiple tickers into a single dataframe with single level column names and a ticker column\n\nPersistent cache store\n\nTo reduce Yahoo, yfinance store some data locally: timezones to localize dates, and cookie. Cache location is:\n\nWindows = C:/Users/<USER>/AppData/Local/py-yfinance\n\nLinux = /home/<USER>/.cache/py-yfinance\n\nMacOS = /Users/<USER>/Library/Caches/py-yfinance\n\nYou can direct cache to use a different location with set_tz_cache_location():\n\nimport yfinance as yf yf.set_tz_cache_location(\"custom/cache/location\") ...\n\nDevelopers: want to contribute?\n\nyfinance relies on community to investigate bugs and contribute code. Developer guide: https://github.com/ranaroussi/yfinance/discussions/1084\n\nLegal Stuff\n\nyfinance is distributed under the Apache Software License. See the LICENSE.txt file in the release for details.\n\nAGAIN - yfinance is not affiliated, endorsed, or vetted by Yahoo, Inc. It's an open-source tool that uses Yahoo's publicly available APIs, and is intended for research and educational purposes. You should refer to Yahoo!'s terms of use (here, here, and here) for details on your rights to use the actual data downloaded.\n\nP.S.\n\nPlease drop me an note with any feedback you have."
    }
}