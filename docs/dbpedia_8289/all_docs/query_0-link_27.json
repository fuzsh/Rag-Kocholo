{
    "id": "dbpedia_8289_0",
    "rank": 27,
    "data": {
        "url": "https://machinethink.net/blog/new-synth-plugin-book/",
        "read_more_link": "",
        "language": "en",
        "title": "New book: Code Your Own Synth Plug-Ins With C++ and JUCE",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://machinethink.net/images/matthijs.jpg",
            "https://machinethink.net/images/synth-book/sine@2x.jpg 2x",
            "https://machinethink.net/images/synth-book/book-cover@2x.jpg 2x",
            "https://machinethink.net/images/synth-book/reaper@2x.jpg 2x",
            "https://machinethink.net/images/SynthBook@2x.jpg 2x"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "machine learning",
            "deep learning",
            "Core ML",
            "ML on mobile",
            "TensorFlow",
            "PyTorch",
            "MXNet",
            "Keras",
            "Metal",
            "MPS",
            "Metal Performance Shaders",
            "CNN",
            "convnet",
            "embedded software",
            "computer vision",
            "algorithms",
            "low-level programming",
            "mobile software development",
            "iOS",
            "iPhone",
            "iPad"
        ],
        "tags": null,
        "authors": [
            "Matthijs Hollemans"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Learn the fundamentals of audio programming by building a fully-featured synth plug-in",
        "meta_lang": "en",
        "meta_favicon": "images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://machinethink.net/blog/new-synth-plugin-book/",
        "text": "It happened again, I wrote a new book!\n\nOne of the places I hang out online is The Audio Programmer Discord, a nice and friendly community for people who are into creating audio software. New folks show up on a regular basis, wanting to learn how to create audio plug-ins such as synthesizers, and ask for book recommendations.\n\nThe problem is, until now there wasn’t any book I could recommend as a good place to start from. To learn audio programming, you have to piece the information together yourself from all over the place: college textbooks, blog posts, videos, obscure forums, old mailing list archives… That’s a big hurdle to take, especially for people who are new to programming.\n\nBooks about making synths do exist, but none of them offer a complete starter course that takes you from zero knowledge to a finished plug-in. The closest is Will Pirkle’s Designing Software Synthesizer Plugins in C++, but I can’t really recommend the second edition to beginners and the first edition is hard to find (and outdated). Books like that are definitely very useful, but not as a first book.\n\nAnd so I figured here is a book I could write:\n\nHow to get started from scratch with no audio programming or DSP knowledge, and through step-by-step explanations learn to build a real synthesizer plug-in.\n\nGreat idea… but a tutorial-style book like that requires an example project, and while I did have some synthesizer code lying around, none of it was suitable as teaching material.\n\nThen one day I stumbled upon MDA JX10. The MDA plug-ins are a legendary set of freeware audio plug-ins from the early 2000s that were graciously donated as open source by their author. Being two decades old, these plug-ins are obviously not the latest and greatest in audio technology — that said, they do demonstrate the fundamentals of audio signal processing quite well.\n\nJX10 in particular is a fun little virtual analog synth that has a bit of everything you need to know to write your own synths. So, I took this existing project, modernized the code and ported it to the JUCE framework, and turned it into what I think is a compelling story of how to make sound with computers.\n\nNow when someone asks, “How do I get started in synthesizer programming?”, I can point them to my own book, Code Your Own Synth Plug-Ins With C++ and JUCE.\n\nWhat is this book about? It’s 360 pages of detailed explanations of how to create a software synthesizer plug-in that can be used in all modern DAWs such as Logic Pro, REAPER, FL Studio, Cubase, Bitwig Studio, GarageBand, and others. You’ll learn the theory of how synthesizers work and how to implement the underlying digital signal processing (DSP) algorithms.\n\nEven if you’re not really into synths, this book is a good place to start because you’ll learn the foundations of dealing with digital audio and making plug-ins, and that knowledge transfers to any kind of audio programming.\n\nThe programming language used is C++, as that is the industry standard for writing efficient audio processing code. But as this is an introductory book, I kept the C++ shenanigans to the bare minimum. The book aims to be accessible for anyone with basic knowledge of C or C++, or even languages such as Swift or JavaScript, and who knows their way around Xcode or Visual Studio.\n\nEven better: you only need high-school level math to follow along. There is some math in this book — you can’t escape this when doing DSP — but the focus is on code, not math.\n\nThe audio framework used is JUCE. Pretty much everyone making audio plug-ins uses JUCE, as this allows you to program the whole thing just once — including the user interface — and deploy to Mac, Windows, Linux, and iOS from the same codebase. I’m generally not a fan of cross-platform frameworks but for JUCE I’m making an exception!\n\nThe book is for sale at Leanpub. You can download a free sample PDF or EPUB with the first three chapters to try before you buy. The book’s source code is on GitHub, so you can already check out the finished synthesizer project. That repo also has some audio demos of what the synth sounds like.\n\nHere is a screenshot of the synth plug-in running in REAPER:\n\nThe table of contents for the book:\n\nIntroduction\n\nChapter 1: What is a synth, exactly?\n\nChapter 2: Getting started with JUCE\n\nChapter 3: MIDI in, sound out\n\nChapter 4: Handling MIDI events in JUCE\n\nChapter 5: Introduction to oscillators\n\nChapter 6: The sawtooth oscillator\n\nChapter 7: Plug-in parameters\n\nChapter 8: The ADSR envelope\n\nChapter 9: Combining oscillators\n\nChapter 10: Polyphony & voice management\n\nChapter 11: Modulation\n\nChapter 12: The filter\n\nChapter 13: User interface\n\nChapter 14: Where to go from here"
    }
}