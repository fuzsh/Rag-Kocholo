{
    "id": "wrong_mix_property_foundationPlace_00007_1",
    "rank": 4,
    "data": {
        "url": "https://patents.google.com/patent/US20050131866A1/en",
        "read_more_link": "",
        "language": "en",
        "title": "US20050131866A1 - Methods and systems for personalized network searching - Google Patents",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://patentimages.storage.googleapis.com/88/3b/4e/c683d4d058a600/US20050131866A1-20050616-D00000.png",
            "https://patentimages.storage.googleapis.com/0a/d3/ce/7c474d8df39739/US20050131866A1-20050616-D00001.png",
            "https://patentimages.storage.googleapis.com/b5/44/31/54945e6396ef3a/US20050131866A1-20050616-D00002.png",
            "https://patentimages.storage.googleapis.com/8f/bc/cd/35bd0bdaf20876/US20050131866A1-20050616-D00003.png",
            "https://patentimages.storage.googleapis.com/d4/69/04/3d812e85c00765/US20050131866A1-20050616-D00004.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2003-12-03T00:00:00",
        "summary": "",
        "meta_description": "Systems and methods for personalized network searching are described. A search engine implements a method comprising receiving a search query, determining a personalized result by searching a personalized search object using the search query, determining a general result by searching a general search object using the search query, and providing a search result for the search query based at least in part on the personalized result and the general result. The search engine may utilize ratings or annotations associated with the previously identified uniform resource locator to locate and sort results.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://patents.google.com/patent/US20050131866A1/en",
        "text": "Methods and systems for personalized network searching Download PDF\n\nInfo\n\nPublication number\n\nUS20050131866A1\n\nUS20050131866A1 US10/726,410 US72641003A US2005131866A1 US 20050131866 A1 US20050131866 A1 US 20050131866A1 US 72641003 A US72641003 A US 72641003A US 2005131866 A1 US2005131866 A1 US 2005131866A1\n\nAuthority\n\nUS\n\nUnited States\n\nPrior art keywords\n\nsearch\n\npersonalized\n\nuser\n\nprogram code\n\nreceiving\n\nPrior art date\n\n2003-12-03\n\nLegal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)\n\nGranted\n\nApplication number\n\nUS10/726,410\n\nOther versions\n\nUS7523096B2 (en\n\nInventor\n\nGregory Badros\n\nStephen Lawrence\n\nCurrent Assignee (The listed assignees may be inaccurate. Google has not performed a legal analysis and makes no representation or warranty as to the accuracy of the list.)\n\nGoogle LLC\n\nOriginal Assignee\n\nGoogle LLC\n\nPriority date (The priority date is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the date listed.)\n\n2003-12-03\n\nFiling date\n\n2003-12-03\n\nPublication date\n\n2005-06-16\n\nFamily has litigation\n\nFirst worldwide family litigation filed litigation Critical https://patents.darts-ip.com/?family=34652686&utm_source=google_patent&utm_medium=platform_link&utm_campaign=public_patent_search&patent=US20050131866(A1) \"Global patent litigation datasetâ by Darts-ip is licensed under a Creative Commons Attribution 4.0 International License.\n\n2003-12-03 Application filed by Google LLC filed Critical Google LLC\n\n2003-12-03 Priority to US10/726,410 priority Critical patent/US7523096B2/en\n\n2004-09-30 Assigned to GOOGLE, INC. reassignment GOOGLE, INC. ASSIGNMENT OF ASSIGNORS INTEREST (SEE DOCUMENT FOR DETAILS). Assignors: BARDROS, GREGORY JOSEPH, LAWRENCE, STEPHEN R.\n\n2004-11-22 Priority to CN2010101109959A priority patent/CN101739467B/en\n\n2004-11-22 Priority to CNA2004800356468A priority patent/CN1890663A/en\n\n2004-11-22 Priority to EP18167072.0A priority patent/EP3364317A1/en\n\n2004-11-22 Priority to EP04811831A priority patent/EP1690204A1/en\n\n2004-11-22 Priority to PCT/US2004/039176 priority patent/WO2005062210A1/en\n\n2005-06-16 Publication of US20050131866A1 publication Critical patent/US20050131866A1/en\n\n2006-05-31 Priority to IL176039A priority patent/IL176039A/en\n\n2008-04-08 Priority to US12/099,583 priority patent/US8015170B2/en\n\n2009-04-21 Application granted granted Critical\n\n2009-04-21 Publication of US7523096B2 publication Critical patent/US7523096B2/en\n\n2010-10-13 Priority to IL208680A priority patent/IL208680A/en\n\n2011-06-30 Priority to US13/172,991 priority patent/US8150830B2/en\n\n2011-06-30 Priority to US13/172,961 priority patent/US8166017B2/en\n\n2012-04-09 Priority to US13/442,386 priority patent/US8612415B2/en\n\n2013-11-08 Priority to US14/074,872 priority patent/US8886626B2/en\n\n2014-10-16 Priority to US14/516,019 priority patent/US9679067B2/en\n\n2017-04-20 Priority to US15/492,513 priority patent/US10398898B2/en\n\n2017-10-02 Assigned to GOOGLE LLC reassignment GOOGLE LLC CHANGE OF NAME (SEE DOCUMENT FOR DETAILS). Assignors: GOOGLE INC.\n\n2017-12-26 Priority to US15/854,208 priority patent/US10140375B2/en\n\n2018-11-09 Priority to US16/186,211 priority patent/US11135426B2/en\n\n2018-11-09 Priority to US16/186,129 priority patent/US11147970B2/en\n\n2018-11-09 Priority to US16/186,168 priority patent/US11369792B2/en\n\n2022-05-09 Priority to US17/740,024 priority patent/US11420059B1/en\n\n2022-05-09 Priority to US17/740,034 priority patent/US11547853B2/en\n\nStatus Active legal-status Critical Current\n\n2025-01-14 Adjusted expiration legal-status Critical\n\nLinks\n\nUSPTO\n\nUSPTO PatentCenter\n\nUSPTO Assignment\n\nEspacenet\n\nGlobal Dossier\n\nDiscuss\n\nImages\n\nClassifications\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/90—Details of database functions independent of the retrieved data types\n\nG06F16/95—Retrieval from the web\n\nG06F16/953—Querying, e.g. by the use of web search engines\n\nG06F16/9535—Search customisation based on user profiles and personalisation\n\nA—HUMAN NECESSITIES\n\nA61—MEDICAL OR VETERINARY SCIENCE; HYGIENE\n\nA61N—ELECTROTHERAPY; MAGNETOTHERAPY; RADIATION THERAPY; ULTRASOUND THERAPY\n\nA61N1/00—Electrotherapy; Circuits therefor\n\nA61N1/18—Applying electric currents by contact electrodes\n\nA61N1/32—Applying electric currents by contact electrodes alternating or intermittent currents\n\nA61N1/36—Applying electric currents by contact electrodes alternating or intermittent currents for stimulation\n\nA61N1/36003—Applying electric currents by contact electrodes alternating or intermittent currents for stimulation of motor muscles, e.g. for walking assistance\n\nA—HUMAN NECESSITIES\n\nA61—MEDICAL OR VETERINARY SCIENCE; HYGIENE\n\nA61N—ELECTROTHERAPY; MAGNETOTHERAPY; RADIATION THERAPY; ULTRASOUND THERAPY\n\nA61N1/00—Electrotherapy; Circuits therefor\n\nA61N1/18—Applying electric currents by contact electrodes\n\nA61N1/32—Applying electric currents by contact electrodes alternating or intermittent currents\n\nA61N1/36—Applying electric currents by contact electrodes alternating or intermittent currents for stimulation\n\nA61N1/36014—External stimulators, e.g. with patch electrodes\n\nA61N1/36017—External stimulators, e.g. with patch electrodes with leads or electrodes penetrating the skin\n\nA—HUMAN NECESSITIES\n\nA61—MEDICAL OR VETERINARY SCIENCE; HYGIENE\n\nA61N—ELECTROTHERAPY; MAGNETOTHERAPY; RADIATION THERAPY; ULTRASOUND THERAPY\n\nA61N1/00—Electrotherapy; Circuits therefor\n\nA61N1/18—Applying electric currents by contact electrodes\n\nA61N1/32—Applying electric currents by contact electrodes alternating or intermittent currents\n\nA61N1/36—Applying electric currents by contact electrodes alternating or intermittent currents for stimulation\n\nA61N1/36014—External stimulators, e.g. with patch electrodes\n\nA61N1/36021—External stimulators, e.g. with patch electrodes for treatment of pain\n\nA—HUMAN NECESSITIES\n\nA61—MEDICAL OR VETERINARY SCIENCE; HYGIENE\n\nA61N—ELECTROTHERAPY; MAGNETOTHERAPY; RADIATION THERAPY; ULTRASOUND THERAPY\n\nA61N1/00—Electrotherapy; Circuits therefor\n\nA61N1/18—Applying electric currents by contact electrodes\n\nA61N1/32—Applying electric currents by contact electrodes alternating or intermittent currents\n\nA61N1/36—Applying electric currents by contact electrodes alternating or intermittent currents for stimulation\n\nA61N1/3605—Implantable neurostimulators for stimulating central or peripheral nerve system\n\nA61N1/36057—Implantable neurostimulators for stimulating central or peripheral nerve system adapted for stimulating afferent nerves\n\nA—HUMAN NECESSITIES\n\nA61—MEDICAL OR VETERINARY SCIENCE; HYGIENE\n\nA61N—ELECTROTHERAPY; MAGNETOTHERAPY; RADIATION THERAPY; ULTRASOUND THERAPY\n\nA61N1/00—Electrotherapy; Circuits therefor\n\nA61N1/18—Applying electric currents by contact electrodes\n\nA61N1/32—Applying electric currents by contact electrodes alternating or intermittent currents\n\nA61N1/36—Applying electric currents by contact electrodes alternating or intermittent currents for stimulation\n\nA61N1/3605—Implantable neurostimulators for stimulating central or peripheral nerve system\n\nA61N1/3606—Implantable neurostimulators for stimulating central or peripheral nerve system adapted for a particular treatment\n\nA61N1/36071—Pain\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/90—Details of database functions independent of the retrieved data types\n\nG06F16/95—Retrieval from the web\n\nG06F16/953—Querying, e.g. by the use of web search engines\n\nG06F16/9536—Search customisation based on social or collaborative filtering\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/90—Details of database functions independent of the retrieved data types\n\nG06F16/95—Retrieval from the web\n\nG06F16/953—Querying, e.g. by the use of web search engines\n\nG06F16/9538—Presentation of query results\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/90—Details of database functions independent of the retrieved data types\n\nG06F16/95—Retrieval from the web\n\nG06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking\n\nG06F16/972—Access to data in other repository systems, e.g. legacy data or dynamic Web page generation\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORYÂ PURPOSES, NOT OTHERWISE PROVIDED FOR\n\nG06Q30/00—Commerce\n\nG06Q30/02—Marketing; Price estimation or determination; Fundraising\n\nG06Q30/0201—Market modelling; Market analysis; Collecting market data\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORYÂ PURPOSES, NOT OTHERWISE PROVIDED FOR\n\nG06Q30/00—Commerce\n\nG06Q30/02—Marketing; Price estimation or determination; Fundraising\n\nG06Q30/0241—Advertisements\n\nY—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS\n\nY10—TECHNICAL SUBJECTS COVERED BY FORMER USPC\n\nY10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS\n\nY10S707/00—Data processing: database and file management or data structures\n\nY10S707/99931—Database or file accessing\n\nY10S707/99933—Query processing, i.e. searching\n\nY—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS\n\nY10—TECHNICAL SUBJECTS COVERED BY FORMER USPC\n\nY10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS\n\nY10S707/00—Data processing: database and file management or data structures\n\nY10S707/99941—Database schema or data structure\n\nY10S707/99943—Generating database or data structure, e.g. via user interface\n\nY—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS\n\nY10—TECHNICAL SUBJECTS COVERED BY FORMER USPC\n\nY10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS\n\nY10S707/00—Data processing: database and file management or data structures\n\nY10S707/99941—Database schema or data structure\n\nY10S707/99944—Object-oriented database structure\n\nY10S707/99945—Object-oriented database structure processing\n\nDefinitions\n\nthe present invention relates generally to methods and systems for network searching.\n\nthe present invention relates particularly to methods and systems for personalized network searching.\n\nbookmarks In general, most page visits on the World Wide Web are revisits; in other words, the user is returning to a web page previously visited.\n\nsearch engines have improved, many users have turned to search engines for navigating to often-visited sites, rather than typing in uniform resource locators (URLs) or using browser bookmarks.\n\na search engine performs the search based on a conventional search method. For example, one known method, described in an article entitled âThe Anatomy of a Large-Scale Hypertextual Search Engine,â by Sergey Brin and Lawrence Page, assigns a degree of importance to a document, such as a web page, based on the link structure of the web page.\n\nBookmarks can provide a benefit to the user.\n\na common use of bookmarks is for navigation to sites that search engines (such as the GoogleTM Search Engine) do not rank highly or that are otherwise hard to find via a search query.\n\nbookmarks that the user continues to use are a valuable resource for the user.\n\nAn Internet user often has difficulty propagating bookmarks between the various machines on which the user depends. For example, many users have a computer at work and at home. Often, the bookmarks relied on in the work setting are useful at home as well. In most cases, however, the user must manually synchronize the bookmark lists of the two machines. In addition, conventional methods of organizing bookmarks tend to be limited at best, making it difficult for the user to find a favorite site.\n\nSome users have attempted to solve the propagation problem by using a commercial product that allows the user to store bookmarks on a server on the web, such as BlinkPro (Blink.com, Inc.; www.blinkpro.com) or BookmarkTracker (BookmarkTracker.com, Inc.; www.bookmarktracker.com).\n\nBlinkPro Blink.com, Inc.; www.blinkpro.com\n\nBookmarkTracker BookmarkTracker.com, Inc.; www.bookmarktracker.com\n\nSuch products allow the bookmarks to be managed and utilized from a browser application.\n\nthe user can also automatically synchronize each of the user's computers to the common list stored on-line. While storing the bookmarks on-line addresses the propagation problem, such systems fail to address the organizational problems inherent in conventional bookmarks.\n\nbookmark-related software products provide the user with functionality to facilitate the use of bookmarks.\n\nsystems and methods for automatically organizing bookmarks on a client machine, searching previously-stored bookmarks by keyword, and integrating the back, history, and bookmark functions to improve the user's ability to visit previously visited sites have been described (see, e.g., Integrating Back, History and Bookmarks in Web Browsers , Kaasten, S. and Greenberg, S. (2001), In Extended Abstracts of the ACM Conference of Human Factors in Computing Systems (CHI'01), 379-380, ACM Press.).\n\nThese tools do not effectively leverage the user's preferences to provide personalized search results.\n\nEmbodiments of the present invention provide systems and methods for personalized network searching.\n\na search engine implements a method comprising receiving a search query, determining a personalized result by searching a personalized search object using the search query, determining a general result by searching a general search object using the search query, and providing a search result for the search query based at least in part on the personalized result and the general result.\n\nAn embodiment of the present invention may utilize ratings, annotations, history of use, or other data associated with the previously-identified uniform resource locator to locate and sort results.\n\nFIG. 1 is a block diagram illustrating an exemplary environment in which one embodiment of the present invention may operate\n\nFIG. 2 is a flowchart, illustrating a method for storing bookmarks, ratings, and annotations in an embodiment of the present invention\n\nFIG. 3 is a flowchart illustrating a method of performing a network search in one embodiment of the present invention.\n\nFIG. 4 is a flowchart illustrating a process of implicitly rating a page in one embodiment of the present invention.\n\nEmbodiments of the present invention comprise methods and systems for personalized network searching.\n\na search engine combines search results obtained from a global index or global indexes with those retrieved from a list of a user's favorite sites to produce a combined search result set.\n\nthe combined result set may be sorted, marked, or otherwise used based on the user's preferences.\n\nSuch an embodiment may provide the user with a mechanism to perform searches and visit favorite sites from one interface.\n\nFIG. 1 is a block diagram illustrating an exemplary environment for implementation of an embodiment of the present invention.\n\nthe system 100 shown in FIG. 1 includes multiple client devices 102 a - n in communication with a server device 104 over a network 106 .\n\nthe network 106 shown includes the Internet. In other embodiments, other networks, such as an intranet may be used. Moreover, methods according to the present invention may operate within a single computer.\n\nthe processor 110 executes computer-executable program instructions stored in memory 108 .\n\nSuch processors may include a microprocessor, an ASIC, and state machines.\n\nSuch processors include, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein.\n\nEmbodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 110 of client 102 a , with computer-readable instructions.\n\nsuitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read instructions.\n\nvarious other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless.\n\nthe instructions may comprise code from any computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Perl, and JavaScript.\n\nClient devices 102 a - n may also include a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display, or other input or output devices.\n\nclient devices 102 a - n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices.\n\na client device 102 a may be any type of processor-based platform that is connected to a network 106 and that interacts with one or more application programs.\n\nClient devices 102 a - n may operate on any operating system capable of supporting a browser or browser-enabled application, such as MicrosoftÂ® WindowsÂ® or Linux.\n\nthe client devices 102 a - n shown include, for example, personal computers executing a browser application program such as Microsoft Corporation's Internet ExplorerTM, Netscape Communication Corporation's Netscape NavigatorTM, and Apple Computer, Inc.'s SafariTM.\n\na server device 104 is also coupled to the network 106 .\n\na user 112 a - n generates a search query 114 at a client device 102 a .\n\nthe client device 102 a transmits the query 114 the server device 104 via the network 106 .\n\na user 112 a types a textual search query into a query field of a web page of a search engine interface or other client-side software displayed on the client device 102 a , which is then transmitted via the network 106 to the server device 104 .\n\na user 112 a inputs a search query 114 at a client device 102 a , which transmits an associated search query signal 130 reflecting the search query 114 to the server device 104 .\n\nthe search query 114 may be transmitted directly to the server device 104 as shown.\n\nthe query signal 130 may instead be sent to a proxy server (not shown), which then transmits the query signal 130 to server device 104 .\n\nOther configurations are possible.\n\nthe server device 104 shown includes a server executing a search engine application program, such as the GoogleTM search engine. Similar to the client devices 102 a - n , the server device 104 shown includes a processor 116 coupled to a computer-readable memory 118 .\n\nServer device 104 depicted as a single computer system, may be implemented as a network of computer processors. Examples of a server device 104 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices.\n\nClient processor 110 and the server processor 116 can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.\n\nMemory 118 contains the search engine application program, also known as a search engine 120 .\n\nthe search engine 120 locates relevant information in response to a search query 114 from a user 112 a - n.\n\nthe server device 104 has previously performed a crawl of the network 106 to locate articles, such as web pages, stored at other devices or systems connected to the network 106 , and indexed the articles in memory 118 another data storage device.\n\nArticles include, for example, web pages of various formats, such as HTML, XML, XHTML, Portable Document Format (PDF) files, and word processor, database, and application program document files, audio, video, or any other documents or information of any type whatsoever made available on a network (such as the Internet), a personal computer, or other computing or storage means.\n\nPDF Portable Document Format\n\nthe embodiments described herein are described generally in relation to HTML files or documents, but embodiments may operate on any type of article, including any type of image.\n\nthe search engine 120 also searches a user's list of favorite sites, which personalizes the search.\n\na user's list of favorite sites may be saved as a list of bookmarks.\n\nBookmarks are objects that include a uniform resource locator (URL) identified by a user.\n\na bookmark may be referred to by different terms in different applications. For example, MicrosoftÂ® products often refer to bookmarks as âfavorites.â\n\nthe server device 122 shown Similar to the client devices 102 a - n and the server device 104 , the server device 122 shown includes a processor 124 coupled to a computer-readable memory 126 .\n\nserver device 122 depicted as a single computer system, may be implemented as a network of computer processors or may be incorporated into the server device 104 .\n\nExamples of a server device 122 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices.\n\nMemory 126 contains the bookmark manager application program, also known as a bookmark manager 128 .\n\nthe bookmark manager 128 is a C++ program, however, the bookmark manager 128 may be constructed from various other programming languages as well.\n\nthe bookmark manager 128 comprises an interface so that a user 112 a may manage bookmarks on the server.\n\nthe bookmark manager 128 provides a browser-based application that allows the user to create, modify, delete, and save bookmarks on the network.\n\nthe application may comprise, for example, HTML and JavaScript, an ActiveX component, or a Java applet.\n\nthe bookmarks are saved in the bookmark database 140 .\n\nthe bookmark manager 128 also provides the data stored in the bookmark database 140 to the search engine 120 .\n\nthe search engine 120 When the search engine 120 performs a search in response to the query search query signal 130 , the search engine 120 searches previously indexed articles. The search engine 120 also creates a bookmark request 136 , corresponding to user 112 a . The bookmark manager 128 responds by sending one or more bookmarks 138 to the search engine 120 . The search engine 120 utilizes the bookmarks 138 to search sites previously identified by the user 112 a . The search engine then merges the results of the two searches to provide a result set 134 to the client 102 a.\n\nserver device 104 and server device 122 may comprise a single physical or logical server.\n\nthe system 100 shown in FIG. 1 is merely exemplary, and is used to explain the exemplary methods shown in FIGS. 2 through 4 .\n\na user 112 a can track their conventional browser bookmarks using server-side storage. These bookmarks can then be made available to the user on all the various computers the user uses and can be integrated with browser bookmarks and with the browser (e.g., via a toolbar).\n\na user's set of bookmarks can be primed on a server by having the user POST their bookmarks file to the server, and the user can be permitted to download the bookmarks as a bookmarks file or other related representation.\n\nclient-side software may implicitly manage the server-side storage.\n\nthe bookmarks may comprise a continuous user rating, e.g., 0.0-1.0, rather than just a discrete bookmarked-or-not bit.\n\na user can integrate per-page annotations into their data regarding bookmarks or favorites.\n\na user can store multiple user personalities (e.g., previously defined sets of bookmarks) and can receive recommendations based on the set of bookmarks saved by users with similar tastes as derived by their bookmarks or other stored or monitored preferences.\n\na user 112 a enters a search query 114 , which a client 102 a transmits as a query signal 130 to a server device 104 over a network 106 .\n\nthe server device 104 executes a search engine 120 .\n\nthe search engine 120 receives the query signal 130 .\n\nthe search engine 120 determines a personalized result by searching a personalized search object using the search query. Examples of a personalized search object include, for example, a list of bookmarks or favorites and the history list of a browser.\n\nthe search engine 120 also determines a general search result by searching a general search object.\n\nthe general search object may comprise, for example, an index of articles, such as, for example, those associated with a conventional search engine.\n\nthe search engine 120 provides a search result to the user based at least in part on the personalized result and the general result. In another embodiment, the search engine 120 provides a search result to the user based solely on the personalized result.\n\nthe search engine 120 may generate the search result by combining the general results and the personalized results.\n\nthe search engine may instead provide separate lists: one containing the general search result and a second containing the personalized search result.\n\nthe search engine 120 transmits the search result as a result set 134 to the client 102 a.\n\nthe search engine 120 returns the list sorted as in a conventional search engine and with the personalized search results indicated in some way, such as, for example, highlighted or shown with a symbol beside the personalized search result.\n\nthe search engine sorts the combined results list based at least in part on a rating that the user 112 a has associated with the uniform resource locator.\n\nthe results may be sorted in a number of ways.\n\nthe combined results list is sorted based at least in part on an annotation or rating that has been associated with the user 112 a and the uniform resource locator.\n\nthe results may instead or further be sorted based on whether the result in the combined result list originated in the global results list or in the personalized search result.\n\nthe user 112 a may wish to see their personalized results displayed at the top.\n\nthe results may be instead or further sorted based on a rating of a page provided by or created for the user 112 a .\n\nthe search engine 120 marks results that originated in the user's personalized search results.\n\na fuzzy algorithm may also be employed to sort the results.\n\nthe sorting of the combined results list may only slightly favor the personalized search result.\n\nthe results list is sorted by measures indicating user preferences. For example, if many of the user's bookmarks are computer- related, computer-related results are sorted closer to the top of the result set 134 than non-computer related results.\n\nOther operations may also be performed on the results based at least in part on user-specific information. For example, the results may be interleaved, merged where necessary or desired, presented with annotations, or presented in other ways that provide useful information to the user 112 a.\n\nAn embodiment of the present invention may comprise features to facilitate community building.\n\nthe uniform resource locator comprises a community bookmark.\n\nthe bookmark may be shared by a set of users or may be transmitted by one user and received by another. The second user can then perform personalized queries that are based, at least in part, on the shared bookmark.\n\na cluster of users is identified based at least in part on the bookmarks and annotations that they have previously identified.\n\nbookmarks are implicitly identified based on a measure of the behavior of the user.\n\nthe implicit measure comprises the linger time. In other words, if a user spends a great deal of time on a site, it is identified as a bookmark for later personalized searches.\n\nthe implicit measure may comprise at least one of the quantity of repeat visits to the site or the quantity of click-throughs on the site.\n\ntemporal decay of ratings may be utilized so that unused or rarely used bookmarks, whether explicitly marked or implicitly marked, become unmarked over time.\n\nimplicit measures include printing the page, saving the page, and the amount of scrolling performed on the page.\n\nthe user associates a text string with a uniform resource locator (URL).\n\nthe text string may comprise, for example, a search query, a URL-format text string, or a short-hand indicator of the URL.\n\nthe client 102 a receives the personalized association data associating the text string with the URL and stores the personalized association data in a personalized search object.\n\nthe client 102 a subsequently receives an input signal comprising the search string, determines the URL associated with the text string and displays an article associated with the URL.\n\nthe article may be received from a global network element, such as a web server.\n\nFIG. 2 is a flowchart illustrating a method for storing bookmarks, ratings, and annotations in an embodiment of the present invention.\n\na user 112 a navigates to a site by typing in a URL or other means.\n\nthe user 112 a determines that the site is useful and that the user 112 a will revisit the site. Accordingly, the user 112 a bookmarks the site using a bookmark manager 128 .\n\nthe user 112 a may access the bookmark manager 128 in various ways.\n\nthe user 112 a accesses a client-side application via a built-in user-interface element or one available via a toolbar or other available plug-in in a browser executing on the client 102 a .\n\nthe button causes a popup window to be displayed in which the user enters an annotation and rating.\n\nthe user clicks a submit button the information is submitted to the bookmark manager 128 for storage as a bookmark in the bookmark database 140 .\n\nthe bookmark manager 128 first receives a valid user identifier (ID) 202 from the client 102 a .\n\nID user identifier\n\nthe bookmark manager 128 can perform the identification and authentication in numerous ways. For example, in one embodiment, the IP address is tracked throughout a session. In another embodiment, the authentication is done via a user manager system. In another embodiment, a cookie on the client 102 a may include user-identifying information, which is supplied to the bookmark manager 128 by the client 102 a.\n\nthe bookmark manager 128 then receives the URL for the site that the user identifies 204 .\n\nthe bookmark manager 128 stores the URL, its rating(s), and its annotation(s) in the bookmark database 140 for later retrieval 206 . It is likely that a user already has a set of bookmarks (or several sets of bookmarks) that they would like to make available for their searches. Accordingly, in one embodiment, the bookmark manager 128 includes a mechanism for migrating that data to the bookmark database 140 .\n\nthe hierarchy of bookmarks can be used as implicit annotations on the named URLs and can at least be preserved when synchronizing the bookmarks among browsers.\n\nthe full text of an article when it was last visited serves as an annotation of the URL.\n\nas bookmarks are edited on a supported browser's native interface the corresponding edits are made to the server-side bookmarks.\n\nthe bookmark manager 128 provides a server-side management tool via an HTML interface (which, again may mirror changes into a supported browser's native bookmarks). Synchronization of client and server-side bookmarks may increase adoption of the bookmark manager 128 if the user can at least manually synchronize server-side bookmarks into client-side browser bookmark lists.\n\nthe management tool also displays the bookmark rating for a given page and allows the user 112 a to manipulate the rating and/or an annotation associated with the page.\n\nbookmark manager 128 supports listing recently rated pages to facilitate returning to recently bookmarked pages, thus enabling a work-list like review of a surfing session.\n\nthe bookmark manager 128 also receives 208 and stores 210 an annotation of the URL in the bookmark database 140 .\n\nthe annotation is a remark that the user provides regarding the URL.\n\nthe annotation may simply be a text string stored in a database 140 and associated with the URL.\n\nthe annotation may be instead stored in a standardized format, see, e.g., Annotea: An Open RDF Infrastructure for Shared Web Annotations , J. Kahan, M. Koivunen, E. Prud'Hommeaux, and R. Swick (2001), In Proceedings of WWW10, May 1-5, 2001 Hong Kong.\n\nthe bookmark manager 128 also receives 212 and stores 214 the rating of the site provided by the user 112 a in the bookmark database 140 .\n\nthe user 112 a clicks a rating button.\n\nthe user 112 a is presented with a series of ten radio buttons labeled 0.0 through 1.0. The user selects one of the radio buttons and clicks submit.\n\nthe bookmark manager 128 receives the rating and the URL and saves the two data values in the bookmark database 140 .\n\nFIG. 2 is merely exemplary. In other embodiments the user may provide more or less information related to a site to the bookmark manager 128 .\n\nthe bookmark manager may receive the URL, annotation, and rating together and perform one step to store them in the bookmark database 140 .\n\nthe data stored in the bookmark database 140 may be updated fairly frequently as pages are bookmarked (or the bookmark is toggled, or a rating slider is changed).\n\nFIG. 3 is a flowchart illustrating a method of performing a network search in one embodiment of the present invention.\n\nEmbodiments of the present invention may combine conventional network searches with, for example, personalized searches utilizing information provided by the user previously or in conjunction with the submission of the search.\n\nthe search engine 120 receives a query signal 130 from a client ( 102 a ) 302 .\n\nthe search engine 120 responds to the query signal 130 by performing a search.\n\nthe search comprises three sub-processes, which may be run in parallel. These three processes comprise: searching global indices 304 , searching the URLs stored as bookmarks 306 , and searching annotations 308 .\n\nOther embodiments may employ a fewer or greater number of sub-processes. For example, in one embodiment, the URLs present in the navigation history of the browser are searched.\n\nEmbodiments of the present invention are also capable of searching personal search objects, such as bookmarks, annotations, ratings, and other objects.\n\nsearching comprises reading a list of URLs from the bookmark database 140 , and for each page, searching the various parts of the page using the search query 114 submitted by the user 112 a .\n\nan agent operating on the client 102 a searches a personal search object stored on the client 102 a or in a repository accessible to the client 102 a via the network 106 .\n\nSearching annotations comprises searching the user-entered annotations using the search query 114 submitted by the user 112 a .\n\na user 112 a may enter the term âboatâ as an annotation for a page comprising marine supplies. If the users 112 a enters âboatâ as part of the search query 114 utilized by the search engine 120 , the page with the âboatâ annotation will be returned by the search annotations component.\n\nAnother embodiment of the present invention searches not only the pages that the user has bookmarked or annotated, but also pages similar to the pages that the user has bookmarked or pages with similar annotations.\n\nEach of the sub-processes 304 , 306 , and 308 may generate a separate result set in the embodiment shown. In other embodiments, the sub-processes 304 , 306 , and 308 may be combined and/or configured to provide a combined result set automatically. The result sets may overlap to some degree.\n\nthe search engine 120 merges the search results into one list 310 . The search engine 120 then ranks the pages 312 . Various methods may be utilized to rank the pages. For example, the search engine 120 may rank results returned via annotation based on their user-based ratings, if any, then per the standard ranking algorithm. Several examples are set out below. The search engine 120 then provides a sorted result set 134 to the user 112 a requesting the search 314 .\n\nthe user supplies an annotation that is associated with a URL.\n\nthe annotation is stored on a per-user basis to supplement the search results and to further improve scoring. Other users who share similar interests with the user who provided the annotation may use the annotation.\n\nEmbodiments of the present invention may make further use of the annotation.\n\nthe search engine 120 searches for the keywords provided in a search query 114 in user-supplied annotations, e.g., treating those annotations as user-specific anchor text that refer to the annotated URL.\n\nthe result set generated by a search engine in one such embodiment reflects the union of the global index and the results from the annotation keyword search.\n\nEmbodiments may also utilize other data, such as user ratings to determine the ranking of the results, to mark the results, or for other purposes.\n\nthe page rankings that the search engine 120 provides are not affected by the user-supplied ratings for each page, but an indicator, such as an asterisk or other small image, identifies specific results that are rated based on ratings data stored in the bookmark database 140 .\n\nEmbodiments of the present invention may combine the results of several types of results, or may present the results separately.\n\na user 112 a submits a search query 114 .\n\nthe search engine 120 searches a global search object and presents the results in one list.\n\nthe search engine 120 also searches a personal search object and presents the results of the search in a second list.\n\nthe search engine 120 also uses a user-applied rating to rank the pages. For example, a user 112 a applies a rating (e.g., between 0.0 and 10.0) to each of the bookmarks stored in the bookmark database 140 .\n\nthe search engine 120 utilizes the user-applied rating in determining where in the result set 134 a particular article should be displayed. For example, a rating of 0.5 might represent indifference, and lower ratings would penalize a result while higher ratings would make it score higher.\n\nthe search engine 120 more highly scores unrated pages that are similar to the content of highly rated URLs.\n\nthe search engine 120 may provide additional related features such as page suggestions based on similar users'ratings, e.g., via simple clustering approaches.\n\nthe term or alternate URL associated with the primary URL is a distinct token in the personalized search that indicates a desire of the user not to search for the term or navigate to the alternate URL, as would be the case in a conventional browser application, but instead to immediately go directly to a specific page that is associated with the term or alternate URL for the user 112 a.\n\na user 112 a associates a specific term or alternate URL with a primary URL, such as the URL associated with a previously-stored bookmark in the bookmark database 140 .\n\na primary URL such as the URL associated with a previously-stored bookmark in the bookmark database 140 .\n\nthe user 112 a may enter a term in one text box and a URL in another text box and then click a button to associate the two.\n\nthe association is then stored in a computer-readable medium on the client machine 102 a or in a computer-readable medium accessible by a server 104 , such as in the bookmark database 140 .\n\nthe term or alternate URL becomes a âspeed-dialâ navigation link to the URL.\n\nthe user 112 a enters the term in a query search box and clicks a link or control, such as a standard search link or button, and, rather than performing a search for the term using a search engine, the browser or browser-enabled application retrieves the URL previously associated with the term and immediately jumps to the site associated with the URL.\n\na keyboard binding causes the browser to jump to the site associated with the URL.\n\nthe command by the user 112 a causes a behavior to occur that is personalized to the user as opposed to the conventional query behavior common to all users of the search engine. In other words, no search is performed; the browser simply navigates to the URL associated with the term in lieu of performing the search.\n\nthe user 112 a enters the alternate URL in the address field of the browser and clicks the âgoâ control or otherwise causes the browser to evaluate the alternate URL. Rather than navigating to the URL, the browser first searches for the alternate URL in the list of URL's associated with bookmarks. If the alternate URL is found, the browser navigates directly to the primary URL that is associated with the alternate URL.\n\na user 112 a associates the term âhomeâ with the user's corporate intranet page.\n\nthe user 112 a enters the term âhomeâ in a text box and the URL for the corporate intranet page in another text box and clicks a control to associate the two.\n\nthe user 112 a enters the term âhomeâ in a search field and clicks the search control.\n\nthe browser Since the term âhomeâ has been associated with the corporate intranet homepage, the browser immediately navigates to the user's corporate intranet homepage rather than executing a search for the term âhome.â\n\nthe user 112 a may want to select terms or phrases for association that are unlikely to be used in standard searches. For example, the user 112 a may use a single number (e.g., â1â) to associate with a URL.\n\nthe user 112 a associates the alternate URL âwww.myhome.comâ with the actual or primary URL for the user's 112 a personal homepage.\n\nthe browser locates the association between the alternate and primary URL's and navigates to the page identified by the primary URL, the user's personal home page.\n\nAn embodiment of the present invention may provide various user interfaces.\n\ntwo distinct user interfaces are provided: one for novice users and one for advanced users.\n\nthe novice interface may simply give visual feedback about whether a page is bookmarked or not and permits the user to toggle that state with a simple click.\n\nthe richer, advanced-user interface may utilize a slider control reflecting a rating for the current page and a personality-mode (e.g., work/home/hobby) drop-down box that switches among different rating sets.\n\nAnother embodiment includes an intermediate-level interface that includes a bookmark (vote positive) and a booknegate (vote negative) button (not unlike the voting buttons as part of the advanced features of some search toolbars, such as the Google Toolbar).\n\na user interface according the present invention may also include a personalized result page that includes a visual indication of a result that was reordered due to personalization.\n\nthe user interface includes a means for toggling the personalization of results. For example, in one embodiment, the user clicks a button on the HTML interface to turn on personalization. If personalization is active, the user may click a button disabling personalization.\n\nSuch a feature addresses the need to depersonalize results before sharing a query result links with other users (e.g., via email).\n\nbookmark manager 128 may support a âRank these resultsâ link that lets advanced users select a rating (perhaps using radio buttons) for each result on a given page. Because of privacy concerns, bookmark manager 128 may disallow access to âView bookmarksâ to not-logged-in users; nevertheless, search results may be appropriately personalized based on just the cookie of not-logged-in users.\n\nEmbodiments of the present invention implement various measures to help encourage user adoption. For example, although not all users may be willing to expend the effort to provide ratings, an embodiment of the present invention provides noticeable benefits for relatively low effort on the part of the user. In addition, by incorporating bookmark synchronization, an embodiment of the present invention helps drive adoption.\n\nEmbodiments of the present invention may also implement network and community features to foster adoption of the service. For example, as described above, an embodiment of the present invention may utilize like-user recommendations to locate and rank results.\n\nOne embodiment of the present invention implements user groups and friend-lists whereby a user can choose to expose a bookmark list to friends or the public at large.\n\na user has the ability to transparently overlay a weighted set of bookmarks onto their own set of bookmarks.\n\nAn organization implementing an embodiment of the present invention may utilize partnerships to encourage adoption of the service.\n\na service provider may encourage partner sites to display a âbookmark this page!â snippet on their homepages and other content pages.\n\nan embodiment of the present invention provides a means to ask users to opt-in to making it especially easy to get at their site via a search. And for users it's a nice reminder to mark the page or add an annotation.\n\nthe provider of the bookmark and search service such an arrangement helps introduce users to the idea of bookmarks at the moment it matters most: when they are visiting a page they are interested in. It may be advantageous to (e.g., for security reasons) to have partners wishing to display a âbookmark this page!â link to register with the service provider first. Registration with the service provider also helps the service provider to develop relationships with additional content providers.\n\na provider of a bookmark service may receive various benefits from implementing the service. For example, the provider is able to collect data concerning users' attribution of value on pages.\n\nOne embodiment of the present invention utilizes an anti-spamming mechanism to avoid the problem of companies with a financial interest in driving traffic to their sites attempting to falsify end user interest in their pages.\n\nthe search engine 120 addresses this problem by not trusting the bookmark signal globally, but leveraging it only for user personalization.\n\nthe bookmark manager employs credit card validation (for identification only) and/or CAPTCHAs (Completely Automated Public Turing Test to Tell Computers and Humans Apart) to gain evidence that bookmark manager 128 is interacting with a legitimate user.\n\nAn embodiment of the present invention may provide other features as well.\n\none embodiment provides collaborative link recommendations. When logged in, a user 112 a is provided a link with anchor text, such as âSee related bookmarks for users similar to you.â\n\nthe linked page provides other suggested links that may be of interest to the user 112 a . This feature may be integrated into or separate from the main results page.\n\nAn embodiment of the present invention may provide useful information to the provider of the bookmark service. For example, for sites that users visit most frequently, client-side bookmarks are often the tools of choice. An unfortunate consequence is that those page visits are largely hidden from the provider of a search service. With bookmarks being used as a navigational tool according to the present invention, the service provider has access to the previously unavailable data and may be better equipped to provide user-personalized portals. For example, pattern recognition might let the service provider realize that a user visit various stock quotes every Monday morning, checks CNN.com in the afternoons, etc. In such an embodiment, the search engine 120 may anticipate the pages that users will likely require.\n\nAn embodiment of the present invention may also improve the relevance of advertisements presented in conjunction with search results.\n\none embodiment of the present invention is able to use bookmarks to cluster user interests and leverage click-through data of various advertisements for similar users to present even more relevant advertisements.\n\nthe advertisements are based, at least in part, on the search results returned based on the bookmarks or other personal search object. This feature provides numerous benefits. Not only are users more likely to be satisfied because the advertising is more targeted, but the click-through rate for the service provider may increase, resulting in increased revenue.\n\na user may share or overlay bookmarks.\n\na user is able to open up their bookmarks for others to view.\n\na user is able to aggregate other users' bookmarks into their own set of bookmarks (either via copying or via an overlaid reference semantics).\n\nSuch a feature may prove useful for community building (e.g., âAdd this group's bookmarks to your favoritesâ when joining a new mailing list).\n\nthe bookmark indicators in results pages distinguish between those pages explicitly bookmarked by the user from those gathered by others.\n\nthe service provider Given a canonical URL through which to reference another individual/organization's bookmarks, the service provider can derive a sense of the popularity of a person's links and weight those bookmarks correspondingly (a la PageRank applied to the subgraph of bookmark interlinks).\n\nOne embodiment of the present invention fosters community and relationship building.\n\nthe search engine is able to recognize clusters or pairs of users having similar interests. Such an embodiment is able to suggest other users with which to network.\n\nAn embodiment of the present invention may include various other features as well. For example, in one embodiment, linger time and/or repeat visits is used to implicitly bookmark a page. Other implicit measures, such as the ones described above, may also be utilized.\n\na toolbar slider may start inching to the right as you view a given page (and should attempt to alert the user that the change has occurred, perhaps by flashing). The user explicitly dragging the slider would override the setting (and turn off the implicit rating improvement for this visit to the site).\n\nFIG. 4 is a flowchart illustrating a process of implicitly rating a page in one embodiment of the present invention.\n\nthe bookmark manager 128 receives a URL 402 .\n\nthe bookmark manager 128 determines whether or not the URL has been saved as a in the bookmark database 140 as a bookmark 403 . If so, the process ends 414 . Otherwise, the bookmark manager 128 determines whether this is a first visit by the user to the URL 404 . If so, the bookmark manager adds the bookmark to the bookmark database 140 and sets the rating equal to 0.5 408 . The process then ends 414 .\n\nthe bookmark manager 120 does not identify the URL as a bookmark, but merely adds an entry to maintain the rating of the site.\n\nthe bookmark manager 128 adds 0.05 to the value of the rating 406 . Once the rating has been set or adjusted, the bookmark manager 128 determines whether the rating is greater than or equal to 0.7 410 .\n\nthe value 0.7 is a threshold for implicitly creating a bookmark and may be adjusted in various embodiments. If the value is greater than or equal to 0.7, the bookmark manager 128 marks the URL as a favorite in the bookmark database ( 140 ) 412 . The process then ends 414 . If the value is less than 0.7, the process ends, and the bookmark is not added to the bookmark database 140 .\n\nAnother embodiment of the present invention utilizes linger time in addition to or instead of page visits for implicitly bookmarking pages.\n\nAn embodiment of the present invention may use the ratings, annotations, or any other data in presenting search results.\n\nthe data is used to sort or mark search results shown to a user 112 a .\n\nthe data is used to exclude search results from those shown to the user.\n\nEmbodiments of a rating process according to the present invention may provide other features as well.\n\none embodiment provides the capability to search previously stored bookmarks as a completely separate search experience rather than integrating the results into the basic results page.\n\nthe interface on the client 102 a presents the user with two checkboxes. By checking the first checkbox, the user 112 a specifies that the search engine 120 should search global indices. By checking the second checkbox, the user 112 a specifies that the search engine 120 should search the user's bookmarks.\n\nthe user 112 a is able to vary the search based on the particular type of search that the user 112 a wishes to perform.\n\nhits due to indexed annotations are presented separately at the top, and hits due to results that were otherwise found are marked in their usual ranking position and may also be shown at the top.\n\nthe links presented at the top of the result set 134 may not include snippets.\n\nembodiments of the present invention may require users to opt-in to the tracking.\n\nthe system alerts the user when personalized search is in effect and provides a simple mechanism for reverting to generic search.\n\nbookmark data may be stored in a secure data center separate from a user's other personal data.\n\nmarking of pages of interest and non-interest is provided via JavaScript bookmarklets.\n\nOne such embodiment displays the user-specified ranking (if any) by usurping the PageRank display to be user-specific. The color changes when the bookmark rating exceeds the mark threshold (0.7 in FIG. 3 ).\n\na user interface in another embodiment, the user is provided with a simple user interface for adding an annotation for an arbitrary page, such as via a new menu option in the toolbar's Info drop-down or via a star button in the browser or a toolbar or a plug-in of the browser.\n\nthe bookmarked or booknegated pages in results sets are displayed and the bookmarks and booknegates may be edited directly in the results list.\n\nclient 102 a transmits query signal 130 to the server device 104 executing the search engine 120 .\n\nthe server device 122 executing the bookmark manager 128 may receive queries directly.\n\nseven queries are defined to retrieve and/or save various pieces of data.\n\nthe user identifier is provided as a primary identifier.\n\na user provides a rating of a page.\n\nthe rating may be a simple yes/no or up/down rating or may include a rating across a scale.\n\nthe response may just be the new bookmark rating (for example, as an ASCII-encoded integer).\n\nthe rating may be boosted or dropped slightly along a scale.\n\na query information for new pages visited by the user is requested.\n\nSuch a query may include a features parameter, which may be extended to explicitly ask for bookmark ratings.\n\nthe response may be something like: âRank 13 1:1:8.â\n\na bare bookmark rating is requested for a set of documents.\n\nthe URLLIST is a list of URLS, separated by spaces, re-urlencoded, and DocIds is a space-separated list of docids, url-encoded. Results for all of these are returned, one per line.\n\nan annotation for a URL is requested.\n\nthe server when the URL is not specified, the server returns a list of URLs that have bookmark annotations in a HTML user interface that permits a user to view and edit those annotations.\n\na fifth query transmits a list of bookmarks to a server.\n\na bookmark POST acceptor is as follows: POST /set-bookmarks.\n\nthe POST-data may have a Content-Type of âtext/htmlâ and be a favorites list represented in HTML, for example, in the format Microsoft Internet ExplorerTM exports.\n\na sixth query provides a means to get a full bookmark list in XML format.\n\nOne such query is as follows: GET /get-bookmarks.xml.\n\na seventh query provides a means for searching an annotation and returning URLs or Docids that match the query terms provided in the query.\n\nEmbodiments of the present invention provide numerous advantages to the user and to the provider of the search service.\n\nAn embodiment of the present invention improves the user experience by providing personalized search results and rankings.\n\nAn embodiment of the present invention provides advantages to the provider of a search service by (1) increasing the stickiness of the search experience by giving users a compelling reason to identify themselves and share their interest in topics with the provider, and (2) gathering better data regarding the relevancy of pages to different users and different classes of users.\n\nthe user providing bookmarks to the service provider enables the search provider to personalize the search for them.\n\nthe feature can be viewed as a server-side generalization of bookmarks integrated with annotations. Users are able to share that personalization data across different browsers (e.g., work and home) if desired and hence eliminate the drudgery associated with managing bookmarks.\n\nAn embodiment of the present invention also unifies all navigational queries under a single experience.\n\nLandscapes\n\nEngineering & Computer Science (AREA)\n\nHealth & Medical Sciences (AREA)\n\nDatabases & Information Systems (AREA)\n\nTheoretical Computer Science (AREA)\n\nBusiness, Economics & Management (AREA)\n\nGeneral Physics & Mathematics (AREA)\n\nPhysics & Mathematics (AREA)\n\nLife Sciences & Earth Sciences (AREA)\n\nData Mining & Analysis (AREA)\n\nAccounting & Taxation (AREA)\n\nStrategic Management (AREA)\n\nFinance (AREA)\n\nDevelopment Economics (AREA)\n\nGeneral Engineering & Computer Science (AREA)\n\nAnimal Behavior & Ethology (AREA)\n\nRadiology & Medical Imaging (AREA)\n\nVeterinary Medicine (AREA)\n\nPublic Health (AREA)\n\nBiomedical Technology (AREA)\n\nNuclear Medicine, Radiotherapy & Molecular Imaging (AREA)\n\nGeneral Health & Medical Sciences (AREA)\n\nEntrepreneurship & Innovation (AREA)\n\nNeurology (AREA)\n\nGeneral Business, Economics & Management (AREA)\n\nMarketing (AREA)\n\nEconomics (AREA)\n\nGame Theory and Decision Science (AREA)\n\nPain & Pain Management (AREA)\n\nBiophysics (AREA)\n\nHeart & Thoracic Surgery (AREA)\n\nNeurosurgery (AREA)\n\nPhysical Education & Sports Medicine (AREA)\n\nInformation Transfer Between Computers (AREA)\n\nInformation Retrieval, Db Structures And Fs Structures Therefor (AREA)\n\nAbstract\n\nSystems and methods for personalized network searching are described. A search engine implements a method comprising receiving a search query, determining a personalized result by searching a personalized search object using the search query, determining a general result by searching a general search object using the search query, and providing a search result for the search query based at least in part on the personalized result and the general result. The search engine may utilize ratings or annotations associated with the previously identified uniform resource locator to locate and sort results.\n\nDescription\n\nFIELD OF THE INVENTION\n\nThe present invention relates generally to methods and systems for network searching. The present invention relates particularly to methods and systems for personalized network searching.\n\nBACKGROUND\n\nIn general, most page visits on the World Wide Web are revisits; in other words, the user is returning to a web page previously visited. As search engines have improved, many users have turned to search engines for navigating to often-visited sites, rather than typing in uniform resource locators (URLs) or using browser bookmarks. A search engine performs the search based on a conventional search method. For example, one known method, described in an article entitled âThe Anatomy of a Large-Scale Hypertextual Search Engine,â by Sergey Brin and Lawrence Page, assigns a degree of importance to a document, such as a web page, based on the link structure of the web page. As these navigational queries become increasingly common, users are able to learn which queries will take them to their favorite sites. Bookmarks, however, can provide a benefit to the user. For example, a common use of bookmarks is for navigation to sites that search engines (such as the Googleâ¢ Search Engine) do not rank highly or that are otherwise hard to find via a search query.\n\nAccordingly, bookmarks that the user continues to use are a valuable resource for the user. An Internet user often has difficulty propagating bookmarks between the various machines on which the user depends. For example, many users have a computer at work and at home. Often, the bookmarks relied on in the work setting are useful at home as well. In most cases, however, the user must manually synchronize the bookmark lists of the two machines. In addition, conventional methods of organizing bookmarks tend to be limited at best, making it difficult for the user to find a favorite site.\n\nSome users have attempted to solve the propagation problem by using a commercial product that allows the user to store bookmarks on a server on the web, such as BlinkPro (Blink.com, Inc.; www.blinkpro.com) or BookmarkTracker (BookmarkTracker.com, Inc.; www.bookmarktracker.com). Such products allow the bookmarks to be managed and utilized from a browser application. In some cases, the user can also automatically synchronize each of the user's computers to the common list stored on-line. While storing the bookmarks on-line addresses the propagation problem, such systems fail to address the organizational problems inherent in conventional bookmarks.\n\nVarious other conventional bookmark-related software products provide the user with functionality to facilitate the use of bookmarks. For example, systems and methods for automatically organizing bookmarks on a client machine, searching previously-stored bookmarks by keyword, and integrating the back, history, and bookmark functions to improve the user's ability to visit previously visited sites have been described (see, e.g., Integrating Back, History and Bookmarks in Web Browsers, Kaasten, S. and Greenberg, S. (2001), In Extended Abstracts of the ACM Conference of Human Factors in Computing Systems (CHI'01), 379-380, ACM Press.). These tools, however, do not effectively leverage the user's preferences to provide personalized search results.\n\nThus, a need exists to provide an improved system and method for providing personalized network searching.\n\nSUMMARY\n\nEmbodiments of the present invention provide systems and methods for personalized network searching. In one embodiment, a search engine implements a method comprising receiving a search query, determining a personalized result by searching a personalized search object using the search query, determining a general result by searching a general search object using the search query, and providing a search result for the search query based at least in part on the personalized result and the general result. An embodiment of the present invention may utilize ratings, annotations, history of use, or other data associated with the previously-identified uniform resource locator to locate and sort results.\n\nFurther details and advantages of embodiments of the present invention are set forth below.\n\nBRIEF DESCRIPTION OF THE FIGURES\n\nThese and other features, aspects, and advantages of the present invention are better understood when the following Detailed Description is read with reference to the accompanying drawings, wherein:\n\nFIG. 1 is a block diagram illustrating an exemplary environment in which one embodiment of the present invention may operate;\n\nFIG. 2 is a flowchart, illustrating a method for storing bookmarks, ratings, and annotations in an embodiment of the present invention;\n\nFIG. 3 is a flowchart illustrating a method of performing a network search in one embodiment of the present invention; and\n\nFIG. 4 is a flowchart illustrating a process of implicitly rating a page in one embodiment of the present invention.\n\nDETAILED DESCRIPTION\n\nEmbodiments of the present invention comprise methods and systems for personalized network searching. In one embodiment, a search engine combines search results obtained from a global index or global indexes with those retrieved from a list of a user's favorite sites to produce a combined search result set. The combined result set may be sorted, marked, or otherwise used based on the user's preferences. Such an embodiment may provide the user with a mechanism to perform searches and visit favorite sites from one interface.\n\nReferring now to the drawings in which like numerals indicate like elements throughout the several figures, FIG. 1 is a block diagram illustrating an exemplary environment for implementation of an embodiment of the present invention. The system 100 shown in FIG. 1 includes multiple client devices 102 a-n in communication with a server device 104 over a network 106. The network 106 shown includes the Internet. In other embodiments, other networks, such as an intranet may be used. Moreover, methods according to the present invention may operate within a single computer.\n\nThe client devices 102 a-n shown each includes a computer-readable medium, such as a random access memory (RAM) 108 coupled to a processor 110. The processor 110 executes computer-executable program instructions stored in memory 108. Such processors may include a microprocessor, an ASIC, and state machines. Such processors include, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein. Embodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 110 of client 102 a, with computer-readable instructions. Other examples of suitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read instructions. Also, various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless. The instructions may comprise code from any computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Perl, and JavaScript.\n\nClient devices 102 a-n may also include a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display, or other input or output devices. Examples of client devices 102 a-n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, a client device 102 a may be any type of processor-based platform that is connected to a network 106 and that interacts with one or more application programs. Client devices 102 a-n may operate on any operating system capable of supporting a browser or browser-enabled application, such as MicrosoftÂ® WindowsÂ® or Linux. The client devices 102 a-n shown include, for example, personal computers executing a browser application program such as Microsoft Corporation's Internet Explorerâ¢, Netscape Communication Corporation's Netscape Navigatorâ¢, and Apple Computer, Inc.'s Safariâ¢.\n\nThrough the client devices 102 a-n, users 112 a-n can communicate over the network 106 with each other and with other systems and devices coupled to the network 106. As shown in FIG. 1, a server device 104 is also coupled to the network 106. In the embodiment shown, a user 112 a-n generates a search query 114 at a client device 102 a. The client device 102 a transmits the query 114 the server device 104 via the network 106. For example, a user 112 a types a textual search query into a query field of a web page of a search engine interface or other client-side software displayed on the client device 102 a, which is then transmitted via the network 106 to the server device 104. In the embodiment shown, a user 112 a inputs a search query 114 at a client device 102 a, which transmits an associated search query signal 130 reflecting the search query 114 to the server device 104. The search query 114 may be transmitted directly to the server device 104 as shown. In another embodiment, the query signal 130 may instead be sent to a proxy server (not shown), which then transmits the query signal 130 to server device 104. Other configurations are possible.\n\nThe server device 104 shown includes a server executing a search engine application program, such as the Googleâ¢ search engine. Similar to the client devices 102 a-n, the server device 104 shown includes a processor 116 coupled to a computer-readable memory 118. Server device 104, depicted as a single computer system, may be implemented as a network of computer processors. Examples of a server device 104 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices. Client processor 110 and the server processor 116 can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.\n\nMemory 118 contains the search engine application program, also known as a search engine 120. The search engine 120 locates relevant information in response to a search query 114 from a user 112 a-n.\n\nIn the embodiment shown, the server device 104, or related device, has previously performed a crawl of the network 106 to locate articles, such as web pages, stored at other devices or systems connected to the network 106, and indexed the articles in memory 118 another data storage device. Articles include, for example, web pages of various formats, such as HTML, XML, XHTML, Portable Document Format (PDF) files, and word processor, database, and application program document files, audio, video, or any other documents or information of any type whatsoever made available on a network (such as the Internet), a personal computer, or other computing or storage means. The embodiments described herein are described generally in relation to HTML files or documents, but embodiments may operate on any type of article, including any type of image.\n\nIn an embodiment of the present invention, the search engine 120 also searches a user's list of favorite sites, which personalizes the search. For example, a user's list of favorite sites may be saved as a list of bookmarks. Bookmarks are objects that include a uniform resource locator (URL) identified by a user. A bookmark may be referred to by different terms in different applications. For example, MicrosoftÂ® products often refer to bookmarks as âfavorites.â Similar to the client devices 102 a-n and the server device 104, the server device 122 shown includes a processor 124 coupled to a computer-readable memory 126. As with server device 104, server device 122, depicted as a single computer system, may be implemented as a network of computer processors or may be incorporated into the server device 104. Examples of a server device 122 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices.\n\nMemory 126 contains the bookmark manager application program, also known as a bookmark manager 128. In the embodiment shown, the bookmark manager 128 is a C++ program, however, the bookmark manager 128 may be constructed from various other programming languages as well.\n\nReferring still to the embodiment shown in FIG. 1, the bookmark manager 128 comprises an interface so that a user 112 a may manage bookmarks on the server. For example, in one embodiment, the bookmark manager 128 provides a browser-based application that allows the user to create, modify, delete, and save bookmarks on the network. The application may comprise, for example, HTML and JavaScript, an ActiveX component, or a Java applet. The bookmarks are saved in the bookmark database 140. In an embodiment of the present invention, the bookmark manager 128 also provides the data stored in the bookmark database 140 to the search engine 120.\n\nWhen the search engine 120 performs a search in response to the query search query signal 130, the search engine 120 searches previously indexed articles. The search engine 120 also creates a bookmark request 136, corresponding to user 112 a. The bookmark manager 128 responds by sending one or more bookmarks 138 to the search engine 120. The search engine 120 utilizes the bookmarks 138 to search sites previously identified by the user 112 a. The search engine then merges the results of the two searches to provide a result set 134 to the client 102 a.\n\nIt should be noted that the present invention may comprise systems having different architecture than that which is shown in FIG. 1. For example, in some systems according to the present invention, server device 104 and server device 122 may comprise a single physical or logical server. The system 100 shown in FIG. 1 is merely exemplary, and is used to explain the exemplary methods shown in FIGS. 2 through 4.\n\nIn embodiments of the present invention, a user 112 a can track their conventional browser bookmarks using server-side storage. These bookmarks can then be made available to the user on all the various computers the user uses and can be integrated with browser bookmarks and with the browser (e.g., via a toolbar). For example, a user's set of bookmarks can be primed on a server by having the user POST their bookmarks file to the server, and the user can be permitted to download the bookmarks as a bookmarks file or other related representation. Alternatively, client-side software may implicitly manage the server-side storage. In one embodiment, the bookmarks may comprise a continuous user rating, e.g., 0.0-1.0, rather than just a discrete bookmarked-or-not bit. In another embodiment, a user can integrate per-page annotations into their data regarding bookmarks or favorites. In yet another embodiment, a user can store multiple user personalities (e.g., previously defined sets of bookmarks) and can receive recommendations based on the set of bookmarks saved by users with similar tastes as derived by their bookmarks or other stored or monitored preferences.\n\nVarious methods may be implemented in the environment shown in FIG. 1 and other environments according to the present invention. For example in one embodiment, a user 112 a enters a search query 114, which a client 102 a transmits as a query signal 130 to a server device 104 over a network 106. The server device 104 executes a search engine 120. The search engine 120 receives the query signal 130. The search engine 120 determines a personalized result by searching a personalized search object using the search query. Examples of a personalized search object include, for example, a list of bookmarks or favorites and the history list of a browser. The search engine 120 also determines a general search result by searching a general search object. The general search object may comprise, for example, an index of articles, such as, for example, those associated with a conventional search engine. The search engine 120 provides a search result to the user based at least in part on the personalized result and the general result. In another embodiment, the search engine 120 provides a search result to the user based solely on the personalized result.\n\nThe search engine 120 may generate the search result by combining the general results and the personalized results. The search engine may instead provide separate lists: one containing the general search result and a second containing the personalized search result. The search engine 120 transmits the search result as a result set 134 to the client 102 a.\n\nIn one embodiment, the search engine 120 returns the list sorted as in a conventional search engine and with the personalized search results indicated in some way, such as, for example, highlighted or shown with a symbol beside the personalized search result. In another embodiment, the search engine sorts the combined results list based at least in part on a rating that the user 112 a has associated with the uniform resource locator.\n\nThe results may be sorted in a number of ways. For example, in one embodiment, the combined results list is sorted based at least in part on an annotation or rating that has been associated with the user 112 a and the uniform resource locator. The results may instead or further be sorted based on whether the result in the combined result list originated in the global results list or in the personalized search result. For example, the user 112 a may wish to see their personalized results displayed at the top. The results may be instead or further sorted based on a rating of a page provided by or created for the user 112 a. In one embodiment, rather than changing the sorting order of the pages provided in a result set, the search engine 120 marks results that originated in the user's personalized search results. A fuzzy algorithm may also be employed to sort the results. For example, the sorting of the combined results list may only slightly favor the personalized search result. In another embodiment, the results list is sorted by measures indicating user preferences. For example, if many of the user's bookmarks are computer- related, computer-related results are sorted closer to the top of the result set 134 than non-computer related results. Other operations may also be performed on the results based at least in part on user-specific information. For example, the results may be interleaved, merged where necessary or desired, presented with annotations, or presented in other ways that provide useful information to the user 112 a.\n\nAn embodiment of the present invention may comprise features to facilitate community building. For example, in one embodiment, the uniform resource locator comprises a community bookmark. The bookmark may be shared by a set of users or may be transmitted by one user and received by another. The second user can then perform personalized queries that are based, at least in part, on the shared bookmark. In another embodiment, a cluster of users is identified based at least in part on the bookmarks and annotations that they have previously identified.\n\nA user 112 a may specify bookmarks explicitly. In one embodiment, the bookmarks are implicitly identified based on a measure of the behavior of the user. For example, in one embodiment, the implicit measure comprises the linger time. In other words, if a user spends a great deal of time on a site, it is identified as a bookmark for later personalized searches. In other embodiments, the implicit measure may comprise at least one of the quantity of repeat visits to the site or the quantity of click-throughs on the site. In one embodiment, temporal decay of ratings may be utilized so that unused or rarely used bookmarks, whether explicitly marked or implicitly marked, become unmarked over time. Other implicit measures include printing the page, saving the page, and the amount of scrolling performed on the page.\n\nIn one embodiment of the present invention, the user associates a text string with a uniform resource locator (URL). The text string may comprise, for example, a search query, a URL-format text string, or a short-hand indicator of the URL. The client 102 a receives the personalized association data associating the text string with the URL and stores the personalized association data in a personalized search object. The client 102 a subsequently receives an input signal comprising the search string, determines the URL associated with the text string and displays an article associated with the URL. The article may be received from a global network element, such as a web server.\n\nFIG. 2 is a flowchart illustrating a method for storing bookmarks, ratings, and annotations in an embodiment of the present invention. In the embodiment shown, a user 112 a navigates to a site by typing in a URL or other means. The user 112 a determines that the site is useful and that the user 112 a will revisit the site. Accordingly, the user 112 a bookmarks the site using a bookmark manager 128. The user 112 a may access the bookmark manager 128 in various ways. For example, in one embodiment, the user 112 a accesses a client-side application via a built-in user-interface element or one available via a toolbar or other available plug-in in a browser executing on the client 102 a. The button causes a popup window to be displayed in which the user enters an annotation and rating. When the user clicks a submit button, the information is submitted to the bookmark manager 128 for storage as a bookmark in the bookmark database 140.\n\nIn the embodiment shown, the bookmark manager 128 first receives a valid user identifier (ID) 202 from the client 102 a. Users who desire synchronization across different browsers/computers or other types of personalization need to identify themselves to the bookmark manager 128 to some extent so that the bookmark manager 128 primary key with which to store a user's bookmarks. The bookmark manager 128 can perform the identification and authentication in numerous ways. For example, in one embodiment, the IP address is tracked throughout a session. In another embodiment, the authentication is done via a user manager system. In another embodiment, a cookie on the client 102 a may include user-identifying information, which is supplied to the bookmark manager 128 by the client 102 a.\n\nThe bookmark manager 128 then receives the URL for the site that the user identifies 204. The bookmark manager 128 stores the URL, its rating(s), and its annotation(s) in the bookmark database 140 for later retrieval 206. It is likely that a user already has a set of bookmarks (or several sets of bookmarks) that they would like to make available for their searches. Accordingly, in one embodiment, the bookmark manager 128 includes a mechanism for migrating that data to the bookmark database 140. The hierarchy of bookmarks can be used as implicit annotations on the named URLs and can at least be preserved when synchronizing the bookmarks among browsers. In another embodiment, the full text of an article when it was last visited serves as an annotation of the URL. In still another embodiment, as bookmarks are edited on a supported browser's native interface, the corresponding edits are made to the server-side bookmarks.\n\nIn one embodiment, the bookmark manager 128 provides a server-side management tool via an HTML interface (which, again may mirror changes into a supported browser's native bookmarks). Synchronization of client and server-side bookmarks may increase adoption of the bookmark manager 128 if the user can at least manually synchronize server-side bookmarks into client-side browser bookmark lists. In one embodiment, the management tool also displays the bookmark rating for a given page and allows the user 112 a to manipulate the rating and/or an annotation associated with the page. In another embodiment, bookmark manager 128 supports listing recently rated pages to facilitate returning to recently bookmarked pages, thus enabling a work-list like review of a surfing session.\n\nReferring still to FIG. 2, the bookmark manager 128 also receives 208 and stores 210 an annotation of the URL in the bookmark database 140. The annotation is a remark that the user provides regarding the URL. The annotation may simply be a text string stored in a database 140 and associated with the URL. The annotation may be instead stored in a standardized format, see, e.g., Annotea: An Open RDF Infrastructure for Shared Web Annotations, J. Kahan, M. Koivunen, E. Prud'Hommeaux, and R. Swick (2001), In Proceedings of WWW10, May 1-5, 2001 Hong Kong.\n\nIn the embodiment shown, the bookmark manager 128 also receives 212 and stores 214 the rating of the site provided by the user 112 a in the bookmark database 140. For example, in one embodiment, the user 112 a clicks a rating button. In response, the user 112 a is presented with a series of ten radio buttons labeled 0.0 through 1.0. The user selects one of the radio buttons and clicks submit. The bookmark manager 128 receives the rating and the URL and saves the two data values in the bookmark database 140. FIG. 2 is merely exemplary. In other embodiments the user may provide more or less information related to a site to the bookmark manager 128.\n\nAlthough in the embodiment shown, the reception and storage of the URL, annotation, and rating are shown as linear steps, they may be performed in other ways as well. For example, the bookmark manager may receive the URL, annotation, and rating together and perform one step to store them in the bookmark database 140.\n\nThe data stored in the bookmark database 140 may be updated fairly frequently as pages are bookmarked (or the bookmark is toggled, or a rating slider is changed).\n\nFIG. 3 is a flowchart illustrating a method of performing a network search in one embodiment of the present invention. Embodiments of the present invention may combine conventional network searches with, for example, personalized searches utilizing information provided by the user previously or in conjunction with the submission of the search. In the embodiment shown in FIG. 3, the search engine 120 receives a query signal 130 from a client (102 a) 302. The search engine 120 responds to the query signal 130 by performing a search. In the embodiment shown, the search comprises three sub-processes, which may be run in parallel. These three processes comprise: searching global indices 304, searching the URLs stored as bookmarks 306, and searching annotations 308. Other embodiments may employ a fewer or greater number of sub-processes. For example, in one embodiment, the URLs present in the navigation history of the browser are searched.\n\nConventional search engines search global search objects, such as global search indices. Embodiments of the present invention are also capable of searching personal search objects, such as bookmarks, annotations, ratings, and other objects. In one embodiment, such searching comprises reading a list of URLs from the bookmark database 140, and for each page, searching the various parts of the page using the search query 114 submitted by the user 112 a. In another embodiment, an agent operating on the client 102 a searches a personal search object stored on the client 102 a or in a repository accessible to the client 102 a via the network 106.\n\nSearching annotations comprises searching the user-entered annotations using the search query 114 submitted by the user 112 a. For example, a user 112 a may enter the term âboatâ as an annotation for a page comprising marine supplies. If the users 112 a enters âboatâ as part of the search query 114 utilized by the search engine 120, the page with the âboatâ annotation will be returned by the search annotations component. Another embodiment of the present invention searches not only the pages that the user has bookmarked or annotated, but also pages similar to the pages that the user has bookmarked or pages with similar annotations.\n\nEach of the sub-processes 304, 306, and 308 may generate a separate result set in the embodiment shown. In other embodiments, the sub-processes 304, 306, and 308 may be combined and/or configured to provide a combined result set automatically. The result sets may overlap to some degree. In the embodiment shown, the search engine 120 merges the search results into one list 310. The search engine 120 then ranks the pages 312. Various methods may be utilized to rank the pages. For example, the search engine 120 may rank results returned via annotation based on their user-based ratings, if any, then per the standard ranking algorithm. Several examples are set out below. The search engine 120 then provides a sorted result set 134 to the user 112 a requesting the search 314.\n\nIn another embodiment, the user supplies an annotation that is associated with a URL. The annotation is stored on a per-user basis to supplement the search results and to further improve scoring. Other users who share similar interests with the user who provided the annotation may use the annotation.\n\nEmbodiments of the present invention may make further use of the annotation. For example, in one embodiment, the search engine 120 searches for the keywords provided in a search query 114 in user-supplied annotations, e.g., treating those annotations as user-specific anchor text that refer to the annotated URL. The result set generated by a search engine in one such embodiment reflects the union of the global index and the results from the annotation keyword search.\n\nEmbodiments may also utilize other data, such as user ratings to determine the ranking of the results, to mark the results, or for other purposes. For example, in one embodiment, the page rankings that the search engine 120 provides are not affected by the user-supplied ratings for each page, but an indicator, such as an asterisk or other small image, identifies specific results that are rated based on ratings data stored in the bookmark database 140.\n\nEmbodiments of the present invention may combine the results of several types of results, or may present the results separately. For example, in one embodiment, a user 112 a submits a search query 114. The search engine 120 searches a global search object and presents the results in one list. The search engine 120 also searches a personal search object and presents the results of the search in a second list.\n\nIn another embodiment of the present invention, the search engine 120 also uses a user-applied rating to rank the pages. For example, a user 112 a applies a rating (e.g., between 0.0 and 10.0) to each of the bookmarks stored in the bookmark database 140. The search engine 120 utilizes the user-applied rating in determining where in the result set 134 a particular article should be displayed. For example, a rating of 0.5 might represent indifference, and lower ratings would penalize a result while higher ratings would make it score higher. In yet another embodiment, the search engine 120 more highly scores unrated pages that are similar to the content of highly rated URLs. In one embodiment, in which a large set of diverse user ratings and annotations have been stored, the search engine 120 may provide additional related features such as page suggestions based on similar users'ratings, e.g., via simple clustering approaches.\n\nThe term or alternate URL associated with the primary URL is a distinct token in the personalized search that indicates a desire of the user not to search for the term or navigate to the alternate URL, as would be the case in a conventional browser application, but instead to immediately go directly to a specific page that is associated with the term or alternate URL for the user 112 a.\n\nIn one embodiment, a user 112 a associates a specific term or alternate URL with a primary URL, such as the URL associated with a previously-stored bookmark in the bookmark database 140. For example, the user 112 a may enter a term in one text box and a URL in another text box and then click a button to associate the two. The association is then stored in a computer-readable medium on the client machine 102 a or in a computer-readable medium accessible by a server 104, such as in the bookmark database 140. The term or alternate URL becomes a âspeed-dialâ navigation link to the URL. In one embodiment, the user 112 a enters the term in a query search box and clicks a link or control, such as a standard search link or button, and, rather than performing a search for the term using a search engine, the browser or browser-enabled application retrieves the URL previously associated with the term and immediately jumps to the site associated with the URL. In another embodiment, a keyboard binding causes the browser to jump to the site associated with the URL. In either case, the command by the user 112 a causes a behavior to occur that is personalized to the user as opposed to the conventional query behavior common to all users of the search engine. In other words, no search is performed; the browser simply navigates to the URL associated with the term in lieu of performing the search.\n\nIn yet another embodiment, the user 112 a enters the alternate URL in the address field of the browser and clicks the âgoâ control or otherwise causes the browser to evaluate the alternate URL. Rather than navigating to the URL, the browser first searches for the alternate URL in the list of URL's associated with bookmarks. If the alternate URL is found, the browser navigates directly to the primary URL that is associated with the alternate URL.\n\nFor example, in one embodiment, a user 112 a associates the term âhomeâ with the user's corporate intranet page. The user 112 a enters the term âhomeâ in a text box and the URL for the corporate intranet page in another text box and clicks a control to associate the two. Alternatively, the user clicks a control during display of the corporate intranet page that provides the user 112 a with an opportunity to associate the term and the page. Subsequently, the user 112 a enters the term âhomeâ in a search field and clicks the search control. Since the term âhomeâ has been associated with the corporate intranet homepage, the browser immediately navigates to the user's corporate intranet homepage rather than executing a search for the term âhome.â The user 112 a may want to select terms or phrases for association that are unlikely to be used in standard searches. For example, the user 112 a may use a single number (e.g., â1â) to associate with a URL.\n\nIn another embodiment, the user 112 a associates the alternate URL âwww.myhome.comâ with the actual or primary URL for the user's 112 a personal homepage. When the user 112 a enters the URL âwww.myhome.comâ in the address line of the browser executing on the client 102 a, the browser locates the association between the alternate and primary URL's and navigates to the page identified by the primary URL, the user's personal home page.\n\nAn embodiment of the present invention may provide various user interfaces. For example, in one embodiment, two distinct user interfaces are provided: one for novice users and one for advanced users. The novice interface may simply give visual feedback about whether a page is bookmarked or not and permits the user to toggle that state with a simple click. The richer, advanced-user interface may utilize a slider control reflecting a rating for the current page and a personality-mode (e.g., work/home/hobby) drop-down box that switches among different rating sets. Another embodiment includes an intermediate-level interface that includes a bookmark (vote positive) and a booknegate (vote negative) button (not unlike the voting buttons as part of the advanced features of some search toolbars, such as the Google Toolbar).\n\nA user interface according the present invention may also include a personalized result page that includes a visual indication of a result that was reordered due to personalization. In one embodiment of the present invention, the user interface includes a means for toggling the personalization of results. For example, in one embodiment, the user clicks a button on the HTML interface to turn on personalization. If personalization is active, the user may click a button disabling personalization. Such a feature addresses the need to depersonalize results before sharing a query result links with other users (e.g., via email).\n\nOne embodiment of the present invention supports applying bookmarks directly via a results page. For more advanced users, bookmark manager 128 may support a âRank these resultsâ link that lets advanced users select a rating (perhaps using radio buttons) for each result on a given page. Because of privacy concerns, bookmark manager 128 may disallow access to âView bookmarksâ to not-logged-in users; nevertheless, search results may be appropriately personalized based on just the cookie of not-logged-in users.\n\nEmbodiments of the present invention implement various measures to help encourage user adoption. For example, although not all users may be willing to expend the effort to provide ratings, an embodiment of the present invention provides noticeable benefits for relatively low effort on the part of the user. In addition, by incorporating bookmark synchronization, an embodiment of the present invention helps drive adoption.\n\nEmbodiments of the present invention may also implement network and community features to foster adoption of the service. For example, as described above, an embodiment of the present invention may utilize like-user recommendations to locate and rank results. One embodiment of the present invention implements user groups and friend-lists whereby a user can choose to expose a bookmark list to friends or the public at large. In another embodiment, a user has the ability to transparently overlay a weighted set of bookmarks onto their own set of bookmarks.\n\nAn organization implementing an embodiment of the present invention may utilize partnerships to encourage adoption of the service. For example, a service provider may encourage partner sites to display a âbookmark this page!â snippet on their homepages and other content pages. For the partner, an embodiment of the present invention provides a means to ask users to opt-in to making it especially easy to get at their site via a search. And for users it's a nice reminder to mark the page or add an annotation. For the provider of the bookmark and search service, such an arrangement helps introduce users to the idea of bookmarks at the moment it matters most: when they are visiting a page they are interested in. It may be advantageous to (e.g., for security reasons) to have partners wishing to display a âbookmark this page!â link to register with the service provider first. Registration with the service provider also helps the service provider to develop relationships with additional content providers.\n\nA provider of a bookmark service may receive various benefits from implementing the service. For example, the provider is able to collect data concerning users' attribution of value on pages.\n\nOne embodiment of the present invention utilizes an anti-spamming m"
    }
}