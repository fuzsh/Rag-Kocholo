{
    "id": "dbpedia_8300_2",
    "rank": 26,
    "data": {
        "url": "https://programmingzen.com/this-week-in-ruby-march-31-2008/",
        "read_more_link": "",
        "language": "en",
        "title": "This Week in Ruby (March 31, 2008)",
        "top_image": "https://programmingzen.com/wp-content/uploads/2020/05/favicon-32x32-2.png",
        "meta_img": "https://programmingzen.com/wp-content/uploads/2020/05/favicon-32x32-2.png",
        "images": [
            "https://programmingzen.com/wp-content/uploads/2020/05/programming-zen-blog.png",
            "https://secure.gravatar.com/avatar/6111b4012d1401ca83fdcea6b1d71237?s=168&r=pg",
            "https://secure.gravatar.com/avatar/7956c3c7d7ef344265029e6b4b569b91?s=50&r=pg",
            "https://secure.gravatar.com/avatar/4375b4aca04b8d72482fd409fb6d0b47?s=50&r=pg",
            "https://secure.gravatar.com/avatar/b5da2fa1504a6fb56763b08106704f97?s=50&r=pg",
            "https://secure.gravatar.com/avatar/638158207f7aa13c27777fad8b756fd0?s=50&r=pg",
            "https://secure.gravatar.com/avatar/7956c3c7d7ef344265029e6b4b569b91?s=50&r=pg",
            "https://secure.gravatar.com/avatar/ebe96524f5db9e92188f0542dc9d1d1a?s=50&r=pg",
            "https://secure.gravatar.com/avatar/def2c63c6beefdb5ca3e6ec54d04a4a4?s=50&r=pg",
            "https://secure.gravatar.com/avatar/2e2b7cceee2ac845086cd876bed5ab32?s=50&r=pg",
            "https://secure.gravatar.com/avatar/06e2886e9271acd7f1d0bc392c28b1a3?s=50&r=pg",
            "https://secure.gravatar.com/avatar/b895a7aa1543514b610e3057a39a2df3?s=50&r=pg",
            "https://i0.wp.com/programmingzen.com/wp-content/uploads/2020/10/technical-blogging.jpg?w=1060&ssl=1"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Antonio Cangiano"
        ],
        "publish_date": "2008-03-31T05:39:29+00:00",
        "summary": "",
        "meta_description": "One of the main advantages of Ruby’s growing community, is the speed at which exciting news pops up. This post briefly covers must-read highlights for new developments in the Ruby and Rails communities throughout the past week. I’ll attempt to repeat a “This Week in Ruby” post approximately every week, so feel free to follow along by subscribing to my feed. Rails 2 Craig Webster published the first part of an easy to follow tutorial entitled Getting Started with Rails 2.0. The nice thing is that it also covers version control through Git, which is becoming extremely common in the",
        "meta_lang": "en",
        "meta_favicon": "https://programmingzen.com/wp-content/uploads/2020/05/favicon-32x32-2.png",
        "meta_site_name": "Programming Zen",
        "canonical_link": "https://programmingzen.com/this-week-in-ruby-march-31-2008/",
        "text": "One of the main advantages of Ruby’s growing community, is the speed at which exciting news pops up. This post briefly covers must-read highlights for new developments in the Ruby and Rails communities throughout the past week. I’ll attempt to repeat a “This Week in Ruby” post approximately every week, so feel free to follow along by subscribing to my feed.\n\nRails 2\n\nCraig Webster published the first part of an easy to follow tutorial entitled Getting Started with Rails 2.0. The nice thing is that it also covers version control through Git, which is becoming extremely common in the Ruby/Rails community. Speaking of trends, a study by Gartner predicts that the Ruby language will reach 4 million programmers within the next 5 years. Numbers that would definitely position Ruby as a mainstream programming language. Incidentally, Obie Fernandez published an interesting survey of major corporations and large companies which are embracing Ruby on Rails. A very impressive list that is destined to grow quickly as Ruby’s implementation and ecosystem improve.\n\nThe official Rails blog has a post about a few changes in the core Rails team which brings the number of hackers down to 6, and establishes a Core alumni group of “retired” Rails core programmers. The small team seems to be busy, as Rails 2.1 is about to be released with some new exciting features, such as migrations based on UTC timestamp, named_scope, gems as plugins and much more as outlined by this caboo.se post.\n\nOn the deployment side, there are a few exciting happenings. Apple has published the third part of their tutorial, titled Deploying Rails Applications on Mac OS X Leopard. HighScalability.com has an article about an incredible service offered by Heroku that offers one-click, hassle free, cloud computing based Rails deployment. Their service is still in beta, and takes advantage of Amazon web services, but from what I’ve seen so far their secure and scalable deployment is as easy as it gets and it’s going to be a welcomed addition to the deployment options available to Rails programmers. Even more interestingly, a Dutch company called Phusion put up a demo about their Passenger project. Phusion Passenger, aka mod_rails, is a module for Apache that will bring ease of deployment, stability and performance to Rails. The company claims that according to their tests, mod_rails should be slightly faster than using Apache+Mongrel, it handles Rails processes automatically by spawning them depending on the effective traffic, and they are working with the largest hosts in order to ensure real world performance and stability when under heavy loads.\n\nJames Golick continues his series of “Plugins I’ve Known and Loved”, this time covering Ultrasphinx, a plugin for the uber-fast search daemon Sphinx.\n\nNicolas Sanguinetti wrote a script, that attempts to speed up the process of setting up an empty Rails project. I don’t find the procedure particularly boring so I don’t plan to use it, but it might be useful to some people.\n\nRuby\n\nPeter Cooper, of Ruby Inside, has an article about two re-implemenations of the Ruby language. They are both named Sapphire, adding further to the confusion. The first one is a real fork, which was apparently born from the author’s dissatisfaction with the current management of the MRI, and the desire to have better support for Windows along, of course, with extra features like Aspect Oriented Programming, Unicode, etc, etc… The second one appears to be a new language, a stripped down and “stricter” version of Ruby that is supposed to be more Smalltalk-like and would be running, at least in the beginning, on the .NET platform. They are both worth mentioning, but currently I honestly fail to get excited about them. Ruby has an implementation problem, not a design one, in my opinion. However, we’ll see what they are able to deliver. In my book, a good implementation of a Ruby like language would be far from being frowned upon.\n\nRemaining in the field of new implementations, InfoQ has an article about a neat new addition called HotRuby which is able to execute opcodes generated by the Ruby 1.9 VM (aka YARV). HotRuby is an incomplete and tiny (40 KB) implementation, faster than Ruby 1.9, that runs on JavaScript and Flash.\n\nFor those interested in Ruby and compilers, Vidar Hokstad has published the first two parts of a tutorial called “Writing a compiler in Ruby bottom up” (part 1 and part 2). Even if you are not into compilers, it’s a rather interesting read.\n\nSun reaffirmed their commitment to Ruby this week, by announcing the Ruby Development Center on the Sun Developer Network. I like Sun’s serious efforts and fast paced development of both JRuby and NetBeans (whose 6.1 beta is now out).\n\nA new project hit the frontpage of programming.reddit.com: StrokeDB. Odd name, I know, but if you are interested in CouchDB, you may also take an in-depth look at StrokeDB. It’s a project that sounds rather promising if properly implemented. In their own words: “StrokeDB is an embeddable distributed document database written in Ruby. It is schema-free, it scales infinitely, it even tracks revisions and perfectly integrates with Ruby applications.”. The developers had a talk at EURUKO 2008, the European Ruby conference that took place this past weekend. Videos from the conference are not up yet, but meanwhile you can equally enjoy the videos and slides from MountainWest RubyConf 2008 on ConFreaks, which has published a talk by Evan Phoenix and Ezra Zygmuntowicz, respectively about Rubinius and Merb.\n\nFinally, last week I spotted a bug that made Ruby 1.9 (built from trunk) significantly slower than Ruby 1.8. After a bit of investigation I was able to single out that the problem concerned Mac OS X only. With some testing by Chris Shea, the exact culprit revision was isolated and the core team has already worked on a fix. It was a very prompt and impressive response by Matz and his team.\n\nRubyGems\n\nEric Hodel has announced the release of RubyGems 1.1.0. Aside from bugfixes and a couple of minor features, the most welcomed improvement is a significant speed boost that makes the tool faster. If you’d like to hear Eric talk about Rubygems and his involvement with the Ruby community, this week InfoQ published an interview with him (the interview itself is from RubyConf 2007 though).\n\nThis is my first episode of “This Week in Ruby” so feel free to provide feedback if you found it useful or if you have suggestions for improving it. Thank you for reading!"
    }
}