{
    "id": "dbpedia_8300_2",
    "rank": 88,
    "data": {
        "url": "https://vmlanguages.is-research.de/category/javascript-language/page/4/",
        "read_more_link": "",
        "language": "en",
        "title": "JavaScript language – Page 4 – Programming languages for the Java Virtual Machine JVM and Javascript",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Robert Tolksdorf"
        ],
        "publish_date": "2009-11-16T16:47:39+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Logo Interpreter\n\nA logo interpreter writtein JavaScript with a nice graphical turtle.\n\n|\n\nBefunge Interpreter\n\nOk, call it obscure… At http://www.esolangs.org/wiki/Befunge we learn that “Befunge is believed to be the first two-dimensional, ASCII-based, general-purpose (in the sense of “you could plausibly write Hunt the Wumpus in it” [1]) programming language. Its form was influenced in part by the multimedia scripting application AmigaVision, and in part by Forth.” Here is the interpreter for it.\n\n|\n\nSkulpt: Python in JavaScript\n\nSkulpt is an implementation of Python in JavaScript.\n\n|\n\nJsTcl – Tcl in JavaScript\n\nA Tcl implementation in JavaScript.\n\n|\n\nF# to JavaScript\n\nThe idea is to use the F# language for writing both client and server-side part of the web application, to develop client-side code in a type-safe programming language using a subset of the F# library, and to provide a way to write both server-side and client-side code as a part of single homogeneous module defining the web page logic. It includes a first translator from an ML-family functional language to JavaScript. The concept is described in the paper TomÃ¡Å¡ PetÅÃ­Äek Don Syme. AFAX: Rich client/server web applications in F#, there is a tutorial like introduction and there is some upcoming software.\n\n|\n\nQuite BASIC\n\nQuite BASIC is an all web-based classic BASIC programming environment, mainly for eduational purposes.\n\n|\n\nHotRuby\n\nHotRuby is Ruby on JavaScript and Flash. HotRuby runs Ruby source code on a web browser and Flash. HotRuby runs opcode, compiled by YARV(Yet Another Ruby VM) on Ruby. HotRuby is a Ruby VM.\n\n|\n\ns-mr: JavaScript in JavaScript\n\nSelf-made Rhino is an implementation of JavaScript in JavaScript.\n\n|\n\nWPS: PostScript for the Web\n\nA PostScript and PDF interpreter for HTML 5 canvas.\n\n|"
    }
}