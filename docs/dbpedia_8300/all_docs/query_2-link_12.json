{
    "id": "dbpedia_8300_2",
    "rank": 12,
    "data": {
        "url": "https://gist.github.com/matthiasak/c3c9c40d0f98ca91def1",
        "read_more_link": "",
        "language": "en",
        "title": "Languages that compile to JS (from CoffeeScript wiki)",
        "top_image": "https://github.githubassets.com/assets/gist-og-image-54fd7dc0713e.png",
        "meta_img": "https://github.githubassets.com/assets/gist-og-image-54fd7dc0713e.png",
        "images": [
            "https://avatars.githubusercontent.com/u/900775?s=64&v=4"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Languages that compile to JS (from CoffeeScript wiki) - languages-that-compile-to-js.md",
        "meta_lang": "en",
        "meta_favicon": "https://gist.github.com/fluidicon.png",
        "meta_site_name": "Gist",
        "canonical_link": "https://gist.github.com/matthiasak/c3c9c40d0f98ca91def1",
        "text": "CoffeeScript Family (& Friends)\n\nCoffeeScript Unfancy JavaScript\n\nCoffeeScript II: The Wrath of Khan Rewrite of the CS compiler\n\nFamily (share genes with CoffeeScript)\n\nCoco A CoffeeScript dialect that aims to be more radical and practical, also acts as a test bed for features that get imported in CoffeeScript.\n\nLiveScript is a fork of Coco that is much more compatible with CoffeeScript, more functional, and with more features.\n\nIcedCoffeeScript A CoffeeScript dialect that adds support for await and defer keywords which simplify async control flow.\n\nParsec CoffeeScript CS based on parser combinators. The project's aim is to add static metaprogramming (i.e. macros + syntax extensibility) to Coffee Script (CS), similar to how Metalua adds such features to Lua. The resulting compiler, once merged with the official compiler, should be usable as a drop-in replacement for it.\n\nContracts.coffee A dialect of CoffeeScript that adds built-in support for contracts.\n\nUberscript, a CoffeeScript fork that adds type annotations which are compiled to Google closure compiler type annotation comments.\n\nToffeeScript A dialect of CoffeeScript that support Asynchronous Syntax and Regexp operator =~\n\nCaffeine A dialect of CoffeeScript that support packages and classes import, useful for browser applications\n\nheap.coffee A dialect of CoffeeScript that offers a C-like type system with manual memory management\n\nEmberScript Ember.js-infused CoffeeScript.\n\nFriends (philosophically related)\n\nKaffeine Enhanced Syntax for JavaScript.\n\nJack Making programming playful.\n\nmove A simpler and cleaner programming language.\n\nMoescript Indent-based language\n\npogoscript language that emphasises readability, handles async control flow nicely, is friendly to domain specific languages and compiles to regular JavaScript\n\nLispyScript A JavaScript with Lispy syntax and Macros. ○\n\nwisp A homoiconic JavaScript dialect with Clojure syntax, S-expressions and macros. Aims to be rich subset of Clojure(Script) that seamlessly interops with both Clojure(Script) and JavaScript. ○\n\nHot Cocoa Lisp A Lisp-like language that compiles to JavaScript. ○\n\nSibilant JavaScript with a lisp. ○\n\nki Clojure-like syntax, mori's immutable data structures in a few sweet.js macros. Can be intermixed with JavaScript. ○\n\njisp A JS-native and axiomatic Lisp that focuses on the core ideas of code-as-data, S-expressions, and macros, introducing as few new concepts as possible. ○\n\nHam looks very similar to JavaScript at first, but offers (hopefully) many useful features\n\nGorillaScript Compile-to-JavaScript language designed to empower the user while attempting to prevent some common errors, offers Macros and optional Typing\n\nRedScript Ruby-flavored JavaScript.\n\nDaonode functional logic solver, compiler.\n\nLiteScript Literate, highly-readable, type annotated, imperative language that compiles to JavaScript.\n\nColaScript similar to Dart, CoffeeScript, Python and PHP\n\nTaijilang a customizable and extensible language with dynamic parser and meta language.\n\nMoonScript MoonScript is a dynamic scripting language that compiles into Lua. The syntax of MoonScript has been heavily inspired by the syntax of CoffeeScript.\n\nEarl Grey An extensible language with pattern matching, hygienic macros and a syntax similar to Python.\n\nKhepri Lightweight language that reworks Javascript's syntax to be better for untyped functional-style programming.\n\nSpider Spider is a programming language that compiles to JavaScript (ES5 and ES6 targets). It takes the best ideas of Go, Swift, Python, C# and CoffeeScript.\n\nCirruScript write JavaScript with indentations and polish notations, similar to S-Expression but with fewer parentheses.\n\nPallet Pallet is a innovative, modern programming language with a nice syntax, and optional functional programming and loose variable type checking.\n\nTLC Tag Line Commands is a inline macro language for calling+formatting javascript/coffeescript/livescript json output into HTML.\n\nCokeScript is a inspired by Python and Ruby that integrate natively with the Virtual-DOM library\n\nimba compiles to performant and readable JavaScript\n\nJavaScript Extensions\n\nSecurity enforcing JavaScript\n\nCaja Compiles ES5/strict to ES3 and supports object-capabilities\n\nADsafe Client-side static verifier and API, making third party scripts safe.\n\nFBJS Facebook JavaScript, used for scripting FBML (Facebook Markup Language) gadgets.\n\nJacaranda Static verifier supporting object-capabilities.\n\nMicrosoft Web Sandbox Technology preview of securing web content through isolation.\n\nGatekeeper Microsoft Research project.\n\nDojo Secure Framework for building secure mashups.\n\nLocal.js uses Web Workers to sandbox applications and a RESTful messaging protocol called HTTPL (HTTP Local) to communicate between them\n\nStatic typing\n\nSome of the ones listed below are also statically typed, such as mobl, GWT, JSIL, NS Basic, and Haxe.\n\nDart by Google. C/Java-like syntax with optional typing.\n\nTypeScript by Microsoft. Typed superset of JavaScript.\n\nTeJaS from Brown PLT. Types for JavaScript (itself).\n\nasm.js – subset of JavaScript that can be used as a low-level, efficient target language for compilers. Now included in Firefox.\n\nJavaScript++ JavaScript superset with classes, type checking, among other features\n\nMileScript [commercial] A strongly-typed language similar to C# and Java, but which compiles to JS. free for non-profit, educational use.\n\nMascara [commercial] Enhances JavaScript with powerful features like classes, namespaces and type-checking.\n\nRoy tries to meld JavaScript semantics with some features common in static functional languages\n\nElm type-safe functional language that compiles to HTML, CSS, and JavaScript.\n\nSwym – statically typed, with type inference and generics\n\nTypecast.js – JavaScript platform for statically typed variables without a custom compiler.\n\nPureScript – a small, strongly typed programming language that compiles to JavaScript, featuring extensible records and effects, and type classes.\n\nAtScript by Google – project to improve JavaScript by adding type annotations and other features on top of TypeScript. Now defunct, will be merged into Microsoft's TypeScript.\n\nFlow by Facebook - static type checker for JavaScript, supports optional types and null checks\n\nSynchronous to Asynchronous JavaScript Compilers (CPS)\n\nStreamline.js Uses underscore (_) to stand for callbacks. This fork preserves line numbers for debugging.\n\nmobl The new language for programming the mobile web.\n\nStratifiedJS JavaScript + structured concurrency.\n\nNarrativeJS JavaScript extension with asynchronous futures and promises.\n\njwacs JavaScript With Advanced Continuation Support.\n\nWind.js Wind.js is an advanced library which enable us to control flow with plain JavaScript for asynchronous programming (and more) without additional pre-compiling steps.\n\nTameJS adds new keywords 'await' and 'defer'\n\nContinuation.js A lightweight JIT compiler for simplifying asynchronous JavaScript programming with no runtime dependences. It supports both Node.js and browser-side JavaScript and is compatible with CoffeeScript (also TypeScript, and any other scripts compile to js).\n\nKal makes asynchronous programming easy and clean by allowing functions to pause and wait for I/O, replacing an awkward callback syntax with a clean, simple syntax\n\nJSPipe provides JavaScript primitives to write async code without callbacks or chained functions. Inspired by Goroutines and Channels found in Go and in Clojure. For Web and NodeJS. ES5 and ES6.\n\npromiseLand promiseLand is a very promising Language. It includes ES5 strict mode, uses the * dereferencing operator to access promise results and introduces additional features designed to let you focus on your program logic. Such as dynamic typesafety, frame addressing, generic load and safe features.\n\nJavaScript Language Extensions\n\nContextJS is an implementation of Context-oriented Programming for JavaScript.\n\nObjective-J Shares with JavaScript the same relationship that Objective-C has with the C programming language: that of being a strict, but small, superset.\n\nMochiscript Object-oriented JavaScript with syntactic sugar. Released as a Ruby gem.\n\njangaroo AS3 (ActionScript) to JavaScript.\n\nFlapjax Event-driven, reactive evaluation.\n\njLang adds object oriented syntax, namespaces, operators overriding\n\nRestrict Mode\n\nTIScript gentle extension of JavaScript\n\nSix Six is a language super-set of JavaScript that enables new syntactic features from the 6th edition of ECMAScript to be used, through a transpiler, in your scripts today.\n\njs-- JavaScript subset for interactive/visual programming.\n\nLatte JS Superset of JavaScript (eventually ES6), with similar goals to CoffeeScript, but keeping JS syntax.\n\nJSX by Facebook - a superset to add an XML-like syntax to represent HTML elements in React.\n\noj Objective-C inspired superset of JavaScript with a tiny runtime, built-in obfuscator, and experimental type checker (courtesy of Typescript).\n\nOpal Ruby to JavaScript compiler.\n\nHotRuby Runs opcode, compiled by YARV on Ruby inside a web browser or in Flash.\n\nColdRuby Compiler of Ruby 1.9 MRI bytecode, and a runtime written in JavaScript to aid in execution of Ruby code.\n\nrb2js Converts Ruby to JavaScript.\n\nRubyJS A successor to rb2js\n\nRed Writes like Ruby and runs like JavaScript\n\nQuby Used for game coding site, open source.\n\n8ball Ruby-to-JavaScript source-to-source transformer\n\nRuby2JS Minimal yet extensible Ruby to JavaScript conversion.\n\nPYXC-PJ [CS friend] Python to JS. Can generate a (line/col)-number mappings file.\n\nPyjamas Python to JS.\n\nPyjaco Python to JavaScript compiler with module support.\n\nPyjs Python to (readable) JS.\n\nSkulpt Python. Client side.\n\nPyCow Python to MooTools JS.\n\nPyvaScript Python-like syntax to JavaScript.\n\nRapydScript JavaScript with a Pythonic syntax.\n\nBulbul Python3 to JavaScript/ES6/ES7 compiler. Apparently the only Python-to-JS compiler intended to provide support for AngularJS, React, Aurelia and other modern JS libs.\n\nBrython browser python\n\nPythonScript Python-like compiled to JavaScript\n\npythonscript Python compiled to readable JavaScript using the AST. (proof of concept)\n\nRusthon Integrates several python to js methods into one project. Very Active. Not only for JS & Py, but also Go, C, Nim, etc.\n\nPyPyJS PyPy. Compiled into JavaScript using Emscripten. JIT-compiling to JavaScript at runtime.\n\nShen is the first and yet smallest Erlang JavaScript Compiler based on Erlang AST. It allows you to translate Elixir, Joxa, Lol and Erlang programs to JavaScript with erlc. JavaScript/OTP subset. Has node npm package called erlang-shen-js.\n\nLuvvieScript a browser-based dom-scripting language that is a strict sub-set of Erlang which is AST-to-AST transpiled to JavaScript (code )\n\nPerlito Project to compile Perl 5/6 to JavaScript, Ruby, SBCL, and Go.\n\nJava/JVM\n\nGWT Google Web Toolkit, compiles Java to JavaScript.\n\nJava2Script Eclipse Java to JavaScript compiler plugin and JavaScript version of SWT.\n\nj2js Java bytecode to JavaScript.\n\nStrongly-Typed JavaScript (STJS) – JavaScript code generator from Java source. It is built as a Maven plugin.\n\nBicaJVM JavaScript implementation of JVM.\n\nDoppio JVM interpreter on CoffeeScript.\n\nProcessing, a Java-based visualization language that interprets to JavaScript.\n\nKotlin Statically typed programming language targeting the JVM and JavaScript.\n\nCeylon a modular static-typed JVM language compilable to JavaScript.\n\nGrooScript a framework to convert Groovy code to JavaScript.\n\nnode-jvm java virtual machine in pure node.js\n\nBck2Brwsr Run \"browserified\" Java Code in, well, the browser.\n\nQWT QWT consists of a Java-to-JavaScript compiler, a prepared library of Qooxdoo componente (version 0.7.x) and some other tools. Similar to GWT\n\nTeaVM is an ahead-of-time transpiler that takes JVM bytecode and produces JavaScript.\n\nDragome SDK compiles JVM bytecode to Javascript.\n\nScala.js the official Scala to JavaScript compiler\n\njs-scala JavaScript as an embedded DSL in Scala\n\nscalagwt enhanced GWT (accepts jribble as well as Java) plus Scala to jribble.\n\nJScala Scala macro that produces JavaScript from Scala code.\n\nC#, F#, .NET related languages\n\njsc [experimental] Recompile your .NET assembly to JavaScript, ActionScript, PHP or Java.\n\nJSIL MSIL (.NET bytecode) to JavaScript\n\nScript# Compiles C# to JS.\n\nCilJs Translates CIL/MSIL (.NET bytecode) (C#) to JavaScript\n\nPrefix in development\n\nBlade Visual Studio add-on for converting C# to JavaScript\n\nSharpKit C# to JavaScript Cross-Compiler\n\nSaltarelle C# to JavaScript Compiler. Saltarelle is now part of Bridge.NET.\n\nFunScript F# to JavaScript compiler with JQuery etc. mappings through a TypeScript type provider\n\nPit F# to JavaScript compiler\n\nWebSharper Lets you compile F# to JS.\n\nNemerleWeb Nemerle language compiled to JS.\n\nBlue Storm F# to JavaScript (and some other languages).\n\nJScriptSuite .NET to JavaScript compiler (cross browser API, client site controls and components).\n\nDotNetWebToolkit Toolkit providing a .NET CIL to JavaScript transcoder and Visual Studio project/debugging integration\n\nNetjs .NET to TypeScript and JavaScript compiler. It uses multiple stages to produce JavaScript for your web apps.\n\nWootzJs C# to Javascript cross-compiler built on top of Microsoft Roslyn, which handles the complex process of converting your C# code into syntax trees with symbol information\n\nDuoCode C#-to-JavaScript compiler powered by Microsoft Roslyn\n\nBridge.NET - Open Source C#-to-JavaScript compiler. Includes jQuery + many other frameworks. Developed and well supported by a professional team.\n\nLisp, Scheme\n\nClojureScript Clojure to JS, the official version. Supports the majority of Clojure including persistent datastructures.\n\nClojureJS Subset of Clojure to JS.\n\nChlorinejs A fork of ClojureJS with a port of clojure.core library.\n\nwisp A homoiconic JavaScript dialect with Clojure syntax, S-expressions and macros. Aims to be rich subset of Clojure(Script) that seamlessly interops with both Clojure(Script) and JavaScript. ○\n\nScriptjure Library for generating JavaScript from Clojure forms.\n\nki Clojure-like syntax, mori's immutable data structures in a few sweet.js macros. Can be intermixed with JavaScript. ○\n\nBiwaScheme Scheme(R6RS) in JavaScript\n\nFargo Scheme in JavaScript\n\nMoby Scheme A Scheme running in JS.\n\nnconc Scheme interpreter in JavaScript with stack-friendly tail calls and full call/cc\n\nscheme2js Scheme to JavaScript.\n\nSpock A Scheme to JavaScript compiler that uses Henry Baker's Cheney-on-the-MTA compilation strategy\n\nWhalesong Racket to JS compiler\n\neslisp An S-expression syntax for ECMAScript/JavaScript, with Lisp-like hygienic macros that are just JS functions. Aims to be very close to JS, and highly experimental.\n\nEdgeLisp A Lisp in the tradition of Common Lisp\n\nParenscript Subset of Common Lisp to JS.\n\nRalph Lisp-1 dialect that compiles to JavaScript, inspired by Dylan\n\nOppo A JavaScripter’s lisp. Inspired by JavaScript, Clojure and CoffeeScript. Compiler built using Jison.\n\nLispyScript A JavaScript with Lispy syntax and Macros. ○\n\nOutlet A simple Lisp that supports CPS and in-browser stepping debugging, and other things. In development.\n\nHot Cocoa Lisp A Lisp-like language that compiles to JavaScript. ○\n\nSibilant JavaScript with a lisp. ○\n\njisp A JS-native and axiomatic Lisp that focuses on the core ideas of code-as-data, S-expressions, and macros, introducing as few new concepts as possible. ○\n\nOcamljs OCaml to JS.\n\nO'Browser OCaml bytecode interpreter in JS.\n\nJs_of_ocaml OCaml bytecode to JS compiler.\n\nUHC (Utrecht Haskell Compiler) backend converts UHC core to JavaScript, allowing the compiling of Haskell code to JS.\n\nghcjs Compile normal Haskell into JS\n\njmacro Quasi-Quoted JS that you can insert Haskell values into (there is also shakespeare-js for that purpose), but also supports a more Haskellish syntactic version of JavaScript.\n\n[[https://github.com/aculich/lambdascript|]] Compile a subset of Haskell into JS\n\nYHC (York Haskell Compiler) backend, as above but with YHC core language.\n\njshaskell\n\nhaste\n\nfay A proper subset of Haskell that compiles to JavaScript\n\nforml A contemporary programming language intended to approximate the safety of Haskell and the expressiveness of Ruby.\n\nAmber – formerly known as Jtalk\n\nClamato a Smalltalk dialect that is designed to operate within the JavaScript runtime.\n\nSilver Smalltalk [commercial?] Smalltalk in the browser. (Still active?)\n\nLively Kernel – smalltalk/squeak-like development environment in the browser. See also Avocado, built on top of it.\n\nLittle Smallscript Little Smalltalk to JavaScript translator.\n\nSqueakJS Squeak VM in Javascript\n\nC/C++\n\nEmscripten LLVM to JavaScript compiler. LLVM is \"an aggressive open-source compiler for C and C++,\" as well as other languages.\n\nCheerp (formerly Duetto) “compiles C++ applications to binary code and JavaScript. Based and integrated into the LLVM/clang infrastructure”\n\nmaja vala (gobject) to JavaScript\n\nClue C language compiler to different runtimes (Lua, JS, Perl 5, C, Java, CL).\n\nLLJS typed dialect of JavaScript that offers a C-like type system with manual memory management\n\nMandreel Can convert C++ and Objective-C applications based on OpenGL ES to JavaScript or Action Script 3 web application.\n\nBonsai-C Convert C code to asm.js\n\nNS Basic/App Studio [commercial] Visual Basic-style BASIC to JavaScript compiler. Includes IDE. Targets iOS and Android\n\nqb.js An implementation of QBASIC in JavaScript\n\nSpiderbasic [commercial] SpiderBasic is new web client-side programming language based on established BASIC rules. Its main purpose is to allow development of very complex, windowed based web applications. It provides a large commandset to handle complex and reactive GUI, 2D games, and many more in a coherent manner.\n\nSmart Mobile Studio [commercial] Object Pascal to JavaScript compiler and Delphi like IDE that brings classes, inheritance, interfaces and more to JavaScript\n\nElevate Web Builder [commercial] Visual development tool for web applications that compiles standard Object Pascal source code into JavaScript\n\nGo2js Line-to-line translator from Go to JavaScript.\n\nGopherJS A transpiler from Go to JavaScript.\n\nTARDISgo Compile Golang to Haxe (then on to JavaScript, Flash, Java, C++, C#, PHP, Python & Neko)\n\nHaxe compiles to several platforms (C++, Flash, JS, Neko, PHP, Java, C#, Python).\n\nFantom Evolutionary object-oriented language emphasizing succinct and effective APIs (JVM, CLR, JS).\n\nLZX (Laszlo XML) LZX is OpenLaszlo's declarative user interface language, which is compiled into JavaScript 2 as an intermediary format, and further compiled into either JavaScript 1.5 or ActionScript 3.\n\nClue and jsc above target multiple runtimes in addition to JavaScript\n\nNim compiles to C, C++ and JavaScript\n\nMonkey [commercial] compiles to several platforms (JavaScript, ActionScript 3, C++, Java, CSharp).\n\ndefrac compiles Java bytecode to several platforms (including JavaScript)\n\nĆ Programming Language is automatically translated to C, Java, C#, JavaScript, ActionScript, Perl and D.\n\nTierless languages (produce both client & server)\n\nFun A programming language for realtime webapps – compiles to client-side and server-side JS.\n\nUr In the tradition of ML and Haskell.\n\nmobl The new language for programming the mobile web.\n\nE Compiles E to JS. E is a secure distributed persistent pure object language.\n\nSugar new programming language designed to replace JavaScript for client-side (and server-side) web development\n\nOpa write your complete application in just one language, and the compiler will transform it into a self-sufficient executable\n\nSTIP.js Slicing Tierless Programs in JavaScript\n\nVisual programming tools\n\nWaterbear Tool for making Scratch-inspired block-based languages on the web. Examples include blocks for JavaScript, ProcessingJS, NodeJS, and more.\n\nSnap – JavaScript of BYOB, which is a fork of Scratch\n\nScriptBlocks\n\nIllumination [Commercial] Visual, cross-platform tool creates apps for Android, iPhone, iPad, Desktops and HTML5 or Flash websites. The I language underlies the tool.\n\nJsMaker visual JavaScript programming\n\nMeemoo flow-based visual programming framework for hackable web apps\n\nNoFlo JavaScript implementation of Flow-Based Programming. Programs (network graphs) can be visually created with DrawFBP\n\nBlockly web-based, graphical programming language. Users can drag blocks together to build an application\n\nMaeda Block – visual game programming language powered by enchant.js and Google Blockly. See also the Japanese version.\n\nsql-parser\n\nsqld3\n\nAlasql - SQL to JavaScript parser and compiler\n\nphype run PHP code directly in your browser\n\nuniter run PHP code in Node.js or the browser\n\nphp.js PHP VM with JavaScript, allow to run PHP code in Node.js or the browser\n\nOia A port of Io to JavaScript.\n\nPlaid A gradually-typed, typestate-oriented language designed as a better Java.\n\nQuixe a Glulx VM interpreter written in JavaScript\n\nGnusto a Z-Machine VM interpreter written in JavaScript\n\nLogo Interpreter\n\np2js Perl to JavaScript converter\n\nReb2Static Rebol to JavaScript\n\nRPN Interpreter for a language with a Reverse Polish Notation syntax.\n\njsForth\n\nwForth\n\nAgda a dependently typed functional programming language and mechanized proof assistant\n\nXLCC Interpret LCC into JavaScript on node\n\nSMLtoJs SML to JavaScript compiler\n\nlua.js Lua parser\n\nBrozula Lua bytecode interpreter\n\nPygmy a dynamic language that compiles to JavaScript designed to be readable but concise enough to be competitive in code golf.\n\nbrowserl An Erlang Emulator written in JavaScript\n\nErlyJS JavaScript to Erlang compiler\n\nTopaz Rebol inspired language on top of JavaScript\n\nNGN APL an APL-to-JavaScript compiler written in CoffeeScript\n\nCobolScript COBOL language compiler to JavaScript.\n\nIdris Dependently typed functional language with a JavaScript backend.\n\nDogescript JavaScript for the moon; so syntax very doge much future.\n\nWortel J/APL inspired language with Polish Notation, compiles to JavaScript.\n\nJEnglish interprets regular English statements into HTML/CSS\n\nJotlin a small programming language in Kotlin\n\nuilang and uiscript simple UI-focused script languages for web designers\n\nHodor - Hodor programming language\n\nMason\n\nTools for Compiler Writers\n\nJavaScript Parsers and Extensions\n\nNarcissus Mozilla's experimental JavaScript compiler in JavaScript by Brendan Eich and others.\n\nCommonJS version in DoctorJS\n\nJasy: Python port of Narcissus with some enhancements\n\nPyNarcissus Narcissus's parser ported to Python (used in pyjon)\n\nrbnarcissus Narcissus' parser ported to Ruby.\n\nTraceur Google's vehicle for JavaScript Language Design Experimentation\n\nEcmaScript 5 Parser (es-lab)\n\nEcmaScript 5 Parser (qfox)\n\nreflect.js Implementation of Mozilla's (SpiderMonkey) Parser API in JavaScript\n\nbdParse a JavaScript LL(1) parser in JavaScript\n\nparse-js Common Lisp JavaScript parser\n\nZeParser\n\nEsprima Educational (but fast) ECMAScript parser with output compatible to Mozilla Parser API\n\njs.js A JavaScript JavaScript interpreter. Instead of trying to create an interpreter from scratch, SpiderMonkey is compiled into LLVM and then emscripten translates the output into JavaScript.\n\nsweet.js Brings hygienic macros to JavaScript. Lets you write extensions to JavaScript that must be invoked by the user.\n\nacorn A small, fast, JavaScript-based JavaScript parser\n\nBabel turn your ES6+ code into ES5 friendly code\n\nJavaScript Optimizers\n\nClosure Compiler An optimizing compiler. Can generate a (line/col)-number mappings file.\n\nUglifyJS\n\nJavaScript Parser Generators\n\njison Bison in JavaScript, used by CoffeeScript\n\nnearley A fast, lightweight Earley parser generator\n\nOMeta/JS (source) metacompiler for many languages to many targets, including js.\n\nPEG.js parser generator for JavaScript based on the parsing expression grammar formalism\n\nlanguagejs – PEG parser written in JavaScript with first class errors\n\nCanopy Self-hosting PEG parser compiler for JavaScript, influenced by Ruby parser generators such as Treetop and Citrus\n\nJS/CC LALR(1) parser generator\n\njsparse PEG by Grandmaster Chris Double\n\nReParse parser combinator library for JavaScript like Haskell's Parsec\n\np4js Monadic parser library for JavaScript\n\nJSGLR Scannerless, Generalized Left-to-right Rightmost (SGLR) derivation parser for JavaScript\n\nANTLR 3 has a JavaScript target. ANTLR 4 has not implemented its JavaScript target yet.\n\nCruiser.Parse LL(k) parser\n\nMetaCoffee PEG parser using CoffeeScript and white-space-significant syntax\n\nBennu Parsec inspired Javascript parser combinator library.\n\nJavaScript AST, Semantics\n\nWebAssembly - W3C cross-browser collaboration on a new, portable, size- and load-time-efficient format suitable for compilation to the web.\n\nClosure Compiler AST Documentation\n\nSpiderMonkey Parser API - see also reflect.js above. The AST interface specification is succeeded by the ESTree specification effort.\n\nESTree Specification - An effort to better standardize an AST specification based on the original Spidermonkey Parser API. It is used by Acorn, Esprima, and SpiderMonkey's own parser. This succeeds the original SpiderMonkey Parser API's AST specification.\n\nShift JavaScript AST Specification - see this blog post with more information\n\nJsonML AST format used by the es5 parser\n\ntreehugger JavaScript AST transformation tools\n\nJavaScript Shaper JavaScript syntax tree shaping\n\nburrito & js-traverse – see this post for more info, as well as node-stackedy for an example and node-browserify for running it in a browser instead of node\n\nfalafel - transform the ast on a recursive walk\n\nrocambole - inspired by burrito & falafel, recursively walk and transform EcmaScript AST\n\nJavaScript types – lambdajs, flow typing\n\nSourceMap map JavaScript debugger output to original source\n\nZeon A static visual JavaScript analyzer / editor. See also ZeParser.\n\nescodegen – JavaScript code generator\n\nesmangle minifier for Mozilla Parser API AST\n\nestraverse ECMAScript traversal functions from esmangle project\n\necma-ast AST node data structures for ECMAScript 5.1 based on the SpiderMonkey Parser API\n\nesast Slow compilation? Use typed data for fast AST construction and rendering. Compatible with JSON trees following estree."
    }
}