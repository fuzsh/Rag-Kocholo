{
    "id": "dbpedia_8300_2",
    "rank": 83,
    "data": {
        "url": "https://www.rjmprogramming.com.au/ITblog/xcode-ruby-desktop-application-primer-tutorial/",
        "read_more_link": "",
        "language": "en",
        "title": "Xcode Ruby Desktop Application Primer Tutorial",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.rjmprogramming.com.au/wordpress/wp27.jpg",
            "https://www.rjmprogramming.com.au/RubyOnRails/XCode/DesktopApp/RubyDesktopApplication.jpg",
            "https://www.ontoplist.com/images/ontoplist30.png?id=54e303ad7936b",
            "https://www.rjmprogramming.com.au/MyBusinessUnidad/Welcome_files/rjmhomewhite.png?w=df"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "application",
            "desktop",
            "programming",
            "Ruby",
            "tutorial",
            "Xcode"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Xcode Ruby Desktop Application Primer RJM Programming WordPress Blog Tutorial",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://www.rjmprogramming.com.au/ITblog/xcode-ruby-desktop-application-primer-tutorial/",
        "text": "Have you heard of Ruby? Maybe you know it as Ruby Gems or Ruby on Rails? It is a great object-oriented programming language for both desktop and web usage. Xcode on Mac OS X Leopard supports Cocoa-Ruby Applications, and this tutorial shows the creation of a simple Ruby Desktop Application using the Xcode Cocoa framework.\n\nRuby is a dynamic, reflective, general-purpose object-oriented programming language that combines syntax inspired by Perl with Smalltalk-like features. It was also influenced by Eiffel and Lisp.[8] Ruby was first designed and developed in the mid-1990s by Yukihiro “Matz” Matsumoto in Japan.\n\nRuby supports multiple programming paradigms, including functional, object oriented and imperative. It also has a dynamic type system and automatic memory management; it is therefore similar in varying respects to Smalltalk, Python, Perl, Lisp, Dylan, and CLU.\n\nThe standard 1.8.7 implementation is written in C, as a single-pass interpreted language. Starting with the 1.9 branch, and continuing with the current 2.0 branch, YARV has been used, and will eventually supersede the slower Ruby MRI. The language specifications for Ruby were developed by the Open Standards Promotion Center of the Information-Technology Promotion Agency (a Japanese government agency) for submission to the Japanese Industrial Standards Committee and then to the International Organization for Standardization. It was accepted as a Japanese Industrial Standard (JIS X 3017) in 2011[9] and an international standard (ISO/IEC 30170) in 2012.[10] As of 2010, there are a number of complete or upcoming alternative implementations of Ruby, including YARV, JRuby, Rubinius, IronRuby, MacRuby (and its iOS counterpart, RubyMotion), mruby, HotRuby, Topaz and Opal. Each takes a different approach, with IronRuby, JRuby, MacRuby and Rubinius providing just-in-time compilation and MacRuby and mruby also providing ahead-of-time compilation.\n\nMy experience with Ruby is limited to a great deal of curiosity, and I can’t put my finger on whether it is growing fast in popularity or not, but imagine it is, because there are Mobile App programming possibilities.\n\nIn this primer tutorial we see how Xcode can supervise a Cocoa-Ruby Desktop Application project to access the Interface Builder to create a GUI for a Mac OS X environment.\n\nLink to Ruby more information … via Wikipedia, where quote above came from..\n\nLink to Ruby download website at RubyGems.org.\n\nA word of warning about geographical aspects to Ruby’s usage which, if not heeded, can have interesting results?!"
    }
}