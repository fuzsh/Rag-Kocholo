{
    "id": "dbpedia_4944_0",
    "rank": 47,
    "data": {
        "url": "https://api.scoro.com/api/v2",
        "read_more_link": "",
        "language": "en",
        "title": "Scoro API v2",
        "top_image": "https://scoroassets.scoro.com/gfx/favicon/favicon-32x32.png",
        "meta_img": "https://scoroassets.scoro.com/gfx/favicon/favicon-32x32.png",
        "images": [
            "https://api.scoro.com/ver_24.7/gfx/scoro_logo.svg",
            "https://api.scoro.com/ver_24.7/gfx/arrow-down.svg",
            "https://api.scoro.com/ver_24.7/gfx/arrow-down.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "https://scoroassets.scoro.com/gfx/favicon/apple-touch-icon.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Overview\n\nThe Scoro API is an interface for accessing your Scoro account data using HTTP and JSON. The API makes it easy to create web and desktop applications that integrate with your account.\n\nSome potential application ideas:\n\nBilling for your application or service\n\nCustom import tools (SalesForce, QuickBooks, CSV, etc.)\n\nRevenue analysis\n\nService URL\n\nThe Scoro API has a single point of entry, derived from your account URL\n\nFull url depends on the info requested.\n\nSample URL\n\nhttps://#companyname#.scoro.com/api/v2\n\nPlease note the use of https:// in the URL above. All API communication is encrypted over HTTPS. Any non-secure requests are automatically rejected, so we recommend establishing a test connection with the secure API entry point before sending sensitive data.\n\nFull address to send JSON requests looks like this\n\nFull request url\n\nhttps://#companyname#.scoro.com/api/v2/#module#(/#action#)(/#id#)\n\nwhere\n\n#companyname# is the subdomain\n\n#module# is the module accessed (\"contacts\")\n\n#action# (optional) what to do with the selected object. Possible options are (\"modify\", \"delete\", \"view\"), see each module for a list of available actions\n\n#id# (optional) what object to get\n\nIntegrate with us\n\nBuild a public integration with Scoro\n\nYou can build your own integration with Scoro and list it in our Marketplace to make it available for all Scoro users.\n\nWhy build a public integration?\n\nYour integration will be listed in Scoro's Marketplace, where it's showcased to Scoro customers and thousands of professional service businesses every month.\n\nYou will get access to your own sandbox for development and testing without any expiration date.\n\nScoro will announce the integration to its customers via its own channels to help you promote it.\n\nScoro will provide proactive support throughout development and help you manage errors once the integration is live.\n\nHow to get started?\n\nTo build a public integration with Scoro, follow the steps below:\n\nFill in this form to express your interest. We will contact you either by email or phone to validate your request.\n\nWhile waiting for our response:\n\nCreate a trial account, which is free for 14 days, via our website. This way, you can already start developing and testing.\n\nCreate an account at developers.scoro.com to register your integration and generate an AppId. The AppId is a requirement for public integrations. It must be used as a HTTP header called \"scoro-app-id\" in all API calls that the integration is doing against Scoro servers:\n\nscoro-app-id: AppId\n\nIf the scoro-app-id is wrong, or the AppId is not registered, a 401 Unauthorized HTTP error code will be returned.\n\nOnce your integration is ready, let us know by submitting it for review via the developers portal. We'll help you publish it in Scoro's Marketplace. We might ask you to provide additional descriptions or documentation before publication, depending on the complexity of your integration.\n\nRelease notes\n\nHere are current changes in API.\n\nChanges in 24.5\n\nEnhancements & New Features\n\nEndpoint Description Bookings Added new endpoint to modify, list, delete or view bookings which can be used to plan project resources. Time entries Fields is_submitted and submitted_date were added to Time entries list and view endpoints. Revenue forecast periods Added new endpoints to revenue forecast periods: view, modify and list. Requires revenue forecast feature, and user based permissions if it is user based request, to see revenue forecasts on quotes or projects. Only project related revenue forecast periods can be modified. Only future periods' forecasted_revenue and past periods recognized_revenue can be modified. If modifying current month's period, then forecasted_revenue or recognized_revenue can be modified, but not at the same time. List endpoint can only be accessed with apiKey. Fields project_id, quote_id and period are filterable. Roles Added new endpoint to list or view roles. Works only when roles are enabled.\n\nChanges in 24.4\n\nEnhancements & New Features\n\nEndpoint Description Quotes Field quote_name was added. Time entries Field time_entry_date was added.\n\nChanges in 24.2\n\nEnhancements & New Features\n\nEndpoint Description Roles with prices Added new endpoint for fetching a list of roles with pricelist prices. Works only when roles are enabled.\n\nChanges in 23.12\n\nEnhancements & New Features\n\nEndpoint Description Quotes Field estimated_duration was added.\n\nChanges in 23.11\n\nEnhancements & New Features\n\nEndpoint Description Invoices Field pay_now_link was added. Used when payment processing platform (like Stripe) has been connected. Projects, Invoices, Quotes, Orders, Prepayments, Scheduled Invoices Fields is_role_based and local_price_list_id were added. Local price lists Added new endpoint to modify or view local price lists which are related to a role based document or to a project. Bill lines, Expense lines, Invoice lines, Quote lines, Order lines, Prepayment lines, Purchase order lines, Scheduled Invoice lines Field finance_account_symbol can now be used in modify requests.\n\nChanges in 23.4\n\nEnhancements & New Features\n\nEndpoint Description Products Field default_role_id was added. Invoice lines, Order lines, Prepayment lines, Quote lines, Scheduled invoice lines Field role_id was added.\n\nChanges in 22.9\n\nEnhancements & New Features\n\nEndpoint Description Invoices Fields accounting_period_from and accounting_period_to added to Invoices list and view endpoint.\n\nChanges in 22.8\n\nEnhancements & New Features\n\nEndpoint Description Orders Field currency_rate added to Orders view endpoint.\n\nChanges in 22.4\n\nEnhancements & New Features\n\nEndpoint Description Webhooks Fields were added to webhooks. Tasks Field quote_line_id was added to Tasks endpoint.\n\nChanges in 21.9\n\nEnhancements & New Features\n\nEndpoint Description Projects Project phases were added to project actions. Webhooks Subscribing to purchase orders and expenses changes was added.\n\nChanges in 21.8\n\nEnhancements & New Features\n\nEndpoint Description Custom Fields Default value will be applied to a custom_field object field value in case if no value provided whilst creating the new object. Products Fields amount and amount2 added to Products actions. Webhooks Webhook id was added to webhooks. Subscribe response now includes full webhook object. Webhooks List action was added to webhooks. Contacts, Projects, Calendar events, Tasks, Invoices, Prepayments, Scheduled Invoices, Quotes, Orders, Bills, Expenses, Purchase Orders, Custom modules Manager email was added to contacts and projects. Owner email was added to calendar events, tasks, invoices, prepayments, scheduled invoices, quotes, orders, bills, expenses, purchase orders and custom modules. Contacts Contact's manager can be set by manager_email in contacts modify action Webhooks User group support added to webhooks actions.\n\nChanges in 21.7\n\nBugfixes\n\nEndpoint Description Prepayments Prepayment status is now set correctly if prepayment_percent is not specified.\n\nChanges in 21.6\n\nEnhancements & New Features\n\nEndpoint Description Time entries Field modified_date added to Time entries.\n\nChanges in 21.5\n\nEnhancements & New Features\n\nEndpoint Description Custom modules New endpoint has been added for requesting available custom modules. Site based and user based requests are supported. Custom modules endpoints Owner email field added to custom module entries for view requests.\n\nChanges in 21.4\n\nEnhancements & New Features\n\nEndpoint Description Comments Filters are enabled for comment, parent_id, user_id and modified_date in list request. Comments Field user_id is now mandatory in case of creating new comment with API Key. Purchase Order Lines Field is_settled was added. The parameter shows if specific purchase order line is settled (finished) or not. Calendar events Inactive users, who are related to the calendar event are displayed in the view response. Webhooks Added support for subscribing to bookmark specific webhooks Finance Accounts Fields is_sales_account and is_purchases_account were added. In order to update the classification, both fields, is_sales_account and is_purchases_account, need to be included in the request.\n\nBugfixes\n\nEndpoint Description Calendar events Adding calendar event will return error, if user doesn't have permission to add events for all participants.\n\nChanges in 21.3\n\nEnhancements & New Features\n\nEndpoint Description Purchase Orders Field currency_rate was added.\n\nChanges in 21.2\n\nEnhancements & New Features\n\nEndpoint Description User Roles New API endpoint. Labor cost New API endpoint. Quotes, Orders, Bills, Expenses, Purchase Orders, Prepayments, Scheduled Invoices, Invoices Field owner_email was added to modify requests. Time Entries Field is_locked was added. Please note, that parameter is available only if \"Use time locking\" setting is enabled. Products Field is_service has a validation that it cannot be changed if the product is already used on any document.\n\nChanges in 21.1\n\nEnhancements & New Features\n\nEndpoint Description Projects Field project_customer_portal_user was added. Users Customer portal users were added. Invoice lines, Prepayment lines, Scheduled invoice lines, Purchase order lines, Bill lines, Expense lines, Quote lines, Order lines Using default values for creating new documents functionality was added.\n\nChanges in 20.6\n\nEnhancements & New Features\n\nEndpoint Description Products Field no_discounts was added. Bills Field purchase_order_id was added. User groups Removed the modify and delete endpoints. Phases Removed the possible value of phase_milestone from the type field. Invoices Validation rules added for quote_id, order_id, prepayment_id and credited_invoices.\n\nOnly existing objects can be related.\n\nChanges in 20.4\n\nEnhancements & New Features\n\nEndpoint Description Users Field is_active now is deprecated.\n\nNew field status should be used for requiring user's status. Webhooks Endpoint has now domain validation. Tasks Project_id field has validation that it must be an Integer. Time entries Added validation for duration fields. Duration field expected input is (HH:ii:ss). Custom Fields Custom field values that are of type select (checkbox) or subheading will be returned as integers instead of strings. Custom Module Fields status_name and status added to custom modules.\n\nChanges in 20.3\n\nEnhancements & New Features\n\nEndpoint Description Bookmarks Endpoint was updated: If the site has \"companies and persons as separate modules\" and a request to /v2/bookmarks/list/ is made asking for contacts bookmarks then both companies bookmarks and people bookmarks are returned. If the site has \"companies and persons in one list\" and a request to /v2/bookmarks/list/ is made asking for contacts bookmarks then only contacts bookmarks are returned. Tasks Field start_datetime was added. Time entries Modification of calendar event's time entries has been limited to invoice_line_id field.\n\nInactive tax rates are now returned with vatCodes list request. Sent e-mails New API endpoint. Project phases New API endpoint. Client profiles New API endpoint. Calendar events, Tasks Field project_phase_id was added. Contacts Field related_companies was added. Price list Modify request support was added.\n\nChanges in 20.2\n\nEnhancements & New Features\n\nEndpoint Description Bill lines Field amount2 was removed. Bills Fields recognition_date, payment_type and dateofpayment were added. Activities Field product_id was added.\n\nChanges in 20.1\n\nEnhancements & New Features\n\nEndpoint Description Products Fields sales_finance_account_id and purchases_finance_account_id were added. Bills Field reference_number was added. Orders, Quotes Field shipment_date was added. Invoices Fields generation_type and scheduled_invoice_id were added. Finance Accounts New API endpoint. PDF Templates New API endpoint. It allows to request all the templates that your site has. Available as a list action. Invoices, Prepayment invoices, Quotes, Purchase orders, Orders New pdf generation action was added. Generated PDF files are available only for 30 days after the generation. Projects, Tasks, Calendar events Field status_name was added to view response. Bills, Orders, Prepayments, Quotes, Scheduled Invoices, Purchase orders, Invoices, Contacts, Projects, Tasks, Products, Calendar events Option detailed_response can be used in the API request object for list request to have the same response as view request would return. Contacts Field means_of_contact can be used as filter option when user_token or apiKey is used.\n\nChanges in 19.10\n\nEnhancements & New Features\n\nEndpoint Description Tasks Added support for specifying task's completion time to setDone action.\n\nChanges in 19.9\n\nEnhancements & New Features\n\nEndpoint Description Invoices, Prepayment invoices, Scheduled invoices, Bills Fields finance_account_symbol and finance_account_name were added. Bills, Prepayment invoices, Scheduled invoices, Purchase orders, Orders Fields company_name, person_name, project_name, owner_email and vat_code were added. Bill lines, Prepayment invoice lines, Scheduled invoice lines, Purchase order lines, Order lines Fields product_name, product_code, finance_object_name, finance_object_symbol, project_name, vat_code were added. Bills, Prepayment invoices, Scheduled invoices Field currency_rate was added. Orders, Prepayment invoices, Scheduled invoices Field company_address was added.\n\nChanges in 19.8\n\nEnhancements & New Features\n\nEndpoint Description Bills, Invoices, Orders, Prepayments, Quotes, Scheduled Invoices, Purchase orders Field created_date was added. User Authorization Endpoint is updated with 2-step verification support.\n\nChanges in 19.5\n\nEnhancements & New Features\n\nEndpoint Description Products Fields default_type, use_supplier, default_doer_id and unit were added.\n\nField buying_price will now change the buying price in the price list specified with price_list (similarly to price field). Invoice lines, Order lines, Quote lines, Prepayment lines, Scheduled invoice lines Fields doer_id and is_internal were added. Contacts Field search_name was added. It will return contact's full name. Receipts Field invoice_no was added. Receipt Groups, Receipt Accounts Endpoints supports access with user token. Quotes Fields company_name, person_name, company_address, project_name, owner_email, vat_code, currency_rate and status_name were added. Quote lines Fields product_name, product_code, finance_account_name, finance_object_name, finance_object_symbol, supplier_name, project_name and vat_code were added. Invoices Field prepayment_id was added.\n\nChanges in 19.4\n\nEnhancements & New Features\n\nEndpoint Description Webhooks Fields relation_type, owners and actors were added. Invoices Fields company_name, person_name, company_address, project_name, owner_email, vat_code, currency_rate, paid_sum and receivable_sum were added. Invoice lines Fields product_name, product_code, finance_account_name, finance_object_name, finance_object_symbol, supplier_name, project_name, and vat_code were added.\n\nChanges in 19.2\n\nEnhancements & New Features\n\nEndpoint Description Products Fields product_accounts and account_id were added.\n\nChanges in 19.1\n\nEnhancements & New Features\n\nEndpoint Description Time entries Fields event_type, calendar_event_id and time_entry_type were added. Users Field full_name was added.\n\nChanges in 18.10\n\nEnhancements & New Features\n\nEndpoint Description Custom Fields New API endpoint was added. It allows to request a list of custom fields that your site has.\n\nChanges in 18.9\n\nEnhancements & New Features\n\nEndpoint Description Invoice lines, Scheduled invoice lines Field dates was added.\n\nChanges in 18.8\n\nEnhancements & New Features\n\nEndpoint Description Bills Field is_chargeable was added. Price lists Field account_id was added. Projects Field project_accounts was added. It will return all company accounts that project is accessible from.\n\nNotice\n\nEndpoint Description All endpoints The lang parameter is now optional. If it is not specified then the sites default language is used (users default language is used if the request is made using user_token).\n\nChanges in 18.7\n\nEnhancements & New Features\n\nEndpoint Description Activities Field parent_name was added.\n\nChanges in 18.6\n\nEnhancements & New Features\n\nEndpoint Description Quotes Field estimated_closing_date was added.\n\nRequest Limits\n\nA maximum of 100 results will be returned for list methods, regardless of the value sent with the per_page parameter. The page paramater can be used to request additional items. When detailed_response is used, the maximum number of results will be 25.\n\nSample request with per_page and page parameters\n\n{ \"apiKey\": \"API_hash\", \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"per_page\": 50, \"page\": 2, \"detailed_response\": true, \"request\": {} }\n\nSample request with user_token\n\n{ \"user_token\": \"USER_API_token\", \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"per_page\": 50, \"page\": 2, \"detailed_response\": true, \"request\": {} }\n\nRate Limiting\n\nWe limit the rate of API requests to ensure reliable and responsive services for all our customers. It helps to prevent the system from getting overloaded and minimizes the risk of temporary performance issues.\n\nThe rate limit window duration is 2 seconds for any authentication method. We’ve also set a daily usage limit, which always resets at midnight UTC. The limits apply per site/domain and vary based on your chosen plan as follows:\n\nEssential Standard Pro Ultimate 2 sec limit 10 20 40 80 Daily limit 50,000 100,000 500,000 1,000,000\n\nFor example, if your Scoro site examplecompany.scoro.com is subscribed to a Pro plan, you can send 40 API requests per 2 seconds and 500,000 requests per 24 hours.\n\nHTTP headers and response codes\n\nEvery API call will return a message containing the following headers:\n\nHeader Description Example x-ratelimit-limit The maximum number of requests per domain for every 2 second window x-ratelimit-limit: 40 x-ratelimit-remaining The number of requests left for the 2 second window x-ratelimit-remaining: 39 x-ratelimit-reset The time remaining in seconds before the rate limit is reset x-ratelimit-reset: 1 x-daily-requests-limit The maximum number of requests per domain for the day* x-daily-requests-limit: 100000 x-daily-requests-remaining The number of requests left for the day* x-daily-requests-remaining: 99999 x-daily-requests-reset The time remaining in seconds before the rate limit is reset for the day* x-daily-requests-reset: 86400\n\n* Daily limits reset at midnight UTC\n\nAny request that comes after the limit has been reached is rejected and gets an HTTP 429 Too many request error code in response.\n\nThe response message will look like this:\n\nResponse HTTP/1.1 429 Too many requests\n\n{ \"status\": \"ERROR\", \"statusCode\": \"429\", \"messages\": { \"error\": [ \"Too many requests\" ] } }\n\nWhat to do when the rate limit is reached and how to avoid it\n\nIf you reach the rate limit, consider using Webhooks to decrease the number of requests and/or upgrading your plan to increase the limit. Alternatively, you could review the architecture of your integration to see if the same result could be achieved with fewer requests.\n\nIn any case, your integration should be ready to handle the HTTP 429 error code and rate limit headers properly. Here is an example of a possible solution scenario in pseudocode:\n\nlet response = await fetch(...); if (response is OK) { handleSuccess(...); } else if (statusCode is 429) { if (headerValue('x-ratelimit-remaining') is 0) { delay(1000 * headerValue('x-ratelimit-reset')); } else if (headerValue('x-daily-requests-remaining') is 0) { delay(1000 * headerValue('x-daily-requests-reset')); } else { handleFailure(...); } } else { handleOtherFailures(...); }\n\nAdditional information\n\nZapier\n\nPlease note that API calls from Zapier are included in the rate limits. This means that Zapier will handle excessive API usage, which can result in your API calls becoming slower. Zapier will wait before retrying the API call. This might affect your workflow. To prevent any issues, we recommend adapting your architecture to reflect the limit of your subscription level. Our API rate limit is implementing a Retry-After functionality.\n\nWebhooks\n\nWebhooks are not subjected to rate limiting, but webhook endpoints are (subscribe, unsubscribe and list) since these are part of the API.\n\nRepresentation Formats\n\nAll API requests are composed of light-weight JSON delivered as an HTTP POST request to the endpoint URL.\n\nAll JSON should be UTF-8 encoded.\n\nDate and time values are of the form YYYY-MM-DDTHH:MM:SS+0000.\n\nWhen not providing timezone info in the value then site default timezone is used.\n\nBooleans are either 1 (true) or 0 (false).\n\nFields denoting percentages are passed as whole values, not decimals (e.g. 5 for five percent).\n\nAll requests should contain at least the following values:\n\napiKey OR user_token- a unique key used for authentication\n\ncompany_account_id - specifies which business entity’s data is used (formerly known as ‘company accounts’)\n\nThe apiKey and company_account_id values are listed in Settings > External Connections > API.\n\nIt is also recommended (but not required) that you specify the lang parameter for each response.\n\nIf the lang parameter is not set then the response is returned in sites default language.\n\nIf the lang parameter is not set and request is made using a user_token then the response is returned in users default language.\n\nSample request in PHP using cURL\n\n<?php define('API_KEY', 'API_hash'); define('BASE_URL', 'https://#companyname#.scoro.com/api/v2'); $fields = array( 'apiKey' => API_KEY, 'lang' => 'eng', 'company_account_id' => 'sample', 'per_page' => '10' ); $fieldsJson = json_encode($fields); $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, BASE_URL.'/contacts'); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, $fieldsJson); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $result = curl_exec($ch); if ($result) { $contacts = json_decode($result, true); ?><pre><?print_r($contacts);?></pre><? } ?>\n\nResponses\n\nAll responses are wrapped in a top-level response element. The status attribute will let you know whether the request succeeded or failed. Status can be OK or ERROR. The statusCode attribute can contain the following values:\n\nStatus code Response message Description 200 Success If data was requested, it will be available in the data field at the top level of the response body. 400 Invalid request This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again. 401 No authorization A valid API key was not provided with the request, so the API could not associate a user with the request. 403 Forbidden The API key was wrong. 408 Request timed out The maximum execution time of the request was reached. 429 Too many requests The maximum number of requests was reached. 500 Server error There was a problem on our end. 503 Service unavailable API usage has been temporarily suspended. Try again later.\n\nIn the event of an error, the response body will contain an messages field at the top level. This contains an array of at least one error message\n\nMissing authorization header\n\nRequest https://#companyname#.scoro.com/api/v2/contacts\n\n{ \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"request\": {} }\n\nResponse HTTP/1.1 200\n\n{ \"status\": \"ERROR\", \"statusCode\": \"401\", \"messages\": { \"error\": [ \"Missing Api Key\" ] } }\n\nBad request parameters\n\nRequest https://#companyname#.scoro.com/api/v2/contacts\n\n{ \"apiKey\": \"wrong\", \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"request\": {} }\n\nResponse HTTP/1.1 200\n\n{ \"status\": \"ERROR\", \"statusCode\": \"403\", \"messages\": { \"error\": [ \"Wrong Api Key\" ] } }\n\nThere was a problem on our end\n\nRequest https://#companyname#.scoro.com/api/v2/contacts\n\n{ \"apiKey\": \"API_hash\", \"lang\": \"abc\", \"company_account_id\": \"tutorial\", \"request\": {} }\n\nResponse HTTP/1.1 200\n\n{ \"status\": \"ERROR\", \"statusCode\": \"500\", \"messages\": { \"error\": [ \"Language code[lang] missing or wrong\" ] } }\n\nFilters\n\nList results can be filtered by adding a filter object to the request. This filter object should have field names as keys and search words as values. If filtering by a range the value should be another object containing from and/or to field.\n\nFilter results\n\nhttps://#companyname#.scoro.com/api/v2/contacts\n\n{ \"apiKey\": \"API_hash\", \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"filter\": { \"name\": \"Sample%\" } }\n\nFiltering by range\n\n{ \"apiKey\": \"API_hash\", \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"filter\": { \"modified_date\": { \"from_date\": \"2013-02-01\", \"to_date\": \"2013-02-28\" } } }\n\nFiltering by custom fields\n\n{ \"apiKey\": \"API_hash\", \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"filter\": { \"custom_fields\": { \"field1\": \"value1\", \"field2\": \"value2\" } } }\n\nFiltering with deleted entries\n\n{ \"apiKey\": \"API_hash\", \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"include_deleted\": \"1\", \"filter\": { \"modified_date\": { \"from_date\": \"2013-02-01\", \"to_date\": \"2013-02-28\" } } }\n\nCustom fields\n\nThe field custom_fields contains the values for custom fields related to the main object. Custom_fields is structured as an array of objects with the following keys: id, name, value and type. Custom fields are not included for list requests. Please note, that if custom_field has a default value - it will be applied if no value is provided while creating a new object.\n\nExample custom_fields structure:\n\n{ \"...\": \"...\", \"custom_fields\": [ { \"id\": \"c_field1\", \"name\": \"Field 1\", \"value\": \"Value 1\", \"type\": \"text\" }, { \"id\": \"c_field2\", \"name\": \"Field 2\", \"value\": 123, \"type\": \"number\" } ] }\n\nTo add/modify custom field values use an array of values\n\n{ \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"apiKey\": \"e238865f83e2b04c09c5c8b39696d37sc\", \"request\": { \"name\": \"New Name\", \"addresses\": [ { \"street\": \"Reading 13\", \"zipcode\": \"123\" } ], \"custom_fields\": [ { \"id\": \"c_field1\", \"value\": \"Value 1\" }, { \"id\": \"c_field2\", \"value\": 123 } ] } }\n\nBookmarks\n\nUsed only for user based API and with list requests\n\nExample request with bookmark object:\n\n{ \"user_token\": \"userToken\", \"lang\": \"eng\", \"company_account_id\": \"tutorial\", \"bookmark\": { \"bookmark_filter_ignored\": \"true\" }, \"request\": {} }\n\nBookmark field Data type Supported modules Description bookmark_filter_ignored boolean all Can ignore bookmark filters and retrieve all objects that user can see. Will override all other bookmark options. bookmark_id integer all Bookmark Id bookmark_users array[integer] all User Ids to be used for filtering data bookmark_projects array[integer] calendar,tasks Project Ids to be used for filtering data bookmark_statuses array[string] calendar,tasks,projects Project Ids to be used for filtering data bookmark_resources array[integer] calendar Resource Ids to be used for filtering data bookmark_activities array[integer] calendar,tasks Activity Ids to be used for filtering data bookmark_dates mixed[date] calendar,tasks Takes two required parameters \"from_date\" and \"to_date\" which you can filter the objects by. Value of \"*\" is general. bookmark_tags mixed contacts,projects Takes list of tag Ids to be used for filtering data. bookmark_priorities mixed tasks Takes list of priority Ids to be used for filtering data. bookmark_categories array[integer] contacts Takes list of category Ids to be used for filtering data. bookmark_keywords string all Takes a text string to be used for filtering data. bookmark_types string contacts Takes a text string to be used for filtering data. bookmark_client_profiles array[integer] contacts Takes list of client profile Ids to be used for filtering data. bookmark_due_dates mixed[integer] tasks Takes two parameters \"from\" and \"to\". Are used for filtering out objects based on their due date.\n\nTimezones\n\nContacts have their own timezone field. List of available timezones are shown here"
    }
}