{
    "id": "dbpedia_4944_0",
    "rank": 98,
    "data": {
        "url": "https://css-tricks.com/lots-of-ways-to-use-math-random-in-javascript/",
        "read_more_link": "",
        "language": "en",
        "title": "Lots Of Ways To Use Math.random() In JavaScript",
        "top_image": "https://css-tricks.com/wp-json/social-image-generator/v1/image/326055",
        "meta_img": "https://css-tricks.com/wp-json/social-image-generator/v1/image/326055",
        "images": [
            "https://css-tricks.com/wp-content/uploads/2020/11/2m3kcqcZ7sl5xgLJtoXh0bw-80x80.jpeg"
        ],
        "movies": [
            "//codepen.io/anon/embed/vYKxNZp?height=300&theme-id=1&slug-hash=vYKxNZp&default-tab=result",
            "//codepen.io/anon/embed/mJzOWJ?height=450&theme-id=1&slug-hash=mJzOWJ&default-tab=result",
            "//codepen.io/anon/embed/zxoOjG?height=550&theme-id=1&slug-hash=zxoOjG&default-tab=result",
            "//codepen.io/anon/embed/RQEOWm?height=600&theme-id=1&slug-hash=RQEOWm&default-tab=result",
            "//codepen.io/anon/embed/RerqjG?height=450&theme-id=1&slug-hash=RerqjG&default-tab=result",
            "//codepen.io/anon/embed/iCgfj?height=700&theme-id=1&slug-hash=iCgfj&default-tab=result",
            "//codepen.io/anon/embed/OJRVXXG?height=450&theme-id=1&slug-hash=OJRVXXG&default-tab=result",
            "//codepen.io/anon/embed/rxOmMJ?height=450&theme-id=1&slug-hash=rxOmMJ&default-tab=result",
            "//codepen.io/anon/embed/mErPAK?height=250&theme-id=1&slug-hash=mErPAK&default-tab=result",
            "//codepen.io/anon/embed/ONjyMo?height=450&theme-id=1&slug-hash=ONjyMo&default-tab=result",
            "//codepen.io/anon/embed/YeMOVv?height=450&theme-id=1&slug-hash=YeMOVv&default-tab=result"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Jwahir Sundai"
        ],
        "publish_date": "2020-11-30T07:49:48-07:00",
        "summary": "",
        "meta_description": "Math.random() is an API in JavaScript. It is a function that gives you a random number. The number returned will be between 0 (inclusive, as in, it’s possible",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "CSS-Tricks",
        "canonical_link": "https://css-tricks.com/lots-of-ways-to-use-math-random-in-javascript/",
        "text": "Math.random() is an API in JavaScript. It is a function that gives you a random number. The number returned will be between 0 (inclusive, as in, it’s possible for an actual 0 to be returned) and 1 (exclusive, as in, it’s not possible for an actual 1 to be returned).\n\nMath.random(); // returns a random number lower than 1\n\nThis is incredibly useful for gaming, animations, randomized data, generative art, random text generation, and more! It can be used for web development, mobile applications, computer programs, and video games.\n\nCodePen Embed Fallback\n\nWhenever we need randomization in our work, we can use this function! Let’s look at eight different ways we can use it. These examples are all from different authors doing something interesting with this API.\n\nAnimation\n\nCodePen Embed Fallback\n\nTo spawn an object and animate it, we use Math.random. The neon lines form spontaneous hexagons but randomization is also in its generative sparks.\n\nComputer-generated music\n\nCodePen Embed Fallback\n\nThis program takes the traditional melody of “Auld Lang Syne” and plays random notes from it in piano. A change package is created from the count data and a random number is generated to select a value. The octave is also randomly selected.\n\nDisplay a random image\n\nCodePen Embed Fallback\n\nImages are stored in an array. A number is generated and multiplied by the number of images in the array via array.length. Then Math.floor rounds the value to a round number and sets the image src in the HTML when the page is loaded or the button is clicked.\n\nRandom background color\n\nCodePen Embed Fallback\n\nThis is where the magic happens:\n\nconst random = (min, max) => { return Math.floor(Math.random() * (max - min + 1)) + min; }\n\nThe first line of code randomly shuffles the array and the second line returns a random umber between 0 and 10. In the example of a random color background, the range of colors and specifics such as hues, saturations, and shades can be set.\n\nFor another method for generating a random hex color, check out this article by Chris Coyer.\n\nGenerative art\n\nCodePen Embed Fallback\n\nIn this morphing fractal curve, Math.random is used twice to set the colors for the gradient and once more for the max radius of the curves. This is a great way to construct an entirely new appearance with every iteration!\n\nWord generator\n\nCodePen Embed Fallback\n\nWe replace the header with a randomly selected word from an array using Math.random:\n\nvar word = words[Math.floor(Math.random() * words.length)] + \"!\";\n\nThis is a lot like the random image example — the perfect sort of practice for beginners!\n\nAPI key generator\n\nCodePen Embed Fallback\n\nHere’s a super real-world practical use case for random numbers! The demo generates 16 random numbers to create a universally unique identifier (UUID) that can be used as a key that provides access to an API.\n\nText scramble\n\nCodePen Embed Fallback\n\nA few phrases are stored and displayed in sequence, separated by an animation that appears to scramble the letters with random characters between phrases that are selected by Math.random.\n\nRock Paper Scissors\n\nCodePen Embed Fallback\n\nIn this childhood classic game of Rock Paper Scissors, Math.random is used to generate a randomized move for the computer playing as the opponent. It makes a pick from the three available moves.\n\nStrong Password Generator\n\nCodePen Embed Fallback\n\nThis password generator uses Math.random to get a password array filled with uppercase and lowercase letters then adds random digits to the generated password. This is another great practical example!\n\nA couple of notes…\n\nIt’s possible you have questions after seeing Math.random in these examples. There are a couple I see come up often…\n\nIs Math.random() really random?\n\nNot exactly. Math.random() returns a pseudo-random number. This algorithm is called a pseudo-random number generator (or PRNG). This means its randomization can be reproduced under certain circumstances.\n\nThe randomization is based on the algorithm xorshift128+, which is likely running on your browser.\n\nSo, it’s random-ish.\n\nHow do you handle repeated values?\n\nThere are many methods to achieve unique values without repetition. The Fisher-Yates is one great way to prevent getting the same number twice by shuffling the sequence. Math.random will select a value from the shuffled array of a finite sequence demonstrated by the code snippet below.\n\nfunction shuffle (array) { var i = 0 , j = 0 , temp = null for (i = array.length - 1; i > 0; i -= 1) { j = Math.floor(Math.random() * (i + 1)) temp = array[i] array[i] = array[j] array[j] = temp } }\n\nIs Math.random() the same as WebCrypto?\n\nAs you’ve seen from this article, Math.random() is awesome! However, if you dealing with sensitive applications and need a more secure method of randomization, I’d recommend WebCrypto. Reasons you may want to use WebCrypto include temporary verification codes, random password generation, randomized lottery numbers, etc."
    }
}