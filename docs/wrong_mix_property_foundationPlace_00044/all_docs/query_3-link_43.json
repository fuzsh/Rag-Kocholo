{
    "id": "wrong_mix_property_foundationPlace_00044_3",
    "rank": 43,
    "data": {
        "url": "https://qlik.dev/changelog/",
        "read_more_link": "",
        "language": "en",
        "title": "Qlik Developer Portal",
        "top_image": "https://qlik.dev/preview.png",
        "meta_img": "https://qlik.dev/preview.png",
        "images": [
            "https://qlik.dev/_astro/connectors.iuJnV7jh_14Tk5b.webp",
            "https://qlik.dev/_astro/blocks.CeMD8wz6_1sTmr6.webp",
            "https://qlik.dev/_astro/auto.Ckf8FlQ5_Z1XWhpr.webp",
            "https://qlik.dev/_astro/types.D_fc2568_1I9B4l.webp",
            "https://qlik.dev/_astro/qlik-cli-docs.C2BhASPc_Zmb65F.webp",
            "https://qlik.dev/logo-footer.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/favicon.svg",
        "meta_site_name": "",
        "canonical_link": "https://qlik.dev/changelog/",
        "text": "qlik-cli 2.25.0\n\nA new release of qlik-cli has been published.\n\nChange summary:\n\nAdded oauth-client command for the oauth-clients API\n\nAdded automation-connections command for the automation-connections API\n\nUpdated app properties exported on qlik app unbuild command\n\nAdded CSRF support for Qlik Sense Enterprise client-managed\n\nTidied up various descriptions\n\nRemoved deprecated qlik catwalk commands\n\nRemoved deprecated qlik csp-header commands\n\nAdded oauth-client command for the oauth-clients API\n\nThe oauth-clients API allows you to create and manage OAuth clients, used for authentication in Qlik Cloud. These are designed to support use cases such as embedding, automation, orchestration, and more.\n\nExplore the new commands under:\n\nqlik oauth-client\n\nIf youâre new to OAuth in Qlik Cloud, explore the OAuth2 overview.\n\nAdded automation-connections command for the automation-connections API\n\nAutomations are the primary resource for Qlik Application Automation, which provide no-code methods for integrating with Qlik and third-party services.\n\nThe recently released Automation-connections API allows you to create and manage connectivity to services. These connections can be used by one or more automations.\n\nExplore the new commands under:\n\nqlik automation-connection\n\nAdded missing app properties to the unbuild command, to ensure a more complete unbuild of the app.\n\nAdded CSRF support for Qlik Sense Enterprise client-managed\n\nAn upcoming change in Qlik Sense Enterprise client managed will make it a requirement to include a CSRF-token when establishing websocket connections. This adds a forwards-compatible fix for that.\n\nRemoved deprecated qlik csp-header commands\n\nThis deprecated endpoint has now been removed. It was replaced by qlik csp-origin generate-header.\n\nQlik Application Automation provides you with the ability to create workflows in a no-code interface. Most Application Automation connectors require a connection to a data source, containing information on where the data source is, connection credentials, and more.\n\nThe updated automation-connections API endpoints provide capabilities for users to manage automation connections in personal and shared spaces, including, but not limited to, retrieving, creating, updating and deleting an automation connection, as well as changing its owner and moving it to a different space. This is useful for collaborations and administration, and also when programmatically deploying, backing up, and restoring automations.\n\nIn the initial release, you could retrieve a list of connections:\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/automation-connections\" \\ -H \"Authorization: Bearer <API-key>\"\n\nNow with the updated API, you could retrieve a single connection:\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/automation-connections/{id}\" \\ -H \"Authorization: Bearer <API-key>\"\n\nAn example response, returning a single connection for the Qlik Cloud Services connector.\n\n{ \"data\": { \"id\": \"1968b1a0-1a75-11ee-9e04-976916adf99b\", \"name\": \"Qlik Cloud Services\", \"spaceId\": \"\", \"ownerId\": \"64a428976c47a6c39e592159\", \"isConnected\": true, \"connectorId\": \"61a87510-c7a3-11ea-95da-0fb0c241e75c\", \"oauthAccountName\": null, \"redirect\": null, \"params\": [], \"createdAt\": \"2023-07-04T14:14:33.000000Z\", \"updatedAt\": \"2024-03-14T11:32:10.000000Z\" } }\n\nThe API now also supports connection creation and updates, for example, creating a new connection:\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/automation-connections\" \\ -X POST \\ -H \"Authorization: Bearer <API-key>\" \\ -H \"Content-type: application/json\" \\ -d '{\"name\":\"connection\",\"params\":[{\"name\":\"username\",\"value\":\"string\"}],\"spaceId\":\"5f0f78b239ff4f0001234567\",\"connectorId\":\"3004e850-1985-11ee-b6df-8d800b305320\"}'\n\nAn example response, returning details of a created connection.\n\n{ \"id\": \"e0e720d0-4947-11ec-a1d2-9559fa35801d\", \"name\": \"connection\", \"params\": [ { \"id\": \"39a90780-8874-11ee-b16c-89512345678\", \"meta\": [], \"name\": \"region\", \"order\": 1, \"value\": \"string\", \"fieldType\": \"enum\", \"isOptional\": \"false\", \"exampleValue\": \"string\", \"paramOptions\": [ { \"id\": \"39a90780-8874-11ee-b16c-89512345678\", \"value\": \"string\" } ], \"documentation\": \"string\" } ], \"ownerId\": \"sWYAHxZxhtcmBT7Ptc5xJ5I6N7HxwnEy\", \"spaceId\": \"5f0f78b239ff4f0001234567\", \"redirect\": \"string\", \"createdAt\": \"2021-12-23T12:28:21.000000Z\", \"updatedAt\": \"2021-12-23T12:28:21.000000Z\", \"connectorId\": \"e0e720d0-4947-11ec-a1d2-9559fa35801d\", \"isConnected\": \"true\", \"oauthAccountName\": \"oauth\" }\n\nNote that the connectorId value isnât currently available via published API. For now, retrieve this value by viewing the ID of a previously created connection of the type you require.\n\nReview the Automation Connections API specification for more information about this API.\n\nQlik has added the com.qlik.v1.analytics.analytics-app-client.sheet-view.opened event to the audit service in Qlik Cloud. This event is triggered whenever a sheet is displayed in Qlik Sense, allowing for detailed analysis of how many times a sheet in an app has been viewed and by which user.\n\nThe audit entry structure is as follows:\n\n{ \"id\": \"auditEntryId\", \"data\": { \"appId\": \"appId\", \"sheetId\": \"sheetId\", \"sheetState\": \"analysis|edit|simpleEdit\" }, \"eventId\": \"eventId\", \"eventTime\": \"2024-05-01T01:13:16.000Z\", \"eventType\": \"com.qlik.v1.analytics.analytics-app-client.sheet-view.opened\", \"source\": \"com.qlik/analytics\", \"tenantId\": \"tenantId\", \"userId\": \"userId\" }\n\nA view will be recorded each time the sheet is navigated to by users accessing via the Qlik Sense client, via iFrame, or via the classic/app interface with qlik-embed. Events are not generated for any other embedding approaches. Actions such as toggling between edit and view mode without changing sheet will not register as additional views of the sheet.\n\nThe value of sheetState details the consumption mode active when the user opened the sheet:\n\nanalysis when in view only mode.\n\nsimpleEdit when in edit mode.\n\nedit when in the advanced options edit mode.\n\nThis event is available via the Audits API and can also be viewed in the Events section of the Management Console.\n\ncharts on the fly\n\nqlik-embed 1.2.0 adds the popular charts on the fly feature to the analytics/chart ui. This allows you to generate charts from data in a Qlik Sense app, without the chart existing in the app. You pass a definition, and the chart is created as requested by your web app.\n\nHereâs an example using qlik-embed web components:\n\n<qlik-embed id=\"visualization\" ui=\"analytics/chart\" app-id=\"<appid>\" type=\"barchart\" dimensions='[\"Dimension1\"]' measures='[\"Measure1\", \"=Sum(Expression2)\", \"=Avg(Expression2)\"]' properties='{ orientation: \"horizontal\", barGrouping: { grouping: \"stacked\" } }' ></qlik-embed>\n\nNote: charts on the fly works only with charts available in the analytics/chart ui in qlik-embed. Please consult the chart compatibility table for a list of compatible charts. Use the Viz on the fly ID for the type property.\n\nPreviously an html attribute to the <qlik-embed /> tag could include :json or :number to indicate which type the string in the attribute should be parsed to. In some environments the : is not allowed as a html parameter so it is now possible to also use ___ (triple underscore) as a delimiter.\n\nThis means you can now set context like this: <qlik-embed context___json='{ theme: \"Breeze\" }' ... /> and it will be parsed as json.\n\nQlik is removing the com.qlik.user-identity.impersonation event from the audits service in Qlik Cloud. Events of this type will no longer appear in the Events panel in your tenantâs management console and responses from the audits API will no longer include this event.\n\nThis change is a result of analysis which found the event added little customer value, with a better solution being to add the actor attribute to service events to indicate when a user was impersonated. This reduces audit complexity for customers, as well as the volume of events a customer needs to process to determine the actions their users are generating in the platform.\n\nNote: The com.qlik.user-identity.impersonation is not deprecated, it is simply being removed from a service that aggregates and surfaces events for external consumption.\n\nThis change will take effect no sooner than sixty days from the date on this changelog entry.\n\nqlik-embed web components script src attribute changes\n\nA change to the latest release of qlik-embed web components requires references to the index.min.js file be specified for the library to run.\n\nIf you are using qlik-embed web components it is recommended you update the src property of the script element declaring the full path to the library.\n\nUpdate the attribute to include /dist/index.min.js in the path. Here is an example of the new path for the src attribute: src=\"https://cdn.jsdelivr.net/npm/@qlik/embed-web-components@1/dist/index.min.js\".\n\nNote: If you do not want to use the latest version of qlik-embed web components, it is possible to set the version in the path.\n\nHere is an example of the src attribute referencing a pinned version of qlik-embed web components: src=\"https://cdn.jsdelivr.net/npm/@qlik/embed-web-components@1.1.1/dist/index.min.js\".\n\nqlik-embed oauth callback page src attribute changes\n\nUpdate the oauth-callback page used to handle connectivity between qlik-embed web components and your Qlik Cloud tenant. Set the src attribute to use oauth-callback.min.js.\n\nThe resulting src attribute should look something like this: src=\"https://cdn.jsdelivr.net/npm/@qlik/embed-web-components@1/dist/oauth-callback.min.js\".\n\nYou can learn more about qlik-embed on the Why qlik-embed page.\n\nThe nebula.js extension and mashup library has been updated to version 5, the next major version.\n\nUsers of versions prior to 5.0.0 should be aware of important changes to:\n\nType updates which align nebula with other Qlik tools\n\nExpanded support for multi-app mashups and web apps\n\nUpdated OAuth support for Qlik Cloud\n\nTo improve compatibility with other Qlik tools, simplify developer onboarding, and enhance the TypeScript experience, Nebula now uses the @qlik/api typings for QIX and Engine entities.\n\nMulti-app support fix\n\nThis update changes how Nebula handles its cache. Building mashups using multiple app connections at the same time now works without interference. Previously, a common cache was used between instances, which could cause issues if apps shared a data model or if they where duplicates of each other.\n\nThe connection setup in nebula serve was updated to improve compatibility with the Qlik Cloud OAuth setup. If youâve used this capability before, you need to update the redirect URL to http://localhost:8000/auth/login/callback.\n\nSee nebula.js on npm.\n\nIntroducing classic/chart\n\nclassic/chart is a new UI for qlik-embed. classic/chart renders visualizations that have not been converted to nebula.js or use the classic extension API.\n\nUsing classic/chart\n\nLike other UIs available through qlik-embed, when you want to use classic/chart in an embedded analytics context, set the ui property to classic/chart. If you use qlik-embed web-components it will look something like this:\n\n<qlik-embed ui=\"classic/chart\" app-id=\"<appId>\" object-id=\"<objectId>\" ></qlik-embed>\n\nclassic/chart compatibility\n\nclassic/chart will render supported visualizations from Qlik Sense applications. For a full support matrix, refer to the supported charts page.\n\nThird-party extensions\n\nThird-party extensions may not render properly within embedded contexts compared to the native Qlik Sense experience if the extension manipulates private code such as CSS. Manipulating CSS in the native experience is not supported by Qlik, therefore, itâs not supported in qlik-embed.\n\nAdditionally, for best compatibility, it is suggested to enable iframe mode when working with extensions:\n\n<qlik-embed ui=\"classic/chart\" app-id=\"<appId>\" object-id=\"<objectId>\" iframe=\"true\" ></qlik-embed>\n\nTo learn more about third-party extension compatibility with qlik-embed, please contact the extension author.\n\nLimitations\n\nclassic/chart does not support the following features:\n\nRight-click context menu\n\nExport data\n\nYou can learn more about qlik-embed on the Why qlik-embed page, or review the classic/chart example.\n\nWhen you embed Qlik Cloud into your web applications, you likely require an authentication strategy that mitigates the blocking of third-party cookies by browsers.\n\nQlik is introducing support for OAuth impersonation tokens, which can be generated using a confidential OAuth machine-to-machine client for users in your Qlik Cloud tenant. Impersonation tokens are ideal for scenarios where:\n\nThe identity provider for your web application does not match the one configured for your Qlik Cloud tenant.\n\nYou wish to handle authentication on your backend.\n\nYou wish to avoid client-side redirects in the browser.\n\nIf you intend to implement a client-side (front-end) authentication strategy or if your web application does not have a back-end component, you should leverage OAuth SPA for your application.\n\nConsiderations if moving from JWT\n\nThis capability provides a comparable experience to using JWT to authenticate from a web application to Qlik Cloud, with the benefit of not being blocked by third-party cookie restrictions.\n\nThe key difference is that OAuth impersonation requires that users already exist in the tenant and uses pre-existing user group mappings, rather than supporting update of groups on the fly during token requests. This means that:\n\nUsers must exist in the tenant prior to requesting an impersonation token. You can accomplish this with qlik-api as part of the login flow.\n\nYou cannot update user-to-group mappings when requesting the impersonation token. If you wish to leverage groups for your security model, you should first impersonate a user login on the backend using JWT to associate the required groups with your user.\n\nLearn more about OAuth impersonation\n\nTo discover more:\n\nReview the guiding principles for using OAuth impersonation in Qlik Cloud.\n\nLearn how to create a new client for requesting impersonation tokens.\n\nExplore how to retrieve impersonation tokens.\n\n@qlik/api is a collection of javascript modules which each exposes an api built to make the integration process for javascript solutions as easy as possible. The library is built for both browser and NodeJS usage and will seamlessly integrate with qlik-embed libraries.\n\n@qlik/api provides Qlik Cloud REST endpoints and access to the Qlik Analytics Engine (QIX).\n\nREST\n\n@qlik/api REST interfaces are generated from open-api specifications released from those Qlik Cloud services that exposes a restful API. The code generation tool runs using the specs, building typescript for all api calls documented in the specification. One module per api is generated.\n\nYou can learn more about the available modules in the REST section of the typescript types repository on Qlik Open Source.\n\nQIX\n\nQlikâs Analytics Engine Service (QIX) is the runtime service for Qlik Sense applications and several analytics services in Qlik Cloud. @qlik/api offers a fully typed api for connecting to and consuming Qlik Sense Applications including âQlik Sense mixinsâ which previously only was used internally by in-house Qlik developers.\n\nMore info about QIX can be found in the qix section.\n\nLearn more about @qlik/api in the toolkits section.\n\nQlik is announcing a change in behavior for the Roles API. This API currently returns a list of all available roles on the tenant, and a change is being made to who can access this API.\n\nAs of April 9, 2024, only users assigned the Tenant Admin role will be able to access the roles API. All other users will be denied access with a http 403 error.\n\nHow to access role information for non-Tenant Admin users\n\nToday, any user can retrieve role records as shown below. Once the change is made, any user without the TenantAdmin role will receive a http 403 forbidden response.\n\ncurl \"https://<TENANT>/api/v1/roles\" \\ -H \"Authorization: Bearer <ACCESS_TOKEN>\"\n\n{ \"data\": [ { \"id\": \"<ROLE_ID>\", \"tenantId\": \"<TENANT_ID>\", \"name\": \"<ROLE_NAME>\", }, ... ], \"links\": { \"self\": { \"href\": \"https://<TENANT>/api/v1/roles\" } } }\n\nAlthough users without the Tenant Admin role will not be able to return all roles in the tenant, they remain able to list the roles that they are assigned either directly, or via group membership. They can do this via the /api/v1/users/me endpoint.\n\ncurl \"https://<TENANT>/api/v1/users/me?fields=assignedGroups,assignedRoles\" \\ -H \"Authorization: Bearer <ACCESS_TOKEN>\"\n\n{ \"id\": \"<USER_ID>\", \"assignedRoles\": [ { \"id\": \"<ROLE_ID>\", \"name\": \"<ROLE_NAME>\", \"type\": \"default\", \"level\": \"user\" }, ... ], \"assignedGroups\": [ { \"id\": \"<GROUP_ID>\", \"name\": \"<GROUP_NAME>\", \"assignedRoles\": [ { \"id\": \"<ROLE_ID>\", \"name\": \"<ROLE_NAME>\", \"type\": \"default\", \"level\": \"user\" }, ... ] }, ... ], \"links\": { \"self\": { \"href\": \"https://<TENANT>/api/v1/users/me?fields=assignedGroups,assignedRoles\" } } }\n\nQlik Sense applications running in Qlik Cloud rely on Analytics Data Connections to load data from external sources. The first API to support the creation of these connections was the Data Connectivity as a Service (DCaaS) API released in September 2023 (see the DCaaS changelog), and this and additional capabilities have now been merged into the data-connections API.\n\nThis release of the data-connections API supports creation of standard analytics connections, as well as connections via the direct access gateway, to all analytics data sources.\n\nAn example creation request for a MySQL connection via a direct access Data Gateway:\n\ncurl --location \"https://<TENANT>/api/v1/data-connections\" ^ --header \"Content-Type: application/json\" ^ --header \"Authorization: <ACCESS_TOKEN>\" ^ --data \"{ \\\"dataSourceId\\\": \\\"DG_mysql\\\", \\\"qName\\\": \\\"<CONNECTION_NAME>\\\", \\\"space\\\": \\\"<SPACE_ID>\\\", \\\"connectionProperties\\\": { \\\"gatewayInstance\\\": \\\"<GATEWAY_ID>\\\", \\\"host\\\": \\\"<HOST>\\\", \\\"port\\\": \\\"3306\\\", \\\"database\\\": \\\"<DATABASE_NAME>\\\", \\\"username\\\": \\\"<USERNAME>\\\", \\\"password\\\": \\\"<PASSWORD>\\\" } }\"\n\nIf you are currently using the /api/v1/dcaas paths, you should transition to using the updated /api/v1/data-connections endpoints.\n\nThere are some differences between the parameters the two APIs accept, with data-connections maintaining legacy naming to remove the need for breaking changes in the API:\n\nThe parameter for passing the name of the connection is qName rather than connectionName.\n\nThe parameter for passing the ID of the space to create the connection in is space rather than spaceId.\n\nLearn more about Analytics Data Connection APIs\n\nTo discover more about how to create Analytics Data Connections:\n\nReview the data connections topic to learn about the overall capability.\n\nVisit the create a connection tutorial to begin creating new connections.\n\nUnderstand how to create connections via the direct access data gateway.\n\nReview example connection creation requests.\n\nNote: This changelog was updated on February 20, 2024 to clarify the customer impact of this change.\n\nQlik regularly reviews the resources offered to platform developers to help them build better solutions with Qlik Products, and has identified low usage of the open source nebula.js and mobile visualization libraries.\n\nThese libraries were originally published to foster collaboration and engagement with developers as they customized or developed visualizations, but due to customer feedback and usage data, these will be moved back to closed source. Moving these projects back to closed source will support better integration with internal build and test tooling, and free up resources for investment in these and other visualizations.\n\nNo sooner than 30 days from the date of this notice, Qlik will stop updates to the following repositories, and set them as archived:\n\ncarbon-core\n\ndist-flow\n\nreact-native-carbon\n\nreact-native-helium\n\nreact-native-simple-grid\n\nsn-action-button\n\nsn-container\n\nsn-list-objects\n\nsn-map\n\nsn-mekko-chart\n\nsn-network-chart\n\nsn-org-chart\n\nsn-scatter-plot\n\nsn-treemap\n\nsn-word-cloud\n\nThe following repositories were previously archived:\n\nsn-pivot-table\n\nsn-table\n\nAlthough Qlik will no longer accept community contributions to these repositories, the consumption of these libraries and components remains unchanged. Customers should continue to leverage the NPM packages for each component for use in their web apps. Existing integrations using these NPM packages will not be impacted by this change.\n\nAny issues found while using the NPM packages should be raised via Qlik Support.\n\nThis changelog provides 30 daysâ notice of the deprecation and removal of two attributes in the POST /v1/sharing-tasks endpoint. This endpoint is used to create new sharing tasks. Other methods are not affected.\n\nPreviously, the attributes allowed you to provide a different name for an asset than the system name. With the upcoming changes, the service will no longer apply user-provided values, instead, it will use the system name of the asset.\n\nThe attributes are:\n\nroot>appName - the name of the source Qlik Sense application\n\nroot>excelData>name - the name of the report template used to generate output\n\nNo changes are needed to your code, as the API will continue to accept payloads with these attributes, but it will ignore any provided values.\n\nChanges will be made no fewer than 30 days from the date of this notice.\n\nFor more information on Qlikâs API policies, please refer to the API policy page.\n\nFor more information on this API, please review the Sharing tasks API specification.\n\nQlik Cloud Data Integration is a powerful data integration fabric that helps data engineers deliver, transform, and unify enterprise data in real-time via automated, governed, and reusable data pipelines.\n\nThe new di-projects APIs can be leveraged by your usual API tooling, or via the Qlik Application Automation connector, providing a way to:\n\nList Projects: Retrieves a list of data projects which belong to a given data space\n\nList Data Tasks: Retrieves a list of data tasks that belong to a given data project\n\nGet Project: retrieves a data projectâs information using its ID\n\nGet Data Task: Retrieves a single data task, using the project and task IDs\n\nStart Data Task: Starts a data task run, using the project and task IDs\n\nStop Data Task: Stops a data task run, using the project and task IDs\n\nGet Data Task Runtime State: Retrieves the runtime state of a data task, using the project and task Ids returning the list of data integration\n\nWith this first iteration, users are able to create workflows that run Qlik Cloud Data Integration tasks, such as:\n\nStarting a data task, waiting for it to finish, and proceeding to start another data task.\n\nImplementing conditions in an automation which are not implemented yet in Qlik Cloud Data Integration, like running a task only after all the sources have been updated.\n\nBuilding a workflow that stops CDC tasks before running some backend maintenance and then starting the CDC task again.\n\nYou can leverage Qlik Application Automation to do this without code:\n\nExample API call to retrieve tasks for a project via your own API tooling:\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/di-projects/{projectId}/di-tasks/{dataTaskId}\" \\ -H \"Authorization: Bearer <API-key>\"\n\nIf the task exists, and you have access to it, you will receive a 200 response with details of the task:\n\n{ \"id\": \"sqlserver_data_landing-5h5M\", \"name\": \"SQLServer-data_Landing\", \"type\": \"LANDING\", \"ownerId\": \"64ff3381259ad349da2046a9\", \"spaceId\": \"6502c7c2562be31c8343bbd4\", \"description\": \"This is the landing task for SQL server\" }\n\nNow that you have the task, you can start it:\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/di-projects/{projectId}/di-tasks/{dataTaskId}/runtime/actions/start\" \\ -X POST \\ -H \"Authorization: Bearer <API-key>\"\n\nIf successful, you will receive a 204 response with no body.\n\nReview the DI projects API specification for more information about this API.\n\nQlik offers customers the ability to encrypt their tenants with their own key. The Encryption API provides you with the ability to deploy, manage, and cycle encryption keys on one or more Qlik Cloud tenants via supported providers.\n\nIn the initial release of the Encryption API, the API supported both single and multi-region Key Management Service (KMS) keys.\n\nMulti-region keys support Disaster Recovery Processes. Tenants configured with a single-region key will not operate if Qlik Cloud is cut over to a DR region, therefore Qlik is removing support for single-region keys for new CMK providers. If you are currently using a single-region key, Qlik recommends that you create a multi-region key to seamlessly use your tenant in a back-up region in case of an outage in your primary region.\n\nIn no sooner than 30 days from the date of this post, new CMK provider configurations will require a multi-region key. Existing single-region CMK configurations will not be impacted.\n\nThe Platform Operations connector is a connector for Qlik Application Automation that makes deploying and managing tenants in Qlik Cloud possible without code.\n\nPreviously, the Qlik Platform Operations connector supported cross-tenant API calls only to the domain *.qlikcloud.com.\n\nThis update brings support for calling any Qlik Cloud tenant, including those in Qlik Cloud Government regions. Due to differences in Qlik Cloud Government, it is not yet possible to use the tenant create, deactivate, or reactivate blocks on Qlik Cloud Government tenants.\n\nAdditionally, the connector now supports passing a full tenant hostname. This means that you can now use either of these formats to connect to a tenant:\n\ntenantname.region.qlikcloud.com - the full tenant hostname (recommended)\n\ntenantname.region - the legacy, reduced path\n\nIt is now recommended that you use the full tenant hostname on all blocks for any new automations you create with the Platform Operations connector, by using the generic Variable block to define the hostname at the automation level.\n\nReview how to get started with the Platform Operations connector.\n\nThe PATCH method has been added to the Collections API, giving you the ability to update more collection metadata, with greater flexibility.\n\nThe Collections API is the engine behind public and private collections, but also tags assigned to content in the Items API.\n\nWith the PATCH method, you no longer need to send a full PUT payload when updating collections, simplifying the calls, and reducing access control complexity.\n\nTo make a private collection public (assuming you have the appropriate access rights, and at least one item in the collection), you must change the type of the collection from private to publicgoverned:\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/collections/{collectionId}\" ^ -X PATCH ^ -H \"Authorization: Bearer <API-key>\" ^ -H \"Content-type: application/json\" ^ -d '[{\"op\":\"replace\",\"path\":\"/type\",\"value\":\"publicgoverned\"}]'\n\nExample response:\n\n{ \"name\": \"My Public Collection\", \"description\": \"A logical grouping of content for a business unit or team, which still respects space permissions.\", \"type\": \"publicgoverned\", \"id\": \"{collectionId}\", ... }\n\nTo unpublish the collection, change the type back to private.\n\nThe PATCH operation can also be used on the name and description of the collection.\n\nReview the Collections API specification for further information.\n\nQlik Application Automation provides you with the ability to create workflows in a no-code interface. Most Application Automation connectors require a connection to a data source, containing information on where the data source is, connection credentials, and more.\n\nThe automation-connections API provides a way of returning the list of connections that the user has access to. This is useful for audits, and also when programmatically deploying, backing up, and restoring automations.\n\nTo retrieve a list of connections:\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/automation-connections\" \\ -H \"Authorization: Bearer <API-key>\"\n\nAn example response, returning a single connection for the Qlik Cloud Services connector.\n\n{ \"links\": { \"prev\": { \"href\": null }, \"next\": { \"href\": null } }, \"data\": [ { \"id\": \"78dc7c00-7af0-11ed-bb39-bd3b23861504\", \"name\": \"Qlik Cloud Services\", \"isConnected\": true, \"connectorId\": \"61a87510-c7a3-11ea-95da-0fb0c241e75c\", \"createdAt\": \"2022-12-13T14:14:35.000000Z\", \"updatedAt\": \"2022-12-13T14:14:35.000000Z\", \"ownerId\": \"637390ec6541614d3a88d6c1\" } ] }\n\nNote that some connections returned via this API will not be visible in the user interface. In this example, the Qlik Cloud Services connector automatically generates and manages its connection on behalf of any user who uses the connector. This means that the API will return the connection, but users will not be able to manage it. Review the documentation for each connector for connection details.\n\nReview the Automation Connections API specification for more information about this API.\n\nThe query parameter orphans has been added to the Licenses API to help identify licenses assigned to users who do not exist in the tenant upon which the call is made.\n\nAssignment of licenses is keyed on the user subject, which is a unique string provided by the Identity Provider. These assignments are handled separately to users in the tenant, since a single entitlement can support more than one Qlik Cloud tenant, or Qlik Sense Enterprise Client-managed site. This means that calls to the users API on a tenant will return only users on that tenant, while a call to licenses/assignments returns all global assignments to that entitlement.\n\nIn use cases where you have only 1 tenant, and want to track down and remove assignments not linked to users, you can leverage the below API call, or automation snippet to return a list of these assignments.\n\nTo call via code:\n\ncurl --get --location 'https://<TENANT>.<REGION>.qlikcloud.com/api/v1/licenses/assignments?orphans=true' ^ --header 'Authorization: Bearer <API_KEY>'\n\nTo call via an automation, and output a table of assignments, review the find orphaned assignments example.\n\nReview the license assignments endpoint specification for further information.\n\nThis changelog provides 60 days notice of deprecation and removal of the /v1/automations/settings endpoints.\n\nThese endpoints turn on and off Qlik Application Automation on a tenant, and this capability was superceeded by the addition in July 2023 of a new role, Automation Creator. This new role provides much greater flexibility in who can use automations, including at tenant, group, and user level.\n\nFor more information on Qlikâs API policies, please refer to the API policy page.\n\nMigrating to use the automation creator role\n\nTo provide all users in the tenant with access to create and run automations, you must add the AutomationCreator role to the Everyone group.\n\nAssuming the Everyone group already had the PrivateAnalyticsContentCreator role assigned, you would send a request to replace the assignedRoles with the new list of PrivateAnalyticsContentCreator and AutomationCreator:\n\ncurl -L -X PATCH \"https://<TENANT>/api/v1/groups/000000000000000000000001\" ^ -H \"Authorization: Bearer <ACCESS_TOKEN>\" ^ -H \"Content-type: application/json\" ^ -H \"Accept: application/json\" ^ -d \"[{\\\"op\\\": \\\"replace\\\", \\\"path\\\": \\\"/assignedRoles\\\", \\\"value\\\": [{\\\"name\\\": \\\"PrivateAnalyticsContentCreator\\\"}, {\\\"name\\\": \\\"SharedSpaceCreator\\\"}]}]\"\n\nIf successful, an empty response with an http 204 code is returned.\n\nIn a similar way, you can also assign access to groups from your Identity Provider, or to individual users.\n\nFor more information, please review the configure application automation topic.\n\nTenants are the highest level of logical separation in Qlik Cloud available to Qlik customers. When using a multitenant entitlement, you can now programatically delete tenants via API.\n\nIf you are a customer with a single tenant entitlement, contact Qlik for assistance with deleting your tenant.\n\nThe most common use case for tenant deletion is in an OEM context where you create a tenant per end customer and need to offboard customers and delete their tenant as their contracts with you come to an end. To learn more the lifecycle of OEM in Qlik Cloud, review the Platform Operations tutorial series.\n\nImportant! Deleting a tenant is a permanent action. Neither you nor Qlik can restore data from the tenant after it has been purged from Qlik Cloud. Use this capability with caution.\n\nDeactivate & reactivate a tenant\n\nTo deactivate a tenant and schedule it for deletion in 15 days, send this request:\n\ncurl -L \"https://register.eu.qlikcloud.com/api/v1/tenants/TENANT_ID/actions/deactivate\" ^ -H \"Authorization: Bearer ACCESS_TOKEN\" ^ -H \"qlik-confirm-hostname: my-tenant.eu.qlikcloud.com\" ^ -H \"Content-Type: application/json\" ^ -H \"Accept: application/json\" -d \"{\\\"purgeAfterDays\\\": 15}\"\n\nThis response indicates that the tenant is in a deactivated state:\n\n{ \"id\": \"zWbTyyJ5lzYLnm9taTD49ja4JVdNKBUM\", \"status\": \"disabled\", \"estimatedPurgeDate\": \"2023-07-30T14:01:22.000Z\" }\n\nTo reactivate a tenant before the estimated purge date, send this request:\n\ncurl -L \"https://register.eu.qlikcloud.com/api/v1/tenants/TENANT_ID/actions/reactivate\" ^ -H \"Authorization: Bearer ACCESS_TOKEN\" ^ -H \"qlik-confirm-hostname: my-tenant.eu.qlikcloud.com\" ^ -H \"Content-Type: application/json\" ^ -H \"Accept: application/json\"\n\nThis response indicates that the tenant is in an activated state:\n\n{ \"id\": \"zWbTyyJ5lzYLnm9taTD49ja4JVdNKBUM\", \"status\": \"active\" }\n\nLearn more\n\nTo discover more about tenant deletion:\n\nReview the delete tenants topic to learn about the overall capability.\n\nVisit the delete a tenant tutorial in the Platform Operation series to view this in context of a programmatic tenant deployment.\n\nAccess the delete tenants API specification to see the full specification.\n\nTypescript v0.24.0: New API Intakes and Maintainance\n\nfeat: Intake Brands API\n\nThe [brands] API supports the creation and management of brands in the tenant. This allows you to provide a custom logo and favicon to help you enhance the user experience for your users. Below is an example of how you can use the API.\n\nImportant: Use of the brands API is permitted for OEM use cases only.\n\nconst qlik = new Qlik({...}); const logo = fs.readFileSync(path.join(__dirname, 'assets/logo.png')); const brand = await qlik.brands.create(logo, 'my_awesome_logo'); await qlik.brands.activate(brand.id); await qlik.brands.deactivate(brand.id); await qlik.brands.delete(brand.id);\n\nSee full API reference here\n\nfeat: Intake Tenants API\n\nconst { tenants, users } = new Qlik({...}); const { id } = await tenants.getMe(); const { tenantId } = await users.getMe(); let tenant = await tenants.get(id); const orgEnableAnalyticCreationSettings = tenant.enableAnalyticCreation; await tenant.patch([{ op: 'replace', path: '/enableAnalyticCreation', value: !orgEnableAnalyticCreationSettings }]);\n\nSee full API reference here\n\nBugfixes\n\nâ ï¸ Breaking - fix: method name fixes in various APIs\n\napp.recommendInsightAnalyses(...); automation.retryRun(...); collections.getFavorites(); webhook.getDelivery(...);\n\nOther Fixes\n\nfix: render inline response object\n\nfix: random nbr in group test by\n\nfix: bump spectacular.ts to latest\n\nTo get started with the Qlik Typescript SDK, clik here\n\nPython v0.16.0: New API Intakes and Fixes\n\nfeat: Intake for Brands API\n\nbrands = Brands(config=config) file_dir = os.path.dirname(os.path.abspath(__file__)) logo_path = os.path.join(file_dir, \"logo.png\") with open(logo_path, \"rb\") as logo_file: brand = brands.create(logo=logo_file, name=\"my_awesome_logo\") brands.get(brand_id=brand.id) brands.activate(brand_id=brand.id) brands.deactivate(brand_id=brand.id)\n\nSee full API reference here\n\nfeat: Tenants API\n\ntenants = Tenants(config=config) my_tenant = tenants.get_me() tenant_analytic_creation_setting = my_tenant.enableAnalyticCreation my_tenant.patch( data=[ { \"op\": \"replace\", \"path\": \"/enableAnalyticCreation\", \"value\": True, } ] )\n\nSee full API reference here\n\nfeat: Intake for Notes API\n\nnotes = Notes(config=config) notes_settings = notes.get_settings() notes.set_settings(data={\"toggledOn\": True, \"snapshotRelations\": True})\n\nfix: [breaking change] variouse plurals/singular method names fixes\n\nwebhooks.get_delivery(..) collections.get_favorites(..)\n\nSee full API reference here\n\nTo get started with the Qlik Python SDK, clik here\n\nSay hello to the new Example section on qlik.dev. This new section provides you with quick access to commonly used code snippets and scripts you can adapt and integrate into your projects.\n\nEvery example in this section will have a card providing a brief description and the language or tool you can use with it.\n\nThere are a lot of examples to share with you, and theyâre being added to the gallery frequently, so make sure to subscribe to the changelog using the RSS link at the top of the page so you can stay up to date.\n\nIf you experience an issue with a snippet, please open an issue at the Qlik Cloud examples repository on Qlikâs open source Github. Include a link to the example, the problem, and if you have one, your proposed solution.\n\nYou can peruse the examples section here.\n\nThis changelog provides 60 days notice of deprecation and removal of some undocumented attributes from the response of the /v1/licenses/assignments endpoint.\n\nQlik is making changes to ensure removal of user names and other identifiable information from APIs where the data is available via other, more appropriate APIs.\n\nFor more information on Qlikâs API policies, please refer to the API policy page.\n\nDeprecation of response attributes\n\nThe attributes name and userId will be removed from the response from the /v1/licenses/assignments endpoint. These are optional, undocumented attributes that can be set when assigning a license. It will still be possible to use these attributes in the API filter.\n\nNote: The endpoint will continue to return the userâs subject as their primary identifier. Qlik recommends not using personally identifiable information (PII) in the subject attribute in Qlik Cloud. A good practice is to use system generated GUIDs to uniquely identify users.\n\nWhen set on a license assignment, the response currently looks like:\n\n{ \"subject\": \"QLIKBOT\\\\f0e92f326ac77427df155940fec39e6b\", \"type\": \"professional\", \"userId\": \"637390ec6541614d3a88d6c1\", \"name\": \"EU OAuth Client\", \"excess\": false, \"created\": \"2023-06-29T12:24:34.639Z\" }\n\nAfter deprecation, the endpoint will return:\n\n{ \"subject\": \"QLIKBOT\\\\f0e92f326ac77427df155940fec39e6b\", \"type\": \"professional\", \"excess\": false, \"created\": \"2023-06-29T12:24:34.639Z\" }\n\nIf you need to look up the userId and name, you can retrieve these using the list users endpoint.\n\ncurl --get --location 'https://<tenant>.<region>.qlikcloud.com/api/v1/users' ^ --header 'Authorization: Bearer <token>' ^ --header 'Content-type: application/json' ^ --header 'Accept: application/json' ^ --data-urlencode 'filter=subject eq \"QLIKBOT\\\\f0e92f326ac77427df155940fec39e6b\"'\n\nThis will return the full user information for the user with that subject, including the most current name and userId (returned as id) attributes.\n\n{ \"data\":[ { \"id\":\"637390ec6541614d3a88d6c2\", \"tenantId\":\"BL4tTJ4S7xrHTcq0zQxQrJ5qB1_Q6cSo\", \"clientId\":\"f0e92f326ac77427df155940fec39e6b\", \"status\":\"active\", \"subject\":\"qlikbot\\\\f0e92f326ac77427df155940fec39e6a\", \"name\":\"EU OAuth Client\", ...\n\nFor more information on the license assignment endpoint, please review the v1/licenses/assignments specification.\n\nTypescript 0.23.0: Browser friendly library\n\nâ ï¸ Breaking - in this release all the data structures are now type aliases previously they were data classes\n\nimport { GenericSheetProperties } from '@qlik/sdk'; const sheetProperties = new GenericSheetProperties({...}); import type { GenericSheetProperties } from '@qlik/sdk'; const sheetProperties: GenericSheetProperties = {...};\n\nThis change reduces drastically the bundle size of the library making it more optimized for browsers.\n\nfeat: notes settings API\n\nimport { Notes } from '@qlik/sdk'; const notes = new Notes({...}); await notes.setSettings({ toggledOn: true });\n\nfeat: transport API email-config\n\nimport { Transports } from '@qlik/sdk'; const transports = new Transports({...}); const emailConfig = await transports.getEmailConfig(); const validated = await transports.validate();\n\nfeat: apps API - change-owner on objects\n\nconst sheet = await app.createSheet({ qMetaDef:{ title: 'temp sheet' } }); await app.changeOwner(sheet.id, { ownerId: anotherUser.id });\n\nfeat: groups API - create groups\n\nYou can now create groups using directly the groups API\n\nimport Qlik from '@qlik/cli'; const { roles, groups } = new Qlik({...}); const [ tenantAdminRole ] = await roles.getRoles({ filter: 'name eq \"TenantAdmin\"' }); await groups.create({name: 'avengers', assignedRoles:[{id: tenantAdminRole.id}]}) const groups = await groups.getGroups({ filter: 'name eq \"avengers\"' });\n\nfeat: users API - invite user\n\nconst users = new Users({...}); await users.invite({ invitees:[{ email: 'tom.hanks@qlik.com', resend: true, language: 'sv' }] });\n\nfix: allow using limit from query param for pagination\n\nfeat: users API - update\n\nqlik = Qlik(config=config) qlik.users.invite( InviteRequest( invitees=[{email: \"tom_hanks@qlik.com\", language: \"sv\", resend: true}] ) )\n\nfeat: groups API - updates\n\nYou can now create a groups:\n\nqlik = Qlik(config=config) tenant_admin_role = qlik.roles.get_roles(filter='name eq \"TenantAdmin\"') data = GroupPostSchema(name=\"avengers\", assignedRoles={ \"id\": tenant_admin_role[0].id}) new_group = qlik.groups.create(data=data) group = qlik.groups.get(groupId=new_group.id) group.delete()\n\nfeat: apps API - new features\n\ninsight analysis: you now can list ()app.get_insight_analyses()) and get recommandations (recommend) from insight advisor through APIs\n\nchange the ownership of generic objects\n\napp.change_owner(objectId = 'objectId', data = { ownerId: 'userId' })\n\nfeat: transport API email-config\n\nconfig = Config( host=self.base_url, auth_type=AuthType.APIKey, api_key=self.api_key ) q = Qlik(config=config) email_config = q.transports.get_email_config() validation = q.transports.validate()\n\nfix: handle properties with leading numbers\n\nfix: response type as requests.response\n\nTo support customers who wish to manage their users, groups, and tenants via API, Qlik is releasing new and updated APIs to support common tasks such as:\n\nSetting the tenant name or tenant alias\n\nUpdating tenant auto assignment flags for new users joining the tenant\n\nPatching assigned roles by name to users and groups. Previously this could only be done for users, and required the use of the role ID\n\nSeeding groups to the tenant to set up access control prior to user logins. This is important when using Identity Providers other than Azure AD configured with SCIM\n\nThere are also important updates to group validation checks that any organization using groups via their Identity Provider should review.\n\nNew tenants endpoints\n\nYouâre now able to read and patch information about your tenant.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/tenants/xxxxx-xxxxx-xxxxxxxxxxxxxxxxxxxx\" \\ -H \"Authorization: Bearer <dev-api-key>\"\n\n{ \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \"status\": \"active\", \"name\": \"1234567890abcde\", \"hostnames\": [ \"1234567890abcde.us.qlikcloud.com\", \"your-tenant-alias.us.qlikcloud.com\" ], \"createdByUser\": \"yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\", \"created\": \"2020-10-01T17:58:14.846Z\", \"lastUpdated\": \"2023-03-23T13:25:12.107Z\", \"autoAssignCreateSharedSpacesRoleToProfessionals\": true, \"autoAssignPrivateAnalyticsContentCreatorRoleToProfessionals\": true, \"autoAssignDataServicesContributorRoleToProfessionals\": true, \"enableAnalyticCreation\": false, \"datacenter\": \"us-east-1\", \"links\": { \"self\": { \"href\": \"https://your-tenant-alias.us.qlikcloud.com/api/v1/tenants/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" } } }\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/tenants/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" \\ -X PATCH \\ -H \"Authorization: Bearer <dev-api-key>\" \\ -H \"Content-type: application/json\" \\ -d '[ { \"op\": \"replace\", \"path\": \"/name\", \"value\": \"Your Tenant Name\" } ]'\n\nFor the complete list of supported features, see the Tenants API specifications.\n\nNew users API feature\n\nYouâre now able to create or patch users with assigned roles by name, instead of by role ID.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/users\" \\ -X POST \\ -H \"Authorization: Bearer <api-dev-key>\" \\ -H \"Content-type: application/json\" \\ -d '{ \"tenantId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \"subject\": \"my/subject\", \"name\": \"New Username\", \"email\": \"username@test.example\", \"assignedRoles\": [ { \"name\": \"TenantAdmin\" }, { \"name\": \"Developer\" } ] }'\n\n{ \"id\": \"6478e42bce55a79191a3ce8e\", \"tenantId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \"status\": \"active\", \"subject\": \"my/subject\", \"name\": \"New Username\", \"email\": \"username@test.example\", \"assignedRoles\": [ { \"id\": \"6478e405b3558e25bf22bfaf\", \"name\": \"TenantAdmin\", \"type\": \"default\", \"level\": \"admin\" }, { \"id\": \"6478e405b3558e25bf22bfb6\", \"name\": \"Developer\", \"type\": \"default\", \"level\": \"user\" } ], \"assignedGroups\": [], \"groups\": [], \"createdAt\": \"2023-06-01T18:32:11.509Z\", \"lastUpdatedAt\": \"2023-06-01T18:32:11.509Z\", \"links\": { \"self\": { \"href\": \"https://your-tenant.us.qlikcloud.com/api/v1/users/6478e42bce55a79191a3ce8e\" } } }\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/users/6478e42bce55a79191a3ce8e\" \\ -X PATCH \\ -H \"Authorization: Bearer <api-dev-key>\" \\ -H \"Content-type: application/json\" \\ -d '[ { \"op\": \"replace\", \"path\": \"/assignedRoles\", \"value\": [ { \"name\": \"TenantAdmin\" }, { \"name\": \"Developer\" } ] } ]'\n\nFor the complete list of supported features, see the Users API specifications.\n\nNew groups endpoints\n\nYouâre now able to create and patch information about your groups. This includes the ability to assign roles by name or by ID. Creation of groups is supported through the API for pre-seeding access to resources and role assignment prior to user login. Assignment of users to groups continues to be managed by your identity provider.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/groups\" \\ -X POST \\ -H \"Authorization: Bearer <api-dev-key>\" \\ -H \"Content-type: application/json\" \\ -d '{ \"name\": \"admin group\", \"assignedRoles\": [ { \"name\": \"TenantAdmin\" } ] }'\n\n{ \"id\": \"6478e535b778a912a1d543e6\", \"tenantId\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\", \"createdAt\": \"2023-06-01T18:36:37.871Z\", \"lastUpdatedAt\": \"2023-06-01T18:36:37.871Z\", \"name\": \"admin group\", \"status\": \"active\", \"assignedRoles\": [ { \"id\": \"6478e4b071aaa7f293fd71b0\", \"name\": \"TenantAdmin\", \"type\": \"default\", \"level\": \"admin\" } ], \"links\": { \"self\": { \"href\": \"https://your-tenant.us.qlikcloud.com/api/v1/groups/6478e535b778a912a1d543e6\" } } }\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/groups/6478e535b778a912a1d543e6\" \\ -X PATCH \\ -H \"Authorization: Bearer <api-dev-key>\" \\ -H \"Content-type: application/json\" \\ -d '[ { \"op\": \"replace\", \"path\": \"/assignedRoles\", \"value\": [ { \"name\": \"TenantAdmin\" }, { \"name\": \"Developer\" } ] } ]'\n\nFor the complete list of supported features, see the Groups API specifications.\n\nMaximum name length\n\nQlik Cloud now limits the length of group names to 256 characters. New groups with names that exceed the character limit will not be created in the tenant. Any pre-existing groups within Qlik Cloud are unaffected by this change.\n\nUsers attempting to log in with a group that exceeds the name length limit will be permitted but the new group will be ignored.\n\nMaximum number of groups per tenant\n\nQlik Cloud now limits each tenant to 10,000 active groups. Upon reaching the limit, no new groups can be created in the tenant until existing groups are removed by an administrator.\n\nUsers attempting to log in with a new group that exceeds the maximum number of groups limit will be permitted but the new group will be ignored.\n\nTypescript SDK (v0.19.1)\n\nNew APIs (Questions, Audits, App Scripts)\n\nfeat: added support for the Questions API.\n\nconst question = 'What is the count of Prime?'; const answer = await qlik.questions.ask({ text: question, app: { id: app.attributes.id } });\n\nfeat: added support for the Audits API.\n\nconst sources = await qlik.audits.getSources();\n\nfeat added support for listing app script versions\n\nconst script = 'Load RecNo() as N autogenerate(100);'; await app.createScript({ script, versionMessage: 'v1', }); const { scripts } = await app.getScriptVersions();\n\nFeatures\n\nfeat: Added support for registering an event listener for object changed and closed events.\n\nIf an object handle is invalidated for instance when the data model has changed, then the handle will be part of a change array in the response for the method that caused the change.\n\nIt is now possible to register a listener for an object, where onChanged is a custom defined function.\n\nhypercube.on('changed', onChanged);\n\nHandles can also be closed in a session if they are no longer valid. This can happen if for instance you have a handle for a field and the data model is changed/reloaded.\n\nfield.on('closed', onClosed);\n\nImprovements\n\nfix: improvements for handling fetch depending on environment\n\nThe global.fetch function is assumed to be available, and if not now an error will be returned. If it is not available then it can be added:\n\nFor ES6-Modules and node-fetch you can use global.fetch = (args) => import('node-fetch').then(({default: fetch}) => fetch(args));\n\nFor CommonJS and cross-fetch you can use global.fetch = require('cross-fetch');\n\nfix: Handling of websocket close errors. If an error code is set when the websocket is closed, the SDK will now return an error containing the code and reason for being closed.\n\nsession.on('socket-error', (data) => { err = data; });\n\nâ ï¸ Breaking change\n\nOperations on sub-resources ex: get_reloads_log were previously generated as class static methods and required you to have the resource Id as parameter - now fixed.\n\npublic async getReloadsLog(reloadId: string): Promise<ArrayBuffer> {...} public async getReloadsLog(appId: string, reloadId: string): Promise<ArrayBuffer> {...}\n\nThis change affects the following resources: Apps, Automations, Collections, Extensions, Spaces, Themes and Weebhooks.\n\nPython SDK (v0.13.0)\n\nNew APIs and Maintenance Fixes\n\nfeat: adding support for the Oauth-Tokens API\n\nconfig = Config( host=self.base_url, auth_type=AuthType.APIKey, api_key=self.api_key ) oauth_tokens = OauthTokens(config=config) tokens = oauth_tokens.get_oauth_tokens(userId=\"<userId>\") for token in tokens: oauth_tokens.delete(token.id)\n\nfeat: added support for the Questions API\n\nanswer = q.questions.ask( QueryCreate( app=QlikApp(id=app.attributes.id), text=\"What is the total sum of Prime?\", ) )\n\nfeat: added support for Apps Scripts API\n\napp.create_script(ScriptVersion(script=\"Load RecNo() as N autogenerate(200);\", versionMessage=\"v1\")) scriptMetaList = app.get_script_versions() scriptObject = app.get_script_by_version(scriptMetaList.scripts[0].scriptId) currentScriptObject = app.get_script_by_version(\"current\")\n\nfix: Operations on sub-resources ex: get_reloads_log were previously generated as class static methods and required you to have the resource Id as parameter is now fixed.\n\nfix: clear all listeners on session and handles closed events\n\nfix: raise engine connection close error\n\nfix: pagination users\n\nSince the release of the Qlik Cloud platform SDKs earlier this year, the packages have recently been updated. The idea with the Qlik Platform SDKs is to let developers extend solutions without the need to develop them from scratch.\n\nPython SDK (v0.11.0)\n\nFeat: Allow full path in RAW rest calls. This feature in combination with interceptors unlocks QRS communication, for example:\n\ndef inject_csrf_token(req): csrf_token = \"\".join(random.choices(string.ascii_letters + string.digits, k=16)) req.headers[\"x-qlik-xrfkey\"] = csrf_token req.params[\"xrfkey\"] = csrf_token return req win_auth_instance = Auth(config=Config( api_key=qseow_api_key, host=qseow_host, auth_type=AuthType.APIKey)) win_auth_instance.rest.interceptors[\"request\"].use(inject_csrf_token) apps = win_auth_instance.rest(path=f\"{qseow_host}qrs/apps/full\")\n\nFeat: Added new APIs\n\napi-keys API\n\napiKeys = ApiKeys(config=config) keys = apiKeys.get_api_keys()\n\naudits API\n\naudits = Audits(config=config) sources = audits.get_sources()\n\nWebhooks API\n\nqlik = Webhooks(config=config) name = \"qlik-sdk-py-test\" url = \"https://your-tenant.qlikcloud.com/api/v1/automations/{automationId}/actions/execute\" eventTypes = [\"com.qlik.v1.app.created\", \"com.qlik.v1.app.reload.finished\"] headers = { \"X-Execution-Token\": \"lXw9BRm1Ba1bb6MOcPDewNvk5WUmdre70bHljfv1KzNMuby9YXwkUExrCgapxoxn\" } hook = webhooks.create( Webhook(name=name, url=url, eventTypes=eventTypes, headers=headers) )\n\nQuotas API\n\nquotas = Quotas(config=config) data = quotas.get_quotas()\n\nCollections API\n\nqlik = Qlik(config=config) collection = qlik.collections.create({\"name\": col_name, \"type\": \"public\"}) app = qlik.apps.create({\"attributes\": {\"name\": app_name}}) items = qlik.items.get_items(resourceType=\"app\", resourceId=app.attributes.id) itemId = items[0].id collection.create_item({\"id\": itemId})\n\nAutomations API\n\nqlik = Qlik(config=config) name = \"test-sdk-py-\" + str(uuid.uuid1()) automation = automations.create(data=AutomationDetailRequestObject(name=name)) automation.create_run(RunDetailRequestObject(context=\"detail\")) runs = automation.get_runs() automation.delete()\n\nReload-Tasks API\n\nqlik = Qlik(config=config) app = qlik.apps.create({\"attributes\": {\"name\": \"app name\"}}) task = qlik.reload_tasks.create( PostTaskBody( appId=app.attributes.id, timeZone=\"Europe/Zurich\", recurrence=[ \"RRULE:FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;BYHOUR=14;BYMINUTE=16;BYSECOND=0\", ], ) ) tasks = qlik.reload_tasks.get_reload_tasks(appId=app.attributes.id) task.delete()\n\nDocs\n\nCleaned up README and dded more dev documents\n\nNew example for auth flows\n\nAdded engima examples in README.md\n\nFixes\n\nInline return objects are generated as dataclasses\n\nAllow sending dynamic properties for RPC\n\nSupport nested array object\n\nTypescript SDK (v0.16.0)\n\nFeat: Allow user to use full patch for RAW calls. This feature in combination with interceptors unlocks QRS communication, For example:\n\nconst injectXrfKey = ([url, config]) => { const _url = new URL(url); _url.searchParams.append(\"xrfkey\", \"ichBinEinBerlinR\"); const res = [ _url.toString(), { ...config, headers: { \"x-qlik-xrfkey\": \"ichBinEinBerlinR\", ...config.headers, }, }, ]; return res; }; auth.rest.interceptors.request.use([injectXrfKey]); const apps = await auth .rest(`https://win-server/jwt/qrs/app/full?filter=name eq '${appName}'`) .then((resp) => resp.json());\n\nFeat: Expose session events\n\nconst session = await auth.rpc(appId); session.on(\"traffic:sent\", onTrafficSent); session.on(\"traffic:received\", (data: any) => { }); session.on(\"opened\", onOpened); session.on(\"notification:*\", onNotification);\n\nFeat: Added Relaod-Tasks API\n\nconst task = await reloadTasks.create({ appId: app.attributes.id, timeZone: \"Europe/Zurich\", recurrence: [ \"RRULE:FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;BYHOUR=14;BYMINUTE=16;BYSECOND=0\", ], }); const tasks = await reloadTasks.getReloadTasks({ appId: app.id });\n\nFeat: Enum values in method and class props and parameters\n\nDocs: Added engine examples to README.md\n\nFix: set session on Qix returned Object Classes\n\nFix: allow initiated objects\n\nFix: request and response interceptors promises\n\nRefactor: EnigmaSession renamed to the more generic RpcSession\n\nFor more information see the package links below:\n\nTypescript\n\nPython\n\nPlease note that the Platform SDK packages are early development releases. So, please expect breaking changes as it updates andÂ stabilize.\n\nTransport API\n\nThe Transport API is the service responsible for managing notification channels and email configurations for the sending of system notifications, as well as updates from analytics services in the hub, such as data alerts and subscriptions.\n\nThese notifications provide users with information about events such as failed reloads, users being added to spaces, data alerts being triggered, and regular subscription snapshots being sent to subscribers. Note that any workflows running in application automation (including the report blocks) will use their own SMTP/ email configuration - only system notifications from application automation will be sent via the transport API.\n\nThe endpoints in this release provide the ability to configure and review the email server configuration for this service, including the following examples:\n\nGET/v1/transports/email-config : Returns the email configuration for a given tenant id.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/transports/email-config\" \\ -H \"Authorization: Bearer <API-key>\"\n\nPATCH/v1/transports/email-config : Patch the email configuration for a given tenant id.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/transports/email-config\" \\ -X PATCH \\ -H \"Authorization: Bearer <API-key>\" \\ -H \"Content-type: application/json\" \\ -d '{ \"op\": \"replace\", \"path\": \"/username\", \"value\": \"New name\" }'\n\nDELETE/v1/transports/email-config: Deletes email configuration for a given tenant id.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/transports/email-config\" \\ -X DELETE \\ -H \"Authorization: Bearer <API-key>\"\n\nPOST/v1/transports/email-config/actions/send-test-email : Send a test mail with the supplied email info(subject, body, recipient).\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/transports/email-config/actions/send-test-email\" \\ -X POST \\ -H \"Authorization: Bearer <API-key>\" \\ -H \"Content-type: application/json\" \\ -d '{ \"body\":\"string\", \"subject\":\"string\", \"recipient\":\"string\" }'\n\nPOST/v1/transports/email-config/actions/validate : Returns the isValid value for the email configuration for the tenant. Will return false if no email configuration exists.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/transports/email-config/actions/validate\" \\ -X POST \\ -H \"Authorization: Bearer <API-key>\"\n\nPOST/v1/transports/email-config/actions/verify-connection: Verifies connection to email server for tenant provided via JWT.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/transports/email-config/actions/verify-connection\" \\ -X POST \\ -H \"Authorization: Bearer <API-key>\"\n\nSee full API reference here, or read more about configuring SMTP providers for your tenant.\n\nNEW API: Roles\n\nYouâre now able to list all assignable roles within your tenant.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/roles\" \\ -H \"Authorization: Bearer <API-key>\"\n\n{ \"data\": [ { \"id\": \"605a18af2ab08cdbfad09259\", \"tenantId\": \"\", \"name\": \"AnalyticsAdmin\", \"description\": \"\", \"type\": \"default\", \"level\": \"admin\", \"permissions\": [ \"automation:delete\", \"automation:disable\", \"automation:enable\", \"automation:list\", ... ], \"createdAt\": \"2021-03-23T16:34:55.401Z\", \"lastUpdatedAt\": \"2022-04-29T12:06:44.246Z\", \"links\": { \"self\": { \"href\": \"https://your-tenant.us.qlikcloud.com/api/v1/roles/605a18af2ab08cdbfad09259\" } } }, ... ] }\n\nFor the complete list of supported features, please see the Roles API specifications.\n\nNEW API: Groups\n\nYouâre now able to view groups within your tenant.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/groups\" \\ -H \"Authorization: Bearer <API-key>\"\n\n{ \"data\": [ { \"id\": \"603e591b00d28755ad41bd3b\", \"tenantId\": \"kg1knZuzosd7LR-CfvV7====tenantID\", \"createdAt\": \"2021-03-02T15:26:19.724Z\", \"lastUpdatedAt\": \"2021-03-02T15:26:19.724Z\", \"name\": \"Finance\", \"status\": \"active\", \"assignedRoles\": [ { \"id\": \"60804cf8a77b649c66733f65\", \"name\": \"Developer\", \"type\": \"default\", \"level\": \"user\" } ], \"links\": { \"self\": { \"href\": \"https://your-tenant.us.qlikcloud.com/api/v1/groups/603e591b00d28755ad41bd3b\" } } }, ... ] }\n\nFor the complete list of supported features, please see the Groups API specifications.\n\nAPI DEPRECATIONS: Users\n\nWith the release of the new roles and groups APIs, a set of users features are being deprecated. As of November 1, 2022 they will no longer be available. Please ensure to follow the migrations to avoid any downtime.\n\nENDPOINT: GET /users/metadata\n\nSupport for this endpoint is being removed. The role names can now be retrieved from the list roles endpoint.\n\nATTRIBUTE: roles\n\nSupport for user.roles is being removed and replaced with user.assignedRoles. Each assigned role reference maps to an instance of a role object.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/users/me\" \\ -H \"Authorization: Bearer <API-key>\"\n\n{ ... \"roles\": [ \"TenantAdmin\", \"Developer\", ], \"assignedRoles\": [ { \"id\": \"60804cf8a77b649c66733f60\", \"name\": \"TenantAdmin\", \"type\": \"default\", \"level\": \"admin\" }, { \"id\": \"60804cf8a77b649c66733f65\", \"name\": \"Developer\", \"type\": \"default\", \"level\": \"user\" } ] }\n\nThe attributes created and lastUpdated are being renamed to createdAt and lastUpdatedAt respectively.\n\nPATCH OPERATIONS & PATHS VALUES\n\nSupport for the operations set, unset and add are being removed. Itâs recommended to use the operation replace for modifying the assigned roles.\n\nAdditionally, the path /roles is being deprecated in favor of using /assignedRoles\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/users/123456789012345678901234\" \\ -X PATCH \\ -H \"Authorization: Bearer <API-key>\" \\ -H \"Content-type: application/json\" \\ -d '[ { \"op\": \"replace\", \"path\": \"/assignedRoles\", \"value\": [ { \"id\": \"60804cf8a77b649c66733f60\" }, { \"id\": \"60804cf8a77b649c66733f65\" } ] ]'\n\nSORTING\n\nSupport for the sorting attributes sortBy and sortOrder is being removed and replaced with sort. This query parameter can be prefixed with +/- to indicate the sort order.\n\nExamples:\n\nsort=+name\n\nsort=-name\n\nsort=name\n\nPAGINATION\n\nThe pagination query parameters startingAfter and endingBefore are being renamed to next and prev respectively.\n\nQUERY PARAMETER: tenantId\n\nThe query parameter tenantId is no longer required and will default to the tenant being accessed.\n\nQUERY PARAMETER: subject, email, status, role\n\nThese four user attributes are no longer supported as query paremeters when querying users.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/users?subject=1234567890&email=john.smith@corp.example&status=active\" \\ -H \"Authorization: Bearer <API-key>\"\n\nYou can now perform the same query using the filter query parameter.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/users?filter=subject eq \"1234567890\" and email eq \"john.smith@corp.example\" and status eq \"active\" \\ -H \"Authorization: Bearer <API-key>\"\n\nFor more complex filtering, you can optionally use the new filter endpoint.\n\ncurl \"https://your-tenant.us.qlikcloud.com/api/v1/users/actions/filter\" \\ -X POST \\ -H \"Authorization: Bearer <API-key>\" \\ -H \"Content-type: application/json\" \\ -d '{ \"filter\": \"subject eq \\\"1234567890\\\"\" }'\n\nFor the complete list of supported features, please see the Users API specifications.\n\nPlatform SDK package\n\nAs more & more developers integrate & embed Qlik Sense, the need to simplify the development process is paramount. Announcing the new Qlik Platform SDK - a suite of tools, libraries, and documentation that simplifies building high-quality and performant applications on top of the Qlik Sense Platform. The idea is to let developers extend solutions without the need to develop them from scratch.\n\nAnd the best part? The capabilities of the SDK comes in two programming languages - TypeScript & Python. With TypeScript, you will have improved definitions and enhanced developer experience with modern IDEs and the Python package opens up a whole new scope for the Python developer community to leverage the power of Qlik Cloud APIs.\n\nLooking to get started? Here are the package links:\n\nTypeScript - https://www.npmjs.com/package/@qlik/sdk#list-of-modules\n\nPython -Â https://pypi.org/project/qlik-sdk/#description\n\nPlease note that the Platform SDK packages are early development releases. So, please expect breaking changes as it updates andÂ stabilize.\n\nNebula Documentation\n\nNebula CLI is the main entry point to start making a nebula visualization, enabling a local development server, and building extensions and mashups.\n\nThe Nebula CLI now has updated and detailed documentation updates specifically on the following\n\nNebula serve\n\nAllows to run a nebula visualization with a local web development server.\n\nnebula serve\n\nFor more details read here\n\nNebula build\n\nUsed to build a nebula visualization bundle.\n\nnebula build\n\nRead more here\n\nNebula sense\n\nUsed to generate Qlik Sense specific files to use a nebula visualization as an extension.\n\nnebula sense\n\nLearn more about this here\n\nNebula Charts\n\nWhile nebula.js provides capabilities & APIs to build mashups and custom visualizations, itâs primary purpose is often to display Qlik developed charts. These charts are available through npm under the @nebula.js scope. Learn more about it [here].\n\nCore packages\n\nThe new core build allows to significantly reduce the size of bundle, thus bringing down the overhead of downloading large amount of codes to be run. Refer to an example here\n\nNebula API\n\nnebula.js API has the following new updates:\n\nnew useEmbed hook\n\nThe useEmbed hook allows access to the Nebula instance inside a chart, for adding charts into charts. Read the API specs.\n\nnew useKeyboard hook\n\nThe useKeyboard hook enables mashups to do sense-client style keyboard navigation across chart objects. Read the API specs.\n\nnew option for Field-listbox\n\nYou can now alter property definition for Field-listbox.\n\nThe latest version of qlik-cli allows better windows support, support for new APIs and notifications.\n\nHere are the updates.\n\nChocolatey\n\nqlik-cli is now back to Chocolatey\n\nTo install using choco:\n\nchoco install qlik-cli\n\nTo upgrade qlik-cli using chocolatey: choco upgrade qlik-cli\n\nIf you see an error like below:\n\nError retrieving packages from source The combination of parameters provided to this OData endpoint is no longer supported. Please refer to the this URL for more information about this deprecation.\n\nThen first run: choco source list\n\nThen remove the one matching nuget.org: choco source rm --name=nuget.org\n\nAnother way to fix a failing upgrade is to uninstall and reinstall.\n\nchoco uninstall qlik-cli choco install qlik-cli\n\nin v2.5.0 / v2.5.1\n\nNew - Added support for outbound proxy: you can now set the operating system environment variables called HTTPS_PROXY/HTTP_PROXY with the hostname or IP address of the proxy server.\n\nNote: HTTPS_PROXY takes precedence over HTTP_PROXY for https requests. Qlik CLI supports only Basic Authentication.\n\nFix - Improve âlimit flag descriptions\n\nFix - Updated the included latest Qlik Cloud API-specifications\n\nin v2.4.0\n\nCommands have been updated to reflect the latest API changes.\n\nNotifications\n\nUsers to be notified when a new version of qlik-cli is available. The notification message contains URL with detailed changelog of the latest release.\n\nThe self update command enables users to update to the latest version of qlik-cli by simply running qlik update.\n\nOpenAPI specs support\n\nThe latest qlik-cli update provides support for OpenAPI specs that define parameters at the path level. In this case, the parameters are inherited by all operations under that path.\n\nProgress Bar\n\nThe animated progress bar displayed when uploading an app is now based on estimated upload time.\n\nSupport for unix-like Windows terminals\n\nThe latest version of qlik-cli provides better support for unix-like Windows terminals (such as MingGW, MSYS2, and Cygwin).\n\nFix\n\nThe latest version of qlik-cli also includes bug fixes and minor improvements.\n\nin v2.3.0\n\nSupport for identity-providers endpoint\n\nThe identity-providers service is used for managing identity providers. In this version of qlik-cli the support for identity-providers endpoint is provied.\n\nSupport for questions endpoint\n\nThe questions endpoint lets user ask natural language questions against Qlik Sense apps enabled for conversational analytics. This version of qlik-cli provides support for this endpoint.\n\nqlik question ask --app-id <appId> --text=\"new cases by department over time\" { ... \"conversationalResponse\": { ... \"responses\": [ { \"imageUrl\": \"/api/v1/temp-contents/6139c949f0ccf200019a09e2?inline=1\", \"sentence\": { \"text\": \"new cases by department over time\" }, \"type\": \"chart\" }, { \"narrative\": { \"text\": \"* New Cases is 180.\\n* There were 18 of New Cases not associated to a Department. This may indicate a data quality issue.\" }, \"sentence\": { \"text\": \"new cases by department over time\" }, \"type\": \"narrative\" } ], \"sentenceWithMatches\": \"**new cases** by **department** over time\" },\n\nProgress bar for Downloads\n\nThe latest version of qlik-cli also shows an animated progress during app download.\n\nSpinner feedback\n\nA new spinner feedback is added when users are waiting for server response using qlik-cli.\n\nEvaluations API\n\nThe Evaluations API now includes a new endpoint /evaluations/{id}/download that allows you to download a detailed XML log for your evaluation. Learn more about this here\n\nItems API\n\nWhen fetching items using the Items API, you now have the ability to filter by three new subtype resources - automation, dataset, and dataasset. Additionally, if you want to speed up response time, you can now omit the actions array from the response by setting the noActionParam to true. This ensures that the actions for each item is not evaluated.\n\nNew Natural Language API\n\nThe new Natural language API (/questions/actions/ask) enables you to ask questions and context aware partial questions against applications enabled for conversational analytics or a specific app to receive Insight Advisor generated responses and suggestions. Learn more about creating customized conversational analytics interfaces\n\nhere.\n\nUsers API\n\nIn the User definition created, lastUpdated and roles fields have been deprecated.\n\nJSON engine RPC\n\nA new experimental method Doc.SearchValues has been added to the Qlik Associative Engine. For more details read here\n\nThe latest version of qlik-cli adds resumable uploads for large Qlik Sense applications and bug fixes to improve overall usability. Here are the updates.\n\nNew feature highlights\n\nImport large Qlik Sense apps\n\nYou can now upload large apps to SaaS tenants using qlik-cli using the qlik app import command. Use the --resumable switch to instruct the cli to handle the upload as a large file.\n\nWhen you upload an app using qlik-cli, a nice animated bar appears displaying the progress.\n\nFile piping\n\nFile piping allows you to combine commands where the output of one may be used as the input of the next command you issue.\n\nCommand aliases\n\nAliases enable you to create shorthand commands for hard to remember long commands. For example, say you run a command frequently to find the guid of an application in your tenant, $(qlik item ls --resourceType app --name. You can use the alias command to create a shortcut it into something like qlik getAppGuid consumer+sales. This returns the complete JSON object for the consumer+sales resource in the items collection.\n\nLimit flag added for listing apps\n\nThe --limit switch enables you to return a number of app resource objects per page ranging from 1 to 100.\n\nIdentifying experimental flags and switches in commands\n\nCommand switches and flags that are experimental features are labeled as such for your information.\n\nFixes worth mentioning\n\nTemporary Upload Service\n\nUse of the temporary upload service in qlik-cli caused problems with large app uploads and resumability. This problem has been fixed and implemented through the resumable switch in the qlik app import command.\n\nIn prior CLI versions, qlik reload get was not sending a correct response. This issue has been resolved.\n\nBullet list of all features and fixes in qlik-cli 2.2.0\n\nfeature: add limit flag when listing apps\n\nfeature: Support resumable uploads\n\nfeature: add status for qseow\n\nfeature: Support big apps\n\nfeature: show if a flag or command is experimental\n\nfeature: Add progress-bar\n\nfeature: add support for command aliases\n\nfeature: Add Patch description\n\nfeature: support for files piping\n\nfix: Solve temporary upload service store issues\n\nfix: Add timeout to Establish TCP connection\n\nfix: append exprimental to long description with leading newline\n\nfix: Honor optional request bodies\n\nfix: handle empty stdin\n\nfix: omit cookie header\n\nfix: updated response for reload get\n\nUpdate qlik-cli today by using brew if you use a Mac, or download the redistributable from here.\n\nNew Evaluation API Property - fileSizeMiB\n\nThe evaluations API now includes a property in the result schema and the evaluation detail properties indicating the file size on disk of the evaluated Qlik Sense application.\n\nLearn more about optimizing app performance and using the API in DevOps processes here.\n\nThe export app endpoint in the apps API now provides a location header containing the URL of the exported application in the temporary content service when the endpoint returns an http 201 response.\n\nSense Client Object Definitions Released\n\nDevelopers have requested the schemas and property definitions for the different objects created in Qlik Sense applications be made public. You can now view this information here.\n\nYouâll find all of the properties in each type of object available in Qlik Sense, and you can download the specification for use in your own custom applications.\n\nWebhooks API set to public/stable API status\n\nThe webhooks API is now a public and stable API in alignment with the public release of tenant level webhooks in SaaS platform.\n\nNew commands\n\nThe license command in qlik-cli enables you to set license assignments for users in addition to providing metrics related to your tenantâs overall license footprint.\n\nThe evaluation command enables you to trigger Qlik Sense app evaluations through cli, retrieve the results, and perform additional commands based on the feedback. A handy command for automating devops of Qlik Sense apps.\n\nNew features\n\nFlags that are deprecated in qlik-cli now show a warning message when used.\n\nqlik api-key ls --sub=\"test\" \"Flag --sub has been deprecated, please don't use it!\"\n\nA security enhancement has been made to remove session Ids from log messages\n\nYou can now add names to external specifications you sideload into qlik-cli. Hereâs an example: qlik spec add ./my-spec.json --name foo\n\nBreaking change\n\nThe response on the app command has changed. Now it returns only information from the Apps API.\n\napp=$(qlik app create --attributes-name \"example\") echo $app { \"attributes\": { \"_resourcetype\": \"app\", \"createdDate\": \"2021-02-15T07:01:43.930Z\", \"custom\": {}, \"description\": \"\", \"dynamicColor\": \"\", \"encrypted\": true, \"hasSectionAccess\": false, \"id\": \"8be82d0f-02d2-4f0e-974c-08dc444384a7\", \"lastReloadTime\": \"\", \"modifiedDate\": \"2021-02-15T07:01:46.575Z\", \"name\": \"testttt2\", \"originAppId\": \"\", \"owner\": \"auth0|b96eb87010c7ad52667b2dc8b1ec0b12f97c43ae7848740874267b62aa45c856\", \"ownerId\": \"ffnbiWZyssMZ5ofRfLc1JzFdZrPvACFl\", \"publishTime\": \"\", \"published\": false, \"thumbnail\": \"\" }, \"create\": [...], \"privileges\": [...] }\n\nInstead of returning information from the items API.\n\napp=$(qlik app create --attributes-name \"example\") echo $app { \"actions\": [...], \"collectionIds\": [], \"createdAt\": \"2021-02-15T08:15:57Z\", \"creatorId\": \"ffnbiWZyssMZ5ofRfLc1JzFdZrPvACFl\", \"id\": \"602a2dbd31d6bf3d1f471c31\", \"isFavorited\": false, \"meta\": {...}, \"name\": \"testttt3\", \"ownerId\": \"ffnbiWZyssMZ5ofRfLc1JzFdZrPvACFl\", \"resourceAttributes\": {...}, \"resourceCreatedAt\": \"2021-02-15T08:15:57Z\", \"resourceCustomAttributes\": null, \"resourceId\": \"22205ac6-406c-4484-b715-1da12219b044\", \"resourceReloadEndTime\": \"\", \"resourceReloadStatus\": \"\", \"resourceSize\": {... }, \"resourceSubType\": \"\", \"resourceType\": \"app\", \"resourceUpdatedAt\": \"2021-02-15T08:15:57Z\", \"tenantId\": \"xrpC13FnjenBc-mhBG98ah2qNlfmwj8X\", \"thumbnailId\": \"\", \"updatedAt\": \"2021-02-15T08:15:57Z\", \"updaterId\": \"ffnbiWZyssMZ5ofRfLc1JzFdZrPvACFl\" }\n\nFrom now on, to obtain the unique id referencing the app in the items API, you need to issue a qlik item ls command after running qlik app create.\n\nqlik item ls --resourceId $app --resourceType app\n\nBug fixes\n\nFixed a bug with qlik app ls returning non-app resources.\n\nFixed qlik qrs task start by-id which failed with no such operation message.\n\nResolved runtime errors using qlik-cli on Windows computers.\n\nThe Engine REST API, aka Apps API, adds attributes for app name and description for POST and PUT request operations related to publishing and republishing Qlik Sense applications.\n\nThe new checkOriginAppId attribute is a true/false property validating that the source Qlik Sense application has the same Id as the originally published app.\n\n\"attributes\": { \"name\": \"string\", \"description\": \"string\" }, \"checkOriginAppId\": true\n\nFor more information, see the API reference for republishing a Qlik Sense application here.\n\nUsers API add attributes for user roles\n\nAs part of the ongoing work related to updates to users, groups, and roles in the Users API added additional properties for setting roles on users and new roles that may be applied to user records. While this feature is not accessible in product user interfaces, it does exist in the API. In addition, the Users API is public/stable.\n\nFor more information, see the API reference here.\n\nCollections API adds new response information with app size metrics\n\nEndpoints for the Collections API now include two new properties in the response object. appFile displays the size of an app on disk and appMemory shows the size of an app when it is loaded in memory. Both values are displayed in bytes and appear under the resourceSize property.\n\n\"appFile\": { \"description\": \"Size of the app on disk in bytes\", \"type\": \"number\" }, \"appMemory\": { \"description\": \"Size of the app in memory in bytes\", \"type\": \"number\" }\n\nLearn more about the Collections API here.\n\nIdentity Providers V1 API released public/stable\n\nThe Identity Providers REST API is a Management API for creating and updating identity provider configurations in a tenant. For more information regarding the API, please review the API reference here.\n\nLicenses API releases two public/stable, three public/experimental endpoints\n\nThe Licenses REST API is a Management API for assigning, changing, and removing license assignements from users in tenants.\n\nThis release includes two public/stable endpoints:\n\nget license status\n\nget license overview\n\nand three public/experimental endpoints:\n\nassign access to users\n\ndelete user license assignments\n\nupdate user license assignments\n\nLearn more about the API here.\n\nReloads API re-released public/stable\n\nThe Reloads API is now verified public/stable in Qlikâs API governance system. The Reloads API was mistakenly set to public/stable in late 2020 after a breaking change was introduced in the code. Subsequently, the Reloads API was adjusted to public/experimental before the new year to indicate the correct status. The outstanding issues with the API have been addressed.\n\nTemporary Contents API released public/stable\n\nThe Temporary Contents Service API is now public/stable in compliance with Qlikâs API governance policy. The TCS is used by other services to provided temporary file storage for uploads to the system (for example through Qlik Data Transfer) and downloads from (for example image and sheet exports from Qlik Sense Client).\n\nLearn more about the API here."
    }
}