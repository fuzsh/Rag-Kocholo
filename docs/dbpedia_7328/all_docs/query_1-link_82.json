{
    "id": "dbpedia_7328_1",
    "rank": 82,
    "data": {
        "url": "https://www.mathworks.com/help/matlab/ref/imwrite.html",
        "read_more_link": "",
        "language": "en",
        "title": "Write image to graphics file",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.mathworks.com/images/responsive/global/pic-header-mathworks-logo.svg",
            "https://www.mathworks.com/images/responsive/global/pic-header-mathworks-logo.svg",
            "https://www.mathworks.com/help/examples/matlab/win64/WriteIndexedImageDataToPNGExample_01.png",
            "https://www.mathworks.com/help/examples/matlab/win64/WriteIndexedImageWithMATLABColormapExample_01.png",
            "https://www.mathworks.com/help/examples/matlab/win64/WriteAnimatedGIFLiveExample_01.png",
            "https://www.mathworks.com/help/examples/matlab/win64/WriteAnimatedGIFLiveExample_02.png",
            "https://www.mathworks.com/help/examples/matlab/win64/WriteAnimatedGIFLiveExample_03.png",
            "https://www.mathworks.com/images/responsive/global/pic-header-mathworks-logo2.svg",
            "https://www.mathworks.com/images/responsive/global/ico-facebook.svg",
            "https://www.mathworks.com/images/responsive/global/ico-x.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-instagram.svg",
            "https://www.mathworks.com/images/responsive/global/ico-youtube.svg",
            "https://www.mathworks.com/images/responsive/global/ico-linkedin.svg",
            "https://www.mathworks.com/images/responsive/global/ico-rss.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "This MATLAB function writes image data A to the file specified by filename, inferring the file format from the extension.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://www.mathworks.com/help/matlab/ref/imwrite.html",
        "text": "Color to use as background color for the indexed image, specified as a nonnegative integer scalar corresponding to the colormap index.\n\nThe background color is used for some disposal methods in animated GIFs.\n\nIf image data A is uint8 or logical, then the colormap index is zero-based.\n\nIf image data A is double, then the colormap index is one-based.\n\nThe default background color corresponds to the first color in the colormap.\n\nExample: \"BackgroundColor\",15\n\nComment to add to the image, specified as a string scalar, a character vector, a 1-by-n string array, or a 1-by-n cell array of character vectors. For a string array or cell array of character vectors, imwrite adds a carriage return after each entry.\n\nExample: \"Comment\",[\"Sample #314\",\"January 5, 2013\"]\n\nData Types: string | char | cell\n\nNumber of times to repeat the animation, specified as either an integer in the range [0, 65,535] or the value Inf. If you specify the value 0, the animation plays once; if you specify the value 1, the animation plays twice, and so on. A LoopCount value of Inf causes the animation to loop continuously.\n\nTo enable animation within Microsoft® PowerPoint®, specify a value for LoopCount within the range [1, 65,535]. Some Microsoft applications interpret the value 0 to mean not to loop at all.\n\nExample: \"LoopCount\",3\n\nComment to add to the image, specified as a string scalar, a character vector, an n-by-1 string array, or an n-by-1 cell array of character vectors. For a string array or cell array of character vectors, imwrite writes each row of input as a comment in the JPEG file.\n\nExample: \"Comment\",[\"First comment\";\"second comment\";\"third comment\"]\n\nData Types: string | char | cell\n\nComment to add to the image, specified as a string scalar, a character vector, a string array, or a cell array of character vectors. For a string array or cell array of character vectors, imwrite writes each entry as a comment in the JPEG 2000 file, in column-major order.\n\nExample: \"Comment\",[\"First comment\";\"second comment\";\"third comment\"]\n\nExample: \"Comment\",{'First comment','second comment','third comment'}\n\nData Types: string | char | cell\n\nTarget compression ratio, specified as a positive scalar greater than or equal to 1. The compression ratio is the ratio of the input image size to the output compressed size. For example, a value of 2 implies that the output image size is half of the input image size or less. A higher value implies a smaller file size and more reduced image quality. The compression ratio does not take into account the header size.\n\nSpecifying CompressionRatio is valid only when Mode is \"lossy\".\n\nExample: \"CompressionRatio\",3\n\nMaximum gray or color value, specified as a positive integer scalar.\n\nSpecify this name-value argument only for PGM and PPM files. For PBM files, this value is always 1.\n\nIf the image array is uint16, then the default value for MaxValue is 65535. Otherwise, the default value is 255.\n\nExample: \"MaxValue\",510\n\nTransparency of each pixel, specified as a matrix of values in the range [0, 1]. The row and column dimensions of the Alpha matrix must be the same as those of the image data array. You can specify Alpha only for grayscale (m-by-n) and truecolor (m-by-n-by-3) image data.\n\nNote\n\nYou cannot specify both Alpha and Transparency at the same time.\n\nData Types: double | uint8 | uint16\n\nReference white point and primary chromaticities, specified as an eight-element vector of the form [wx wy rx ry gx gy bx by]. The elements wx and wy are the chromaticity coordinates of the white point, and the elements rx, ry, gx, gy, bx, and by are the chromaticity coordinates of red, green, and blue, respectively.\n\nIf you specify Chromaticities, you should also specify the Gamma name-value argument.\n\nExample: \"Chromaticities\",[0.312,0.329,0.002,0.002,0.001,0.001,0.115,0.312]\n\nData Types: double\n\nTime of original image creation, specified as either a datetime, or a string scalar or character vector that represents a point in time. If you specify CreationTime as a datetime value with a time zone, then imwrite stores the time zone as part of the value.\n\nExample: \"CreationTime\",datetime(\"1955-11-12 10:04 PM\",\"TimeZone\",\"America/Los_Angeles\")\n\nTime of last image modification, specified as either a datetime, or a string scalar or character vector that represents a point in time. If you specify ImageModTime as a datetime value with a time zone other than UTC, then imwrite converts the value to UTC before storing it. If you specify ImageModTime as a datetime value without a time zone, then imwrite interprets the value as UTC.\n\nThe default ImageModTime value is the time when you call imwrite.\n\nExample: \"ImageModTime\",datetime(\"2018-04-01 9:00 AM\",\"TimeZone\",\"Europe/Rome\")\n\nNumber of bits in the data array to regard as significant, specified as a scalar or a vector in the range [1, BitDepth]. Depending on the output image type, the value must be in the following form.\n\nImage TypeForm of SignificantBits ValueGrayscale image without an alpha channelScalarGrayscale image with an alpha channel2-element vectorIndexed image3-element vectorTruecolor image without an alpha channel3-element vectorTruecolor image with an alpha channel4-element vector\n\nExample: \"SignificantBits\",[2,3]\n\nPixels to consider transparent when no alpha channel is used, specified as a scalar or vector. Depending on the output image, the value must be in the following form.\n\nImage TypeForm of Transparency ValueGrayscale imageScalar in the range [0, 1], indicating the grayscale color to be considered transparent.Indexed imageQ-element vector of values in the range [0, 1], where Q is no larger than the colormap length and each value indicates the transparency associated with the corresponding colormap entry. In most cases, Q is 1. Truecolor imageThree-element vector of RGB intensities in the range [0, 1], indicating the truecolor color to consider transparent.\n\nNote\n\nYou cannot specify both Transparency and Alpha at the same time.\n\nExample: \"Transparency\",[1 1 1]\n\nData Types: double\n\nColor space representing the color data, specified as \"rgb\", \"cielab\", or \"icclab\".\n\nThis name-value argument is valid only when the image data array, A, is truecolor (m-by-n-by-3). To use the CMYK color space in a TIFF file, do not use the ColorSpace name-value argument. Instead, specify an m-by-n-by-4 image data array.\n\nimwrite can write color image data that uses the L*a*b* color space to TIFF files. The 1976 CIE L*a*b* specification defines numeric values that represent luminance (L*) and chrominance (a* and b*) information. To store L*a*b* color data in a TIFF file, the values must be encoded to fit into either 8-bit or 16-bit storage. imwrite can store L*a*b* color data in a TIFF file using these encodings:\n\nCIELAB encodings — 8-bit and 16-bit encodings defined by the TIFF specification\n\nICCLAB encodings — 8-bit and 16-bit encodings defined by the International Color Consortium\n\nThe output class and encoding used by imwrite depends on the class of the input image data array and the ColorSpace value, as shown in this table. (The 8-bit and 16-bit CIELAB encodings cannot be input arrays because they use a mixture of signed and unsigned values and cannot be represented as a single MATLAB array.)\n\nInput Class and Encoding\n\nValue of ColorSpace\n\nOutput Class and Encoding\n\nExample: \"ColorSpace\",\"cielab\"\n\nNumber of rows to include in each strip, specified as a scalar. The default value is such that each strip is about 8 kilobytes.\n\nYou must specify RowsPerStrip if you specify \"jpeg\" compression. In this case, the value must be a multiple of 8.\n\nExample: \"RowsPerStrip\",16\n\nData Types: double | single | int8 | int16 | int32 | int64 | uint8 | uint16 | uint32 | uint64"
    }
}