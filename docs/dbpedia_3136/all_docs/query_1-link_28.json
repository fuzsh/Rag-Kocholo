{
    "id": "dbpedia_3136_1",
    "rank": 28,
    "data": {
        "url": "https://crypto.stackexchange.com/questions/108017/who-originally-generated-the-elliptic-curve-now-known-as-p256-secp256r1",
        "read_more_link": "",
        "language": "en",
        "title": "Who originally generated the elliptic curve now known as P256/secp256r1",
        "top_image": "https://cdn.sstatic.net/Sites/crypto/Img/apple-touch-icon@2.png?v=fff48bebc5fd",
        "meta_img": "https://cdn.sstatic.net/Sites/crypto/Img/apple-touch-icon@2.png?v=fff48bebc5fd",
        "images": [
            "https://cdn.sstatic.net/Sites/crypto/Img/logo.svg?v=87c028c5e448",
            "https://i.sstatic.net/zGI9F.jpg?s=64",
            "https://i.sstatic.net/zZ0LQ.jpg?s=64",
            "https://crypto.stackexchange.com/posts/108017/ivc/cd88?prg=9259c11d-8830-4a4b-8b70-dcf9cf333e2b"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-09-19T16:07:06",
        "summary": "",
        "meta_description": "Background: there is a theory going around that claims that P256 was backdoored by the NSA.  The theory goes is that the NSA found a weakness that applies to a nontrivial fraction of elliptic curves (",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/crypto/Img/favicon.ico?v=e5444c0e7c0b",
        "meta_site_name": "Cryptography Stack Exchange",
        "canonical_link": "https://crypto.stackexchange.com/questions/108017/who-originally-generated-the-elliptic-curve-now-known-as-p256-secp256r1",
        "text": "Update 12/08/2024\n\nThis new paper by Bernstein and Lange provides an email exchange between Bernstein and Jerry Solinas (see the original answer) in Appendix C. It shows that Bob Reiter from the NSA actually wrote the code for generating the seeds and also forgot the details.\n\nAccording to Jerry, a counter was probably used rather than multiple hashing, and the humorous message likely mentioned \"Bob\" and \"Jerry\". For example, something like \"Give Bob and Jerry a raise\" or \"Bob and Jerry rule\".\n\nThis paper also disputes the 'A Riddle Wrapped in an Enigma' paper discussed below, arguing in Section 7/Appendix D that $2^{86}$ bit operations was potentially feasible for the NSA in 1997. Section 7 also outlines the backstory about the seed generation, how successfully recovering the seed doesn't prove the NSA's innocence, and how curve weaknesses might have been missed by the public.\n\nOriginal Answer\n\nJerry Solinas, an NSA employee, definitely provided the seeds. This has been confirmed by one of the authors of the ANSI X9.62 ECDSA standard (Alfred Menezes), who is also an author of a paper called 'A Riddle Wrapped in an Enigma' related to this topic:\n\nJerry Solinas did provide the seeds to me sometime in Fall 1997. At the time, I was the primary author of the ANSI X9.62 ECDSA standard, and Jerry was attending the standards meetings as an NSA representative. I don't know if Jerry selected the seeds himself, but in any case he was the person who contributed the seeds to the ANSI standards committee. (Jerry is the \"NSA representative\" mentioned on page 8 of my article with Neal Koblitz.)\n\nIt has also been corroborated by other people. Furthermore, Jerry Solinas is credited in the Acknowledgements of a Certicom paper on ECDSA:\n\nThe authors would like to thank the members of the ANSI X9F1 and IEEE P1363 working groups, and, in particular, Jerry Solinas, for their many comments and contributions during the development of the ECDSA standards.\n\nNow, this is where it gets interesting. Jerry supposedly chose an English phrase/sentence (e.g. \"Jerry deserves a raise.\") and hashed it with SHA-1 to produce the seeds. However, he forgot the sentence, possibly due to his machine being replaced/upgraded. After controversy erupted, he tried 'every phrase that he could think of that was similar to this' without success. A story that has again been corroborated.\n\nThere's actually a \\$12,288 bounty offered by Filippo Valsorda for (password) cracking the seeds. Half the bounty (\\$6,144) goes to the first person to find at least one, and the other half goes to the person (or the same person) to find all five. I will try to update this answer if anything comes of this (remind me if I don't).\n\nUnfortunately, it's not a simple task because this is all we know:\n\nSHA-1 should have been used.\n\nThe sentence probably mentions Jerry (Solinas).\n\nSomeone else (e.g. a colleague) may be mentioned.\n\nThere's likely a counter since not every hash is suitable.\n\nInstead of a counter, it could be the hash was hashed repeatedly (SHA-1(SHA-1(phrase))) or incremented (IP2BS(BS2IP(hash) + 1)).\n\nThe P-192 and P-256 seeds were in ANSI X9.62, whereas the others were new to FIPS 186-2, meaning potential differences. There's also no clue to whether there's a full stop, where the counter is, how the counter is encoded, etc.\n\nOf course, this assumes Jerry/the source of the story was telling the truth. It's theoretically possible this story is fiction (a cover story) and leading people on a wild-goose chase. Whilst we don't know the details, it feels like sloppy behaviour from the NSA. Just because it sounds believable/relatable doesn't guarantee it's true. Jerry could have been told to spread this story, with the other people sharing it not having witnessed Jerry generating the seeds. For all we know, Jerry didn't even generate the seeds. Perhaps we'll never know.\n\nHowever, even if you argue this is a cover story, there are various arguments against malicious seeds. Summarised from 'A Riddle Wrapped in an Enigma':\n\nThe class of weak curves must be extremely large to obtain a weak curve with the seeded-hash method, making it detectable by researchers. Even if you reduce the class size (still likely detectable), an infeasible amount of computation for 1997 ($2^{86}$ for P-256) had to be performed. No such weaknesses in the NIST curves has ever been found after over 20 years.\n\nThe NSA would have deliberately selected weak elliptic curves for US government usage (unclassified/classified), meaning they would have had to have been confident that nobody else would discover the weakness in the future whilst they're still in use.\n\nThe NIST curves were generated by the Information Assurance Directorate (IAD) under Brian Snow and Mike Jacobs in the 1990s, who were the defensive arm of the NSA and pushed for security during that period. Furthermore, most of the Snowden revelations, including the backdoored Dual_EC_DRBG, concern much later events. We shouldn't project what we know about the NSA post-2001 back to the 1990s.\n\nThe authors concluded:\n\nthere is no plausible reason to mistrust the NIST curves\n\nBut they mentioned two reasons why other curves may be preferable:\n\nPublic perception = the NIST curves are backdoored. You avoid controversy/get brownie points by using something else.\n\nOther curves have some advantages, although there have been improvements with the NIST curves, they're standardised/popular, and there are other problems with different types of curves.\n\nIn sum, you can argue either way about whether to use the NIST curves. The consensus among cryptographers seems to be that they're safe, but there are other popular, newer curves now."
    }
}