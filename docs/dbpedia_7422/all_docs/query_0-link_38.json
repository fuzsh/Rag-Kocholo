{
    "id": "dbpedia_7422_0",
    "rank": 38,
    "data": {
        "url": "https://docs.stripe.com/upgrades",
        "read_more_link": "",
        "language": "en",
        "title": "API-Upgrades",
        "top_image": "https://d37ugbyn3rpeym.cloudfront.net/docs/og-image/upgrades.ogimage.png",
        "meta_img": "https://d37ugbyn3rpeym.cloudfront.net/docs/og-image/upgrades.ogimage.png",
        "images": [
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg",
            "https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Verfolgen Sie Änderungen und Aktualisierungen an der Stripe-API.",
        "meta_lang": "de",
        "meta_favicon": "https://b.stripecdn.com/docs-statics-srv/assets/e9b76763ac024da464fae86e9b69dcbf.png",
        "meta_site_name": "",
        "canonical_link": "https://docs.stripe.com/upgrades?locale=de-DE",
        "text": "Verfolgen Sie Änderungen und Aktualisierungen an der Stripe-API.\n\nÜber Ihre API-Version wird das API- und Webhook-Verhalten, das Sie sehen, gesteuert (z. B. welche Eigenschaften Sie in Antworten sehen, welche Parameter Sie in Anfragen senden dürfen usw.). Ihre Version wird festgelegt, wenn Sie zum ersten Mal eine API-Anfrage stellen. Wenn eine wesentliche Änderung an der Stripe-API vorgenommen wird, wird eine neu datierte Version veröffentlicht. Um zu vermeiden, dass Ihr Code beschädigt wird, ändern wir Ihre Version jedoch erst, wenn Sie für ein Upgrade bereit sind.\n\nWenn Sie im Namen anderer Nutzerinnen und Nutzer Anfragen mit Connect stellen, verwenden wir die API-Version Ihrer Anwendung. Dadurch können Sie einfach Code schreiben, der für all Ihre Nutzerinnen und Nutzer funktioniert, unabhängig davon, welche API-Versionen diese verwenden.\n\nAbwärtskompatible Änderungen\n\nStripe betrachtet die folgenden Änderungen als abwärtskompatibel:\n\nHinzufügen neuer API-Ressourcen.\n\nHinzufügen neuer optionaler Anfrageparameter zu bestehenden API-Methoden.\n\nHinzufügen neuer Eigenschaften zu bestehenden API-Antworten\n\nÄndern der Reihenfolge der Eigenschaften in vorhandenen API-Antworten.\n\nÄndern der Länge oder des Formats undurchsichtiger Zeichenfolgen, wie z. B. Objekt-IDs, Fehlermeldungen und anderer lesbarer Zeichenfolgen.\n\nDazu gehört das Hinzufügen oder Entfernen von festen Präfixes (z. B. ch _ bei Zahlungs-IDs).\n\nStellen Sie sicher, dass Ihre Integration von Stripe-generierte Objekt-IDs verarbeiten kann, die bis zu 255 Zeichen umfassen können. Wenn Sie beispielsweise MySQL verwenden, speichern Sie die IDs in einer VARCHAR(255) COLLATE utf8 _ bin-Spalte (die COLLATE-Konfiguration sorgt für Groß- und Kleinschreibung bei Suchvorgängen).\n\nHinzufügen neuer Ereignistypen.\n\nAchten Sie darauf, dass Ihr Webhook-Listener ungewohnte Ereignistypen sinnvoll behandelt.\n\nIhre API-Version aktualisieren\n\nWenn Sie eine ältere Version der API verwenden, sollten Sie ein Upgrade auf die neueste Version durchführen. So können Sie neue Funktionen nutzen und Antworten optimieren und erhalten eine schnellere API.\n\nDas Upgrade Ihrer API-Version wirkt sich auf Folgendes aus:\n\nDie API-Aufrufe, die Sie ohne Stripe-Version-Header tätigen: die Parameter, die Sie senden können und die Struktur der zurückgegebenen Objekte.\n\nDie Struktur der mit Stripe.js-Methoden empfangenen Objekte, wie z. B. confirmCardPayment.\n\nDie Struktur der Objekte, die an Ihre Webhook-Endpoints gesendet werden (sowohl Konto-Objekte als auch Connect-Objekte). Wenn für einen Endpoint eine explizite Version festgelegt ist, ist er davon weiterhin nicht betroffen.\n\nFür von Stripe durchgeführte automatisierte Vorgänge über Billing (z. B. das Generieren einer Rechnung für einen neuen Abonnementzeitraum) wird die Standard-API-Version Ihres Kontos verwendet. Im Änderungsprotokoll der API finden Sie nähere Informationen dazu, wie sich Ihre Standard-API auf diese Vorgänge auswirkt.\n\nView your API version and the latest available upgrade in Workbench\n\nSehen Sie sich die API-Version, die von den letzten Anfragen für Ihr Konto verwendet wird, und das neueste verfügbare Upgrade auf der Registerkarte Übersicht in Workbench an.\n\nWhen performing an API upgrade, make sure that you specify the API version that you’re integrating against in your code instead of relying on your account’s default API version. To test a newer version for API calls, set the Stripe-Version header (in live or test mode). Learn how to manage versioning in our server-side SDKs.\n\nIhre Webhooks aktualisieren und testen\n\nLesen Sie unseren Leitfaden zum Umgang mit der Webhook-Versionierung.\n\nPerform the upgrade\n\nWenn Sie sicher sind, dass Ihr Code mit der neuesten API-Version umgehen kann, führen Sie das Upgrade mit Workbench durch:\n\nOpen the Overview tab in Workbench.\n\nKlicken Sie im Abschnitt API-Versionen auf Upgrade verfügbar, das angezeigt wird, wenn eine neuere API-Version verfügbar ist.\n\nReview which API version will be assigned to your account, and click Upgrade.\n\nDadurch ändert sich die Version, die von API-Aufrufen verwendet wird, die nicht über den Stripe-Version-Header verfügen, ebenso wie die Version, die zum Rendern von Objekten verwendet wird, die an Ihre Webhooks gesendet werden.\n\nVorsicht\n\nDie Form der Ressourcen in von der API abgerufenen Ereignissen ist durch die Standard-API-Version Ihres Kontos zum Zeitpunkt des Auftretens des Ereignisses definiert. Wenn mit Ihrem Code Ereignisse abgerufen werden, die erstellt wurden, als Ihre Standard-API-Version eine andere war, muss Ihr Code diese Änderungen bei der Verarbeitung der Ereignisse berücksichtigen.\n\nSetzen Sie Ihre API-Version zurück\n\nNachdem Sie Ihre API-Version aktualisiert haben, können Sie 72 Stunden lang in Workbench sicher zu der Version zurückkehren, von der Sie das Upgrade ausgeführt haben.\n\nNach dem Rücksetzen wird versucht, Webhooks, die mit der neuen Objektstruktur gesendet wurden und fehlgeschlagen sind, erneut mit der alten Struktur zu senden.\n\nInformiert bleiben\n\nWir senden Informationen über neue Ergänzungen und Änderungen an die Stripe-API und die Sprachbibliotheken im Stripe Developer Digest. Abonnieren Sie diesen, um auf dem Laufenden zu bleiben.\n\nAPI-Versionen\n\nNachfolgend sind alle wesentlichen Änderungen an der Stripe-API aufgeführt. Jedes Datum entspricht einer neuen Version der Stripe-API. Alle API-Erweiterungen und -Updates finden Sie im API-Änderungsprotokoll. Wenn Sie nach neuen Produktversionen suchen, schauen Sie sich das Produktänderungsprotokoll an.\n\n2024-06-20\n\nNew values have been added to the Issuing Authorization request _ history . reason enum:\n\ncard _ canceled\n\ncard _ expired\n\ncardholder _ blocked\n\ninsecure _ authorization _ method\n\npin _ blocked\n\nOn the Issuing Authorization resource and related test _ helper APIs, fuel . volume _ decimal has been renamed to fuel . quantity _ decimal.\n\nOn the Issuing Transaction resource and related test _ helper APIs, purchase _ details . fuel . volume _ decimal has been renamed to purchase _ details . fuel . quantity _ decimal.\n\nThe following undocumented fuel fields have been removed from the Issuing Transaction resource in favor of the _ decimal equivalents:\n\npurchase _ details . fuel . unit _ cost\n\npurchase _ details . fuel . volume\n\nThe following undocumented fleet fields have been removed from the Issuing Transaction resource in favor of their corresponding _ decimal equivalents:\n\npurchase _ details . fleet . reported _ breakdown . fuel . gross _ amount\n\npurchase _ details . fleet . reported _ breakdown . non _ fuel . gross _ amount\n\npurchase _ details . fleet . reported _ breakdown . tax . local _ amount\n\npurchase _ details . fleet . reported _ breakdown . tax . national _ amount\n\nNew values have been added to the Issuing Transaction purchase _ details . fuel . unit enum:\n\nimperial _ gallon\n\nkilogram\n\npound\n\ncharging _ minute\n\nkilowatt _ hour\n\nThe fleet . cardholder _ prompt _ data . alphanumeric _ id property on the Issuing Authorization resource has been deprecated and will be removed in a future API version. Depending on the configuration of your card program, use driver _ id, vehicle _ number, unspecified _ id or user _ id instead.\n\nIn the Capabilities API, paused . inactivity and other have been added as new disabled reasons. See Capability disabled reasons for more information.\n\nIn the Capabilities API, bank _ transfer _ payments capability type is being deprecated in favor of newer capability types per buyer’s location. The newer capability types are:\n\ngb _ bank _ transfer _ payments for UK Bank Transfers (GBP customer balance payments)\n\njp _ bank _ transfer _ payments for JP Bank Transfers (JPY customer balance payments)\n\nmx _ bank _ transfer _ payments for MX Bank Transfers (MXN customer balance payments)\n\nsepa _ bank _ transfer _ payments for SEPA Bank Transfers (EUR customer balance payments)\n\nus _ bank _ transfer _ payments for US Bank Transfers (USD customer balance payments)\n\n2024-04-10\n\nPaymentIntents now has automatic _ async as the default capture method when capture method is not specified during PaymentIntents creation. For more information about async capture, view the asynchronous capture guide.\n\nFields under rendering _ options for invoices are now migrated under rendering.\n\nProduct ‘features’ has been renamed to marketing _ features.\n\n2023-10-16\n\nIn the Accounts API, the following error codes have been added as new error codes in the requirements . errors array. See Account requirements errors for more information.\n\ninvalid _ address _ highway _ contract _ box\n\ninvalid _ address _ private _ mailbox\n\ninvalid _ business _ profile _ name\n\ninvalid _ business _ profile _ name _ denylisted\n\ninvalid _ company _ name _ denylisted\n\ninvalid _ dob _ age _ over _ maximum\n\ninvalid _ dob _ age _ under _ minimum\n\ninvalid _ product _ description _ length\n\ninvalid _ product _ description _ url _ match\n\ninvalid _ statement _ descriptor _ business _ mismatch\n\ninvalid _ statement _ descriptor _ denylisted\n\ninvalid _ statement _ descriptor _ length\n\ninvalid _ statement _ descriptor _ prefix _ denylisted\n\ninvalid _ statement _ descriptor _ prefix _ mismatch\n\ninvalid _ tax _ id _ format\n\ninvalid _ url _ denylisted\n\ninvalid _ url _ format\n\ninvalid _ url _ web _ presence _ detected\n\ninvalid _ url _ website _ business _ information _ mismatch\n\ninvalid _ url _ website _ empty\n\ninvalid _ url _ website _ inaccessible\n\ninvalid _ url _ website _ inaccessible _ geoblocked\n\ninvalid _ url _ website _ inaccessible _ password _ protected\n\ninvalid _ url _ website _ incomplete\n\ninvalid _ url _ website _ incomplete _ cancellation _ policy\n\ninvalid _ url _ website _ incomplete _ customer _ service _ details\n\ninvalid _ url _ website _ incomplete _ legal _ restrictions\n\ninvalid _ url _ website _ incomplete _ refund _ policy\n\ninvalid _ url _ website _ incomplete _ return _ policy\n\ninvalid _ url _ website _ incomplete _ terms _ and _ conditions\n\ninvalid _ url _ website _ incomplete _ under _ construction\n\ninvalid _ url _ website _ other\n\nIn the Accounts API, if no settings . payments . statement _ descriptor is supplied, the statement descriptor is automatically set to the first supplied parameter of (in priority order):\n\nbusiness _ profile . name\n\nbusiness _ profile . url\n\ncompany . name or individual . first _ name + individual . last _ name (dependent on the business _ type)\n\nThe statement descriptor is only set automatically when one of the above fields is provided as a parameter, so existing accounts will not be impacted unless a dependent field is updated. Similarly, settings . card _ payments . statement _ descriptor _ prefix will be defaulted to a shortened version of the settings . payments . statement _ descriptor. This will take place whenever the statement descriptor is updated (either explicitly, or when defaulted).\n\n2023-08-16\n\nMajor\n\nPaymentIntents and SetupIntents now have automatic _ payment _ methods enabled by default, which allows you to configure payment method settings from the Dashboard—no code required. The previous default was to accept only card payments when both payment _ method _ types and automatic _ payment _ methods were not specified. For more information, view the upgrade guide.\n\nWhen confirming a PaymentIntent, you will be required to provide a return _ url unless off _ session=true.\n\nWhen confirming a PaymentIntent, you cannot use error _ on _ requires _ action. Use payment _ method _ types with error _ on _ requires _ action if you wish to fail payment attempts when PaymentIntents transition into requires _ action.\n\nWhen confirming a SetupIntent, you will be required to provide a return _ url.\n\nYou can bypass the return _ url requirement using automatic _ payment _ methods[allow _ redirects]=never, this will automatically filter payment methods that require redirect even if they are enabled in the Dashboard.\n\nNo-cost orders are now enabled for one-time payments in Checkout Sessions. The value of payment _ method _ collection has changed from always to if _ required accordingly.\n\nWhen being viewed by a platform, PaymentMethod fingerprints of types us _ bank _ account, acss _ debit, sepa _ debit, bacs _ debit, and au _ becs _ debit are rendered in platform scope, not the owning merchant (connected account) scope. This works similarly to the 2018-01-23 change for cards and bank accounts.\n\nAdded more specific error codes to the PaymentIntent API for when a Klarna payment fails:\n\npayment _ method _ customer _ decline\n\npayment _ method _ not _ available\n\npayment _ method _ provider _ decline\n\npayment _ intent _ payment _ attempt _ expired\n\nIn the Accounts API, verification _ missing _ directors, verification _ directors _ mismatch, verification _ document _ directors _ mismatch and verification _ extraneous _ directors has been added as a new error code in the requirements . errors array. See Account requirements errors for more information.\n\n2022-11-15\n\nCharge no longer auto-expands refunds by default. You can expand the list but for performance reasons we recommended against doing so unless needed.\n\nThe charges property on PaymentIntent has been removed. You can use the latest _ charge property instead.\n\nAdded more specific error codes for the following bank redirect payment methods: Bancontact, EPS, Giropay, iDEAL, Przelewy24, and Sofort.\n\nAdded the following error codes to the PaymentIntent and PaymentMethod APIs:\n\npayment _ intent _ payment _ attempt _ expired\n\npayment _ method _ customer _ decline\n\npayment _ method _ provider _ timeout\n\npayment _ method _ not _ available\n\npayment _ method _ provider _ decline\n\nAdded the following error codes to the SetupIntent APIs:\n\nsetup _ intent _ setup _ attempt _ expired\n\npayment _ method _ customer _ decline\n\npayment _ method _ provider _ timeout\n\npayment _ method _ not _ available\n\npayment _ method _ provider _ decline\n\nIn the Accounts API, verification _ legal _ entity _ structure _ mismatch has been added as a new error code in the requirements . errors array. See Account requirements errors for more information.\n\n2022-08-01\n\nThe pending _ invoice _ items _ behavior parameter on create Invoice no longer supports the include _ and _ require value. When the parameter is omitted the default value of pending _ invoice _ items _ behavior is now exclude.\n\nWhen creating a Checkout Session in payment mode, the default value of customer _ creation has changed from always to if _ required.\n\nA PaymentIntent is no longer created during Checkout Session creation in payment mode. Instead, a PaymentIntent will be created when the Session is confirmed.\n\nCheckout Sessions no longer return the setup _ intent property in subscription mode.\n\nThe following parameters have been removed from create Checkout Session:\n\nline _ items[amount]\n\nline _ items[currency]\n\nline _ items[name]\n\nline _ items[description]\n\nline _ items[images]\n\nYou can use the price and price _ data parameters instead.\n\nThe subscription _ data[coupon] parameter has been removed from create Checkout Session. You can use the discounts parameter instead.\n\nThe shipping _ rates parameter has been removed from create Checkout Session. You can use the shipping _ options parameter instead.\n\nOn the Checkout Session resource, several shipping properties have changed.\n\nshipping _ rate has been moved into the new shipping _ cost hash.\n\nshipping has been renamed to shipping _ details.\n\nexempted now appears in the three _ d _ secure hash for card Charges. It indicates that a 3D Secure exemption was granted.\n\nIn the Accounts API, invalid _ tos _ acceptance has been added as a new error code in the requirements . errors array. See Account requirements errors for more information.\n\nWhen creating a physical Issuing card in testmode, its shipping status no longer automatically changes from pending to delivered. This functionality is now accessible via the following new endpoints:\n\n/v1/test _ helpers/issuing/cards/:card/shipping/ship\n\n/v1/test _ helpers/issuing/cards/:card/shipping/deliver\n\n/v1/test _ helpers/issuing/cards/:card/shipping/return\n\n/v1/test _ helpers/issuing/cards/:card/shipping/fail\n\ndesign _ rejected is now a possible value for the cancellation _ reason field on the issued card object, indicating that the card’s design was rejected by Stripe.\n\nThe default _ currency field on the Customer API resource has been removed.\n\n2020-08-27\n\nWe have removed tax _ percent from objects and requests in favor of tax rates.\n\nOn subscription schedules, phases . plans has been renamed to phases . items. This applies for the subscription schedule object as well as create and update requests.\n\nDeprecate the payment _ method . card _ automatically _ updated webhook in favor of payment _ method . automatically _ updated.\n\nCheckout Sessions no longer include the display _ items property. Use the includable line _ items property instead.\n\nThe requirements hash on the Account and Capability objects, and the verification _ fields hash on the Country Spec object have newly formatted strings for requirements that are related to key persons associated with an account:\n\nFields that are required for persons with representative, owner, director, and executive roles will be prefixed with representative, owners, directors, and executives, respectively. Person requirements will be previewed as follows:\n\nWhen the representative’s phone number is required, it will appear as representative . phone instead of relationship . representative.\n\nWhen an owner’s full name is required, it will appear as owners . first _ name and owners . last _ name instead of relationship . owner.\n\nWhen an executive’s ID number is required, it will appear as executives . id _ number instead of relationship . executive.\n\nWhen a director’s date of birth is required, it will appear as directors . dob . day, directors . dob . month, and directors . dob . year instead of relationship . director.\n\nThe boolean values that indicate the associated owners, executives, or directors have been provided now appear as company . owners _ provided, company . executives _ provided, or company . directors _ provided instead of relationship . owner, relationship . executive, or relationship . director, respectively.\n\nIn the Accounts/Persons/Capabilities API, several new error codes have been introduced in the requirements . errors array. See Account requirements errors for more information. These error codes are:\n\nverification _ document _ issue _ or _ expiry _ date _ missing\n\nverification _ document _ not _ signed\n\nverification _ failed _ tax _ id _ not _ issued\n\nverification _ failed _ tax _ id _ match\n\ninvalid _ address _ po _ boxes _ disallowed\n\nThe payment _ method _ details . card . three _ d _ secure fields on the Charge object have been updated. The succeeded and authenticated booleans have been removed; please use the result enum instead.\n\nThe subscriptions property on Customers is no longer included by default. You can expand the list but for performance reasons we recommended against doing so unless needed.\n\nThe tiers property on Plan is no longer included by default. You can expand the list but for performance reasons we recommended against doing so unless needed.\n\nThe sources property on Customers is no longer included by default. You can expand the list but for performance reasons we recommended against doing so unless needed.\n\nThe tax _ ids property on Customers is no longer included by default. You can expand the list but for performance reasons we recommended against doing so unless needed.\n\nThe prorate and subscription _ prorate parameters are deprecated in favor of proration _ behavior.\n\n2020-03-02\n\nMajor\n\nYou can now optionally number invoices sequentially across your account instead of sequentially for each customer. To use this feature, enable account level numbering in the Stripe Dashboard.\n\nTo ensure invoices are numbered sequentially and without gaps, invoices that can be deleted (drafts) are only assigned numbers when finalized.\n\n2019-12-03\n\nMajor\n\nThe id field of all invoice line items have changed and are now prefixed with il _. The new id has consistent prefixes across all line items, is globally unique, and can be used for pagination. Old prefixes included sub _, su _, item _, sli _, and ii _ and weren’t globally unique.\n\nYou can no longer use the prefix of the id to determine the source of the line item. Instead use the type field for this purpose.\n\nFor lines with type=invoiceitem, use the invoice _ item field to reference or update the originating Invoice Item object.\n\nThe Invoice Line Item object on earlier API versions also have a unique _ id field to be used for migrating internal references before upgrading to this version.\n\nWhen setting a tax rate to individual line items, use the new id. Users on earlier API versions can pass in either a line item id or unique _ id.\n\nWhen creating a post-payment credit note on an invoice:\n\nout _ of _ band _ amount is required if the sum of credit _ amount and (refund or refund _ amount) is less than the credit note total.\n\nIn previous API versions out _ of _ band _ amount is optional and, in the case that the credit _ amount and refund amounts are less than the credit note total, the difference will automatically be allocated to the out _ of _ band _ amount.\n\nCustomer balances applied to all invoices are now debited or credited back to the customer when voided. Earlier, applied customer balances were not returned back to the customer and were consumed.\n\nTo achieve this behavior in earlier API versions:\n\nSet consume _ applied _ balance to false when voiding invoices in /v1/invoices/:id/void.\n\nSet invoice _ customer _ balance _ settings[consume _ applied _ balance _ on _ void] to false in /v1/subscriptions create or update to force this behavior for Invoices voided by a Subscription.\n\nSet subscription _ data[invoice _ customer _ balance _ settings][consume _ applied _ balance _ on _ void] to false in /v1/checkout/sessions create to force this behavior for Invoices voided by Subscriptions created with Checkout.\n\nDeprecated tax information for Customers have been removed.\n\nThe deprecated tax _ info and tax _ info _ verification fields on the Customer object are now removed in favor of tax _ ids.\n\nThe deprecated tax _ info parameter on the Customer create and update methods are removed in favor of tax _ id _ data.\n\nFor more information, view the migration guide.\n\n2019-11-05\n\nIn the Accounts API, the requested _ capabilities property is now required at creation time for Custom accounts in all countries. See Account capabilities for more information.\n\nOn subscription schedules, invoice _ settings, default _ payment _ method, billing _ thresholds and collection _ method are now nested under default _ settings.\n\n2019-10-17\n\nThere are changes to subscription schedules.\n\nRename renewal _ behavior to end _ behavior with values cancel and release.\n\nRemove renewal _ interval.\n\nA side effect of this change is that if you wrote a renewal _ behavior of none on an old API version, end _ behavior will be converted to cancel when reading the value back.\n\nIn the event that you are upgrading your API and set renewal _ behavior as renew, with this API version enabled you will see end _ behavior as renew however you will not be able to update renewal _ interval. Additionally you can not set end _ behavior to renew, so it is in a read-only state.\n\nThe start field on a subscription resource has been removed and is replaced by a start _ date field which represents when the entire subscription started as opposed to when the current plan configuration started.\n\nThe due _ date property is always null on invoices with billing=charge _ automatically.\n\nThe billing attribute on invoices, subscriptions, and subscription schedules is renamed to collection _ method.\n\nThe customer object’s account _ balance value has been renamed to balance. A new customer balance transactions API is available:\n\nUpdate the customer’s balance by incrementing or decrementing its current value by a specified amount and attaching metadata to the change.\n\nRetrieve history of changes to the customer’s balance.\n\n2019-10-08\n\nThe relationship[account _ opener] field on a Person object has been renamed to relationship[representative].\n\n2019-09-09\n\nIn the Accounts API, the requested _ capabilities property is now required at creation time for accounts in Australia, Austria, Belgium, Denmark, Finland, France, Germany, Ireland, Italy, Luxembourg, the Netherlands, New Zealand, Norway, Portugal, Spain, Sweden, Switzerland, and the United Kingdom. See Account capabilities for more information.\n\nAdds additional details _ code values to the verification[document] hash on a Person object.\n\n2019-08-14\n\nMajor\n\nThe platform _ payments capability has been renamed to transfers, to better indicate the Stripe primitives that this capability supports.\n\nThe card _ payments capability has been updated to no longer imply transfers. You’ll now need to additionally request the transfers capability when creating an account.\n\nThe relationship[executive] field on a Person object will no longer be automatically set to true when a Person object with relationship[account _ opener] is created. The requirements hash on an Account object may require that you explicitly indicate that the account _ opener is also an executive. If this is the case, you will need to indicate it by setting relationship[executive]=true.\n\n2019-05-16\n\nBank pull payments no longer expose internal system refunds on failure.\n\nSystem refunds can still be accessed via the list refunds endpoint.\n\n2019-03-14\n\nThe application _ fee parameter on invoice API methods and the application _ fee field on the invoice object have both been renamed to application _ fee _ amount.\n\nMajor\n\nCreating a subscription succeeds even when the first payment fails. The subscription will be created in an incomplete status, where it will remain for up to 23 hours. During that time period, it can be moved into an active state by paying the first invoice. If no successful payment is made, the subscription will move into a final incomplete_expired state. Updates to a non-incomplete subscription that require a payment will also succeed regardless of the payment status. Prior to this version, all creations or updates would fail if the corresponding payment failed. For more details see our guide.\n\nThere are a few changes to the invoice object:\n\nA status _ transitions hash now contains the timestamps when an invoice was finalized, paid, marked uncollectible, or voided.\n\nThe date property has been renamed to created.\n\nThe finalized _ at property has been moved into the status _ transitions hash.\n\n2019-02-19\n\nMajor\n\nStatement descriptor behaviors for card payments created via /v1/charges have changed. See our statement descriptor guide for details.\n\nInstead of using the platform’s statement descriptor, charges created with on _ behalf _ of or destination will now use the descriptor of the connected account.\n\nThe full statement descriptor for a card payment may no longer be provided at charge creation. Dynamic descriptors provided at charge time will now be prefixed by the descriptor prefix set in the dashboard or via the new settings[card _ payments][statement _ descriptor _ prefix] parameter in the Accounts API.\n\nIf an account has no statement _ descriptor set, the account’s business or legal name will be used as statement descriptor.\n\nStatement descriptors may no longer contain *, ', and \".\n\nlegal _ entity[business _ id _ number] has been renamed legal _ entity[business _ registration _ number].\n\nMajor\n\nMany properties on the Account API object have been reworked. To see a mapping of the old argument names to the new ones, see Accounts API Argument Changes.\n\nThe legal _ entity property on the Account API resource has been replaced with individual, company, and business _ type.\n\nThe verification hash has been replaced with a requirements hash.\n\nThe verification[fields _ needed] array has been replaced with three arrays to better represent when info is required: requirements[eventually _ due], requirements[currently _ due], and requirements[past _ due].\n\nverification[due _ by] has been renamed to requirements[current _ deadline].\n\nThe disabled _ reason enum value of fields _ needed has been renamed to requirements . past _ due.\n\nProperties on the Account API object that configure behavior within Stripe have been moved into the new settings hash.\n\nThe payout _ schedule, payout _ statement _ descriptor and debit _ negative _ balances fields have been moved to settings[payouts] and renamed to schedule, statement _ descriptor and debit _ negative _ balances.\n\nThe statement _ descriptor field has been moved to settings[payments][statement _ descriptor].\n\nThe decline _ charge _ on fields have been moved to settings[card _ payments] and renamed to decline _ on.\n\nThe business _ logo, business _ logo _ large and business _ primary _ color fields have been moved to settings[branding] and renamed to icon, logo and primary _ color. The icon field additionally requires the uploaded image file to be square.\n\nThe display _ name and timezone fields have been moved to settings[dashboard].\n\nbusiness _ name, business _ url, product _ description, support _ address, support _ email, support _ phone and support _ url have been moved to the business _ profile subhash.\n\nThe legal _ entity[verification][document] property (now located at individual[verification] and at verification in the Person API object) has been changed to a hash.\n\nThe front and back fields support uploading both sides of documents.\n\nThe details _ code field has new error types: document _ corrupt, document _ failed _ copy, document _ failed _ greyscale, document _ failed _ other, document _ failed _ test _ mode, document _ fraudulent, document _ id _ country _ not _ supported, document _ id _ type _ not _ supported, document _ invalid, document _ manipulated, document _ missing _ back, document _ missing _ front, document _ not _ readable, document _ not _ uploaded, document _ photo _ mismatch, and document _ too _ large.\n\nThe keys property on Account creation has been removed. Platforms should now authenticate as their connected accounts with their own key via the Stripe-Account header.\n\nStarting with the 2019-02-19 API, the requested _ capabilities property is now required at creation time for accounts in the U.S. See Account capabilities for more information.\n\n2019-02-11\n\nSome PaymentIntent statuses have been renamed\n\nrequires _ source is now requires _ payment _ method\n\nrequires _ source _ action is now requires _ action\n\nAll other statuses are unchanged\n\nsave _ source _ to _ customer has been renamed to save _ payment _ method.\n\nallowed _ source _ types has been renamed to payment _ method _ types.\n\nThe next _ source _ action property on PaymentIntent has been renamed to next _ action, and the authorize _ with _ url within has been renamed to redirect _ to _ url.\n\n2018-11-08\n\nThe closed property on the invoice object controls automatic collection. closed has been deprecated in favor of the more specific auto _ advance field. Where you might have set closed=true on invoices in the past, set auto _ advance=false.\n\nauto _ advance now also defaults to false for one-off invoices, allowing you to control how long their status stays a draft. A longer explanation of these series of changes is in the documentation.\n\nInstead of checking the forgiven field on an invoice, check for the uncollectible status.\n\nInstead of setting the forgiven field on an invoice, mark it as uncollectible.\n\nThe immutable _ frozen _ invoice error code was renamed to invoice _ already _ finalized\n\nThe following changes only affect users of PaymentIntents as part of the private beta before November 15, 2018. If you did not use PaymentIntents before then, these don’t affect you.\n\nThe next _ source _ action dictionary on PaymentIntents previously contained a key called value. This has been replaced with the authorize _ with _ url and use _ stripe _ sdk keys.\n\nWhen creating PaymentIntents, the attempt _ confirmation parameter has been renamed to confirm.\n\nThe PaymentIntent confirm endpoint no longer supports the payment _ intent parameter. To update a PaymentIntent’s source, pass source or source _ data as a top-level parameter.\n\nThe return _ url parameter is only allowed when confirming a PaymentIntent. Passing return _ url when updating a PaymentIntent is no longer allowed.\n\nWhen creating a PaymentIntent with transfer _ data[destination], the on _ behalf _ of parameter must be provided and must match the account provided to transfer _ data[destination]. This is because when you provide a destination, Stripe will settle charges in the country of the destination account.\n\nThe next _ source _ action dictionary on PaymentIntents no longer contains the source _ type property. To view the source type when retrieving PaymentIntents, expand the source parameter.\n\n2018-10-31\n\nThe description field on customer endpoints has a maximum character length limit of 350 now. The name field on product endpoints has a maximum character length limit of 250 now. The description field on invoice line items has a maximum character length limit of 500 now.\n\nThe billing _ reason attribute of the invoice object now can take the value of subscription _ create, indicating that it is the first invoice of a subscription. For older API versions, billing _ reason=subscription _ create is represented as subscription _ update.\n\n2018-09-24\n\nFileUpload objects have been renamed to File objects. Additionally, the url attribute now contains an authenticated URL (i.e. you will need to use your secret API key to download the file’s contents.) You can create a file link to obtain a publicly-accessible URL for the file.\n\n2018-09-06\n\nWhen creating or updating a SKU, its attribute values no longer need to be unique. It is now possible to create multiple SKUs without attributes or with identical attribute values.\n\n2018-08-23\n\nYou can no longer set at _ period _ end in the subscription DELETE endpoints. The DELETE endpoint is reserved for immediate canceling going forward. Use cancel _ at _ period _ end on the subscription update endpoints instead.\n\nThe customer object’s business _ vat _ id was changed from String to Hash called tax _ info, consisting of tax _ id and type, in both requests and responses.\n\nThe amount field field in the tiers configuration for plans was renamed to unit _ amount.\n\n2018-07-27\n\nThe subscription endpoints no longer support the source parameter. If you want to change the default source for a customer, instead use the source creation API to add the new source and then the customer update API to set it as the default.\n\nWhen ending a trial on a subscription using trial _ end=now the updated subscription will now receive a trial _ end timestamp from the time of the request rather than being unset.\n\nThe percent _ off field of coupons was changed from Integer to Float, with a precision of two decimal places.\n\nWhen creating or updating a customer the email parameter must contain an email address of valid shape.\n\n2018-05-21\n\nProducts no longer have SKU lists embedded.\n\nMajor\n\nThe id field of invoice line items of type=subscription no longer can be interpreted as a subscription ID, but instead is a unique invoice line item ID. It can be used for pagination.\n\nCoupon, SKU, customer, product and plan ids may only contain alphanumeric and _ - characters on creation.\n\nMajor\n\nWhen creating or updating subscriptions, the default value of trial _ from _ plan is now false, meaning that a subscription will not automatically inherit a plan’s trial _ period _ days. If a subscription is already trialing, switching to a new plan without specifying trial _ from _ plan will maintain the trial. We recommend setting an explicit trial per subscription instead of setting trials on plans.\n\nWhen changing the plan on a subscription to a new plan with a trial (together with trial _ from _ plan=true), the new plan’s full trial period will be added to the subscription, without subtracting already-used time from previous trials.\n\n2018-02-28\n\nUpdating a subscription set to cancel on a future date no longer clears the cancellation status. In order to clear the cancellation status, specify cancel _ at _ period _ end=false when updating a subscription.\n\n2018-02-06\n\nFor a Source’s card[three _ d _ secure] property, adds recommended as a possible value. Previously, the only valid values were not supported, optional, and required.\n\n2018-02-05\n\nMajor\n\nEach plan object is now linked to a product object with type=service. The plan object statement _ descriptor and name attributes have been moved to product objects, and plan objects now have a nickname attribute. Creating a plan now requires passing a product attribute to POST /v1/plans. This may be either an existing product ID or a dictionary of product fields, so that you may continue to create plans without separately creating products.\n\nProducts now have a required type: good for products used with Orders SKUs, or service for products used with Subscriptions and Plans.\n\nOn API versions older than 2018-02-05, type is set to good by default, and GET /v1/products omits products with type=service from the list. (If you want to see products with type=service on API versions older than 2018-02-05, you can specify type=service when listing products.)\n\nMajor\n\nAllows a new subscription’s first full invoice to be on a future date, by specifying billing _ cycle _ anchor, with an optional proration up to that date.billing _ cycle _ anchor on its own is available retroactively to past versions, and starting in this version, billing _ cycle _ anchor can be combined with a trial, enabling a free trial to be followed by a prorated period, followed by a fixed billing cycle.\n\nProrations on free plans now create $0 invoices. In past versions, these did not create invoices.\n\n2018-01-23\n\nWhen being viewed by a platform, cards and bank accounts created on behalf of connected accounts will have a fingerprint that is universal across all connected accounts. For accounts that are not connect platforms, there will be no change.\n\n2017-12-14\n\nUpdates invoice payment attempts to return a card _ error when the charge is declined. This aligns /v1/invoices/{INVOICE _ ID}/pay with /v1/charges.\n\nUpdates invoice line items to always have a description set, including invoice line items generated from subscription items.\n\n2017-08-15\n\nAdds not _ required as a possible redirect[status] value on the Source object. Previously, optional redirects were marked as succeeded.\n\n2017-06-05\n\nAdds under _ review as a possible verification[disabled _ reason] value on the Account object. Previously, an under review status used the value other.\n\n2017-05-25\n\nReplaces the managed Boolean property on Account objects with type, whose possible values are: standard, express, and custom. A type value is required when creating accounts. The standard type replaces managed: false, and the custom type replaces managed: true.\n\nUpdates the previous _ attributes property on Event objects to show entire sub-arrays when those arrays have changes. Previously, those sub-arrays only showed the specific fields that changed.\n\nUpdates the request property on the Event object to be a hash containing the request ID and the idempotency key. Previously, request was just the ID.\n\nRenames the user _ id property on Connect-related event objects to account.\n\n2017-04-06\n\nMajor\n\nSplits the Transfer object into Payout and Transfer. The Payout object represents money moving from a Stripe account to an external account (bank or debit card). The Transfer object now only represents money moving between Stripe accounts on a Connect platform. For more details, see https://stripe.com/docs/transfer-payout-split.\n\n2017-02-14\n\nUpdates the dispute property on the Charge object to contain the ID of an associated dispute. Previously, dispute contained the entire Dispute object. You can expand this property when retrieving charges to render the full Dispute object as before.\n\nUpdates the outcome[rule] property on the Charge object to contain the ID of the rule that blocked the charge. Previously, outcome[rule] contained the entire Rule object. You can expand this property when retrieving charges to render the full Rule object as before.\n\n2017-01-27\n\nRemoves the sourced _ transfers property from the Balance Transaction object.\n\n2016-10-19\n\nReturns the status code 403 when an API request is made with insufficient permission. Previously, the API returned a 401 status code.\n\n2016-07-06\n\nUpdates the list all subscriptions call to also return canceled subscriptions. The endpoint now supports fetching only canceled subscriptions by specifying status=canceled. You can now retrieve a single canceled subscription by providing its ID.\n\n2016-06-15\n\nUpdates the active property on the Product object so that setting active to false no longer marks the product’s SKUs as inactive.\n\n2016-03-07\n\nRemoves the currencies _ supported property from the Account object. You can find a list of supported currencies by retrieving a Country Spec object for the country of the account.\n\n2016-02-29\n\nAdds postal code validation for legal entity addresses when creating and updating accounts.\n\n2016-02-23\n\nUpdates the behavior of orders so that changing an order from paid or fulfilled to canceled or returned automatically refunds the associated charge. Previously, attempting to change an order from paid or fulfilled to canceled or returned raised an error if the associated charge had not already been refunded.\n\n2016-02-22\n\nReturns an error on attempts to add more than 250 invoice items to an invoice.\n\n2016-02-19\n\nRenames the name property on the Bank Account object to account _ holder _ name.\n\n2016-02-03\n\nUpdates the returned Account object to only show sub-properties of legal _ entity that are applicable to the account’s country, or that were previously provided.\n\n2015-10-16\n\nReturns an error if a tax _ percent is provided without a plan during a customer update or creation.\n\n2015-10-12\n\nMajor\n\nReturns an error when invalid parameters are passed in the card or bank account hash during token, source, or external account creation. Changes the error code returned for missing required parameters in the card or bank account hash to 400. Previously, a 402 code was returned.\n\n2015-10-01\n\nReplaces the bank _ accounts property on the Account object with external _ accounts. Replaces the bank _ account value in the fields _ needed property with external _ account.\n\n2015-09-23\n\nUpdates the charge property on the Invoice object to always show the invoice’s latest charge, regardless of the charge’s source (e.g, a card or a bank account). Removes the payment property, which previously reflected a non-card charge.\n\nMajor\n\nUpdates the list all charges call to return all charges, including those made to bank accounts and other non-card sources. Previously, it only returned charges made to cards. Updates the deprecated offset parameter to only be supported when filtering by source type.\n\n2015-09-08\n\nUpdates API rate limit errors to return a 429 HTTP status code instead of 400. They also no longer return a rate _ limit error code.\n\n2015-09-03\n\nReturns an error if a request reuses an idempotency token with different parameters than the original request. Previously, errors were only returned for reusing the same idempotency token across different API endpoints.\n\n2015-08-19\n\nUpdates the Balance Transaction object to provide the refund ID or dispute ID as the source value when the balance transaction is associated with a refund or dispute. Previously, the original charge ID was shown.\n\n2015-08-07\n\nAdds date validation to the tos _ acceptance[date] property on the Account object. Accepted values are timestamps after 2009 and before the current moment.\n\n2015-07-28\n\nThe balance . available event is now triggered when immediate transfers are processed.\n\n2015-07-13\n\nReplaces the verification[contacted] Boolean property on the Account object with a verification[disabled _ reason] string that describes why the account is unable to make transfers or charges.\n\n2015-07-07\n\nUpdates the status property on the Transfer object so that transfers not yet submitted to the bank are still pending and transfers submitted to the bank that have not yet arrived are in _ transit. Previously, both states were described as pending.\n\n2015-06-15\n\nUpdates the payout _ schedule[delay _ days] property on the Account object to return an error if provided when the interval is set to manual. Manual payouts always use the minimum delay _ days value.\n\n2015-04-07\n\nUpdates the period[end] property on proration invoice line items to reflect the subscription’s current _ period _ end property when the update and proration was made. A proration invoice line item’s period[start] and period[end] properties now represent the prorated adjustment interval. Previously, period[end] marked the time at which the proration was made, and was the same as period[start].\n\nUpdates the Invoice object to change the order of the lines list: first invoice items in reverse chronological order, followed by the subscription, if applicable.\n\n2015-03-24\n\nUpdates coupons so they no longer apply to negative invoice items by default. Previously, coupons applied to all non-proration invoice items. To allow a coupon to apply to a negative invoice item, pass discountable=true when creating or updating the invoice item.\n\n2015-02-18\n\nUpdates the status property on the Charge object to have a value of succeeded for successful charges. Previously, the status property would be paid for successful charges.\n\nMajor\n\nReplaces the card property on the Charge object with source. Provide this parameter with a Card token, as before, or with a Source token that has an object value of card. Older API versions return both the card and source properties on Charge.\n\nMajor\n\nReplaces the cards and default _ card properties on the Customer object with sources and default _ source. Both properties can represent Card objects, as before, and Source objects with an object value of card. Older API versions return both the new and old properties on Customer. Replaces the customer . card . * and customer . bank _ account . * events with customer . source . *.\n\n2015-02-16\n\nRenames the transfer . canceled event to transfer . reversed.\n\n2015-02-10\n\nAdds the value warning _ closed to the status property on the Dispute object.\n\nUpdates test mode transfers to require sufficient funds in your available test mode balance (for consistency with live mode transfers). Add funds directly to your available test mode balance—bypassing the pending balance—by creating a charge using the special test card number 4000 0000 0000 0077.\n\n2015-01-26\n\nUpdates the presentation of nested hashes in the previous _ attributes property of events to only show the difference. For example, a change from {address: {line1: \"Foo\", line2: \"Bar\"}} to {address: {line1: \"Foo\", line2: \"Baz\"}} is represented as {previous _ attributes: {address: {line2: \"Baz\"}}}. Previously, it was represented as {previous _ attributes: {address: {line1: \"Foo\", line2: \"Baz\"}}}.\n\nUpdates the canceled _ at property on the Subscription object to always be the timestamp from the API call or invoice payment failure that canceled the subscription. Previously, canceled _ at reflected “at period end” subscription cancellations, too. The ended _ at property still reflects the time that the subscription actually stopped.\n\n2015-01-11\n\n2014-12-22\n\nRemoves the customer property from the Card object that appears on the Token object.\n\n2014-12-17\n\nReplaces the statement _ description property on the Charge, Invoice, Plan, and Transfer objects with statement _ descriptor. To determine what appears on a customer’s transaction, statement _ description is appended to your Stripe account’s statement descriptor while statement _ descriptor sets the full statement value. If not on this API version or newer, providing a statement _ descriptor still triggers the statement _ description behavior. Regardless of API version, the statement _ description behavior does not apply with PaymentIntents.\n\nUpdates the Accounts API to require API version 2014-12-17 or newer.\n\n2014-12-08\n\nUpdates the Dispute object so evidence can be provided as a hash of typed fields rather than a single block of text. Replaces the evidence _ due _ by property with the evidence _ details hash, which includes due _ by and submission _ count (for the number of times a dispute has been submitted).\n\n2014-11-20\n\nUpdates disputes that are won to return the status won even if the charge was refunded. Previously, a dispute won that had a refunded charge would transition to charge _ refunded.\n\nUpdates the metadata property of the Invoice Item object with a type of subscription to show the subscription’s metadata. Previously, it showed the plan’s metadata.\n\n2014-11-05\n\nRenames the charge _ enabled and transfer _ enabled properties on the Account object to charges _ enabled and transfers _ enabled.\n\n2014-10-07\n\nPrevents publishable keys from retrieving Token objects. When a card or bank account token is created with a publishable key, the fingerprint property is not included in the response.\n\n2014-09-08\n\nReplaces the disabled, validated, and verified properties on the Bank Account object with a status enum property.\n\n2014-08-20\n\nAdds three values to the status property on the Dispute object: warning _ needs _ response, warning _ under _ review, and charge _ refunded. Replaces the balance _ transaction property of the Dispute object with balance _ transactions (this provides greater detail around funds withdrawn and reinstated as a result of disputes).\n\n2014-08-04\n\nRemoves the other _ transfers, summary, and transactions properties from automatic transfer responses in favor of the balance history endpoint (/v1/balance/history). Update: As of June 20, 2024, these properties are no longer available in any versions, including those prior to 2014-08-04.\n\n2014-07-26\n\nChanges the refunds property on the Application Fee object from an array to a sublist object, which contains the data, has _ more, and url properties. This makes application fee refunds consistent with charge refunds.\n\n2014-07-22\n\nUpdates proration line items on invoices to include the associated subscription’s plan and quantity.\n\n2014-06-17\n\nChanges the refunds property on the Charge object from an array to a sublist object, which contains the data, has _ more, and url properties.\n\n2014-06-13\n\nRenames the type property on the Card object to brand.\n\n2014-05-19\n\nReplaces the account property on the Transfer object with bank _ account. The bank _ account property is only included when the transfer is made to a bank account.\n\n2014-03-28\n\nMajor\n\nRemoves the count property from list responses.\n\n2014-03-13\n\nRenames the statement _ descriptor property on the Transfer object to statement _ description.\n\n2014-01-31\n\nMajor\n\nReplaces the subscription property on the Customer object with the subscriptions property, as customers can have multiple subscriptions.\n\nIgnores trial dates on canceled subscriptions when automatically computing trial end dates for new subscriptions.\n\n2013-12-03\n\nReplaces the user and user _ email properties on the Application Fee object with an expandable account property.\n\nUpdates the refunding of application fees to be proportional to the amount of the charge refunded (when setting refund _ application _ fee=true). Previously, the entire application fee was refunded even when only part of the charge was.\n\n2013-10-29\n\nMajor\n\nChanges coupon behavior so that applying an amount-off coupon to an invoice does not increase the Customer account balance if the discount is greater than the invoice amount. Coupons are ignored—and not counted as redeemed—when applied to zero-cost invoices. This change does not apply to coupons created on earlier API version.\n\n2013-08-13\n\nRemoves the fee and fee _ details properties from the Charge and Transfer objects. Fee information is in the corresponding balance transaction.\n\n2013-08-12\n\nAllows the description property on Customer, Charge, InvoiceItem, and Recipient objects, and the email property on Customer and Recipient objects, to be set to null by providing empty string values in POST requests.\n\n2013-07-05\n\nMajor\n\nReplaces the active _ card property on the Customer object with a cards sublist and a default _ card ID property.\n\n2013-02-13\n\nUpdates the Charge object so disputed charges include another stripe _ fee object in the fee _ details array, representing the dispute fees. Includes the dispute fees in the fee total on the Charge object.\n\n2013-02-11\n\nMajor\n\nUpdates the pay invoice call to return an error when the charge is not successful. Previously, the API would return a 200 status and set the invoice’s paid property to false.\n\n2012-11-07\n\nReplaces the disputed property on the Charge object with dispute.\n\n2012-10-26\n\nUpdates the Invoice object format. The lines property is now a sublist, a paginated list of all items that contribute to the invoice.\n\n2012-09-24\n\nRemoves the extraneous id property from the Discount object.\n\n2012-07-09\n\nRemoves the uncaptured property from the Customer object.\n\n2012-06-28\n\n(Die mit dieser Version eingeführten Änderungen wurden wieder entfernt.)\n\n2012-06-18\n\nRemoves the amount and currency properties from the Token object.\n\n2012-03-25\n\nRemoves the next _ recurring _ charge property from the Customer object. Use the upcoming invoice call instead.\n\n2012-02-23\n\nShows all response fields, even those with null values. Previously, the API hid fields with null values.\n\n2011-11-17\n\n(Die mit dieser Version eingeführten Änderungen wurden wieder entfernt.)\n\n2011-09-15\n\nUpdates the card validation behavior when creating tokens.\n\n2011-08-01\n\nUpdates the list format. New list objects have a data property that represents an array of objects (by default, 10) and a count property that represents the total count.\n\n2011-06-28\n\nRemoves the identifier property (duplicate of id) from the Plan object.\n\n2011-06-21\n\nRaises exceptions on unrecognized parameters passed to the API instead of silently allowing and ignoring them."
    }
}