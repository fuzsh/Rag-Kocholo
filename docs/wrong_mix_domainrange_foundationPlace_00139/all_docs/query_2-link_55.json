{
    "id": "wrong_mix_domainrange_foundationPlace_00139_2",
    "rank": 55,
    "data": {
        "url": "https://os.kaspersky.com/faq-general/",
        "read_more_link": "",
        "language": "en",
        "title": "Frequently asked questions",
        "top_image": "https://fthub.kaspersky.com/neewoseng/wp-content/uploads/sites/25/2020/12/KasperskyOS-main-share-fb.png",
        "meta_img": "https://fthub.kaspersky.com/neewoseng/wp-content/uploads/sites/25/2020/12/KasperskyOS-main-share-fb.png",
        "images": [
            "https://os.kaspersky.com/wp-content/themes/os_theme_new_eng/img/logo-hexagon.svg",
            "https://os.kaspersky.com/wp-content/themes/os_theme_new_eng/img/20year-mobile.svg",
            "https://os.kaspersky.com/wp-content/themes/os_theme_new_eng/img/20year.png",
            "https://os.kaspersky.com/wp-content/themes/os_theme_new_eng/img/20year-hover.png",
            "https://os.kaspersky.com/wp-content/uploads/sites/31/2020/10/kiis.jpg",
            "https://os.kaspersky.com/wp-content/uploads/sites/31/2021/07/02_vdi-min.jpg",
            "https://os.kaspersky.com/wp-content/uploads/sites/31/2020/09/01_kiis.jpg",
            "https://os.kaspersky.com/wp-content/uploads/sites/31/2020/09/02_ksrw.jpg",
            "https://os.kaspersky.com/wp-content/uploads/sites/31/2020/09/03_kaap.jpg",
            "https://os.kaspersky.com/wp-content/themes/os_theme_new_eng/img/logo-hexagon.svg",
            "https://os.kaspersky.com/wp-content/uploads/sites/31/2022/02/icon_yt.svg",
            "https://os.kaspersky.com/wp-content/uploads/sites/31/2022/02/icon_ln.svg",
            "https://os.kaspersky.com/wp-content/uploads/sites/31/2022/02/icon_tw.svg",
            "https://mc.yandex.ru/watch/73108903"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2022-09-24T00:26:27+03:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://os.kaspersky.com/wp-content/themes/os_theme_new_eng/favicon/favicon.ico",
        "meta_site_name": "KasperskyOS | Cyber Immune approach to IT systems security",
        "canonical_link": "https://os.kaspersky.com/faq-general/",
        "text": "KasperskyOS provides flexibility in setting security policies: rules that the system will follow throughout its life cycle and that will prevent it from performing potentially dangerous operations.\n\nThe components of our OS are separated into isolated security domains and cannot affect one another. All of their interactions go through the microkernel, while Kaspersky Security System passes a security verdict on each. If an interaction fails to match defined policies, it is blocked even before the execution.\n\nThanks to this, when developing for KasperskyOS, you can use untrusted components that do not have Cyber Immunity. If one of them proves to be vulnerable, and attackers take advantage of this, the OS simply will not allow the component to perform operations that are not authorized by the security policy and that affect the functioning of the product.\n\nThe inherent security of KasperskyOS is embedded into its architecture and philosophy.\n\nThus, nothing can run or function unless explicitly allowed by system administrators and application developers. Security policies that describe each permitted action are defined as early as the design stage of an IT product based on KasperskyOS.\n\nThe KasperskyOS microkernel contains only a few hundred thousand lines of code, so the attack surface is minimal. The strict isolation of system components ensures operability in every situation: even if one of them fails, the OS will continue to perform its critical functions.\n\nThe KasperskyOS design conforms to the MILS and FLASK architectures, while adding Kaspersky’s own security technology.\n\nYes, it is. First, there is Kaspersky IoT Infrastructure Security whose key element is secure gateways for the internet of things, indispensable devices for modern businesses that use IoT sensors and controllers. Kaspersky IoT Secure Gateway (KISG) 1000 is currently available, and sales of KISG 100, the first-ever industrial Cyber Immune IoT gateway, have begun. By the way, it was named one of the best designs in the world in 2020 at the 7th World Internet Conference in Wuzhen, China.\n\nSecond, there is Kaspersky Secure Remote Workspace, which includes software for thin clients: computer-like user terminals for connecting to corporate virtual desktop infrastructure.\n\nAlso available for prototyping is the Kaspersky Automotive Adaptive Platform SDK for developing car electronic components.\n\nFirst of all, on the internet of things and in process control, in industries with high cybersecurity standards. Examples include manufacturing, energy, government agencies, transport infrastructure.\n\nDevices already running KasperskyOS include thin clients, a key part of Kaspersky Secure Remote Workspace, and IoT gateways, which help build secure IoT networks and implement digital transformation in the manufacturing industry. In 2020, Kaspersky Automotive Adaptive Platform was integrated into an automotive ECU.\n\nOur OS is evolving, and the range of supported devices is growing. For example, Kaspersky is investigating the possibility of adapting the OS for mobile platforms.\n\nKasperskyOS is a specialized operating system. At the moment, it can only serve as the basis for designs intended for embedded IT systems with features required by specific clients.\n\nThat said, we are confident that Cyber Immunity is an important trend that will grow fast in the segment of personal digital devices, among others. Thanks to Cyber Immunity users won’t have to worry about the security of their devices, as these will be protected from most cyberattacks by default. This is a future worth striving for.\n\nWhen designing products based on KasperskyOS, we consider only hardware that is trusted. When using our particular system, the potential harm that could be caused by Meltdown, Spectre and similar vulnerabilities is minimal.\n\nMeltdown enables non-privileged code to read data from the privileged space of the kernel. KasperskyOS is a microkernel operating system, and its kernel does not contain much data that could be used by a cybercriminal. Most system services, including those related to encryption, are implemented in the user space.\n\nSuccessful exploitation of Spectre relies on the existence of memory areas shared between processes. This is what enables the creation of a parasitic communication channel based on timing access to cache lines for indirect memory access. By default, KasperskyOS does not provide for the use of shared memory. The exclusive nature of such cases means that there is a very low likelihood that this hardware vulnerability could be maliciously exploited.\n\nA typical driver manages a device via read/write operations through I/O ports (MMIO/PIO). It also interacts with a device via DMA. The device notifies the driver about completed requests and events by sending interrupts. This means that the kernel must provide the driver with a service that would allow it to obtain access to I/O ports, allocate DMA buffers, and handle interrupts. All of these capabilities are provided by the IO service of the kernel. A driver waits for interrupts by using something similar to an IPC Call: the interrupt handler thread from the driver makes a Call to the kernel and goes to sleep waiting for an interrupt. When the corresponding interrupt is received by the kernel, the kernel wakes the relevant thread that went to sleep after the Call, thereby allowing the interrupt to be handled. The thread then goes back to sleep. Access to kernel services is privileged and must be granted only to drivers and other critical components of the architecture. IPC-based implementation of access to kernel services enables use of all available technologies of the Kaspersky Security Module to deny/restrict program access to kernel services.\n\nKasperskyOS Community Edition is a software development kit (SDK) designed to help you build a custom KasperskyOS image for a specific set of hardware platforms. The distribution kit includes the KasperskyOS kernel, solution development tools, numerous libraries (with usage examples), and documentation. The SDK is distributed as a DEB package for Debian GNU/Linux 10 “Buster” and can be downloaded for free at the provided link. The image does not include command-line interface tools such as a console or GUI. After installation, the SDK is deployed in the directory /opt/KasperskyOS-Community-Edition-<version>.\n\nThe KasperskyOS Community Edition (CE) version is not intended for commercial use. This distribution package lets you develop a fully functional product and demonstrate it to potential customers. To directly distribute commercial products based on KasperskyOS, you must purchase a commercial license.\n\nThe terms and conditions of a commercial license depend on many parameters, including the number of devices that will be produced and the specific business model (for example, fixed payments, royalties, or shared revenue). The cost may also be affected by any work performed by Kaspersky experts if necessary for a specific project. This potential work may include support for the specific hardware platform, other technical support, and updates.\n\nIf you already have tentative details or project parameters, please share them with us so that our colleagues can propose a suitable business model for you and calculate the appropriate cost.\n\nEven if you have not yet decided on any specific parameters, Kaspersky is committed to supporting successful KasperskyOS-based products and will never set any cost-prohibitive terms for licenses."
    }
}