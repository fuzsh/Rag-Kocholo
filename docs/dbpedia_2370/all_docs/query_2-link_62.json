{
    "id": "dbpedia_2370_2",
    "rank": 62,
    "data": {
        "url": "https://www.mathworks.com/matlabcentral/answers/1767485-how-can-i-plot-x-and-y-rgb-values-of-an-image-to-analyze",
        "read_more_link": "",
        "language": "en",
        "title": "How can I plot x and y RGB values of an image to analyze?",
        "top_image": "https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/images/responsive/thumbnails/generic-og-thumbnail.jpg",
        "meta_img": "https://www.mathworks.com/content/dam/mathworks/mathworks-dot-com/images/responsive/thumbnails/generic-og-thumbnail.jpg",
        "images": [
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/pic-header-mathworks-logo.20240628143916730.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/pic-header-mathworks-logo.20240628143916730.svg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/434782.jpg",
            "https://www.mathworks.com/matlabcentral/answers/uploaded_files/1076865/image.png",
            "https://www.mathworks.com/matlabcentral/answers/uploaded_files/1076870/image.png",
            "https://www.mathworks.com/matlabcentral/answers/uploaded_files/1076875/image.png",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/434782.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/matlabcentral/answers/uploaded_files/1076860/image.png",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/matlabcentral/answers/uploaded_files/1076940/image.png",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/matlabcentral/answers/uploaded_files/1079930/image.png",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/1343420_1648503005612.png",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/1343420_1648503005612.png",
            "https://www.mathworks.com/matlabcentral/answers/uploaded_files/1078225/image.png",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/631744_1547017330210_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/1343420_1648503005612.png",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/1343420_1648503005612.png",
            "https://www.mathworks.com/responsive_image/100/100/0/0/0/cache/matlabcentral/profiles/26378763_1651084324581_DEF.jpg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/pic-header-mathworks-logo.20240628143916730.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-facebook.20240628143916730.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-twitter.20240628143916730.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-instagram.20240628143916730.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-youtube.20240628143916730.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-linkedin.20240628143916730.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-rss.20240628143916730.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "How can I plot x and y RGB values of an image to... Learn more about image processing, image analysis MATLAB, Image Processing Toolbox",
        "meta_lang": "en",
        "meta_favicon": "/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/favicon.20240628143916730.ico",
        "meta_site_name": "",
        "canonical_link": "https://www.mathworks.com/matlabcentral/answers/1767485-how-can-i-plot-x-and-y-rgb-values-of-an-image-to-analyze",
        "text": "why did you have a xbox with four intervals that are set up differently than ybox ( x min,xmax,xmax,xmin) vs (ymin,ymax,ymax,ymin,ymin).\n\nWhat is the zbox for? Would that be the red boundry you selected\n\nCould you walk me through the integration equation? I havent done that before in Matlab\n\nCan you add a subplot that includes the surf and 2D image with boundary highlighted?\n\nThe image seems to get inverted when its plotted on the surf plot. I tried switching the r and c axis around but it didnt work. I am attaching the image with the correct orientation. You'll notice the surf plot and intensity plots both invert the image.\n\nQ1 and Q2: I wanted to show the location of the boundary for integration on the 3D surface plot. If I plotted it as a 2D plot, it would be underneath the surface plot. So I plotted it as a 3D plot. The box in 3D has 5 corners because the last point is a repeat of the first point, to complete the box. The line zbox=100*ones(1,5) creates z coordinates of the 5 points, and the value 100 is chosen because I was confident that 100 would be higher than the surface, so the red lines would not be hidden. The order of xbox=[xmin,xmin,xmax,...] is different from ybox=[ymin,ymax,ymax,...] , in order to go from corner 1 to 2 to 3 to 4 to 1. The command view(90,90) produces a viewpoint from directly overhead of the surface and the red rectangle (which is floating at an altitude of 100).\n\nQ3. The line avgIntensity=sum(sum(zg(ymin:ymax,xmin:xmax)))/((ymax-ymin+1)*(xmax-xmin+1)); can be thought of as avgIntnsity=numerator/denominator. sum(zg(ymin:ymax,xmin:xmax)) is the sum of the elements of the 2D array zg(), from ymin to ymax, and from xmin to xmax. Sum(), when applied to a 2D array, does a sum of each column, so the output is a vector whose elements are hte sums of each clumn. The I do a second, outer sum(), to ads up all the elements of the vector returned by the inner sum(). That completes the numerator. The denominator, (xmax-xmin+1)*(ymax-ymin+1), is simply the number of elements, or pixels, that we did the sum(sum(...)) over. The ratio numerator/denominator is the average intensity per pixel.\n\nQ4. I'm not sure I understand what you want there. Do you want to drape the image over the mountain range?\n\nQ5. You are right: the image is flipped, because images have y=0 at the top and increasing downward, but x increases to the right, for images and for standard plots, so one axis is flipped, but not the other axis. I should have fixed this with set(gca,'YDir','reverse') , to make the y axis increase in the donward direction, as is standard for images. Then I would probably need to alter the angles in the view() command.\n\n[edited: Added code to flip y axis; add red rectangle to middle plot; create custom color map and apply it to bottom plot; added discussion of the colormap and of the default orientation.]\n\nYou asked: \"I was wondering if there was a way to place the original image , the overhead view and surface plot on one plot as we do in sub plots. Would I place the set gca immediatly after imshow?\"\n\nHere is some code that does this.\n\nim1=imread('knifetest.jpg');\n\n[zr,zg,zb]=imsplit(im1);\n\nmymap=[zeros(256,1),[0:1/255:1]',zeros(256,1)];\n\nfigure;\n\nsubplot(3,1,1); imshow(im1);\n\nsubplot(3,1,2); surf(zg,'EdgeColor','none');\n\naxis equal;\n\naxis tight;\n\nset(gca,'Ydir','reverse');\n\nview(0,90);\n\nxbox=[200,200,500,500,200]; ybox=[200,300,300,200,200]; zbox=100*ones(1,5);\n\nhold on;\n\nplot3(xbox,ybox,zbox,'-r','Linewidth',2)\n\nsubplot(3,1,3); surf(zg,'EdgeColor','none');\n\ncolormap(mymap)\n\nYou can rotate the bottom plot by clicking the 3D-rotate-icon in the plot window, then clicking and dragging inside the plot area. You could also rotate the middle plot, but you said you want to see it from above, so don't.\n\nI created a green-only colormap, and applied it to the surfaces. This makes it look like the original image has been draped over the 3D surface, even though it has not been. Comment out the last line of the script, if you prefer Matlab's default colormap. Colormap info here.\n\nWhen I open knifetest.jpg with Windows Photos or Paint 3D, it opens in portrait orientation. When I display it in Matlab with imshow(), it appears in landscape. I don't regard this as a problem, in this case. If it bothers you, there is a solution, see here. It involves reading the image metadata, and rotating if necessary.\n\nThank you for your help and insight. I am sorry for going MIA. I got into a deep hole with your and Image Analyst's approach. Yours is simple and works for one sample. However, I am looking for a way to use this script for a wide variety of parts. I couldnt choose who's answer is best honestly, Matlab automatically selected yours. Nonethless, I am grateful for both of your help\n\nMy first approach involved creating a for loops that reads each pixel value. The goal was for me to start scanning from the top left corner while reading the pixel value. Once I read a value above threshold it's set as reference. After that once, I read a value that is well below the first threshold I esablished, that pixel is assigned the xmin,ymax coordinate (top left corner of my rectangle).Setting that as reference, I read the pixel values on that same y axis (scan left to right) until I hit that threshold identifying the top right corner.\n\nThen I repeat the process but starting my scan from the bottom of the image. 4 of the 6 points identified, would be used to create the rectangle for the region of interest.\n\nThat said, I was not successul in my appraoch as the code seems to skip the left side of the rectangle complete. I think part of it is the threshold value. I was choosing random numbers. I want to try using\n\n@Image Analyst of converting the image to gray scale and then use that with my for loop approach?\n\nThank you for your book recommendations, I actually just bought the Esesential matlab by Brian Hahn.Does the first book you mention cover image analysis and how to communicte and drive sensors/motors ?\n\n------------------------\n\nfilename='knifetest.jpg'\n\nim=imread(filename);\n\n[r,c,numofcolors]=size(im);\n\ngreen=im(:,:,2);\n\n%ginput function that allows user to select points\n\n% r=1:row;\n\n% c=1:col;\n\nfor x= 152:c %increment from 1 to last pixel in image\n\nfor y= 1:r %increment from 1 to last pixel in image\n\nif im(y,x,2)>200\n\n% [ymaxU1, XminU1] = [y,x]\n\nymaxU1= y\n\nxminU1= x\n\nfor y= ymaxU1:r %increment from 1 to last pixel in image\n\n% for x= xminU1:c %increment from 1 to last pixel in image\n\nif im(y,xminU1,2)<30\n\n% [ymaxU2, XminU2]= [y,x]\n\nymaxU2=y;\n\n% xminU2=x;\n\nend\n\nend\n\nend\n\nend\n\nend\n\nfor y= r:-1:1 %increment from bottom left corner of rectangle (y coordinate)\n\nfor x= 1:c %increment from bottom left corner of rectangle (x coordinate)\n\nif im(y,x,2)>70\n\n% [yminL1,XminL1]= [y,x]\n\nyminL1=y;\n\n% xminL1=x;\n\nfor y= yminL1:-1:1 %increment from last pixel to first pixel in image\n\n% % for x= xminU1:1 %increment from 1 to last pixel in image\n\nif im(y,x,2)<30\n\n% [yminL2,XminL2]= [y,x]\n\nyminL2=y;\n\n% xminL2=x;\n\nend\n\nend\n\nend\n\nend\n\nend\n\n% r2=flipr\n\n%%Now we want to identify opposite corners of rectangle\n\nfor x= c:-1:1\n\nfor y= 1:ymaxU2\n\nif im(ymaxU2,x,2)>30\n\n% [ymaxRU2,xmaxU2] = [y,x]\n\nymaxRU2 =y;\n\nxmaxU2=x;\n\nend\n\nend\n\nend\n\nfor x= c:-1:1\n\nif im(yminL2,x,2)>30\n\n% [yminRL2,xmaxL2]= [y,x]\n\nyminRL2=y;\n\nxmaxL2=x;\n\nend\n\nend\n\nim1=imread(filename);\n\n[zr,zg,zb]=imsplit(im1); %extract colors as separate arrays\n\n%[r,c]=size(zg); %image dimensions\n\n%next line: create custom color map with shades of green only\n\nmymap=[zeros(256,1),[0:1/255:1]',zeros(256,1)]; %custom color map\n\nfigure;\n\nsubplot(3,1,1); imshow(im1); %display original image\n\nsubplot(3,1,2); surf(zg,'EdgeColor','none'); %display surface plot\n\naxis equal; %make each unit on each axis have same length, so that aspect ratio matches imshow()\n\naxis tight; %limit each axis's extent to the data range\n\nset(gca,'Ydir','reverse'); %flip y axis\n\nview(0,90); %view from above\n\n%next line defines rectangle coordinates (point 1=point 5, to complete)\n\nxbox=[xminU1,xminU1,xmaxU2,xmaxU2,xminU1 ]; ybox=[yminL1,ymaxU2,ymaxU2,yminL2,yminL2]; zbox=100*ones(1,5);\n\nhold on;\n\nplot3(xbox,ybox,zbox,'-r','Linewidth',2) %draw red rectangle on middle plot\n\nsubplot(3,1,3); surf(zg,'EdgeColor','none'); %display surface plot in 3D\n\ncolormap(mymap) %apply custom colormap to surfaces\n\nIf I were you, I would work with the solution of @Image Analyst. If it does not work for some of the images you have, then I would try to figure out why. I like the fact that the solution of @Image Analyst produces a mask, or region of interest, that fits nicely inside the boundaries of the object in your original image. I have not tried to run @Image Analyst's solution. Here are some lines from their solution that I think are particularly interesting. You could make modifications when analyzing other images:\n\nlowThreshold = 85;\n\nhighThreshold = 255;\n\nmask = grayImage >= lowThreshold & grayImage <= highThreshold;\n\ngrayImage is your grayscale image (the green channel, for example), with levels form 0 to 255. \"mask = grayimage...\" creates a binary image which is 1 (i.e. white) wherever grayImage is between the low and high thresholds, and 0 (black) elsewhere. Since highThreshold=255 (which is the max possible value in grayImage), the line \"mask=grayImage...\" has the effect of setting mask to 1 wherever grayImage is >= lowThreshold. This mask image is displayed at the lower left of the 6-panel display. You could adjust the value lowThreshold to a number different than 85, if necessary.\n\nmask = ~bwareaopen(mask, 6);\n\nse = strel('disk', 18, 0);\n\nmask = imerode(mask, se);\n\nThe lines above are some of the steps that convert the bottom left mask image to the final mask, which is shown at bottom center of the 6-panel display. If you want the final mask to be closer to/farther from the edges of the boundary, try making the disk radius less than/greater than 18.\n\nmask = bwconvhull(mask, 'union');\n\nThe line above fills in any concave parts of the ROI just enough so that the ROI no longer has any concave parts. You could comment out this line, if you want to experiment with non-convex ROIs, for certain test images."
    }
}