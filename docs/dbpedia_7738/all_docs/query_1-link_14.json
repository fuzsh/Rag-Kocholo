{
    "id": "dbpedia_7738_1",
    "rank": 14,
    "data": {
        "url": "https://blog.inliniac.net/tag/sourcefire/",
        "read_more_link": "",
        "language": "en",
        "title": "sourcefire",
        "top_image": "https://s0.wp.com/i/blank.jpg",
        "meta_img": "https://s0.wp.com/i/blank.jpg",
        "images": [
            "https://blog.inliniac.net/wp-content/uploads/2012/07/header-shells.jpg",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2011-09-24T18:09:24+02:00",
        "summary": "",
        "meta_description": "Posts about sourcefire written by inliniac",
        "meta_lang": "en",
        "meta_favicon": "https://s1.wp.com/i/favicon.ico",
        "meta_site_name": "Inliniac",
        "canonical_link": "https://blog.inliniac.net/tag/sourcefire/",
        "text": "The last few days I‚Äôve been at the Recent Advances in Intrusion Detection (RAID) conference in California. Overall it has been a very pleasant and interesting experience. The nice California weather was certainly helping a lot!\n\nI‚Äôve seen all talks and some were very interesting. However, being a Suricata IDS developer, I was not just interested in research for the hell of it, but I was actively scouting for ideas we could implement into Suricata. In this respect the conference was highly disappointing. Although with some of the talks I thought the idea was applicable in general security, like Erik Bosmans high speed memory tainting detection, I found nothing like that for NIDS.\n\nMost inspiring part of the conference was spending an evening with Seth Hall, one of the Bro IDS engineers. Bro has a very different approach to inspecting the network than Suricata. Actually, I should say Suricata does it differently as Bro has been around much longer than Suricata. üôÇ The conversation was all about sharing of ideas and experiences, and finding common grounds for actual cooperation.\n\nA couple of notes from that conversation. First, Bro supports Unified2/Barnyard2 now, as input (so actually Barnyard2 can output to Bro). This means it can extend it‚Äôs analysis to include Suricata generated events. Second, we might try to have Suricata and Bro work together, where Suricata would be controlled by Brocolli. This way Bro could benefit from Suricata‚Äôs high speed signature matching engine, functionality Bro doesn‚Äôt have, and Suricata could benefit from Bro‚Äôs higher level understanding of the network. Finally, Bro‚Äôs binpack effort to define protocol parsers in a higher level language that can then be compiled into native code looks interesting as well. It would probably take quite a bit of changes to get this all going, but it might just be worth it.\n\nThen there was the panel at the conference with Martin Roesch, Seth Hall and myself. A lot of people expected fireworks, but no such thing happened. Everyone was polite, respectful and friendly. It never really turned into a real discussion though, it was more a Q&A with the audience. Dominique Karg blogged about the panel here.\n\nIt was good to talk to Martin Roesch. The OISF ‚Äì Sourcefire relation has definitely not started well, so it was good to have normal conversations and such. I offered Marty to work together, especially on SCADA detection. As was announced earlier, OISF will maintain the Digital Bond Quickdraw SCADA parsers and keywords, not only for Suricata, but also for Snort. Hopefully we can start a more constructive relationship on this topic, and elsewhere.\n\nSome final thoughts on RAID. It was well organized and it was great to meet so many smart(er) people thinking about generally the same topics as I do. On the negative side I do feel disappointed over the apparent disconnect between the academic world and the more real world focused efforts like Suricata, Snort and tools like Streamdb, Sguil, Snortby, Squert, etc. But maybe I‚Äôm just lacking the vision to put the theory to practice.\n\nThe current tools out there may not be considered sufficient by everyone for every task. However, if RAID was a good benchmark, I fear we‚Äôll have to settle for those for a while. Thats not necessarily a bad thing as fore-mentioned tools are under active development and continue to improve steadily.\n\nToday I noticed that Snort 2.7.0 was quietly released on July 12th. I have a problem with this release, a licensing problem. I have written about my issues with Sourcefires Snort licensing before here and on the mailinglist as well, here. They seem to have listened a little bit, since they are no longer claiming copyright of Todd C. Millers BSD licensed strlcpy and strlcat implementation. Sadly, our other complaints are completely ignored.\n\nSourcefire claims that Snort is governed by the GPLv2 only. There is a problem with this claim. It‚Äôs actually a license change from the recent past. Snort used to be under ‚ÄúGPLv2 or (at your option) any later version‚Äù. Now it isn‚Äôt anymore. Thats a license change. Now don‚Äôt get me wrong, I don‚Äôt have any problem with Sourcefire relicensing their code. It‚Äôs their right do so. But only for their code. Not for my code, not for code they don‚Äôt own the copyright from. In other words, not for all of Snort.\n\nSourcefire changed the license also for the parts of Snort they don‚Äôt own. But, the funny thing is, Sourcefire isn‚Äôt even claiming full copyright on Snort. For example in src/inline.c they state ‚ÄúPortions Copyright (C) 1998-2006 Sourcefire, Inc.‚Äù. In another example, the file src/preprocessors/spp_arpspoof.c states ‚ÄúCopyright (C) 2001-2004 Jeff Nathan <jeff@snort.org>‚Äù. There are many more files where Sourcefire doesn‚Äôt claim the (full) copyright for an obvious reason. They don‚Äôt own it for these files.\n\nSourcefire says it is distributing Snort under the GPLv2 so that‚Äôs the license governing it. Yes it‚Äôs true: Snort until this day is and was distributed with a copy of the GPLv2 license. But their site until very recently clearly stated ‚ÄúThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.‚Äù (source). How recent is recently? Well the newest archived version of the Snort site in the wayback machine is from May 9th, 2007. It has the above text, thats less than three months ago. This was no accident, this line of text has been on the Snort site as long as the wayback machine takes us back, which is until the year 2000. But wait, there is more: Many, I estimate the majority, of the source files of the Snort source code of Snort 2.6.1.5 contain that same line as well.\n\nSo now Sourcefires claims that ‚ÄúSNORT is an open source project that is governed exclusively by the GPL V2 and any third party desiring to use, modify or distribute SNORT must do so by strictly following the terms and conditions of GPL V2. Anyone using, modifying or distributing SNORT does not have the option to choose to use, modify or distribute SNORT under any revised or new version of the GPL, including without limitation, the GNU General Public License Version 3.‚Äù (source) This is clearly a license change because under the conditions active until at least May 9th, 2007, the user was free to select a newer version of the license as well. The funny thing is, the original page stating this is still online at snort.org. And that STILL says ‚ÄúGPLv2 or (at your option) any later version‚Äù.\n\nI draw two conclusions from this. First, there was a license change. It‚Äôs clear that Snort used to be under the ‚ÄúGPLv2 or (at your option) any later version.‚Äù The page claiming that until at least May 9th of this year is even still online. Until 2.6.1.5 (and possibly 2.7.0rc1) most of the source code contained the same language. Second, Sourcefire had no right to relicense all of Snort. They have no right because they don‚Äôt own all of the copyright. What can they do about it? Simple: remove the current 2.7.0 release, and replace it by one that respects everyones rights!\n\nDisclaimer: I‚Äôm not a lawyer, nor do I look like one or am I married to one. But I believe my point of view is correct. If you believe it‚Äôs not, please let me know.\n\nToday the final version of the GPL version 3 was released. This is interesting from many perspectives, and one of them is Snort licensing. Much has been written about Snort and the GPL lately, but that was all about new license language introduced with Snort 3.0 alpha and not about the currently maintained and developed 2.6 and 2.7 branches. When I‚Äôm talking about Snort here and now, I mean those versions prior to 3.0.\n\nSnort, like many other OSS projects (including my own Vuurmuur and Modsec2Sguil) comes with many files (but not all) that are distributed with the following lines in the copyright notice:\n\n** This program is free software; you can redistribute it and/or modify ** it under the terms of the GNU General Public License as published by ** the Free Software Foundation; either version 2 of the License, or ** (at your option) any later version.\n\nWhat it says, is that the GPLv2 license applies to this file, but that if there is a newer GPL license available (GPLv3 in this case), you may choose to ‚Äòredistribute it and/or modify it‚Äô under that later version. So it appears that this means that the files in Snort that contain this header can be distributed under the GPLv3 as well.\n\nSourceFire however, disagrees. Martin Roesch wrote on Snort.org that SourceFire has chosen not to do the transition to the GPLv3 yet. He points to a page on the snort.org site where it is explained why SourceFire thinks that despite the ‚Äò(at your option) any later version‚Äô line, only the GPLv2 applies to Snort.\n\nThe reasoning is rather simple, Snort is governed by the GPLv2 because it is governed by the GPLv2. Here is how SourceFire said it:\n\n‚ÄúSNORT is an open source project that is governed exclusively by the GPL V2 and any third party desiring to use, modify or distribute SNORT must do so by strictly following the terms and conditions of GPL V2. Anyone using, modifying or distributing SNORT does not have the option to choose to use, modify or distribute SNORT under any revised or new version of the GPL, including without limitation, the GNU General Public License Version 3.‚Äù (source)\n\nI think this is an impossible position. For years the Snort source code has been distributed leaving the option to developers to pick a new version of the GPL when it would become available. But now that this time has come, they are coming back to that. Here is what they say:\n\n‚ÄúFor ease of reference, the comparable notice that is used with SNORT (contained in the ‚ÄòREADME‚Äô file) is as follows:\n\n‚ÄúThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License Version 2 as published by the Free Software Foundation. You may not use, modify or distribute this program under any other version of the GNU General Public License.‚Äù‚Äù (source)\n\nNote however, that future versions of Snort may hold this notice, but currently released code does not. Apparently, SourceFire has no trust in their own explanation of the ‚Äò(at your option) any later version‚Äô line, so they are going to remove it altogether.\n\nIn my opinion this is effectively a licensing change. It changes from GPLv2+ to GPLv2. This has a couple of implications. First of all, all code already out there is licensed as it is. The language in the source files is clear. Second of all, while SourceFire has certainly written the vast majority of code, not all code in Snort is copyrighted by them. Copyright of the Snort_inline project was not transferred to SourceFire when they incorporated our inline patch in 2.3.0RC1. There may be other contributions by others without copyright transfer.\n\nMany projects have chosen to change the licensing language long ago to remove the ‚Äò(at your option) any later version‚Äô line. SourceFire hasn‚Äôt done this. It is my believe that by deliberately spreading the code with this clause for many years, SourceFire is allowing anyone to ‚Äòredistribute it and/or modify‚Äô the affected source files under the GPL version 3.\n\nDisclaimer: this is my personal opinion, not (necessarily) the opinion of other Snort_inline developers."
    }
}