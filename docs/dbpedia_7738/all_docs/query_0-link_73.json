{
    "id": "dbpedia_7738_0",
    "rank": 73,
    "data": {
        "url": "https://www.npmjs.com/package/unified2",
        "read_more_link": "",
        "language": "en",
        "title": "unified2",
        "top_image": "https://static-production.npmjs.com/338e4905a2684ca96e08c7780fc68412.png",
        "meta_img": "https://static-production.npmjs.com/338e4905a2684ca96e08c7780fc68412.png",
        "images": [
            "https://www.npmjs.com/npm-avatar/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdmF0YXJVUkwiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci85NjI0NWIzMTg5OGJhNDQxYTA1M2QxYTZjMDQyMjczOD9zaXplPTEwMCZkZWZhdWx0PXJldHJvIn0.EPVzAL_6YGRVpPbYEB20L5vrDIyS53p-uCeONawWSrg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2013-09-07T20:55:06.249000+00:00",
        "summary": "",
        "meta_description": "unified2 parser. Latest version: 0.1.5, last published: 11 years ago. Start using unified2 in your project by running `npm i unified2`. There is 1 other project in the npm registry using unified2.",
        "meta_lang": "en",
        "meta_favicon": "https://static-production.npmjs.com/58a19602036db1daee0d7863c94673a4.png",
        "meta_site_name": "npm",
        "canonical_link": "https://www.npmjs.com/package/unified2",
        "text": "A small library for unified2 parsing in node.js. Unified2 is a common output format for network intrusion detection devices such as Snort + Suricata.\n\nSee Sourcefire's documentation for the unified2 protocol: http://manual.snort.org/node44.html\n\nInstallation\n\n$ npm install unified2\n\nUsage\n\nExample\n\nTailing a file\n\nIt is often useful to wait for more data as the file is being written, e.g. by a Snort sensor.\n\nSimply pass tail: true in the options for the parser to wait for more logs, e.g.:\n\nTo stop the parser, you can do parser.stop() which will trigger an end event.\n\nBookmark\n\nTo read the current bookmark, you can use parser.last_read_position, which is the offset after the last read unified2 event. Useful after a 'eof' event or 'end' event if you wish to resume parsing again later, you can pass this into the offset: <value> parameter in the Parser constructor.\n\nDebug logging\n\npass in DEBUG=unified2 as an environment variable to turn on debug logging.\n\nIs it fast? This is javascript after all.\n\nIn tests, parsing happens at about ~7000k/events per second. Obviously, this slows down as you add processing and IO.\n\nHere's reading ~4.6 MB and writing parsed objects (~34MB) to stdout.\n\nunified2 (master*) $ time node tests/test.js > /tmp/test.js.output ~/src/unified2 node tests/test.js > /tmp/test 11.67s user 0.38s system 100% cpu 11.977 total\n\nMissing?\n\nRight now, this is just a bare bones parser. E.g., the pcaps and extra data are not correlated with the ids event messages. This is intentional.\n\nPlease refer to Pigsty (https://github.com/threatstack/pigsty) for a more complete unified2 parser and plugin framework for handling the output.\n\nBug Reporting\n\nPlease use Github or email support@threatstack.com.\n\nLicense\n\nCopyright (C) 2013 Threat Stack, Inc (https://www.threatstack.com)\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details."
    }
}