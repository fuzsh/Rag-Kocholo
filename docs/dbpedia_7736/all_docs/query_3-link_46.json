{
    "id": "dbpedia_7736_3",
    "rank": 46,
    "data": {
        "url": "https://wiki.developersindia.in/community-guides/understanding-software-licenses",
        "read_more_link": "",
        "language": "en",
        "title": "The Official r/developersIndia Community Wiki",
        "top_image": "https://wiki.developersindia.in/favicon.svg",
        "meta_img": "https://wiki.developersindia.in/favicon.svg",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "The home for all things about the developersIndia community wiki",
        "meta_lang": "en",
        "meta_favicon": "../favicon.svg",
        "meta_site_name": "r/developersIndia Wiki",
        "canonical_link": "https://wiki.developersindia.in/../",
        "text": "Understanding Software Licenses\n\nWhat is a software license?\n\nA software license is a legal instrument that gives you the right to install, use or otherwise interact with a specific computer program under given circumstances.\n\nIn simple terms, a software license defines a set of responsibilities for those who use the code and those who produce the code.\n\nA software license is a requirement when releasing code to the public, as without one, the code is copyrighted to the developer by default.\n\nWhy are software licenses important?\n\nHere are the reasons why software licenses are indispensable:\n\nThey define the usage rights (T&C) and prevent unauthorized usage of the software.\n\nSoftware licenses are essential for establishing legal boundaries and preventing legal troubles such as fines and lawsuits.\n\nLicenses are crucial for defining distribution permissions and limitations.\n\nThey allow developers to control how their software is used to prevent misuse and unapproved modifications.\n\nOpen-source licenses facilitate collaboration by providing a legal framework for a transparent development environment.\n\nWhat are the types of Software Licenses?\n\nThere are mainly 4 main categories of Software Licenses based on the rights and restrictions they impose.\n\n1. Public Domain\n\nPublic Domain software refers to software deliberately placed in the public domain, no longer protected by copyright, trademark or patent laws. As a result, it can be freely used without the permission of or payment to the developer.\n\nDirect licensing for the public domain is not universally recognized. Here are two tools that you could use as alternatives.\n\nCreative Commons Zero (CC0): CC0, provided by Creative Commons, is used for waving copyright interest in a work you've created and serves as a fallback as a public domain equivalent license.\n\nThe Unlicense: The Unlicense is similar to CC0 but offers a simpler, more direct statement of public domain dedication.\n\n2. Permissive\n\nPermissive licenses, often referred to as “BSD-style licenses”, contain minimal restrictions on how the software can be modified or redistributed.\n\nThe Open Source Initiative defines a permissive software license as a “non-copyleft license that guarantees the freedom to use, modify and redistribute”.\n\nSome commonly used permissive licenses are:\n\nMIT License: The MIT License is one of the most permissive licenses that allow you to use, copy, modify, distribute, sublicense and sell copies of the software as long as you add a copy of the original MIT License and copyright to it.\n\nApache License 2.0: Apache License is similar to MIT License but it explicitly addresses patents by providing the recipient with a license to any patents held by the contributor related to the project.\n\nBSD-2-Clause: Much like the MIT License, the 2-Clause BSD License also allows you to use, modify, distribute and sublicense the software. However, it includes an additional requirement for attribution in advertising materials.\n\n3. Copyleft\n\nCopyleft licenses are more restrictive and less commercial-friendly. These require that anyone who modifies or distributes the software share their changes under the same or a compatible license.\n\nSome commonly used copyleft licenses are:\n\nGNU General Public License (GPL) 2.0: To utilise GPLv2 rights (copying, distribution & modifying), you must track changes and dates in the source file and share any changes under GPL terms.\n\nGNU General Public License (GPL) 3.0: GPLv3 follows GPLv2 but also includes provisions for patents, allows adding extra permissions, improved internationalization and termination processes, etc.\n\nGNU Affero General Public License (AGPL) 3.0: AGPLv3 and GPLv3 share core principles of copyleft, but AGPLv3 includes additional provisions to address the distribution of modified software over a network.\n\n4. Proprietary\n\nAlso called closed-sourced, this license is used by developers or vendors to claim ownership of their work and software. Proprietary licenses restrict the user’s right to modify, distribute or access the underlying source code of the software. An example of a proprietary license is:\n\nMS Reference Source License: The MS-RSL is a proprietary license that allows you to review the code and make copies of it, but you can’t use the code or change it in any way.\n\nComparison of Software Licenses\n\nHere’s a table summarizing the software licenses we talked about earlier, including their types, key features and examples of projects corresponding to each license.\n\nWhich software license should I use?\n\nWhen choosing an open-source license for your project, it’s crucial to ensure that your selection aligns with your ideological values and objectives. Additionally, consider the level of control you wish to maintain over your project, ensuring compatibility and compliance with the licenses of any software incorporated into it.\n\nIf you prefer a copyleft approach, where derivative work must also be open source, the GNU General Public License (GPL) is a strong candidate. This license ensures that modifications and improvements to your project also contribute to the open-source community.\n\nIf you prioritize making your software widely accessible with minimal restrictions, the MIT License is a popular choice. It allows for almost unrestricted use, modification and distribution.\n\nThere are also open-source software licenses for non-software works ranging from documentation to fonts.\n\nUltimately, the right license depends on your specific project requirements and how you envision collaboration within the open-source community. Take time to understand the terms and conditions of each license to make an informed decision that best suits your objectives.\n\nResources\n\nNot sure which license to pick? Here are a few tools to help you out.\n\nChoosealicense.com by Github offers comprehensive information on licensing options beyond those discussed here.\n\nPublic License Selector by ÚFAL is a tool that can help you choose the right open-source license for data and software.\n\nAlso, check out OSI's extensive FAQs which may offer solutions to your queries."
    }
}