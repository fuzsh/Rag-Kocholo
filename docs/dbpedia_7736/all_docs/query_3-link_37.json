{
    "id": "dbpedia_7736_3",
    "rank": 37,
    "data": {
        "url": "http://ivory.idyll.org/blog/2015-on-licensing-in-bioinformatics.html",
        "read_more_link": "",
        "language": "en",
        "title": "On licensing bioinformatics software: use the BSD, Luke.",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "If a piece of bioinformatics software is not fully open source, my lab and I will generally seek out alternatives to it for research, teaching and...",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Why avoid non-open-source software?\n\nWe avoid non-open-source software because it saves us future headaches.\n\nContrary to some assumptions, this is not because I'm anti-company or against making money from software, although I have certainly chosen to forego that in my own life. It's almost entirely because such software is an evolutionary dead end, and hence time spent working with it is ultimately wasted.\n\nMore specifically, here are some situations that I want to avoid:\n\nwe invest a lot of time in building training materials for a piece of software, only to find out that some of our trainees can't make use of the software in their day job.\n\nwe need to talk to lawyers about whether or not we can use a piece of software or include some of its functionality in a workflow we're building.\n\nwe find a small but critical bug in a piece of bioinformatics software, and can't reach any of the original authors to OK a new release.\n\nThis is the reason why I won't be investing much time or effort in using kallisto in my courses and my research: it's definitely not open source.\n\nWhy avoid copyleft?\n\nThe typical decision tree for an open source license is between a \"permissive\" BSD-style license vs a copyleft license like the GPL; see Jake Vanderplas's excellent post on licensing scientific code for specifics.\n\nThere is an asymmetry in these licenses.\n\nOur software, khmer, is available under the BSD license. Any open source project (indeed, any project) is welcome to take any part of our source code and include it in theirs.\n\nHowever, we cannot use GPL software in our code base at all. We can't call GPL library functions, we can't include GPL code in our codebase, and I'm not 100% sure we can even look closely at GPL code. This is because if we do so, we must license our own software under the GPL.\n\nThis is the reason that I will be avoiding bloomtree code, and in fact we will probably be following through on our reimplementation -- bloomtree relies on both Jellyfish and sdsl-lite, which are GPL.\n\nWhy did we choose BSD and not GPL for our own code?\n\nTwo reasons: first, I'm an academic, funded by government grants; second, I want to maximize the utility of my work, which means choosing a license that encourages the most participation in the project, and encourages the most reuse of my code in other projects.\n\nJake covers the second line of reasoning really nicely in his blog post, so I will simply extract his summary of John Hunter's reasoning:\n\nTo summarize Hunter's reasoning: the most important two predictors of success for a software project are the number of users and the number of contributors. Because of the restrictions and subtle legal issues involved with GPL licenses, many for-profit companies will not touch GPL-licensed code, even if they are happy to contribute their changes back to the community. A BSD license, on the other hand, removes these restrictions: Hunter mentions several specific examples of vital industry partnership in the case of matplotlib. He argues that in general, a good BSD-licensed project will, by virtue of opening itself to the contribution of private companies, greatly grow its two greatest assets: its user-base and its developer-base.\n\nI also think maximizing remixability is a basic scientific goal, and this is something that the GPL fails.\n\nThe first line of reasoning is a little more philosophical, but basically it comes down to a wholesale rejection of the logic in the Bayh-Dole act, which tries to encourage innovation and commercialization of federally funded research by assigning intellectual property to the university. I think this approach is bollocks. While I am not an economic expert, I think it's clear that most innovation in the university is probably not worth that much and should be made maximally open. From talking to Dr. Bill Janeway, I he agrees that pre-Bayh-Dole was a time of more openness, although I'm not sure of the evidence for more innovation during this period. Regardless, to me it's intuitively obvious that the prospect of commercialization causes more researchers to keep their research closed, and I think this is obviously bad for science. (The Idea Factory talks a lot about how Bell Labs spurred immense amounts of innovation because so much of their research was open for use. Talent Wants to be Free is a pop-sci book that outlines research supporting openness leading to more innovation.)\n\nSo, basically, I think my job as an academic is to come up with cool stuff and make it as open as possible, because that encourages innovation and progress. And the BSD fits that bill. If a company wants to make use of my code, that's great! Please don't talk to us - just grab it and go!\n\nI should say that I'm very aware of the many good reasons why GPL promotes a better long-term future, and until I became a grad student I was 100% on board. Once I got more involved in scientific programming, though, I switched to a more selfish rationale, which is that my reputation is going to be enhanced by more people using my code, and the way to do that is with the BSD. If you have good arguments about why I'm wrong and everyone should use the GPL, please do post them (or links to good pieces) in the comments; I'm happy to promote that line of reasoning, but for now I've settled on BSD for my own work.\n\nOne important note: universities like releasing things under the GPL, because they know that it virtually guarantees no company will use it in a commercial product without paying the university to relicense it specifically for the company. While this may be in the best short-term interests of the university, I think it says all you need to know about the practical outcome of the GPL on scientific innovation."
    }
}