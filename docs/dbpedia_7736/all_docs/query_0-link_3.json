{
    "id": "dbpedia_7736_0",
    "rank": 3,
    "data": {
        "url": "https://ospo.library.jhu.edu/licensing/",
        "read_more_link": "",
        "language": "en",
        "title": "Licensing FAQ – Open Source Programs Office",
        "top_image": "https://ospo.library.jhu.edu/wp-content/themes/sheridan-libraries-light/favicon-32x32.png",
        "meta_img": "https://ospo.library.jhu.edu/wp-content/themes/sheridan-libraries-light/favicon-32x32.png",
        "images": [
            "https://ospo.library.jhu.edu/wp-content/uploads/sites/60/2023/11/sheridan-libraries.logo_.small_.horizontal.blue_-560x300.png",
            "https://ospo.library.jhu.edu/wp-content/uploads/sites/60/2023/11/sheridan-libraries.logo_.small_.horizontal.white_-1024x422.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://ospo.library.jhu.edu/wp-content/themes/sheridan-libraries-light/apple-touch-icon-144x144.png",
        "meta_site_name": "",
        "canonical_link": "https://ospo.library.jhu.edu/licensing/",
        "text": "Open source software is software with publicly available source code that is licensed to allow use, inspection, modification, and distribution by anyone. Source code is the human-readable instructions that tell a computer what to do. Source code is written in a programming language such as Python, Java, or C++.\n\nExamples of open source software include the Linux operating system, the Firefox Web browser, and the WordPress content management system.\n\nExamples of proprietary (closed-source) software include the Windows operating system, the Safari Web Browser, and the Adobe creative suite.\n\nThe rights to use, inspect, distribute, and modify code are granted by the open source license, a legal agreement.\n\nThere are many different open source licenses.\n\nSome open source licenses are “copyleft” or “reciprocal,” and require users to release any modifications made to the software under the same license. Examples include the GPL and AGPL licenses.\n\nSome open source licenses are “permissive,” and allow significant freedom to use the software for a variety of purposes, including within commercial products. Examples include the Apache, BSD, and MIT licenses.\n\nOpen source licenses are reviewed and approved by the Open Source Initiative, a standards body that maintains the Open Source Definition and Approved Licenses. The Free Software Foundation also has useful information about open source licenses, especially in the context of license compatibility.\n\nUnless you never want another person to use or collaborate on your project, you should always license your code. Copyright law in the United States automatically grants a copyright in your code as soon as you create it. This means that others will not be able to use, inspect, distribute, and modify your code without permission. Without a license, only the owner of the software would possess these rights.\n\nBy choosing an open source license, you can grant others the rights to use, inspect, distribute, and modify your code under certain conditions. This can help to promote collaboration and innovation.\n\nFrom the Creative Commons FAQ (citation below):\n\n“We recommend against using Creative Commons licenses for software. Instead, we strongly encourage you to use one of the very good software licenses which are already available. We recommend considering licenses listed as free by the Free Software Foundation and listed as “open source” by the Open Source Initiative.”\n\n“Unlike software-specific licenses, CC licenses do not contain specific terms about the distribution of source code, which is often important to ensuring the free reuse and modifiability of software. Many software licenses also address patent rights, which are important to software but may not be applicable to other copyrightable works. Additionally, our licenses are currently not compatible with the major software licenses, so it would be difficult to integrate CC-licensed work with other free software. Existing software licenses were designed specifically for use with software and offer a similar set of rights to the Creative Commons licenses.”\n\n“Frequently Asked Questions – Creative Commons.” Accessed November 15, 2023. https://creativecommons.org/faq/#can-i-apply-a-creative-commons-license-to-software.\n\nWhile the inclusion of a copyright notice is not required, it is common practice and provides a few benefits. The copyright notice informs the public of the owner of the work, which is commonly the author or the author’s employer. The U.S. Copyright Office provides circulars that explain copyright laws, policies, and procedures for a general audience; for example, Circular 3, Copyright Notice.\n\nA sample copyright notice:\n\nCopyright [year repository becomes public] The Johns Hopkins University\n\nNot sure who holds the copyright for your work? Review the Johns Hopkins Intellectual Property Policy or contact Johns Hopkins Technology Ventures.\n\nA trademark can be any word, phrase, symbol, design, or combination of these things that identifies an organization’s goods or services.\n\nA copyright in software grants the software owner the exclusive right to reproduce, distribute, and prepare derivative works of the software files.\n\nA patent in software grants the software owner the exclusive right to make, use, sell, and import products and processes that provide the software functionality.\n\nAn open source license is an intellectual property license and legal agreement that grants users certain rights to use, inspect, distribute, and modify software. Organizations may refer to open-source software as inbound/in-licensed meaning open-source licensed software brought into the organization, or outbound/out-licensed meaning open-source software created by the organization and used by others.\n\nConcepts like trademarks, copyrights, licenses, and patents are complex, and JHTV remains the best resource at Hopkins for specific legal guidance. However, here’s a simplified explanation of how these protections apply to code created or used by a real-world organization.\n\nNintendo holds a trademark for the name Nintendo Switch™ and the logo used for one of its video game consoles.\n\nNintendo holds the copyright for any source code they develop to run the Nintendo Switch™ operating system or Nintendo-developed games.\n\nNintendo holds a patent for the controller used with the Nintendo Switch™. The controller combines elements of hardware and code into an invention with novel and practical utility.\n\nNintendo in-licenses code from other creators for use with the Nintendo Switch™, including open source code. Nintendo out-licenses its intellectual property, such as trademarked and copyrighted logos and characters for use on t-shirts, toys, and other merchandise.\n\nAll open source licenses grant users the right to exercise the software owner’s copyrights. Some open source licenses grant users the right to exercise the software owner’s patent rights.\n\nExplicit patent grants in open source licenses: Some open source licenses explicitly grant patent rights to anyone who receives the software. This means that anyone who uses, modifies, or distributes the software is also granted a license to the patents that cover the software. Examples of open source licenses with explicit patent grants include the Apache v2.0, GPL 3.0, and Eclipse 2.0 licenses.\n\nImplied patent grants in open source licenses: Some open source licenses do not explicitly mention patents, but they have been interpreted by some commentators to implicitly grant patent rights based on broader legal principles. Open source licenses that do not have explicit patent grants include the MIT and BSD-3 and GPL 2.0 licenses.\n\nFrom the Open Source Hardware Association (OSHWA):\n\n“Open Source Hardware (OSHW) is a term for tangible artifacts — machines, devices, or other physical things — whose design has been released to the public in such a way that anyone can make, modify, distribute, and use those things.”\n\n“Hardware is different from software in that physical resources must always be committed for the creation of physical goods. Accordingly, persons or companies producing items (“products”) under an OSHW license have an obligation to make it clear that such products are not manufactured, sold, warrantied, or otherwise sanctioned by the original designer and also not to make use of any trademarks owned by the original designer.”\n\nThe full open-source hardware definition is available via: https://www.oshwa.org/definition/.\n\nIt depends! Why do you want to apply an open source license to your project?\n\nIf one of these sounds like you, you might choose a copyleft license:\n\nI want to develop an open-source business around my software\n\nMy project will mostly be used by for-profit organizations\n\nI don’t want people using my code in proprietary applications\n\nI want to build a sustainable community\n\nCopyleft/Reciprocal response: Choose a copyleft or reciprocal license for the protection it offers against proprietary software development. With a copyleft license, any derivative works of your code must also be released under the same license, ensuring that your contributions to the open-source community remain freely available and accessible. This prevents companies from taking advantage of your work and incorporating it into proprietary software without giving back to the community. By choosing a copyleft license, you can safeguard the integrity and sustainability of the open-source ecosystem.\n\nFor copyleft/reciprocal licenses, the OSPO recommends the GPLv2 because it’s widely used and understood, making it easy to find resources and support. A list of additional copyleft/reciprocal licenses with strong community use can be found here at Choose a License.\n\nIf one of these sounds like you, you might choose a permissive license:\n\nI’d like as many people as possible to use my software\n\nI work in open science, and want people to be able to reproduce my research results\n\nI want everyone to be able to use my code with no restrictions\n\nMy project has an outside funder, such as NASA, that requires permissive licensing when no other restrictions exist\n\nI want to build a sustainable community\n\nPermissive licenses: Choose a permissive license to foster wider adoption and collaboration. Permissive licenses do not impose restrictions on derivative works, allowing companies and individuals to incorporate your code into their proprietary projects without requiring them to release their own code under the same license. This broader reach can significantly increase the impact of your work and fuel innovation in the software development community. Additionally, permissive licenses typically simplify the process of sharing and contributing to the code, encouraging more active participation from developers worldwide. By opting for a permissive license, you can democratize access to your code and maximize its potential to benefit the broader software ecosystem.\n\nThe most commonly used permissive licenses are MIT, BSD-3-clause, and Apache-2.0. The Apache-2.0 license has an explicit patent grant, and the MIT and BSD-3-clause licenses do not.\n\nOther use cases:\n\nMy project is related to an existing open source community\n\nExisting community: “If you’re contributing to or extending an existing project, it’s almost always easiest to continue using that project’s license. To find its license, look for a file called LICENSE or COPYING, and skim the project’s README. If you can’t find a license, ask the maintainers. Depending on the original project’s license, using the same license might be a requirement, not just the easiest thing to do. (See the “same license” condition of some licenses.) Some communities have strong preferences for particular licenses. If you want to participate in one of these, it will be easier to use their preferred license, even if you’re starting a brand new project with no existing dependencies.”\n\nChoose a License. “Existing Projects and Communities.” Accessed November 21, 2023. https://choosealicense.com/community/.\n\nMy project is related to technology for which patents have been filed or to technology licensed by JHU to an outside company\n\nPlease contact JHTV (https://ventures.jhu.edu/) to discuss your options. Publishing source code under an open source license can negatively affect the exclusivity to certain intellectual property rights and may breach JHU’s obligations under existing license agreements.\n\nThe information in this FAQ came from a variety of helpful sources, including:\n\nChoose a License. “Choose an Open Source License.” Accessed September 29, 2023. https://choosealicense.com/.\n\n“Disseminating Your Open Work.” Accessed December 7, 2023. https://openr.it/best-practices/disseminating.\n\n“FSF Licensing & Compliance Team — Free Software Foundation — Working Together for Free Software.” Accessed December 7, 2023. https://www.fsf.org/licensing/.\n\nMorin, Andrew, Jennifer Urban, and Piotr Sliz. “A Quick Guide to Software Licensing for the Scientist-Programmer.” PLOS Computational Biology 8, no. 7 (July 26, 2012): e1002598. https://doi.org/10.1371/journal.pcbi.1002598.\n\nOpen Source Initiative. “OSI Approved Licenses,” September 16, 2022. https://opensource.org/licenses/.\n\nSkaife, David. “A Short Guide to Open Source Licenses.” Nationwide Technology (blog), September 16, 2021. https://medium.com/nationwide-technology/a-short-guide-to-open-source-licenses-cf5b1c329edd."
    }
}