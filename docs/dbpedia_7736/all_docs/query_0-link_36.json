{
    "id": "dbpedia_7736_0",
    "rank": 36,
    "data": {
        "url": "https://forums.freebsd.org/threads/linus-torvalds-doesnt-recommend-using-zfs-on-linux.73646/",
        "read_more_link": "",
        "language": "en",
        "title": "Linus Torvalds Doesn't Recommend Using ZFS On Linux",
        "top_image": "https://forums.freebsd.org/styles/freebsd/xenforo/logo.og.png",
        "meta_img": "https://forums.freebsd.org/styles/freebsd/xenforo/logo.og.png",
        "images": [
            "https://forums.freebsd.org/styles/freebsd/xenforo/freebsd_logo.png",
            "https://forums.freebsd.org/styles/default/xenforo/xenforo-logo.png",
            "https://forums.freebsd.org/styles/default/xenforo/add_to_home.gif",
            "https://forums.freebsd.org/data/avatars/m/59/59510.jpg?1588931561",
            "https://forums.freebsd.org/data/avatars/m/15/15934.jpg?1413408002",
            "https://forums.freebsd.org/data/avatars/m/52/52451.jpg?1550787584",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/like-1f44d.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/handshake.png",
            "https://forums.freebsd.org/data/avatars/m/0/761.jpg?1718272270",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/like-1f44d.png",
            "https://forums.freebsd.org/data/avatars/m/45/45325.jpg?1703019696",
            "https://cdn.jsdelivr.net/joypixels/assets/7.0/png/unicode/64/1f606.png",
            "https://forums.freebsd.org/data/avatars/m/45/45325.jpg?1703019696",
            "https://forums.freebsd.org/data/avatars/m/50/50035.jpg?1532557944",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/handshake.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/like-1f44d.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/like-1f44d.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/handshake.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/like-1f44d.png",
            "https://forums.freebsd.org/data/avatars/m/50/50035.jpg?1532557944",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/handshake.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/like-1f44d.png",
            "https://forums.freebsd.org/data/avatars/m/52/52451.jpg?1550787584",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/like-1f44d.png",
            "https://forums.freebsd.org/data/avatars/m/45/45325.jpg?1703019696",
            "https://forums.freebsd.org/data/avatars/m/33/33526.jpg?1432708177",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/handshake.png",
            "https://forums.freebsd.org/data/avatars/m/0/761.jpg?1718272270",
            "https://www.phoronix.com/favicon-32x32.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/handshake.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/like-1f44d.png",
            "https://forums.freebsd.org/data/avatars/m/46/46078.jpg?1489612446",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/like-1f44d.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/handshake.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/handshake.png",
            "https://forums.freebsd.org/styles/default/xenforo/reactions/emojione/handshake.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "malaizhichun",
            "R ralphbsz",
            "M mark_j",
            "rigoletto@ Developer",
            "D drhowarddrfine",
            "C CraigHB",
            "K kpedersen"
        ],
        "publish_date": "2020-01-11T00:12:01+00:00",
        "summary": "",
        "meta_description": "Linux kernel creator Linus Torvalds doesn't recommend using ZFS On Linux at least until Oracle were to re-license the code to make it friendly for mainline...",
        "meta_lang": "en",
        "meta_favicon": "/styles/freebsd/xenforo/logo.og.png",
        "meta_site_name": "The FreeBSD Forums",
        "canonical_link": "https://forums.FreeBSD.org/threads/linus-torvalds-doesnt-recommend-using-zfs-on-linux.73646/",
        "text": "Linux kernel creator Linus Torvalds doesn't recommend using ZFS On Linux at least until Oracle were to re-license the code to make it friendly for mainline inclusion. But even then he doesn't seem turned on by the ZFS features or general performance.\n\nDerailed from the recent mailing list discussion over Torvalds' thoughts on the Linux kernel scheduler, he responded to a post of a user complaining about the Linux kernel recently breaking the out-of-tree ZFS module.\n\nOf course, Linus Torvalds has little control over the behavior of out-of-tree modules and it's always been his position to not maintain a stable driver API/ABI and they won't bend over backwards for closed-source/out-of-tree code. Out-of-tree modules are basically treated like they don't exist.\n\nLinus wrote of ZFS on Linux:\n\nNote that \"we don't break users\" is literally about user-space applications, and about the kernel I maintain.\n\nIf somebody adds a kernel module like ZFS, they are on their own. I can't maintain it, and I can not be bound by other peoples kernel changes.\n\nAnd honestly, there is no way I can merge any of the ZFS efforts until I get an official letter from Oracle that is signed by their main legal counsel or preferably by Larry Ellison himself that says that yes, it's ok to do so and treat the end result as GPL'd.\n\nOther people think it can be ok to merge ZFS code into the kernel and that the module interface makes it ok, and that's their decision. But considering Oracle's litigious nature, and the questions over licensing, there's no way I can feel safe in ever doing so.\n\nAnd I'm not at all interested in some \"ZFS shim layer\" thing either that some people seem to think would isolate the two projects. That adds no value to our side, and given Oracle's interface copyright suits (see Java), I don't think it's any real licensing win either.\n\nDon't use ZFS. It's that simple. It was always more of a buzzword than anything else, I feel, and the licensing issues just make it a non-starter for me.\n\nThe benchmarks I've seen do not make ZFS look all that great. And as far as I can tell, it has no real maintenance behind it either any more, so from a long-term stability standpoint, why would you ever want to use it in the first place?\n\nAs for user end applications GPL is great. For dependencies, and libraries meant for multiple apllications to use, it's terrible. I'm not sure if the license is the cause for bloat, but the tw go together, and maybe encourage it. Certainly, it is misused. When they change their license to incorporate a freer license, it's a terrible showing of that culture, so that reason behind a GPL is really bad.\n\nAs far as I see, a story about Linus and Bill Gates makes me think he's short sighted. Bill gates attempted to rip him off once, and Linus didn't go for it. So, Gates immediately tried again, and how did he not figure out, if he tried to rip him off once, the next attempt would be to rip him of and not be gratuitous. First, Gates offered him maybe 10%, which would have been a ripoff. Then Gates offered him 90%. Linus would get a percentage of zero. Even if one couldn't see what the scam would be, how could you not know if he tried once, he'll try again.\n\nSo for his critiques on anything, you would have to consider he can't think ahead.\n\nThis is Linux, there is a new one started from scratch every week and then abandoned before they finish it --- like BTRFS.\n\nExactly. And while BTRFS (I mean the one that eventually became the default on SUSE) was striving to copy ZFS's features, it never got most of them to work. And then it turned into a machine for creating data loss.\n\nOh, and you forgot to mention BTRFS (there are two with that name!) and BETRFS. Everyone who thinks they can implement a file systems starts doing so. And they all use Linux as the development platform. Now, it would be unfair to claim that this is the \"fault of Linux\", or that there is an evil Linux cabal trying to destroy the universe by creating bad file systems. Don't ascribe to malice what can be explained by incompetence! It's just random people who want to play with file systems, they happen to use Linux, they ship it as freely available software, and suddenly Linux has a lot more file systems.\n\nIn the meantime, we have the very good ext<n> series of file systems (not feature reach, no built-in data protection, but very well engineered, and reliable), and we have good of XFS (written by professional engineers at SGI, instead of drunk college kids), and we have ZFS. All very good file systems, although ZFS does stand out in data protection.\n\nAnd since Linus has never been a working software engineer, and even less the leader of a software engineering organization, nor an expert in storage and file systems, his judgement calls on these topics are simply meaningless. And the people in the Linux ecosystem who make deployment decisions know that, and will ignore his rant. While in the meantime every paranoid and sensationalist drunk kid in the blogosphere will be claiming that the sky is falling, as is happening here on this forum right now.\n\nThis is Linux, there is a new one started from scratch every week and then abandoned before they finish it --- like BTRFS.\n\nI think this is so true.\n\nOver the years of observing (and sometime using) Linux, I have come to these conclusions about the Linux ecosystem:\n\n1) A stable software subsystem (for example, init) is seen as dangerously unmaintained because no bugs have been submitted for it in over a year and is therefore in need of immediate replacement.\n\n2) \"Not Invented Here\" syndrome.\n\n3) If it isn't GPLvN, then they need to make it GPLvN or otherwise they will denigrate it as useless and not Linux compatible.\n\n4) Linux is an incoherent mess with far too many developers wanting to add their own to it. It's bloated and slow (and even Torvalds thinks this!)\n\nDon't get me wrong, I think it has it use cases, but overall I would recommend Windows over Linux.\n\nThe GPL3 seems parasitic as how it seemed to be based to take advantage of a newer BSD license. But the BSD license allows it, and there's no clear way to keep it for some free purposes and not for others. As long as it promotes good code, and isn't blocked by copyright trolls or an organization that tries to retroactively claim that code.\n\nAs for the entire movement, I can't say they're bad, because applications like Audacity, Ardour and Libreoffice which are for unselfish purposes have a GPL license. I've used those programs for what they're meant for.\n\nI wonder if much of the bloat in GPL has to do with the license saying you must give back code, then everyone gives up code, which is a pile on because they feel compelled to do it. But I would say, it's from multiple organizations who want to combo license software to GPL, then they don't bother fixing major problems, because they don't want to give up improvements to a competitor who uses that same licensed program. I also suspect that RedHat and Gnome want things to be complicated on purpose.\n\nThere are cases where for-profit organizations using GPL works well and is unselfish, like Asterisk for instance. In cases where an application has too many uses, then GPL doesn't work well from for profits. GPL and similar licensing also works well for hobbyist applications or for those using applications largely created by an organization that wasn't code just skimmed off of another application with a less restrictive license.\n\nGPL licensed code for widely available hardware not created by that organization? Now that's bad.\n\nExactly. And while BTRFS (I mean the one that eventually became the default on SUSE) was striving to copy ZFS's features, it never got most of them to work. And then it turned into a machine for creating data loss.\n\nOh, and you forgot to mention BTRFS (there are two with that name!) and BETRFS. Everyone who thinks they can implement a file systems starts doing so. And they all use Linux as the development platform. Now, it would be unfair to claim that this is the \"fault of Linux\", or that there is an evil Linux cabal trying to destroy the universe by creating bad file systems. Don't ascribe to malice what can be explained by incompetence! It's just random people who want to play with file systems, they happen to use Linux, they ship it as freely available software, and suddenly Linux has a lot more file systems.\n\nIn the meantime, we have the very good ext<n> series of file systems (not feature reach, no built-in data protection, but very well engineered, and reliable), and we have good of XFS (written by professional engineers at SGI, instead of drunk college kids), and we have ZFS. All very good file systems, although ZFS does stand out in data protection.\n\nAnd since Linus has never been a working software engineer, and even less the leader of a software engineering organization, nor an expert in storage and file systems, his judgement calls on these topics are simply meaningless. And the people in the Linux ecosystem who make deployment decisions know that, and will ignore his rant. While in the meantime every paranoid and sensationalist drunk kid in the blogosphere will be claiming that the sky is falling, as is happening here on this forum right now.\n\nEXT3 was very limited (even in its times) with 2TB file limit.\n\nEXT4 almost killed KDE project because they (KDE) lost almost all of their repositories because of bugs in EXT4 filesystem:\n\nXFS with metadata checksums is least shit in Linux native filesystems world, but XFS still does not provide data consistency like ZFS does.\n\nBTRFS is currently ok in RAID0/RAID1 mode.\n\nThere is also project STRATIS in Red Hat which takes XFS over LVM to 'imitate' ZFS (so pathetic :ASD) and they plan to achieve checksums for data somewhere in the future - like in next 3-5 years of STRATIS development.\n\nSeems that many BSD users are against ZoL being included into future FreeBSD. I also agree that FreeBSD shouldn't include ZoL for the main reason.. Linux communities have proven to be unreliable especially with their own history with BTRFS. They'll will make ZoL much worse and unreliable. FreeBSD ZFS has proven to be very solid and I've been running several servers with ZFS for over 5 years with no data loss. BTRFS can't even do it. I think FreeBSD should maintain their own ZFS apart from ZoL because one day ZoL will be a catastrophic failure waiting to happen.\n\nI totally agree.\n\nScope creep is part of the Linux ethos, it seems. It will soon become so bloated and so cumbersome that it will be down to a niche few developers looking after it. So if Lawrence Livermore National Laboratory suddenly loses interest after years of bloat creation, you're screwed.\n\nI don't know the specifics, but I hope the development of ZFS is done so that FreeBSD (or NetBSD for that matter) can pull in what they want and still have a functioning ZFS."
    }
}