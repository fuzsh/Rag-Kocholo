{
    "id": "dbpedia_7736_0",
    "rank": 21,
    "data": {
        "url": "https://docs.freebsd.org/en/articles/contributing/",
        "read_more_link": "",
        "language": "en",
        "title": "Contributing to FreeBSD",
        "top_image": "https://docs.freebsd.org/favicon.ico",
        "meta_img": "https://docs.freebsd.org/favicon.ico",
        "images": [
            "https://docs.freebsd.org/images/FreeBSD-monochromatic.svg",
            "https://docs.freebsd.org/images/FreeBSD-colors.svg",
            "https://docs.freebsd.org/images/language.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Contributing",
            "FreeBSD",
            "Non-Programmer Tasks",
            "Programmer Tasks"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "How to contribute to the FreeBSD Project",
        "meta_lang": "en",
        "meta_favicon": "https://docs.freebsd.org/favicon.ico",
        "meta_site_name": "FreeBSD Documentation Portal",
        "canonical_link": "https://docs.freebsd.org/en/articles/contributing/",
        "text": "As a volunteer, what you do is limited only by what you want to do. However, we do ask that you are aware of what other members of the FreeBSD community will expect of you. You may want to take this into account before deciding to volunteer.\n\nThe FreeBSD project is responsible for an entire operating system environment, rather than just a kernel or a few scattered utilities. As such, our TODO lists span a very wide range of tasks: from documentation, beta testing and presentation, to the system installer and highly specialized types of kernel development. People of any skill level, in almost any area, can almost certainly help the project.\n\nCommercial entities engaged in FreeBSD-related enterprises are also encouraged to contact us. Do you need a special extension to make your product work? You will find us receptive to your requests, given that they are not too outlandish. Are you working on a value-added product? Please let us know! We may be able to work cooperatively on some aspect of it. The free software world is challenging many existing assumptions about how software is developed, sold, and maintained, and we urge you to at least give it a second look.\n\n1.3. Work through the PR Database\n\nThe FreeBSD PR list shows all the current active problem reports and requests for enhancement that have been submitted by FreeBSD users. The PR database includes both programmer and non-programmer tasks. Look through the open PRs, and see if anything there takes your interest. Some of these might be very simple tasks that just need an extra pair of eyes to look over them and confirm that the fix in the PR is a good one. Others might be much more complex, or might not even have a fix included at all.\n\nStart with the PRs that have not been assigned to anyone else. If a PR is assigned to someone else, but it looks like something you can handle, email the person it is assigned to and ask if you can work on it-they might already have a patch ready to be tested, or further ideas that you can discuss with them.\n\n1.4. Ongoing Ports Tasks\n\nThe Ports Collection is a perpetual work in progress. We want to provide our users with an easy to use, up to date, high quality repository of third party software. We need people to donate some of their time and effort to help us achieve this goal.\n\nAnyone can get involved, and there are lots of different ways to do so. Contributing to ports is an excellent way to help \"give back\" something to the project. Whether you are looking for an ongoing role, or a fun challenge for a rainy day, we would love to have your help!\n\nThere are a number of easy ways you can contribute to keeping the ports tree up to date and in good working order:\n\nFind some cool or useful software and create a port for it.\n\nThere are a large number of ports that have no maintainer. Become a maintainer and Adopting an unmaintained port.\n\nIf you have created or adopted a port, be aware of The challenge for port maintainers.\n\nWhen you are looking for a quick challenge you could Finding and fixing a broken port.\n\n2.1. Bug Reports and General Commentary\n\nAn idea or suggestion of general technical interest should be mailed to the FreeBSD technical discussions mailing list. Likewise, people with an interest in such things (and a tolerance for a high volume of mail!) may subscribe to the FreeBSD technical discussions mailing list. See The FreeBSD Handbook for more information about this and other mailing lists.\n\nIf you are submitting a simple patch to the src repo, please consider submitting it to the projectâs GitHub mirror as a pull request. Suitable submissions should:\n\nIt is ready or nearly ready to be committed. A committer should be able to land this patch with less than 10 minutes of additional work.\n\nIt passes all the GitHub CI jobs.\n\nYou can respond to feedback quickly.\n\nIt touches fewer than about 10 files and the changes are less than about 200 lines. Changes larger than this may be OK, or you may be asked to submit multiple pull requests of a more manageable size.\n\nEach logical change is a separate commit within the pull request. Commit messages for each change should follow commit log guide.\n\nAll commits have your name and valid email address as youâd like to see them in the FreeBSD repository as the author. Fake github.com addresses cannot be used.\n\nThe scope of the pull request should not change during review. If the review suggests changes that expand the scope, please create an independent pull request.\n\nFixup commits should be squashed with the commit they are fixing. Each commit in your branch should be suitable for FreeBSDâs repository.\n\nCommits should include one or more Signed-off-by: lines with full name and email address certifying Developer Certificate of Origin.\n\nWhen updating pull request, please rebase with a forced push rather than a merge commit. More complex changes may be submitted as pull requests, but they may be closed if they are too large, too unwieldy, become inactive, need further discussion in the community, or need extensive revision. Please avoid creating large, wide-ranging cleanup patches: they are too large and lack the focus needed for a good review. Misdirected patches may be redirected to a more appropriate forum for the patch to be resolved.\n\nPull requests submitted to the ports repository may or may not see action, based on the whims of developers. For now, you will have a better experience if you follow the ports submission process Contributing to ports.\n\nThe docs team also accepts pull requests via GitHub, but has not established any policy for them yet.\n\nIf you find a bug or are submitting a specific change, please report it using the bug submission form. Try to fill-in each field of the bug report. Unless they exceed 65KB, include any patches directly in the report. If the patch is suitable to be applied to the source tree put [PATCH] in the synopsis of the report. When including patches, do not use cut-and-paste because cut-and-paste turns tabs into spaces and makes them unusable. When patches are a lot larger than 20KB, consider compressing them (for example with gzip(1) or bzip2(1)) prior to uploading them.\n\nAfter filing a report, you should receive confirmation along with a tracking number. Keep this tracking number so that you can update us with details about the problem.\n\nSee also this article on how to write good problem reports.\n\n2.3. Changes to Existing Source Code\n\nAn addition or change to the existing source code is a somewhat trickier affair and depends a lot on how far out of date you are with the current state of FreeBSD development. There is a special on-going release of FreeBSD known as \"FreeBSD-CURRENT\" which is made available in a variety of ways for the convenience of developers working actively on the system. See The FreeBSD Handbook for more information about getting and using FreeBSD-CURRENT.\n\nWorking from older sources unfortunately means that your changes may sometimes be too obsolete or too divergent for easy re-integration into FreeBSD. Chances of this can be minimized somewhat by subscribing to the FreeBSD announcements mailing list and the FreeBSD-CURRENT mailing list lists, where discussions on the current state of the system take place.\n\nAssuming that you can manage to secure fairly up-to-date sources to base your changes on, the next step is to produce a set of diffs to send to the FreeBSD maintainers. This is done with the diff(1) command.\n\nThe preferred diff(1) format for submitting patches is the unified output format generated by diff -u.\n\n% diff -u oldfile newfile\n\nor\n\n% diff -u -r -N olddir newdir\n\nwould generate a set of unified diffs for the given source file or directory hierarchy.\n\nSee diff(1) for more information.\n\nOnce you have a set of diffs (which you may test with the patch(1) command), you should submit them for inclusion with FreeBSD as a bug report. Do not just send the diffs to the FreeBSD technical discussions mailing list or they will get lost! We greatly appreciate your submission (this is a volunteer project!); because we are busy, we may not be able to address it immediately, but it will remain in the PR database until we do. Indicate your submission by including [PATCH] in the synopsis of the report.\n\nIf you feel it appropriate (for example you have added, deleted, or renamed files), bundle your changes into a tar file. Archives created with shar(1) are also welcome.\n\nIf your change is of a potentially sensitive nature, such as if you are unsure of copyright issues governing its further distribution then you should send it to core@FreeBSD.org directly rather than submitting as a bug report. The core@FreeBSD.org reaches a much smaller group of people who do much of the day-to-day work on FreeBSD. Note that this group is also very busy and so you should only send mail to them where it is truly necessary.\n\nPlease refer to intro(9) and style(9) for some information on coding style. We would appreciate it if you were at least aware of this information before submitting code.\n\n3.3. Finding and fixing a broken port\n\nThere are some really good places to find a port that needs some attention.\n\nYou can use the web interface to the Problem Report database to search through and view unresolved PRs. The majority of ports PRs are updates, but with a little searching and skimming over synopses you should be able to find something interesting to work on.\n\nPortsFallout shows port issues gathered from the FreeBSD package building.\n\nIt is OK to send changes for a maintained port as well, but remember to ask the maintainer in case they are already working on the problem.\n\nOnce you have found a bug or problem, collect information, investigate and fix! If there is an existing PR, follow up to that. Otherwise create a new PR. Your changes will be reviewed and, if everything checks out, committed.\n\n3.4. When to call it quits\n\nAs your interests and commitments change, you may find that you no longer have time to continue some (or all) of your ports contributions. That is fine! Please let us know if you are no longer using a port or have otherwise lost time or interest in being a maintainer. In this way we can go ahead and allow other people to try to work on existing problems with the port without waiting for your response. Remember, FreeBSD is a volunteer project, so if maintaining a port is no fun any more, it is probably time to let someone else do it!\n\nIn any case, the Ports Management Team (portmgr) reserves the right to reset your maintainership if you have not actively maintained your port in some time. (Currently, this is set to 3 months.) By this, we mean that there are unresolved problems or pending updates that have not been worked on during that time.\n\n3.5. Resources for ports maintainers and contributors\n\nThe Porterâs Handbook is your hitchhikerâs guide to the ports system. Keep it handy!\n\nWriting FreeBSD Problem Reports describes how to best formulate and submit a PR. In 2005 more than eleven thousand ports PRs were submitted! Following this article will greatly assist us in reducing the time needed to handle your PRs.\n\nThe Problem Report database.\n\nThe FreeBSD Ports distfile scanner (portscout) can show you ports for which the distfiles are not fetchable. You can check on your own ports or use it to find ports that need their MASTER_SITES updated.\n\nports-mgmt/poudriere is the most thorough way to test a port through the entire cycle of installation, packaging, and deinstallation. Documentation is located at the poudriere GitHub repository\n\nportlint(1) is an application which can be used to verify that your port conforms to many important stylistic and functional guidelines. portlint is a simple heuristic application, so you should use it only as a guide. If portlint suggests changes which seem unreasonable, consult the Porterâs Handbook or ask for advice.\n\nThe FreeBSD ports mailing list is for general ports-related discussion. It is a good place to ask for help. You can subscribe, or read and search the list archives. Reading the archives of the FreeBSD ports bugs mailing list and the SVN commit messages for the ports tree for head/ may also be of interest.\n\nPortsFallout is a place to help in searching for the FreeBSD package-fallout archive."
    }
}