{
    "id": "wrong_mix_random_publicationDate_00076_3",
    "rank": 60,
    "data": {
        "url": "http://blog.itvce.com/2012/09/16/netscaler-ssl-offload-overview-and-sample-configuration/",
        "read_more_link": "",
        "language": "en",
        "title": "NetScaler SSL Offload – Overview and Sample Configuration",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://blog.itvce.com/wp-content/uploads/2012/03/weblogo_v2.png",
            "http://blog.itvce.com/wp-content/uploads/2012/Social/youtube.png",
            "http://blog.itvce.com/wp-content/uploads/2012/Social/rss.png",
            "http://static.hupso.com/share/buttons/share-medium.png",
            "http://blog.itvce.com/wp-content/uploads/2012/09/SSL-Offload-300x89.jpg",
            "http://blog.itvce.com/wp-content/uploads/2012/09/1_AddSvr-300x198.png",
            "http://blog.itvce.com/wp-content/uploads/2012/09/2_AddSvc-300x149.png",
            "http://blog.itvce.com/wp-content/uploads/2012/09/3_SSLvs-300x131.png",
            "http://blog.itvce.com/wp-content/uploads/2012/09/4_SSLcert-300x122.png",
            "http://blog.itvce.com/wp-content/uploads/2012/09/5_SSLVSdown-300x35.png",
            "http://blog.itvce.com/wp-content/uploads/2012/09/6_SSLfeature.png",
            "http://blog.itvce.com/wp-content/uploads/2012/09/7_SSLdisabledCLI-300x96.png",
            "http://blog.itvce.com/wp-content/uploads/2012/09/8_EnableSSL.png",
            "http://blog.itvce.com/wp-content/uploads/2012/09/9_SSLVSup-300x16.png",
            "http://static.hupso.com/share/buttons/share-medium.png",
            "http://blog.itvce.com/wp-content/themes/infocus/lib/scripts/timthumb/thumb.php?src=http://blog.itvce.com/wp-content/themes/infocus/images/assets/post_thumb.png&w=122&h=75&zc=1&q=100",
            "http://blog.itvce.com/wp-content/themes/infocus/lib/scripts/timthumb/thumb.php?src=http://blog.itvce.com/wp-content/themes/infocus/images/assets/post_thumb.png&w=122&h=75&zc=1&q=100",
            "http://blog.itvce.com/wp-content/themes/infocus/lib/scripts/timthumb/thumb.php?src=http://blog.itvce.com/wp-content/themes/infocus/images/assets/post_thumb.png&w=122&h=75&zc=1&q=100",
            "http://blog.itvce.com/wp-content/themes/infocus/lib/scripts/timthumb/thumb.php?src=http://blog.itvce.com/wp-content/themes/infocus/images/assets/post_thumb.png&w=122&h=75&zc=1&q=100",
            "http://blog.itvce.com/wp-content/themes/infocus/lib/scripts/timthumb/thumb.php?src=http://blog.itvce.com/wp-content/themes/infocus/images/assets/post_thumb.png&w=122&h=75&zc=1&q=100",
            "http://blog.itvce.com/wp-content/themes/infocus/lib/scripts/timthumb/thumb.php?src=http://blog.itvce.com/wp-content/themes/infocus/images/assets/post_thumb.png&w=122&h=75&zc=1&q=100",
            "http://blog.itvce.com/wp-content/themes/infocus/lib/scripts/timthumb/thumb.php?src=http://blog.itvce.com/wp-content/themes/infocus/images/assets/post_thumb.png&w=122&h=75&zc=1&q=100",
            "http://blog.itvce.com/wp-content/themes/infocus/lib/scripts/timthumb/thumb.php?src=http://blog.itvce.com/wp-content/themes/infocus/images/assets/post_thumb.png&w=122&h=75&zc=1&q=100",
            "http://1.gravatar.com/avatar/4c300f2df527aceec0bd396e4c812fed?s=60&d=http%3A%2F%2Fblog.itvce.com%2Fwp-content%2Fthemes%2Finfocus%2Fimages%2Fassets%2Fgravatar_default.png&r=g",
            "http://1.gravatar.com/avatar/a797caaae2ec132d61ae4eaece800e3b?s=60&d=http%3A%2F%2Fblog.itvce.com%2Fwp-content%2Fthemes%2Finfocus%2Fimages%2Fassets%2Fgravatar_default.png&r=g",
            "http://2.gravatar.com/avatar/e4b1fe5ef0fa3d971d9f0d1fa2c69f82?s=60&d=http%3A%2F%2Fblog.itvce.com%2Fwp-content%2Fthemes%2Finfocus%2Fimages%2Fassets%2Fgravatar_default.png&r=g",
            "http://blog.itvce.com/wp-content/plugins/collapsing-categories/img/expand.gif",
            "http://blog.itvce.com/wp-content/plugins/collapsing-categories/img/expand.gif",
            "http://blog.itvce.com/wp-content/plugins/collapsing-categories/img/collapse.gif",
            "http://blog.itvce.com/wp-content/plugins/collapsing-categories/img/expand.gif",
            "http://blog.itvce.com/wp-content/plugins/collapsing-categories/img/expand.gif",
            "http://blog.itvce.com/wp-content/plugins/collapsing-categories/img/expand.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "access gateway",
            "cag",
            "citrix",
            "load balancing",
            "netscaler",
            "virtualization",
            "web interface",
            "web servers"
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2012-09-16T00:00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "http://blog.itvce.com/2012/09/16/netscaler-ssl-offload-overview-and-sample-configuration/",
        "text": "One excellent feature of Citrix NetScaler that is often overlooked is SSL Offload. This is especially prevalent in the MPX series appliances, as they all include a Cavium SSL accelerator card, this card has the ability to handle SSL encryption/decryption cycles using a hardware card, rather than consuming valuable CPU resources. The VPX can have the SSL offload feature enabled also, however as there is no Cavium card, the SSL offload performance is not as high as an MPX appliance.\n\nSSL encryption/decryption is a very CPU intensive task; as such it can severely impact the scalability of servers that host content requiring SSL encryption. NetScaler can help this by essentially moving all of the encryption/decryption tasks from the back end servers to the NetScaler itself, freeing valuable CPU resource on the backend servers.\n\nHere are some real world examples of how this is used:\n\nMicrosoft Outlook Web Access/Client Access\n\nSSL based websites (no payment information exchanged*)\n\nInspection of SSL traffic and switching based on content\n\n*When payment information is exchanged, it is usually mandated that the data cannot be viewed in transit, this is a requirement of PCI-DSS compliance. The NetScaler can instead use SSL-Bridge for these types of transactions, more on that to follow in an upcoming post.\n\nThe Concept\n\nSSL offload is designed to function in a similar manner to the below image:\n\nIn essence all encryption/decryption between the client and server is handled by the NetScaler SSL offload vServer. Once the data has been decrypted it is then sent on the destination service in plain text HTTP.\n\nConfiguring\n\nThis configuration assumes that an SSL certificate already exists on the NetScaler for the chosen FQDN. The SSL Certificate is named “SSLapp”.\n\nStep 1 – Create a back-end HTTP service\n\nThe first step in creating a new service is to create a server object, This is achieved by using “SSL Offload -> Servers” and then select “add”. The resulting item is purely an object that the NetScaler references in further configuration options. The name field does not need to match the hostname of the server, but it is recommended. In this example the webserver is named WinSvr01 and has an IP address of 10.99.0.5\n\nNow that a server object exists, you can create a service object to reflect the HTTP service that is running on this web server.\n\nA NetScaler service consists of a server object (created in the previous step), a protocol, port and a monitor. The monitor is used to determine if the service is available, in the event that the service is unavailable the NetScaler will mark the service as down, removing it from load balancing decisions.\n\nIn this example we are running a HTTP service (using default of port 80) on the previously created server object, whilst using a standard HTTP monitor to confirm that HTTP services are responding with a response code of “200” – this is HTTP for “ok”.\n\nStep 2 – Create a vServer\n\nNow that a service exists, you are ready to present the service to the outside world. This is achieved using a NetScaler virtual server (vServer). The first step is to create the object and provide the following information:\n\nName\n\nIP Address\n\nPort\n\nBound services\n\nIn this example we only have a single service to bind to the vServer, however in a production installation there may be 20 backend webservers all delivering the content, if this was the case these could be added in to a service group and then bound to the vServer, load balancing would then be used to ensure that the load is distributed to services that are UP and are able to service the client’s request.\n\nThe IP address that is added to the vServer here will be used by clients to connect to the backend services:\n\nA certificate must also be bound to the vServer, this is the certificate that the vServer will present for client connections.\n\nClient connections should now be directed to the vServer’s IP address – 10.99.0.231. The vServer will present the SSL certificate when a connection is made using HTTPS (TCP 443), any encryption/decryption of data will be processed using the NetScaler’s built in Cavium card.\n\nIf the NetScaler is configured as a HA pair and the primary unit’s Cavium card fails, then HA failover will be invoked and the secondary unit will become the primary.\n\nNetScaler 10 Build 69.4 bug\n\nThe GUI appears to incorrectly report the status of a feature, offering only the “disable” option for each feature. I have seen scenarios whereby the above configuration has been completed and the vServer immediately appears down, even though everything appears correctly configured.\n\nThe first thought is that SSL may not be enabled; checking in the GUI will only show you the option to disable the feature:\n\nTo view the reason that the vServer is down you can simply connect using SSH and then issue the following command:\n\nAs you can see in the above screenshot the SSL feature is disabled, causing the vServer to appear down. Enable the SSL feature using the following command:\n\nThe vServer will immediately come online:"
    }
}