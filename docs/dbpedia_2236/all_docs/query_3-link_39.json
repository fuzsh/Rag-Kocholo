{
    "id": "dbpedia_2236_3",
    "rank": 39,
    "data": {
        "url": "https://github.com/copasi/COPASI/blob/develop/COPASI.doxyfile",
        "read_more_link": "",
        "language": "en",
        "title": "COPASI/COPASI.doxyfile at develop · copasi/COPASI",
        "top_image": "https://opengraph.githubassets.com/89d8ba0f62e6253954eaa444b7315c4c1a4ecee7df0c459f7ed2373b7765966d/copasi/COPASI",
        "meta_img": "https://opengraph.githubassets.com/89d8ba0f62e6253954eaa444b7315c4c1a4ecee7df0c459f7ed2373b7765966d/copasi/COPASI",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "COPASI is a software application for simulation and analysis of biochemical networks and their dynamics. - COPASI/COPASI.doxyfile at develop · copasi/COPASI",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/copasi/COPASI/blob/develop/COPASI.doxyfile",
        "text": "# Doxyfile 1.8.14\n\n# This file describes the settings to be used by the documentation system\n\n# doxygen (www.doxygen.org) for a project.\n\n#\n\n# All text after a double hash (##) is considered a comment and is placed in\n\n# front of the TAG it is preceding.\n\n#\n\n# All text after a single hash (#) is considered a comment and will be ignored.\n\n# The format is:\n\n# TAG = value [value, ...]\n\n# For lists, items can also be appended using:\n\n# TAG += value [value, ...]\n\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n\n# Project related configuration options\n\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n\n# that follow. The default is UTF-8 which is also the encoding used for all text\n\n# before the first occurrence of this tag. Doxygen uses libiconv (or the iconv\n\n# built into libc) for the transcoding. See\n\n# https://www.gnu.org/software/libiconv/ for the list of possible encodings.\n\n# The default value is: UTF-8.\n\nDOXYFILE_ENCODING = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by\n\n# double-quotes, unless you are using Doxywizard) that should identify the\n\n# project for which the documentation is generated. This name is used in the\n\n# title of most generated pages and in a few other places.\n\n# The default value is: My Project.\n\nPROJECT_NAME = \"COPASI API\"\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n\n# could be handy for archiving the generated documentation or if some version\n\n# control system is used.\n\nPROJECT_NUMBER = $(PROJECT_NUMBER)\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n\n# for a project that appears at the top of each page and should give viewer a\n\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF =\n\n# With the PROJECT_LOGO tag one can specify a logo or an icon that is included\n\n# in the documentation. The maximum height of the logo should not exceed 55\n\n# pixels and the maximum width should not exceed 200 pixels. Doxygen will copy\n\n# the logo to the output directory.\n\nPROJECT_LOGO =\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n\n# into which the generated documentation will be written. If a relative path is\n\n# entered, it will be relative to the location where doxygen was started. If\n\n# left blank the current directory will be used.\n\nOUTPUT_DIRECTORY = ./doc\n\n# If the CREATE_SUBDIRS tag is set to YES then doxygen will create 4096 sub-\n\n# directories (in 2 levels) under the output directory of each output format and\n\n# will distribute the generated files over these directories. Enabling this\n\n# option can be useful when feeding doxygen a huge amount of source files, where\n\n# putting all generated files in the same directory would otherwise causes\n\n# performance problems for the file system.\n\n# The default value is: NO.\n\nCREATE_SUBDIRS = YES\n\n# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII\n\n# characters to appear in the names of generated files. If set to NO, non-ASCII\n\n# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode\n\n# U+3044.\n\n# The default value is: NO.\n\nALLOW_UNICODE_NAMES = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n\n# documentation generated by doxygen is written. Doxygen will use this\n\n# information to generate all constant output in the proper language.\n\n# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,\n\n# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),\n\n# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,\n\n# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),\n\n# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,\n\n# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,\n\n# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,\n\n# Ukrainian and Vietnamese.\n\n# The default value is: English.\n\nOUTPUT_LANGUAGE = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES, doxygen will include brief member\n\n# descriptions after the members that are listed in the file and class\n\n# documentation (similar to Javadoc). Set to NO to disable this.\n\n# The default value is: YES.\n\nBRIEF_MEMBER_DESC = YES\n\n# If the REPEAT_BRIEF tag is set to YES, doxygen will prepend the brief\n\n# description of a member or function before the detailed description\n\n#\n\n# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n\n# brief descriptions will be completely suppressed.\n\n# The default value is: YES.\n\nREPEAT_BRIEF = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator that is\n\n# used to form the text in various listings. Each string in this list, if found\n\n# as the leading text of the brief description, will be stripped from the text\n\n# and the result, after processing the whole list, is used as the annotated\n\n# text. Otherwise, the brief description is used as-is. If left blank, the\n\n# following values are used ($name is automatically replaced with the name of\n\n# the entity):The $name class, The $name widget, The $name file, is, provides,\n\n# specifies, contains, represents, a, an and the.\n\nABBREVIATE_BRIEF =\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n\n# doxygen will generate a detailed section even if there is only a brief\n\n# description.\n\n# The default value is: NO.\n\nALWAYS_DETAILED_SEC = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n\n# inherited members of a class in the documentation of that class as if those\n\n# members were ordinary class members. Constructors, destructors and assignment\n\n# operators of the base classes will not be shown.\n\n# The default value is: NO.\n\nINLINE_INHERITED_MEMB = NO\n\n# If the FULL_PATH_NAMES tag is set to YES, doxygen will prepend the full path\n\n# before files name in the file list and in the header files. If set to NO the\n\n# shortest path that makes the file name unique will be used\n\n# The default value is: YES.\n\nFULL_PATH_NAMES = NO\n\n# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.\n\n# Stripping is only done if one of the specified strings matches the left-hand\n\n# part of the path. The tag can be used to show relative paths in the file list.\n\n# If left blank the directory from which doxygen is run is used as the path to\n\n# strip.\n\n#\n\n# Note that you can specify absolute paths here, but also relative paths, which\n\n# will be relative from the directory where doxygen is started.\n\n# This tag requires that the tag FULL_PATH_NAMES is set to YES.\n\nSTRIP_FROM_PATH =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the\n\n# path mentioned in the documentation of a class, which tells the reader which\n\n# header file to include in order to use a class. If left blank only the name of\n\n# the header file containing the class definition is used. Otherwise one should\n\n# specify the list of include paths that are normally passed to the compiler\n\n# using the -I flag.\n\nSTRIP_FROM_INC_PATH =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but\n\n# less readable) file names. This can be useful is your file systems doesn't\n\n# support long names like on DOS, Mac, or CD-ROM.\n\n# The default value is: NO.\n\nSHORT_NAMES = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the\n\n# first line (until the first dot) of a Javadoc-style comment as the brief\n\n# description. If set to NO, the Javadoc-style will behave just like regular Qt-\n\n# style comments (thus requiring an explicit @brief command for a brief\n\n# description.)\n\n# The default value is: NO.\n\nJAVADOC_AUTOBRIEF = NO\n\n# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first\n\n# line (until the first dot) of a Qt-style comment as the brief description. If\n\n# set to NO, the Qt-style will behave just like regular Qt-style comments (thus\n\n# requiring an explicit \\brief command for a brief description.)\n\n# The default value is: NO.\n\nQT_AUTOBRIEF = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a\n\n# multi-line C++ special comment block (i.e. a block of //! or /// comments) as\n\n# a brief description. This used to be the default behavior. The new default is\n\n# to treat a multi-line C++ comment block as a detailed description. Set this\n\n# tag to YES if you prefer the old behavior instead.\n\n#\n\n# Note that setting this tag to YES also means that rational rose comments are\n\n# not recognized any more.\n\n# The default value is: NO.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the\n\n# documentation from any documented member that it re-implements.\n\n# The default value is: YES.\n\nINHERIT_DOCS = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES then doxygen will produce a new\n\n# page for each member. If set to NO, the documentation of a member will be part\n\n# of the file/class/namespace that contains it.\n\n# The default value is: NO.\n\nSEPARATE_MEMBER_PAGES = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen\n\n# uses this value to replace tabs by spaces in code fragments.\n\n# Minimum value: 1, maximum value: 16, default value: 4.\n\nTAB_SIZE = 2\n\n# This tag can be used to specify a number of aliases that act as commands in\n\n# the documentation. An alias has the form:\n\n# name=value\n\n# For example adding\n\n# \"sideeffect=@par Side Effects:\\n\"\n\n# will allow you to put the command \\sideeffect (or @sideeffect) in the\n\n# documentation, which will result in a user-defined paragraph with heading\n\n# \"Side Effects:\". You can put \\n's in the value part of an alias to insert\n\n# newlines (in the resulting output). You can put ^^ in the value part of an\n\n# alias to insert a newline as if a physical newline was in the original file.\n\nALIASES =\n\n# This tag can be used to specify a number of word-keyword mappings (TCL only).\n\n# A mapping has the form \"name=value\". For example adding \"class=itcl::class\"\n\n# will allow you to use the command class in the itcl::class meaning.\n\nTCL_SUBST =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n\n# only. Doxygen will then generate output that is more tailored for C. For\n\n# instance, some of the names that are used will be different. The list of all\n\n# members will be omitted, etc.\n\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_FOR_C = NO\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or\n\n# Python sources only. Doxygen will then generate output that is more tailored\n\n# for that language. For instance, namespaces will be presented as packages,\n\n# qualified scopes will look different, etc.\n\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_JAVA = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n\n# sources. Doxygen will then generate output that is tailored for Fortran.\n\n# The default value is: NO.\n\nOPTIMIZE_FOR_FORTRAN = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n\n# sources. Doxygen will then generate output that is tailored for VHDL.\n\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_VHDL = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it\n\n# parses. With this tag you can assign which parser to use for a given\n\n# extension. Doxygen has a built-in mapping, but you can override or extend it\n\n# using this tag. The format is ext=language, where ext is a file extension, and\n\n# language is one of the parsers supported by doxygen: IDL, Java, Javascript,\n\n# C#, C, C++, D, PHP, Objective-C, Python, Fortran (fixed format Fortran:\n\n# FortranFixed, free formatted Fortran: FortranFree, unknown formatted Fortran:\n\n# Fortran. In the later case the parser tries to guess whether the code is fixed\n\n# or free formatted code, this is the default for Fortran type files), VHDL. For\n\n# instance to make doxygen treat .inc files as Fortran files (default is PHP),\n\n# and .f files as C (default is Fortran), use: inc=Fortran f=C.\n\n#\n\n# Note: For files without extension you can use no_extension as a placeholder.\n\n#\n\n# Note that for custom extensions you also need to set FILE_PATTERNS otherwise\n\n# the files are not read by doxygen.\n\nEXTENSION_MAPPING =\n\n# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n\n# according to the Markdown format, which allows for more readable\n\n# documentation. See http://daringfireball.net/projects/markdown/ for details.\n\n# The output of markdown processing is further processed by doxygen, so you can\n\n# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in\n\n# case of backward compatibilities issues.\n\n# The default value is: YES.\n\nMARKDOWN_SUPPORT = YES\n\n# When the TOC_INCLUDE_HEADINGS tag is set to a non-zero value, all headings up\n\n# to that level are automatically included in the table of contents, even if\n\n# they do not have an id attribute.\n\n# Note: This feature currently applies only to Markdown headings.\n\n# Minimum value: 0, maximum value: 99, default value: 0.\n\n# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.\n\nTOC_INCLUDE_HEADINGS = 0\n\n# When enabled doxygen tries to link words that correspond to documented\n\n# classes, or namespaces to their corresponding documentation. Such a link can\n\n# be prevented in individual cases by putting a % sign in front of the word or\n\n# globally by setting AUTOLINK_SUPPORT to NO.\n\n# The default value is: YES.\n\nAUTOLINK_SUPPORT = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n\n# to include (a tag file for) the STL sources as input, then you should set this\n\n# tag to YES in order to let doxygen match functions declarations and\n\n# definitions whose arguments contain STL classes (e.g. func(std::string);\n\n# versus func(std::string) {}). This also make the inheritance and collaboration\n\n# diagrams that involve STL classes more complete and accurate.\n\n# The default value is: NO.\n\nBUILTIN_STL_SUPPORT = YES\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n\n# enable parsing support.\n\n# The default value is: NO.\n\nCPP_CLI_SUPPORT = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:\n\n# https://www.riverbankcomputing.com/software/sip/intro) sources only. Doxygen\n\n# will parse them like normal C++ but will assume all classes use public instead\n\n# of private inheritance when no explicit protection keyword is present.\n\n# The default value is: NO.\n\nSIP_SUPPORT = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n\n# getter and setter methods for a property. Setting this option to YES will make\n\n# doxygen to replace the get and set methods by a property in the documentation.\n\n# This will only work if the methods are indeed getting or setting a simple\n\n# type. If this is not the case, or you want to show the methods anyway, you\n\n# should set this option to NO.\n\n# The default value is: YES.\n\nIDL_PROPERTY_SUPPORT = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n\n# tag is set to YES then doxygen will reuse the documentation of the first\n\n# member in the group (if any) for the other members of the group. By default\n\n# all members of a group must be documented explicitly.\n\n# The default value is: NO.\n\nDISTRIBUTE_GROUP_DOC = NO\n\n# If one adds a struct or class to a group and this option is enabled, then also\n\n# any nested class or struct is added to the same group. By default this option\n\n# is disabled and one has to add nested compounds explicitly via \\ingroup.\n\n# The default value is: NO.\n\nGROUP_NESTED_COMPOUNDS = NO\n\n# Set the SUBGROUPING tag to YES to allow class member groups of the same type\n\n# (for instance a group of public functions) to be put as a subgroup of that\n\n# type (e.g. under the Public Functions section). Set it to NO to prevent\n\n# subgrouping. Alternatively, this can be done per class using the\n\n# \\nosubgrouping command.\n\n# The default value is: YES.\n\nSUBGROUPING = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions\n\n# are shown inside the group in which they are included (e.g. using \\ingroup)\n\n# instead of on a separate page (for HTML and Man pages) or section (for LaTeX\n\n# and RTF).\n\n#\n\n# Note that this feature does not work in combination with\n\n# SEPARATE_MEMBER_PAGES.\n\n# The default value is: NO.\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions\n\n# with only public data fields or simple typedef fields will be shown inline in\n\n# the documentation of the scope in which they are defined (i.e. file,\n\n# namespace, or group documentation), provided this scope is documented. If set\n\n# to NO, structs, classes, and unions are shown on a separate page (for HTML and\n\n# Man pages) or section (for LaTeX and RTF).\n\n# The default value is: NO.\n\nINLINE_SIMPLE_STRUCTS = NO\n\n# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or\n\n# enum is documented as struct, union, or enum with the name of the typedef. So\n\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n\n# namespace, or class. And the struct will be named TypeS. This can typically be\n\n# useful for C code in case the coding convention dictates that all compound\n\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n\n# The default value is: NO.\n\nTYPEDEF_HIDES_STRUCT = NO\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n\n# cache is used to resolve symbols given their name and scope. Since this can be\n\n# an expensive process and often the same symbol appears multiple times in the\n\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n\n# the optimal cache size from a speed point of view.\n\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE = 1\n\n#---------------------------------------------------------------------------\n\n# Build related configuration options\n\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES, doxygen will assume all entities in\n\n# documentation are documented, even if no documentation was available. Private\n\n# class members and static file members will be hidden unless the\n\n# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.\n\n# Note: This will also disable the warnings about undocumented members that are\n\n# normally produced when WARNINGS is set to YES.\n\n# The default value is: NO.\n\nEXTRACT_ALL = YES\n\n# If the EXTRACT_PRIVATE tag is set to YES, all private members of a class will\n\n# be included in the documentation.\n\n# The default value is: NO.\n\nEXTRACT_PRIVATE = YES\n\n# If the EXTRACT_PACKAGE tag is set to YES, all members with package or internal\n\n# scope will be included in the documentation.\n\n# The default value is: NO.\n\nEXTRACT_PACKAGE = NO\n\n# If the EXTRACT_STATIC tag is set to YES, all static members of a file will be\n\n# included in the documentation.\n\n# The default value is: NO.\n\nEXTRACT_STATIC = NO\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES, classes (and structs) defined\n\n# locally in source files will be included in the documentation. If set to NO,\n\n# only classes defined in header files are included. Does not have any effect\n\n# for Java sources.\n\n# The default value is: YES.\n\nEXTRACT_LOCAL_CLASSES = YES\n\n# This flag is only useful for Objective-C code. If set to YES, local methods,\n\n# which are defined in the implementation section but not in the interface are\n\n# included in the documentation. If set to NO, only methods in the interface are\n\n# included.\n\n# The default value is: NO.\n\nEXTRACT_LOCAL_METHODS = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n\n# extracted and appear in the documentation as a namespace called\n\n# 'anonymous_namespace{file}', where file will be replaced with the base name of\n\n# the file that contains the anonymous namespace. By default anonymous namespace\n\n# are hidden.\n\n# The default value is: NO.\n\nEXTRACT_ANON_NSPACES = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all\n\n# undocumented members inside documented classes or files. If set to NO these\n\n# members will be included in the various overviews, but no documentation\n\n# section is generated. This option has no effect if EXTRACT_ALL is enabled.\n\n# The default value is: NO.\n\nHIDE_UNDOC_MEMBERS = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all\n\n# undocumented classes that are normally visible in the class hierarchy. If set\n\n# to NO, these classes will be included in the various overviews. This option\n\n# has no effect if EXTRACT_ALL is enabled.\n\n# The default value is: NO.\n\nHIDE_UNDOC_CLASSES = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend\n\n# (class|struct|union) declarations. If set to NO, these declarations will be\n\n# included in the documentation.\n\n# The default value is: NO.\n\nHIDE_FRIEND_COMPOUNDS = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any\n\n# documentation blocks found inside the body of a function. If set to NO, these\n\n# blocks will be appended to the function's detailed documentation block.\n\n# The default value is: NO.\n\nHIDE_IN_BODY_DOCS = NO\n\n# The INTERNAL_DOCS tag determines if documentation that is typed after a\n\n# \\internal command is included. If the tag is set to NO then the documentation\n\n# will be excluded. Set it to YES to include the internal documentation.\n\n# The default value is: NO.\n\nINTERNAL_DOCS = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then doxygen will only generate file\n\n# names in lower-case letters. If set to YES, upper-case letters are also\n\n# allowed. This is useful if you have classes or files whose names only differ\n\n# in case and if your file system supports case sensitive file names. Windows\n\n# and Mac users are advised to set this option to NO.\n\n# The default value is: system dependent.\n\nCASE_SENSE_NAMES = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with\n\n# their full class and namespace scopes in the documentation. If set to YES, the\n\n# scope will be hidden.\n\n# The default value is: NO.\n\nHIDE_SCOPE_NAMES = NO\n\n# If the HIDE_COMPOUND_REFERENCE tag is set to NO (default) then doxygen will\n\n# append additional text to a page's title, such as Class Reference. If set to\n\n# YES the compound reference will be hidden.\n\n# The default value is: NO.\n\nHIDE_COMPOUND_REFERENCE= NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of\n\n# the files that are included by a file in the documentation of that file.\n\n# The default value is: YES.\n\nSHOW_INCLUDE_FILES = YES\n\n# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each\n\n# grouped member an include statement to the documentation, telling the reader\n\n# which file to include in order to use the member.\n\n# The default value is: NO.\n\nSHOW_GROUPED_MEMB_INC = NO\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include\n\n# files with double quotes in the documentation rather than with sharp brackets.\n\n# The default value is: NO.\n\nFORCE_LOCAL_INCLUDES = NO\n\n# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the\n\n# documentation for inline members.\n\n# The default value is: YES.\n\nINLINE_INFO = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n\n# (detailed) documentation of file and class members alphabetically by member\n\n# name. If set to NO, the members will appear in declaration order.\n\n# The default value is: YES.\n\nSORT_MEMBER_DOCS = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n\n# descriptions of file, namespace and class members alphabetically by member\n\n# name. If set to NO, the members will appear in declaration order. Note that\n\n# this will also influence the order of the classes in the class list.\n\n# The default value is: NO.\n\nSORT_BRIEF_DOCS = YES\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n\n# (brief and detailed) documentation of class members so that constructors and\n\n# destructors are listed first. If set to NO the constructors will appear in the\n\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n\n# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief\n\n# member documentation.\n\n# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting\n\n# detailed member documentation.\n\n# The default value is: NO.\n\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n\n# of group names into alphabetical order. If set to NO the group names will\n\n# appear in their defined order.\n\n# The default value is: NO.\n\nSORT_GROUP_NAMES = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by\n\n# fully-qualified names, including namespaces. If set to NO, the class list will\n\n# be sorted only by class name, not including the namespace part.\n\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n\n# Note: This option applies only to the class list, not to the alphabetical\n\n# list.\n\n# The default value is: NO.\n\nSORT_BY_SCOPE_NAME = NO\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper\n\n# type resolution of all parameters of a function it will reject a match between\n\n# the prototype and the implementation of a member function even if there is\n\n# only one candidate or it is obvious which candidate to choose by doing a\n\n# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still\n\n# accept a match between prototype and implementation in such cases.\n\n# The default value is: NO.\n\nSTRICT_PROTO_MATCHING = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the todo\n\n# list. This list is created by putting \\todo commands in the documentation.\n\n# The default value is: YES.\n\nGENERATE_TODOLIST = NO\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the test\n\n# list. This list is created by putting \\test commands in the documentation.\n\n# The default value is: YES.\n\nGENERATE_TESTLIST = NO\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the bug\n\n# list. This list is created by putting \\bug commands in the documentation.\n\n# The default value is: YES.\n\nGENERATE_BUGLIST = NO\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or disable (NO)\n\n# the deprecated list. This list is created by putting \\deprecated commands in\n\n# the documentation.\n\n# The default value is: YES.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional documentation\n\n# sections, marked by \\if <section_label> ... \\endif and \\cond <section_label>\n\n# ... \\endcond blocks.\n\nENABLED_SECTIONS =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the\n\n# initial value of a variable or macro / define can have for it to appear in the\n\n# documentation. If the initializer consists of more lines than specified here\n\n# it will be hidden. Use a value of 0 to hide initializers completely. The\n\n# appearance of the value of individual variables and macros / defines can be\n\n# controlled using \\showinitializer or \\hideinitializer command in the\n\n# documentation regardless of this setting.\n\n# Minimum value: 0, maximum value: 10000, default value: 30.\n\nMAX_INITIALIZER_LINES = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n\n# the bottom of the documentation of classes and structs. If set to YES, the\n\n# list will mention the files that were used to generate the documentation.\n\n# The default value is: YES.\n\nSHOW_USED_FILES = YES\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This\n\n# will remove the Files entry from the Quick Index and from the Folder Tree View\n\n# (if specified).\n\n# The default value is: YES.\n\nSHOW_FILES = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces\n\n# page. This will remove the Namespaces entry from the Quick Index and from the\n\n# Folder Tree View (if specified).\n\n# The default value is: YES.\n\nSHOW_NAMESPACES = NO\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n\n# doxygen should invoke to get the current version for each file (typically from\n\n# the version control system). Doxygen will invoke the program by executing (via\n\n# popen()) the command command input-file, where command is the value of the\n\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n\n# by doxygen. Whatever the program writes to standard output is used as the file\n\n# version. For an example see the documentation.\n\nFILE_VERSION_FILTER =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n\n# by doxygen. The layout file controls the global structure of the generated\n\n# output files in an output format independent way. To create the layout file\n\n# that represents doxygen's defaults, run doxygen with the -l option. You can\n\n# optionally specify a file name after the option, if omitted DoxygenLayout.xml\n\n# will be used as the name of the layout file.\n\n#\n\n# Note that if you run doxygen from a directory containing a file called\n\n# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE\n\n# tag is left empty.\n\nLAYOUT_FILE =\n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files containing\n\n# the reference definitions. This must be a list of .bib files. The .bib\n\n# extension is automatically appended if omitted. This requires the bibtex tool\n\n# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.\n\n# For LaTeX the style of the bibliography can be controlled using\n\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES =\n\n#---------------------------------------------------------------------------\n\n# Configuration options related to warning and progress messages\n\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated to\n\n# standard output by doxygen. If QUIET is set to YES this implies that the\n\n# messages are off.\n\n# The default value is: NO.\n\nQUIET = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n\n# generated to standard error (stderr) by doxygen. If WARNINGS is set to YES\n\n# this implies that the warnings are on.\n\n#\n\n# Tip: Turn warnings on while writing the documentation.\n\n# The default value is: YES.\n\nWARNINGS = YES\n\n# If the WARN_IF_UNDOCUMENTED tag is set to YES then doxygen will generate\n\n# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag\n\n# will automatically be disabled.\n\n# The default value is: YES.\n\nWARN_IF_UNDOCUMENTED = NO\n\n# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for\n\n# potential errors in the documentation, such as not documenting some parameters\n\n# in a documented function, or documenting parameters that don't exist or using\n\n# markup commands wrongly.\n\n# The default value is: YES.\n\nWARN_IF_DOC_ERROR = YES\n\n# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that\n\n# are documented, but have no documentation for their parameters or return\n\n# value. If set to NO, doxygen will only warn about wrong or incomplete\n\n# parameter documentation, but not about the absence of documentation.\n\n# The default value is: NO.\n\nWARN_NO_PARAMDOC = NO\n\n# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when\n\n# a warning is encountered.\n\n# The default value is: NO.\n\nWARN_AS_ERROR = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that doxygen\n\n# can produce. The string should contain the $file, $line, and $text tags, which\n\n# will be replaced by the file and line number from which the warning originated\n\n# and the warning text. Optionally the format may contain $version, which will\n\n# be replaced by the version of the file (if it could be obtained via\n\n# FILE_VERSION_FILTER)\n\n# The default value is: $file:$line: $text.\n\nWARN_FORMAT = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n\n# messages should be written. If left blank the output is written to standard\n\n# error (stderr).\n\nWARN_LOGFILE =\n\n#---------------------------------------------------------------------------\n\n# Configuration options related to the input files\n\n#---------------------------------------------------------------------------\n\n# The INPUT tag is used to specify the files and/or directories that contain\n\n# documented source files. You may enter file names like myfile.cpp or\n\n# directories like /usr/src/myproject. Separate the files or directories with\n\n# spaces. See also FILE_PATTERNS and EXTENSION_MAPPING\n\n# Note: If this tag is empty the current directory is searched.\n\nINPUT = ./copasi/ README.md\n\n# This tag can be used to specify the character encoding of the source files\n\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n\n# libiconv (or the iconv built into libc) for the transcoding. See the libiconv\n\n# documentation (see: https://www.gnu.org/software/libiconv/) for the list of\n\n# possible encodings.\n\n# The default value is: UTF-8.\n\nINPUT_ENCODING = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n\n# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and\n\n# *.h) to filter out the source-files in the directories.\n\n#\n\n# Note that for custom extensions or not directly supported extensions you also\n\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n\n# read by doxygen.\n\n#\n\n# If left blank the following patterns are tested:*.c, *.cc, *.cxx, *.cpp,\n\n# *.c++, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h,\n\n# *.hh, *.hxx, *.hpp, *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc,\n\n# *.m, *.markdown, *.md, *.mm, *.dox, *.py, *.pyw, *.f90, *.f95, *.f03, *.f08,\n\n# *.f, *.for, *.tcl, *.vhd, *.vhdl, *.ucf and *.qsf.\n\nFILE_PATTERNS = *.cpp \\\n\n*.c \\\n\n*.h \\\n\n*.hh \\\n\n*.H\n\n# The RECURSIVE tag can be used to specify whether or not subdirectories should\n\n# be searched for input files as well.\n\n# The default value is: NO.\n\nRECURSIVE = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n\n# excluded from the INPUT source files. This way you can easily exclude a\n\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n\n#\n\n# Note that relative paths are relative to the directory from which doxygen is\n\n# run.\n\nEXCLUDE = ./copasi/ABiochem \\\n\n./copasi/bindings \\\n\n./copasi/commercial \\\n\n./copasi/test \\\n\n./copasi/test2 \\\n\n./copasi/sbml/unittests/ \\\n\n./copasi/miase \\\n\n./copasi/compareExpressions \\\n\n./copasi/ViewCurrentUI/ \\\n\n./copasi/compareExpressions/unittests\n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n\n# directories that are symbolic links (a Unix file system feature) are excluded\n\n# from the input.\n\n# The default value is: NO.\n\nEXCLUDE_SYMLINKS = YES\n\n# If the value of the INPUT tag contains directories, you can use the\n\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n\n# certain files from those directories.\n\n#\n\n# Note that the wildcards are matched against the file with absolute path, so to\n\n# exclude all test directories for example use the pattern */test/*\n\nEXCLUDE_PATTERNS =\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n\n# (namespaces, classes, functions, etc.) that should be excluded from the\n\n# output. The symbol name can be a fully qualified name, a word, or if the\n\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n\n# AClass::ANamespace, ANamespace::*Test\n\n#\n\n# Note that the wildcards are matched against the file with absolute path, so to\n\n# exclude all test directories use the pattern */test/*\n\nEXCLUDE_SYMBOLS =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or directories\n\n# that contain example code fragments that are included (see the \\include\n\n# command).\n\nEXAMPLE_PATH =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and\n\n# *.h) to filter out the source-files in the directories. If left blank all\n\n# files are included.\n\nEXAMPLE_PATTERNS =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n\n# searched for input files to be used with the \\include or \\dontinclude commands\n\n# irrespective of the value of the RECURSIVE tag.\n\n# The default value is: NO.\n\nEXAMPLE_RECURSIVE = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or directories\n\n# that contain images that are to be included in the documentation (see the\n\n# \\image command).\n\nIMAGE_PATH =\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n\n# invoke to filter for each input file. Doxygen will invoke the filter program\n\n# by executing (via popen()) the command:\n\n#\n\n# <filter> <input-file>\n\n#\n\n# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the\n\n# name of an input file. Doxygen will then use the output that the filter\n\n# program writes to standard output. If FILTER_PATTERNS is specified, this tag\n\n# will be ignored.\n\n#\n\n# Note that the filter must not add or remove lines; it is applied before the\n\n# code is scanned, but not when the output code is generated. If lines are added\n\n# or removed, the anchors will not be placed correctly.\n\n#\n\n# Note that for custom extensions or not directly supported extensions you also\n\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n\n# properly processed by doxygen.\n\nINPUT_FILTER = \"grep -v '@dia:'\"\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n\n# basis. Doxygen will compare the file name with each pattern and apply the\n\n# filter if there is a match. The filters are a list of the form: pattern=filter\n\n# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how\n\n# filters are used. If the FILTER_PATTERNS tag is empty or if none of the\n\n# patterns match the file name, INPUT_FILTER is applied.\n\n#\n\n# Note that for custom extensions or not directly supported extensions you also\n\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n\n# properly processed by doxygen.\n\nFILTER_PATTERNS =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n\n# INPUT_FILTER) will also be used to filter the input files that are used for\n\n# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).\n\n# The default value is: NO.\n\nFILTER_SOURCE_FILES = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and\n\n# it is also possible to disable source filtering for a specific pattern using\n\n# *.ext= (so without naming a filter).\n\n# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.\n\nFILTER_SOURCE_PATTERNS =\n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n\n# is part of the input, its contents will be placed on the main page\n\n# (index.html). This can be useful if you have a project on for instance GitHub\n\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE = README.md\n\n#---------------------------------------------------------------------------\n\n# Configuration options related to source browsing\n\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will be\n\n# generated. Documented entities will be cross-referenced with these sources.\n\n#\n\n# Note: To get rid of all source code in the generated output, make sure that\n\n# also VERBATIM_HEADERS is set to NO.\n\n# The default value is: NO.\n\nSOURCE_BROWSER = NO\n\n# Setting the INLINE_SOURCES tag to YES will include the body of functions,\n\n# classes and enums directly into the documentation.\n\n# The default value is: NO.\n\nINLINE_SOURCES = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any\n\n# special comment blocks from generated source code fragments. Normal C, C++ and\n\n# Fortran comments will always remain visible.\n\n# The default value is: YES.\n\nSTRIP_CODE_COMMENTS = NO\n\n# If the REFERENCED_BY_RELATION tag is set to YES then for each documented\n\n# function all documented functions referencing it will be listed.\n\n# The default value is: NO.\n\nREFERENCED_BY_RELATION = YES\n\n# If the REFERENCES_RELATION tag is set to YES then for each documented function\n\n# all documented entities called/used by that function will be listed.\n\n# The default value is: NO.\n\nREFERENCES_RELATION = YES\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set\n\n# to YES then the hyperlinks from functions in REFERENCES_RELATION and\n\n# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will\n\n# link to the documentation.\n\n# The default value is: YES.\n\nREFERENCES_LINK_SOURCE = NO\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n\n# source code will show a tooltip with additional information such as prototype,\n\n# brief description and links to the definition and documentation. Since this\n\n# will make the HTML file larger and loading of large files a bit slower, you\n\n# can opt to disable this feature."
    }
}