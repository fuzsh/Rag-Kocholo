{
    "id": "correct_foundationPlace_00015_2",
    "rank": 49,
    "data": {
        "url": "https://comp.sys.amiga.programmer.narkive.com/87ZqdJAa/amiga-os-superiority",
        "read_more_link": "",
        "language": "en",
        "title": "Amiga OS superiority",
        "top_image": "https://narkive.net/favicon.ico",
        "meta_img": "https://narkive.net/favicon.ico",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "https://narkive.net/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "(too old to reply)\n\nNick Axel\n\nHello,\n\nI keep reading and hearing from people (well, sort of hearing, reading\n\npast interviews on the web), that the Amiga operating system was a\n\nmasterpiece. I'd really like to know why. Also, was it a masterpiece for\n\nits time or can it still be considered as such? Could anyone please\n\nexplain the technical reasons, from a system's and a programmer's point\n\nof view?\n\nI realise a reply to that question might not possibly fit in a few email\n\npages, however, I'd appreciate any info. Even pointing out documents on\n\nthe web, where the AOS internals and merits are explained would be just\n\ngreat.\n\nThank you all in advance.\n\nNick\n\nshephed\n\nNick, in all honesty the \"point of view\" is the reason.\n\nMost of what you are reading is just playful banter and good old fashioned\n\ntrolling, but I'm sure you knew that already. LOL\n\n\"Nick Axel\" <***@netscape.net> wrote in message\n\nnews:bmf545$m5mnm$***@ID-206009.news.uni-berlin.de...\n\n> Hello,\n\n>\n\n> I keep reading and hearing from people (well, sort of hearing, reading\n\n> past interviews on the web), that the Amiga operating system was a\n\n> masterpiece. I'd really like to know why. Also, was it a masterpiece for\n\n> its time or can it still be considered as such? Could anyone please\n\n> explain the technical reasons, from a system's and a programmer's point\n\n> of view?\n\n>\n\n> I realise a reply to that question might not possibly fit in a few email\n\n> pages, however, I'd appreciate any info. Even pointing out documents on\n\n> the web, where the AOS internals and merits are explained would be just\n\n> great.\n\n>\n\n> Thank you all in advance.\n\n>\n\n> Nick\n\n>\n\nAlain Thellier\n\nKernel (Exec) was small and fast so fast is the multitasking\n\nUse hadware blitter for drawings (what will be in DirectX later...)\n\nUse intensively libraries in the OS (what will be dll) but versionned\n\n(not compatibility problems)\n\nUse drivers,device drivers,etc... so the OS is modular (can had Win95 or\n\nFTP as filesystem, had new hardwares to old softwares,etc....)\n\nVirtual screens draggables/sharables\n\nOS very coherent= all is in libraries Exec (Kernel), Dos, Graphics,\n\nIntuition (menus/gadgets)\n\nthose are not a layer upside an other (like Win/dos like X11/Linux)\n\nNo memory protection so tasks can share datas like processus\n\nEtc...\n\nAL/\n\nNick Axel a écrit :\n\n> I keep reading and hearing [...] that the Amiga operating system was a\n\n> masterpiece.\n\nHeikki Orsila\n\nIn comp.sys.amiga.programmer Nick Axel <***@netscape.net> wrote:\n\n> I keep reading and hearing from people (well, sort of hearing, reading\n\n> past interviews on the web), that the Amiga operating system was a\n\n> masterpiece. I'd really like to know why. Also, was it a masterpiece for\n\n> its time or can it still be considered as such? Could anyone please\n\n> explain the technical reasons, from a system's and a programmer's point\n\n> of view?\n\nIt was not a masterpiece. If compared to unix systems it was worse,\n\nbut if compared to msdos it was much better.\n\nLet's see how many things I get wrong here..\n\nBad:\n\n- resource tracking (not possible to clean up the mess that\n\nprocesses made into the system)\n\n- scheduling processes (static priority scheduling by round robin).\n\ncontrary to amiga fanatics' beliefs, amiga's responsiveness was\n\nhorrible because of the ugly scheduling system. one single active\n\nprocess with priority +1 (not doing anything nasty) can\n\nprevent all usual processes (with priority 0) from running.\n\n- system internal structures too visible to the user (though this\n\npartially made some hacks very efficient). this is related to\n\nresource tracking problem.\n\n- lacks _users_ and file access control (useful even if everyone\n\nhad privileges equal to 'root')\n\n- lack of proper caching (this is understandable because the system was\n\ndesigned to be _lightweight_). however, these kind of systems were\n\nlater on extended into the operating system by third party software\n\nGood:\n\n- extensible (easy to add very different kinds of new mechanisms\n\ninto the operationg system)\n\n- namespaces (programmable devices)\n\n- virtual filesystems\n\n- console devices\n\n- speech devices\n\n- dynamic ram filesystems\n\n- much more\n\n- system is light, which is useful with little cpu power and memory\n\n- good for learning and experimenting about operating systems\n\n- many basic routines are short and understandable, even\n\nif they're written in assembler\n\nIf possible alternatives for a user were msdos, macintosh or amiga, then the\n\namiga option would have been very strong from the operating system point of\n\nview. msdos probably the worst of the three, but it won!\n\n--\n\nHeikki Orsila\n\n***@ee.tut.fi\n\nhttp://ee.tut.fi/~heikki\n\nAlain Thellier\n\nYou forgot somethings\n\n1) you count the features but not how well they\n\nwere implemented back in the 1980. For example i learn computer at\n\nschool on a 10 Mips Unix machine (so supposed to be fast at this time)\n\nand in fact it was user slow ... slower than an Amiga.\n\n2) Use Unix as a check list for missing features of AmigaOs it's partial\n\ntoo\n\nIf you do the same a contrario you will found (1980's) unix misses also\n\na lot of Amiga features\n\nUnix hadnt sound\n\nUnix hadnt datatypes\n\nUnix hadnt built in video features\n\nUnix hadnt dynamic libraries (at this time)\n\netc...\n\nAlain\n\nHeikki Orsila a écrit :\n\n> It was not a masterpiece. If compared to unix systems it was worse,\n\n> but if compared to msdos it was much better.\n\nThomas Richter\n\nHi,\n\n> 1) you count the features but not how well they\n\n> were implemented back in the 1980. For example i learn computer at\n\n> school on a 10 Mips Unix machine (so supposed to be fast at this time)\n\n> and in fact it was user slow ... slower than an Amiga.\n\n> 2) Use Unix as a check list for missing features of AmigaOs it's partial\n\n> too\n\n> If you do the same a contrario you will found (1980's) unix misses also\n\n> a lot of Amiga features\n\n> Unix hadnt sound\n\n> Unix hadnt datatypes\n\n> Unix hadnt built in video features\n\n> Unix hadnt dynamic libraries (at this time)\n\n> etc...\n\nThe quality of an operating system is not measured in the amount of\n\nfeatures it provides. If you count conservative, you might also argue that\n\nUnix (as the operating system) does not provide sound, even today. What unix\n\ndoes is that it provides abstractions (=files) that can be used by device\n\ndrivers to implement the functionality.\n\nThe quality of an operating system is rather a matter of a clean design that\n\nallows implementing functionalities in a safe and extensible way. AmigaOs\n\nonly did that half a way; the original design allowed implementations of\n\nextensions in various aspects, in several aspects even better than *ix does\n\ntoday (virtual file systems as in the dos.library, though this is medal has\n\nits dark side as well), but it fails miserably in various other aspects\n\nthat have been mentioned before (multi-user system, resource tracking,\n\nmemory protection); these are \"design flaws\" in today's view, they have been\n\ndesign decisions back then for a limited hardware.\n\nIf you wonder why *ix better than AmigaOs then a possible answer would be\n\nthat the operating system (-not the libraries-) knows basically only\n\n\"streams\" (and memory) as its only resource. That means that there are not\n\nmuch resources to track, and not much resources to protect. You have the\n\n\"file system tree\" and system memory, everything has to fit in there.\n\nMajor design flaws in AmigaOs are the lack of a clear \"resource\"\n\ndefinition, the lack of a clear \"process\" (=resource arbitrator)\n\ndefinition, the lack of a clear \"user\" definition, the lack of a\n\nproper \"kernel\" definition (a driver must be able to do more than a\n\nuser program) paired with a couple of gliches (graphics.library is too\n\nhardware dependent, dos.library is alien system that is not integrated\n\ntoo well).\n\nMajor design flaws of *ix are possibly fork(), the lack of a clear\n\n\"inter- process communication\" definition. Add to this list the \"macro\n\nkernel\" design, quite unlike the Amiga microkernel, the lack of a\n\nproper \"Os API\" definition. (Rather, it's defined by the C compiler\n\nused, and on the kernel version defining the exported symbols of all\n\nmodules.) You can also call this the lack of a good \"driver\" concept;\n\nIMHO these should have privilidges between user and kernel space, but\n\nthat's a different topic.\n\nGreetings,\n\nThomas\n\nHeikki Orsila\n\nIn comp.sys.amiga.programmer Alain Thellier <***@francetelecom.com> wrote:\n\n> 1) you count the features but not how well they\n\n> were implemented back in the 1980. For example i learn computer at\n\n> school on a 10 Mips Unix machine (so supposed to be fast at this time)\n\n> and in fact it was user slow ... slower than an Amiga.\n\nSpeed wasn't an issue really, though I did mention caching. Context switches\n\nare a lot heavier on unixes.\n\n> 2) Use Unix as a check list for missing features of AmigaOs it's partial\n\n> too\n\n> If you do the same a contrario you will found (1980's) unix misses also\n\n> a lot of Amiga features\n\n> Unix hadnt sound\n\n> Unix hadnt datatypes\n\n> Unix hadnt built in video features\n\n> Unix hadnt dynamic libraries (at this time)\n\n> etc...\n\nI was talking about fundamental operating system issues, not specifics like\n\nsound, video and datatypes. Feel free to compare those specific factors with\n\nother operating systems. Doing a comprehensive comparison between any two\n\noperating systems with respect to all applications is pretty big a job.\n\nConsidering factors you mentioned:\n\nSound is just a device driver and hardware issue. And Amiga didn't have a\n\nproper audio interface before AHI. Many programs just hit audio hardware\n\ndirectly. It's something that makes amiga sw look bad.\n\nI'm not sure about the dynamical library issue you mentioned, but Amiga\n\ndynamic libraries didn't have symbol exporting. At least unix systems\n\nevolved to have that feature. However, there's something to be debated about\n\nusefulness of symbol exporting. Imo, it's a very useful feature to have.\n\nbtw. what were those built-in video features in Amiga, besides genlock\n\nsupport in hardware?\n\n--\n\nHeikki Orsila\n\n***@ee.tut.fi\n\nhttp://ee.tut.fi/~heikki\n\nG***@canit.se\n\n> + On 14-Okt-03 14:38:32\n\n+Heikki Orsila <***@host.invalid> wrote\n\n>In comp.sys.amiga.programmer Nick Axel <***@netscape.net>\n\n>wrote:\n\n>> I keep reading and hearing from people (well, sort of hearing, reading\n\n>> past interviews on the web), that the Amiga operating system was a\n\n>> masterpiece. I'd really like to know why. Also, was it a masterpiece for\n\n>> its time or can it still be considered as such? Could anyone please\n\n>> explain the technical reasons, from a system's and a programmer's point\n\n>> of view?\n\n>It was not a masterpiece. If compared to unix systems it was worse,\n\n>but if compared to msdos it was much better.\n\nIf you have used a unixsystem from the same time (And I guess you have)\n\nyou know that it was indeed powerful, but for home use it was crap.\n\nThe Amiga is a *home* computer.\n\n>Let's see how many things I get wrong here..\n\n>Bad:\n\n> - resource tracking (not possible to clean up the mess that\n\n> processes made into the system)\n\nYes, that was bad.. or more exact, it is bad now.. at that point\n\nmemoryprotection and resourcetracking was no option..\n\n> - scheduling processes (static priority scheduling by round robin).\n\n> contrary to amiga fanatics' beliefs, amiga's responsiveness was\n\n> horrible because of the ugly scheduling system. one single active\n\n> process with priority +1 (not doing anything nasty) can\n\n> prevent all usual processes (with priority 0) from running.\n\n..A badly written program can in teory yes.. still, it often works better\n\nthan modern operatingsystems like Windows.. for example my laptop booted\n\nin win2000 lost its contact with my NFS-server and therefore all the GUI\n\nhanged..\n\n> - system internal structures too visible to the user (though this\n\n> partially made some hacks very efficient). this is related to\n\n> resource tracking problem.\n\nIn wich way is this a problem for the user ?\n\n> - lacks _users_ and file access control (useful even if everyone\n\n> had privileges equal to 'root'\n\nAmigaOS IS and have always been a singeluser system.. UNIX is and have\n\nalways been a multiuser system.\n\nComplaining on this is as stupid as complaining that the Ferrari Enzo have\n\na terrible small space for luggage, and that a bus is better coz it can\n\nfit more people in it..\n\nLook at all the problems microsoft have when they have tried to convert\n\ntheir ugly singleuser DOS-based system to a modern multiuser OS..\n\nit works like CRAP, mainly coz all the programs are written with a singleuser\n\nsystem in thought.\n\n> - lack of proper caching (this is understandable because the system was\n\n> designed to be _lightweight_). however, these kind of systems were\n\n> later on extended into the operating system by third party software\n\nWhat kind of caching do you think of ? CPU ? memory ? disk ?\n\nHeikki Orsila\n\nIn comp.sys.amiga.programmer ***@canit.se wrote:\n\n> If you have used a unixsystem from the same time (And I guess you have)\n\n> you know that it was indeed powerful, but for home use it was crap.\n\n> The Amiga is a *home* computer.\n\nYou have a point, because most users couldn't have afforded hardware that\n\ncould have run unix properly.\n\nActually I have not used unix systems from that time, but I've read some\n\nabout them (btw. 'advanced programming in the unix environment' by W. Richard\n\nStevens is great reading). For example, threading was not supported, but most\n\nbasic things have remained the same: namespaces, processes, command line\n\ninterface and ipc for the most part.\n\n>> - scheduling processes (static priority scheduling by round robin).\n\n>> contrary to amiga fanatics' beliefs, amiga's responsiveness was\n\n>> horrible because of the ugly scheduling system. one single active\n\n>> process with priority +1 (not doing anything nasty) can\n\n>> prevent all usual processes (with priority 0) from running.\n\n> ..A badly written program can in teory yes.. still, it often works better\n\n> than modern operatingsystems like Windows.. for example my laptop booted\n\n> in win2000 lost its contact with my NFS-server and therefore all the GUI\n\n> hanged..\n\nThe scheduling algorithm would have been an easy thing to do differently.\n\nWith a badly written nfs server anything is possible, especially if it\n\nruns in the kernel space (dit it?) ?\n\n>> - system internal structures too visible to the user (though this\n\n>> partially made some hacks very efficient). this is related to\n\n>> resource tracking problem.\n\n> In wich way is this a problem for the user ?\n\nNot directly, but indirectly it causes lack of stability.\n\n>> - lack of proper caching (this is understandable because the system\n\n>> was\n\n>> designed to be _lightweight_). however, these kind of systems were\n\n>> later on extended into the operating system by third party software\n\n> What kind of caching do you think of ? CPU ? memory ? disk ?\n\nWhat is the difference between CPU and memory cache (some cpu cache is for\n\ninstructions and the other is for data)? I was referring to disk cache.\n\nFilesystem and block cache. Later amiga filesystems did actually have some\n\nfilesystem caching for directories at least. Perhaps the most performance\n\ndegrading thing was the lack of delayed writes. Instant writes often\n\nlead to much overwork.\n\n--\n\nHeikki Orsila\n\n***@ee.tut.fi\n\nhttp://ee.tut.fi/~heikki\n\nEkkehard Morgenstern\n\nHi Glenn,\n\n<***@canit.se> schrieb im Newsbeitrag\n\nnews:***@canit.se...\n\n> If you have used a unixsystem from the same time (And I guess you have)\n\n> you know that it was indeed powerful, but for home use it was crap.\n\n> The Amiga is a *home* computer.\n\nThe Amiga has/had been much more than a home computer. It was used in\n\nprofessional DTP and video studios (like advertising agencies) also.\n\nIt's not the Amiga's fault that not much business software was developed for\n\nit.\n\nAmigaOS got some of the first GNU ports, like the GCC, very early, because\n\nit was easy to port UNIX software to it! :-)\n\nRegards,\n\nEkkehard Morgenstern.\n\nG***@canit.se\n\n> + On 13-Okt-03 22:44:47\n\n+Nick Axel <***@netscape.net> wrote\n\n>Hello,\n\n>I keep reading and hearing from people (well, sort of hearing, reading\n\n>past interviews on the web), that the Amiga operating system was a\n\n>masterpiece. I'd really like to know why. Also, was it a masterpiece for\n\n>its time or can it still be considered as such? Could anyone please\n\n>explain the technical reasons, from a system's and a programmer's point\n\n>of view?\n\nMainly for its time.. ans especially 2.1 and 3.0, At this time other\n\noperatingsystems sucket pretty badly.. Win 3.x on MS-DOS base for example,\n\ncompared with this piece of shit AmigaOS was really really great :)\n\nBUT, AOS still have some functions that are really good and that is missing\n\non other system.. for example the extremly good locale-system, the well\n\nworking datatypes system and so on.\n\nBen Hutchings\n\nIn article <bmf545$m5mnm$***@ID-206009.news.uni-berlin.de>, Nick Axel wrote:\n\n> Hello,\n\n>\n\n> I keep reading and hearing from people (well, sort of hearing, reading\n\n> past interviews on the web), that the Amiga operating system was a\n\n> masterpiece. I'd really like to know why. Also, was it a masterpiece for\n\n> its time or can it still be considered as such?\n\n<snip>\n\nThe AmigaOS kernel (sometimes called \"exec\", short for \"executive\") is\n\nfor the most part simple and elegant, and - unlike most personal\n\ncomputer OSes used in 1985 - it supports multitasking. The OS has\n\nalways included a CLI as well as a GUI, providing a good balance\n\nbetween power and ease of use. These gained the Amiga a lot of fans\n\namong programmers and other computer users. However, much of the OS\n\nwas originally written and/or integrated very quickly indeed and was\n\n(in my opinion) neither sufficiently stable or easily programmable\n\nuntil release 2.04 in 1991. Also the CLI was very primitive until\n\nrelease 1.3 in 1987.\n\nI think the Amiga really got more interest for its graphics and sound\n\ncapabilities, which in 1985 were quite astonishing. However, there\n\nwere many compromises inherent in the design of this hardware, and\n\nCommodore could not or would not invest sufficiently in updating it,\n\nso Mac and PC graphics and sound chips gradually moved past it over\n\nthe years. Unfortunately the graphics and sound systems of the OS\n\nwere heavily tied to the specific features of this hardware and it has\n\nproved difficult to replace them with hardware-independent modules.\n\nThis can be seen as a weakness in the OS design.\n\n--\n\nBen Hutchings\n\nEvery program is either trivial or else contains at least one bug"
    }
}