{
    "id": "correct_foundationPlace_00015_2",
    "rank": 66,
    "data": {
        "url": "https://slashdot.org/story/04/07/30/2338206/ansi-c89-and-posix-portability",
        "read_more_link": "",
        "language": "en",
        "title": "ANSI C89 and POSIX portability?",
        "top_image": "https://a.fsdn.com/sd/topics/programming_64.png",
        "meta_img": "https://a.fsdn.com/sd/topics/programming_64.png",
        "images": [
            "https://a.fsdn.com/sd/topics/programming_64.png",
            "https://a.fsdn.com/sd/topics/technology_64.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://a.fsdn.com/sd/topics/os_64.png",
            "https://a.fsdn.com/sd/topics/media_64.png",
            "https://a.fsdn.com/sd/ccpa-optout.png",
            "https://slashdot.org/images/njs.gif?432"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "LordNite asks: \"Here is the situation. I am maintaining a piece of source code which is written in K&amp;R C. One of the original goals of this code was to be as portable as possible to as many platforms as possible. The code runs on UNIX and its clones as well as OS/2. The code avoids POSIX functio...",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://ask.slashdot.org/story/04/07/30/2338206/ansi-c89-and-posix-portability",
        "text": "Your new power browser: Check out Shift, the newest and most powerful and productive web browser available. Unite everything you do on your desktop into one browser window and get more done. Download Shift for free!\n\n√ó\n\n1444747 story\n\nANSI C89 and POSIX portability?\n\nLordNite asks: \"Here is the situation. I am maintaining a piece of source code which is written in K&R C. One of the original goals of this code was to be as portable as possible to as many platforms as possible. The code runs on UNIX and its clones as well as OS/2. The code avoids POSIX functions such as mmap(2) since at the time it was initially written (early 1990s) POSIX was not very wide spread. The code is well written, but in need of some serious fixing. As I go around fixing parts of the code I would also like to modernize it a bit. Since it is now 2004, can I rely on ANSI C89 and POSIX routines without sacrificing the portability of this code? (Yes, I do realize that the purpose of POSIX is code portability...) I am not really interested in the OS/2 port at this time. I am just interested in keeping portability with UNIX clones. To put my question another way: Are there any UNIX-like OSes in common use, which are currently developed and supported by some entity either OSS or proprietary, that do not support POSIX and ANSI C89?\""
    }
}