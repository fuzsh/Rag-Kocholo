{
    "id": "correct_foundationPlace_00004_3",
    "rank": 80,
    "data": {
        "url": "https://patents.google.com/patent/US7593740B2/en",
        "read_more_link": "",
        "language": "en",
        "title": "US7593740B2 - Location-based social software for mobile devices - Google Patents",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://patentimages.storage.googleapis.com/70/eb/6b/9fed7eaa17edb9/US07593740-20090922-D00000.png",
            "https://patentimages.storage.googleapis.com/bb/00/ae/6e53a4b69829bb/US07593740-20090922-D00001.png",
            "https://patentimages.storage.googleapis.com/e7/69/33/9187e6902c8a6e/US07593740-20090922-D00002.png",
            "https://patentimages.storage.googleapis.com/72/aa/d0/55f98ed430ddf4/US07593740-20090922-D00003.png",
            "https://patentimages.storage.googleapis.com/ee/e3/b3/4bff98c63a1096/US07593740-20090922-D00004.png",
            "https://patentimages.storage.googleapis.com/9f/bd/1c/e7019747bb06bb/US07593740-20090922-D00005.png",
            "https://patentimages.storage.googleapis.com/21/7e/41/7add7b6c70ecd3/US07593740-20090922-D00006.png",
            "https://patentimages.storage.googleapis.com/cf/b1/d0/4ce41f20c01289/US07593740-20090922-D00007.png",
            "https://patentimages.storage.googleapis.com/b0/a4/f3/3eee1be31d77c4/US07593740-20090922-D00008.png",
            "https://patentimages.storage.googleapis.com/c8/0e/89/f6779974b97197/US07593740-20090922-D00009.png",
            "https://patentimages.storage.googleapis.com/44/06/95/6ff29e6e11d94a/US07593740-20090922-D00010.png",
            "https://patentimages.storage.googleapis.com/6a/d6/7d/4521800931ea2c/US07593740-20090922-D00011.png",
            "https://patentimages.storage.googleapis.com/1b/ef/ab/08cb6726ed90bd/US07593740-20090922-D00012.png",
            "https://patentimages.storage.googleapis.com/2b/f6/83/0b268549670436/US07593740-20090922-D00013.png",
            "https://patentimages.storage.googleapis.com/5c/c0/ad/24a1410864ffdc/US07593740-20090922-D00014.png",
            "https://patentimages.storage.googleapis.com/60/5a/82/e5c0e743811dd8/US07593740-20090922-D00015.png",
            "https://patentimages.storage.googleapis.com/70/83/73/f6b5043c77f570/US07593740-20090922-D00016.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2004-05-12T00:00:00",
        "summary": "",
        "meta_description": "A method of establishing connection between users of mobile devices includes receiving at a computer a location of a first user from a first mobile device, receiving from a second mobile device a location of a second user having an acquaintance relationship to the first user, and sending a message to the first mobile device based on the proximity of the first user to the second user.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://patents.google.com/patent/US7593740B2/en",
        "text": "CROSS REFERENCE TO RELATED APPLICATION\n\nThis application claims the benefit of U.S. Provisional Application No. 60/570,410, filed May 12, 2004, and entitled âLocation-Based Social Software for Mobile Devices,â the contents of which is hereby incorporated by reference in its entirety.\n\nTECHNICAL FIELD\n\nThis invention relates to systems and methods for connecting people to each other, and more particularly to connections of acquaintances for activities such as socialization.\n\nBACKGROUND\n\nPeople are social creaturesâsome more social than others. We express this socialization through relationships, and we carry it out through communication. Many communication techniques have been usedâfrom direct dialogue to smoke signals to telegraph to telephone and wireless communications, such as cellular telephone. Modern technological modes of communication are very convenient, very easy to use, and very efficient.\n\nHowever, establishing the communication is not always easy. Such a step generally involves getting all the people for communication on a single communication channel, whether in the same room, on a single phone call, or whateverâoften termed as a âmeetingâ in a business context or perhaps a âpartyâ or âconfabâ in a social context. Setting up the meeting or party is not so easy, however. The process may require sending out invitations, either by paper or electronically. The organizer may then need to tally up any responses to determine who will be coming. Alternatively, an electronic system such as a meeting scheduler can keep track of responses. Another way to set up a meeting or party is simply to contact each invitee directly (or by having a helper do so), such as through numerous telephone calls or e-mails messages. Such a process can be rather time consuming, and is perhaps too much work for a spontaneous get-together. Certain on-line systems also can help organize a party, keeping track of RSVP's and other information. Yet these too require advance planning and fairly involved organization. In addition, many of these systems require the organizer to select attendees from a manually-created list of acquaintances, such as members of an e-mail address book.\n\nSUMMARY\n\nThis document discloses systems and methods for allowing acquaintances to find each other so that they can get together, and perhaps have a good time. In general, users of a system may employ portable devices, such as e-mail or text-message enabled telephones, to identify their location to their acquaintances, such as through a server that keeps track of relationships established between users. The system may also determine the distance between users so that only users in close proximity to each other trade communications. In this way, users do not receive communications if it is impracticable for them to establish a meeting with their acquaintance or acquaintances.\n\nIn some embodiments, such a system may have a number of advantages. For example, a system may allow for convenient communication among friends who like to socialize but do not want to plan every outing. The system may also allow for spontaneous socializing, where friends who were not thinking of being with each other end up together for a fun evening. In addition, a system may help avoid the problem of friends who were out near each other, but never realized it until later. In general, the system has the ability to turn an otherwise lackluster evening into a very fun night on the town. Also, the system may be extended using well-known social networking approaches to allow for communications, not only with direct friends, but with friends of friends and other further relations. In addition, people may be related to others by the system according to interests provided by each user or inferred by the system. As such, a particular evening may be improved for a user, and by meeting additional people, the person's entire social life can be improved. No more sitting alone and lonely.\n\nOne embodiment of such a system can be found at the Dodgeball web site, hosted at www.dodgeball.com. This system is directed to location-based social software for mobile devices, such as cellular telephones. The system provides a unique means by which friends can register themselves with the system, so that the system knows who their acquaintances are or should be. The user may then identify their location, and receive information about the status of nearby friends, while those nearby friends learn the status of the user. When integrated with features such as coordination of reviews of various venues, and the ability to send a message by shouting it out to one's friends, this system has drawn a number of users recently and a number of positive comments.\n\nIn one aspect, a method is disclosed for establishing connection between users of mobile devices. The method comprises receiving at a computer a location of a first user from a first mobile device, receiving from a second mobile device a location of a second user having an acquaintance relationship to the first user, and sending a message to the first mobile device based on the proximity of the first user to the second user. The user locations may be determined by converting a location proxy (which may comprise a venue name) to a set of corresponding location coordinates, which may comprise GPS coordinates. The venue name may be parsed form an electronic mail message, and the electronic mail message may be parsed into components from a MIME header. The message may also be sent over a text messaging system.\n\nIn some aspects, the acquaintance relationship may be a friend relationship or a friend-of-a-friend relationship. The location of the first user may also be retired a predetermined time after receiving the location of the first user, so that other users may no longer learn the location of the first user. In addition a message to the second mobile device may be blocked based on a selection by the first user to hide from the second user.\n\nIn yet other aspects, a venue review may be received from a third user and the review may be made available to the first user and the second user. In addition, a message may be sent to the second mobile device based on the proximity of the users to each other. Also, the first sent message may provide the identity of the second user, and the second sent message may provide an indication that another user is in the proximity of the second user, without providing the identity of the first user.\n\nIn another aspect, a system for providing information about acquaintances is provided. The system may include an interface to receiving messages from users of the system providing information associated with their location, a location engine configured to correlate the received location information to a location identifier that may be compared to other location identifiers, an acquaintance identifier configured to identify acquaintances of users providing location information to the system, and a message generator to prepare messages to users regarding the locations of their acquaintances if those locations are proximate to the users. The interface may comprise an e-mail in box, and the location engine may comprise a table that correlates venue names to geographic coordinates. The message generator may be configured to prepare a first message for a first user about the location of a second user who is identified as a friend of the first user, and to prepare a message for the second user about the location of the first user. In addition, the message generator may be responsive to instructions from the location engine and the acquaintance identifier so that the message generator only prepares messages for users of a predetermined relationship and in a particular geographic area. The message generator may also be configured to prepare a plurality of messages for a plurality of users identified as friends of a first user, when the first user requests that messages be addressed to the friends of the first user.\n\nIn another example, a system for providing information about acquaintances is disclosed. The system may include an interface to receive a message from a first user of the system, means for identifying a set of users of a particular relationship to the first user within a particular proximity of the first user, and a message generator to prepare messages for the set of users in response to the message from the first user.\n\nIn another aspect, a method for managing interaction among users of a system is disclosed. The method may comprise receiving at a computer a plurality of join commands from a plurality of user at one or more locations, correlating users into sets according to general geographic location, correlating users into subsets according to indicia of commonality or affinity with each other, and instructing the users via electronic message to identified locations grouped by commonality or affinity. The method may further comprise instructing users in particular sub-sets with suggestions for activity based on the commonality or affinity. The method may also comprise instructing users in particular sub-sets with hints about their commonality or affinity. The method may also repeat the actions of correlating users into subsets according to commonality or affinity with each other, and instructing the users via electronic message to identified locations grouped by commonality or affinity, so as to form additional groups.\n\nThe details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the invention will be apparent from the description and drawings, and from the claims.\n\nDESCRIPTION OF DRAWINGS\n\nFIG. 1 is a perspective representation of a geographic area in which acquaintance may be located.\n\nFIG. 2 is a plan view or map of an geographic area of twelve city blocks in which various acquaintance are located.\n\nFIG. 3 is a schematic representation of information flow in a system for providing communication among acquaintances.\n\nFIG. 4 shows messages sent and received by a number of acquaintances in a text-messaging system.\n\nFIG. 5 is a flow chart showing actions by a client and a server in a system for allowing communication among acquaintances.\n\nFIG. 6 is a schematic diagram of a system for managing communication among acquaintances.\n\nFIG. 7 is a cartoon showing exemplary uses of a system for enabling communication between and among acquaintances.\n\nFIG. 8 is a screen shot of a sign-up screen.\n\nFIG. 9 is a screen shot of a test screen.\n\nFIG. 10 is a screen shot of another test screen.\n\nFIG. 11 is a screen shot of a profile screen.\n\nFIG. 12 is a screen shot of a photo update screen.\n\nFIG. 13 is a screen shot of an invitation screen.\n\nFIG. 14 is a screen shot of a friend management screen.\n\nFIG. 15 is a screen shot of a community screen.\n\nFIG. 16 is a flow chart of a system-directed social session.\n\nLike reference symbols in the various drawings indicate like elements.\n\nDETAILED DESCRIPTION\n\nFIG. 1 is a perspective representation of a geographic area 10 in which acquaintances may be located. The geographic area 10 is hypothetical and is intended to exhibit a number of different venues in which acquaintances may find themselves. A venue may be any appropriate type of location in which a person may want to be, such as a home, apartment, bar, restaurant, parking lot, sports stadium or arena, or street address. The term acquaintance is used broadly here to indicate users who may want to communicate with each other. It may include old friends, friends of friends, or acquaintances of more remote relation.\n\nIn the geographic area 10, for example, a person could be located at an empty lot 12, 20, such as a parking lot or a park. In such a location, they may desire to meet with friends who want to grill out or play a game such as basketball or soccer in the park. Perhaps they have found themselves in the park alone or with an odd number of players, and would like to complete the teams for a fun game. A user could also be located in stadium 16, such as watching a college football game. Yet another user could be driving around in a car 18 or parked, while another could be home in her penthouse apartment 14, waiting for people to come to a party she is throwing. Each of these people could be friends, could be near each other, and could be interested in doing something together, and yet might not know that others are nearby and interested. What a waste.\n\nFIG. 2 is a plan view or map of an geographic area 10 of twelve city blocks in which various acquaintances are located. Some blocks such as block 12 may be open, such as for parking lots or parks, while others may have buildings located on them. Each location that may be uniquely identified may be considered to be a venue. As such, each user's location may be identified by the venue in which the user is located. For example, user 24 a may be in a sports arena. User 26 a may be at a bar, while user 28 a may be sitting in a car in a parking lot. In such a situation, the venue may be identified by the name of the parking lot or its address, such as by cross streets. Finally, user 30 a may be in a warehouse, such as at a rave party, while user 32 a may be at home in their apartment. Each of these two locations or venues might simply be identified by their street address.\n\nEach of the users is alone. Without assistance, they might each continue to be alone, without knowing that the others are within easy walking distance, and in some cases next door. If they had readily-available yet non-intrusive information about the location of one or more of the others, they might decide to go where the other person is and have a much better time. This increased social interaction can lead to many positive things that occur when there is more direct interaction with others.\n\nEach of the users may be a member of or associated with a system (discussed, for example, below) that tracks the various relationships between and among the users, who form a community. Associated with the membership in that system, the user may provide information to complete a profile about the user. For example, profile 24 b may contain all relevant information about user 24 a, such as the user's name, gender, and other identification information. The profile 24 b may also include one or more images or digitized photographs of the user. In addition, the profile may contain information about preferences by the user, such as smoking/non-smoking status, religion, educational background, hobbies, and other features that are commonly associated with profiles for relationship or dating systems. Moreover, bar or restaurant preferences may be stored in the profile, along with other appropriate information. Alternatively, information about a user or users may be stored in multiple files, including a file or files that would normally be termed a profile, and files that would not. Similar profiles 26 b, 28 b, 30 b, 32 b may also be associated with users 26 a, 28 a, 30 a, 32 a, respectively.\n\nThe profile could take many different forms. For example, classic profile information entered by a user, such as on a web page, (e.g., hobbies and various preferences), could be kept in one file or area. Other profile information could include restaurants reviews by the user. Still other profile information could include relationships identified by the user, including friend relationships and others.\n\nFIG. 3 is a schematic representation of information flow in a system 38 for providing communication among acquaintances. In this example, four users, as represented by their mobile devices, have previously established themselves as members of a community. Member TJ 42 is the protagonist in the example. However, information flow is bi-directional and constantly changing, so that no user is necessarily a primary user. Member Tony 44 has been identified as a friend of member TJ 42âsuch as by TJ selecting Tony from a roster of members of the system, and/or by Tony selecting TJ. Member Don Pablo 46 is a friend of member Tony 44, and thus by extension, a friend-of-a-friend of member TJ 42. Member Katie 48 is identified here as a âcrushâ of member TJ 42, which means that member TJ 42 has identified her as someone on which he has a crush. Member Katie 48 could also be a friend or a friend-of-a-friend of member TJ 42. Each of the members could have a variety of relationships to each other also (e.g., two users could be both friends and friends-of-friends), essentially filling out a social web or social fabric.\n\nThe labels applied for certain relationshipsâe.g., acquaintance, friend, friend-of-a-friend, and crushâare not intended to require any sort of societal relationship, but are meant to apply more broadly to the roles that users take or assign with the system. For example, member TJ 42 may choose to have a direct relationship with member Tony 44, and thereby make himself a friend of member Tony 44, even though the two might simply be called âcolleaguesâ in a social setting.\n\nIn the example of FIG. 3, the operation being pictured is one in which member TJ 42 enters, opts in, or logs into the system, thereby starting a number of message flows. The other members have already identified themselves and their locations to the system, and are currently active in the system. The messages revolve around a server 40, to be described in more detail below. The server 40 could take any appropriate form, but in one example could simply be a server for receiving electronic mail messages from an electronic mail in box, analyzing the information in the messages, using that information to identify acquaintances who are currently logged onto the system 38, and generating appropriate messages to be transmitted to each of the acquaintances.\n\nMember TJ 42 starts the messaging process by sending a message to the server 40. The message may take any appropriate form, such as a Short Message Service (SMS) message. The message may also be in the form of an e-mail message to be received by the in box of a related server. The message may be formatted in a particular manner so as to carry as much information in as little data space as possible. By using special formatting, the message can more easily operate using protocols such as SMS that have limited upstream bandwidth, and also to allow the user to more easily enter the data. In addition, use of a generic messaging format like SMS or e-mail allows the system to be carrier-independent so that users can gain the benefits of the system even if their-carrier does not officially support it. In addition, the messages may be generated by an application, such as a J2ME/Java/Brew application, present on the device, so that users may be presented, for example, with menus and soft keys (which may be context dependent), and user selections may then be translated into commands to be sent by the device. Such commands may also be of a form so that they are carrier-independent. Commands may also be provided by voice, and could be handled similar to the well-known Moviefone system.\n\nAs described here, the message formatting comprises a message type indicator, or command, and a message body. The message type indicator may be a single character that represents the sort of functionality the user wants to invoke from the system. For example, a system could offer a number of functions based on the user's location, could answer questions for a user, and could deliver messages for the user. In such a context, a user could indicate that they are submitting a location by beginning the message with an âatâ or â@â symbol. The person could indicate that they wish to post a question by preceding the message with a question mark, or â?â. The person could indicate that they want to send a message, such as to an entire group of acquaintances, using an exclamation point, or â!,â which in this context may be referred to as a âshout outâ symbol.\n\nOther symbols could also be used. For example, â/â or âw/â could be used to indicate the word âwithâ so as to tell the system the people (whether a member of the system or not) who are with you at a venue. Thus, for example, if the person with you is a member, the system could include information about them (such as their photo) in any messages sent to your friends. As another example, âoffâ may be used to stop receiving messages or to âopt outâ of the system so that messages about you are not sent to other users. In addition, the command âhelpâ may be used to retrieve assistance with command syntax. A command of âvacationâ could also be used to opt out for a period of time, such as 3, 5, 7, 10, or 14 days. In addition, users may be allowed to set up specific groups, which may be subsets of their entire group of friends, or distinct groups of friends. For example, a user may have a work group of friends and a social group of friends, and may want to broadcast their activity on a particular night only to one group. A command in such an environment could take the form of âsoftball team@Luna Lounge.â In addition, users could be presented with selections, or be allowed to enter commands, to block other users on-the-fly, e.g., âReply with âblockâ to stop receiving messages from this user.â In general, however, there are great advantages from having a simple interface that is unobtrusive and easy for users to learn.\n\nMessages may also be formatted or reformatted, for example, to lower the amount of information transmitted in the system. As one example, global find and replace may insert shorthand proxies in place of longer terms, such as âw/â for âwith,â â&â for âand,â âstâ for âstreet,â etc. Content may also be added to a message, such as a message sent from a server to a device. For example, a request formatted as â?barâ in New York City might return dozens or hundreds of results. In such a situation, the device may be sent a follow-up question like âdid you mean Ace Bar?â and perhaps also âor Luna Bar?â and perhaps also âor Magician Bar,â until a full-sized message is created. As one example, a message may have a maximum allowable size of 140 characters. A user may also be able to make more complex queries such as compound queries. For example, a collaborative filtering engine may identify relevant information requested by a user, e.g., a user may ask for all venues within ten blocks that their friends have recommended or that people who have identified themselves with particular characteristics (e.g., lovers of Indian food) have recommended.\n\nIn FIG. 3, the screen for member TJ 42 shows that he is sending a message to a New York City instantiation of the system, and is telling the system that he is located at a bar called the Luna Lounge. When he executes a âsendâ command, the message is sent via path âA1â to server 40. As explained in more detail below, server 40 may then identify member TJ's 42 acquaintances, identify which of those acquaintances is currently active in the system, and also determine in appropriate circumstances which of the acquaintances is near the Luna Lounge. In this example, three acquaintances meet these criteria. The server 40 may send each of the acquaintances messages whose content depends on the type of acquaintance relationship. For example, member Tony 44 is a friend, so he may be sent a message, as shown by arrow B1, that states: âYour friend TJ is at Luna Lounge (171 Ludlow St.) Why not stop by and say hello?â Thus, the system will have taken the location identifier âLuna Loungeâ and associated it with an address, such as through a simple look-up function, and generated a message in a predetermined format to send to member Tony 44.\n\nMember Don Pablo 46, as one of Tony's friends, is a friend-of-a-friend to member TJ 42. Thus, the server 40 may generate a message, as shown by arrow C1, for member Don Pablo 46 such as: âTJ is at Luna Lounge. You know him through Tony.â Member Katie 48 is a crush of TJ's, meaning that he has identified her as someone on which he has a crush, and as someone who he is willing to let know about the crush. TJ, in this example, is indeed a brave young man. The server 40 prepares and formats for member Katie 48 a message, as shown by arrow D1, of: âTJ has a crush on you. He is at Luna Lounge (171 Ludlow St.).â\n\nThus, with the help of some computer technology and a very brief text message (perhaps accompanied by a flattering photo), TJ is able to make his feelings available to Katie. Katie in turn has options. She can ignore the message and stay where she is (perhaps with another man). She can send a scout to the Luna Lounge to check TJ out. Or she can run over to the Luna Lounge herself, and determine the best way to approach TJ during that famously uncomfortable time of first meeting. Also, if both users have identified the other as a crush (a âbilateral crushâ), the system may send a message such as âTJ has a crush on Katie. Katie has a crush on TJ. You two should make out. Reply to introduce yourself.â Bottom line, the dating game has yet more rules, and more opportunities. As indicated next, the messaging between TJ and Katie (as managed by the server 40) is different than the messaging between TJ and others, so that Katie may maintain privacy and security.\n\nWhile the server 40 is generating messages for all of TJ's acquaintances, it may also be generating messages for TJâhere one for each of his acquaintances. For example, with respect to Tony, the server 40 may transmit to TJ a message, as shown by arrow A2, that is the obverse of the message sent to Tony, i.e., âTony is at Happy Place (2600 Forest Ave.) Why not stop by and say hello?â As to friend-of-a-friend Don Pablo, server 40 may generate a message, shown by arrow A3, such as: âDon Pablo is @ IC Muggs. You know him through Tony.â\n\nWith the exception of the bilateral crush discussed above, the message regarding crush Katie is not symmetrical with the message sent to Katie, and thus offers privacy to Katie. Specifically, the message is nonspecific or anonymous about Katie's identify and location. The message, as indicated by arrow A4 may state: âOne of your crushes is nearby. Make yourself look nice.â The system may allow a user to identify a number of crushes, and thus TJ will not be able to know which is nearby. (The system may be set not to identify nearby crushes if the user has too few identified crushes.) Also, the message does not tell TJ where Katie is. Rather, in this embodiment, the message sent conveys: âOne of your users (we're not going to tell you who) is somewhere within 10 blocks (we're not going to tell you where), but we just told them where you are, so go make yourself look nice.â Where the area is sufficiently large (e.g., ten city blocks), the approach provides great anonymity.\n\nIt should also be noted that each user may be provided with other ways to limit their âtransparencyâ to the system. As one main example, the system may be established so that users are only made part of the process above if they are currently âactiveâ in the system. âActiveâ status can be established when a user sends a message, such as an â@â message, and may expire after a predetermined amount of time. Where the system is used for social applications, that amount of time may be, for example, about three hours. With such a time limit, a user is unlikely to be in a location more than three hours after arriving there, so such an approach helps ensure that the user is not visible in the system when they do not want to be, and also helps ensure that âstaleâ information is not on the system. In addition, when a user checks in again, even if it is before a prior check in has expired, the new location entered by the user overwrites the old location.\n\nA user can also limit his or her visibility by not becoming active at all. The user could also simply leave the area, and the system and other users will not know where he or she went. In fact, the location identification described above may be inferential and based on self reporting by the users. In addition, users may send a command to opt out of the system and thus become inactive so that messages about them are no longer sent. Even where the location is determinant, e.g., based on GPS readings, the user may leave inactive a certain time after opting in, or may manually get out.\n\nUsers may also be given the option to limit how their information is shared or used. For example, a user may identify other users who they specifically do not want to associate with, and the system may block information flow between the users. The system might also require dual-affirmation for the closest relationships, such as a first-degree friend relationship. As such, each friend will need to identify the other before they can be classified as friends; unilateral identification of a friendship will only result in functionality like that described for a âcrushâ above. As always, the use of such features should be balanced with issues of usability and interference with the experience offered by the system.\n\nThe messages received and generated by server 40 may take a variety of formats, which can take advantage of the capabilities of the system 38 and of the users' particular devices. For example, because the system involves a sort of on-line community, thumbnail portraits of the community members may be available. As such, those portraits may be transmitted with any message about a user. In addition, though simple, single-line messages are described herein, more complex messages can be transmitted, such as multiple commands in a single line that the server 40 may parse out, or longer commands generated by a user's device in response to selections (such as selection of an icon) by a user.\n\nMessages may also be accompanied by a number of response options. For example, each message may be formatted so that any reply to the message is actually sent to the user who is the topic of the message. In addition, a message may come with a number of preformatted responses, so that a user need not think up and type a reply, but can instead simply push a single button for a preformatted reply, which may be a reply back to the system or to another user who was the subject of a recently-received message. In addition, a user may be given the opportunity to one-button dial or voice message the other user. Moreover, activity with the system may trigger text of voice phone calls or pre-recorded voice messages or photos, etc. to be sent to users. Also, the system may use known methods to format graphical maps that show the location of a user relative to his or her friends, and may transmit such maps to a user.\n\nFIG. 4 shows messages sent and received by a number of acquaintances in a text-messaging system. In general, the figure shows outgoing (designated âoutâ) and incoming (designated âinâ) for each of the membersâTJ, Tony, Don Pablo, and Katieâin the example above. This representation is intended to show time-wise, approximately, how the messages flow in the example. The first messages are at the top of the figure, while the last are at the bottom. The figure also shows actions not discussed in the example above, including activation by Tony and Don Pablo before TJ's activation, activation by Katie at the same time as or after TJ's activation, and activation by another friend named Frankie.\n\nStarting at the top, Tony and Don Pablo, who are friends, activate the service from respective bars where they are located, and the system tells each where the other is. At this point, Tony and Don Pablo could get together for a drink, either at Happy Place or IC Muggs. They may call or message each other to coordinate such a meeting. At some later time, TJ activates from the Luna Lounge, and the system generates appropriate messages, as discussed above, for TJ, Tony, and Don Pablo. Around the same time, but perhaps after, Katie activates. Katie is not a friend of any of the other members, but has been identified by TJ as a crush. Thus, both she and TJ receive messages as discussed above.\n\nThe added message is a âshout outâ message from Frankie, who just got back into town, and wants to meet up with all his acquaintances, which include TJ, Tony, and Don Pablo (but not Katie). His shout-out message causes the message to be sent out to all of his acquaintances. They may then begin text messaging or calling between or among members of the group to determine where everyone can meet. For a shout-out, the initial messaging is one-way, from the shouter to everyone else.\n\nFIG. 5 is a flow chart showing actions by a client and a server in a system for allowing communication among acquaintances. The operations by the client and server are separated by a dotted line to help clarify the actions in the system. However, no particular technical arrangement is intended by showing the two sides. In particular, a formal âclient-serverâ architecture is not needed. Rather, the labels of client and server are simply indicative of the device that is seeking information and the device that is providing information. Of course, the roles of client and server may be reversed as appropriate. In addition, the use of the singular form is not meant to be limiting; the client or server could be one device or a number of devices combined into a system or subsystem.\n\nAs shown in the figure, a client first submits 50 a device location, and the server receives that submission 52. The location may be submitted in a variety of forms. For example, the location might be submitted via a proxy, such as the âproper nameâ of a venue (e.g., restaurant, bar, public place, park, store, arena), or a street address. The location might be more determinant and explicit, such as location coordinates. Or the location could be automatically generated, such as by a GPS feature associated with the device. Users may also be provided opportunities to add venues to the database of venues, and may do so, for example, via a browser-presented mapping program in which the user may first locate local landmarks, and may then select a location to be associated with a venue name.\n\nThe message may also take many forms. One exemplary form is an SMS message. Another is a mobile e-mail message. In such a situation, the server may parse the message to extract usable information from it. For example, the message may have Multipurpose Internet Mail Extensions (MIME) that need to be extracted. In addition, the message itself may need to be parsed or otherwise analyzed step 54). In one example, a system may parse the âtoâ information from the message to determine certain intentions by the user. For example, in the example above, the user sent the message to ânyc@dodgeball.com,â thus indicating the user was in New York, and wanted to use functionality of the system dedicated to New York Cityâsuch as restaurants and bars in New York. Identification of such information can, for example, allow the system to distinguish a message â@Mortonsâ to be directed to a Morton's restaurant in New York City, Chicago, Dallas, or Minneapolis, depending on the prefix placed before the â@â symbol.\n\nThe system may extract out of the âfromâ field identification information about the user, so as to allow access to the user's profile. Such information is needed to determine, for example, who the user's friends and crushes are, and what their preferences are. Friends may be identified by a simple table look-up, while friends-of-friends can be identified with a database query. In addition, the message itself can be broken down, such as into a prefix or command portion, which could contain for example the symbols @, ?, !, or /, and a message portion, which could include a venue name or a question. Such interpretation of the message components is shown at box 56.\n\nThe system may then use the extracted information to perform functions for the device. For example, the system may initially verify the user by comparing the user identification information against a table of current members (step 58). If the user is not a member, the system may send a message 60 that the device may receive and display 62. The message could, for example, simply state an error based on the fact that the user is not a member. The message could also include an option for the user to become a member immediately.\n\nWhere the message is an â@â message, the system may cheek to see if the location information (such as a location proxy in the form of a venue name) is present in the system (step 64). This may involve, for example, comparing a received venue name against a list of venues for which the location is known (and may also check common misspellings of the venue name). If the venue is unknown, an error message may be sent by the server (box 66) and displayed by the client device (box 68). The server may also resolve the location 70, such as by retrieving geographic coordinates for a location from a look-up table having venue names and corresponding geographic coordinate locations, such as GPS coordinates. The distance between two locations may then be computed by known methods. Also, particular venues may have their separation distance determined beforehand, and such a distance may be used. Thus, location and distance may be determined both explicitly and implicitly, or by any appropriate approach.\n\nThe server may then test for all acquaintances of the client's user who are active in the system, retrieve their location coordinates, and check the first member's location against those other locations (box 72). Friends-of-friends and other similar relationships (e.g., users sharing certain common features in their profiles) can also be identified. The distance between users can be computed using well-known techniques, and high degrees of accuracy are not critical. Once a subset of members, which consists of (1) acquaintances, (2) who are active in the system, and (3) are nearby, are identified, the system may then format and transmit appropriate messages to each relevant member as described above (boxes 74, 75). The user of the client device may be sent one or more messages as discussed above (box 76).\n\nThe system may also provide for messaging between and among users who have not yet identified themselves as friends of each other, or who are not even acquaintances of each other. For example, the system may perform âmatchesâ between or among two or more users with information in the user profiles. For example, users having a particular hobby that are active in the system and proximate to each other may be identified. In such a system, the server may generate, and each user's device may display, a message such as: âRon Mexico is @Luna Lounge, and like you, he is an AC/DC fan. Reply to send a message to himâ ( boxes 77, 78, 79).\n\nWhile the steps in the flow-chart are shown as occurring in a particular order for exemplary purposes, any useful order could be employed. Thus, for example, verifying a user could occur later in the process, or lack of verification could be inferred from an error created when an attempt to match the user to a database occurs. Also, additional steps may be added to the process or steps may be removed. For example, submissions by users may be checked for more than just location and acquaintances, or for factors other than location or acquaintances. Also, the order for receiving and sending messages, and the formats in which messages are received or sent may also be changed.\n\nFIG. 6 is a schematic diagram of a system 80 for managing communication among acquaintances. For illustrative purposes, the system is shown in a simplified, schematic form, but it could be, and would be expected to be, much more complex. However, the functionality of the system to be described can operate on a number of systems, as would be understood by a skilled artisan, and the particular implementation of the system is not critical.\n\nAs shown, system 80 comprises a sub-system, which itself may be a computer system 82 such as a computer server or group of servers. Computer system 82 functions to communicate with the outside world, such as through a connection to a public network like the Internet 84. System 82 may also be connected to or through other networks, such as a local area network (LAN). Such a second connection may permit for monitoring, maintenance, and updating of the computer system 82 by an administrator. The Internet 84, as anyone knows, can be further connected for communication to any of a variety of other systems and sub-systems. As shown in this example, the systems include cellular networks 88, 90 that may communicate with mobile devices 94 through antennae on towers 92. Communications between and among these systems may follow standard protocols and guidelines, such as for SMS or MMS text messaging, e-mail, WAP operation, TCP/IP, or UDP, including with applications programmed (e.g., j2ME) to provide alerts while listening for incoming data.\n\nThe computer system 82 includes a number of components that allow it to communicate and to have functionality like that described above. For example, interface 86 may handle communication with the world outside computer system 82. The interface 86 may comprise, for example, a web server and/or a mail server. In one embodiment that allows for simplified operation, messages from users can arrive in a common e-mail in box, and be handled in order to extract information from the messages. Messages may also be received as SMS or MMS text messaging. Interface 86 may also comprise other servers or combinations of components.\n\nArriving information, such as in the form of messages, may be first handled by parser 96, which may be programmed in a conventional manner to recognize certain information in a message, extract it from the message, and place it into a form that is usable by the computer system 82. In a typical text message, the information may be in MIME headers such as To, From, Subject, and Body. The format of incoming messages may vary from carrier to carrier or may vary for other reasons (e.g., e-mail versus SMS), so particular parsing routines may be used to match the identified carrier for the incoming message.\n\nWith the information extracted from the message that enveloped the information, a message analyzer 98 may look at each piece of information, as described above, to determine: (a) what city the user is in; (b) who sent the message; and (c) what the user is trying to do by sending the message. For example, the system may first look at the âtoâ field to determine which program or system to use, by assuming, for example, if a user sends a message to ânyc@dodgeball.com,â then the user is in New York City. The system will thus infer that the user is in New York City, and will deliver content and answers that are relevant to New York City.\n\nThe system may then look to the âFromâ field to determine who sent the message. For example, the message may be âfromâ 9175551212@vext.com, which could be a reformatted address for a text messaging cellular telephone. The message analyzer 98 may initially split the data at the â@â sign, using the data to the left to determine who the user is and using the data to the right side to determine if the message is coming from a mobile device at all. The data to the right of the â@â sign may be compared to a database table of all the accepted e-mail hosts so that, for example, users who are not sending from a mobile device are told âyour device is not currently supported.â\n\nThe data to the left of the â@â sign may be compared to a database table of user identification numbers, such as telephone numbers. The identification data may then be used, e.g., by friend identifier 100 to look up all friends, and friends-of-friends for the user, and then to determine which of those users is currently active in the system (e.g., logged-in in the last three hours).\n\nThe locations of the active users identified by the friend identifier 100 may be computed by location engine 102, and the distance between respective users may be computed by known methods to identify which users are proximate to each other (e.g., within ten blocks of each other). Various parameters may be used by location engine 102, such as parameters that set the distance between users that controls whether the users receive messages about each other. For example, the distance may be a predetermined distance (e.g., ten blocks) or may vary based on location (e.g., closer for areas, like a downtown, where people can expect to walk from venue to venue), time of year, weather (e.g., closer when it is cold or raining outside), or other appropriate factors.\n\nThe system may be modular to allow for multiple applications running on a common platform. The platform may include, for example, the interface 86, parser 96, message analyzer 98, and location engine 102. The platform may thus be established to verify users, establish their locations, and communicate with them. Various applications may then use that information to provide certain social functionality, such as that described herein with respect, e.g., to FIGS. 5 and 16. Standard programming interfaces may also be defined for the platform to make development of applications easier. Such a system may allow for ready development of new applications that can be readily incorporated into a common system with which users are already familiar.\n\nThe parser 96 or message analyzer 98 may also extract the âsubjectâ and âbodyâ fields for the command that the user has sent. As noted above, the command can be comprised of, for example, an ascii character such as !, ?, or @ as a short-hand indication of the user's intent. The character may be followed by one or more commands or parameters.\n\nOne command is the âatâ or â@â command, which allows a user to identify his or her location, such as in a particular venue or at a particular address. Exemplary uses of this command are described above and below. As noted, this command notifies certain other users of the requesting user's location, and also identifies the person as âchecked inâ or active in the system (so that the user will receive messages from other users, at least for a period of time).\n\nAnother command is the âshout out,â or â!â command, which as described above, causes a message to be sent to all of the users in a particular group, such as a group consisting of the friends of the person requesting the shout out. The shout-out command may also allow a user to broadcast a message to all other users in a particular proximity (whether geographic and/or time frame), regardless of their acquaintance relationship. The syntax of this latter option involves preceding the â!â command with a location identifier, such as âAce Bar!hello there,â so that everyone recently activating near Ace Bar receives the message â[User] is @ Ace Bar and says âhello thereâ @ 11:59 p.m.â If the user instead says â!party at my apt tonightâ, without specifying a venue before the command, the message will be broadcast to all friends of the user, but not friends-of-friends (though in other examples, it could also be configured to be sent to friends-of-friends, or even more distance acquaintances). The message could be, for example, â[User] says: âparty at my apartment tonightâ (11:59 p.m.)â Other formats for messages may be employed, as would be understood by a skilled artisan.\n\nA third command is the âlisten,â or â.â command, which allows a user to opt-in with their location but without broadcasting their whereabouts to their friends. For example, the user may enter â.Luna Loungeâ. In such a situation, the user will be added to the database of active users, but no messages will be sent out about the user's location. Thus, for example, if a friend or friend-of-a-friend opts-in or activates within the appropriate distance of the user, the user will receive a message, but the friend or friend-of-friend will not. The system may also be configured to allow other users to request âlisten blockingâ so that their location is not transmitted to any user requesting listen mode.\n\nA fourth command is the query or â?â command. This command may be part of a request such as âAce bar?â, which will look up the query in a database related to potential queries, and will return information corresponding to the query. In the example, the system may return the venue name, address, and cross street, such as in a message like: âAce Bar is at 531 5th Street (btw Ave A & B) 555.867.5309. Reply with @venue name to check it out!â Users can also search for nearby âattributesâ by sending the name of the venue they are near, as well as what they are looking for. For example, sending âAce bar?pool tableâ will return a list of all locations closest to the geographic coordinates of the Ace Bar that have either (a) a âpool tableâ attribute in the database, or (b) a user-submitted comment that contains the word âpool tableâ or a near synonym. The returned message may take the form of âWe found 3 matches for âpool tableâ near Ace Bar: Black Star, Max Fish, Whiskey Ward.â Each of the identified locations may be marked, such as by a hyperlink, so that the user may easily seek more information about the location. In addition, the system may follow up by providing a small map showing the location of the user and the location of a selected venue. Such functionality may be implemented with known techniques. In these scenarios, the user's location is not made available and messages are not sent to other users. However, if the user selects one of the venues, any later commands that involve communication could be provided with the location as a default. For example, if the person selects âBlack Starâ above for more information, the next time the user presses â@â, the system may automatically fill in âBlack Star,â assuming that the person ended up going to Black Star.\n\nIn addition, a user may establish permanent queries that are run whenever a user activates, or that are run constantly or near-constantly (e.g., when the user's device is GPS-enabled). For example a user may establish a permanent query for Starbuck's stores and be told whenever he or she is are near such a store.\n\nOther commands may also be used with the system, and may include combinations that use the commands above. For example, a user who wants to join a system-directed social session (described below) may enter âjoin@Luna Loungeâ to show that they want to join, and that they are presently at the Luna Lounge. This command tells the system the function they would like, and also passes a parameter to the system that allows the system to place them in a social session. The computer system 82 may also be provided with a number of appropriate databases. For example, acquaintance database 106 may provide tables to show the friends of each particular user. This database 106 may then be queried to identify other relationships between and among users. User profiles database 108 may store data regarding profiles for each user in the system and may also store information about venues, such as venue reviews. Location databases 110 may correlate information about venues, such as venue names, with geographic coordinates for each location. Finally, administrative database 112 stores information needed to make the system 80 operate properly, such as workflow logic and rules for events that are managed by computer system 82. The pictured databases are exemplary only. Other databases could be employed, and the databases may be arranged in any appropriate manner. Message generator 104 may interface with the other components of computer system 82 to generate messages to be sent out to users of the system 80.\n\nFIG. 7 is a cartoon showing exemplary uses of a system for enabling communication between and among acquaintances. This cartoon was published in the June 2004 issue of Wired Magazine, and shows exemplary applications of the service known commercially as Dodgeball. In the first frame, a user enters an â@â command as described above. The user reaches the first venue in the second frame; it is a dead venue and the user is jonesing for some Ms. Pac-Man, so the user enters âLuna Lounge?Ms. Pac-Man.â The system responds with nearby venues that are associated with Ms. Pac-Man (such as through a review that another member completed for a venue). While playing Ms. Pac-Man in the third frame, the user learns that another friend is at a nearby venue, and after going there (frame 4), learns that a cute friend-of-a-friend is at the same place. The user and the friend-of-a-friend (who received a message about the user) can then break the ice by messaging, and may then talk to each other. In the final frame, one of the user's other friends, having spied Courtney Love dancing on a table (this is a fictional story), has sent out a âshout outâ message telling all their friends to converge on the area. Thus, in particular implementations, the features described herein can provide new and rewarding social interaction that can be enlightening, entertaining, and educational.\n\nFIG. 8 is a screen shot of a sign-up screen for a social software web site. Such a site may be employed by a system to allow users to readily enter and track information about themselves and their acquaintances. That information may then be used with a messaging system like that described herein. Generally, users register and manage their settings and relationships via a web site. The web site serves as a front end for a database (which may comprise one of more distinct databases or database components such as tables) that defines users' attributes and the relationships between and among users. In this way, the web site and database can be similar to those provided by other various ârelationshipâ applications such as Friendster, Orkut, Tribe, and LinkedIn. The core links are between friends (or direct acquaintances). Database queries may determine friend-of-friend relationships. The web site may give users the ability to invite new friends to join the site or community, and may approve and/or deny relationship connections.\n\nIn one feature, the web site allows a user to select a friend. Such a selection may be made of someone who is not yet a member (e.g., by having the system send them an e-mail invitation to join the community, as a friend of the user) or of someone who is a member (e.g., in a âfriend requestâ). In one implementation, the two may not be connected as âfriendsâ until both have approved of the relationship. When they are made friends, there may be two database entries: one connecting User A to User B, and another connecting User B to User A. The system may also allow a user to identify other users who should not receive information about their location (i.e., to âblockâ another user's reception). In one embodiment, this is accomplished by allowing the user to break one end of a connection without breaking the connection, and without letting the other person know the break has occurred. To do so, the system adds an additional field to the database that allows a user to block one side of a relationship without destroying or deleting the connection in the database, so that when a user opts in, checks in, or activates, they are not broadcasting to their raw friends list, but instead are broadcasting their location to everyone except those individuals who they have chosen to block.\n\nIn another feature, users may identify members of the community on whom they have a crush. For example, the web site may display normal profiles or âambient profilesâ of various other users, which may include pictures of the usersâmuch the way dating web sites contain profiles of users. The normal profiles may contain information that the user has entered, such as age, religion, sexual preference, gender, political persuasion, drinking/smoking/drug habits, hobbies, favorite movies/plays/songs, etc. The ambient profile may be built, not from information consciously entered into the profile by the user, but by observations of contributions the user makes to the community over time. For example, the system may make note of locations at which the user has recently checked in, what venues the user has commented on or written reviews about, and which friends (or friends-of-friends) the user has recently been associated with. Thus, a user's ambient profile changes constantly over time because they are interacting dynamically with the community.\n\nA user may create a âcrush listâ of, for example, up to five other members, with whom the user is willing to make known their feelings. For example, the user may be physically attracted to another user's photo, or may like certain selections (such as hobbies) in the other user's publicly available profile. Users may add to or edit their crush lists at any time. Users may also choose to be made invisible to any crushes also, for example, if they are constantly being annoyed by messages about crushes. A separate database table may be used to track who has a crush on whom, and to deliver this information in real-time to users. For users who do not want to be part of the crush scene, the database table may simply contain a blocking âflagâ for a particular user. That flag can be checked by the system before any crush messages are passed relating to such a user.\n\nAs shown in FIG. 8, a user can enter standard profile information such as name, e-mail address, gender, user name, password, and telecommunications information. Some of this information may be made available to other users, while some (e.g., password and e-mail address) may be kept private. Additional information may also be gathered, such as by using a continued form similar to that shown in FIG. 8, by question and answer, or by other appropriate method. For example, various sorts of personality tests (e.g., Myers-Briggs) may be provided to help learn more about the user's preferences. In addition, profile information may be imported from other applications.\n\nFIG. 9 is a screen shot of a test screen. This screen may be shown to a user when they are setting up an account in the community or at other appropriate times. As shown, the system sends a test text message to a mobile device, and allows the user to click on an appropriate choice in the web browser to indicate whether the test message was properly received. In general, the user will not receive a message if their device does not have text messaging capabilities.\n\nFIG. 10 is a screen shot of another test screen. This screen is shown if the user provides a negative answer to the question on the screen of FIG. 9. The screen provides links to help screens, and also notifies a user that they can still send some messages to other users even if they cannot receive messages.\n\nFIG. 11 is a screen shot of a profile screen. In general, various profile screens may be provided, each of which will display information relevant to its intended audience. For example, a public profile screen might show the person's photo, hobbies, screen name, and other interests (such as those that would be available at any social or dating site). A restricted public profile might show additional details, but be available only to users who have already been identified as friends. A private profile screen may contain even more information, such as passwords, history (e.g., recently-visited venues), and extra profiling details that should not be available to other users. In the private profile screen shown in FIG. 11, the user is also provided with actions they can take, such as changing their photo, inviting new friends, and identifying current members as friends. The screen may also provide simplified instructions for the system\n\nFIG. 12 is a screen shot of a photo update screen. This screen provides a simple interface that allows a user to browse for their photo on their computer and then to select it to be displayed by the system. The screen may also provide instructions for uploading a photo.\n\nFIG. 13 is a screen shot of an invitation screen. This screen allows a user to enter a single message to be sent to their friends, including friends who are not members of the system, and also to include the e-mail addresses of multiple people. In using the term âfriendsâ here, the reference is to real-world friends, and not simply to people who are a first-degree acquaintance of the user, or that are even users of the system at all. The system may append additional information to the message, such as a hyperlink to a screen that allows friends to sign up with the system.\n\nFIG. 14 is a screen shot of a friend management screen. This screen provides a simplified format by which to identify certain people as full friends who will receive all information about the user and his or her location, and other people as partial friends who will not receive messages and from whom the user will not receive messages. In addition, other screens may be provided wherein a user can enter information about a friend (such as first and last name) to get information on the friend if he or she is a member of the community, or to enter the name of a venue to get information on the venue (such as reviews from other users).\n\nFIG. 15 is a screen shot of a venue screen. This screen includes a search box in which users can enter venue names to search for information on the venues. Users may also add a venue, and may add comments or reviews for the venue. The comments may be free-form, or may follow a predefined format. For example, reviews of restaurants may include pre-set rating scales for taste, service, ambiance, and price, as examples, and may also include a spot for a full textual review. The most recent reviews of any venue may also be displayed initially in the center of the screen, along with pictures of, and links to the profiles of, the users who completed the reviews. An area to the right displays the names and contact information for venues that have been added recently to the system.\n\nFIG. 16 is a flow chart of a system-directed social session. In this process, the server takes a more active role than that discussed above, acting much like a square dance caller. In general, the system identifies all active users in an area who have recently signaled their intent to opt into the square dance event. For example, users may send a message like: âjoin@Luna Lounge,â which will indicate they want to join the event, and also indicate the general area in which they are located. The system may then iteratively identify commonalities among sub-groups of users in a particular area who want to play, and send users with commonalities to a single venue for a period of time. The system may simply send the users to a location and then remain silent, letting the users try to discover what they have in common. Or the system may identify the common characteristic through messages to the users, and then suggest topics of conversation, or otherwise provide suggestions or assistance in making the group's social interaction better. In this manner, the system may act as an active catalyst for group social interaction.\n\nIn the flow chart, the system first gathers profile information for users. Such gathering may occur when the users sign up with a service and fill out profile information, such as hobbies or other interests. The information may also come from analysis of venues at which the user has identified himself or herself in the recent past. In addition, the profile information may be derived, when permission is granted by the user, from other activities of the user such as search requests made to a search engine, or by an analysis of a user's recent e-mail activity. Again, such analysis would depend on first obtaining the user's permission.\n\nA square dance event may then be scheduled. For example, there may be a standing event that begins in one locality or even nationwide, such as on Tuesday nights at 8 p.m. local time. Also, organizations such as groups of bars, restaurants, coffee houses, or museums may organize an event and may register the event with the system. The organizations may then promote the event, and may also receive assistance from the system in promoting the event. For example, the system may send messages notifying users who have used local venues about the event, or may include the event on a schedule of events at the system web site. Appropriately-tailored promotional materials or advertising targeted to the particular users or to the type of event may also be provided to users in messages or at the web site using known mechanisms for delivering promotional and advertising content. A group of users may also band together and schedule their own event or events.\n\nAt some time before the event starts (or even during the event), the system may receive opt ins from users. The opt in messages, as shown above, may include for example, a âjoinâ command, an â@â command, and a location for the user (such as a venue name). As opt ins arrive, the system may keep track of the number of active users in a particular area. As the time for the event approaches, the system may analyze the number of users in an area, and if the number is too low for an effective event, may cancel the event by sending cancellation messages to all active users in the area, may simply instruct the active users to go to a particular venue or venues if they want to meet other active users, or may instruct the users to move to another area in which it has been determined that there are enough active users to hold an effective event.\n\nAs the time for the start of the event comes very close, the system may then identify groups and sub-groups among the active users for the event. Groups may be identified, for example, according to geographic location. For example, there may be a group bounded by a downtown area and another group bounded by an uptown or suburban area. Generally, the geographic size of the area will be kept small, particularly if bars or similar establishments are involved, so that all venues can be reached by walking.\n\nThe sub-groups may be identified from active users within a group. The sub-groups may be selected based on any appropriate measure of affinity or commonality that will make for an interested group of people. For example, all active users who have identified themselves as viewing a particular movie may be placed in a group. Also, users having similar political or artistic viewpoints may be placed together. Other known measures for determining affinity or commonality may also be used (such as those used by dating systems), and the particular selection method is not critical. For example, users may identify themselves with a particular (e.g., favorite) brand (and perhaps subjective attributes associated with the brand) and thereby receive advertising and messages from the brand or the brand's proxy (e.g., âTell Absolut where you are and they'll tell you the closest after-hours partyâ or âsign up for the Flavor Pill art channel and learn of new gallery openingsâ).\n\nIn this discussion, a distinction can be drawn between and among âchannels,â which may represent certain affinity interests only; âgroups,â which are user-created and allow opt in and opt out by users; and âsets,â such as sets of friends, where only the user can drop other users from the set.\n\nWhen the time for the event arrives, the system may broadcast start messages to all the users. For example, each active user may simply get a message telling them to go to a particular venue in the area. Users may then attempt to identify each other when they get to the venue, or they may be provided a particular area in which to meet by the operator of the venue. For example, a table or discussion area may be marked off for participants in the square dance event. When they all are at the venue, which may take a number of minutes if the area is as large as ten blocks, the users may begin socializing. For example, they may begin, under rules of the event that may be made known to players, to determine why they have been placed together. In such a situation, the system should be established to select a commonality that is discernable by the users. Venues may organize to provide a prize to any groups that can solve their problem in a particular time period for example, free refreshments. The possibility of such prizes could entice more users to participate in the event, and to make participants more active in their socializing.\n\nThe system may also provide the users with supplemental messages, typically with all users in one venue receiving the same supplemental message. For example, where the users are not told their commonality, the system may provide them with periodic hints. Alternatively, the system may provide proposed discussion topics for the group, perhaps based on the common feature or features of the group. For example, for a group in which all the members grew up in rural regions, the system may transmit a topic of: âIs life better on the farm or in the city?â For a group that viewed certain movies in the recent past, the system may ask the members to debate the strengths and weaknesses of the two movies. For a group at a particular installation in a museum, the system may ask questions about which painting is more pleasing.\n\nThe event may have multiple rounds. For example, an event may last an evening, but each round may last, for example, one hour, with discussion occurring for forty-five minutes and âtransitionsâ occurring for fifteen minutes. Other appropriate time periods may also be employed. Thus, when one round is finished, the system may check to determine whether there is time for another round. If there is, a new round may be organized and presented by sending out messages telling each of the users of their next venue. If there is not time, the system may send summaries of the event and update user profiles. For example, each user may receive their score if the event is scored, and may receive their position among the users. In addition, each user may receive a âleadâ report containing information about other users they met during the eventâif the other users indicated their assent to sharing information. For example, when a round is over, and during a transition, screen names for each user in a group may be displayed on the users' devices, and the users may be given the opportunity to identify the other users with whom they would like to follow up. Organizers of the event may also be provided summary information, and users' profiles may be updated, such as to reflect the venues in which they met and other appropriate information.\n\nIn addition, provision may be made for users who want to âpeel outâ or move âoff the gridâ during an event. For example, two users may really hit it off, and might not want to continue with the event. They may be provided with a command that allows them to be taken out of the event. In this manner, the event can shrink slightly in later rounds without the danger of some groups becoming needlessly small (due to peel outs of which the system is unaware). The system may also require users to make a periodic positive response, such as at each round, to ensure each user is still participating in the event.\n\nThe event may also be scored, apart from awards for individual sub-groups. For example, users in a subgroup may receive points if they guess their commonality quickly (with points decreasing with ticks on the clock or use of hints). Because users âscrambleâ or âtransitionâ periodically, few users will be in all the same sub-groups together. Thus, each user may receive a score equal to the scores of all the sub-groups in which the user participated (or as an average of the sub-groups). At the end of the event, awards may be given to the top scorers. An awards ceremony may even be held, with a recap of the event. For example, where the event happens weekly, each venue in an group of venues may be given the responsibility to host the recap party each week. Again, this provides additional benefits for the venues to get involved, and provides additional promotion for the system.\n\nThis process is meant to be exemplary only, and may be expanded in any number of appropriate manners. For example, venues can sign up with the service to sponsor a square dance, such as on nights that are slow. These venues need not be just bars-they could also include museums, coffee houses, or restaurants (which might serve appropriate appetizers for such an event).\n\nThis square dance process may, in particular embodiments, provide additional social activities for users, and additional commercial possibilities for sponsors. Advertising may be provided to the users on their mobile devices, and such messages may be customized, such as according to the type of venue in which the users meet, or the topic that the users have in common.\n\nThe various embodiments described herein may also be accompanied by other services for users. For example, additional messages such as promotional or advertising messages may be provided to users. Such messages may be targeted in various ways to be particularly helpful to users also. For example, venues may be associated with particular concepts or key words, so that when a user opts in from a venue, the system may provide messages associated with the key words or concepts for the venue. For example, where the venue is a bar, the user may be provided information about promotions at the bar or at nearby competing bars, or could also be provided with a promotion for a particular brand of alcohol. The messages may also act like coupons for users. For example, venues may have connections to certain advertisers, and a user may show a bartender, for example, an ad on their telephone, which the bartender may clear using an identification number unique to the venue, and may thereby register with a system the fact that the venue honored the coupon. As such, the advertiser may then rebate or provide a certain amount of money to the venue.\n\nOther modes of transmitting advertising or promotional material may also be employed. For example, advertisers could sponsor certain venues, events, or other objects, e.g., âopt in to be friends w/Absolutâ. Exclusive memberships may also be provided to users, and members may be provided with special âinsideâ information, e.g., âpay to be part of the Flavorpill group and find out about exclusive parties.â Channels may also be provided, to which users may subscribe (e.g., âlower east side dealsâ), and advertisers may purchase ads on the channels (e.g., through a self-service model such as Google AdSense). The advertisers could also select criteria on which to ping users, e.g., âAll users within 10 blocks of X on Sunday between three and six p.m. that match this demographic/psychographic profile.â\n\nA number of embodiments of the invention have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example, SMS messaging can be replaced with other sorts of messaging, and can be augmented in various ways, such as with graphical elements. Accordingly, other embodiments are within the scope of the following claims."
    }
}