{
    "id": "correct_foundationPlace_00079_0",
    "rank": 32,
    "data": {
        "url": "https://arxiv.org/html/2407.05963v2",
        "read_more_link": "",
        "language": "en",
        "title": "6GSoft: Software for Edge-to-Cloud Continuum",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "6G",
            "SE",
            "sustainability",
            "scalability",
            "energy efficiency",
            "system architecture"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Muhammad Azeem Akbar1, Matteo Esposito2, Sami Hyrynsalmi1, Karthikeyan Dinesh Kumar3, Valentina Lenarduzzi2,\n\nXiaozhou Li2, Ali Mehraj4, Tommi Mikkonen3, Sergio Moreschini2,4, Niko Mäkitalo3, Markku Oivo2,\n\nAnna-Sofia Paavonen3, Risha Parveen4, Kari Smolander1, Ruoyu Su2, Kari Systä4, Davide Taibi2,\n\nNan Yang1, Zheying Zhang4, and Muhammad Zohaib1\n\nAbstract\n\nIn the era of 6G, developing and managing software requires cutting-edge software engineering (SE) theories and practices tailored for such complexity across a vast number of connected edge devices. Our project aims to lead the development of sustainable methods and energy-efficient orchestration models specifically for edge environments, enhancing architectural support driven by AI for contemporary edge-to-cloud continuum computing. This initiative seeks to position Finland at the forefront of the 6G landscape, focusing on sophisticated edge orchestration and robust software architectures to optimize the performance and scalability of edge networks. Collaborating with leading Finnish universities and companies, the project emphasizes deep industry-academia collaboration and international expertise to address critical challenges in edge orchestration and software architecture, aiming to drive significant advancements in software productivity and market impact.\n\nIndex Terms:\n\n6G, SE, sustainability, scalability, energy efficiency, system architecture\n\n•\n\nProject Name: 6G Software for Extremely Distributed and Heterogeneous Massive Networks of Connected Devices\n\n•\n\nAcronym: 6GSoft\n\n•\n\nProject coordinator: University of Oulu (Davide Taibi)\n\n•\n\nDuration: May 2023 - April 2026\n\n•\n\nFunded by: Business Finland\n\n•\n\nI Introduction\n\nIn recent years, 5G communication technologies have enabled connectivity and innovation [1]. However, the horizon is already set on the potential of 6G, the next generation of a wave of innovation in wireless communications [2]. The core components of the 6G infrastructure are heterogeneous networks and a massively distributed nature [3]. Therefore, 6G requires innovative software development and system integration approaches seamlessly blending emerging technologies like AI, Quantum Computing, and Edge Computing [4, 3, 5, 6].\n\nHowever, current software architectures and development methodologies fail to address the scalability and energy efficiency required for 6G systems [7, 5, 6, 1]. The ambitious 6G vision and conjectured use cases lead to demands in data rates above 100 Gbps, fraction of millisecond (ms) latencies, and reliability in the order of 10−7superscript10710^{-7}10 start_POSTSUPERSCRIPT - 7 end_POSTSUPERSCRIPT to 10−9superscript10910^{-9}10 start_POSTSUPERSCRIPT - 9 end_POSTSUPERSCRIPT, which are beyond what is currently supported by 5G [8]. Therefore, also Kubernetes , the most common orchestrator for cloud and edge computing, needs external help to properly scale and be of any use in this new scenario [9]. On the same topic, a recent study showed how Kubernetes was outperformed in IoT use cases leveraging 6G networks [10].\n\nThe 6GSoft project, a Finnish project funded by Business Finland, aims to investigate sustainable software solutions that are robust, scalable, and energy-efficient. This initiative is not just about keeping pace with technological evolution. Still, it is also driven by the strategic necessity to secure a competitive edge in the global market and avoid past pitfalls experienced by major Finnish corporations in the telecom sector. The goals of the project are manifold:\n\n•\n\nDevelop sustainable software development methods tailored for the 6G era, focusing on processes and tools that integrate with heterogeneous systems, including IoT, AI, and quantum computing (QC).\n\n•\n\nImplement energy-aware (EA) orchestration and scalability models that minimize energy consumption while maximizing performance across distributed networks.\n\n•\n\nFoster a business-driven software development model that aligns with emerging 6G technology requirements, ensuring that software architecture and business strategies are cohesively integrated.\n\nThe outcomes of the 6GSoft project will have a profound impact on both industry and academia. By setting new benchmarks in software development for next-generation edge-to-cloud systems, the project aims to significantly enhance software businesses’ productivity, speed, and quality, potentially increasing the market shares by substantial margins.\n\nThe collaboration framework, established through this project, involves four Finnish universities and four local companies, aiming at promoting a robust ecosystem for future technology development in the context of edge-to-cloud and 6G-based systems. Therefore, our paper aims to introduce the 6GSoft project concepts and provide an overview of the literature we are considering as the baseline of our works.\n\nPaper Structure. Section 2 introduces the project consortium. Section 3 presents the project objectives and the expected outputs. Section 4 presents the current results. Section 5 describes the related works, while Section 6 concludes.\n\nII Consortium Description\n\nThe 6GSoft project consortium includes a blend of academic and industrial partners, each bringing unique expertise to address the challenges of 6G software development:\n\nII-A Academic Partners\n\nUniversity of Oulu - Lead partner with software architecture and engineering expertise for cloud-native systems.\n\nLUT University - Focuses on software business ecosystem, digital artifact design, and business models for 6G software.\n\nUniversity of Jyväskylä - Specializes in orchestration technologies and coordination aspects for enabling the future’s 6G Software.\n\nTampere University - Focuses on requirements management through AI-assisted techniques and privacy-aware distributed architectures.\n\nII-B Industrial steering group\n\nBittium Wireless Oy — Ericsson Oy — Aidon Oy — Wirepas Oy\n\nIII Objectives and Expected Outputs\n\n6G technology is set to profoundly impact SE by ushering in faster data transmission speeds, ultra-low latency for real-time applications like remote surgery and autonomous vehicles, and the ability to connect many IoT devices simultaneously [11]. Thus, edge computing capabilities should expand and be optimized to support the daunting computational tasks demanded. Moreover, more devices connected to 6G infrastructure will call for new security and privacy challenges toward robust encryption and data protection in SE. On the same vein, EAorchestration will also be a key factor, due 6G’s extensive support for device connectivity, where resource efficiency and dynamic allocation policies must be implemented to optimize energy consumption. New AI models such as “liquid AI” already exhibit promising results in the new 6G nodes [12]. On the one hand, integrating newly AI-based technologies and paradigms, 6G can potentially optimize network management and security as 6G networks become more pervasive, demanding innovative encryption and cyber defense solutions [13, 14, 12]. On the other hand, energy efficiency nowadays is a non-negligible aspect. Ensuring robust security and privacy protections will also be critical. Finally, SE development methodologies, e.g., agile, should be tuned to keep up with higher speed, lower latency communication, and faster development cycles for much-needed critical software updates to real-time infrastructure.\n\nTherefore, the 6GSoft project has four main objectives: (1)To develop sustainable SE practices for the 6G era. (2) To create EAorchestration and scalability models. (3) To provide architectural support for advanced cloud-continuum systems. (4)To formulate business-driven software development models suitable for 6G technologies.\n\nIn the following, we introduce our approaches for meeting the objectives with the work conducted in the project’s work packages.\n\nIII-A Sustainable SE practices for the 6G era\n\nCurrent SE practices require adaptation to meet the rapid changes demanded by 6G systems. Agile methods and CI/CD adoption are established practices, but their suitability for the 6G era needs assessment. We focus on developing new high-velocity development and deployment practices, encompassing requirements management, metrics, methods, and advanced static and dynamic analysis tools [15, 16, 17]. These efforts ensure high software quality while minimizing technical debt and development costs. We also aim to evaluate architectural quality and prevent degradation over time using software metrics, patterns, and Design Rule Spaces [18, 17]. Additionally, we are enhancing methods for continuous requirement analysis to mitigate inconsistency and facilitate seamless improvements [15].\n\nIII-B EA orchestration and scalability models\n\nAs one of the core technologies for 6G, edge computing is an emerging approach that utilizes the computing capabilities of mobile devices[19]. To maximize the potential of edge computing, efficient management of containers running in these environments is essential, which requires container orchestration. We are developing EA and highly optimized orchestration and scalability systems. These systems will collect live, reliable data from operational environments (systems and networks) and include diagnostics for analyzing computational evolution. Given that many 6G technologies are still in development, we plan to focus on crucial use cases selected with project partners, such as smart hospitals, real-time AR assistance, future traffic systems, connected vehicles, and generative AI Internet applications to focus on the specific domain or task of which energy should be optimized.\n\nFrom our analysis, we will determine the requirements for orchestration and scalability, guiding the selection of systems and technologies that allow flexible deployment and configuration of future AI-powered applications. To develop orchestration models, we will conduct experiments to assess the practical feasibility of the selected approach and understand, e.g., how state-of-the-art AI models can be harnessed and deployed to the contemporary computing environment. Once the orchestration models are defined, we will explore the potential of artificial intelligence in orchestration and scalability. Our EAorchestration and scalability models will include mechanisms to adjust resource allocation based on real-time energy consumption data dynamically. Once the orchestration models are defined, we will explore the potential of artificial intelligence in orchestration and scalability, ensuring that energy efficiency is a core consideration.\n\nIII-C Architectural support for advanced 6G software\n\nGiven the complex nature of current software architectures, orchestrating large-scale systems demands substantial resources [20]. We aim to advance software architectures to facilitate seamless operations for 6G-enable new applications and scenarios.\n\nIII-D Business-Driven Development Models\n\nWe are exploring how 6G can transform business models and processes, focusing on creating frameworks that enable companies to leverage 6G capabilities for competitive advantage. We analyze the architectural challenges and produce solutions for 6G software. The solutions are realized as architectural patterns and anti-patterns, standardizable interfaces, and demonstrators that work as a proof-of-concept.\n\nIV Summary of Current Contributions\n\nRegarding sustainable SE practices for the 6G era, we reviewed the literature on AI-assisted requirements engineering [21]. Our study unveiled a trend of large language model (LLM) based approaches for requirements traceability. We further investigated the effectiveness of these LLM-based approaches to find the traceability links between code commits and requirements. We are currently expanding the programming languages on which we tested the commits-to-requirement traceability with promising results. We also investigated the privacy and regulatory challenges involved in the data and machine learning models for 6G infrastructure [22, 23, 24, 25, 26, 27]. Moreover, we reviewed the state-of-the-art orchestration technologies to understand the feasibility of these technologies for next-generation software in terms of the methods, techniques, and tools reviewed and developed [28, 29, 30, 31] for this purpose.\n\nRegarding architectural support for advanced 6G software We researched a prototype for next-generation software applications involving decentralized deployment in the cloud-edge continuum, leveraging machine learning and language models. Moreover, relevant to this context is our work, as mentioned earlier on prototypes for decentralized, cloud-edge continuum software applications that leverage machine learning and language models [33, 34, 11, 25] and multi-layered cloud-native system architecture reconstruction, including testing, pattern detection, and maintenance [31, 35, 36, 37, 38, 39, 40, 41, 27, 31]. Futhermore, we identified the current research status in SE practices focusing on software process, typical software architecture, orchestration, and offloading methods applied in the context of 6G [11, 37].\n\nFinally, regarding business-driven development models, in the context of 6G software business ecosystem modeling, we investigated bridging the gap between 6G technology and software business, with emphasis on the critical role of the business perspective for 6G commercialization [42, 43, 44]. Moreover, we conceptualize an analysis of the 6G ecosystem pioneering research to understand the components, including related concepts, sub-concepts, antecedents, and consequences of the 6G ecosystem. In this context are also the above-mentioned contributions on privacy and regulatory challenges involved in data and machine learning for 6G infrastructure [22, 23].\n\nMoreover, we studied the potential role of QC in shaping the future of 6G technology. We discussed the issues of QC for 6G and identified 15 critical applications, which include quantum machine learning optimization, quantum positioning, and enhanced signal processing [43]. These applications show the promise of quantum technologies and the vision of a quantum internet in enhancing networks’ performance, security, and efficiency. Altogether, these works offer a systematic approach to incorporating quantum technologies into 6G networks with new perspectives. In another study [44], we proposed a success probability prediction model for secure quantum communication in 6G technology employing QKD as a security boosting mechanism. This model incorporates predictive analysis for the probability of secure communication channels to address the critical cyber security requirements for 6G.\n\nV Impact and Threats\n\nA possible threat to the validity of our preliminary results on sustainable SE practices for the 6G era lies in the evolving and speculative nature of 6G technology [4, 3, 5, 6]. The reliance on current literature and prototypes may not fully capture future complexities and requirements. Moreover, recent studies have investigated the issues in integrating LLMs and QC and their impact on scalability, security, and regulatory compliance uncertainties [45, 46, 47, 48]. Our collective effort will try to address the daunting issue of future 6G development, adapting our models and approaches as the technology progresses.\n\nWe conjecture our collective efforts will impact the development of new 6G-enabled technologies as well as real-time mission-critical applications, such as remote surgery, and also allow massive IoT connectivity while enabling a structured integration of advanced AI technologies in the edge as well the core of the networks.\n\nFinally, despite its broad scope, the 6GSoft project has a clear research plan that will systematically address sustainable engineering, EA models, robust architectures, and business-driven development, ensuring comprehensive advancements in 6G technology. By continuously aligning our research outcomes to the latest advances of the 6G, our project will cross-fertilize ideas between partners, thus improving cross-contributions between academia and industry and significantly contributing to the state of the art.\n\nVI Related Work\n\nVI-A Software Engineering for 6G\n\nRecently, studies regarding software engineering practices for 6G, software process, architecture, orchestration and offloading methods, and business-driven software development have been the main topics for 6G software engineering [11]. Since 2022, the number of published papers has increased sharply in this domain. Amongst these publications, software architecture is the area that has received the most attention in 6G Software Engineering. Other covered topics include software tequirements [49], SE models and methods [50], software quality [51], software orchestration [52], offloading [51] and energy aware [53]. Therein, the software process, architecture, and orchestration publications are still limited, while business-driven software development is nonexistent.\n\nAl-Hammadi et al. [54] implement a collaborative offloading method among MEC servers based on the edge server’s resources and neighbors’ status to alleviate network congestion and formulate a hierarchy SDN-powered MEC network framework comprising three tiers in the method. Habibi et al. [50] provide guidelines on how the novel software building blocks can be integrated and deployed as part of a DevOps workflow and propose an M&O framework for 6G simultaneously. Alotaibi and Barnawi [55] propose IDSoft, a novel software solution that resides across the network infrastructure and leverages 6G enabling technologies. Shukla et al. [56] propose 6G-SDI, an SDN-based green communication method for 6G-enabled Internet of Things (IoT) to control real-time actuation and flow-table configuration. Abdulqadder and Zhou [57] tackle the issues, such as security, quality of service (QoS), and resource consumption issues, through related network slicing and load balancing methods in SDN/NFV-assisted 6G environments. In addition, except for the first two papers that propose the framework in the methods, three other papers present the framework separately. Meenakshi et al. [53] use a framework constructing a design of systematic Wireless Inventory trackers (WIT) using heterogeneous IoT(HIoT) networks over 6G Computing and MEC/SDWAN for improving the prolonged lifetime and low energy consumption for efficient communication in 6G network. Manogaran et al. [52] propose the service virtualization and flow management framework (SVFMF) for the reliable utilization of resources in the 6G-cloud environment. Janbi et al. [58] propose a framework for Distributed AI as a Service (DAIaaS) provisioning for Internet of Everything (IoE) and 6G environments.\n\nRegarding 6G architectures and platforms, Bojović et al. [59] designed a multi-slice architecture to develop highly flexible dynamic queue management software and moved it entirely to the application layer. Alonso-Lupez et al. [60] propose an architecture enabling privacy-aware slicing and security service orchestration. Moreover, Alotaibi and Barnawi [55] propose HFL (hierarchical FL) architecture with an additional offloading mechanism to enhance and evaluate performance in terms of relevant FL aspects, such as accuracy, communication efficiency, and convergence. Tao et al. [61] propose a novel software-defined DTN architecture with digital twin function virtualization (DTFV) for adaptive 6G service response. On the other hand, for the results of ”Platform,” Ateya et al. [51] develop a MEC platform and introduce a seamless migration for complex 5G/6G tasks. Furthermore, Katiyar et al. [49] develop an IoT platform and focus on its middleware layer connection with other layers. Then Cao et al. [62] propose C-ITS, a Cooperative intelligent transport system that allows softened resource management and allocation in 6G networks with autonomy and smart sensing. Unlike the previous, Kamruzzaman and Alruwaili [63] propose a system and use an optimizing computer vision with AI-enabled technology (OCV-AI model).\n\nRegarding algorithms, Ajibola et al. [64] propose a heuristic for energy-efficient and delay-aware placement (HEEDAP) of applications in fog networks (an algorithm). Cao et al. [65] propose an efficient algorithm, labeled TailoredSlice-6G, to implement the tailored resource allocation of slices in 6G networks. Ye et.al [66] propose a heuristic decoupled SFC orchestration algorithm (HDSFCO) with low complexity to minimize the overall resource costs, where fully consider the time evolution characteristics of dynamic network topology.\n\nVI-B AI assisted requirements tracing\n\nIn the era of 6G, collaboration between distributed and heterogeneous stakeholders grows where requirements tracing is critical to the success of software projects. Research on requirements traceability primarily addresses traceability link generation [67, 68, 69, 70, 71, 72], traceability link recovery [73, 67, 68, 74, 75], and bug localization [68, 75].\n\nMany AI methods have been proposed to recover traceability links to achieve reliable results, especially in large, complex software projects with vast repositories, diverse software artifacts, and extensive codebases. Lyu et al.[68] reviewed 40 primary studies from 2011 to 2022, focusing on using Information Retrieval and Machine Learning techniques to generate and recover traceability links. These studies addressed challenges such as accuracy, effort, support, information, and trustworthiness in requirements traceability. Notably, 50% of these studies concentrated on traceability link recovery, while 30% focused on link generation. This finding aligns with [69], which reviewed 53 primary studies from 2012 to 2021, noting that 26 studies were dedicated to requirements traceability. Other secondary studies on AI for requirements engineering such as [73, 67, 74, 70, 71, 76, 75] also emphasized the importance of requirements traceability in research.\n\nBefore 2018, requirements tracing primarily relied on IR techniques, using methods like TF-IDF, VSM, and Random Forests to automate link recovery between issue reports and commits. Bug localization utilized algorithms such as SZZ, while LSI and LDA improved trace link accuracy. After 2018, research evolved to hybrid techniques, integrating ML, NLP, and other AI methods. Deep learning approaches, including GRUs and LSTMs, enhanced issue-to-code mapping and bug-source identification. Recent studies [77, 78, 79] highlight large language models (LLMs) like BERT and neural networks for better requirements management, as seen in [75] TRACEFUN framework, which leverages unlabeled data to improve traceability link recovery.\n\nVI-C Energy-aware orchestration and scalability models\n\nThe feasibility of container orchestration technologies for edge computing environments has been analyzed based on resource allocation efficiency, such as memory and CPU utilization. Bahy et al. [80] found Nomad uses CPU and memory efficiently, while K3s excels in storage usage. Telenyk et al. [81] reported Kubernetes outperforms K3s and Microk8s in memory and CPU utilization, but K3s performs better in storage. Bohm and Wirtz [82] and Koziolek et al. [83] provided similar findings, with K0s leading in CPU tests and K3s and MicroShift in memory tests.\n\nFor energy efficiency, Deep Q-Learning (DQN) [84] optimizes by offloading data, reducing energy use, and shortening service workflow completion times. The Nondominated Sorting Genetic Optimization Algorithm [85] manages to offload complex tasks efficiently in terms of time and energy. The improved Genetic Algorithm (GEA) [86] enhances mobile edge computing performance by optimizing energy consumption and delay for low-latency, energy-efficient, and reliable task execution.\n\nThe Nondominated Sorting Genetic Optimization Algorithm [85] addresses energy and resource-aware computation offloading in edge environments. Given the limited resources of heterogeneous edge servers, this optimization algorithm effectively manages offloading complex tasks. It is efficient regarding time and energy consumption, optimizing time, energy, and cloudlet resource utilization. The improved Genetic Algorithm (GEA) [86] algorithm offers a significant improvement in MEC performance by optimizing energy consumption and delay, thereby supporting low-latency, energy-efficient, and reliable task execution in mobile edge environments.\n\nVI-D Software Architecture for 6G Era\n\nIn the 6G era, the need to use architecture definition language has become more critical due to next-generation networks’ increased complexity and interoperability requirements [3, 87, 88]. Architecture Description Languages (ADLs) express a system architecture clearly and precisely, thus modeling intervening artifacts of different technologies that ensure seamless and smooth integration, enhanced scalability of mechanisms, and robust security frameworks [89]. Providing a clear blueprint of this type of architecture, ADL helps streamline development processes, cutting down errors, speeding up the delivery of innovative services into reality in 6G, and driving the evolution toward an efficient and reliable communication infrastructure. Therefore, we explored the features and functionality of existing ADLs [89]. Unlike modeling languages such as UML, which capture behavior and structure, ADLs primarily focus on structural aspects, emphasizing component representation and interactions [89, 90]. This focus allows ADLs to offer a high level of abstraction, facilitating intellectual control over system architecture design and evaluation [91].\n\nThe evolution of ADLs can be divided into three periods [92]: Theory. During this phase, research focused on formal approaches to characterize components, behavior, and connections. Notations were developed to define structures. First geeneration. These ADLs primarily focused on modeling architecture elements. Second-Generation: Derived from first-generation architectures, these ADLs emphasize handling dynamic architectures.\n\nUniCon [93], Wright [94], ACME [95], Rapide [96], SRI SADL [97], C2 ADL [98], and MethaH [99] are considered first-generation and AADL [100], xADL [101], ADML [102], and ArchWare [103] are considered second-generation ADLs [92]. As mentioned above, the ADLs were developed in the mid to late 1990s and early 2000s.\n\nWhile ADLs have gained acceptance in the research community for describing system designs, their adoption in industry remains relatively low. Notable exceptions exist, particularly in the embedded systems domain [91], where ADLs like AADL [100] and EAST-ADL [104] have found success and are widely used in avionics and automotive industries. However, ADLs developed in academia, such as ACME, UniCon, and xADL, have not achieved similar industry adoption [91].\n\nMost currently used ADLs are either tailored to specific application areas or focus on particular system components, such as system structure. Unfortunately, these ADLs have not scaled well over time [105]. Several existing drawbacks contribute to the limited adoption of ADLs in the industry:\n\nThe challenges associated with Architectural Description Languages (ADLs) include the lack of robust Computer Aided Software Engineering (CASE) tools to support their adoption [105, 106], insufficient mechanisms for enforcing consistent communication styles among stakeholders, limitations in presenting multiple views of architectures [105, 106], inadequate support for tracing requirements [91], restrictive syntax that limits flexibility in real-world applications [91], challenges in scaling to support large applications [91], and inefficient artifact reusability [91].\n\nThese challenges collectively contribute to the industry’s cautious approach toward adopting ADLs.\n\nWhile we haven’t encountered any specific cases where ADL-type approaches have been used to express and analyze data, ethical, and other concerns, we believe a similar approach could be valuable in constructing and analyzing ethical systems related to data and AI. Hence, it contributes to 6G adoption and development.\n\nVI-E 6G Software Business Ecosystem\n\nResearch on the 6G ecosystem has increased substantially over the past five years, capturing the interest of both academics and industry [107]. This heightened attention arises from the widespread anticipation that 6G will serve as a pivotal game changer [108] compared to its predecessors. Although 6G technologies and standardization are still in their developmental stages and are expected to be commercialized in 2030 [108], they have attracted significant interest due to their opportunities for ecosystem-level business innovation. Such innovation in designing digital services necessitates collaboration across multiple perspectives, disciplines, and stakeholders [109]. Unfortunately, despite the extensive attention directed towards the 6G ecosystem and its concept variants, audiences often struggle to understand its antecedents and precisely grasp its essence due to a lack of concept-level research work.\n\nMany studies on 6G ecosystems adopt the concept without a clear definition. For example, [110] discusses unmanned aerial vehicles in the 6G ecosystem without defining it, and [111] explores digital service design similarly. This misuse risks turning the ”6G ecosystem” into a vague term [112]. For instance, [113] proposes a design framework for 4G, 5G, and 6G ecosystems without defining 6G. Additionally, [2] uses related terms like ”mobile network ecosystem” and ”beyond 5G ecosystem” interchangeably without clear definitions.\n\nVII Conclusion\n\nWe presented the objectives and current achievements of the 6GSoft project, a collaboration between four leading Finnish universities supported by renowned companies. Our project aims to significantly impact the future of SE for cognitive and cloud continuum in forthcoming 6G environments, integrating sustainability and energy efficiency into the core of 6G software development. We anticipate that the outcome of these joint efforts will be published in top-tier venues within SE and related fields. The partner companies will validate and employ our research effort in their industrial environment. Our project will significantly enhance the close academic collaboration between Finnish universities and industries, paving the way for future global achievements.\n\nReferences\n\n[1] M. Beshley, M. Klymash, I. Scherm et al., “Emerging network technologies for digital transformation: 5g/6g, iot, sdn/ibn, cloud computing, and blockchain,” in Emerging Networking in the Digital Transformation Age, M. Klymash, A. Luntovskyy, M. Beshley, I. Melnyk, and A. Schill, Eds. Cham: Springer Nature Switzerland, 2023, pp. 1–20.\n\n[2] M. Moussaoui, E. Bertin, and N. Crespi, “Divide and conquer: A business model agenda for beyond-5g and 6g,” IEEE Communications Magazine, vol. 61, no. 7, pp. 82–88, 2023.\n\n[3] S. Dang, O. Amin, B. Shihada et al., “What should 6g be?” Nature Electronics, vol. 3, no. 1, pp. 20–29, 2020.\n\n[4] L.-H. Shen, K.-T. Feng, and L. Hanzo, “Five facets of 6g: Research challenges and opportunities,” ACM Computing Surveys, vol. 55, no. 11, pp. 1–39, 2023.\n\n[5] R. Adeogun, G. Berardinelli, P. E. Mogensen et al., “Towards 6g in-x subnetworks with sub-millisecond communication cycles and extreme reliability,” IEEE Access, vol. 8, pp. 110 172–110 188, 2020.\n\n[6] G. Berardinelli, P. Mogensen, and R. O. Adeogun, “6g subnetworks for life-critical communication,” in 2020 2nd 6G Wireless Summit (6G SUMMIT), 2020, pp. 1–5.\n\n[7] G. Berardinelli, P. Baracca, R. O. Adeogun et al., “Extreme communication in 6g: Vision and challenges for ‘in-x’ subnetworks,” IEEE Open Journal of the Communications Society, vol. 2, pp. 2516–2535, 2021.\n\n[8] B. Kim, D. Calin, N. Tenny et al., “Device centric distributed compute, orchestration and networking,” IEEE Wireless Communications, vol. 30, no. 4, pp. 6–8, 2023.\n\n[9] M. Dalgitsis, N. Cadenelli, M. A. Serrano et al., “Cloud-native orchestration framework for network slice federation across administrative domains in 5g/6g mobile networks,” IEEE Transactions on Vehicular Technology, pp. 1–14, 2024.\n\n[10] H. T. Nguyen, T. Van Do, and C. Rotter, “Scaling upf instances in 5g/6g core with deep reinforcement learning,” IEEE Access, vol. 9, pp. 165 892–165 906, 2021.\n\n[11] R. Su, X. Li, and D. Taibi, “6g software engineering: A systematic mapping study,” arXiv preprint arXiv:2405.05017, 2024.\n\n[12] T. Yang, M. Qin, N. Cheng et al., “Liquid software-based edge intelligence for future 6g networks,” IEEE Network, vol. 36, no. 1, pp. 69–75, 2022.\n\n[13] T. Taleb, C. Benzaïd, M. B. Lopez et al., “6g system architecture: A service of services vision,” ITU journal on future and evolving technologies, vol. 3, no. 3, pp. 710–743, 2022.\n\n[14] A. Alawadhi and A. Almogahed, “Recent advances in edge computing for 6g,” in 2022 International Conference on Intelligent Technology, System and Service for Internet of Everything (ITSS-IoE). IEEE, 2022, pp. 1–6.\n\n[15] M. Esposito, V. Falaschi, and D. Falessi, “An extensive comparison of static application security testing tools,” in Proceedings of the 28th International Conference on Evaluation and Assessment in Software Engineering. ACM, 2024, pp. 69–78.\n\n[16] M. Esposito, S. Moreschini, V. Lenarduzzi, D. Hästbacka, and D. Falessi, “Can we trust the default vulnerabilities severity?” in 2023 IEEE 23rd International Working Conference on Source Code Analysis and Manipulation (SCAM). IEEE, 2023, pp. 265–270.\n\n[17] M. Esposito, M. Robredo, F. A. Fontana, and V. Lenarduzzi, “On the correlation between architectural smells and static analysis warnings,” arXiv preprint arXiv:2406.17354, 2024.\n\n[18] L. Xiao, Y. Cai, and R. Kazman, “Design rule spaces: a new form of architecture insight,” in Proceedings of the 36th International Conference on Software Engineering, ser. ICSE 2014. New York, NY, USA: Association for Computing Machinery, 2014, p. 967–977.\n\n[19] Y. Li, W. Liang, J. Li, X. Cheng, D. Yu, A. Y. Zomaya, and S. Guo, “Energy-aware, device-to-device assisted federated learning in edge computing,” IEEE TRANSACTIONS ON PARALLEL AND DISTRIBUTED SYSTEMS, vol. 34, 2023.\n\n[20] Z. Wan, Y. Zhang, X. Xia, Y. Jiang, and D. Lo, “Software architecture in practice: Challenges and opportunities,” in Proceedings of the 31st ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, 2023, pp. 1457–1469.\n\n[21] A. Mehraj, Z. Zhang, and K. Systä, “A tertiary study on ai for requirements engineering,” D. Mendez and A. Moreira, Eds. Cham: Springer Nature Switzerland, 2024, pp. 159–177.\n\n[22] P. Kotilainen, V. Heikkilä, K. Systä et al., “Towards liquid ai in iot with webassembly: A prototype implementation,” in International Conference on Mobile Web and Intelligent Information Systems. Springer, 2023, pp. 129–141.\n\n[23] M. Agbese, N. Mäkitalo, M. Waseem et al., “Examining privacy and trust issues at the edge of isomorphic iot architectures: Case liquid ai,” in Proceedings of the 13th International Conference on the Internet of Things, 2023, pp. 245–252.\n\n[24] P. Kotilainen, A. Mehraj, T. Mikkonen et al., “The programmable world and its emerging privacy nightmare,” in Proceedings of 24th International Conference on Web Engineering (ICWE). Springer Nature Switzerland, 2024.\n\n[25] A. Bakhtin, X. Li, J. Soldani et al., “Tools reconstructing microservice architecture: A systematic mapping study,” Agility with Microservices Programming, co-located with ECSA, vol. 2023, 2023.\n\n[26] T. Cerny, A. S. Abdelfattah, V. Bushong et al., “Microservice architecture reconstruction and visualization techniques: A review,” in 2022 IEEE International Conference on Service-Oriented System Engineering (SOSE). IEEE, 2022, pp. 39–48.\n\n[27] P. Daubaris, S. Linkola, J. F. Inglés-Romero et al., “Explainability with observation sharing in long collaboration chains of automated systems-of-systems,” IEEE Software, 2023.\n\n[28] S. Moreschini, E. Younesian, D. Hästbacka et al., “Edge to cloud tools: A multivocal literature review,” Journal of Systems and Software, p. 111942, 2023.\n\n[29] A. Droob, D. Morratz, F. L. Jakobsen et al., “Flexconnect: Mobile computational offloading,” in Proceedings of the 3rd Eclipse Security, AI, Architecture and Modelling Conference on Cloud to Edge Continuum, ser. ESAAM ’23, 2023, p. 29–38.\n\n[30] ——, “Fault tolerant horizontal computation offloading,” in 2023 IEEE International Conference on Edge Computing and Communications (EDGE), 2023, pp. 177–182.\n\n[31] T. Cerny, A. S. Abdelfattah, J. Yero et al., “From static code analysis to visual models of microservice architecture,” Cluster Computing, pp. 1–26, 2024.\n\n[32] J. L. Thomsen, K. D. S. Thomsen, R. B. Schmidt et al., “Edge computing tasks orchestration: An energy-aware approach,” in 2023 IEEE International Conference on Edge Computing and Communications (EDGE). IEEE, 2023, pp. 115–117.\n\n[33] P. Kotilainen, T. Autto, V. Järvinen et al., “Proposing isomorphic microservices based architecture for heterogeneous iot environments,” in International Conference on Product-Focused Software Process Improvement. Springer, 2022, pp. 621–627.\n\n[34] P. Kotilainen, V. Järvinen, J. Tarkkanen et al., “WebAssembly in IoT: beyond toy examples,” in International Conference on Web Engineering. Springer, 2023, pp. 93–100.\n\n[35] S. Schneider, A. Bakhtin, X. Li et al., “Comparison of static analysis architecture recovery tools for microservice applications,” arXiv preprint arXiv:2403.06941, 2024.\n\n[36] X. Li, D. A. d’Aragona, and D. Taibi, “Evaluating microservice organizational coupling based on cross-service contribution,” in International Conference on Product-Focused Software Process Improvement. Springer, 2023, pp. 435–450.\n\n[37] T. Cerny, A. S. Abdelfattah, A. Al Maruf et al., “Catalog and detection techniques of microservice anti-patterns and bad smells: A tertiary study,” Journal of Systems and Software, vol. 206, p. 111829, 2023.\n\n[38] S. Smith, E. Robinson, T. Frederiksen et al., “Benchmarks for end-to-end microservices testing,” in 2023 IEEE International Conference on Service-Oriented System Engineering (SOSE). IEEE, 2023, pp. 60–66.\n\n[39] X. Li, A. S. Abdelfattah, R. Su et al., “Metrics and models for developer collaboration analysis in microservice-based systems. a systematic mapping study,” Joint Proceedings IWSM and MENSURA 2023, 2023.\n\n[40] G. Parker, S. Kim, A. Al Maruf et al., “Visualizing anti-patterns in microservices at runtime: A systematic mapping study,” IEEE Access, vol. 11, pp. 4434–4442, 2023.\n\n[41] A. S. Abdelfattah, T. Cerny, J. Y. Salazar et al., “End-to-end test coverage metrics in microservice systems: An automated approach,” in European Conference on Service-Oriented and Cloud Computing. Springer, 2023, pp. 35–51.\n\n[42] N. Yang, “Exploring the 6g software business ecosystem: A morphological analysis approach,” Lappeenranta-Lahti University of Technology LUT Master’s Thesis, 2023.\n\n[43] M. A. Akbar, A. A. Khan, and S. Hyrynsalmi, “Role of quantum computing in shaping the future of 6 g technology,” Information and Software Technology, vol. 170, p. 107454, 2024.\n\n[44] M. A. Akbar, A. A. Khan, S. Hyrynsalmi et al., “6g secure quantum communication: a success probability prediction model,” Automated Software Engineering, vol. 31, no. 1, p. 31, 2024.\n\n[45] M. Esposito, M. T. Sabzevari, B. Ye et al., “c⁢l⁢a⁢s⁢s⁢i⁢|q⟩𝑐𝑙𝑎𝑠𝑠𝑖ket𝑞classi|q\\rangleitalic_c italic_l italic_a italic_s italic_s italic_i | italic_q ⟩ towards a translation framework to bridge the classical-quantum programming gap,” arXiv preprint arXiv:2406.06764, 2024.\n\n[46] M. T. Sabzevari, M. Esposito, A. A. Khan et al., “Qcshqd: Quantum computing as a service for hybrid classical-quantum software development: A vision,” arXiv preprint arXiv:2403.08663, 2024.\n\n[47] M. Esposito, F. Palagiano, and V. Lenarduzzi, “Beyond words: On large language models actionability in mission-critical risk analysis,” arXiv preprint arXiv:2406.10273, 2024.\n\n[48] M. Esposito and F. Palagiano, “Leveraging large language models for preliminary security risk analysis: A mission-critical case study,” in Proceedings of the 28th International Conference on Evaluation and Assessment in Software Engineering. ACM, 2024, pp. 442–445.\n\n[49] N. Katiyar, P. Kumari, S. Sakhshi et al., “Trending iot platforms on middleware layer,” in Intelligent Analytics for Industry 4.0 Applications. CRC Press, 2023, pp. 131–147.\n\n[50] M. A. Habibi, A. G. Sánchez, I. L. Pavón et al., “Enabling network and service programmability in 6g mobile communication systems,” in 2022 IEEE Future Networks World Forum (FNWF). IEEE, 2022, pp. 320–327.\n\n[51] A. A. Ateya, A. A. Alhussan, H. A. Abdallah et al., “Edge computing platform with efficient migration scheme for 5g/6g networks.” Computer Systems Science & Engineering, vol. 45, no. 2, 2023.\n\n[52] G. Manogaran, T. Baabdullah, D. B. Rawat et al., “Ai-assisted service virtualization and flow management framework for 6g-enabled cloud-software-defined network-based iot,” IEEE Internet of Things Journal, vol. 9, no. 16, pp. 14 644–14 654, 2021.\n\n[53] N. Meenakshi, M. M. Jaber, R. Pradhan et al., “Design systematic wireless inventory trackers with prolonged lifetime and low energy consumption in future 6g network,” Wireless Networks, pp. 1–22, 2023.\n\n[54] I. Al-Hammadi, M. Li, and S. M. Islam, “Independent tasks scheduling of collaborative computation offloading for sdn-powered mec on 6g networks,” Soft Computing, vol. 27, no. 14, pp. 9593–9617, 2023.\n\n[55] A. Alotaibi and A. Barnawi, “Idsoft: A federated and softwarized intrusion detection framework for massive internet of things in 6g network,” Journal of King Saud University-Computer and Information Sciences, vol. 35, no. 6, p. 101575, 2023.\n\n[56] A. Shukla, N. Ahmed, A. Roy et al., “Softwarized management of 6g network for green internet of things,” Computer Communications, vol. 187, pp. 103–114, 2022.\n\n[57] I. H. Abdulqadder and S. Zhou, “Sliceblock: Context-aware authentication handover and secure network slicing using dag-blockchain in edge-assisted sdn/nfv-6g environment,” IEEE Internet of Things Journal, vol. 9, no. 18, pp. 18 079–18 097, 2022.\n\n[58] N. Janbi, I. Katib, A. Albeshri et al., “Distributed artificial intelligence-as-a-service (daiaas) for smarter ioe and 6g environments,” Sensors, vol. 20, no. 20, p. 5796, 2020.\n\n[59] P. D. Bojović, T. Malbašić, D. Vujošević et al., “Dynamic qos management for a flexible 5g/6g network core: A step toward a higher programmability,” Sensors, vol. 22, no. 8, p. 2849, 2022.\n\n[60] J. A. Alonso-Lupez, L. A. M. Hernández, S. P. Arteaga et al., “Level of trust and privacy management in 6g intent-based networks for vertical scenarios,” in 2022 1st International Conference on 6G Networking (6GNet). IEEE, 2022, pp. 1–4.\n\n[61] Y. Tao, J. Wu, X. Lin et al., “Drl-driven digital twin function virtualization for adaptive service response in 6g networks,” IEEE Networking Letters, 2023.\n\n[62] H. Cao, S. Garg, G. Kaddoum et al., “Softwarized resource management and allocation with autonomous awareness for 6g-enabled cooperative intelligent transportation systems,” IEEE Transactions on Intelligent Transportation Systems, vol. 23, no. 12, pp. 24 662–24 671, 2022.\n\n[63] M. Kamruzzaman and O. Alruwaili, “Ai-based computer vision using deep learning in 6g wireless networks,” Computers and Electrical Engineering, vol. 102, p. 108233, 2022.\n\n[64] O. O. Ajibola, T. E. El-Gorashi, and J. M. Elmirghani, “Disaggregation for energy efficient fog in future 6g networks,” IEEE Transactions on Green Communications and Networking, vol. 6, no. 3, pp. 1697–1722, 2022.\n\n[65] H. Cao, J. Du, H. Zhao et al., “Toward tailored resource allocation of slices in 6g networks with softwarization and virtualization,” IEEE Internet of Things Journal, vol. 9, no. 9, pp. 6623–6637, 2021.\n\n[66] T. Ye, J. Zhang, C. Zhao et al., “Service function chain orchestration in 6g software defined satellite-ground integrated networks,” in 2022 6th International Conference on Communication and Information Systems (ICCIS). IEEE, 2022, pp. 71–76.\n\n[67] L. Zhao, W. Alhoshan, A. Ferrari et al., “Natural language processing for requirements engineering: A systematic mapping study,” ACM Computing Surveys (CSUR), vol. 54, no. 3, pp. 1–41, 2021.\n\n[68] Y. Lyu, H. Cho, P. Jung et al., “A systematic literature review of issue-based requirement traceability,” Ieee Access, vol. 11, pp. 13 334–13 348, 2023.\n\n[69] C. Xu, Y. Li, B. Wang et al., “A systematic mapping study on machine learning methodologies for requirements management,” IET Software, vol. 17, no. 4, pp. 405–423, 2023.\n\n[70] A. Corral, L. E. Sánchez, and L. Antonelli, “Building an integrated requirements engineering process based on intelligent systems and semantic reasoning on the basis of a systematic analysis of existing proposals.” JUCS: Journal of Universal Computer Science, vol. 28, no. 11, 2022.\n\n[71] R. Sonbol, G. Rebdawi, and N. Ghneim, “The use of nlp-based text representation techniques to support requirement engineering tasks: A systematic mapping review,” Ieee Access, vol. 10, pp. 62 811–62 830, 2022.\n\n[72] W. Tao, Y. Zhou, W. Zhang et al., “Magis: Llm-based multi-agent framework for github issue resolution,” arXiv preprint arXiv:2403.17927, 2024.\n\n[73] K. Zamani, D. Zowghi, and C. Arora, “Machine learning in requirements engineering: A mapping study,” in 2021 IEEE 29th International Requirements Engineering Conference Workshops (REW). IEEE, 2021, pp. 116–125.\n\n[74] H. Sofian, N. A. M. Yunus, and R. Ahmad, “Systematic mapping: Artificial intelligence techniques in software engineering,” IEEE Access, vol. 10, pp. 51 021–51 040, 2022.\n\n[75] X. Hou, Y. Zhao, Y. Liu et al., “Large language models for software engineering: A systematic literature review,” 2024.\n\n[76] A. R. Aguilar, J. O. Ocharán-Hernández, and Á. J. Sánchez-García, “A systematic mapping study of artificial intelligence in software requirements.” Res. Comput. Sci., vol. 149, no. 11, pp. 179–188, 2020.\n\n[77] J. Lin, Y. Liu, Q. Zeng et al., “Traceability transformed: Generating more accurate links with pre-trained bert models,” in 2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE). IEEE, 2021, pp. 324–335.\n\n[78] J. Guo, J. Cheng, and J. Cleland-Huang, “Semantically enhanced software traceability using deep learning techniques,” in 2017 IEEE/ACM 39th International Conference on Software Engineering (ICSE). IEEE, 2017, pp. 3–14.\n\n[79] M. Borg, C. Englund, and B. Duran, “Traceability and deep learning-safety-critical systems with traces ending in deep neural networks,” Proc. of the Grand Challenges of Traceability: The Next Ten Years, pp. 48–49, 2017.\n\n[80] M. B. Bahy, N. R. Dwi Riyanto, M. Z. Fawwaz Nuruddin Siswantoro et al., “Resource Utilization Comparison of KubeEdge, K3s, and Nomad for Edge Computing,” in 2023 10th International Conference on Electrical Engineering, Computer Science and Informatics (EECSI). Palembang, Indonesia: IEEE, Sep. 2023, pp. 321–327.\n\n[81] S. Telenyk, O. Sopov, E. Zharikov et al., “A Comparison of Kubernetes and Kubernetes-Compatible Platforms,” in 2021 11th IEEE International Conference on Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications (IDAACS). Cracow, Poland: IEEE, Sep. 2021, pp. 313–317.\n\n[82] S. Bohm and G. Wirtz, “Profiling Lightweight Container Platforms: MicroK8s and K3s in Comparison to Kubernetes.”\n\n[83] H. Koziolek and N. Eskandani, “Lightweight Kubernetes Distributions: A Performance Comparison of MicroK8s, k3s, k0s, and Microshift,” in Proceedings of the 2023 ACM/SPEC International Conference on Performance Engineering. Coimbra Portugal: ACM, Apr. 2023, pp. 17–29.\n\n[84] A. Zhu, S. Guo, M. Ma et al., “Computation offloading for workflow in mobile edge computing based on deep q-learning,” in 2019 28th Wireless and Optical Communications Conference (WOCC). IEEE, 2019, pp. 1–5.\n\n[85] K. Peng, B. Zhao, S. Xue, and Q. Huang, “Energy- and resource-aware computation offloading for complex tasks in edge environment,” Complexity, 2020.\n\n[86] K. Liao, J. Yang, and L. Miao, “Mobile edge computing offload strategy based on energy aware,” in International Conference on Network Communication and Information Security (ICNCIS 2021), vol. 12175. SPIE, 2022, pp. 223–230.\n\n[87] M. A. Uusitalo, M. Ericson, B. Richerzhagen et al., “Hexa-x the european 6g flagship project,” in 2021 Joint European Conference on Networks and Communications & 6G Summit (EuCNC/6G Summit). IEEE, 2021, pp. 580–585.\n\n[88] Z. Lv and N. Kumar, “Software defined solutions for sensors in 6g/ioe,” Computer Communications, vol. 153, pp. 42–47, 2020.\n\n[89] P. Clements, “A survey of architecture description languages,” in International Workshop on Software Specifications & Design: Proceedings of the 8th International Workshop on Software Specification and Design; 22-23 Mar. 1996. IEEE Computer Society, 1996, pp. 16–25.\n\n[90] P. Mishra and N. Dutt, “Chapter 4 - architecture description languages,” in Customizable Embedded Processors, ser. Systems on Silicon, P. Lenne and R. Leupers, Eds. Burlington: Morgan Kaufmann, 2007, pp. 59–76.\n\n[91] U. Haider, J. D. McGregor, and R. Bashroush, “The ali architecture description language,” ACM SIGSOFT Software Engineering Notes, vol. 43, no. 4, pp. 52–52, 2018.\n\n[92] C. Egyhazy, “Comparison of five architecture description languages on design focus, security and style,” in ICEIS 2007 - 9th International Conference on Enterprise Information Systems, Proceedings, vol. ISAS, 2007, pp. 270–277.\n\n[93] M. Shaw, R. DeLine, D. V. Klein et al., “Abstractions for software architecture and tools to support them,” IEEE transactions on software engineering, vol. 21, no. 4, pp. 314–335, 1995.\n\n[94] R. Allen and D. Garlan, “A formal basis for architectural connection,” ACM Transactions on Software Engineering and Methodology (TOSEM), vol. 6, no. 3, pp. 213–249, 1997.\n\n[95] D. Garlan, R. Monroe, and D. Wile, “Acme: An architecture description interchange language,” in CASCON First Decade High Impact Papers, 2010, pp. 159–173.\n\n[96] D. C. Luckham, J. J. Kenney, L. M. Augustin et al., “Specification and analysis of system architecture using rapide,” IEEE transactions on software engineering, vol. 21, no. 4, pp. 336–354, 1995.\n\n[97] M. Moriconi and R. A. Riemenschneider, “Introduction to sadl 1.0: A language for specifying software architecture hierarchies,” Citeseer, Tech. Rep., 1997.\n\n[98] N. Medvidovic, R. N. Taylor, and E. J. Whitehead Jr, “Formal modeling of software architectures at multiple levels of abstraction,” ejw, vol. 714, pp. 824–2776, 1996.\n\n[99] P. Binns, M. Englehart, M. Jackson et al., “Domain-specific software architectures for guidance, navigation and control,” International Journal of Software Engineering and Knowledge Engineering, vol. 6, no. 02, pp. 201–227, 1996.\n\n[100] P. H. Feiler, D. P. Gluch, and J. Hudak, “The architecture analysis & design language (aadl): An introduction,” 2006.\n\n[101] E. Dashofy, A. Hoek, and R. Taylor, “A comprehensive approach for the development of modular software architecture description languages,” ACM transactions on software engineering and methodology, vol. 14, no. 2, pp. 199–245, 2005.\n\n[102] Z. Wang, H. Peng, J. Guo et al., “An architecture description language based on dynamic description logics,” in IFIP Advances in Information and Communication Technology, ser. IFIP Advances in Information and Communication Technology. Berlin, Heidelberg: Springer Berlin Heidelberg, 2012, vol. 385, pp. 157–166.\n\n[103] J. Revillard, S. Cimpan, E. Benoit et al., “Intelligent instrument design with archware adl,” in Fourth Workshop on Model-Based Development of Computer-Based Systems and Third International Workshop on Model-Based Methodologies for Pervasive and Embedded Software (MBD-MOMPES’06), 2006, pp. 9 pp.–74.\n\n[104] P. Cuenot, P. Frey, R. Johansson et al., “The east-adl architecture description language for automotive embedded software,” in Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), vol. 6100, 2010, pp. 297–307.\n\n[105] R. Bashroush, I. Spence, P. Kilpatrick et al., “Towards more flexible architecture description languages for industrial applications,” in Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), vol. 4344. Berlin, Heidelberg: Springer Berlin Heidelberg, 2006, pp. 212–219.\n\n[106] ——, “Ali: An extensible architecture description language for industrial applications,” in 15th Annual IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ecbs 2008). IEEE, 2008, pp. 297–304.\n\n[107] M. Katz, M. Matinmikko-Blue, and M. Latva-Aho, “6genesis flagship program: Building the bridges towards 6g-enabled wireless smart society and ecosystem,” in 2018 IEEE 10th Latin-American Conference on Communications (LATINCOM). IEEE, 2018, pp. 1–9.\n\n[108] J. Bhat and S. Alqahtani, “6g ecosystem: Current status and future perspective,” IEEE Communications Standards Magazine, 2023.\n\n[109] P. Ahokangas, M. Matinmikko-Blue, and S. Yrjölä, “Envisioning a future-proof global 6g from business, regulation, and technology perspectives,” IEEE Communications Magazine, vol. 61, no. 2, pp. 72–78, 2022.\n\n[110] M. Azari, S. Solanki, S. Chatzinotas et al., “Thz-empowered uavs in 6g: Opportunities, challenges, and trade-offs,” IEEE Transactions on Wireless Communications, 2023.\n\n[111] H. Liao, B. Wang, B. Li et al., “Ict as a general-purpose technology: The productivity of ict in the united states revisited,” Information Economics and Policy, vol. 36, pp. 10–25, 2016.\n\n[112] S. Hyrynsalmi and S. M. Hyrynsalmi, “Ecosystem: A zombie category?” in 2019 IEEE International Conference on Engineering, Technology and Innovation (ICE/ITMC). IEEE, 2019, pp. 1–8.\n\n[113] V. Kovtun, I. Izonin, and M. Gregus, “Formalization of the metric of parameters for quality evaluation of the subject-system interaction session in the 5g-iot ecosystem,” International Journal of Open Information Technologies, 2023."
    }
}