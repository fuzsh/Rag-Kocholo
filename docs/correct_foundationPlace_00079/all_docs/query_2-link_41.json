{
    "id": "correct_foundationPlace_00079_2",
    "rank": 41,
    "data": {
        "url": "https://www.fda.gov/inspections-compliance-enforcement-and-criminal-investigations/inspection-guides/glossary-computer-system-software-development-terminology-895",
        "read_more_link": "",
        "language": "en",
        "title": "Glossary of Computer System Software Development Terminology (8/95)",
        "top_image": "https://www.fda.gov/themes/custom/preview/img/FDA-Social-Graphic.png",
        "meta_img": "https://www.fda.gov/themes/custom/preview/img/FDA-Social-Graphic.png",
        "images": [
            "https://www.fda.gov/themes/custom/preview/assets/images/US_Flag.png",
            "https://www.fda.gov/themes/custom/preview/assets/images/icon-dot-gov.svg",
            "https://www.fda.gov/themes/custom/preview/assets/images/icon-https.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Office of Regulatory Affairs"
        ],
        "publish_date": "2019-06-17T09:25:00",
        "summary": "",
        "meta_description": "Glossary of Computer System Software Development Terminology (8/95)",
        "meta_lang": "en",
        "meta_favicon": "/themes/custom/preview/favicon.ico",
        "meta_site_name": "U.S. Food and Drug Administration",
        "canonical_link": "https://www.fda.gov/inspections-compliance-enforcement-and-criminal-investigations/inspection-guides/glossary-computer-system-software-development-terminology-895",
        "text": "Note: This document is reference material for investigators and other FDA personnel. The document does not bind FDA, and does no confer any rights, privileges, benefits, or immunities for or on any person(s).\n\nINTRODUCTION\n\nThis document is intended to serve as a glossary of terminology applicable to software development and computerized systems in FDA regulated industries. It will facilitate consistency in describing the requirements of the law and regulations applicable to such products and systems. It is also a resource for investigators who conduct inspections and investigations involving software and computerized systems.\n\nThe organization of this document is primarily alphabetical. Acronyms are grouped at the beginning of each alphabetical section, and are followed by words, terms and phrases. Acronyms are expanded at the beginning of each alphabetical section and defined with the full term or phrase. Four modifications are the grouping of terms and phrases in the domains of specifications, testing, qualification, and validation. Those related terms are located sequentially to assist the user in finding all defined terms in these domains, e.g., functional testing is defined under testing, functional.\n\nThe terms are defined, as much as possible, using available standards. The source of such definitions appears immediately following the term or phrase in parenthesis, e.g. (NIST). The source documents are listed below.\n\nThe New IEEE Standard Dictionary of Electrical and Electronics Terms, IEEE Std. 100-1992.\n\nIEEE Standards Collection, Software Engineering, 1994 Edition, published by the Institute of Electrical and Electronic Engineers Inc.\n\nNational Bureau of Standards [NBS] Special Publication 500-75 Validation, Verification, and Testing of Computer Software, 1981.\n\nFederal Information Processing Standards [FIPS] Publication 101, Guideline For Lifecycle Validation, Verification, and Testing of Computer Software, 1983.\n\nFederal Information Processing Standards [FIPS] Publication 105, Guideline for Software Documentation Management, 1984.\n\nAmerican National Standard for Information Systems, Dictionary for Information Systems, American National Standards Institute, 1991.\n\nFDA Technical Report, Software Development Activities, July 1987.\n\nFDA Guide to Inspection of Computerized Systems in Drug Processing, 1983.\n\nFDA Guideline on General Principles of Process Validation, May 1987.\n\nReviewer Guidance for Computer Controlled Medical Devices Undergoing 510(k) Review, Office of Device Evaluation, CDRH, FDA, August 1991.\n\nHHS Publication FDA 90-4236, Preproduction Quality Assurance Planning.\n\nMIL-STD-882C, Military Standard System Safety Program Requirements, 19JAN1993.\n\nInternational Electrotechnical Commission, International Standard 1025, Fault Tree Analysis.\n\nInternational Electrotechnical Commission, International Standard 812, Analysis Techniques for System Reliability - Procedure for Failure Mode and Effects Analysis [FMEA].\n\nFDA recommendations, Application of the Medical Device GMP to Computerized Devices and Manufacturing Processes, May 1992.\n\nPressman, R., Software Engineering, A Practitioner's Approach, Third Edition, McGraw-Hill, Inc., 1992.\n\nMyers, G., The Art of Software Testing, Wiley Interscience, 1979.\n\nBeizer, B., Software Testing Techniques, Second Edition, Van Nostrand Reinhold, 1990.\n\nAdditional general references used in developing some definitions are:\n\nBohl, M., Information Processing, Fourth Edition, Science Research Associates, Inc., 1984.\n\nFreedman, A., The Computer Glossary, Sixth Edition, American Management Association, 1993.\n\nMcGraw-Hill Electronics Dictionary, Fifth Edition, 1994, McGraw-Hill Inc.\n\nMcGraw-Hill Dictionary of Scientific & Technical Terms, Fifth Edition, 1994, McGraw-Hill Inc..\n\nWebster's New Universal Unabridged Dictionary, Deluxe Second Edition, 1979.\n\n- A -\n\nADC. analog-to-digital converter.\n\nALU. arithmetic logic unit.\n\nANSI. American National Standards Institute.\n\nASCII. American Standard Code for Information Interchange.\n\nabstraction. The separation of the logical properties of data or function from its implementation in a computer program. See: encapsulation, information hiding, software engineering.\n\naccess. (ANSI) To obtain the use of a resource.\n\naccess time. (ISO) The time interval between the instant at which a call for data is initiated and the instant at which the delivery of the data is completed.\n\naccident. See: mishap.\n\naccuracy. (IEEE) (1) A qualitative assessment of correctness or freedom from error. (2) A quantitative measure of the magnitude of error. Contrast with precision. (CDRH) (3) The measure of an instrument's capability to approach a true or absolute value. It is a function of precision and bias. See: bias, precision, calibration.\n\naccuracy study processor. A software tool used to perform calculations or determine accuracy of computer manipulated program variables.\n\nactuator. A peripheral [output] device which translates electrical signals into mechanical actions; e.g., a stepper motor which acts on an electrical signal received from a computer instructing it to turn its shaft a certain number of degrees or a certain number of rotations. See: servomechanism.\n\nadaptive maintenance. (IEEE) Software maintenance performed to make a computer program usable in a changed environment. Contrast with corrective maintenance, perfective maintenance.\n\naddress. (1) A number, character, or group of characters which identifies a given device or a storage location which may contain a piece of data or a program step. (2) To refer to a device or storage location by an identifying number, character, or group of characters.\n\naddressing exception. (IEEE) An exception that occurs when a program calculates an address outside the bounds of the storage available to it.\n\nalgorithm. (IEEE) (1) A finite set of well-defined rules for the solution of a problem in a finite number of steps. (2) Any sequence of operations for performing a specific task.\n\nalgorithm analysis. (IEEE) A software V&V task to ensure that the algorithms selected are correct, appropriate, and stable, and meet all accuracy, timing, and sizing requirements.\n\nalphanumeric. Pertaining to a character set that contains letters, digits, and usually other characters such as punctuation marks.\n\nAmerican National Standards Institute. 11 West 42nd Street, New York, N.Y. 10036. An organization that coordinates the development of U.S. voluntary national standards for nearly all industries. It is the U.S. member body to ISO and IEC. Information technology standards pertain to programming languages, electronic data interchange, telecommunications and physical properties of diskettes, cartridges and magnetic tapes.\n\nAmerican Standard Code for Information Interchange. A seven bit code adopted as a standard to represent specific data characters in computer systems, and to facilitate interchange of data between various machines and systems. Provides 128 possible characters, the first 32 of which are used for printing and transmission control. Since common storage is an 8-bit byte [256 possible characters] and ASCII uses only 128, the extra bit is used to hold a parity bit or create special symbols. See: extended ASCII.\n\nanalog. Pertaining to data [signals] in the form of continuously variable [wave form] physical quantities; e.g., pressure, resistance, rotation, temperature, voltage. Contrast with digital.\n\nanalog device. (IEEE) A device that operates with variables represented by continuously measured quantities such as pressures, resistances, rotations, temperatures, and voltages.\n\nanalog-to-digital converter. Input related devices which translate an input device's [sensor] analog signals to the corresponding digital signals needed by the computer. Contrast with DAC [digital-to-analog converter]. See: analog, digital.\n\nanalysis. (1) To separate into elemental parts or basic principles so as to determine the nature of the whole. (2) A course of reasoning showing that a certain result is a consequence of assumed premises. (3) (ANSI) The methodical investigation of a problem, and the separation of the problem into smaller related units for further detailed study.\n\nanomaly. (IEEE) Anything observed in the documentation or operation of software that deviates from expectations based on previously verified software products or reference documents. See: bug, defect, error, exception, fault.\n\napplication program. See: application software.\n\napplication software. (IEEE) Software designed to fill specific needs of a user; for example, software for navigation, payroll, or process control. Contrast with support software; system software.\n\narchitectural design. (IEEE) (1) The process of defining a collection of hardware and software components and their interfaces to establish the framework for the development of a computer system. See: functional design. (2) The result of the process in (1). See: software engineering.\n\narchitecture. (IEEE) The organizational structure of a system or component. See: component, module, subprogram, routine.\n\narchival database. (ISO) An historical copy of a database saved at a significant point in time for use in recovery or restoration of the database.\n\narchive. (IEEE) A lasting collection of computer system data or other records that are in long term storage.\n\narchive file. (ISO) A file that is part of a collection of files set aside for later research or verification, for security purposes, for historical or legal purposes, or for backup.\n\narithmetic logic unit. The [high speed] circuits within the CPU which are responsible for performing the arithmetic and logical operations of a computer.\n\narithmetic overflow. (ISO) That portion of a numeric word that expresses the result of an arithmetic operation, by which the length of the word exceeds the word length of the space provided for the representation of the number. See: overflow, overflow exception.\n\narithmetic underflow. (ISO) In an arithmetic operation, a result whose absolute value is too small to be represented within the range of the numeration system in use. See: underflow, underflow exception.\n\narray. (IEEE) An n-dimensional ordered set of data items identified by a single name and one or more indices, so that each element of the set is individually addressable; e.g., a matrix, table, or vector.\n\nas built. (NIST) Pertaining to an actual configuration of software code resulting from a software development project.\n\nassemble. See: assembling.\n\nassembler. (IEEE) A computer program that translates programs [source code files] written in assembly language into their machine language equivalents [object code files]. Contrast with compiler, interpreter. See: cross-assembler, cross-compiler.\n\nassembling. (NIST) Translating a program expressed in an assembly language into object code.\n\nassembly code. See: assembly language.\n\nassembly language. (IEEE) A low level programming language, that corresponds closely to the instruction set of a given computer, allows symbolic naming of operations and addresses, and usually results in a one-to-one translation of program instructions [mnemonics] into machine instructions. See: low-level language.\n\nassertion. (NIST) A logical expression specifying a program state that must exist or a set of conditions that program variables must satisfy at a particular point during program execution.\n\nassertion checking. (NIST) Checking of user- embedded statements that assert relationships between elements of a program. An assertion is a logical expression that specifies a condition or relation among program variables. Tools that test the validity of assertions as the program is executing or tools that perform formal verification of assertions have this feature. See: instrumentation; testing, assertion.\n\nasynchronous. Occurring without a regular time relationship, i.e., timing independent.\n\nasynchronous transmission. A timing independent method of electrical transfer of data in which the sending and receiving units are synchronized on each character, or small block of characters, usually by the use of start and stop signals. Contrast with synchronous transmission.\n\naudit. (1) (IEEE) An independent examination of a work product or set of work products to assess compliance with specifications, standards, contractual agreements, or other criteria. See: functional configuration audit, physical configuration audit. (2) (ANSI) To conduct an independent review and examination of system records and activities in order to test the adequacy and effectiveness of data security and data integrity procedures, to ensure compliance with established policy and operational procedures, and to recommend any necessary changes. See: computer system audit, software audit.\n\naudit trail. (1) (ISO) Data in the form of a logical path linking a sequence of events, used to trace the transactions that have affected the contents of a record. (2) A chronological record of system activities that is sufficient to enable the reconstruction, reviews, and examination of the sequence of environments and activities surrounding or leading to each event in the path of a transaction from its inception to output of final results.\n\nauxiliary storage. Storage device other than main memory [RAM]; e.g., disks and tapes.\n\n- B -\n\nBIOS. basic input/output system.\n\nbps. bits per second.\n\nband. Range of frequencies used for transmitting a signal. A band can be identified by the difference between its lower and upper limits, i.e. bandwidth, as well as by its actual lower and upper limits; e.g., a 10 MHz band in the 100 to 110 MHz range.\n\nbandwidth. The transmission capacity of a computer channel, communications line or bus. It is expressed in cycles per second [Hz], and also is often stated in bits or bytes per second. See: band.\n\nbar code. (ISO) A code representing characters by sets of parallel bars of varying thickness and separation that are read optically by transverse scanning.\n\nbaseline. (NIST) A specification or product that has been formally reviewed and agreed upon, that serves as the basis for further development, and that can be changed only through formal change control procedures.\n\nBASIC. An acronym for Beginners All-purpose Symbolic Instruction Code, a high-level programming language intended to facilitate learning to program in an interactive environment.\n\nbasic input/output system. Firmware that activates peripheral devices in a PC. Includes routines for the keyboard, screen, disk, parallel port and serial port, and for internal services such as time and date. It accepts requests from the device drivers in the operating system as well from application programs. It also contains autostart functions that test the system on startup and prepare the computer for operation. It loads the operating system and passes control to it.\n\nbatch. (IEEE) Pertaining to a system or mode of operation in which inputs are collected and processed all at one time, rather than being processed as they arrive, and a job, once started, proceeds to completion without additional input or user interaction. Contrast with conversational, interactive, on-line, real time.\n\nbatch processing. Execution of programs serially with no interactive processing. Contrast with real time processing.\n\nbaud. The signalling rate of a line. It's the switching speed, or number of transitions [voltage or frequency change] made per second. At low speeds bauds are equal to bits per seconds; e.g., 300 baud is equal to 300 bps. However, one baud can be made to represent more than one bit per second.\n\nbenchmark. A standard against which measurements or comparisons can be made.\n\nbias. A measure of how closely the mean value in a series of replicate measurements approaches the true value. See: accuracy, precision, calibration.\n\nbinary. The base two number system. Permissible digits are \"0\" and \"1\".\n\nbit. A contraction of the term binary digit. The bit is the basic unit of digital data. It may be in one of two states, logic 1 or logic 0. It may be thought of as a switch which is either on or off. Bits are usually combined into computer words of various sizes, such as the byte.\n\nbits per second. A measure of the speed of data transfer in a communications system.\n\nblack-box testing. See: testing, functional.\n\nblock. (ISO) (1) A string of records, words, or characters that for technical or logical purposes are treated as a unity. (2) A collection of contiguous records that are recorded as a unit, and the units are separated by interblock gaps. (3) A group of bits or digits that are transmitted as a unit and that may be encoded for error-control purposes. (4) In programming languages, a subdivision of a program that serves to group related statements, delimit routines, specify storage allocation, delineate the applicability of labels, or segment parts of the program for other purposes. In FORTRAN, a block may be a sequence of statements; in COBOL, it may be a physical record.\n\nblock check. (ISO) The part of the error control procedure that is used for determining that a block of data is structured according to given rules.\n\nblock diagram. (NIST) A diagram of a system, instrument or computer, in which the principal parts are represented by suitably annotated geometrical figures to show both the basic functions of the parts and the functional relationships between them.\n\nblock length. (1) (ISO) The number of records, words or characters in a block. (2) (ANSI) A measure of the size of a block, usually specified in units such as records, words, computer words, or characters.\n\nblock transfer. (ISO) The process, initiated by a single action, of transferring one or more blocks of data.\n\nblocking factor. (ISO) The number of records in a block. The number is computed by dividing the size of the block by the size of each record contained therein. Syn: grouping factor.\n\nblueprint. An exact or detailed plan or outline. Contrast with graph.\n\nbomb. A trojan horse which attacks a computer system upon the occurrence of a specific logical event [logic bomb], the occurrence of a specific time-related logical event [time bomb], or is hidden in electronic mail or data and is triggered when read in a certain way [letter bomb]. See: trojan horse, virus, worm.\n\nboolean. Pertaining to the principles of mathematical logic developed by George Boole, a nineteenth century mathematician. Boolean algebra is the study of operations carried out on variables that can have only one of two possible values; i.e., 1 (true) and 0 (false). As ADD, SUBTRACT, MULTIPLY, and DIVIDE are the primary operations of arithmetic, AND, OR, and NOT are the primary operations of Boolean Logic. In Pascal a boolean variable is a variable that can have one of two possible values, true or false.\n\nboot. (1) (IEEE) To initialize a computer system by clearing memory and reloading the operating system. (2) To cause a computer system to reach a known beginning state. A boot program, in firmware, typically performs this function which includes loading basic instructions which tell the computer how to load programs into memory and how to begin executing those programs. A distinction can be made between a warm boot and a cold boot. A cold boot means starting the system from a powered-down state. A warm boot means restarting the computer while it is powered-up. Important differences between the two procedures are; 1) a power-up self-test, in which various portions of the hardware [such as memory] are tested for proper operation, is performed during a cold boot while a warm boot does not normally perform such self-tests, and 2) a warm boot does not clear all memory.\n\nbootstrap. (IEEE) A short computer program that is permanently resident or easily loaded into a computer and whose execution brings a larger program, such an operating system or its loader, into memory.\n\nboundary value. (1) (IEEE) A data value that corresponds to a minimum or maximum input, internal, or output value specified for a system or component. (2) A value which lies at, or just inside or just outside a specified range of valid input and output values.\n\nboundary value analysis. (NBS) A selection technique in which test data are chosen to lie along \"boundaries\" of the input domain [or output range] classes, data structures, procedure parameters, etc. Choices often include maximum, minimum, and trivial values or parameters. This technique is often called stress testing. See: testing, boundary value.\n\nbox diagram. (IEEE) A control flow diagram consisting of a rectangle that is subdivided to show sequential steps, if-then-else conditions, repetition, and case conditions. Syn: Chapin chart, Nassi-Shneiderman chart, program structure diagram. See: block diagram, bubble chart, flowchart, graph, input-process-output chart, structure chart.\n\nbranch. An instruction which causes program execution to jump to a new point in the program sequence, rather than execute the next instruction. Syn: jump.\n\nbranch analysis. (Myers) A test case identification technique which produces enough test cases such that each decision has a true and a false outcome at least once. Contrast with path analysis.\n\nbranch coverage. (NBS) A test coverage criteria which requires that for each decision point each possible branch be executed at least once. Syn: decision coverage. Contrast with condition coverage, multiple condition coverage, path coverage, statement coverage. See: testing, branch.\n\nbubble chart. (IEEE) A data flow, data structure, or other diagram in which entities are depicted with circles [bubbles] and relationships are represented by links drawn between the circles. See: block diagram, box diagram, flowchart, graph, input-process-output chart, structure chart.\n\nbuffer. A device or storage area [memory] used to store data temporarily to compensate for differences in rates of data flow, time of occurrence of events, or amounts of data that can be handled by the devices or processes involved in the transfer or use of the data.\n\nbug. A fault in a program which causes the program to perform in an unintended or unanticipated manner. See: anomaly, defect, error, exception, fault.\n\nbus. A common pathway along which data and control signals travel between different hardware devices within a computer system. (A) When bus architecture is used in a computer, the CPU, memory and peripheral equipment are interconnected through the bus. The bus is often divided into two channels, a control channel to select where data is located [address bus], and the other to transfer the data [data bus or I/O bus]. Common buses are: ISA [Industry Standard Architecture] the original IBM PC 16 bit AT bus; EISA [Extended Industry Standard Architecture] the IBM PC 32 bit XT bus [which provides for bus mastering]; MCA [MicroChannel Architecture] an IBM 32 bit bus; Multibus I & II [advanced, 16 & 32 bit respectively, bus architecture by Intel used in industrial, military and aerospace applications]; NuBus, a 32 bit bus architecture originally developed at MIT [A version is used in the Apple Macintosh computer]; STD bus, a bus architecture used in medical and industrial equipment due to its small size and rugged design [Originally 8 bits, with extensions to 16 and 32 bits]; TURBO Channel, a DEC 32 bit data bus with peak transfer rates of 100 MB/second; VMEbus [Versa Module Eurocard Bus], a 32 bit bus from Motorola, et.al., used in industrial, commercial and military applications worldwide [VME64 is an expanded version that provides 64 bit data transfer and addressing]. (B) When bus architecture is used in a network, all terminals and computers are connected to a common channel that is made of twisted wire pairs, coaxial cable, or optical fibers. Ethernet is a common LAN architecture using a bus topology.\n\nbyte. A sequence of adjacent bits, usually eight, operated on as a unit.\n\n- C -\n\nCAD. computer aided design.\n\nCAM. computer aided manufacturing.\n\nCASE. computer aided software engineering.\n\nCCITT. Consultive Committee for International Telephony and Telegraphy.\n\nCD-ROM. compact disc - read only memory.\n\nCISC. complex instruction set computer.\n\nCMOS. complementary metal-oxide semiconductor.\n\nCO-AX. coaxial cable.\n\nCOTS. configurable, off-the-shelf software.\n\nCP/M. Control Program for Microcomputers.\n\nCPU. central processing unit.\n\nCRC. cyclic redundancy [check] code.\n\nCRT. cathode ray tube.\n\nC. A general purpose high-level programming language. Created for use in the development of computer operating systems software. It strives to combine the power of assembly language with the ease of a high-level language.\n\nC++. An object-oriented high-level programming language.\n\ncalibration. Ensuring continuous adequate performance of sensing, measurement, and actuating equipment with regard to specified accuracy and precision requirements. See: accuracy, bias, precision.\n\ncall graph. (IEEE) A diagram that identifies the modules in a system or computer program and shows which modules call one another. Note: The result is not necessarily the same as that shown in a structure chart. Syn: call tree, tier chart. Contrast with structure chart. See: control flow diagram, data flow diagram, data structure diagram, state diagram.\n\ncathode ray tube. An output device. Syn: display, monitor, screen.\n\ncause effect graph. (Myers) A Boolean graph linking causes and effects. The graph is actually a digital-logic circuit (a combinatorial logic network) using a simpler notation than standard electronics notation.\n\ncause effect graphing. (1) (NBS) Test data selection technique. The input and output domains are partitioned into classes and analysis is performed to determine which input classes cause which effect. A minimal set of inputs is chosen which will cover the entire effect set. (2) (Myers) A systematic method of generating test cases representing combinations of conditions. See: testing, functional.\n\ncentral processing unit. The unit of a computer that includes the circuits controlling the interpretation of program instructions and their execution. The CPU controls the entire computer. It receives and sends data through input-output channels, retrieves data and programs from memory, and conducts mathematical and logical functions of a program.\n\ncertification. (ANSI) In computer systems, a technical evaluation, made as part of and in support of the accreditation process, that establishes the extent to which a particular computer system or network design and implementation meet a prespecified set of requirements.\n\nchange control. The processes, authorities for, and procedures to be used for all changes that are made to the computerized system and/or the system's data. Change control is a vital subset of the Quality Assurance [QA] program within an establishment and should be clearly described in the establishment's SOPs. See: configuration control.\n\nchange tracker. A software tool which documents all changes made to a program.\n\ncheck summation. A technique for error detection to ensure that data or program files have been accurately copied or transferred. Basically, a redundant check in which groups of digits; e.g., a file, are summed, usually without regard to overflow, and that sum checked against a previously computed sum to verify operation accuracy. Contrast with cyclic redundancy check [CRC], parity check. See: checksum.\n\nchecksum. (IEEE) A sum obtained by adding the digits in a numeral, or group of numerals [a file], usually without regard to meaning, position, or significance. See: check summation.\n\nchip. See: integrated circuit.\n\nclient-server. A term used in a broad sense to describe the relationship between the receiver and the provider of a service. In the world of microcomputers, the term client-server describes a networked system where front-end applications, as the client, make service requests upon another networked system. Client-server relationships are defined primarily by software. In a local area network [LAN], the workstation is the client and the file server is the server. However, client-server systems are inherently more complex than file server systems. Two disparate programs must work in tandem, and there are many more decisions to make about separating data and processing between the client workstations and the database server. The database server encapsulates database files and indexes, restricts access, enforces security, and provides applications with a consistent interface to data via a data dictionary.\n\nclock. (ISO) A device that generates periodic, accurately spaced signals used for such purposes as timing, regulation of the operations of a processor, or generation of interrupts.\n\ncoaxial cable. High-capacity cable used in communications and video transmissions. Provides a much higher bandwidth than twisted wire pair.\n\nCOBOL. Acronym for COmmon Business Oriented Language. A high-level programming language intended for use in the solution of problems in business data processing.\n\ncode. See: program, source code.\n\ncode audit. (IEEE) An independent review of source code by a person, team, or tool to verify compliance with software design documentation and programming standards. Correctness and efficiency may also be evaluated. Contrast with code inspection, code review, code walkthrough. See: static analysis.\n\ncode auditor. A software tool which examines source code for adherence to coding and documentation conventions.\n\ncode inspection. (Myers/NBS) A manual [formal] testing [error detection] technique where the programmer reads source code, statement by statement, to a group who ask questions analyzing the program logic, analyzing the code with respect to a checklist of historically common programming errors, and analyzing its compliance with coding standards. Contrast with code audit, code review, code walkthrough. This technique can also be applied to other software and configuration items. Syn: Fagan Inspection. See: static analysis.\n\ncode review. (IEEE) A meeting at which software code is presented to project personnel, managers, users, customers, or other interested parties for comment or approval. Contrast with code audit, code inspection, code walkthrough. See: static analysis.\n\ncode walkthrough. (Myers/NBS) A manual testing [error detection] technique where program [source code] logic [structure] is traced manually [mentally] by a group with a small set of test cases, while the state of program variables is manually monitored, to analyze the programmer's logic and assumptions. Contrast with code audit, code inspection, code review. See: static analysis.\n\ncoding. (IEEE) (1) In software engineering, the process of expressing a computer program in a programming language. (2) The transforming of logic and data from design specifications (design descriptions) into a programming language. See: implementation.\n\ncoding standards. Written procedures describing coding [programming] style conventions specifying rules governing the use of individual constructs provided by the programming language, and naming, formatting, and documentation requirements which prevent programming errors, control complexity and promote understandability of the source code. Syn: development standards, programming standards.\n\ncomment. (1) (ISO) In programming languages, a language construct that allows [explanatory] text to be inserted into a program and that does not have any effect on the execution of the program. (2) (IEEE) Information embedded within a computer program, job control statements, or a set of data, that provides clarification to human readers but does not affect machine interpretation.\n\ncompact disc - read only memory. A compact disk used for the permanent storage of text, graphic or sound information. Digital data is represented very compactly by tiny holes that can be read by lasers attached to high resolution sensors. Capable of storing up to 680 MB of data, equivalent to 250,000 pages of text, or 20,000 medium resolution images. This storage media is often used for archival purposes. Syn: optical disk, write-once read-many times disk.\n\ncomparator. (IEEE) A software tool that compares two computer programs, files, or sets of data to identify commonalities or differences. Typical objects of comparison are similar versions of source code, object code, data base files, or test results.\n\ncompatibility. (ANSI) The capability of a functional unit to meet the requirements of a specified interface.\n\ncompilation. (NIST) Translating a program expressed in a problem-oriented language or a procedure oriented language into object code. Contrast with assembling, interpret. See: compiler.\n\ncompile. See: compilation.\n\ncompiler. (1) (IEEE) A computer program that translates programs expressed in a high-level language into their machine language equivalents. (2) The compiler takes the finished source code listing as input and outputs the machine code instructions that the computer must have to execute the program. See: assembler, interpreter, cross-assembler, cross-compiler.\n\ncompiling. See: compilation.\n\ncomplementary metal-oxide semiconductor. A type of integrated circuit widely used for processors and memories. It is a combination of transistors on a single chip connected to complementary digital circuits.\n\ncompleteness. (NIST) The property that all necessary parts of the entity are included. Completeness of a product is often used to express the fact that all requirements have been met by the product. See: traceability analysis.\n\ncomplex instruction set computer. Traditional computer architecture that operates with large sets of possible instructions. Most computers are in this category, including the IBM compatible microcomputers. As computing technology evolved, instruction sets expanded to include newer instructions which are complex in nature and require several to many execution cycles and, therefore, more time to complete. Computers which operate with system software based on these instruction sets have been referred to as complex instruction set computers. Contrast with reduced instruction set computer [RISC].\n\ncomplexity. (IEEE) (1) The degree to which a system or component has a design or implementation that is difficult to understand and verify. (2) Pertaining to any of a set of structure based metrics that measure the attribute in (1).\n\ncomponent. See: unit.\n\ncomputer. (IEEE) (1) A functional unit that can perform substantial computations, including numerous arithmetic operations, or logic operations, without human intervention during a run. (2) A functional programmable unit that consists of one or more associated processing units and peripheral equipment, that is controlled by internally stored programs, and that can perform substantial computations, including numerous arithmetic operations, or logic operations, without human intervention.\n\ncomputer aided design. The use of computers to design products. CAD systems are high speed workstations or personal computers using CAD software and input devices such as graphic tablets and scanners to model and simulate the use of proposed products. CAD output is a printed design or electronic output to CAM systems. CAD software is available for generic design or specialized uses such as architectural, electrical, and mechanical design. CAD software may also be highly specialized for creating products such as printed circuits and integrated circuits.\n\ncomputer aided manufacturing. The automation of manufacturing systems and techniques, including the use of computers to communicate work instructions to automate machinery for the handling of the processing [numerical control, process control, robotics, material requirements planning] needed to produce a workpiece.\n\ncomputer aided software engineering. An automated system for the support of software development including an integrated tool set, i.e., programs, which facilitate the accomplishment of software engineering methods and tasks such as project planning and estimation, system and software requirements analysis, design of data structure, program architecture and algorithm procedure, coding, testing and maintenance.\n\ncomputer instruction set. (ANSI) A complete set of the operators of the instructions of a computer together with a description of the types of meanings that can be attributed to their operands. Syn: machine instruction set.\n\ncomputer language. (IEEE) A language designed to enable humans to communicate with computers. See: programming language.\n\ncomputer program. See: program.\n\ncomputer science. (ISO) The branch of science and technology that is concerned with methods and techniques relating to data processing performed by automatic means.\n\ncomputer system. (ANSI) a functional unit, consisting of one or more computers and associated peripheral input and output devices, and associated software, that uses common storage for all or part of a program and also for all or part of the data necessary for the execution of the program; executes user-written or user-designated programs; performs user-designated data manipulation, including arithmetic operations and logic operations; and that can execute programs that modify themselves during their execution. A computer system may be a stand-alone unit or may consist of several interconnected units. See: computer, computerized system.\n\ncomputer system audit. (ISO) An examination of the procedures used in a computer system to evaluate their effectiveness and correctness and to recommend improvements. See: software audit.\n\ncomputer system security. (IEEE) The protection of computer hardware and software from accidental or malicious access, use, modification, destruction, or disclosure. Security also pertains to personnel, data, communications, and the physical protection of computer installations. See: bomb, trojan horse, virus, worm.\n\ncomputer word. A sequence of bits or characters that is stored, addressed, transmitted, and operated on as a unit within a given computer. Typically one to four bytes long, depending on the make of computer.\n\ncomputerized system. Includes hardware, software, peripheral devices, personnel, and documentation; e.g., manuals and Standard Operating Procedures. See: computer, computer system.\n\nconcept phase. (IEEE) The initial phase of a software development project, in which user needs are described and evaluated through documentation; e.g., statement of needs, advance planning report, project initiation memo. feasibility studies, system definition documentation, regulations, procedures, or policies relevant to the project.\n\ncondition coverage. (Myers) A test coverage criteria requiring enough test cases such that each condition in a decision takes on all possible outcomes at least once, and each point of entry to a program or subroutine is invoked at least once. Contrast with branch coverage, decision coverage, multiple condition coverage, path coverage, statement coverage.\n\nconfigurable, off-the-shelf software. Application software, sometimes general purpose, written for a variety of industries or users in a manner that permits users to modify the program to meet their individual needs.\n\nconfiguration. (IEEE) (1) The arrangement of a computer system or component as defined by the number, nature, and interconnections of its constituent parts. (2) In configuration management, the functional and physical characteristics of hardware or software as set forth in technical documentation or achieved in a product.\n\nconfiguration audit. See: functional configuration audit, physical configuration audit.\n\nconfiguration control. (IEEE) An element of configuration management, consisting of the evaluation, coordination, approval or disapproval, and implementation of changes to configuration items after formal establishment of their configuration identification. See: change control.\n\nconfiguration identification. (IEEE) An element of configuration management, consisting of selecting the configuration items for a system and recording their functional and physical characteristics in technical documentation.\n\nconfiguration item. (IEEE) An aggregation of hardware, software, or both that is designated for configuration management and treated as a single entity in the configuration management process. See: software element.\n\nconfiguration management. (IEEE) A discipline applying technical and administrative direction and surveillance to identify and document the functional and physical characteristics of a configuration item, control changes to those characteristics, record and report change processing and implementation status, and verifying compliance with specified requirements. See: configuration control, change control, software engineering.\n\nconsistency. (IEEE) The degree of uniformity, standardization, and freedom from contradiction among the documents or parts of a system or component. See: traceability.\n\nconsistency checker. A software tool used to test requirements in design specifications for both consistency and completeness.\n\nconstant. A value that does not change during processing. Contrast with variable.\n\nconstraint analysis. (IEEE) (1) Evaluation of the safety of restrictions imposed on the selected design by the requirements and by real world restrictions. The impacts of the environment on this analysis can include such items as the location and relation of clocks to circuit cards, the timing of a bus latch when using the longest safety-related timing to fetch data from the most remote circuit card, interrupts going unsatisfied due to a data flood at an input, and human reaction time. (2) verification that the program operates within the constraints imposed upon it by requirements, the design, and the target computer. Constraint analysis is designed to identify these limitations to ensure that the program operates within them, and to ensure that all interfaces have been considered for out-of-sequence and erroneous inputs.\n\nConsultive Committee for International Telephony and Telegraphy. See: International Telecommunications Union - Telecommunications Standards Section.\n\ncontrol bus. (ANSI) A bus carrying the signals that regulate system operations. See: bus.\n\ncontrol flow. (ISO) In programming languages, an abstraction of all possible paths that an execution sequence may take through a program.\n\ncontrol flow analysis. (IEEE) A software V&V task to ensure that the proposed control flow is free of problems, such as design or code elements that are unreachable or incorrect.\n\ncontrol flow diagram. (IEEE) A diagram that depicts the set of all possible sequences in which operations may be performed during the execution of a system or program. Types include box diagram, flowchart, input-process-output chart, state diagram. Contrast with data flow diagram. See: call graph, structure chart.\n\nControl Program for Microcomputers. An operating system. A registered trademark of Digital Research.\n\ncontroller. Hardware that controls peripheral devices such as a disk or display screen. It performs the physical data transfers between main memory and the peripheral device.\n\nconversational. (IEEE) Pertaining to a interactive system or mode of operation in which the interaction between the user and the system resembles a human dialog. Contrast with batch. See: interactive, on-line, real time.\n\ncoroutine. (IEEE) A routine that begins execution at the point at which operation was last suspended, and that is not required to return control to the program or subprogram that called it. Contrast with subroutine.\n\ncorrective maintenance. (IEEE) Maintenance performed to correct faults in hardware or software. Contrast with adaptive maintenance, perfective maintenance.\n\ncorrectness. (IEEE) The degree to which software is free from faults in its specification, design and coding. The degree to which software, documentation and other items meet specified requirements. The degree to which software, documentation and other items meet user needs and expectations, whether specified or not.\n\ncoverage analysis. (NIST) Determining and assessing measures associated with the invocation of program structural elements to determine the adequacy of a test run. Coverage analysis is useful when attempting to execute each statement, branch, path, or iterative structure in a program. Tools that capture this data and provide reports summarizing relevant information have this feature. See: testing, branch; testing, path; testing, statement.\n\ncrash. (IEEE) The sudden and complete failure of a computer system or component.\n\ncritical control point. (QA) A function or an area in a manufacturing process or procedure, the failure of which, or loss of control over, may have an adverse affect on the quality of the finished product and may result in a unacceptable health risk.\n\ncritical design review. (IEEE) A review conducted to verify that the detailed design of one or more configuration items satisfy specified requirements; to establish the compatibility among the configuration items and other items of equipment, facilities, software, and personnel; to assess risk areas for each configuration item; and, as applicable, to assess the results of producibility analyses, review preliminary hardware product specifications, evaluate preliminary test planning, and evaluate the adequacy of preliminary operation and support documents. See: preliminary design review, system design review.\n\ncriticality. (IEEE) The degree of impact that a requirement, module, error, fault, failure, or other item has on the development or operation of a system. Syn: severity.\n\ncriticality analysis. (IEEE) Analysis which identifies all software requirements that have safety implications, and assigns a criticality level to each safety-critical requirement based upon the estimated risk.\n\ncross-assembler. (IEEE) An assembler that executes on one computer but generates object code for a different computer.\n\ncross-compiler. (IEEE) A compiler that executes on one computer but generates assembly code or object code for a different computer.\n\ncursor. (ANSI) A movable, visible mark used to indicate a position of interest on a display surface.\n\ncyclic redundancy [check] code. A technique for error detection in data communications used to assure a program or data file has been accurately transferred. The CRC is the result of a calculation on the set of transmitted bits by the transmitter which is appended to the data. At the receiver the calculation is repeated and the results compared to the encoded value. The calculations are chosen to optimize error detection. Contrast with check summation, parity check.\n\ncyclomatic complexity. (1) (McCabe) The number of independent paths through a program. (2) (NBS) The cyclomatic complexity of a program is equivalent to the number of decision statements plus 1.\n\n- D -\n\nDAC. digital-to-analog converter.\n\nDFD. data flow diagram.\n\nDMA. direct memory access.\n\nDOS. disk operating system.\n\ndata. Representations of facts, concepts, or instructions in a manner suitable for communication, interpretation, or processing by humans or by automated means.\n\ndata analysis. (IEEE) (1) Evaluation of the description and intended use of each data item in the software design to ensure the structure and intended use will not result in a hazard. Data structures are assessed for data dependencies that circumvent isolation, partitioning, data aliasing, and fault containment issues affecting safety, and the control or mitigation of hazards. (2) Evaluation of the data structure and usage in the code to ensure each is defined and used properly by the program. Usually performed in conjunction with logic analysis.\n\ndata bus. (ANSI) A bus used to communicate data internally and externally to and from a processing unit or a storage device. See: bus.\n\ndata corruption. (ISO) A violation of data integrity. Syn: data contamination.\n\ndata dictionary. (IEEE) (1) A collection of the names of all data items used in a software system, together with relevant properties of those items; e.g., length of data item, representation, etc. (2) A set of definitions of data flows, data elements, files, data bases, and processes referred to in a leveled data flow diagram set.\n\ndata element. (1) (ISO) A named unit of data that, in some contexts, is considered indivisible and in other contexts may consist of data items. (2) A named identifier of each of the entities and their attributes that are represented in a database.\n\ndata exception. (IEEE) An exception that occurs when a program attempts to use or access data incorrectly.\n\ndata flow analysis. (IEEE) A software V&V task to ensure that the input and output data and their formats are properly defined, and that the data flows are correct.\n\ndata flow diagram. (IEEE) A diagram that depicts data sources, data sinks, data storage, and processes performed on data as nodes, and logical flow of data as links between the nodes. Syn: data flowchart, data flow graph.\n\ndata integrity. (IEEE) The degree to which a collection of data is complete, consistent, and accurate. Syn: data quality.\n\ndata item. (ANSI) A named component of a data element. Usually the smallest component.\n\ndata set. A collection of related records. Syn: file.\n\ndata sink. (IEEE) The equipment which accepts data signals after transmission.\n\ndata structure. (IEEE) A physical or logical relationship among data elements, designed to support specific data manipulation functions.\n\ndata structure centered design. A structured software design technique wherein the architecture of a system is derived from analysis of the structure of the data sets with which the system must deal.\n\ndata structure diagram. (IEEE) A diagram that depicts a set of data elements, their attributes, and the logical relationships among them. Contrast with data flow diagram. See: entity-relationship diagram.\n\ndata validation. (1) (ISO) A process used to determine if data are inaccurate, incomplete, or unreasonable. The process may include format checks, completeness checks, check key tests, reasonableness checks and limit checks. (2) The checking of data for correctness or compliance with applicable standards, rules, and conventions.\n\ndatabase. (ANSI) A collection of interrelated data, often with controlled redundancy, organized according to a schema to serve one or more applications. The data are stored so that they can be used by different programs without concern for the data structure or organization. A common approach is used to add new data and to modify and retrieve existing data. See: archival database.\n\ndatabase analysis. (IEEE) A software V&V task to ensure that the database structure and access methods are compatible with the logical design.\n\ndatabase security. The degree to which a database is protected from exposure to accidental or malicious alteration or destruction.\n\ndead code. Program code statements which can never execute during program operation. Such code can result from poor coding style, or can be an artifact of previous versions or debugging efforts. Dead code can be confusing, and is a potential source of erroneous software changes. See: infeasible path.\n\ndebugging. (Myers) Determining the exact nature and location of a program error, and fixing the error.\n\ndecision coverage. (Myers) A test coverage criteria requiring enough test cases such that each decision has a true and false result at least once, and that each statement is executed at least once. Syn: branch coverage. Contrast with condition coverage, multiple condition coverage, path coverage, statement coverage.\n\ndecision table. (IEEE) A table used to show sets of conditions and the actions resulting from them.\n\ndefault. (ANSI) Pertaining to an attribute, value, or option that is assumed when none is explicitly specified.\n\ndefault value. A standard setting or state to be taken by the program if no alternate setting or state is initiated by the system or the user. A value assigned automatically if one is not given by the user.\n\ndefect. See: anomaly, bug, error, exception, fault.\n\ndefect analysis. See: failure analysis.\n\ndelimiter. (ANSI) A character used to indicate the beginning or the end of a character string. Syn: separator.\n\ndemodulate. Retrieve the information content from a modulated carrier wave; the reverse of modulate. Contrast with modulate.\n\ndemodulation. Converting signals from a wave form [analog] to pulse form [digital]. Contrast with modulation.\n\ndependability. A facet of reliability that relates to the degree of certainty that a system or component will operate correctly.\n\ndesign. (IEEE) The process of defining the architecture, components, interfaces, and other characteristics of a system or component. See: architectural design, preliminary design, detailed design.\n\ndesign description. (IEEE) A document that describes the design of a system or component. Typical contents include system or component architecture, control logic, data structures, data flow, input/output formats, interface descriptions and algorithms. Syn: design document. Contrast with specification, requirements. See: software design description.\n\ndesign level. (IEEE) The design decomposition of the software item; e.g., system, subsystem, program or module.\n\ndesign of experiments. A methodology for planning experiments so that data appropriate for [statistical] analysis will be collected.\n\ndesign phase. (IEEE) The period of time in the software life cycle during which the designs for architecture, software components, interfaces, and data are created, documented, and verified to satisfy requirements.\n\ndesign requirement. (IEEE) A requirement that specifies or constrains the design of a system or system component.\n\ndesign review. (IEEE) A process or meeting during which a system, hardware, or software design is presented to project personnel, managers, users, customers, or other interested parties for comment or approval. Types include critical design review, preliminary design review, system design review.\n\ndesign specification. See: specification, design.\n\ndesign standards. (IEEE) Standards that describe the characteristics of a design or a design description of data or program components.\n\ndesk checking. The application of code audit, inspection, review and walkthrough techniques to source code and other software documents usually by an individual [often by the person who generated them] and usually done informally.\n\ndetailed design. (IEEE) (1) The process of refining and expanding the preliminary design of a system or component to the extent that the design is sufficiently complete to be implemented. See: software development process. (2) The result of the process in (1).\n\ndeveloper. A person, or group, that designs and/or builds and/or documents and/or configures the hardware and/or software of computerized systems.\n\ndevelopment methodology. (ANSI) A systematic approach to software creation that defines development phases and specifies the activities, products, verification procedures, and completion criteria for each phase. See: incremental development, rapid prototyping, spiral model, waterfall model.\n\ndevelopment standards. Syn: coding standards.\n\ndiagnostic. (IEEE) Pertaining to the detection and isolation of faults or failures. For example, a diagnostic message, a diagnostic manual.\n\ndifferent software system analysis. (IEEE) Analysis of the allocation of software requirements to separate computer systems to reduce integration and interface errors related to safety. Performed when more than one software system is being integrated. See: testing, compatibility.\n\ndigital. Pertaining to data [signals] in the form of discrete [separate/pulse form] integral values. Contrast with analog.\n\ndigital-to-analog converter. Output related devices which translate a computer's digital outputs to the corresponding analog signals needed by an output device such as an actuator. Contrast with ADC [Analog-to-Digital Converter].\n\ndirect memory access. Specialized circuitry or a dedicated microprocessor that transfers data from memory to memory without using the CPU.\n\ndirected graph. (IEEE) A graph in which direction is implied in the internode connections. Syn: digraph.\n\ndisk. Circular rotating magnetic storage hardware. Disks can be hard [fixed] or flexible [removable] and different sizes.\n\ndisk drive. Hardware used to read from or write to a disk or diskette.\n\ndisk operating system. An operating system program; e.g., DR-DOS from Digital Research, MS-DOS from Microsoft Corp., OS/2 from IBM, PC-DOS from IBM, System-7 from Apple.\n\ndiskette. A floppy [flexible] disk.\n\ndocumentation. (ANSI) The aids provided for the understanding of the structure and intended uses of an information system or its components, such as flowcharts, textual material, and user manuals.\n\ndocumentation, level of. (NIST) A description of required documentation indicating its scope, content, format, and quality. Selection of the level may be based on project cost, intended usage, extent of effort, or other factors; e.g., level of concern.\n\ndocumentation plan. (NIST) A management document describing the approach to a documentation effort. The plan typically describes what documentation types are to be prepared, what their contents are to be, when this is to be done and by whom, how it is to be done, and what are the available resources and external factors affecting the results.\n\ndocumentation, software. (NIST) Technical data or information, including computer listings and printouts, in human readable form, that describe or specify the design or details, explain the capabilities, or provide operating instructions for using the software to obtain desired results from a software system. See: specification; specification, requirements; specification. design; software design description; test plan, test report, user's guide.\n\ndrift. (ISO) The unwanted change of the value of an output signal of a device over a period of time when the values of all input signals to the device are kept constant.\n\ndriver. A program that links a peripheral device or internal function to the operating system, and providing for activation of all device functions. Syn: device driver. Contrast with test driver.\n\nduplex transmission. (ISO) Data transmission in both directions at the same time.\n\ndynamic analysis. (NBS) Analysis that is performed by executing the program code. Contrast with static analysis. See: testing.\n\n- E -\n\nEBCDIC. extended binary coded decimal interchange code.\n\nEEPROM. electrically erasable programmable read only memory.\n\nEMI. electromagnetic interference.\n\nEPROM. erasable programmable read only memory.\n\nESD. electrostatic discharge.\n\nESDI. enhanced small device interface.\n\nediting. (NIST) Modifying the content of the input by inserting, deleting, or moving characters, numbers, or data.\n\nelectrically erasable programmable read only memory. Chips which may be programmed and erased numerous times like an EPROM. However an EEPROM is erased electrically. This means this IC does not necessarily have to be removed from the circuit in which it is mounted in order to erase and reprogram the memory.\n\nelectromagnetic interference. Low frequency electromagnetic waves that emanate from electromechanical devices. An electromagnetic disturbance caused by such radiating and transmitting sources as heavy duty motors and power lines can induce unwanted voltages in electronic circuits, damage components and cause malfunctions. See: radiofrequency interference.\n\nelectronic media. Hardware intended to store binary data; e.g., integrated circuit, magnetic tape, magnetic disk.\n\nelectrostatic discharge. The movement of static electricity, e.g. sparks, from a non-conductive surface to an approaching conductive object that can damage or destroy semiconductors and other circuit components. Static electricity can build on paper, plastic or other non-conductors and can be discharged by human skin, e.g. finger, contact. It can also be generated by scuffing shoes on a carpet or by brushing a non-conductor. MOSFETs and CMOS logic ICs are especially vulnerable because it causes internal local heating that melts or fractures the dielectric silicon oxide that insulates gates from other internal structures.\n\nembedded computer. A device which has its own computing power dedicated to specific functions, usually consisting of a microprocessor and firmware. The computer becomes an integral part of the device as opposed to devices which are controlled by an independent, stand-alone computer. It implies software that integrates operating system and application functions.\n\nembedded software. (IEEE) Software that is part of a larger system and performs some of the requirements of that system; e.g., software used in an aircraft or rapid transit system. Such software does not provide an interface with the user. See: firmware.\n\nemulation. (IEEE) A model that accepts the same inputs and produces the same outputs as a given system. To imitate one system with another. Contrast with simulation.\n\nemulator. (IEEE) A device, computer program, or system that accepts the same inputs and produces the same outputs as a given system. Contrast with simulator.\n\nencapsulation. (IEEE) A software development technique that consists of isolating a system function or a set of data and the operations on those data within a module and providing precise specifications for the module. See: abstraction, information hiding, software engineering.\n\nend user. (ANSI) (1) A person, device, program, or computer system that uses an information system for the purpose of data processing in information exchange. (2) A person whose occupation requires the use of an information system but does not require any knowledge of computers or computer programming. See: user.\n\nenhanced small device interface. A standard interface for hard disks introduced in 1983 which provides for faster data transfer compared to ST-506. Contrast with ST-506, IDE, SCSI.\n\nentity relationship diagram. (IEEE) A diagram that depicts a set of real-world entities and the logical relationships among them. See: data structure diagram.\n\nenvironment. (ANSI) (1) Everything that supports a system or the performance of a function. (2) The conditions that affect the performance of a system or function.\n\nequivalence class partitioning. (Myers) Partitioning the input domain of a program into a finite number of classes [sets], to identify a minimal set of well selected test cases to represent these classes. There are two types of input equivalence classes, valid and invalid. See: testing, functional.\n\nerasable programmable read only memory. Chips which may be programmed by using a PROM programming device. Before programming each bit is set to the same logical state, either 1 or 0. Each bit location may be thought of as a small capacitor capable of storing an electrical charge. The logical state is established by charging, via an electrical current, all bits whose states are to be changed from the default state. EPROMs may be erased and reprogrammed because the electrical charge at the bit locations can be bled off [i.e. reset to the default state] by exposure to ultraviolet light through the small quartz window on top of the IC. After programming, the IC's window must be covered to prevent exposure to UV light until it is desired to reprogram the chip. An EPROM eraser is a device for exposing the IC's circuits to UV light of a specific wavelength for a certain amount of time.\n\nerror. (ISO) A discrepancy between a computed, observed, or measured value or condition and the true, specified, or theoretically correct value or condition. See: anomaly, bug, defect, exception, fault.\n\nerror analysis. See: debugging, failure analysis.\n\nerror detection. Techniques used to identify errors in data transfers. See: check summation, cyclic redundancy check [CRC], parity check, longitudinal redundancy.\n\nerror guessing. (NBS) Test data selection technique. The selection criterion is to pick values that seem likely to cause errors. See: special test data; testing, special case.\n\nerror seeding. (IEEE) The process of intentionally adding known faults to those already in a computer program for the purpose of monitoring the rate of detection and removal, and estimating the number of faults remaining in the program. Contrast with mutation analysis.\n\nevent table. A table which lists events and the corresponding specified effect[s] of or reaction[s] to each event.\n\nevolutionary development. See: spiral model.\n\nexception. (IEEE) An event that causes suspension of normal program execution. Types include addressing exception, data exception, operation exception, overflow exception, protection exception, underflow exception.\n\nexception conditions/responses table. A special type of event table.\n\nexecution trace. (IEEE) A record of the sequence of instructions executed during the execution of a computer program. Often takes the form of a list of code labels encountered as the program executes. Syn: code trace, control flow trace. See: retrospective trace, subroutine trace, symbolic trace, variable trace.\n\nexception. (IEEE) An event that causes suspension of normal program operation. Types include addressing exception, data exception, operation exception, overflow exception, protection exception, underflow exception. See: anomaly, bug, defect, error, fault.\n\nextended ASCII. The second half of the ACSII character set, 128 thru 255. The symbols are defined by IBM for the PC and by other vendors for proprietary use. It is non-standard ASCII. See: ASCII.\n\nextended binary coded decimal interchange code. An eight bit code used to represent specific data characters in some computers; e.g., IBM mainframe computers.\n\nextremal test data. (NBS) Test data that is at the extreme or boundary of the domain of an input variable or which produces results at the boundary of an output domain. See: testing, boundary value.\n\n- F -\n\nFDD. floppy disk drive.\n\nFIPS. Federal Information Processing Standards.\n\nFMEA. Failure Modes and Effects Analysis.\n\nFMECA. Failure Modes and Effects Criticality Analysis.\n\nFTA. Fault Tree Analysis.\n\nFTP. file transfer protocol.\n\nFagan inspection. See: code inspection.\n\nfail-safe. (IEEE) A system or component that automatically places itself in a safe operational mode in the event of a failure.\n\nfailure. (IEEE) The inability of a system or component to perform its required functions within specified performance requirements. See: bug, crash, exception, fault.\n\nfailure analysis. Determining the exact nature and location of a program error in order to fix the error, to identify and fix other similar errors, and to initiate corrective action to prevent future occurrences of this type of error. Contrast with debugging.\n\nFailure Modes and Effects Analysis. (IEC) A method of reliability analysis intended to identify failures, at the basic component level, which have significant consequences affecting the system performance in the application considered.\n\nFailure Modes and Effects Criticality Analysis. (IEC) A logical extension of FMEA which analyzes the severity of the consequences of failure.\n\nfault. An incorrect step, process, or data definition in a computer program which causes the program to perform in an unintended or unanticipated manner. See: anomaly, bug, defect, error, exception.\n\nfault seeding. See: error seeding.\n\nFault Tree Analysis. (IEC) The identification and analysis of conditions and factors which cause or contribute to the occurrence of a defined undesirable event, usually one which significantly affects system performance, economy, safety or other required characteristics.\n\nfeasibility study. Analysis of the known or anticipated need for a product, system, or component to assess the degree to which the requirements, designs, or plans can be implemented.\n\nFederal Information Processing Standards. Standards published by U.S. Department of Commerce, National Institute of Standards and Technology, formerly National Bureau of Standards. These standards are intended to be binding only upon federal agencies.\n\nfiber optics. Communications systems that use optical fibers for transmission. See: optical fiber.\n\nfield. (1) (ISO) On a data medium or in storage, a specified area used for a particular class of data; e.g., a group of character positions used to enter or display wage rates on a screen. (2) Defined logical data that is part of a record. (3) The elementary unit of a record that may contain a data item, a data aggregate, a pointer, or a link. (4) A discrete location in a database that contains an unique piece of information. A field is a component of a record. A record is a component of a database.\n\nfile. (1) (ISO) A set of related records treated as a unit; e.g., in stock control, a file could consists of a set of invoices. (2) The largest unit of storage structure that consists of a named collection of all occurrences in a database of records of a particular record type. Syn: data set.\n\nfile maintenance. (ANSI) The activity of keeping a file up to date by adding, changing, or deleting data.\n\nfile transfer protocol. (1) Communications protocol that can transmit binary and ASCII data files without loss of data. See: Kermit, Xmodem, Ymodem, Zmodem. (2) TCP/IP protocol that is used to log onto the network, list directories, and copy files. It can also translate between ASCII and EBCDIC. See: TCP/IP.\n\nfirmware. (IEEE) The combination of a hardware device; e.g., an IC; and computer instructions and data that reside as read only software on that device. Such software cannot be modified by the computer during processing. See: embedded software.\n\nflag. (IEEE) A variable that is set to a prescribed state, often \"true\" or \"false\", based on the results of a process or the occurrence of a specified condition. Syn: indicator.\n\nflat file. A data file that does not physically interconnect with or point to other files. Any relationship between two flat files is logical; e.g., matching account numbers.\n\nfloppy disk. See: diskette.\n\nfloppy disk drive. See: disk, disk drive.\n\nflowchart or flow diagram. (2) (ISO) A graphical representation in which symbols are used to represent such things as operations, data, flow direction, and equipment, for the definition, analysis, or solution of a problem. (2) (IEEE) A control flow diagram in which suitably annotated geometrical figures are used to represent operations, data, or equipment, and arrows are used to indicate the sequential flow from one to another. Syn: flow diagram. See: block diagram, box diagram, bubble chart, graph, input-process-output chart, structure chart.\n\nformal qualification review. (IEEE) The test, inspection, or analytical process by which a group of configuration items comprising a system is verified to have met specific contractual performance requirements. Contrast with code review, design review, requirements review, test readiness review.\n\nFORTRAN. An acronym for FORmula TRANslator, the first widely used high-level programming language. Intended primarily for use in solving technical problems in mathematics, engineering, and science.\n\nfull duplex. See: duplex transmission.\n\nfunction. (1) (ISO) A mathematical entity whose value, namely, the value of the dependent variable, depends in a specified manner on the values of one or more independent variables, with not more than one value of the dependent variable corresponding to each permissible combination of values from the respective ranges of the independent variables. (2) A specific purpose of an entity, or its characteristic action. (3) In data communication, a machine action such as carriage return or line feed.\n\nfunctional analysis. (IEEE) Verifies that each safety-critical software requirement is covered and that an appropriate criticality level is assigned to each software element.\n\nfunctional configuration audit. (IEEE) An audit conducted to verify that the development of a configuration item has been completed satisfactorily, that the item has achieved the performance and functional characteristics specified in the functional or allocated configuration identification, and that its operational and support documents are complete and satisfactory. See: physical configuration audit.\n\nfunctional decomposition. See: modular decomposition.\n\nfunctional design. (IEEE) (1) The process of defining the working relationships among the components of a system. See: architectural design. (2) The result of the process in (1).\n\nfunctional requirement. (IEEE) A requirement that specifies a function that a system or system component must be able to perform.\n\n- G -\n\nGB. gigabyte.\n\ngigabyte. Approximately one billion bytes; precisely 230 or 1,073,741,824 bytes. See: kilobyte, megabyte.\n\ngraph. (IEEE) A diagram or other representation consisting of a finite set of nodes and internode connections called edges or arcs. Contrast with blueprint. See: block diagram, box diagram, bubble chart, call graph, cause-effect graph, control flow diagram, data flow diagram, directed graph, flowchart, input-process-output chart, structure chart, transaction flowgraph.\n\ngraphic software specifications. Documents such as charts, diagrams, graphs which depict program structure, states of data, control, transaction flow, HIPO, and cause-effect relationships; and tables including truth, decision, event, state-transition, module interface, exception conditions/responses necessary to establish design integrity.\n\n- H -\n\nHDD. hard disk drive.\n\nHIPO. hierarchy of input-processing-output.\n\nHz. hertz.\n\nhalf duplex. Transmissions [communications] which occur in only one direction at a time, but that direction can change.\n\nhandshake. An interlocked sequence of signals between connected components in which each component waits for the acknowledgement of its previous signal before proceeding with its action, such as data transfer.\n\nhard copy. Printed, etc., output on paper.\n\nhard disk drive. Hardware used to read from or write to a hard disk. See: disk, disk drive.\n\nhard drive. Syn: hard disk drive.\n\nhardware. (ISO) Physical equipment, as opposed to programs, procedures, rules, and associated documentation. Contrast with software.\n\nhazard. (DOD) A condition that is prerequisite to a mishap.\n\nhazard analysis. A technique used to identify conceivable failures affecting system performance, human safety or other required characteristics. See: FMEA, FMECA, FTA, software hazard analysis, software safety requirements analysis, software safety design analysis, software safety code analysis, software safety test analysis, software safety change analysis.\n\nhazard probability. (DOD) The aggregate probability of occurrence of the individual events that create a specific hazard.\n\nhazard severity. (DOD) An assessment of the consequence of the worst credible mishap that could be caused by a specific hazard.\n\nhertz. A unit of frequency equal to one cycle per second.\n\nhexadecimal. The base 16 number system. Digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, & F. This is a convenient form in which to examine binary data because it collects 4 binary digits per hexadecimal digit; e.g., decimal 15 is 1111 in binary and F in hexadecimal.\n\nhierarchical decomposition. See: modular decomposition.\n\nhierarchy of input-processing-output. See: input- processing-output.\n\nhierarchy of input-processing-output chart. See: input-process-output chart.\n\nhigh-level language. A programming language which requires little knowledge of the target computer, can be translated into several different machine languages, allows symbolic naming of operations and addresses, provides features designed to facilitate expression of data structures and program logic, and usually results in several machine instructions for each program statement. Examples are PL/1, COBOL, BASIC, FORTRAN, Ada, Pascal, and \"C\". Contrast with assembly language.\n\n- I -\n\nI/0. input/output.\n\nIC. integrated circuit.\n\nIDE. integrated drive electronics.\n\nIEC. International Electrotechnical Commission.\n\nIEEE. Institute of Electrical and Electronic Engineers.\n\nISO. International Organization for Standardization.\n\nITU-TSS. International Telecommunications Union - Telecommunications Standards Section.\n\nimplementation. The process of translating a design into hardware components, software components, or both. See: coding.\n\nimplementation phase. (IEEE) The period of time in the software life cycle during which a software product is created from design documentation and debugged.\n\nimplementation requirement. (IEEE) A requirement that specifies or constrains the coding or construction of a system or system component.\n\nincremental integration. A structured reformation of the program module by module or function by function with an integration test being performed following each addition. Methods include top-down, breadth-first, depth-first, bottom-up. Contrast with nonincremental integration.\n\nincremental development. (IEEE) A software development technique in which requirements definition, design, implementation, and testing occur in an overlapping, iterative [rather than sequential] manner, resulting in incremental completion of the overall software product. Contrast with rapid prototyping, spiral model, waterfall model.\n\nindustry standard. (QA) Procedures and criteria recognized as acceptable practices by peer professional, credentialing, or accrediting organizations.\n\ninfeasible path. (NBS) A sequence of program statements that can never be executed. Syn: dead code.\n\ninformation hiding. The practice of \"hiding\" the details of a function or structure, making them inaccessible to other parts of the program. See: abstraction, encapsulation, software engineering.\n\ninput/output. Each microprocessor and each computer needs a way to communicate with the outside world in order to get the data needed for its programs and in order to communicate the results of its data manipulations. This is accomplished through I/0 ports and devices.\n\ninput-process-output chart. (IEEE) A diagram of a software system or module, consisting of a rectangle on the left listing inputs, a rectangle in the center listing processing steps, a rectangle on the right listing outputs, and arrows connecting inputs to processing steps and processing steps to outputs. See: block diagram, box diagram, bubble chart, flowchart, graph, structure chart.\n\ninput-processing-output. A structured software design technique; identification of the steps involved in each process to be performed and identifying the inputs to and outputs from each step. A refinement called hierarchical input-process-output identifies the steps, inputs, and outputs at both general and detailed levels of detail.\n\ninspection. A manual testing technique in which program documents [specifications (requirements, design), source code or user's manuals] are examined in a very formal and disciplined manner to discover errors, violations of standards and other problems. Checklists are a typical vehicle used in accomplishing this technique. See: static analysis, code audit, code inspection, code review, code walkthrough.\n\ninstallation. (ANSI) The phase in the system life cycle that includes assembly and testing of the hardware and software of a computerized system. Installation includes installing a new computer system, new software or hardware, or otherwise modifying the current system.\n\ninstallation and checkout phase. (IEEE) The period of time in the software life cycle during which a software product is integrated into its operational environment and tested in this environment to ensure that it performs as required.\n\ninstallation qualification. See: qualification, installation.\n\nInstitute of Electrical and Electronic Engineers. 345 East 47th Street, New York, NY 10017. An organization involved in the generation and promulgation of standards. IEEE standards represent the formalization of current norms of professional practice through the process of obtaining the consensus of concerned, practicing professionals in the given field.\n\ninstruction. (1) (ANSI/IEEE) A program statement that causes a computer to perform a particular operation or set of operations. (2) (ISO) In a programming language, a meaningful expression that specifies one operation and identifies its operands, if any.\n\ninstruction set. (1) (IEEE) The complete set of instructions recognized by a given computer or provided by a given programming language. (2) (ISO) The set of the instructions of a computer, of a programming language, or of the programming languages in a programming system. See: computer instruction set.\n\ninstrumentation. (NBS) The insertion of additional code into a program in order to collect information about program behavior during program execution. Useful for dynamic analysis techniques such as assertion checking, coverage analysis, tuning.\n\nintegrated circuit. Small wafers of semiconductor material [silicon] etched or printed with extremely small electronic switching circuits. Syn: chip.\n\nintegrated drive electronics. A standard interface for hard disks which provides for building most of the controller circuitry into the disk drive to save space. IDE controllers are functionally equivalent to ST-506 standard controllers. Contrast with EDSI, SCSI, ST-506.\n\ninteractive. (IEEE) Pertaining to a system or mode of operation in which each user entry causes a response from or action by the system. Contrast with batch. See: conversational, on-line, real time.\n\ninterface. (1) (ISO) A shared boundary between two functional units, defined by functional characteristics, common physical interconnection characteristics, signal characteristics, and other characteristics, as appropriate. The concept involves the specification of the connection of two devices having different functions. (2) A point of communication between two or more processes, persons, or other physical entities. (3) A peripheral device which permits two or more devices to communicate.\n\ninterface analysis. (IEEE) Evaluation of: (1) software requirements specifications with hardware, user, operator, and software interface requirements documentation, (2) software design description records with hardware, operator, and software interface requirements specifications, (3) source code with hardware, operator, and software interface design documentation, for correctness, consistency, completeness, accuracy, and readability. Entities to evaluate include data items and control items.\n\ninterface requirement. (IEEE) A requirement that specifies an external item with which a system or system component must interact, or sets forth constraints on formats, timing, or other factors caused by such an interaction.\n\nInternational Electrotechnical Commission. Geneva, Switzerland. An organization that sets standards for electronic products and components which are adopted by the safety standards agencies of many countries.\n\nInternational Organization for Standardization. Geneva, Switzerland. An organization that sets international standards. It deals with all fields except electrical and electronics which is governed by IEC. Syn: International Standards Organization.\n\nInternational Standards Organization. See: International Organization for Standardization.\n\nInternational Telecommunications Union - Telecommunications Standards Section. Geneva, Switzerland. Formerly, Consultive Committee for International Telephony and Telegraphy. An international organization for communications standards.\n\ninterpret. (IEEE) To translate and execute each statement or construct of a computer program before translating and executing the next. Contrast with assemble, compile.\n\ninterpreter. (IEEE) A computer program that translates and executes each statement or construct of a computer program before translating and executing the next. The interpreter must be resident in the computer each time a program [source code file] written in an interpreted language is executed. Contrast with assembler, compiler.\n\ninterrupt. (1) The suspension of a process to handle an event external to the process. (2) A technique to notify the CPU that a peripheral device needs service, i.e., the device has data for the processor or the device is awaiting data from the processor. The device sends a signal, called an interrupt, to the processor. The processor interrupts its current program, stores its current operating conditions, and executes a program to service the device sending the interrupt. After the device is serviced, the processor restores its previous operating conditions and continues executing the interrupted program. A method for handling constantly changing data. Contrast with polling.\n\ninterrupt analyzer. A software tool which analyzes potential conflicts in a system as a result of the occurrences of interrupts.\n\ninvalid inputs. (1) (NBS) Test data that lie outside the domain of the function the program represents. (2) These are not only inputs outside the valid range for data to be input, i.e. when the specified input range is 50 to 100, but also unexpected inputs, especially when these unexpected inputs may easily occur; e.g., the entry of alpha characters or special keyboard characters when only numeric data is valid, or the input of abnormal command sequences to a program.\n\nI/O port. Input/output connector.\n\n- J -\n\nJCL. job control language.\n\njob. (IEEE) A user-defined unit of work that is to be accomplished by a computer. For example, the compilation, loading, and execution of a computer program. See: job control language.\n\njob control language. (IEEE) A language used to identify a sequence of jobs, describe their requirements to an operating system, and control their execution.\n\n- K -\n\nKB. kilobyte.\n\nKLOC. one thousand lines of code.\n\nKermit. An asynchronous file transfer protocol developed at Columbia University, noted for its accuracy over noisy lines. Several versions exist. Contrast with Xmodem, Ymodem, Zmodem.\n\nkey. One or more characters, usually within a set of data, that contains information about the set, including its identification.\n\nkey element. (QA) An individual step in an critical control point of the manufacturing process.\n\nkilobyte. Approximately one thousand bytes. This symbol is used to describe the size of computer memory or disk storage space. Because computers use a binary number system, a kilobyte is precisely 210 or 1024 bytes.\n\n- L -\n\nLAN. local area network.\n\nLSI. large scale integration.\n\nladder logic. A graphical, problem oriented, programming language which replicates electronic switching blueprints.\n\nlanguage. See: programming language.\n\nlarge scale integration. A classification of ICs [chips] based on their size as expressed by the number of circuits or logic gates they contain. An LSI IC contains 3,000 to 100,000 transistors.\n\nlatency. (ISO) The time interval between the instant at which a CPU's instruction control unit initiates a call for data and the instant at which the actual transfer of the data starts. Syn: waiting time.\n\nlatent defect. See: bug, fault.\n\nlife cycle. See: software life cycle.\n\nlife cycle methodology. The use of any one of several structured methods to plan, design, implement, test. and operate a system from its conception to the termination of its use. See: waterfall model.\n\nlinkage editor. (IEEE) A computer program that creates a single load module from two or more independently translated object modules or load modules by resolving cross references among the modules and, possibly, by relocating elements. May be part of a loader. Syn: link editor, linker.\n\nloader. A program which copies other [object] programs from auxiliary [external] memory to main [internal] memory prior to its execution.\n\nlocal area network. A communications network that serves users within a confined geographical area. It is made up of servers, workstations, a network operating system, and a communications link. Contrast with MAN, WAN.\n\nlogic analysis. (IEEE) Evaluates the safety-critical equations, algorithms, and control logic of the software design. (2) Evaluates the sequence of operations represented by the coded program and detects programming errors that might create hazards.\n\nlongitudinal redundancy check. (IEEE) A system of error control based on the formation of a block check following preset rules.\n\nlow-level language. See: assembly language. The advantage of assembly language is that it provides bit-level control of the processor allowing tuning of the program for optimal speed and performance. For time critical operations, assembly language may be necessary in order to generate code which executes fast enough for the required operations. The disadvantage of assembly language is the high-level of complexity and detail required in the programming. This makes the source code harder to understand, thus increasing the chance of introducing errors during program development and maintenance.\n\n- M -\n\nMAN. metropolitan area network.\n\nMb. megabit.\n\nMB. megabyte.\n\nMHz. megahertz.\n\nMIPS. million instructions per second.\n\nMOS. metal-oxide semiconductor.\n\nMOSFET. metal-oxide semiconductor field effect transistor.\n\nMSI. medium scale integration.\n\nMTBF. mean time between failures.\n\nMTTR. mean time to repair.\n\nMTTF. mean time to failure.\n\nmachine code. (IEEE) Computer instructions and definitions expressed in a form [binary code] that can be recognized by the CPU of a computer. All source code, regardless of the language in which it was programmed, is eventually converted to machine code. Syn: object code.\n\nmachine language. See: machine code.\n\nmacro. (IEEE) In software engineering, a predefined sequence of computer instructions that is inserted into a program, usually during assembly or compilation, at each place that its corresponding macroinstruction appears in the program.\n\nmacroinstruction. (IEEE) A source code instruction that is replaced by a predefined sequence of source instructions, usually in the same language as the rest of the program and usually during assembly or compilation.\n\nmain memory. A non-moving storage device utilizing one of a number of types of electronic circuitry to store information.\n\nmain program. (IEEE) A software component that is called by the operating system of a computer and that usually calls other software components. See: routine, subprogram.\n\nmainframe. Term used to describe a large computer.\n\nmaintainability. (IEEE) The ease with which a software system or component can be modified to correct faults, improve performance or other attributes, or adapt to a changed environment. Syn: modifiability.\n\nmaintenance. (QA) Activities such as adjusting, cleaning, modifying, overhauling equipment to assure performance in accordance with requirements. Maintenance to a software system includes correcting software errors, adapting software to a new environment, or making enhancements to software. See: adaptive maintenance, corrective maintenance, perfective maintenance.\n\nmean time between failures. A measure of the reliability of a computer system, equal to average operating time of equipment between failures, as calculated on a statistical basis from the known failure rates of various components of the system.\n\nmean time to failure. A measure of reliability, giving the average time before the first failure.\n\nmean time to repair. A measure of reliability of a piece of repairable equipment, giving the average time between repairs.\n\nmeasure. (IEEE) A quantitative assessment of the degree to which a software product or process possesses a given attribute.\n\nmeasurable. Capable of being measured.\n\nmeasurement. The process of determining the value of some quantity in terms of a standard unit.\n\nmedium scale integration. A classification of ICs [chips] based on their size as expressed by the number of circuits or logic gates they contain. An MSI IC contains 100 to 3,000 transistors.\n\nmegabit. Approximately one million bits. Precisely 1024 K bits, 220 bits, or 1,048,576 bits.\n\nmegabyte. Approximately one million bytes. Precisely 1024 K Bytes, 220 bytes, or 1,048,576 bytes. See: kilobyte.\n\nmegahertz. A unit of frequency equal to one million cycles per second.\n\nmemory. Any device or recording medium into which binary data can be stored and held, and from which the entire original data can be retrieved. The two types of memory are main; e.g., ROM, RAM, and auxiliary; e.g., tape, disk. See: storage device.\n\nmenu. A computer display listing a number of options; e.g., functions, from which the operator may select one. Sometimes used to denote a list of programs.\n\nmetal-oxide semiconductor. One of two major categories of chip design [the other is bipolar]. It derives its name from its use of metal, oxide and semiconductor layers. There are several varieties of MOS technologies including PMOS, NMOS, CMOS.\n\nmetal-oxide semiconductor field effect transistor. Common type of transistor fabricated as a discrete component or into MOS integrated circuits.\n\nmetric based test data generation. (NBS) The process of generating test sets for structural testing based upon use of complexity metrics or coverage metrics.\n\nmetric, software quality. (IEEE) A quantitative measure of the degree to which software possesses a given attribute which affects its quality.\n\nmetropolitan area network. Communications network that covers a geographical area such as a city or a suburb. Contrast with LAN, WAN.\n\nmicrocode. Permanent memory that holds the elementary circuit operations a computer must perform for each instruction in its instruction set.\n\nmicrocomputer. A term used to describe a small computer. See: microprocessor.\n\nmicroprocessor. A CPU existing on a single IC. Frequently synonymous with a microcomputer.\n\nmillion instructions per second. Execution speed of a computer. MIPS rate is one factor in overall performance. Bus and channel speed and bandwidth, memory speed, memory management techniques, and system software also determine total throughput.\n\nminicomputer. A term used to describe a medium sized computer.\n\nmishap. (DOD) An unplanned event or series of events resulting in death, injury, occupational illness, or damage to or loss of data and equipment or property, or damage to the environment. Syn: accident.\n\nmnemonic. A symbol chosen to assist human memory and understanding; e.g., an abbreviation such as \"MPY\" for multiply.\n\nmodeling. Construction of programs used to model the effects of a postulated environment for investigating the dimensions of a problem for the effects of algorithmic processes on responsive targets.\n\nmodem. (ISO) A functional unit that modulates and demodulates signals. One of the functions of a modem is to enable digital data to be transmitted over analog transmission facilities. The term is a contraction of modulator-demodulator.\n\nmodem access. Using a modem to communicate between computers. MODEM access is often used between a remote location and a computer that has a master database and applications software, the host computer.\n\nmodifiability. See: maintainability.\n\nmodular decomposition. A structured software design technique, breaking a system into components to facilitate design and development. Syn: functional decomposition, hierarchical decomposition. See: abstraction.\n\nmodular software. (IEEE) Software composed of discrete parts. See: structured design.\n\nmodularity. (IEEE) The degree to which a system or computer program is composed of discrete components such that a change to one component has minimal impact on other components.\n\nmodulate. Varying the characteristics of a wave in accordance with another wave or signal, usually to make user equipment signals compatible with communication facilities. Contrast with demodulate.\n\nmodulation. Converting signals from a binary-digit pattern [pulse form] to a continuous wave form [analog]. Contrast with demodulation.\n\nmodule. (1) In programming languages, a self- contained subdivision of a program that may be separately compiled. (2) A discrete set of instructions, usually processed as a unit, by an assembler, a compiler, a linkage editor, or similar routine or subroutine. (3) A packaged functional hardware unit suitable for use with other components. See: unit.\n\nmodule interface table. A table which provides a graphic illustration of the data elements whose values are input to and output from a module.\n\nmulti-processing. (IEEE) A mode of operation in which two or more processes [programs] are executed concurrently [simultaneously] by separate CPUs that have access to a common main memory. Contrast with multi-programming. See: multi-tasking, time sharing.\n\nmulti-programming. (IEEE) A mode of operation in which two or more programs are executed in an interleaved manner by a single CPU. Syn: parallel processing. Contrast with multi-tasking. See: time sharing.\n\nmulti-tasking. (IEEE) A mode of operation in which two or more tasks are executed in an interleaved manner. Syn: parallel processing. See: multi-processing, multi-programming, time sharing.\n\nmultiple condition coverage. (Myers) A test coverage criteria which requires enough test cases such that all possible combinations of condition outcomes in each decision, and all points of entry, are invoked at least once. Contrast with branch coverage, condition coverage, decision coverage, path coverage, statement coverage.\n\nmultiplexer. A device which takes information from any of several sources and places it on a single line or sends it to a single destination.\n\nmultipurpose systems. (IEEE) Computer systems that perform more than one primary function or task are considered to be multipurpose. In some situations the computer may be linked or networked with other computers that are used for administrative functions; e.g., accounting, word processing.\n\nmutation analysis. (NBS) A method to determine test set thoroughness by measuring the extent to which a test set can discriminate the program from slight variants [mutants] of the program. Contrast with error seeding.\n\n- N -\n\nNBS. National Bureau of Standards.\n\nNIST. National Institute for Standards and Technology.\n\nNMI. non-maskable interrupt.\n\nNMOS. n-channel MOS.\n\nNational Bureau of Standards. Now National Institute for Standards and Technology.\n\nNational Institute for Standards and Technology. Gaithersburg, MD 20899. A federal agency under the Department of Commerce, originally established by an act of Congress on March 3, 1901 as the National Bureau of Standards. The Institute's overall goal is to strengthen and advance the Nation's science and technology and facilitate their effective application for public benefit. The National Computer Systems Laboratory conducts research and provides, among other things, the technical foundation for computer related policies of the Federal Government.\n\nn-channel MOS. A type of microelectronic circuit used for logic and memory chips.\n\nnetwork. (1) (ISO) An arrangement of nodes and interconnecting branches. (2) A system [transmission channels and supporting hardware and software] that connects several remotely located computers via telecommunications.\n\nnetwork database. A database organization method that allows for data relationships in a net-like form. A single data element can point to multiple data elements and can itself be pointed to by other data elements. Contrast with relational database.\n\nnibble. Half a byte, or four bits.\n\nnode. A junction or connection point in a network, e.g. a terminal or a computer.\n\nnoncritical code analysis. (IEEE) (1) Examines software elements that are not designated safety-critical and ensures that these elements do not cause a hazard. (2) Examines portions of the code that are not considered safety-critical code to ensure they do not cause hazards. Generally, safety-critical code should be isolated from non-safety-critical code. This analysis is to show this isolation is complete and that interfaces between safety-critical code and non-safety-critical code do not create hazards.\n\nnonincremental integration. A reformation of a program by immediately relinking the entire program foll"
    }
}