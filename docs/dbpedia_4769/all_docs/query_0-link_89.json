{
    "id": "dbpedia_4769_0",
    "rank": 89,
    "data": {
        "url": "https://codedocs.org/what-is/algol-w",
        "read_more_link": "",
        "language": "en",
        "title": "CodeDocs",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://codedocs.org/images/search.svg",
            "https://codedocs.org/images/logo.png",
            "https://codedocs.org/images/search.svg",
            "https://codedocs.org/images/search.svg",
            "https://codedocs.org/images/print.svg",
            "https://codedocs.org/images/pdf.svg",
            "https://codedocs.org/images/clock.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Use dmy dates from October 2020",
            "Wikipedia articles with GND identifiers",
            "Wikipedia articles with MA identifiers",
            "Procedural programming languages",
            "Structured programming languages",
            "ALGOL 60 dialect",
            "Programming languages created in 1966",
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/images/icon.ico",
        "meta_site_name": "",
        "canonical_link": "https://codedocs.org/what-is/algol-w",
        "text": "ALGOL WParadigmsMulti-paradigm: procedural, imperative, structuredFamilyALGOLDesigned byNiklaus Wirth, Tony HoareFirst appeared1966; 55 years ago ( )Typing disciplineStatic, strongScopeLexicalImplementation languagePL360PlatformIBM System/360OSLinuxInfluenced byALGOL 60InfluencedPascal, Modula-2\n\nALGOL W is a programming language. It is based on a proposal for ALGOL X by Niklaus Wirth and Tony Hoare as a successor to ALGOL 60 in International Federation for Information Processing (IFIP) IFIP Working Group 2.1 on Algorithmic Languages and Calculi, which specified, maintains, and supports the languages ALGOL 60 and ALGOL 68.[1] When the committee decided that the proposal was an insufficient advance over ALGOL 60, the proposal was published as A contribution to the development of ALGOL.[2] After making small modifications to the language[3] Wirth supervised a high quality implementation for the IBM System/360 at Stanford University that was widely distributed.[4]\n\nIt represented a relatively conservative modification of ALGOL 60, adding string, bitstring, complex number and reference to record data types and call-by-result passing of parameters, introducing the while statement, replacing switch with the case statement, and generally tightening up the language.\n\nThe implementation was written in PL360, an ALGOL-like assembly language designed by Wirth. The implementation includes influential debugging and profiling abilities.\n\nImplementation\n\nThe major part of ALGOL W, amounting to approximately 2,700 cards, was written in Wirth's PL360. An interface module for the IBM operating system (OS) in use (OS, DOS, MTS, ORVYL) was written in IBM assembly language, amounting to fewer than 250 cards. [1]\n\nIn an OS environment on a 360/67 with spooled input and output files, the compiler will recompile itself in about 25 seconds. The compiler is approximately 2700 card images. Thus, when the OS scheduler time is subtracted from the execution time given above, it is seen that the compiler runs at a speed in excess of 100 cards per second (for dense code).\n\nIn a DOS environment on a 360/30, the compiler is limited only by the speed of the card reader. The compiler has successfully recompiled itself on a 64K 360/30 at a rate of 1200 cards per minute (the speed of the card reader). This is impressive when compared to the time needed for the DOS Assembler to assemble the interface module which consists of under 250 cards. When the macro instructions are expanded, the DOS interface has 972 card images and the Assembler takes 15 minutes for the assembly."
    }
}