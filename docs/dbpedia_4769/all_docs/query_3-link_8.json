{
    "id": "dbpedia_4769_3",
    "rank": 8,
    "data": {
        "url": "https://kidscodecs.com/algol/",
        "read_more_link": "",
        "language": "en",
        "title": "ALGOL – beanz Magazine",
        "top_image": "https://kidscodecs.com/wp-content/uploads/2016/08/language-algol-code.jpg",
        "meta_img": "",
        "images": [
            "https://kidscodecs.com/wp-content/uploads/2023/11/beanzLogo_225x96-black.png",
            "https://kidscodecs.com/wp-content/uploads/2023/11/beanzLogo_225x96-white.png",
            "https://kidscodecs.com/wp-content/uploads/2024/02/beanz-2024-02-issue-cover-250w.jpg",
            "https://kidscodecs.com/wp-content/uploads/2024/04/ai-aliens-nicolas-lobos-unsplash.jpg",
            "https://kidscodecs.com/wp-content/uploads/2024/04/bianca-cyoa-kalen-emsley-unsplash.jpg",
            "https://kidscodecs.com/wp-content/uploads/2024/04/minecraft-worldgen-biomesyougo.jpg",
            "https://kidscodecs.com/wp-content/uploads/2023/11/beanzLogo_225x96-black.png",
            "https://kidscodecs.com/wp-content/uploads/2023/11/beanzLogo_225x96-white.png",
            "https://kidscodecs.com/wp-content/uploads/2023/11/beanzLogo_225x96-black.png",
            "https://kidscodecs.com/wp-content/uploads/2023/11/beanzLogo_225x96-white.png",
            "https://kidscodecs.com/wp-content/uploads/2023/08/tim-slavin-215x215-1-80x80.png",
            "https://kidscodecs.com/wp-content/uploads/2016/08/language-algol-code.jpg",
            "https://kidscodecs.com/wp-content/uploads/2023/08/tim-slavin-215x215-1-80x80.png",
            "https://kidscodecs.com/wp-content/uploads/2023/04/Strudel.jpg",
            "https://secure.gravatar.com/avatar/2988f8f24fc1c2aa49044d0e74c9835b?s=64&d=https%3A%2F%2Fkidscodecs.com%2Fwp-content%2Fuploads%2F2023%2F08%2Fdefault-avatar-red-robot-256x256-1-80x80.png&r=g",
            "https://kidscodecs.com/wp-content/uploads/2023/02/Rust.jpg",
            "https://secure.gravatar.com/avatar/2988f8f24fc1c2aa49044d0e74c9835b?s=64&d=https%3A%2F%2Fkidscodecs.com%2Fwp-content%2Fuploads%2F2023%2F08%2Fdefault-avatar-red-robot-256x256-1-80x80.png&r=g",
            "https://kidscodecs.com/wp-content/uploads/2022/12/fennel.jpg",
            "https://secure.gravatar.com/avatar/2988f8f24fc1c2aa49044d0e74c9835b?s=64&d=https%3A%2F%2Fkidscodecs.com%2Fwp-content%2Fuploads%2F2023%2F08%2Fdefault-avatar-red-robot-256x256-1-80x80.png&r=g",
            "https://kidscodecs.com/wp-content/uploads/2022/02/orce.jpg",
            "https://secure.gravatar.com/avatar/2988f8f24fc1c2aa49044d0e74c9835b?s=64&d=https%3A%2F%2Fkidscodecs.com%2Fwp-content%2Fuploads%2F2023%2F08%2Fdefault-avatar-red-robot-256x256-1-80x80.png&r=g",
            "https://kidscodecs.com/wp-content/uploads/2023/11/beanzLogo_225x96-black.png",
            "https://kidscodecs.com/wp-content/uploads/2023/11/beanzLogo_225x96-white.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://kidscodecs.com/algol/",
        "text": "The history of programming languages began in the 1950s with the evolution of software from flipping switches on massive machines in the 1940s to computers built and sold by IBM, Burroughs, and others. The new computers had custom software that only worked on the company’s computers. Imagine if Java only worked on Dell computers running Windows. And C++ only worked on Lenovo computers running Linux.\n\nBy the mid-1950s, efforts in Europe and the US started to create a universal software programming language. ALGOL — short for ALGOrithmic Language — was specified in 1958 to meet these goals:\n\nSimilar to mathematical notation and readable with little explanation needed.\n\nUsable to describe computing processes in publications.\n\nTranslate into machine programs mechanically.\n\nWork on any computer.\n\nThere are three specifications as the result of meetings, ALGOL 58, ALGOL 60, and ALGOL 68. The ALGOL 60 report and specification, however, has had the most impact on the history of programming languages.\n\nWhat Makes ALGOL Special?\n\nALGOL 58 and ALGOL 60 arrived at a moment in programming history when programmers, mathematicians, and computer scientists started to make progress understanding how modern software might work and evolve. While ALGOL is designed to be a universal programming language — and never achieved this goal, the process of creating the ALGOL 60 language to describe algorithms provided examples that inspired other languages throughout the 1960s to date.\n\nFor example, Americans use a decimal point while Europeans a comma. Such a simple difference posed a problem for software to work on all computers. The solution was to define ALGOL on three levels, reference, hardware, and publication.\n\nOther solutions that inspired future modern programming languages include conditionals, loops, switches, and procedures. While ALGOL 58 captured the latest ideas and solutions for software programming in the 1950s, the ALGOL 60 specification had the most impact.\n\nALGOL 60’s primary contribution? The Backus Naur Form (BNF), a way to describe programming languages that computers could process and humans read. BNF statements read much like mathematical statements while ALGOL added a way to describe actions upon these statements and interactions between statements. BNF describes the transition point between math and programming.\n\nToday we take these typical programming statements as common and unremarkable:\n\n$i = 0\n\nif ($i < 10) print $i $i++ In 1960, however, there was no common universal way to evaluate a variable $i and then perform a task when a statement evaluates to true (or false). The Backus Naur Form and other details in the ALGOL 60 report were big steps towards many of the programming language details we take for granted today. If you're wondering what the code above does, we set a variable $i equal to 0, evaluate if our variable is less than 10, and, if so, print out the value of our variable then add 1 (the $i++ bit) to the value of our variable. The $ (dollar sign) is one way to tell the programming language that I is a variable. In ALGOL, for example, a ` (back tick) is used to tell the language what follows is a variable. This fake code repeats until $i is less than 10 at which point the statement is false (not true) and stops.\n\nHow is ALGOL Used?\n\nThe ALGOL 60 language had a few details that limited adoption. For example, ALGOL 60 has no input/output (I/O) so you cannot print or echo statements to a screen or printer. While it’s possible to use compilers handle I/O, compilers at that time were specific to machines and added an extra step. ALGOL 60 also had some quirky details about handling keywords compared to other languages.\n\nWhile ALGOL made huge contributions to the history of modern programming, the language was not widely used beyond the 1960s. ALGOL 68, defined in the late 1960s, attempted to make ALGOL more usable. oHowever, ther languages from the 1950s — for example, FORTRAN, COBOL, and Lisp — were used more for various reasons. However, these languages and their successors benefited from the research, debates, and solutions defined by ALGOL.\n\nWhile ALGOL was designed to be universal, work on all computers, and replace many other languages, it’s contribution to software development are universal elements and ideas used in many different software programming languages.\n\nLearn More\n\nOn the ALGOL Effort\n\nhttps://heerdebeer.org/ALGOL/\n\nhttps://heerdebeer.org/History/Publications/ALGOL_more_than_just_ALGOL.html\n\nALGOL\n\nhttps://en.wikipedia.org/wiki/ALGOL_60\n\nhttp://web.archive.org/web/20111114122103/http://www.eecs.qmul.ac.uk/~ohearn/Algol/intro.html\n\nhttp://cs.ecs.baylor.edu/~maurer/SieveE/Algol60.htm\n\nhttp://www.slideshare.net/hidayettakci/algol-ailesi-programlama-dilleri\n\nThe History of ALGOL\n\nhttp://www.softwarepreservation.org/projects/ALGOL/\n\nhttp://groups.engin.umd.umich.edu/CIS/course.des/cis400/algol/algol.html\n\nTutorials\n\nhttps://www.youtube.com/watch?v=qF4qVq2M-Fo\n\nALGOL Online Emulator\n\nhttp://www.tutorialspoint.com/execute_algol_online.php\n\nhttp://kdf9.settle.dtdns.net/EE9/7087140/walgol/run.htm\n\nBackus Naur Form"
    }
}