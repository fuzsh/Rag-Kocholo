{
    "id": "dbpedia_4769_1",
    "rank": 12,
    "data": {
        "url": "https://craftofcoding.wordpress.com/2017/03/05/languages-in-perspective-the-algol-family/",
        "read_more_link": "",
        "language": "en",
        "title": "Languages in Perspective: The Algol ”family”",
        "top_image": "https://s0.wp.com/i/blank.jpg",
        "meta_img": "https://s0.wp.com/i/blank.jpg",
        "images": [
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2017-03-05T00:00:00",
        "summary": "",
        "meta_description": "The ALGOL (ALGOrithmic Language) series of languages were developed in the mid 1950s, with the first family member, ALGOL58 appearing in 1958. These languages greatly influenced the languages which evolved after them, and became the de facto way of describing algorithms in textbooks of the era. Algol introduced the notion of code blocks, using the…",
        "meta_lang": "en",
        "meta_favicon": "https://s1.wp.com/i/favicon.ico",
        "meta_site_name": "The Craft of Coding",
        "canonical_link": "https://craftofcoding.wordpress.com/2017/03/05/languages-in-perspective-the-algol-family/",
        "text": "The ALGOL (ALGOrithmic Language) series of languages were developed in the mid 1950s, with the first family member, ALGOL58 appearing in 1958. These languages greatly influenced the languages which evolved after them, and became the de facto way of describing algorithms in textbooks of the era. Algol introduced the notion of code blocks, using the keyword pairs begin and end for delimiting the blocks. There were three major specifications:\n\nALGOL 58 – originally called IAL (International Algorithmic Language)\n\nALGOL 60 – first implemented in 1960, revised in 1963.\n\nALGOL 68 – revised 1973. Introduced flexible arrays, slices, parallelism, operator identification.\n\nAlgol W, designed by Niklaus Wirth before moving on to Pascal, was based on Algol 60.\n\nAlgol68, as its name suggests was released in 1968, seemingly, an extension to Algol (ALGOrithmic Language) but in reality a completely different language. But what did the family of Algol’s *do* for programming? Well, the Algol’s contributed significantly to the field of programming language design.\n\nFormalized the concept or type.\n\nNames could have any length.\n\nArrays could have any number of constructs.\n\nParameters were separated by mode (in & out)\n\nSubscripts were placed in brackets.\n\nIntroduced compound statements.\n\nUsed the semicolon as the statement separator.\n\nAssignment operator was :=\n\nThe if statement included an else-if clause.\n\nAlgol 58 introduced into programming languages such terms as type, formal versus actual parameter, declaration, identifier, for loop, switch, compound statement, and the begin end delimiters.\n\nAlgol-60 introduced:\n\nThe concept of block structure, i.e. local scope\n\nIncorporated two parameter passing methods: pass-by-value, and pass-by-name\n\nProcedures were allowed to be recursive (new for a procedural language)\n\nStack dynamic arrays\n\nAlgol 60 introduced into programming languages such terms as block, call by value, call by name, typed procedures, declaration scope, dynamic arrays, side effects, local and global variables, until, while, if then else.\n\nAlgol-68 introduced:\n\nUser defined data structures\n\nReference types\n\nDynamic arrays"
    }
}