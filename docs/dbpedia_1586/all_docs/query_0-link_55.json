{
    "id": "dbpedia_1586_0",
    "rank": 55,
    "data": {
        "url": "https://www.wrike.com/agile-guide/agile-manifesto/",
        "read_more_link": "",
        "language": "en",
        "title": "What Is the Agile Manifesto?",
        "top_image": "https://cdn.wrike.com/image/__cdnu/illustration_abstract_rebrand-meta-pic_shapes_electric.png",
        "meta_img": "https://cdn.wrike.com/image/__cdnu/illustration_abstract_rebrand-meta-pic_shapes_electric.png",
        "images": [
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-light.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-light.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-dark.svg",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/static/assets/img/header-v2/language-selector-2x.png",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-light.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-dark.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-light.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-dark.svg",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/storage/uploads/c6d2d414-cd9b-4108-bb6b-43848bf6c318/product-screenshot-dashboards-team-dashboard.png",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/storage/uploads/c6d2d414-cd9b-4108-bb6b-43848bf6c318/product-screenshot-dashboards-team-dashboard.png",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/storage/uploads/fef453c1-3176-4128-a066-396c86125cd9/rebrand-screenshot-features-kanban-it-2x.png",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/storage/uploads/fef453c1-3176-4128-a066-396c86125cd9/rebrand-screenshot-features-kanban-it-2x.png",
            "https://web-static.wrike.com/tp/static/assets/img/footer/app-store_en.svg",
            "https://web-static.wrike.com/tp/static/assets/img/footer/google-play_en.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "The Agile Manifesto is a foundational document that outlines the four values and 12 principles of Agile software development. Explore in more detail with Wrike.",
        "meta_lang": "en",
        "meta_favicon": "https://web-static.wrike.com/tp/static/favicon.ico?v7",
        "meta_site_name": "",
        "canonical_link": "https://www.wrike.com/agile-guide/agile-manifesto/",
        "text": "Introduction to the Agile Manifesto\n\nIt seems that everyone is “Agile” these days. Why are so many companies implementing an Agile methodology? Well, it’s because Agile practices prioritize team collaboration and continuous improvement, helping organizations stay nimble, adaptive, and responsive to changing market demands.\n\nIn this article, we will explain the core principles and values of the Agile Manifesto and outline how you can use the manifesto in practice.\n\nBefore we begin, you can sign up for a free trial with Wrike right now and get started with our pre-built Agile template.\n\nWhat is the Agile Manifesto?\n\nThe Agile Manifesto is a document that outlines the central values and principles of Agile software development. Officially referred to as the Manifesto for Agile Software Development, the guide aims to provide an effective model for teams to successfully adopt the philosophy of Agile project management and use it to improve their work process.\n\nThe lightweight framework of the Agile Manifesto was designed to improve upon existing software development processes, which were more complex and contained a lot of documentation. The founders wanted to speed up these processes and create a more efficient working model for teams.\n\nPut simply, the Agile Manifesto is an alternative to traditional software development methodologies.\n\nWho created the Agile Manifesto?\n\nThe Agile Manifesto was founded in February 2001 at a ski resort in Snowbird, Utah. 17 representatives from various programming and development backgrounds gathered to discuss Agile methodologies and find a solution to the older processes with which they had become frustrated. It is believed that by signing the manifesto, the authors “launched the ship” for Agile software development.\n\nThe 17 signatories of the Agile Manifesto were:\n\nKent Beck\n\nMike Beedle\n\nArie van Bennekum\n\nAlistair Cockburn\n\nWard Cunningham\n\nMartin Fowler\n\nJames Grenning\n\nJim Highsmith\n\nAndrew Hunt\n\nRon Jeffries\n\nJon Kern\n\nBrian Marick\n\nRobert C. Martin\n\nSteve Mellor\n\nKen Schwaber\n\nJeff Sutherland\n\nDave Thomas\n\nThis group of people became known as the Agile Alliance. After the Agile Manifesto was released, the alliance grew to form a global non-profit organization, which now has a community of more than 72,000 members. The Agile Alliance hosts regular conferences and organizes initiatives to support local groups.\n\nMore than two decades have passed since the birth of the Agile Manifesto. In that time, teams across the world have embraced the four values and 12 principles contained within the document. According to the 14th Annual State of Agile Report, more than 95% of respondents confirmed that their organizations practiced Agile development methods.\n\nAlthough the Agile Manifesto was designed for the software development community, it has been used as a key resource for planning all types of projects. The State of Agile report noted numerous sectors outside software development that have adopted Agile practices, including IT, operations, marketing, HR, and sales.\n\nBut what exactly are the best practices outlined in the Agile Manifesto? Let’s look at the values and principles in more detail.\n\nThe four Agile Manifesto values\n\nThe Agile Manifesto was founded on four key values, which are as follows:\n\n1. Individuals and interactions over processes and tools\n\nThe first value gets straight to the core of Agile methodology: the focus is on the people. You can use the best processes and tools available to support your projects, but they will only work if your people are doing their best work. Your team is your most valuable resource. Communication plays a key role here — when people interact with each other regularly and share their ideas, they build better products.\n\nJim Highsmith, one of the authors of the Agile Manifesto, wrote about the importance of the “mushy stuff,” meaning prioritizing people over processes. Rather than simply proclaiming that people are the most important factor, he advises that software developers actually act as if people are the most important factor.\n\n2. Working software over comprehensive documentation\n\nBefore Agile practices were fully implemented, teams would spend hours creating exhaustive documents with technical specifications, requirements, and more. These lists would be prepared before developers started to write the code, meaning the whole process was delayed as the documentation took so long to compile.\n\nThe Agile philosophy is to streamline these documents and condense the information into user stories. These stories equip the developer with all the details they need to start working on the software and get it ready for release. The idea is to accelerate the launch process and make product tweaks in the early stages, improving the software in future iterations.\n\n3. Customer collaboration over contract negotiation\n\nThe third value of the Agile Manifesto highlights the importance of customer collaboration. This is viewed as superior to contract negotiation, which involves outlining product requirements with the customer before commencing the project and then renegotiating these deliverables at a later stage. The issue here is that the customer is not engaged throughout the development cycle, so teams lose out on user feedback that could enhance the product.\n\nWhen you bring your customers into the development process, you can ask for their opinions regularly and take their suggestions on board. By delving into their specific needs while the software is still being built, developers can gain valuable insights to create the ultimate user experience.\n\n4. Responding to change over following a plan\n\nTraditional methodologies advocated for as little change as possible, recognizing that significant alterations could cost time and money. The aim was to create a comprehensive plan that followed a structured, linear path and avoided obstacles where possible.\n\nThe Agile mentality turns this rigid method on its head, arguing that change can benefit the software development process. When you embrace change, you open yourself up to new possibilities and ways to improve. Agile teams work in short, iterative cycles, meaning they can react quickly and implement changes on a continuous basis. This ultimately leads to better products.\n\nThese four values form the basis of Agile software development, highlighting key priority areas for teams to focus their energies on. The core values are supported by the 12 Agile Manifesto principles.\n\nThe 12 Agile Manifesto principles\n\nThe Agile Manifesto lists 12 principles to be followed by software developers:\n\n1. Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.\n\nWhat is the number one rule in software development? Keep your customer happy. Aim to deliver software to your users at regular intervals throughout the project life cycle, rather than keep them waiting for one final deliverable.\n\n2. Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.\n\nSoftware developers should be capable of handling last-minute changes to a project. They should be flexible enough to turn these changes into improvements quickly, minimizing delays and ensuring an uninterrupted flow of work.\n\n3. Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.\n\nAgile teams break large projects down into short timelines to guarantee regular delivery. In the Scrum methodology, these timelines are known as sprints, which often run between one and four weeks long.\n\n4. Business people and developers must work together daily throughout the project.\n\nAs mentioned, collaboration is key to Agile project management. When the project stakeholders communicate on a daily basis, it minimizes the risk of confusion and ensures that everyone’s goals remain aligned.\n\n5. Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\n\nWhen you have the right people for the task, the project is more likely to be successful. Spend time choosing the perfect team, equip them with the resources they need, and trust them to deliver exceptional results.\n\n6. The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.\n\nBarriers are broken easily when teams can converse in person. Co-locate teams where possible to promote good communication and boost the flow of information. In a remote working situation, Zoom is a great alternative to phone or email, enabling people to interact more effectively via camera.\n\n7. Working software is the primary measure of progress.\n\nTo keep your customers satisfied, you must deliver high-quality software. That is your ultimate priority and your metric for success — everything else is a secondary consideration.\n\n8. Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.\n\nAgile teams must be consistent throughout their project life cycle, maintaining their speed throughout. This means they can sustain a constantly evolving environment without succumbing to delays.\n\n9. Continuous attention to technical excellence and good design enhances agility.\n\nIn Agile, you don’t just deliver one good product and call it a day — your focus should be on continuous improvement and innovation. Each iteration should bring with it a new update, feature, or advancement of some kind.\n\n10. Simplicity — the art of maximizing the amount of work not done — is essential.\n\nThe Agile approach is to not overcomplicate things: meet your requirements and do just enough to complete the task. Don’t waste time with additional steps that don’t add any real value to your product.\n\n11. The best architectures, requirements, and designs emerge from self-organizing teams.\n\nWhy micromanage teams when they are skilled enough to work on their own? By allowing them to work within their own structures, you create more room for ideas to flourish, ultimately delivering better results.\n\n12. At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.\n\nWhen you review team performance regularly, you can spot issues before they escalate, as well as potential areas for improvement. A healthy Agile team is one that self-reflects in order to eliminate unhelpful practices and advance skills.\n\nBy studying the four values and 12 principles of the Agile Manifesto, software development teams will have a clear understanding of what it truly means to be Agile.\n\nWhy is the Agile Manifesto important?\n\nThe Agile Manifesto is a valuable resource for software development teams as it equips them with a flexible framework to guide their project management processes and uphold Agile best practices.\n\nThe foundational document also clarifies what is important to Agile project management, enabling teams to prioritize their activities and align their objectives. For example, software developers will know that customer satisfaction is key, and so all project plans can be based around that guiding principle.\n\nHowever, teams should be wary of what is known as the “Agile Industrial Complex.” This refers to people and organizations that impose Agile best practices on teams rather than giving them the autonomy to decide what works best for them. There is no one-size-fits-all approach to project management, and trying to force an unsuitable methodology will not deliver the desired results. Martin Fowler, one of the Agile Manifesto founders, adds that “even the Agile advocates wouldn’t say that Agile is necessarily the best thing to use everywhere.”\n\nIn short, the Agile Manifesto is a hugely important document for teams that wish to implement or sustain an Agile methodology in their organizations.\n\nHow to use the Agile Manifesto\n\nHow can you apply the values and principles of the Agile Manifesto to your work process? Rather than a detailed list of instructions or how-to guide, there is only one key nugget of advice to keep in mind: interpret it for your own team.\n\nDiscuss the Agile Manifesto with your colleagues and see what inspiration they draw from the values and principles. It is a flexible document designed to be adapted for your Agile needs. Take the time to assess it, see what works, and figure out how you can adjust it for your team without losing sight of its core mission.\n\nJust like your chosen project management platform, a guiding document such as the Agile Manifesto should be versatile enough to suit a variety of software development needs. Tailor it to suit you and make it work for your Agile projects."
    }
}