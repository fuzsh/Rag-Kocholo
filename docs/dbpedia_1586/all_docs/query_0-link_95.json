{
    "id": "dbpedia_1586_0",
    "rank": 95,
    "data": {
        "url": "https://softwareengineering.stackexchange.com/questions/7859/is-there-a-canonical-book-on-agile",
        "read_more_link": "",
        "language": "en",
        "title": "Is there a canonical book on Agile?",
        "top_image": "https://cdn.sstatic.net/Sites/softwareengineering/Img/apple-touch-icon@2.png?v=1ef7363febba",
        "meta_img": "https://cdn.sstatic.net/Sites/softwareengineering/Img/apple-touch-icon@2.png?v=1ef7363febba",
        "images": [
            "https://cdn.sstatic.net/Sites/softwareengineering/Img/logo.svg?v=e86f7d5306ae",
            "https://www.gravatar.com/avatar/0964ccfd92e2c634db90489311f22fa6?s=64&d=identicon&r=PG",
            "https://softwareengineering.stackexchange.com/posts/7859/ivc/524b?prg=068831d8-8596-4f7c-98e6-684fd715f248"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-09-28T13:59:56",
        "summary": "",
        "meta_description": "As a solo developer, I think I'm using an Agile-like process, but I'd like to compare what I'm doing to real Agile and see if I can improve my own process.\n\nIs there a book out there that's the de-...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/softwareengineering/Img/favicon.ico?v=c4f35a1e3900",
        "meta_site_name": "Software Engineering Stack Exchange",
        "canonical_link": "https://softwareengineering.stackexchange.com/questions/7859/is-there-a-canonical-book-on-agile",
        "text": "Is there a canonical book?\n\nThere is the agile manifesto, but for a canonical book?\n\nNo. There are lots of books out there.\n\nSpecific book recommendations:\n\nAgile Software Development, Principles, Patterns, and Practices by Robert C. Martin\n\nAgile Software Development, Principles, Patterns, and Practices. This is focused on developer practices and coding and is a must read for any developer serious about agile software development. There is also a C# version of the book that he and his son Micah wrote, so if you are a .NET developer, that version might be the one for you.\n\nThe art of Agile Development by James Shore\n\nFor an insight into overall agile project practices look at The Art of Agile by James Shore & Shane Warden. It's focused on XP practices (but that's really because XP is where all the specific developer practices are defined), but has a big picture focus on how Agile projects work.\n\nA great thing about this book is that James Shore is publishing the whole text on his website for free, so you can try before you buy.\n\nPractices of an Agile Developer: Working in the Real World by Subramaniam and Hunt\n\nPractices of an Agile Developer: Working in the Real World\n\nScrum and XP from the Trenches by Henrik Kniberg\n\nIt's a great book for getting a feel for how an agile team works, and it it's a very quick read (couple of hours). I give it to new staff in my organisation - technical and non-technical - and I've had consistently positive feedback.\n\nAmazon\n\nExtreme Programming Explained by Kent Beck\n\nProbably the oldest book I can remember which helped make Agile principles popular. Agile is fast becoming a buzz word in the world of Tech. I feel Extreme Programming (XP) is a good place to start before the term Agile just seems to lose meaning.\n\nAmazon\n\nAgile Estimating and Planning by Mike Cohn\n\nFor \"the Agile process\" - look to Mike Cohn's \"Agile Estimating and Planning\" - bearing in mind that it's Scrum-centric.\n\nCohn covers a lot of the basics as well as some of the things new Scrum teams often struggle with - estimation using Story Points vs. Ideal days, what do do if you fail a story in a sprint, when to re-estimate/size and when not to, etc.\n\nHe also goes into some really interesting stuff that's mainly the domain of a Product Owner - things like how to assess and prioritize features, etc.\n\nThe Art of Unit Testing by Roy Osherove\n\nOsherove presents a very pragmatic approach to unit testing. Presents a good approach on how to refactor code to become more testable, how to look for seams, etc. It is a .Net centric book, however.\n\nAmazon\n\nThe Agile Samurai by Jonathan Rasmusson\n\nJust purchased this myself and found it to be a refreshing look on how to get started with agile.\n\nAmazon\n\nAlistair Cockburns book on his Crystal methodologies is worth while reading - partly because it gives you an alternative the the usual Scrum methods, and partly because he was one of the original guys who came up with Agile in the first place, so I hope he know what he's talking about.\n\nCrystal is an interesting methodology as it scales from small teams to very large ones, he describes the changes required to make agile work in these different environments.\n\nUnsorted books mentioned\n\nAgile Adoption Patterns: A Roadmap to Organizational Success by Amr Elssamadisy\n\nAgile and Iterative Development: A Manager’s Guide by Craig Larman\n\nAgile Estimating and Planning by Mike Cohn\n\nAgile Project Management: Creating Innovative Products by Jim Highsmith\n\nAgile Retrospectives: Making Good Teams Great by Esther Derby and Diana Larsen\n\nAgile Software Development by Alistair Cockburn\n\nAgile Software Development with Scrum by Ken Schwaber and Mike Beedle\n\nBecoming Agile: ...in an imperfect world by Greg Smith and Dr. Ahmed Sidky\n\nThe Business Value of Agile Software Methods: Maximizing Roi with Just-In-Time Processes and Documentation by David F. Rico, Hasan H. Sayani, and Saya Sone\n\nCollaboration Explained by Jean Tabaka\n\nContinuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation by Humble and Farley\n\nCrystal Clear: A Human-Powered Methodology for Small Teams by Alistair Cockburn\n\nEncyclopedia of Software Engineering edited by Phillip A. Laplante\n\nFearless Change by Linda Rising and Mary Lynn Manns\n\nGrowing Object-Oriented Software, Guided by Tests Freeman and Pryce\n\nInnovation Games: Creating Breakthrough Products Through Collaborative Play by Luke Hohmann\n\nLean Software Development – An Agile Toolkit for Software Development Managers by Mary and Tom Poppendieck\n\nLean Solutions by Jim Womack and Dan Jones\n\nLean Thinking by Jim Womack and Dan Jones\n\nManaging Agile Projects by Sanjiv Augustine\n\nManaging the Design Factory by Donald G. Reinertsen\n\nPlanning Extreme Programming by Kent Beck and Martin Fowler\n\nScaling Lean & Agile Development: Thinking and Organizational Tools for Large-Scale Scrum by Craig Larman and Bas Vodde\n\nScrum Pocket Guide: A Quick Start Guide to Agile Software Development by Peter Saddington\n\nThe Software Project Manager's Bridge to Agility by Michele Sliger and Stacia Broderick\n\nToday and Tomorrow by Henry Ford (From 1926)\n\nUser Stories Applied by Mike Cohn\n\nBook lists"
    }
}