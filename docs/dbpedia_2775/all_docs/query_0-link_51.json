{
    "id": "dbpedia_2775_0",
    "rank": 51,
    "data": {
        "url": "https://forum.image.sc/t/serial-registration-on-valis/88934",
        "read_more_link": "",
        "language": "en",
        "title": "Serial Registration on Valis",
        "top_image": "https://global.discourse-cdn.com/business4/uploads/imagej/original/2X/4/4904e8fe196486eabdbe0d9d185e94dfcab74e10.png",
        "meta_img": "https://global.discourse-cdn.com/business4/uploads/imagej/original/2X/4/4904e8fe196486eabdbe0d9d185e94dfcab74e10.png",
        "images": [
            "https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=12"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "registration",
            "valis"
        ],
        "tags": null,
        "authors": [
            "valisuser (Valis User)",
            "cdgatenbee (Chandler Gatenbee)"
        ],
        "publish_date": "2023-11-20T10:12:59+00:00",
        "summary": "",
        "meta_description": "Hello, \nI am trying to perform serial registration with Valis. Images I use are single channel 8 bit czi images, but I have a Value error: \nValueError: not enough values to unpack (expected 2, got 0) \nWhen I trace back, &hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://global.discourse-cdn.com/business4/uploads/imagej/optimized/2X/4/4b3d366e9bd1c4abfb68ca23f7596edd29cb2f4a_2_32x32.png",
        "meta_site_name": "Image.sc Forum",
        "canonical_link": "https://forum.image.sc/t/serial-registration-on-valis/88934",
        "text": "Hello,\n\nI am trying to perform serial registration with Valis. Images I use are single channel 8 bit czi images, but I have a Value error:\n\nValueError: not enough values to unpack (expected 2, got 0)\n\nWhen I trace back, on “serial_rigid.py”, get_max_image_dimensions(img_list) function, image names are string and the max_wh cannot be calculated.\n\nIt would be really nice if I can get some recommendations Thank you!\n\n@cdgatenbee\n\nThanks @valisuser, that’s very helpful, and I think I see what is going on. serial_rigid.register_images is intended to be used on single channel 8-bit images saved in a directory, and that can be read by skimage. However I’m not sure how well skimage handles czi images. In the standard pipeline, serial_rigid.register_images is called internally by the Valis object, after that same object has converted the slides to numpy arrays, processed them, and then saved them to the results_dst_dir/processed directory. The hope was that valis could make the registration process easier by offering ways to read the various slide formats (such as czi), process them for registration, and then perform the registration, all in one function call.\n\nAs you are calling valis.serial_rigid.register_images directly, I’m assuming that you’d like to only perform the rigid rigistration (please correct me if I’m wrong though). You can do that in two different ways. First, you could convert the czi images to smaller png, tif, or jpeg, and then try to run valis.serial_rigid.register_images, replacing the slide_src_dir with that directory. Or, you can use the Valis object to perform the whole pipleline (image conversion, processing, rigid registration, error estimation, warping and saving the slides), but skip non-rigid registration by setting non_rigid_registrar_cls=None when you initialize the Valis object:\n\nregistrar = registration.Valis(slide_src_dir, dst_dir = results_dst_dir, non_rigid_registrar_cls=None) rigid_registrar, non_rigid_registrar, error_df = registrar.register() registrar.warp_and_merge_slides(results_dir, crop = False, drop_duplicates = False )\n\nSince it looks like you want to create an aligned multichannel image, I’d recommend the second approach.\n\nBy default, valis will align all of your images serially, but in an order that maximizes the similarity between adjacent images, which may be different than the order in which they were sliced or stained. However, if you need them to be aligned in a particular order, you can set imgs_ordered=True when you initialize the Valis object. The order can then be defined in one of two ways. First, the images in slide_src_dir can be named such that when they are sorted alphanumerically they will be in the desired order. Or, their file names can be put in a list that defines the order, which is then passed as the img_list argument when you initialize the Valis object:\n\nordered_img_list = [\"ch1.czi\", \"ch2.czi\", \"ch3.czi\"] registrar = registration.Valis(slide_src_dir, dst_dir=results_dst_dir, non_rigid_registrar_cls=None, img_list=ordered_img_list, imgs_ordered=True) rigid_registrar, non_rigid_registrar, error_df = registrar.register() registrar.warp_and_merge_slides(results_dir, crop = False, drop_duplicates = False )\n\nPlease try it out and let me know how it goes.\n\nBest,\n\n-Chandler\n\nThank you Chandler!\n\nThe reason why I was using serial rigid function was because I thought registrar.register() cannot perform on more than 2 images.\n\nNow I try your first recommendation script and I have this error, which I did not have before. Do you maybe know what might cause this? :\n\nSLF4J: Failed to load class “org.slf4j.impl.StaticLoggerBinder”.\n\nSLF4J: Defaulting to no-operation (NOP) logger implementation\n\nSLF4J: See SLF4J Error Codes for further details.\n\nJVM has been initialized. Be sure to call registration.kill_jvm() or slide_io.kill_jvm() at the end of your script.\n\nConverting images: 0%| | 0/2 [00:00<?, ?image/s]\n\n==== Converting images\n\n100%|██████████| 36/36 [00:00<00:00, 3600.00it/s]\n\nC:\\Users.conda\\envs\\Valis\\lib\\site-packages\\valis\\valtils.py:22: UserWarning: Attempting to get reader for C:\\Users\\Documents\\spot_round12.czi created the following error:\n\nlocal variable ‘fail_msg’ referenced before assignment\n\nwarnings.warn(warning_msg, warning_type)\n\nC:\\Users.conda\\envs\\Valis\\lib\\site-packages\\valis\\valtils.py:22: UserWarning: Attempting to read C:\\Users\\Documents\\spot_round12.czi created the following error:\n\nlocal variable ‘slide_reader_cls’ referenced before assignment\n\nwarnings.warn(warning_msg, warning_type)\n\nConverting images: 0%| | 0/2 [00:04<?, ?image/s]\n\nC:\\Users.conda\\envs\\Valis\\lib\\site-packages\\valis\\valtils.py:22: UserWarning: local variable ‘reader’ referenced before assignment\n\nwarnings.warn(warning_msg, warning_type)\n\nTraceback (most recent call last):\n\nFile “C:\\Users.conda\\envs\\Valis\\lib\\site-packages\\valis\\registration.py”, line 4102, in register\n\nself.convert_imgs(series=self.series, reader_cls=reader_cls)\n\nFile “C:\\Users.conda\\envs\\Valis\\lib\\site-packages\\valis\\registration.py”, line 2295, in convert_imgs\n\nslide_dims = reader.metadata.slide_dimensions\n\nUnboundLocalError: local variable ‘reader’ referenced before assignment\n\nHi @cdgatenbee The split RGBs are from brightfield image, DAB stain. So the channels are the hematoxylin, DAB and residual channel. They are not called like this but one can always change the name of the channels…What I could do is turn them into greyscale and invert them to create a pseudo IF. But the if the names are renamed to DAPI it will be confusing since all the images to register are in one folder…Is it possible to register and merge the newly created inverted grayscale images?\n\nIf it will be better for you we might schedule a call or do some emailing or something like this to not spam…Whatever you like\n\nBest wishes!!"
    }
}