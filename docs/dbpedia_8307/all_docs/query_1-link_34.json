{
    "id": "dbpedia_8307_1",
    "rank": 34,
    "data": {
        "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6429934/",
        "read_more_link": "",
        "language": "en",
        "title": "ClusterEnG: an interactive educational web resource for clustering and visualizing high-dimensional data",
        "top_image": "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/pmc-card-share.jpg?_=0",
        "meta_img": "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/pmc-card-share.jpg?_=0",
        "images": [
            "https://www.ncbi.nlm.nih.gov/coreutils/uswds/img/favicons/favicon-57.png",
            "https://www.ncbi.nlm.nih.gov/coreutils/uswds/img/icon-dot-gov.svg",
            "https://www.ncbi.nlm.nih.gov/coreutils/uswds/img/icon-https.svg",
            "https://www.ncbi.nlm.nih.gov/coreutils/nwds/img/logos/AgencyLogo.svg",
            "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/logo-peerjcs.png",
            "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/corrauth.gif",
            "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/corrauth.gif",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6429934/bin/peerj-cs-04-155-g001.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6429934/bin/peerj-cs-04-155-g002.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6429934/bin/peerj-cs-04-155-g003.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6429934/bin/peerj-cs-04-155-g004.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6429934/bin/peerj-cs-04-155-g005.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Mohith Manjunath",
            "Yi Zhang",
            "Yeonsung Kim",
            "Steve H. Yeo",
            "Omar Sobh",
            "Nathan Russell",
            "Christian Followell",
            "Colleen Bushell",
            "Umberto Ravaioli",
            "Jun S. Song"
        ],
        "publish_date": "2018-08-18T00:00:00",
        "summary": "",
        "meta_description": "Clustering is one of the most common techniques in data analysis and seeks to group together data points that are similar in some measure. Although there are many computer programs available for performing clustering, a single web resource that provides ...",
        "meta_lang": "en",
        "meta_favicon": "https://www.ncbi.nlm.nih.gov/coreutils/nwds/img/favicons/favicon.ico",
        "meta_site_name": "PubMed Central (PMC)",
        "canonical_link": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6429934/",
        "text": "PeerJ Comput Sci. 2018; 4: e155.\n\nPMCID: PMC6429934\n\nNIHMSID: NIHMS988568\n\nPMID: 30906871\n\nClusterEnG: an interactive educational web resource for clustering and visualizing high-dimensional data\n\n,1 ,1,2 ,1 ,1 ,1 ,3 ,3 ,3 ,4 and 1,5\n\nMohith Manjunath\n\n1Carl R. Woese Institute for Genomic Biology, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Mohith Manjunath\n\nYi Zhang\n\n1Carl R. Woese Institute for Genomic Biology, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\n2Department of Bioengineering, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Yi Zhang\n\nYeonsung Kim\n\n1Carl R. Woese Institute for Genomic Biology, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Yeonsung Kim\n\nSteve H. Yeo\n\n1Carl R. Woese Institute for Genomic Biology, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Steve H. Yeo\n\nOmar Sobh\n\n1Carl R. Woese Institute for Genomic Biology, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Omar Sobh\n\nNathan Russell\n\n3Illinois Applied Research Institute, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Nathan Russell\n\nChristian Followell\n\n3Illinois Applied Research Institute, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Christian Followell\n\nColleen Bushell\n\n3Illinois Applied Research Institute, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Colleen Bushell\n\nUmberto Ravaioli\n\n4Department of Electrical and Computer Engineering, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Umberto Ravaioli\n\nJun S. Song\n\n1Carl R. Woese Institute for Genomic Biology, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\n5Department of Physics, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nFind articles by Jun S. Song\n\nAcademic Editor: Kjiersten Fagnan\n\n1Carl R. Woese Institute for Genomic Biology, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\n2Department of Bioengineering, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\n3Illinois Applied Research Institute, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\n4Department of Electrical and Computer Engineering, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\n5Department of Physics, University of Illinois at Urbana-Champaign, Champaign, IL, United States of America\n\nCorresponding author.\n\nJun S. Song: ude.sionilli@jgnos\n\nCopyright ©2018 Manjunath et al.\n\nThis is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, reproduction and adaptation in any medium and for any purpose provided that it is properly attributed. For attribution, the original author(s), title, publication source (PeerJ Computer Science) and either DOI or URL of the article must be cited.\n\nAssociated Data\n\nData Citations\n\nLiao WK. 2005. [3 March 2017]. Parallel k-means data clustering http://www.ece.northwestern.edu/ wkliao/Kmeans/index.html\n\nData Availability Statement\n\nThe following information was supplied regarding data availability:\n\nThe R scripts used for clustering can be found at https://github.com/KnowEnG/ClusterEnG.\n\nAbstract\n\nBackground\n\nClustering is one of the most common techniques in data analysis and seeks to group together data points that are similar in some measure. Although there are many computer programs available for performing clustering, a single web resource that provides several state-of-the-art clustering methods, interactive visualizations and evaluation of clustering results is lacking.\n\nMethods\n\nClusterEnG (acronym for Clustering Engine for Genomics) provides a web interface for clustering data and interactive visualizations including 3D views, data selection and zoom features. Eighteen clustering validation measures are also presented to aid the user in selecting a suitable algorithm for their dataset. ClusterEnG also aims at educating the user about the similarities and differences between various clustering algorithms and provides tutorials that demonstrate potential pitfalls of each algorithm.\n\nConclusions\n\nThe web resource will be particularly useful to scientists who are not conversant with computing but want to understand the structure of their data in an intuitive manner. The validation measures facilitate the process of choosing a suitable clustering algorithm among the available options. ClusterEnG is part of a bigger project called KnowEnG (Knowledge Engine for Genomics) and is available at http://education.knoweng.org/clustereng.\n\nKeywords: Validation measures, Genomics, Web interface, Education, Clustering\n\nBackground\n\nClustering is one of the most powerful and widely used analysis techniques for discovering structure in large datasets by grouping data points that are similar according to some measure. Several programming languages such as R (R Core Team , 2015) and Python (Pedregosa et al., 2011) offer libraries or packages for clustering custom data and generating static plots. However, interactive visualization, which aids the user in understanding the data at a deeper level, requires additional libraries and external software. Moreover, the advent of next-generation sequencing has enabled researchers to generate data at an unprecedented rapid pace, creating an acute need for resources that can enable the users of high-dimensional biological data to quickly perform “first-hand” analysis, such as clustering (Stephens et al., 2015). The main challenges to building such a resource are handling large datasets and facilitating its interpretability. Client-side computer systems or web browsers may not always be powerful enough for efficient navigation through the data. The NIH has recently funded Big Data to Knowledge (BD2K) Centers to tackle this type of challenges. As part of the KnowEnG BD2K Center, we have developed a web-based resource called ClusterEnG (acronym for Clustering Engine for Genomics) for clustering large datasets with efficient parallel algorithms and software containerization.\n\nWeb servers, such as ClustVis (Metsalu & Vilo, 2015), provide a simple yet powerful interface for visualizing Principal Component Analysis (PCA) and heatmap plots. However, at present, ClustVis limits the uploaded file size to 2 MB, and the plots are also static. WebMeV (Wang et al., 2017), a cloud-based application, performs PCA, k-means and hierarchical clustering on large datasets, while providing limited interactivity and visualization. Gitools (Perez-Llamas & Lopez-Bigas, 2011) contains several features for interactive visualization of clustering results, but currently there is no web interface available. Also, at present, Gitools provides only two clustering algorithms for analysis. WebGimm (Joshi et al., 2011) is another application for clustering analysis of gene expression data and provides results to be viewed externally using various Java applications. Similarly, other existing tools, although catering to high-dimensional data, either require a local software installation or lack clustering visualization and validation analysis (L’Yi et al., 2015; Fernandez et al., 2017). In comparison, ClusterEnG integrates the features of the above tools into one platform and produces visual results with enhanced interactivity. ClusterEnG’s interactive PCA and t-Distributed Stochastic Neighbor Embedding (t-SNE; Van der Maaten & Hinton, 2008) plots in 2D and 3D allow intuitive exploration of structures in data. ClusterEnG also provides additional algorithms not available in the above resources. Furthermore, ClusterEnG offers several internal validation measures, thereby adding a crucial feature for evaluating the performance of clustering results.\n\nResults\n\nillustrates the flowchart of various components of ClusterEnG, from user-uploaded data to output visualizations. Underlying details of the components are outlined below.\n\nInput data and output\n\nThe user can upload custom data or choose one of the preloaded sample datasets for clustering. ClusterEnG accepts data in a tabular format of rows and columns, allowing the user to analyze most datasets generated by typical biological experiments, such as RNA-seq, microarray and drug-response data. The input data are then read in R utilizing the fast and convenient “fread” function from the data.table package (Dowle et al., 2015). The ClusterEnG server currently accepts files up to a size of 2 GB. The uploaded file will be securely stored on the server temporarily for seven days, during which the user can retrieve the file or run more jobs from the same browser (with cookies enabled).\n\nCurrently, the server contains two public sample datasets: the gene expression data in NCI60 cancer cell lines (Ross et al., 2000) and B-cell lymphoma cells (Alizadeh et al., 2000). The NCI60 data (9,707 genes, 64 samples) provide a good tumor gene expression dataset to explore and assess the quality of clustering from various algorithms implemented in ClusterEnG. The B-cell lymphoma data have a similar number of samples as the NCI60 data, but contains a larger number of genes (18,432 genes, 67 samples).\n\nClustering results are made available to the user in a CSV format in mainly two different ways. First, the user can download a single file with the entire data, sample/feature annotation and clustering results. Second, the user can select a subset of data interactively and download the clustering labels for the chosen data points. The user can also download snapshots of clustering plots in PDF, PNG and SVG formats.\n\nClustering algorithms\n\nClusterEnG provides seven clustering algorithms, including parallel implementations for two algorithms. Currently, serial implementations are written in the R programming language using various packages available in the CRAN repository (R Core Team , 2015). The seven algorithms include k-means, k-medoids, affinity propagation, spectral clustering, Gaussian mixture model, hierarchical clustering and DBSCAN (Ester et al., 1996). Two heuristic algorithms are also implemented to estimate one of the parameters of DBSCAN algorithm. The parallel code for the k-means algorithm utilizes a software package written in C (Liao, 2005), while parallel spectral clustering implements a C++ code (Chen et al., 2011). For a subset of the algorithms, the user is given a list of commonly used parameters to modify and visualize the changes ( ).\n\nClusterEnG also features a module for querying the Gene Expression Omnibus (GEO) database (Davis & Meltzer, 2007) to download data and draw an interactive heatmap with hierarchical clustering based on the InCHlib JavaScript library (Skuta, Bartunek & Svozil, 2014). This allows direct access to published biological data and deeper exploration of hierarchical clustering results.\n\nDocker containerization\n\nWe employ state-of-the-art methods to handle the analysis of large files. The input data and user-selected algorithms from the front-end are dynamically packaged into a Docker container (Merkel, 2014) on the back-end wherein the code (serial or parallel) is executed and the results are returned to the main server. Chronos is used to schedule jobs by spawning Docker containers into an Apache Mesos cluster, which automatically utilizes available processors for parallel runs.\n\nInteractive 2D/3D visualization\n\nWe use dimensionality reduction techniques to facilitate the meaningful visual interpretation of the clustering results. Currently, PCA and t-SNE plots, which are broadly used in diverse fields, are implemented. We utilize the R packages stats and Rtsne (Krijthe, 2015) to evaluate the PCA and t-SNE algorithms, respectively. PCA and t-SNE provide complementary views; PCA is linear and deterministic, while t-SNE is nonlinear and nondeterministic. After PCA is performed, projection coefficients onto the first three principal components are used to generate three linked scatter plots for each pair of the components ( ). Similar scatter plots are shown for t-SNE by reducing the number of input dimensions to three ( ). Interactive plots are displayed using JavaScript library d3.js (Bostock, Ogievetsky & Heer, 2011) and jQuery to allow zooming, group selecting, mousing-over for annotation, and highlighting a region/cluster which maps to other PC direction plots.\n\nWe also implement a dynamic 3D visualization for the first three principal components to enable deeper exploration of data structure by providing a perspective 3D view of data points. A real-time orthogonal projection from the current 3D viewpoint is also provided. Written in Javascript with the libraries d3.js (Bostock, Ogievetsky & Heer, 2011) and three.js (Cabello, 2010), the 3D Principal Component Viewer ( ) allows zooming and rotating of the viewpoint. Graphical User Interface (GUI) is written using dat.GUI to toggle points or automate the rotation of viewpoint. It should be noted that the user’s browser and machine capabilities may limit these 2D and 3D visualizations. Our preliminary tests show that the visualizations work well for up to a few thousand data points on machines with typical hardware and modern browsers, but Google Chrome performed the best in all tests.\n\nInternal clustering validation measures\n\nWe include internal clustering validation measures to help evaluate the clustering results. Internal clustering validation is used to measure the goodness of clustering results without referring to any external information such as class labels (Liu et al., 2010). Eighteen indices for clustering validation are calculated using relevant functions from the R package clusterCrit (Desgraupes, 2016), where a short summary for each index is provided on our website.\n\nOn the ClusterEnG website, the validation measures are summarized for each index and clustering algorithm. Each index has an optimal measure (minimum or maximum value), which is used to compare clustering algorithms. A donut chart displays the number of indices for which each clustering algorithm is optimal. Also, a bar chart is shown for each index to compare the index values between clustering algorithms. The calculated validation measures are available for the user to download for subsequent analysis.\n\nClustering tutorial and dynamic clustering\n\nA detailed tutorial page on the website provides the user with a summary of advantages and disadvantages of each of the clustering algorithms. Interactive clustering from the R Shiny package (Chang et al., 2015) is available for affinity propagation and Gaussian mixture model, allowing the user to add data points dynamically through the GUI and observe changes in clustering behavior in real time ( ). The tutorial page further discusses pathological situations in which each algorithm may fail, with modified examples from the Scikit-learn Python package (Pedregosa et al., 2011).\n\nSample data\n\nshows snapshots of clustering results of NCI60 sample data using the k-medoids algorithm and 10 clusters. The samples are labeled using the same color scheme for both 2D and 3D visualizations. In , the k-medoids algorithm is able to separate closely related samples in terms of gene expression. For example, in the plot corresponding to PC1-PC2, the two breast tumor samples (green color) are identified in a cluster different from the nearby melanoma samples (gray color). In a similar way, one can compare the clustering results across different algorithms and assess them based on biological knowledge.\n\nDiscussion\n\nWe have benchmarked the performance of the codes for all available clustering algorithms. shows the runtime of various clustering algorithms on ClusterEnG as a function of number of samples. The test data are randomly generated from five Gaussian distributions with different mean over the feature set. The number of features for each dataset is fixed at 10,000, while the number of samples is varied from 100 to 5,000. also includes the time taken to perform PCA on the test data. The PCA step is common to all the algorithms. As shown in , DBSCAN performs best with respect to runtime for all tested data, whereas affinity propagation and hierarchical clustering have maximum runtimes for larger and smaller sample sizes, respectively. However, DBSCAN and affinity propagation can give different numbers of clusters, since these algorithms estimate the number of clusters from data. In the above analysis, the parallel k-means and spectral clustering algorithms are run on a single core for comparison with serial codes. We note that the above benchmarking was performed with datasets having a similar data structure (Gaussian distribution). The actual runtime of each algorithm may vary from dataset to dataset.\n\nFor the NCI60 and B-cell lymphoma gene expression datasets, hierarchical clustering performs best in terms of the quality of clustering (with default parameters), as assessed by the number of validation measures suggesting optimal clustering. Specifically, eight and eleven of the eighteen validation measures indicated that hierarchical clustering is optimal for the NCI60 and B-cell lymphoma datasets, respectively. However, we note that the quality of a clustering result crucially depends on the geometric structure of the data being analyzed. For example, the comparison plot on the website shows that spectral clustering and DBSCAN can correctly cluster the concentric annuli data, while the other algorithms fail to identify the correct clusters.\n\nWe are currently developing and implementing parallel algorithms for affinity propagation and hierarchical clustering, and they will be included in the future releases of ClusterEnG. Furthermore, we plan to incorporate modules for exporting the clustering results directly to other available web servers for integrative analyses, including gene ontology and gene set enrichment analysis.\n\nConclusions\n\nClusterEnG offers a one-stop web service for efficient clustering of large datasets with the flexibility of choosing among many state-of-the-art clustering algorithms, which are not readily accessible to beginners. The included interactive visualizations of clustering results in 2D and 3D will enable the users of our resource to comprehend their data effectively. We are exploring the possibility of accepting datasets much larger than the current limit by allowing the user to perform clustering on our server and then download the results for further analysis and/or visualization. As is the case for other visualization web resources, ClusterEnG’s interactive visualization module for large datasets depends on the user’s system specifications. Nevertheless, an alternative approach would be to visualize only user-selected samples after clustering.\n\nAcknowledgments\n\nThe authors would like to thank the entire KnowEnG development team and the members of the Song group for valuable feedback and help.\n\nFunding Statement\n\nThis research was supported by grant 1U54GM114838 awarded by National Institute of General Medical Sciences (NIGMS) through funds provided by the trans-NIH (National Institutes of Health) Big Data to Knowledge (BD2K) initiative (www.bd2k.nih.gov). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.\n\nReferences\n\nAlizadeh et al. (2000) Alizadeh AA, Eisen MB, Davis RE, Ma C, Lossos IS, Rosenwald A, Boldrick JC, Sabet H, Tran T, Yu X, Powell JI, Yang L, Marti GE, Moore T, Hudson Jr J, Lu L, Lewis DB, Tibshirani R, Sherlock G, Chan WC, Greiner TC, Weisenburger DD Armitage, JO, Warnke R, Levy R, Wilson W, Grever MR, Byrd JC, Botstein D, Brown PO, Staudt LM. Distinct types of diffuse large B-cell lymphoma identified by gene expression profiling. Nature. 2000;403:503–511. doi: 10.1038/35000501. [PubMed] [CrossRef] [Google Scholar]\n\nBostock, Ogievetsky & Heer (2011) Bostock M, Ogievetsky V, Heer J. D-3: data-Driven Documents. IEEE Transactions on Visualization and Computer Graphics. 2011;17:2301–2309. doi: 10.1109/TVCG.2011.185. [PubMed] [CrossRef] [Google Scholar]\n\nCabello (2010) Cabello R. Three.js. https://github.com/mrdoob/three.js. [15 March 2017];2010\n\nChang et al. (2015) Chang W, Cheng J, Allaire JJ, Xie Y, McPherson J. Shiny: web application framework for R. R package version 0.122https://cran.r-project.org/web/packages/shiny/index.html. [3 March 2017];2015\n\nChen et al. (2011) Chen WY, Song YQ, Bai HJ, Lin CJ, Chang EY. Parallel spectral clustering in distributed systems. IEEE Transactions on Pattern Analysis and Machine Intelligence. 2011;33:568–586. doi: 10.1109/Tpami.2010.88. [PubMed] [CrossRef] [Google Scholar]\n\nDavis & Meltzer (2007) Davis S, Meltzer PS. GEOquery: a bridge between the Gene Expression Omnibus (GEO) and BioConductor. Bioinformatics. 2007;23:1846–1847. doi: 10.1093/bioinformatics/btm254. [PubMed] [CrossRef] [Google Scholar]\n\nDesgraupes (2016) Desgraupes B. clusterCrit: clustering indices. R package version 1.2.7https://CRAN.R-project.org/package=clusterCrit. [3 March 2018];2016\n\nDowle et al. (2015) Dowle M, Srinivasan A, Short T, Lianoglou S. data.table: extension of data.frame. R package version 1.9.6https://cran.r-project.org/web/packages/data.table/index.html. [3 March 2017];2015\n\nEster et al. (1996) Ester M, Kriegel H-P, Sander J, Xu X. A density-based algorithm for discovering clusters in large spatial databases with noise. KDD proceedings; 1996. pp. 226–231. [Google Scholar]\n\nFernandez et al. (2017) Fernandez NF, Gundersen GW, Rahman A, Grimes ML, Rikova K, Hornbeck P, Ma’ayan A. Clustergrammer, a web-based heatmap visualization and analysis tool for high-dimensional biological data. Scientific Data. 2017;4 doi: 10.1038/sdata.2017.151. Article 170151. [PMC free article] [PubMed] [CrossRef] [Google Scholar]\n\nJoshi et al. (2011) Joshi VK, Freudenberg JM, Hu Z, Medvedovic M. WebGimm: an integrated web-based platform for cluster analysis, functional analysis, and interactive visualization of results. Source Code for Biology and Medicine. 2011;6:3. doi: 10.1186/1751-0473-6-3. [PMC free article] [PubMed] [CrossRef] [Google Scholar]\n\nKrijthe (2015) Krijthe JH. Rtsne: T-distributed stochastic neighbor embedding using a barnes-hut implementation. 2015. [3 March 2018]. https://github.com/jkrijthe/Rtsne\n\nLiao (2005) Liao WK. 2005. [3 March 2017]. Parallel k-means data clustering http://www.ece.northwestern.edu/ wkliao/Kmeans/index.html\n\nLiu et al. (2010) Liu Y, Li Z, Xiong H, Gao X, Wu J. Understanding of internal clustering validation measures. 2010 IEEE 10th international conference on data mining (ICDM); Piscataway: IEEE; 2010. pp. 911–916. [Google Scholar]\n\nL’Yi et al. (2015) L’Yi S, Ko B, Shin D, Cho YJ, Lee J, Kim B, Seo J. XCluSim: a visual analytics tool for interactively comparing multiple clustering results of bioinformatics data. BMC Bioinformatics. 2015;16(Suppl 11):S5. doi: 10.1186/1471-2105-16-S11-S5. [PMC free article] [PubMed] [CrossRef] [Google Scholar]\n\nMerkel (2014) Merkel D. Docker: lightweight linux containers for consistent development and deployment. Linux Journal. 2014;2014(239) Article 2. [Google Scholar]\n\nMetsalu & Vilo (2015) Metsalu T, Vilo J. ClustVis: a web tool for visualizing clustering of multivariate data using Principal Component Analysis and heatmap. Nucleic Acids Research. 2015;43:W566–W570. doi: 10.1093/nar/gkv468. [PMC free article] [PubMed] [CrossRef] [Google Scholar]\n\nPedregosa et al. (2011) Pedregosa F, Varoquaux G, Gramfort A, Michel V, Thirion B, Grisel O, Blondel M, Prettenhofer P, Weiss R, Dubourg V, Vanderplas J, Passos A, Cournapeau D, Brucher M, Perrot M, Duchesnay E. Scikit-learn: machine learning in python. Journal of Machine Learning Research. 2011;12:2825–2830. [Google Scholar]\n\nPerez-Llamas & Lopez-Bigas (2011) Perez-Llamas C, Lopez-Bigas N. Gitools: analysis and visualisation of genomic data using interactive heat-maps. PLOS ONE. 2011;6:e19541. doi: 10.1371/journal.pone.0019541. [PMC free article] [PubMed] [CrossRef] [Google Scholar]\n\nR Core Team (2015) R Core Team . R Foundation for Statistical Computing; Vienna: 2015. [3 March 2017]. [Google Scholar]\n\nRoss et al. (2000) Ross DT, Scherf U, Eisen MB, Perou CM, Rees C, Spellman P, Iyer V, Jeffrey SS, Van de Rijn M, Waltham M, Pergamenschikov A, Lee JC, Lashkari D, Shalon D, Myers TG, Weinstein JN, Botstein D, Brown PO. Systematic variation in gene expression patterns in human cancer cell lines. Nature Genetics. 2000;24:227–235. doi: 10.1038/73432. [PubMed] [CrossRef] [Google Scholar]\n\nSkuta, Bartunek & Svozil (2014) Skuta C, Bartunek P, Svozil D. InCHlib—interactive cluster heatmap for web applications. Journal of Cheminformatics. 2014;6 doi: 10.1186/s13321-014-0044-4. Article 44. [PMC free article] [PubMed] [CrossRef] [Google Scholar]\n\nStephens et al. (2015) Stephens ZD, Lee SY, Faghri F, Campbell RH, Zhai C, Efron MJ, Iyer R, Schatz MC, Sinha S, Robinson GE. Big Data: astronomical or Genomical? PLOS Biology. 2015;13:e1002195. doi: 10.1371/journal.pbio.1002195. [PMC free article] [PubMed] [CrossRef] [Google Scholar]\n\nVan der Maaten & Hinton (2008) Van der Maaten L, Hinton G. Visualizing Data using t-SNE. Journal of Machine Learning Research. 2008;9:2579–2605. [Google Scholar]\n\nWang et al. (2017) Wang YE, Kutnetsov L, Partensky A, Farid J, Quackenbush J. WebMeV: a cloud platform for analyzing and visualizing cancer genomic data. Cancer Research. 2017;77:e11–e14. doi: 10.1158/0008-5472.CAN-17-0802. [PMC free article] [PubMed] [CrossRef] [Google Scholar]\n\nArticles from PeerJ Computer Science are provided here courtesy of PeerJ, Inc"
    }
}