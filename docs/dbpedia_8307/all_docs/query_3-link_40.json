{
    "id": "dbpedia_8307_3",
    "rank": 40,
    "data": {
        "url": "https://www.altexsoft.com/blog/unsupervised-machine-learning/",
        "read_more_link": "",
        "language": "en",
        "title": "Unsupervised Machine Learning: Examples and Use Cases",
        "top_image": "https://www.altexsoft.com/static/blog-post-featured/2023/10/8e790297-5c25-442d-8a7e-850de01a09a3.jpg",
        "meta_img": "https://www.altexsoft.com/static/blog-post-featured/2023/10/8e790297-5c25-442d-8a7e-850de01a09a3.jpg",
        "images": [
            "https://www.altexsoft.com/static/blog-post-featured/2023/10/8e790297-5c25-442d-8a7e-850de01a09a3.jpg",
            "https://www.altexsoft.com/static/blog-post/2023/11/065eee5b-40ae-4aa4-8f2e-53840711fc0b.jpg",
            "https://www.altexsoft.com/static/blog-post/2023/11/8f44d505-7f8b-410b-8b9d-42c8bb2ce2b4.jpg",
            "https://www.altexsoft.com/static/blog-post/2024/1/fdfa4510-737c-444f-8ffc-f64f5b176495.jpg",
            "https://www.altexsoft.com/_next/static/images/YoutubePlayButton-d3972df504617e41e724a8690caef270.svg",
            "https://www.altexsoft.com/static/blog-post/2023/11/50da012b-5dd4-4044-bb44-f3fedfde15ed.jpg",
            "https://www.altexsoft.com/static/blog-post/2023/11/946603bf-5c38-42ac-b033-0ae7a455cae8.jpg",
            "https://www.altexsoft.com/static/blog-post/2023/11/dc4b1e9b-d3b8-445f-8353-ca75d7904269.jpg",
            "https://www.altexsoft.com/media/2021/04/how-amazon-uses-association-rules-in-their-marketi.jpeg",
            "https://www.altexsoft.com/static/blog-post/2023/11/e10a6470-4cd9-4e7a-a828-0d584d3cec0c.jpg",
            "https://www.altexsoft.com/static/blog-post/2024/1/1e9b55f0-bb90-46a3-988d-c956f030aaf2.jpg",
            "https://www.altexsoft.com/_next/static/images/YoutubePlayButton-d3972df504617e41e724a8690caef270.svg",
            "https://www.altexsoft.com/media/2021/04/a-small-snapshot-of-columns-and-rows-from-a-datase.jpeg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Editor"
        ],
        "publish_date": "2021-04-14T00:00:00+00:00",
        "summary": "",
        "meta_description": "Have you been wondering what unsupervised machine learning is? Our article provides all the information to fill in this knowledge gap.",
        "meta_lang": "en",
        "meta_favicon": "https://www.altexsoft.com/static/favicon/apple-touch-icon.png",
        "meta_site_name": "AltexSoft",
        "canonical_link": "https://www.altexsoft.com/blog/unsupervised-machine-learning/",
        "text": "As kids, we learn a lot of things from our parents, but there is some information we get from our own experiences ‒ by unconsciously identifying patterns in our surroundings and applying them to new situations. In the world of artificial intelligence, that's how the unsupervised learning method works.\n\nWe’ve already touched on supervised learning. In this post, we’ll explain unsupervised learning – the other type of machine learning – its types, algorithms, use cases, and possible pitfalls.\n\nWhat is unsupervised learning?\n\nUnsupervised machine learning is the process of inferring underlying hidden patterns from historical data. Within such an approach, a machine learning model tries to find any similarities, differences, patterns, and structure in data by itself. No prior human intervention is needed.\n\nLet's get back to our example of a child’s experiential learning.\n\nPicture a toddler. The child knows what the family cat looks like (provided they have one) but has no idea that there are a lot of other cats in the world that are all different. The thing is, if the kid sees another cat, he or she will still be able to recognize it as a cat through a set of features such as two ears, four legs, a tail, fur, whiskers, etc.\n\nIn machine learning, this kind of prediction is called unsupervised learning. But when parents tell the child that the new animal is a cat – drumroll – that’s considered supervised learning.\n\nUnsupervised learning finds a myriad of real-life applications, including:\n\ndata exploration,\n\ncustomer segmentation,\n\nrecommender systems,\n\ntarget marketing campaigns, and\n\ndata preparation and visualization, etc.\n\nWe'll cover use cases in more detail a bit later. As for now, let's grasp the essentials of unsupervised learning by comparing it to its cousin ‒ supervised learning.\n\nSupervised learning vs unsupervised learning\n\nThe key difference is that with supervised learning, a model learns to predict outputs based on the labeled dataset, meaning it already contains the examples of correct answers carefully mapped out by human supervisors. Unsupervised learning, on the other hand, implies that a model swims in the ocean of unlabeled input data, trying to make sense of it without human supervision.\n\nMore differences between unsupervised vs supervised learning types are in the table below.\n\nUnsupervised learning vs supervised learning\n\nNow that we’ve compared the two approaches head to head, let’s move to the benefits brought to the table by unsupervised learning.\n\nWhy implement unsupervised machine learning?\n\nWhile supervised learning has proved to be effective in various fields (e.g., sentiment analysis), unsupervised learning has the upper hand when it comes to raw data exploration needs.\n\nUnsupervised learning is helpful for data science teams that don't know what they're looking for in data. It can be used to search for unknown similarities and differences in data and create corresponding groups. For example, user categorization by their social media activity.\n\nThe given method doesn't require training data to be labeled, saving time spent on manual classification tasks.\n\nUnlabeled data is much easier and faster to get.\n\nSuch an approach can find unknown patterns and therefore useful insights in data that couldn’t be found otherwise.\n\nIt reduces the chance of human error and bias, which could occur during manual labeling processes.\n\nUnsupervised learning can be approached through different techniques such as clustering, association rules, and dimensionality reduction. Let’s take a closer look at the working principles and use cases of each one.\n\nClustering algorithms: for anomaly detection and market segmentation\n\nFrom all unsupervised learning techniques, clustering is surely the most commonly used one. This method groups similar data pieces into clusters that are not defined beforehand. An ML model finds any patterns, similarities, and/or differences within uncategorized data structure by itself. If any natural groups or classes exist in data, a model will be able to discover them.\n\nTo explain the clustering approach, here's a simple analogy. In a kindergarten, a teacher asks children to arrange blocks of different shapes and colors. Suppose each child gets a set containing rectangular, triangular, and round blocks in yellow, blue, and pink.\n\nClustering explained with the example of the kindergarten arrangement task\n\nThe thing is a teacher hasn’t given the criteria on which the arrangement should be done so different children came up with different groupings. Some kids put all blocks into three clusters based on the color ‒ yellow, blue, and pink. Others categorized the same blocks based on their shape ‒ rectangular, triangular, and round. There is no right or wrong way to perform grouping as there was no task set in advance. That’s the whole beauty of clustering: It helps unfold various business insights you never knew were there.\n\nClustering examples and use cases\n\nThanks to the flexibility as well as the variety of available types and algorithms, clustering has various real-life applications. We’ll cover some of them below.\n\nAnomaly detection. With clustering, it is possible to detect any sort of outliers in data. For example, companies engaged in transportation and logistics may use anomaly detection to identify logistical obstacles or expose defective mechanical parts (predictive maintenance). Financial organizations may utilize the technique to spot fraudulent transactions and react promptly, which ultimately can save lots of money. Check our video to learn more about detecting anomalies and fraud.\n\nCustomer and market segmentation. Clustering algorithms can help group people that have similar traits and create customer personas for more efficient marketing and targeting campaigns.\n\nClinical cancer studies. Machine learning and clustering methods are used to study cancer gene expression data (tissues) and predict cancer at early stages.\n\nClustering types\n\nThere is an array of clustering types that can be utilized. Let’s examine the main ones.\n\nExclusive clustering or “hard” clustering is the kind of grouping in which one piece of data can belong only to one cluster.\n\nOverlapping clustering or “soft” clustering allows data items to be members of more than one cluster with different degrees of belonging. Additionally, probabilistic clustering may be used to solve “soft” clustering or density estimation issues and calculate the probability or likelihood of data points belonging to specific clusters.\n\nHierarchical clustering, aims, as the name suggests, at creating a hierarchy of clustered data items. To obtain clusters, data items are either decomposed or merged based on the hierarchy.\n\nOf course, each clustering type relies on different algorithms and approaches to be conducted effectively.\n\nK-means\n\nK-means is an algorithm for exclusive clustering, also known as partitioning or segmentation. It puts the data points into the predefined number of clusters known as K. Basically, K in the K-means algorithm is the input since you tell the algorithm the number of clusters you want to identify in your data. Each data item then gets assigned to the nearest cluster center, called centroids (black dots in the picture). The latter act as data accumulation areas.\n\nIdeal clustering with a single centroid in each cluster. Source: GeeksforGeeks\n\nThe procedure of clustering may be repeated several times until the clusters are well-defined.\n\nFuzzy K-means\n\nFuzzy K-means is an extension of the K-means algorithm used to perform overlapping clustering. Unlike the K-means algorithm, fuzzy K-means implies that data points can belong to more than one cluster with a certain level of closeness towards each.\n\nExclusive vs overlapping clustering example\n\nThe closeness is measured by the distance from a data point to the centroid of the cluster. So, sometimes there may be an overlap between different clusters.\n\nGaussian Mixture Models (GMMs)\n\nGaussian Mixture Models (GMMs) is an algorithm used in probabilistic clustering. Since the mean or variance is unknown, the models assume that there is a certain number of Gaussian distributions, each representing a separate cluster. The algorithm is basically utilized to decide which cluster a particular data point belongs to.\n\nHierarchical clustering\n\nThe hierarchical clustering approach may start with each data point assigned to a separate cluster. Two clusters that are closest to one another are then merged into a single cluster. The merging goes on iteratively till there's only one cluster left at the top. Such an approach is known as bottom-up or agglomerative.\n\nThe example shows how seven different clusters (data points) are merged step by step based on distance until they all create one large cluster\n\nIn case you start with all data items attached to the same cluster and then perform splits until each data item is set as a separate cluster, the approach will be called top-down or divisive hierarchical clustering.\n\nAssociation rules: for personalized recommender engines\n\nAn association rule is a rule-based unsupervised learning method aimed at discovering relationships and associations between different variables in large-scale datasets. The rules present how often a certain data item occurs in datasets and how strong and weak the connections between different objects are.\n\nFor example, a coffee shop sees that there are 100 customers on Saturday evening with 50 out of 100 of them buying cappuccino. Out of 50 customers who buy cappuccino, 25 also purchase a muffin. The association rule here is: If customers buy cappuccino, they will buy muffins too, with the support value of 25/100=25% and the confidence value of 25/50=50%. The support value indicates the popularity of a certain itemset in the whole dataset. The confidence value indicates the likelihood of item Y being purchased when item X is purchased.\n\nAssociation rules examples and use cases\n\nThis technique is widely used to analyze customer purchasing habits, allowing companies to understand relationships between different products and build more effective business strategies.\n\nRecommender systems. The association rules method is widely used to analyze buyer baskets and detect cross-category purchase correlations. A great example is Amazon’s “Frequently bought together” recommendations. The company aims to create more effective up-selling and cross-selling strategies and provide product suggestions based on the frequency of particular items to be found in one shopping cart.\n\nHow Amazon uses association rules in their marketing and sales\n\nSay, if you decide to buy Dove body wash products on Amazon, you'll probably be offered to add some toothpaste and a set of toothbrushes to your cart because the algorithm calculated that these products are often purchased together by other customers.\n\nTarget marketing. Whatever the industry, the method of association rules can be used to extract rules to help build more effective target marketing strategies. For instance, a travel agency may use customer demographic information as well as historical data about previous campaigns to decide on the groups of clients they should target for their new marketing campaign.\n\nLet’s take a look at this paper published by Canadian travel and tourism researchers. Thanks to the use of association rules, they managed to single out sets of travel activity combinations that particular groups of tourists are likely to be involved in based on their nationality. They discovered that Japanese tourists tended to visit historic sites or amusement parks while US travelers would prefer attending a festival or fair and a cultural performance.\n\nAmong various algorithms applied to create association rules, apriori and frequent pattern (FP) growth are the most commonly used ones.\n\nApriori and FP-Growth algorithms\n\nThe apriori algorithm utilizes frequent itemsets to create association rules. Frequent itemsets are the items with a greater value of support. The algorithm generates the itemsets and finds associations by performing multiple scanning of the full dataset. Say, you have four transactions:\n\ntransaction 1={apple, peach, grapes, banana};\n\ntransaction 2={apple, potato, tomato, banana};\n\ntransaction 3={apple, cucumber, onion}; and\n\ntransaction 4={oranges, grapes}.\n\nHow frequent itemsets are singled out in the transactions\n\nAs we can see from the transactions, the frequent itemsets are {apple}, {grapes}, and {banana} according to the calculated support value of each. Itemsets can contain multiple items. For instance, the support value for {apple, banana} is two out four, or 50%.\n\nJust like apriori, the frequent pattern growth algorithm also generates the frequent itemsets and mines association rules, but it doesn't go through the complete dataset several times. The users themselves define the minimum support for a particular itemset.\n\nDimensionality reduction: for effective data preparation\n\nDimensionality reduction is another type of unsupervised learning pulling a set of methods to reduce the number of features - or dimensions - in a dataset. Let us explain.\n\nWhen preparing your dataset for machine learning, it may be quite tempting to include as much data as possible. Don’t get us wrong, this approach works well as in most cases more data means more accurate results.\n\nThat said, imagine that data resides in the N-dimensional space with each feature representing a separate dimension. A lot of data means there may be hundreds of dimensions. Think of Excel spreadsheets with columns serving as features and rows as data points. Sometimes, the number of dimensions gets too high, resulting in the performance reduction of ML algorithms and data visualization hindering. So, it makes sense to reduce the number of features – or dimensions – and include only relevant data. That’s what dimensionality reduction is. With it, the number of data inputs becomes manageable while the integrity of the dataset isn't lost.\n\nDimensionality reduction use cases\n\nThe dimensionality reduction technique can be applied during the stage of data preparation for supervised machine learning. With it, it is possible to get rid of redundant and junk data, leaving those items that are the most relevant for a project.\n\nSay, you work in a hotel and you need to predict customer demand for different types of hotel rooms. There’s a large dataset with customer demographics and information on how many times each customer booked a particular hotel room last year. It looks like this:\n\nA small snapshot of columns and rows from a dataset\n\nThe thing is, some of this information may be useless for your prediction, while some data has quite a lot of overlap and there's no need to consider it individually. Take a closer look and you'll see that all customers come from the US, meaning that this feature has zero variance and can be removed. Since room service breakfast is offered with all room types, the feature also won't make much impact on your prediction. Features like \"age\" and \"date of birth\" can be merged as they are basically duplicates. So, in this way, you perform dimensionality reduction and make your dataset smaller and more useful.\n\nPrincipal Component Analysis algorithm\n\nPrincipal component analysis is an algorithm applied for dimensionality reduction purposes. It’s used to reduce the number of features within large datasets, which leads to the increased simplicity of data without the loss of its accuracy. Dataset compression happens through the process called feature extraction. It means that features within the original set are combined into a new, smaller one. Such new features are known as principal components.\n\nOf course, there are other algorithms to apply in your unsupervised learning projects. The ones above are just the most common, which is why they are covered more thoroughly.\n\nUnsupervised learning pitfalls to be aware of\n\nAs we can see from the post, unsupervised learning is attractive in lots of ways: starting with the opportunities to discover useful insights in data all the way to the elimination of expensive data labeling processes. But this approach to train machine learning models also has pitfalls you need to be aware of. Here are some of them.\n\nThe results provided by unsupervised learning models may be less accurate as input data doesn't contain labels as answer keys.\n\nThe method requires output validation by humans, internal or external experts who know the field of research.\n\nThe training process is relatively time-consuming because algorithms need to analyze and calculate all existing possibilities.\n\nMore often than not unsupervised learning deals with huge datasets which may increase the computational complexity.\n\nDespite these pitfalls, unsupervised machine learning is a robust tool in the hands of data scientists, data engineers, and machine learning engineers as it is capable of bringing any business of any industry to a whole new level."
    }
}