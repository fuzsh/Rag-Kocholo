{
    "id": "dbpedia_7810_3",
    "rank": 63,
    "data": {
        "url": "https://stanford-jblp.pubpub.org/pub/persistence-dumb-contracts",
        "read_more_link": "",
        "language": "en",
        "title": "The Persistence of âDumbâ Contracts",
        "top_image": "https://assets.pubpub.org/7912hg8u/21546070459888.jpeg",
        "meta_img": "https://assets.pubpub.org/7912hg8u/21546070459888.jpeg",
        "images": [
            "https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Imo0dWxtOW9lLzQxNTUxNzI0NDIxNzUxLnBuZyIsImVkaXRzIjp7InJlc2l6ZSI6eyJoZWlnaHQiOjUwLCJmaXQiOiJpbnNpZGUiLCJ3aXRob3V0RW5sYXJnZW1lbnQiOnRydWV9fX0=",
            "https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Ijg1cndrd2FsLzUxNTQ0MzA2NTc3NTQxLmpwZWciLCJlZGl0cyI6eyJyZXNpemUiOnsid2lkdGgiOjgwMCwiZml0IjoiaW5zaWRlIiwid2l0aG91dEVubGFyZ2VtZW50Ijp0cnVlfX19 1x,https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Ijg1cndrd2FsLzUxNTQ0MzA2NTc3NTQxLmpwZWciLCJlZGl0cyI6eyJyZXNpemUiOnsid2lkdGgiOjE2MDAsImZpdCI6Imluc2lkZSIsIndpdGhvdXRFbmxhcmdlbWVudCI6dHJ1ZX19fQ== 2x,https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Ijg1cndrd2FsLzUxNTQ0MzA2NTc3NTQxLmpwZWciLCJlZGl0cyI6eyJyZXNpemUiOnsid2lkdGgiOjI0MDAsImZpdCI6Imluc2lkZSIsIndpdGhvdXRFbmxhcmdlbWVudCI6dHJ1ZX19fQ== 3x",
            "https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Img2czdtN2d5LzcxNTQ0MzA2NTc3NTQ0LmpwZyIsImVkaXRzIjp7InJlc2l6ZSI6eyJ3aWR0aCI6ODAwLCJmaXQiOiJpbnNpZGUiLCJ3aXRob3V0RW5sYXJnZW1lbnQiOnRydWV9fX0= 1x,https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Img2czdtN2d5LzcxNTQ0MzA2NTc3NTQ0LmpwZyIsImVkaXRzIjp7InJlc2l6ZSI6eyJ3aWR0aCI6MTYwMCwiZml0IjoiaW5zaWRlIiwid2l0aG91dEVubGFyZ2VtZW50Ijp0cnVlfX19 2x,https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Img2czdtN2d5LzcxNTQ0MzA2NTc3NTQ0LmpwZyIsImVkaXRzIjp7InJlc2l6ZSI6eyJ3aWR0aCI6MjQwMCwiZml0IjoiaW5zaWRlIiwid2l0aG91dEVubGFyZ2VtZW50Ijp0cnVlfX19 3x",
            "https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Im1pcjc5OTg2LzcxNTQ0MzA2NTc3NTQ1LmpwZyIsImVkaXRzIjp7InJlc2l6ZSI6eyJ3aWR0aCI6ODAwLCJmaXQiOiJpbnNpZGUiLCJ3aXRob3V0RW5sYXJnZW1lbnQiOnRydWV9fX0= 1x,https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Im1pcjc5OTg2LzcxNTQ0MzA2NTc3NTQ1LmpwZyIsImVkaXRzIjp7InJlc2l6ZSI6eyJ3aWR0aCI6MTYwMCwiZml0IjoiaW5zaWRlIiwid2l0aG91dEVubGFyZ2VtZW50Ijp0cnVlfX19 2x,https://resize-v3.pubpub.org/eyJidWNrZXQiOiJhc3NldHMucHVicHViLm9yZyIsImtleSI6Im1pcjc5OTg2LzcxNTQ0MzA2NTc3NTQ1LmpwZyIsImVkaXRzIjp7InJlc2l6ZSI6eyJ3aWR0aCI6MjQwMCwiZml0IjoiaW5zaWRlIiwid2l0aG91dEVubGFyZ2VtZW50Ijp0cnVlfX19 3x",
            "https://stanford-jblp.pubpub.org/static/license/cc-by.svg",
            "https://stanford-jblp.pubpub.org/static/logoWhite.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Jeffrey M. Lipshaw"
        ],
        "publish_date": "2019-01-21T21:05:01.441000+00:00",
        "summary": "",
        "meta_description": "This Article is an exploration of the similarities and differences, for lawyers, not just of language and code, but also those aspects of human thinking and interaction that will continue to be the most difficult to replicate on a machine.",
        "meta_lang": "en",
        "meta_favicon": "https://assets.pubpub.org/j2xcoaes/11528970218148.jpeg",
        "meta_site_name": "Stanford Journal of Blockchain Law & Policy",
        "canonical_link": "https://stanford-jblp.pubpub.org/pub/persistence-dumb-contracts",
        "text": "Abstract\n\nâSmart contractsâ are a hot topic. Presently, smart contracts are mostly evidence of property, like cryptocurrencies or mortgages, created and/or transferred using blockchain technology. This is an exploration of the theoretical possibilities of artificial intelligence in a far broader range of complex and heretofore negotiated transactions that occur over time. My goal is to understand what it means to make a contract smarter, i.e. to delegate more and more of the creation, performance, and disposition of legally binding transactions to machine thinking. Moreover, I want to do so from the perspective of one who is neither a true believer in the purported technological singularity to come nor a digital Luddite.\n\nThere are two primary themes. First, the extent to which complex transactions occurring over time can be embodied in computer programsâthe ability of the contracts to be smarter rather than dumberâdepends on the extent to which the subject of the transaction becomes not just a social fact, but an institutional reality. The dumb contract is merely a map of an antecedent reality, but the smart one is a real thing in itself. Second, smart rather than dumb contracts will require the translation of often fuzzy legal predicates, otherwise capable of expression in truth-functional logic, into digital proxies expressible in the non-ambiguous discrete units of code. The upshot of these two themes is that, at least until there is some better evidence that a technological singularity will occur, deciding will remain something that is fundamentally different than reasoning by way of logic or code. Hence, for the time being, dumb contracts, ones that leave open the possibility of what Karl Llewellyn called âsituation sense,â will persist.\n\nIntroduction\n\nIf you search the Internet, you can very quickly find a number of outfits willing to teach you Solidity, one of the coding languages in which so-called âsmart contractsâ are written. âBlockgeeksâ is one such firm, offering up examples of how smart contracts will revolutionize apartment leasing, supply chains, automobile insurance, and health care, all under the headline: âSmart Contracts: The Blockchain Technology That Will Replace Lawyers.â Is this mere puffing? Or are technologies like these capable of replacing the kinds of contracts law students have been studying and lawyers have been drafting for at least the 140 years or so since C.C. Langdell decided it would be a good idea to assemble a casebook on the subject?\n\nPredicting is hard, especially about the future. This Article continues my reflection on the relationship of human lawyers and their real or contemplated digital counterparts. Ultimately, it is an exploration of the similarities and differences, for lawyers, not just of language and code, but also those aspects of human thinking and interaction that will continue to be the most difficult to replicate on a machine. I believe that everything that can be digitized will be digitized. But I have pondered whether the âhalting problemââthe mathematical truth that no conceivable digital computer will be able to say for every problem it faces that an answer is computableâis meaningful in educating lawyers. The more important questions, to me, involve whether there is anything that cannot be computed and, if so, what are the consequences? Considering those questions tends to devolve quickly into dire descriptions of technology singularities where machines rule the humans, wistful reminiscences of the days when people did not spend most of their waking hours staring at their mobile phones, or philosophical debates about the capability of computers to have human-equivalent cognition. I am going to try to avoid all of those. They are fascinating but, as a smart friend observed to me recently, it is simply too early in the game to make good calls on what it all means. Let us simply say then that there are matters as to which computability presently is a significant problem. We can reasonably focus on those as the areas in which human beings will continue to bring something to the party.\n\nThat is the standpoint from which I want to explore artificial intelligence in the real-world context of making, performing, modifying, and putting aside legally binding contracts. A broad definition of âsmart contractsâ is that they âare simply computer code that automatically execute agreed-upon transactions.â Presently, when somebody refers to a âsmart contract,â the person likely means a transaction that can be completed on blockchain technology. The most publicized examples are cryptocurrencies like Bitcoin. These are barely âcontractsâ in the sense of the documentation of the reduction of a prior understanding to a set of words and sentences with legal effect. But it is not hard to imagineâand, indeed, legal technologists are hard at work onâthe use of blockchain in any application where one either creates a digital asset, transfers ownership digitally of a non-digital one, say, a security or security interest in personal property or recorded title or liens in real property, or records the movement of assets through space and time.\n\nA far more interesting challenge is to describe a smart contract in which multiple parties with potentially different models of the same transaction come to agree on a single âwell-formed formal model.â At the risk of opening a philosophical can of worms, my goal is to understand what it means to make a complex and heretofore negotiated contract smarter, i.e. to delegate more and more of the creation, performance, and disposition of legally binding transactions to machine thinking. What would it mean, say, for a long-term lease, a joint venture buy-sell agreement, or a coal supply agreement, all of which might span years, to be smart?\n\nThat entails consideration of two attributes of smarter and dumber contracts. Part I deals with the first attribute: what we conventionally deem to be realâour community ontologiesâand the extent to which those realities are reducible to digital code. Cryptocurrency programs are smart because they create realities in which there are discrete, finite, and complete states of the worldâthe âsmartâ universe. For users to accept bitcoins as valuable, they need to perceive digital universe within which bitcoins exist to have a reality on equal standing with a physical dollar bill. That is not what most contracts do. I shy away from binary definitions so I prefer to consider the core characteristics of prototypically smart and what I am going to call âdumbâ contracts. We start with transactions and understandings that occur between humans in a continuous world with infinitely complex statesâthe âdumbâ universe. Contracts model in language those antecedent transactions and understandings. They do so by reducing the complexity of the transaction into something with far fewer bits and bytes of information than the almost infinite amount presented by the physical environment in which the transaction takes place. At the same time, they use enough bits and bytes of information to make the contractual model useful.\n\nYet whether the contract is its own alternative reality of the transaction or merely a model has been at the heart of doctrinal debates over parol evidence and interpretation since the early days of modern American legal education. In 1885 the Supreme Court of Minnesota asked: âBut in what manner shall it be ascertained whether the parties intended to express the whole of their agreement in the writing?â The courtâs view of the completeness of a contract to sell timber, and one partyâs attempt to supplement its terms with an oral warranty not included in the document, might well anticipate the issues that would arise were someone to challenge an aspect of a bitcoin transaction. âThe only criterion of the completeness of the written contract as a full expression of the agreement of the parties is the writing itself. If it imports on its face to be a complete expression of the whole agreement, â that is, contains such language as imports a complete legal obligation, â it is to be presumed that the parties here introduced into it every material item and termâ¦.â\n\nMore than eighty years later, in 1968, Chief Justice Roger Traynor of the Supreme Court of California wrote two opinions that are the seminal expressions of the opposing view. In Pacific Gas & Electric Co., a case involving the interpretation of an indemnity clause, he quoted Arthur Corbinâs treatise to the effect that words, like symbols in code, have no inherent meaning.\n\nIf words had absolute and constant referents, it might be possible to discover contractual intention in the words themselves and in the manner in which they were arranged. Words, however, do not have absolute and constant referents. âA word is a symbol of thought but has no arbitrary and fixed meaning like a symbol of algebra or chemistry, ...â The meaning of particular words or groups of words varies with the â... verbal context and surrounding circumstances and purposes in view of the linguistic education and experience of their users and their hearers or readers (not excluding judges). ... A word has no meaning apart from these factors; much less does it have an objective meaning, one true meaning.â\n\nIn Masterson v. Sine, the same logic led Traynor, over a stern dissent, to permit parol evidence as to additional terms of an otherwise apparently complete promissory note. Twenty years later, Judge Alex Kozinski of the Ninth Circuit criticized the application of the Pacific Gas/Masterson logic to another promissory note, observing that âPacific Gas casts a long shadow of uncertainty over all transactions negotiated and executed under the law of California.â Challenging a promissory note as having meaning beyond the conventional understanding of a promissory note would be as unsettling as challenging the meaning of a dollar bill.\n\nThe literature of law and economics is already replete with the concept of the perfect or âcompleteâ contract, one that anticipates all future âstate contingencies.â That literature also generally acknowledges that all contracts in the real world are necessarily incomplete. The ideal but unlikely complete contract would be the economic optimum because it would perfectly align the incentives of the contracting parties and reduce transaction costs. Hence, to one with an economic bent, âincomplete contractingâ presents a problem to be solved. If you conceive of contract law and behavior in that way, using artificial intelligence to close the gap between human capability and the optimally complete contract is a hopeful avenue for research. Thoughtful scholars in this area try not to overstate things. Nevertheless the ultimate social scientific conception of a contract is one that depends on a reduction to regularities expressible in equations and Cartesian graphs.\n\nNow imagine this reduction, this effort to âscientizeâ contracting behavior, in the context of digitally documented transactions that span the complexity gamut from one-shot commodity sales to longer-term relationships like commercial leases or shareholder agreements. There is or will be a continuum across which âsmarterâ contracts will do less mapping of antecedent understandings and create more generally accepted social realities than dumber ones. I see no point in trying to create mutually exclusive sets. At one end of the continuum, the smart contract is little more than a cybernetic artifact like Bitcoin, a virtual dollar bill having a social ontology and no less a fixed and timeless meaning than a physical Federal Reserve note. At the other end, it is little more than a digitized form into which someone plugs a few chunks of data and comes out with a Kindle book or a mortgage loan. Somewhere in the middle, say in connection with a program that can sort out the puts and takes of ten yearsâ worth of contingency in a 50,000-square-foot office lease, the contract needs to be able to create virtually a complex world of real estate business and law that either maps on or substitutes for the physical version. Dumb contracts will persist, and the extent to which individual contracts are dumb rather than smart will depend on the extent to which there is utility to smartness or dumbness in the particular circumstance.\n\nPart II explores the second key attribute of a smart contract: that, even if it is expressed in natural language, it needs to be programmed in the language of computer code. Even if the programming language is higher order, incorporating natural language commands, everything in it must ultimately reduce to binary machine codeâ0s and 1s in the computerâs elementary logic gates. What makes the potential digital automation of contracts tantalizing is the fact that most contracts and contract law have a deductive âif-thenâ structure that can be expressed in formal first order logic. Many of the natural language predicates useful in drafting contracts are capable of inclusion in formal logic. Nevertheless, they are not sufficiently precise to be expressed in code without some translation of continuous characteristics into discrete units. There are several implications: (1) elastic or fuzzy language has utility and is expressible in code by way of fuzzy logic, but even that cannot be infinitely fuzzy; (2) there cannot be an infinite regress of judgment-making in code; at some point, whether in the higher order programming language or down to the level of the elementary logic gates, an exogenous programmer must tell the computer that, with respect to the translation of continuous concepts into discrete units, enough is enough; and (3) what Karl Llewellyn called âsituation senseâ in the context of making a legal (or business) judgment is capable of being coded, but not infinitely so.\n\nI conclude with thoughts about why lawyers will not need to be worried for some time about the Borg of smart contracts assimilating all practice into the digital body. Resistance is not necessary, much less futile. Contract rights are amenable to formal logic, flow charts, and computer code. There are fruitful areas for the development of smarter contracts in areas previously consigned to bespoke drafting. But the upshot of the problems of ontology and formal coding language is that, at least until there is some better evidence that a technological singularity will occur, deciding in human brains will remain something that is fundamentally different than reasoning by way of logic or code. Whether the ultimate programmer at the asymptotic limit of the infinite regress of judgment can be a machine rather than a body is a philosophical question others have debated to a fare-thee-well. I am not going to try to answer that question. Its relevance to smart contracts, however, is that we live in a universe presenting us, for the time being, with a significant portfolio of seemingly intractable dualities, complementarities, limits, and paradoxes in transactions as much as anything else. Human-like judgment continues to have an advantage over machine-like judgment, at least at the theoretical extremes. Hence, for the time being, dumb contracts and situation sense will persist.\n\nI. Artifacts and Social Ontologies\n\nEverything we are discussing here is an artifact, âa discrete material object, consciously produced or transformed by human activity, under the influence of the physical and/or cultural environment.â Marc Suchman has explored at length the status of contracts as artifacts. He observes that artifacts can be technical or symbolic, and that contracts can be both. A technical artifact is one, like a tool or a machine, that serves a utilitarian, productive purpose. The key difference between a technical and a symbolic artifact is that the former needs to work and somebody needs to know how to make it work. If the artifact is a horseshoe, the rider likely does not care how it is made to work; her only concern is that it suits the intended purpose. She relies on the farrier to understand the relationship between a horseâs hoof, the shoe, and the gait. My MacBook Pro is a far more complex artifact, and I only care that it works. I am also quite sure that it would take me a lot longer to learn, down to fundamental principles, how it works than it would to gain equivalent knowledge about shoeing a horse. A contract that documents currency hedging, i.e. allocates risk of currency fluctuation between two parties, is the example par excellence of contract as technical artifact.\n\nA symbolic artifact, on the other hand, is one that carries a cultural message. My wedding band is a purely symbolic artifact. It has no internal technical operation. It merely symbolizes something. What about the ketubah, the Jewish betrothal contract, written in Aramaic, hanging on the wall of our matrimonial home? The ketubah now operates as a symbol because we really do not care what the Aramaic sentences say. At one time, however, ketubot had technical legal significance. They may have symbolized the betrothal, but as to things like dowry and other property rights, they had to work. To be clear, even very complex modern contracts can be both technical and symbolic; I am convinced, after many years of practice, that contracts, whether for a residential real estate purchase or a corporate merger, have symbolic overtones regardless of their technical content. Moreover, good lawyers ignore the symbolic aspect at their peril.\n\nWhat currently pass as âsmart contractsâ are artifacts akin to dollar bills. On the continuum from wedding band to MacBook Pro, they are far more like the former than the latter. They are things that have value, symbolic or otherwise, simply because there is universal consensus they are what they are. Like wedding bands or dollar bills they have a physical timelessness. Even through the passage of time, they always will be what they are. Dumb contracts, like merger agreements, are artifacts as well, but they are far more like the legal equivalent of MacBook Pros. Somebody, if not the client then at least the clientâs lawyer, needs to know how they operate internally. What is clear is that they do not work if they fail to map appropriately on a transaction that would be meaningful even if there were no contract to document it. Moreover, unlike a wedding band, for which the passage of time is irrelevant, the utility of the contract as map can change as the external circumstances change. In other words, for a dumb contract to become smart, it has to be able to operate over time without outside (read: human) intervention or debate. Interestingly enough, how well a computer can replicate that exogenous change is also the subject, within computer science, of ontology and computational complexity. In short, the progression from dumb to smart contract is along a continuum of ontology and complexityâthe extent to which the contract evolves from map to thing.\n\nA. Smart Contract as Thing\n\nBlockchain and cryptocurrencies\n\nThe legal literature is now replete with good accounts of âsmart contracts,â primarily in the context of cryptocurrencies like Bitcoin and their underlying technology, blockchain. By most accounts, the first reference to smart contracts in the sense now commonly used was in a short 1997 essay written by Nick Szabo, a lawyer and computer science expert. The idea was that you could embed contractual rights within a productâs hardware and software and secure them digitally so that breaching the contract would be prohibitively expensive. The âprimitive ancestorâ of a smart contract would be a vending machine. The machine takes in coins, dispenses product, and makes change, all with sufficient security to protect the transactions from attackers. Szaboâs original example of a more sophisticated smart contract was easy for most of us to understand: a digital security system for an automobile that would protect against theft but would also contain a lien protocol if the owner failed to make the payment to the bank. No doubt today Szabo would also have the automobile self-repossess by driving itself to a secure location.\n\nThe most notable implementation of, and the most common current reference to, smart contracts is Bitcoin. In 2009, a mysterious author or authors named Satoshi Nakamoto published a paper proposing a system of electronic cash whose security depended on a peer-to-peer network of computers. The computer network Nakamoto proposed for Bitcoin was a more generally applicable technology that came to be called âblockchainâ or âdistributed ledgerâ technology. Nakamoto wanted to solve the âdouble spendingâ problem in banking. This occurs when somebody pays from an account within the banking system, but before the payment can be confirmed, the payor makes another payment, i.e. commits a fraud. The problem exists in the banking system because only trusted third parties, i.e. the banks, have the ability to assure that the payments are legitimate. Hence, the banks have to mediate disputes among payors and payees if there is a double payment issue. The peer-to-peer system depends instead on cryptographic proof of the chronological order of transactions. Assume that one owns property (here, cryptocurrency) identified in the network. The ownerâs identity is not public but the owner has a public identifier (a âpublic keyâ). A server within the network creates a timestamp for every transaction. Once a transaction has been âproved,â i.e. timestamped and verified, it is a permanent âblockâ of data added to the âchainâ of previous transactions. It cannot be reversed without also reversing all of the previous transactions.\n\n2. The ontology of dollar bills and smart contracts\n\nâSmart contractâ is an ironic and unfortunate misnomer. As others have suggested, bitcoin transactions by way of blockchain are not that smart and probably are not contracts. But whether or not a bitcoin is a contract in the traditional sense, both bitcoins and traditional contracts are artifacts. The technical-symbolic distinction is not enough to understand the difference between a dumb and a smart contract. Take, as respective examples, a bespoke merger agreement and a dollar bill. Both are complex artifacts having legal significance and which accomplish technical and utilitarian ends. Both may have symbolic value. The real difference lies in relative reality or âthingnessâ of the dollar bill as compared to the merger agreement. The smarter a contract is, the more âthingnessâ it will have. That is because the operation of the smart contract has to be as opaque to its users as the MacBook Pro is to me; indeed, the details of the complex social structure underlying the smart contract ought to be as irrelevant to its users as the legal, governmental, and social structure of a dollar bill.\n\nThe study of âthingnessâ in philosophy is ontology, âthe study of what there is,â as well as âthe most general features and relations of the entities which do exist.â John Searleâs conception of social ontology is helpful here. He asks:\n\nHow can animals such as ourselves create a âsocialâ reality? How can they create a reality of money, property, government, marriage and, perhaps most important of all, language? A peculiarly puzzling feature of social reality is that it exists only because we think it exists. It is an objective fact that the piece of paper in my hand is a $20 bill, or that I am a citizen of the United States, or that the Giants beat the Athletics 3â2 in yesterdayâs baseball game. These are all objective facts in the sense that they are not matters of my opinion. If I believe the contrary, I am simply mistaken. But these objective facts only exist in virtue of collective acceptance or recognition or acknowledgment. What does that mean? What does âcollective acceptance or recognition or acknowledgmentâ amount to?\n\nThe answer lies in features of reality that exist independently of each of us. To Searle, there are two key distinctions. The first has to do with the relationship of the thing and the observer of it. Things like mountains or muons or gravity are observer-independent. They would exist regardless of the existence of a human observer or that observerâs subjective attitudes toward it. On the other hand, social facts are observer-relative; they depend upon human beings for their existence. A dollar bill has significance as a dollar bill because of the attitudes of the observers toward it; otherwise it is simply a green piece of paper. But the fact that those attitudes exist is not observer-relative; âthe observer-relative existence of social phenomena is created by a set of observer-independent mental phenomena, and our task is to explain the nature of that creation.â\n\nThe second distinction is between objectivity and subjectivity, both epistemically and ontologically. This is an epistemically objective statement: âI am typing this on a MacBook Pro.â This is an epistemically subjective statement: âMacs are easier to use than PCs.â They are both reflections of what I know; one is true or false regardless of my attitude, and one is not. Ontological objectivity and subjectivity are different. The MacBook is real whether I believe it is real or not. Its reality is a matter of ontological objectivity. The pain in my back that has prompted me to see a chiropractor this afternoon is ontologically subjective. It exists only to the extent that I experience it. The importance of the distinction for Searle is this. That the piece of paper in my wallet is a $20 bill is an epistemically objective fact. But it is a social and institutional fact that arises because of a fairly universal consensus of human attitudes toward that piece of paper. Hence, Searle concludes: âobserver relativity implies ontological subjectivity but ontological subjectivity does not preclude epistemic objectivity. We can have epistemically objective knowledge about money â¦ even though the kind of facts about which one has epistemically objective knowledge are themselves all ontologically subjective, at least to a degree which we need to specify.â\n\nThe final step in Searleâs social ontology is the move from social fact to institutional reality. A $20 bill or a game or a smart contract each carries a meaning imposed âby collective intentionality of status functions.â Collective intentionality is the attribution of that feature of mind âby which mental states are directed at or about objects and states of affairs in the worldâ and which âis shared by different people.â Indeed, Searle defines a social fact as âany fact involving collective intentionality of two or more human or animal agents.â Some things, like $20 bills, have functions ânot intrinsically but only in virtue of the collective assignment.â For each individual, the function is observer-relative. But the final element is necessary for the creation not just of a social fact but an institutional fact as well: âthe collective intentionality assigns a certain status to that person or object and that status enables the person or object to perform a function which could not be performed without the collective acceptance of that status. An obvious example is money.â And why is this important? Searleâs answer âis that status functions are the vehicles of power in society. The remarkable thing is this: we accept the status functions and in so accepting, we accept a series of obligations, rights, responsibilities, duties, entitlements, authorizations, permissions, requirements and so on.â\n\nThis is the key move when we think about smart contracts. The value of a bitcoin arises from conventions that every player of the cryptocurrency game accepts. Artifacts can take on meanings so universally shared as to constitute social facts, i.e. intangibles perhaps not as timeless and universal as Newtonâs Third Law but having a generally accepted institutional reality. There is nothing in nature that requires me or anyone else to attribute a particular meaning to the piece of paper labeled âFederal Reserve Note,â but a $20 bill is a $20 bill by universal social consensus. In Searleâs words, â[i]t is this move whereby we create status functions that marks the difference between social reality in general and what I will call institutional reality.â To be effective, the smart contract needs to be as opaque and universally accepted as the $20 bill. The fact that it is instantiated in code rather than paper is irrelevant. It must be a âcurrency robotâ that blindly carries out the instructions embedded in its code; âonce the smart contract is activated, the parties have no entitlements beyond those in the code. They get what they get and cannot get upset.â\n\nRules, regularities, and timelessness\n\nA fork is an artifact. So is a $20 bill or a Subaru Forester. In Searleâs concept of institutional reality, what makes the $20 bill different from the other two artifacts is that there needs to be a collective attribution of meaning to the $20 bill. In contrast, the fork is an instrument to keep oneâs hands clean while eating. You could use a popsicle stick. The use of a fork or a Subaru does not require any collective understanding of the meaning of a fork or a Subaru. To drive the Subaru safely, however, does require significant understanding of institutional realities. A yellow box with cylindrical protuberances hanging over your intended route and intermittently displaying red, green, and yellow lights is also an artifact, but different from the fork or the Subaru because (a) you need to understand what the lights mean, and (b) to be effective, so does everybody else.\n\nHow the $20 bill or the traffic light obtains that significance is by way of what Searle calls âconstitutiveâ as opposed to âregulativeâ rules. While regulative rules âregulate antecedently or independently existing forms of behavior,â constitutive rules âdo not merely regulate, they create or define new rules of behavior.â The classic examples of constitutive rules are those of a game like football or chess. The rules create the shape of field, the goal line, and the concept of touchdown. But for the constitutive rules, there would be no game of football. Fred Schauer uses the example of clipping in football. It is a constitutive rule to call hitting someone from behind clipping. It is a regulative rule to make it illegal. Attributing significance to red, yellow, and green lights in a traffic light now strikes me as the creation of constitutive rules in the game of driving. It is a violation of the regulative rules of driving to proceed on red or to failure to proceed on green. There is an institutional reality to traffic signals as Searle conceived it.\n\nSearleâs goal was to understand human language because it âis the presupposition of the existence of other social institutions in a way that they are not a presupposition of language.â Language operates according to constitutive rules that have risen to the level of institutional reality:\n\nThe obvious explanation for the brute regularities of language (certain human made noises tend to occur in certain states of affairs or in the presence of certain stimuli) is that the speakers of a language are engaged in a rule-governed form of intentional behavior. The rules account for the regularities in exactly the same way that the rules of football account for the regularities in a game of football, and without the rules there seems to be no accounting for the regularities.\n\nThere is a continuum of fluidity to rigidity in the constitutive rules underlying institutional reality. The rules of the language game are real, but far more fluid than football or traffic lights, and we accommodate the fluidity by changing the rules. As David Lewis pointed out, the constitutive rules in language games move and adapt themselvesâthey accommodateâin a way that the constitutive rules of a board game or a sport do not. A $20 bill is not real in the sense of being part of nature (and hence governed by the laws of physics), but it achieves status as a social fact and its value lies in a regularity and a timelessness that makes it as describable and predictable as though it were part of nature. The meaning of the word âgayâ can change over time and still have value; the same cannot be said about the meaning of a $20 bill.\n\nI do not want to overstate this. Like many binary distinctions, there are clear prototypes at either end of the continuum between constitutive and regulative, and more difficult characterizations in the middle. My sense is that institutions are more real the less we argue about the constitutive rules that create them, and the fewer regulative rules we need to use them. A $20 bill is the product of many rules creating many institutions, many of them interlocking. I cannot imagine ever arguing over the reality of a $20 bill. Similarly, in American football, a âtouchdownâ occurs âif any part of the ball is on, above, or behind the opponentâs goal line while legally in possession of an inbounds player, provided it is not a touchback.â That incorporates other clearly constitutive rules such as the layout of the field, including the boundaries and the goal lines. There are rules that specify the attributes of the ball, but those are regulative, because they regulate an antecedent concept not otherwise created by the football, namely, a âball.â We are unlikely to argue about constitutive rules establishing what a ball or a touchdown is. But we might well argue, under regulative rules, what a legal ball is. Or we might argue, for purposes of touchdowns, what it means to have possession of the ball legally. To see the constitutive rules as regulative, I would have to be able to argue that the previous play already is a touchdown under a reasonable interpretation of an antecedent understanding of âtouchdown.â But because the concept of a touchdown is constitutive, my only recourse would be to modify the rules, for example, so that a play ending closer to the goal line than the one-yard line becomes a touchdown.\n\nA smart contract like a bitcoin is âsmartâ because of a similar regularity and timelessness. The bitcoin is not merely code mapping an antecedent understanding. Its institutional reality lies in the collective attribution of status to the bitcoin by way of acceptance of the constitutive rules of blockchain as applied to currency. The individualâs subjective intentionality means as little to a bitcoin as my wanting the ball just short of the goal line to be a touchdown makes the play a touchdown. Meanings so encoded are fixed in two directions. They are fixed at any moment in time across the population of meaning-interpreters. A $20 bill means the same thing to me in Cambridge, Massachusetts that it does to a Chinese entrepreneur in Guangzhou. And the meanings are fixed over time. A $20 bill may change in value relative to another currency over time, but its accepted meaning as a $20 bill is the same now as it will be in 2050. For bitcoins to have value, the same must be true. As one primer on blockchain observes, the key characteristics of the transaction system is that it is marked by consensus (all participants agree on its validity), provenance (the ownership and transfer of assets is completely transparent to the participants), immutability (all transactions are permanent once recorded and can only be changed by way of another valid transaction), and finality (the system provides the only means of determining the ownership of an asset or the completion of a transaction).\n\nThe term âsmart contractâ in this conception is, indeed, ironic. What a smart contract does, through blockchain technology, is to embody an asset, like a fork, money, or a security interest, and record the transfer of asset from one owner to another. As an artifact, it is to contract design what a fork is to AlphaGo. It cannot adapt to change in environments without significant aid of a human being. But that is the source of its value. How it operates, how it maps, what is going on inside is no more relevant to the bitcoin than it is to the fork or the $20 bill. Its institutional reality is marked by complete consensus, undebatable provenance, finality, and immutability.\n\nB. The âDumb Contractâ as Map\n\n1. The ontology of dumb contracts\n\nMost contracts, from the very simple ones used to teach principles of contract law (âA agrees to sell B 100 bushels of wheat at $2.00 per bushel) to the very complex ones used to transfer business entities or document sovereign debt, are unlike Bitcoin. There are elements of universal status attribution (e.g. it is a contract) in the same way that we would universally agree that the mix of lines and colors on the piece of paper in front of me purports to be a map of Cambridge, Massachusetts. Whether it is a good map of Cambridge or works for the userâs intended purpose is another question entirely. The same is true of most contracts toward the dumber end of the smart-to-dumb continuum. The less collective status attribution to the natural language or code of the contractual artifact, the âdumberâ it is.\n\nConsider the element of âconsensusâ in a smart contract created wholly on blockchain versus one on the opposite end of the âsmart-dumbâ continuum. The âdumbestâ of all contracts, at least in my coinage, would be one with precisely the opposite characteristics of transactions capable of being enclosed within blockchain. The contract would not create its own complete and unarguable institutional reality. It would instead be a linguistic map seeking to replicate another piece of reality, namely, an antecedent understanding. Would it carry a collective attribution of status (in Searleâs terms) or consensus (in smart contract terms) to create an institutional reality equivalent to a $20 bill? In a project finance package of documents, the promissory notes or letters of credit are pretty smart. They are contracts but akin to currency even if they are not negotiable. If you sign a promissory note, whether or not it tracks an antecedent transaction is usually irrelevant even if it does. The 100-page loan agreement, full of representations, warranties, covenants, technical and payment default rules, is not so smart. That is not to say that dumber contracts are not valuable. They simply do not do the same thing as a completely integrated âsmart contractâ like Bitcoin or one like a bank draft that comes close.\n\nLet us posit an example. I own a unit in a condominium governed by a master deed. Some parts of that deed are âsmarterâ than others. The master deed itself creates the property, the units, as constitutive rules in the same way the rules of football create a touchdown. Nobody is going to argue that I do not have property in the form of a condominium unit. It is likely, in the not-too-distant future, I would be able to transfer my ownership interest in the condominium unit by way of a transaction on blockchain.\n\nBut what about the arrangement is not so smart? As I suggested above, institutions are more real the less we argue about the constitutive rules that create them, and the fewer regulative rules we need to use them. The master deed also incorporates regulative rules mapping an antecedent understanding of a community interest in the appearance of the exterior of condominium units. One such regulative rule is that any new construction and any subsequent âchangeâ to the exterior of a unit must be approved by an association review board. My house was originally approved with a steel roof, rather than cedar shake like the rest of the houses. I want to replace the leaking steel roof with another steel roof, but the review board has ruled that any new roof must be cedar shake. I do not want to spend the money on cedar shake. Is my proposed work on the roof a âchangeâ or merely a replacement? We can argue whether the deal was that identical roofs were to be considered âchanges.â\n\nHence, even a contract that fixes rights in time, and does not purport to map or predict the future, is going to be dumber to the extent there are regulative rules the meaning of which are not the subject of effectively universal consensus. As a matter of social ontology, as demonstrated by the permanence of $20 bills versus the fluidity of language, constitutive rules may or may not change over time. But for many purposes, not the least of which are the utility of $20 bills or touchdowns, the subjective experience of moving through time has to be eliminated from any abstract conception of the reality that has been created. A $20 bill needs to be exchangeable for twenty singles into the foreseeable future. A first down requires gaining ten yards now and will require ten yards at least through the end of the current season.\n\nThe smarter the contract, the closer it maps on the actual deal. The smarter the contract, the more it relies purely on constitutive rules that are the subject of complete consensus, and the less it incorporates regulative rules about which the parties could argue. The smartest contracts, as with cryptocurrencies, are the deal. They exist and operate without need for any input from the outside or interpretation of the rules that embody them. But to the extent that the once dumb but increasingly smart contract maps rather than is the deal, it will need to fine tune and fix at the outset the rules that would apply in every relevant future contingency.\n\n2. Making dumb contracts smarter\n\na. Some examples\n\nHow smart could we make a contract modeling a complex transaction over time? The following are three modeling exercises I encountered in practice.\n\nLease amendment. The parties were Landlord and Tenant. Tenant was a major industrial corporation. Landlord developed, owned, and leased commercial office and industrial properties nationwide. Sometime earlier, Tenant executed a lease for 36,000 square feet from Landlord on a single floor in an office building in a corporate office park in a suburb of Cincinnati, Ohio (âFleetwoodâ). The term of the lease for Fleetwood was ten years, and the parties were in the fourth year of the term. At that point, Tenant decided it no longer needed 36,000 square feet but did not want to lease a partial floor of a building. Tenantâs CEO also preferred to be in a building in another area of suburban Cincinnati closer to his home. Tenant was willing to extend the lease to create another ten-year term if Landlord could provide a satisfactory solution.\n\nLandlord was interested in solving the problem and obtaining four more years on a lease commit. It had a building and space that would perfectly fit Tenantâs need (âRiverview Iâ). The problem was that the space was currently occupied by another tenant (âRiverview Tenantâ). Landlord was willing to extend Tenantâs lease for a new ten-year term if it could successfully negotiate an agreement with Riverview Tenant to vacate the space in Riverview I and move Tenant there from Fleetwood. Landlord was also willing to lease suitable space in a new building, yet to be constructed, adjacent to Riverview I (âRiverview IIâ) if Landlord were not successful in negotiating the foregoing agreement with Riverview Tenant.\n\nFor its part, Tenant wanted to move into Riverview I no later than one year following the execution of the lease extension agreement (âRelocation Dateâ). If no later than ninety days before the Relocation Date, Landlord were still negotiating in good faith with Riverview Tenant, Tenant would have been willing to extend the Relocation Date for ninety days. For its part, Landlord needed the ability to determine at some point that it would not be able to move Tenant into Riverview I, and to bind Tenant to a commitment to move into Riverview II no later than one year following the Relocation Date (the âOne-Year Extended Dateâ). In turn, Tenant demanded that Riverview II be a building comparable to Riverview I, with a similar elevation and materially the same footprint, traffic patterns, and exterior appearance, with like finishes, all of which must be made with Tenantâs prior consultation.\n\nFinally, Landlord needed the flexibility of an additional year, if necessary, to build Riverview II (the âTwo-Year Extended Dateâ). Tenant needed to know, at least by the One-Year Extended Date, whether Landlord would be able to deliver the required space in Riverview I or Riverview II. Because it had too much space in Fleetwood, Tenant wanted Landlordâs commitment that, if Landlord could deliver Riverview I by the Relocation Date, Tenant would get rent deductions at Fleetwood of a certain amount per month. Landlord was willing to do so, subject to a maximum cap, unless the reason it could not deliver Riverview I was on account of âTenant Delay.â To top it off, the entire deal was to be contingent on one of Tenantâs subsidiaries entering into a lease agreement with Landlord for 130,000 square feet of space in the greater Birmingham, Alabama area, with such agreement to be executed within six months.\n\nJoint venture buy-sell. MegaCorp was a large American corporation with a diversified and multi-national portfolio. It had an automotive component business (call the component a âwidgetâ) with a presence in North America, Europe, and Asia. A German corporation, Kleine AG, also had a widget business in Europe and Asia. MegaCorp and Kleine combined the two businesses into a global joint venture comprised of two constituent companies. One was a Delaware LLC named MegaKleine, LLC, in which MegaCorp owned two-thirds of the equity and Kleine the remainder. The other was a German company, KleineMega GmbH, in which Kleine owned two-thirds of the equity and MegaCorp the remainder.\n\nThe question was whether there should be an âexitâ provision in joint venture agreement to deal with its eventual breakup. The underlying understanding was that only Kleine and not MegaCorp would want to sell its interests in the joint venture. MegaCorp believed that, by virtue of its size, global presence, and access to capital, it would ultimately come to own all of the joint venture business and would have the leverage in any endgame negotiation with Kleine. Its preference was to have no such provision at all. Kleine, on the other hand, wanted the parties to be bound by the determination of an independent partyâs evaluation of the price at which one joint venture would sell its interest to the other. MegaCorp was unwilling to have a price set other than by way of a market test.\n\nThe compromise embodied in the agreement was first to provide an exit methodology geared to Kleineâs concerns by limiting the circumstances under which it would apply. The only permitted triggers for the exit mechanism were (a) the existence of an irreconcilable deadlock between MegaCorp and Kleine (such a deadlock itself defined under a detailed set of rules), or (b) Kleineâs demonstrated inability to service out of the joint ventureâs cash distributions the debt that it had incurred to enter into it in the first place. Second, the contractual methodology itself became complex on account of two factors: (a) the parties owned different percentages of the different components of the constituent joint venture entities, and there was no assurance that the entities would have equal values in the future; and (b) it was presumed that Kleine would not have the financial ability to be the acquiring party. Hence, simple (and relatively common) joint venture exit mechanisms like âI cut-You chooseâ or the âTexas shoot-out,â in which the party initiating the exit could be either the buyer or the seller, would not work. But the complexity of the final version of the methodology played to MegaCorpâs desire that any exit valuation occur by way of a negotiated deal and not a contractual mechanism.\n\nLong-term coal supply. In the early 1970s, a combination of the United States Environmental Protection Act and the Arab oil embargo prompted a number of major electrical utilities to secure long-term supplies of low-sulfur coal from surface mines in Wyoming and Montana. Some of these contracts extended for as long as twenty or thirty years. The contracts locked in prices by way of base prices and escalation provisions designed to operate off of otherwise publicly available information (e.g. increases in tax rates, freight rates, price indices, government impositions, labor costs, etc.). Those escalation clauses operated independently of the actual market price for coal.\n\nb. Timelessness and the alignment problem\n\nThe hallmark of the foregoing exercises is the complexity of the modeling task. Each of the problems is capable of reduction to flow charts of âif-then, elseâ instructions. The problem is predicting at a fixed moment in time (the creation of the contract) which of the almost infinite array of real-world contingencies needs to be included in the flow chart that will constitute the spine of the contract.\n\nRecall that the hallmarks of smart contracts expressed in computer code, in addition to consensus, include immutability and finality from the time they are created and going forward. We have already seen that a bitcoin or a $20 bill is itself immutable and final and simply moves through time. The rule about change in the condominium exterior is equally applicable in its present form no matter when in time it gets applied. Any contract that has to incorporate algorithms to account for changes in circumstances over time necessarily becomes a regulative rather than constitutive exercise in rule-making. That is because the contract seeks to map or predict in its rules antecedently or independently existing forms of behaviorânamely the flow of events through time in the physical worldâwhat is fair or foul in a game that already exists. As drafters, our job is to anticipate what rules need to apply in future states of the world. We fix the rules at the time of the making of the contract. While circumstances may change over time, the rules do not. We may anticipate a change in circumstance and a different rule that goes into effect at a particular moment in time, but even that anticipated or contingent rule gets fixed at the time of the making of the contract.\n\nTrying to make contracts smarter, to operate like calculating machines rather than humans, is the project of making a science out of most lawyers have previously considered an art. The problems inherent in making dumb contracts smarter, in scientizing them, become clearer if we contrast modeling the complex transactions described above with the kind of modeling with done by physicists and economists. In particular, we need to focus on role of timelessness and time in the modeling. Timelessness in the physical and social sciences means that the rules themselves do not change over time. They are timeless. In physics, the second law of thermodynamics or SchrÃ¶dingerâs wave equation was the same a million years ago and will be the same in another million years. Once you identify the system being modeled, it is deterministic. If you know its initial configuration, the initial direction and speed of changes in the system, and the forces the system will be subject to as it changes in time, you can predict the future state of the system. âIn classical physics, the space of states is a mathematical set. The logic is Boolean, and the evolution of states over time is deterministic and reversible.â The physicist Leonard Susskind calls this the âminus-firstâ law: the conservation of information. âThe conservation of information is simply the rule that every state has one arrow in and one arrow out. It ensures that you never lose track of where you started.â\n\nThis is the Newtonian paradigm. In it, mathematical expressions we use to describe and predict the flows of things are unchanging and timeless, even if in reality we move through moments in time. In that mathematical model, time itself sits outside the systems being measured. It is absolute and âunitary.â In short, a timeless world is one in which every final configuration is simply the initial configuration acted upon by the laws of physics. Nothing novel or surprising can occur: âWhat the Newtonian paradigm does is replace causal processesâprocesses played out over timeâwith logical implication, which is timeless.â The result of the paradigm is, however, still a model and thus an incomplete representation of physical reality. There can be no scientific determinism (a la Laplace) under which the laws of classical physics predict the future in perfect and infinite detail even with complete knowledge of all the laws and vast computing power. That is because the space of states in classical physics is continuously infinite, described in the model by real numbers and not discrete integers. Because the observer can never know the initial conditions with infinite precision, the ability to predict (or trace backwards) is limited. Moreover, even in classical physics, the choice of where to begin the measurement of initial conditions is subjective and not part of the deterministic system.\n\nThe theorists who most aspire to find physics-like regularities in contracting behavior are law and economics scholars. The reason is not hard to see. Contracts anticipate a future state of the world and provide an outcome if the conditions are met. They do so by describing transactions as a series of antecedent conditions related to legal consequences connected by rules of inference in truth-functional logic. The predominant rule of inference is modus ponens: if p, then q; p; therefore q. Not surprisingly, however, the same issues of time and timelessness affecting the laws of physics affect the laws of economic behavior. Like physicists creating models of future state changes in complex real-world physical systems under timeless laws, economists reduce complex real-world contracting behavior to timeless laws (i.e. the observed regularities of economic behavior which themselves are presumed not to change over time), albeit without a âminus-firstâ law that conserves information. Hence, the perfect contract in economic terms would be âcompleteâ: i.e. it would anticipate every state-contingency of the world. Like the transaction in the physical universe it was modeling, the contract would hold time evolution to be a unitary attribute of the system. Time marches on, and the rules embedded in the contract must be sufficiently completeâi.e. timelessâto incorporate all the desired state changes during the march.\n\nHeretofore, I would not have suggested that any economist would propose that a âcompleteââi.e. timelessâcontract is possible; rather, the work is almost always in reconciling the incompleteness of contracts with a theory that would be more coherent if they always were. As Hadfield-Menell and Hadfield observe, âeconomists and legal scholars have recognized that writing complete contracts is routinely impossible for a wide variety of reasons.â This is because states of the world may be unobservable or, if observable, unverifiable by contract enforcers, humans might not be able to predict all possible states of the world, evaluate the optimal actions in them, or determine optimal incentives. Their ability to describe states of the world and optimal actions unambiguously might be limited or too costly to write down. Finally, some of the partiesâ intentions in certain instancesâsay a storm wipes out a crop that seller has contracted to sell to buyerâmight not be specified. In short, â[b]ecause the contract does not specify the intended behavior in all contingencies it is incomplete. Contracts in human relationships are usually, and maybe necessarily, incomplete.â\n\nBut there is a nice synergy between the economistâs state contingencies and codability. All digital computers are Turing machines that work by creating a finite number of states constituting the relationship between the program and the inputs on which the program is running. Smart contracts, ones that would fully map arrangements over time, would have to run on a Turing machine. They would need to be constructed out of Turing-complete code, meaning that the reality the smart contract creates would be replicable on any universal Turing machine, or in other words, a digital computer. Indeed, Hadfield-Menell and Hadfield have speculated on the extent to which artificial intelligence can advance the creation of contracts that are more complete (i.e. anticipate more state contingencies) in the economic sense.\n\nBecause smart contracts are marked by complete consensus, undebatable provenance, finality, and immutability, even when they are maps of antecedent and independently existing arrangement, the rules from which they will be built will be as timeless and unvarying as the laws of physics. This is what Hadfield-Menell and Hadfield refer to as the âAI-alignment problemâ:\n\n[It] arises because of differences between the specified reward function and what relevant humans (the designer, the user, others affected by the agentâs behavior) actually value. AI researchers intend for their reward functions to give the correct rewards in all states of the world so as to achieve the objectives of relevant humans. But often AI reward functions areâunintentionally and unavoidablyâmisspecified. They may accurately reflect human rewards in the circumstances that the designer thought about but fail to accurately specify how humans value all state and action combinations.\n\nIn addition, if we are going to try to map human affairs by way of timeless laws, the ability of that mapping to conserve all information going forward is going to be limited by the precision of the initial state (i.e. how closely did the contract map on exactly the conditions affecting the parties at the time it was drafted) and the subjectivity of the contract drafter, as discussed earlier in connection with physics.\n\nThe alignment and initial state problems do not only exist for AI-contract designers. Even the most sophisticated digital computer program does no more than replicate (except much, much faster) a hypothetical human computer using a pencil and paper. Every lawyer who drafts a more-than-passingly complex contract confronts potential alignment problems of precisely the same nature. The alignment issue, not surprisingly, reared its head in each of the examples. The lease amendment failed to anticipate that Tenant would be acquired by another corporation and that any space for a world headquarters was redundant. The joint venture exit methodology failed to anticipate that it was MegaCorp, not Kleine, that first decided to exit the widget business. The long-term coal supply agreement failed to anticipate a collapse in world energy prices in the early 1980s, causing the automatic price escalators to create a significant gap between the market price and the contract price. In one case, the price of the coal had escalated from $24 per ton in 1978 to $44 per ton in 1985 while the market price of equivalent coal had collapsed to a point that the coal cost more to mine than it was worth on the market.\n\nc. Social ontology, computer ontologies, and institutional realities\n\nFor all of the example contracts to be âsmart,â in the sense of immutability and finality, they would have had to do something more than merely create the cyber version of a $20 bill. We will assume that each could do âsmartâ things to be self-executing, like tap into bank accounts, record liens and mortgages, engage contractors, and do everything that a human contract administrator might do. More significantly, they would have needed to anticipate and map a flow chart extending from the date of execution through various contingencies to a final resolution. In short, unlike a fork or a $20 bill or a bitcoin that is timeless in the sense that it merely moves through time, these contracts would have needed to incorporate time into the very understanding between the parties. If they were truly smart contracts, they would have been timeless in the sense that, once created, they would be immutable and final. Unlike the fluid constitutive rules of language but like the fixed constitutive rules of football, the contract rules could not be permitted to change once the deals were sealed.\n\nIn computer science, an ontology is a formal definition of concepts and their relationships, related to a domain of interest. There is at least a family resemblance in the usages of the term across the disciplines of philosophy and computer science having to do with an intense interest in how to describe and categorize various states of being. The difference, I think, is that philosophers think about what âisâ in terms of what the physical, metaphysical, and social worlds bring to the observer; in computer science, on the other hand, an ontology is a reality the programmer creates because it is helpful in achieving a particular end. An example would be programming a search engine to help a traveler find a suitable vacation spot. When the user asks to find a pet-friendly hotel on a New England lake that permits motorized watercraft, the program needs to be able to place all those terms within an alternative âtourismâ reality. That is a âtourismâ ontology.\n\nThere is a similar ontology of contract documentation. In my first-year contract law class, we turn to legal issues concerning the scope of the contract at the beginning of the second semester, after we have spent the first semester learning about contract enforceability (consideration and related doctrines) and formation (offer and acceptance and related doctrines). At this point in the course, I ask the students to assume that the parties have formed an enforceable contract. The issues will then be what they agreed to, particularly when they reduced their agreement to writing. This will involve understanding the status of language that they used coming to an agreement but which did not make it into the written document (the parol evidence rule), the meaning of the language they actually included in the document (interpretation), and the possibility that there was language they never shared, either orally or in writing, that should nevertheless be considered part of the written contract (implied terms).\n\nI suggest to the students that all of these issues relate to the process of getting the essential point of the understanding across using fewer bits and bytes of information than we would use to describe the entirety of our relationship. By doing so we create an objective record, capable of being read by a third party, of what was previously merely a second-person, inter-subjective communication. That is, the contract is a model of our relationship, but it is not the whole of our relationship. For example, A in Los Angeles and B in New York sign a letter of intent that they intend to execute a contract to sell a business. They set a deadline date for the execution of the agreement. They even agree in writing that the seller will prepare the first draft. They realize that the definitive agreement is going to take multiple negotiation sessions over the course of several weeks. Whose office? They may well not put that in the agreement, even though they could. Indeed, no matter how complex the written agreement is, even if it is a 100-page merger agreement, the real world is always more complex because the real world is all of reality and not just what was reduced to writing.\n\nMoreover, we can never code our entire relationship (i.e. make what the economists call a complete contract), but we could code more of it. Yet at what cost? There are other examples of reduction. Sometimes the reduction furthers our ends and sometimes it does not. For example, we could think of a live tennis game as a metaphor for our relationship and a computer game version of tennis as a metaphor for the contract. We could agree that, instead of playing tennis, we would use a model for tennis. I then suggest there are alternative computer models for tennis. My reference to the old Atari Pong (one square dot and two rectangular paddles) usually gets a laugh. EA Sports, on the other hand, makes a version of tennis for the Nintendo Wii machine. If we want to model real tennis, the advantage of Pong is that it is cheaper to create and has relatively few rules to administer. But it bears only the slightest relationship to actual tennis. The advantage of the EA Sports version is that it is far more like real tennis, even though it is not real tennis. The website proclaims, âEA Sports Grand Slam Tennis puts the racket in the palm of your hand and offers the deepest tennis experience ever for the Wii.â Its disadvantage is that it is far more complex, far costlier to create, and has far more rules to adjudicate. Without seeking to stretch the metaphor too far, I claim the contract is a model of reality in the same way that Pong or EA Sports Grand SlamÂ® Tennis can be a model of reality.\n\nThe question is how much of the physical world gets replicated in the cyber world. That is the issue of computer ontology. A computer ontology that permits a relationship like the lease amendment, the joint venture exit, or the coal contract to be smart (or at least smarter) is going to have to be substantially more developed and incorporate far more of the real world than the word processing programs used to write their dumber counterparts. The viability of a smarter contract that incorporate changes in circumstances over time will depend on human willingness to submit to its ontology.\n\nI suspect dumb contracts will persist because that consensus is unlikely in the vast majority of cases, even if the parties were confident in the modelâs ability to track changes in circumstances over time (see the discussion of computational complexity that follows). Just as it is true that there are no private languages (per Wittgenstein) if we are to be able to speak to each other, when we talk metaphorically about the contractual âmeeting of the minds,â there are no private ontologies. Rather, each of us has a subjective viewpoint on an objective world, in life, law, and transactions, including the artifacts we have created in non-private language and which we label as our âcontract.â And, unlike the artifact, which is timeless, our subjectivity moves through time. What we wanted before we may not want later. In short, we will continue to use non-private languages to translate our private and subjective desires into intersubjective understandings. We will create objective and timeless artifacts of those understandings in the same non-private language. Those artifacts may or may not become obsolescent in the real world over time. They may or may not continue to be congruent with subjective desires. That will continue to be true, notwithstanding the work being done in the automation of routine contract drafting.\n\nd. Computational complexity\n\nAnother response to the economistâs complete contract or a programmerâs complete smart contract ontology lies at the intersection of legal and computational complexity. Eric Kadesâ 1997 article anticipates the issue, even if the computer processing technology to accommodate complexity is significantly advanced twenty-one years later. Legal complexity arises from the sheer number of rules applied to the infinite number of possible circumstances to which they apply. Computational complexity is, in contrast, a mathematical concept whose application to computing is the ability âto produce quantifiable measures of how long a program will take to process input of various sizes.â Professor Kadesâ focus was on the extent to which computer technology could make previously unsolvable problems manageable, on one hand, but the limitations imposed on such efforts by computational complexity, on the other, in a number of areas: debtor-creditor priorities, tax liens, bankruptcy, corporate voting, criminal conspiracies, and complex contracts. In short, some problems become so complex because of the number of variables as to be intractable, and at that point, even programmers need to resort to heuristics over deductive or computational logic.\n\nAgain, even if the parties were willing to submit to a contract capable of a complete ontology effective over time, there are significant questions whether that ontology would require a computational complexity beyond the limits of practical programming.\n\nII. Logic and Computability in Smart and Dumb Contracts\n\nThe tantalizing possibility of the âsmart contractâ idea extending beyond thing-like cryptocurrencies to map-like contracts arises from the fact that contracts and contract law can, and indeed often do, have a formally logical structure. Yet many concepts that are capable of expression and manipulation in formal logic cannot be expressed in computer code without creating proxies in the discrete symbols of binary code for the continuous concepts otherwise expressible in language or logic. If you posit a smart universe in which smart contracts operate, its common language would be computer code. The reality the smart contract creates is capable of being replicated on any universal Turing machine, or in other words, a digital computer. Hence the language of the smart contract is obliged to be not only expressible in a formal logic, but it also has to be computable. In the smart universe, all of reality consists of a set of states between which you move in discrete steps.\n\nThe hallmarks of a formal coding language are (a) strict syntax, (b) that the expressions in the language have no inherent meaning, and (c) near or complete non-ambiguity. The distinction between formally logical and computable is critical here. Consider all of the contractual standards lawyers regularly employ that could be quantified on a scale, say of one to ten, but which are in reality polar continuums capable of clear examples on either end but significantly gray the closer to the middle the example lies. A partnership requires only a majority vote of the partners for approval of ordinary matters, but a unanimous vote for extraordinary ones. The president of a corporation has actual express and implied authority to bind the corporation in connection with its âday-to-day operations,â but needs board approval otherwise. A carpenter is obliged to build the frame of a house in a workmanlike manner. Article 2 of the Uniform Commercial Code is notorious for being replete with these vague standards expressed in wiggle words like âreasonable,â âseasonable,â âsatisfactory,â âfit,â or âmerchantable.â\n\nOne can re-create the operation of the contract terms or the governing law in first-order predicate logic that satisfies (a) and (b) of the coding language parameters. But first-order predicate logic only requires that the language have a formal syntax and grammar; it does not require complete non-ambiguity. Even with ambiguous predicates, classical logic can take us deductively from a set of premises to a valid conclusion that must be true assuming the premises are true, as long as we correctly employ the appropriate rules of inference. The problem with the wiggle words in computer code rather than mere predicate logic is (c): to be computable, everything must be expressible by discrete rather than continuous mathematics. For a more widely understood example, take the judging of competitive figure skating. A âlutzâ is a toepick-assisted jump with an entrance from a back outside edge and landing on the back outside edge of the opposite foot. Making a judge âsmartâ here would mean first translating the characteristics of a lutz into sentences in first order predicate logic. Some predicates would be relatively objective criteria like âthe jump was high,â âthe jump was long,â âthe jump was fast.â But there would also have to be sentences covering relatively subjective criteria like âthe jump was pretty,â or âthe jump was original.â\n\nMuch (if not most) of the natural language lawyers use to draft contracts resists the complete non-ambiguity or vagueness of computer code. Professor Bayless Manning captured this in his âlaw of the conservation of ambiguityâ:\n\nElaboration in drafting does not result in reduced ambiguity. Each elaboration introduced to meet one problem of interpretation imports with it new problems of interpretation. Replacing one bundle of legal words with another bundle of legal words does not extinguish debate; it only shifts the terms in which the debate is conducted.\n\nThe downside of such ambiguity or vagueness is what I have previously called âlexical opportunism,â the ability to use it to further ends that likely were never in the contemplation of either party when they executed the contract.\n\nIf contracts can be logical, can they also achieve the precision of which computer code is capable? The thesis here is it is possible, even likely, but not without the aid of human-like intelligence. The reasons to expect the persistence of dumb contracts go beyond ontology. The very language in which one would need to express the smart contract, that of a digital computer, requires someone or something, even at an almost inconceivably deep level of granularity, to draw a line in the sand, thus converting the continuous into the discrete, from merely logical to wholly computable. That someone or something cannot be the computer itself. One commonly cited provision of Article 2, Â§2-314, the implied warranty of merchantability, demonstrates this.\n\nA. The Formal Logic of UCC Article 2\n\nLet us consider Â§2-314 by way of the formal syntax of first-order predicate logic. Article 2âs wiggle words like âreasonable,â âseasonable,â âsatisfactory,â âfit,â or âmerchantableâ work just fine in this system. As with prettiness and originality in skating, they are objective, conventional, but continuous standards; nevertheless, they can only be assessed from somebodyâs subjective standpoint. When two skating judges have different assessments of prettiness, they can average them together for a final score. When two parties to a sales contract have a different view of the fitness of a good for its ordinary purpose under Â§2-314 of the U.C.C., we have a legal dispute to be resolved. Moreover, we can set that predicate of fitness standard into a formal proof by which an award of damages is inferable deductively from the truth of the fitness predicate. But, as we will see in the next section, to make application of legal rules with continuous, subjective predicates not only logical but computable (and thus âsmartâ), we are going to need to translate them into discrete ones.\n\nLet us take the example of a buyerâs right to recover damages if there is a breach of the warranty of merchantability. The long-term coal supply contract referred to above would be governed by Article 2 of the UCC. The utility uses it in the boilers of electric power plants (the coal gets burned, heating water to steam which drives a turbine that generates electricity). It turns out the coal has so much moisture content that it would not work to generate sufficient steam in any currently operating boiler. Can we demonstrate the buyerâs right to damages under Article 2 as a formally logical implication of that fact?\n\nAccepting Fred Schauerâs characterization of legal rules as entrenched generalizations, I am going to precede each logical statement of a rule by the universal quantifier â. The warranty of merchantability is UCC Â§2-314(1). It translates into formal logic, as follows, and will be a premise in our deduction of the right to recover.\n\nIn natural language, the logical sentence on the right reads âFor every x and every y, if x is a good and y is a seller and a merchant and sells the good, then x is warranted to be merchantable.â Or, if I am a merchant and I sell a good, it will be merchantable or I am in trouble.\n\nWhat does it mean to be merchantable? To simplify things, I am going to use only one definition of merchantable in Â§2-314(2), namely sub (c), which provides that merchantable goods âmust be at least such as â¦ are fit for the ordinary purposes for which such goods are used.â In logical notation, it would be something like:\n\nIn natural language, it is the conditional âfor every x, if and only if it is fit for ordinary purposes, then it is merchantable.â This ought to be a bi-conditional because there cannot be a case where something is merchantable but it is not either fit for ordinary purposes or one of the other indicia of merchantability. I am leaving âgoodâ as the property of the thing out, because it is not necessary to the equivalence.\n\nUCC Â§2-714 establishes the right of a buyer to be compensated in damages if the buyer accepts a non-conforming tender and gives the appropriate notice.\n\nIn natural language, the logical sentence reads: âFor every x, if x is a good and is not conforming, then for every y and z, if y is a buyer and z is a seller, and buyer accepted the good and notified seller, y recovers damages from z.â\n\nThe condition we are most concerned about is -Cx, âis not conforming.â Referring to UCC Â§2-607(3), we can find a connection between a breach and the predicate ânon-conforming.â It seems reasonable to me to say a breach occurs when the good is not merchantable (-Vx) and if there is a breach of the warranty of merchantability (Wx), the good does not conform. Hence:\n\nFor every x, if x is warranted and not merchantable, it is not conforming.\n\nWe need to apply the rules to a particular situation, which means that the coal at issue here needs to be represented logically not by a variable, but by a logical constant. We will represent the circumstances as follows:\n\nIf I now begin with the premises that a specific good has been sold, that it has been accepted, that the buyer has notified the seller, and the good is not fit, I can prove formally that the buyer is to be compensated in damages.\n\nThat is the formal logic of Article 2. In this form, it is logically impeccable but not smart.\n\nB. Why These Concepts are Difficult to CodeâDiscrete and Continuous\n\nCan it be coded as is? The answer is no, because one of the essential elements of the proof, namely the property F, or fitness, is a continuous and not a discrete function. To make this program smart, we need to do more work, namely creating either a deductive or inductive proxy for fitness.\n\nWhen the predicates from formal logic are continuous properties, then on a hypothetical measurement scale between 0 and 10, the actual performance is capable of any of an infinite number values within the finite interval. That is, the reality of thing being measured is continuous and not discrete. For any two measurements say, of height, there are always infinitely more precise measurements capable of expression. We simply agree that (a) the measurement will use a finite and discrete set of numbers within the interval, and (b) a certain degree of precision is appropriate (say, rounding the height to the nearest quarter of an inch). The digitization of objective criteria is something we do all the time, and whether a figure skating jump was 36 or 37 inches high will not depend on the national fervor of a given judge.\n\nBut in figure skating, subjective criteria like âthe jump was prettyâ are also continuous and capable of infinite values within the interval. The predicate of âprettyâ is perfectly capable of inclusion in a formally logical structure. It cannot be coded unless somehow it turns into something measurable, even if deep within the program, on a discrete scale. The reason for this has to do with the mathematics at the very core of the operation of a computer. âNatural numbersâ are the counting numbers like 1 or 2. âRational numbersâ are those which can be expressed as ratios of natural numbers. A fraction like 2/5 that has a finite number of digits when expressed as a decimal (.4) is a rational number. So is a fraction like 1/3 whose decimal expression is infinite (.3333â¦). âIrrational numbersâ are those which are not rational. Examples are the square root of 2, pi, and e, the base number for a natural logarithm. A number, whether rational or irrational, is computable in the sense that some sequence of discrete steps can continue producing it to more decimal places. The real numbers divide into rational and non-rational numbers. Not all real numbers are computable. One headache-inducing upshot of this is that however infinitely large the set of computable numbers (those that can be calculated using a fixed number of axioms) may be, it still does not include infinitely more real numbers that sit between the computable numbers. The set of all real numbers is continuous, and a single real number is best described as a âsliceâ or âcutâ that divides all the higher numbers from all the lower numbers. And to make things even more confusing, even though the set of natural numbers is infinite and the set of real numbers is infinite, there are still more real numbers than natural numbers.\n\nComputers operate on natural numbers expressed in base two rather than our usual base ten. The advantage of base two is that rather than having ten symbols for numbers as in base ten (1 through 9 and 0), there are only two symbols, 0 and 1. When a computer computes, it operates only on 0s and 1s. This goes back to the theoretical genesis of computing. In order to prove a thesis in number theory, Alan Turing imagined a computing machine (now referred as a âTuring machineâ even though it is a thought experiment, not a physical machine). A Turing machine consists of a scanner that contains a finite set of âstates.â States are discrete sets of instructions for the scanner. An imaginary and infinitely long tape runs past the scanner. The tape is divided into squares. Each square of the tape may contain a symbol, usually either 0 or 1, or may be blank. The scanner only âreadsâ one square at a time. The machine works by being in a particular âstate,â âseeingâ what symbol is or is not in the square, and then acting on the state instructions that tell the machine what to do based on what it âseesâ in the square.\n\nFew people, even computer programmers, ever think about it, but anything that can be done on any modern digital computer must reduce to the primitive operation of a hypothetical Turing machine. In modern computer science, the reading of a 0 or 1 in a scanned square in the Turing machine translates into the operation of an elementary logic gate. To work in the logic gates, all higher order languages, Python, Ethereum, C++, for example, and every physical operation, for example hitting a key and having a letter appear on the screen, have to reduce to machine code that is expressed in nothing but 0s and 1s. The elementary logic gates in turn âare physical implementations of Boolean functions.â Boolean functions are based on Boolean or binary values âthat are typically labeled true/false, 1/0, yes/no, on/off, and so forth.â That is, a Boolean function is one that âoperates on binary inputs and returns binary outputs.\n\nComputer software at the level of the processorâs machine code thus expresses everything as binary values of 1/0, and computer hardware is designed to manipulate those binary values through the logic gates. All Boolean functions can be expressed using three operators: And, Or, and Not. In turn, those three basic operators can be built from the even more basic single Boolean operator âNandâ meaning âNot and.â That is, assume two binary inputs, x and y, both of which can be either 0 or 1. If the inputs are not both 1, the output will be 1. If the inputs are both 1, then the output will be 0. The practical importance of this is that, if you have a physical device that can implement the Nand\n\nfunction, you can build an entire computer from it. And that is what happens.\n\nTo be represented on a computer, anything that is continuous in nature, like color or sound that are carried physically through space by waves, or continuous in concept, like prettiness, originality, or fitness, must be translated into code. Consider a range of musical pitch. In theory at least, between any two notes we ought to be able to strike another one, and so on infinitely to an asymptotic limit. That range would be represented on an analog basis by a range of real number. To put it into code, we need to use computer languages of higher and lower order that ultimately translates into 0s and 1s of elementary logic gates in machine code. So how would we make the predicate âfit for ordinary purposeâ in UCC Â§2-314 smart?\n\nFirst, there would need to be a deductive, algorithmic foundation. A computer creates the illusion of continuous color first by instructing each pixel how many units of red, green, and blue to add (like the hardware store mixing your paint) and then creating higher and higher resolution by way of more and more pixels (hence 1080 resolution is higher than 480âas if George Seurat added more and more dots to his paintings). A computer creates the illusion of continuous waves of sound by increasing the rate of sampling, the number of packets of digital information representing pieces of the analog sound. Similarly, we would need to develop digital units of fitness.\n\nSecond, having reduced âfitnessâ to a binary foundation of fitness units, what would the units measure? The problem is defining the discrete prettiness or originality units. In figure skating, even if the performance occurs objectively, each judge makes a subjective assessment of prettiness or originality and assigns a discrete mark to each one. The replacement of the continuous with the discrete is all the more glaring here but not because the reality of the subjective criteria is any more continuous than the objective. Instead, it is because we are far less comfortable, conventionally, with taking each judgeâs subjective measurement as âtruthâ when we cannot independently verify it. That, however, is a far more uncomfortable translation of a continuous and subjective property into a discrete scale. If you are a merchant who sold me a good that is not working, your application of the fitness standard to the good might not match up to mine.\n\nWhether with prettiness or originality in figure skating, or fitness for ordinary purposes in the sale of goods, assuming we could come to an agreement on the units, we could probably write an algorithm for the AI âsmart judgeâ with âbig dataâ access that would be able to assign a discrete measurement of âprettyâ or âoriginalâ or âfit.â That is no longer a formal deductive system. In an AI deep learning program, what the programmer is doing, effectively, is replacing deductive inferences with inductive inferences. In first-order predicate logic (which is truth-functional, meaning that the conclusion must be true if the premises are true), the âif-thenâ connector says only that if x is true, then y must also be true. It makes no inferences at all if x is false. That is, in formal logic, y may be true even if x is false. In inductive logic, which is not âtruth-functional,â the âif-thenâ connector really means âbecause,â where the even truth of the antecedent x does not guarantee the truth of the consequent y. The truth of the antecedent x only makes it more likely that the consequent y will be true. In short, because the standard is applied inductively and not deductively, somebody has to tell the computer when and when not to draw the appropriate inference that the jump is pretty or that the good is fit.\n\nC. Elastic Language and the Finite Regress of Code\n\n1. The utility of vagueness in natural language and the law\n\nNatural languages tolerate ambiguity and vagueness, and that those characteristics are often useful to speakers. The linguist Grace Q. Zhang studied the use of vague language and concluded that âthe ability to use vague language is as important as, if not more important than, the ability to use other types of language (e.g. precise language).â She coined the term âelastic languageâ so as to avoid the pejorative implications of vagueness, and to highlight its indispensability in human communication.\n\nWords are slingshots with a rubber band, and speakers âstretchâ their words to achieve communicative purposes â¦ Language is inherently vague â¦ but this is not a deficiency. It occurs even in so-called âpreciseâ contexts such as mathematical language â¦ and legal language â¦ Strategic use of language is essential in successful communication, and being vague is one of many strategies.\n\nProfessor Zhang suggests a typology for elastic language that includes (1) âapproximate stretchersâ (e.g. words like âabout,â âmany,â âsomeâ); (2) âgeneral stretchersâ (e.g. âthings,â âstuff,â âsomebodyâ); (3) âscalar stretchersâ (e.g. âvery,â âa bit,â âkind ofâ), and (4) âepistemic stretchersâ (e.g. âmaybe,â âI think,â âpossiblyâ). The pragmatic functions of such language include avoidance, deliberate withholding of information, emphasis or de-emphasis, maintaining friendliness, mitigation, politeness, face-saving, and self-distancing. Not surprisingly, studies demonstrate the use of elastic language in classrooms, academic conferences, courtrooms, and business negotiations.\n\nBut vagueness and ambiguity likely have far more utility when transactors govern themselves by custom rather than law. For example, in Lisa Bernsteinâs study of the cotton industry, otherwise unresolved disputes get litigated in private arbitration governed by detailed trade association rules and individual contracts. When the parties have to resort to such litigation, the cases get decided formalistically according to the contract and the trade rules and not according to custom or the background of the deal. In contrast to the cotton industry rules, Article 2 of the Uniform Commercial Code reflects the desire of Karl Llewellyn, Article 2âs primary drafter and one of the great legal realists, to have commercial law incorporate âimmanent business normsâ into after-the-fact legal dispute resolutions, whether by way of interpretation of the partiesâ agreement or gap-filling default terms. Hence, Article 2âs default rules themselves use the fuzzier standards by which the drafters believed business people governed themselvesâe.g., to act reasonably, to perform seasonably, to sell goods that are fit for ordinary purposes or are without objection in the trade, to abide by usages of trade, and so on.\n\nHere is the problem with incorporation of elastic language into the law. Legal rules generally respect the law of the excluded middle that prevails for truth-functional logic. You either have a right or you do not. Business norms, on the other hand, have no law of the excluded middle. What made sense when we wrote the contract might not make sense now. In the cotton industry, for example, the legal rule is merely one of several possible governing norms. Another check on behavior is oneâs commercial reputation, the determinants of which include the willingness to live up to contract commitments yet âto be flexible in work-a-day transactions, and [willing] to renegotiate commitments when circumstances change or adverse events occur.â To have a legal right but, in light of other business and social realities, to choose not to enforce it is to go beyond the law and its truth-functional logic. Indeed, it was not unusual for one cotton merchant to accept good reasons from another not to enforce contract rights: âThere is suggestive evidence that cotton transactors may view themselves as conducting their everyday interactions according to a set of flexible understandings that requires them to make many adjustments, and ignore minor deviations in ways not required by their contractâs written provisions, yet preserves their unfettered right to insist on strict performance of their contract when they think their contracting partner is behaving badly.â But, ironically, when it comes to resolution of disputes by way of contract, âmerchants do not want adjudicators to look to usage to decide cases in any but the narrowest of circumstances. They are consistent with other more generalized studies of transactor preferences and contracting choices which strongly suggest that business transactors have a strong preference for formalistic adjudication.â\n\nIn short, such merchants may want their relationships to be governed primarily by non-legal norms under which the same antecedents could generate different outcomes. Our natural language, with all its elasticity, allows for that flexibility. But they still do not want their contracts to replicate the entirety of a complex business relationship. They want a relatively simple backup set of unambiguous rights to which they can turn formalistically when the relationship breaks down.\n\nThe finite regress of code\n\nThe question becomes: could a smart contract allow these cotton merchants to have their cake and to eat it; that is, to have a formal mechanism that both obeys and does not obey the law of the excluded middle? The answer is: to a point. Natural language can be vague or elastic, predicates in formal logic can be ambiguous or vague, and human beings can perceive an infinite regress in judgment-making. Computer programs can approximate all of these capabilities but, in the end, cannot be built from a foundation that tolerates ambiguity. For digital computers, the regress of judgment is finite. In the smart universe, there is a supernatural Author at the end of the regress, and we know who it is. When we drill down to the most elementary logic gates, somebody (whether human or futuristic conscious machine) needs to have established an archimedean fulcrum of meaning, even if it is a basic as saying that 1 means ânot bothâ and 0 means âbothâ in the Nand operator. In the dumb universe of human judgment-making, what lies at the end of the regress, if there is one, is not so clear.\n\nIn the debates over artificial intelligence, one of the iconic images and most powerful arguments is John Searleâs Chinese Room. Searle meant to refute âstrong AI, specifically the claim that the appropriately programmed computer literally has cognitive states and that the programs thereby explain human cognition.â Searleâs thought experiment imagines him locked in a sealed room, knowing English but not knowing any Chinese. A first batch of Chinese symbols gets fed into the room. Then a second batch of Chinese symbols gets fed into the room along with a set of instructions in English for correlating the second batch with the first batch. Then a third batch of Chinese symbols gets fed into the room, again with a set of English instructions on how (a) to correlate the third batch with the first two and (b) to feed back out of the room certain Chinese symbols (âanswersâ) in response to symbols fed in with the third batch (âquestionsâ). I have simplified the picture of the Chinese Room in Figure 1.\n\nFigure 1.\n\nThen assume that the people feeding in the symbols feed in stories and questions about them in English as well as those same stories and questions encoded in Chinese symbols. Searle hypothesizes that he gets so good at manipulating the Chinese symbols according to the instructions that a person outside the room would believe the Chinese answers were as good as those in English. Searleâs conclusion is that there is a difference in cognition as between his English and Chinese âanswers.â âIn the Chinese case I have everything that artificial intelligence can put into me by way of a program, and I understand nothing; in the English case I understand everything, and there is so far no reason at all to suppose that my understanding has anything to do with computer programs, that is, with computational operations on purely formally specified elements.â\n\nThe fact is that, in the cognition debates, Searleâs image of the Chinese Room is powerful. The objections to it tend to accept it as a fair characterization of a computerâs processor, but then debate whether it is a fair analogy to human cognition. The most coherent objection is called the âsystems reply.â The gist of it is that, even if Searle, locked alone in the room, does not understand the Chinese symbols, a wider system, for example, one that includes the rules, the pencils and paper used to translate, and so on, does understand. For my purposes, I do not care whether a blockchain system or the automobile security/lien system has human-like cognition or subjective consciousness. If we draw the line in the sand at the most elementary logic gates, then indeed smart contracts, even if run with advanced AI, are the legal equivalent of Searleâs Chinese Room, operating to generate legal results without an identifiable subjective viewpoint. If we accept the systems reply, then it means that there is a wider system, somewhere outside the programming of the smart contract itself, giving semantic meaning to the syntax of the code, whether at the level of a higher order language or in the 0s and 1s of the machine code. By the very nature of binary code, that must be so. The systems reply effectively acknowledges that the regress for the computer itself ends at the elementary logic gates, and merely kicks the can farther down the road as to the ultimate âAuthorâ of human subjective cognition.\n\nD. The Infinite Regress of âSituation Senseâ\n\nThis infinite regress of human judgment is sometimes phrased as âthere is no rule for the application of a rule.â In order to apply a rule (or an algorithm or a model) to a particular situation, we have to choose the rule. If you try to determine what circumstances fit within a rule, setting another rule merely leads to another rule to another rule to another rule, all the way down. In short, there is no final answer for selection of the rule; it is an infinite regress. Given that a computerâs âthinkingâ is necessarily a finite regress, at least as long as computers are constructed from elementary logic gates, could a âdumbâ contract ever become wholly smart?\n\nI am still agnostic on the question of how humans came to have the capability even to perceive the infinite regress of judgment. Because we are discussing contracts, I do want to reflect on one way of characterizing judgment, what Karl Llewellyn, the primary drafter of Article 2 of the Uniform Commercial Code, called âsituation sense.â Llewellyn coined the term in his book The Common Law Tradition. His subject was how appellate judges used good judgment to mediate between âthe felt duty to justice which twins with duty to the law.â In other words, how do judges go about applying rules laid down in prior decisions to the facts of the situation at hand? Legal scholars have since puzzled over a passage of seeming metaphysical import that Llewellyn, the great legal realist, quoted with approval:\n\nEvery fact-pattern of common life, so far as the legal order can take it in, carries within itself "
    }
}