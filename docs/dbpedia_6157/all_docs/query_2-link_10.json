{
    "id": "dbpedia_6157_2",
    "rank": 10,
    "data": {
        "url": "https://www.gimp.org/docs/userfaq-old.html",
        "read_more_link": "",
        "language": "en",
        "title": "Frequency Asked Questions (Old)",
        "top_image": "https://www.gimp.org/images/frontpage/wilber-big.png",
        "meta_img": "https://www.gimp.org/images/frontpage/wilber-big.png",
        "images": [
            "https://www.gimp.org/images/wilbericon.svg",
            "https://www.gimp.org/theme/images/pp16.png",
            "https://www.gimp.org/images/wilbericon.svg",
            "https://www.gimp.org/images/wilbericon.svg",
            "https://www.gimp.org/images/creativecommons/by-sa-80x15.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Pat David"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "This FAQ is still a work in progress. Some sections are very outdated, other sections should probably be removed, and some new questions and answers should be added. Please contact us if you can improve it. General Information What is this GIMP? Where do I get it? Why and when …",
        "meta_lang": "en",
        "meta_favicon": "/images/wilber32.png",
        "meta_site_name": "",
        "canonical_link": "https://www.gimp.org/docs/userfaq-old.html",
        "text": "This FAQ is still a work in progress. Some sections are very outdated, other sections should probably be removed, and some new questions and answers should be added. Please contact us if you can improve it.\n\nGeneral Information¶\n\nWhat is this GIMP?¶\n\nThe “GNU Image Manipulation Program” (originally the General Image Manipulation Program) sired by Spencer Kimball & Peter Mattis.\n\nIn their own words, “GIMP is our answer to the current lack of free (or at least reasonably priced) image manipulation software for GNU/Linux and UNIX in general.”\n\nIt is a raster editor, which means that it performs operations directly on the pixels that make up the image, and not a vector editor. Other (proprietary) raster editors include Adobe Photoshop, Jasc Paintshop Pro and the humble Microsoft Paint. An alternative free editor is Krita. Users wanting to edit photographs will certainly want a raster editor like GIMP. Graphic designers and illustrators may prefer a vector editor depending on their tastes.\n\nWhere do I get it?¶\n\nMost (if not all) GNU/Linux distributions will support GIMP through their package management systems and may even come with GIMP preinstalled. You can find the latest version for GNU/Linux, Microsoft Windows and Apple Mac OS X on the download page. Of course, this is free software so the source code is available to, along with instruction on how to compile it.\n\nWhy and when was GIMP changed from “general image manipulation program” to “GNU image manipulation program”?¶\n\nOne day (I believe it was in 1997) RMS visited Berkeley, and Spencer and Peter met with him. They asked if they could change General to GNU, and it was done.\n\nGIMP is a stupid name. Why can’t you change it?¶\n\nGIMP is comfortable with its name and thinks that you should apologise for your rudeness.\n\nIs GIMP a GNOME application?¶\n\nNot really. It doesn’t use the GNOME application framework. The only thing it has in common is GTK+. GIMP can optionally use gnome-vfs, allowing you to load and edit images from remote servers.\n\nIs GTK+ still under the aegis of GIMP? Was it ever?¶\n\nGTK was developed solely for GIMP, initially. Towards the end of the 0.99 development cycle in 1998, GTK was split from being bundled with GIMP to being a separately available library. See ancient history for some interesting tidbits from the GIMP perspective.\n\nWhich version should I use?¶\n\nYou should use the latest stable release. See our downloads page.\n\nIs there a user manual?¶\n\nYes. It is available in HTML form, and in PDF.\n\nWhat about a Windows version?¶\n\nSee the download page.\n\nWhat about a Mac version?¶\n\nSee the download page.\n\nAre there any Easter eggs in GIMP?¶\n\nYes.\n\nIs there a mailing list?¶\n\nSee our list of Mailing Lists.\n\nIs there an IRC channel?¶\n\nSee our list of IRC channels.\n\nWhy does GIMP complain about missing or wrong versions of libraries?¶\n\nProbably because it can’t find them.\n\nFIXME: some of the advice given here is incorrect and even dangerous.\n\nThere are a couple of solutions. The best one, if you have superuser access on your system, or a cooperative system administrator, is to add GIMP’s library directory to the system library configuration. To do this, edit /etc/ld.so.conf to include /usr/local/lib and then type ldconfig and things should work from then on.\n\nIf you can’t do this, add the directory to your LD_LIBRARY_PATH environment variable. Be sure you do this in your shell’s startup scripts as well.\n\nIf you have old versions of the libraries, you will probably need to remove them first, especially if they are in standard system locations such as /usr/lib . Don’t just delete them, though; move them somewhere safe, install the new ones, and try again. Then make sure everything else still works; you may have other programs on your system which require the old versions. The ideal response in such a case is to rebuild all the programs to use the new libraries. Where this isn’t possible, you will just have to experiment with trying them in different locations, or statically linking them to one or more programs.\n\nIs XInput support available?¶\n\nYes.\n\nDoes GIMP support art tablets like the Wacom?¶\n\nFIXME: obsolete advice.\n\nIn the more recent releases of most distros, installing the wacom-tools package should make tablet support “just work”. Make sure that you enable the input devices in GIMP, too.\n\nOtherwise, you have to do a little extra work to compile it in.\n\nSee Intuos on Linux by Terry Mackintosh, or this quick overview from Juergen Schlag:\n\nrun GNU/Linux with a X11 server which supports the Xinput-Section (my old S3-Board running under the XFree-Server works well, but the XSuSE- Server for PERMEDIA2-Boards doesn’t work :-(\n\ninstall the Xinput driver for the Artpad (see the docs). I used a patched driver for the PenPartner\n\nedit the Xinput-Section of your /etc/XF86Config to load the driver when X11 starts (see the man-pages for XF86Config and your X-server)\n\nrecompile the GTK toolkit with the Xinput-support enabled. see the README and INSTALL file for the command switch to do this.\n\nrestart your computer, start X11 and GIMP. if no error message occured your artpad should work well\n\nDoes GIMP have scanner support?¶\n\nYes. It’s available on Windows and uses TWAIN, and on GNU/Linux you even have a choice between XSane and gnome-scan — both can be used as GIMP plug-ins.\n\nFurther information is available at the SANE project.\n\nCan GIMP install its own colormap?¶\n\nYes. In either the system-wide gimprc file or your personal gimprc file, uncomment the line that includes install-colormap.\n\nGIMP complains about MIT-SHM!¶\n\nIf GIMP gives you a message similar to either of these when you try to start it: Xlib: extension “MIT-SHM” missing on display “198.51.29.58:0.0”. or WARNING *: XShmAttach failed! then you need to run it with the —no-xshm option.\n\nThis happens for one of two reasons. Either your X display server does not have the shared memory option, or you are running GIMP on a different system than the one on which it is displaying. In the former case, you may wish to look into different X servers, because shared memory can give you MUCH better performance. In the latter case, you will just have to live with it, since different systems can’t generally share the same memory space.\n\nWhat does “wire_read: unexpected EOF” mean?¶\n\nThis error message should say something like “the plug-in (or the main GIMP app) I was talking to has exited before returning any results, so I assume that it has crashed.”\n\nDo I need an X server to run in batch mode?¶\n\nYes, you have to have some form of X server (unless you’re running Windows, of course). It needs an X server for image processing, and for font manipulation. However, if you wish to run in batch mode, you can run with a special, frame-buffer-less X server called Xvfb, which doesn’t require a graphics card or mess with your screen:\n\nXvfb :1 -screen 0 10x10x8 -pixdepths 1 & gimp —display :1.0 —no-interface —batch “commands” … &\n\nThe first command starts the special X server; the second is an example of how to invoke GIMP in batch mode. When you are done using GIMP this way for a while, kill off Xvfb so it doesn’t waste system resources. If you expect to use GIMP this way a lot, you might want to leave Xvfb running for better response time.\n\nYou should check the man page for Xvfb(1) for other options, such as whether to use shared memory.\n\nWhat kind of system do I need to run GIMP?¶\n\nAny system capable of running Gnome 2, KDE 3.2, Windows 2000, Mac OS X and later versions should be able to run GIMP. GIMP’s biggest appetite is for memory and how much you will need will depend on the how many images you are working with, their resolution, size, the number of layers you use and so on. As a general rule, more is better, but 128MB should be enough to be getting started with.\n\nIs there a bug list somewhere?¶\n\nSee Bugs for a list of bugs and how to report them.\n\nDoes/could GIMP use high-level graphics operations for its operations?¶\n\nNot yet. GIMP does use MMX and SSE low-level instructions. The guess is that any gain from higher-level instructions would end up being swamped by having to push pixels back and forth to the graphics card, but we would love to be proved wrong :) The GEGL project is a more logical place for this kind of thing.\n\nWhat does the future hold?¶\n\nVersion 2.8 may bring a combined Transform tool (Scale, Rotate, Shear, Flip and Perspective), more use of Cairo for beautiful antialiased graphics and more usability improvements. We will also make GIMP use more of GEGL, namely for projection (everything you see in a visible stack of layers). This will be another step to version 3.0, which will bring long requested features like support for 16+ bits per channel and adjustment layers, to name a few.\n\nUsing GIMP¶\n\nHow can I draw a straight line with GIMP?¶\n\nSee Drawing a Straight Line in the GIMP user manual or see our nice tutorial.\n\nHow can I draw a circle with GIMP?¶\n\nThe easiest way is to create a new selection with Ellipse Select tool and stroke it (Edit → Stroke Selection…). We welcome patches that add tools to draw geometric primitives on canvas.\n\nHow can I create an outline around text?¶\n\nPlace some text somewhere. Then click “Create path from text” in the “Text tool option” window. Then use “Edit” → “Stroke path” and select the appropriate options in the following dialog. Please also see the Paths section in the user manual.\n\nWhat are layers?¶\n\nThe best analogy is to the way cartoons used to be animated. Each component of a scene would be painted on a transparent film, and then each film would be stacked or layered over the other to produce the complete composition. In this way, you could easily animate a person walking because his legs could be animated independantly of his body, for example. Similarly, complex images can be broken down to layers within GIMP and each layer can be processed independentlly of every other. See the Layers section in the manual for more information.\n\nHow do I save a selected sub-image to a file?¶\n\nUse “Edit → Paste As → New Image” menu command or press Ctrl-Shift-V key combination, then save newly created image.\n\nThe script-fu-selection-to image can also be used to cut a selection out of an image and create a new image with it.\n\nHow do I merge an image from a file to the current image?¶\n\nUse “File → Open As Layers” menu command or just drag the file to a window and drop it there. The file will be added as a new layer on top of the layers stack.\n\nHow do I get small fonts to look as nice as large ones?¶\n\nMake sure you have “Hinting” and “Antialiasing” options enabled in Text tool options dialog.\n\nHow do I bind keys to menus for shortcuts?¶\n\nMake sure that “Use dynamic keyboard shortcuts” option in “Interface” tab of Preferences dialog is enabled, then go to the menu selection you are interested in. Keeping it selected (hold the mouse’s menu selection down if necessary), press the key sequence you wish to assign to the menu. It will appear on the right of the menu. The new binding will be saved and used in future GIMP sessions. You can also use “Keyboard Shortcuts” dialog (“Edit → Keyboard Shortcuts”) to assign keys to menus and functions.\n\nHow do I select a layer “sitting” under the mouse cursor? I have more than 400 layers in my image and I cannot remember each layers name.¶\n\nPlease turn on “move-tool-changes-active” in the preferences dialog. Then (after you did a restart of GIMP) hold down the shift-key while you drag or click a layer in the image. The layer will now be selected (active).\n\nI hate switching between windows in GIMP. Isn’t there an easier way?¶\n\nYou are probably using Windows or some GNU/Linux window manager that does not support the “Utility window” hint. Right now you can use list of currently opened images in “Windows” menu.\n\nIf you are using GNU/Linux or some free UNIX-like system and not willing to use GNOME and Metacity (its window manager) which does support “Utility window” hint, alternatively you can use a window manager like Fluxbox where you can apply this “always on top” property to the toolbox and layers dialogue. Window managers like Fluxbox also allow you to focus, or even raise, a window whenever you move the mouse over it (usually you have to click on a window before it will focus). Fluxbox allows you to stack windows together and the tab between them, much like Firefox can tab between web pages. Combined with focus-follows-mouse, this may increase one’s workflow considerably. Fluxbox also requires very few resources meaning more memory for your images. Finally, don’t forget about keyboard shortcuts and modifiers. Learning these means you rarely have to visit the toolbox.\n\nIn the mean time, during 2.7.x development cycle we will do our best to switch to tabbed user interface with docked palettes.\n\nIs there a macro recording interface?¶\n\nNot at this time. With GIMP based on GEGL, so that all changes are non-destructive, it will be much easier to implement this feature by just remembering all nodes in given range and reapplying them to other images. This is something that can be part of a future release of GIMP like 3.0.\n\nHow do I configure my X server to do global gamma correction?¶\n\nSome servers have no facility for this; you may be able to adjust your monitor to correct somewhat. Later versions of XFree86 allow these server options:\n\n-gamma f set gamma value (0.1 < f < 10.0) Default: 1.0 -rgamma f set gamma value for red phase -ggamma f set gamma value for green phase -bgamma f set gamma value for blue phase\n\nHow do I fill with transparent?¶\n\nIf your image doesn’t have an alpha channel, add one with Layers → Add Alpha Channel. Select the area you want to clear (if not the whole image). To change everything of a particular color transparent, pick Select → By Color… and click on the color in the image you want to replace. Then select Edit → Clear. That’s it.\n\nAny dithering, blurring, or related effects against the color you replace will be against the original color. This usually requires you to do some form of cleanup of the edge pixels. In cases likely to result in this, change the color to transparent as early as reasonably possible to preclude extra “cleanup” work.\n\nHow do I draw in a different color?¶\n\nAt the bottom of the toolbar there is a box with two smaller boxes and an arrow. The uppermost box displays the current foreground color; the lowermost box displays the current background color. You can single-click on the arrow to switch these two. You can also double-click on either of the color boxes (or single-click if that box is already selected) to pop up a color selection tool, with which you can elect any color you like for that box. That color then becomes the new foreground or background color. Subsequent drawing operations (including text and color fill) will now use these colors.\n\nHow can I export my path to SVG?¶\n\nOpen the dialog “paths”, right click the path you want to export, click “Export path…” and save it as “yourpath.svg”.\n\nHow do I do something really simple like blur?¶\n\nThere are two methods, one for the current selection or current layer and one tool to blur using mouse. The tool looks like a waterdrop. Click it (or use shortcut V) and hold down the left mouse button while moving the mouse cursor over the desired area. Method two uses the blur filter (Filters → Blur filters → Blur) and as said it applies to the current selection and/or layer.\n\nI’ve tried to use GIMP but I just don’t get it - what am I missing (and I know nothing about images so dont start about alpha channels and layers, etc).¶\n\nThere is plenty of documentation. See http://docs.gimp.org/en/ If you need a complete course about photoediting, image manipulation etc. then a book would be the best to start with.\n\nExample books:\n\n“Beginning GIMP: From Novice to Professional” - Akkana Peck\n\n“GIMP Pocket Reference” - Sven Neumann\n\n“Gimp: The Official Handbook” - Karin Kylander, Olof S. Kylander\n\n“GIMP Visual Quickstart Guide” - Phyllis Davis\n\n“Guerrilla Guide to Great Graphics With the Gimp” - David D. Busch\n\nand many many more! Check your local books-dealer!\n\nHow can I paint easily an (OutLined) rectangle using GIMP?¶\n\nUse “Rectangle Select” tool (see http://docs.gimp.org/en/gimp-tools-selection.html) for making a selection in the form of a rectangle. Then use “Edit” → “Stroke Selection” (see http://docs.gimp.org/en/gimp-selection-stroke.html). The “Rectangle Select” tool has the shortcut “R”.\n\nHow do I edit properties of existing guides? How do I move existing guides?¶\n\nUse the Move tool (Toolbox) or press M, then click and drag a guide. If the dragging moves the layer you have to switch modes (hold the shift-key while dragging or click “Pick a layer or guide” in the Move Tool options window). See “Grids and Guides” section of the online manual at http://docs.gimp.org/\n\nHow do I select the layer currently shown under the mouse cursor? Is there a shortcut?¶\n\nThere isn’t a context menu or shortcut. But you can move visible layers (not overlapped by another one) with the move tool (and holding down the shift key). Use the Move tool (Toolbox) or press M, then click and move a layer. If the dragging moves the currently selected layer you have to switch modes (hold the shift-key while dragging or click “Pick a layer or guide” in the Move Tool options window). This doesn’t select the layer, it only moves it. See “Move tool” section of the online manual at http://docs.gimp.org/\n\nHow can you wrap text using the Font tool? There are alignment buttons (including justified) but they have little effect since I can’t work out how to make the text wrap.¶\n\nText cannot be wrapped automatically. But when you type some text in the text-editing dialog you can just hit enter for a new line. In that case the alignment buttons would apply.\n\nWhy do I have to make my rectangular selection exactly right the first time? Why can’t I move and resize a rectangular selection using handles?¶\n\nYou can, at least in version 2.3.10 of GIMP. (notice the small arrows at each edge of the rectangular selection.)\n\nI recently saw a project that specified files were to be saved in Photoshop “Save for Web → High (15K to 30K Optimized)” format. Is there an equivalent in GIMP?¶\n\nYes, there is a plug-in for GIMP which is called “Save for Web” and created by Aurimas Juška as a Google Summer of Code SOC project. It allows visual adjustment of various image parameters such as quality, number of colors, dimensions, etc to reach optimal file size.”, see http://registry.gimp.org/node/33.\n\nHow do I get GIMP to be by default image tool i.e. I installed another program & it is now associated to auto-opening them.¶\n\nIt depends on what operating system you are using.\n\nWindows: Right-click on an image in explorer and select “Open with…” in the context menu. Select GIMP and mark “Use this program as standard for openening this filetype”. Now the filetype of that image should be properly associated with GIMP.\n\nGNU/Linux (KDE): Right-click on an image in konqueror, select “Open with…” → “Other” in the context menu, select GIMP and check the box “Associate filetype with this program”.\n\nFor all other operating systems check the manual of the os.\n\nCommon Feature Requests¶\n\nWhen can we see layer groups?¶\n\nGIMP 2.8 will have layer groups.\n\nWhen can we see 16-bit per channel support (or better)?¶\n\nFor some industries, especially photography, 24-bit colour depths (8 bits per channel) are a real barrier to entry. Once again, it’s GEGL to the rescue. Work on integrating GEGL into GIMP began after 2.4 was released, and will span across several stable releases. This work will be completed in GIMP 3.0, which will have full support for high bit depths. If you need such support now and can’t wait, cinepaint and Krita support 16 bits per channel now.\n\nThe current development branch, GIMP 2.9.x, supports higher bit depths than the 2.8 and older 8-Bit-per-component…\n\nWhen can we see native CMYK support?¶\n\nIt is clear from the product vision that GIMP eventually needs to support CMYK, but it is impossible to say when someone finds the free time and motivation to add it. In the meantime it is possible to work with CMYK to some extent using plug-ins, such as the Separate+ plug-in.\n\nWhen will an MDI/nested windows be implemented?¶\n\nGIMP will not get an MDI, but GIMP 2.8 will feature a single-window mode.\n\nHow should I make feature requests?¶\n\nThe first thing to do is see if your request has already been made. It probably has; we get a lot of feature requests. Check the user and developer mailing-list archives and search bugzilla. If you find a discussion that seems relevant, feel free to add your two penneth.\n\nIf you are making a new feature request, please make it to the gimp-user or -developer mailing list first and not bugzilla. Think about what it is you are trying to achieve with your request and not about what the underlying procedure is. We get a lot of requests from Photoshop users who simply ask for their favourite Photoshop tool without saying what it does and why it is useful to them. Once we understand what the tool is for, we may find that we can do it better, or that the way it works in Photoshop isn’t suitable for GIMP’s interface, or that GIMP already supports the feature, but in a different way.\n\nOnce the feature has been discussed on the mailing list, a bug report should be opened so that record can be kept on its progress.\n\nSven Neumann has this to say on the matter of a “polygon select” feature requests:\n\nNo tool should be written without doing a full specification beforehand and discussing this spec on the mailing-list(s). Bugzilla is the wrong place for such a discussion. If you want to do something to help, please make a list of usage scenarios that involve creating polygonal selections. Then analyze how these scenarios can be performed using the existing tools and identify problems.\n\nWith the list of scenarios and problems, you are then able to analyze and to compare different possible solutions. These solutions might involve changing existing tools or adding new one(s). As soon as we have identified the best solution, it can be fully specified. Only then can someone can start to implement it.\n\nPlug-Ins¶\n\nWhat are plug-ins?¶\n\nPlug-ins are external modules that actually do the nifty graphics transformations. There is a plug-in registry at http://registry.gimp.org/ with the latest plug-ins, maintained by Ingo Lütkebohle. [Special thanks to Adam Moss for the original registry!]\n\nHow do I add new plug-ins?¶\n\nFirst, copy the plug-in[s] to your plug-in directory (typically /usr/local/lib/gimp/$VERSION/plug-ins/).\n\nAfter copying the plug-in to its proper directory, just run GIMP. It should automatically find new plug-ins.\n\nHow do I build new plug-ins?¶\n\nYou’ll need a copy of the source directories. Build GIMP. Place the new plug-in in the plug-ins directory. The docs with the new plug-in hopefully identify any special libraries it needs. Look for a plug-in with similar libraries (if all else fails, look at xpm and whirlpinch).\n\nWith newer versions, if the plug-in is contained in a single source file, you should just have to run gimptool in the plug-in’s directory :\n\ngimptool —build plugin.c\n\nFor older versions, there are several methods. The first two walk you through a number of steps manually; these are the most thorough, but also require more work on your part. The last ones are scripts of one sort or another, and are easier on your part — if they work with your system. Go ahead and try - you can always fall back on the first methods.\n\nThe best way to procede is to edit the Makefile. Pick a similar plug-in (such as whirlpinch). For the SRC and OBJ lines, just add entries similar to the others, but with the new plug-in’s name. Now, find all the groups of lines with the other plug-in’s name in them, duplicate them, and change the old name to the new name. The one exception is the huge set of lines that have a lot of paths that end in .h - do not bother with these. Now, just type\n\nmake\n\nand it should build. Install it wherever your other plug-ins are installed.\n\nA second choice for those who don’t want to mess with the main Makefile is to build a file to create just the new plug-in. Start the same way - pick a similar plug-in. Now remove the binary and object files for the one you just picked. For instance, if you selected the whirlpinch plug-in, you will see the following files:\n\nwhirlpinch whirlpinch.c whirlpinch.o\n\nIn this case, you would remove the first and last files, leaving the whirlpinch.c file. Now type\n\nmake\n\nto rebuild the old plug-in.\n\nCopy the output (cut and paste it!) into a file. Edit the file and change all occurances of “whirlpinch” (or whatever) to the name of the new plug-in. Execute the file you just edited. For instance, if the file is make_plug-in, just type\n\nmake_plugin\n\nand it should work. The copy the plug-in to wherever the others are installed on your system.\n\nA Makefile\n\nFirst, load Makefile-pi provided by Ciccio C. Simon . Change all occurances of the word sharpen in Makefile-pi to the name of the new plug-in. Then type\n\nmake -f Makefile-pi\n\nand watch it (hopefully) work.\n\nIf it doesn’t work, try the next method.\n\nA compile script\n\nFirst, load the compile-pi script provided by Jeremy Dinsel . Change the permissions on compile-pi as follows:\n\nchmod ugo+rx compile-pi\n\nand type\n\ncompile-pi help\n\nfor instructions. Follow those instructionms. If this one also fails, go back to the earlier, manual methods; you have too picky a configuration for the simple methods to work.\n\nIf you need more help, ask your system administrator or a handy programmer, or get a good book on make (such as O’Reilly’s). You may want to join the GIMP developer’s list as well (see the Developer FAQ).\n\nIs there a plug-in for … ?¶\n\nThe plug-in registry referenced above is the place to check.\n\nWhy did some plug-ins disappear for 0.99.19?¶\n\nSome of the plug-ins have proven unstable. These have been moved into a separate download, which should be available wherever you got the GIMP, in the file gimp-plugins-unstable-VERSION.tar.gz or gimp-plugins-unstable-VERSION.tar.bz2 .\n\nSince this list may change frequently, the unstable plug-ins are no longer listed here. Script-Fu\n\nWhat is Script-Fu?¶\n\nIn the words of S&P:\n\nScript-Fu is the first GIMP scripting extension. Extensions are separate processes that communicate with the GIMP in the same way that plug-ins do. The distinction is that extensions don’t require an active image to operate on, instead extending GIMP’s functionality. GIMP internals for version 1.0 have been completely overhauled from version 0.54. In particular, the plug-in API has been made far more general with the advent of the procedural database (PDB). The PDB allows GIMP and its plug-ins to register procedures which can then be called from anywhere: internally, from extensions, and from plug-ins. There are already over 200 internal GIMP procedures, and more being created all the time. Because all of these procedures can be easily invoked from extensions, the logical next step was to create a scripting facility; thus, Script-Fu was born.\n\nWhere can I learn about Script-Fu?¶\n\nAs with plug-ins, web pages, COBOL, or anything else, one of the best things you can do is look at other peoples’ code, and play with it. But it helps a lot if you know Scheme.\n\n= S&P’s Script-Fu pages at http://www.xcf.berkeley.edu/~gimp/script-fu/script-fu.html = Mike Terry’s Black Belt School of Script-Fu at http://manual.gimp.org/manual/GUM/write_scriptfu3.html\n\nHow do I call one script-fu script from another?¶\n\nThe trick to calling script-fu-scripts from another script is to just reference the main define for the script and not to try to use the pdb call. All the scripts in script-fu share a common name space; you call other scripts just like a regular function / define / whatever you call those those things in_scheme.\n\nIe, to call script-fu-predator in a script, just use\n\n(script-fu-predator img drawable 2 TRUE 3 TRUE TRUE)\n\nFor examples, see\n\nhttp://adrian.gimp.org/scripts/test.scm .\n\nHow do I call a plug-in from script-fu?¶\n\nThe following examples assume the plug-in name is “plug_in_randomize_hurl”, and the plug-in has four parameters specific to it, the first two of which are floats, and the next two ints.\n\nFrom the script-fu console, call a plug-in like this:\n\nThe first parameter should always be a “1”. The next two are the image number and drawable. Anything following these numbers will be plug-in parameters, which depend on the plug-in.\n\nInside an actual script, call a plug-in like this:\n\nHow do I execute script-fu from batch mode?¶\n\nInvoke the script as non-interactive and add a pair of escaped quotes around each string just like you do in (script-fu-register). You DO NOT need to replace ‘-‘ with ‘_’ in any names or registrations.\n\nExample script:\n\nFor a detailed, step by step explanation, check out Adrian’s GIMP Batch Mode how-to at http://adrian.gimp.org/batch/ .\n\nWhat does “procedural-database-error” in script-fu mean?¶\n\nNormally it means that the script is trying to use a particular font that isn’t available on your system - it’s either not installed or not in your X server’s FONTPATH. The base script-fu package makes extensive use of the freefont package, and at least one font (AlfredDrake) from the sharefont package.\n\nWhat is Net-Fu? Where is it?¶\n\nNet-fu is a web-based interface to a script-fu server. The work is done at a remote site. To see Net-fu, point your web browser at http://download.gimp.org/ or one of the mirror sites, and then go to “pub/gimp/net-fu/”. Any web browser can read net-fu pages; the browser must be Java-enabled to actually run Script-fu. Fonts\n\nWhere can I get the fonts I’m missing?¶\n\nThe freefonts and sharefonts packages are both available from ftp://ftp.funet.fi/pub/Linux/mirrors/metalab/X11/fonts/ or other metalab mirrors. If you get the sharefonts package, be sure and read the various licensing agreements, and abide by them.\n\nHow can I change the GIMP font?¶\n\nYou need to copy the gtkrc file that comes with the GIMP source (in the top level directory) into $HOME/.gimp/gtkrc . As of 0.99.10, this should be recognized. You then go in and edit the default font style, the one that looks like this:\n\nI’m sure ther’s a lot of clever stuff that can be done here, and I’ll try to track it down soon, but in the meantime, just change that “100” to something larger, like “120” or “140”. (The number is points= 10, so 100 is a 10 point font).\n\nObviously, you could stick in any font you have available.\n\nWhy don’t the Far Eastern fonts work?¶\n\nThese are 16 bit fonts, with thouousands and thouousands of characters. And the characters are more complex, which means (usually) more bits per character, which means more memory and more processing time.\n\nThis includes fonts such as kana, kanji, song ti, mincho and gothic. (If you look carefully at the fully qualified font name for gothic via xfontsel, you’ll see clues. It’s a daewoo font. The gothic name is misleading to western minds, but no doubt means something to its author[s].)\n\nCheck one of these out in a program that shows a font as pages (such as xfd).. You can keep hitting next page to see a new page of characters, almost forever.\n\nWhat about TrueType fonts?¶\n\nIf neither your X server nor your X font server supports you can try one of the TruType font servers: xfstt (http://sunsite.unc.edu/pub/Linux/X11/fonts/) or xfsft (http://www.dcs.ed.ac.uk/home/jec/programs/xfsft/ .\n\nxfstt supposedly has limitations on the font size. File Formats\n\nWhat is GIMP’s native graphics file format?¶\n\nXCF is GIMP’s “native” format. This will preserve all information about an image, including the layers.\n\nWhat other graphics file types are supported?¶\n\nAll the common formats, and many more as well, including GIF, TIFF, JPEG, XBM, XPM, PostScript, and BMP. Plug-ins are used to load and save files so adding new file types is very simple, compared to other graphics programs.\n\nAs of July 1, 1998, the list of supported types included BMP, CEL, FITS, FLI, GBR, Gicon, GIF, GIcon, HRZ, JPEG, PAT, PCX, PIX, PNG, PNM, PostScript, SGI, Sun Raster, TGA, TIFF, XPM, XWD and XCF. Bzipped, Gzipped and Xdelta’d files are understood, and URL support is provided.\n\nOf course, plug-ins for other types may be available at the plug-in registry .\n\nWhy can’t I save my image as a GIF (or whatever)?\n\nThe two most likely problems are related to image type and layers. For instance, your image type must be “Indexed” for GIF, but “RGB” for TIFF. Try a different image type (look under the “Image” menu). If you have more than 1 layer in your image, you probably need to merge the visible layers, and/or “flatten” the image. Both operations are available under the “Layers” menu or from the “Layers” dialog. Flattening will destroy any background transparency.\n\nIs there any way to keep the layers when I save?¶\n\nYes; GIMP has a file format just for this - the XCF format.\n\nWhy can’t I open or export JPEG / JPG files?¶\n\nWhy can’t I open or export GIF files?\n\nWhy can’t I open or export PNG files?\n\nWhy can’t I open or export XPM files?\n\nWhy can’t I open or export TIFF / TIF files?\n\nWhy can’t I open or export PSD files?\n\nWhy can’t I open or export SOME_FORMAT files?\n\nThere are several possibilities.\n\nGIMP comes with full support for a few types built in. If the type you want doesn’t appear in file type format of the Open and Export dialogs, you need to check the Plug-in registry to see whether you need to download an optional plug-in.\n\nSome of the file types, such as JPEG and TIFF, require extra libraries (described elsewhere). Make sure you have the correct versions of these on your system.\n\nTroubleshooting Unix Platforms¶\n\nWhy can’t I get JPEG to work on my Digital Alpha/UNIX (4.0d) box?¶\n\nEven the jpeg libraries at the GIMP web site may not work for all versions. If their jpeg-shared-6.a.tar.gz package doesn’t work for you, try:\n\nftp://ftp.uu.net/graphics/jpeg/jpegsrc.v6b.tar.gz\n\nWhy won’t GIMP compile on 64-bit or IRIX (SGI) machines?¶\n\nIf you are using a 64-bit OS, you need to add the -o32 option for the compiler, or use gcc.\n\nWith the SGI compiler, you may also need to play with optimization. Some modules may have exhibit problems unless compiled with -O1 or even -O0.\n\nScript-Fu won’t compile on IRIX (SGI)¶\n\nScript-Fu requires the POSIX-compliant regex functions, which SGI only supports with IRIX 6.2 and later versions. The GNU version of regex should work just fine, though, and is available at:\n\nhttp://wuarchive.wustl.edu/systems/gnu/regex-0.12.tar.gz\n\nWhy does GIMP complain about X Input Methods under Solaris?¶\n\nGIMP is interacting in such a way with your system that it thinks you have XIM extensions when you don’t. Run the configure script again, with the --disable-xim option, and recompile.\n\nYou can also try compiling with --disable-shared.\n\nOr you can install a version of X11R6. 8^)\n\nHow do I add fonts with Solaris?¶\n\nIf you just want to use freefonts or sharefonts, you can copy these files into the appropriate directory (such as /usr/openwin/lib/fonts/freefonts/ or /usr/openwin/lib/fonts/sharefonts/), or merge them with the appropriate fonts.dir and fonts.scale files if you mixed in freefonts and sharefonts with existing fonts:\n\nfreefonts fonts.dir\n\nfreefonts fonts.scale\n\nsharefonts fonts.dir\n\nsharefonts fonts.scale\n\nOr just try using fontadmin instead of mkfontdir .\n\nI’ve never run into a Solaris system missing this, but according to Neil Corlett:\n\nThe ‘fontadmin’ tool is a openwin demo program and sometimes does not exist. To properly add fonts the finagled directory requires fonts.dir, fonts.scale files to exist. mkfontdir does the first of these OK. For the second I built groff and downloaded type1inst-0.6.1 from an X contrib archive. type1inst (which needs groff) will build the fonts.scale file from the pfb files automatically.\n\nSolaris 2.6 is supposed to include better font editor and admin tools.\n\nHow do I add fonts with SunOS?¶\n\nSunOS ships with an X11R4 server, which does not handle either scaleable fonts or communications with the X font server. If you want to use the freefonts (or any scalable fonts) on SunOS, you need to install your own, newer X server, preferably X11R6.4 (which will be much faster than the server shipped with SunOS).\n\nIf you do this, you will no longer have PostScript capability directly in your X server; you will need to use ghostscript. You may well want to keep both servers around, and use each when you need its features.\n\nOf course, you could always try to find a PS version of the font you need and make a bitmap for the size you need and add that to the X11R4 server’s font path, but if you need more than one or two font/size combinations over all the time you use GIMP, this is an obnoxious solution.\n\nWhat is the gimp.wmconfig file?¶\n\nIt’s a Red Hat RPM-related file, related to their desktop and window manager.\n\nWhy does my RedHat system get register_? errors when I run GIMP?¶\n\nThis is due to incompaitble RPMS. If (for example) gtk was compiled with egcs, GIMP must be compiled with egcs. There is no easy way to tell what is compiled with what, so getting both GIMP and gtk off a GIMP mirror would be a good idea.\n\nAnother possibility is for this error (far less common) is that there is an old library compiled with the other hanging around somewhere on the system. Remove old copies of libgimp.\n\nWhy don’t GIF and JPEG work on Slackware Linux?¶\n\nYou need to manually get libgif and libjpeg and compile and install them on your system. They will install by default in /usr/local/lib, so once they’re installed, you have to make sure that LD_LIBRARY_PATH=/usr/local/lib or put /usr/local/lib in your ld.so configuration file. In addition, you also have to remove libgif. and libjpeg. from your /usr/lib directory, as these will be found first (and even if you finagle ld.so to find the other libs first, they’re still broken so remove them anyway).\n\nI get make errors on {Solaris, HP/UX, whatever}.¶\n\nYou are probably not using the GNU make. Most, if not all, non-GNU makes will fail on the GIMP makefiles. Get the GNU make package.\n\nWhy do I see weird things when I use GIMP with AcceleratedX?¶\n\nIt’s a bug in AcceleratedX with shared memory. Turn off shared memory when you start GIMP (—no-xshm) or pick up the patch to AcceleratedX’s X server from ftp://ftp.xinside.com/pub/update/ .\n\nAt least one person has found this bug (or another one with the same symptoms) to still be present in 4.1 .\n\nWhat’s this beavis.jpg image used in several scripts?¶\n\n(/usr/local/share/gimp/scripts/beavis.jpg is the B/W image in question.)\n\nThe image (of a kitten playing with Gumby) is used as “sorta random, sorta not” data to generate (for example) the crystal bands, or other texture maps. There are other ways to produce this data as well, but the author stuck with this one, found in a tutorial somewhere.\n\nWhat lucky human does this adorable cat own?¶\n\nOne of the original GIMP authors, Spencer Kimball or Peter Mattis, we forgot which."
    }
}