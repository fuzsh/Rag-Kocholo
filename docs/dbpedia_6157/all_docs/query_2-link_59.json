{
    "id": "dbpedia_6157_2",
    "rank": 59,
    "data": {
        "url": "https://filmgimp.sourceforge.net/user/history.filmgimp.html",
        "read_more_link": "",
        "language": "en",
        "title": "The History of Film Gimp",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://filmgimp.sourceforge.net/logo/gimp.logo.gif",
            "http://sourceforge.net/sflogo.php?group_id=57007&type=4",
            "https://filmgimp.sourceforge.net/pix/logo.linuxfund.125x37.png",
            "https://filmgimp.sourceforge.net/pix/gimp_nicky.t.png",
            "https://filmgimp.sourceforge.net/pix/gimp_visa.t.png",
            "https://filmgimp.sourceforge.net/pix/Daphne.jpg",
            "https://filmgimp.sourceforge.net/pix/scooby.group.jpg",
            "https://filmgimp.sourceforge.net/pix/shaggy.scooby.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Home Press Mailing List Documentation Screenshots People SourceForge Downloads\n\nThe History of the Development of Film Gimp\n\nBefore Film Gimp\n\nFor a class project in 1995, University of California Berkeley students Spencer Kimball and Peter Mattis created Gimp (GNU Image Manipulation Program), a image retouching program. The first release (0.54) used Motif, but a new UI library called the GIMP Toolkit or GTK+ was created as the foundation of the next release (0.99) in 1997. Kimball and Mattis graduated and moved on to other projects. Other developers continue to develop the Gimp project to this day.\n\nFilm Gimp Genesis\n\nIn 1998 work began on a motion picture retouching tool based on Gimp 1.0.4. This variant was kept in a separate branch of CVS (Concurrent Versions System) named HOLLYWOOD. This experimental Gimp was referred to as Hollywood Gimp or Film Gimp.\n\nFilm Gimp development was sponsored by Hollywood motion picture software maker Silicon Grail (now part of Apple) and Los Angeles film and television post-production studio Rhythm & Hues. Each company gave a Gimp programmer a salary and a desk for a year to enhance Gimp. The team was Calvin Williamson at Rhythm & Hues, and Ray Lehtiniemi at Silicon Grail. Later, Gimp maintainer Manish \"Yosh\" Singh worked at Silicon Grail. Calvin Williamson now works on gegl, what is expected to eventually become Gimp 2.0. Yosh Singh continues to be a Gimp maintainer. Ray Lehtiniemi works for a small energy management company doing embedded ARM linux and OpenBSD firewall/VPN programming.\n\nSilicon Grail founder Ray Feeny explains why they tried supporting open source: \"We had done some other open source projects, such as film recorder drivers, and saw enhancing Gimp as an opportunity to do something with the open source community\". After the Film Gimp project, Silicon Grail switched to development of their proprietary compositor RAYZ. The RAYZ software was discontinued when Silicon Grail was acquired by Apple.\n\nSilicon Grail was working with Gimp Script-Fu (a Scheme interpreter) to create a series of Film Gimp commands that could be saved in their proprietary compositor Chalice. Silicon Grail RAYZ product manager Craig Zerouni said what was really needed was a true procedural language in a paint program, something more like the language in Renderman. \"Film Gimp was a useful thing for us to do\", says Zerouni. \"We learned a lot about what paint should be\". Zerouni adds, \"We did a little work integrating Gimp into our compositor Chalice as a plug-in. But in the end we decided a non-procedural paint program didn't fit well into a procedural program like Chalice\".\n\nSilicon Grail expected the motion picture enhancements it funded to be incorporated into mainstream Gimp -- not a separate experimental branch. Silicon Grail also wanted Gimp cross-platform support for all popular operating systems, not just Linux. The Gimp committee, according to Singh, viewed Film Gimp as a prototype — \"the one you throw away\". Eventually, Singh and the Gimp committee unanimously voted against incorporating the motion picture enhancements into Gimp. They felt the code wasn't mature enough to release generally, that it should be designed into Gimp 2.0. The code was orphaned. Silicon Grail dropped Gimp sponsorship.\n\nFilm Gimp at Rhythm & Hues\n\nFilm Gimp at work on Little Nicky Film Gimp and a VISA commerial\n\nAfter Silicon Grail dropped out, Rhythm & Hues continued alone. Rhythm & Hues supports Film Gimp development and uses it in its \"talking animal\" motion picture production pipeline.\n\n\"We use Film Gimp on all talking animal jobs\", says Rhythm & Hues programmer Caroline Dahllöf. At Rhythm & Hues Film Gimp has been used in Harry Potter, Cats & Dogs, Dr. Dolittle 2, Little Nicky, Grinch, Sixth Day, Stuart Little, and Planet of the Apes. Rhythm & Hues is also used for commercials, such as the familiar Coca-Cola \"cola bear\" commercial. \"Our big thing is talking animals\", says Dahllöf. \"We'll create those in 3D because we like the look much better than 2D morphing. We'll make a 3D model and track it to the plate, matching the movement of the live animal with CG animal head. Then the lighting department projects the frame on to 3D model. The 2D department fixes missing background parts as the animal talks\". Stretching has to be fixed with textures. The mouth interior is all CG. Some projects, such as the Coke commercial, are all CG. That's a different technique than making live action animals talk. As is typical with production studios, Rhythm & Hues uses not just one tool but a pipeline of tools for 3D animation and live action special effects.\n\nFilm Gimp replaced an internally developed Rhythm & Hues paint tool called Inc. \"We like to use Film Gimp to dust-bust\", says Dahllöf. \"There might be dust or a piece of hair on the plate either from scanning or from the negative. Normally one will clone/merge from the previous frame or from the same frame to remove the dust\". Film Gimp is also used for rig and wire removal, for example on Grinch. Lighters may use Film Gimp to edit fur control files. \"These control files are used by our internal fur program, Fur. Lighters also use gimp to paint textures and make paint fixes to frames\", says Dahllöf.\n\n\"Gimp didn't support any sequence work, and is important for 2D artist\", says Dahllöf. \"A lot of their work is cloning from one frame to the next in a sequence. So, we added a frame manager\". Rhythm & Hues uses its own proprietary RLL file format. \"A major feature of Film Gimp is 16-bit per channel color and it is compatible with our file format. We do not get any color loss when using Film Gimp, that we can get with other 16-bit paint packages\". Film Gimp tasks include dusting and touching up frames, texture painting, painting mattes, painting maps, and rig and wire removal\n\nScooby-Doo, the computer-generated dog in the Warner Brothers film of the same name, is the latest picture to use Film Gimp. Starring Sarah Michelle Gellar from the popular TV show, Buffy the Vampire Slayer, live footage for Scooby-Doo was shot in Australia with the Scooby-Doo character added later electronically. Scooby-Doo was released in theaters June 14th, 2002. Animators at Los Angeles post-production studio Rhythm & Hues used Maya, Houdini, Film Gimp, and proprietary Linux-based tools. \"We utilized about a hundred Linux desktops creating Scooby-Doo\", says Technology VP Mark Brown. Scooby-Doo was in production at the time I visited the Rhythm & Hues studio for my article in the March issue of Linux Journal, \"Film Gimp at Rhythm & Hues\".\n\nFilm Gimp was used in the movie Scooby-Doo, Warner Brothers Pictures\n\nBoth a developer and user of Film Gimp, Rhythm & Hues keeps a few Windows and Mac OS X machines mainly for compatibility with Adobe Photoshop. Some Linux Journal readers asked why Photoshop is being used rather than just Gimp. Dahllöf explains, \"Photoshop handles more layers with big images better\". Matte painting artists at Rhythm & Hues create large backgrounds with perhaps forty layers, and use a lot of specialized plug-ins. Working on single large images is very different from the typical Film Gimp tasks of retouching film frames to remove dust or wire rigs. \"To get rid of Photoshop completely would require investing a lot of developer resources\", says Dahllöf.\n\nFilm Gimp at SourceForge\n\nRobin Rowe, a contributing editor for Linux Journal, wrote Caroline Dahllöf and Calvin Williamson in October of 2001 to ask if he could interview them for a story about Film Gimp. Rowe interviewed Williamson by phone, and visited Los Angeles in November 2001 to interview Dahllöf.and others at Rhythm & Hues. The story, \"Film Gimp at Rhythm & Hues\", appeared in the March 2002 issue of Linux Journal. Rowe further described Film Gimp in the article, \"Linux and Scooby-Doo\", in June 2002.\n\nFilm Gimp only existed up to this time as the HOLLYWOOD branch in gimp.org CVS, and wouldn't build easily. Rowe asked Dahllöf to put up a source tarball so that Linux Journal readers wouldn't have so much trouble installing Film Gimp. He also suggested updating the Film Gimp Web page at gimp.org. That hadn't changed in years. When none of that had happened by the time the article appeared in February, Rowe offered to do it himself.\n\nFilm Gimp was hosted at gimp.org, and to update that site Rowe would need more than anonymous rights. Dahllöf introduced Rowe to Gimp maintainer Yosh Singh, who agreed to grant access. However, he noted that there was no automated mechanism for adding developers to gimp.org, that it could take a while if he was busy. Several months passed. Nobody at gimp.org had time. Rowe suggested hosting Film Gimp on SourceForge, and everyone agreed that seemed best. Being at SourceForge would keep Film Gimp from being a distraction to Gimp. SourceForge granted access on July 3, 2002. Rowe launched the Film Gimp SourceForge Web site on July 4, and released the first source tarball (0.1) on July 24, 2002. Rowe chose the title of Release Manager to emphasize his focus on Film Gimp releases.\n\nAs it does for many Gimp-related mailing lists, UC Berkeley hosted the Gimp-film mailing list. With no Film Gimp project manager and no public users the list rarely had traffic. When 0.1 was released the list was down. Rowe launched a new Film Gimp mailing list at SourceForge. That list is very active.\n\nFilm Gimp at Sony Pictures Imageworks\n\nNot long after releasing 0.1, Rowe received a surprising email from Sam Richards of Sony Pictures Imageworks: \"We have been using film gimp for a while now, and do have a number of fixes to gimp that we have finally convinced Sony we should release\". Film Gimp had been used on Stuart Little by Rhythm & Hues, and SPI had continued that by using it on Stuart Little II. This was a branch of Film Gimp, based on a November 2001 CVS snapshot. Sony generously contributed back their fixes. Sam Richards effected a merge between the SPI variant and the 0.1 release, rejoining the two branches to be a single Film Gimp.\n\nAccording to Richards, the fixes made at SPI addressed 8/16-bit issues, provided better handling of alpha channels, and fixed dodge and burn. Sam Richards continues to handle the merge issues to conform Film Gimp releases, and has been instrumental in generating the high tempo of Film Gimp releases.\n\nQuestions to rower@movieeditor.com\n\nCreated July 4th, 2002; revised January 3, 2003"
    }
}