{
    "id": "correct_subsidiary_00074_1",
    "rank": 5,
    "data": {
        "url": "https://ebin.pub/download/beginning-tivo-programming-0470054271-9780470054277-9780470140949.html",
        "read_more_link": "",
        "language": "en",
        "title": "Beginning TiVo Programming 0470054271, 9780470054277, 9780470140949",
        "top_image": "https://ebin.pub/img/beginning-tivo-programming-0470054271-9780470054277-9780470140949.jpg",
        "meta_img": "https://ebin.pub/img/beginning-tivo-programming-0470054271-9780470054277-9780470140949.jpg",
        "images": [
            "https://ebin.pub/ebinpub/assets/img/ebinpub_logo.png",
            "https://ebin.pub/img/200x200/beginning-3d-game-programming.jpg",
            "https://ebin.pub/img/200x200/beginning-rust-programming-9781119712879.jpg",
            "https://ebin.pub/img/200x200/beginning-c-game-programming.jpg",
            "https://ebin.pub/img/200x200/beginning-lua-programming-9780470069172-0470069171.jpg",
            "https://ebin.pub/img/200x200/beginning-c-game-programming-1786466198-9781786466198.jpg",
            "https://ebin.pub/img/200x200/beginning-3d-game-programming-0672326612-9780672326615.jpg",
            "https://ebin.pub/img/200x200/beginning-c-game-programming-1598633600-9781598633603.jpg",
            "https://ebin.pub/img/200x200/beginning-swift-programming-2147483648-9781119009313-9781119042884-9781119009320.jpg",
            "https://ebin.pub/img/200x200/beginning-rss-and-atom-programming-9780764579165-0764579169.jpg",
            "https://ebin.pub/img/200x200/tivo-for-dummies-9780764569234-0764569236.jpg",
            "https://ebin.pub/img/200x200/beginning-tivo-programming-0470054271-9780470054277-9780470140949.jpg",
            "https://ebin.pub/ebinpub/assets/img/ebinpub_logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "With TiVo Home Media Engine SDK you can build new and exciting applications for broadband-connected Series 2 devices. In...",
        "meta_lang": "en",
        "meta_favicon": "https://ebin.pub/ebinpub/assets/img/apple-icon-57x57.png",
        "meta_site_name": "ebin.pub",
        "canonical_link": "https://ebin.pub/beginning-tivo-programming-0470054271-9780470054277-9780470140949.html",
        "text": "Citation preview\n\nBeginning\n\nTiVo® Programming John Brosnan Kyle Copeland\n\nBeginning\n\nTiVo® Programming\n\nBeginning\n\nTiVo® Programming John Brosnan Kyle Copeland\n\nBeginning TiVo® Programming Published by Wiley Publishing, Inc. 10475 Crosspoint Boulevard Indianapolis, IN 46256 www.wiley.com Copyright © 2007 by Wiley Publishing, Inc., Indianapolis, Indiana ISBN: 978-0-470-05427-7 Manufactured in the United States of America 10 9 8 7 6 5 4 3 2 1 1B/SV/QR/QX/IN Library of Congress Cataloging-in-Publication Data: Brosnan, John, 1978Beginning TiVo programming / John Brosnan, Kyle Copeland. p. cm. ISBN-13: 978-0-470-05427-7 (paper/website) ISBN-10: 0-470-05427-1 (paper/website) 1. Interactive television. 2. Home video systems--Automatic control. I. Copeland, Kyle, 1975- II. Title. TK6679.3.B76 2007 621.388’33--dc22 2006038753 No part of this publication may be reproduced, stored in a retrieval system or transmitted in any form or by any means, electronic, mechanical, photocopying, recording, scanning or otherwise, except as permitted under Sections 107 or 108 of the 1976 United States Copyright Act, without either the prior written permission of the Publisher, or authorization through payment of the appropriate per-copy fee to the Copyright Clearance Center, 222 Rosewood Drive, Danvers, MA 01923, (978) 750-8400, fax (978) 646-8600. Requests to the Publisher for permission should be addressed to the Legal Department, Wiley Publishing, Inc., 10475 Crosspoint Blvd., Indianapolis, IN 46256, (317) 572-3447, fax (317) 572-4355, or online at http://www.wiley.com/go/permissions. LIMIT OF LIABILITY/DISCLAIMER OF WARRANTY: THE PUBLISHER AND THE AUTHOR MAKE NO REPRESENTATIONS OR WARRANTIES WITH RESPECT TO THE ACCURACY OR COMPLETENESS OF THE CONTENTS OF THIS WORK AND SPECIFICALLY DISCLAIM ALL WARRANTIES, INCLUDING WITHOUT LIMITATION WARRANTIES OF FITNESS FOR A PARTICULAR PURPOSE. NO WARRANTY MAY BE CREATED OR EXTENDED BY SALES OR PROMOTIONAL MATERIALS. THE ADVICE AND STRATEGIES CONTAINED HEREIN MAY NOT BE SUITABLE FOR EVERY SITUATION. THIS WORK IS SOLD WITH THE UNDERSTANDING THAT THE PUBLISHER IS NOT ENGAGED IN RENDERING LEGAL, ACCOUNTING, OR OTHER PROFESSIONAL SERVICES. IF PROFESSIONAL ASSISTANCE IS REQUIRED, THE SERVICES OF A COMPETENT PROFESSIONAL PERSON SHOULD BE SOUGHT. NEITHER THE PUBLISHER NOR THE AUTHOR SHALL BE LIABLE FOR DAMAGES ARISING HEREFROM. THE FACT THAT AN ORGANIZATION OR WEBSITE IS REFERRED TO IN THIS WORK AS A CITATION AND/OR A POTENTIAL SOURCE OF FURTHER INFORMATION DOES NOT MEAN THAT THE AUTHOR OR THE PUBLISHER ENDORSES THE INFORMATION THE ORGANIZATION OR WEBSITE MAY PROVIDE OR RECOMMENDATIONS IT MAY MAKE. FURTHER, READERS SHOULD BE AWARE THAT INTERNET WEBSITES LISTED IN THIS WORK MAY HAVE CHANGED OR DISAPPEARED BETWEEN WHEN THIS WORK WAS WRITTEN AND WHEN IT IS READ. For general information on our other products and services please contact our Customer Care Department within the United States at (800) 762-2974, outside the United States at (317) 572-3993 or fax (317) 572-4002. Trademarks: Wiley, the Wiley logo, Wrox, the Wrox logo, Programmer to Programmer, and related trade dress are trademarks or registered trademarks of John Wiley & Sons, Inc. and/or its affiliates, in the United States and other countries, and may not be used without written permission. TiVo is a registered trademark of TiVO, Inc. All other trademarks are the property of their respective owners. Wiley Publishing, Inc., is not associated with any product or vendor mentioned in this book. Wiley also publishes its books in a variety of electronic formats. Some content that appears in print may not be available in electronic books.\n\nAbout the Authors John Brosnan co-wrote the TiVo HME Developer Challenge grand-prize winning application, AudioFaucet. He has been involved in HME applications for other companies and brings a strong background in Java. John has been a Java programmer for the past five years, primarily in the telecom industry, writing web enterprise applications. Kyle Copeland co-wrote the TiVo HME Developer Challenge grand-prize winning application, AudioFaucet, and has been involved in the ongoing development for AudioFaucet. Working in the cable industry for the past ten years developing products for consumers nationwide has given Kyle great insight into the customer experience, and a rich background in developing products and services for consumers.\n\nCredits Executive Editor\n\nVice President and Executive Publisher\n\nChris Webb\n\nJoseph B. Wikert\n\nDevelopment Editor\n\nGraphics and Production Specialists\n\nRosanne Koneval\n\nDavid Staas\n\nCarrie A. Foster Barbara Moore Heather Ryan Alicia B. South\n\nProduction Editor\n\nQuality Control Technician\n\nEric Charbonneau\n\nChristy Pingleton\n\nCopy Editor\n\nProject Coordinator\n\nKim Cofer\n\nErin Smith\n\nEditorial Manager\n\nProofreading\n\nMary Beth Wakefield\n\nTechbooks\n\nProduction Manager\n\nIndexing\n\nTim Tate\n\nJulie Kawabata\n\nVice President and Executive Group Publisher\n\nAnniversary Logo Design\n\nRichard Swadley\n\nRichard Pacifico\n\nTechnical Editor\n\nAcknowledgments First, a big thanks to our families and the dog for giving us the time to complete this book. Thanks also to TiVo for making a little box that is fun to use. Lastly, thanks to our editors for guiding us along the path of writing this book.\n\nContents Acknowledgments Introduction Chapter 1: Introduction to TiVo Applications The TiVo Platform Brief History of Software Development for TiVo Home Media Option and TiVo Desktop TiVo Desktop as a Server HMO Protocol\n\nHMO Applications TiVo Server-Hosted Applications Desktop Applications\n\nHome Media Engine Software Development Kit\n\nHow HME Interacts with TiVo What HME Is and Isn’t\n\nSummary Questions\n\nChapter 2: Getting the TiVo Box Ready for HME TiVo Requirements for HME Supported TiVo Boxes Series1 Standalone Series2 Standalone DirectTV Integrated TiVo (DirectTiVo) Series3\n\nActive TiVo Service Subscription Checking the Version of TiVo Software Forcing a Connection to the TiVo Service\n\nix xxi\n\n1 1 2 3 4 6\n\n7 7 7\n\n8 10\n\n11 11\n\n12 12\n\n13 13 13 14 15 15 16\n\n17 17 18\n\nContents The Household Network Wired vs. Wireless Network Adapters Wired Adapters Wireless Adapters\n\nAdding TiVo Boxes to a Household Network Setting up Wired Access Setting up Wireless Access TCP/IP Settings\n\nMusic, Photos, & More Summary Questions\n\nChapter 3: Your Development Environment Required Software Java SDK Windows Mac OS X Linux and Unix\n\nText Editor\n\nGetting the TiVo HME SDK Exploring the SDK Classpath\n\nRecommended Software Ant Log4j JDIC JUnit Subversion\n\nSetting up Eclipse Installation Running Eclipse Starting a New Project\n\nRunning the Sample Applications Starting the Applications Using the Sample Applications in Eclipse\n\nxii\n\n19 20 20 20 21\n\n21 21 22 22\n\n23 24 25\n\n27 27 28 28 29 29\n\n30\n\n30 30 31\n\n32 32 33 33 33 33\n\n33 34 34 35\n\n39 40 41\n\nContents The HME Simulator Limitations of the Simulator\n\nSummary Questions\n\nChapter 4: Your First TiVo HME Application Hello World Creating Hello World Running the Example in the Simulator Simulator in Discovery Mode Simulator in Direct Mode\n\nStarting Hello World on the TiVo Box Handling Events\n\nApplication Lifecycle Startup Running Events\n\n44 46\n\n46 46\n\n47 47 47 50 50 52\n\n53 56\n\n57 57 57\n\nErrors\n\n58\n\nShutdown\n\n58\n\nSummary Questions\n\nChapter 5: Displaying Resources\n\n58 59\n\n61\n\nUnderstanding Views\n\n61\n\nIntroduction to Views\n\n61\n\nView Hierarchy Drawing Order and Hiding Views Properties of Views Translation Scaling Visibility, Transparency, and Focus\n\nExtending Views Code Example\n\nText Creating Text Resources\n\n61 63 64 64 65 66\n\n67 69\n\n72 72\n\nxiii\n\nContents Image Resources Supported Graphic Formats Creating Image Resources Size, Scaling, and Alignment Updating the Weather Application with Graphics\n\nSounds Creating Sound Resources Built-in Sounds\n\nSummary Questions\n\n80 80 80 87 89\n\n92 92 93\n\n93 94\n\nChapter 6: Events\n\n95\n\nTypes of Events\n\n95\n\nDevice Info Init Info Application Info Idle Info Key Event Font Info\n\n96 97 97 97 98 98\n\nEvent Flow Key Events Optional Keys Events Example\n\nSending Custom Events Ticker Events Focus Events Application Event Handling Summary Questions\n\nChapter 7: Going Bananas How to Include Bananas in Your Application Reasons to Use Bananas Bananas Sample Application\n\nBApplication Other Features of BApplication\n\nxiv\n\n98 98 100 101\n\n105 106 112 114 115 116\n\n117 117 119 119\n\n122 124\n\nContents BScreen New Methods in BScreen Pushing and Popping BScreens Transitions Creating Custom Transitions\n\nBView BList Using BLists Styling the List Managing the List BList Example BList Methods Focus\n\nBText BButton Using BButtons\n\nBKeyboard Using the Keyboard Widget\n\nBSkin BDirSkin BZipSkin BResSkin Example\n\nSummary Questions\n\nChapter 8: Using Bananas Events Event Model New Events in Bananas\n\nUsing Actions Custom Actions\n\nCustom Widgets Weather Application Example Summary Questions\n\n125 126 127 129 130\n\n134 136 138 138 139 139 142 144\n\n146 147 147\n\n149 151\n\n154 155 155 155 155\n\n157 158\n\n159 159 161\n\n164 164\n\n166 170 178 178\n\nxv\n\nContents Chapter 9: Advanced Resources Streaming Resources Streaming Graphics Streaming Audio MPEG Video Backgrounds Creating MPEG Video Backgrounds Using TiVo’s MKLOOP FFMPEG Wrapper Using a Web-Based MKLOOP FFMPEG Wrapper\n\nSetting MPEG Video Backgrounds MPEG Video Background Caveats Simulator Not Pixel Perfect Root View Method Behavior System Reboots\n\nResource Management Caching and Removing Resources Debugging the Resource Tree Resource Limitations Pixel Buffer and Rendering Engine Best Practices for Predictable Rendering Debugging Software Rendering CPU Resource Concerns Network Resource Constraints\n\nSummary Questions\n\nChapter 10: Advanced HME Application Lifecycle\n\n179 179 179 180 181 182 182 183\n\n183 184 184 187 190 191\n\n191 191 192 193 194 195 196 197 198\n\n198 199\n\n201\n\nHME SDK Architecture Impact Overriding the Factory\n\n201 202\n\nAccessing Files and Resources Changing the Application Name Handling Arguments Common Actions\n\n205 206 207 208\n\nUsing Factory for Shared Data\n\n208\n\nSingletons\n\n210\n\nxvi\n\nContents Threads Using Threads Java 4 Threads Java 5 Executor\n\nStopping Threads Correctly on Application Exit Keeping Shared Threads Running between Applications\n\nCalling Other Applications Transitioning to Another Application Running the Example Transitioning Back to the Original Application\n\nSummary Questions\n\nChapter 11: Application Preferences Per-TiVo Preferences\n\n211 212 212 212\n\n214 215\n\n215 215 217 220\n\n220 220\n\n223 223\n\nUsing Per-TiVo Preferences How the Data Is Stored\n\n223 225\n\nPer-Application Preferences\n\n227\n\nUsing Persistent Data Using the Java Preference System Details of Java Preference API Converting BWeatherApp to use Java Preferences\n\nWhy Use the Preferences API?\n\nOther Methods of Saving Preference Data Summary Questions\n\nChapter 12: Animation Animation Resources What Can Be Animated\n\nMoving Views Animating Transparency Graphics Scaling Visibility Animating Events\n\n227 228 228 229\n\n230\n\n230 231 231\n\n233 233 234\n\n235 236 237 237 238\n\nxvii\n\nContents Chaining Animations Putting It All Together Summary Questions\n\nChapter 13: Connecting to External Resources Data from the Web Setting the Resource as a URL Retrieving the Resource and Saving It Locally\n\nSOAP, RSS, & XML\n\n238 240 242 242\n\n243 243 243 244\n\n246\n\nSOAP RSS XML Data\n\n246 247 248\n\nJDBC Other Options Summary Questions\n\n248 251 251 251\n\nChapter 14: Deploying an HME Application Jar from Command Line Creating a Web Start Application Using Web Start with HME\n\nOS X Native App\n\n253 255 256\n\n258\n\nCreating an Application Icon Bundler\n\n258 258\n\nPreparing Your Resources Creating a Jar Bundle\n\n259 259\n\nFinal Touches Packaging Creating the Disk Image Stylizing the Disk Image Compressing and Locking Down the Disk Image Launching a Disk Image Automatically Upon Download Displaying a Software License Agreement\n\nxviii\n\n253\n\n261 263 263 264 267 267 268\n\nContents Windows Native App Creating an Application Icon Bundler Installer Packaging\n\nSelling Your Application Summary Questions\n\nChapter 15: Tips and Troubleshooting Logging Common Problems Additional Resources Summary\n\nAppendix A: Exercise Answers Index\n\n268 268 269 269 270\n\n270 270 270\n\n271 272 274 275 275\n\n277 283\n\nxix\n\nIntroduction The impetus for the book came from a desire to share the knowledge gained while developing applications for the TiVo HME platform, and to help others gain access to the market created by TiVo HME applications. TiVo HME (Java applications for TiVo) are a new development, and one of the first set-top box platforms to allow user-written code to run on an unmodified system.\n\nWho This Book Is For The target readers for this book are TiVo users with some programming expertise who are interested in creating a TiVo HME application. The book covers the fundamentals of building applications for TiVo, and the process of building an application that is user friendly. This book is ideal for readers looking to bring their vision of a TiVo application to users.\n\nWhat This Book Covers The main goal of this book is to get you started writing polished applications using the TiVo HME SDK. TiVo users have grown accustomed to a powerful, friendly user interface that is intuitive and simple to use. This book walks you through writing applications, utilizing the basic and more advanced features of HME to build new and exciting applications to extend the TiVo experience. The key features this book covers are ❑\n\nConfiguring and getting comfortable in your development environment\n\n❑\n\nThe HME Event model\n\n❑\n\nDisplaying images and text\n\n❑\n\nPlaying audio files and streams\n\n❑\n\nOptimizing the behavior of your application\n\n❑\n\nPackaging your application for deployment\n\nYou should take from this book a solid understanding of the way the TiVo HME SDK functions, and an understanding of how to build applications that will be responsive and intuitive for the user as well as set up a solid development process for producing quality applications.\n\nIntroduction\n\nHow This Book Is Structured This book is designed to guide you through setting up a development environment for writing TiVo HME applications. The book starts by describing software development for the TiVo platform. You will learn the basic building blocks of designing applications for TiVo and how to respond to events. Exercises and examples illustrate the concepts throughout the book. After covering the basics of developing applications for TiVo, you will read about a component library from TiVo that makes developing advanced applications easier. The end of the book covers information regarding polishing the final product and packaging applications for your users.\n\nWhat You Need to Use This Book The book contains many programming examples. Applications for TiVo boxes are written in Java, so a basic understanding of the Java language and syntax will be needed. The installation of software needed for developing TiVo HME applications is covered in the book. A TiVo box (Series 2 or Series 3) is also needed for certain examples and sections of the book. The book does cover configuration that needs to take place on the TiVo box itself.\n\nConventions To help you get the most from the text and keep track of what’s happening, we’ve used a number of conventions throughout the book.\n\nTry It Out The Try It Out is an exercise you should work through, following the text in the book.\n\n1. 2. 3.\n\nIt usually consists of a set of steps. Each step has a number. Follow the steps through with your copy of the database.\n\nHow It Works After each Try It Out, the code you’ve typed will be explained in detail.\n\nBoxes like this one hold important, not-to-be-forgotten information that is directly relevant to the surrounding text.\n\nTips, hints, tricks, and asides to the current discussion are offset and placed in italics like this.\n\nxxii\n\nIntroduction As for styles in the text: ❑\n\nWe highlight new terms and important words when we introduce them.\n\n❑\n\nWe show keyboard strokes like this: Ctrl+A.\n\n❑\n\nWe show file names, URLs, and code within the text like so: persistence.properties.\n\n❑\n\nWe present code in two different ways:\n\nIn code examples we highlight new and important code with a gray background. The gray highlighting is not used for code that’s less important in the present context, or has been shown before.\n\nSource Code As you work through the examples in this book, you may choose either to type in all the code manually or to use the source code files that accompany the book. All of the source code used in this book is available for download at http://www.wrox.com. Once at the site, simply locate the book’s title (either by using the Search box or by using one of the title lists) and click the Download Code link on the book’s detail page to obtain all the source code for the book. Because many books have similar titles, you may find it easiest to search by ISBN; this book’s ISBN is 978-0-470-05427-7 Once you download the code, just decompress it with your favorite compression tool. Alternatively, you can go to the main Wrox code download page at http://www.wrox.com/dynamic/books/download .aspx to see the code available for this book and all other Wrox books.\n\nErrata We make every effort to ensure that there are no errors in the text or in the code. However, no one is perfect, and mistakes do occur. If you find an error in one of our books, like a spelling mistake or faulty piece of code, we would be very grateful for your feedback. By sending in errata you may save another reader hours of frustration and at the same time you will be helping us provide even higher quality information. To find the errata page for this book, go to http://www.wrox.com and locate the title using the Search box or one of the title lists. Then, on the book details page, click the Book Errata link. On this page you can view all errata that has been submitted for this book and posted by Wrox editors. A complete book list including links to each book’s errata is also available at www.wrox.com/misc-pages/booklist.shtml. If you don’t spot “your” error on the Book Errata page, go to www.wrox.com/contact/techsupport .shtml and complete the form there to send us the error you have found. We’ll check the information and, if appropriate, post a message to the book’s errata page and fix the problem in subsequent editions of the book.\n\nxxiii\n\nIntroduction\n\np2p.wrox.com For author and peer discussion, join the P2P forums at p2p.wrox.com. The forums are a Web-based system for you to post messages relating to Wrox books and related technologies and interact with other readers and technology users. The forums offer a subscription feature to e-mail you topics of interest of your choosing when new posts are made to the forums. Wrox authors, editors, other industry experts, and your fellow readers are present on these forums. At http://p2p.wrox.com you will find a number of different forums that will help you not only as you read this book, but also as you develop your own applications. To join the forums, just follow these steps:\n\n1. 2. 3. 4.\n\nGo to p2p.wrox.com and click the Register link. Read the terms of use and click Agree. Complete the required information to join as well as any optional information you wish to provide and click Submit. You will receive an e-mail with information describing how to verify your account and complete the joining process.\n\nYou can read messages in the forums without joining P2P, but in order to post your own messages, you must join. Once you join, you can post new messages and respond to messages other users post. You can read messages at any time on the Web. If you would like to have new messages from a particular forum e-mailed to you, click the Subscribe to this Forum icon by the forum name in the forum listing. For more information about how to use the Wrox P2P, be sure to read the P2P FAQs for answers to questions about how the forum software works as well as many common questions specific to P2P and Wrox books. To read the FAQs, click the FAQ link on any P2P page.\n\nxxiv\n\nBeginning\n\nTiVo® Programming\n\n1 Introduction to TiVo Applications What is TiVo? If you need an answer to that question, most likely this book isn’t going to be of much interest to you. However, if you are looking for a fun way to create new and exciting living room multimedia experiences leveraging the TiVo platform, you’ve found the right place to get you well on your way. This chapter introduces you to the TiVo platform and provides a good foundation before you begin writing applications for yourself. In this chapter, you learn about the following: ❑\n\nHome Media Option\n\n❑\n\nHome Media Engine\n\n❑\n\nTiVo HME SDK\n\nThe TiVo Platform Essentially, the TiVo platform is a small personal computer that up until recently was dressed as an easy to use, yet powerful, alternative to the household VCR. The current generation of TiVo hardware contains a low-powered MIPS CPU, a high-capacity internal hard drive, a modem for connecting to the TiVo servers over dial-up, a few USB ports for expansion opportunities, a small amount of video and system RAM, a video output system to connect to televisions, and a simple input system that uses the fantastic TiVo Remote. Though that might not seem like a powerful platform for providing DVR (digital video recorder) functionality (especially compared to the horsepower needed for running a Windows Media Center PC), TiVo has also included a hardwarebased MPEG-2 Encoder/Decoder chip to handle all of the heavy tasks like video encoding and decoding.\n\nChapter 1 When they designed the TiVo hardware platform, the wizards at TiVo decided to use Linux as the base operating system. Naturally, this made a good portion of the technical community quite pleased, because under the GPL (GNU General Public License) that covers Linux distributions, TiVo had an obligation to freely distribute the full source code for any changes that it makes to optimize the core OS to run its software. Almost immediately after getting their hands on the source code of the TiVo Linux distribution, a TiVo hacking community was born. It came as a surprise to many that for the most part, TiVo didn’t interfere with people tinkering with the software powering their box, unless of course the tinkerer’s goal was to avoid continuing to pay for TiVo’s subscription service. The first wave of TiVo hacks included simply growing the hard drive space, allowing users to add more recording capacity to their DVR. Following shortly thereafter, some brilliant hardware engineers outside of TiVo started devising a way to include the TiVo box in their home networks. Inside the TiVo box was a diagnostic slot that allowed the fabrication of an expansion board that would allow users to install a card, load some Linux drivers, and be on their way to a network-connected TiVo box. However, loading the Linux drivers proved difficult for the average end user. Shortly thereafter, engineers internal to TiVo embraced the idea of allowing users to have a network connected to their unit, and started to build an optimized driver set for the expansion cards directly into their software. This made TiVo discover a new set of inter-networked features that could be available to its users. This freed users of using their phone line to get software updates and electronic programming guide data. TiVo soon started working on a set of drivers and a TV-based user interface for configuring and controlling external USB adapters. These can connect to both Ethernet and Wi-Fi networks. These drivers, along with some great software, allow users to make TiVo part of their life beyond avoiding the drama of missing their favorite television show. Proving its commitment of transitioning TiVo boxes from a DVR to a digital lifestyle device, TiVo’s newest generation of hardware includes a physical Ethernet port, allowing TiVo boxes to connect directly to household networks out of the box without the need to consider external USB network adapters. To connect to Wi-Fi networks, TiVo created its own TiVo-branded Wi-Fi adapter, optimized to integrate with TiVo boxes and speed up communication by offloading encryption and other network overhead to specialized hardware on the adapter.\n\nBrief Histor y of Software Development for TiVo It’s always good to start with a bit of history before diving into new application-building technology. TiVo HME offers a fairly rich environment for building end-user applications; however, it isn’t the first attempt that TiVo has made at entering the applications delivery market. TiVo created a set of rudimentary tools called TiVo HMO, which is targeted specifically to solve the problem of delivering personal music and photo content to the television through the TiVo box.\n\n2\n\nIntroduction to TiVo Applications\n\nHome Media Option and TiVo Desktop Home Media Option (HMO) was the first digital lifestyle software solution introduced by TiVo. HMO runs two basic types of applications: audio streaming to TiVo boxes over a home network and displaying digital photo slideshows. The user interface on the television used to select and view photos or to choose music to play was a simple set of templates that, for the most part, followed the standard TiVo user interface guidelines. The templates were then populated by the TiVo box itself after requesting the information from TiVo Desktop server software running on a desktop machine located on the household network. Originally TiVo charged an activation fee for Home Media Option on top of your normal subscription costs per TiVo box in your home. In order to show users the value in using a sidecar TiVo platform versus just renting a DVR directly from your video provider, TiVo subsequently dropped the activation fee for HMO features and now it comes standard with every TiVo subscription. In addition to allowing access to music and photos (Figure 1-1 and Figure 1-2) on the user’s desktop, TiVo also added a web-based interface for users to send program requests to their TiVo boxes via TiVo Central Online, hosted at TiVo.com. It also added Multi-Room Viewing, which brought the ability to stream or copy recordings from one TiVo box to another, provided both TiVo boxes were listed under the same account and on the same home network. This drove many users into adopting multiple networked TiVo boxes throughout their home and made the Photo and Music streaming services available in many more rooms in a household, all from a single TiVo Desktop server.\n\nFigure 1-1\n\n3\n\nChapter 1\n\nFigure 1-2\n\nTiVo Desktop as a Server Although HMO is limited to the capabilities of the display template frameworks that TiVo provides, it was the first time TiVo allowed end users to send their own personal content to TiVo boxes throughout their home and was a step in the right direction. In order to facilitate trafficking all of this foreign information into the TiVo world, a small software server called TiVo Desktop was released. As mentioned earlier, the TiVo Desktop runs on a Windows PC (Figure 1-3) or Macintosh (Figure 1-4) to serve music and photos to TiVo boxes throughout the household network. It is basically a simple web server that you can browse to with any browser if you know the specific URL format you need to use. The server is responsible for converting the audio and graphic content into a compatible MP3 or JPEG format and also for including the XML-based meta-data required to describe the content appropriately so the TiVo box will know the proper views to display on the television. Though the TiVo Desktop software continues to provide the photo and music browsing services today, the latest generation of applications are largely unconstrained in terms of the user interface that is displayed, and the types of information that are accessed. TiVo Desktop successfully set the stage for TiVo users to have independent software running on their personal computers within a home network to bring new functionality to their beloved TiVo boxes.\n\n4\n\nIntroduction to TiVo Applications\n\nFigure 1-3\n\nFigure 1-4\n\n5\n\nChapter 1 HMO Protocol TiVo opened the HMO protocol to developers to extend their existing software offerings or to create new music and photo applications that could leverage the TiVo box’s ability to display information on televisions throughout the household. The documentation for the HMO protocol is available at http://www .tivo.com/developer. The protocol itself consists mainly of HTTP requests from the TiVo box to the computer. In effect, the desktop machine becomes a mini web server in the HMO system, serving content in the way the TiVo box knows how to display. The most interesting thing about this is that any application on any computer can extend its functionality by simply adding a very thin web server layer and talking to TiVo’s specific XML and URL schemes. The main thing that makes HMO applications so easy to use from an end-user perspective is an auto discovery technology called TiVo Connect. Applications can register with a machine’s local beacon service to periodically broadcast information about the current suite of applications available that TiVo boxes on the household network can connect to. TiVo boxes would pick up these broadcast messages to automatically detect and alert users to the availability of expired or newly announced content that was available for use within the household. In Figure 1-5, the local HMO services on the Music, Photos & More screen is shown.\n\nFigure 1-5\n\n6\n\nIntroduction to TiVo Applications\n\nHMO Applications There are two flavors of HMO applications: applications running on a personal computer locally within the user’s household network extending the functionality of TiVo Desktop, and server-hosted applications mostly used for promotional purposes.\n\nTiVo Server-Hosted Applications HMO also brought the ability for TiVo to publish hosted services to the Music, Photos, Products, & More menu on any TiVo box connected to the global Internet. TiVo used the new network push opportunity to land two large advertising partners. On the music side, Universal Music and later Best Buy signed on to push New Music Tuesday content, which was periodically updated when artists or labels wanted to promote new works as they became available. For photos, TiVo inked a deal with Nikon to promote artsy samples of the world’s greatest photographers that used Nikon digital cameras. The Nikon Photo application is still available through the Music, Photos, Products, & More menu today.\n\nDesktop Applications Initially there were several applications available for TiVo box owners to run on their desktops that leveraged HMO’s ability to display and interact with audio and visual content, but the main application that was born of the opening of the HMO protocol was the very popular JavaHMO. JavaHMO is a Javabased program that conveniently provides weather, movie listings, and a menagerie of other useful information via the photo album browsing interface frameworks of HMO. JavaHMO was a completely open source replacement for TiVo Desktop, allowing users to collect personal and web content and push it to the TiVo boxes throughout their home in a more innovative way than even TiVo had intended. It cleverly took advantage of the hooks that TiVo provided in its API for HMO, with the end result of the JavaHMO server being more aware of the type of content that was being collected and aggregated throughout the home. Due to the constraints of the TiVo-provided template frameworks for HMO, the screens simply referred to themselves as Music or Photos depending on what type of information was being pushed. Despite this, many users still found the applications created using the new Java-based server to be well worth the aggravation of learning how to interact with the UI on the TiVo. The initial intent of the open API from TiVo was to allow application providers to extend their existing applications to include new ways of pushing their existing content to networked TiVo boxes throughout a home network. This prompted a few media jukebox and photo shoebox software creators to extend their software to share user libraries with TiVo boxes on the household network while their programs were running. The first to enter the fray was JRiver Media Center, a media organization jukebox, which allowed users to enhance their Home Media Option experience by allowing them to share music playlists and browse photo slideshows already categorized within JRiver’s rich media organization environment. Many others soon followed. MoodLogic released a TiVo HMO music interface for its active music-mixing software that dynamically categorizes an entire music library based on the mood you are in at any given moment. Adobe added a “Publish to TiVo DVR” option in its Photoshop Album and Photoshop Elements photo organization and editing software, and soon thereafter Picasa followed suit adding similar functionality to its Digital Picture Organizer product.\n\n7\n\nChapter 1 HMO fell short in gaining developer excitement, hampered by the inability to create truly unique and valuable applications for the TiVo platform because of the limitations of the template framework environment. However, all of this changed dramatically in early 2004 when TiVo purchased a small company called Strangeberry, which, led by Arthur Van Hoff, a seasoned software engineer from Sun’s Java labs, created a robust platform for delivering broadband content to low-powered television-connected devices. TiVo feverishly began work to merge the Strangeberry technology into its Series2 TiVo boxes, and by November of 2004, TiVo delivered the first early release version of a flexible and completely open source Java SDK initiative for creating network-powered applications for TiVo boxes, and dubbed it the Home Media Engine.\n\nHome Media Engine Home Media Engine (HME) is truly designed to allow full-fledged applications to display on the TiVo box. Though Home Media Option gave birth to networking and access to music and photos on a desktop machine, the interface on the TiVo box remained constrained, and all events (such as pressing a button on the remote) were handled by software on the TiVo box. The basic model in Home Media Option, to make a directory structure of information available via HTTP for access from the TiVo, is extended in HME to create a full event processing system so HME applications can process remote control key presses, display custom interfaces, control sound effects and audio streams, and launch complex animations and screen transitions. This brought forth the ability to write and run truly custom network-powered applications on the TiVo box for the first time. As you can see in Figures 1-6 and 1-7, the user interface is far more flexible than the HMO interface (shown in Figures 1-1 and 1-2). HME builds on several components that were originally introduced in HMO: ❑\n\nNetwork access: TiVo HME applications don’t actually run on the TiVo box itself — they typically run on a local desktop machine or on a server over the Internet.\n\n❑\n\nAuto Discovery: TiVo HME applications announce their availability similar to the way HMO announcements function through ZeroConf. (“ZeroConf” describes a set of technologies that provide some level of automated network addressing and discovery.)\n\nHME introduces a new protocol for communication with the TiVo box that allows you as the developer to lay out the graphics and play sounds on the TiVo box in almost any way you can think of, as long as you bear in mind that the TiVo box has limited resources and processing power to create the display. Despite the limitations of the TiVo hardware platform, you can create very sophisticated applications, and you can take steps when writing your applications to ensure what they intend to display onscreen survives.\n\n8\n\nIntroduction to TiVo Applications The variety of applications for TiVo HME is far greater than what is available for HMO. The new generation of applications includes access to information in your Yahoo account such as local weather, movies in the area, and traffic information. Live 365 has a radio station application that streams audio from the Internet to the TiVo box and provides a great selection of music. Users of Fandango can use Fandango’s TiVo HME application to browse and purchase movie tickets. TiVo has produced applications that range from games to podcasting players to an application to predict who will be voted off of American Idol. Independent software developers have written applications, such as AudioFaucet (shown in Figure 1-6 and written by the authors of this book), to play audio from your music library. Open source applications such as Galleon (Figure 1-7, the rebirth of JavaHMO as an HME application) do everything the original JavaHMO did, but offer a more elegant user interface. Apps.tv, located at http://www.apps.tv, is a web site that hosts many HME applications that can run over the Internet. Like the applications that TiVo hosts, apps.tv-hosted applications run over the Internet and range in functionality from a browser for Flickr photo galleries to fun family games written by independent developers using the HME software development kit.\n\nFigure 1-6\n\n9\n\nChapter 1\n\nFigure 1-7\n\nSoftware Development Kit One of the reasons HME development has grown so quickly is because of the software development kit (SDK) that TiVo released along with HME. With all the plumbing for managing events from the TiVo box and built-in capabilities for displaying images and playing sounds through the TiVo box, the creation of an SDK for HME was a huge step forward in making development of HME applications simpler, faster, and more powerful. Applications that before had to rely on processing HTTP requests could now implement event models in the SDK and the application lifecycle, allowing much more sophisticated applications to be developed. The SDK for HME was released in November of 2004 as an open source project, and is available from http://tivohme.sourceforge.net. Developed in Java, the HME SDK allows developers to leverage a wide variety of other open source and free libraries available, as well as mature Java development tools such as Ant, NetBeans, and Eclipse. Along with the Java SDK, TiVo also introduced a library called “Bananas,” which has tools for displaying standard TiVo interface widgets such as lists, screens, and buttons and providing an application the ability to easily have the familiar look and feel of a built-in TiVo screen. As every TiVo user knows, a highly intuitive and responsive interface is one of the great successes of the TiVo experience.\n\n10\n\nIntroduction to TiVo Applications The documentation for the protocol that HME uses to communicate with the TiVo box is also available in the HME documentation. This is significant because it means that programming languages other than Java can be used with the HME protocol. Although the official TiVo HME SDK is in Java, applications have been written in other languages using the open protocol for HME. This book covers the Java SDK, because it is the official SDK from TiVo and because the concepts of handling events and working with the processing limitations of the TiVo hardware to create an application are applicable to any HME development.\n\nHow HME Interacts with TiVo As mentioned earlier, the HME application runs either hosted on a server on the Internet or on a desktop machine within your home network. The TiVo box acts as a client, and displays the user interface as directed by the server, collecting input via remote control keys and sending the key press data back to the server for processing, as shown in Figure 1-8.\n\nTiVo\n\nEvents\n\nHome Network\n\nCommands\n\nEvents\n\nDesktop hosting HME Application\n\nCommands\n\nEvents\n\nCommands\n\nInternet\n\nEvents\n\nServer hosting HME Application\n\nRemote Control\n\nCommands\n\nFigure 1-8\n\nWhat HME Is and Isn’t HME, at the time of this writing, is a separate runtime environment on the TiVo box to run applications that provide access to information, games, and pretty much anything a creative developer can imagine. Access to internal information and other functions on the TiVo box outside of the HME subsystem and display model are not possible at this time. That is, HME does not allow access to any DVR functionality on the TiVo box, nor access to any of the local resources (such as recordings) that are stored on the TiVo boxes.\n\n11\n\nChapter 1 HME runs only inside the runtime environment, which acts as a sort of sandbox for applications, in effect partitioning them safely from possibly interfering with normal DVR functionality. Therefore, HME does not allow an HME application to do the following: ❑\n\nDisplay information over live TV\n\n❑\n\nOverlay or manipulate any of the video content\n\n❑\n\nAccess to view or manipulate electronic guide data\n\n❑\n\nAccess to view or manipulate a user’s season passes or recording preferences\n\nHME does, however, make the TiVo box that is already connected to your TV, sound system, and home theater into a platform with access to a far greater range of functionality, and provides the most natural way to bring new applications into the living room — using the TiVo box that has already endeared itself as a permanent part of the household’s digital lifestyle.\n\nSummar y The TiVo platform is essentially a low-powered personal computer that up until recently was marketed as a simple and elegant alternative to a VCR. It’s built upon the Linux platform and therefore received quite a bit of attention initially from the developer community in order to make the TiVo more useful, including hacking hardware in order to add the TiVo to the household network. TiVo embraced that idea when building the Series2 hardware platform and included networking support in the form of USB ports with the reference platform. Later TiVo expanded the hardware to directly include a wired Ethernet port. TiVo HMO was introduced as the first application platform mainly intended for developers to extend their PC-based digital home media catalog applications to allow music and photos from those applications to be accessed directly from the TiVo box through a series of prebuilt templates designed by TiVo. The TiVo HME platform is intended to offer application developers a much more flexible method for developing full-fledged application interfaces for display to the TV through the TiVo box, limited in most cases only by the imagination and creativity of the developers themselves. Though HME applications display on the TiVo box, they do not allow access to play or overlay any video, manipulate DVR functionality, or access to any of the local resources (such as guide data, season passes, or recordings) that are stored on the TiVo box itself.\n\nQuestions 1. 2.\n\n12\n\nWhat are the core differences between HMO and HME? What are the main limitations of HME on the TiVo box?\n\n2 Getting the TiVo Box Ready for HME The first steps in being able to leverage the exciting HME platform are to make sure that your TiVo box supports HME and has an active subscription, and to make your TiVo box an active participant of your household network. As a programmer, you might already be aware of what is required to allow a TiVo box to access HME content; however, it’s important to walk through the options anyway in order to help you easily support future users of your HME-based applications. In this chapter you learn: ❑\n\nWhich TiVo models support the HME applications\n\n❑\n\nVarious TiVo subscription models and which models support HME\n\n❑\n\nHow to make sure your TiVo box has the latest software updates installed\n\n❑\n\nHow to get the TiVo box online in a wired or wireless household network\n\n❑\n\nHow to use a few of TiVo’s hosted HME applications\n\nTiVo Requirements for HME As mentioned earlier, the TiVo box platform is a small personal computer; however, not all TiVo box models are created equal. Depending on the model that you have, it may not have the hardware or software required to support HME applications. This section describes the currently available TiVo box models at the time of this writing, and outlines which specific platforms will allow you to get your TiVo box on the household network and allow you to use HME applications.\n\nSupported TiVo Boxes TiVo boxes have been on the market since March 31, 1999, and through many partnerships with hardware vendors and service providers over time, have delivered a flurry of TiVo models to the market. TiVo boxes can be grouped into two categories: standalone and integrated.\n\nChapter 2 Standalone TiVo boxes are designed to act as a sidecar to any existing set-top box or just go in line with your analog video signal direct from your rabbit ears. Inside the box it has an MPEG encoder chip that takes any signal that is sent to its inputs and writes an encoded stream to the hard drive. The end users have the ability to choose the amount of compression that they would like the TiVo box to use while encoding their video. A higher compression ratio allows the TiVo box to fit more programming in the box, but the resulting video playback will be of a lower quality. Integrated TiVo boxes are built directly into a digital satellite receiver. They do not allow the input of external signals and do not contain an MPEG encoder chip. Instead, the integrated TiVo boxes take a digital signal stream being broadcast to the receiver and write that directly to the hard drive. The end user does not have the ability to adjust the quality of the compression being used, but the end result is that anything played back on an integrated TiVo box is in the exact quality in which it was received, preserving any HD (High Definition) or 5.1 surround sound data that was included in the original broadcast as well. Within each of these categories there are different generations of TiVo box hardware platforms. The initial TiVo box hardware platform is now referred to as Series1; it lacked any home-networking support and is therefore incapable of making use of any HME applications. The second generation of the TiVo box hardware platform (aptly named Series2) added many new features, one being the ability to easily join a household network and take part in HME application goodness. The latest generation of the TiVo box hardware platform, the Series3, adds even more horsepower to the platform and proves TiVo’s commitment to extending the household network-enabled home media experience.\n\nSeries1 Standalone The original TiVo box hardware platform was manufactured and distributed through Philips and Sony and is now referred to as Series1. The Series1 TiVo box was based on a lower-powered PowerPC processor and did not include USB ports for future expandability. It relied on an internal modem and an analog telephone line to connect to the TiVo servers and acquire subscription status and electronic programming guide information. A few talented enthusiasts put together an ingenious way to rip open the Series1 TiVo box and add a custom-built network adapter, but due to the lack of CPU horsepower and the warranty-voiding nature of breaking the factory seal on the box, TiVo never made available a PowerPC version of HMO or HME runtimes for the Series1 TiVo box. At first glance it can be difficult to differentiate from looking at the TiVo box if the platform is Series1 or Series2 because the initial runs of Series2 share the same Series1 enclosure. The following table shows the make/model numbers of the Series1 TiVo boxes to make it easy for you to know for sure if the TiVo box you own is a Series1 TiVo box and does not officially support TiVo-provided household network integration.\n\n14\n\nEquipment Manufacturer\n\nManufacturer Model Number\n\nNetwork Support\n\nPhilips\n\nPTV100\n\nNo\n\nPhilips\n\nHDRxxx\n\nNo\n\nSony\n\nSVR-2000\n\nNo\n\nGetting the TiVo Box Ready for HME Series2 Standalone The second generation of TiVo box hardware platform was called Series2. TiVo moved the platform to a more powerful MIPS-based processor and created the platform with expandability in mind, adding two USB ports to the back of the box. This initially allowed users to free themselves of the telephone cable used to collect service and guide data from the TiVo server farm by adding a USB network adapter and adding the TiVo to a home network. Series2 also added the ability for manufacturers of a TiVo box to include an integrated internal DVD drive for playing back your favorite non-TiVoed movies and easy archiving of TiVo-recorded content to DVD without the need to transfer and convert the video on a PC. Out of the gate, the TiVo Series2 supported a small subset of wired Ethernet adapters and then shortly after added support for a select few wireless adapters. The newest member of the Series2 family is the Series2 DT (Dual Tuner) TiVo box, which has a built-in Ethernet port, saving the average user the extra effort required to find a compatible adapter online. More details about which adapters the Series2 platform officially and unofficially supports are found later in this chapter. Starting with Series2, TiVo also started to manufacture and distribute TiVo boxes itself, although TiVo continued to partner with hardware manufacturers to manufacture and distribute their own Series2based hardware. As stated earlier, it can be difficult to know which version of TiVo platform you are using at first glance. The following table shows a list of currently released Series2 TiVo boxes to make it easier to distinguish if your TiVo box can support household networking features. Equipment Manufacturer\n\nManufacturer Model Number\n\nNetwork Support\n\nTiVo (also AT&T)\n\nTCDxxx\n\nYes\n\nHughes\n\nHR10\n\nYes\n\nHumax\n\nDRT-800xxx\n\nYes\n\nHumax\n\nT800\n\nYes\n\nHumax\n\nT2500\n\nYes\n\nPioneer\n\n810H or 57H\n\nYes\n\nPioneer\n\nDVR-xxx\n\nYes\n\nSony\n\nSVR-3000\n\nYes\n\nToshiba\n\nRS-TXxx\n\nYes\n\nToshiba\n\nSD-H400\n\nYes\n\nDirectTV Integrated TiVo (DirectTiVo) In 1999, TiVo announced a deal with DirectTV, which brought forth a new set of TiVo platform hardware that included an integrated satellite decoder that is also capable of recording two programs on separate channels at the same time. TiVo fans quickly nicknamed this hardware platform the DirectTiVo. Initial DirectTiVo models were based on the Series1 hardware platform, but TiVo updated the DirectTiVo platform to the Series2 hardware reference platform in 2002.\n\n15\n\nChapter 2 Whereas the DirectTiVo boxes based on the Series1 platform are unable to officially participate in household networks, the Series2-based hardware is capable of such tasks. Unfortunately for reasons that were never fully disclosed (many feel it was the possibility of the pristine digital content stored on the TiVo being easily shared over the Internet), TiVo was unable to convince DirectTV that household networking features were key for allowing DirectTV to expand its offering. As of this writing, DirectTiVo still relies on an internal modem and an analog telephone connection to acquire DirectTV’s program guide information and subscription status, even though the newer models include USB ports on the back of the box and technically could easily support being added to a household network. DirectTiVos have their own look and feel, including some buttons on the front bezel of the TiVo box that mimicked the main TiVo remote control buttons, allowing users to quickly interact with their TiVo boxes if they can’t easily find their remote. However, there is nothing stopping a DirectTV customer from using a standalone Series1 or standalone Series2 TiVo box in order to record their favorite shows. Because of this, it is possible that DirectTV subscribers could still be able to run HME applications on their standalone Series2 boxes. The following table is a matrix that calls out the DirectTV boxes specifically. Equipment Manufacturer\n\nManufacturer Model Number\n\nTiVo Hardware Platform\n\nNetwork Support\n\nHughes\n\nGXCEBOT\n\nSeries1\n\nNo\n\nPhilips\n\nDSR6xx\n\nSeries1\n\nNo\n\nSony\n\nSAT-T60\n\nSeries1\n\nNo\n\nHughes\n\nHDVRx\n\nSeries2\n\nNot yet\n\nHughes\n\nHR10-250\n\nSeries2\n\nNot yet\n\nHughes\n\nSD-DVRx\n\nSeries2\n\nNot yet\n\nPhilips\n\nDSR7xx\n\nSeries2\n\nNot yet\n\nRCA\n\nDVRxx\n\nSeries2\n\nNot yet\n\nSamsung\n\nSIR-Sxxxx\n\nSeries2\n\nNot yet\n\nSeries3 In January 2006 at the Consumer Electronics Show, TiVo announced that it was going to be allowing everyday cable customers to join the HD time shifting trend without being tied to the often lowerquality cable DVR offerings. The box hardware platform is called Series3 and it supports full dual-tuner HD recording, embracing the CableCard standard that allows any television device to directly accept cable signals that can be decoded directly on the box, removing the need to rent a digital decoder box from the cable company. In many ways this box is a grown-up version of the HD versions of DirectTiVo. However, because TiVo has full control over the hardware and software platform this time around, this box fully supports the TiVo household network features, and much like the Series2 DT, includes a full-speed Ethernet port on the back of the box to prove it.\n\n16\n\nGetting the TiVo Box Ready for HME At the time of this writing, there is only one model of the TiVo box that makes use of the Series3 hardware platform, sometimes referred to by TiVo as the TiVo HD. TiVo-branded Series3 DVRs are easily identifiable by the unique and stylish front bezel, which includes a beautiful OLED digital display that supplies the current status of the box. Equipment Manufacturer\n\nManufacturer Model Number\n\nNetwork Support\n\nTiVo\n\nTDC6xx\n\nYes\n\nActive TiVo Service Subscription In order to use any of the TiVo box household network features, you need to be sure that your TiVo has an active TiVo Plus service subscription. Some of the Series2 TiVo boxes manufactured and distributed through TiVo hardware partners bundled a level of subscription service called TiVo Basic. A TiVo Basic service subscription doesn’t require a user to pay any ongoing fees to TiVo to use the basic DVR functionality in the box, but only includes three days’ worth of electronic programming guide data, and strips away most of TiVo’s unique features, including the household networking features required to use HME-powered applications. Any customer that either has a Lifetime TiVo Service enabled on their Series2 or Series3 TiVo box, or is paying a yearly or monthly fee to use their TiVo box, has a TiVo Plus subscription and is free to make use of all of the services TiVo has to offer, including those provided by HME. A user can upgrade at any time to TiVo Plus service by contacting TiVo.\n\nChecking the Version of TiVo Software TiVo first enabled HME in version 7.1 of its TiVo box software platform, although in order to use any HME applications, you had to issue a backdoor code via your remote to the TiVo box. This was done mostly to allow developers to work on TiVo HME-based applications but keep the average TiVo user in the dark while they worked some of the major kinks out of the HME delivery system. HME was officially enabled in software version 7.2 for all active TiVo Plus service subscribers. It is fairly easy to see which version of software your TiVo box has running on it at the moment. On all software versions, the process starts by pressing the TiVo button on the remote control, which will bring you to the TiVo main menu titled “TiVo Central.” From the TiVo Central screen, navigate into “Messages & Settings” or “Messages & Setup,” then “Account and System Information” (some units will not have this screen based on their software version), and finally select “System Information.” From there, you will be able to see the software version information that is currently running on your TiVo box, as seen in Figure 2-1. If you have just acquired a Series2 TiVo box that has been sitting in a warehouse or bought at a garage sale, your TiVo box may very well have an older version of the software on the box. No need to fear however, because any TiVo that has an active service subscription will be upgraded to the latest software that TiVo has to offer once it connects to the TiVo servers.\n\n17\n\nChapter 2\n\nFigure 2-1\n\nUnfortunately in order to use most USB network adapters, you may need to wait for your TiVo box to download and install the latest software updates utilizing an analog telephone line and the built-in modem on the TiVo box. This process can take a while to finish, but once you are on the latest software build, every supported network adapter will work for you going forward. If your TiVo box’s service was just activated, it may take a few days in order for your update to happen automatically. You can, however, speed up the process by forcing your TiVo box to make a connection to the TiVo servers.\n\nForcing a Connection to the TiVo Service By default, the TiVo box will use either an available supported network adapter or the built-in analog telephone modem to connect back to the TiVo server farm automatically every day or two to collect updated guide data, get subscription status, and check for TiVo box software updates. You can force a connection to the TiVo servers at any time directly from within the menu system on your TiVo box. The process varies slightly based on the version of software currently running on the TiVo box:\n\n18\n\n❑\n\nSoftware versions 3.x: On the TiVo Central screen, navigate into “Messages & Setup,” then “Recorder & Phone Settings,” and finally select “Make Daily Call Now.”\n\n❑\n\nSoftware versions 4.x–7.1: On the TiVo Central screen, navigate into “Messages & Setup,” then “Settings,” then “Phone & Network Settings,” and finally select “Connect to TiVo Service Now.”\n\n❑\n\nSoftware version 7.2+: On the TiVo Central screen, navigate into “Messages & Setup,” then “Phone & Network,” and finally select “Connect to TiVo Service Now.”\n\nGetting the TiVo Box Ready for HME At the start of the connection process, a new screen appears that will show the progress of the connection. TiVo box software updates can be rather large compared to the relatively small amount of data that is downloaded during a normal call home. You can be pretty sure that you are receiving a software update if the progress screen stays on the downloading status indicator for a long period of time. When your TiVo box finds a software update, it will immediately download the update and queue it up to be automatically installed at 2:00 AM the following day. Once the connection to the TiVo service is complete, you will be brought back to the Phone and Network settings screen. If you see the Last Status area showing “Pending Restart,” your TiVo box has prepared itself to issue a system update and restart the following morning. There is no need to wait until the next day to start the update process. If you are pretty sure that your TiVo box is not set to record any new content in the next hour (time can vary based on the update), you can now gracefully restart the TiVo and kick off the software update right away. Again, this process varies slightly based on the version of software currently running on the TiVo box: ❑\n\nSoftware versions 3.x: On the TiVo Central screen, navigate into “Messages & Setup,” then “System Reset,” and finally select “Restart the Recorder.”\n\n❑\n\nSoftware versions 4.x-7.1: On the TiVo Central screen, navigate into “Messages & Setup,” then “Restart or Reset System,” and finally select “Restart the DVR.”\n\n❑\n\nSoftware version 7.2+: On the TiVo Central screen, navigate into “Messages & Setup,” then “Restart or Reset System,” and finally select “Restart the TiVo DVR.”\n\nThe TiVo software will bring up a screen that challenges you to press the Thumbs Down button three times and then the Enter button just to be sure you really want to restart the box. In general, restarting your TiVo box isn’t something that you need to be afraid of; however, carefully read the screens while selecting settings in the Restart and Reset System menu because you could accidentally select other menu items that will remove all of your season passes and recordings. Once the TiVo system update is complete, you will be greeted by the TiVo startup animation as well as a full-screen message that welcomes you to the new software update and explains any new features that may have been added.\n\nThe Household Network Now that your TiVo box is up and running with the latest software release, you are ready to go ahead and configure the TiVo to join your household network if it isn’t already. There are a few things that you need to be aware of in order to make sure that the TiVo box is able to participate with HME hosting environments whether they are server based, as TiVo’s applications are, or hosted on a personal computer within your household network. By default, the TiVo HME environment requires a broadband Internet connection to be available in order to work; with some wizardry you can override the sections of the existing HME SDK that require this, and you’ll learn more about that once you write a few apps of your own. Most households today have a network within their home in order to allow their computers to share the broadband Internet connection delivered from their cable or DSL provider. For those that do not have an\n\n19\n\nChapter 2 existing network, setting up one from scratch is rather simple and normally involves a quick trip to a local electronics store to pick up an inexpensive household router. There are some choices that need to be made along the way, as discussed next.\n\nWired vs. Wireless The first thing you will need to consider when getting your household network ready to accept your TiVo box is which method you will be using when you tie it to the household network. Though it may be difficult or unsightly to haul an Ethernet cable all the way from your router to the location of the TiVo box, a wired connection will be faster, less expensive, more secure, usually troublefree, and far easier to deploy. In our experience, wired adapters give the best HME experience and have the added benefit of increasing the download speed for TiVo2Go recordings. Wireless networks are invisible; however, they are far slower than a wired network, are usually more expensive, are often less secure (most people never bother to configure the security features on their wireless routers and even those that do are only slightly more secure than never configuring it in the first place), are plagued with signal loss issues depending on the environment that they are being deployed into, and tend to be a bit more tricky to configure and deploy. One other consideration: In the Fall 2006 Service Software Release, TiVo added support for Wi-Fi Protected Access (WPA) if you use the TiVo-branded wireless adapter, which is really the only secure way to protect the devices on a wireless network from intruders. If you do not have a TiVo-branded wireless adapter and have other wireless devices on your home network currently using WPA, you must disable it and use something less secure (like Wired Equivalency Privacy, or WEP) on all those devices in order to place your TiVo on that network. WEP really provides little or no actual protection; even 128-bit WEP is very easy for someone nearby your house to crack. Keep this in mind as you’re making your choice. The good news is that all current wireless routers also support wired connections as well, so even if you are only intending to deploy a wired network to the TiVo box, you may want to consider getting a wireless-enabled router, because the type of network adapters you decide to deploy within the home can easily change over time. You will need to weigh this decision based on security, the layout of your home, and the ability for you to easily snake wires between rooms if need be.\n\nNetwork Adapters You will find that potential customers of your HME applications will ask you for advice in getting their various TiVo boxes online. In reality, the reference hardware inside of most of the common network adapters today are shared across multiple vendors. Much like TiVo sells its reference platform to manufacturers to support TiVo DVR functions in their products, network adapters often share the same few chipset variants inside their branded case. To get a complete up-to-date listing of the exact version of wired network adapters that are known to work with the various hardware versions of the TiVo box, be sure to check TiVo’s web site at www.tivo.com/adapters.\n\nWired Adapters Any TiVo Series2 DT or Series3 box includes a wired Ethernet interface integrated into the back of the box, which of course is fully supported by the TiVo software. Following is a chart of the officially TiVocertified USB wired network adapters that work on all Series2 TiVo boxes. TiVo has been working hard\n\n20\n\nGetting the TiVo Box Ready for HME to expand its wired network adapter support, but it is still possible today to get an adapter that seems to work for some tasks but just can’t handle others tasks very well at all (Auto discovery is an example). Equipment Manufacturer\n\nManufacturer Model Number\n\nLinksys\n\nUSB200M Ver. 1\n\nLinksys\n\nUSB200M Ver. 2\n\nLinksys\n\n100TX\n\nWireless Adapters Depending on the manufacture run of the TiVo box that you own, choosing a wireless adapter can be a daunting experience. TiVo recognized this challenge and in January of 2006 released a TiVo-branded 802.11g wireless network adapter. Unlike normal USB wireless network adapters, this one has specialized firmware and chipset components that make this the most compatible and fastest wireless network adapter available for the TiVo hardware platform. In fall 2006, TiVo added support to its adapter for WPA security, offering better security on your wireless home network. We highly suggest that if you do need to have your TiVo box join a wireless network that you seek out the TiVo-branded adapter. Following is a table of the officially TiVo-certified USB wireless network adapters that work on all Series2 and Series3 TiVo boxes, along with the wireless standard in which they can connect. Equipment Manufacturer\n\nManufacturer Model Number\n\nWireless Standard\n\nD-Link\n\nDWL-120 Version E\n\n802.11b\n\nLinksys\n\nWUSB11 Version 2.6\n\n802.11b\n\nLinksys\n\nWUSB11 Version 2.8\n\n802.11b\n\nTiVo\n\nAG0100\n\n802.11g\n\nAdding TiVo Boxes to a Household Network TiVo has made it fairly easy to get your TiVo box online provided that you are running the latest versions of its software and have a compatible or built-in network adapter. It provides wizards that should walk you through the process of getting the router on your household network to welcome the TiVo box into its world. The following section describes how to find currently supported adapters and also goes over the steps required to activate the connection and configure any TCP/IP settings along the way.\n\nSetting up Wired Access Often the only step required to get a TiVo box online via a wired household network is to attach the network adapter to one of the TiVo box’s USB ports and connect the Ethernet cable between the router and the Ethernet port on the network adapter. The TiVo box will try its best to recognize the network it is connected to and be handed an IP address via DHCP by the router. If you do not have DHCP set up on the router, you will need to go into the TCP/IP settings menu on the TiVo box and configure your IP settings manually. You will walk through that later in this chapter, because the settings are the same for both wired and wireless adapters.\n\n21\n\nChapter 2 If you get stuck along the way, you can also check out TiVo’s extensive help on networking your TiVo at http://www.tivo.com/4.9.1.2.asp.\n\nSetting up Wireless Access In order to allow your TiVo box to find and attach itself to your wireless household network, you need to set a few configuration settings on the TiVo box itself. If you have not yet connected the USB wireless adapter, you should do that at this time. The following directions assume you are running on TiVo box software version 7.2 or higher. On the TiVo Central screen, navigate into “Messages & Setup,” then “Settings,” then “Phone and Network,” and finally select “Change Network Settings.” You will then be presented with a list of nearby wireless networks. Be careful to select only a network that you know is yours. The applications that you are creating with the TiVo HME SDK will rely on your personal computer and the TiVo box itself to co-exist inside of the same logical network. If WEP or WPA encryption is enabled on your wireless gateway, you will be asked to enter the secure network key. Choose the proper key method and use the TiVo remote control to enter the key. The TiVo box will try its best to recognize the network it is connected to and be handed an IP address via DHCP by the router. After you finish entering the wireless configuration settings, the TiVo box will then attempt a test connection to the Internet. If this test is successful, you will be prompted that network configuration has completed. You may otherwise be prompted to manually configure the IP address settings for your TiVo box. You walk through that in the next section, because the process for applying the changes will be the same for both wired and wireless adapters.\n\nTCP/IP Settings If you do not currently have DHCP enabled on your household network router, you need to tell the TiVo what settings it needs to connect to your network. Before you start, you should collect the appropriate IP address, subnet mask, router address, and DNS address. The following directions assume you are running on TiVo box software version 7.2 or higher. On the TiVo Central screen, navigate into “Messages & Setup,” then “Settings,” then “Phone and Network,” and finally select “Change Network Settings.” If you are connecting from a wireless adapter, you will see a few screens that go over your wireless network settings again. These settings should be remembered from your previous network configuration. Once you confirm the wireless network to join and enter any network security key you might need to access that network, you will then be brought to the IP address settings screen. The IP address settings screen will let you choose between getting your IP configuration settings via DHCP or allow you to enter specific IP address information for joining your household network. If in the future you decide to enable DHCP on your router, you can easily come back to this screen and reenable automatic IP configuration.\n\n22\n\nGetting the TiVo Box Ready for HME From the IP address screen, select the option to let you specify a static IP address. You will be greeted with a page reminding you to collect the appropriate IP network information needed to manually set up the network connection. Once you are sure you have all the needed information, press Select on the TiVo remote control to continue on. You will then be prompted to use the remote control buttons to enter an IP address. The TiVo box will then make a best guess for the rest of your configuration settings based on the IP address you entered. You can choose at that point to either accept the settings or enter the rest of the network information correctly yourself. After you have finished entering the IP information, the TiVo box will then attempt a test connection to the Internet. If this test is successful, you will be prompted that network configuration has completed. Again, if you have problems getting your TiVo connected to the network, see TiVo’s home networking help pages at http://www.tivo.com/4.9.1.2.asp. TiVo’s Customer Support can also help you out; you can find customer support contact information at http://www.tivo.com/5.9.4.asp.\n\nMusic, Photos, & More Once your TiVo box is connected to the Internet you will notice that a new menu appears on the TiVo Central screen called “Music, Photos, & More.” This is where all of TiVo’s network-powered applications live. By default, all network-enabled Series2 TiVo boxes have a few HME applications available to them, as shown in Figure 2-2, that are hosted directly from TiVo’s server farm over the Internet.\n\nFigure 2-2\n\n23\n\nChapter 2 Try It Out\n\nTiVo Server-Hosted HME Applications\n\nThis is a great opportunity to start a few of the applications that TiVo has created using the HME SDK and get a good idea of what the HME platform is capable of. ❑\n\nYahoo! Photos: View photos that are shared online through Yahoo! Accounts.\n\n❑\n\nYahoo! Weather: Check your local five-day weather forecast.\n\n❑\n\nYahoo! Traffic: Get updates on your local traffic patterns before heading out on a journey.\n\n❑\n\nBrowse & Buy Movie Tickets: Access Fandango to research and buy local movie passes.\n\n❑\n\nLive 365: Access a wide variety of Internet radio streams delivered directly to your TiVo box.\n\n❑\n\nPodcaster: Listen to the latest home-brew talk shows about the subjects you enjoy most.\n\n❑\n\nSameGame: Find connected orbs of like kind and clear the screen to achieve points.\n\n❑\n\nWordsmith: Build words with Scrabble-like tiles to spell your way to the high score.\n\n❑\n\nSkull & Bones: Connect Four, pirate style. Can be played alone or with two players.\n\nSummar y After reading through this chapter, you should now have a keen idea of what the prerequisites are for allowing your HME applications to run within the average household. When supporting your users, a few key concepts need to be kept in mind:\n\n24\n\n❑\n\nThe original TiVo box models, now referred to as Series1, do not officially support network connections, nor do they have the software needed to run TiVo HME applications.\n\n❑\n\nSecond-generation TiVo box models, referred to as Series2, were built with expandability in mind and have the ability to support network connections via external USB adapters.\n\n❑\n\nThe current generation of TiVo box hardware, referred to as Series2 DT (Dual Tuner) and Series3, have built-in Ethernet ports allowing users to connect to networks without the need to bother with external adapters.\n\n❑\n\nDirectTV-enabled Series2 TiVo box models, referred to as DirectTiVo, have USB ports that are currently software disabled due to a decision made by DirectTV. It is unclear if network-based applications will ever be allowed to run on DirectTiVo boxes.\n\n❑\n\nTiVo HME was made active for all TiVo Plus and Lifetime subscribers in version 7.2 of their system software. Active TiVo subscribers are always updated to the latest and greatest TiVo box software platform when their unit makes its daily calls home.\n\n❑\n\nAs TiVo updates, the supported network adapters that can be connected over USB new drivers are added as part of the software update. You can see if you have a supported adapter at http://www.tivo.com/adapters.\n\nGetting the TiVo Box Ready for HME\n\nQuestions 1.\n\nWhat TiVo hardware reference platforms can network-enabled applications run on? Are there any exceptions to this rule?\n\n2. 3.\n\nWhich levels of TiVo service support TiVo network-enabled applications? Which menu item within the TiVo must users go to in order to launch network-enabled applications?\n\n25\n\n3 Your Development Environment A well-tuned development environment is to a programmer what sharp tools are to a sculptor. Setting up a development environment that is flexible and efficient is one of the single most important steps a programmer can take toward being productive and producing high-quality work. This chapter covers setting up the TiVo HME SDK in your development environment and usage of common development tools in Java such as Ant and Eclipse. Though it is certainly not required to use an integrated development environment (IDE) like Eclipse, it definitely helps the developer overcome more mundane problems that can make learning a new technology much more difficult. By the end of this chapter, you will: ❑\n\nHave the required software in order to use the TiVo HME SDK\n\n❑\n\nKnow the main libraries of the HME SDK\n\n❑\n\nBe able to use the HME SDK in Eclipse\n\n❑\n\nBe able to use the HME Simulator to test HME applications\n\nRequired Software In order to develop software using the TiVo HME SDK, you need some additional software along with the SDK to get started. At minimum, you need a Java SDK installed and a text editor to write your code.\n\nChapter 3\n\nJava SDK First, to develop Java software, you need to make sure you have a current version of the Java SDK installed.\n\nWindows To check to see if you have a Java SDK installed, open a command-line window in Windows. At the DOS prompt, type the following: C:\\> javac ‘javac’ is not recognized as an internal or external command, operable program or batch file.\n\nIf the preceding output is shown, you can download a Java SDK at http://java.sun.com/downloads/. Output such as C:\\ >javac -version javac 1.5.0_06 javac: no source files Usage: javac where possible options include: -g Generate all debugging info -g:none Generate no debugging info -g:{lines,vars,source} Generate only some debugging info -nowarn Generate no warnings -verbose Output messages about what the compiler is doing -deprecation Output source locations where deprecated APIs are u sed -classpath Specify where to find user class files -cp Specify where to find user class files -sourcepath Specify where to find input source files -bootclasspath Override location of bootstrap class files -extdirs Override location of installed extensions -endorseddirs Override location of endorsed standards path -d Specify where to place generated class files -encoding Specify character encoding used by source files -source Provide source compatibility with specified release -target Generate class files for specific VM version -version Version information -help Print a synopsis of standard options -X Print a synopsis of nonstandard options -J Pass directly to the runtime system\n\nwould indicate the Java SDK is already installed. The JDK 1.4.1 is the minimum required for the TiVo HME SDK and any version greater than 1.4.1 should work. The latest Java SDK at the time of writing this book is 1.5.0 release 7.\n\n28\n\nYour Development Environment Mac OS X Apple packages Mac OS X with the latest version of Java available at the time of release, so the newest Macs that ship with OS X 10.4 come with Java 1.5.0. Previous versions of Mac OS X may not have the most recent version of the Java SDK. Normally Java updates can be installed using Software Update (available from the Apple menu) or by downloading and installing the update manually from http://www.apple.com/support/downloads/ (search for Java). You can check to see which version of Java is installed on your system by opening the Terminal application (located in the Utilities folder inside the Applications folder) and running the following: $ javac -version javac 1.5.0_06 javac: no source files Usage: javac where possible options include: -g Generate all debugging info -g:none Generate no debugging info -g:{lines,vars,source} Generate only some debugging info -nowarn Generate no warnings -verbose Output messages about what the compiler is doing -deprecation Output source locations where deprecated APIs are used -classpath Specify where to find user class files -cp Specify where to find user class files -sourcepath Specify where to find input source files -bootclasspath Override location of bootstrap class files -extdirs Override location of installed extensions -endorseddirs Override location of endorsed standards path -d Specify where to place generated class files -encoding Specify character encoding used by source files -source Provide source compatibility with specified release -target Generate class files for specific VM version -version Version information -help Print a synopsis of standard options -X Print a synopsis of nonstandard options -J Pass directly to the runtime system\n\nThe first few lines of output will indicate the Java version installed on your system.\n\nLinux and Unix The HME SDK is written entirely in Java, so it will run on any platform that supports at least the Java SDK 1.4 or better. Java SDKs can be downloaded for other operating systems from Sun’s web site, found at http://java.sun.com.\n\n29\n\nChapter 3\n\nText Editor Which text editor you use to edit Java code does not really matter, only that you are comfortable using it. There are text editors that specialize in editing Java code and may make the work easier. JEdit is a text editor that is designed for editing Java code. It is available for download at http://www.jedit.org/. Text editors such as TextMate for Mac OS X or Notepad++ for Windows are other powerful text editors. For development, we generally use the Eclipse IDE, which provides a text editor as well as many other conveniences for coding in Java.\n\nGetting the TiVo HME SDK The TiVo HME SDK is available for download from http://www.tivo.com/developer/. The core of the TiVo HME SDK is at version 1.4.0 at the time of writing. After downloading the ZIP file containing the TiVo HME SDK, unzip the file somewhere on your machine where you wish to store the SDK.\n\nExploring the SDK The unzipped folder hme_sdk_1.4 contains several files and folders: ❑\n\ndoc\n\n❑\n\nhme-host-sample.jar\n\n❑\n\nhme.jar\n\n❑\n\nimages\n\n❑\n\nLICENSE-CPL.html\n\n❑\n\nLICENSE-LGPL.txt\n\n❑\n\nREADME.html\n\n❑\n\nsamples\n\n❑\n\nsimulator.jar\n\n❑\n\nsrc.zip\n\nThe doc folder contains the documentation for the SDK, including a ZIP file of the Javadoc and hmedevguide.pdf, which is an overview of the SDK. The Javadoc is certainly documentation that you will frequently want to refer to when writing applications. It provides an explanation of the objects and methods that make up the SDK, and is frequently a great way to discover new methods and ways to do new things with your code.\n\n30\n\nYour Development Environment The two jar files, hme-host-sample.jar and hme.jar, are the libraries that you will include when building your application. These jar (Java Archives) files contain the HME objects that you will use throughout the book.\n\nClasspath This section is only necessary if you’ll be using the HME SDK from the command line. If you intend to use Eclipse for your development, you can skip this section. CLASSPATH is the system variable that Java uses to determine where to search for libraries that are needed to run programs. It also can tell Java where to load resources such as images from.\n\nTo use the HME SDK at the command line, you will need to add the two previously mentioned jars to the CLASSPATH. In Mac OS X and Linux, at the command-line prompt, you would run export CLASSPATH=$CLASSPATH:/hme.jar:/hme-host-sample.jar\n\nIf you are running the bash shell or if you are using tcsh, type: set CLASSPATH $CLASSPATH:/hme.jar:/hme-host-sample.jar\n\nOn Windows, type: set CLASSPATH=%CLASSPATH%;\\hme.jar;\\hme-host-sample.jar\n\nTo set these variables for every command line: Linux or Mac OS X users: The preceding lines should go in your .bashrc or .tschrc file inside your home directory. Windows users:\n\n1. 2. 3. 4.\n\nRight-click My Computer and select Properties. Select the Advanced tab. Select Environment Variables. Edit the CLASSPATH variable as shown in Figure 3-1.\n\n31\n\nChapter 3\n\nFigure 3-1\n\nRecommended Software There is a vast amount of Java software available, some of which has become a de-facto standard either for certain aspects of developing software in Java, such as Log4j, or for compiling and building Java software, such as Ant and maven. Though our focus is mainly on coding TiVo HME applications, frequently figuring out either the ancillary aspects of an application (such as logging) or an efficient build process can impede development. With that in mind, here are a few recommended software libraries and tools that make Java development easier.\n\nAnt Ant is a build tool that compiles Java code into an executable. Though this sounds trivial for a few files, when building a large project, it can make the difference between a ten-minute build and a two-hour\n\n32\n\nYour Development Environment build. Ant is available at http://ant.apache.org/, and is installed on Mac OS X in /Developer/ Java/Ant/bin/ant. Ant uses a file called build.xml to determine dependencies of files and tasks. If you’re using an IDE such as Eclipse or NetBeans, it is normally not necessary to learn Ant or create build scripts — the IDE will do it for you.\n\nLog4j Logging errors and debug information from a running application is a task just about every application, large or small, must implement. Log4j has become the de-facto standard in this area, and is widely used by Java developers. As of the 1.4 version of the SDK, TiVo includes its own logging facility, and Java also has its own built-in logging. Which logging approach you take depends on how extensive your logging needs are, and how many third-party Java libraries you’re willing to include with your application.\n\nJDIC JDIC stands for Java Desktop Integration Components. The JDIC library makes integration with desktop systems, particularly on Windows, more complete, allowing access to additional Windows integration not possible using Java alone. The features of the library include the ability to put icons in the System Tray, access System Information, launch Browser windows, and other features that you can use to make your application have the look and feel of a native program.\n\nJUnit This tool has become a standard in unit testing code. If you have never heard of it before, and are serious about writing and testing your code, you should check it out. It can change the way you write and develop applications. Eclipse provides built-in support for creating and running JUnit tests.\n\nSubversion Subversion is a version control system that can be used from the command line and integrates nicely with Eclipse. With more than one person working on an application, version control is practically a must. Even with one developer, keeping track of past changes to the code and version is a powerful tool in determining when a bug was introduced.\n\nSetting up Eclipse There are several integrated development environments (IDE) that are widely used in the Java community: Eclipse, NetBeans, IDEA, and JBuilder. The last two are commercial applications, whereas Eclipse and NetBeans are available for free. Developing code in an IDE can greatly increase your productivity and visibility into the code you are writing. Some would argue that the IDE can hide too much in an effort to make coding simpler, but the debugging environment Eclipse provides, as well as the convenience functions, really provide better visibility into what your application is doing, and how it is structured.\n\n33\n\nChapter 3\n\nInstallation You can download Eclipse from http://www.eclipse.org/downloads/. Look for the “Eclipse SDK” (also called the “Eclipse Platform/SDK”). The package for Eclipse consists of a ZIP file. There is no installer, so you can simply place Eclipse on your system wherever it is most appropriate. On Windows, this would likely be Program Files, and on Macintosh, the Applications Folder. Presently, the current version of Eclipse is 3.2. Any explanations of how Eclipse works should be the same for versions 3.0 through 3.2, if you are running an older version already.\n\nRunning Eclipse To start Eclipse, double-click the Eclipse icon inside the eclipse folder that you unpacked during installation. When Eclipse is done loading, a screen similar to Figure 3-2 should be displayed.\n\nFigure 3-2\n\n34\n\nYour Development Environment If you have any problems starting Eclipse at this stage, make sure you have a Java SDK installed on your system, as discussed earlier in the chapter. Additional information on getting help is available at http:// help.eclipse.org/. In this book, all of the Eclipse screen shots are shown using the Mac version of Eclipse. If you’re a Windows programmer, the commands will be the same unless otherwise noted.\n\nStarting a New Project From the File menu, select New, then Project, as shown in Figure 3-3. If you’re prompted for a project type, select Java Project and click Next.\n\nFigure 3-3\n\n35\n\nChapter 3 The wizard will prompt you for a name for the project. Fill in a name (for example, “TiVoHME_Test”) and click Next. The “Create new project in workspace,” “Use default JRE” (in Windows this option is “Use default compiler compliance”), and “Use project folder as root for sources and class files” radio buttons are selected below the application name. Click Next. On the next screen, the wizard presents you with some of the default values for the project. This tab describes the layout of your project, the files that will be part of the project, and the libraries that will be used as part of the project. All this information can be edited after the project is created, but if you know what libraries are going to be used, this is a convenient place to add them while creating the project. In your case, you know you will be using the TiVO HME SDK libraries, so they should be added on this screen. Click the Libraries tab as shown in Figure 3-4.\n\nFigure 3-4\n\n36\n\nYour Development Environment From the Libraries tab, click the Add External Jars... button on the right to locate the TiVo HME SDK Jars. The two jars from the SDK that you need to build an HME application are hme-host-sample.jar and hme.jar (Figure 3-5). After adding the jars, they should both show up in the Libraries list (Figure 3-6).\n\nFigure 3-5\n\n37\n\nChapter 3\n\nFigure 3-6\n\nClick Finish to complete the wizard. At this point, if you still see the “Welcome” screen, close it by clicking the little X next to the word “Welcome” on the tab. This displays the default Java development perspective (Figure 3-7). (A “perspective” in Eclipse terminology is a particular layout of windows that contain common things you’ll need. For example, the Java perspective contains windows such as the package explorer, editor, problems list, and outline.)\n\n38\n\nYour Development Environment\n\nFigure 3-7\n\nRunning the Sample Applications Along with the HME SDK, TiVo provides sample applications that demonstrate the capabilities of HME programming. The example applications can be run as they are provided in the SDK, and will give you a good idea of the functionality that you will be using in your applications.\n\n39\n\nChapter 3\n\nStarting the Applications TiVo provides a script file, runsamples.sh, for Mac OS X or Linux, and runsamples.bat for Windows. It is part of the SDK and located in the samples directory. Run the script from the Terminal in Mac OS X, command prompt in Linux, or DOS prompt in Windows. The output should resemble the following: /Applications/Java/hme_sdk_1.4 $ cd samples/ /Applications/Java/hme_sdk_1.4/samples $ ls build.xml launcher.txt music pictures runsamples.sh samples.jar src /Applications/Java/hme_sdk_1.4/samples $ ./runsamples.sh HME SDK 1.4 (TiVo, Inc.) ADDING: pictures/sample1.jpg ADDING: pictures/sample2.jpg ADDING: pictures/sample3.jpg ADDING: pictures/sample4.jpg ADDING: pictures/sample5.jpg ADDING: pictures/sample6.jpg ADDING: pictures/sample7.jpg ADDED: cell1.mp3 ADDED: sample.mp3 . . . MDNS: http://10.37.129.2:7288/animate/ de Volkskrant, 15 articles SLEEPING MDNS: http://10.37.129.2:7288/clock/ MDNS: http://10.37.129.2:7288/fractal/ MDNS: http://10.37.129.2:7288/hello/ MDNS: http://10.37.129.2:7288/pictures/ MDNS: http://10.37.129.2:7288/music/ MDNS: http://10.37.129.2:7288/weather/ MDNS: http://10.37.129.2:7288/skullbones/ MDNS: http://10.37.129.2:7288/videobackground/ MDNS: http://10.37.129.2:7288/effects/ MDNS: http://10.37.129.2:7288/tictactoe/ MDNS: http://10.37.129.2:7288/fontinfo/ MDNS: http://10.37.129.2:7288/rss/ MDNS: http://10.37.129.2:7288/transition/\n\nrunsamples.bat\n\nSome of the text in the middle of the output was removed because it is not relevant. The MDNS lines near the bottom of the output indicate that the application is broadcasting its location to the TiVo boxes on the network, and the URL that follows the “MDNS:” indicates the location that the TiVo box should connect to the application.\n\n40\n\nYour Development Environment Examining the runsamples script, you see: java -cp ../hme-host-sample.jar:samples.jar \\ com.tivo.hme.host.sample.Main \\ --launcher launcher.txt\n\nNote: the preceding line was split for easier reading, but in the runsamples script, it is a single line. This makes use of one of the built-in classes in the SDK, com.tivo.hme.host.sample.Main, to start the applications. When the argument --launcher is passed to this program, it will search the test file for a list of applications to launch. The samples launch several applications, as you can see from the multiple MDNS: lines listed in the output. The samples.jar file, which is included in this command line, is where the sample applications are stored.\n\nTry It Out\n\nRun the Sample Applications on your TiVo\n\nAfter you run the runsamples.sh or runsamples.bat file in the SDK, the applications will show up in your Music, Photos, Products, & More... menu on the TiVo. To use one of the applications, highlight it and press select or the right directional key. If this is the first time you have used an HME application, the TiVo will prompt you to enable local HME application access before you can continue. Follow the onscreen instructions to enable HME application access. If you don’t see the sample applications listed, you might try changing the settings of your computer’s firewall. Try disabling it temporarily to see if this is the cause of your problem. Another symptom of a firewall-related issue is when you can see the applications listed, but when you try to select one, you get a “Please Wait...” message for several minutes and eventually get an error message.\n\nUsing the Sample Applications in Eclipse When first starting Eclipse, it prompts for a workspace. The workspace is simply a directory on your system that contains all of your Eclipse projects. The location of the workspace is also the title of the window shown when Eclipse is running. When first setting up Eclipse earlier in the chapter, one of the steps was to create a new project. Now Eclipse should list that project when opened. You will use this project to import the sample applications and run them under Eclipse. In the directory where the HME SDK is unzipped, there will be a directory called samples. Inside this directory is another directory named src. The src directory contains all the files used to run the sample applications, and the files inside src are the ones that need to be imported into Eclipse.\n\n41\n\nChapter 3 To import the files, drag the com directory onto the project name in Eclipse. Eclipse will copy the files into the project and organize them correctly (Figure 3-8).\n\nFigure 3-8\n\n42\n\nYour Development Environment After Eclipse has processed the import, your Eclipse workspace should show all the files for the samples, as shown in Figure 3-9.\n\nFigure 3-9\n\n43\n\nChapter 3 Try It Out Running the Clock Program from Eclipse 1. From the Run menu, select Run.... 2. Select Java Application in the options on the left and click the new icon near the top of the options (it has a document with a + on it). (On Windows, click the New button at the bottom left.)\n\n3.\n\nOn the Main tab, enter the main class name as com.tivo.hme.host.sample.Main. This is the same class that the runsamples script uses to start the application; it is the host environment for all TiVo HME applications, and will normally be the main class that will start up your application.\n\n4.\n\nOn the Arguments tab, in the Program Arguments box, type com.tivo.hme.samples.clock.Clock. This is the program you want to run. Just like the runsamples script, you need to provide the name of the application for the HME host environment to run.\n\n5. 6.\n\nClick Apply and then Run. You should now see the Clock application on your TiVo box’s Music, Photos, Products, & More menu.\n\nNote that if you have more than one network interface enabled on your PC (for example, wireless and wired) or virtual interfaces that are sometimes installed by VMWare and other virtual server software, you may need to specify the network interface to use manually. If this is the case, after com.tivo.hme.samples.clock.Clock, enter --intf . For instance, --intf en1 will specify the wireless network interface instead of the wired one on a Mac OS X system. You can stop the application by clicking the Terminate button (look for a red square near the lower right in Eclipse).\n\nHow it Works Running through the preceding steps will run the application just like the run_samples script, but instead of running at the command line, the HME application is actually running inside Eclipse. Running the application inside Eclipse is more convenient for quickly running applications that you are writing. Applications compiled and run from inside Eclipse can also be debugged inside Eclipse. That is, you can set points at which the application will pause, so you can examine the current state of the application, and you can run line by line through the code.\n\nThe HME Simulator The HME Simulator is included in the HME SDK in the simulator.jar file. You can run this from the command line by typing: java -jar simulator.jar\n\nThe Simulator will open a window that can be used to run and test TiVo HME applications without running the application on a TiVo box. The first time you run the Simulator, it may be necessary to select the Network menu and choose the network interface that’s on your home network.\n\n44\n\nYour Development Environment If you run the sample applications again (using the runsamples script) after starting the Simulator, you see that the sample applications appear on the Applications menu. From this menu, you can choose an application and run it in the Simulator just as you would on the TiVo box (Figure 3-10).\n\nFigure 3-10\n\nThe Simulator command line can also take arguments to direct it to run an application without having to select the application. This mode is particularly useful when debugging applications. Command-Line Option\n\nDescription\n\n-d\n\nTurn on debugging.\n\n-mute\n\nDisable sound.\n\n-s\n\nDisable application discovery using mdns.\n\nurl or class\n\nWhen started with a url, the Simulator will connect to that url at startup. If the first argument is not a url, the Simulator will pass all arguments to a Factory and connect to it.\n\n45\n\nChapter 3 You can simulate TiVo remote control commands in the Simulator by using keyboard keys. For a list of these, select Help ➪ Keyboard Shortcuts in the Simulator.\n\nLimitations of the Simulator Although the Simulator application is great for testing functionality of an application, there are areas in which the Simulator may give misleading results. For instance, the Simulator doesn’t have the resource limitations that the normal TiVo box would. In fact, because the Simulator is running on your computer, it has access to all the resources available on your machine. How does this affect the application? The most common problem you can run into is using too many graphics or too much animation. These may work great in the Simulator, but when running on a TiVo box, the resource limitations prevent different graphics in your interface from being displayed, or the time it takes to send information over the network to the TiVo box can affect the performance of your application. The Simulator also cannot display MPEGs the same way that the TiVo box can. Single-frame MPEGs can be used as a background image, primarily to save graphics memory on the TiVo box for image elements in an application’s interface. Because the Simulator does not have access to the MPEG background layer, only image backgrounds can be displayed. In short, the HME Simulator is great for quickly testing an application or for testing when you don’t have access to a TiVo box, but because of the need to accurately test the effects of communicating over a network and appropriately size graphic elements to manage the limited graphic resources on the TiVo effectively, it shouldn’t be the only thing relied on to test an application.\n\nSummar y After this chapter, you should be familiar with how to run TiVo HME applications, and how to access them both through the TiVo box and from the Simulator application. Th"
    }
}