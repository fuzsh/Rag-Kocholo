{
    "id": "dbpedia_8509_3",
    "rank": 21,
    "data": {
        "url": "https://xmpp.org/extensions/xep-0030.html",
        "read_more_link": "",
        "language": "en",
        "title": "XEP-0030: Service Discovery",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Joe Hildebrand",
            "Peter Millard",
            "Ryan Eatmon",
            "Peter Saint-Andre"
        ],
        "publish_date": "2024-04-30T00:00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Document Lifecycle\n\nExperimental\n\nProposed\n\nStable\n\nFinal\n\n1. IntroductionÂ¶\n\nThe ability to discover information about entities on the Jabber network is extremely valuable. Such information might include features offered or protocols supported by the entity, the entity's type or identity, and additional entities that are associated with the original entity in some way (often thought of as \"children\" of the \"parent\" entity). While mechanisms for doing so are not defined in XMPP Core [1], several protocols have been used in the past within the Jabber community for service discovery, specifically Jabber Browsing (XEP-0011) [2] and Agent Information (XEP-0094) [3]. However, those protocols are perceived to be inadequate for several reasons:\n\nNeither Jabber Browsing nor Agent Information is easily extensible. For example, the categories and subcategories listed for JID-Types in XEP-0011 are explicitly defined as the only official categories, and any additions to the list of JID-Types would require a modification to XEP-0011. While the Jabber Browsing specification does allow for the use of unofficial categories and types prefixed with the string 'x-', this introduces migration issues. This lack of flexibility violates one of the Jabber community's core XMPP Design Guidelines (XEP-0134) [4].\n\nIn Agent Information, there is no way to advertise supported features. While Jabber Browsing includes such a mechanism, the only way to express the availability of a feature is to advertise a supported protocol namespace. Yet some features may not be uniquely associated with a protocol namespace, which are one implementation of features but not the only one.\n\nA Jabber Browsing result returns a combination of (1) namespaces supported by a Jabber Entity, (2) items associated with a Jabber Entity, and (3) namespaces supported by the associated items. This approach mixes information levels and requires parents to know everything about child nodes, thereby introducing significant confusion.\n\nIn both Jabber Browsing and Agent Information, items must be addressable as JIDs; however, this may not be possible in some applications.\n\nThis document addresses the perceived weaknesses of both the Jabber Browsing and Agent Information protocols. The result is a standards-track protocol for service discovery (often abbreviated to \"disco\", as is familiar in protocols such as SOAP [5]).\n\n2. RequirementsÂ¶\n\nThe authors have designed the service discovery protocol with the following requirements in mind:\n\nThe protocol MUST support all functionality supported by the protocols it supersedes (Jabber Browsing and Agent Information).\n\nThere are three kinds of information that need to be discovered about an entity:\n\nits basic identity (type and/or category)\n\nthe features it offers and protocols it supports\n\nany additional items associated with the entity, whether or not they are addressable as JIDs\n\nAll three MUST be supported, but the first two kinds of information relate to the entity itself whereas the third kind of information relates to items associated with the entity itself; therefore two different query types are needed.\n\nDiscovering information about a child item MUST be accomplished by sending a separate discovery request to that item, not to the parent entity. (One result of this is that discovering complete information about an entire tree will require multiple request/response pairs in order to \"walk the tree\".)\n\nThe lists of identities and features MUST be flexible.\n\nThe protocol itself MUST be extensible.\n\n3. Discovering Information About a Jabber EntityÂ¶\n\n4. Discovering the Items Associated with a Jabber EntityÂ¶\n\n5. Publishing Available ItemsÂ¶\n\nThis feature has been removed in favor of the XMPP publish-subscribe technology defined in XEP-0060.\n\n6. Implementation NotesÂ¶\n\n7. Error ConditionsÂ¶\n\nIf a specific entity (JID or JID+node) does not support the disco namespace, refuses to return disco results to the specific requesting entity, or refuses to return disco results to any requesting entity, it SHOULD return an appropriate error message (such as <service-unavailable/>, <forbidden/>, or <not-allowed/>, respectively). One example is shown below.\n\nOther error conditions may be appropriate depending on the application.\n\nThe following table summarizes the common error conditions that can have special meaning in the context of Service Discovery (for information regarding error condition syntax and semantics, see Error Condition Mappings (XEP-0086) [12]).\n\nThe other error conditions specified in XMPP Core MAY be returned as well (<forbidden/>, <not-allowed/>, <not-authorized/>, etc.), including application-specific conditions.\n\nAs noted above, if an entity has no associated items, it MUST return an empty <query/> element (rather than an error) in response to a disco#items request.\n\n8. Security ConsiderationsÂ¶\n\nCertain attacks may be made easier when an entity discloses (via disco#info responses) that it supports particular protocols or features; however, in general, service discovery introduces no new vulnerabilities, since a malicious entity could discover that the responding entity supports such protocols and features by sending requests specific to those protocols rather than by sending service discovery requests.\n\nA responding entity is under no obligation to return the identical service discovery response when replying to service discovery requests received from different requesting entities, and MAY perform authorization checks before responding in order to determine how (or whether) to respond.\n\nA server MUST carefully control access to any functionality that would enable directory harvesting attacks or that would leak information about connected or available resources; this functionality consists of the server's replies to disco#info and disco#items requests sent to bare JIDs (addresses of the form account@domain.tld) hosted on the server, since the server responds to such requests on behalf of the account. The following rules apply to the handling of service discovery requests sent to bare JIDs:\n\nIn response to a disco#info request, the server MUST return a <service-unavailable/> error if one of the following is true:\n\nThe target entity does not exist (no matter if the request specifies a node or not).\n\nThe requesting entity is not authorized to receive presence from the target entity (i.e., via the target having a presence subscription to the requesting entity of type \"both\" or \"from\") or is not otherwise trusted (e.g., another server in a trusted network).\n\nIn response to a disco#items request, the server MUST return an empty result set if:\n\nThe target entity does not exist (no matter if the request specifies a node or not).\n\nThe request did not specify a node, the only items are available resources (as defined in RFC 3921), and the requesting entity is not authorized to receive presence from the target entity (i.e., via the target having a presence subscription to the requesting entity of type \"both\" or \"from\") or is not otherwise trusted (e.g., another server in a trusted network). [13]\n\n9. IANA ConsiderationsÂ¶\n\nThis document requires no interaction with the Internet Assigned Numbers Authority (IANA) [14].\n\n10. XMPP Registrar ConsiderationsÂ¶\n\n11. XML SchemasÂ¶\n\n12. Author NoteÂ¶\n\nPeter Millard, a co-author of this specification from version 0.1 through version 2.2, died on April 26, 2006.\n\nAppendices\n\nAppendix A: Document InformationÂ¶\n\nSeries\n\nXEP\n\nNumber\n\n0030\n\nPublisher\n\nXMPP Standards Foundation\n\nStatus\n\nFinal\n\nType\n\nStandards Track\n\nVersion\n\n2.5.0\n\nLast Updated\n\n2024-04-30\n\nApproving Body\n\nXMPP Council\n\nDependencies\n\nXMPP Core\n\nSupersedes\n\nXEP-0011, XEP-0094\n\nSuperseded By\n\nNone\n\nShort Name\n\ndisco\n\nSchema\n\nXML Schema for the 'http://jabber.org/protocol/disco#info' namespace: <http://www.xmpp.org/schemas/disco-info.xsd>\n\nXML Schema for the 'http://jabber.org/protocol/disco#items' namespace: <http://www.xmpp.org/schemas/disco-items.xsd>\n\nRegistry\n\n<https://xmpp.org/registrar/disco.html>\n\nSource Control\n\nHTML\n\nThis document in other formats: XMLÂ PDF\n\nAppendix B: Author InformationÂ¶\n\nJoe Hildebrand\n\nEmail\n\njhildebr@cisco.com\n\nJabberID\n\nhildjj@jabber.org\n\nPeter Millard\n\nSee Author Note\n\nRyan Eatmon\n\nEmail\n\nreatmon@jabber.org\n\nJabberID\n\nreatmon@jabber.org\n\nPeter Saint-Andre\n\nEmail\n\nstpeter@stpeter.im\n\nJabberID\n\nstpeter@jabber.org\n\nURI\n\nhttps://stpeter.im/\n\nAppendix C: Legal NoticesÂ¶\n\nCopyright\n\nThis XMPP Extension Protocol is copyright Â© 1999 â 2024 by the XMPP Standards Foundation (XSF).\n\nPermissions\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this specification (the \"Specification\"), to make use of the Specification without restriction, including without limitation the rights to implement the Specification in a software program, deploy the Specification in a network service, and copy, modify, merge, publish, translate, distribute, sublicense, or sell copies of the Specification, and to permit persons to whom the Specification is furnished to do so, subject to the condition that the foregoing copyright notice and this permission notice shall be included in all copies or substantial portions of the Specification. Unless separate permission is granted, modified works that are redistributed shall not contain misleading information regarding the authors, title, number, or publisher of the Specification, and shall not claim endorsement of the modified works by the authors, any organization or project to which the authors belong, or the XMPP Standards Foundation.\n\nDisclaimer of Warranty\n\n## NOTE WELL: This Specification is provided on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. ##\n\nLimitation of Liability\n\nIn no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall the XMPP Standards Foundation or any author of this Specification be liable for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising from, out of, or in connection with the Specification or the implementation, deployment, or other use of the Specification (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if the XMPP Standards Foundation or such author has been advised of the possibility of such damages.\n\nIPR Conformance\n\nThis XMPP Extension Protocol has been contributed in full conformance with the XSF's Intellectual Property Rights Policy (a copy of which can be found at <https://xmpp.org/about/xsf/ipr-policy> or obtained by writing to XMPP Standards Foundation, P.O. Box 787, Parker, CO 80134 USA).\n\nVisual Presentation\n\nThe HTML representation (you are looking at) is maintained by the XSF. It is based on the YAML CSS Framework, which is licensed under the terms of the CC-BY-SA 2.0 license.\n\nAppendix D: Relation to XMPPÂ¶\n\nThe Extensible Messaging and Presence Protocol (XMPP) is defined in the XMPP Core (RFC 6120) and XMPP IM (RFC 6121) specifications contributed by the XMPP Standards Foundation to the Internet Standards Process, which is managed by the Internet Engineering Task Force in accordance with RFC 2026. Any protocol defined in this document has been developed outside the Internet Standards Process and is to be understood as an extension to XMPP rather than as an evolution, development, or modification of XMPP itself.\n\nAppendix E: Discussion VenueÂ¶\n\nThe primary venue for discussion of XMPP Extension Protocols is the <standards@xmpp.org> discussion list.\n\nDiscussion on other xmpp.org discussion lists might also be appropriate; see <https://xmpp.org/community/> for a complete list.\n\nErrata can be sent to <editor@xmpp.org>.\n\nAppendix F: Requirements ConformanceÂ¶\n\nThe following requirements keywords as used in this document are to be interpreted as described in RFC 2119: \"MUST\", \"SHALL\", \"REQUIRED\"; \"MUST NOT\", \"SHALL NOT\"; \"SHOULD\", \"RECOMMENDED\"; \"SHOULD NOT\", \"NOT RECOMMENDED\"; \"MAY\", \"OPTIONAL\".\n\nAppendix G: NotesÂ¶\n\n1. RFC 6120: Extensible Messaging and Presence Protocol (XMPP): Core <http://tools.ietf.org/html/rfc6120>.\n\n2. XEP-0011: Jabber Browsing <https://xmpp.org/extensions/xep-0011.html>.\n\n3. XEP-0094: Agent Information <https://xmpp.org/extensions/xep-0094.html>.\n\n4. XEP-0134: XMPP Design Guidelines <https://xmpp.org/extensions/xep-0134.html>.\n\n5. SOAP <http://www.w3.org/TR/SOAP/>.\n\n6. RFC 6121: Extensible Messaging and Presence Protocol (XMPP): Instant Messaging and Presence <http://tools.ietf.org/html/rfc6121>.\n\n7. XEP-0013: Flexible Offline Message Retrieval <https://xmpp.org/extensions/xep-0013.html>.\n\n8. XEP-0060: Publish-Subscribe <https://xmpp.org/extensions/xep-0060.html>.\n\n9. XEP-0118: User Tune <https://xmpp.org/extensions/xep-0118.html>.\n\n10. XEP-0115: Entity Capabilities <https://xmpp.org/extensions/xep-0115.html>.\n\n11. XEP-0055: Jabber Search <https://xmpp.org/extensions/xep-0055.html>.\n\n12. XEP-0086: Error Condition Mappings <https://xmpp.org/extensions/xep-0086.html>.\n\n13. However, the server MAY return items other than available resources (if any).\n\n14. The Internet Assigned Numbers Authority (IANA) is the central coordinator for the assignment of unique parameter values for Internet protocols, such as port numbers and URI schemes. For further information, see <http://www.iana.org/>.\n\n15. The XMPP Registrar maintains a list of reserved protocol namespaces as well as registries of parameters used in the context of XMPP extension protocols approved by the XMPP Standards Foundation. For further information, see <https://xmpp.org/registrar/>.\n\n16. XEP-0147: XMPP URI Query Components <https://xmpp.org/extensions/xep-0147.html>.\n\nAppendix H: Revision HistoryÂ¶\n\nNote: Older versions of this specification might be available at https://xmpp.org/extensions/attic/\n\nVersion 2.5.0 (2024-04-30)Â¶\n\nAdd note about some entities not advertising the http://jabber.org/protocol/disco#info feature.\n\npep\n\nVersion 2.5rc3 (2017-10-03)Â¶\n\nXML schema modified so that no ordering is required between disco#info children.\n\nth\n\nVersion 2.5rc2 (2016-10-13)Â¶\n\nFixed the examples to always include a disco#info feature.\n\nListed the proper namespace in the schemaloc ns element.\n\negp\n\nVersion 2.5rc1 (2015-09-22)Â¶\n\nErrata submitted to standards@ regarding subscriptions and returned items.\n\nClarify that feature elements must be childless to make the text match the schema.\n\neditor(mam)\n\nVersion 2.4 (2008-06-06)Â¶\n\nPer Council consensus, removed disco-publish feature (implementations should use publish-subscribe instead).\n\npsa\n\nVersion 2.3 (2007-02-15)Â¶\n\nAdded implementation note regarding Entity Capabilities.\n\npsa\n\nVersion 2.2 (2006-01-24)Â¶\n\nFurther specified and clarified security considerations relating to server handling of requests sent to bare JIDs.\n\npsa\n\nVersion 2.1 (2005-03-03)Â¶\n\nAdded paragraph to implementation notes about server handling of requests sent to bare JIDs.\n\npsa\n\nVersion 2.0 (2004-07-20)Â¶\n\nPer a vote of the Jabber Council, advanced status to Final.\n\npsa\n\nVersion 1.10 (2004-06-29)Â¶\n\nDefined security considerations; changed extended presence example to use a fictitious protocol; further specified publish feature; defined registry submissions.\n\npsa/jjh\n\nVersion 1.9 (2004-05-27)Â¶\n\nClarified error conditions.\n\npsa\n\nVersion 1.8 (2004-05-21)Â¶\n\nMoved remaining feature negotiation text to XEP-0020.\n\npsa\n\nVersion 1.7 (2004-05-13)Â¶\n\nAdded implementation note regarding flexibility of feature and item results; final editorial cleanup.\n\npsa\n\nVersion 1.6 (2004-05-11)Â¶\n\nCorrected examples of publishing available items; further clarified nature of node hierarchies.\n\npsa\n\nVersion 1.5 (2004-05-10)Â¶\n\nAdded clarifying note about node hierarchies.\n\npsa\n\nVersion 1.4 (2004-05-07)Â¶\n\nClarified usage of \"directory\"; added section defining the relationship between an entity and its associated items.\n\npsa\n\nVersion 1.3 (2004-04-23)Â¶\n\nFurther clarified item-publication protocol; moved some feature negotiation text to XEP-0020; added information about registry of well-known service discovery nodes; added implementation notes regarding tree-walking and large result sets; incorporated additional Call for Experience suggestions.\n\npsa\n\nVersion 1.2 (2004-04-20)Â¶\n\nEditorial cleanup; incorporated some Call for Experience suggestions.\n\npsa\n\nVersion 1.1 (2004-03-15)Â¶\n\nDescribed requirements, syntax, and use cases in a more formal manner; corrected several errors in the examples and schemas; defined XMPP Registrar procedures; added a number of references; specified XMPP error handling.\n\npsa\n\nVersion 1.0 (2003-04-21)Â¶\n\nPer a vote of the Jabber Council, advanced status to Draft; also added XML schemas.\n\npsa\n\nVersion 0.13 (2003-02-25)Â¶\n\nAdded remarks about empty node attributes; described semantics regarding multiple identity elements.\n\npgm\n\nVersion 0.12 (2003-02-06)Â¶\n\nAdded support for IQ-set; added example for disco#info to a specific node.\n\npgm\n\nVersion 0.11 (2002-12-17)Â¶\n\nAdded support for the 'node' attribute per discussion on the Standards list in order to support items that are not JID-addressable.\n\npsa\n\nVersion 0.10 (2002-11-21)Â¶\n\nChanged <feature type='foo'/> to <feature var='foo'/> to track changes in feature negotiation (XEP-0020); added initial registry parameters.\n\npsa\n\nVersion 0.9 (2002-11-07)Â¶\n\nAdded support for empty result sets in disco#item.\n\npsa\n\nVersion 0.8 (2002-11-01)Â¶\n\nRemoved the max, start, and total attributes for item queries (this will be handled by a generic paging protocol); added \"http://jabber.org/protocol/feature-neg\" namespace as a feature to signal negotiability regarding one or more features.\n\npsa\n\nVersion 0.7 (2002-10-28)Â¶\n\nCleaned up the feature text and examples.\n\npsa\n\nVersion 0.6 (2002-10-27)Â¶\n\nAdded the 'category' attribute to the <feature/> element; added security, IANA, and XMPP Registrar considerations; added a number of examples.\n\npsa\n\nVersion 0.5 (2002-10-15)Â¶\n\nTotal overhaul and simplification.\n\npsa\n\nVersion 0.4 (2002-07-16)Â¶\n\nMajor additions and fixes, many more examples.\n\npsa\n\nVersion 0.3 (2002-05-30)Â¶\n\nRe-organized around use cases, made some minor fixes.\n\npsa\n\nVersion 0.2 (2002-05-05)Â¶\n\nIncorporated comments from co-authors and added notes.\n\npsa\n\nVersion 0.1 (2002-05-03)Â¶\n\nInitial draft.\n\npsa\n\nAppendix I: Bib(La)TeX Entry\n\n@report{hildebrand2002disco, title = {Service Discovery}, author = {Hildebrand, Joe and Millard, Peter and Eatmon, Ryan and Saint-Andre, Peter}, type = {XEP}, number = {0030}, version = {2.5.0}, institution = {XMPP Standards Foundation}, url = {https://xmpp.org/extensions/xep-0030.html}, date = {2002-05-03/2024-04-30}, }\n\nEND"
    }
}