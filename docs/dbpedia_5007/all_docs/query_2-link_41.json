{
    "id": "dbpedia_5007_2",
    "rank": 41,
    "data": {
        "url": "https://fedoraproject.org/wiki/Qt_development",
        "read_more_link": "",
        "language": "en",
        "title": "Fedora Project Wiki",
        "top_image": "https://fedoraproject.org/favicon.ico",
        "meta_img": "https://fedoraproject.org/favicon.ico",
        "images": [
            "https://fedoraproject.org/w/skins/Fedora/resources/images/fedorawiki_logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Qt development on Fedora Linux raises questions, what can be done on Fedora Linux and what else is needed and how it can be used when using Linux desktop?\n\nDevelopment mode\n\nThere are three main development modes: Widget, Quick and Python.\n\nQt Widget based development is the original (since 1995-05-20), OOP (Object Oriented Programming) and C++ way of Qt programming.\n\nQt Quick and its QML (Qt Modeling Language) was introduced (2010) as easier and quicker way to create user interfaces. A QML document is, similarly to HTML, a description of an hierarchical object tree. The code structure looks very similar to a definition of a JSON object. QML objects can be styled, similarly to CSS, and JavaScript code can be inlined to handle assertive aspects. If you're familar with front-end web developement you'll grasp QML in no time.[1] - so the Qt Widget programming is the traditional programming where code is written in C++ and compiled to binary, Qt Quick + QML was created to get vast amount of web-developers involved to Qt-developement.\n\nQt for Python provides both of these worlds, both programming methods can be used in Python language and in less tedious format without compiling the source code.\n\ndoc.qt.io - C++/Widget applications\n\ndoc.qt.io - QML applications\n\ndoc.qt.io - QML application in Python\n\nQt for Python\n\nDesktop\n\nDesktop development is straightforward with Fedora Linux, all needed packages exist in standard repositories and main toolchain is available.\n\nMobile\n\n<html> <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/WFGRr0DV3oM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> </html>\n\nQt for Python currently (2019-04) is not supported on iPhone nor Android target devices.\n\nGoogle Android toolchain: Android Studio\n\nAndroid SDK, NDK (native development kit, C/C++), Java (Linux OpenJDK can be used).\n\nAndroid Studio download\n\nGetting Started with Qt for Android\n\nApple iOS toolchain: XCode\n\nDevelopment for iOS devices is done using Apple Xcode IDE. To use it, the Apple developer account and iOS Developer Program certificate is needed and received from Apple when joining to the developer program. Certificate is used to install application to a device.\n\nThe current Mac OS X relase is High Sierra 10.13.6 (2019-05-20).\n\ndoc.qt.io - Creator developing iOS\n\nXcode download\n\nMac OS X installation ISO-image download requires existing Mac OS X installation that came with Apple laptop.\n\ndeveloper.apple.com - Programs overview\n\ndeveloper.apple.com - enroll actual steps to get started.\n\nXcode on Fedora Linux\n\nXcode runts on Mac OS X operating system that is based on BSD variant. Its binaries and hence Xcode does not run directly on Linux. However, OS X can be run inside virtual machine like VirtualBox that runs on local Fedora desktop.\n\nXcode on shared Mac Server\n\nApple used to manufacture physical hardware servers and Mac OS X server operating system for them. Since then they stopped both and these days Mac OS X runs on x86_64 hardware and has its plus edition has server features that can be installed on Intel x86_64 hardware.\n\nXcode on cloud server\n\nThere are service providers that rent servers running Mac OS X and provide remote access to it. That might be a feasible solution for most, for some with strict source code privacy, it might be challenging to get proper NDA contract.\n\nmacincloud.com\n\nHardware targets via USB\n\nLocally? No idea.\n\nRemotely to Windows or Mac OSX: In theory yes. Fedora's RDP client FreeRDP supports USB-port redirection over IP and some devices like USB-cameras and smartcard readers are reported to work (2019 beginning). However, the forwarding appers to be device specific and Android- and iOS-phones are not supported.\n\nFew notes:\n\nFedora's freerdp package needs to be recompiled with -DCHANNEL_URBDRC_CLIENT=ON setting (that is off by default in spec) and reinstalled:\n\nxfreerdp /buildconfig\n\nlist of build options.\n\nIn order to work on Windows host must be enabled:\n\nprocessor in server must support Streaming SIMD Extensions 2 (SSE2) run: dxdiag\n\nMS: RemoteFX USB Redirection\n\nfreerdp - RemoteFX\n\nrun gpedit.msc as an Administrator\n\nGroup Policy Computer Configuration, Administrative Templates, Windows Components, Remote Desktop Services, Remote Desktop Connection Client, RemoteFX USB Device Redirection: Allow Admnistrator and users\n\nrun cmd, gpupdate /force as an Administrator\n\nreboot\n\nExamples at Linux side:\n\n/usr/bin/xfreerdp /u:John\\ Doe /v:server.example.com /usb:auto\n\nredirect all devices that are connected after session connection.\n\n# lsusb Bus 002 Device 009: ID 05ac:12a8 Apple, Inc. iPhone5/5C/5S/6 . .\n\n/usr/bin/xfreerdp /u:John\\ Doe /v:server.example.com /usb:id,dev:05ac:12a8\n\nusb redirection and redirect device 05ac:12a8 (id in lsusb listing).\n\n/usr/bin/xfreerdp /u:John\\ Doe /v:server.example.com /usb:dbg,id,dev:05ac:12a8\n\nsame as before with debugging.\n\nMessages like:\n\n[WARN][com.freerdp.channels.urbdrc.client] - bus:0 dev:0 not exist in udevman\n\nshould be harmless.\n\nCurrently this apparently does not work from Fedora desktop to Windows.\n\nSee also\n\nQt for Python\n\nReferences"
    }
}