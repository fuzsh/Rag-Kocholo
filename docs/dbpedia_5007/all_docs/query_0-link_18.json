{
    "id": "dbpedia_5007_0",
    "rank": 18,
    "data": {
        "url": "https://www.reachtech.com/products/touchscreen-display-modules/support/g2-documentation/reference-materials/qt-framework/",
        "read_more_link": "",
        "language": "en",
        "title": "Qt Framework",
        "top_image": "https://www.reachtech.com/wp-content/uploads/front5.jpg",
        "meta_img": "https://www.reachtech.com/wp-content/uploads/front5.jpg",
        "images": [
            "https://www.reachtech.com/wp-content/uploads/2021/03/36567_Reach-Technology-Logo_RGB.png",
            "https://www.reachtech.com/wp-content/uploads/2019/09/Qt_Creator_logo.png",
            "https://www.reachtech.com/wp-content/uploads/2019/09/300px-QtCreator-Linux-2.0.1.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2019-09-26T16:23:22+00:00",
        "summary": "",
        "meta_description": "Qt FrameworkThe Qt framework provides a number of useful objects and macros to make programming in C++ easier and higher level. C++ standard library functions and headers can still be used. The easiest way to take advantage of these features is to use Qt Creator, its templates, and autocomplete function. Qt provides",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "Reach Technology",
        "canonical_link": "https://www.reachtech.com/products/touchscreen-display-modules/support/g2-documentation/reference-materials/qt-framework/",
        "text": "The Qt framework provides a number of useful objects and macros to make programming in C++ easier and higher level. C++ standard library functions and headers can still be used. The easiest way to take advantage of these features is to use Qt Creator, its templates, and autocomplete function. Qt provides a special macro, Q_OBJECT, which defines additional functionality such as signals and slots. The Qt library also has linked lists, enumerables, foreach loops, cross-platform GUI tools, and more features expected of a modern high-level language. Reach provides Version 4.8 of the Qt framework.\n\nQt uses standard C++ but makes extensive use of a special code generator called the Meta Object Compiler (MOC) together with several macros to enrich the language. Qt can also be used in several other programming languages via language bindings. It runs on the major desktop platforms and some of the mobile platforms. It has extensive internationalization support. Non-GUI features include SQL database access, XML parsing, thread management, network support, and a unified cross-platform application programming interface (API) for file handling.\n\nQt is available under a commercial license, GPL v3, and LGPL v2. All editions support many compilers, including the GCC C++ compiler and the Visual Studio suite. Qt is developed by Digia, who owns the Qt trademark, and the Qt Project under open governance, involving individual developers and firms working to advance Qt. Before the launch of the Qt Project, it was produced by Nokia’s Qt Development Frameworks division, which came into existence after Nokia’s acquisition of the Norwegian company Trolltech, the original producer of Qt. In February 2011 Nokia announced its decision to drop Symbian technologies and base their future smartphones on Microsoft platform instead. One month later Nokia announced the sale of Qt’s commercial licensing and professional services to Digia, with the immediate goal of taking Qt support to Android, iOS and Windows 8 platforms, and to continue focusing on desktop and embedded development, although Nokia was to remain the main development force behind the framework at that time.\n\nDevelopment Filesystem\n\nIt is highly recommended that development is done on the SD Card, and not the NAND memory. If the file system on the NAND is broken, the NAND will have to be flashed. It is much easier to copy the application to the SD Card than to flash the NAND.\n\nSignals and Slots\n\nQt provides extensions to C++ such as signals and slots. Signals and slots are similar to events, but any QObject can receive a signal from another QObject. QObjects can also send signals to themselves. Qt has more information about signals and slots.\n\nCompiling without Qt Creator\n\nIt is easy to compile Qt programs without Qt creator. Download this Python script to automate the process. First, run the following commands:\n\n$ make -project $ qmake\n\nThen, for each .ui User Interface file, run a command similar to this:\n\n$ uic file.ui -o ui_file.cpp\n\nThen run make:\n\n$ make\n\nResources"
    }
}