{
    "id": "dbpedia_5007_3",
    "rank": 42,
    "data": {
        "url": "https://qt.developpez.com/doc/qtcreator-2.3/quick-projects/",
        "read_more_link": "",
        "language": "en",
        "title": "Qt Creator : Creating Qt Quick Projects",
        "top_image": "http://www.developpez.com/facebook-icon.png",
        "meta_img": "http://www.developpez.com/facebook-icon.png",
        "images": [
            "http://adserver.adtech.de/adserv|3.0|224|1409138|0|1|ADTECH;loc=300;grp=1",
            "https://qt.developpez.com/template/images/logo.png",
            "https://qt.developpez.com/template/images/facebook.png",
            "https://qt.developpez.com/template/images/twitter.png",
            "https://qt.developpez.com/template/images/rss.png",
            "http://www.developpez.com/template/kit/kitbm-viadeo.gif",
            "http://www.developpez.com/template/kit/kitbm-twitter.png",
            "http://www.developpez.com/template/kit/kitbm-google.png",
            "http://www.developpez.com/template/kit/kitbm-facebook.gif",
            "http://www.developpez.com/template/kit/kitbm-digg.png",
            "http://www.developpez.com/template/kit/kitbm-delicious.png",
            "http://www.developpez.com/template/kit/kitbm-myspace.gif",
            "http://www.developpez.com/template/kit/kitbm-yahoomyweb.png",
            "http://www.developpez.com/template/kit/kitbm-blinklist.png",
            "http://www.developpez.com/template/kit/kitbm-netvouz.png",
            "http://www.developpez.com/template/kit/kitbm-reddit.png",
            "http://www.developpez.com/template/kit/kitbm-simpy.png",
            "http://www.developpez.com/template/kit/kitbm-stumbleupon.png",
            "http://www.developpez.com/template/kit/kitbm-bookmarks.gif",
            "http://www.developpez.com/template/kit/kitbm-live.gif",
            "http://qt.developpez.com/doc/images/qt_logo.gif",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-project.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-ui-project-location.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-ui-project-summary.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-project-location.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-project-qml-sources.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-project-qt-versions.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-app-project-mobile-options.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-project-symbian-options.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-project-maemo-options.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-new-project-summary.png",
            "http://qt.developpez.com/doc/4.6/images/qmldesigner-import-project.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Qt Creator : Creating Qt Quick Projects"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Qt Creator : Creating Qt Quick Projects",
        "meta_lang": "",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "· Page d'accueil · Toutes les classes · Toutes les fonctions · Vues d'ensemble ·\n\nCreating Qt Quick Projects\n\nWhen you create a new Qt Quick project from scratch, you have the following options:\n\nQt Quick Application creates a Qt Quick application project that can contain both QML and C++ code. The project includes a QDeclarativeView. You can build the application and deploy it on desktop and mobile target platforms. For example, you can create signed Symbian Installation System (SIS) packages for this type of projects.\n\nQt Quick UI creates a Qt Quick UI project with a single QML file that contains the main view. You can review Qt Quick UI projects in the QML Viewer and you need not build them. You do not need to have the development environment installed on your computer to create and run this type of projects.\n\nCustom QML Extension Plugin creates a C++ plugin that makes it possible to offer extensions that can be loaded dynamically into applications by using the QDeclarativeEngine class.\n\nIf you have existing QML applications that you want to run in Qt Creator or deploy to mobile devices, use the Qt Quick Application wizard to convert them to Qt Quick applications.\n\nCreating Qt Quick UI Projects\n\nSelect File > New File or Project > Qt Quick Project > Qt Quick UI > Choose....\n\nThe Introduction and Project Location dialog opens.\n\nIn the Name field, give a name to the project.\n\nDo not use spaces and special characters in the project name and path.\n\nIn the Create in field, enter the path for the project files. For example, C:\\Qt\\examples. To select the path from a directory tree, click Browse.\n\nClick Next.\n\nReview the project settings, and click Finish to create the project.\n\nQt Creator creates the following files:\n\n.qmlproject project file defines that all QML, JavaScript, and image files in the project folder belong to the project. Therefore, you do not need to individually list all the files in the project.\n\n.qml file defines an element, such as a component, screen, or the whole application UI.\n\nThe import statement in the beginning of the .qml file specifies the Qt modules to import. Each Qt module contains a set of default elements. Specify a version to get the features you want.\n\nTo use JavaScript and image files in the application, copy them to the project folder.\n\nCreating Qt Quick Applications\n\nSelect File > New File or Project > Qt Quick Project > Qt Quick Application > Choose....\n\nThe Introduction and Project Location dialog opens.\n\nIn the Name field, give a name to the project.\n\nDo not use spaces and special characters in the project name and path.\n\nIn the Create in field, enter the path for the project files. For example, C:\\Qt\\examples. To select the path from a directory tree, click Browse.\n\nClick Next.\n\nThe Application Type dialog opens.\n\nSelect the Qt Quick Component Set to use in your application. The built-in elements allow you to write cross-platform applications with custom look and feel. The components for Symbian and MeeGo Harmattan allow you to create applications with a native look and feel for the selected mobile platform.\n\nYou can also import an existing QML file in this dialog.\n\nClick Next.\n\nThe Target Setup dialog opens.\n\nSelect the Qt versions to use as build targets for your project, and then click Next.\n\nNote: Qt Quick is supported since Qt 4.7, and therefore, only Qt 4.7 and later versions are displayed. Further, if you have only one supported Qt version installed, this dialog is skipped.\n\nThe Mobile Options dialog opens.\n\nIn the Orientation behavior field, determine how the application behaves when the orientation of the device display rotates between portrait and landscape, and then click Next.\n\nNote: This dialog opens only if you select Maemo5 or Symbian Device target in the Target Setup dialog. On Harmattan, the Qt Quick Components for MeeGo provide native-looking rotation.\n\nThe Symbian Specific dialog opens.\n\nIn the Application icon (.svg) field, select an application icon for the Symbian Device target, or use the default icon.\n\nIn the Target UID3 field, specify the Application UID, or use the default UID.\n\nNote: Qt Creator generates a UID for testing the application on a device. You need to change the UID when you deliver the application for public use.\n\nClick Next.\n\nThe Maemo Specific dialog opens.\n\nIn the Application icon field, select the application icon to use on Maemo or Harmattan targets, or use the default icon.\n\nThe Project Management dialog opens.\n\nIn the Add to project field, you can add this project to another project as a subproject.\n\nIn the Add to version control field, you can add the project to a version control system.\n\nClick Finish to create the project.\n\nQt Creator creates the necessary boilerplate files. Some of the files are specific to the Symbian, Maemo, or MeeGo Harmattan platform.\n\nImporting QML Applications\n\nIf you have existing QML applications that you want to run in Qt Creator or deploy to mobile devices, use the Qt Quick Application wizard and select the main .qml file in your project. All the other files in the project are automatically added to the application project.\n\nTo import QML applications:\n\nSelect File > New File or Project > Qt Quick Project > Qt Quick Application > Choose....\n\nName the project and set its path, and then click Next.\n\nIn the Application Type dialog, select the Use an existing .qml file option and specify the main .qml file of the project you want to import.\n\nClick Next.\n\nSelect the Qt versions to use as build targets for your project, and click Next.\n\nSpecify options for deploying the application to mobile device targets, and click Next.\n\nReview the project settings, and click Finish to create the project.\n\nQt Creator adds references to the QML files to a project and creates the additional files necessary for deploying applications to mobile devices.\n\nX\n\nThank you for giving your feedback.\n\nMake sure it is related to this specific page. For more general bugs and requests, please use the Qt Bug Tracker."
    }
}