{
    "id": "dbpedia_5007_3",
    "rank": 11,
    "data": {
        "url": "https://github.com/JesseTG/awesome-qt",
        "read_more_link": "",
        "language": "en",
        "title": "qt: A curated list of awesome tools, libraries, and resources for the Qt framework.",
        "top_image": "https://opengraph.githubassets.com/f58e2533fe39f9899c4263e80e4d33d969b9c2c13673ae3c5eba77acf29e30f0/JesseTG/awesome-qt",
        "meta_img": "https://opengraph.githubassets.com/f58e2533fe39f9899c4263e80e4d33d969b9c2c13673ae3c5eba77acf29e30f0/JesseTG/awesome-qt",
        "images": [
            "https://camo.githubusercontent.com/50cf39121274b3db22bf1bd72cbe25af9078e037441cb5b5bdef1cc9dc5eb2f7/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667",
            "https://camo.githubusercontent.com/e43abc93e98e27be5714d2a8154964c09e63925538464cae2a96b745d9526548/68747470733a2f2f63646e2e7261776769742e636f6d2f4a6573736554472f617765736f6d652d71742f65663966373161392f71742e737667",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://camo.githubusercontent.com/7a161cc377534e83906a27b1d6eafba372d44ffa76adb09f7893f6da22b0f68c/68747470733a2f2f6d6972726f72732e6372656174697665636f6d6d6f6e732e6f72672f70726573736b69742f627574746f6e732f38387833312f7376672f63632d7a65726f2e737667"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "A curated list of awesome tools, libraries, and resources for the Qt framework. - JesseTG/awesome-qt",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/JesseTG/awesome-qt",
        "text": "A curated list of awesome tools, libraries, and resources for the Qt framework.\n\nQt is a powerful cross-platform application development framework, for use primarily (but not exclusively) in C++. It's great for GUI applications, but can be used for many other things as well.\n\nContributions are welcome!\n\nAny list item with an OctoCat has a GitHub repo or organization; click on it to see the source code!\n\nList items with this ðŸ“¦ icon have source code hosted elsewhere.\n\nOfficial Resources\n\nCommunities\n\nOfficial\n\nUnofficial\n\nTools\n\nOfficial Tools\n\nThird-Party Tools\n\nBindings in Other Languages\n\nLibraries\n\nIntegrations\n\nNew Functionality\n\nSoftware Repositories\n\nBlogs\n\nBooks\n\nSoftware that Uses Qt\n\nOther Relevant Awesome Lists\n\nLicense\n\nOfficial Resources\n\nOfficial Website - The official website for the Qt framework.\n\nQt Documentation - Official Qt documentation. Massive and comprehensive.\n\nQt Newsletters - The best of Qt, straight to your spam filter.\n\nQt Bug Tracker - If you think you've found a bug with Qt or one of its related projects, report it here (or see if someone else already has).\n\nQt Code Review - See how the Qt maintainers ensure their code is well-written.\n\nSource Code - Browse the various source trees that comprise the Qt project. Has mirrors at several GitHub organizations:\n\nQt\n\nQt Project\n\nQt Labs\n\nIf you build it, they will come. This section describes aggregations of Qt users who share knowledge and code with one another. The most popular and active communities are listed in this section, but you can find a more comprehensive list here (that includes several in other languages) if you'd prefer.\n\nMailing Lists - Mailing lists for users and developers of Qt alike. Arguably the best place to communicate directly with Qt's maintainers. Sees frequent activity.\n\nQt Forum - If e-mail's not your thing, then you might also consider getting help or sharing knowledge on the forums.\n\nQt Wiki - The premier source for user-contributed Qt knowledge.\n\nIRC - For real-time chat with other Qt developers and users. The most popular channels are on Freenode, and include #qt, #qt-quick, #qt-creator, and #qt-chat.\n\nFor a full list of Qt-related IRC channels, see here.\n\nNote that the linked webchat client is not a part of the Qt project, and is provided by the author of this list for convenience only. These channels can be accessed through any IRC client.\n\nQtForum.org - Not to be confused with the official Qt forum.\n\nTools\n\nA good developer writes his or her own tools. A great one uses tools others wrote. This section will help you be great; more formally, this section details applications that make it easier to create software with Qt. You may also be interested in the Libraries section.\n\nOfficial Tools\n\nThe Qt framework has surprisingly many tools that don't get the spotlight. This section describes them (as well as the star players that do). For the purpose of this section, \"tool\" refers to Qt-centric utilities whose code does not get embedded within your application (but their output might).\n\nQt Creator - By no means does Qt lock you into its provided IDE, but its firm integration with the framework makes it a good sell. Among other things, it provides a UI designer, modeling tools, a documentation browser, and great QML support if you're into that sort of thing. There's also a plugin system, but third-party plugins are unfortunately scarce.\n\nQt Designer - If you'd rather just design the interfaces and let someone else hook them up to logic, the GUI designer is available as a separate application.\n\nQt Assistant - So is the documentation viewer, for that matter.\n\nQt Visual Studio Add-in - If you'd rather stick to Visual Studio, this add-in will let you do that.\n\nQt Linguist - Qt provides excellent internationalization/localization support, and this tool is very much responsible for it. Write translatable strings in your code with special macros, and this tool will aggregate them all for you so you or your translator(s) can broaden your software's audience.\n\nQt Installer Framework - Nobody seems to talk about this, but Qt also provides a way to write an installer for your application. Does not support creation of macOS disk images, app bundles, or Linux packages, so be mindful of that when considering your project's distribution.\n\nmacdeployqt - Generates macOS application bundles for Qt projects.\n\nqmake - The bundled build system designed for Qt, though it can be used for non-Qt projects.\n\nqbs - If QML is more your style, consider this alternative build system.\n\nEmulator - Don't forget about Qt's mobile support!\n\nqtdiag - Command-line tool that prints out a lot of information pertaining to both your Qt installation and your system in general. No link because there's no dedicated web page; just run qtdiag on the command line. Excellent for troubleshooting.\n\nqmleasing - Lets you make easing curves suitable for QML, though if you understand the underlying math there's no reason you couldn't use the resulting numbers elsewhere.\n\nThird-Party Tools\n\nCMake - General C++ build tool that happens to have great Qt support.\n\nGammaRay - Powerful debugger and general inspection tool for Qt-built software. Lets you inspect and manipulate the QObject hierarchy, view object properties, edit widgets at runtime, and far, far more. A two-sentence blurb can't do it justice, seriously check it out.\n\nmoc-ng - Alternative implementation of moc that's binary-compatible with Qt's version.\n\nQt-Inspector - Inspection tool with similar goals to GammaRay, though much simpler.\n\nSIP ðŸ“¦ - Generates Python bindings for C or C++ libraries. Has special support for Qt signals and slots, and was used to create PyQt.\n\nlinuxdeployqt - Lets you bundle your Qt based application as an AppDir or AppImage, making it possible to ship it to users of many desktop Linux distributions. Similar to the official windeployqt and macdeployqt tools but for Linux.\n\nQompoter - Dependency manager for Qt / C++.\n\nBindings in Other Languages\n\nThis section describes software that enables creation of Qt software in a primary language other than C++. Libraries that allow run-time scripting in a Qt application are listed under Integrations.\n\nPython (via PyQt) ðŸ“¦ - Arguably the most comprehensive and well-known binding of Qt to another language.\n\nPython (via PySide) ðŸ“¦ - Another binding for Python, which has been officially adopted by the Qt project.\n\nRing (via RingQt) - I've never heard of this language either, honestly.\n\nMono/.NET languages (via QtSharp) - Experimental wrapper for Qt that allows it to be used by .NET-based languages such as C#. Young, but active.\n\nSee these these three articles if you want more.\n\nThis section describes two kinds of third-party libraries; those that provide their own brand-new functionality (e.g. widgets, dealing with particular file formats), and those that provide integrations with existing software (e.g. scripting languages, clients for REST APIs, implementations of established protocols).\n\nFor the purpose of this section, an \"Integration\"-focused library does one of the following:\n\nServes as a client for an established Web service.\n\nWraps another library in a Qt-friendly manner as more than just an implementation detail (i.e. it tries to mimic the wrapped API).\n\nmupdf-qt - Qt wrapper for the MuPDF PDF viewer.\n\nneiasound - OpenAL wrapper designed for games, with stb_vorbis and libsndfile support.\n\nPythonQt ðŸ“¦ - Script your Qt applications with Python. Not to be confused with PyQt or PySide.\n\nQScintilla ðŸ“¦ - Absurdly versatile and customizable text editor widget that provides syntax highlighting, code completion, code folding, recordable macros, and much more. Built around Scintilla. Created by the same company that developed PyQt.\n\nQtAwesome - Add Font Awesome icons to your Qt application. Other icon sets are supported, too.\n\nQtLua ðŸ“¦ - Use Lua as a scripting language for Qt-based software.\n\nqtruby - Use Ruby as a scripting language within your application.\n\nQuaZIP ðŸ“¦ - Read from and write to ZIP archives. Uses Minizip under the hood.\n\nVLC-Qt - Wrapper for libvlc that lets you add a VLC-like media player to your application.\n\nSCodes - Qt & QML wrapper for ZXing-C++ Library with ready-made QML items for decoding and generating 1D and 2D barcodes (aka. QR codes).\n\nNew Functionality\n\nCommuni - Cross-platform IRC framework. We've got enough IRC clients out there already, but I suppose this could also be used to implement a chat function in your application (e.g. for community support).\n\ncutelyst - Web framework that takes some ideas from Perl's Catalyst framework.\n\nDiceParser - Dice Roller framework based on its own syntax.\n\nDOtherSide - Binding for QML in C, primarily designed as an API for other languages to support QML.\n\nFelgo - Cross-platform game engine and app framework that relies heavily on QML. Has a lot of tools and resources, and may even deserve its own list.\n\nglraw - Convert images from any Qt-supported format to OpenGL-format textures. Useful for speeding up texture loading in graphics applications.\n\ngrantlee - Django-inspired text templating.\n\ninjeqt - Dependency injection for Qt.\n\nKDE Frameworks ðŸ“¦ - Metric ass-ton of libraries for KDE, but many of them can be used with regular Qt applications as well. Cross-platform, for the most part.\n\nMarble ðŸ“¦ - Virtual globe and map that can be used standalone or embedded within other applications.\n\nqgexedit2 - Embed a hex editor in your application.\n\nqml-material - Material Design implemented in QML.\n\nQNodeView - Widget that lets you create and edit nodes in a graph similar to the kind provided by Unreal Engine, Substance Designer, or PureData.\n\nQSimpleUpdater - Let your application update itself.\n\nqt-maybe - Fans of type theory will enjoy these sum and optional types.\n\nqt-mustache - Render Mustache templates.\n\nQtAV - Actively developed multimedia framework.\n\nQtilities - Powerful set of libraries that provide GUI, logging, testing, configuration, and project functionality (among other things) for your application.\n\nQtitanChart - Chart generation framework. Commercial.\n\nQtitanRibbon - For fans of the ribbons that Microsoft uses in their software. Commercial.\n\nqtnotify - Notification framework.\n\nQtTerminalWidget - Make your application capable of anything.\n\nQtVerbalExpressions - Create regular expressions using natural English expressions. Part of the VerbalExpressions project, which does the same thing for a wide variety of languages.\n\nqtwebserver - If you need to write a web application server in Qt for some reason, this'll help you along.\n\nQtXlsx - Read and write spreadsheets in Microsoft Excel format.\n\nQwt ðŸ“¦ - Qt widgets designed for scientific and technical applications.\n\nverdigris - Experimental library to write Qt applications without using the moc.\n\nSoftware Repositories\n\nIf the Libraries section doesn't satisfy you, perhaps one of these will.\n\n#inqlude - The most well-known aggregation of Qt-centric libraries out there. A package manager is also available here.\n\nQtPods - Another Qt-centric package manager. If you want to see the offerings without using QtPods, the full list is available here, and can be added to by submitting a pull request.\n\nLinux-Apps.com - Despite the name, Linux-Apps.com aggregates a wide variety of Qt-based tools and libraries for both end-users and developers.\n\nStephan Binner's Ubuntu PPAs - Ubuntu users who are hesitant to install anything outside of their package managers can obtain any recent version of Qt from these repositories. Instructions for adding them are found within.\n\nEach entry is followed by a standout list of articles, talks, or other resources.\n\nPlanet Qt - Official aggregation of first-party and third-party Qt-related blogs.\n\nICS - Qt-centric software consulting firm with a really neat blog. Specializes in graphics applications.\n\nQt Tips and Tricks [1, 2] - Odds and ends that might be nice to keep in your back pocket.\n\nMastering Qt File Selectors - Sometimes you need different variations of the same asset, but you won't know which ones to load until runtime. This class will decide for you.\n\nSome Lesser Known Qt Tools and Commands [1, 2, 3, 4, 5] - You don't find hidden gems by staying on the beaten path.\n\nUsing Self-Signed Certificates in Qt Code - Trust nobody.\n\nIntegrating C++ with QML - Talk to your scripting language. That's what it's there for.\n\nQt and OpenGL: Loading a 3D Model with Open Asset Import Library (Assimp) [1, 2] - Assimp supports a lot of different model types; these articles will help you support all of them.\n\nWhat's new in Qt 5: QStandardPaths - This feature's been around for a few years, but it's still useful enough to warrant an entry on this list.\n\nWhat's New in Qt 5.2: QCommandLineParser - Another oldie, but still a goodie.\n\nWoboq - Another software consulting firm that also contributes code to Qt. They seem to specialize in Qt's core architecture.\n\nMoc myths debunked - The magic that Qt appears to rely in is really just a bunch of code generators. This post will bring you up to speed on the reality of the moc, the most notable one.\n\nHow Qt Signals and Slots Work [1, 2, 3] - Qt's signals/slots system lets any object talk to any other object. Understanding these three articles will help you take full advantage of the feature.\n\nQMetaType knows your types - C++ isn't known for having good run-time type information, so Qt brings its own.\n\nC++11 in Qt5 - Stop writing C++ like it's 2003; learn how you can take advantage of recent C++ features in your Qt applications.\n\nC++14 for Qt programmers - s/2003/2011/\n\nQStringLiteral explained - String literals are widely used in many applications; wouldn't it be nice if you could make them faster to access?\n\nNicer debug output in Qt using QT_MESSAGE_PATTERN - It's nice to be able to read your application's logs.\n\nKDAB - Another consulting firm that specializes in Qt.\n\nGammaRay: Taking a deep look into your Qt application - Talk about GammaRay and how it can help you dissect your Qt applications. Talk given at QtCon 2016 by Volker Krause.\n\nMultithreading with Qt - I want to make my application do more than once thing at once. What could possibly go wrong? Talk given at QtCon 2016 by Giuseppe D'Angelo.\n\nLinux perf for Qt developers - How to make your Qt application faster, Linux-style. Talk given at QtCon 2016 by Milian Wolff.\n\nScythe-Studio - Yet another consulting company specialized in Qt\n\nQt Creator Cheat Sheet - Convenient document for improving your familiarity with Qt Creator IDE.\n\nQt Installer Framework tutorial - Series about practical usage of Qt Installer framework with in-depth overview of different features.\n\nHow to interface Qt with Android Java code - Getting wild and \"native\" with Android code in your Qt application.\n\nHow to use NFC in Qt/Qml application? - Have you ever wondered how to use NFC in Qt/Qml application? This blog post will give you a complex overview of the concept of near-field communication technology with examples of its usage in real life.\n\nQt5 C++ GUI Programming Cookbook, by Lee Zhi Eng - Overview of advanced GUI programming techniques for those familiar (but not satisfied) with the basics. The source code used in the book is available for free.\n\nGame Programming Using Qt: Beginner's Guide by Witold Wysota and Lorenz Haas - Good place to start learning how to program games with QML.\n\nApplication Development with Qt Creator - 2nd Edition, by Ray Rischpater - Beginner's guide to Qt, with a lot of focus on Qt Creator and its associated tools.\n\nQt 5 Blueprints, by Symeon Huang - Seems to be about the overall structure of a Qt project.\n\nMastering Qt 5, by Guillaume Lazar and Robin Penea - Not your daddy's Qt. Tips and tricks for the experienced. The source code used in the book is available for free.\n\nPySide GUI Application Development - 2nd Edition, by Gopinath Jaganmohan and Venkateshwaran Loganathan - Imagine these other books, but in Python.\n\nQt5 Cadaques - Free book that focuses on QML, named for this town in northeastern Spain that the authors vacationed to once.\n\nQt6 QML Book , by Johan Thelin, JÃ¼rgen Bocklage-Ryannel and Cyril Lorquet - Free book created by Qt Company. It provides you with a walk through of the different aspects of application development using the new Qt 6. It focuses on the Qt Quick technology, but also provides necessary information about writing C++ back-ends and extension for Qt Quick.\n\nSoftware that Uses Qt\n\nA framework is only as great as the software that uses it. Fortunately, much great software uses Qt.\n\nAutodesk Maya - 3D animation and design software that has been used to create visual effects for some of the most popular movies and TV shows of all time.\n\nDavinci Resolve - Non-linear video editing freeware with commercial plan used to create some Hollywood movies.\n\nCMake - The closest thing to a standard C++ build system out there. The bundled GUI uses Qt.\n\nCRYENGINE - But can it run Crysis? Some auxillary tools use Qt.\n\nDoxygen - The most popular documentation generator for C++, though it supports other languages as well. The bundled GUI uses Qt.\n\nGoogle Earth - The virtual globe.\n\nKDE - One of the most popular desktop environments for Linux.\n\nLMMS - Digital audio workstation.\n\nMalwarebytes - Your Windows desktop's personal bodyguard.\n\nMuseScore - Music notation software.\n\nParallels Desktop - Consumer-focused virtualization.\n\nQt Creator - Something something eating your own dog food. Listed in the official tools, but not listing it here doesn't feel right.\n\nRolisteam - Virtual tabletop for remote Role Playing Games.\n\nShotcut - Video editor.\n\nRUBE - Level design tool for any game that uses the Box2D physics engine.\n\nTeamSpeak - When gamers want to voice chat in a game that doesn't support it, they'll use this.\n\nTelegram Desktop - Secure your conversations so well, you'll raise the blood pressure of potential eavesdroppers. The desktop client uses Qt and is open source.\n\nTiled - Perhaps the world's most popular tilemap editor. Suitable for level design in games.\n\nVirtualBox ðŸ“¦ - Virtualization software for x86/64 processors. The bundled GUI uses Qt.\n\nVLC ðŸ“¦ - One of the most flexible open source video players in existence.\n\nVuo â€” Realtime visual programming language for interactive media.\n\nWireshark ðŸ“¦ - The most popular packet-sniffer out there. You are going to use this for good and not evil, right?\n\nWolfram Mathematica - Programming language, symbolic calculator, and an engineer's best friend.\n\nYabause - Sega Saturn emulator.\n\nUltimaker Cura - Slicer application used to prepare your 3D models for printing with a 3D printer. Built with Uranium framework which is based on Qt 5 and Python 3.\n\nThere's also an official showroom here, which lets developers submit their own Qt-powered applications for display.\n\nOther Relevant Awesome Lists\n\nIf you're familiar with Awesome, you'll know that there's an extremely wide variety of resources, the usefulness of which will depend on your project. However, if you're developing Qt applications, you'll almost certainly want to look at these as well.\n\nAwesome C/C++ - There's no reason you can't use C++ libraries that weren't designed for Qt. Sometimes they might even suit your needs better than what Qt offers.\n\nAwesome C - Same goes for C libraries; might wanna brush up on those RAII techniques while you're at it.\n\nAwesome CMake - If you're not using qmake for your project, you're likely using CMake instead.\n\nAwesome OpenGL - Qt is commonly used for graphics applications, even providing its own wrappers around OpenGL.\n\nTo the extent possible under law, Jesse Talavera-Greenberg has waived all copyright and related or neighboring rights to this work. See the LICENSE file for details."
    }
}