{
    "id": "dbpedia_5007_0",
    "rank": 83,
    "data": {
        "url": "https://tadviser.com/index.php/Product:Qt_Commercial",
        "read_more_link": "",
        "language": "en",
        "title": "Qt Commercial",
        "top_image": "https://tadviser.ru/images/thumb/7/7c/Qt-Enterprise-Embedded.png/500px-Qt-Enterprise-Embedded.png",
        "meta_img": "https://tadviser.ru/images/thumb/7/7c/Qt-Enterprise-Embedded.png/500px-Qt-Enterprise-Embedded.png",
        "images": [
            "https://tadviser.com/skins/ta/design/img/logo_eng.png?1",
            "https://www.tadviser.com/inc/ear/709850a5.png?841",
            "https://www.tadviser.ru/inc/ear/980948de.png?137",
            "https://tadviser.com/skins/ta/design/img/house-logo.png",
            "https://tadviser.com/skins/ta/design/img/search.svg",
            "https://tadviser.com/images/thumb/d/da/Scene-editor-Qt_5-7.png/680px-Scene-editor-Qt_5-7.png",
            "https://tadviser.com/images/thumb/4/46/Ecs-2.png/550px-Ecs-2.png",
            "https://tadviser.com/images/thumb/9/97/Screenshot-qt-designer-qwebview.png/550px-Screenshot-qt-designer-qwebview.png",
            "https://tadviser.com/images/thumb/7/7c/Qt-Enterprise-Embedded.png/500px-Qt-Enterprise-Embedded.png",
            "https://tadviser.com/images/thumb/4/43/Emblem-system.svg/32px-Emblem-system.svg.png",
            "http://www.tadviser.ru/openx2/www/delivery/avw.php?zoneid=46&cb=INSERT_RANDOM_NUMBER_HERE&n=ac921e4c&ct0=INSERT_CLICKURL_HERE",
            "https://tadviser.com/images/2/24/%D0%A0%D0%B8%D1%81._4_800420.jpg",
            "https://tadviser.com/images/3/37/840px-%D0%A0%D0%B8%D1%81.4_%D0%93%D0%B8%D0%BF%D1%80%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%BE%D0%BA%D0%BD%D0%B5%D1%84%D1%82%D1%8C420.jpg",
            "https://tadviser.com/skins/ta/design/img/logo_small.png",
            "https://tadviser.com/skins/ta/design/img/18+.svg",
            "https://mc.yandex.ru/watch/50829559"
        ],
        "movies": [
            "https://www.youtube.com/embed/K6QjOjgwuWk",
            "https://www.youtube.com/embed/S8oVS3onQV0",
            "https://www.youtube.com/embed/8KShQnKgnms",
            "https://www.youtube.com/embed/wMs1pSZMnG0"
        ],
        "keywords": [],
        "meta_keywords": [
            "Product Qt Commercial",
            "Projects from Laboratory",
            "Qt 58 alpha",
            "Qt 57",
            "Announcement of Qt 57",
            "Change of the license and change of the agreement with KDE",
            "2015  The release of Qt 55 continues fork 5kh",
            "Qt 54 Alpha",
            "New release of Qt 54",
            "Qt Enterprise Embedded",
            "Plug-in of Visual Studio Add-In 121 for Qt 5",
            "Qt Commercial 464",
            "Notes",
            "Development tools of applications"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Product Qt Commercial, Projects from Laboratory, Qt 58 alpha, Qt 57, Announcement of Qt 57, Change of the license and change of the agreement with KDE, 2015  The release of Qt 55 continues fork 5kh, Qt 54 Alpha, New release of Qt 54, Qt Enterprise Embedded, Plug-in of Visual Studio Add-In 121 for Qt 5, Qt Commercial 464, Notes",
        "meta_lang": "",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "TAdviser.ru",
        "canonical_link": null,
        "text": "Qt Commercial is cross-platform library for software development and creation of the user interface. Use of Qt allows to reduce considerably development time, to improve quality of applications at the expense of the centralized testing on all platforms, to reduce product cost and to increase the number of users of the solution.\n\nIn March, 2011 Digia redeemed from Nokia of the right to commercial licensing and rendering services in support of software development using Qt library.\n\nDigia repeatedly showed deep interest in Qt Commercial development, having released new release of a product in March, 2011, having opened in August, 2011 office in the USA for satisfaction of the growing demand for popular tools and also constantly improving services of technical support and consulting of users of Qt. More than 3500 commercial users of Qt had an opportunity to be convinced repeatedly of high quality of support of Digia and interest of the company in development of a product. At the moment at offices Digia more than 200 Qt-specialists concentrated on development of Desktop-and Embedded-of applications on the basis of Qt, consulting, testing and UX design work.\n\nIn the spring of 2012 of Digia announces official start of sales of Qt Commercial in the territory of Russia and the countries of the former CIS. Now to get advice on a product, to learn the cost of licenses and it is possible to request any additional information from Qt-experts in Russian, having addressed to offices Digia in St. Petersburg and Moscow.\n\nIn the fall of 2012 within Qt Developer Days the Digia company which since September, 2012 completely is responsible for Qt Framework planned a number of ambitious tasks of development of a product. The senior vice president of Digia Tommi Laitinen and the head of Qt Digia and Qt Project Lars Knoll stated strategy and the action plan, directed to that Qt became the world's leading cross-platform development environment within five years.\n\nIn the performance Tommi Laitinen showed core values on which the strategy of Digia Qt is based:\n\nNo. 1 in multi-platform support\n\nNo. 1 in interaction with the developer\n\nNo. 1 in creation of great user interaction (UX)\n\nWe remain models of dual licensing are right (opensource and commercial)\n\nRecognition of huge value of an ecosystem (community) of developers\n\nThe main idea to which Digia adheres - to make Qt not only the most effective and useful framework for cross-platform development, but also the tool which will provide the best experience of interaction both for developers, and for end users.\n\nThe new open structure of business together with open source codes of Qt and model of dual licensing is the cornerstone of this plan. All this will be supported with the developed ecosystem of Qt which makes favorable impact on all Qt community and Qt Project, putting resources in continuous improvement of a product.\n\nProjects from Laboratory\n\nWithin the section Projects from the Labs, Digia showed several highly priority projects, work on which is conducted at present. Among them:\n\nPrototype of preliminary support of IOS in fast release of Qt5\n\nSupport of Qt on Windows RT tablets\n\nThe short demonstration of Qt5 port for the Android platform created within the Necessitas project which will be soon entered to Qt Project\n\nThe Qt application with implementation of hardware acceleration of the 3D user interface on the VxWorks operating system\n\nThe laboratory project with the code name \"Boot Qt\" showing the Qt application performed at basic level of Android - and - representing Qt as a top for the graphical interface, with the purpose to make embedded development on Linux of as much as possible trouble-free\n\nComponents for desktop of systems - showing to Qt Quick creation of the popular user interface developed completely using Qt Quick\n\nQt on the Mac retina screen is an example of use of Qt on retina displays of high definition\n\nFrom the moment of release of release of Qt 5.2 in December, 2013 the community Qt considerably increased and at present totals more than 800.000 people. In only 6 weeks after an exit of 500.000 users downloaded Qt 5.2, and in 4 months this indicator exceeded a mark of 1 million. Qt 5.3 release in July, 2014 also showed impressive results: 1.000.000 downloadings in the first month.\n\n2016\n\nQt 5.8 alpha\n\nOn September 6, 2016 Lars Knoll, the creator of the KHTML engine, the Qt Project project manager and the technical director of the company of Qt Company, announced availability of the alpha of the cross-platform Qt 5.8 development environment.\n\nSome ideas of an initiative of Qt Lite got to a product. The release is expected in November, 2016.\n\nFeatures of Qt 5.8\n\nFor disposal of Qt Quick of a binding to OpenGL and independence of graphic API the architecture of a graphic subsystem is processed, it gave the chance of application of effective program methods of plotting on the systems of not supporting OpenGL. Except program plotting (QT_QUICK_BACKEND=software) the backend for DirectX 12 (QT_QUICK_BACKEND=d3d12) is also prepared. The functionality of the module Qt Quick 2D Renderer is integrated into Qt Declarative[1];\n\nIn the engine of accomplishment of QML the new infrastructure of caching allowing to cache QML files in prekompilirovanny binary representation is implemented. Caching gave the chance to considerably accelerate repeated loading of QML-applications and to reduce memory consumption. Support of anticipatory compilation of Qt Quick will be continued within a commercial product of Qt Quick Compiler;\n\nThe practices of the granulated assembly allowing to assemble modules selectively are included activating only necessary functionality. From now on Qt allows to manipulate connection of separate modules and to manage their structure. The disconnected functionality does not join in assembly that allows to create the cut-down configurations suitable for use on the built-in systems with a limited extent of RAM and storage. According to preliminary estimates the new assembly system allows to reduce the size of statically connected Qt Quick application by 70%, in comparison with Qt 5.6;\n\nThe new Dialog, DialogButtonBox, MenuSeparator, RoundButton and ToolSeparator QML types and also the experimental MenuBar, Menu, SystemTrayIcon, ColorDialog, FontDialog, MessageDialog, FileDialog and FolderDialog types are added to Qt Quick Controls 2;\n\nThe modules Wayland Compositor, SCXML and Serial Bus which were offered for testing as fact-finding releases (Technology Preview) earlier are transferred to discharge of completely supported;\n\nThe experimental module Qt Speech providing means for synthesis and speech recognition is added. The module supports several backends for the different systems of speech synthesis in macOS, Android, Windows and Linux;\n\nThe experimental module Qt Network Authentication from implementations of the authentication protocols OAuth 1 and OAuth 2 is added;\n\nThe module Qt Script which will be deleted in one of future releases is announced outdated.\n\nQt 5.7\n\nOn June 16, 2016 Qt 5.7 framework release took place. All changes and plans stated in the announcement of release 5.7 are implemented[2].\n\nThe structure of release includes the Qt for Device Creation set intended for creation of full-fledged loading mobile systems with an environment based on Qt and QML. The system honor is based on Yocto project practices.\n\nIn this release support of payments is added: Rasberry Pi 3, NVIDIA DRIVE CX (Tegra X1, 64bit ARM) and i.MX7. Microsoft Windows it is transferred to discharge of built in which are completely supported a host platforms for development Linux- products. Experimental support of the Qt-based Over-the-Air (OTA) mechanism for automation of receiving and installation of updates on network is provided.\n\nAnnouncement of Qt 5.7\n\nOn March 11, 2016 the Digia company announced availability of the alpha of a cross-platform framework of Qt 5.7[3].\n\nIT observers noted - alpha testing of Qt 5.7 began to release of Qt 5.6 which will receive the status of release with long support (LTS) and update for which will be released within three years. Development of Qt 5.7 will be conducted parallel to Qt 5.6 LTS. The release of Qt 5.6 is expected in March, Qt 5.7 - in May.\n\nFeatures of Qt 5.7\n\nChange of model of licensing: except the commercial license, Qt LGPLv3 and GPLv2 will be delivered only under licenses LGPLv3 and GPLv2, instead of earlier offered LGPLv2.1. Tools and the Qt applications for developers, such as Qt Creator and qmake, will be delivered under license GPLv3. Thus, now all Qt components are available under the licenses compatible to GPLv3 at preserving of compatibility of Qt with GPLv2.\n\nSupport of use of C ++ in modules and Qt libraries;\n\nModules:\n\nQt Quick Controls 2 is completely rewritten and optimized set of components for creation of graphical interfaces for applications on Qt Quick;\n\nQt 3D - multithreaded 3D - the engine for applications on Qt C ++ and Qt Quick;\n\nQt SerialBus is support of the buses CANBus and ModBus for the organization of interaction of applications;\n\nQt Wayland Compositor TP is the multithreaded system of plotting for the built-in devices using the Wayland protocol;\n\nQt SCXML TP is a framework with implementation of State Chart API;\n\nInclusion in delivery of the modules which are earlier delivered only in commercial edition. The code of modules is open under license GPLv3:\n\nQt Charts - creation of charts and 2D - data visualization;\n\nQt Data Visualization - a set of ready templates of charts for 3D - data visualizations;\n\nQt Purchasing - cross-platform API for the organization of purchases in directories app stores;\n\nQt Virtual Keyboard is sale of the virtual keyboard with support of hand-written input;\n\nQt Quick 2D Renderer is a possibility of applications launch of Qt Quick 2 on systems without hardware support of OpenGL;\n\nQt WebEngine is updated to Chromium 49. Support of Drag'n'Drop, printing is added to PDF, spellings, indications of a sound playback, reproduction of the protected DRM video.\n\nChange of the license and change of the agreement with KDE\n\nOn January 13, 2016 Lars Knoll, the creator of the KHTML engine, the Qt Project project manager and the development director of a framework of Qt in Digia company, announced important changes in licensing of Qt[4].\n\nFrom the moment of the declaration of Qt, except the commercial license, LGPLv3 and GPLv2 will be delivered only under licenses LGPLv3 and GPLv2, instead of earlier offered LGPLv2.1. Tools and the Qt applications for developers - Qt Creator and qmake, will be delivered under license GPLv3. It means - all Qt components are available under the licenses compatible to GPLv3 at preserving of compatibility of Qt with GPLv2. Change will become effective since Qt 5.7 release.\n\nUnlike LGPLv2.1, LGPLv3 provides protection against patent claims by delivery of products under this license and provides protection against a tivoization. From a practical side, the termination of delivery under LGPLv2.1 will limit the developers connecting Qt with proprietary products which will have to refuse a binding of firmwares to devices or to use Qt option under GPLv2, but in this case are obliged to open the code of the components connected with Qt, or to use the commercial version of Qt\n\nThe second change - opening of source texts of the additions which are earlier delivered only on the terms of the commercial license:\n\nQt Charts\n\nQt Data Visualization\n\nQt Virtual Keyboard\n\nQML Profiler\n\nClang static analyzer\n\nQt Test Integration\n\nQt Quick 2D renderer\n\nCommercial additions will be open under license GPLv3 that it is connected with need of use of external dependences under the license Apache. Earlier opened additions, as well as Qt, will be delivered under LGPLv3 and GPLv2. The exception is made only for Qt WebEngine which because of use of the third-party code from the Chromium project will be available also under LGPLv2.1.\n\nThe third change - expansion of the agreement with the KDE Free Qt Foundation organization created for protection of community against possible change of policy for delivery of Qt as a free product. The agreement between KDE Free Qt Foundation and Trolltech signed in 1998 extending to all future owners of Qt grants to the KDE project the right to carry out change of the license of the Qt code under any open license and to continue development by own efforts, in case of toughening of license policy, bankruptcy of the owner or the termination of development of the project.\n\nIn updated version of the agreement Qt Company (division of Digia) expanded action of the document for all editions Qt (including for products of Microsoft and Apple), and not just on the version for X11 and Android. Moreover, the agreement extends to all publicly published Qt Company company code, and not just Qt entering delivery now. This change is especially relevant in the light of development of the Wayland protocol.\n\n2015: The release of Qt 5.5 continues fork 5.kh\n\nOn July 1, 2015 the Qt Company provided release of a cross-platform framework of Qt 5.5 which continued development of a branch of Qt 5.x[5].\n\nBy preparation of Qt 5.5 developers paid attention to stability and optimization of performance. In the course of preparation of the version more than one and a half thousand reports on problems are closed. It was not without adding of the expected functionality - the modules Qt 3D and Qt Location.\n\nMain changes:\n\nthe module Qt 3D providing high-level C ++ and QML API for integration into applications of means for work with 3D - graphics was a part. A broad set of means, including methods for 2D - and 3D - rendering, work with mesha and materials is offered, to transformation, morphing, simulation of physical processes, imposing of audio effects, use of shaders, a stereooutput, 3D - a sound, etc. The output using OpenGL 2/3/4 and OpenGL ES 2/3, integration with user interfaces on the basis of Qt Quick 2 is supported. Qt 3D is available to Windows platforms (not RT), OS X, Linux xcb, Android and Embedded Linux.\n\nRepresentation of Qt 5.5, 2015\n\nThe module Qt Canvas 3D providing WebGL-like JavaScript API for 3D - rendering in Qt Quick is implemented;\n\nThe module Qt Location - in it means for position fix, creation of routes and work with cards are implemented. From cartographic services are supported by Here, Mapbox and Openstreetmap Nokia now;\n\nAre transferred to discharge outdate the modules Qt WebKit, Qt Declarative (Qt Quick 1) and Qt Script. These modules are a part of Qt so far, but is strongly recommended to transfer to developers the applications to relevant subsystems, such as Qt WebEngine and Qt Quick 2.\n\nIn the module Qt Bluetooth full support of the Bluetooth Low Energy specification is provided;\n\nSupport of the typified arrays and classes is added to implementation of the QML language;\n\nA set of widgets Enterprise Controls is integrated into the basic structure of Qt Quick Controls and now is available including in the Community-version. TreeView widget allowing to group other widgets in treelike representation is also added;\n\nIn the module Qt Multimedia transition to use by default of GStreamer 1.0 in Linux is implemented. The new framework for creation of video filters supporting integration of the VideoOutput elements with OpenCL or CUDA is added;\n\nThe browser Qt WebEngine engine is updated to code base of Chromium 40. New API for management of loading of files, are added by a cache, cookie and settings. Qt WebChannel support is built-in;\n\nWork on ensuring support of the Windows platform 10 is carried out.\n\nCommercial products on the Qt platform are reduced to two offers:\n\nQt for Application Development is the set for creating applications for all supported desktop and mobile systems delivered with the commercial license and service of support;\n\nQt for Device Creation is set for creation of mobile solutions based on Qt.\n\nThe adjusting release of the Qt Creator 3.4.2 development environment, remarkable by error correction and transition to formation of assemblies using Qt 5.5 is at the same time provided.\n\n2014\n\nQt 5.4 Alpha\n\nThe alpha is provided for acquaintance in the form of the source code. The performed installers will be collected for Beta of release which is planned in several weeks. Now the list of innovations for Qt 5.4 \"is frozen\", and we will devote the following few months to final completion and \"grinding\" of the stated functionality. Below in article we will tell about what to expect from Qt 5.4 and that will be specifically provided in release of Qt 5.4 Alpha.\n\nFull support of WinRT\n\nWith Qt 5.4 exit we will get a full support of WinRT in Qt. Based on user feedback and experience with Qt 5.3, we tried to improve support of WinRT in Qt. Now WindowsPhone 8.1 is this mobile operating system which is minimum supported by the version that allows to get rid of need of use of D3D of the compiler and considerably simplifies installation of the developed application on the device. Now the majority of the modules Qt are completely maintained on WinRT, and it means that with Qt 5.4 exit you will be able easily to port your Qt-applications on smartphones with WindowsPhone of OS, tablets about Windows RT and computers with Modern UI support and also to publish supplements in app store of Windows Store.\n\nImprovements in development of graphics\n\nQQuickWidget widget for the first time provided to Qt 5.3 allowed developers to display without special work content of Qt Quick in Qt of the application implemented on widgets. With Qt exit QOpenGLWidget which will replace QGLWidget from the version of Qt 4 will be available to 5.4 developers. QOpenGLWidget, a new widget for the OpenGL display of content, can be used as any other QWidget. This innovation will allow to refuse use of old Qt OpenGL of the module as all functionality provided to them can be implemented by other modules now.\n\nWith an exit of Qt 5.4 new QQuickRenderControl API will be available to effective display of content of Qt Quick 2 in objects with a freymbufer. Can be for this purpose used as OpenGL the render provided to Qt, and visualization tools of third-party developers. Thanks to the new module QQuickRenderControl API in Qt 5.4 the possibility of use and 'wrapping' of the existing OpenGL of contexts for implementation of interaction of Qt with other graphic frameworks will appear. Also Qt 5.4 will include auxiliary classes: QOpenGLWindow for drawing of OpenGL in QWindow, QRasterWindow for drawing through QPainter in QWindow and also will appear support of images with 10 bits on the canal of color.\n\nNow during start of Qt of the application on Windows OS it will be possible to select dynamically between ANGLE and OpenGL that will eliminate need twice to collect the application.\n\nAndroid style for the Qt Quick elements\n\nSupport of Android style for the Qt Quick elements is added: now widgets and kontrola of Qt Quick on this platform can be displayed as native. Earlier use of Android style for widgets was possible only through Ministro.\n\nQt Bluetooth и BluetoothLE\n\nNow the module Qt Bluetooth supports BlueZ5 stack. Preliminary support of Bluetooth Low Energy is also available.\n\nNew Qt WebEngine and Qt WebChannel\n\nThe main innovation of Qt 5.4 is new Qt WebEngine which provides to Qt-developer all advantages of work with Chromium 37. This API is simple in use and also easily gives in to expansion. Considerable efforts that new Qt WebEngine could provide trouble-free integration of graphics, namely Chromium texture mapping directly in OpenGL scene graph for Qt Quick were made. Earlier Qt WebEngine was provided for Qt Enterprise Embedded, and with Qt 5.4 exit it will become available on desktop-platforms – Linux, Mac OS X and Windows.\n\nAlso the module Qt WebChannel intended for QML/C integration ++ and HTML/JavaScript will be provided to Qt 5.4. For example, it can be used for providing functionality of QObject from With ++ in JavaScript for Qt WebKit or Qt WebEngine.\n\nIn Qt 5.4 Qt WebKit support is still performed, but no innovations concerning this module are expected. In future releases the total failure from Qt WebKit as new Qt WebEngine provides all functionality necessary for developers is planned.\n\nNew release of Qt 5.4\n\nOn December 10, 2014 The Qt Company announced an exit of a cross-platform framework for application development, interfaces, the built-in devices and project implementation within the concept of Internet of Things of the version of Qt 5.4. Developers assured that he will help to make implementation process of software for all basic operation systems and UI for all types of devices quicker and more conveniently.\n\nScreenshot of the Qt Designer window\n\nSaving in itself advantages of the previous versions (the branch of Qt 5.3 was loaded more than 1.6 million times), Qt 5.4 differs in advanced functionality and brings performance of the created applications to new level. Among innovations:\n\nQt WebEngine is a component for use of the browser engine on the basis of Chromium allowing to apply HTML 5 at hybrid development. It is available in the commercial version and under license LGPLv3;\n\nFull support of Windows Store Apps for WinRT and Windows Phone 8.1\n\nIn the Qt Quick elements the feature for use of Android style for creation of interfaces with appearance, native for the operating system, is added. The module Qt Quick Controls is distributed only under the commercial license or LGPLv3\n\nSome improvements of building tools of the built-in devices, the most significant of which – an exit of Qt Quick Compiler 2.0 and Qt Quick 2D Renderer\n\nNew style of the Qt Quick Controls elements for implementation of high-quality applications interfaces and devices - \"Flat Light\"\n\nIn view of significant increase in popularity of wearable devices and the concept of Internet of Things (IoT), in the module Bluetooth of the version of Qt 5.4 preliminary support of the Bluetooth Low Energy specification is added. Qt 5.4 also contains the new version of the Qt Creator 3.3 development environment with numerous improvements of the Qt Quick Designer tools and others.\n\nDue to the broad application of HTML5, Qt 5.4 allows to use the mixed programming method thanks to the new browser Qt WebEngine engine which support is available on all desktop and built-in platforms. Along with providing convenient cross-platform API to Chromium, Qt WebEngine is completely compatible to a graphic stack of Qt, allowing to mix web content with graphic opportunities of Qt and effects of OpenGL. As for mobile platforms, Qt WebView providing integration of web content with involvement of the native browser engine of the mobile operating system is provided within commercial licensing or under LGPLv3.\n\nQt 5.4 differs in the improved compatibility with the latests version of desktop operating systems. Support of OS X of 10.10 Yosemite and Windows 8.1 is finished, opportunities for development for displays of high resolution are improved, function of the dynamic choice of the ANGLE or OpenGL engine for Windows is added. Graphic API of the new version of Qt allow to combine Qt Quick, Qt Widgets and OpenGL.\n\nAs for mobile application development, with an exit of Qt 5.4 full support of Windows Store Apps is added and also support for Android and iOS is improved. The Android style when which using Qt controls differ in nothing from native elements of the Android interface is added to the Qt Quick Controls collection. Work on compatibility with iOS8 and XCode 6 is carried also out. It is important to note that the module Qt Purchusing API allowing to implement function of shopping of additions in a Qt-application was added to the plan of licensing of Indie Mobile intended for developers of mobile applications.\n\nImprovements affected also the sphere of development of the built-in devices. The style for Qt Quick Controls which received the name Flat Light is for the first time provided. It is applicable for all controls which are a part of Qt Quick Controls and allows to create even more modern user interfaces of the built-in devices. The plug-in of Qt Quick the 2D Render, providing rendering of graphics of Qt Quick irrespective of OpenGL is added that does possible work of Qt Quick on devices of the low level without GPU. Qt Quick Compiler, the tool allowing to reduce time of application launch and to provide protection of the code is updated to version 2.0.\n\nAbout features and new products in Qt 5.4 (engl.)\n\nQt Enterprise Embedded\n\nOn March 27, 2014 the Digia company updated the version – Qt Enterprise Embedded allowing to develop quickly graphical interfaces for embedded applications and systems - large updating as a part of which emulation of sensors and the screen keyboard.\n\nDescription\n\nOn Qt it is possible to add the screen keyboard to the embedded application easily: for this purpose the new version of a framework includes the ready module – Qt Virtual Keyboard. The keyboard is delivered in two types: \"modernist style\", reminding screen keyboards of Android tablets, and \"retro\", imitating keys of the old-fashioned typewriter.\n\nAs developers said, the appearance of the keyboard is available to setup and adapts to any screen permissions. The keyboard can be integrated with any spell checkers and engines of text hints. Digia considers - the ready module of the keyboard will save developers of the built-in systems from a set of efforts during an era of touch screens. The keyboard is licensed as a part of Qt Enterprise Embedded and does not need licenses of the third firms at integration.\n\nControls were a medium composition of development: circular and vertical indicator, pie context menu, call keys and pauses, switch, switch, progress bar and other components necessary for creation of touch interfaces.\n\nUpdate for the built-in version of Qt Enterprise Embedded allowing to develop quickly graphical interfaces is released\n\nThe major innovation - the emulator of sensors, it helps to test reaction of the graphical interface to data reception from different sensors. It supports sensors - light sensors, accelerometers, compasses, sensors of a turning angle and contactless sensors. Besides, the module Qt Charts allowing to build charts and diagrams is connected to the built-in version: linear, circular, combined, point, column and others.\n\nThe framework of Qt Enterprise Embedded is developed within the Boot to Qt project, focused on providing a full-fledged stack of technologies of the graphical interface for the devices other than the PC. The first release of Qt Enterprise Embedded left in October, 2013.\n\nThe stack of the built-in technologies is established on the target hardware. Qt Enterprise Embedded supports the PC platforms Beagle Board xM, Raspberry Pi, Boundary Devices SabreLite, Google Nexus 7, x86, and since this release – and BeagleBone Black. And her partners provide support of other Digia configurations at the request of the customer.\n\nThe framework of Qt EE is available to two built-in OS – Linux and Android. The option for Android contains a core and a part of software of the center of a system, and the high layer of Java technologies, including the Dalvik VM virtual machine, is replaced with Qt/QML.\n\nIn turn, developers can independently collect Linux stack, using Yocto Project optimized under work with Qt. In the new version of Qt EE delivery of scenarios of Yocto for formation of own options of assembly is provided.\n\nQt is supported for Windows Embedded - only in the non-commercial version and only for WE CE7.\n\n2013\n\nPlug-in of Visual Studio Add-In 1.2.1 for Qt 5\n\nDigia released in April, 2013 Visual Studio Add-in 1.2.1 for Qt 5. Mostly this release contains error corrections, found in the previous versions. Besides, the plug-in supports visualization of the debugger of VisualStudio 2012 for the classes Qt 5 now. In the commercial version debugging for Qt Quick is also supported.\n\nAs before, the mandatory requirement for use of a plug-in is existence of Visual Studio Professional. The supported versions are the Visual Studio of 2012 (updating 2 is recommended), 2010 and 2008.\n\nThe most important innovations of Visual Studio Add-In 1.2.1:\n\nQt Quick project wizard (The master of creation of the Qt Quick project), QML keyword highlighting (illumination/selection of a key word) and QML file preview - available in the commercial version\n\nVisualization of the debugger of the Visual Studio of 2012 for the classes Qt 5\n\nPossibility of use of Qt 4 Add-in and Qt 5 Add-in on one computer (in turn)\n\nIncorrect names of the libraries/modules Qt 5 and way for include-are corrected\n\nYou can find the complete list of changes in Visual Studio Add-in 1.2.1 in change log.\n\nSharing of Qt 5 VS Add-in and Qt 4 VS Add-in\n\nQt 4 Visual Studio Add-in cannot be started together with Qt 5 Add-in, in case of detection it will be closed. However you can use both plug-ins - Qt 4 and Qt 5 – in turn. The user should select the version of Qt from the manager of plug-ins (both at the same time cannot be selected). Special attention is required when choosing the Master of creation of the project or a class since both versions - Qt 4 and Qt 5 - will be available if both plug-ins are installed.\n\nSupport of Qt Quick in the commercial version\n\nDigia created the additional functionality of Visual Studio Add-In available only to commercial users of Qt. The commercial version includes the new Master of creation of the project for Qt Quick2 Application now - for creation of projects which may contain at the same time QML and C ++ the code. The commercial version of a plug-in also contains selection of a key word (keyword highlighting) for the QML files and a new possibility of a preview for the started qmlviewer.\n\nLoad them using Customer Portal and Qt Project\n\nThe new plug-in of Visual Studio Add-In 1.2.1 is available both to commercial, and for open-sors users. If you use the existing commercial license, you can load new Visual Studio Add-In with Customer Portal. Open-sors the version is available through Qt Project. If you do not own the commercial license, but want to try new functionality, can load 30-day trial version: free 30-day evaluation.\n\nQt 5.1 of Alf\n\nAndroid & iOS - For a start we added preliminary support for Android and iOS to Qt 5.1. This release can be fully used on both platforms so you can develop for both operating systems (Android and iOS) already now. All functionality of qtbase library (Qt Core, Gui, the Network, and others) is implemented in this release. Qt Quick well works at Android and maintains the majority of touch phones. However, there are also some restrictions: some parts of Multimedia library are implemented not completely, and Qt Quick at the moment does not work in iOS. Work on building tools is also still conducted therefore yet not all functionality of Qt Creator is available, but many things work well and reliably. As it was announced last year, the full support of Android and iOS will appear in the version of Qt 5.2, but Qt 5.1 provides to developers a reliable basis for application development for these platforms.\n\nQt Quick Controls - Besides, we at last made the Qt Quick Controls component cross-platform. The modules Qt Quick Controls (Desktop Components were called earlier) and Qt Quick Layouts already provide controls and marking which you can use for creation of a user interface, beginning from buttons, a marking, elements of the menu and the toolbars to high-level elements of navigation. And, of course, they look and work as well as standard elements of the Android interface and iOS. At the moment Qt Quick Control are implemented for desktop operating systems, and support for sensor systems will appear in the version of Qt 5.2.\n\nAdd-ons - was Also added to this release several new modules among which there is Qt Sensors (the module supported on Android, iOS, BlackBerry and Mer (Sailfish); Qt SerialPort (the module for management of serial ports) and Qt X11Extras add-on.\n\nQt 5.1 Beta\n\nDevelopment of those new opportunities which were provided to Qt5.0 became the main objective for creation of Qt5.1. On the basis of your withdrawals, examples of real use of Qt 5.0 and porting of applications with Qt4.x we improved functionality and performance. Based on responses and a deposit of our growing ecosystem consisting from more than 500 thousand developers in more than 70 industries using Qt on a set of platforms and configurations we can say that Qt5 is ready to satisfy your expectations and requirements. New key features of Qt 5.1 Beta:\n\nthe module Qt Quick Controls is set ready an UI component, focused on the desktops-applications created with Qt Quick;\n\nthe module Qt Quick Layouts is the easy, more intuitive method of management of scaling of user interfaces guaranteeing stable arrangement of elements that all user interface remained convenient in use on screens of the different sizes;\n\nthe module Qt Serial Port is the cross-platform interface for use of equipment rooms and virtual serial ports in Qt applications;\n\npossibility of use of Qt Quick and Widget-ov in one application window;\n\nthe new Qt Creator 2.7.1 included in release providing, for example, Qt Quick Designer for rapid prototyping and the improved support of C ++ 11;\n\nthe support of static assemblies of Qt allowing to bypass situations when there is no an opportunity to use a dynamic linkovaniye;\n\nthe module Qt Sensors is provided as officially supported module.\n\nBinary installers\n\nFor most of users one of the main differences of Qt 5.1 Beta in comparison with Qt 5.1 Alpha will be the binary installer which provides a convenient method of installation of everything that it is necessary for you to start development with Qt – without need to collect Qt independently. For Qt 5.1 we offer several new configurations, such as VS2012 for 64 bits with OpenGL support – such configuration is already available in this Beta release. Right after Beta release we are going to proapgreydit a configuration with MinGW to version 4.8 and also to an exit of Qt 5.1.0 - to provide VS2012 configuration for 32 bits with support of ANGLE.\n\nQt 5.1 Beta is available to the self-contained unit, but we will also provide and online installers before final release of Qt 5.1.0. The offline installer contains everything that is necessary to start development using Qt: tools, documentation, examples and ready (previously collected) Qt libraries. The option of downloading of source codes – is also available to those who wish to collect Qt independently if the configuration for which there are no ready binary files is used. In addition to executable files for desktops – Qt 5.1 Beta is delivered with previously collected files for Android which then can be combined with your application.\n\nNew platforms\n\nQt 5.1 Beta gives you an opportunity to test preliminary technology support of new ports for Android and iOS. Besides, in release of Qt 5.1 Beta support of the Windows platform of Embedded Compact 7 which was earlier available in Qt 4.8 is performed. We added these new platforms to our system CI (Continuous Integration) so each change made to Qt will be checked both for these, and on other platforms and configurations which already are in our CI. At the moment Continuous Integration for Android and iOS consists only in tests for assembly, but we also add the automated tests for check of working capacity on these new platforms, for reduction of a share of regression testing.\n\nIt is a lot of talk around the specified new mobile ports and it is interesting to much: what it is already possible to make with Qt 5.1 Beta for these platforms – Android and iOS. In general, one may say, that you can create impressive applications which will be smoothly run on both new platforms, but … with some restrictions in the maintained functionality and need of attraction of your experience of development for installation of your applications on these devices.\n\nFor the Android platform in Qt 5.1 Beta the following functionality is rather well implemented:\n\nwidgets (widgets), Graphics View, applications with Qt Quick 1 and Qt Quick 2;\n\nOpenGL, work with network (networking) and other basic functionality of Qt;\n\nSome Qt Multimedia elements – for example QML media player;\n\nA set of the most often used sensors (sensors) in Qt Sensors;\n\nInstallation of your application on the device from Qt Creator;\n\nDebugging of your application from Qt Creator;\n\nQt 5.1 Beta is delivered with previously collected binary files for Android which can be combined with your application.\n\nFor the IOS platform use of Qt Quick 2 is impossible because of need of creation of the new QML engine (engine), but in Qt 5.1 Beta the functionality is available following, rather well working:\n\nWidgets (widgets), Graphics View, applications with Qt Quick 1;\n\nOpenGL, work with network (networking) and other basic functionality of Qt;\n\nA set of the most often used sensors (sensors) in Qt Sensors;\n\nInstallation of your application on the device from XCode/iTunes.\n\nQt 5.1\n\nOnline the installers available to developers on the Mac, Windows and Linux platforms; Support of development for Android on Windows platforms 32 bit, Linux – 32 and 64 bit; MinGW updated to version 4.8.0; Installer for 32 bit VS2012, also - all packets for VS2012 are collected with updating SP2; For assembly of Qt the dependence on Perl is deleted (but all the same there is a need for Perl for WebKit assembly) And also a set of the error corrections found on your responses and reports from use of Qt5.1 Beta\n\n2011\n\nQt Commercial 4.6.4\n\nDigia released Qt Commercial release in May, 2011. Version 4.6.4 has the improved functionality in comparison with the previous version (4.6) raised by stability and contains a number of improvements for desktop-and embedded-of users, including correction of 122 errors and support of Windows 7.\n\nAt deployment of the business and critical application there is not always an opportunity to upgrade to the latest version of Qt. With the help of version 4.6.4. Digia is going to satisfy customers needs which want to remain on the version of Qt 4.6, but at the same time need correction of the found errors.\n\nSome users also use the previous versions of Qt with the latests version of operating systems. The version of Qt Commercial 4.6.4 is tested and is officially supported on Windows 7. Digia tested release on compatibility with the previous supported platforms, and now included in the list and Windows 7 as the ofitsilny main platform. The release of Qt Commercial 4.6.4 includes 122 improvements and corrections relating to several considerable problems of release 4.6.3, for example, in the modules QtCore, QtGui and QtNetwork. The new release contains a number of improvements in performance and stability, and also security of the platform. We also announce corrections in tools, including Qt Designer and qmake.\n\nIn this release of Digia it was focused on desktop-platforms. It was made many corrections which are specially intended for Mac, Windows and Linux/X11 of platforms – in addition to the corrections concerning all platforms.\n\nThe release of Qt Commercial 4.6.4 contains:\n\nIn total 122 improvements and error corrections of version 4.6.3\n\n17 key corrections for Windows\n\n17 key corrections for Mac\n\n9 key corrections for X11/Linux\n\n41 key multi-platform corrections\n\nseveral other changes and small corrections\n\nNaturally, Qt Commercial 4.6.4 maintains binary compatibility with series 4.6 as well as the backward binary compatibility with series 4.5.\n\nThe detailed list of changes and corrections contains in .changes the file of new release. The new release is available on the Qt Commercial Customer portal according to the link.\n\nDigia also provides release of Qt Commercial 4.6.4 in Nokia for possible further availability to users of Qt open source.\n\nQt becomes the open project\n\nQt, a popular set of libraries for development of graphical interfaces used in numerous products including from Google and Adobe, got out of the exclusive control of Nokia, having become completely open project. Now independent developers will have a greater influence on its development.\n\nLars Knoll, the associate director of Nokia on development, explained that transfer of Qt Project on open management model - a necessary step making it really open and free from control from the company. \"Qt Project became this Open Source-проектом. We invite all it is better to make efforts for making Qt, - he writes in the blog. - Now development will be completely centralized, and results will be available to all once. From now on there will be no separation into \"programmers of Nokia\" and \"all others\", and any delays\".\n\nHowever, the staff of Nokia continues to approve and accompany a project code mostly. Those who wishes to enter the code to the project need still to sign the license agreement (PDF) with the company. Nokia claims that the reason for that - the existing obligations in law of Nokia and Trolltech. However Knoll promises that discussion, decision making and planned development will be performed \"by community, in community and for community\".\n\n\"You can notice that among acceptors of the code and maynteyner of the project there are already people who are not connected with Nokia. Especially there is a wish to note that Tiago of Masieyr (Thiago Macieira) accompanying QtCore (and it is library which all use), in Nokia does not work. Here to you a tangible example of what is open management model. I hope that in the future among attendants there will be even more independent developers\", - Knoll writes.\n\nTransition of Qt to hands of community, according to Jim Zemlin, the chief executive of Linux Foundation, is \"change which is welcomed by all\". \"This step will allow to involve a great number of developers in the project, and the quality of the code will be criterion of participation now\", - he said. Are especially glad to this KDE which it was necessary to consult in everything on Nokia earlier.\n\nNokia became owners of Qt in 2008, after purchase of the original developer, Trolltech. Acquisition brought to Nokia a set of libraries and tools which could be used for creation of graphical interfaces of both desktop, and mobile applications. Among the existing implementations at that time were already Skype, Google Earth and Opera.\n\nIn 2009 Nokia adapted Qt for application development for Symbian; at the same time Qt became available to Windows 7, Mac OS X Snow Leopard and Maemo/Meego. At the beginning of 2011 Canonical announced that Qt will begin to be used in Ubuntu. BBX OS preparing for release from Research in Motion will contain Cascade framework which is based on Qt.\n\nHowever the interest of Nokia in Qt as to a development tool under Symbian and Maemo/Meego sharply fell as soon as the company refused these operating systems for benefit of Windows Phone. The Microsoft platform does not use Qt.\n\nQt is distributed under two licenses — LGPL and the commercial license. The commercial part of Qt was sold to Digia company in March, 2011; open will be developed under the auspices of community Qt now.\n\nQt Commercial 4.8.1\n\nThe release of QtCommercial 4.8.1 includes more than 200 improvements/corrections (in comparison with version 4.8.0). Also we are glad to announce official support of QNX Neutrino RTOS in the version of Qt Commercial 4.8.1.\n\nMain features of a patch of Qt Commercial 4.8.1:\n\nthe first patch for version 4.8;\n\nmore than 200 functional improvements for desktop and embedded of platforms (the main improvements concerned QtCore, QtGUI and QtNetwork of modules, more than 52 corrections for desktop of platforms and more than 33 corrections * for embedded);\n\nofficial support of QNX Neutrino RTOS - now developers who are interested in creation of software for QNX can be completely sure that Digia will provide them a full, comprehensive support for their projects;\n\nsupport of Mac App Store – in this patch the main changes are directed to simplification of sending for consideration of applications to Mac App Store;\n\nthe new version of SDK considering wishes of our users.\n\nQt Commercial 4.8.2\n\nIn this release the full support of Windows as host-platforms for cross-compilation under real-time operating systems (RTOS) of INTEGRITY and QNX is provided, more than 100 functional improvements in comparison with the previous release are entered, includes updating of WebKit and libpng to new versions, a set of corrections in documentation and tools. We recommend to all users of Qt Commercial of version 4.8 to test this release. In addition to everything, we are glad to provide updating for Visual Studio Add-In which includes corrections and highly demanded adding to functionality.\n\nAs the patch release of Qt Commercial 4.8.2 contains more than 150 improvements and corrections for release 4.8.1.\n\nMain features of a patch of Qt Commercial 4.8.2:\n\nSupport of Windows as host-platforms for INTEGRITY and QNX, including functionality of cross-compilation for configure.exe\n\nMore than 100 functional improvements for desktop-and embedded-of platforms\n\nWebKit is updated to version 2.2.2\n\nlibpng is updated to version 1.5.10\n\nMore than 30 improvements/corrections in documentation and tools/utilities\n\nThe complete list of all corrections and improvements is available on адресóhttp://www.digia.com/en/Qt/Release-Notes/Release-Notes-Qt-Commercial-482/\n\nQt Commercial 4.8.2 is available to downloading on Qt Commercial Customer portal, as well as for updating online for all users of Qt Commercial SDK.\n\nQt Commercial 5\n\nQt 5.0 is the version of a framework for cross-platform development of applications and creation of UI for 2013 Qt5 will become the platform on which the full support of mobile platforms will be implemented Android and iOS.\n\nAlready expressed the DJ the intention to make Qt the leading environment for cross-platform development around the world. Qt 5 is a natural step on this way, for achievement of the best user experience both for application developers, and for users of the created products. Qt 5 facilitates life of the developer, allowing them to create quicker applications with the intuitive user interface for a set of final platforms for once, facilitating following of requirements imposed by devices with touch screens and tablets.\n\nKey advantages of Qt 5:\n\nThe improved quality of graphics;\n\nThe improved performance on hardware platforms with limited functionality;\n\nCross-platform portability;\n\nSupport of C ++ 11;\n\nSupport of HTML5 in QtWebKit2;\n\nMuch the improved QML engine with new API;\n\nEase of use and compatibility with versions of Qt 4.\n\nCapability of Qt to provide impressive graphics it was improved with a possibility of use of OpenGL ES (the version of graphic API which is specially developed for the built-in systems and mobile devices). It facilitates development and accomplishment of applications with rich graphics as with elements of velvety (velvet-like) animation and transitions, and with smooth rendering 2D and 3D of animation, at the same time – though on the high-performance systems though on devices with rather limited performance (such as mobile phones, tablets and inexpensive platforms for development, including Raspberry Pi).\n\nCross-platform portability became even simpler in Qt 5blagodarya of the new modularity separating modules into necessary (essentials) and additional (add-on) that allows to reduce the application size. Use of QPA (Qt Platform Abstraction) also facilitates cross-platform portability, allowing it is simpler to develop the application for deployment on a set of final platforms.\n\nQt supports all main desktop operating systems – Windows, Mac OS X and Linux which are built in (embedded) operating systems – such as Embedded Linux, Windows Embedded and also the most widespread real-time operating systems (real-time operating systems, RTOS) for the built-in devices - VxWorks, Neutrino and INTEGRITY.\n\nUse of the built-in engine of the Qt WebKit2 browser allows to integrate easily web content and applications. It will allow the developers using HTML5 to feel at home and develop the hybrid applications combining responsiveness/speed and power of the native code with a large number of a dynamic content.\n\nMigration of the applications developed using the previous version of Qt – Qt 4 – is very simple and often demands only the simplest recompilation application. According to Tommie Laytinen (Tommi Laitinen), the Senior Vice president of Digia, \"Qt 5.0 is the first large release of Qt which Digia performs after acquisition at Nokia of full authority for Qt at the beginning of this fall. We are glad to release Qt5.0 together with Qt Project and are very glad that we managed to integrate quickly and successfully our development teams right after completion of process of acquisition for release of this very expected Qt release. Qt 5.0 marks the beginning of new strategy of Qt and forms a basis for further development of Qt\".\n\nThe commercial version of Qt 5 can be loaded in the form of 30-day free trial version from the website qt.digia.com. Open source the version can be loaded from the website Qt Project, qt-project.org.\n\nQt 5.0.2\n\nAbout 600 improvements in comparison with Qt 5.0.1 are added to Qt 5.0.2, most of them are made in response to the notes stated by users in the course of transfer of their applications on Qt 5. The release of Qt 5.0.2 does not contain new functionality, but we could add several new binary installers and also include several scenarios of use which were problem in the previous releases of Qt5. Main advantages of Qt 5.0.2:\n\nNew binary installers for VS2012 with ANGLE and for VS2010 with OpenGL (for those who do not want to use ANGLE)\n\nCreator 2.7.0 is included in a release packet (Qt 5.0.1 was published together with Creator 2.6.2)\n\nOpportunity it is easy to hide modules in a configuration at independent assembly of Qt\n\nNow static linking for Qt libraries works correctly\n\nMore than 600 improvements in 17 different modules Qt\n\nAs usual, Qt 5.0.2 maintains forward and backward compatibility with Qt 5.0. We constantly work on error correction and improvement of quality of each new release. If you faced any problem, please, at first check the page of the known requests on which you can find solutions and methods of a bypass of often met problems. If you found earlier known bug in Qt 5, please, help us to improve a product in future releases, having written on bugreports.qt-project.org, or contact us cherezcustomer Portal (if you use the commercial license)."
    }
}