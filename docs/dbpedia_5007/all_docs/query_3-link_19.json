{
    "id": "dbpedia_5007_3",
    "rank": 19,
    "data": {
        "url": "https://qt.developpez.com/doc/vs-integration-1.4/vs-integration-managing-projects/",
        "read_more_link": "",
        "language": "en",
        "title": "Qt 1.4: Managing Projects",
        "top_image": "http://www.developpez.com/facebook-icon.png",
        "meta_img": "http://www.developpez.com/facebook-icon.png",
        "images": [
            "http://rd.himediads.com/fr/ad/developpez.com/homepage;sz=728x90;tile=2;ord=?",
            "https://qt.developpez.com/template/images/logo.png",
            "https://qt.developpez.com/template/images/facebook.png",
            "https://qt.developpez.com/template/images/twitter.png",
            "https://qt.developpez.com/template/images/rss.png",
            "http://www.developpez.com/template/kit/kitbm-viadeo.gif",
            "http://www.developpez.com/template/kit/kitbm-twitter.png",
            "http://www.developpez.com/template/kit/kitbm-google.png",
            "http://www.developpez.com/template/kit/kitbm-facebook.gif",
            "http://www.developpez.com/template/kit/kitbm-digg.png",
            "http://www.developpez.com/template/kit/kitbm-delicious.png",
            "http://www.developpez.com/template/kit/kitbm-myspace.gif",
            "http://www.developpez.com/template/kit/kitbm-yahoomyweb.png",
            "http://www.developpez.com/template/kit/kitbm-blinklist.png",
            "http://www.developpez.com/template/kit/kitbm-netvouz.png",
            "http://www.developpez.com/template/kit/kitbm-reddit.png",
            "http://www.developpez.com/template/kit/kitbm-simpy.png",
            "http://www.developpez.com/template/kit/kitbm-stumbleupon.png",
            "http://www.developpez.com/template/kit/kitbm-bookmarks.gif",
            "http://www.developpez.com/template/kit/kitbm-live.gif",
            "http://qt.developpez.com/doc/images/qt_logo.gif",
            "http://qt.developpez.com/doc/4.6/images/vs-project-propertybrowser.png",
            "http://qt.developpez.com/doc/4.6/images/vs-options-general.png",
            "http://qt.developpez.com/doc/4.6/images/vs-options-builds.png",
            "http://qt.developpez.com/doc/4.6/images/vs-export-project.png",
            "http://rd.himediads.com/fr/ad/developpez.com/cpp;sz=300x250;tile=1;ord=?",
            "https://qt.developpez.com/public/images/next-classement.gif",
            "https://qt.developpez.com/public/images/next-classement.gif",
            "http://vb.developpez.com/logos/des.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Qt 1.4: Managing Projects"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Qt 1.4: Managing Projects",
        "meta_lang": "",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Importing and Exporting Projects\n\nQt and Visual Studio use different file formats to save projects. If you build your application on multiple platforms, you probably already use Qt .pro files with qmake; otherwise, you might use .vcproj files and Visual Studio to build your project, usually convenient for Windows-only development.\n\nQt's Visual Studio integration provides a way to combine both approaches - you do not have to manually maintain .pro files and .vcproj files in parallel. You start by creating a .vcproj file as usual. When you want a qmake .pro file, select Qt|Create Basic .pro File to generate a .pro file where you can store Unix and/or Mac OS X specific settings.\n\nIf you have multiple Qt projects in one Visual Studio solution, the basic .pro file generator can create a master .pro file of type subdirs that includes all of the projects.\n\nThe generated .pro file is not meant to be a complete file, but a simple starting point for porting to other platforms. Having said, these files should be sufficient for compiling the skeleton projects created by the predefined Qt project wizards. The .pro file includes a .pri file.\n\nThe .pri file contains the list of source files, header files, .ui files, and .qrc files in the project. To generate the .pri file, select Qt|Export Project to .pri File. Whenever you add or remove a file from the Visual Studio project file, you must regenerate the .pri file to ensure that the application will still build on other platforms.\n\nAlso, ensure that the included .pri file in the .pro file points to the right file. If you saved the .pri file in the suggested path and name, this should be correct.\n\nNon-Windows developers can add or remove files to the project by editing the .pri file. When this happens, Windows developers must select Qt|Import .pri File to Project to bring the Visual Studio project file in sync with the .pri file. You will be notified regarding these changes if you set the MonitorPriFile property of the project to the path of the .pri file.\n\nIf your project contains platform-specific source files, these files should be listed in the .pro file so that they are not overwritten by the Visual Studio integration.\n\nIn summary, a cross-platform Qt project consists of the following files:\n\nA .vcproj file containing Windows-specific settings and listing the files in the project.\n\nA .pro file containing Unix and/or Mac OS X specific settings.\n\nA .pri file (a qmake include file) listing the files in the project.\n\nIf you already have a .pro file but not a .vcproj file, select Qt|Open Solution from .pro File to convert your .pro file to a .vcproj file. Be aware that the generated .vcproj only contains Windows-specific settings. Also, there is no way to convert a .vcproj file back to a .pro file format, apart from the basic .pro mechanism described above."
    }
}