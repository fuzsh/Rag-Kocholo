{
    "id": "dbpedia_5007_1",
    "rank": 65,
    "data": {
        "url": "https://github.com/FlavioFalcao/compass-qt",
        "read_more_link": "",
        "language": "en",
        "title": "qt: A Nokia Developer Qt Quick example application demonstrating the use of the Qt Location API and Nokia Maps with the compass sensor.",
        "top_image": "https://opengraph.githubassets.com/e627d315acda5fe02e1f07092c7601e846326ca060bacb87a6385d8c681a04d2/FlavioFalcao/compass-qt",
        "meta_img": "https://opengraph.githubassets.com/e627d315acda5fe02e1f07092c7601e846326ca060bacb87a6385d8c681a04d2/FlavioFalcao/compass-qt",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "A Nokia Developer Qt Quick example application demonstrating the use of the Qt Location API and Nokia Maps with the compass sensor. - FlavioFalcao/compass-qt",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/FlavioFalcao/compass-qt",
        "text": "Compass is a Nokia showcase example application that demonstrates the use of the Qt Location API. This application can be used as a traditional compass with Nokia Maps and it allows the user to determine the bearing to the desired direction. The tracking function draws the travelled route to the map and the route can be saved in KML format.\n\nThis example application is hosted in Nokia Developer Projects:\n\nhttp://projects.developer.nokia.com/compass\n\nFor more information on implementation and porting, visit the productâ€™s wiki pages:\n\nhttp://projects.developer.nokia.com/compass/wiki\n\nThe UI of the application has been redesigned and it has been implemented by using Qt Quick Components.\n\nUsage\n\nThe application uses QML code as much as possible. Some custom elements are implemented by using Qt code, such as Arc element to draw the arc-style progress bar in the calibration view and the PersistentStorage element to allow storing and retrieving of data to the devices persistent storage.\n\nThe walked route is stored in KML file format and it can be opened in many external map applications.\n\nFor more information about the KML file format:\n\nhttp://www.opengeospatial.org/standards/kml/\n\nPrerequisites\n\nQt basics\n\nQt Quick basics\n\nProject structure and implementation\n\n| The root folder contains the license information and this | file (release notes). | |- bin Contains the compiled binaries. | |- doc Contains documents and graphics projects that were used | in development of the application. | |- src Contains the project file of the application and Qt/C++ | source code. | |- icons Contains application icons. | |- qml Root folder for QML and Javascript files. | | | |- common Common, cross-platform QML and Javascript files. | | | |- harmattan Harmattan specific QML and Javascript files. | | | |- images Graphics used in the QML files. | | | |- symbian Symbian specific QML and Javascript files. | |- qtc_packaging Contains the Harmattan (Debian) packaging files.\n\nThe application uses the following less commonly used QML elements.\n\nMaps and Navigation API:\n\nMap\n\nMapPolyLine\n\nMapCircle\n\nGesture handling:\n\nPinchArea\n\nMobility:\n\nCompass\n\nPositionSource\n\nThe Qt Quick Components toolbar is customized in Symbian version; see the code in src/qml/symbian/CustomToolBar.qml. In the Harmattan version the toolbar is customized by using ToolBarStyle.\n\nCompatibility\n\nSymbian devices with Qt 4.7.4 or higher.\n\nMeeGo 1.2 Harmattan.\n\nTested to work on Nokia C7 and Nokia N9 phones. Developed with Qt SDK 1.1.4.\n\nNone; the application can be self-signed on Symbian.\n\nThe Map element freezes the UI if the map is panned quickly. This has been noticed on Symbian Belle with Nokia 700 and Nokia 701 phones. For more information about the bug see https://bugreports.qt.nokia.com/browse/QTMOBILITY-2006.\n\nBuilding, installing, and running the application\n\nCheck that you have the latest Qt SDK installed in the development environment and the latest Qt version on the device.\n\nQt Quick Components 1.1 or higher is required.\n\nYou can install and run the application on the device by using the Qt SDK. Open the project in the SDK, set up the correct target (depending on the device platform), and click the Run button. For more details about this approach, visit the Qt Getting Started section at Nokia Developer (http://www.developer.nokia.com/Develop/Qt/Getting_started/).\n\nMake sure your device is connected to your computer. Locate the .sis installation file and open it with Ovi Suite. Accept all requests from Ovi Suite and the device. Note that you can also install the application by copying the installation file onto your device and opening it with the Symbian File Manager application.\n\nAfter the application is installed, locate the application icon from the application menu and launch the application by tapping the icon.\n\nCopy the application Debian package onto the device. Locate the file with the device and run it; this will install the application. Note that you can also use the terminal application and install the application by typing the command 'dpkg -i compass_v2_2_harmattan.deb' on the command line. To install the application using the terminal application, make sure you have the right privileges to do so (e.g. root access).\n\nOnce the application is installed, locate the application icon from the application menu and launch the application by tapping the icon.\n\nLicense\n\nSee the license text file delivered with this project. The license file is also available online at\n\nhttp://projects.developer.nokia.com/compass/browser/Licence.txt\n\nRelated documentation\n\nQt Quick Components\n\nhttp://doc.qt.nokia.com/qt-components-symbian-1.0/index.html\n\nhttp://harmattan-dev.nokia.com/docs/library/html/qt-components/qt-components.html\n\nVersion history\n\n2.2 Updated the compass graphics. 2.1 Added center icon to better show the current place. 2.0 New UI with Qt Quick Components, added tracking feature. 1.1 Added support for Symbian^1 and MeeGo 1.2 Harmattan. 1.0 Compass data via Qt QCompass. 0.9 Added better graphics. Possibility to disable audio feedback on calibration. Bug fixes. Work-around for QCompass crash by Symbian code. 0.1 First public version in Projects Forum Nokia."
    }
}