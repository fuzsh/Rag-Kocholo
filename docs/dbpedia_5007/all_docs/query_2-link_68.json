{
    "id": "dbpedia_5007_2",
    "rank": 68,
    "data": {
        "url": "https://developer.toradex.com/torizon/application-development/use-cases/gui/qt-on-torizon-os/",
        "read_more_link": "",
        "language": "en",
        "title": "Qt on Torizon OS",
        "top_image": "https://developer.toradex.com/img/favicon.ico",
        "meta_img": "https://developer.toradex.com/img/favicon.ico",
        "images": [
            "https://docs.toradex.com/110352-developer-logo-white-01.svg",
            "https://docs.toradex.com/110352-developer-logo-white-01.svg",
            "https://docs.toradex.com/114204-toradex-celebrating-20-years-developer-website.png",
            "https://docs.toradex.com/110523-menu-som-icon.svg",
            "https://docs.toradex.com/110524-menu-carrier-icon.svg",
            "https://docs.toradex.com/110522-menu-accessories-icon.svg",
            "https://docs.toradex.com/110523-menu-som-icon.svg",
            "https://docs.toradex.com/110524-menu-carrier-icon.svg",
            "https://docs.toradex.com/110522-menu-accessories-icon.svg",
            "https://docs.toradex.com/110523-menu-som-icon.svg",
            "https://docs.toradex.com/110524-menu-carrier-icon.svg",
            "https://docs.toradex.com/110522-menu-accessories-icon.svg",
            "https://docs.toradex.com/110578-menu-camera-icon.svg",
            "https://docs.toradex.com/110579-menu-display-icon.svg",
            "https://docs.toradex.com/110580-menu-network-icon.svg",
            "https://docs.toradex.com/110525-menu-add-on-icon.svg",
            "https://docs.toradex.com/112115-menu-recovery-mode-icon.svg",
            "https://docs.toradex.com/112114-menu-power-consumption-icon.svg",
            "https://docs.toradex.com/112113-menu-ordering-information-and-product-identification-icon.svg",
            "https://docs.toradex.com/114580-menu-peripheral-database-icon.svg",
            "https://docs.toradex.com/112116-menu-software-on-toradex-icon.svg",
            "https://docs.toradex.com/110529-menu-download-icon.svg",
            "https://docs.toradex.com/110535-menu-real-time-os-icon.svg",
            "https://docs.toradex.com/111047-megamenu-wec-icon.svg",
            "https://docs.toradex.com/113673-linux_resources_icon.png",
            "https://docs.toradex.com/113100-device_tree_icon.png",
            "https://docs.toradex.com/111087-menu-other-operating-system.svg",
            "https://docs.toradex.com/110534-menu-easy-installer-icon.svg",
            "https://docs.toradex.com/112112-menu-loading-toradex-easy-installer-icon.svg",
            "https://docs.toradex.com/114358-menu-easy-installer-download-icon.svg",
            "https://docs.toradex.com/114357-menu-easy-installer-flash-image-icon.svg",
            "https://docs.toradex.com/114359-menu-easy-installer-production-programming-icon.svg",
            "https://docs.toradex.com/112110-menu-tezi-detailed-manual-icon.svg",
            "https://docs.toradex.com/111086-menu-easy-installer-issue-tracker.svg",
            "https://docs.toradex.com/112117-menu-torizon-overview-icon.svg",
            "https://docs.toradex.com/110527-menu-torizoncore-icon.svg",
            "https://docs.toradex.com/110533-menu-application-develop-icon.svg",
            "https://docs.toradex.com/112111-menu-torizon-development-environment-icon.svg",
            "https://docs.toradex.com/110528-menu-torizoncore-builder-icon.svg",
            "https://docs.toradex.com/111088-menu-torizon-platform-service.svg",
            "https://docs.toradex.com/111089-menu-torizon-issue-tracker.svg",
            "https://docs.toradex.com/110526-menu-bsp-icon.svg",
            "https://docs.toradex.com/112108-menu-build-embedded-linux-with-yocto-icon.svg",
            "https://docs.toradex.com/110533-menu-application-develop-icon.svg",
            "https://docs.toradex.com/112109-menu-build-u-boot-and-linux-kernel-from-source-code-icon.svg",
            "https://docs.toradex.com/111090-menu-bsp-layers-issue-tracker.svg",
            "https://docs1.toradex.com/113984-show-project-documentation.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Qt with Torizon",
            "GUI development on Torizon",
            "GUI development with Qt on Torizon"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "This article provides general information and instructions for Graphical User Interfaces (GUIs) development with Qt on Torizon OS.",
        "meta_lang": "en",
        "meta_favicon": "/img/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://developer.toradex.com/torizon/application-development/use-cases/gui/qt-on-torizon-os",
        "text": "This article provides general information and instructions for Graphical User Interfaces (GUIs) development with Qt on Torizon OS.\n\nQt is a popular framework for developing (GUIs), that can be used on Toradex's Systems on Module and Torizon OS.\n\nA detailed comparison between the recommended options for developing Graphical User Interfaces on Torizon OS can be seen in the GUI Overview article\n\nThere are available Qt Debian containers for Torizon OS, with hardware acceleration (for Qt5 and Qt6 on Torizon OS 6, and for Qt5 on Torizon OS 5). And also Qt6 C++ and Qt for Python - Pyside 2 (and some option of Qt6 for Python in the future) VSCode Torizon IDE Extension template templates, working out of the box.\n\nThis article complies with the Typographic Conventions for Torizon Documentation.\n\nA Toradex System on Module with Torizon OS installed.\n\nAn understanding of GUI Overview.\n\nReading and understanding of Debian Containers for Torizon.\n\nAwareness about Torizon OS Containers Tags and Versioning.\n\nA configured build environment, as described in the Configure Build Environment for Torizon Containers article or in the Set up the Torizon IDE Extension Environment article for using the Qt C++ or Python templates for Torizon OS.\n\nAs mentioned, there are Qt Debian containers available for Torizon OS. These containers work on top of Wayland, as explained in Debian Containers for Torizon, and come with Qt base libraries installed and ready to use, providing hardware acceleration (application running on the GPU instead of just the CPU, improving performance) for Qt applications.\n\nOn Torizon OS 6, hardware acceleration works for both Qt5 and Qt6. On Torizon OS 5 just with Qt5.\n\nThese containers provided by Toradex are called qt6-wayland, qt6-wayland-vivante (for the IMX8 modules, that use the Vivante GPU) and qt6-wayland-am62 (for AM62-based modules). They are minimal containers with Qt6 libraries, which you should use as the base for deploying your own Qt6 app. There are also the qt5-wayland, qt5-wayland-vivante and qt5-wayland-am62 containers for Qt5.\n\nThe qt6-wayland, qt6-wayland-vivante and qt6-wayland-am62 containers can be used in two ways:\n\nWith the VSCode Torizon IDE Extension, that provides ready-to-use C++ and Python (Pyside2 for now) templates, that offer an out-of-the-box experience on Toradex System on Modules, together with benefits for development and integration with other parts of the Torizon OS ecosystem.\n\nThrough the CLI (command line interface), which can provide you an out-of-the-box evaluation experience on Toradex System on Modules with the qt6-wayland-examples (and variations) containers.\n\nThis ways and how to use them will be described in the next sections.\n\nThe VSCode Torizon IDE Extension provides a ready-to-use Qt6 C++ QML template, that offer an out-of-the-box experience on Toradex System on Modules (SoMs), together with other benefits for application development and integration with other parts of the Torizon OS ecosystem like TorizonCore Builder and Torizon Cloud.\n\nTo create and run a Qt6 C++ application follow the Torizon IDE Extension development workflow.\n\nThis template also provides integration with Qt Creator and Qt Design Studio, allowing you to also develop and debug your application on the Toradex SoM using Qt Creator and Qt Design Studio if you want.\n\nFor the more details on how to do it check the template specific documentation. To do it, once you have created the project, click on the show-project-documentation task in the TASK RUNNER tab:\n\nJust as the VSCode Torizon IDE Extension provides a Qt C++ Template, it also provides a ready-to-use Qt5 Pyside2 QML template, with similar benefits in terms of an out-of-the-box experience on Toradex System on Module, application development and integration with other parts of the Torizon OS ecosystem like TorizonCore Builder and Torizon Cloud.\n\nThe only caveat is that, unlike the Qt C++ Template, this template does not provide the integration with Qt Creator and Qt Design Studio.\n\nTo create and run a Qt for Python application follow the Torizon IDE Extension development workflow.\n\nAs explained in the Qt Debian Containers for Torizon OS, Toradex provides base containers with Qt base libraries installed and ready to use, with hardware acceleration. The ones that should be used as base for your Qt application are called qt6-wayland, qt6-wayland-vivante and qt6-wayland-am62.\n\nToradex also provides containers - called qt6-wayland-examples, qt6-wayland-examples-vivante and qt6-wayland-examples-am62- that include qt6-base-examples and offer an out-of-the-box evaluation experience. The following section shows how to run examples within those containers.\n\nConnect to the board terminal by establishing an SSH connection.\n\nStart a Weston container which will be the graphics server. Choose your module from the tabs below and follow the instructions:"
    }
}