{
    "id": "dbpedia_5007_3",
    "rank": 20,
    "data": {
        "url": "https://docs.huihoo.com/qt/qtcreator/4.2/quick-projects.html",
        "read_more_link": "",
        "language": "en",
        "title": "Creating Qt Quick Projects",
        "top_image": "https://d33sqmjvzgs8hq.cloudfront.net/wp-content/themes/oneqt/assets/images/favicon-32x32.png",
        "meta_img": "https://d33sqmjvzgs8hq.cloudfront.net/wp-content/themes/oneqt/assets/images/favicon-32x32.png",
        "images": [
            "https://d33sqmjvzgs8hq.cloudfront.net/wp-content/themes/oneqt/assets/images/cookie_small.png",
            "https://docs.huihoo.com/qt/qtcreator/4.2/images/qmldesigner-new-project.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://d33sqmjvzgs8hq.cloudfront.net/wp-content/themes/oneqt/assets/images/favicon.ico.gzip",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "When you create a new Qt Quick project from scratch, you have the following options:\n\nQt Quick Application creates a Qt Quick 2 application project that can contain both QML and C++ code. The project includes a QQuickView. You can build the application and deploy it to desktop, embedded, and mobile target platforms.\n\nQt Quick Controls 2 Application and Qt Quick Controls Application are like Qt Quick Application, but using Qt Quick Controls 2 (requires Qt 5.7 or later) or Qt Quick Controls.\n\nQt Canvas 3D Application creates a Qt Quick application that imports the Qt Canvas 3D module and, optionally, includes three.js.\n\nQt Quick UI (in the Other Project category) creates a Qt Quick UI project with a single QML file that contains the main view. You can review Qt Quick UI projects in a preview tool and you need not build them. They do not contain any C++ code.\n\nQt Quick Controls UI is like Qt Quick UI, but using Qt Quick Controls.\n\nQt Quick Extension Plugins (in the Library category) create C++ plugins that make it possible to offer extensions that can be loaded dynamically into Qt Quick applications. Select Qt Quick 1 Extension Plugin to create extensions for Qt Quick 1 applications and Qt Quick 2 Extension Plugin to create extensions for Qt Quick 2 applications.\n\nCreating Qt Quick Applications\n\nSelect File > New File or Project > Application > Qt Quick Application or Qt Quick Controls Application > Choose.\n\nFor some Qt Quick applications, you must select the Qt version to develop with in the Minimal required Qt version field. The Qt version determines the Qt Quick imports that are used in the QML files.\n\nFor some Qt Quick applications, you can select the With .ui.qml file check box to create an UI form that can contain a subset of the QML language. Similarly as with the UI forms for Qt Designer, it is recommended that you use Qt Quick Designer to edit the UI forms. For more information, see Qt Quick UI Forms.\n\nFor some Qt Quick applications, you can also select the Enable native styling check box. Qt Creator adds a dependency to the Qt Widgets module to the .pro file.\n\nSelect kits for running and building your project, and then click Next.\n\nNote: Kits are listed if they have been specified in Tools > Options > Build & Run > Kits.\n\nReview the project settings, and click Finish (on Windows and Linux) or Done (on macOS) to create the project.\n\nNote: The SDK for a particular target platform might install additional templates for that platform. For example, the QNX templates are installed as part of the QNX SDK.\n\nQt Creator creates the necessary boilerplate files. Some of the files are specific to a particular target platform.\n\nCreating Qt Quick UI Projects\n\nSelect File > New File or Project > Other Project > Qt Quick UI or Qt Quick Controls UI > Choose.\n\nIn the Minimal required Qt version field, select the Qt version to develop with. The Qt version determines the Qt Quick imports that are used in the QML files.\n\nYou can add imports later to combine Qt Quick basic types with Qt Quick Controls, Qt Quick Dialogs, and Qt Quick Layouts (available since Qt 5.1).\n\nSelect the With .ui.qml file check box to create an UI form.\n\nQt Creator creates the following files:\n\n.qmlproject project file defines that all QML, JavaScript, and image files in the project folder belong to the project. Therefore, you do not need to individually list all the files in the project.\n\n.qml file defines an UI item, such as a component, screen, or the whole application UI.\n\nui.qml file defines a form for the application UI. This file is created if you selected the With .ui.qml file check box.\n\nTo use JavaScript and image files in the application, copy them to the project folder."
    }
}