{
    "id": "dbpedia_5007_0",
    "rank": 24,
    "data": {
        "url": "http://fabacademy.org/2019/labs/puebla/students/rafael-aguirre/week17.html",
        "read_more_link": "",
        "language": "en",
        "title": "Interface and Application Programming",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://fabacademy.org/2019/labs/puebla/students/rafael-aguirre/images/week17/2019-06-21-140300_1280x720_scrot.png",
            "http://fabacademy.org/2019/labs/puebla/students/rafael-aguirre/images/week17/Captura.JPG"
        ],
        "movies": [
            "https://www.youtube.com/embed/WtqInPpE2Ig"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "For my individual assignment, I decided to use my output device that I did to control an engine, at the time, what I did in that task was to invert the direction of the engine through a pushbutton. For this task I wanted to make a simple interface but I could control the direction of the engine and speed through a graphical interface.\n\nThe graphical interface on which I decided to base myself was to use QT, which is an object-oriented multiplatform work environment widely used to develop programs that use graphical user interface, as well as different types of tools for the command line and consoles for servers that do not need a graphical user interface.\n\nQt is developed as a free and open source software through the Qt Project, where both the community and developers of Nokia, Digia and other companies participate. Previously, it was developed by the Qt software division of Nokia, which came into force after the acquisition by Nokia of the Norwegian company Trolltech, the original producer of Qt, on June 17, 2008. Qt is distributed under the terms of the GNU Lesser General Public License and others. On the other hand, Digia is in charge of commercial licenses of Qt since March 2011.\n\nQt is used in KDE, desktop environment for systems such as GNU / Linux or FreeBSD, among others.\n\nQt uses the C ++ programming language natively, however for me it is not such a friendly language, so use a binding to use the python language with QT.\n\n471/5000 To do this, use the QT Designer software, which is an interface to create applications in a very visual way, practically dragging widgets. Design something simple but functional, add 2 buttons one to go back and another to go forward, a label to indicate the speed and a horizontal slider to adjust the speed of the engine.\n\nAfter creating my interface, save the file in .ui format which then transforms to python code.\n\nTo transform the .ui file to .py install a binding of the graphic library Qt for the Python programming language. The library is developed by the British firm Riverbank Computing and is available for Windows, GNU / Linux and Mac OS X under different licenses.\n\nIt is worth mentioning that I advise using a virtual environment to install this type of files, in this way you isolate the libraries and bindings necessary for your project, without affecting the whole system.\n\nWith the following command, I converted the file to python code using a terminal:\n\npyuic5 motores.ui -o motores.py\n\nAnd to execute it, it is necessary to add the following code to the file so that it can be launched as a window:\n\nif __name__ == \"__main__\": import sys app = QtWidgets.QApplication(sys.argv) MainWindow = QtWidgets.QMainWindow() ui = Ui_MainWindow() ui.setupUi(MainWindow) MainWindow.show() sys.exit(app.exec_())\n\nFinally, save the file and execute the file, thus showing the project window."
    }
}