{
    "id": "wrong_mix_domainrange_foundationPlace_00084_2",
    "rank": 50,
    "data": {
        "url": "https://online.stevens.edu/online-masters-computer-science-mscs/",
        "read_more_link": "",
        "language": "en",
        "title": "Online Master's in Computer Science (MSCS)",
        "top_image": "https://online.stevens.edu/wp-content/uploads/sites/2/2022/08/rojona-feliciano-stevens-mscs-testimonial-headshot.jpg",
        "meta_img": "https://online.stevens.edu/wp-content/uploads/sites/2/2022/08/rojona-feliciano-stevens-mscs-testimonial-headshot.jpg",
        "images": [
            "https://online.stevens.edu/wp-content/uploads/sites/2/2022/09/stevens-institute-of-technology-word-mark-logo.png",
            "https://online.stevens.edu/wp-content/uploads/sites/2/2022/08/shudong-hao-stevens-faculty.jpeg",
            "https://online.stevens.edu/wp-content/uploads/sites/2/2022/11/Reza_Peyrovian.png",
            "https://online.stevens.edu/wp-content/uploads/sites/2/2022/11/Patrick_Hill.jpg",
            "https://online.stevens.edu/wp-content/uploads/sites/2/2022/11/dominic-duggan-online-mscs-stevens-faculty.jpg",
            "https://online.stevens.edu/wp-content/uploads/sites/2/2022/11/Samuel_Kim.png",
            "https://online.stevens.edu/wp-content/uploads/sites/2/2022/08/rojona-feliciano-stevens-mscs-testimonial-headshot.jpg",
            "https://online.stevens.edu/wp-content/uploads/sites/2/2022/08/stevens-institute-of-technology-footer-logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "jpiersol"
        ],
        "publish_date": "2022-08-16T16:05:04-04:00",
        "summary": "",
        "meta_description": "Explore the online master’s in computer science program at one of the first technological universities in the U.S.",
        "meta_lang": "en",
        "meta_favicon": "https://online.stevens.edu/wp-content/uploads/sites/2/2022/08/favicon.png",
        "meta_site_name": "Stevens Online",
        "canonical_link": "https://online.stevens.edu/online-masters-computer-science-mscs/",
        "text": "This course introduces the most commonly used data structures, as well as sorting algorithms, using the Java programming language. Data structures that are introduced and compared include arrays, lists, stacks, queues, trees, priority queues, and maps, such as hash tables. Relevant principles including encapsulation, interfaces and testing are presented along with the data structures, while asymptotic complexity analysis is also introduced. Students implement and test programs that use the above data structures in conjunction with algorithms such as insertion, selection, merge, and quick sort.\n\nNote: This is a foundational course to be taken by students who did not have the relevant background.\n\nThis course will provide students with a first approach to internet programming. It will give the basic knowledge on how the internet works and how to create advanced web sites by the use of script languages, after learning the basics of HTML. In this course, the student will learn how to create a complex global site through the creation of individual working modules, providing them the interpersonal skills required in business settings such as team building and cooperation.\n\nPersonal computing is now mobile and cloud-based. Disconnected mobile computing challenges many of the assumptions underlying much of today’s distributed systems. “Cloud computing” provides a powerful background computing facility for mobile devices, but also raises important issues of trust and privacy. Many of these issues arise in critical yet sensitive domains such as electronic healthcare delivery. Mobile computing applications are location-aware or context-aware; the privacy implications of these applications are profound. Mobile, and increasingly location aware, gaming systems are now one of the largest sectors of the world entertainment industry. The purpose of this course is to review the fundamentals of mobile systems and applications, and how they relate to services in the cloud. The course will review material from wireless communication, distributed systems, and security and privacy, as they pertain to the systems being studied. The course will involve programming mobile apps using a popular mobile computing platform, such as Android or iPhone, to get hands-on experience with the concepts being discussed in the class.\n\nThis is an introductory course for machine learning theory, algorithms and applications. The content aims to provide students with the knowledge to understand key elements of how to design algorithms/systems that automatically learn, improve and accumulate knowledge with experience. Topics covered in this course include decision tree learning, neural networks, Bayesian learning, reinforcement learning, ensembling multiple learning algorithms and various application problems. Students will be provided opportunities to simulate their algorithms in a programming language and apply them to solve real-world problems. Cross-listed with: EE 695.\n\nThe objective of this course is to give students a basic grounding in designing and implementing distributed and cloud systems, including issues in the implementation of backend services in the cloud itself. What are global consensus and Paxos, and what is their application in building cloud systems? What are the advantages and disadvantages of using distributed NoSQL stores such as Cassandra instead of relational stores such as MySQL? What are strong and weak consistency, what are the “CAP Theorem” and the “CALM Theorem” and what are their implications for building highly available services? What is a blockchain, such as the Bitcoin blockchain, and how does it relate to issues in coordinating distributed systems? What are the roles of REST, Websockets and stream processing in cloud applications? This course will combine hands-on experience in developing cloud services, with a firm grounding in the tools and principles for building distributed and cloud applications, including advanced architectures such as peer-to-peer and publish-subscribe. Besides cloud services, we will also be looking at cloud support for batch processing, such as the Hadoop framework, and its use with NoSQL data stores, such as Cassandra.\n\nThis course will provide students with a first approach to internet programming. It will give the basic knowledge on how the internet works and how to create advanced web sites by the use of script languages, after learning the basics of HTML. In this course, the student will learn how to create a complex global site through the creation of individual working modules, providing them the interpersonal skills required in business settings such as team building and cooperation.\n\nPersonal computing is now mobile and cloud-based. Disconnected mobile computing challenges many of the assumptions underlying much of today’s distributed systems. “Cloud computing” provides a powerful background computing facility for mobile devices, but also raises important issues of trust and privacy. Many of these issues arise in critical yet sensitive domains such as electronic healthcare delivery. Mobile computing applications are location-aware or context-aware; the privacy implications of these applications are profound. Mobile, and increasingly location aware, gaming systems are now one of the largest sectors of the world entertainment industry. The purpose of this course is to review the fundamentals of mobile systems and applications, and how they relate to services in the cloud. The course will review material from wireless communication, distributed systems, and security and privacy, as they pertain to the systems being studied. The course will involve programming mobile apps using a popular mobile computing platform, such as Android or iPhone, to get hands-on experience with the concepts being discussed in the class.\n\nThis is an introductory course for machine learning theory, algorithms and applications. The content aims to provide students with the knowledge to understand key elements of how to design algorithms/systems that automatically learn, improve and accumulate knowledge with experience. Topics covered in this course include decision tree learning, neural networks, Bayesian learning, reinforcement learning, ensembling multiple learning algorithms and various application problems. Students will be provided opportunities to simulate their algorithms in a programming language and apply them to solve real-world problems. Cross-listed with: EE 695.\n\nIn software problem areas that require exploratory development efforts, those with complex requirements and high levels of change, agile software development practices are highly effective when deployed in a collaborative, people-centered organizational culture. This course examines agile methods, including Extreme Programming (XP), Scrum, Lean, Crystal, Dynamic Systems Development Method and Feature-Driven Development to understand how rapid realization of software occurs most effectively. The ability of agile development teams to rapidly develop high quality, customer-valued software is examined and contrasted with teams following more traditional methodologies that emphasize planning and documentation. Students will learn agile development principles and techniques covering the entire software development process from problem conception through development, testing and deployment, and will be able to effectively participate in and manage agile software developments as a result of their successfully completing this course. Case studies and software development projects are used throughout.\n\nThis course will give students a rigorous introduction to the foundations of machine learning, including but not limited to frequently used tools in linear algebra, calculus, probability and widely applied methods such as linear regression and support vector machines. In addition, this course provides hands-on training on implementing these algorithms via Python from scratch. Students will be trained to use popular Python libraries such as Numpy, Scipy and Matplotlib.\n\nDeep learning (DL) is a family of the most powerful and popular machine learning (ML) methods and has wide real-world applications such as face recognition, machine translation, self-driving cars, recommender systems, and playing the Go game, etc. This course is designed for students either with or without an ML background. The course will cover fundamental ML, computer vision, and natural language problems and DL tools for solving the problems. The students will be able to use DL methods for solving real-world ML problems. The homework is mostly implementation and programming using the Python language and popular DL frameworks such as TensorFlow and Keras. Knowledge and skills in Python programming and linear algebra are strictly required. Probability theory, statistics, and numerical analysis are recommended but not required. Knowledge in machine learning and artificial intelligence is helpful but unnecessary.\n\nNatural language processing (NLP) is one of the most important technologies in the era of information. Comprehending human language is also a crucial and challenging part of artificial intelligence. People communicate almost everything in language: conferences, emails, customer service, language translation, web searches, reports and so on. There is a large variety of underlying tasks and machine learning models behind NLP applications. Recently, deep learning approaches have achieved high performance in many different NLP tasks. Instead of traditional and task-specific feature engineering, deep learning can solve tasks with single end-to-end models. The course provides an introduction to machine learning research applied to NLP. We will cover topics including word vector representations, neural networks, recurrent neural networks, convolutional neural networks, semi-supervised models and reinforcement learning for NLP, as well as some attention-based models.\n\nApplied Analytics is a capstone course for the analytic-focused MBA program. It is intended to integrate all previously taken courses in the program by presenting a set of increasingly complex business problems. These problems can be solved through analytic skills taught in this and previous courses. In particular, the course is intended to reinforce the understanding of analysis as a way to build models that can focus attention on parts of the system that can be improved through intervention. The early part of the course uses synthetic data and empirical data readily available for analysis. The second part of the course encourages students to state and solve their own problem, gathering their own data as a part of the analytic process\n\nThe field of Big Data is emerging as one of the transformative business processes of recent times. It utilizes classic techniques from business intelligence and analysis (BI&A) along with new tools and processes to deal with the volume, velocity, and variety associated with big data. As they enter the workforce, a significant percentage of BIA students will be directly involved with big data as technologists, managers, or users. This course will build on their understanding of the basic concepts of BI&A to provide them with the background to succeed in the evolving data-centric world, not only from the point of view of the technologies required but also in terms of management, governance, and organization. Students taking the course will be expected to have some background in areas such as multivariate statistics, data mining, data management, and programming.\n\nIn this course, students will learn through hands-on experience how to extract data from the web and analyze web-scale data using distributed computing. Students will learn different analysis methods that are widely used across the range of internet companies, from start-ups to online giants like Amazon or Google. At the end of the course, students will apply these methods to answer a real scientific question or to create a useful web application.\n\nPersonal computing is now mobile and cloud-based. Disconnected mobile computing challenges many of the assumptions underlying much of today’s distributed systems. Cloud computing provides a powerful background computing facility for mobile devices but also raises important issues of trust and privacy. Many of these issues arise in critical yet sensitive domains such as electronic healthcare delivery. Mobile computing applications are location-aware or context-aware; the privacy implications of these applications are profound. Mobile and, increasingly, location-aware gaming systems are now one of the largest sectors of the world entertainment industry. The purpose of this course is to review the fundamentals of mobile systems and applications and how they relate to services in the cloud. The course will review material from wireless communication, distributed systems, and security and privacy as they pertain to the systems being studied. The course will involve programming mobile apps using a popular mobile computing platform, such as Android or iPhone, to get hands-on experience with the concepts being discussed in the class. Programming experience with Java or C# is required.\n\nThis course will provide students with an introduction to internet programming. It will cover the basic knowledge of how the internet works and how to create advanced websites using script languages after learning the basics of HTML. The course will teach students how to build a complex global site through the creation of individual working modules, helping them develop the skills required in any business, such as proper teamwork and coordination between groups.\n\nThis course covers the computing background for large-scale enterprise computing, including the outsourcing of computing to the cloud. The course includes developing and deploying web and microservice applications in the cloud for both client-facing and B2B applications. The course also considers cloud support for enterprise integration and Internet of Things, and NoSQL data stores such as CosmosDB. Finally, the course considers virtualization and its role in the cloud, including security in virtualization. Cloud computing: SaaS and PaaS (e.g., Azure App Service). Web applications in the cloud: ASP.NET MVC. Enterprise Web services: gRPC and Web API. Serverless applications and microservices. Gathering and processing data using NoSQL data stores, e.g., CosmosDB. Enterprise blockchain: Azure Confidential Ledger and Quorum Blockchain Service. Virtualization as the basis for scalable enterprise and cloud computing: Xen, KVM, z/VM. Secure virtualization, e.g., Security Enhanced Linux (SELinux). Programming experience with Java or C# is required.\n\nThis course covers the issues in designing and engineering large enterprise and cloud-based software systems. Such systems are distributed and require increasingly complex inter-enterprise as well as intra-enterprise coordination. Technologies such as Web Services and cloud computing provide platforms for building such systems, and architectures such as microservices and cloud-native applications, event-driven architecture (EDA), domain-driven design (DDD), representational state transfer (REST), command query responsibility segregation (CQRS), serverless and blockchain are idioms for structuring such systems. Data modeling includes E-R designs, XML and JSON Schemas, NoSQL data models, semantic data modeling (OWL), and object-relational mapping (ORM). Process modeling includes BPMN, Workflow and Petri nets. The course includes hands-on application of the concepts with tools such as Jakarta EE and Eclipse MicroProfile, Docker, Kubernetes and Kafka, and Hyperledger Fabric. Knowledge of Java or C# is required.\n\nIn software problem areas that require exploratory development efforts, those with complex requirements and high levels of change, agile software development practices are highly effective when deployed in a collaborative, people-centered organizational culture. This course examines agile methods, including Extreme Programming (XP), Scrum, Lean, Crystal, Dynamic Systems Development Method, and Feature-Driven Development to understand how rapid realization of software occurs most effectively. The ability of agile development teams to rapidly develop high-quality, customer-valued software is examined and contrasted with teams following more traditional methodologies that emphasize planning and documentation. Students will learn agile development principles and techniques covering the entire software development process from problem conception through development, testing and deployment, and will be able to effectively participate in and manage agile software developments as a result of their successfully completing this course. Case studies and software development projects are used throughout."
    }
}