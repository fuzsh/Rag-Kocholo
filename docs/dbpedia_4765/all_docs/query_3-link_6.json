{
    "id": "dbpedia_4765_3",
    "rank": 6,
    "data": {
        "url": "https://www.geeksforgeeks.org/error-detection-code-checksum/",
        "read_more_link": "",
        "language": "en",
        "title": "Error Detection Code",
        "top_image": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "meta_img": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "images": [
            "https://media.geeksforgeeks.org/gfg-gg-logo.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20200909115220/Checksum.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20240718182406/correct_data_and_checksum_result.png",
            "https://media.geeksforgeeks.org/auth/profile/p1tb8bf3j6eyxoij4gps",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/new-premium-rbanner-us.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/gfgFooterLogo.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/googleplay.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/appstore.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/suggestChangeIcon.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/createImprovementIcon.png"
        ],
        "movies": [
            "https://www.geeksforgeeks.org/videos/checksum/"
        ],
        "keywords": [],
        "meta_keywords": [
            "Data Structures",
            "Algorithms",
            "Python",
            "Java",
            "C",
            "C++",
            "JavaScript",
            "Android Development",
            "SQL",
            "Data Science",
            "Machine Learning",
            "PHP",
            "Web Development",
            "System Design",
            "Tutorial",
            "Technical Blogs",
            "Interview Experience",
            "Interview Preparation",
            "Programming",
            "Competitive Programming",
            "Jobs",
            "Coding Contests",
            "GATE CSE",
            "HTML",
            "CSS",
            "React",
            "NodeJS",
            "Placement",
            "Aptitude",
            "Quiz",
            "Computer Science",
            "Programming Examples",
            "GeeksforGeeks Courses",
            "Puzzles",
            "SSC",
            "Banking",
            "UPSC",
            "Commerce",
            "Finance",
            "CBSE",
            "School",
            "k12",
            "General Knowledge",
            "News",
            "Mathematics",
            "Exams"
        ],
        "tags": null,
        "authors": [
            "GeeksforGeeks"
        ],
        "publish_date": "2020-09-02T07:21:24",
        "summary": "",
        "meta_description": "A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.",
        "meta_lang": "en",
        "meta_favicon": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_favicon.png",
        "meta_site_name": "GeeksforGeeks",
        "canonical_link": "https://www.geeksforgeeks.org/error-detection-code-checksum/",
        "text": "Checksum is the error detection method used by upper layer protocols and is considered to be more reliable than LRC, VRC and CRC. This method makes the use of Checksum Generator on Sender side and Checksum Checker on Receiver side.\n\nAt the Sender side, the data is divided into equal subunits of n bit length by the checksum generator. This bit is generally of 16-bit length. These subunits are then added together using one’s complement method. This sum is of n bits. The resultant bit is then complemented. This complemented sum which is called checksum is appended to the end of original data unit and is then transmitted to receiver.\n\nThe Receiver after receiving data + checksum passes it to checksum checker. Checksum checker divides this data unit into various subunits of equal length and adds all these subunits. These subunits also contain checksum as one of the subunits. The resultant bit is then complemented. If the complemented result is zero, it means the data is error-free. If the result is non-zero it means the data contains an error and Receiver rejects it.\n\nExample – If the data unit to be transmitted is 10101001 00111001, the following procedure is used at Sender site and Receiver site.\n\nSender Site:\n\n10101001 subunit 1\n\n00111001 subunit 2\n\n11100010 sum (using 1s complement)\n\n00011101 checksum (complement of sum)\n\nData transmitted to Receiver is:\n\nReceiver Site :\n\n10101001 subunit 1\n\n00111001 subunit 2\n\n00011101 checksum\n\n11111111 sum\n\n00000000 sum's complement\n\nResult is zero, it means no error.\n\nAdvantages of Checksum\n\nThe checksum detects all the errors involving an odd number of bits as well as the error involving an even number of bits.\n\nDisadvantages of Checksum\n\nThe main problem is that the error goes undetected if one or more bits of a subunit is damaged and the corresponding bit or bits of a subunit are damaged and the corresponding bit or bits of opposite value in second subunit are also damaged. This is because the sum of those columns remains unchanged.\n\nExample – If the data transmitted along with checksum is 10101001 00111001 00011101. But the data received at destination is 00101001 10111001 00011101.\n\nReceiver Site:\n\n00101001 1st bit of subunit 1 is damaged\n\n10111001 1st bit of subunit 2 is damaged\n\n00011101 checksum\n\n11111111 sum\n\n00000000 Ok 1's complement\n\nAlthough data is corrupted, the error is undetected."
    }
}