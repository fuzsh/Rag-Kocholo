{
    "id": "dbpedia_8580_3",
    "rank": 7,
    "data": {
        "url": "https://www.coursera.org/articles/types-programming-language",
        "read_more_link": "",
        "language": "en",
        "title": "5 Types of Programming Languages",
        "top_image": "https://images.ctfassets.net/wp1lcwdav1p1/69aHNX9jkz3vnIvD5LDOhS/12a92e14a1f9dd8b5175ffb9447f549f/GettyImages-1322050853__1_.jpg?w=1500&h=680&q=60&fit=fill&f=faces&fm=jpg&fl=progressive",
        "meta_img": "https://images.ctfassets.net/wp1lcwdav1p1/69aHNX9jkz3vnIvD5LDOhS/12a92e14a1f9dd8b5175ffb9447f549f/GettyImages-1322050853__1_.jpg?w=1500&h=680&q=60&fit=fill&f=faces&fm=jpg&fl=progressive",
        "images": [
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://images.ctfassets.net/wp1lcwdav1p1/69aHNX9jkz3vnIvD5LDOhS/12a92e14a1f9dd8b5175ffb9447f549f/GettyImages-1322050853__1_.jpg?w=1500&h=680&q=60&fit=fill&f=faces&fm=jpg&fl=progressive&auto=format%2Ccompress&dpr=1&w=1000",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://coursera_assets.s3.amazonaws.com/articles/purple-hash-pattern.svg?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=252",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://coursera_assets.s3.amazonaws.com/articles/purple-hash-pattern.svg?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=252",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d3njjcbhbojbot.cloudfront.net/web/images/icons/download_on_the_app_store_badge_en.svg?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=152&h=45&w=152",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d3njjcbhbojbot.cloudfront.net/web/images/icons/en_generic_rgb_wo_45.png?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=152&h=45&w=152",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://d3njjcbhbojbot.cloudfront.net/web/images/icons/2018-B-Corp-Logo-Black-S.png?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=151&w=82&h=120",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://s3.amazonaws.com/coursera_assets/footer/facebook.png?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=28&h=28&w=28",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://s3.amazonaws.com/coursera_assets/footer/linkedin.png?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=28&h=28&w=28",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://s3.amazonaws.com/coursera_assets/footer/twitter.png?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=28&h=28&w=28",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://s3.amazonaws.com/coursera_assets/footer/youtube.png?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=28&h=28&w=28",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://s3.amazonaws.com/coursera_assets/footer/instagram.png?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=28&h=28&w=28",
            "https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://coursera_assets.s3.amazonaws.com/images/9b7e964107839c77644d7e7d15035b73.png?auto=format%2Ccompress&dpr=2&blur=200&px=8&max-w=28&h=28&w=28"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Coursera Staff"
        ],
        "publish_date": "2022-09-22T20:46:19.777000+00:00",
        "summary": "",
        "meta_description": "Learn more about some common categories of programming languages to get inspired to start coding.",
        "meta_lang": "en",
        "meta_favicon": "https://d3njjcbhbojbot.cloudfront.net/web/images/favicons/apple-touch-icon-v2-57x57.png",
        "meta_site_name": "Coursera",
        "canonical_link": "https://www.coursera.org/articles/types-programming-language",
        "text": "Programming is a skill that is becoming increasingly sought after in the job market. Having at least a basic understanding of how software functions is helpful for anyone who interacts with technology. With a background in programming, you can get a job coding, designing software, data architecture, or creating intuitive user interfaces.Â\n\nBut what programming language should you learn? You'll find a seemingly infinite number of programming languages that are free to learn and develop projects with online. With the field of technology growing exponentially each year, the internet is a great place to start when trying to explore the latest developments or discover a new skill.Â\n\nIn this article, we'll explore some of the most common types of programming languages and give you some resources you can use to start learning.\n\n5 major types of programming languages\n\nWhile you'll find dozens of ways to classify various programming languages, they generally fall into five major categories. Keep in mind that some languages may fall under more than one type:\n\n1. Procedural programming languages\n\nA procedural language follows a sequence of statements or commands in order to achieve a desired output. Each series of steps is called a procedure, and a program written in one of these languages will have one or more procedures within it. Common examples of procedural languages include:\n\nC and C++\n\nJava\n\nPascal\n\nBASIC\n\nC++ is a great programming language to learn if you're also interested in learning more about how computers function. While it may not be as readable as other high-level programming languages like Python, it can still be beginner-friendly. You can give it a try for free by enrolling in Codio's introductory online program, Programming in C++: A Hands-on Introduction Specialization. After a month, you'll have created and ran your first program in C++.\n\n2. Functional programming languages\n\nRather than focusing on the execution of statements, functional languages focus on the output of mathematical functions and evaluations. Each functionâa reusable module of codeâperforms a specific task and returns a result. The result will vary depending on what data you input into the function. Some popular functional programming languages include:\n\nScala\n\nErlang\n\nHaskell\n\nElixir\n\nF#\n\n3. Object-oriented programming languages (OOP)\n\nThis type of language treats a program as a group of objects composed of data and program elements, known as attributes and methods. Objects can be reused within a program or in other programs. This makes it a popular language type for complex programs, as code is easier to reuse and scale. Some common object-oriented languages include:\n\nJava\n\nPython\n\nPHP\n\nC++\n\nRuby\n\n4. Scripting languages\n\nProgrammers use scripting languages to automate repetitive tasks, manage dynamic web content, or support processes in larger applications. Some common scripting languages include:\n\nPHP\n\nRuby\n\nPython\n\nbash\n\nPerl\n\nNode.js\n\nLinux operating system is the primary choice for those who prefer open-source software [1]. Familiarizing yourself with Linux can be useful for someone who is interested in learning scripting languages.\n\n5. Logic programming languages\n\nInstead of telling a computer what to do, a logic programming language expresses a series of facts and rules to instruct the computer on how to make decisions. Some examples of logic languages include:\n\nProlog\n\nAbsys\n\nDatalog\n\nAlma-0\n\nOther ways to classify programming languages\n\nYou'll find many more ways to categorize languages beyond the five listed above. Let's take a closer look at there other ways you can think about programming languages:\n\nFront-end vs. back-end languages\n\nFront-end languages are primarily concerned with the âuserâ aspect of the software. The front end deals with all of the text, colors, buttons, images, and navigation that the user will face when navigating your website or application. Anyone with a background in graphic design or art may be more inspired to begin learning one of the front-end languages.Â\n\nSome examples of front-end programming languages include:Â\n\nHTMLÂ\n\nCSSÂ\n\nJavaScriptÂ\n\nReactÂ\n\nBack-end languages deal with storage and manipulation of the server side of software. This is the part of the software that the user does not directly come into contact with but supports their experience behind the scenes. This includes data architecture, scripting, and communication between applications and underlying databases.Â\n\nAnyone with experience in mathematics or engineering may find more interest in back-end development.\n\nSome examples of back-end programming languages include:\n\nJavaScript\n\nPHP\n\nJava\n\nPython\n\nRuby\n\nC#\n\nA full-stack developer combines their knowledge of both front- and back-end languages, along with other technical skills and expertise, to work on any part of the development process.\n\nHigh-level vs. low-level languages\n\nThe biggest factor that differentiates high- and low-level programming languages is whether the language is meant to be easily understood by a human programmer or a computer. Low-level languages are machine-friendly, which makes them highly efficient in terms of memory usage but difficult to understand without the help of an assembler. Since they're not very people-friendly because they don't use human language, they're also not widely used to code. Examples of these machine languages include machine code, binary code, and assembly languages.\n\nHigh-level languages, on the other hand, are less memory efficient but much more human-friendly. This programming style makes it easier to write, understand, maintain, and debug. Most popular programming languages in use today are considered high-level languages.Â\n\nInterpreted vs. compiled languages\n\nThe distinction between interpreted and compiled languages has to do with how they convert high-level code and make it readable by a computer. With interpreted languages, code goes through a program called an interpreter, which reads and executes the code line by line. This tends to make these languages more flexible and platform independent.\n\nExamples of interpreted languages include:\n\nPython\n\nJavaScript\n\nPHP\n\nRuby\n\nCompiled languages go through a build step where the entire program is converted into machine code. This makes it faster to execute, but it also means that you have to compile or \"build\" the program again anytime you need to make a change.\n\nExamples of compiled languages include:\n\nC, C++, and C#\n\nRust\n\nErlang\n\nMarkup language\n\nOften, markup languages such as Hypertext Markup Language (HTML) are classified as programming languages. Technically, markup languages are not considered to be the same as programming languages. Instead, they are text-encoding systems made up of symbols that control the formatting and structure of content on a page or document.\n\nStart programming today on Coursera"
    }
}