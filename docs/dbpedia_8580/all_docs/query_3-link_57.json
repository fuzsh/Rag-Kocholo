{
    "id": "dbpedia_8580_3",
    "rank": 57,
    "data": {
        "url": "https://www.geeksforgeeks.org/how-to-choose-a-programming-language-for-a-project/",
        "read_more_link": "",
        "language": "en",
        "title": "How to Choose a Programming Language For a Project?",
        "top_image": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "meta_img": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "images": [
            "https://media.geeksforgeeks.org/gfg-gg-logo.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/wp-content/cdn-uploads/20200925221816/How-to-Choose-a-Programming-Language-For-a-Project.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20200921153455/stackoverflowsurvey.PNG",
            "https://media.geeksforgeeks.org/auth/profile/ytr6t5q800tkf05o2mv6",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/new-premium-rbanner-us.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/gfgFooterLogo.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/googleplay.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/appstore.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/suggestChangeIcon.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/createImprovementIcon.png"
        ],
        "movies": [
            "https://www.geeksforgeeks.org/videos/how-to-choose-the-right-programming-language/"
        ],
        "keywords": [],
        "meta_keywords": [
            "Data Structures",
            "Algorithms",
            "Python",
            "Java",
            "C",
            "C++",
            "JavaScript",
            "Android Development",
            "SQL",
            "Data Science",
            "Machine Learning",
            "PHP",
            "Web Development",
            "System Design",
            "Tutorial",
            "Technical Blogs",
            "Interview Experience",
            "Interview Preparation",
            "Programming",
            "Competitive Programming",
            "Jobs",
            "Coding Contests",
            "GATE CSE",
            "HTML",
            "CSS",
            "React",
            "NodeJS",
            "Placement",
            "Aptitude",
            "Quiz",
            "Computer Science",
            "Programming Examples",
            "GeeksforGeeks Courses",
            "Puzzles",
            "SSC",
            "Banking",
            "UPSC",
            "Commerce",
            "Finance",
            "CBSE",
            "School",
            "k12",
            "General Knowledge",
            "News",
            "Mathematics",
            "Exams"
        ],
        "tags": null,
        "authors": [
            "GeeksforGeeks"
        ],
        "publish_date": "2020-09-26T10:55:09",
        "summary": "",
        "meta_description": "A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.",
        "meta_lang": "en",
        "meta_favicon": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_favicon.png",
        "meta_site_name": "GeeksforGeeks",
        "canonical_link": "https://www.geeksforgeeks.org/how-to-choose-a-programming-language-for-a-project/",
        "text": "If you’re a non-technical person then here are some questions for you… Would you use Axe or Chainsaw? What do you choose? The first question you might be thinking is….for what? If we answer stitching cloth…you will say NO and if we answer chopping wood then you may respond with YES. Now let’s come to another question… If you need to build a house from scratch what would you choose? hammer or drill?\n\nBefore jumping to any answer, don’t you think that it’s important to know how big you want to build your house? How many rooms do you want? On which land do you want your house to be built? It would build of timber or brick?\n\nNow think about the below if you’re a technical person or you’re in software development…\n\nHow would you choose a language for an iPhone, if there are only two of them?\n\nHow would you choose a language for Android, if there is only “one of them”?\n\nIn software development, if we need to choose a language for a project, we need to ask a few questions to ourselves before we make any decision. For example, what kind of project is it? scalability of the application, the complexity of the application, development budget, development time limit, application security, available resources, etc. The project team always wants the application to stay for the long haul and fulfilling the needs of the customer even if business changes occur later on.\n\nSome Quick Tips\n\nChoosing a language for a project in the corporate IT sector is one of the big issues technology managers struggle with. When choosing programming languages becomes the most important, things to consider are the ecosystem, the community, and the availability of programmers.\n\nA lot of developers make mistake and choose programming languages just because it is more popular, trendy, and cool. If you choose Lisp for a project just because it is a very clean and beautiful functional language then later it may turn into a wrong decision. So it’s good to avoid this mistake.\n\nProgramming language for a project should be based on your business needs not just because it has some syntactic sugar or it is hyped up. Maybe you feel that since you’re the developer it should be totally up to you, your choice to implement any language. Only you have all the freedom to choose the technology whatever you want but this doesn’t work in an IT organization and it may backfire on you.\n\nAs a technical manager, firstly you need to pay attention to all the moving pieces of your project. You should know all the components for a better view and this will help you to choose a specific programming language. A good view at the beginning of your project helps in choosing a sensible programming language and this leads to less time spent on maintaining the project, scaling up the project, and securing the project later on.\n\nIn programming, if you can write good software in Java, C#, Python, PHP, or any other languages then you can also write bad software using these languages. No single language is the best choice for any software. Some languages and frameworks are a better fit for projects than others. Consider the example of Java. It wasn’t a good language the moment it was created. It was just more convenient than competitors. When choosing a language you need to think in this way.\n\nNow let’s discuss some questions that you should ask while choosing a programming language for a project.\n\nQuestions to Ask When Choosing a Programming Language\n\nDoes the language have proper ecosystem support? Is it going to work for the long haul? Is vendor support available for the language?\n\nWhat is the environment for the project (web, mobile, etc)?\n\nDo we need to consider some infrastructure such as new hardware? What kind of deployment do we need?\n\nWhat’s the preference of the client?\n\nAny specific requirements for libraries, features, and tools for the programming language?\n\nIs the developer available to code in this language or do we need to hire new developers? Are they experienced and comfortable in working with this language, or do they need to learn the language quickly?\n\nWhat are some important constraints of this project? Time, budget, resources?\n\nWhat’s the performance consideration and is the languages suitable to accommodate this performance?\n\nWhat’s the security consideration and do we need to use any third-party tool?\n\nA lot of questions given above clear out the confusion of choosing a programming language for your project.\n\nNow in programming suppose you have a task that is very heavy on number crunching. In this case, you need a language that supports some libraries to perform complex maths operations for you and can handle the numbers easily. Another example you can consider is processing a lot of text. In this case, you need a language whose features set allows you to easily slice, dice, and search textual data.\n\nTo choose the right programming language for your project, you need to consider different factors such as performance, type of application, security, etc which we have discussed in the section of questions we need to ask. Now let’s discuss these factors in detail to use appropriate language for a project but remember that there is always some trade-off.\n\nHere are the best programming languages which you can choose in order to complete your projects:\n\nJava\n\nC++\n\nHTML\n\nPython\n\nJavaScript\n\nC#\n\nTypeScript\n\nSQL\n\nRuby\n\nSwift\n\nCSS\n\nTypes of Application\n\nYou should have a clear purpose or goal in your mind before choosing a programming language for a project. The choice of language heavily depends on the type of application. What kind of application you are going to build? Is it a web application or mobile application or its embedded firmware etc? This is the first and one of the biggest factors you should consider before you choose any programming language for a project.\n\nAlso, you need to consider the complexity or size of the application. Small projects such as web application forms, portfolio presentations, simple marketing websites, or simple personal blogs can be built with some CMS systems like WordPress (requires PHP knowledge) or Umbraco (requires C# knowledge). Java or C# can be used for medium size projects such as e-commerce sites, internal enterprise applications, and IoT solutions.\n\nFor example, Object-oriented languages are the best suitable for web applications. For Android applications, Java or Kotlin is good, for system programming middle-level languages such as C can be used.\n\nFront End Development: JavaScript, HTML, and CSS\n\nBackend Development: Python, C#, or JavaScript\n\n2D Game Development: JavaScript or C#\n\n3D Game Development: C# or C++\n\nData Science/Machine Learning/Analytics: Python, R, Clojure, Julia\n\nMath & Scientific Computing: Matlab, FORTRAN, ALGOL, APL, Julia, R, C++\n\nBig Data: Java, Python, R, Scala, Clojure\n\nOperating Systems: C, C++\n\nDistributed System: C, Go, Rust\n\n2. Targeted Platform\n\nAnother factor you need to consider is the targeted platform where you want to run your program. Let’s say you have two languages Java and C. If you have written a program in C and you want to run that on Windows and Linux. In this case, you need platform compilers and two different executables.\n\nIn the case of Java language, the bytecode will be generated, and to run that on any machine you should have Java Virtual Machine installed. A similar thing goes with websites. It should look and work the same across all browsers. If you’re using CSS3 and HTML5 tags then your website may look and behave differently across different browsers.\n\nExplore the different programming languages with GeeksforGeeks interactive live and self-paced language courses and enhance your creativity.\n\n3. Maintainability\n\nWhatever technology and language we choose, we get the ecosystem of libraries and vendor support. We need to pay attention to the maintainability of the application and this is the reason we should always look at the latest release of the language or technology stack. Make sure that whatever we pick is current and stays current for a long time.\n\nWhile building an application you need to think about engaging with your clients for the long term and at some point, you will have to transition your codebase to another team. You will have to hire the internal developers in your area depending on the technology you will be working on and you will have to pay the maintenance cost for that.\n\nThis maintenance cost will be affected by the availability and proficiency of the development team in your area. For example, In the Midwest, it’s easy to hire C# and Java developers than Ruby, Python, and PHP developers. The whole point is….you need to think about the ease of maintenance and the long-term survival of your application while choosing a programming language for your project.\n\n4. Scalability and Performance\n\nThe performance of your application heavily depends on the choice of the programming language. It matters a lot when the development environment doesn’t offer much scope for scaling. To squeeze out so much performance from your application you need to choose the right programming language.\n\nHow many users your application can handle and what will happen in the future if the number of users will increase? Is the growing number of users going to slow down the performance of your application or Is it going to break your application? Think about the scalability of your application. Is your application flexible enough to accept more add-ons without hampering the performance of your application?\n\nA lot of studies have been conducted to measure the performance of the application. However, the results were not concrete assessments of the performance of programming languages. One example of this kind of environment is handheld devices. Some popular tech stack that has good scalability is Ruby on Rails (RoR),.NET, Java Spring, LAMP and MEAN.\n\n5. Security\n\nYou also need to think about the security of your application while choosing a programming language for your project. Every application has different kinds of security requirements. For example, healthcare-related applications need HIPAA compliance and financial application need PCI compliance. Your application will become more robust if you keep your eye on the security of your application.\n\nYou also need to protect your application from cyber threats and hacking. You need to follow the security guidelines before choosing any programming language for your application.\n\n6. Community Support\n\nDuring the development of any application you will face many issues and it can create a big problem if there is no enough community support available. While building an application you may get stuck at any moment and you may have to take the help of some resources or some other developers. This is the reason you should pay attention to this factor as well.\n\nIf you are choosing a language that doesn’t have many tutorials or articles to learn then it will be tough for you to adapt the language and work on that. Before choosing any programming language it’s good to check out the video tutorials, articles, forums, and some community support such as GitHub, Reddit, or StackOverflow.\n\n7. Development Time Limit\n\nEvery organization wants to release the application as soon as possible. Business stakeholders also want new features or the application to be ready as soon as possible. This is the reason you should pay attention to this factor that is…development time.\n\nYou should choose a language that can help you to build the application as quickly as possible. If enough library support, packages, or modules are available for a language then you won’t have to build everything from scratch and you will save the development time for your application.\n\nHere you need to pay attention to the experience in your chosen language. The more familiar you are with the language the less time you will take for the development. In other words, if a language is easy to learn, then you won’t take much time to learn it, produce the code and make your application live on the server.\n\nFinal Thoughts\n\nWith a list of questions to ask, a list of programming languages available, and considering the different factors, you can make a sensible decision regarding the programming language that you use. It’s good to compare the languages based on the above factors to choose the right one for your project."
    }
}