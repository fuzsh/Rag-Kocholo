{
    "id": "dbpedia_4534_2",
    "rank": 66,
    "data": {
        "url": "https://www.w3resource.com/sql-exercises/movie-database-exercise/sql-exercise-movie-database-22.php",
        "read_more_link": "",
        "language": "en",
        "title": "SQL exercises on movie Database: Find all the movies with title, year, date of release, duration, and name of the director which released before 1st January 1989, and sort the result in descending ord",
        "top_image": "https://www.w3resource.com/w3r_images/sql-exercise.gif",
        "meta_img": "https://www.w3resource.com/w3r_images/sql-exercise.gif",
        "images": [
            "https://www.w3resource.com/w3r_images/sql-exercise-movie-database-relational-algebra-22.png",
            "https://www.w3resource.com/w3r_images/sql-exercise-movie-database-relational-algebra-tree-diagram-22.png",
            "https://www.w3resource.com/w3r_images/movie-database.png",
            "https://www.w3resource.com/w3r_images/sql-exercise-movie-database-22-duration.png",
            "https://www.w3resource.com/w3r_images/sql-exercise-movie-database-22-rows.png",
            "https://www.w3resource.com/w3r_images/sql-exercise-movie-database-22-cost.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-06-05T13:32:56",
        "summary": "",
        "meta_description": "SQL exercises on movie Database, Practice and Solution: From the following tables, write a SQL query to find the movies released before 1st January 1989. Sort the result-set in descending order by date of release. Return movie title, release year, date of release, duration, and first and last name of the director.",
        "meta_lang": "en",
        "meta_favicon": "//www.w3resource.com/images/favicon.png",
        "meta_site_name": "w3resource",
        "canonical_link": "https://www.w3resource.com/sql-exercises/movie-database-exercise/sql-exercise-movie-database-22.php",
        "text": "Sample Solution:\n\n-- Selecting specific columns from the tables movie, movie_direction, and director SELECT movie.mov_title, mov_year, mov_dt_rel, mov_time,dir_fname, dir_lname -- Joining the movie and movie_direction tables based on the mov_id column FROM movie JOIN movie_direction ON movie.mov_id = movie_direction.mov_id -- Joining the result with the director table based on the dir_id column JOIN director ON movie_direction.dir_id=director.dir_id -- Filtering the result to include only records with mov_dt_rel before '01/01/1989' WHERE mov_dt_rel < '01/01/1989' -- Ordering the result by mov_dt_rel in descending order ORDER BY mov_dt_rel DESC;\n\nSample Output:\n\nmov_title | mov_year | mov_dt_rel | mov_time | dir_fname | dir_lname ----------------------------------------------------+----------+------------+----------+----------------------+---------------------- Aliens | 1986 | 1986-08-29 | 137 | James | Cameron Amadeus | 1984 | 1985-01-07 | 160 | Milos | Forman Deliverance | 1972 | 1982-10-05 | 109 | John | Boorman Blade Runner | 1982 | 1982-09-09 | 117 | Ridley | Scott The Deer Hunter | 1978 | 1979-03-08 | 183 | Michael | Cimino Annie Hall | 1977 | 1977-04-20 | 93 | Woody | Allen Chinatown | 1974 | 1974-08-09 | 130 | Roman | Polanski Lawrence of Arabia | 1962 | 1962-12-11 | 216 | David | Lean The Innocents | 1961 | 1962-02-19 | 100 | Jack | Clayton Vertigo | 1958 | 1958-08-24 | 128 | Alfred | Hitchcock (10 rows)\n\nCode Explanation :\n\nThe said query in SQL which selects the movie title, year, release date, duration, director first name, and director last name for all movies that were released before January 1st, 1989. The results are sorted in descending order by release date.\n\nThe JOIN clause joins the movie table, movie_direction table, and director table based on the movie ID and director ID.\n\nThe WHERE clause filters the results to include only those movies that were released before January 1st, 1989.\n\nThen sorts the results in descending order by release date.\n\nAlternative Solutions:\n\nUsing WHERE Clause with Table Aliases:\n\nSELECT m.mov_title, m.mov_year, m.mov_dt_rel, m.mov_time, d.dir_fname, d.dir_lname FROM movie m, movie_direction md, director d WHERE m.mov_id = md.mov_id AND md.dir_id = d.dir_id AND m.mov_dt_rel < '1989-01-01' ORDER BY m.mov_dt_rel DESC;\n\nExplanation:\n\nThis query uses the comma-separated syntax for joining tables and specifies the join conditions in the WHERE clause. It then applies a WHERE clause to filter for movies released before January 1, 1989, and selects the movie title, year, release date, runtime, director's first name, and last name. The results are ordered by release date in descending order.\n\nRelational Algebra Expression:\n\nRelational Algebra Tree:\n\nPractice Online\n\nQuery Visualization:\n\nDuration:\n\nRows:\n\nCost:\n\nHave another way to solve this solution? Contribute your code (and comments) through Disqus.\n\nPrevious: From the following tables, write a SQL query to find all the movies with year, genres, and name of the director.\n\nNext: From the following tables, write a SQL query to compute the average time and count number of movies for each genre. Return genre title, average time and number of movies for each genre."
    }
}