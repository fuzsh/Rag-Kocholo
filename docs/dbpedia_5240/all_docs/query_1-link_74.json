{
    "id": "dbpedia_5240_1",
    "rank": 74,
    "data": {
        "url": "https://stackoverflow.com/questions/2643502/git-how-to-solve-permission-denied-publickey-error-when-using-git",
        "read_more_link": "",
        "language": "en",
        "title": "Git: How to solve Permission denied (publickey) error when using Git?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/tGpcY.jpg?s=64",
            "https://www.gravatar.com/avatar/8d7ffbc79afc7ad370cb0083c5cce4d8?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/fa775e7ced047e00529c3c2d4ddc77c1?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/82IN70rT.jpg?s=64",
            "https://www.gravatar.com/avatar/ea2f48cccd48c8933a4efd1ddfa18a3b?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/056cad69044d9f788d039383178ae964?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/5933c35c89316a82964bd82d0f9dd427?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/dc539dda2890c565c1844f9fab7ac019?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/13aVl.jpg?s=64",
            "https://i.sstatic.net/tGpcY.jpg?s=64",
            "https://lh5.googleusercontent.com/-ItATj8rdT7E/AAAAAAAAAAI/AAAAAAAAABo/1j2gdNt86_0/photo.jpg?sz=64",
            "https://i.sstatic.net/Ctvrk.jpg?s=64",
            "https://i.sstatic.net/gcibV.png",
            "https://i.sstatic.net/PmaB0.png",
            "https://i.sstatic.net/SrJtp.png",
            "https://i.sstatic.net/1XG4T.png",
            "https://i.sstatic.net/am12C.png",
            "https://i.sstatic.net/8QQtz.png",
            "https://i.sstatic.net/uXfJa.png",
            "https://i.sstatic.net/aQ1kH.png",
            "https://i.sstatic.net/YQ7La.gif?s=64",
            "https://i.sstatic.net/qAVNL.jpg?s=64",
            "https://i.sstatic.net/TzHbO.jpg?s=64",
            "https://www.gravatar.com/avatar/95855e912d737540b37b2d8d16c602a9?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/dpYYk.png",
            "https://i.sstatic.net/Z78U0.jpg?s=64",
            "https://i.sstatic.net/1MS9B.png?s=64",
            "https://i.sstatic.net/J9327.jpg?s=64",
            "https://www.gravatar.com/avatar/e37454580083b430d61160c170031fff?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/4wUhx.jpg?s=64",
            "https://i.sstatic.net/N2vNk.jpg?s=64",
            "https://lh5.googleusercontent.com/-j_HAeRCnbk8/AAAAAAAAAAI/AAAAAAAACIg/DtR5rezk11A/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/89931aff396125e7be4b6a2a57c4a940?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/ZVElb.png",
            "https://i.sstatic.net/eO8bK.png",
            "https://i.sstatic.net/RrO3h.jpg?s=64",
            "https://i.sstatic.net/tHFMD.jpg?s=64",
            "https://i.sstatic.net/KP9Ia.jpg?s=64",
            "https://www.gravatar.com/avatar/81cee919e813fb534fe93f8a216a5db5?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/BomCK.jpg?s=64",
            "https://lh3.googleusercontent.com/-IHFzg8IxWdU/AAAAAAAAAAI/AAAAAAAAEHg/7YthoRNTQ_M/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/f0a7931509fe208105cdeec791c7ed04?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/0f49e98a30aaf931b17768f9e648ce3f?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://lh3.googleusercontent.com/-ZKRBgaWMhAY/AAAAAAAAAAI/AAAAAAAAC80/ry3so1Pwh-A/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/5cdd622fbbd01cdd762adb2091a483bc?s=64&d=identicon&r=PG",
            "https://lh6.googleusercontent.com/-Yf933SqTEXY/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfVoSu2gveYMphzgz3tIs5taQWA6Q/photo.jpg?sz=64",
            "https://lh6.googleusercontent.com/-9wrGKo2_F6A/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnD-pAb6p3ECde1s0j0PzDeEuiguw/photo.jpg?sz=64",
            "https://stackoverflow.com/posts/2643502/ivc/5f69?prg=e10ba467-67e6-49c9-89a2-687c058e481c"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-04-15T07:46:34",
        "summary": "",
        "meta_description": "I'm on Mac Snow Leopard and I just installed git.\n\nI just tried \n\ngit clone git@thechaw.com:cakebook.git\r\nbut that gives me this error:\n\nInitialized empty Git repository in `/Users/username/Documents/",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/2643502/git-how-to-solve-permission-denied-publickey-error-when-using-git",
        "text": "If the user has not generated a ssh public/private key pair set before\n\nThis info is working on theChaw but can be applied to all other git repositories which support SSH pubkey authentications. (See [gitolite][1], gitlab or github for example.)\n\nFirst start by setting up your own public/private key pair set. This can use either DSA or RSA, so basically any key you setup will work. On most systems you can use ssh-keygen.\n\nFirst you'll want to cd into your .ssh directory. Open up the terminal and run:\n\ncd ~/.ssh && ssh-keygen\n\nNext you need to copy this to your clipboard.\n\nOn OS X run: cat id_rsa.pub | pbcopy\n\nOn Linux run: cat id_rsa.pub | xclip\n\nOn Windows (via Cygwin/Git Bash) run: cat id_rsa.pub | clip\n\nOn Windows (Powershell) run: Get-Content id_rsa.pub | Set-Clipboard (Thx to @orion elenzil)\n\nAdd your key to your account via the website.\n\nFinally setup your .gitconfig.\n\ngit config --global user.name \"bob\"\n\ngit config --global user.email bob@... (don't forget to restart your command line to make sure the config is reloaded)\n\nThat's it you should be good to clone and checkout.\n\nFurther information can be found at https://help.github.com/articles/generating-ssh-keys (thanks to @Lee Whitney) [1]: https://github.com/sitaramc/gitolite\n\n-\n\nIf the user has generated a ssh public/private key pair set before\n\ncheck which key have been authorized on your github or gitlab account settings\n\ndetermine which corresponding private key must be associated from your local computer\n\neval $(ssh-agent -s)\n\ndefine where the keys are located\n\nssh-add ~/.ssh/id_rsa\n\nThis error can happen when you are accessing the SSH URL (Read/Write) instead of Git Read-Only URL but you have no write access to that repo.\n\nSometimes you just want to clone your own repo, e.g. deploy to a server. In this case you actually only need READ-ONLY access. But since that's your own repo, GitHub may display SSH URL if that's your preference. In this situation, if your remote host's public key is not in your GitHub SSH Keys, your access will be denied, which is expected to happen.\n\nAn equivalent case is when you try cloning someone else's repo to which you have no write access with SSH URL.\n\nIn a word, if your intent is to clone-only a repo, use HTTPS URL (https://github.com/{user_name}/{project_name}.git) instead of SSH URL ([email protected]:{user_name}/{project_name}.git), which avoids (unnecessary) public key validation.\n\nUpdate: GitHub is displaying HTTPS as the default protocol now and this move can probably reduce possible misuse of SSH URLs.\n\nAnother possibility on Windows, which is not covered in any of these answers, and is not covered in the git or github docs on troubleshooting:\n\ngit may be using a different openssh executable than you think it is.\n\nI was receiving the Permission denied (public key) error when trying to clone or pull from github and ssh.dev.azure.com, and I'd followed all the instructions and verified that my SSH keys were setup correctly (from SSH's standpoint) using ssh -vT [email protected] and ssh -vT [email protected]. And was still getting these errors:\n\n[email protected]: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists.\n\nI eventually figured out that the problem is that Git for Windows, and Windows, both have their own versions of openssh. This is documented here: https://github.com/desktop/desktop/issues/5641\n\nI was relying on the Windows ssh-agent service to store my ssh key passphrases, so git (with it's separate version of openssh) couldn't read my private keys. I consider it a bug that this error message is used - it's misleading.\n\nThe fix was:\n\ngit config --global core.sshCommand \"'C:\\Windows\\System32\\OpenSSH\\ssh.exe'\"\n\nOr in your ~/.gitconfig:\n\n[core] sshCommand = 'C:\\\\Windows\\\\System32\\\\OpenSSH\\\\ssh.exe'\n\nPerhaps this will be fixed in git for Windows soon, but this is the 2nd time I've wasted time on this issue.\n\nI was struggling with the same problem that's what I did and I was able to clone the repo. I followed this procedure for Mac.\n\nFirst Step: Checking if we already have the public SSH key.\n\nOpen Terminal.\n\nEnter ls -al ~/.ssh to see if existing SSH keys are present:\n\nCheck the directory list to see if you already have a public SSH key. Default public is one of the following d_dsa.pub, id_ecdsa.pub, id_ed25519.pub, id_rsa.pub.\n\nIf you don't find then go to step 2 otherwise follow step 3\n\nStep 2: Generating public SSH key\n\nOpen Terminal.\n\nEnter the following command with a valid email address that you use for github ssh-keygen -t rsa -b 4096 -C \"[email protected]\"\n\nYou will see the following in your terminal Generating public/private rsa key pair. When it prompts to\"Enter a file in which to save the key,\" press Enter. This accepts the default file location. When it prompts to Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter] Just press enter again.\n\nAt the prompt, \"Type a secure passphrase. Enter passphrase (empty for no passphrase): [Type a passphrase]\" press enter if you don't want to Enter same passphrase again: [Type passphrase again] press enter again\n\nThis will generate id_rsa.pub\n\nStep 3: Adding your SSH key to the ssh-agent\n\nInterminal type eval \"$(ssh-agent -s)\"\n\nAdd your SSH key to the ssh-agent. If you are using an existing SSH key rather than generating a new SSH key, you'll need to replace id_rsa in the command with the name of your existing private key file. Enter this command $ ssh-add -K ~/.ssh/id_rsa\n\nNow copy the SSH key and also add it to you github account\n\nIn terminal enter this command with your ssh file name pbcopy < ~/.ssh/id_rsa.pub This will copy the file to your clipboard Now open you github account Go to Settings > SSH and GPG keys > New SSH key Enter title and paste the key from clipboard and save it. Voila you're done.\n\nGot the same error report.\n\nFixed with using the HTTPS instead of the SSH protocol. Since I don't want to set \"SSH keys\" for a test PC.\n\nChange URL to HTTPS when clone:\n\ngit clone https://github.com/USERNAME/REPOSITORY.git\n\nMy problem is a little bit different: I have the URL set to SSH when adding an existing local repo to remote, by using:\n\ngit remote add origin ssh://github.com/USERNAME/REPOSITORY.git\n\nTo fix it, reset the URL to HTTPS:\n\ngit remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n\nBTW, you may check your URL using the command:\n\ngit remote -v origin https://github.com/USERNAME/REPOSITORY.git (fetch) origin https://github.com/USERNAME/REPOSITORY.git (push)\n\nHope this will help some one like me. :D\n\nVisual guide (Windows Only)\n\n1 of 2. Git batch side\n\n1.1. Open git batch (Download: https://git-scm.com/downloads)\n\n1.2. Paste the text below (Change to your GitHub account email)\n\n$ ssh-keygen -t rsa -b 4096 -C \"[email protected]\"\n\n1.3. Press Enter (Accepts the default file location)\n\n1.4. Click Enter Twice (Or set SSH key passphrases - Gitbub passphrases docs)\n\n> Enter passphrase (empty for no passphrase): [Type a passphrase] > Enter same passphrase again: [Type passphrase again]\n\n1.5. The key generate:\n\nYour identification has been saved in /c/Users/user/.ssh/id_rsa...\n\n1.6. Copy the SSH key to your clipboard.\n\n$ clip < ~/.ssh/id_rsa.pub\n\n2 of 2. Github website user side\n\nUnder user setting\n\nSSH and GPG keys => New SSH key:\n\nPaste the code from step 1.6\n\nDone :)\n\nIf someone doesn't want to use SSH use HTTPS :\n\nGithub docs: https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh\n\nIf your problem appears out of the blue recently (the latter half of 2021), it may have been caused by incompatible hash algorithms.\n\nAs of this post (Oct 2021), the latest version of Git for windows is 2.33.1 (release note), who has embraced the latest OpenSSH 8.8p1 (release note), who in turn has deprecated SHA-1. Meanwhile, if your remote Git repository still sticks to SHA-1, you'll fail the authentication.\n\nTo see whether you could have fallen into this case, check the version of your software by:\n\nssh -V git --version\n\nThen you should check the \"Potentially-incompatible changes\" section of OpenSSH 8.8/8.8p release note.\n\nTL;DR\n\nSolution 1: Enable SHA-1 again by adding this to your ~/.ssh/config file:\n\nHost <remote> HostkeyAlgorithms +ssh-rsa PubkeyAcceptedAlgorithms +ssh-rsa\n\nRemember to replace <remote> with the hostname of your remote repository.\n\nSolution 2: Regenerate your key pair using ECDSA or Ed25519, instead of RSA. For example:\n\nssh-keygen -t ecdsa -C <comment>\n\nRemember to replace <comment> with your own mnemonic phrase. Then, upload the generated public key to your remote repository.\n\nFYI, I encountered this prompt message when accessing Gitee.com, who uses golang.org/x/crypto/ssh on their server and has posted a page on this issue here (in Mandarin).\n\n[email protected]: Permission denied (publickey).\n\nNote that (at least for some projects) you must have a github account with an ssh key.\n\nLook at the keys listed in your authentication agent (ssh-add -l)\n\n(if you don't see any, add one of your existing keys with ssh-add /path/to/your/key (eg: ssh-add ~/.ssh/id_rsa))\n\n(if you don't have any keys, first create one. See: http://rcsg-gsir.imsb-dsgi.nrc-cnrc.gc.ca/documents/internet/node31.html or just google ssh-keygen)\n\nTo verify that you have a key associated with your github account:\n\nGo to: https://github.com/settings/ssh\n\nYou should see at least one key with a hash key matching one of the hashes you saw when you typed ssh-add -l just a minute ago.\n\nIf you don't, add one, then try again.\n\nAre you in a corporate environment? Is it possible that your system variables have recently changed? Per this SO answer, ssh keys live at %HOMEDRIVE%%HOMEPATH%\\.ssh\\id_rsa.pub. So if %HOMEDRIVE% recently changed, git doesn't know where to look for your key, and thus all of the authentication stuff.\n\nTry running ssh -vT [email protected]. Take note of where the identity file is located. For me, that was pointing not to my normal \\Users\\MyLogin but rather to a network drive, because of a change to environment variables pushed at the network level.\n\nThe solution? Since my new %HOMEDRIVE% has the same permissions as my local files, I just moved my .ssh folder there, and called it a day.\n\nGuys this is how it worked for me:\n\nOpen terminal and go to user [See attached image]\n\nOpen .ssh folder and make sure it doesn't have any file like id_rsa or id_rsa.pub otherwise sometimes it wont properly rewrite files\n\ngit --version [Check for git installation and version]\n\ngit config --global user.email \"your email id\"\n\ngit config --global user.name \"your name\"\n\ngit config --list [make sure you have set your name & email]\n\ncd ~/.ssh\n\nssh-keygen, it prompts for saving file, allow it\n\ncat ~/.ssh/id_rsa.pub [Access your public key & copy the key to gerrit settings]\n\nNote: You should not be using the sudo command with Git. If you have a very good reason you must use sudo, then ensure you are using it with every command (it's probably just better to use su to get a shell as root at that point). If you generate SSH keys without sudo and then try to use a command like sudo git push, you won't be using the same keys that you generated\n\nThe basic GIT instructions did not make a reference to the SSH key stuff. Following some of the links above, I found a git help page that explains, step-by-step, exactly how to do this for various operating systems (the link will detect your OS and redirect, accordingly):\n\nhttp://help.github.com/set-up-git-redirect/\n\nIt walks through everything needed for GITHub and also gives detailed explanations such as \"why add a passphrase when creating an RSA key.\" I figured I'd post it, in case it helps someone else...\n\nThis is how I was finally able to push to git\n\nFor me, I keep on getting\n\n[email protected]: Permission denied fatal: Could not read from remote Please make sure you have the correct access rights and the repository exists.\n\nSo after hours of research, I discovered that after generating your ssh key and making your windows agent recognise your key the last thing I did to fix my issue was to update the ssh-key in the git repo for that project.\n\nSo you would log in to your git hub account then go to the repo you want to push to then in the settings look for security that's where you can add your ssh key. For me, the key is stored in a .ssh/id_ed123939.pub"
    }
}