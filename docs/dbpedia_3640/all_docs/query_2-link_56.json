{
    "id": "dbpedia_3640_2",
    "rank": 56,
    "data": {
        "url": "http://hiteshrojasar.blogspot.com/",
        "read_more_link": "",
        "language": "en",
        "title": "Rojasara",
        "top_image": "http://hiteshrojasar.blogspot.com/favicon.ico",
        "meta_img": "http://hiteshrojasar.blogspot.com/favicon.ico",
        "images": [
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhhz_cFwRHx2JLq_izfBnrnlvOqvu8YV9nNIRP_ojRHJKFSBCxL8wphzIKL36UclsBiS8-XH8kztVscwCogrvBLwzTjJfzujGNpsXQIyWJpv4jflTxhFcuvp2FJ0IpF_pSmZfXA5q9t9go/s320/company+logo.jpg",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMUILrVQFGPktBmIWf8mO46NONonisMtlSQIR0Tl71ZdWFl4i-Mr3_Rkek84ZfLkf1wIunK8Y_VOCa5vuh-1WOuD3ju0LPZIUt8QgtHBZR5g-f04ohyztTe68Lav5BVPrg3pkl3XdKA50/s320/PicsArt_07-12-06.59.49.jpg",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://www.simplilearn.com/ice9/free_resources_article_thumb/top-ethical-hacking-certifications-to-consider-article.jpg",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiVxjAlhlwqcFXy9GsJNOO6t1oM8R300kTkIa54UdvIaToJvxMlZXTinRIil3DWOAYSWYjBSNk7-fwpU3q9QQ_H1iFfOF3r_sX_73Wk3hL1j-5IUIUBitd4ECT3Edg79zxu3QNaXS3zIi0/s320/PicsArt_07-09-03.49.58.jpg",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhFb8jP3eSkjahQ53K06EYDfEVYrTykSFCyi8dqccV9ZVzlshksTghAIuN7_NEdasX-XeWS4DRQZVpURS1opquYGYknybOk6ERLGq3uU0FcHaRPawfHQYIGlm8ohlqu6u3KxODW1lywX3G7/s400/download.png",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjvwqv840s_cVSNSEhtZScRXlZs_ayg0u4e1F0_ul50QfiReMwiBNTlYXn4p07F8wX_WJxnqGJeKOYqzYev559ZN3TjfypTipGqukuqxhQ9vfGsSI65czycbf5KZLii8xA-7sp2tO7d9LjG/s320/struts-mvc.jpg",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://lh3.googleusercontent.com/blogger_img_proxy/AEn0k_t4tCr5n2Ta5n5lLV8_gbHc9i_dAm46zCeLZ3WBmgln1dfATVZ-WhUIAUY0-l9nD_MfLkE32SJxzSLNcpSWtGfnr31rPdD7dL33zg9Z6mBiXgPojkHff2fbuGsvxIZ0E90ecQJ65KtMxbP6Lc17nn1qpzFB7GuZkRWwWSiaOK5X2JtDoxtM4qF5XVtX31MZStRcvPQ063A7jTG1=w72-h72-p-k-no-nu"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "View my complete profile"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "http://hiteshrojasar.blogspot.com/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "http://hiteshrojasar.blogspot.com/",
        "text": "JAVA ASSIGNMENT - 4\n\nQ.1 What is javaBeans?Explain in brief.\n\nJavaBeans is an object-oriented programming interface from Sun Microsystems that lets you build re-useable applications or program building blocks called components that can be deployed in a network on any major operating system platform. Like Javaapplets, JavaBeans components (or \"Beans\") can be used to give World Wide Web pages (or other applications) interactive capabilities such as computing interest rates or varying page content based on user or browser characteristics.\n\nFrom a user's point-of-view, a component can be a button that you interact with or a small calculating program that gets initiated when you press the button. From a developer's point-of-view, the button component and the calculator component are created separately and can then be used together or in different combinations with other components in different applications or situations.\n\nWhen the components or Beans are in use, the properties of a Bean (for example, the background color of a window) are visible to other Beans and Beans that haven't \"met\" before can learn each other's properties dynamically and interact accordingly.\n\nBeans are developed with a Beans Development Kit (BDK) from Sun and can be run on any major operating system platform inside a number of application environments (known ascontainers), including browsers, word processors, and other applications.\n\nTo build a component with JavaBeans, you write language statements using Sun's Javaprogramming language and include JavaBeans statements that describe componentproperties such as user interface characteristics and events that trigger a bean to communicate with other beans in the same container or elsewhere in the network.\n\nBeans also have persistence, which is a mechanism for storing the state of a component in a safe place. This would allow, for example, a component (bean) to \"remember\" data that a particular user had already entered in an earlier user session.\n\nJavaBeans gives Java applications the compound document capability that the OpenDoc and ActiveX interfaces already provide.\n\nQ.2 Explain MVC.\n\nModel View Controller or MVC as it is popularly called, is a software design pattern for developing web applications. A Model View Controller pattern is made up of the following three parts:\n\nModel - The lowest level of the pattern which is responsible for maintaining data.\n\nView - This is responsible for displaying all or a portion of the data to the user.\n\nController - Software Code that controls the interactions between the Model and View.\n\nMVC is popular as it isolates the application logic from the user interface layer and supports separation of concerns. Here the Controller receives all requests for the application and then works with the Model to prepare any data needed by the View. The View then uses the data prepared by the Controller to generate a final presentable response. The MVC abstraction can be graphically represented as follows.\n\nQ.3 What is Hinernate ? Explain with ORM.\n\nHibernate:-\n\nHibernate is a high-performance Object/Relational persistence and query service which is licensed under the open source GNU Lesser General Public License (LGPL) and is free to download. Hibernate not only takes care of the mapping from Java classes to database tables (and from Java data types to SQL data types), but also provides data query and retrieval facilities.\n\nThis tutorial will teach you how to use Hibernate to develop your database based web applications in simple and easy steps.\n\nORM:-\n\nObject-relational mapping (ORM) is a mechanism that makes it possible to address, access and manipulate objects without having to consider how those objects relate to their data sources. ORM lets programmers maintain a consistent view of objects over time, even as the sources that deliver them, the sinks that receive them and the applications that access them change.\n\nBased on abstraction, ORM manages the mapping details between a set of objects and underlying relational databases, XMLrepositories or other data sources and sinks, while simultaneously hiding the often changing details of related interfaces from developers and the code they create.\n\nORM hides and encapsulates change in the data source itself, so that when data sources or their APIs change, only ORM needs to change to keep up—not the applications that use ORM to insulate themselves from this kind of effort. This capacity lets developers take advantage of new classes as they become available and also makes it easy to extend ORM-based applications. In many cases, ORM changes can incorporate new technology and capability without requiring changes to the code for related applications.\n\nQ.4 Explain hibernate annotations.\n\nFirst of all you would have to make sure that you are using JDK 5.0 otherwise you need to upgrade your JDK to JDK 5.0 to take advantage of the native support for annotations.\n\nSecond, you will need to install the Hibernate 3.x annotations distribution package, available from the sourceforge: (Download Hibernate Annotation) and copy hibernate-annotations.jar, lib/hibernate-comons-annotations.jar and lib/ejb3-persistence.jar from the Hibernate Annotations distribution to your CLASSPATH\n\ns I mentioned above while working with Hibernate Annotation all the metadata is clubbed into the POJO java file along with the code this helps the user to understand the table structure and POJO simultaneously during the development.\n\nQ.5 Explain Spring in brief.\n\nThe Spring Framework is a Java platform that provides comprehensive infrastructure support for developing Java applications. Spring handles the infrastructure so you can focus on your application.\n\nSpring enables you to build applications from \"plain old Java objects\" (POJOs) and to apply enterprise services non-invasively to POJOs. This capability applies to the Java SE programming model and to full and partial Java EE.\n\nExamples of how you, as an application developer, can benefit from the Spring platform:\n\nMake a Java method execute in a database transaction without having to deal with transaction APIs.\n\nMake a local Java method a remote procedure without having to deal with remote APIs.\n\nMake a local Java method a management operation without having to deal with JMX APIs.\n\nMake a local Java method a message handler without having to deal with JMS APIs.\n\nQ.6 What is Spring loC Container ?\n\nThis chapter covers the Spring Framework implementation of the Inversion of Control (IoC) principle. IoC is also known as dependency injection (DI). It is a process whereby objects define their dependencies, that is, the other objects they work with, only through constructor arguments, arguments to a factory method, or properties that are set on the object instance after it is constructed or returned from a factory method. The container then injects those dependencies when it creates the bean. This process is fundamentally the inverse, hence the name Inversion of Control (IoC), of the bean itself controlling the instantiation or location of its dependencies by using direct construction of classes, or a mechanism such as the Service Locator pattern.\n\nThe org.springframework.beans and org.springframework.context packages are the basis for Spring Framework’s IoC container. The BeanFactory interface provides an advanced configuration mechanism capable of managing any type of object. ApplicationContext is a sub-interface of BeanFactory. It adds easier integration with Spring’s AOP features; message resource handling (for use in internationalization), event publication; and application-layer specific contexts such as theWebApplicationContext for use in web applications.\n\nIn short, the BeanFactory provides the configuration framework and basic functionality, and the ApplicationContext adds more enterprise-specific functionality. TheApplicationContext is a complete superset of the BeanFactory, and is used exclusively in this chapter in descriptions of Spring’s IoC container. For more information on using the BeanFactory instead of the ApplicationContext, refer to Section 7.16, “The BeanFactory”.\n\nIn Spring, the objects that form the backbone of your application and that are managed by the Spring IoC container are called beans. A bean is an object that is instantiated, assembled, and otherwise managed by a Spring IoC container. Otherwise, a bean is simply one of many objects in your application. Beans, and thedependencies among them, are reflected in the configuration metadata used by a containe.\n\nQ.7 What is Struts ? Explain in brief.\n\nStruts is an application development framework that is designed for and used with the popular J2EE (Java 2, Enterprise Edition) platform. It cuts time out of the development process and makes developers more productive by providing them a series of tools and components to build applications with. It is non-proprietary and works with virtually any J2EE-compliant application server. Struts falls under the Jakarta subproject of the Apache Software Foundation and comes with an Open Source license (meaning it has no cost and its users have free access to all its internal source code).\n\nIn addition to helping you work faster and having no cost, Struts also helps make your end work products better. The main reason for this, to quote from Eric Raymond's \"The Cathedral and the Bazaar\" (a classic book on open source development), is that \"(g)iven a large enough beta-tester and co-developer base, almost every problem will be characterized quickly and the fix obvious to someone.\" In other words, so many people are using and developing Struts that bugs are found and get fixed quickly.\n\nThe dictionary calls a framework \"A structure for supporting or enclosing something else, especially a skeletal support used as the basis for something being constructed.\" This perfectly describes Struts—a collection of Java code designed to help you build solid applications while saving time. It provides the basic skeleton and plumbing; you focus on the layout and look of each room.\n\nInterestingly, the dictionary offers an alternative definition of a framework: \"A set of assumptions, concepts, values, and practices that constitutes a way ofviewing reality.\" This describes Struts as well—it's a way of looking at things Struts saves you time by allowing you to view complex applications as a series of basic components: Views, Action Classes, and Model components."
    }
}