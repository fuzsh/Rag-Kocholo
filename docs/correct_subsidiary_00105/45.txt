Whatever the strategic motives behind Borland’s acquisition of the middleware house of Open Environment Corp, its absorption was widely perceived as a botched assimilation, one that deepened Borland’s crisis and delayed its return to profit. Might Visigenic create similar problems for Borland at a time when it needs to stiffen its reputation as a company that has put its troubles behind it?

Strategic buy

Borland admits that the takeover created problems, but argues that they cannot possibly be repeated – simply because of the similarities between the two target companies. When OEC folk arrived, Brian Ledbetter, Borland’s product manager for Western Europe recalls, within Borland, there didn’t seem to be a great understanding of what middleware was about. He adds his belief that the acquisition of OEC has changed that situation. Now everyone understands Entera, and so they can understand Visigenic, he argues. If he’s right, and the Visigenic purchase can be handled without undue upheaval, then the move could make plenty of sense. Visigenic is a strategic buy in the same way that OEC was strategic – it fleshes out another part of the same plan to move Borland’s Delphi, C++Builder, and JBuilder tools up- market. At the high-end, it’s not enough to have an excellent programming environment: enterprise development inevitably involves connecting many different types of device together, and that generally means grappling with middleware of one sort or another. Borland’s stated aim is to make the connectivity question a complete non-issue from the developer’s perspective. For most client/server developers, the middleware issue has been very much in their face, Ledbetter explains. They’ve had to code a middleware interface layer. Delphi Enterprise has been a hit precisely because [with Entera] it hides the middleware layer. He adds that Delphi Enterprise enables the developer to drag and drop Entera objects onto a form, click on them, and inspect their properties just as they would any other Delphi object.

Connectivity jigsaw

As Ledbetter notes, Delphi Enterprise is basically a combination of Entera and Delphi Client/server. Entera may be a fine product, but it caters for a specific type of communication (remote procedure calls based, in the latest 4.0 version, on the DCE-RPC specification). Borland knows that its tools must be able to cater for a wider variety of configurations and communications architectures. Visigenic’s VisiBroker provides another important part of the connectivity jigsaw by tackling both Java and CORBA communications with its native-IIOP (internet inter-ORB protocol) technology. The jigsaw still isn’t complete – Visigenic offers different facilities to Entera but both use basically the same underlying technology – synchronous remote procedure calls (wherein communicating devices await each other’s responses, i.e. they must be ‘synchronized’). Borland says it will develop a third strand to its middleware based on asynchronous or message- based communications (in which communications are undertaken without waiting for a response). Borland has no due-date for messaging middleware, because it says it is not an immediate development priority (it is more likely that messaging will be added by licensing or acquiring existing technology anyway). Job number one is to get Visibroker working in the seamless Borland style. Entera is a proven, robust, functional, full-featured middleware, claims Ledbetter. It provides a super-stub generator – it can generate all the code needed for the various services, whereas with VisiBroker you still need to code [manually] to a set of APIs. VisiBroker is one of the best CORBA implementations. But it’s still an immature, less proven technology [than Entera]. Right now it’s enjoying a high level of attraction for a relatively small group of high-end applications, but in the future, the two will need to be more interchangeable. Making the two offerings interchangeable will take considerable effort. To begin with, Borland has instigated a development program under the code-name ‘E-Span’ that will provide an IIOP- to-Entera bridge, to allow Java clients to access server-side components via Entera, for example. E-Span is expected as shippable code in the third quarter this year. It is only the first part of a larger project code-named Mercury that is intended to provide a versatile middleware capability for all of Borland’s tools. As part of Mercury, VisiBroker will be upgraded to gain the same kind of code-generating automation as Entera currently enjoys. The Delphi/Entera enterprise product is the first fruit of this kind of integration – which will eventually transform both the C++Builder and JBuilder product lines. The recently announced C++Builder 3.0, for example, will offer Entera in its Enterprise version, as will the next major release of JBuilder. The current JBuilder 2.0 uses VisiBroker for its communications, and Entera will supplement, rather than supplant, this option. This round up of projects and code-names would not be complete without a mention of Borland’s Midas (Multi-tier Distributed Application Services Suite, which was first announced April last year). This is current technology – supplied with Delphi 3.0 Client/server and Enterprise versions – that presents ready-made middleware services to the developer. Ledbetter characterizes it as a little subset of Entera. Part of Midas is to make Microsoft’s DCOM [distributed component object model] look like local COM, he adds. It remains to be seen whether the integration of Entera and VisiBroker will extend to the implementation of Midas across the C++ and Java lines, but Ledbetter admits that this is likely in the longer-term.

Repository strategy

While it’s busy with the above, Borland will also need to develop a coherent repository strategy. Repositories tend to get more useful as the size of a development team increases, and as the projects that they tackle get more complicated. As Borland moves upscale it will need to do something to answer this question. It admits that a repository is both necessary and desirable, and has been investigating the potential of the Microsoft Repository. But it has yet to articulate a formal repository stance. We’re still looking into a couple of ways to go, admits Borland’s vice president of marketing, Zack Urlocker. We feel strongly that the end result should be cross-platform… Our strategy will be announced on April 29th. No doubt the prospect of using a Microsoft repository leaves a nasty taste in Borland’s corporate maw. Let’s not forget, if it weren’t for the fact that Microsoft’s Visual Basic has done such a fine job of kicking everything else out of the desktop development ring, Borland probably wouldn’t even be contemplating this whole enterprise thing. However, reality is reality, and Borland knows that it must move up-market if it is to survive at all. It can’t simply rely on fancy tools to achieve this. To make a convincing case it must also provide a direct sales force, and proper technical support. To date, Borland’s desktop-centric business model has been to sell through resellers and retailers, and to offer support to those willing to use a credit card and a phone. It is helpful, therefore, that Visigenic comes complete with a product- based consulting arm on which Borland can start to build a half decent services business. Interestingly, OEC came complete with a similar band of consultants, but in that instance the 17-person team was spun out to become Boston-based NetNumina. With hindsight, Borland’s Urlocker admits that this was a mistake. It was a tactical decision, based on keeping OEC working properly, he states. I would have liked them to stay part of Borland, and regret the loss of a resource. That the mistake is not being repeated shows how much Borland’s enterprise aspirations have matured in the last 18 months.

M&A Impact.