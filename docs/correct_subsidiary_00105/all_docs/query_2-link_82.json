{
    "id": "correct_subsidiary_00105_2",
    "rank": 82,
    "data": {
        "url": "https://www.dqindia.com/corba/",
        "read_more_link": "",
        "language": "en",
        "title": "CORBA",
        "top_image": "https://img-cdn.thepublive.com/fit-in/1200x675/filters:format(webp)/dq/media/agency_attachments/UPxQAOdkwhCk8EYzqyvs.png",
        "meta_img": "https://img-cdn.thepublive.com/fit-in/1200x675/filters:format(webp)/dq/media/agency_attachments/UPxQAOdkwhCk8EYzqyvs.png",
        "images": [
            "https://www.facebook.com/tr?id=483492477359394&ev=PageView&noscript=1",
            "https://img-cdn.thepublive.com/fit-in/580x326/filters:format(webp)/dq/media/agency_attachments/UPxQAOdkwhCk8EYzqyvs.png",
            "https://www.dqindia.com/static/images/svg%20icons/google.svg",
            "https://www.dqindia.com/static/images/svg%20icons/facebook-logo.svg",
            "https://www.dqindia.com/static/images/svg%20icons/cross_svg.svg",
            "https://www.dqindia.com/static/images/svg%20icons/user-avatar.svg",
            "https://www.dqindia.com/static/images/google_news.png",
            "https://img-cdn.thepublive.com/filters:format(webp)/dq/media/post_attachments/c4c4f22337c540b4c826f16fc5989811042db21ca358ca6223dc929cd2496edb.jpg",
            "https://img-cdn.thepublive.com/filters:format(webp)/dq/media/post_attachments/026086250074de42a97dce71aacc396b4b4a5d1ab58f2a1aef23513dd6ab4562.jpg",
            "https://img-cdn.thepublive.com/filters:format(webp)/dq/media/post_attachments/45bd516c87c953cbf8ef3942f83ded9e3f45f1aa9126ed1e615e3b667bf884e1.jpg",
            "https://www.dqindia.com/static/images/svg%20icons/newsletter_new_icon.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "DQI Bureau"
        ],
        "publish_date": "1999-02-28T00:00:00+05:30",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://img-cdn.thepublive.com/fit-in/48x48/filters:format(webp)/dq/media/member_avatars/dq-icon.png",
        "meta_site_name": "DQ",
        "canonical_link": "https://www.dqindia.com/corba/",
        "text": "The computing paradigm has been\n\nevolving to encompass a wide variety of software and hardware in a plethora of 'layers.'\n\nWhich makes achieving interoperability a nightmare for software professionals. Thankfully,\n\nthey can wave the CORBA wand and say: CORBAcadabra!\n\nAdvertisment\n\nAs companies the world over vie\n\nwith each other to build enter- prise computing infrastructures that work across 'n'\n\nnumber of hardware and software platforms, an 'old' new gluing force is emerging. It is\n\ncalled CORBA, the Common Object Request Broker Architecture from the Object Management\n\nGroup (OMG). Old, because it was in 1991 that the first version of this software\n\nspecification emerged-a specification that enables applications to communicate with one\n\nanother, no matter on which hardware system they are located or who has designed them.\n\nNew, because it is only recently that the intended interoperability promise of CORBA is\n\nbeing delivered in real-life environments.\n\n\"The age of infrastructure reinvention is coming to an end,\" says Thomas J\n\nMowbray, one-time member of the OMG and The Father of CORBA, as he is better known.\n\nMowbray, who now heads the Component Management Group, a US-based non-profit organization\n\npromoting CORBA, identifies three such \"infrastructures\"-Java RMI, CORBA and\n\nCOM. It is these three specifications that are today driving the corporates' move toward\n\ndistributed computing.\n\nFor long the computing paradigm has evolved-and is continuing to evolve-into a large,\n\nunwieldy number of operating systems, hardware platforms and applications. Things were\n\nproprietary but comfortable in the mainframe days. They still are largely\n\nproprietary-being driven by vendors such as Microsoft, IBM and others-but no longer\n\ncomfortable. Companies are still struggling to find ways to make their disparate computing\n\nplatforms 'talk' to each other-but they are being obfuscated by the technology, which\n\nkeeps on pulling a fast one on them! The three technologies available to them for\n\nsynergizing the wide variety of platforms-remote procedure calls, messaging middleware and\n\ntransaction processing monitors (together, popularly known as middleware)-have had a\n\ncommon drawback. The middleware layer typically is proprietary, being defined and\n\nmaintained by the vendors at their will.\n\nThis model has worked well till a couple of years ago. And then, the internet began to\n\nchange everything. According to a Forrester Research forecast, by the year 2001 about 95%\n\nof all software applications will be designed specifically for the net. So it becomes\n\nimperative for the vendors, and thence for the application developers, to take an internet\n\nview of things. Which immediately puts the focus on technologies like OMG's CORBA, Sun\n\nMicrosystem's Java and Microsoft's COM/DCOM (Component Object Model/Distributed Component\n\nObject Model). The trio is progressing fast to take the 'proprietary' peel off most\n\nsoftware, by hiding the different code under an abstract layer. Such a layer can act as a\n\ntraffic cop sending off the cars, trucks and bicycles of the software criss-cross to their\n\nappropriate travel routes.\n\nAnd then, there is the beauty of the concept of reusable components, parts of a main\n\nprogram which can be invoked to interface with other components within the same system or\n\nacross a network to perform computing tasks. That not only saves the programmers' time\n\notherwise spent in writing repetitive code but saves the existing investments in\n\ntechnology. This may be good news for the users; however, it can spell bad omen for\n\ncertain vendors. One reason for the latter could be that the vendor might loosen its\n\nhammerlock on the large base of customers-to which it keeps on selling souped up versions\n\nof basically the same product. According to Dr Richard Soley, Chairman and CEO of OMG,\n\n\"Although Microsoft is an OMG member, and has been invited many times to propose COM\n\ninto the open, neutral OMG technology adoption process, they have never chosen to do\n\nso.\"\n\nWith about 150 million Windows-based systems using COM installed across the world, why\n\nshould they? In fact, Microsoft maintains (as is apparent from a document on its web site)\n\nthat \"to take full advantage of a given platform , developers have to\n\nsacrifice cross-ORB interoperability and cross-ORB portability.\" CORBA, on the other\n\nhand, accommodates the intersection of all inter-ORB protocols (i.e. interoperability\n\nacross different object request brokers). What's more, CORBA's web site, www.corba.org,\n\nhas a listing of hundreds of vendors committed to CORBA, including such platform-savvy\n\nstalwarts as Sun Microsystems, Silicon Graphics and Big Blue itself. Besides, the 'Success\n\nStories' on the site cover verticals ranging from advertising to healthcare to telcom.\n\nAcross the ORB\n\nBut then the question arises:\n\nHow do you dovetail the components developed using the three infrastructures? For\n\ncompanies interested in and deploying non-Windows setups, the answer is 'bridges,' which\n\nare software, mainly from third-party vendors, that try to bring the triumvirate into\n\nunison. Unfortunately, thus far they provide \"only limited communication between\n\nthese component types,\" according to the Technology Forecast: 1998 report by\n\nconsulting major PricewaterhouseCoopers. The report, however, says that \"the notable\n\nexception to this rule is Object Bridge from Visual Edge Software, which provides true\n\ninteroperability between CORBA and COM/DCOM. As regards Java and CORBA, according to Dr\n\nSoley, \"CORBA is now bundled in the Java Developers Kit, and Java depends on CORBA\n\nfor enterprise-wide connectivity, especially in heterogeneous, multi-lingual\n\nenvironments.\" And with the componentware market growing over 40% last year (IDC data\n\nfor 1998), the situation is only going to improve over the next few years.\n\nAnother healthy indication of the ongoing CORBA movement is the large number of CORBA\n\nbooks being sold every year. Says Dr Mowbray, \"Last year we alone sold over\n\n20,000 books on CORBA.\" Although neither he nor Dr Soley would give an estimate as to\n\nhow many programmers are working on CORBA, the success of this next big wave of computing\n\ncan be gauged from the fact that from the eight companies that formed OMG in 1989, it has\n\ngrown to become a gigantic consortium of over 800 members. And this concourse is building\n\nup enough momentum to establish CORBA as the 'Middleware that's Everywhere' through\n\npropagating its various worldwide standard specifications: CORBA/IIOP, Object Services,\n\nInternet Facilities and Domain Interface specifications. In all probability, the Middle\n\nRoute could prove to be an enterprise's path to IT Nirvana. Just chant the CORBA mantra.\n\nSANJAY GUPTA,\n\nin New Delhi.\n\nheight=\"125\" align=\"left\">The figure illustrates the primary components in the OMG\n\nReference Model architecture. Descriptions of these components are as follows:\n\nOBJECT SERVICES: These are domain-independent interfaces that are used by many\n\ndistributed object programs. For example, a service providing for the discovery of other\n\navailable services is almost always necessary regardless of the application domain. Two\n\nexamples of Object Services that fulfill this role are:\n\n* The Naming Service-which allows clients to find objects based on names\n\n* The Trading Service-which allows clients to find objects based on their properties.\n\nThere are also Object Service specifications for life-cycle management, security,\n\ntransactions and event notification, as well as many others.\n\nCOMMON FACILITIES: Like Object Service interfaces, these interfaces are also\n\nhorizontally-oriented, but unlike Object Services they are oriented toward end-user\n\napplications. An example of such a facility is the Distributed Document Component Facility\n\n(DDCF), a compound document Common Facility based on OpenDoc. DDCF allows for the\n\npresentation and interchange of objects based on a document model, for example,\n\nfacilitating the linking of a spreadsheet object into a report document.\n\nDOMAIN INTERFACES: These interfaces fill roles similar to Object Services and\n\nCommon Facilities but are oriented toward specific application domains. For example, one\n\nof the first OMG REPs issued for Domain Interfaces is for Product Data Management (PDM)\n\nEnablers for the manufacturing domain.\n\nAPPLICATION INTERFACES: These are interfaces developed specifically for a given\n\napplication. Because they are application-specific, and because the OMG does not develop\n\napplications (only specifications), these interfaces are not standardized. However, if\n\nover time it appears that certain broadly useful services emerge out of a particular\n\napplication domain, they might become candidates for future OMG standardization.\n\nCourtesy: CMG\n\nAdvertisment\n\nsrc=\"../images/Corba1a.jpg\" width=\"250\" height=\"183\" align=\"left\">The figure illustrates the primary\n\ncomponents in the CORBA ORB architecture. Descriptions of these components are as follows:\n\nOBJECT IMPLEMENTATION: This defines operations that implement a CORBA IDL\n\ninterface. Object implementations can be written in a variety of languages including C,\n\nC++, Java, Smalltalk, and Ada.\n\nCLIENT: This is the program entity that invokes an operation on an object\n\nimplementation. Accessing the services of a remote object should be transparent to the\n\ncaller. Ideally, it should be as simple as calling a method on an object, i.e. obj->op\n\n(args). The remaining components in the figure help to support this level of transparency.\n\nOBJECT REQUEST BROKER: The ORB provides a mechanism for transparently communicating\n\nclient requests to target object implementations. The ORB simplifies distributed\n\nprogramming by decoupling the client from the details of the method invocations. This\n\nmakes client requests appear to be local procedure calls. When a client invokes an\n\noperation, the ORB is responsible for finding the object implementation, transparently\n\nactivating it if necessary, delivering the request to the object, and returning any\n\nresponse to the caller.\n\nORB INTERFACE: An ORB is a logical entity that may be implemented in various ways\n\n(such as one or more processes or a set of libraries). To decouple applications from\n\nimplementation details, the CORBA specification defines an abstract interface for an ORB.\n\nThis interface provides various helper functions such as converting object references to\n\nstrings and vice versa, and creating argument lists for requests made through the dynamic\n\ninvocation interface.\n\nCORBA IDL STUBS AND SKELETONS: CORBA IDL stubs and skeletons serve as the 'glue'\n\nbetween the client and server applications, respectively, and the ORB. The transformation\n\nbetween CORBA IDL definitions and the target programming language is automated by a CORBA\n\nIDL compiler. The use of a compiler reduces the potential for inconsistencies between\n\nclient stubs and server skeletons and increases opportunities for automated compiler\n\noptimizations.\n\nDYNAMIC INVOCATION INTERFACE: The DII allows a client to directly access the\n\nunderlying request mechanisms provided by an ORB. Applications use the DII to dynamically\n\nissue requests to objects without requiring IDL interface-specific stubs to be linked in.\n\nUnlike IDL stubs (which only allow RPC-style requests), the DII also allows clients to\n\nmake non-blocking deferred synchronous (separate send and receive operations) and one-way\n\n(send-only) calls.\n\nDYNAMIC SKELETON INTERFACE: DSI is the server side's analog to the client side's\n\nDII. The DSI allows an ORB to deliver requests to an object implementation that does not\n\nhave compile-time knowledge of the type of the object it is implementing. The client\n\nmaking the request has no idea whether the implementation is using the type-specific IDL\n\nskeletons or the dynamic skeletons.\n\nOBJECT ADAPTER: This assist the ORB with delivering requests to the object and with\n\nactivating the object. More importantly, an object adapter associates object\n\nimplementations with the ORB. Object adapters can be specialized to provide support for\n\ncertain object implementation styles (such as OODB object adapters for persistence and\n\nlibrary object adapters for non-remote objects).\n\nface=\"Arial, Helvetica, sans-serif\" size=\"-1\" color=\"#CCFFFF\">Courtesy: CMG\n\nAdvertisment\n\nA Tale Of Two ORBs face=\"Arial, Helvetica, sans-serif\" size=\"-1\">\n\nCORBA's only real competition is DCOM. RMI is currently a niche ORB; this will change when\n\nit runs on IIOP. Sockets is just a low-level protocol. And, HTTP/CGI just doesn't cut it.\n\nSo, it's CORBA versus DCOM. CORBA has won the first round. But the battle will continue\n\nfor the remainder of the century.\n\nFrom past wars, we have learned-the hard way-never to underestimate Microsoft. We also\n\nlearned that superior technology alone doesn't always win-especially in the face of a\n\nsuperior marketing machine. So why does the CORBA/Java camp stand a better chance against\n\nMicrosoft where many others have failed?\n\nIn the last year <1997>, the CORBA camp was joined by fast-moving newcomers. This new\n\nguard looks at CORBA as a way to build products, not just standards. The new guard\n\nincludes some agile pure-software companies like Netscape, Oracle, JavaSoft, BEA and\n\nNetDynamics. They join long-standing CORBA players like IBM, Novell, Borland/Visigenic,\n\nSunSoft, Iona, Tandem and Expersoft. Together, these companies form a formidable bloc.\n\nThey have the support of hundreds of other software vendors as well as some major IT\n\nshops.\n\nThis new CORBA coalition is building around a killer app called the Object Web. The Web\n\ntransforms CORBA from a set of standards to a set of products that fulfill an\n\nintergalactic need. CORBA becomes a powerful architecture that ties together products that\n\nform the Object Web. JavaBeans and Enterprise JavaBeans provide the component foundation\n\nand tool support. This is a very potent combination of intergalactic technologies. The\n\nCORBA/Java camp has what it takes to give Microsoft a run for their money.\n\nExcerpted from the book, Client/Server Programming with Java and CORBA. Courtesy: John\n\nWiley & Sons\n\n\"One of the major reasons\n\nwhy CORBA is so successful today was the lack of delivery on the Distributed Component\n\nObject Model of Microsoft.\"\n\nAdvertisment\n\n-Dr Thomas J Mowbray,\n\nChairman, Component Management Group.\n\nThe Father of CORBA, as he is fondly\n\nknown, Dr Mowbray eats, sleeps\n\nand drinks CORBA, the Common Object Request Broker Architecture specification for enabling\n\ninteroperability between software components. What that essentially means is effective\n\ncommunication between the multitude of software and hardware platforms in use today. His\n\nsubject may sound drab to some, but his work heralds the next wave of computing-Component\n\nOrientation-that will take the old with the new and help create the applications\n\ninfrastructure of the next century. A PhD in Computer Science from the University of\n\nSouthern California, Dr Mowbray has written a number of books on CORBA. Apart from\n\nchairing the Component Management Group, a non-profit organization promoting the use of\n\nCORBA and componentware, he is Chief Scientist at Blueprint Technologies Inc, a\n\nVirginia-based software product and consulting company focusing on reusable software\n\nframeworks. Dr Mowbray was recently in the capital to speak at a seminar on CORBA and for\n\nannouncing a partnership of CMG with the Software Technology Parks of India. Speaking to\n\nSanjay Gupta of DATAQUEST in his first, extensive interview in the country, he fielded\n\nquestions on CORBA, the object-oriented movement and, yes, Microsoft-some of them rather\n\nreticently. Excerpts:\n\nHow is a component-oriented approach different from an object-oriented one?\n\nThe object-oriented approach is based on merging the data process models and that is\n\nusually done in terms of the programming language. The result of the object-oriented\n\napproach is to focus on small-scale modeling issues, first for development of systems\n\nwhich were generally useful 10 years ago-which do not represent the kind of systems we are\n\ndeveloping today. Component orientation includes several different aspects which are not\n\ndirectly tied to programming-language issues . Within the\n\nscope of component orientation we have the idea of a deployable software unit which is\n\nspecified as an architectural component...\n\nAdvertisment\n\n...it's like a building block?\n\nYes, so you need a technology for specifying architecture as one of the requirements of a\n\ncomponent. The Component Management Group is promoting the use of open distributed\n\nprocessing, which is a standard from the ISO as also a standard from the ITU represented\n\nby the X900 series. So there is a very well thought out way of specifying software\n\ncomponent interfaces. Component orientation also includes the use of patterns-software\n\npatterns, design patterns...we don't have to reinvent designs in other kinds of solutions\n\nfrom scratch.\n\nHow are OMG and CMG related?\n\nThe OMG is responsible for infrastructure standards related to CORBA. They've been\n\nsuccessful in adopting a standard which has been commercialized which is widely available.\n\nThey have achieved their mission in that respect. CMG is interested in higher levels of\n\ninteroperability, particularly between application-level components in vertical domains\n\nand across vertical domains. At CMG we believe that an architecture-based approach is the\n\nright way to define the technology and create complete solutions for vertical markets. In\n\nthis respect we are proceeding to define standards in finance and other areas which will\n\nbe relevant to national organizations. We have participated in some OMG standardization to\n\nachieve that objective.\n\nHow does the CORBA movement go\n\nwith similar attempts of specific vendors?\n\nOne of the major reasons why CORBA is so successful today was the lack of delivery on the\n\nDistributed Component Object Model of Microsoft. Microsoft's original intention with DCOM\n\nwas to develop a multimedia technology for the internet. They failed on both counts. DCOM\n\ntoday has inadequate security for internet applications. This weakness is why we've\n\nrecognized there are so lax system management capabilities along with other Microsoft\n\nplatform features that make it less applicable to large-scale system integration and\n\nmanagement than our technologies. CORBA is at the right place at the right time with a\n\nmature solution which is stable, and which provides security and the capability to manage\n\nsystems.\n\nAdvertisment\n\nHow do these three things fit\n\ninto the move toward language- and OS-independent software-Java, CORBA and COM?\n\nThe three major infrastructures are Java RMI (remote method invocation), CORBA and\n\nCOM. All three infrastructures have to find interoperability relationships among each\n\nother-including the COM-CORBA interworking and Sun Microsystems' adoption of the CORBA\n\nIIOP (inter-object resource broker communication protocol) as an extension to RMI\n\ntechnology. All together, these infrastructures can interoperate and the vendors are\n\nmoving them closer and closer together as time progresses. We envision a future\n\nenvironment where all three infrastructures will coexist and CORBA providing the mechanism\n\nfor interworking across the entire range of programming languages and operating platforms.\n\nBut the large installed base of\n\nWindows would prompt more and more programmers to adopt COM instead of CORBA, as the\n\nformer is said to be more compatible with the desktop operating system...\n\n...Our members can apply technologies in many deployment environments including COM-based\n\nand Unix-based environments, applying the appropriate technology at present in each\n\nsituation. We've no requirement for mandating the use of CORBA if the use of COM is\n\nappropriate. We encourage the use of appropriate technologies in each case.\n\nCORBA has been under development\n\nfor the past 10 years. Why is this technology taking too long and when will it mature?\n\nCORBA is an enterprise technology used by more than 50% of Fortune 1000 companies. And\n\nthese companies predict that they will increase their utilization of CORBA perhaps by up\n\nto the 90% level in their deployed systems in the future.\n\nAdvertisment\n\nOf your 20,000 or so members how\n\nmany are from India?\n\nComponent Management Group India has registered over 7,000 members today. The growth has\n\nbeen dramatic and is continuing as the organization is beginning to disseminate its\n\nmessage through the 'Applying Patterns in CORBA' seminar in the component category\n\nCould you name some of your\n\nmembers from India?\n\nOh yes. For example, Vipin Tyagi, President of Network Programs India; Pawan Nagpal,\n\nPresident of NEPL; and Dr V Thyagrajan, Head of Product Realization Group at LG Soft.\n\nThese are people who are deeply involved in the CMG's advisory board. Also, we have in\n\nIndia an additional 200 CEO-level members and we'll be talking to them in a CEO conclave\n\nin Delhi and Bangalore.\n\nA white paper on the subject\n\nsays that \"unfortunately, there are no fully compliant public domain implementations\n\nof CORBA.\" Now, what does that mean and why is it \"unfortunate?\"\n\nThe public domain implementations of CORBA are excellent resources for learning purposes.\n\nThere are many different public domain CORBA implementations available on the Internet.\n\nI've found that these implementations have a level of standards-compliance which is\n\ncomparable to many of the commercial products.\n\nIt is said that he who controls\n\nthe interface to the operating system controls the future. Your comments?\n\nI think the age of infrastructure reinvention is coming to an end. As the application\n\ndevelopment community starts to create mission-critical applications on great\n\ninfrastructure, we will demand that unnecessary innovation and instability of operating\n\nsystems interfaces change into a new market in which those types of design issues are\n\nstable along with relatively defect-free technologies and provide operating systems and\n\ndistributing computing capabilities.\n\nYou said in your presentation\n\nthat vendors are making money by obsoleting their own technologies. How will CORBA change\n\nthat, if at all?\n\nCORBA changes the obsolescence model by providing a boundary between application\n\nsoftware and 'vendor' software through the interface definition language. IDL is a stable\n\nspecification that is resistant to vendor-specific technology changes.\n\n...it's like a building block?\n\nYes, so you need a technology for specifying architecture as one of the requirements of a\n\ncomponent. The Component Management Group is promoting the use of open distributed\n\nprocessing, which is a standard from the ISO as also a standard from the ITU represented\n\nby the X900 series. So there is a very well thought out way of specifying software\n\ncomponent interfaces. Component orientation also includes the use of patterns-software\n\npatterns, design patterns...we don't have to reinvent designs in other kinds of solutions\n\nfrom scratch.\n\nHow are OMG and CMG related?\n\nThe OMG is responsible for infrastructure standards related to CORBA. They've been\n\nsuccessful in adopting a standard which has been commercialized which is widely available.\n\nThey have achieved their mission in that respect. CMG is interested in higher levels of\n\ninteroperability, particularly between application-level components in vertical domains\n\nand across vertical domains. At CMG we believe that an architecture-based approach is the\n\nright way to define the technology and create complete solutions for vertical markets. In\n\nthis respect we are proceeding to define standards in finance and other areas which will\n\nbe relevant to national organizations. We have participated in some OMG standardization to\n\nachieve that objective.\n\nHow does the CORBA movement go\n\nwith similar attempts of specific vendors?\n\nOne of the major reasons why CORBA is so successful today was the lack of delivery on the\n\nDistributed Component Object Model of Microsoft. Microsoft's original intention with DCOM\n\nwas to develop a multimedia technology for the internet. They failed on both counts. DCOM\n\ntoday has inadequate security for internet applications. This weakness is why we've\n\nrecognized there are so lax system management capabilities along with other Microsoft\n\nplatform features that make it less applicable to large-scale system integration and\n\nmanagement than our technologies. CORBA is at the right place at the right time with a\n\nmature solution which is stable, and which provides security and the capability to manage\n\nsystems.\n\nHow do these three things fit\n\ninto the move toward language- and OS-independent software-Java, CORBA and COM?\n\nThe three major infrastructures are Java RMI (remote method invocation), CORBA and\n\nCOM. All three infrastructures have to find interoperability relationships among each\n\nother-including the COM-CORBA interworking and Sun Microsystems' adoption of the CORBA\n\nIIOP (inter-object resource broker communication protocol) as an extension to RMI\n\ntechnology. All together, these infrastructures can interoperate and the vendors are\n\nmoving them closer and closer together as time progresses. We envision a future\n\nenvironment where all three infrastructures will coexist and CORBA providing the mechanism\n\nfor interworking across the entire range of programming languages and operating platforms.\n\nBut the large installed base of\n\nWindows would prompt more and more programmers to adopt COM instead of CORBA, as the\n\nformer is said to be more compatible with the desktop operating system...\n\n...Our members can apply technologies in many deployment environments including COM-based\n\nand Unix-based environments, applying the appropriate technology at present in each\n\nsituation. We've no requirement for mandating the use of CORBA if the use of COM is\n\nappropriate. We encourage the use of appropriate technologies in each case.\n\nCORBA has been under development\n\nfor the past 10 years. Why is this technology taking too long and when will it mature?\n\nCORBA is an enterprise technology used by more than 50% of Fortune 1000 companies. And\n\nthese companies predict that they will increase their utilization of CORBA perhaps by up\n\nto the 90% level in their deployed systems in the future.\n\nOf your 20,000 or so members how\n\nmany are from India?\n\nComponent Management Group India has registered over 7,000 members today. The growth has\n\nbeen dramatic and is continuing as the organization is beginning to disseminate its\n\nmessage through the 'Applying Patterns in CORBA' seminar in the component category\n\nCould you name some of your\n\nmembers from India?\n\nOh yes. For example, Vipin Tyagi, President of Network Programs India; Pawan Nagpal,\n\nPresident of NEPL; and Dr V Thyagrajan, Head of Product Realization Group at LG Soft.\n\nThese are people who are deeply involved in the CMG's advisory board. Also, we have in\n\nIndia an additional 200 CEO-level members and we'll be talking to them in a CEO conclave\n\nin Delhi and Bangalore.\n\nA white paper on the subject\n\nsays that \"unfortunately, there are no fully compliant public domain implementations\n\nof CORBA.\" Now, what does that mean and why is it \"unfortunate?\"\n\nThe public domain implementations of CORBA are excellent resources for learning purposes.\n\nThere are many different public domain CORBA implementations available on the Internet.\n\nI've found that these implementations have a level of standards-compliance which is\n\ncomparable to many of the commercial products.\n\nIt is said that he who controls\n\nthe interface to the operating system controls the future. Your comments?\n\nI think the age of infrastructure reinvention is coming to an end. As the application\n\ndevelopment community starts to create mission-critical applications on great\n\ninfrastructure, we will demand that unnecessary innovation and instability of operating\n\nsystems interfaces change into a new market in which those types of design issues are\n\nstable along with relatively defect-free technologies and provide operating systems and\n\ndistributing computing capabilities."
    }
}