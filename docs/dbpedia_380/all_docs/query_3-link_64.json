{
    "id": "dbpedia_380_3",
    "rank": 64,
    "data": {
        "url": "https://www.oneidentity.com/community/active-roles/w/wiki/85/manage-country-codes-names-and-abbreviations",
        "read_more_link": "",
        "language": "en",
        "title": "Manage country codes, names and abbreviations",
        "top_image": "https://www.oneidentity.com/community/cfs-file/__key/themefiles/tc-s-3fc3f82483d14ec485ef92e206116d49-00000000000000000000000000000000-favicon/oneidentity_2D00_favicon.png",
        "meta_img": "https://www.oneidentity.com/community/cfs-file/__key/themefiles/tc-s-3fc3f82483d14ec485ef92e206116d49-00000000000000000000000000000000-favicon/oneidentity_2D00_favicon.png",
        "images": [
            "https://oneidentity.com/images/shared/oneidentity-logo.svg",
            "https://www.oneidentity.com/community/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/widgetcontainerfiles-3fc3f82483d14ec485ef92e206116d49-s-AAAAAAAAAAAAAAAAAAAAAA-header-header-B6QSw0UjtEW0dtWkSDxlKg-logo/oi_2D00_community_2D00_logo.jpg_2D00_250x88.jpg?_=638533035465015308",
            "https://www.oneidentity.com/community/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-groupavatars-00-00-00-01-42/active_2D00_roles.jpg.jpg_2D00_68x68x2.jpg?_=637044406896048376"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://www.oneidentity.com/community/cfs-file/__key/themefiles/tc-s-3fc3f82483d14ec485ef92e206116d49-00000000000000000000000000000000-favicon/oneidentity_2D00_favicon.png",
        "meta_site_name": "",
        "canonical_link": "https://www.oneidentity.com/community/active-roles/w/wiki/85/manage-country-codes-names-and-abbreviations",
        "text": "DESCRIPTION\n\nThere are 3 attributes in Active Directory that refer to the country in a user account address. They are:\n\n\"co\", localized country name\n\n\"countrycode\", 3-digit country code\n\n\"c\", 2 char country abbreviation\n\nThese names and codes described in ISO 3166 standard.\n\nThe below script is NOT completely comprehensive. For a complete listing of all country codes, please see this resource.\n\nActive Roles Console & Active Roles Web Interface manage these 3 attributes in compliance with each other, but other Active Roles tools do not.\n\nThis script policy sample stamps appropriate country code and name by given country abbreviation.\n\nNote This code may use functions from the Active Roles Script Policy Best Practices. Please, follow the link to obtain instructions and code for those functions.\n\nSCRIPT\n\n'*********************************************************************************\n\n' THIS CODE AND INFORMATION IS PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\n\n' EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\n\n' WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n\n'\n\n' IF YOU WANT THIS FUNCTIONALITY TO BE CONDITIONALLY SUPPORTED,\n\n' PLEASE CONTACT ONE IDENTITY PROFESSIONAL SERVICES.\n\n'*********************************************************************************\n\nOption Explicit\n\n'**********************************************************************\n\n' Country list\n\n'**********************************************************************\n\nDim arrCountries, arrCountry\n\narrCountries = Array( _\n\nArray(\"Afghanistan\", 4, \"AF\"), _\n\nArray(\"Albania\", 8, \"AL\"), _\n\nArray(\"Algeria\", 12, \"DZ\"), _\n\nArray(\"American Samoa\", 16, \"AS\"), _\n\nArray(\"Andorra\", 20, \"AD\"), _\n\nArray(\"Angola\", 24, \"AO\"), _\n\nArray(\"Anguilla\", 660, \"AI\"), _\n\nArray(\"Antarctica\", 10, \"AQ\"), _\n\nArray(\"Antigua and Barbuda\", 28, \"AG\"), _\n\nArray(\"Argentina\", 32, \"AR\"), _\n\nArray(\"Armenia\", 51, \"AM\"), _\n\nArray(\"Aruba\", 533, \"AW\"), _\n\nArray(\"Australia\", 36, \"AU\"), _\n\nArray(\"Austria\", 40, \"AT\"), _\n\nArray(\"Azerbaijan\", 31, \"AZ\"), _\n\nArray(\"Bahrain\", 48, \"BH\"), _\n\nArray(\"Baker Island\", 581, \"XX\"), _\n\nArray(\"Bangladesh\", 50, \"BD\"), _\n\nArray(\"Barbados\", 52, \"BB\"), _\n\nArray(\"Belarus\", 112, \"BY\"), _\n\nArray(\"Belgium\", 56, \"BE\"), _\n\nArray(\"Belize\", 84, \"BZ\"), _\n\nArray(\"Benin\", 204, \"BJ\"), _\n\nArray(\"Bermuda\", 60, \"BM\"), _\n\nArray(\"Bhutan\", 64, \"BT\"), _\n\nArray(\"Bolivia\", 68, \"BO\"), _\n\nArray(\"Bosnia and Herzegovina\", 70, \"BA\"), _\n\nArray(\"Botswana\", 72, \"BW\"), _\n\nArray(\"Bouvet Island\", 74, \"BV\"), _\n\nArray(\"Brazil\", 76, \"BR\"), _\n\nArray(\"British Indian Ocean Territory\", 86, \"IO\"), _\n\nArray(\"Brunei\", 96, \"BN\"), _\n\nArray(\"Bulgaria\", 100, \"BG\"), _\n\nArray(\"Burkina Faso\", 854, \"BF\"), _\n\nArray(\"Burundi\", 108, \"BI\"), _\n\nArray(\"Cambodia\", 116, \"KH\"), _\n\nArray(\"Cameroon\", 120, \"CM\"), _\n\nArray(\"Canada\", 124, \"CA\"), _\n\nArray(\"Cape Verde\", 132, \"CV\"), _\n\nArray(\"Cayman Islands\", 136, \"KY\"), _\n\nArray(\"Central African Republic\", 140, \"CF\"), _\n\nArray(\"Chad\", 148, \"TD\"), _\n\nArray(\"Chile\", 152, \"CL\"), _\n\nArray(\"China\", 156, \"CN\"), _\n\nArray(\"Christmas Island\", 162, \"CX\"), _\n\nArray(\"Colombia\", 170, \"CO\"), _\n\nArray(\"Comoros\", 174, \"KM\"), _\n\nArray(\"Congo\", 178, \"CG\"), _\n\nArray(\"Cook Islands\", 184, \"CK\"), _\n\nArray(\"Costa Rica\", 188, \"CR\"), _\n\nArray(\"Croatia\", 191, \"HR\"), _\n\nArray(\"Cuba\", 192, \"CU\"), _\n\nArray(\"Cyprus\", 196, \"CY\"), _\n\nArray(\"Czech Republic\", 203, \"CZ\"), _\n\nArray(\"Denmark\", 208, \"DK\"), _\n\nArray(\"Djibouti\", 262, \"DJ\"), _\n\nArray(\"Dominica\", 212, \"DM\"), _\n\nArray(\"Dominican Republic\", 214, \"DO\"), _\n\nArray(\"Ecuador\", 218, \"EC\"), _\n\nArray(\"Egypt\", 818, \"EG\"), _\n\nArray(\"El Salvador\", 222, \"SV\"), _\n\nArray(\"Equatorial Guinea\", 226, \"GQ\"), _\n\nArray(\"Eritrea\", 232, \"ER\"), _\n\nArray(\"Estonia\", 233, \"EE\"), _\n\nArray(\"Ethiopia\", 231, \"ET\"), _\n\nArray(\"Faroe Islands\", 234, \"FO\"), _\n\nArray(\"Fiji Islands\", 242, \"FJ\"), _\n\nArray(\"Finland\", 246, \"FI\"), _\n\nArray(\"France\", 250, \"FR\"), _\n\nArray(\"French Guiana\", 254, \"GF\"), _\n\nArray(\"French Polynesia\", 258, \"PF\"), _\n\nArray(\"French Southern and Antarctic Lands\", 260, \"TF\"), _\n\nArray(\"Gabon\", 266, \"GA\"), _\n\nArray(\"Georgia\", 268, \"GE\"), _\n\nArray(\"Germany\", 276, \"DE\"), _\n\nArray(\"Ghana\", 288, \"GH\"), _\n\nArray(\"Gibraltar\", 292, \"GI\"), _\n\nArray(\"Greece\", 300, \"GR\"), _\n\nArray(\"Greenland\", 304, \"GL\"), _\n\nArray(\"Grenada\", 308, \"GD\"), _\n\nArray(\"Guadeloupe\", 312, \"GP\"), _\n\nArray(\"Guam\", 316, \"GU\"), _\n\nArray(\"Guatemala\", 320, \"GT\"), _\n\nArray(\"Guernsey\", 826, \"GG\"), _\n\nArray(\"Guinea\", 324, \"GN\"), _\n\nArray(\"Guyana\", 328, \"GY\"), _\n\nArray(\"Haiti\", 332, \"HT\"), _\n\nArray(\"Heard Island and McDonald Islands\", 334, \"HM\"), _\n\nArray(\"Honduras\", 340, \"HN\"), _\n\nArray(\"Howland Island\", 581, \"XX\"), _\n\nArray(\"Hungary\", 348, \"HU\"), _\n\nArray(\"Iceland\", 352, \"IS\"), _\n\nArray(\"India\", 356, \"IN\"), _\n\nArray(\"Indonesia\", 360, \"ID\"), _\n\nArray(\"Iran\", 364, \"IR\"), _\n\nArray(\"Iraq\", 368, \"IQ\"), _\n\nArray(\"Ireland\", 372, \"IE\"), _\n\nArray(\"Israel\", 376, \"IL\"), _\n\nArray(\"Italy\", 380, \"IT\"), _\n\nArray(\"Jamaica\", 388, \"JM\"), _\n\nArray(\"Jan Mayen\", 744, \"SJ\"), _\n\nArray(\"Japan\", 392, \"JP\"), _\n\nArray(\"Jarvis Island\", 581, \"XX\"), _\n\nArray(\"Jersey\", 826, \"JE\"), _\n\nArray(\"Johnston Atoll\", 581, \"XX\"), _\n\nArray(\"Jordan\", 400, \"JO\"), _\n\nArray(\"Kazakhstan\", 398, \"KZ\"), _\n\nArray(\"Kenya\", 404, \"KE\"), _\n\nArray(\"Kingman Reef\", 581, \"XX\"), _\n\nArray(\"Kiribati\", 296, \"KI\"), _\n\nArray(\"Korea\", 410, \"KR\"), _\n\nArray(\"Kuwait\", 414, \"KW\"), _\n\nArray(\"Kyrgyzstan\", 417, \"KG\"), _\n\nArray(\"Laos\", 418, \"LA\"), _\n\nArray(\"Latvia\", 428, \"LV\"), _\n\nArray(\"Lebanon\", 422, \"LB\"), _\n\nArray(\"Lesotho\", 426, \"LS\"), _\n\nArray(\"Liberia\", 430, \"LR\"), _\n\nArray(\"Libya\", 434, \"LY\"), _\n\nArray(\"Liechtenstein\", 438, \"LI\"), _\n\nArray(\"Lithuania\", 440, \"LT\"), _\n\nArray(\"Luxembourg\", 442, \"LU\"), _\n\nArray(\"Madagascar\", 450, \"MG\"), _\n\nArray(\"Malawi\", 454, \"MW\"), _\n\nArray(\"Malaysia\", 458, \"MY\"), _\n\nArray(\"Maldives\", 462, \"MV\"), _\n\nArray(\"Mali\", 466, \"ML\"), _\n\nArray(\"Malta\", 470, \"MT\"), _\n\nArray(\"Marshall Islands\", 584, \"MH\"), _\n\nArray(\"Martinique\", 474, \"MQ\"), _\n\nArray(\"Mauritania\", 478, \"MR\"), _\n\nArray(\"Mauritius\", 480, \"MU\"), _\n\nArray(\"Mayotte\", 175, \"YT\"), _\n\nArray(\"Mexico\", 484, \"MX\"), _\n\nArray(\"Micronesia\", 583, \"FM\"), _\n\nArray(\"Midway Islands\", 581, \"XX\"), _\n\nArray(\"Moldova\", 498, \"MD\"), _\n\nArray(\"Monaco\", 492, \"MC\"), _\n\nArray(\"Mongolia\", 496, \"MN\"), _\n\nArray(\"Montenegro\", 499, \"ME\"), _\n\nArray(\"Montserrat\", 500, \"MS\"), _\n\nArray(\"Morocco\", 504, \"MA\"), _\n\nArray(\"Mozambique\", 508, \"MZ\"), _\n\nArray(\"Myanmar\", 104, \"MM\"), _\n\nArray(\"Namibia\", 516, \"NA\"), _\n\nArray(\"Nauru\", 520, \"NR\"), _\n\nArray(\"Nepal\", 524, \"NP\"), _\n\nArray(\"Netherlands\", 528, \"NL\"), _\n\nArray(\"Netherlands Antilles\", 530, \"AN\"), _\n\nArray(\"New Caledonia\", 540, \"NC\"), _\n\nArray(\"New Zealand\", 554, \"NZ\"), _\n\nArray(\"Nicaragua\", 558, \"NI\"), _\n\nArray(\"Niger\", 562, \"NE\"), _\n\nArray(\"Nigeria\", 566, \"NG\"), _\n\nArray(\"Niue\", 570, \"NU\"), _\n\nArray(\"Norfolk Island\", 574, \"NF\"), _\n\nArray(\"North Korea\", 408, \"KP\"), _\n\nArray(\"Northern Mariana Islands\", 580, \"MP\"), _\n\nArray(\"Norway\", 578, \"NO\"), _\n\nArray(\"Oman\", 512, \"OM\"), _\n\nArray(\"Pakistan\", 586, \"PK\"), _\n\nArray(\"Palau\", 585, \"PW\"), _\n\nArray(\"Palestinian Authority\", 275, \"PS\"), _\n\nArray(\"Palmyra Atoll\", 581, \"XX\"), _\n\nArray(\"Panama\", 591, \"PA\"), _\n\nArray(\"Papua New Guinea\", 598, \"PG\"), _\n\nArray(\"Paraguay\", 600, \"PY\"), _\n\nArray(\"Peru\", 604, \"PE\"), _\n\nArray(\"Philippines\", 608, \"PH\"), _\n\nArray(\"Pitcairn Islands\", 612, \"PN\"), _\n\nArray(\"Poland\", 616, \"PL\"), _\n\nArray(\"Portugal\", 620, \"PT\"), _\n\nArray(\"Puerto Rico\", 630, \"PR\"), _\n\nArray(\"Qatar\", 634, \"QA\"), _\n\nArray(\"Reunion\", 638, \"RE\"), _\n\nArray(\"Romania\", 642, \"RO\"), _\n\nArray(\"Russia\", 643, \"RU\"), _\n\nArray(\"Rwanda\", 646, \"RW\"), _\n\nArray(\"Samoa\", 882, \"WS\"), _\n\nArray(\"San Marino\", 674, \"SM\"), _\n\nArray(\"Saudi Arabia\", 682, \"SA\"), _\n\nArray(\"Senegal\", 686, \"SN\"), _\n\nArray(\"Serbia\", 891, \"CS\"), _\n\nArray(\"Seychelles\", 690, \"SC\"), _\n\nArray(\"Sierra Leone\", 694, \"SL\"), _\n\nArray(\"Singapore\", 702, \"SG\"), _\n\nArray(\"Slovakia\", 703, \"SK\"), _\n\nArray(\"Slovenia\", 705, \"SI\"), _\n\nArray(\"Solomon Islands\", 90, \"SB\"), _\n\nArray(\"Somalia\", 706, \"SO\"), _\n\nArray(\"South Africa\", 710, \"ZA\"), _\n\nArray(\"South Georgia and the South Sandwich Islands\", 239, \"GS\"), _\n\nArray(\"Spain\", 724, \"ES\"), _\n\nArray(\"Sri Lanka\", 144, \"LK\"), _\n\nArray(\"Sudan\", 736, \"SD\"), _\n\nArray(\"Suriname\", 740, \"SR\"), _\n\nArray(\"Svalbard\", 744, \"SJ\"), _\n\nArray(\"Swaziland\", 748, \"SZ\"), _\n\nArray(\"Sweden\", 752, \"SE\"), _\n\nArray(\"Switzerland\", 756, \"CH\"), _\n\nArray(\"Syria\", 760, \"SY\"), _\n\nArray(\"São Tomé and Príncipe\", 678, \"ST\"), _\n\nArray(\"Taiwan\", 158, \"TW\"), _\n\nArray(\"Tajikistan\", 762, \"TJ\"), _\n\nArray(\"Tanzania\", 834, \"TZ\"), _\n\nArray(\"Thailand\", 764, \"TH\"), _\n\nArray(\"Togo\", 768, \"TG\"), _\n\nArray(\"Tokelau\", 772, \"TK\"), _\n\nArray(\"Tonga\", 776, \"TO\"), _\n\nArray(\"Trinidad and Tobago\", 780, \"TT\"), _\n\nArray(\"Tunisia\", 788, \"TN\"), _\n\nArray(\"Turkey\", 792, \"TR\"), _\n\nArray(\"Turkmenistan\", 795, \"TM\"), _\n\nArray(\"Turks and Caicos Islands\", 796, \"TC\"), _\n\nArray(\"Tuvalu\", 798, \"TV\"), _\n\nArray(\"Uganda\", 800, \"UG\"), _\n\nArray(\"Ukraine\", 804, \"UA\"), _\n\nArray(\"United Arab Emirates\", 784, \"AE\"), _\n\nArray(\"United Kingdom\", 826, \"GB\"), _\n\nArray(\"United States\", 840, \"US\"), _\n\nArray(\"Uruguay\", 858, \"UY\"), _\n\nArray(\"Uzbekistan\", 860, \"UZ\"), _\n\nArray(\"Vanuatu\", 548, \"VU\"), _\n\nArray(\"Vatican City\", 336, \"VA\"), _\n\nArray(\"Venezuela\", 862, \"VE\"), _\n\nArray(\"Vietnam\", 704, \"VN\"), _\n\nArray(\"Virgin Islands\", 850, \"VI\"), _\n\nArray(\"Wake Island\", 581, \"XX\"), _\n\nArray(\"Wallis and Futuna\", 876, \"WF\"), _\n\nArray(\"Western Sahara\", 732, \"EH\"), _\n\nArray(\"Yemen\", 887, \"YE\"), _\n\nArray(\"Zambia\", 894, \"ZM\"), _\n\nArray(\"Zimbabwe\", 716, \"ZW\"), _\n\nArray(\"Åland Islands\", 248, \"AX\"))\n\n'**********************************************************************\n\n' EVENT HANDLERS\n\n'**********************************************************************\n\nSub onPreModify(Request)\n\n'--- trigger only if user object is modified -------\n\nIf (Not IsObjectClassRequested(\"user\", Request) The Exit Sub\n\n'--- trigger only if country code is modified -------\n\nIf (Not IsAtttributeModified(\"c\", Request) The Exit Sub\n\nDim strAbbreviation, arrCountry\n\n'--- Get country code from request -------\n\nstrAbbreviation = GetAttribute(\"c\", Request)\n\n'--- if there is not a code -------\n\nIf (IsEmpty(strAbbreviation)) Then\n\n'--- clear country name and abbreviation -------\n\nRequest.PutEx ADS_PROPERTY_CLEAR, \"co\", Empty\n\nRequest.PutEx ADS_PROPERTY_CLEAR, \"countryCode\", Empty\n\nElse\n\n'--- get country info from country list ---\n\narrCountry = FindCountryByAbbreviation(strAbbreviation)\n\n'--- exit if that country was not found in country list ---\n\nIf (IsEmpty(arrCountry)) Then Exit Sub\n\n'--- set apporiate country name and code -------\n\nRequest.Put \"co\", arrCountry(0)\n\nRequest.Put \"countryCode\", arrCountry(1)\n\nEnd If\n\nEnd Sub\n\n'**********************************************************************\n\n' Helping routines\n\n'**********************************************************************\n\nFunction FindCountryByName(ByVal strName)\n\nDim arrCountry\n\nFor Each arrCountry in arrCountries\n\nIf (LCase(arrCountry(0)) = LCase(strName)) Then\n\nFindCountryByName = arrCountry\n\nExit Function\n\nEnd If\n\nNext\n\nFindCountryByName = Empty\n\nEnd Function\n\nFunction FindCountryByCode(ByVal numCode)\n\nDim arrCountry\n\nFor Each arrCountry in arrCountries\n\nIf (arrCountry(1) = numCode) Then\n\nFindCountryByCode = arrCountry\n\nExit Function\n\nEnd If\n\nNext\n\nFindCountryByCode = Empty\n\nEnd Function\n\nFunction FindCountryByAbbreviation(ByVal strAbbreviation)\n\nDim arrCountry\n\nFor Each arrCountry in arrCountries\n\nIf (LCase(arrCountry(2)) = LCase(strAbbreviation)) Then\n\nFindCountryByAbbreviation = arrCountry\n\nExit Function\n\nEnd If\n\nNext\n\nFindCountryByAbbreviation = Empty\n\nEnd Function\n\n'***** END OF CODE ***************************************************************"
    }
}