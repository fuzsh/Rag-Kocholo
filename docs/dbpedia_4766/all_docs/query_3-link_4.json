{
    "id": "dbpedia_4766_3",
    "rank": 4,
    "data": {
        "url": "https://medium.com/%40gaspm/understanding-uuid-purpose-and-benefits-of-a-universal-unique-identifier-59110154d897",
        "read_more_link": "",
        "language": "en",
        "title": "Understanding UUID: Purpose and Benefits of a Universal Unique Identifier",
        "top_image": "https://miro.medium.com/v2/resize:fit:1200/1*Qyfm0klA8IRLBJzcNxjb3w.png",
        "meta_img": "https://miro.medium.com/v2/resize:fit:1200/1*Qyfm0klA8IRLBJzcNxjb3w.png",
        "images": [
            "https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png",
            "https://miro.medium.com/v2/resize:fill:88:88/1*kaAi9hXEvUOiG9Fh9nx9kw.png",
            "https://miro.medium.com/v2/resize:fill:144:144/1*kaAi9hXEvUOiG9Fh9nx9kw.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Michal Gasparik",
            "medium.com"
        ],
        "publish_date": "2023-06-10T11:55:06.221000+00:00",
        "summary": "",
        "meta_description": "The abbreviation UUID stands for Universal Unique IDentifier, sometimes also referred to as GUID (Globally Unique IDentifier). It is a 128-bit integer used for data identification in computer…",
        "meta_lang": "en",
        "meta_favicon": "https://miro.medium.com/v2/5d8de952517e8160e40ef9841c781cdc14a5db313057fa3c3de41c6f5b494b19",
        "meta_site_name": "Medium",
        "canonical_link": "https://medium.com/@gaspm/understanding-uuid-purpose-and-benefits-of-a-universal-unique-identifier-59110154d897",
        "text": "The abbreviation UUID stands for Universal Unique IDentifier, sometimes also referred to as GUID (Globally Unique IDentifier). It is a 128-bit integer used for data identification in computer systems. UUIDs are generated according to specific standards, which we will discuss, and they are designed to guarantee nearly absolute uniqueness.\n\nTheir uniqueness does not depend on coordination between specific parties that generate them. While their uniqueness is not zero, it approaches it so closely that the risk of duplication is highly negligible.\n\nTherefore, anyone can generate a UUID for their identification needs, with the assurance that this UUID will not match the UUID identifying something else. UUIDs generated by independent parties can, for example, be merged into a single database without causing any duplicate identifiers when merging the data.\n\nUUID uniqueness is not zero, but it approaches it so closely that the risk of duplication is highly negligible.\n\nThe earliest usage of UUIDs can be traced back to the 1980s when Apollo computers employed them in their computing systems. Subsequently, other organizations adopted UUIDs for similar purposes. During that time, UUIDs were typically 64 bits in length.\n\nUUID Format\n\nUUID has a canonical form of 16 bytes represented as 32 hexadecimal digits (base-16), arranged in 5 groups separated by hyphens, namely 8–4–4–4–12, totaling 36 characters (32 alphanumeric characters and 4 hyphens). As a result, a UUID can appear, for example, like this:\n\n8ca0fd81-fd03-438c-8730-c6c4e7ef4aa9\n\nTwo of the characters tell what version and UUID variant it is.\n\nxxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n\nUUID Variants\n\nVariant 0\n\nThis variant is designed for backward compatibility with the now-obsolete Apollo Network Computing System 1.5 UUID format developed around 1988, where the values of N range from 0 to 7.\n\nVariant 1\n\nThis variant, known as RFC 4122/DCE 1.1 UUIDs or “Leach-Salz” UUIDs, is denoted by values of N ranging from 8 to b.\n\nVariant 2\n\nThis variant, characterized in the RFC as “reserved, Microsoft Corporation backward compatibility,” is denoted by values N ranging from c to d. It was specifically utilized for early GUIDs on the Microsoft Windows platform.\n\nVariant 3\n\nThis range, indicated by values of N from e to f, is currently reserved for future use.\n\nUUID Versions\n\nUUID Version 1 (time and node based)\n\nThese are the classical UUIDs, created out of a 60-bit system time, a 14-bit local clock sequence, and a 48-bit system MAC address. The MAC address can be either the real one of a physical network interface card (NIC) or a random multicast MAC address. Version 1 UUIDs are usually used as one-time global unique identifiers.\n\nThese field names correspond to time-based UUIDs in version 1, but the canonical form of 8–4–4–4–12 is the same for all UUIDs regardless of their generation method.\n\nPros of UUID v1\n\nDespite the inherent lack of uniqueness in MAC addresses, the risk of collisions in UUIDs remains relatively low. The probability of encountering duplicated UUIDs within the same network system is unlikely. Furthermore, the inclusion of a clock sequence provides an additional layer of protection against duplication.\n\nCons of UUID v1\n\nMainly anonymity, as the MAC address is directly encoded into the UUID, and the possibility to guess clock sequence, if an attacker knows the previous UUIDs, they can easily predict the next ones."
    }
}