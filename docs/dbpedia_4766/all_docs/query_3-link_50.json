{
    "id": "dbpedia_4766_3",
    "rank": 50,
    "data": {
        "url": "https://www.mparticle.com/blog/universal-customer-id/",
        "read_more_link": "",
        "language": "en",
        "title": "The value of a universal customer ID across your tech stack",
        "top_image": "https://images.prismic.io/mparticle/10cd879e-0f21-403e-9155-71aeddef39e1_universal-customer-identifier.png?auto=compress%2Cformat&rect=0%2C0%2C2520%2C1414&w=1230&h=690&fit=max",
        "meta_img": "https://images.prismic.io/mparticle/10cd879e-0f21-403e-9155-71aeddef39e1_universal-customer-identifier.png?auto=compress%2Cformat&rect=0%2C0%2C2520%2C1414&w=1230&h=690&fit=max",
        "images": [
            "https://images.prismic.io/mparticle/10cd879e-0f21-403e-9155-71aeddef39e1_universal-customer-identifier.png?auto=compress%2Cformat&rect=0%2C0%2C2520%2C1414&w=1230&h=690&fit=max",
            "https://images.prismic.io/mparticle/10cd879e-0f21-403e-9155-71aeddef39e1_universal-customer-identifier.png?auto=compress%2Cformat&rect=0%2C0%2C2520%2C1414&w=1230&h=690&fit=max",
            "https://images.prismic.io/mparticle/69c83f46-e1da-412e-8f0e-3b60a4a6aed0_Complete+guide+to+Customer+Data+Platforms.png?auto=compress%2Cformat&fit=max&w=1660&h=660",
            "https://images.prismic.io/mparticle/69c83f46-e1da-412e-8f0e-3b60a4a6aed0_Complete+guide+to+Customer+Data+Platforms.png?auto=compress%2Cformat&fit=max&w=1660&h=660",
            "https://images.prismic.io/mparticle/e51761e427d6faaf06bae865b5ff447ad6724bfc_joey-colvin-drift-600x600.jpg?auto=compress%2Cformat&fit=max&w=570&h=856",
            "https://images.prismic.io/mparticle/e51761e427d6faaf06bae865b5ff447ad6724bfc_joey-colvin-drift-600x600.jpg?auto=compress%2Cformat&fit=max&w=570&h=856",
            "https://images.prismic.io/mparticle/ZrPt9UaF0TcGIw5j_SocialPromoAnnouncement%402X.jpg?auto=format%2Ccompress&fit=max&w=1230&h=1230",
            "https://images.prismic.io/mparticle/ZrPt9UaF0TcGIw5j_SocialPromoAnnouncement%402X.jpg?auto=format%2Ccompress&fit=max&w=1230&h=1230",
            "https://images.prismic.io/mparticle/Zqqsyh5LeNNTxr24_DeepDive-Thumb%402x.jpg?auto=format%2Ccompress&fit=max&w=1686&h=1686",
            "https://images.prismic.io/mparticle/Zqqsyh5LeNNTxr24_DeepDive-Thumb%402x.jpg?auto=format%2Ccompress&fit=max&w=1686&h=1686",
            "https://images.prismic.io/mparticle/Zo_6hB5LeNNTxCn4_Product-Thumbnail%402x.jpg?auto=format%2Ccompress&fit=max&w=1600&h=1601",
            "https://images.prismic.io/mparticle/Zo_6hB5LeNNTxCn4_Product-Thumbnail%402x.jpg?auto=format%2Ccompress&fit=max&w=1600&h=1601"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Teams across industries are striving to create a 360-degree customer view. But if that view isn't seamlessly integrated with the tools and systems throughout the tech stack in real time, growth teams aren't able to use it to drive results. Learn more about how you can implement a universal ID and make it available across the stack.",
        "meta_lang": "en",
        "meta_favicon": "/favicon-32x32.png?v=ab7fd36313046de2b6196f2dfd055068",
        "meta_site_name": "",
        "canonical_link": "https://www.mparticle.com/blog/universal-customer-id/",
        "text": "We’ve written on the mParticle blog before about the importance of being able to access a single view of the customer. As customers engage across multiple devices, it has become imperative to have a system in place that unifies engagements from across devices to single customer profiles, and furthermore to ensure that those profiles are clean, consistent, and accurate.\n\nDisconnected data sets and duplicative, incomplete customer profiles siloed in various systems result in wasted time for developers, confusion for business teams, and bad experiences for customers. For example, think of the last time you called a brand’s customer service center after spending time researching independently, only to find that the support agent has no knowledge of your customer history. By now, the need for a single customer view has been widely recognized, with the IAB reporting in 2018 that 60% of digital marketers cite connecting the dots across different channels as the activity that consumes the maximum time and resources.\n\nAnd while being able to build a unified profile is important, the value of profiles is limited if they too are siloed in a third-party tool and can’t be activated quickly. For example, if your profiles live in a Data Warehouse that isn’t accessible to non-technical stakeholders, your organization won’t be able to use those profiles to support downstream initiatives such as A/B testing, customer engagement, and analytics without developer support.\n\nTo realize the value of your unified customer profiles, those profiles need to be tied to a customer ID available universally throughout the tools being used to drive growth. This blog will walk through some of the processes that are important to consider when building unified customer profiles, as well as how you can integrate a universal customer ID across your tech stack. Finally, we’ll walk through two high-value use cases you can implement once you have access to a universal customer ID across your tech stack.\n\nIf your mobile engagement is separated from your web engagement, and too from ad attribution data, it can become impossible to understand the customer journey, let alone use that information to deliver a unified customer experience.\n\nOne reason that many growth teams struggle to unify data is because they are collecting data from the client side directly into downstream tools through multiple vendor implementations. If, for example, mobile events are being collected into your analytics tool through a client side implementation while web events are being collected into your customer engagement tool through a JavaScript snippet, data will become siloed in distinct downstream systems and will be difficult to unify.\n\nOne workaround for downstream silos is to connect integrations between all of your downstream tools. However, there are several problems with this approach:\n\nDownstream tools are designed primarily for activating data, not cleansing, transforming, or unifying it and therefore may have limited interoperability. Additionally, not all downstream tools will integrate with one another.\n\nWith each tool collecting data through its own data schema, integrating across systems may result in a data quality nightmare.\n\nBy limiting your tech stack to tools that integrate with one another, you may be restricting functionality and prohibiting yourself from selecting the tools that are truly best for the job.\n\nAn alternative solution is to introduce cross-channel data unification at the point of data collection with a single customer data infrastructure. Once data has been collected from across channels and resolved to unified profiles within a single tool, such as a Customer Data Platform, you can then make those profiles available to downstream tools.\n\nOne of the most complex aspects of building an identity architecture is determining how to merge profiles and handle anonymous and known records.\n\nAlmost all consumer brands today have a combination of known and unknown users visit their properties. Certain industries, such as web-based media publishing, may rely predominantly on anonymous traffic; while others, such as mobile gaming, primarily support logged in users. Furthermore, the degree to which a user makes themselves known by providing identifiers such as email and username provides indications about their progress through the customer journey. Having a system in place that determines how and when to resolve anonymous and known profiles is critical to understanding engagement, controlling costs, and delivering relevant customer experiences.\n\nFor example, mParticle’s IDSync is designed to address the following common issues with user identity management:\n\nUser continuity\n\nAs a user progresses through the buying journey, they will often take certain actions in your app or website before registering for an account and creating a known profile. At that point of conversion, you have two options: link the new logged-in user profile with the original anonymous one, which yields a continuous view of the user journey, or create a new user profile at the point of registration and keep the post-signup activity completely separate from the pre-signup activity.\n\nThere are compelling business and legal arguments for and against each approach. By choosing the first approach, you have a chance to preserve a complete history of a user’s experience with your app. This might be invaluable for improving your funnel. However, you also introduce the possibility of mingling data from several users into a single profile. For example, on a shared device, multiple users might access the app in a pre-signup state.\n\nThe second approach sacrifices the possibility of collecting a user’s entire history under a single continuous view. However, you can be sure that the data from your logged-in users is never mixed up with data from a different user. Quarantining anonymous data from known user data may also be required by law.\n\nSince the best way to perform identity resolution will depend on a company’s business goals, legal obligations, and other factors, it’s critical that your identity resolution architecture provides the flexibility to select which customer identifiers are used to unify events. It is also crucial to have transparency into how your user profiles are created and updated, so you can always be sure that profiles really are being built in the way you expect them to. Your vendor tools' APIs and policies shouldn't dictate these decisions––rather, you should look for tools that allow you to decide how identity is managed across your tech stack. Read more about how mParticle’s IDSync addresses these issues here.\n\nCross-device/cross-app tracking\n\nUsers often interact with an app ecosystem through more than one device. For example, users might interact with an eCommerce app through both a native app and a web browser, or view media content on a web browser, a native app, or a Roku channel.\n\nMany apps will want to track events and lifetime value for a user across all platforms, but others will prefer to keep data for each platform separate.\n\nAdditionally, your product ecosystem may be spread not just across multiple platforms, but also multiple apps. For example, a gaming organization might publish dozens of individual games and want to track their user’s LTV across all their apps. By creating workspaces for each app group under the same mParticle account, you can allow them to share a pool of users, and create only one profile per known user, no matter how many of your apps they use.\n\nPersonalization of the customer experience\n\nHigh quality customer profiles are the foundation to delivering personalized customer experiences. Unified profiles can be activated in downstream engagement platforms, queried to build audience segments, and even activated programmatically for 1:1 personalization.\n\nHaving a system in place to manage how profiles are merged is critical to downstream personalization, as unresolved profiles can lead to bloated marketing costs and bad customer experiences.\n\nmParticle’s IDSync enables marketers to use the mParticle Profile API to get the most up-to-date real-time user identities, device identities, user attributes, and audience memberships. The Profile API uses either an identifier with Immutable Identity set or the mParticle Identifier to match a user profile. Additionally, IDSync Search allows marketers to query User Profiles by any known identifier, such as email, mobile phone, or device identity, and return all matched user identity values including the mParticle ID. The mParticle ID can then be used with Profile API to get the values necessary to personalize the customer experience.\n\nAlso, once IDSync is working to unify events across sessions, channels, and devices, data engineers no longer have to maintain their own internal system. Depending on the scale of an organization’s data practice, eliminating this workload can often result in hours of liberated engineering time, as unifying data points across channels in real time can require sizable teams of developers wholly dedicated to this task. d that their homegrown data pipelines were becoming unmanageable."
    }
}