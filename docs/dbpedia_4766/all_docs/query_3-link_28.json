{
    "id": "dbpedia_4766_3",
    "rank": 28,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Uniform_Resource_Identifier",
        "read_more_link": "",
        "language": "en",
        "title": "Uniform Resource Identifier",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d6/URI_syntax_diagram.svg/1068px-URI_syntax_diagram.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2002-02-25T15:43:11+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Uniform_Resource_Identifier",
        "text": "String used to identify a name of a web or internet resource\n\n\"URI\" redirects here. For other uses, see URI (disambiguation).\n\nNot to be confused with URL.\n\nUniform Resource IdentifierAbbreviationURINative name\n\nRFC 3986\n\nStatusActiveYear started2005First publishedJanuary 2005 ( )OrganizationRFCAuthorsTim Berners-Lee; Roy Thomas Fielding; Larry MasinterDomainWorld Wide WebWebsitehttps://datatracker.ietf.org/doc/html/rfc3986#section-1.1\n\nA Uniform Resource Identifier (URI), formerly Universal Resource Identifier, is a unique sequence of characters that identifies an abstract or physical resource, such as resources on a webpage, mail address, phone number, books, real-world objects such as people and places, concepts. URIs are used to identify anything described using the Resource Description Framework (RDF), for example, concepts that are part of an ontology defined using the Web Ontology Language (OWL), and people who are described using the Friend of a Friend vocabulary would each have an individual URI.\n\nURIs which provide a means of locating and retrieving information resources on a network (either on the Internet or on another private network, such as a computer filesystem or an Intranet) are Uniform Resource Locators (URLs). Therefore, URLs are a subset of URIs, ie. every URL is a URI (and not necessarily the other way around). Other URIs provide only a unique name, without a means of locating or retrieving the resource or information about it; these are Uniform Resource Names (URNs). The web technologies that use URIs are not limited to web browsers.\n\nHistory\n\n[edit]\n\nConception\n\n[edit]\n\nURIs and URLs have a shared history. In 1990, Tim Berners-Lee's proposals for hypertext implicitly introduced the idea of a URL as a short string representing a resource that is the target of a hyperlink.[4] At the time, people referred to it as a \"hypertext name\"[5] or \"document name\".\n\nOver the next three and a half years, as the World Wide Web's core technologies of HTML, HTTP, and web browsers developed, a need to distinguish a string that provided an address for a resource from a string that merely named a resource emerged. Although not yet formally defined, the term Uniform Resource Locator came to represent the former, and the more contentious Uniform Resource Name came to represent the latter. In July 1992 Berners-Lee's report on the Internet Engineering Task Force (IETF) \"UDI (Universal Document Identifiers) BOF\" mentions URLs (as Uniform Resource Locators), URNs (originally, as Unique Resource Numbers), and the need to charter a new working group.[6] In November 1992 the IETF \"URI Working Group\" met for the first time.[7]\n\nDuring the debate over defining URLs and URNs, it became evident that the concepts embodied by the two terms were merely aspects of the fundamental, overarching, notion of resource identification. In June 1994, the IETF published Berners-Lee's first Request for Comments that acknowledged the existence of URLs and URNs. Most importantly, it defined a formal syntax for Universal Resource Identifiers (i.e. URL-like strings whose precise syntaxes and semantics depended on their schemes). In addition, the RFC 1630 attempted to summarize the syntaxes of URL schemes in use at the time. It acknowledged -- but did not standardize—the existence of relative URLs and fragment identifiers.[8]\n\nRefinement\n\n[edit]\n\nIn December 1994, RFC 1738 formally defined relative and absolute URLs, refined the general URL syntax, defined how to resolve relative URLs to absolute form, and better enumerated the URL schemes then in use.[9] The agreed definition and syntax of URNs had to wait until the publication of IETF RFC 2141[10] in May 1997.\n\nThe publication of IETF RFC 2396[11] in August 1998 saw the URI syntax become a separate specification[11] and most of the parts of RFCs 1630 and 1738 relating to URIs and URLs in general were revised and expanded by the IETF. The new RFC changed the meaning of U in URI from \"Universal\" to \"Uniform.\"\n\nIn December 1999, RFC 2732[12] provided a minor update to RFC 2396, allowing URIs to accommodate IPv6 addresses. A number of shortcomings discovered in the two specifications led to a community effort, coordinated by RFC 2396 co-author Roy Fielding, that culminated in the publication of IETF RFC 3986[13] in January 2005. While obsoleting the prior standard, it did not render the details of existing URL schemes obsolete; RFC 1738 continues to govern such schemes except where otherwise superseded. IETF RFC 2616[14] for example, refines the http scheme. Simultaneously, the IETF published the content of RFC 3986 as the full standard STD 66, reflecting the establishment of the URI generic syntax as an official Internet protocol.\n\nIn 2001, the World Wide Web Consortium's (W3C) Technical Architecture Group (TAG) published a guide to best practices and canonical URIs for publishing multiple versions of a given resource.[15] For example, content might differ by language or by size to adjust for capacity or settings of the device used to access that content.\n\nIn August 2002, IETF RFC 3305[16] pointed out that the term \"URL\" had, despite widespread public use, faded into near obsolescence, and serves only as a reminder that some URIs act as addresses by having schemes implying network accessibility, regardless of any such actual use. As URI-based standards such as Resource Description Framework make evident, resource identification need not suggest the retrieval of resource representations over the Internet, nor need they imply network-based resources at all.\n\nThe Semantic Web uses the HTTP URI scheme to identify both documents and concepts for practical uses, a distinction which has caused confusion as to how to distinguish the two. The TAG published an e-mail in 2005 with a solution of the problem, which became known as the httpRange-14 resolution.[17] The W3C subsequently published an Interest Group Note titled Cool URIs for the Semantic Web, which explained the use of content negotiation and the HTTP 303 response code for redirections in more detail.[18]\n\nDesign\n\n[edit]\n\nURLs and URNs\n\n[edit]\n\nA Uniform Resource Name (URN) is a URI that identifies a resource by name in a particular namespace. A URN may be used to talk about a resource without implying its location or how to access it. For example, in the International Standard Book Number (ISBN) system, ISBN 0-486-27557-4 identifies a specific edition of the William Shakespeare play Romeo and Juliet. The URN for that edition would be urn:isbn:0-486-27557-4. However, it gives no information as to where to find a copy of that book.\n\nA Uniform Resource Locator (URL) is a URI that specifies the means of acting upon or obtaining the representation of a resource, i.e. specifying both its primary access mechanism and network location. For example, the URL http://example.org/wiki/Main_Page refers to a resource identified as /wiki/Main_Page, whose representation is obtainable via the Hypertext Transfer Protocol (http:) from a network host whose domain name is example.org. (In this case, HTTP usually implies it to be in the form of HTML and related code. In practice, that is not necessarily the case, as HTTP allows specifying arbitrary formats in its header.)\n\nA URN is analogous to a person's name, while a URL is analogous to their street address. In other words, a URN identifies an item and a URL provides a method for finding it.\n\nTechnical publications, especially standards produced by the IETF and by the W3C, normally reflect a view outlined in a W3C Recommendation of 30 July 2001, which acknowledges the precedence of the term URI rather than endorsing any formal subdivision into URL and URN.\n\nURL is a useful but informal concept: a URL is a type of URI that identifies a resource via a representation of its primary access mechanism (e.g., its network \"location\"), rather than by some other attributes it may have.[19]\n\nAs such, a URL is simply a URI that happens to point to a resource over a network.[a][16] However, in non-technical contexts and in software for the World Wide Web, the term \"URL\" remains widely used. Additionally, the term \"web address\" (which has no formal definition) often occurs in non-technical publications as a synonym for a URI that uses the http or https schemes. Such assumptions can lead to confusion, for example, in the case of XML namespaces that have a visual similarity to resolvable URIs.\n\nSpecifications produced by the WHATWG prefer URL over URI, and so newer HTML5 APIs use URL over URI.[20]\n\nStandardize on the term URL. URI and IRI [Internationalized Resource Identifier] are just confusing. In practice a single algorithm is used for both so keeping them distinct is not helping anyone. URL also easily wins the search result popularity contest.[21]\n\nWhile most URI schemes were originally designed to be used with a particular protocol, and often have the same name, they are semantically different from protocols. For example, the scheme http is generally used for interacting with web resources using HTTP, but the scheme file has no protocol.\n\nSyntax\n\n[edit]\n\nSee also: List of URI schemes\n\nA URI has a scheme that refers to a specification for assigning identifiers within that scheme. As such, the URI syntax is a federated and extensible naming system wherein each scheme's specification may further restrict the syntax and semantics of identifiers using that scheme. The URI generic syntax is a superset of the syntax of all URI schemes. It was first defined in RFC 2396, published in August 1998,[11] and finalized in RFC 3986, published in January 2005.\n\nA URI is composed from an allowed set of ASCII characters consisting of reserved characters (gen-delims: :, /, ?, #, [, ], and @; sub-delims: !, $, &, ', (, ), *, +, ,, ;, and =), unreserved characters (uppercase and lowercase letters, decimal digits, -, ., _, and ~), and the character %. Syntax components and subcomponents are separated by delimiters from the reserved characters (only from generic reserved characters for components) and define identifying data represented as unreserved characters, reserved characters that do not act as delimiters in the component and subcomponent respectively,[13]: §2 and percent-encodings when the corresponding character is outside the allowed set or is being used as a delimiter of, or within, the component. A percent-encoding of an identifying data octet is a sequence of three characters, consisting of the character % followed by the two hexadecimal digits representing that octet's numeric value.[13]: §2.1\n\nThe URI generic syntax consists of five components organized hierarchically in order of decreasing significance from left to right:[13]: §3\n\nURI = scheme \":\" [\"//\" authority] path [\"?\" query] [\"#\" fragment]\n\nA component is undefined if it has an associated delimiter and the delimiter does not appear in the URI; the scheme and path components are always defined.[13]: §5.2.1 A component is empty if it has no characters; the scheme component is always non-empty.[13]: §3\n\nThe authority component consists of subcomponents:\n\nauthority = [userinfo \"@\"] host [\":\" port]\n\nThis is represented in a syntax diagram as:\n\nThe URI comprises:\n\nA non-empty scheme component followed by a colon (:), consisting of a sequence of characters beginning with a letter and followed by any combination of letters, digits, plus (+), period (.), or hyphen (-). Although schemes are case-insensitive, the canonical form is lowercase and documents that specify schemes must do so with lowercase letters. Examples of popular schemes include http, https, ftp, mailto, file, data and irc. URI schemes should be registered with the Internet Assigned Numbers Authority (IANA), although non-registered schemes are used in practice.[b]\n\nAn optional authority component preceded by two slashes (//), comprising:\n\nAn optional userinfo subcomponent followed by an at symbol (@), that may consist of a user name and an optional password preceded by a colon (:). Use of the format username:password in the userinfo subcomponent is deprecated for security reasons. Applications should not render as clear text any data after the first colon (:) found within a userinfo subcomponent unless the data after the colon is the empty string (indicating no password).\n\nA host subcomponent, consisting of either a registered name (including but not limited to a hostname) or an IP address. IPv4 addresses must be in dot-decimal notation, and IPv6 addresses must be enclosed in brackets ([]).[13]: §3.2.2 [c]\n\nAn optional port subcomponent preceded by a colon (:), consisting of decimal digits.\n\nA path component, consisting of a sequence of path segments separated by a slash (/). A path is always defined for a URI, though the defined path may be empty (zero length). A segment may also be empty, resulting in two consecutive slashes (//) in the path component. A path component may resemble or map exactly to a file system path but does not always imply a relation to one. If an authority component is defined, then the path component must either be empty or begin with a slash (/). If an authority component is undefined, then the path cannot begin with an empty segment—that is, with two slashes (//)—since the following characters would be interpreted as an authority component.[11]: §3.3\n\nBy convention, in http and https URIs, the last part of a path is named pathinfo and it is optional. It is composed by zero or more path segments that do not refer to an existing physical resource name (e.g. a file, an internal module program or an executable program) but to a logical part (e.g. a command or a qualifier part) that has to be passed separately to the first part of the path that identifies an executable module or program managed by a web server; this is often used to select dynamic content (a document, etc.) or to tailor it as requested (see also: CGI and PATH_INFO, etc.).\n\nExample:\n\nURI: \"http://www.example.com/questions/3456/my-document\"\n\nwhere: \"/questions\" is the first part of the path (an executable module or program) and \"/3456/my-document\" is the second part of the path named pathinfo, which is passed to the executable module or program named \"/questions\" to select the requested document.\n\nAn http or https URI containing a pathinfo part without a query part may also be referred to as a 'clean URL,' whose last part may be a 'slug.'\n\nQuery delimiter Example Ampersand (&) key1=value1&key2=value2 Semicolon (;)[d] key1=value1;key2=value2\n\nAn optional query component preceded by a question mark (?), consisting of a query string of non-hierarchical data. Its syntax is not well defined, but by convention is most often a sequence of attribute–value pairs separated by a delimiter.\n\nAn optional fragment component preceded by a hash (#). The fragment contains a fragment identifier providing direction to a secondary resource, such as a section heading in an article identified by the remainder of the URI. When the primary resource is an HTML document, the fragment is often an id attribute of a specific element, and web browsers will scroll this element into view.\n\nThe scheme- or implementation-specific reserved character + may be used in the scheme, userinfo, host, path, query, and fragment, and the scheme- or implementation-specific reserved characters !, $, &, ', (, ), *, ,, ;, and = may be used in the userinfo, host, path, query, and fragment. Additionally, the generic reserved character : may be used in the userinfo, path, query and fragment, the generic reserved characters @ and / may be used in the path, query and fragment, and the generic reserved character ? may be used in the query and fragment.[13]: §A\n\nExample URIs\n\n[edit]\n\nThe following figure displays example URIs and their component parts.\n\nuserinfo host port ┌──┴───┐ ┌──────┴──────┐ ┌┴─┐ https://john.doe@www.example.com:1234/forum/questions/?tag=networking&order=newest#top └─┬─┘ └─────────────┬─────────────┘└───────┬───────┘ └────────────┬────────────┘ └┬┘ scheme authority path query fragment userinfo host port ┌──┴───┐ ┌──────┴──────┐ ┌┴─┐ https://john.doe@www.example.com:1234/forum/questions/?tag=networking&order=newest#:~:text=whatever └─┬─┘ └─────────────┬─────────────┘└───────┬───────┘ └────────────┬────────────┘ └───────┬───────┘ scheme authority path query fragment ldap://[2001:db8::7]/c=GB?objectClass?one └┬─┘ └─────┬─────┘└─┬─┘ └──────┬──────┘ scheme authority path query mailto:John.Doe@example.com └─┬──┘ └────┬─────────────┘ scheme path news:comp.infosystems.www.servers.unix └┬─┘ └─────────────┬─────────────────┘ scheme path tel:+1-816-555-1212 └┬┘ └──────┬──────┘ scheme path telnet://192.0.2.16:80/ └─┬──┘ └─────┬─────┘│ scheme authority path urn:oasis:names:specification:docbook:dtd:xml:4.1.2 └┬┘ └──────────────────────┬──────────────────────┘ scheme path\n\nDOIs (digital object identifiers) fit within the Handle System and fit within the URI system, as facilitated by appropriate syntax.\n\nURI references\n\n[edit]\n\nA URI reference is either a URI or a relative reference when it does not begin with a scheme component followed by a colon (:).[13]: §4.1 A path segment that contains a colon character (e.g., foo:bar) cannot be used as the first path segment of a relative reference if its path component does not begin with a slash (/), as it would be mistaken for a scheme component. Such a path segment must be preceded by a dot path segment (e.g., ./foo:bar).[13]: §4.2\n\nWeb document markup languages frequently use URI references to point to other resources, such as external documents or specific portions of the same logical document:[13]: §4.4\n\nin HTML, the value of the src attribute of the img element provides a URI reference, as does the value of the href attribute of the a or link element;\n\nin XML, the system identifier appearing after the SYSTEM keyword in a DTD is a fragmentless URI reference;\n\nin XSLT, the value of the href attribute of the xsl:import element/instruction is a URI reference; likewise the first argument to the document() function.\n\nhttps://example.com/path/resource.txt#fragment //example.com/path/resource.txt /path/resource.txt path/resource.txt ../resource.txt ./resource.txt resource.txt #fragment\n\nResolution\n\n[edit]\n\nResolving a URI reference against a base URI results in a target URI. This implies that the base URI exists and is an absolute URI (a URI with no fragment component). The base URI can be obtained, in order of precedence, from:[13]: §5.1\n\nthe reference URI itself if it is a URI;\n\nthe content of the representation;\n\nthe entity encapsulating the representation;\n\nthe URI used for the actual retrieval of the representation;\n\nthe context of the application.\n\nWithin a representation with a well defined base URI of\n\nhttp://a/b/c/d;p?q\n\na relative reference is resolved to its target URI as follows:[13]: §5.4\n\n\"g:h\" -> \"g:h\" \"g\" -> \"http://a/b/c/g\" \"./g\" -> \"http://a/b/c/g\" \"g/\" -> \"http://a/b/c/g/\" \"/g\" -> \"http://a/g\" \"//g\" -> \"http://g\" \"?y\" -> \"http://a/b/c/d;p?y\" \"g?y\" -> \"http://a/b/c/g?y\" \"#s\" -> \"http://a/b/c/d;p?q#s\" \"g#s\" -> \"http://a/b/c/g#s\" \"g?y#s\" -> \"http://a/b/c/g?y#s\" \";x\" -> \"http://a/b/c/;x\" \"g;x\" -> \"http://a/b/c/g;x\" \"g;x?y#s\" -> \"http://a/b/c/g;x?y#s\" \"\" -> \"http://a/b/c/d;p?q\" \".\" -> \"http://a/b/c/\" \"./\" -> \"http://a/b/c/\" \"..\" -> \"http://a/b/\" \"../\" -> \"http://a/b/\" \"../g\" -> \"http://a/b/g\" \"../..\" -> \"http://a/\" \"../../\" -> \"http://a/\" \"../../g\" -> \"http://a/g\"\n\nURL munging\n\n[edit]\n\nURL munging is a technique by which a command is appended to a URL, usually at the end, after a \"?\" token. It is commonly used in WebDAV as a mechanism of adding functionality to HTTP. In a versioning system, for example, to add a \"checkout\" command to a URL, it is written as http://editing.com/resource/file.php?command=checkout. It has the advantage of both being easy for CGI parsers and also acts as an intermediary between HTTP and underlying resource, in this case.\n\nRelation to XML namespaces\n\n[edit]\n\nIn XML, a namespace is an abstract domain to which a collection of element and attribute names can be assigned. The namespace name is a character string which must adhere to the generic URI syntax. However, the name is generally not considered to be a URI, because the URI specification bases the decision not only on lexical components, but also on their intended use. A namespace name does not necessarily imply any of the semantics of URI schemes; for example, a namespace name beginning with http: may have no connotation to the use of the HTTP.\n\nOriginally, the namespace name could match the syntax of any non-empty URI reference, but the use of relative URI references was deprecated by the W3C. A separate W3C specification for namespaces in XML 1.1 permits Internationalized Resource Identifier (IRI) references to serve as the basis for namespace names in addition to URI references.\n\nSee also\n\n[edit]\n\nCURIE\n\nLinked data\n\nExtensible Resource Identifier\n\nInternationalized Resource Identifier (IRI)\n\nInternet resource locator\n\nPersistent uniform resource locator\n\nUniform Naming Convention\n\nResource Directory Description Language\n\nUniversally unique identifier\n\nList of URI schemes\n\nNotes\n\n[edit]\n\nReferences\n\n[edit]\n\nWorks cited\n\n[edit]\n\nBerners-Lee, Tim; Fielding, Roy T.; Masinter, Larry (January 2005). RFC 3986 Uniform Resource Identifier (URI): Generic Syntax. Internet Engineering Task Force. doi:10.17487/RFC3986. RFC 3986 .\n\nFurther reading\n\n[edit]\n\nWhitehead, E.J (1998). \"WebDAV: IEFT standard for collaborative authoring on the Web\". IEEE Internet Computing. 2 (5): 34–40. doi:10.1109/4236.722228. ISSN 1941-0131 ."
    }
}