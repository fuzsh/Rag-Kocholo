{
    "id": "dbpedia_8586_3",
    "rank": 72,
    "data": {
        "url": "https://www.cellml.org/tools/downloads/cellml_api/releases/1.3",
        "read_more_link": "",
        "language": "en",
        "title": "CellML DOM API: Core implementation 1.3 â€” CellML",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.cellml.org/++theme++cellml.theme/assets/images/logo-cellml.png",
            "https://www.cellml.org/++theme++cellml.theme/assets/images/logo-iups-physiome.png",
            "https://www.cellml.org/platform_all_platforms.gif",
            "https://www.cellml.org/platform_all_platforms.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/++theme++cellml.theme/assets/images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "CellML DOM API: Core implementation 1.3 (Nov 21, 2007)\n\nThis is a refactored, modularised CellML API.\n\nFor additional information about this project, please visit the overview page .\n\nAvailable downloads\n\nRelease Notes\n\nTested with libxml2.6.26 State Final release License TRI Release Manager Justin Marsh Released 2007/11/28 17:30:00 GMT+13\n\nVersion 1.3rc1 of the CellML API has been released unchanged as version 1.3. The CellML API has been fully split into the core CellML DOM implementation and a number of separate services; metadata annotation, code generation, integration, code language description, and validation. The CellML API has been refactored for faster integration and ease of modular implementation. The code generation service now gracefully supports transformation of CellML into a wider possible range of programming languages. Support for CellML validators has been added.\n\nChange log\n\nThere have been a small number of significant changes to the CellML API.\n\nThe CellML API has been split into a number of seperate services, each of which can be used independently\n\nSupport for a CellML validator has been added\n\nSupport for relative urls in imports has been refined\n\nSupport for transformation between CellML and other languages is now more generic\n\nMore thorough units checking and conversion through connections\n\nThe API has been refactored for better speed and a smaller footprint\n\nWe altered the build scripts, so that we could use autopackage's gcc portability wrapper\n\nWe have improved the interface to the API, with more exposed functionality and more complete in-code documentation\n\nFor more details, please refer to the subversion changelogs, or the trac logs which may be available at http://trac.bioeng5.bioeng.auckland.ac.nz/physiomesynctrac/timeline."
    }
}