{
    "id": "dbpedia_8586_1",
    "rank": 7,
    "data": {
        "url": "https://www.osnews.com/story/2307/autopackage-introduction-to-the-next-generation-linux-packaging/",
        "read_more_link": "",
        "language": "en",
        "title": "AutoPackage – Introduction to the Next Generation Linux Packaging – OSnews",
        "top_image": "https://www.osnews.com/icons/favicon-32x32.png",
        "meta_img": "https://www.osnews.com/icons/favicon-32x32.png",
        "images": [
            "https://www.osnews.com/wp-content/uploads/2022/02/osnews-ukraine.png",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/a911243144a05be4d0d54b79a120740d?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/59ae872323db0bb7b423a2697c92baf7?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/982d8edd3a7412b77b8944815d4f2798?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/df3c2f2e09d348258359d7bf6626f112?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/71d35a6ff0aa762cacf7e2a7a87a64bb?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/df3c2f2e09d348258359d7bf6626f112?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/580f0b0fc54c0f5df2efe2dc8b9cf871?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/71d35a6ff0aa762cacf7e2a7a87a64bb?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/a22ab3dee2b3e5dca889b39f5bd8a9da?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/sad.gif",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/15ab49d7c9177171f417ed88612b90bb?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/68fb6f13a0963e550b54a5cad5cd3a67?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/c062031aed42b9047a1e9b0803c2191b?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/326849cea200f9fbbae22fcc9f1baec9?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/ab36cafcc9ec7c98d919a3f5b0f6f6f6?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/aaaae10a0b3fe6c817358c1e4bc4ca80?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/77ad1ab2357f4346ef2779b6aa7a007a?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/c4d1fee40dbb56269a8ecd4f99bfa1c6?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/32370b16a686cf0c4498dc83b9cbdc2c?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/94b309d78a1253a334e9b82643a8dc97?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/412beda78f6ddfdba45a1d90ebd672f0?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/dbd307fee934fe2d1eadb7db49f5d686?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/7dc4bb2075857f552cc69c9e18fad7d0?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/dbd307fee934fe2d1eadb7db49f5d686?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/412beda78f6ddfdba45a1d90ebd672f0?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/13efaf53d43d3dd34157d78fd3b21021?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/edcf2e7ddb03f60b50a10c2a8c187030?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/5449ffd10535715be020afeb486c4a6b?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/32370b16a686cf0c4498dc83b9cbdc2c?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/412beda78f6ddfdba45a1d90ebd672f0?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/411e2f7083ff2e6e0e6074b101ee712d?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/184b17f8e29e9b816da259e97657730b?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/30dce1e5bf0b13f52bc155afcb4961ed?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/d2d4086cbb08d3a051493cb2a318df7d?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/7dc4bb2075857f552cc69c9e18fad7d0?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/7dc4bb2075857f552cc69c9e18fad7d0?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/cea80f5157c799e4034707e68d1676c3?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/dbd307fee934fe2d1eadb7db49f5d686?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/b806bce03135250f4bb76b888c223de9?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/652a73ab84867c3b9a2e466f1c0fad0e?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/wink.gif",
            "https://secure.gravatar.com/avatar/7dc4bb2075857f552cc69c9e18fad7d0?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/ec6fcc4ae98886571057158c40987588?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/b6908f0e698cafb8aecc259e62c9cb70?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/dbd307fee934fe2d1eadb7db49f5d686?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/7dc4bb2075857f552cc69c9e18fad7d0?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/652a73ab84867c3b9a2e466f1c0fad0e?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/32810aef7d2a0a37cba5e337855f8dd5?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/9ae8a949d41f3975affdfe8f3be4a516?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/973cbef405b649a518a077eb23fa99cf?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/66229108e4687a385655fc1b5e209d85?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/sad.gif",
            "https://secure.gravatar.com/avatar/84ad6293500931822660f6d12b656a43?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/e8b06fc2b315dfa2d5bc4e25bc1a1eb9?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/652a73ab84867c3b9a2e466f1c0fad0e?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/bd5d14fb14d68f7b4b3ef0ac1c60d073?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Mike Hearn"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/icons/apple-touch-icon.png",
        "meta_site_name": "",
        "canonical_link": "https://www.osnews.com/story/2307/autopackage-introduction-to-the-next-generation-linux-packaging/",
        "text": "If you’ve used Linux for more than ten minutes, you’ve almost certainly come across the nightmare that is package management. You know what I mean – dependancy hell has become legendary and it’s no exagguration to say that one of the most offputting aspects of Linux for a new user is the lack of InstallShield type 3 click installs. This article looks at how we ended up in the quagmire of RPM and dependancy hell, and then moves on to talk about a possible solution in the form of autopackage. It takes a high level overview of how autopackage works and what it’s capable of. If you want more technical details, check out the website. Finally, this article assumes only that you’re interested, not that you have any Linux experience.\n\nFirst off, I’m not going to assume you’ve used Linux before, so I’ll start with a few definitions:\n\nRPM: The Redhat package manager. Despite the name, it’s\n\nused by many Linux distributions and is probably the most popular\n\npackage manager statistically speaking today. Unfortunately,\n\nRPM has many faults, perhaps the most important being that it was\n\nnever designed for internet based distribution of software for Linux\n\nin general. What this means is that it’s optimized for transferring\n\nlarge amounts of software to an OS from a CD or Redhat update\n\nsite. Because of the lack of flexibility in the RPM file format,\n\nvarious distros have tweaked it and so forked the format – if you\n\nwant to install an RPM you’d better be sure it’s designed for your\n\ndistro. Only the very simplest of packages can be realistically\n\ndistributed in this way by third parties. To make matters worse\n\nRedHat often gratuitously break backwards compatability.\n\nDependancy hell: Due to the non commercial nature of\n\nLinux, packages often have lots of dependancies. These are other\n\npackages that must be installed before that package can be\n\ninstalled, we say one depends on the other. All operating\n\nsystems have dependancies, but Linux software has far more than\n\nmost. Dependancy hell arises when you want to install a package, but\n\nyour system doesn’t have the required dependancies present. Raw RPM\n\ncannot fix this itself – you must manually track down and install\n\nthose packages. Just pray that there are no sub-dependancies as\n\nwell!\n\nAPT: Advanced Packaging Tools, originally built for\n\nDebian and later ported to RPM, apt can automatically resolve\n\ndependancies. Installing software with apt is easy, even easier than\n\non Windows – you just type in the name of the software you want, for\n\ninstance with apt-get install gimp. Unfortunately, apt\n\nrequires centralised repositories to be maintained for every distro\n\n(and often, every subversion), and as such often the software you\n\nwant is simply not available in the repositories, or it is present,\n\nbut its dependancies are not. Although Debian has many thousands of\n\npackages in its repositories, the manpower required to keep them all\n\nup to date means the latest versions of the packages are often only\n\navailable in Debian some time after they have been\n\nreleased. emerge is a similar idea, but tied to Gentoo.\n\nRPM Hell: another type of unpleasantness that is caused\n\nby the type of package managers in use today on Linux. If the\n\nsoftware you want to install isn’t available as a package for your\n\ndistro then all is not lost, you can just compile it from the source\n\n(which unless you use a ports based distro a la Gentoo has its own\n\nset of problems). Unfortunately, you just entered the twilight zone:\n\nRPM (and also the debian system) assume that you use them to install\n\neverything on your computer. Because often packages are not\n\navailable of course this doesn’t happen, but then RPM is not aware\n\nof the presence of those packages and will refuse to install other\n\npackages that depend on them without manual overrides. Hacks around\n\nthis problem exist (see checkinstall) but they only partially solve\n\nthe problem\n\nHaving witnessed several of my friends try Linux only to give up in\n\ndisgust after spending several hours attempting to do something as\n\ntrivial as upgrade Mozilla, I resolved to do something about the\n\nproblem. So, what issues do we face, and how to other operating\n\nsystems fix these issues?\n\nThe first one is that RPM doesn’t posseses enough flexibility to\n\ndeal with the myriad little differences between distributions. An RPM\n\nis basically made up of a list of files and a set of pre and post\n\ninstall scripts. The list of files is always relative to root, so if\n\nyour distro does not use the exact same filing system layout as the\n\none it was built for, the RPM will not install correctly. Another\n\nexample of distro differences would be the “install-info” script,\n\nwhich is responsible for integrating TeXinfo manuals into the system:\n\nDebian has its own version which is incompatible with the Free\n\nSoftware Foundation version used in most other forms of Linux.\n\nAnother issue, perhaps one of the biggest, is that there are no\n\nstandard mechanisms for naming packages. Because of that, an RPM\n\ndesigned for one system will know dependancies by different names to\n\nthat of another. The difference between package “python-dev” and\n\n“python-devel” may be small, but it’s enough to break\n\ncompatability.\n\nFinally, you have differences in the compiled binaries\n\nthemselves. A KDE application compiled for Redhat 7.3 will not install\n\non Redhat 8 as they use different versions of gcc, and the binaries\n\nproduced by these compilers are not compatible. RPM has no way of\n\ndealing with this other than to force people to have 2 different\n\npackages for the 2 different versions.\n\nA bit of a mess isn’t it? If you’re a Windows or Mac user you’re\n\nprobably feeling a bit smug right now, but actually there’s no reason\n\nto be. Windows and MacOS both have ways of dealing with these issues,\n\nand neither of them are particularly elegant. On Windows, we are all\n\nfamiliar with the name InstallShield. The standard mechanism for\n\ninstalling software onto Windows has for many years been to create an\n\ninstaller executable that the user runs and then extracts the program\n\nfrom itself and performs any needed setup. The installer checks\n\ndependancies (usually different versions of MS dlls) and often\n\ncontains copies of them just in case they aren’t present. Finally it\n\nintegrates the program with the environment (often too well!) by\n\ncreating menu entries, app associations and so on.\n\nWhy does this system suck? Well, from the point of view of the\n\nuser, it doesn’t, the experience is simple, fast and effective. Behind\n\nthe scenes however, things are rather ugly. For starters, modern\n\ninstallers are complex beasts – InstallShield is actually a complete\n\nscripting language and all the code necessary to interpret these\n\nscripts, create the user front ends etc are shipped with the Windows\n\napp in every single case. This is pretty wasteful, and the need to\n\nship all the DLLs an app might require just in case they are not\n\npresent on the system also adds a lot of overhead.\n\nInstaller executables bring with them their own set of\n\nproblems. The user interface is often inconsistent, and they are extremely\n\nhard to automate. I once spent a week at a company in which all I did\n\nwas travel to every computer and put in the IE6 upgrade CD for each\n\none. There was almost no good way of transparently deploying\n\napplications. Although products do exist that automate this on\n\nWindows, they usually work by watching what the installer does then\n\n“rebuilding” the installation from scratch which can lead to all kinds\n\nof nasty issues. The current system was never really designed as such,\n\nin the absence of any solution provided by Microsoft companies sprung\n\nup to fill the gap. Windows is now moving to an appfolders style\n\nsystem whereby dependancies can be sideloaded in an attempt to avoid\n\ndependancies also.\n\nDoes the Mac fare any better? Unfortunately not. MacOS X has (in theory) totally eschewed installers in favour of App Folders, which are specially marked directories, the idea being that you simply drag and drop the app into the Applications directory. To uninstall, just drag it to the wastebasket. This is good UI, but bad everything else. By eliminating (un)install logic, it becomes extremely hard to check for dependancies, to provide system components, to clean up configuration changes, other application metadata and so on. Although technically apps can have dependancies via bundles, the lack of OS side install logic means that in practice it’s not possible to install these bundles into the OS if required – the user must do it for the app. As such, apps can only rely on funtionality that was known to ship with the operating system. That suits Apples goal of selling more copies of OS X, but is rather limiting for the user. By trying to hide the problems dependancies pose all together, it creates bigger problems further down the line. As such, some Mac apps ship with install apps anyway which rather defeats the point. Note that my beef with appfolders are more to do with the way they have been implemented in NeXTStep – you can use autopackage to install apps into an appfolders style arrangement (for instance i test with\n\n/apps/packagename) and one day there may well be a VFS plugin that lets you view installed packages as folders/directories. I think it is highly unlikely that you’ll ever be able to just drag app directories off a CD onto the system however.\n\nSo does Linux have the right idea? Yes, it does. Operating systems\n\nare just that – systems, systems that are made up of multiple\n\ncomponents. In the absence of centralised control and the use of\n\nparallel development, properly managing dependancies and system\n\ndifferences is a must. The problem is that we don’t do it very\n\nwell. So how can we improve?\n\nI think the answer lies in autopackage, a project I started work on\n\nover 6 months ago in response to these issues. It uses a variety of\n\nideas and approaches to solve the problems posed by Linux package\n\nmanagement.\n\nDistribution neutral: unlike many package managers, autopackage\n\nwas not developed by a distribution project. As such, it is\n\ncompletely distribution neutral both in technical design and\n\npolitical stance. You can build an autopackage once, and it will (in\n\ntheory 🙂 install on any distro, assuming it’s not totally off this\n\nplanet.\n\nDesigned for flexibility: In a similar vein to\n\nInstallShield a .package file is script based rather than table\n\nbased. The install scripts, backed up by a large number of provided\n\nlibrary funtions, are easily capable of dealing with the multitude\n\nof differences between distributions.\n\nNet based: RPM was designed to manage everything a distro comes\n\nwith, from the kernel to the Solitaire games. In contrast,\n\nautopackage is designed for net based distribution of software. It’s\n\nnot designed to install new kernels, or to be used exclusively by a\n\ndistro (maybe one day it would be capable of this too, but it’s not\n\na design priority). As a part of the project we will be constructing\n\nthe autopackage network, a network of resolution servers that\n\nwork like DNS to convert root names (see below) into URLs for where\n\nthe packages can be downloaded. By turning our back on the idea of\n\napt-style massively centralised repositories, we hope to allow the\n\nnetwork to scale. If a programmer creates a piece of software, they\n\ndon’t have to wait for somebody from the network to create a package\n\nand upload it for them, they can create it themselves and then\n\nregister their own node of the network from which they can plug in\n\nany packages they may create\n\nGlobal names: from the start, autopackage was designed to allow\n\npackages to have multiple names. All packages must have a root name,\n\nto which other names can map to. A root name looks something like\n\nthis: “@gnome.org/gedit/2.2”. As you can see, rather than creating a\n\nnew naming authority, it leverages off the DNS system. As most\n\nprojects these days have a website, they can easily be assigned a\n\nroot name. Other, more human friendly names include short names,\n\nwhich are rpm style (for instance “gimp”, “gnome2” or “xchat-text”),\n\nand display names, which describe in the users native language\n\nbriefly what the application is, ie “Evolution Mail\n\nClient”.\n\nDatabase independant dependancy management: the approach\n\nautopackage takes to dependancies is similar to the configure\n\nscripts we all use, in that it checks the system directly for the\n\npresence of the dependancy, ie for libraries it will check the\n\nsystems linker cache. I won’t go into the exact details of this\n\nsystem, you can find out more information from the website.\n\nFront end independance: right now we have only a terminal front\n\nend, and very pretty it is too. As we work towards 0.3, we’ll be\n\ndeveloping a graphical front end based on GTK. We’ll also be adding\n\na front end that records your choices and can then play them back,\n\nallowing seamless automation of installs. By insulating packages\n\nfrom the details of how they interact with the user, packages are\n\nsimpler to build and we can get much better integration with the\n\nusers host environment. The best is chosen automatically, so if you\n\ninstall the package from the command line it’ll use the terminal\n\nfront end, and if you install it from Nautilus or Konqueror (visual\n\nfile managers) it’ll use the graphical front end.\n\nAutomatic and easy: installing a .package file is simply a\n\nmatter of running it. If you’ve never used autopackage before, the\n\nneeded files will be downloaded and setup for you. Packages have\n\nminimal bloat because of this, so far it runs to about 11kb.\n\nSo is this just fantasy, a pipe dream? Not at all thankfully, a few\n\ndays ago we released 0.2 which can build, install, verify, query and\n\nuninstall packages in a distro-neutral fashion. We’re a long way from\n\nhaving a complete solution to the problem, but let’s hope that in a\n\nfew years the days of RPM hell will be long forgotten."
    }
}