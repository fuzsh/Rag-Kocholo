{
    "id": "dbpedia_6933_3",
    "rank": 60,
    "data": {
        "url": "https://www.mckinsey.com/capabilities/mckinsey-digital/our-insights/the-bottom-line-benefit-of-the-product-operating-model",
        "read_more_link": "",
        "language": "en",
        "title": "The bottom-line benefit of the product operating model",
        "top_image": "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20bottom%20line%20benefit%20of%20the%20product%20operating%20model/thumb-gettyimages-1423392634.jpg",
        "meta_img": "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20bottom%20line%20benefit%20of%20the%20product%20operating%20model/thumb-gettyimages-1423392634.jpg",
        "images": [
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20bottom%20line%20benefit%20of%20the%20product%20operating%20model/svgz-bottom-line-benefit-exhibits-ex1-v3.svgz?cq=50&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20bottom%20line%20benefit%20of%20the%20product%20operating%20model/svgz-bottom-line-benefit-exhibits-ex-sidebar-v3.svgz?cq=50&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20bottom%20line%20benefit%20of%20the%20product%20operating%20model/svgz-bottom-line-benefit-exhibits-ex2-v3.svgz?cq=50&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/how%20we%20help%20clients/2024/never-just-tech_thumb_1536x1536.jpg?cq=50&mh=145&car=16:9&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20bottom%20line%20benefit%20of%20the%20product%20operating%20model/svgz-bottom-line-benefit-exhibits-ex3-v3.svgz?cq=50&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20bottom%20line%20benefit%20of%20the%20product%20operating%20model/svgz-bottom-line-benefit-exhibits-ex4-v3.svgz?cq=50&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/featured%20insights/mckinsey%20books/rewired/rewired-cover-wsj-thumb-1536x1536.png?cq=50&mh=145&car=16:9&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20bottom%20line%20benefit%20of%20the%20product%20operating%20model/svgz-bottom-line-benefit-exhibits-ex5-v3.svgz?cq=50&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20big%20product%20and%20platform%20shift%20five%20actions%20transformation/thumb-gettyimages-509278849.jpg?cq=50&mw=767&car=16:9&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/the%20erp%20platform%20play%20cheaper%20faster%20better/thumb-gettyimages-1299482876.jpg?cq=50&mw=767&car=16:9&cpy=Center",
            "https://www.mckinsey.com/~/media/mckinsey/business%20functions/mckinsey%20digital/our%20insights/rewired%20to%20outcompete/qweb-rewired-1536x1536.jpg?cq=50&mw=767&car=16:9&cpy=Center"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Aditi Chawla",
            "Martin Harrysson",
            "Hannah Mayer",
            "Megha Sinha"
        ],
        "publish_date": "2023-12-19T00:00:00+00:00",
        "summary": "",
        "meta_description": "New McKinsey data shows the value of building out a product operating model for long-term success and growth.",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "McKinsey & Company",
        "canonical_link": "https://www.mckinsey.com/capabilities/mckinsey-digital/our-insights/the-bottom-line-benefit-of-the-product-operating-model",
        "text": "As technology becomes more integral to business, every company is becoming a software company. But if you want to be a software company, you need to act like a software company (ideally, a digital native). That means launching software features faster, improving code quality while increasing developer velocity, building world-class user experiences, and freeing up development time for work that has business impact. But how can this be done?\n\nA core component of successful software companies is the product (and platform) operating model, which empowers cross-functional teams from the business or product, engineering, operations, and other functions to work autonomously to create and deliver solutions. These teams build software platform components that are scalable, reusable, and able to be externalized, enabled by APIs and service interface calls (see sidebar âWhat is a product and platform operating model?â).\n\nThis speed and flexibility lead to more bottom-line value. Our analysis shows that top companies in terms of product and operating model maturity have 60 percent greater total returns to shareholders than bottom-half companies and 16 percent higher operating margins (Exhibit 1).\n\nDespite the familiarity with the product and platform concept, two questions still hold companies back from committing to it: is it really worth shifting to this model, and what are the key moves to scale this model? Building up a product and platform operating model is much more than changing reporting lines and team structures. It requires a commitment to do organizational surgery at the process, performance, and talent levels to enable hundreds and even thousands of teams to work effectively and quickly, as detailed in the book Rewired: The McKinsey Guide to Outcompeting in the Age of Digital and AI (Wiley, June 2023).\n\nTo help better answer these questions and understand the business and financial implications of a product and platform operating model, we analyzed more than 400 publicly traded companies. We designed the Operating Model Index (OMI) survey, which helps measure an organizationâs operating model maturity across five core areas (structure, strategy and governance, ways of working, culture and talent management, and tooling). We then looked into the relationship between operating model maturity and business and financial outcomes (see sidebar âMore about the research and methodologyâ).\n\nOur research clearly shows the following four takeaways:\n\nHaving a mature product and platform operating model is strongly correlated with business performance outcomes, including 38 percent higher customer engagement and 37 percent higher brand awareness.\n\nOf the various aspects of a product and platform operating model, âways of workingâ (product management practices) has the greatest impact on business performance.\n\nInnovation performance is most correlated with tooling as well as culture and talent management practices.\n\nThe gap between the top and bottom performers is largest in five specific capability areas: interaction between product, engineering, and operations teams; product management practices; backlog prioritization; funding; and technical debt management.\n\nOperating model maturity is directly correlated with strong business performance outcomes\n\nOrganizations with high product operating model maturity across geographies and industries have 60 percent higher returns to shareholders and 16 percent higher operating margins than bottom-half performers. Our analysis further showed a strong overall correlation between OMI scores and key business outcomes (Pearson r = 0.64): top-quartile OMI companies overall have 38 percent higher customer engagement and 37 percent higher brand awareness, as well as higher levels of innovation in product development (Exhibit 2). While results vary across sectors and organizations, the underlying correlations remain consistent.\n\nThis should be welcome news for senior executives, 70 percent of whom rank customer experience as a top priority. A core tenet of a product and platform operating model is customer centricityâthat is, understanding customer personas, building as-is and to-be journeys, developing a minimal viable product to test with customers (via A/B testing, for example), and quickly iterating to deliver products that meet user needs. Strong product teams measure success by customer outcomes (for example, customer satisfaction score), track customer data rigorously, and use it for continuous improvement.\n\nâWays of workingâ is the top driver of business outcomes\n\nAmong the five core areas of a product and platform operating model, âways of workingâ has the strongest correlation with overall business performance (Exhibit 3). âWays of workingâ covers three dimensions: managing cross-product and platform dependencies, defining clear roles and responsibilities for each step of the product development life cycle (PDLC), and adopting modern product management and engineering practices. It's worth noting in our analysis that, even though âways of workingâ has the largest impact on business outcomes, its OMI maturity scores are among the lowest across all sectors.\n\nTo improve their ways of working, companies need to do the following:\n\nImplement mechanisms to resolve product and platform dependencies. Those mechanisms fall across three areas:\n\nStructural: Define product teamsâ architecture and scope to minimize dependencies. Build teams with cross-functional skills, a dedicated mission, and clear boundaries to reduce dependencies.\n\nProcess: Institute routine and process changesâsuch as designating a representative from each product team to discuss blockers and dependencies between teams and to lay out a plan to resolve critical bottlenecksâas well as âbig-room planning,â in which product managers (or, in some cases, full teams) come together at least once a quarter to review the road maps for interdependent product teams.\n\nTooling: Enable common and consistent tooling across teams (for example, Jira Align), where transparent backlogs can be shared, tagged for dependencies, and accessed for resolution. Use your scrum board, Kanban board, or other visual representation system to help teams and individuals track dependencies.\n\nEstablish a consistent product development life cycle. There are three primary elements on which to focus:\n\nDefine clear roles and responsibilities across the PDLC so itâs clear who does what (product managers develop product road maps, for example).\n\nDetermine consistent interactions between functions across the PDLC to create shared expectations (for example, while developing product road maps, product managers consult with and gather input from engineering, marketing, sales, and customer success teams).\n\nDefine standard artifacts and tools (such as user personas, a market requirements document, empathy maps, a to-be journey, and prototypes) to use across each stage of the PDLC.\n\nAdopt modern product management and engineering practices. Core product management best practices include empowering product managers to act as âmini CEOs.â They have accountability to deliver on business outcomes, all the way from idea to launch to scale. They conduct user research, develop user personas and as-is and to-be journeys, build a user-centric product road map, measure impact, and make data-driven decisions. Core engineering best practices include test-driven development, pair programming, code reviews, automation of testing and deployment, and the use of low-code and no-code platforms to drive developer velocity.\n\nStrength in culture and talent as well as tooling are strongly correlated with organizational innovation\n\nAs might be expected, some correlations are stronger than others. When it comes to innovation, the correlation is particularly strong with an organizationâs culture, talent management, and tooling (Exhibit 4). The core elements of culture and talent management include key behaviors (for instance, psychological safety, cross-functional collaboration, and inner-source and open-source adoption), a strong value proposition that appeals to top talent, career paths, and capability building and upskilling opportunities for product managers and engineers. Tooling encompasses planning and collaboration tooling, software development tooling, and DevSecOps tooling, such as continuous integration/continuous delivery (CI/CD) pipelines.\n\nTo establish culture, talent management, and tooling that support product and platform development, companies should consider the following:\n\nFostering experimentation by making it safe to fail. Psychological safety (a shared belief that risk-taking in the pursuit of innovative problem solving is permitted and protected) is a critical cultural enabler of innovation. However, only 20 percent of executives today say they believe their organization has succeeded in creating this kind of culture. To foster psychological safety, invest in systems that can absorb and minimize the cost of failure (for example, controlled releases, feature flags, and automated rollbacks) and establish blameless product postmortems that provide space for teams to reflect constructively on what worked well and what did not.\n\nBuilding a strong value proposition to attract and retain top software talent. Organizations need to fine-tune all elements of their value proposition, from recruiting and onboarding to training and career development. It is critical to offer strong dual career paths along management and expert contributor tracks for product and engineering roles. Additionally, providing continuous learning and capability-building opportunities (through a product manager academy or engineering academy, for example) is necessary to stay up to date with rapidly evolving product management and engineering practices.\n\nAdopting an open-source and inner-source culture. Support participation in the open-source community (beyond just using open-source software), and adopt a similar approach to how code is shared internally (inner sourcing).\n\nUsing best-in-class tooling. Organizations can significantly accelerate the path to production by rolling out a DevSecOps pipeline with automated, embedded risk and security controls. Scaled adoption of generative AI tools (such as Github Copilot and custom large language models fine-tuned on proprietary code base) throughout the software development life cycle, along with systematic capability-building programs, can dramatically improve developer experience and productivity as it relates to code generation, code documentation, code translation, unit testing, and test-case creation.\n\nStart by building five high-impact capability areas\n\nThere is a wide range of tasks at hand, so naturally, itâs hard to know where to start or what will have the greatest effect. Our research shows that five capability areas have the greatest gap between top- and bottom-quartile companies, and our experience validates them as important for companies to focus on developing early (Exhibit 5):\n\nBe specific about the product team interaction model. The interaction model establishes how individuals and teams across product, engineering, operations, design, and other functions interact throughout the PDLC and what their responsibilities are. Write out the roles and responsibilities for all functions across the PDLC, from customer research, product strategy, product vision and road map creation, and product delivery to go to market. Leadership needs to clearly communicate those responsibilities and extend support through performance management reviews and incentive structures. Use a common set of tools and processes that streamline communication and collaboration between team members.\n\nBuild a backlog that is market-backed and in alignment with business goals. The product backlog is the prioritized list of work that teams need to do. It needs to be the product managerâs job to develop a product backlog that is aligned with organizational priorities, is guided by user research and market needs, and enables the objectives and key results that product and platform teams sign up to deliver.\n\nTie funding to measurable goals and progress. Organizational goals are set by leadership and aligned iteratively at all levels in the organization to define goals for product and platform teams. All product and platform teams should receive funding based on their measurable goals. Review goals for each product and platform team: can they easily be tracked, and do they align with the organizationâs priorities? Ensure that funding is earmarked for product and platform efforts but only released based on each teamâs progress toward their goals.\n\nManage your technical debt. Technical debt is the âtaxâ teams pay on any development to redress existing technology issues. Price the technical debt into each initiative, and create incentives for paying it down (for example, by using approved APIs). Assign a dedicated budget and protect 10 to 20 percent of product team time to pay down tech debt; this can free up engineers to spend as much as 50 percent more of their time working on value-generating products and services, reduce costs by cutting back on time needed to manage complexity, and improve uptime and resiliency.\n\nInstitute processes and tools that enable a product culture. Create guidelines, templates, easily accessible tools, and incentives to help teams embody a product culture. That culture should include engaging with customers and end users frequently, being clear about user personas and unmet needs, defining a long-term product strategy and road map, and employing a test-and-learn approach. Track how closely teams adhere to these tenets, and set up mechanisms to provide feedback frequently. Finally, create plans for individual product manager learning and growth through apprenticeship to keep up with the rapid evolution of technology and customer needs.\n\nHow one company moved to a product and platform operating model\n\nOne retail brand had seen the share of order volume via digital channels rise significantly. However, accountability and ownership for delivering the end-user experience was inconsistent because responsibilities across business units and roles overlapped, leading to confusion on decision rights. The absence of a way to prioritize initiatives across functions led to disjointed planning. It routinely took the organization up to two years to bring new user experiences to market.\n\nLeadership realized that the brand needed to overhaul its operating model, starting with a detailed review of the current processes to identify the biggest issues to solve. One issue was that business and IT had separate reporting and management structures, which created confusion and delays. The organization selected multiple pilot software products and assembled integrated teams with experts from technology, business, user research and design, and data and analytics, among others. Each product team had full autonomy for developing the solution. The teams were trained in the key practices in the PDLC (for example, product management ownership of the entire productâs development), product management (such as product road map development), and engineering (for instance, code reviews and high levels of automation in testing).\n\nThe result was a 60 percent improvement in innovation times, a 20 percent improvement in self-reported customer centricity, and an improvement of 30 basis points in employee satisfaction scores. On top of that, the initial pilot products are on track to deliver tens of millions of dollars in combined revenue uplift and cost savings. The organization decided to scale these benefits by establishing a transformation office, which developed a playbook from the results of the pilot product effort to roll out to the rest of the organization.\n\nAn operating model transformation can seem daunting, but itâs a necessity for companies looking to survive the software transition. By prioritizing those actions that deliver the highest impact and making targeted improvements, companies can build a product and platform foundation for long-term success and growth."
    }
}