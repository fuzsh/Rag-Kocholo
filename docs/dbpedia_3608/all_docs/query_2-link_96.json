{
    "id": "dbpedia_3608_2",
    "rank": 96,
    "data": {
        "url": "https://learn.microsoft.com/en-us/fabric/security/service-admin-row-level-security",
        "read_more_link": "",
        "language": "en",
        "title": "Row-level security (RLS) with Power BI - Microsoft Fabric",
        "top_image": "https://learn.microsoft.com/en-us/media/open-graph-image.png",
        "meta_img": "https://learn.microsoft.com/en-us/media/open-graph-image.png",
        "images": [
            "https://learn.microsoft.com/en-us/power-bi/includes/media/rls-desktop-define-roles/powerbi-desktop-security.png",
            "https://learn.microsoft.com/en-us/power-bi/includes/media/rls-desktop-define-roles/powerbi-security-newrole.png",
            "https://learn.microsoft.com/en-us/power-bi/includes/media/rls-desktop-define-roles/powerbi-security-renamerole.png",
            "https://learn.microsoft.com/en-us/power-bi/includes/media/rls-desktop-define-roles/powerbi-security-defaulteditor.png",
            "https://learn.microsoft.com/en-us/power-bi/includes/media/rls-desktop-define-roles/powerbi-security-daxeditor.png",
            "https://learn.microsoft.com/en-us/power-bi/includes/media/rls-desktop-define-roles/powerbi-security-switchtodefaulteditor.png",
            "https://learn.microsoft.com/en-us/fabric/includes/media/powerbi-security-apply-filter-in-both-directions.png",
            "https://learn.microsoft.com/en-us/fabric/security/media/service-admin-row-level-security/dataset-canvas-more-options.png",
            "https://learn.microsoft.com/en-us/fabric/security/media/service-admin-row-level-security/dataset-more-options-menu.png",
            "https://learn.microsoft.com/en-us/fabric/security/media/service-admin-row-level-security/row-level-security-add-member.png",
            "https://learn.microsoft.com/en-us/fabric/security/media/service-admin-row-level-security/row-level-security-member-count.png",
            "https://learn.microsoft.com/en-us/fabric/security/media/service-admin-row-level-security/row-level-security-remove-member.png",
            "https://learn.microsoft.com/en-us/fabric/security/media/service-admin-row-level-security/row-level-security-test-role.png",
            "https://learn.microsoft.com/en-us/fabric/security/media/service-admin-row-level-security/row-level-security-test-role-2.png",
            "https://learn.microsoft.com/en-us/fabric/security/media/service-admin-row-level-security/row-level-security-test-role-3.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-07-11T17:03:00+00:00",
        "summary": "",
        "meta_description": "How to configure row-level security for imported semantic models, and DirectQuery, within the Power BI service.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://learn.microsoft.com/en-us/fabric/security/service-admin-row-level-security",
        "text": "Row-level security (RLS) with Power BI\n\nRow-level security (RLS) with Power BI can be used to restrict data access for given users. Filters restrict data access at the row level, and you can define filters within roles. In the Power BI service, users with access to a workspace have access to semantic models in that workspace. RLS only restricts data access for users with Viewer permissions. It doesn't apply to Admins, Members, or Contributors.\n\nYou can configure RLS for data models imported into Power BI with Power BI. You can also configure RLS on semantic models that are using DirectQuery, such as SQL Server. For Analysis Services or Azure Analysis Services lives connections, you configure row-level security in the model, not in Power BI. The security option doesn't show up for live connection semantic models.\n\nDefine roles and rules in Power BI Desktop\n\nYou can define roles and rules within Power BI Desktop. With this editor, you can toggle between using the default drop-down interface and a DAX interface. When you publish to Power BI, you also publish the role definitions.\n\nTo define security roles:\n\nImport data into your Power BI Desktop report, or configure a DirectQuery connection.\n\nNote\n\nYou can't define roles within Power BI Desktop for Analysis Services live connections. You need to do that within the Analysis Services model.\n\nFrom the Modeling tab, select Manage Roles.\n\nFrom the Manage roles window, select New to create a new role.\n\nUnder Roles, provide a name for the role and select enter.\n\nNote\n\nYou can't define a role with a comma, for example London,ParisRole.\n\nUnder Select tables, select the table to which you want to apply a row-level security filter.\n\nUnder Filter data, use the default editor to define your roles. The expressions created return a true or false value.\n\nNote\n\nNot all row-level security filters supported in Power BI can be defined using the default editor. Limitations include expressions that today can only be defined using DAX including dynamic rules such as username() or userprincipalname(). To define roles using these filters switch to use the DAX editor.\n\nOptionally select Switch to DAX editor to switch to using the DAX editor to define your role. DAX expressions return a value of true or false. For example: [Entity ID] = âValueâ. The DAX editor is complete with autocomplete for formulas (intellisense). You can select the checkmark above the expression box to validate the expression and the X button above the expression box to revert changes.\n\nNote\n\nYou can use username() within this expression. Be aware that username() has the format of DOMAIN\\username within Power BI Desktop. Within the Power BI service and Power BI Report Server, it's in the format of the user's User Principal Name (UPN). Additionally, in this expression box, use commas to separate DAX function arguments even if you're using a locale that normally uses semicolon separators, such as French or German.\n\nYou can switch back to the default editor by selecting Switch to default editor. All changes made in either editor interface persist when switching interfaces when possible. When defining a role using the DAX editor that can't be defined in the default editor, if you attempt to switch to the default editor you'll be prompted with a warning that switching editors may result in some information being lost. To keep this information, select Cancel and continue only editing this role in the DAX editor.\n\nNote\n\nIn this expression box, use commas to separate DAX function arguments even if you're using a locale that normally uses semicolon separators, such as French or German.\n\nSelect Save.\n\nYou can't assign users to a role within Power BI Desktop. You assign them in the Power BI service. You can enable dynamic security within Power BI Desktop by making use of the username() or userprincipalname() DAX functions and having the proper relationships configured.\n\nBy default, row-level security filtering uses single-directional filters, whether the relationships are set to single direction or bi-directional. You can manually enable bi-directional cross-filtering with row-level security by selecting the relationship and checking the Apply security filter in both directions checkbox. Note that if a table takes part in multiple bi-directional relationships you can only select this option for one of those relationships. Select this option when you've also implemented dynamic row-level security at the server level, where row-level security is based on username or login ID.\n\nFor more information, see Bidirectional cross-filtering using DirectQuery in Power BI and the Securing the Tabular BI Semantic Model technical article.\n\nManage security on your model\n\nTo manage security on your semantic model, open the workspace where you saved your semantic model in Fabric and do the following steps:\n\nIn Fabric, select the More options menu for a semantic model. This menu appears when you hover on a semantic model name.\n\nSelect Security.\n\nSecurity takes you to the Role-Level Security page where you add members to a role you created. Contributor (and higher workspace roles) will see Security and can assign users to a role.\n\nWorking with members\n\nAdd members\n\nIn the Power BI service, you can add a member to the role by typing in the email address or name of the user or security group. You can't add Groups created in Power BI. You can add members external to your organization.\n\nYou can use the following groups to set up row-level security.\n\nDistribution Group\n\nMail-enabled Group\n\nMicrosoft Entra Security Group\n\nNote that Microsoft 365 groups aren't supported and can't be added to any roles.\n\nYou can also see how many members are part of the role by the number in parentheses next to the role name, or next to Members.\n\nRemove members\n\nYou can remove members by selecting the X next to their name.\n\nValidating the role within the Power BI service\n\nYou can validate that the role you defined is working correctly in the Power BI service by testing the role.\n\nSelect More options (...) next to the role.\n\nSelect Test as role.\n\nYou're redirected to the report that was published from Power BI Desktop with this semantic model, if it exists. Dashboards aren't available for testing using the Test as role option.\n\nIn the page header, the role being applied is shown. Test other roles, a combination of roles, or a specific person by selecting Now viewing as. Here you see important permissions details pertaining to the individual or role being tested. For more information about how permissions interact with RLS, see RLS user experience.\n\nTest other reports connected to the semantic model by selecting Viewing in the page header. You can only test reports located in the same workspace as your semantic model.\n\nTo return to normal viewing, select Back to Row-Level Security.\n\nNote\n\nThe Test as role feature doesn't work for DirectQuery models with Single Sign-On (SSO) enabled. Additionally, not all aspects of a report can be validated in the Test as role feature including Q&A visualizations, Quick insights visualizations, and Copilot.\n\nUsing the username() or userprincipalname() DAX function\n\nYou can take advantage of the DAX functions username() or userprincipalname() within your dataset. You can use them within expressions in Power BI Desktop. When you publish your model, it will be used within the Power BI service.\n\nWithin Power BI Desktop, username() will return a user in the format of DOMAIN\\User and userprincipalname() will return a user in the format of user@contoso.com.\n\nWithin the Power BI service, username() and userprincipalname() will both return the user's User Principal Name (UPN). This looks similar to an email address.\n\nUsing RLS with workspaces in Power BI\n\nIf you publish your Power BI Desktop report to a workspace in the Power BI service, the RLS roles are applied to members who are assigned to the Viewer role in the workspace. Even if Viewers are given Build permissions to the semantic model, RLS still applies. For example, if Viewers with Build permissions use Analyze in Excel, their view of the data is restricted by RLS. Workspace members assigned Admin, Member, or Contributor have edit permission for the semantic model and, therefore, RLS doesnât apply to them. If you want RLS to apply to people in a workspace, you can only assign them the Viewer role. Read more about roles in workspaces.\n\nConsiderations and limitations\n\nYou can see the current limitations for row-level security on cloud models here:\n\nIf you previously defined roles and rules in the Power BI service, you must re-create them in Power BI Desktop.\n\nYou can define RLS only on the semantic models created with Power BI Desktop. If you want to enable RLS for semantic models created with Excel, you must convert your files into Power BI Desktop (PBIX) files first. Learn more.\n\nService principals can't be added to an RLS role. Accordingly, RLS isn't applied for apps using a service principal as the final effective identity.\n\nOnly Import and DirectQuery connections are supported. Live connections to Analysis Services are handled in the on-premises model.\n\nThe Test as role/View as role feature doesn't work for DirectQuery models with single sign-on (SSO) enabled.\n\nThe Test as role/view as role feature shows only reports from semantic models workspace.\n\nThe Test as role/View as role feature doesn't work for paginated reports.\n\nKeep in mind that if a Power BI report references a row with RLS configured then the same message displays as for a deleted or non-existing field. To these users, it looks like the report is broken.\n\nFAQ\n\nQuestion: What if I have previously created roles and rules for a dataset in the Power BI service? Do they still work if I do nothing?\n\nAnswer: No, visuals won't render properly. You have to re-create the roles and rules within Power BI Desktop and then publish to the Power BI service.\n\nQuestion: Can I create these roles for Analysis Services data sources?\n\nAnswer: Yes, if you imported the data into Power BI Desktop. If you're using a live connection, you can't configure RLS within the Power BI service. You define RLS in the Analysis Services model on-premises.\n\nQuestion: Can I use RLS to limit the columns or measures accessible by my users?\n\nAnswer: No, if a user has access to a particular row of data, they can see all the columns of data for that row. To restrict access to columns and column metadata, consider using object-level security.\n\nQuestion: Does RLS let me hide detailed data but give access to data summarized in visuals?\n\nAnswer: No, you secure individual rows of data, but users can always see either the details or the summarized data.\n\nQuestion: My data source already has security roles defined (for example SQL Server roles or SAP BW roles). What's the relationship between these roles and RLS?\n\nAnswer: The answer depends on whether you're importing data or using DirectQuery. If you're importing data into your Power BI dataset, the security roles in your data source aren't used. In this case, you should define RLS to enforce security rules for users who connect in Power BI. If you're using DirectQuery, the security roles in your data source are used. When a user opens a report, Power BI sends a query to the underlying data source, which applies security rules to the data based on the user's credentials.\n\nQuestion: Can a user belong to more than one role?\n\nAnswer: A user can belong to multiple roles, and the roles are additive. For example, if a user belongs to both the \"Sales\" and \"Marketing\" roles, they can see data for both these roles.\n\nRestrict data access with row-level security (RLS) for Power BI Desktop\n\nRow-level security (RLS) guidance in Power BI Desktop\n\nPower BI implementation planning: Report consumer security planning\n\nRLS for Embedded scenarios for ISVs"
    }
}