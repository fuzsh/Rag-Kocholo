{
    "id": "correct_foundationPlace_00072_1",
    "rank": 49,
    "data": {
        "url": "https://dl.acm.org/doi/10.1145/592642.592643",
        "read_more_link": "",
        "language": "en",
        "title": "On type systems for object-oriented database programming languages",
        "top_image": "https://dl.acm.org/cms/asset/69cd84f5-a7df-4085-a408-f7db480538b0/default_cover.jpg",
        "meta_img": "https://dl.acm.org/cms/asset/69cd84f5-a7df-4085-a408-f7db480538b0/default_cover.jpg",
        "images": [
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/acm-dl-logo-white-1ecfb82271e5612e8ca12aa1b1737479.png",
            "https://dl.acm.org/doi/10.1145/specs/products/acm/releasedAssets/images/acm-logo-1-ad466e729c8e2a97780337b76715e5cf.png",
            "https://dl.acm.org/pb-assets/icons/DOs/default-profile-1543932446943.svg",
            "https://dl.acm.org/action/showDoPubAsset?doi=10.1145/contrib-81384595752&format=rel-imgonly&assetId=ozsu06-web.jpg",
            "https://dl.acm.org/pb-assets/icons/DOs/default-profile-1543932446943.svg",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/footer-logo1-45ae33115db81394d8bd25be65853b77.png",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/Default_image_lazy-0687af31f0f1c8d4b7a22b686995ab9b.svg",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/loader-7e60691fbe777356dc81ff6d223a82a6.gif",
            "https://dl.acm.org/pb-assets/icons/DOs/default-profile-1543932446943.svg",
            "https://dl.acm.org/action/showDoPubAsset?doi=10.1145/contrib-81384595752&format=rel-imgonly&assetId=ozsu06-web.jpg",
            "https://dl.acm.org/pb-assets/icons/DOs/default-profile-1543932446943.svg",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/acm-logo-dl-8437178134fce530bc785276fc316cbf.png",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/acm-logo-3-10aed79f3a6c95ddb67053b599f029af.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "OODB",
            "OODBPL",
            "object-oriented database programming language",
            "type checking",
            "typing"
        ],
        "tags": null,
        "authors": [
            "Canada View Profile",
            "Yuri Leontiev",
            "M. Tamer Özsu",
            "Duane Szafron",
            "ÖzsuM. Tamer"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "The concept of an object-oriented database programming language (OODBPL) is appealing\nbecause it has the potential of combining the advantages of object orientation and\ndatabase programming to yield a powerful and universal programming language design.\n...",
        "meta_lang": "en",
        "meta_favicon": "/pb-assets/head-metadata/apple-touch-icon-1574252172393.png",
        "meta_site_name": "ACM Computing Surveys",
        "canonical_link": "https://dl.acm.org/doi/10.1145/592642.592643",
        "text": "Abstract\n\nThe concept of an object-oriented database programming language (OODBPL) is appealing because it has the potential of combining the advantages of object orientation and database programming to yield a powerful and universal programming language design. A uniform and consistent combination of object orientation and database programming, however, is not straightforward. Since one of the main components of an object-oriented programming language is its type system, one of the first problems that arises during an OODBPL design is related to the development of a uniform, consistent, and theoretically sound type system that is sufficiently expressive to satisfy the combined needs of object orientation and database programming.The purpose of this article is to answer two questions: \"What are the requirements that a modern type system for an object-oriented database programming language should satisfy?\" and \"Are there any type systems developed to-date that satisfy these requirements?\". In order to answer the first question, we compile the set of requirements that an OODBPL type system should satisfy. We then use this set of requirements to evaluate more than 30 existing type systems. The result of this extensive analysis shows that while each of the requirements is satisfied by at least one type system, no type system satisfies all of them. It also enables identification of the mechanisms that lie behind the strengths and weaknesses of the current type systems.\n\nReferences\n\n[1]\n\nAgesen, O., Freund, S. N., and Mitchell, J. C. 1997. Adding type parametrization to the Java language. In Proceedings of the OOPSLA'97.\n\n[2]\n\nAgrawal, R. and Gehani, N. H. 1989. ODE (object database and environment): The language and the data model. In Proceedings of the ACM-SIGMOD 1989 International Conference on Management of Data. 36--45.\n\n[3]\n\nAiken, A. and Wimmers, E. L. 1993. Type inclusion constraints and type inference. Tech. Rep. RJ 9454 (83075). IBM Research Division. August.\n\n[4]\n\nAiken, A., Wimmers, E. L., and Lakshman, T. K. 1994. Soft typing with conditional types. In Conference Record of POPL '94, 21st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages. ACM Press, 163--173.\n\n[5]\n\nAlagić, S. 1997. The ODMG object model: Does it make sense? SIGPLAN Not. 32, 10, 253--270.\n\n[6]\n\nAlagić, S. 1999. Type-checking OQL queries in the ODMG type systems. ACM Trans. Datab. Syst. 24, 3 (Sept.), 319--360.\n\n[7]\n\nAlbano, A., Cardelli, L., and Orsini, R. 1985. Galileo: A strongly-typed, interactive conceptual language. ACM Trans. Datab. Syst. 10, 2 (June), 230--260.\n\n[8]\n\nAlbano, A., Ghelli, G., and Orsini, R. 1995. Fibonacci: A programming language for object databases. VLDB J. 4, 403--444.\n\n[9]\n\nApple Computer, Inc. 1994. Dylan Interim Reference Manual. Apple Computer, Inc.\n\n[10]\n\nArmstrong, J., Virding, R., Wikströ;m, C., and Williams, M. 1996. Concurrent Programming in Erlang, 2nd ed. Prentice Hall.\n\n[11]\n\nArnold, K. and Gosling, J. 1996. The Java Language Specification, 4th ed. Addison-Wesley.\n\n[12]\n\nAtkinson, M., Banchilon, F., DeWitt, D., Dittrich, K., Maier, D., and Zdonik, S. 1992. The object-oriented database system manifesto. In Building an Object-Oriented Database System: The Story of O2, F. Banchilon, C. Delobel, and P. Kanellakis, Eds.\n\n[13]\n\nAtkinson, M. and Morrison, R. 1995. Orthogonally persistent object systems. VLDB J. 4, 3, 319--401.\n\n[14]\n\nAtkinson, M. P. and Buneman, O. P. 1987. Types and persistence in database programming languages. ACM Comput. Surv. 19, 2 (June), 105--190.\n\n[15]\n\nBal, R., Balsters, H., de By, R. A., Bosschaart, A., Flokstra, J., Keulen, M. V., Skowronek, J., and Termorshuizen, B. 1993. The TM Manual. Faculty of Computer Science, University of Twente. Version 2.0 revision C. Available electronically. URL: ftp://ftp.cs.utwente.nl/pub/doc/TM.\n\n[16]\n\nBaumgartner, G., Läufer, K., and Russo, V. F. 1996. Interaction of object-oriented design patterns and programming languages. Tech. Rep. CSD-TR-96-020, Deptartment of Computer Sciences, Purdue University.\n\n[17]\n\nBirtwistle, G. M., Dahl, O.-J., Myhrhaug, B., and Nygaard, K. 1979. Simula Begin. Studentlitteratur (Lund, Sweden), Bratt Institute Fuer Neues Lerned (Goch, FRG), Chartwell-Bratt Ltd (Kent, England).\n\n[18]\n\nBlack, A. and Palsberg, J. 1994. Foundations of object-oriented languages. ACM SIGPLAN Not. 29, 3, 3--11. Workshop Report.\n\n[19]\n\nBobrow, D. G., DeMichiel, L. G., Gabriel, R. P., Keene, S. E., Kiczales, G., and Moon, D. A. 1988. Common lisp Object System specification. X3J13 Document 88-002R.\n\n[20]\n\nBourdoncle, F. and Merz, S. 1996a. Primitive subtyping ∨ implicit polymorphism &vdash; object-orientation. In Foundations of Object-Oriented Languages 3. Extended abstract.\n\n[21]\n\nBourdoncle, F. and Merz, S. 1996b. Type checking higher-order polymorphic multi-methods. In Proceedings of the 24th ACM Conference on Principles of Programming Languages (POPL'24).\n\n[22]\n\nBoyland, J. and Castagna, G. 1995. Type-safe compilation of covariant specialization: A practical case. Tech. Rep. UCB/CSD-95-890, University of California, Computer Science Division (EECS), Berkeley, Calif. Nov.\n\n[23]\n\nBoyland, J. and Castagna, G. 1997. Parasitic methods: An implementation of multi-methods in Java. SIGPLAN Not. 32, 10, 66--76. (Proceedings of OOPSLA'97). URL: ftp://ftp.ens.fr/pub/dmi/users/castagna/oopsla97.ps.gz.\n\n[24]\n\nBracha, G. and Griswold, D. 1993. Strongtalk: Typechecking Smalltalk in a production environment. In Proceedings of the ACM Conference on Object-Oriented Programming: Systems, Languages, and Applications.\n\n[25]\n\nBracha, G., Odersky, M., Stoutamire, D., and Wadler, P. 1998a. GJ: Extending the Java programming language with type parameters. Manuscript. Revised August 1998. URL: http://www.cis.unisa.edu.au/&sim;pizza/gi/Documents/.\n\n[26]\n\nBracha, G., Odersky, M., Stoutamire, D., and Wadler, P. 1998b. GJ specification. Manuscript URL: http://www.cis.unisa.edu.au/&sim;pizza/gi/documents/.\n\n[27]\n\nBracha, G., Odersky, M., Stoutamire, D., and Wadler, P. 1998c. Making the future safe for the past: Adding genericity to the Java programming language. In Proceedings of the 13th Annual ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA'98). 183--200.\n\n[28]\n\nBruce, K., Cardelli, L., Castagna, G., The Hopkins Object Group, Leavens, G., and Pierce, B. 1996a. On binary methods. Theory Prac. Obj. Syst. 1, 3, 221--242.\n\n[29]\n\nBruce, K. B., Fiech, A., and Petersen, L. 1996b. Subtyping is not a good \"match\" for object-oriented languages. In Informal Proceedings of the 4th Workshop on Foundations of Object-Oriented Languages (FOOL 4). Contributed talk.\n\n[30]\n\nBruce, K. B., Odersky, M., and Wadler, P. 1998. A statically safe alternative to virtual types. In Proceedings of the 1998 European Conference on Object-Oriented Programming (ECOOP'98).\n\n[31]\n\nBruce, K. B., Schuett, A., and Gent, R. V. 1994. A type-safe polymorphic object-oriented language. Accessible by anonymous FTP. URL: ftp://cs.williams.edu/pub/kim/PolyTOIL.dvi.\n\n[32]\n\nBruce, K. B., Schuett, A., and Gent, R. V. 1995. PolyTOIL: A type-safe polymorphic object-oriented language. In Proceedings of the 9th European Conference on Object-Oriented Programming (ECOOP'95), (Åarhus, Denmark). W. Olthoff, Ed. Lecture Notes in Computer Science, vol. 952. Springer-Verlag, New York. Extended abstract.\n\n[33]\n\nBruce, K. K. 1996. Typing in object-oriented languages: Achieving expressibility and safety. URL: ftp://cs.williams.edu/pub/Kim/Static.ps.\n\n[34]\n\nBuneman, P. and Ohori, A. 1996. Polymorphism and type inference in database programming. ACM Trans. Datab. Syst. 21, 1 (March), 30--76.\n\n[35]\n\nBuneman, P. and Pierce, B. 1999. Union types for semistructured data. Tech. Rep. MS-CIS-99-09, Department of CIS, University of Pennsylvania.\n\n[36]\n\nCardelli, L. 1986. A polymorphic λ-calculus with Type:Type. Tech. Rep. 10, DEC SRC, 130 Lytton Avenue, Palo Alto, CA 94301. May. SRC Research Report.\n\n[37]\n\nCardelli, L. 1988. A semantics of multiple inheritance. Inf. Comput. 76, 138--164.\n\n[38]\n\nCardelli, L. 1989. Typeful programming. In Formal Description of Programming Concepts, E. J. Neuhold and M. Paul, Eds. IFIP State of the Art Reports Series. Springer-Verlag, New York. URL: http://www.luca.demon. co.uk/Bibliography.html.\n\n[39]\n\nCardelli, L. 1993. An implementation of F&lt;:. Tech. Rep. 97, DEC Systems Research Center. February.\n\n[40]\n\nCardelli, L. 1997. Type systems. In The Computer Science and Engineering Handbook, A. B. Tucker, Ed. CRC Press, Chapter 103. URL: http://www.luca.demon.co.uk/Bibliography.html.\n\n[41]\n\nCardelli, L., Martini, S., Mitchell, J. C., and Scedrov, A. 1991. An extension of system F with subtyping. In Proceedings of the International Conference on Theoretical Aspects of Computer Software, T. Ito and A. R. Meyer, Eds. Lecture Notes in Computer Science, vol. 526. Springer-Verlag, New York, pp. 756--770.\n\n[42]\n\nCastagna, G. 1996. Object-Oriented Programming: A Unified Foundation. In Progress in Theoretical Computer Science. Birkaüzer, Boston, Chapter Type Systems for Object-Oriented Programming.\n\n[43]\n\nCastagna, G., Ghelli, G., and Longo, G. 1995. A calculus for overloaded functions with subtyping. Inf. Comput. 117, 1 (Feb.), 115--135.\n\n[44]\n\nCattell, R. G. G., Barry, D., Bartels, D., Berler, M., Eastman, J., Gamerman, S., Jordan, D., Springer, A., Strickland, H., and Wade, D. 1997. The Object Database Standard: ODMG 2.0. Morgan-Kaufmann, Los Altos, Calif.\n\n[45]\n\nChambers, C. 1992. Object-oriented multi-methods in Cecil. In ECOOP '92, European Conference on Object-Oriented Programming, (Utrecht, The Netherlands), O. L. Madsen, Ed. Lecture Notes in Computer Science, vol. 615. Springer-Verlag, New York, pp. 33--56.\n\n[46]\n\nChambers, C. 1993. The Cecil language: Specification and rationale. Tech. Rep. TR 93-03-05. Department of Computer Science and Engineering, FR-35, University of Washington. Mar.\n\n[47]\n\nChambers, C. and Leavens, G. T. 1996. BeCecil, A core object-oriented language with block structure and multimethods: Semantics and typing. Tech. Rep. 96-17. Department of Computer Science, Iowa State University. Dec.\n\n[48]\n\nChambers, C. and Leavens, G. T. 1997. BeCecil, A core object-oriented language with block structure and multimethods: Semantics and typing. In FOOL 4. In Proceedings of the 4th International Workshop on Foundations of Object-Oriented Languages (Paris, France).\n\n[49]\n\nChen, K. and Odersky, M. 1994. A type system for a lambda calculus with assignment. In Proceedings of the Theoretical Aspects of Computer Science (Sendai, Japan). Lecture Notes in Computer Science. Springer-Verlag, New York.\n\n[50]\n\nConnor, R. C. H., McNally, D. J., and Morrison, R. 1991. Subtyping and assignment in database programming languages. In Proceedings of the 3rd International Workshop on Database Programming Languages (Napfilon, Greece).\n\n[51]\n\nDay, M., Gruber, R., Liskov, B., and Myers, A. C. 1995. Subtypes vs where clauses: Constraining parametric polymorphism. SIGPLAN Notices 30, 10 (Oct.), 156--168.\n\n[52]\n\nDrossopoulou, S. and Eisenbach, S. 1997. Java is type safe---probably. In Proceedings of the 11th European Conference on Object Oriented Programming (ECOOP'97).\n\n[53]\n\nEifrig, J., Smith, S., and Trifonov, V. 1995a. Sound polymorphic type inference for objects. SIGPLAN Notices 30, 10 (Oct.), 169--184.\n\n[54]\n\nEifrig, J., Smith, S., and Trifonov, V. 1995b. Type inference for recursively constrained types and its application to OOP. Electronic Notes in Theoretical Computer Science 1. URL: http://www.elsevier.nl/locate/entcs/volume1.html.\n\n[55]\n\nEifrig, J., Smith, S., Trifonov, V., and Zwarico, A. 1995c. An interpretation of typed OOP in a language with state. LISP Symb. Comput. 8, 4, 357--397.\n\n[56]\n\nFisher, K. and Mitchell, J. C. 1996. The development of type systems for object-oriented languages. Theory Pract. Obj. Syst. 1, 3, 189--220. URL: ftp://theory.stanford.edu/pub/jcm/papers/tapos.ps.\n\n[57]\n\nFranz, M. 1997. The programming language Lagoona---A fresh look at object-orientation. Softw---Concepts and Tools 18, 14--26.\n\n[58]\n\nGawecki, A. and Matthes, F. 1996. Integrating subtyping, matching and type quantification: A practical perspective. In Proceedings of the 10th European Conference on Object-Oriented Programming (Linz, Austria). Springer-Verlag, New York.\n\n[59]\n\nGoldberg, A. and Robson, D. 1989. ST-80, The Language. Addison-Wesley, Reading, Mass.\n\n[60]\n\nHarbison, S. P. 1992. Modula-3. Prentice-Hall, Eglewood Cliffs, N.J.\n\n[61]\n\nHauck, F. J. 1993. Towards the implementation of a uniform object model. In Parallel Computer Architectures: Theory, Hardware, Software, and Applications---SFB Colloquium SFB 182 and SFB 342, A. Bode and M. D. Cin, Eds. Lecture Notes in Computer Science, vol. 732. Springer-Verlag, New York, pp. 180--189.\n\n[62]\n\nKempe Software Capital Enterprises 1995. Ada 95 Reference Manual. Kempe Software Capital Enterprises. Available electronically. URL: http://www.adahome.com/rm95.\n\n[63]\n\nKim, W. 1993. Object-oriented database systems: Promises, reality, and future. In Proceedings of the 19th VLDB Conference. 676--687.\n\n[64]\n\nKirby, G. N. C., Connor, R. C. H., Morrison, R., and Stemple, D. 1996. Using reflection to support type-safe evolution in persistent systems. Tech. Rep. CS/96/10. University of St. Andrews.\n\n[65]\n\nKlas, W. and Turau, V. 1992. Persistence in the object-oriented database programming language VML. Tech. Rep. TR-92-045, International Computer Science Institute, 1947 Center St., Suite 600, Berkeley, CA 94704-1198. July.\n\n[66]\n\nLaLonde, W. R. and Pugh, J. 1991. Subclassing &ne; subtyping &ne; is-a. J. Obj. Orient. Prog. 3, 5 (Jan.), 57--62.\n\n[67]\n\nLeavens, G. T. and Millstein, T. D. 1998. Multiple dispatch as dispatch on tuples. In Proceedings of the Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA'98). ACM, New York, pp. 374--387. URL: http://www.cs.washington.edu/homes/todd/papers/oopsla98.ps.\n\n[68]\n\nLécluse, C., Richard, P., and Vélez, F. 1992. O2, an object-oriented data model. In Building an Object-Oriented Database System: The Story of O2, F. Banchilon, C. Delobel, and P. Kanellakis, Eds.\n\n[69]\n\nLeontiev, Y. 1999. Type system for an object-oriented database programming language. Ph.D. dissertation. Department of Computing Science, University of Alberta. Also available as Tech. Rep. TR 99-02.\n\n[70]\n\nLeontiev, Y., Özsu, M. T., and Szafron, D. 1998. On separation between interface, implementation, and representation in object DBMSs. In Proceedings of TOOLS--26'98. Santa Barbara, Calif.\n\n[71]\n\nLitvinov, V. 1998. Constraint-based polymorphism in Cecil: Towards a practical and static type system. In Proceedings of the 1998 Conference on Object-Oriented Programming: Systems, Languages, and Applications (OOPSLA'98).\n\n[72]\n\nLutiy, V. G., Merkov, A. B., Leontiev, Y. V., Gawrilow, E. J., Ivanova, N. A., Iofinova, M. E., Paklin, M. L., and Hodataev, A. K. 1994. DBMS Modula--90K. RAN Data Processing Center, Moscow (In Russian: Sistema Programmirovaniya Baz Dannyh Modula-90K).\n\n[73]\n\nMadsen, O. L., Møller-Pedersen, B., and Nygaard, K. 1993. Object-Oriented Programming in the BETA Programming Language. Addison-Wesley, Reading, Mass.\n\n[74]\n\nMarlow, S. and Wadler, P. 1997. A practical subtyping system for Erlang. In Proceedings of the Second International Conference on Functional Programming (Amsterdam, The Netherlands).\n\n[75]\n\nMatthes, F., Müssig, S., and Schmidt, J. W. 1994. Persistent polymorphic programming in Tycoon: An introduction. FIDE Technical Report Series FIDE/94/106. Department of Computing Sciences, University of Glasgow, Glasgow G128QQ. August.\n\n[76]\n\nMatthes, F. and Schmidt, J. 1991. Bulk types: Built-in or add-on? In Proceedings of the 3rd International Workshop on Database Programming Languages. Morgan-Kaufmann, Los Atlos, Calif.\n\n[77]\n\nMatthes, F. and Schmidt, J. 1992. Definition of the Tycoon languages---A preliminary report. Tech. Rep. FBI-HH-B-160/92, Universität Hamburg. October.\n\n[78]\n\nMeyer, B. 1988. Eiffel---The language. Prentice-Hall.\n\n[79]\n\nMiller, R., Tofte, M., and Harper, R. 1990. The Definition of Standard ML. MIT Press.\n\n[80]\n\nMorrison, R., Brown, F., Connor, R., Cutts, Q., Dearle, A., Kirby, G., and Munro, D. 1996. Napier88 Reference Manual. University of St. Andrews. Release 2.2.1.\n\n[81]\n\nMössenbök, H. and Wirth, N. 1993. The programming language Oberon-2. Manuscript. Institut für Computersysteme, ETH Zürich.\n\n[82]\n\nMyers, A. C., Bank, J. A., and Liskov, B. 1997. Parameterized types for Java. In Proceedings of the 24th ACM Simposium on Principles of Programming Languages (POPL'97).\n\n[83]\n\nOdersky, M. and Läufer, K. 1996. Putting type annotations to work. In Proceedings of the 23rd ACM Symposium on Principles of Programming Languages. 65--67.\n\n[84]\n\nOdersky, M. and Wadler, P. 1997. Pizza into Java: Translating theory into practice. In Proceedings of the 24th ACM Simposium on Principles of Programming Languages (POPL'97).\n\n[85]\n\nOhori, A., Buneman, P., and Breazu-Tannen, V. 1989. Database programming in Machiavelli---a polymorphic language with static type inference. SIGMOD Record 18, 2, 46--57.\n\n[86]\n\nPottier, F. 1998. Type inference in the presence of subtyping: from theory to practice. Ph.D. thesis, Université Paris VII.\n\n[87]\n\nQian, Z. and Krieg-Brueckner, B. 1996. Typed OO functional programming with late binding. In Proceedings of the 10th European Conference on Object-Oriented Programming, P. Cointe, Ed. Lecture Notes in Computer Science, vol. 1098. Springer-Verlag, New York, pp. 48--72.\n\n[88]\n\nRaj, R. K., Tempero, E., Levy, H. M., Black, A. P., Hutchinson, N. C., and Jul, E. 1991. Emerald: A general-purpose programming language. Softw. Pract. Exp. 21, 1 (Jan.), 91--118.\n\n[89]\n\nRehof, J. 1998. The complexity of simple subtyping systems. Ph.D. dissertation, DIKU, Department of Computer Science, University of Copenhagen.\n\n[90]\n\nRichardson, J. E., Carey, M. J., and Schuh, D. T. 1993. The design of the E programming language. ACM Trans. Prog. Lang. Syst. 15, 3 (July), 494--534.\n\n[91]\n\nRoe, P. and Szyperski, C. 1997. Lightweight parametric polymorphism for Oberon. In Proceedings of the Joint Modular Languages Conference.\n\n[92]\n\nSaraswat, V. 1997. Java is not type-safe. Available electronically. URL: http://www.research. att.com/&sim;vj/bug.html\n\n[93]\n\nSchmidt, J. W. and Matthes, F. 1994. The DBPL project: Advances in modular database programming. Inf. Syst. 19, 2, 121--140.\n\n[94]\n\nSequeira, D. 1998. Type inference with bounded quantification. Ph.D. thesis, Department of Computer Science, University of Edinburgh. Also Technical Report ECS--LFCS--98--403.\n\n[95]\n\nShang, D. 1997. Transframe: The Annotated Reference. Software Systems Research Laboratory, Motorola, Inc., Schaumburg, Illinois. Draft 1.4.\n\n[96]\n\nSQL 1999. Database languages---SQL. American National Standard for Information Technology. ANSI/ISO/IEC 9075-1-1999, 9075-2-1999, 9075-3-1999, 9075-4-1999, 9075-5-1999.\n\n[97]\n\nStoutamire, D. and Omohundro, S. 1996. The Sather 1.1 specification. Tech. Rep. TR-96-012, International Computer Science Institute at Berkeley. August.\n\n[98]\n\nStroustrup, B. 1991. The C++ Programming Language. Addison-Wesley.\n\n[99]\n\nTaivalsaari, A. 1996. On the notion of inheritance. ACM Comput. Surv. 28, 3 (Sept.), 439--479.\n\n[100]\n\nThorup, K. K. 1997. Genericity in Java with virtual types. In Proceedings of the 1997 European Conference on Object-Oriented Programming (ECOOP'97).\n\n[101]\n\nTrifonov, V. and Smith, S. 1996. Subtyping constrained types. In Proceedings of the 3rd International Static Analysis Symposium. 349--365. Lecture Notes in Computer Science 1145.\n\n[102]\n\nTsichritzis, D., Nierstrasz, O., and Gibbs, S. 1992. Beyond objects: Objects. Int. J. Intel. Coop. Info. Syst. 1, 1 (Mar.), 43--60.\n\n[103]\n\nW3c 2002. XQuery 1.0 Formal Semantics. W3C. Working Draft 26. URL: http://www.w3.org/ TR/2002/WD-query-semantics-20020326/.\n\n[104]\n\nWirth, N. 1983. Programming in Modula-2, 2nd ed. Springer-Verlag.\n\n[105]\n\nWright, A. K. 1993. Polymorphism for imperative languages without imperative types. Tech. Rep. TR93-200, Department of Computer Science, Rice University. February.\n\nCited By\n\nView all\n\nBlouin AA Type System for Flexible User Interactions HandlingProceedings of the ACM on Human-Computer Interaction10.1145/36602488:EICS(1-27)\n\nLi SXu ZSystem Configuration Design of BIM Object-Oriented Database for Civil EngineeringJournal of Construction Engineering and Management10.1061/(ASCE)CO.1943-7862.0002389148:12\n\nAlami ABahaj MFramework for a complete migration of relational databases to other types of databases(object oriented OO, object-relational OR, XML)2016 IEEE/ACS 13th International Conference of Computer Systems and Applications (AICCSA)10.1109/AICCSA.2016.7945763(1-7)\n\nShow More Cited By\n\nInformation & Contributors\n\nInformation\n\nPublished In\n\n164 pages\n\nISSN:0360-0300\n\nEISSN:1557-7341\n\nDOI:10.1145/592642\n\nIssue’s Table of Contents\n\nCopyright © 2002 ACM.\n\nPublisher\n\nAssociation for Computing Machinery\n\nNew York, NY, United States\n\nPublication History\n\nPublished: 01 December 2002\n\nPublished in CSUR Volume 34, Issue 4\n\nPermissions\n\nRequest permissions for this article.\n\nCheck for updates\n\nAuthor Tags\n\nOODB\n\nOODBPL\n\nobject-oriented database programming language\n\ntype checking\n\ntyping\n\nQualifiers\n\nArticle\n\nContributors\n\nOther Metrics\n\nBibliometrics & Citations\n\nBibliometrics\n\nArticle Metrics\n\n13\n\nTotal Citations\n\nView Citations\n\n3,704\n\nTotal Downloads\n\nDownloads (Last 12 months)25\n\nDownloads (Last 6 weeks)0\n\nOther Metrics\n\nCitations\n\nCited By\n\nView all\n\nBlouin AA Type System for Flexible User Interactions HandlingProceedings of the ACM on Human-Computer Interaction10.1145/36602488:EICS(1-27)\n\nLi SXu ZSystem Configuration Design of BIM Object-Oriented Database for Civil EngineeringJournal of Construction Engineering and Management10.1061/(ASCE)CO.1943-7862.0002389148:12\n\nAlami ABahaj MFramework for a complete migration of relational databases to other types of databases(object oriented OO, object-relational OR, XML)2016 IEEE/ACS 13th International Conference of Computer Systems and Applications (AICCSA)10.1109/AICCSA.2016.7945763(1-7)\n\nGou PTang YResearches on the Object-Oriented Model of Distributed Image DatabaseApplied Mechanics and Materials10.4028/www.scientific.net/AMM.543-547.2184543-547(2184-2187)\n\nGou PTang YStudy on Distributed Image DatabaseApplied Mechanics and Materials10.4028/www.scientific.net/AMM.513-517.754513-517(754-758)\n\nOhori AUeno KChakravarty MHu ZDanvy OMaking standard ML a practical database programming languageProceedings of the 16th ACM SIGPLAN international conference on Functional programming10.1145/2034773.2034815(307-319)\n\nOhori AUeno KMaking standard ML a practical database programming languageACM SIGPLAN Notices10.1145/2034574.203481546:9(307-319)\n\nAlves AEyers DEtzion OGal AZdonik SVincent PA general extension system for event processing languagesProceedings of the 5th ACM international conference on Distributed event-based system10.1145/2002259.2002261(1-10)\n\nMurdaca CAn Object-Relational CompilerProceedings of the 2009 WRI World Congress on Computer Science and Information Engineering - Volume 0710.1109/CSIE.2009.856(438-442)\n\nKirchberg MSchewe KTretiakov AWang BA multi-level architecture for distributed object basesData & Knowledge Engineering10.1016/j.datak.2005.11.00760:1(150-184)\n\nShow More Cited By\n\nView Options\n\nGet Access\n\nLogin options\n\nCheck if you have access through your login credentials or your institution to get full access on this article.\n\nSign in\n\nFull Access\n\nView options\n\nPDF\n\nView or Download as a PDF file.\n\nPDF\n\neReader\n\nView online with eReader.\n\neReader\n\nMedia\n\nFigures\n\nOther\n\nTables\n\nShare\n\nShare\n\nShare this Publication link\n\nCopied!\n\nCopying failed.\n\nShare on social media\n\nAffiliations\n\nYuri Leontiev\n\nIntuit Canada Limited, Edmonton, Alberta, Canada\n\nM. Tamer Özsu\n\nUniversity of Waterloo, Waterloo, Ontario, Canada\n\nDuane Szafron\n\nUniversity of Alberta, Edmonton, Alberta, Canada\n\nRequest permissions Authors Info & Affiliations"
    }
}