{
    "id": "wrong_mix_range_award_00043_0",
    "rank": 63,
    "data": {
        "url": "https://mrgreene09.github.io/computational-neuroscience-textbook/Ch4.html",
        "read_more_link": "",
        "language": "en",
        "title": "Chapter 5 Hodgkin and Huxley Model",
        "top_image": "https://mrgreene09.github.io/images/cover.png",
        "meta_img": "https://mrgreene09.github.io/images/cover.png",
        "images": [
            "https://mrgreene09.github.io/computational-neuroscience-textbook/images/HodgkinHuxley.png",
            "https://mrgreene09.github.io/computational-neuroscience-textbook/images/gating_variables.png",
            "https://mrgreene09.github.io/computational-neuroscience-textbook/images/rateConstants.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Students of NS"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "TBD",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "5.5.2 Coding Exercises:\n\nWelcome to the coding problems for the Hodgkin and Huxley model! These exercises will help you get comfortable with using the Hodgkin and Huxley Model in different settings. To get started, simply run the following cell to create a few custom functions that we will be using for these exercises. A brief description of the functions can be found below:\n\nHHmodel: Calculates and plots the Hodgkin-Huxley model with parameters that we will pass through the function. These parameters include the injected current (Ie), time steps (dt), the final time interval (tFinal), the time at which the stimulus starts (tStimStart), the time as which the stimulus ends (tStimEnd), and the resting potential of the neuron (RestingPotential).\n\nHHmodel_threshold: Determines whether or not an injected current that we pass through the function reaches the required threshold potential to fire. The only parameter of this function is the injected current (Ie).\n\nHHmodel_compare: Compares differences in neuronal activity when injected with different currents. The parameters of this function include the injected currents (Ie) and the resting potential of the neuron (RestingPotential).\n\nNo changes to the code are needed, and there is no expected output at this time, but feel free to look through the code and descriptive comments to see how each aspect of the model is implemented!\n\nProblem 1: Exploring the Model Part 1 What can the model do? The function HHmodel() provides insight by simulating a neuron firing and the behavior of its channel gating variables under various conditions. Simulate an experiment that runs for 500 ms in which a neuron is exposed to a current of 100 \\(nA/mm^2\\) from 100-400 ms. Use time steps of 0.1 ms and set the resting potential to -65 mV.\n\nNote, the code has been started for you - set the variables to their specified values and run the code.\n\nPart 2 Nice work! Does increasing the injected current increasing the firing rate? Using the same code, increase the injected current to 250 \\(nA/mm^2\\) to find out!\n\nPart 3, optional Play around with the parameters to see how changing the neuron’s starting conditions will affect its behavior!\n\nProblem 2: Threshold Potential Part 1 Neurons operate on a “all or nothing” basis, meaning they fire an action potential at full force or do not fire at all. The function HHmodel_threshold() takes different values of injected currents (\\(I_e\\)) and returns the minimum value that elicited an action potential. Using np.arange(), set \\(I_e\\) equal to a vector of increasing voltages to determine the minimum injected current required for the neuron to cross its threshold potential. Hint: first define your external stimulation, \\(I_e\\) then use the HHmodel_threshold() function.\n\nPart 2 The function HHmodel_compare() will plot the behavior of a neuron and its gating variables for two different injected current values. The function’s input is the array \\(I_e\\) that contains two values. Using the external current determined in part one and the preceding integer, run the code to see the difference between just missing and passing the threshold potential!\n\nPart 3 Pretty striking difference right? Now imagine there is a neuron where the resting potential is -60 mV rather than -65. What would happen if all else remained equal? Change the resting potential to -60 mV and rerun the code to find out!(Note: HHmodel_compare() also accepts an input for the resting potential.)\n\nProblem 3: Pick your Poison(s) Part 1 The poisonous dart frog of Central and South America secretes the neurotoxin batrachotoxin (BTX). Exposure to BTX results causes paralysis by irreversibly binding to the sodium channels and preventing them from closing. In the following code, simulate a neuron’s exposure to BTX by setting the relevant variable to the appropriate value. Note: the only code that should be altered has been sectioned off using hashtags.\n\nPart 2 Unfortunately, there is no effective treatment to BTX poisoning. However, in theory, the membrane depolarization can be reversed using tetrodotoxin (TTX), which is produced by the pufferfish, blue ringed octopus, and other deadly creatures. This toxin also causes paralysis. However, unlike BTX, TTX prevents action potentials by binding to voltage-gated sodium channels and preventing the movement of sodium ions into the cell. Revise the above code to simulate exposure to TTX 300 ms after the BTX poisoning.\n\nPart 3 Observe the behavior of the neuron between 600 and 800 ms. While this looks like more ideal behavior than when the neuron was exposed to only BTX, what should the behavior of the neuron be if neither poison had been administered? (Note, while this is a conceptual question, feel free to alter the code to see what should occur)."
    }
}