{
    "id": "dbpedia_2920_0",
    "rank": 74,
    "data": {
        "url": "https://en-academic.com/dic.nsf/enwiki/7650124",
        "read_more_link": "",
        "language": "en",
        "title": "Socketcan",
        "top_image": "https://en-academic.com/images/Logo_social_en.png?3",
        "meta_img": "https://en-academic.com/images/Logo_social_en.png?3",
        "images": [
            "https://en-academic.com/images/Logo_en.png",
            "https://en-academic.com/images/Logo_h_en.png",
            "https://mc.yandex.ru/watch/70309897",
            "https://b.scorecardresearch.com/p?c1=2&c2=23600742&cv=2.0&cj=1"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "is a set of open source CAN drivers and a networking stack contributed by Volkswagen Research to the Linux kernel. Formerly known as Low Level CAN Framework (LLCF).Established CAN drivers are based on the model of character devices. Typically&#8230;",
        "meta_lang": "en",
        "meta_favicon": "https://en-academic.com/favicon.ico",
        "meta_site_name": "Academic Dictionaries and Encyclopedias",
        "canonical_link": "https://en-academic.com/dic.nsf/enwiki/7650124",
        "text": "SocketCAN is a set of open source CAN drivers and a networking stack contributed by Volkswagen Research to the Linux kernel. Formerly known as \"Low Level CAN Framework\" (LLCF).\n\nEstablished CAN drivers are based on the model of character devices. Typically they only allow sending to and receiving from the CAN controller. Most of the implementations for this device class only allow a single process on the device which means that all other processes are blocked in the meantime as known from accessing a device via the serial interface. The SocketCAN concept on the other hand uses the model of network devices, which allows multiple applications to access to one CAN device simultanously. Equally single application are able to access multiple CAN networks in parallel.\n\nThe SocketCAN concept introduces a new protocol family PF_CAN that coexists with other protocol families like PF_INET for the Internet Protocol. The communication with the CAN bus is done analogue to the use of the Internet Protocol via Sockets. Fundamental components of SocketCAN are the network device drivers for different CAN controllers and the implementation of the CAN protocol family. The protocol family PF_CAN provide the structures to enable different protocols on the bus: Raw sockets for direct CAN communication and transport protocols for point-to-point connections. Moreover the broadcast manager which is part of the CAN protocol family provides functions e.g. for sending CAN messages periodically or realize complex message filters.\n\nPatches about CAN were added in the 2.6.25 Linux Kernel but there are still some missing parts like controller drivers.\n\nExternal links"
    }
}