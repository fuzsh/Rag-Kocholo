{
    "id": "dbpedia_3820_3",
    "rank": 37,
    "data": {
        "url": "https://docs.quadrant.io/quadrant-geohash-algorithm",
        "read_more_link": "",
        "language": "en",
        "title": "Quadrant Geohash Algorithms",
        "top_image": "https://docs.quadrant.io/hubfs/Screenshot%202021-06-16%20at%2012-52-52%20PM-png.png",
        "meta_img": "",
        "images": [
            "https://docs.quadrant.io/hs-fs/hubfs/Quadrant%20-%20An%20Appen%20Company/Quadrant%20white%20without%20Q%20High%20res.png?width=440&height=89&name=Quadrant%20white%20without%20Q%20High%20res.png",
            "https://docs.quadrant.io/hubfs/Screenshot%202021-06-16%20at%2012-52-52%20PM-png.png",
            "https://docs.quadrant.io/hs-fs/hubfs/image-24.png?width=646&name=image-24.png",
            "https://docs.quadrant.io/hs-fs/hubfs/blob-4.jpeg?width=641&name=blob-4.jpeg",
            "https://docs.quadrant.io/hs-fs/hubfs/blob-10.png?width=510&name=blob-10.png",
            "https://docs.quadrant.io/hs-fs/hubfs/Geohash%20without%20Filtering.jpg?width=521&name=Geohash%20without%20Filtering.jpg",
            "https://docs.quadrant.io/hs-fs/hubfs/Geohash%20with%20filtering.jpg?width=524&name=Geohash%20with%20filtering.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Quadrant Global Pte Ltd"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Geohash is one of the convenient ways of expressing a location (anywhere in the world) using alphanumeric string.",
        "meta_lang": "en",
        "meta_favicon": "https://docs.quadrant.io/hubfs/Quadrant_Inverse_Q.png",
        "meta_site_name": "",
        "canonical_link": "https://docs.quadrant.io/quadrant-geohash-algorithm",
        "text": "GEOHASH OVERVIEW\n\nAt Quadrant we constantly strive to help our partners and customers maximise the benefits of location data they procure from us. We include Geohash as a data field to our location datasets which is a standard method to assess the movement of a device (using the common Geohash prefix associated with all sightings). But what is Geohash? What value does it add? This guide will answer FAQs about Geohash, elaborate on how to run simple Geohash queries, and explain how Geohash benefits your business.\n\nOur data engineering team has developed proprietary algorithms for data cleaning and deduplication, ensuring that we deliver high-quality and reliable data. We also host a wide variety of potent, pre-configured Artificial Intelligence (AI) algorithms developed by an in-house data science team, that can help you use location data in an intuitive, fast and efficient way. Quadrant algorithms are tools to assist partners and customers perform faster analysis, discover hidden patterns, and gain actionable insights with geospatial data. These models are based on the most common use cases like geofencing of location data and populating with nearest Points-of-Interest (POI).\n\nWHAT IS A GEOHASH?\n\nGeohash is a geocoding method used to encode geographic coordinates (latitude and longitude) into an alphanumeric string. By dividing a larger region into grids we can delineate an area on a map, which is called a cell, with varying resolutions.\n\nGeohash is one of the convenient ways of expressing a location (anywhere in the world) using an alphanumeric string. Geohash is a unique string that is derived by encoding/reducing the geographic coordinates (latitude and longitude) into a short string of digits and letters. Precision is a number between 1 and 12 that specifies the precision (i.e., number of characters) of the Geohash. Each additional character of the Geohash adds precision to your location. Geohashing can be used for various analyses like spatial indexing, spatial binning, proximity searches, location searching, creating unique place identifiers, etc.\n\nImagine the world is divided into a grid with 32 cells. The first character in a Geohash identifies the initial location as one of the 32 cells. This cell will also contain 32 cells, and each one of these will contain 32 cells (and so on repeatedly). Adding characters to the Geohash sub-divides a cell, effectively zooming into a larger area. The longer the string, the more précised the location. A Geohash string could look like this - qfb9c3mw8hte.\n\nExample of Geohash representation\n\nLatitude\n\n1.320527\n\nLongitude\n\n103.81726\n\nPrecision\n\n9\n\nGeohash\n\nw21zd2mkt\n\nKey Features\n\n- Express any location on the surface of the Earth using an alphanumeric string.\n\n- Alphanumeric strings are made up of characters including numbers 0-9 and letters a-z.\n\n- The Earth is split into 32 rectangles and each section is assigned a character.\n\n- Each rectangle is then split into 32 sub rectangles of its own and assigned a character.\n\n- The same operation is repeated on every new rectangle adding more characters.\n\n- The longer the string, the smaller the rectangle & higher the précision (max 12 characters).\n\nHOW EFFICIENT IS A GEOHASH?\n\nGeohash allows for significantly faster geofencing than conventional querying – minutes instead of hours or even days. Geohash provides a multitude of efficiencies from different perspectives:\n\nFaster Querying – Querying for regions or sub-regions take significantly less time to complete.\n\nReduce Input Data Load – To input data in your algorithm, you only take the necessary data. For e.g. if you want to understand behaviour of people in Kuala Lumpur, you do not need to key in the whole of Malaysia but only the points within Kuala Lumpur, which can be found quickly by using the Geohash.\n\nCost-Effective – If you run queries on cloud services like AWS or GCP, you will be charged based on the data scanned. The Geohash scans less data, reducing the charges incurred, provided data is partitioned in an appropriate manner.\n\nEase of use - These algorithms and models need minimal configuring. Users can set up and run them within a few minutes.\n\nActionable Information - The output derived from these algorithms and models will provide actionable information for your use case, almost instantly.\n\nUp to Date Algorithms and Models - These algorithms and models were developed to solve real-world needs and will need updating to reflect the latest industry needs.\n\nTo demonstrate how Geohash helps derive geospatial intelligence faster, we did a trial analysis of our own with a specific category of Points-of-Interest (POI). We geofenced 2.4 million restaurants in APAC using one Athena query. Using Geohash it took us 4 minutes to execute this query as opposed to 5 hours with 8 parallel queries for the same data (without Geohash).\n\nENCODING THE GEOHASH\n\nLooking at the image below, we represent Geohash by splitting the world into recursive grids.\n\nImage: World Map with one layer of Geohash\n\nNext, we look at how Geohash works when applying a second layer to split the recursive grids further.\n\nImage: World Map with 2 layers of Geohash\n\nThe grids above are represented by strings and numbers. The top-most grid is represented by 1 character, and if you choose a second-level grid within a grid, it is represented by appending another character and so on. As you 'zoom' into each grid, your grids become smaller, and the length of your geohash increases.\n\nGeohash ranges from 1 to 12 characters as shown in the table below:\n\nGeoHash length\n\nGrid Area width x height\n\n1\n\n≤ 5,000km X 5,000 Km\n\n2\n\n≤ 1,250km X 625km\n\n3\n\n≤ 156km X 156km 4 ≤ 39.1km X 19.5km 5 ≤ 4.89km X 4.89km 6 ≤ 1.22km X 0.61km 7 ≤ 153m X 153m 8 ≤ 38.2m X 19.1m 9 ≤ 4.77m X 4.77m 10 ≤ 1.19m X 0.596m 11 ≤ 149mm X 149mm 12 ≤ 37.2mm X 18.6mm\n\nNote that the maximum level of geohash precision is 12 and it represents a tile of 3.7 cm * 1.9 cm. So, finding a location can be very efficient with Geohash.\n\nTherefore, the benefit of geohash is that a geo-coordinate (latitude and longitude) can be encoded to a Geohash (string) which in turn can provide a lot of operational efficiency benefits more of which are explained below.\n\nHow do we do a Geohash query?\n\nThere are lots of libraries available based on your programming language that can be used to create Geohash.\n\nUse Case: How you can execute a Geohash query\n\nObjective: To find people in Singapore Botanical Gardens\n\nMethodology: The Singapore Botanical Gardens could be encapsulated within the geohashes w21zd2, w21z6r, w21z6q, w21z6m. It includes some regions out of the botanical gardens but let’s assume you will use a point-in-polygon algorithm to remove the points outside the botanical garden.\n\nImage: Singapore Botanical Gardens with Geohash\n\nThe following steps are done to retrieve points in Singapore Botanical Gardens:\n\nStep 1: Using the query below, you will first filter out the points within the 4 Geohashes mentioned above (w21zd2, w21z6r, w21z6q, w21z6m)\n\nSELECT * from input_data where country = 'SG' and substr(geohash,1,6) IN ('w21zd2', 'w21z6r', 'w21z6q', 'w21z6m')\n\nAfter running the above query, you now have the data points from the 4 Geohashes,\n\nImage: Singapore Botanical Gardens with Data Points from 4 Geohashes\n\nStep 2: Having created a smaller dataset based on the 4 Geohashes, you can refine further by taking these data points and inputting them into your algorithm (e.g. circle or polygon query) to get the points specifically within the Singapore Botanical Gardens.\n\nImage: Data Points seen within Singapore Botanical Gardens after refining\n\nNote: All data provided by Quadrant to our clients is based on Geohash, and Geohash is a standard attribute provided within our data feeds. We hope this document helps you with your Geohash queries, if you need further information, contact us at support@quadrant.io\n\nOur online suite of quality metrics provides you with access to an overview prior to running a full evaluation."
    }
}