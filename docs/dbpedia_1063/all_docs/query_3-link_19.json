{
    "id": "dbpedia_1063_3",
    "rank": 19,
    "data": {
        "url": "https://www.academia.edu/28716661/Portable_Device_Converting_Braille_and_Text_Document_to_Speech_Output_Using_Raspberry_Pi",
        "read_more_link": "",
        "language": "en",
        "title": "Portable Device Converting Braille and Text Document to Speech Output Using Raspberry Pi",
        "top_image": "http://a.academia-assets.com/images/open-graph-icons/fb-paper.gif",
        "meta_img": "http://a.academia-assets.com/images/open-graph-icons/fb-paper.gif",
        "images": [
            "https://a.academia-assets.com/images/academia-logo-redesign-2015-A.svg",
            "https://a.academia-assets.com/images/academia-logo-redesign-2015.svg",
            "https://a.academia-assets.com/images/single_work_splash/adobe.icon.svg",
            "https://0.academia-photos.com/attachment_thumbnails/49122438/mini_magick20190201-26838-1q1auz.png?1549053996",
            "https://0.academia-photos.com/373089/115087/21486418/s65_ajantha.devi.jpg",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loaders/paper-load.gif",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Ajantha  devi",
            "universiyofmadras.academia.edu"
        ],
        "publish_date": "2016-09-26T00:00:00",
        "summary": "",
        "meta_description": "Optical Braille Recognition and Optical Character Recognition is used to digitize Braille script and Text document that have been produced with non-computerized system. Digitizing Braille documents and Text documents also helps reduce storage space.",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://www.academia.edu/28716661/Portable_Device_Converting_Braille_and_Text_Document_to_Speech_Output_Using_Raspberry_Pi",
        "text": "Optical Braille recognition is used to digitize and reproduce texts that have been produced with non-computerized systems, such as with Braille typewriters. Digitizing Braille texts also helps reduce storage space, as Braille texts take up much more space than their natural language counterparts. Editing and Reprinting of Braille document that were embossed on paper are time consuming and labour intensive. Optical Braille recognition is also useful for people who cannot read Braille, but need to access the content of Braille documents. This paper is on Methodology of a camera based assistive device that can be used by people to read Braille document. The framework is on implementing image capturing technique in an embedded system based on Raspberry Pi board.\n\nOptical Character recognition is used to digitize and reproduce texts that have been produced with non-computerized system. Digitizing texts also helps reduce storage space. Editing and Reprinting of Text document that were printed on paper are time consuming and labour intensive. Optical Character recognition is also useful for visually impaired people who cannot read Text document, but need to access the content of the Text documents. This paper is on Methodology of a camera based assistive device that can be used by people to read Tamil Text document. The framework is on implementing image capturing technique in an embedded system based on Raspberry Pi board\n\nOptical Character recognition is used to digitize and reproduce texts that have been produced with non-computerized system. Digitizing texts also helps reduce storage space. Editing and Reprinting of Text document that were printed on paper are time consuming and labour intensive. Optical Character recognition is also useful for visually impaired people who cannot read Text document, but need to access the content of the Text documents. This paper is on Methodology of a camera based assistive device that can be used by people to read Tamil Text document. The framework is on implementing image capturing technique in an embedded system based on Raspberry Pi board\n\nABSTRACT Optical Character recognition is used to digitize and reproduce texts that have been produced with non-computerized system. Digitizing texts also helps reduce storage space. Editing and Reprinting of Text document that were printed on paper are time consuming and labour intensive. Optical Character recognition is also useful for visually impaired people who cannot read Text document, but need to access the content of the Text documents. This paper is on Methodology of a camera based assistive device that can be used by people to read Tamil Text document. The framework is on implementing image capturing technique in an embedded system based on Raspberry Pi board Keywords:- Embedded System; Optical Character Recognition; image capturing; Tamil Text; Raspberry Pi board.\n\nOptical Character Recognition (OCR) is the process of identification of the printed text using photoelectric devices and computer software. It converts the inscribed text on the stones into machine encoded format. OCR is widely used in machine learning process like cognitive computing, machine translation, text to speech conversion and text mining.OCR is mainly used in the research fields like Character Recognition, Artificial Intelligence and Computer Vision. In this research, the recognition process is done using OCR, the inscribed character is processed using Raspberry Pi device on which it recognizes characters using Artificial Neural Network. This work mainly focuses on the recognition of ancient Tamil characters inscribed on stones to modern Tamil characters belong to 9th and 12th century characters. The input image is subjected to gray scale conversion process and enhanced using adaptive thresholding process. The output image is subjected to thinning process to reduce the pixel size of the image. Then the characters are classified using Artificial Neural Network Architecture and the classified characters are mapped to modern Tamil character using Unicode. The Artificial Neural Network has input layer, hidden layer of 15 neurons and output layer of 1 neuron to classify the characters. The accuracy of the constructed system for the recognition of epigraphical inscriptions is calculated. The above process is carried out in raspbian environment using python process."
    }
}