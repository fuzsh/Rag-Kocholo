{
    "id": "dbpedia_8301_2",
    "rank": 72,
    "data": {
        "url": "https://www.meritdata-tech.com/resources/whitepaper/digital-engineering-solutions/chronos-fault-tolerant-distributed-scheduler-apache-mesos/",
        "read_more_link": "",
        "language": "en",
        "title": "Tolerant and Distributed Scheduler That Runs on Apache Mesos",
        "top_image": "https://www.meritdata-tech.com/wp-content/uploads/2021/09/Chronos.jpg",
        "meta_img": "https://www.meritdata-tech.com/wp-content/uploads/2021/09/Chronos.jpg",
        "images": [
            "https://www.meritdata-tech.com/wp-content/uploads/2021/08/merit-logo-grey-e1629973432289.png",
            "https://www.meritdata-tech.com/wp-content/uploads/2021/09/Chronos-300x150.jpg",
            "https://www.meritdata-tech.com/wp-content/themes/mg2021/img/merit-footer-logo.png",
            "https://www.meritdata-tech.com/wp-content/themes/mg2021/img/Facebook_footer.png",
            "https://www.meritdata-tech.com/wp-content/themes/mg2021/img/Twitter_footer.png",
            "https://www.meritdata-tech.com/wp-content/themes/mg2021/img/LinkedIN_footer.png",
            "https://www.meritdata-tech.com/wp-content/themes/mg2021/img/Instagram_footer.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Chandani Naik"
        ],
        "publish_date": "2021-07-27T06:50:00+00:00",
        "summary": "",
        "meta_description": "Why is Chronos an ideal replacement for Chron? Chronos is an Apache Mesos scheduler that is ideal for running schedule and dependency-based jobs in datacenter and cloud environments.",
        "meta_lang": "en",
        "meta_favicon": "https://www.meritdata-tech.com/wp-content/uploads/2023/02/favicon-32x32-1.png",
        "meta_site_name": "Merit Data Tech",
        "canonical_link": "https://www.meritdata-tech.com/resources/whitepaper/digital-engineering-solutions/chronos-fault-tolerant-distributed-scheduler-apache-mesos/",
        "text": "Key Highlights:\n\nThe Apache Mesos kernel runs on every computer resource and is designed to provide applications with APIs for scheduling and resource management\n\nIt works with a range of applications such as Hadoop, Spark, Kafka, Elasticsearch\n\nChronos was built to be a fault-tolerant and distributed job scheduler on top of Mesos\n\nAutomated job scheduling is a critical process in datacenter and cloud environments\n\nThe increase in data volume has led to an expansion in the IT infrastructure used by enterprises. From a single Mainframe system, today businesses need an array of servers, databases, and operating systems, sometimes a separate one for each department, built on various scripting languages such as Java or Python. As a result, companies now cannot get by with one job scheduler running on one machine and so end up taking a fragmented approach with different schedulers and custom scripts for different systems.\n\nWhile this may seem like a natural progression, the truth is that — the more complex the workflow, the more difficult scheduling can become.\n\nOften, IT teams try to build their own algorithms to handle this complexity, but this can be challenging and better handled with automation. Distributed schedulers can enable reliable scheduling and automation of workloads across silos and multiple specialized servers.\n\nThe Benefits for a Distributed System\n\nA distributed scheduling system is more fault-tolerant than a traditional job scheduler. A traditional scheduler is usually installed on the execution machine or communicates with one execution machine.\n\nAs a result, if one machine goes down,critical processes or jobs are disrupted. Whereas, in the case of a distributed system, when a system goes down, the scheduler simply routes the affected jobs to available machines.\n\nThere can be three types of distributed environments:\n\nCentralized, where a central node distributes and orchestrates jobs to worker or execution nodes\n\nDecentralized, where multiple central nodes work with their own subset of the system\n\nTiered, where there is a node for the scheduling software, one where the workload is executed and one for database access\n\nOften, distributed scheduling systems are decentralized and open-source options such as cron (Linux/UNIX) or Apache Mesos are used to manage it. The cron daemon (crond) was traditionally used in the Linux operating system for the time-based execution of commands or scripts.\n\nChronos replaces cron in the Mesos distributed systems kernel.\n\nChronos is a popular, open-source Mesos framework, developed by Airbnb, to manage its complex data analysis pipelines.\n\nSome of the key functions were to:\n\nMake it highly available\n\nAutomatically retry when there is a job failure\n\nImprove flexibility\n\nSchedule commands or scripts\n\nUse built-in containerizers in Mesos\n\nRead about other advanced tools recommended by Merit’s data engineering experts for powering and optimising your BI Stack.\n\nChronos: Features\n\nChronos is a distributed and fault-tolerant scheduler that runs on top of Apache Mesos and helps with the following:\n\nEnables orchestration of jobs\n\nEnables the use of Mesos as a job executor\n\nFacilitates interactions with Hadoop\n\nDefines triggers when a job execution is complete\n\nSupports dependency chains of any length\n\nChronos allows the creation of standalone schedule-based jobs easily and reliably. You can also specify the schedule and resources offered up by the Mesos slaves to complete complex dependency-based jobs and pipelines. Its out-of-the-box support helps to run commands in Linux control groups (cgroups) and Docker containers and ensures that time-based jobs are running as per the schedule and efficiently using datacenter resources.\n\nChronos not only supports custom Mesos executors but also the default command executor.\n\nJobs can be scheduled using ISO8601 repeating interval notation for greater flexibility.\n\nChronos can be made to interact with systems such as Hadoop whether it is installed on the Mesos slaves on which the execution happens or not. Transferring and executing files on a remote machine in the background is allowed by included wrapper scripts and Chronos job completion (or failure) is notified by asynchronous callbacks.\n\nHow Chronos Works\n\nThe Chronos workflow looks something like this:\n\nReads all job state(s) from the state store such as Zookeeper\n\nThe jobs are then registered in the scheduler and loaded into the job graph from where it is tracked for dependencies\n\nJobs are separated into a list of those which should be run at the current time (based on the clock of the host machine), and those which should not be run\n\nThe jobs in the list are queued and launched when a sufficient offer becomes available\n\nThe scheduler sleeps till the next job, for which the process begins from step 1 again\n\nThe Benefits and Limitations of Chronos\n\nOne of the key advantages of Chronos is that it enables writing job metrics to Cassandra for further analysis, validation, and party favors. Notifications can be sent to various endpoints such as email, Slack, and the like. The metrics can be exported to Graphite and so on.\n\nBut keep in mind that Chronos cannot magically solve all distributed computing problems, cannot guarantee precise scheduling, clock synchronization or that the jobs run as planned.\n\nSolving some of these challenges require Chronos 2.3.0 and Mesos 0.21.0, which make it easy to schedule Docker containers to run ETL, batch and analytics applications on top of Apache Mesos. A graphical user interface or an expressive REST API can be used to create the jobs.\n\nContainerizing job launches using Chronos simplifies the distribution of job processing without the need for manual setup on the cluster nodes. A dependency graph between scheduled jobs is also enabled so that jobs depending on the output of previous jobs get triggered only after that job is successfully executed.\n\nAbout Merit Group\n\nMerit Data and Technology Ltd. has over 15 years of experience in business intelligence and software development, developing applications for some of the world’s leading brands.\n\nOur offshore data engineers, software developers and testing engineers work closely with product and program managers at client companies to build applications that meet all functional and performance requirements.\n\nMerit Group is also a trusted technology partner for some of the world’s leading B2B intelligence companies like Wilmington, Dow Jones, Glenigan, and Haymarket. Our data and engineering teams work closely with our clients to build data products and business intelligence tools. Our work directly impacts business growth by helping our clients to identify high-growth opportunities.\n\nMerit has deep expertise and experience in various technologies including Microsoft.net, Perl, Python, Oracle, PHP, Hadoop, Salesforce.com, Tableau, ASP.net, Microsoft SQL Server, and many more.\n\nAs businesses race towards transformation by adopting digital solutions, we help increase their efficiency and implement solutions such as a Chronos distributed scheduling system to automate the job distribution process."
    }
}