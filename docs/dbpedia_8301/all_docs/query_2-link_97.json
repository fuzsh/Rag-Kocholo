{
    "id": "dbpedia_8301_2",
    "rank": 97,
    "data": {
        "url": "https://www.everand.com/book/511816981/Mesos-in-Action",
        "read_more_link": "",
        "language": "en",
        "title": "Mesos in Action by Roger Ignazio (Ebook)",
        "top_image": "https://imgv2-1-f.scribdassets.com/img/word_document/511816981/original/2334604848/1724011111?v=1",
        "meta_img": "https://imgv2-1-f.scribdassets.com/img/word_document/511816981/original/2334604848/1724011111?v=1",
        "images": [
            "https://s-f.scribdassets.com/webpack/assets/images/content_preview/everand_subscription_banner/evarand_eng_desktop_1x.f0d8b73f.png",
            "https://imgv2-1-f.scribdassets.com/img/audiobook_square/343251988/76x76/0f1dc311ad/1723502446?v=1",
            "https://imgv2-1-f.scribdassets.com/img/audiobook_square/402593935/76x76/075dbb7706/1723502514?v=1",
            "https://imgv2-1-f.scribdassets.com/img/audiobook_square/447006286/76x76/0a2e6c41c6/1723651919?v=1",
            "https://imgv2-2-f.scribdassets.com/img/audiobook_square/449543229/76x76/e72e908610/1723591651?v=1",
            "https://imgv2-2-f.scribdassets.com/img/audiobook_square/459116359/76x76/03996619e3/1723502346?v=1",
            "https://imgv2-2-f.scribdassets.com/img/audiobook_square/386388298/76x76/a03ad7d128/1723652086?v=1",
            "https://imgv2-1-f.scribdassets.com/img/audiobook_square/331780739/76x76/62ab25bbd7/1723651862?v=1",
            "https://imgv2-1-f.scribdassets.com/img/word_document/282487335/76x76/28f80f1a99/1723651416?v=1"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Roger Ignazio"
        ],
        "publish_date": "2016-05-02T00:00:00",
        "summary": "",
        "meta_description": "Read Mesos in Action by Roger Ignazio with a free trial. Read millions of eBooks and audiobooks on the web, iPad, iPhone and Android.",
        "meta_lang": "en",
        "meta_favicon": "https://s-f.scribdassets.com/everand.ico?19d484716?v=5",
        "meta_site_name": "Everand",
        "canonical_link": "https://www.everand.com/book/511816981/Mesos-in-Action",
        "text": "Copyright\n\nFor online information and ordering of this and other Manning books, please visit www.manning.com. The publisher offers discounts on this book when ordered in quantity. For more information, please contact\n\nSpecial Sales Department\n\nManning Publications Co.\n\n20 Baldwin Road\n\nPO Box 761\n\nShelter Island, NY 11964\n\nEmail:\n\norders@manning.com\n\n©2016 by Manning Publications Co. All rights reserved.\n\nNo part of this publication may be reproduced, stored in a retrieval system, or transmitted, in any form or by means electronic, mechanical, photocopying, or otherwise, without prior written permission of the publisher.\n\nMany of the designations used by manufacturers and sellers to distinguish their products are claimed as trademarks. Where those designations appear in the book, and Manning Publications was aware of a trademark claim, the designations have been printed in initial caps or all caps.\n\nRecognizing the importance of preserving what has been written, it is Manning’s policy to have the books we publish printed on acid-free paper, and we exert our best efforts to that end. Recognizing also our responsibility to conserve the resources of our planet, Manning books are printed on paper that is at least 15 percent recycled and processed without the use of elemental chlorine.\n\nDevelopment editor: Cynthia Kane\n\nTechnical development editor: Jerry Kuch\n\nCopyeditor: Sharon Wilkey\n\nProofreader: Melody Dolab\n\nTechnical proofreaders: Chris Schaefer, Yogesh Poojari\n\nTypesetter: Dennis Dalinnik\n\nCover designer: Marija Tudor\n\nISBN: 9781617292927\n\nPrinted in the United States of America\n\n1 2 3 4 5 6 7 8 9 10 – EBM – 21 20 19 18 17 16\n\nDedication\n\nFor Sarah\n\nBrief Table of Contents\n\nCopyright\n\nBrief Table of Contents\n\nTable of Contents\n\nForeword\n\nPreface\n\nAcknowledgements\n\nAbout this Book\n\nAbout the Author\n\nAbout the Cover Illustration\n\n1. Hello, Mesos\n\nChapter 1. Introducing Mesos\n\nChapter 2. Managing datacenter resources with Mesos\n\n2. Core Mesos\n\nChapter 3. Setting up Mesos\n\nChapter 4. Mesos fundamentals\n\nChapter 5. Logging and debugging\n\nChapter 6. Mesos in production\n\n3. Running on Mesos\n\nChapter 7. Deploying applications with Marathon\n\nChapter 8. Managing scheduled tasks with Chronos\n\nChapter 9. Deploying applications and managing scheduled tasks with Aurora\n\nChapter 10. Developing a framework\n\nAppendix A. Case study: Mesosphere DCOS, an enterprise Mesos distribution\n\nAppendix B. List of Mesos frameworks and tools\n\nIndex\n\nList of Figures\n\nList of Tables\n\nList of Listings\n\nTable of Contents\n\nCopyright\n\nBrief Table of Contents\n\nTable of Contents\n\nForeword\n\nPreface\n\nAcknowledgements\n\nAbout this Book\n\nAbout the Author\n\nAbout the Cover Illustration\n\n1. Hello, Mesos\n\nChapter 1. Introducing Mesos\n\n1.1. Meet Mesos\n\n1.1.1. Understanding how it works\n\n1.1.2. Comparing virtual machines and containers\n\n1.1.3. Knowing when (and why) to use Mesos\n\n1.2. Why we need to rethink the datacenter\n\n1.2.1. Partitioning of resources\n\n1.2.2. Deploying applications\n\n1.3. The Mesos distributed architecture\n\n1.3.1. Masters\n\n1.3.2. Slaves\n\n1.3.3. Frameworks\n\n1.4. Summary\n\nChapter 2. Managing datacenter resources with Mesos\n\n2.1. A brief introduction to Spark\n\n2.1.1. Spark on a standalone cluster\n\n2.1.2. Spark on Mesos\n\n2.2. Running a Spark job on Mesos\n\n2.2.1. Finding prime numbers in a set\n\n2.2.2. Getting and packaging up the code\n\n2.2.3. Submitting the job\n\n2.2.4. Observing the output\n\n2.3. Exploring further\n\n2.3.1. Mesos UI\n\n2.3.2. Spark UI\n\n2.4. Summary\n\n2. Core Mesos\n\nChapter 3. Setting up Mesos\n\n3.1. Deploying Mesos\n\n3.1.1. Mesos cluster components\n\n3.1.2. Considerations for a development environment\n\n3.1.3. Considerations for a production environment\n\n3.2. Installing Mesos and ZooKeeper\n\n3.2.1. Installing from packages\n\n3.2.2. Compiling and installing from source\n\n3.3. Configuring Mesos and ZooKeeper\n\n3.3.1. ZooKeeper configuration\n\n3.3.2. Mesos configuration\n\n3.4. Installing and configuring Docker\n\n3.4.1. Installation\n\n3.4.2. Configuration\n\n3.4.3. Configuring Mesos slaves for Docker\n\n3.5. Upgrading Mesos\n\n3.5.1. Upgrading Mesos masters\n\n3.5.2. Upgrading Mesos slaves\n\n3.6. Summary\n\nChapter 4. Mesos fundamentals\n\n4.1. Scheduling and allocating datacenter resources\n\n4.1.1. Understanding resource scheduling\n\n4.1.2. Understanding resource allocation\n\n4.1.3. Customizing Mesos slave resources and attributes\n\n4.2. Isolating resources with containers\n\n4.2.1. Isolating and monitoring CPU, memory, and disk\n\n4.2.2. Network monitoring and rate limiting\n\n4.3. Understanding fault tolerance and high availability\n\n4.3.1. Fault tolerance\n\n4.3.2. High availability\n\n4.3.3. Handling failures and upgrades\n\n4.4. Summary\n\nChapter 5. Logging and debugging\n\n5.1. Understanding and configuring Mesos logging\n\n5.1.1. Locating and interpreting log files\n\n5.1.2. Configuring logging\n\n5.2. Debugging a Mesos cluster and its tasks\n\n5.2.1. Using the Mesos web interface\n\n5.2.2. Using the built-in command-line tools\n\n5.2.3. Using Mesosphere’s mesos-cli tool\n\n5.3. Summary\n\nChapter 6. Mesos in production\n\n6.1. Monitoring the Mesos and ZooKeeper clusters\n\n6.1.1. Monitoring the Mesos master\n\n6.1.2. Monitoring the Mesos slave\n\n6.1.3. Monitoring ZooKeeper\n\n6.2. Modifying the Mesos master quorum\n\n6.2.1. Adding masters\n\n6.2.2. Removing masters\n\n6.2.3. Replacing masters\n\n6.3. Implementing security and access control\n\n6.3.1. Slave and framework authentication\n\n6.3.2. Authorization and access control lists\n\n6.3.3. Framework rate limiting\n\n6.4. Summary\n\n3. Running on Mesos\n\nChapter 7. Deploying applications with Marathon\n\n7.1. Getting to know Marathon\n\n7.1.1. Exploring the web interface and API\n\n7.1.2. Service discovery and routing\n\n7.2. Deploying Marathon and HAProxy\n\n7.2.1. Installing and configuring Marathon\n\n7.2.2. Installing and configuring HAProxy\n\n7.3. Creating and scaling applications\n\n7.3.1. Deploying a simple application\n\n7.3.2. Deploying a Docker container\n\n7.3.3. Performing health checks and rolling application upgrades\n\n7.4. Creating application groups\n\n7.4.1. Understanding the anatomy of an application group\n\n7.4.2. Deploying an application group\n\n7.5. Logging and debugging\n\n7.5.1. Configuring logging for Marathon\n\n7.5.2. Debugging Marathon applications and tasks\n\n7.6. Summary\n\nChapter 8. Managing scheduled tasks with Chronos\n\n8.1. Getting to know Chronos\n\n8.1.1. Exploring the web interface and API\n\n8.2. Installing and configuring Chronos\n\n8.2.1. Reviewing prerequisites\n\n8.2.2. Installing Chronos\n\n8.2.3. Configuring Chronos\n\n8.3. Working with simple jobs\n\n8.3.1. Creating a schedule-based job\n\n8.3.2. Creating a schedule-based job using Docker\n\n8.4. Working with complex jobs\n\n8.4.1. Combining schedule-based and dependency-based jobs\n\n8.4.2. Visualizing job dependencies\n\n8.5. Monitoring the output and status of Chronos jobs\n\n8.5.1. Job failure notifications and monitoring\n\n8.5.2. Observing standard output and standard error via Mesos\n\n8.6. Summary\n\nChapter 9. Deploying applications and managing scheduled tasks with Aurora\n\n9.1. Introducing Aurora\n\n9.1.1. The Aurora scheduler\n\n9.1.2. The Thermos executor and observer\n\n9.1.3. The Aurora user and admin clients\n\n9.1.4. The Aurora domain-specific language\n\n9.2. Deploying Aurora\n\n9.2.1. Trying out Aurora in a development environment\n\n9.2.2. Building and installing Aurora\n\n9.2.3. Configuring Aurora\n\n9.3. Deploying applications\n\n9.3.1. Deploying a simple application\n\n9.3.2. Deploying a Docker-based application\n\n9.4. Managing scheduled tasks\n\n9.4.1. Creating a Cron job\n\n9.4.2. Creating a Docker-based Cron job\n\n9.5. Administering Aurora\n\n9.5.1. Managing users and quotas\n\n9.5.2. Performing maintenance\n\n9.6. Summary\n\nChapter 10. Developing a framework\n\n10.1. Understanding framework basics\n\n10.1.1. When and why would you write a framework?\n\n10.1.2. The scheduler implementation\n\n10.1.3. The executor implementation\n\n10.2. Developing a scheduler\n\n10.2.1. Working with the Scheduler API\n\n10.2.2. Working with the SchedulerDriver\n\n10.3. Developing an executor\n\n10.3.1. Working with the Executor API\n\n10.3.2. Working with the executor driver\n\n10.4. Running the framework\n\n10.4.1. Deploying in development\n\n10.4.2. Considerations for a production deployment\n\n10.5. Summary\n\nAppendix A. Case study: Mesosphere DCOS, an enterprise Mesos distribution\n\nA.1. Introduction to DCOS\n\nA.1.1. Understanding the DCOS architecture\n\nA.1.2. Interacting with DCOS\n\nA.2. Continuous deployment with Jenkins and Marathon\n\nA.2.1. Preparing DCOS for continuous application deployments\n\nA.2.2. Configuring Jenkins\n\nA.2.3. Continuous deployment in action\n\nA.3. Summary\n\nAppendix B. List of Mesos frameworks and tools\n\nB.1. Mesos frameworks\n\nB.1.1. Application management and batch scheduling\n\nB.1.2. Data processing\n\nB.1.3. Distributed databases and storage\n\nB.2. Mesos-related tools\n\nB.2.1. Language bindings\n\nB.2.2. Load balancing and service discovery\n\nB.2.3. Monitoring and management\n\nB.2.4. Vagrant environments\n\nIndex\n\nList of Figures\n\nList of Tables\n\nList of Listings\n\nForeword\n\nIf you ever want to see a man’s head explode, walk up to somebody whose job it is to manually configure and provision scores of servers inside a datacenter, and say the following: Wow! It must be so easy, and so much fun, to keep track of what’s running on which machines.\n\nOr find a person who has spent years carrying a pager and responding to server outages and say, Sounds like a stress-free job. At least it guarantees you get a good night’s sleep.\n\nThe truth, of course, is that managing servers and other datacenter infrastructure has historically been difficult, tedious, and full of sleepless nights for the poor men and women charged with configuring all these machines and responding to failures whenever they strike. As companies started relying more heavily on information technology during the past 20 years, often housing one application per server (or, in recent years, virtual machine), the practice grew increasingly difficult. A few servers grew to dozens, dozens grew to hundreds, and hundreds sometimes grew to thousands.\n\nThen the web blew up, fueled by incredibly popular services such as Google, Facebook, and Twitter. The mobile web, fueled by billions of smartphones, tablets, and other devices, followed shortly thereafter. Old ways of computing could no longer cut it in a world where millions of users might be on a site or app at any given time.\n\nInside datacenters, single-server databases (single-server everything, really) were rapidly replaced by distributed systems that could handle previously unimaginable volumes of data and traffic. Often, complex monolithic applications were replaced by microservices—collections of single-purpose services managed separately, then connected via API to construct end-user applications. Scalability demands increased, but so did the learning curve for building these systems and the complexity of managing them.\n\nGoogle famously solved this problem inside its own datacenters with a system called Borg, which ostensibly let most employees—systems administrators and developers alike—manage hundreds of thousands of servers like one big computer. Several years after Borg simplified operations at Google, the open source Apache Mesos project hit the scene and changed the lives of its users in similar ways. All of a sudden, the process of deploying, running, and managing complex distributed systems became much simpler; everything shares the same set of machines, and Mesos handles the legwork of matching workload requirements with available resources.\n\nI experienced this shift firsthand as a software engineer at Twitter, where Mesos helped conquer the infamous fail whale and helped Twitter reach new heights of scalability and reliability. When I moved on to Airbnb in 2012, then a fast-growing startup just four years old, Mesos once again helped us grow our infrastructure—but not the complexity of it—along with our user base. I was so impressed with Mesos and its promise that I decided to start a company, Mesosphere, dedicated to making Mesos usable by mainstream enterprises.\n\nAs Mesos grew in popularity and Mesosphere grew in size, we set our sights on hiring the best Mesos engineers and practitioners around. When we saw the work Roger Ignazio had done building out a Mesos-based continuous integration platform at Puppet Labs, we knew we had to have him. Running scalable production systems at established companies is always valuable experience, and since joining Mesosphere, Roger’s experience has been a boon to the quality of our Mesos-based Datacenter Operating System technology and to our customers’ experiences with it.\n\nWith Mesos in Action, Roger lets anyone who is interested in Mesos and its ecosystem of technologies take advantage of his experience. The book is a great guide to getting a Mesos cluster running and installing your first frameworks, but also delves into more-advanced topics such as mastering powerful Mesos frameworks (including Marathon for container orchestration and Spark for big data analytics) and even building your own framework.\n\nWhether you’re preparing to deploy Mesos or already have it running and want to improve your knowledge, you would be hard-pressed to find a better guide than Roger and a better book than Mesos in Action.\n\nFLORIAN LEIBERT\n\nCOFOUNDER AND CEO, MESOSPHERE\n\nPreface\n\nApache Mesos began in 2009 as a research project at the University of California at Berkeley, led by Benjamin Hindman. Ben and his team wanted to improve datacenter efficiency by allowing multiple applications to share a single computing cluster, just like multiple applications can share the processor, memory, and hard drive in your laptop or workstation. But they wanted to do this across the many servers that make up a modern datacenter. After an initial implementation of 10,000 lines of C++ code, they published the paper Mesos: A Platform for Fine-Grained Resource Sharing in the Data Center in 2010.\n\nNot long after, Ben joined Twitter and used Mesos to better scale its infrastructure, largely bringing an end to the era of the fail whale that became infamous as Twitter was rising in popularity and its servers couldn’t handle the demand from users. Although Twitter doesn’t publicly disclose the number of servers in its expansive infrastructure, online sources and firsthand knowledge from presentations put this somewhere in the ballpark of 10,000 Mesos nodes per cluster.\n\nIn December 2010, the Mesos project entered the Apache Incubator, an arm of the Apache Software Foundation that provides a means for projects to gain the full support of the ASF’s efforts. The Apache Mesos project graduated from the incubator in June 2013 and is now a top-level project.\n\nIn 2013, Ben—along with Florian Leibert and Tobi Knaup—founded Mesosphere. Mesosphere’s flagship product, the Datacenter Operating System (DCOS), commercializes the success of the open source project by providing a turnkey solution to enterprises looking to deploy applications and scale infrastructure as effortlessly as other companies using Mesos, such as Airbnb, Apple, and Netflix. Mesosphere continues to be a major contributor to the open source Mesos project and provides Mesos packages and tools to the open source community.\n\nMy foray into the Mesos ecosystem and large-scale infrastructure began in 2014 when I started looking at using Mesos to share resources among multiple instances of Jenkins, the popular continuous integration framework. At the time, it seemed like Mesos was reserved for those who already knew about it; a lot of resources were available online but were hard to find, and there wasn’t a single canonical source of truth. There also weren’t any books covering Mesos. I wrote a couple of blog posts about my experience, and it seemed like other people were in the same boat I was in: wanting to know more about this project but not knowing where to start.\n\nIn January 2015, Manning reached out and asked if I’d be interested in writing a book about Mesos. Having never written a book before, the request seemed overwhelming at first. But I also saw it as an opportunity to write the book that I wished I had when I first started using Mesos. Fortunately, the team at Manning gave me the freedom to do just that.\n\nI hope that you find Mesos in Action a valuable resource for deploying and administering Mesos clusters and improving the overall efficiency of your infrastructure, and that it allows your team—and your customers—to deploy applications to production quickly and easily.\n\nROGER IGNAZIO\n\nPORTLAND, OREGON\n\nAcknowledgements\n\nYou’re reading the result of a yearlong effort to produce an in-depth book on the Apache Mesos project and ecosystem. Despite my name being on the cover, many people contributed to the final publication, people who would otherwise remain anonymous if I didn’t thank them here. I’m sure that my family, my friends, and my wife already know how much I appreciate their support through this endeavor.\n\nFirst, I’d like to thank the Mesos community. In every interaction—at conferences, on the mailing lists, on IRC—everyone has been extremely helpful and kind. As of this writing, there are over 100 individual contributors to the Mesos code base, and even more people who volunteer their time on the Mesos mailing lists and chat rooms to answer questions and provide help. In addition to all the people I’ve had the pleasure of talking to at conferences and working with on a daily basis, I’d like to thank Ben Hindman, Florian Leibert, Thomas Rampelberg, Dave Lester, Christian Bogeberg, and Michael Hausenblas for all of their help.\n\nAnd I’d like to thank Florian for writing the foreword to this book.\n\nNext, as if writing a book isn’t already a stressful and time-consuming task, I changed jobs about two-thirds of the way through writing. At Puppet Labs, I’d like to thank Scott Schneider, Colin Creeden, Cody Herriges, Eric Zounes, and Alanna Brown for their support. Before I even signed with Manning, I recall a moment when Scott asked if I really thought you could write an entire book about Mesos; as it turns out, you can!\n\nMany people behind the scenes helped review the book at various stages and provided feedback, including Al Rahimi, Clive Harber, Iain Campbell, Jeroen Benckhuijsen, John Guthrie, Ken Sipe, Luis Moux Domínguez, Marco Massenzio, Mohsen Mostafar Jokar, Morgan Nelson, Nitin Gode, Odysseas Pentakalos, and Thomas Peklak. A special thank you goes out to Jerry Kuch and Chris Schaefer for their technical reviews, and to copy editor Sharon Wilkey for making a countless number of fixes to the original manuscript.\n\nLast, but certainly not least, I need to thank my amazing team at Manning Publications. My editor, Mike Stevens, helped me get from That sounds like a lot of jargon! to a formal proposal and signed contract. Development editor Cynthia Kane ensured I was always providing the right amount of context (in both text and graphics), and helped me become a better writer and communicator. And finally, to my publisher Marjan Bace, who not only helped shape the book during the editorial board review, but also ultimately gave me the freedom to write the book that I wish I had when I first got started with Mesos. Thank you!\n\nI’m grateful to all of the people who helped get the book to this point, and I apologize if I’ve forgotten to mention anyone here.\n\nAbout this Book\n\nMesos in Action is a practical guide to learning about and deploying Apache Mesos in a real-world setting. I provide a complete tour of the project—from a basic introduction that introduces Mesos and containers, to production-ready deployments that include high availability and framework authentication. I also provide real-world usage of popular (and open source!) Mesos applications that allow you to deploy applications and scheduled jobs on your Mesos cluster.\n\nAlthough Mesos in Action is tailored for intermediate-to-advanced systems administrators, it’s well suited for various audiences. I’ve written the book in such a way that systems administrators, DevOps, application administrators, and software engineers alike will feel at home throughout the text. Although some knowledge of application deployments and software development is desirable, I’ve provided enough background that it isn’t strictly required, instead opting to teach you new skills that you can use to make teams—your own included—work smarter, not harder.\n\nRoadmap\n\nIf you are a systems administrator or DevOps person looking to deploy your first Mesos cluster, you’ll want to pay particular attention to chapters 1 through 8. These chapters cover everything you need to know to get a cluster up and running, and cover a few ways you can use it to deploy applications and scheduled jobs. Chapter 10 may also be beneficial in helping you to understand how to write your own Mesos-enabled applications. Otherwise, this book is divided into three parts.\n\nPart 1 introduces the Apache Mesos project, compares containers to virtual machines, and presents a real-world use case for deploying a Mesos cluster.\n\nChapter 1 introduces the Mesos project. I cover key terms and components used throughout the book, introduce the architecture, and explain how deploying applications in containers is different from deployments in a traditional datacenter.\n\nChapter 2 builds upon the introduction provided in chapter 1 by running an Apache Spark data-processing job on the Mesos cluster. You’ll see a real-world workload running on the cluster and observe how the cluster behaves. You’ll also get a sense of how Mesos allows multiple applications to share cluster resources, leading to improved datacenter utilization.\n\nPart 2 examines the Mesos fundamentals in detail, including installation and configuration, high availability, and monitoring.\n\nChapter 3 provides a soup-to-nuts approach for deploying Mesos on your own servers, whether they’re in your own datacenter or running on a cloud provider such as AWS or Azure. You’ll learn how to install and configure ZooKeeper, Mesos, and Docker, and should have a highly available cluster up and running by the end of the chapter.\n\nChapter 4 examines the fundamentals of the Mesos project. You’ll learn about the scalability, fault tolerance, high availability, and resource isolation that Mesos provides.\n\nChapter 5 provides a tour of how Mesos handles logs and how you can debug issues when they arise. I cover topics including the Mesos web interface, CLI, log file locations, and logging configuration.\n\nChapter 6 covers topics necessary for running Mesos in a production environment. This includes information about monitoring the Mesos and ZooKeeper clusters, as well as security and access control for users and frameworks alike.\n\nPart 3 provides you with real-world uses for Mesos.\n\nChapter 7 introduces the open source Marathon framework, which allows you to deploy applications and long-running services in Linux and Docker containers across the cluster simply by specifying the amount of resources and number of instances you’d like.\n\nChapter 8 introduces the open source Chronos framework, which allows you to deploy scheduled jobs on the cluster using ISO 8601–formatted timestamps. Chronos allows jobs to run on a schedule, or allows them to be dependencies on other jobs, and supports tasks running in both Linux and Docker containers.\n\nChapter 9 introduces the open source Apache Aurora framework, which—similar to Marathon and Chronos—allows you to deploy both applications and scheduled jobs on a Mesos cluster. Where it differs, however, is that Aurora has support for multiple users out of the box, and a sophisticated configuration language to match.\n\nChapter 10 provides a tour of the Mesos APIs, and includes an example (written in Python) of how to develop your own Mesos applications.\n\nAppendix A provides a case study on Mesosphere’s Datacenter Operating System (DCOS), an enterprise-grade Mesos distribution, as well as a walk-through of how to set up a continuous deployment pipeline using DCOS, Jenkins, and Marathon.\n\nAppendix B provides a list of Mesos-related projects known at the time of writing. These projects range from Mesos applications, to language bindings, to load-balancing and service-discovery tools. Each entry is accompanied by a short description and a link to additional information online.\n\nSource code\n\nThe code for the examples and configuration files used throughout this book is available on GitHub, located at github.com/rji/mesos-in-action-code-samples. The code is also available from this book’s website, located at manning.com/books/mesos-in-action."
    }
}