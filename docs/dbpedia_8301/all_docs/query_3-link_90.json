{
    "id": "dbpedia_8301_3",
    "rank": 90,
    "data": {
        "url": "https://serverfault.com/questions/623803/apache-mesos-vs-apache-cloudstack",
        "read_more_link": "",
        "language": "en",
        "title": "Apache Mesos Vs. Apache CloudStack",
        "top_image": "https://cdn.sstatic.net/Sites/serverfault/Img/apple-touch-icon@2.png?v=9b1f48ae296b",
        "meta_img": "https://cdn.sstatic.net/Sites/serverfault/Img/apple-touch-icon@2.png?v=9b1f48ae296b",
        "images": [
            "https://cdn.sstatic.net/Sites/serverfault/Img/logo.svg?v=43f5b6d5f65b",
            "https://www.gravatar.com/avatar/5386edb95ebf906d70f0fe1e5fe1005e?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/cd4NR.jpg?s=64",
            "https://www.gravatar.com/avatar/fe5d9c351b5257a2b482f300eeef9f21?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/aedecbfdd2ac379adc9d6265935686ce?s=64&d=identicon&r=PG",
            "https://serverfault.com/posts/623803/ivc/ccf8?prg=34ba5209-ceda-4f80-8181-7ddcc047589c"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2014-08-25T13:03:09",
        "summary": "",
        "meta_description": "Managing the infrastructure (private cloud or public cloud) at scale and ease is addressed by Apache Mesos, Apache CloudStack and OpenStack.\n\nWhat is the major difference between Mesos and CloudStack/",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/serverfault/Img/favicon.ico?v=18e9cc4f2aea",
        "meta_site_name": "Server Fault",
        "canonical_link": "https://serverfault.com/questions/623803/apache-mesos-vs-apache-cloudstack",
        "text": "If you ask me it's a matter of scope. If you're doing traditional IaaS, as @user222032 already mentioned, then cloudstack will be your friend. Because using virtualization you're in the \"compute\" scope, so you basicy can do whatever you can do with a computer hardware.\n\nOther than that when using mesos you're restricted to what can be run on the operating system (e.g. mesos), e.g. applications - even docker containers - within supported frameworks. But remember that you're not as \"free\" as you're on pure hardware.\n\nE.g.: provide desktop as a service with mesos? If SSH is enough for you, possible. But totaly not the scope of mesos (which means you would end up doing more configuration instead of less). Providing a windows desktop? OSx desktop? No way.\n\nSo for me the real question is about what you want to do with it. Google's, Facebook's or Twitter's use-case is most likely not yours. So Googles way of running their datacenter - even though fascinating - in most cases would be the wrong for your use-case (except you're some kind of e-service provider). As mesos realy is a copy of Google's \"borg\" it's probably not what you need if you're doing IaaS.\n\nHowever, if you want to do PaaS or even software as a service, in special big data processing and running linux-applications and databases, mesos may be exacly what you need. Doing big data? Then mesos is probalby right for you (let me make this clear: i'm talking about real BI, not the stuff they sell you as BI. Running Hadoop or any map reduce database dosn't mean you're doing big data. it does mean you successfully installed hadoop - not more, not less).\n\nkeep in mind that even though it would be possible to run mesos on a bunch of VMs - so you would have a datacenter capable of doing it all, you would loose als the efficeny benefits companies like google have been looking for by developing stuff like borg (=> mesos).\n\nA few years ago the world was pretty - just run everything in a big ass VM cluster. You only had to choose which one: ESXi, HyperV, KVM. Nowadays it seems to get more complicated again: vm or container? cluster or \"simulated\"-big-single-machine (mesos)? And as you see, both have their use case. So today you have to decide and will eventually have to run both very different technologies in order do be able to do all the things, which kinda sucks.\n\nSince \"it sucks\" has always been the biggest driver for developing new stuff, I'm quite exited how both technologies will melt together in the next few years. But i guess it'll take way longer till that will finaly reach \"enterprise market\". Looking at stuff like simplicity and evorail which currently are the \"hot shit\" in the market and still about 3 years behind when it comes to ideas how the modern datacenter should work. After all: I'm not blaming enterprise market for it, it's the customers who don't want to invest in thinking and talking. Rather pay someone to give you SOME \"final\" solution and pay for the solution so you're \"ok\" for the next few years. I guess that's why things like mesos are happening in startups and sillicon valley only. Elsewhere hardware is cheap and people+time are expensive."
    }
}