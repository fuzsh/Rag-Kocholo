{
    "id": "dbpedia_991_0",
    "rank": 54,
    "data": {
        "url": "https://www.prisma.io/nextjs",
        "read_more_link": "",
        "language": "en",
        "title": "Next-Generation ORM for SQL Databases",
        "top_image": "https://cdn.sanity.io/images/p2zxqf70/production/4a1804a0f5588e2673b26e1416a6ae745204148f-900x473.png",
        "meta_img": "https://cdn.sanity.io/images/p2zxqf70/production/4a1804a0f5588e2673b26e1416a6ae745204148f-900x473.png",
        "images": [
            "https://prismalens.vercel.app/header/logo-white.svg",
            "https://www.prisma.io/images/header/prisma-logo.svg",
            "https://www.prisma.io/images/header/playground.svg",
            "https://cdn.sanity.io/images/p2zxqf70/production/a9b6bee1b70a4046cbc150468cd0984fc73ebb49-152x91.svg",
            "https://cdn.sanity.io/images/p2zxqf70/production/a6a958809e2585d465c2d33ffe7795bf3a6b6fa5-301x362.svg",
            "https://cdn.sanity.io/images/p2zxqf70/production/a6a958809e2585d465c2d33ffe7795bf3a6b6fa5-301x362.svg",
            "https://www.prisma.io/_next/image?url=https%3A%2F%2Fcdn.sanity.io%2Fimages%2Fp2zxqf70%2Fproduction%2F354e0720283c6c4d95a40a351f4d56756d28dceb-400x400.jpg&w=32&q=75 1x, /_next/image?url=https%3A%2F%2Fcdn.sanity.io%2Fimages%2Fp2zxqf70%2Fproduction%2F354e0720283c6c4d95a40a351f4d56756d28dceb-400x400.jpg&w=64&q=75 2x",
            "https://www.prisma.io/_next/image?url=https%3A%2F%2Fcdn.sanity.io%2Fimages%2Fp2zxqf70%2Fproduction%2F6664901cee9b12d7b7625479085367d73990cde5-1280x720.jpg&w=640&q=75 1x, /_next/image?url=https%3A%2F%2Fcdn.sanity.io%2Fimages%2Fp2zxqf70%2Fproduction%2F6664901cee9b12d7b7625479085367d73990cde5-1280x720.jpg&w=1200&q=75 2x",
            "https://cdn.sanity.io/images/p2zxqf70/production/bfd0762724ed2c44d0d489df212828aaf06b9bce-1280x720.svg",
            "https://prismalens.vercel.app/header/logo-dark.svg",
            "https://www.prisma.io/icons/global/gdpr.svg",
            "https://www.prisma.io/icons/global/hipaa.svg",
            "https://www.prisma.io/icons/global/iso27.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Prisma is a next-generation ORM for Node.js & TypeScript. It's the easiest way to build Next.js apps with MySQL, PostgreSQL & SQL Server databases.",
        "meta_lang": "en",
        "meta_favicon": "/images/apple-touch-icon.png",
        "meta_site_name": "Prisma",
        "canonical_link": "https://www.prisma.io/nextjs",
        "text": "Static site generation with Prisma\n\nThe getStaticProps function in Next.js is executed at build time for static site generation (SSG). It's commonly used for static pages, like blogs and marketing sites. You can use Prisma inside of getStaticProps to send queries to your database:\n\n1\n\n2exportasyncfunctiongetStaticProps(){\n\n3const prisma =newPrismaClient()\n\n4const posts =await prisma.post.findMany()\n\n5\n\n6return{\n\n7 props :{ posts }\n\n8}\n\n9}\n\nNext.js will pass the props to your React components, enabling static rendering of your page with dynamic data.\n\n1\n\n2exportdefault({posts})=>\n\n3<ul>\n\n4{posts.map(post =>(\n\n5<likey={post.id}>{post.title}</li>\n\n6))}\n\n7</ul>\n\n8);\n\nStatic site generation with Prisma\n\nThe getStaticProps function in Next.js is executed at build time for static site generation (SSG). It's commonly used for static pages, like blogs and marketing sites. You can use Prisma inside of getStaticProps to send queries to your database:\n\n1\n\n2exportasyncfunctiongetStaticProps(){\n\n3const prisma =newPrismaClient()\n\n4const posts =await prisma.post.findMany()\n\n5\n\n6return{\n\n7 props :{ posts }\n\n8}\n\n9}\n\nNext.js will pass the props to your React components, enabling static rendering of your page with dynamic data.\n\n1\n\n2exportdefault({posts})=>\n\n3<ul>\n\n4{posts.map(post =>(\n\n5<likey={post.id}>{post.title}</li>\n\n6))}\n\n7</ul>\n\n8);"
    }
}