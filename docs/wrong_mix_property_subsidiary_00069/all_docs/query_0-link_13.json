{
    "id": "wrong_mix_property_subsidiary_00069_0",
    "rank": 13,
    "data": {
        "url": "https://www.ibm.com/support/pages/rational-software-architect-v80-releases-new-features-and-enhancements",
        "read_more_link": "",
        "language": "en",
        "title": "Rational Software Architect V8.0 releases: new features and enhancements",
        "top_image": "https://www.ibm.com/support/pages/core/misc/favicon.ico",
        "meta_img": "https://www.ibm.com/support/pages/core/misc/favicon.ico",
        "images": [
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/0.9C0.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/0.AD8.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/0.BEE.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/0.D02.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/0.E16.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/0.F2A.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/0.103C.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/0.153E.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/1.206.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/2.1BF2.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/4.3A46.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/6.23C4.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/7.3F8A.gif",
            "https://www.ibm.com/support/pages/system/files/support/swg/swgdocs.nsf/0/b8099df65797788e8525772100552119/Content/9.72C.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "release documentation;What's new;new features;enhancements;Version 8.0;v8.0;v80;v8;Version 8.0.1;v8.0.1;v801;Version 8.0.2;v8.0.2;v802;Version 8.0.3;v8.0.3;v803;Version 8.0.4;v8.0.4;v804;Version 8.0.4.1;v8.0.4.1;v8041;Version 8.0.4.2;v8.0.4.2;v8042"
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2020-09-10T00:00:00",
        "summary": "",
        "meta_description": "This document provides an overview of the new features and enhancements in the version 8.0 releases of IBM Rational Software Architect.",
        "meta_lang": "en",
        "meta_favicon": "/support/pages/core/misc/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://www.ibm.com/support/pages/rational-software-architect-v80-releases-new-features-and-enhancements",
        "text": "Product Documentation\n\nAbstract\n\nThis document provides an overview of the new features and enhancements in the version 8.0 releases of IBM Rational Software Architect.\n\nContent\n\nSupporting Documentation Document Description Rational Software Architect Version 8.0 - What's New Videos, presentations and demonstrations of many of the new features in Rational Software Architect, Version 8.0.x on developerWorks. Updates to Rational Software Architect A list of the updates that are available for Rational Software Architect. Deprecated and removed product features Information about features in the product that have been deprecated or removed in the version 8.0.x releases. Detailed System Requirements A description of the hardware and software requirements for installing the product.\n\nVersion 8.0.4.2\n\nVersion 8.0.4.1\n\nVersion 8.0.4\n\nVersion 8.0.3\n\nVersion 8.0.2\n\nVersion 8.0.1\n\nVersion 8.0\n\nDownload Version 8.0.4.2\n\nThis release of Rational Software Architect contains new features and enhancements in the following areas:\n\nAdditional supported operating system versions\n\nProduct integration support\n\nIBM Runtime Environment Java Technology Edition updates\n\nEclipse platform updates\n\nDeployment planning\n\nUML modeling\n\nBack to top\n\nAdditional supported operating system versions\n\nBeginning with version 8.0.4.2, the following additional operating system versions are supported:\n\nRed Hat Enterprise Linux 5 Update 8\n\nSUSE Linux Enterprise Server 11 Service Pack 2\n\nSUSE Linux Enterprise Desktop 11 Service Pack 2\n\nBack to top\n\nProduct integration support\n\nBeginning with version 8.0.4.2, the following product integration is supported:\n\nRational Common Licensing 8.1.3.1\n\nBack to top\n\nIBM Runtime Environment Java Technology Edition updates\n\nIBM Runtime Environment Java Technology Edition is updated to the following versions:\n\nIBM 32-bit Runtime Environment for Windows, Java Technology Edition, Version 6.0 Service Release 11\n\nIBM 32-bit Runtime Environment for Linux, Java Technology Edition, Version 6.0 Service Release 11\n\nBack to top\n\nEclipse platform updates\n\nThe following additional Eclipse 3.6.2.2b patches and fixes are included in this release:\n\nEclipse platform: Bugzilla fixes 311192, 325743, 335860, 337719, 339360, 342308, 345549, 345760, 355614, 356184, 359931, 370864, 372273, 383790, 383796, 386472, 390368,\n\nEclipse Help and local languages: Bugzilla fixes 130067, 130097, 130107, 130158, 130272, 375751\n\nEclipse Equinox p2: Bugzilla fixes 338600, 345549, 345723, 348013, 357132, 361591, 363963, 363964\n\nEclipse Java Development Tools (JDT): Bugzilla fixes 287164, 305172, 311192, 325743, 336934, 341131, 342073, 351095, 355570, 376734\n\nEclipse Java Emitter Templates (JET): Bugzilla fix 377257\n\nEclipse Plug-in Development Environment (PDE): Bugzilla fixes 337909, 308741, 347379, 389192\n\nEclipse Rich Client Platform (RCP): Bugzilla fixes 277618, 333323, 344653, 344855, 345549, 350739, 363797, 372273, 374300\n\nEclipse Remote System Explorer (RSE): Bugzilla fixes 334839, 337612, 340069, 340212, 348588, 346358, 348778, 350582, 353434, 353827, 354876, 355529, 355530, 355531, 357961, 358932, 359566, 359860, 367506, 368768, 370885, 372972, 372977, 373105, 375361, 375423, 376094, 376118, 376412, 377129, 377646, 377695, 378163, 379456, 379564, 379838, 380704, 385426, 385776, 386505, 388364, 388947, 390703, 391133\n\nEclipse C/C++ Development Tooling (CDT) LR Parser: Bugzilla fix 366273\n\nEclipse C/C++ Development Tooling (CDT) Debug: Bugzilla fix 363688\n\nEclipse C/C++ Development Tooling (CDT) XLC: Bugzilla fixes 350501, 351255, 352758, 353113, 366273\n\nEclipse Concurrent Versions System (CVS): Bugzilla fixes 361928\n\nEclipse Data Tools: Bugzilla fixes 280268, 285515, 285524, 285803, 286895, 341329, 342411, 349889, 354040, 356865, 353797, 357576, 360896, 361034, 376454, 384194, 386944, 387430, 368412, 369352, 342411, 349889, 353797, 357576, 360896, 361034, 376454, 384194, 387430, 345677, 344445, 359486, 360896, 361034, 376359, 387430\n\nWeb Tools Platform (WTP) patches: Bugzilla fixes 376255, 377064, 378503, 379853, 380038, 380306, 381441, 385354, 388537, 388549, 388555, 391126, 392767, 393683, 394416\n\nBack to top\n\nDeployment planning\n\nPerformance has been enhanced and now topology models are loaded faster.\n\nBack to top\n\nUML modeling\n\nPerformance has been enhanced in the refactoring operation of visualization references of Java types.\n\nWith these enhancements, the refactoring of Java types in the product workspace now runs faster and seamless.\n\nDownload Version 8.0.4.1\n\nThis release of Rational Software Architect contains new features and enhancements in the following areas:\n\nIBM Runtime Environment Java Technology Edition updates\n\nUpdates to supported web browsers\n\nEclipse platform updates\n\nIBM WebSphere Application Server test environment updates\n\nJava EE Connector (J2C) tools\n\nStructured data import\n\nBack to top\n\nIBM Runtime Environment Java Technology Edition updates\n\nIBM Runtime Environment Java Technology Edition is updated to the following versions:\n\nIBM 32-bit Runtime Environment for Windows, Java Technology Edition, Version 1.6 Service Release 10 Fix Pack 1\n\nIBM 32-bit Runtime Environment for Linux, Java Technology Edition, Version 1.6 Service Release 10 Fix Pack 1\n\nBack to top\n\nUpdates to supported web browsers\n\nBeginning with version 8.0.4.1, the following additional web browser versions are supported:\n\nMozilla Firefox 8.0 and later.\n\nBack to top\n\nEclipse platform updates\n\nThe following additional Eclipse 3.6.2.2 patches and fixes are included in this release:\n\nEclipse platform: Bugzilla fixes 287164, 311192, 335860, 337719, 339360, 342308, 345549, 345760, 355614, 356184, 359931, 370864, 372273\n\nEclipse Equinox p2: Bugzilla fixes 338600, 348013, 345723, 357132, 361591, 363963, 363964\n\nEclipse Equinox Server p2: Bugzilla fixes 337693, 338600, 345549, 357132, 361591, 363963, 363964\n\nEclipse Help: Bugzilla fix 375751\n\nEclipse Java Development Tools (JDT): Bugzilla fixes 287164, 305172, 311192, 325743, 336934, 341131, 342073, 343509, 351095, 355570\n\nEclipse C/C++ Development Tooling (CDT) LR Parser: Bugzilla fix 366273\n\nEclipse C/C++ Development Tooling (CDT) XLC feature: Bugzilla fixes 350501, 351255, 352758, 353113, 366273\n\nEclipse Data Tools: Bugzilla fixes 368412, 369352\n\nRemote System Explorer (RSE) DStore server: Bugzilla fixes 267478, 333593, 340432, 344884, 347445, 350582, 356231, 367506, 370885, 372972, 372977, 375361, 375423, 376094, 376118\n\nRemote System Explorer (RSE) Local server: Bugzilla fix 337612\n\nRich Client Platform (RCP): Bugzilla fixes 116892, 277618, 333323, 337693, 344653, 344855, 345549, 350739, 363797, 372273, 374300\n\nWeb Tools Platform (WTP) patches: Bugzilla fixes 319219, 352850, 369587, 371828, 372524, 372766, 373025, 373563, 373658, 373663, 373666, 376096, 376654, 376658, 376747, 376996, 377095\n\nBack to top\n\nIBM WebSphere Application Server test environment updates\n\nThe following IBM WebSphere Application Server Test Environment updates are available:\n\nIBM WebSphere Application Server 7.0 Test Environment Update v7.0.0.21. For more information, see: http://www.ibm.com/support/docview.wss?uid=swg24032378\n\nIBM WebSphere Application Server 6.1 Test Environment Update v6.1.0.43. For more information, see: http://www.ibm.com/support/docview.wss?uid=swg24032377\n\nBack to top\n\nJava EE Connector (J2C) tools\n\nCICS Resource Adapter updated to version 8.1.0.0.\n\nBack to top\n\nStructured data import\n\nThe structured data import UI now allows valid non-CSV files (e.g. *.xml) also as input source files.\n\nDownload Version 8.0.4\n\nThis release of Rational Software Architect contains new features and enhancements in the following areas:\n\nIBM Runtime Environment for Java Technology updates\n\nUpdates to supported web browsers\n\nEclipse platform updates\n\nIBM WebSphere Application Server test environment updates\n\nAgent Controller\n\nApplication build (Ant tasks)\n\nBPMN modeling\n\nCloud client\n\nCode coverage tools\n\nDeployment automation planning\n\nEJB 3.0/JPA-to-UML and UML-to-EJB 3.0/JPA transformations\n\nJava domain modeling\n\nJava EE Connector (J2C) tools\n\nJava EE tools\n\nPortal tools\n\nRational Asset Manager integration\n\nSCA tools\n\nStruts modeling\n\nTest and Profiling tools\n\nUML Action Language (UAL)\n\nUML development console\n\nUML modeling\n\nUML-to-Java and Java-to-UML transformations\n\nUML-to-WSDL and UML-to-XSD transformations\n\nUML-to-XSD and XSD-to- UML transformations\n\nWCF support for REST services\n\nWSDL-to-UML transformation\n\nXSD modeling and transformation\n\nIBM Runtime Environment for Java Technology updates\n\nIBM Runtime Environment for Java Technology is updated to the following versions:\n\nIBM 32-bit Runtime Environment for Windows, Java Technology Edition, Version 1.6 Service Release 9 Fix Pack 002\n\nIBM 32-bit Runtime Environment for Linux, Java Technology Edition, Version 1.6 Service Release 9 Fix Pack 002\n\nBack to top\n\nUpdates to supported web browsers\n\nBeginning with version 8.0.4, the following additional web browser versions are supported:\n\nMozilla Firefox 5.0, 6.0, and 7.0\n\nBack to top\n\nEclipse platform updates\n\nThe following additional Eclipse 3.6.2.2 patches and fixes are included in this release:\n\nEclipse platform: Bugzilla fixes 335860, 337719, 339360, 342308, 345549, 345760, 355614\n\nEclipse Equinox: Bugzilla fixes 344855, 350739\n\nEclipse Equinox compendium: Bugzilla fixes 337693, 345549\n\nEclipse Equinox p2: Bugzilla fixes 338600, 345723, 348013\n\nEclipse Equinox server: Bugzilla fixes 344855, 350739\n\nEclipse Equinox server p2: Bugzilla fixes 337693, 338600, 345549\n\nEclipse Java Development Tools (JDT): Bugzilla fixes 287164, 305172, 311192, 336934, 341131, 342073, 351095, 355570\n\nEclipse C/C++ Development Tooling (CDT) platform: Bugzilla fixes 130015, 338082, 338936, 344646, 346349, 347363, 347492, 350587, 351255, 352679, 352758, 352775, 353113, 354042, 354451, 354777, 355399\n\nEclipse C/C++ Development Tooling (CDT) XLC feature: Bugzilla fixes 130015, 350501, 351255, 352758, 353113\n\nEclipse C/C++ Development Tooling (CDT) debugger: Bugzilla fixes 130016, 352679\n\nEclipse Data Tools: Bugzilla fixes 280268, 285515, 285524, 285803, 286895, 341329, 342411, 345677, 349889, 354040, 356865\n\nEclipse Web Standard Tools (WST): Bugzilla fix 130067\n\nEclipse Concurrent Versions System (CVS): Bugzilla fix 130002\n\nRemote System Explorer (RSE) framework: Bugzilla fixes 129987, 129998, 130035, 333593, 334839, 340069, 340212, 346358, 348588, 348778, 350582, 353434, 353827, 354876, 355529, 355530\n\nRemote System Explorer (RSE) DStore server: Bugzilla fixes 267478, 333593, 340432, 344884, 347445, 350582, 356231\n\nRich Client Platform (RCP): Bugzilla fixes 116892, 277618, 333323, 337693, 344653, 344855, 345549, 350739\n\nWeb Tools Platform (WTP) patches: Bugzilla fix 362238\n\nBack to top\n\nIBM WebSphere Application Server test environment updates\n\nThe following IBM WebSphere Application Server Test Environment updates are available:\n\nIBM WebSphere Application Server 7.0 Test Environment Update v7.0.0.19. For more information, see: http://www.ibm.com/support/docview.wss?uid=swg24031228\n\nIBM WebSphere Application Server 6.1 Test Environment Update v6.1.0.41. For more information, see: http://www.ibm.com/support/docview.wss?uid=swg24031229\n\nIBM WebSphere Application Server 6.1 Test Environment Update v6.1.0.39. For more information, see: http://www.ibm.com/support/docview.wss?uid=swg24031227\n\nBack to top\n\nAgent Controller\n\nRational Agent Controller v8.3.4\n\nUse Rational Agent Controller v8.3.4 in conjunction with version 8.0.4 of the product to get the full benefit of all enhancements and defect fixes. Rational Agent Controller v8.3.4 can also be used with v7.5.x releases.\n\nBack to top\n\nApplication build (Ant tools)\n\nThe Java EE 6 sample is now expanded to make use of a wide variety of the newer Ant tasks added in the v8.0.x service releases.\n\nHeadless builds now perform a pre-build check of the runtime container so that problems (for example, an incorrect Classpath) are found before the headless build runs.\n\nBack to top\n\nBPMN modeling\n\nThe following BPMN 2 capabilities are now supported in BPMN modeling:\n\nIntroduces new type of a stand-alone diagram in BPMN - choreography. Supported elements specific to choreography: choreography task, global choreography task and call choreography. Common elements supported by choreographies: some events and gateways, messages, text annotations, groups, sequence flow and text associations.\n\nIntroduces process data input and process data output. They have visual representation on diagram, and can be created from the palette. Also, data associations now do not connect an item aware element directly to an activity, but rather to the data input or data output contained by the activity’s input output specification. Global tasks can also have data inputs and data outputs. Data inputs and data outputs of a call activity have to match those of its called element (process or global task).\n\nImplementation reference of an interface can now be set to point to a WSDL port type. When the interface implementation reference is set, its operations are determined by the operations within the WSDL port type. You can now add a supported interface to the process by selecting its implementing WSDL port type. When selecting an operation (of, e.g. a service task), you can now select a WSDL operation. There is also a batch validation rule added that checks if the interface matches the WSDL port type it references.\n\nAdds resource support for BPMN models. Resources can be created and associated to tasks and activities in a lane.Parameters can be added to resource,properties of parameters can be set and parameters can be bound using expressions.\n\nAdds export and import support for BPMN Resources.The resources,parameters and their properties can be exported to a standard format and re-imported back into the product.\n\nAdds support for setting isCollection property for item definition, data object,data input and data output.The isCollection value can also be exported to a standard format and re-imported back into the product.\n\nBack to top\n\nCloud client\n\nIn the Cloud Explorer view, you can now filter the view based on data centers, and you can search for images by name.\n\nBack to top\n\nCode coverage tools\n\nNew installable software: Rational Application Developer Extension for Rational Team Concert with Jazz Team Server. Installed on the Rational Team Concert Server, it enables the viewing of code coverage statistic from Rational Team Concert builds in the Rational Team Concert web client.\n\nYou can now select an option to collect code coverage statistics if the Java program exits abnormally.\n\nBack to top\n\nCode View/Editor\n\nThe \"Show Source in Editor\" command is now available in the context menu of the Project Explorer for elements that have at least one code snippet. This command lets the user select which code snippet to edit (in case the selected element has many) and then opens a code editor showing that code snippet.\n\nThe \"Show In\" menu is now available in the context menu of the code editor and allows to navigate to the project explorer or properties view of the element that owns the currently edited code snippet.\n\nThe code view now shows code snippets for elements that are selected in the Search view.\n\nBack to top\n\nDeployment automation planning\n\nYou can now describe an Oracle database infrastructure in deployment modeling. Detailed examples are included.\n\nA new publisher is now supported within DP&A to enable generation and automation to Ant.\n\nSupport for discovery of topology content from Rational Automation Framework (RAF) configuration files.\n\nValidations and resolutions to provide better operating system integration for units in the IBM HTTP Server (IHS) domain.\n\nEnhancements to the support where content which has been previously discovered from a Tivoli Application Dependency Discovery Manager (TADDM) database can be automatically refreshed within an existing topology or diagram based on what's currently available in the operational database.\n\nDesign and provision WebSphere ND 6.1 platforms including Deployment Manager Nodes, Managed Nodes, and the creation of clusters from a Topology by using technology from the Rational Automation Framework for WebSphere.\n\nRepresent z series constructs Parallel Sysplex and Coupling Facility in a topology.\n\nRepresent additional Tomcat-related units in a topology, including users, groups, and user registries.\n\nImprovements to the structured data importer for topologies, including the ability to control the visualization of imported topology elements in a diagram.\n\nBack to top\n\nEJB 3.0/JPA-to-UML and UML-to-EJB 3.0/JPA transformations\n\nYou can now model named queries and named native queries by applying the new <<NamedQuery>> and <<NamedNativeQuery>> stereotypes, which are located in the Java persistence API transformation profile.\n\nIf you apply one of these stereotypes to an operation in an <<Entity>> class in a UML model, the UML-to-EJB 3.0 and UML-to-JPA transformations generate entity bean code that contains a corresponding named query or named native query.\n\nConversely, if entity bean code contains a named query or a named native query, the EJB 3.0-to-UML and JPA-to-UML transformations generate an operation that has the corresponding stereotype applied to an operation in an <<Entity>> class.\n\nYou can now model entity relationship attributes for both the owning and non-owning sides of a bidirectional entity relationship. To model the attributes for the non-owning side, apply the <<RelationshipOptionsNonOwningSide>> stereotype, which is located in the JPA transformation profile.\n\nBack to top\n\nJava domain modeling\n\nJava classes and operations which have @deprecated annotations are shown differently (strikethrough) on diagrams just like in Java editors.\n\nMixed modeling relations from Java domain modeling elements to UML elements can now be preserved as annotations inside comments in the Java file.\n\nBack to top\n\nJava EE Connector (J2C) tools\n\nIMS TM Adapters version 11.3 and 12.1\n\nCICS Resource Adapter v8002\n\nCICS Transaction Gateway for Application Development v8.0.0.2\n\nBack to top\n\nJava EE tools\n\nIn the Java EE Specification Migration wizard, you now have the option to upgrade JPA 1.0 modules to 2.0. The wizard migrates the module and all JPA deployment descriptor files.\n\nImproved integration with Maven m2e, with support for multiple root source folders.\n\nBack to top\n\nPortal tools\n\nYou are now able to enable a tracing mechanism in the JSF Portlet bridge. The generated trace log can be used to analyze and investigate the issue when a problem is reported to IBM Support.\n\nIn the Site Designing Portlet, you can now create and modify URL nodes and set unique names for portlets published on portal server.\n\nJAX-RS is now supported in Portlet projects, enabling you to build REST services with the JAX-RS API for WebSphere Portal. You can add this support to Portlet projects by choosing a new option in the Portlet project wizard.\n\nYou can now test device enabled portlet projects on the Mobile Browser Simulator. You test a portlet project by publishing it on IBM WebSphere Portal server and render it on Mobile Browser Simulator. The rendered page will have the mobile theme applied automatically if the theme is installed on WebSphere Portal Server.\n\nBack to top\n\nRational Asset Manager integration\n\nYou can now choose the referenced models that can be published along with selected models.\n\nBack to top\n\nSCA tools\n\nA new Ant task is available for configuring projects with SCA support. If you are managing projects outside of the workspace, you can use this Ant task to easily add SCA support to your projects. You can use the task to set the preferred run time and implementation type values.\n\nThe SCA tools publisher mechanism deploys OSGi assets independently of other implementation types. The publisher will now notify the OSGi tooling when there are additions, updates, or other changes to the OSGi application.\n\nProject references mechanism has been improved. Now, if you set artifacts that are not referenced by the project, a dialog box displays asking if project references should be added.\n\nYou can now add deployment assembly support to SCA projects, which provides you with more control over deployed assets.\n\nOn the SCA project properties page, you can specify that referenced assets be deployed either as shared assets or as nested JAR files. This improved control over how assets are deployed provides you with the ability to improve the deployment architecture.\n\nThe SCA Deployment assembly properties are supported for all SCA projects except those with Java EE or OSGi facets.\n\nBack to top\n\nStruts modeling and transformation\n\nThe following features have been added to Struts modeling and transformations:\n\nIcons for struts model elements are now displayed on diagrams, the diagram action bar, and in the Project Explorer view.\n\nThe transformation now automatically populates the reset() method body in Struts forms with default attribute value assignments.\n\nThe transformation now populates the execute() method body of the Struts Action classes with hints about which form to use and which forward to redirect to, based on the entries in struts-config.xml.\n\nA new Struts template model containing sample Struts UML elements has been added.\n\nSupport for merging struts-config.xml file elements has been enhanced. When you configure a UML-to-Java transformation and enable the Struts transformation extension and the Create trace relationships option, identifiers are generated for each element in the struts-config.xml file.\n\nYou can also specify whether to delete these identifiers: Open the transformation configuration file, and on the UML-to-Struts Properties page, select the Delete unmatched tags check box.\n\nConstraints have been added to the Struts profile for developing models that conform to Struts domain specifications.\n\nBack to top\n\nTest and profiling tools\n\nYou can now profile on WebSphere Application Server that is installed on the same computer as Rational Application Developer but is running in a different bit mode than the workbench.\n\nThe Profiling and Logging perspective had been renamed to the Profiling perspective.\n\nWhen profiling a WebSphere Application Server application client, the JVM of the target WebSphere Application Server will be automatically used. It is no longer necessary to manually set the preference to use JVM of the target WebSphere Application Server.\n\nBack to top\n\nUML Action Language (UAL)\n\nA new preference \"Enable Semantic Analysis\" has been added to the Modeling > UML Action Language > Editor preference page. You can turn on or turn off semantic analysis of UAL code snippets.\n\nBack to top\n\nUML development console\n\nThe UML development console now includes a time stamp before each entry to make it easier to read build logs. Also, a message is now printed to the console when a UML development project is cleaned.\n\nBack to top\n\nUML modeling\n\nA new preference option \"Copy referenced models\" is now available. When the option is not selected, using a existing model as the template to create a new UML model does not create a copy of models referenced by the template model.\n\nBack to top\n\nUML-to-Java and Java-to-UML transformations\n\nThe UML-to-Java and Java-to-UML transformations can now generate implements relationships between enumerations (Enums) and interfaces.\n\nBack to top\n\nUML-to-WSDL and UML-to- XSD transformations\n\nWhen you configure a UML-to-WSDL or UML-to-XSD transformation, you can now specify that the transformation transforms rich text documentation into plain text. The transformation removes rich-text formatting, and the comments in the generated XML file are easier to read.\n\nTo enable this capability, open a transformation configuration file and, on the Output Options page, select the Transform rich-text documentation into plain text check box.\n\nYou can now specify that the transformation sorts the generated XSD files. Sorting is based on type and within the same type, sorting is alphabetical based on name.\n\nTo enable this capability, open a transformation configuration file, and, on the Output Options page, select the Group and sort the schema contents check box.\n\nIn a transformation configuration, on the Output Options page, when you click Edit Output Options, you can now specify “/” and “\\” characters.\n\nBack to top\n\nUML-to-XSD and XSD-to- UML transformations\n\nYou can now model XSD schema simple type and complex type as UML DataType and Signal by using the <<simpleType>> and <<complexType>> stereotypes from the XSD transformation profile. For the reverse XSD-to-UML transformation, if the target UML model already contains the simple type or complex type (corresponding to the simple type and complex type in the source XSD schema), then the same will be preserved. But, if they have to be created by XSD-to-UML transformation, then the transformation will always generate them as UML classes.\n\nBack to top\n\nWCF support for REST services\n\nRepresentational State Transfer (REST) support for Microsoft .NET has been added, and you can now transform a REST model into executable Microsoft .NET code. The Windows Communication Foundation (WCF) 4.0 component provides RESTful ways to implement web services. The product now supports both REST modeling and transformations.\n\nBack to top\n\nWSDL-to-UML transformation\n\nAn extension has been added that automatically applies specific stereotypes of the SoaML profile. You can enable this extension on the Extensions page of a WSDL-to-UML transformation configuration.\n\nBack to top\n\nXSDL modeling and transformation\n\nYou can now generate extra attributes in XSD elements. You can create a dependency relationship between an XSD global element and an external attribute of a model library, then apply the <<externalAttribute>> stereotype, and run the UML-to-XSD transformation.\n\nThe extra elements can be used by XSD processing engines.\n\nDownload Version 8.0.3\n\nThis release of Rational Software Architect contains new features and enhancements in the following areas:\n\nSupport of operating systems running in 64-bit mode\n\nAdditional supported operating system versions\n\nIBM Runtime Environment for Java Technology updates\n\nUpdates to supported Web browsers\n\nEclipse platform updates\n\nIBM WebSphere Application Server version 8\n\nIBM WebSphere Application Server test environment updates\n\nAgent Controller\n\nApplication build (Ant tasks)\n\nBPMN 2.0 Interchange\n\nBPMN modeling\n\nCode coverage tools\n\nCloud client\n\nCloud toolkit\n\nCompare and merge\n\nDebug tools\n\nDeployment automation planning\n\nJava EE tools\n\nJSF tools\n\nModel execution and simulation\n\nPortal tools\n\nRich page editor\n\nRational Tau model import\n\nSCA tools\n\nSOA extension\n\nSoaML profile and tooling\n\nStruts modeling\n\nTest and Profiling tools\n\nUML-to-EJB 3.0 and EJB 3.0-to-UML transformations\n\nUML-to-WSDL and WSDL-to-UML transformations\n\nUML modeler\n\nUML Profile-based Integrated Architecture (UPIA) (IAM2)\n\nUser assistance\n\nWeb development tools\n\nWeb services\n\nSupport of operating systems running in 64-bit mode\n\nBeginning with version 8.0.3, you can choose to install and run the product in 64-bit mode on supported Windows and Linux operating systems. For more information about the benefits, requirements, limitations, and known issues for the product running in 64-bit mode, see http://www.ibm.com/support/docview.wss?uid=swg27021665.\n\nBack to top\n\nAdditional supported operating system versions\n\nBeginning with version 8.0.3, the following additional operating system versions are supported:\n\nMicrosoft Windows 7 Service Pack 1\n\nMicrosoft Windows Server 2008 Release 2 Service Pack 1\n\nRed Hat Enterprise Linux 6 Update 1\n\nRed Hat Enterprise Linux 5 Update 6\n\nRed Hat Enterprise Linux 4 Update 9\n\nSUSE Linux Enterprise Server 10 Service Pack 4\n\nSUSE Linux Enterprise Desktop 10 Service Pack 4\n\nBack to top\n\nIBM Runtime Environment for Java Technology updates\n\nIBM Runtime Environment for Java Technology is updated to the following versions:\n\nIBM Runtime Environment for Windows, Java Technology Edition, Version 1.6 Service Release 9 plus Fix Pack 001 and interim fix\n\nIBM Runtime Environment for Linux, Java Technology Edition, Version 1.6 Service Release 9 plus Fix Pack 001 and interim fix\n\nBack to top\n\nUpdates to supported Web browsers\n\nBeginning with version 8.0.3, the following additional Web browser versions are supported:\n\nMozilla Firefox 4.0\n\nMicrosoft Internet Explorer 9\n\nBack to top\n\nEclipse platform updates\n\nThe following additional Eclipse 3.6.2 patches and fixes are included in this release:\n\nEclipse platform: Bugzilla fixes 335860, 337719, 342308, 345760\n\nEclipse Equinox p2: Bugzilla fix 338600\n\nEclipse Java Development Tools (JDT): Bugzilla fixes 341131, 342073, 336934\n\nThe Eclipse Plug-in Development Environment (PDE): Bugzilla fixes 308741, 337909\n\nRemote System Explorer (RSE) framework: Bugzilla fixes 267478, 333593, 340432\n\nRich Client Platform (RCP): Bugzilla fixes 116892, 277618, 333323, 344653, 344855\n\nWeb Tools Platform (WTP) patches: Bugzilla fixes 344733, 344765, 345667, 345778, 345797, 346548, 347080\n\nBack to top\n\nIBM WebSphere Application Server, version 8.0\n\nIBM WebSphere Application Server, version 8.0 is available from IBM Passport Advantage as part of the Rational Software Architect V8.0.3 eAssembly (CRF4VML).\n\nNote: If you installed WebSphere Application Server, version 8.0 beta, you must uninstall the beta version before installing version 8.0.\n\nBack to top\n\nIBM WebSphere Application Server test environment updates\n\nThe following IBM WebSphere Application Server Test Environment updates are available:\n\nIBM WebSphere Application Server 7.0 Test Environment Update v7.0.0.17. For more information, see: http://www.ibm.com/support/docview.wss?uid=swg24030185\n\nIBM WebSphere Application Server 6.1 Test Environment Update v6.1.0.37. For more information, see: http://www.ibm.com/support/docview.wss?uid=swg24030187\n\nBack to top\n\nAgent Controller\n\nRational Agent Controller v8.3.3\n\nUse Rational Agent Controller v8.3.3 in conjunction with version 8.0.3 of the product to get the full benefit of all enhancements and defect fixes. Rational Agent Controller v8.3.3 can also be used with v7.5.x releases.\n\nBack to top\n\nApplication build (Ant tools)\n\nNew Ant task supports running JUnit tests in headless mode.\n\nBack to top\n\nNew feature: BPMN 2.0 Interchange\n\nSupport has been added for importing into BPMN 2.0 format and exporting to BPMN 2.0 format.\n\nBack to top\n\nBPMN modeling\n\nYou can now drag and drop elements from the Project Explorer to the diagram editor for several use cases.\n\nPreviously, the Property tab had to be used to achieve the assignments or a combination of creating a new element and making the assignment from the Property tab.\n\nBack to top\n\nCode coverage tools\n\nYou can prevent delivery of code to Rational Team Concert if a specified threshold of code coverage is not met.\n\nBack to top\n\nCloud client\n\nSupport for publishing topologies to the IBM SmartCloud.\n\nBack to top\n\nCloud toolkit\n\nSupport has been added for the latest release of the IBM SmartCloud Enterprise.\n\nBack to top\n\nCompare and merge\n\nMerging changes in the documentation field is now supported.\n\nBack to top\n\nDeployment automation planning\n\nDesign and provision WebSphere ND 7.0 Platforms including Deployment Manager Nodes, Managed Nodes, and the creation of clusters from a Topology using technology from the Rational Automation Framework for WebSphere.\n\nDiscover an existing WebSphere Application Server environment using Tivoli's Application Dependency Discovery Manager and plan new application deployments into that environment.\n\nDescribe an existing or new WebSphere Portal Platform environment. Several detailed samples are included representing best practices for WebSphere Portal deployment.\n\nDescribe an existing or new Target Environment Platform using the IBM Smart Cloud Enterprise (formerly IBM Smart Business Cloud for Development & Test). Generate executable projects into Rational Build Forge or Rational Automation Framework for WebSphere to provision virtual machines as needed, assigning various resources such as storage and IP interfaces.\n\nContent which has been previously discovered from a Tivoli Application Dependency Discovery Manager (TADDM) database can be automatically refreshed within an existing topology or diagram based on what's currently available in the operational database.\n\nCommunication pathways are now also validated based on membership with Network communication groups, in addition to existing network communication constraints.\n\nA new sample provides examples of deployment automation planning with only Rational Build Forge and with both Rational Build Forge and Rational Automation Framework for WebSphere.\n\nBack to top\n\nJava EE tools\n\nYou can migrate Java EE 5 and pre-Java EE 5 projects to Java EE 6 using either of the following methods:\n\nTo migrate multiple projects, use the Java EE Specifications Upgrade Wizard.\n\nTo migrate a single project, change the project facet version.\n\nBack to top\n\nJSF tools\n\nBeta function:\n\nPalette, Properties View and visualization were added for the following components as part of the tooling for the Dojo Server Faces Beta library:\n\nMenu\n\nMenuItem\n\nMenuBar\n\nMenuBarItem\n\nPopupMenuItem\n\nPopupMenuBarItem\n\nmenuSeparator\n\nForm\n\nAdd a user interface in which you can choose the Dojo folder to use in a DSF project, such as the Dojo 1.7 alpha version inclued in the product, or a Dojo 1.7 compressed file or folder that you provide.\n\nNote: For details on beta function, see: https://www.ibm.com/developerworks/wikis/display/rad/Beta-level%20functionality%20in%20Rational%20Application%20Developer%20Version%208.0.3\n\nUpdated function:\n\nUpdated the name, URI and contex-params for Dojo Server Faces Beta library.\n\nBack to top\n\nModel execution and simulation\n\nSimulation of BPMN collaborations are now supported. Message flows between collaboration process participants can be animated both in the collaboration diagram itself, as well as in related topology diagrams.\n\nThe run-time semantics of the BPMN terminate end event is now supported when simulating a BPMN process.\n\nBack to top\n\nPortal tools\n\nSupport for Active Site Analytic feature in portlet tooling. You can use this feature to embed client side analytic tags in the portlet at design time.\n\nWebSphere Application Server 8.0 is included as a new runtime for portlet projects. Only an Empty portlet project is allowed on WebSphere Application Server 8.0 runtime.\n\nOptional Portal runtime stubs: If you already have portal server installed locally, then it is no longer necessary for the product to install the Portal and WebSphere Application Server stubs. This reduces the hard disk footprint by approximately 900 MB (100 MB portal + 800 MB WebSphere Application Server).\n\n(Beta function) Mobile browser simulator: a web application that helps you test mobile web applications without having to install device vendor native SDK.Configure Mobile Browser Simulator on a Portal Page, and display mobile portlets on this simulator.\n\nBack to top\n\nRich page editor (Beta function)\n\nRich Page Editor: a next generation web page visual editing experience for HTML and Dojo. Rich Page Editor uses a real browser to render the design canvas for true \"what you see is what you get\". The overall appearance of the editor and many common user interactions will be familiar to users of the Page Designer editor.\n\nThe DOM of the Rich Page Editor's browser will be constantly kept in synchronization with the web page source, so that changes in the source or design pane are instantly reflected in the other.\n\nNote: This is beta function. For details, see: https://www.ibm.com/developerworks/wikis/display/rad/Beta-level%20functionality%20in%20Rational%20Application%20Developer%20Version%208.0.3\n\nBack to top\n\nRational Tau model import\n\nThe Rational Tau import feature is now supported on Linux.\n\nYou can now import Rational Tau user-defined libraries into the product.\n\nBack to top\n\nSCA tools\n\nSupport for deploying as shared assets referenced contribution projects that have no deployable composites.\n\nSupport for incremental deployment of changes in Java EE and OSGi implementations.\n\nBack to top\n\nSOA extension new functions\n\nREST modeling\n\nREST-based modeling and JAX-RS modeling and transformations are now supported.\n\nYou can create and model web services according to the Representational State Transfer (REST) architectural style. This feature includes REST tools and modeling accelerators to quickly create REST based solutions and transformation to automate the generation of Java code with JAX-RS annotations.\n\nRational SOMA 2.9 practice configuration\n\nJapanese translation of the v2.9 Rational SOMA practices is now included in the product.\n\nBack to top\n\nSoaML profile and tooling\n\nThe installation options have been changed: The SoaML profile and tooling are now available in both the extension for the integrated architecture frameworks installation and the SOA and WebSphere installation extension.\n\nBack to top\n\nNew feature: Struts modeling\n\nModel-driven development support for Struts has been added:\n\nThe addition of a Struts profile for modeling struts elements\n\nStruts code generation using transformations\n\nReverse engineering of struts models\n\nBack to top\n\nTest and profiling tools\n\nNew capability allows you to view the reachable size of an object during memory analysis with heap instance data.\n\nYou can now export Java profiling results to file.\n\nPerformance improvements were made to execution analysis and memory analysis during profiling.\n\nBack to top\n\nUML-to-EJB 3.0 and EJB 3.0-to-UML transformations\n\nSupport has been added for modeling dependency injection in EJB 3.0 session beans. You can now define reference injection by creating a <<use>> dependency relationship from the session bean to the interface of the referenced session bean.\n\nWhen you run the UML-to-EJB 3.0 transformation, it generates a corresponding @EJB annotation in the generated session bean code.\n\nBack to top\n\nUML-to-WSDL and WSDL-to-UML transformations\n\nSupport has been added to the UML-to-WSDL transformation for defining and editing the target namespaces in the definition of a web service: A new stereotype called <<Definition>> has been added to the WSDL profile. You can apply this stereotype to a UML component or package, and in the targetNamespace property, specify the target namespace of the web service. You can edit this property in the following ways:\n\nIn the Modeling perspective, open the Properties view of the UML component or package that has the stereotype applied, and specify a value in the Stereotype Properties table.\n\nCreate a UML-to-WSDL transformation configuration and open the corresponding .tc file. In the transformation configuration editor, on the Output Options page, edit the target namespace value. When you run the transformation, the generated WSDL file contains the namespace value that you specify. The value of the targetNamespace property in the <<Definition>> stereotype does not change.\n\nBack to top\n\nUML modeler\n\nSupport for adding and removing columns and rows to tables in rich text for models and diagrams has been added.\n\nSupport for diagram layers to the show related elements action has been added. A context menu command to allow the selection of same typed elements has also been added.\n\nAn extension point to allow profile providers to advertise their profiles as \"pre-loadable\" has been added. Profiles that are configured to \"pre-load\" can now be loaded at application start-up and their constraints can now be individually enabled or disabled through the existing UML validation preferences.\n\nBack to top\n\nUML Profile-based Integrated Architecture (UPIA) (IAM2)\n\nSupport for converting various BPMN process elements into UPIA model elements has been added: In a BPMN process, right-click on the selected lanes or tasks, and, on the menu, select BPMN to UPIA.\n\nBack to top\n\nUser assistance\n\nA new module added to the self-paced training: Module 18 - Simulating model behavior.\n\nBack to top\n\nWeb development tools\n\nBeta function:\n\nTooling for the creation, construction, and unit testing of web pages for mobile devices; devices such as iPhone, Blackberry, and Android.\n\nTools are provided for:\n\nProject configuration\n\nMobile web page creation\n\nMobile web page construction fully integrated with Rich Page Editor\n\nMobile web page testing using a mobile browser simulator.\n\nThe mobile browser simulator allows multiple devices to be simulated side by side in a single view without leaving the development environment. This allows for rapidly identifying and correcting variations in presentation without the need for physical devices.\n\nNote: For details on beta function, see: https://www.ibm.com/developerworks/wikis/display/rad/Beta-level%20functionality%20in%20Rational%20Application%20Developer%20Version%208.0.3\n\nNew function:\n\nTooling for v1.1.0 of the WebSphere Web 2.0 and Mobile Feature Pack, including Dojo 1.7 (alpha). Dojo tooling includes support for HTML5-style declaration of attributes and properties, and CommonJS Modules/Asynchronous Definition for asynchronous module loading.\n\nThe user may selectively configure the project for only the Dojo elements they are interested in, or select from common configurations such as Mobile or the full Dojo library.\n\nJavaScript tooling now provides accurate syntactic validation and semantic validation. Semantic validation is now enabled by default.\n\nA preference is provided that allows for all web link errors to be quiesced. For servlet v3 projects it is on by default.\n\nThe JSON Editor has been enhanced to allow for use with any filename extension, an outline view has been added, and validation has been improved.\n\nUpdated version:\n\nFireBug JavaScript debugger updated to version 1.7\n\nBack to top\n\nWeb services\n\nThe Web service wizard is enhanced to support the SOAP/JMS transport type; and the support for adding custom JNDI context properties.\n\nValidation warning is now provided when an EJB module with JAX-RPC Web services and clients is linked into a WAR.\n\nJAX-RPC code generation is enhanced to generate the elementFormDefault and attributeFormDefault Java2WSDL options.\n\nThe \"Monitor Web Service\" option is enabled so that if the GSC is selected as a test client, the TCP/IP monitor will automatically be created/launched so you can monitor the web service.\n\nDownload Version 8.0.2\n\nThis release of Rational Software Architect contains new features and enhancements in the following areas:\n\nAdditional supported operating system versions\n\nIBM Runtime Environment for Java Technology updates\n\nAgent Controller\n\nAnnotation support\n\nApplication build\n\nBPMN transformations\n\nCloud Client\n\nCode coverage tools\n\nCompare and merge\n\nIBM WebSphere Application Server test environment updates\n\nJava domain modeling\n\nJava EE Connector (J2C) tools\n\nJava EE tools\n\nJava transformations\n\nMicrosoft .NET support\n\nModel execution and simulation\n\nPortal tools\n\nProfiling tools\n\nSCA tools\n\nServer tools\n\nStructured Data Importer for deployment modeling\n\nStructured Data Importer for UML\n\nTADDM discovery support\n\nUML modeler\n\nUML-to-JPA transformation\n\nUser assistance\n\nWeb development tools\n\nWeb services\n\nAdditional supported operating system versions\n\nBeginning with version 8.0.2, the following additional operating system version is supported:\n\nRed Hat Enterprise Linux 6\n\nBack to top\n\nIBM Runtime Environment for Java Technology updates\n\nIBM Runtime Environment for Java Technology is updated to the following versions for Windows and Linux operating systems:\n\nIBM 32-bit Runtime Environment for Windows, Java Technology Edition, Version 1.6 service release 9 with interim fix 002\n\nIBM 32-bit Runtime Environment for Linux, Java Technology Edition, Version 1.6 service release 9 with interim fix 002\n\nBack to top\n\nAgent Controller\n\nRational Agent Controller v8.3.2\n\nUse Rational Agent Controller v8.3.2 in conjunction with v8.0.2 of the product to get the full benefit of all enhancements and defect fixes. Rational Agent Controller v8.3.2 can also be used with v7.5.x releases.\n\nBack to top\n\nAnnotation support\n\nSupport implied values for new JCA 1.6 annotations\n\nBack to top\n\nApplication build\n\nNew Server Ant tasks are added to setup and perform actions on a server in the workspace:\n\n* listWSServers\n\n* listServerTypes\n\n* listWSRuntimes\n\n* listRuntimeTypes\n\n* createWSRuntime\n\n* createWSServer\n\n* modifyWSServer\n\n* deleteWSServer\n\n* deleteWSRuntime\n\n* addToWSServer\n\n* removeFromWSServer\n\n* publishToWSServer\n\n* startWSServer\n\n* stopWSServer\n\nBack to top\n\nBPMN transformations\n\nSupport has been added for transforming references to UML interfaces and operations in a BPMN model:\n\nThe BPMN-to-Service-Model transformation transforms references into corresponding UML service model elements.\n\nThe BPMN-to-BPEL transformation transforms references into corresponding BPEL artifacts.\n\nBack to top\n\nCloud Client\n\nThe 1.2 release of the IBM Smart Business Development and Test cloud is now supported:\n\n\"Root only\" option when requesting an instance\n\nSupport for specifying virtual IP addresses when requesting an instance\n\nSupport for cloning storage units\n\nBack to top\n\nCode coverage tools\n\nYou can now gather code coverage statistic on web application deployed on remote WebSphere Application Server. Rational Agent Controller v8.3.2 is required on the remote platform with WebSphere Application Server installed. All platforms supported by Rational Agent Controller v8.3.2 are supported.\n\nServer refresh interval for gathering code coverage statistic on web application running on a WebSphere Application Server can now be set in the server editor. This interval can either be automatically configured based on the size of the coverage data file or set manually by the user.\n\nIBM Rational Application Developer Code Coverage Extension (used to be called IBM Rational Application Developer Code Coverage for Rational Team Concert Builds) can now be installed on z/OS and Linux for z series platforms in addition to Windows and Linux to enable gathering of code coverage statistic on a system installed with Rational Team Concert Build or other environments.\n\nBack to top\n\nCompare and merge\n\nA new option is now available in the Preference page under Window > Preferences > General > Compare/Patch > Modeling Compare/Merge > UML Compare for the display order of model elements in the model compare editor.\n\nBack to top\n\nIBM WebSphere Application Server test environment updates\n\nThe following IBM WebSphere Application Server Test Environment updates are available:\n\nIBM WebSphere Application Server 7.0 Test Environment Update v7.0.0.15. For more information, see: http://www.ibm.com/support/docview.wss?uid=swg24029345\n\nIBM WebSphere Application Server 6.1 Test Environment Update v6.1.0.35 update 1. For more information, see: http://www.ibm.com/support/docview.wss?uid=swg24029347\n\nBack to top\n\nJava domain modeling\n\nJava visual references are now resolved based on the containing Java project's references. This can be controlled by the new preference option under Window > Preferences > Modeling > Java, that is not enabled by default.\n\nBack to top\n\nJava EE Connector (J2C) tools\n\nIMS TM Adapters version 10.50 and 11.30 .\n\nCICS Resource Adapter V8001.\n\nCICS Transaction Gateway Application Developer version V8001.\n\nBack to top\n\nJava EE tools\n\nYou can now reuse existing batch artifacts.\n\nThe EJB artifacts for batch/compute intensive jobs are automatically generated.\n\nValidation messages added for batch artifacts.\n\nUsability enhancements in batch wizards and editors.\n\nValidation added for EJBs in WARs.\n\nBack to top\n\nJava transformations\n\nSupport for UML Action Language translation has been added to the UML-to-Java transformation. You can now translate UAL code in operations/passive class state machines into Java code.\n\nBack to top\n\nMicrosoft .NET support\n\nYou can now use the \"Show Related Elements\" feature to navigate through the cross project references and locate related elements in different .Net projects.\n\nYou can use this feature to generate and capture \"Nullable\" types as short hand notation (such as <Type Name>? ) instead of generic representation of \"Nullable\" types.\n\nBack to top\n\nModel execution and simulation\n\nSimulation of BPMN models are now supported. It is also possible to visualize service communications in a topology diagram that is associated with BPMN model service tasks.\n\nSimulation of structured activity nodes in activity diagrams are now supported.\n\nAnimation of topology diagrams is supported when the topology diagram is connected to a UML sequence diagram, activity diagram, or BPMN diagram.\n\nBack to top\n\nPortal tools\n\nSupport for creating additional JSPs and relevant code for viewing on Mobile devices\n\nYou can create portlets that can be consumed on a smart phone browser, by generating relevant JSPs and controller code for supported mobile devices.\n\nSupport for Portal Server7 on cloud\n\nYou can provision an instance of a WebSphere Portal server v7.0 based on cloud. You can develop, test portlet and iWidget projects within the product workspace and then publish them to portal server based on cloud.\n\nBack to top\n\nProfiling tools\n\nThe performance for profiling an application (execution analysis and memory analysis) has been improved.\n\nThe new Detach icon in the Profiling and Logging perspective enables you to detach an application being profiled.\n\nBack to top\n\nSCA tools\n\nSupport for SCA components with OSGi implementations on WebSphere Application Server version 8 Beta 3.\n\nPreviously, SCA components with OSGi implementations required WebSphere Application Server version 7, the Feature Pack for SCA, and the Feature Pack for OSGi and JPA 2.0.\n\nDirect guidance in the user interface for how to enable implementation types in different contexts.\n\nThe tools present implementation types for selection in a number of dialogs, wizards, views and menus. In some of contexts, some implementation types may be unavailable for selection. SCA Tools now provide information to help you understand why an implementation type may be unavailable and also provides instructions for enabling them.\n\nThe SCA tools will automatically configure a project with the Java nature when you choose only the Spring implementation type.\n\nWhen you use the New SCA Project or Add SCA Support to Project wizards and select only the Spring implementation type, the SCA tools will automatically configure the project with the Java nature.\n\nEnhanced browse dialogs for expanding and narrowing the search scope when you are trying to locate OSGi, Java EE and Spring implementations.\n\nThe SCA tools provide several selection dialogs to help you choose resources used in SCA assemblies, including Java classes, WSDL documents, Java EE enterprise applications, OSGi applications, Spring applications, HTML files and SCA composites. The dialogs now provide a consistent mechanism that allows you to select the desired search scope. For example, you can select the workspace, working set, project, and project plus referenced projects. This feature will allow you to search for resources consistently and with improved performance.\n\nEasily retrieve the WSDL URI provided by WebSphere Application Server for a deployed SCA component service that has a Web service binding. You can then use the URI to test your service with the Web Services Explorer or Generic Services Client.\n\nIn previous releases, in order to compose the URI of the WSDL document you had to find the host, the port, component name, service name and assemble them as described in the documentation. This process is time consuming and error prone. Now you can retrieve the URI with a few clicks of the mouse and place it in the clipboard, whether the service is deployed on one or multiple WebSphere Application Server server instances.\n\nYou can automatically migrate projects targeted to WebSphere Application Server 7 plus the Feature Pack for SCA to WebSphere Application Server version 8.\n\nWhen you import a project that targets WebSphere Application Server 7 plus the Feature Pack for SCA in the workspace, the migration wizard will guide you and perform the required updates to ensure you can target and deploy the project to WebSphere Application Server version 8.\n\nBack to top\n\nServer tools\n\nNew advanced publishing settings for local installation of WebSphere Application Server.\n\nUse the settings to control incremental publish on the server based on updates to files with certain file extensions. You can define the settings specific to a server or as a workspace preference.\n\nTo specify the setting specific to a server, open the server editor and under Publishing settings for WebSphere Application Server section, click the Set Advanced Publishing Settings link.\n\nTo specify the settings as a workspace preference select Window > Preferences > Server > WebSphere Application Server > Advanced Publishing Settings\n\nThe workbench supports High Performance Extensible Logging (HPEL) mode for WebSphere Application Server V8.0 Beta.\n\nHPEL is designed to provide faster log and trace handling capabilities and more flexible ways to use log and trace content than the basic mode.\n\nWhen either a remote or local installation of WebSphere Application Server V8.0 Beta is enabled with HPEL, the console view displays in the same format as basic logging. In addition, from the Servers view, when you right-click the server and select Properties > WebSphere Application Server and click the Display a snapshot of the binary server logs link the workbench translates a snapshot of the binary server logs into readable text which displays in the editor pane.\n\nNew Cloud data centers in Toronto (ca-on-dc1) and in Boulder(us-co-dc1) are supported.\n\nCloud image sharing within a community group is supported. Images created by a community member can be shared between members in the group.\n\nAdditional server support for running batch applications on WebSphere Application Server V8.0 March, 2011 Beta refresh.\n\nAn Updated substitution properties section is added to the Run Configurations wizard under the WebSphere Application Server Batch Job page.\n\nUse this section to specify new property values to override the default values for substitution properties defined in a job during a run configuration session. You can set information in the run configuration settings, without modifying the actual batch job (xJCL) file. This is helpful when substitution properties contain environment-specific values, such as file paths.\n\nAfter running the WebSphere Application Server Batch Job page of the Run Configurations wizard, the Modern Batch Job Management Console opens the specific Job log page directly and no longer displays the main console page\n\nBack to top\n\nStructured Data Importer for deployment modeling\n\nYou can use JET transformation projects to import information from structured data such as spreadsheets (.csv) files into topologies.\n\nBack to top\n\nStructured Data Importer for UML\n\nJET tags have been added for importing the following UML model elements:\n\nURL links\n\nUML components\n\nApply Profile, Apply Stereotype, and Set Stereotype properties\n\nBack to top\n\nTADDM discovery support\n\nTivoli Application Dependency Discovery Manager (TADDM) discovery support is now enhanced to discover the WAS (WebSphere Application Server) information from CMDB server.\n\nBack to top\n\nUML modeler\n\nProject Explorer view\n\nA \"Links\" folder (similar to that for associations) has been added. Links are displayed in the \"Links\" folder. If a link is modified such that it is no longer a link (e.g. changing its classifier from an association to a class), it will be moved out of the Links folder.\n\nClicking the + (plus sign) next to a fragmented package will now load and expand the fragmented package.\n\nAbility is now supported to convert BPMN elements of one type into elements of another type.\n\nImproved XMI import, specifically for Interactions in models exported by Sparks EA.\n\nIncludes the affected closed model files in the Preview dialog for the Refactor Rename operation.\n\nDefault Value field is added to the Properties view General tab for the selected Parameter object.\n\nAble to type in the Default Value field in Properties view Parameters tab for selected Operation object.\n\nThe Value field is added to the Properties view General tab for easily changing the value of the Literal object.\n\nSupport for the UML 2.3 'isConjugated' property for ports has been added.\n\nNow, when you use the service modeling tooling create a new request, the tooling automatically applies the \"isConjugate\" property to the port that underlies the request. As a result, the new request's provided and required interfaces will be the mirror images (the \"conjugates\") of the realized and used interfaces of the UML element that is used to type the request. The tooling does not automatically apply the \"isConjugate\" property to pre-existing requests. Thus, designers who have previously manually created conjugated types and used those to type their requests will not be adversely impacted by the new support for \"isConjugate\".\n\nUML Diagrams can now display:\n\nDot notation for associations navigability\n\nAttribute and role qualifier decoration (e.g. static, ordered, non-unique, redefined properties, subsettable properties, etc.)\n\nYou now have the option to upgrade all the models in the workspace at once. You are notified when the upgrade completes.\n\nA new validation rule will mark relationship edges in diagrams that do not correctly represent the actual relationship. A quick fix is provided to automatically repair or remove invalid edges.\n\nThe existing Unresolved Relationships decoration can now be disabled by a preference in Modeling > Appearance.\n\nBack to top\n\nUML-to-JPA transformation\n\nAdditional JPA 2.0 support was added to the UML-to-JPA transformation:\n\nEnhanced support for maps: Map key and map value can each be a basic type, an embedable type, or an entity\n\nJPA 2.0 support for collections of embedable types\n\nSupport for Order By and Order Column annotations\n\nBack to top\n\nUser assistance\n\nThe Local Help Updater now supports installing single features. It no longer requires features to be part of a category.\n\nThe radio buttons were removed from the help content preference page which were causing confusion both internally and from the customer end. Now default is set to remote help having priority over local help, instead of letting users choose.\n\nAutomatic Updates job starts right as local help server is started, rather than forcing users to kick off an update from the Local Help Updater.\n\nBack to top\n\nWeb development tools\n\nVersion updates for the following items:\n\nThe Mozilla FireBug JavaScript debugger has been upgraded to 1.6\n\nTooling support for WebSphere Communications Enabled Applications Feature Pack v1.0.0.9\n\nThe iWidget container has been upgraded to specification level 2.1 (IBM Mashup Center 3.0).\n\nCSS 3 support\n\nDifferentiation between CSSv2 and CSSv3\n\nIdentifying which browser and browser version support each attribute.\n\nDojo snippets are provided for frequently used code.\n\nAdditional Dojo content assist templates.\n\nA new Dojo tutorial that creates a mortgage calculator has been added.\n\nJAX-RS container support has been added to the Ajax Test Server.\n\nThe Ajax Test Server now automatically restarts when referenced projects Java source change.\n\nThe Target URL is displayed in the Ajax Test Server editor and the proxy configuration editor.\n\nThe Ajax proxy editor provides support for common metadata properties.\n\nSelecting the iWidget facet also provides Dojo tooling support.\n\nContent assist for Dojo Objective Harness unit test functions is provided.\n\nBack to top\n\nWeb services\n\nJAX-RS 1.1 support - As part of the Web 2.0 FeP v1.0.1.1 upgrade, JAX-RS 1.1 support was added. For example, selecting the JAX-RS preset will result in a JAX-RS 1.1 configuration.\n\nAdded new support for managing policy set attachments on service refs in binary beans, JAX-WS Handlers, and deployment descriptor elements. A new Registered JAX-WS Handlers folder is added under the Services node.\n\nAdded the allow vendor extension option (-extension) to the web services wizard and preferences. This is for the various JAX-WS tools, wsgen, wsimport and xjc.\n\nDownload Version 8.0.1\n\nThis release of Rational Software Architect contains new features and enhancements in the following areas:\n\nAdditional supported operating system versions\n\nEclipse platform updates\n\nMicrosoft .NET modeling\n\nModel execution and simulation\n\nRational System Architect integration: Transformation for UML\n\nStructured data import\n\nIBM WebSphere Application Server test environment updates\n\nCompute Grid tools for Modern Batch - new installable feature\n\nCode coverage tools\n\nJava EE tools\n\nOSGi tools\n\nPortal tools\n\nProfiling extensions\n\nSCA tools\n\nSource editor\n\nWeb services\n\nAdditional supported operating system versions\n\nBeginning with version 8.0.1, the following additional operating system versions are supported:\n\nSUSE Linux Enterprise Server 11 Service Pack 1\n\nSUSE Linux Enterprise Desktop 11 Service Pack 1\n\nBack to top\n\nEclipse platform updates\n\nThe following additional Eclipse 3.6 patches and fixes are included in this release:\n\nEclipse platform: Bugzilla fixes 325125, 325797, 326152\n\nEclipse Data Tools Platform (DTP): Bugzilla fix 328294\n\nEclipse Equinox p2: Bugzilla fix 312254\n\nEclipse Java Development Tools (JDT): Bugzilla fix 325161\n\nRemote System Explorer (RSE) framework: Bugzilla fixes 317541, 323299, 328157\n\nRich Client Platform (RCP): Bugzilla fix 330133\n\nTest and Performance Tools Platform (TPTP) Project: Bugzilla fixes 326428, 327686\n\nWeb Tools Platform (WTP) patches: Bugzilla fixes 325529, 325800, 325818, 325879, 325894, 325988, 325990, 325991, 326062, 326102, 326318, 326346, 326349, 326413, 326417, 326428, 326431, 326467, 326468, 326470, 326482, 326549, 326573, 326576, 326585, 326602, 326603, 326605, 326632, 326713, 326817, 326818, 326934, 326963, 326971, 327162, 327247, 327276, 327278, 327279, 327280, 327369, 327572, 327686\n\nBack to top\n\nMicrosoft .NET modeling\n\nPalette support for C#, Visual Basic, and Windows Communication Foundation (WCF) profiles.\n\nBack to top\n\nModel execution and simulation\n\nAutomated simulation is now supported where random choices are selected by the simulation. There is a new launch configuration preference \"Execution Type\" which allows you to set this up.\n\nFor run-time decisions, one of the decision alternatives is picked randomly. For signal sending, a random signal will be sent to an instance when its event queue is empty. The random signal is selected from the set of signals that can be received by the instance, and if it has any parameters, default values are used for the actual event arguments.\n\nThe benefit with this new feature is that it is now possible to simulate a large number of behaviors automatically, by using the Run As command, without any need for user interaction.\n\nBack to top\n\nRational System Architect integration: Transformation for UML\n\nSupport for import and export of AssociationClass from/to Rational System Architect to/from Rational Software Architect.\n\nBack to top\n\nStructured data import\n\nFuse support to merge the imported model information to the target model:\n\nEarlier during the structured data import, the target model was directly updated with the model information imported from the spreadsheets (.csv). In 8.0.1, Fuse support is provided to merge the imported model information to the target model.\n\nBack to top\n\nIBM WebSphere Application Server test environment updates\n\nThe following IBM WebSphere Application Server Test Environment updates are available:\n\nIBM WebSphere Application Server 7.0 Test Environment Update v7.0.0.13. For more information, see:\n\nhttp://www.ibm.com/support/docview.wss?uid=swg24028402\n\nIBM WebSphere Application Server 6.1 Test Environment Update v6.1.0.33 update 1. For more information, see:\n\nhttp://www.ibm.com/support/docview.wss?uid=swg24028403\n\nBack to top\n\nCompute Grid tools for Modern Batch - new installable feature\n\nSupporting the new Feature pack for Modern Batch, the WebSphere Compute Grid Tools introduce a set of projects, wizards, views, editors and actions for creating, editing and launching batch jobs, and assist the developer in assembling artifacts that are part of the compute grid programming model.\n\nBack to top\n\nCode coverage\n\nThe code coverage tooling now includes functionality for comparing coverage reports.\n\nBack to top\n\nJava EE tools\n\nTooling support for developing EJB beans inside Web projects for WebSphere Application Server v8 beta. The existing EJB 3.0 tools that are used for developing EJB beans inside EJB projects can now work for developing EJB beans in Web 3.0 projects.\n\nBack to top\n\nOSGi tools\n\nYou can now publish OSGi applications to WebSphere Application Server v8 beta.\n\nYou can now retrieve the deployment Manifest file from WebSphere Application Server v8 beta and view its contents in the workbench.\n\nThe usability of the OSGi Bundle creation wizard is improved.\n\nBack to top\n\nPortal tools\n\nTooling support for new runtime IBM WebSphere Portal V7.0 has been introduced, to allow creation of portlet projects and testing them on WebSphere Portal V7.0.\n\nSupport for publishing a project with Portlet and iWidgets.\n\nUser can create iWidgets in the same project as a portlet project and they can be published on to the server like a normal portlet or iWidget project and each artifact gets handled as they are supposed to be handled.\n\nA new section has been introduced for publishing of portlets and iWidgets for Portal Server 7\n\nPortal server 7 has new CSA 2.0 theme as default theme, it provides 2 rendering modes - CSA and SSA. To support the creation of pages in a specific rendering mode, a section has been provided in Server editor for Portal Server v7.\n\nIBM JSF Portlet bridge support for JSR 286 Portlet porjects based on JSF 1.2.\n\nIBM Portlet bridge will now support the JSR 286 JSF Portlet projects. Palette options and tooling support for JSR 286 features like eventing and resource serving for JSF Portlet projects have been added.\n\nConsumption of JSR 301 portlet bridge:\n\nTooling support for creation of JSR 168 Faces Portlet projects which use JSR 301 compliant bridge has been added. User can maintain the 3rd party JSR 301 portlet bridge through preferences dialog and use these while creating the portlet project targeting WebSphere Portal V6.1 on WebSphere Application Server v7.0 and WebSphere Portal V7.0.\n\nBack to top\n\nProfiling extensions\n\nAdded a Profiling Quick Start button to the Profile Settings tab in the Profile Configurations wizard. Profiling Quick Start walks you through common profiling scenarios and help you set up the appropriate profile settings.\n\nEnable you to import heap instance data file into workspace.\n\nBack to top\n\nSCA tools\n\nAdded support for EJB 2.x beans in the EJB workspace browse dialog box for EJB binding configuration.\n\nEnhanced the tree view in the Servers veiw for SCA contributions so that Java EE applications and OSGi Applications are shown as children of the SCA contribution if they are used by the contribution.\n\nAdded a new sample so that the user can learn more about using OSGi applications in an SCA contribution.\n\nBack to top\n\nSource editor\n\nHTML 5 Support in Source Editor:\n\nSupport for the new Content model of HTML 5 in the form of validation and content assist has been added in Source Editor. This support is only in Source editor and Page Designer has not yet added the HTML 5 support.\n\nBack to top\n\nWeb services\n\nStarting in this release, it is no longer necessary to create a Router project for EJB beans exposed as JAX-WS Webservices.\n\nTooling support is added for WebSphere Application Server custom properties.\n\nDownload Version 8.0\n\nThis release of Rational Software Architect contains new features and enhancements since the last release in the following areas:\n\nAssembly and deployment tools\n\nBPMN Modeling\n\nBPMN-to-BPEL transformation\n\nBPMN-to-service model transformation\n\nCode Coverage\n\nCompare and merge\n\nDebug tools\n\nDeployment Architecture Platform\n\nDeployment planning tools\n\nEclipse Cloud Client\n\nIBM Rational Desktop Connection Toolkit for Cloud Environments\n\nJava EE 6\n\nJava EE Connector (J2C) Tools\n\nJSF Tools\n\nMicrosoft .NET modeling and transformations\n\nModel execution and simulation\n\nModeling for communications applications\n\nOSGi application development tools\n\nPage designer\n\nPortal tools\n\nProfiling tools\n\nRational License Key Server\n\nRational Rose model import\n\nRational Tau model import\n\nService Component Architecture (SCA) Tools\n\nStructured data import\n\nSupport for Microsoft Visual Basic\n\nToken licensing\n\nTransformation core\n\nUML Action Language\n\nUML modeler\n\nUML modeling\n\nUML Profile-based Integrated Architecture (UPIA) (IAM2)\n\nUML-to-Java transformation\n\nUser assistance: New training course\n\nWeb 2.0\n\nWeb development tools\n\nWeb Services\n\nXML tools\n\nAdditional Eclipse patches and fixes\n\nAssembly and deployment tools\n\nThe workbench can integrate with WebSphere Application Server v6.0, v6.1, v7.0 and v8.0 Beta 1. You can use the IBM Installation Manager to install the integrated test environment for WebSphere Application Server v6.1 and v7.0. However for WebSphere Application Server V6.0 and v8.0 Beta 1, integrated test environments are no longer available and stand-alone installations are required for these servers.\n\nWhen installing Rational Application Developer using IBM Installation Manager, the stub directories are now available as Tools for developing applications without a local server installation options and are no longer required to be installed with the product. This can help save disk space, for example when choosing to use a local installation of the server instead of the stub directories.\n\nNew server tools\n\nThe Servers view is now condensed to display the state and status of a server as label decorators. This adds flexibility when placing the Servers view in a horizontal or vertical pane on the workbench.\n\nWebSphere Application Server v8.0 Beta 1 adds support for Java EE 6 and EJB 3.1.\n\nUniversal Test Client adds support for testing EJB 3.1.\n\nA new configuration setting is available to start a remote WebSphere Application Server running on a Windows or Linux operating system. You can choose to use an operating systemor Secure Shell (SSH) authentication method to access the remote host running the server.\n\nA new wizard is added for importing sample applications targeting a WebSphere Application Server when the stub directory or local installation of the server is not available.\n\nNew behaviors for Run server with resources within the workspace publishing option:\n\nSaving changes to static files no longer requires a publish operation to occur. This is designed to improve the Run on Server experience for modifying static files.\n\nDuring a publishing operation, the workbench locks the projects involved in the publishing operation instead of the locking the entire workspace. This new design allows you to modify other resources within the workbench during the publish operation.\n\nA new support is available to help reduce the start time of the WebSphere Application Server. The Start server with a generated script option starts the server with a previously generated script instead of using the startServer command directly.\n\nBack to top\n\nBPMN modeling\n\nNew features\n\nSupport for Business Intelligence and Reporting Tools (BIRT) reporting on Business Process Modeling Notation (BPMN) models has been added. Two report layouts are provided, allowing users to create a basic diagram report or a basic metrics report of a BPMN model. These layouts can be modified by the users.\n\nModel validation is now supported on BPMN models and can be used to identify cross-model references that cannot be resolved. BPMN elements in the Project Explorer view and BPMN Diagram Editor are decorated with problem markers when validation problems are found. A quick-fix is provided to repair the broken references.\n\nSupport for UML Interfaces in BPMN model has been added. You can add UML Interfaces in the list of supported interfaces for the processes. You can also set UML Operations for a Service Tasks and Message Event Definitions.\n\nBack to top\n\nBPMN-to-BPEL transformation\n\nNew feature\n\nSupport for generating BPEL from a BPMN model has been added. The UML-to-SOA transformation invokes the BPMN-to-BPEL transformation when it encounters in the source UML model an Opaque Behavior that contains a link to a BPMN process. The BPMN-to-BPEL transformation is not a stand-alone transformation; therefore you cannot create a configuration to run this transformation.\n\nBack to top\n\nBPMN-to-service model transformation\n\nEnhancement\n\nThe BPMN-to-Service-Model transformation now transforms UML elements that are referenced as data types in a message in a BPMN model.\n\nThe BPMN-to-Service-Model transformation also now transforms processes in other BPMN models that are referenced by the model that you specify as the transformation source.\n\nBack to top\n\nCode coverage analysis Code coverage tools provide insight into how well your test cases are exercising your Java applications by generating statistics showing the percentage of lines in your code that have been run by a test case. You can compile the code coverage results into reports that you can view in the workbench or save in HTML files for future analysis.\n\nNew features of code coverage tools in this release:\n\nIntegration with Rational Team Concert. You can generate code coverage statistics during project builds in Rational Team Concert. You can view these as part of the Rational Team Concert builds results viewer and create work items directly from the viewer, or you can download reports to your workbench to get rich navigation and visualization of the coverage statistics in your workbench.\n\nDynamic instrumentation. Instead of inserting instrumentation code (code inserted into your Java classes at the start of every executable unit for generating code coverage statistics) into the class files of your application and then saving the instrumented class on disk, the byte-code for you Java classes are instrumented at the time that they are loaded by the JVM.\n\nIntegration with WebSphere Application Server. You can run a code coverage enabled application on WebSphere Application Server without having to set up environment variables. Code coverage tools automatically detect which module projects have been deployed to the server and will start data collection automatically. You can gather code coverage statistics while running in run, debug, and profiling modes. Coverage statistics are updated while you interact with your Web application.\n\nBack to top\n\nCompare and merge\n\nNew feature\n\nSix wizards have been added to generate code to enable compare and merge extensibility, including a compare and merge client and extensions.\n\nEnhancements\n\nAn alias change now shows up as one single change instead of an add change and a delete change when performing a compare and merge.\n\nCompare and merge view filters are respected in the exported log file.\n\nBack to top\n\nDebug tools\n\nSupport for debugging XSLT 2.0 applications\n\nBack to top\n\nDeployment Architecture Platform\n\nNew feature\n\nYou can use modeling deployment features for Microsoft .NET applications and related systems to describe and model Microsoft .NET Applications, Microsoft .NET Frameworks and runtime environments, IIS Servers and SQL Servers. A new ANT task for preparing for deployment is available. By using this new ANT task, you can have a common build process for local developing and deploying to testing or production systems. This ANT task to is equivalent to the WebSphere Application Server task WsDeploy.\n\nBack to top\n\nDeployment planning tools\n\nNew feature\n\nYou can now create your own topology editor domains, including custom unit types and custom capability types with custom attributes. Then you can use these units and capabilities in the topology editor just like the predefined unit and capability types.\n\nYou can use the filtering options in the Project Explorer view to search for units by their captions.\n\nEnhancements\n\nMany domains in the topology editor have been updated to support new versions of software, including WebSphere Application Server 7.0 and DB2 9.7.\n\nThe process of linking units together has been simplified; now, you can drag a single link handle from one unit to another to create any type of link, rather than by using a different link handle for each type of link.\n\nThe properties of a unit are more closely accessible directly from the topology editor. You can double-click any unit to show a pop-up window that contains all of the same information about that unit as is available in the Properties window.\n\nThe New Topology wizard has been streamlined to make creating new topologies simpler. This wizard also includes sample topologies, so you can start from an example of a topology or a particular type of topology rather than a blank topology.\n\nMany new display options are available in the topology editor, including the following:\n\nThe topology editor now supports themes and appearances in a way consistent with the UML model editor.\n\nDiagrams can be organized into layers, which allows you to show, hide, or lock the units on a layer.\n\nYou can apply a variety of automatic layouts to your topology diagrams to help you organize and simplify large diagrams. Several different standard arrangements of units and links are available on the Graph Layout and Link Layout tabs of the Properties view.\n\nYou can organize the links in a diagram with the Clarify Links action, which shows links to more highly connected units in bolder colors.\n\nYou can write information about topology elements on the documentation page of the Properties view. This page provides a place for documentation for each topology, diagram, unit, capability, and requirement.\n\nThe integration between the topology editor and the UML model editor is enhanced in the following ways:\n\nWhen you import UML components into topologies, the deployment units associated with those components also appear in the topologies.\n\nUnits that you import into topologies retain a clickable link to the original UML element.\n\nYou can visualize topology units into more types of UML diagrams, including freeform, deployment, component, use case, communication, and activity diagrams.\n\nBack to top\n\nEclipse Cloud Client\n\nNew feature\n\nThe Eclipse Cloud Client adds capabilities to interact with the IBM Smart Business Developer & Test cloud from within the product. It provides easy access to cloud entities such as images, instances, keys and storage units. Instances can be requested, rebooted and terminated. Optionally it also adds support to request image instances from topology diagrams and Rational Asset Manager catalog searches.\n\nBack to top\n\nIBM Rational Desktop Connection Toolkit for Cloud Environments\n\nNew feature\n\nCloud computing is a new service available that simplifies the process of testing and deploying software by providing a flexible hosting environment that configures itself to the needs of each user. Using the tools in the IBM Rational Desktop Connection Toolkit for Cloud Environments, you can manage resources on and deploy to the IBM cloud.\n\nAs for Rational Software Architect, there are three installable components to the IBM Rational Desktop Connection Toolkit for Cloud Environments:\n\nCloud Client for Eclipse\n\nProvides tools for interacting with IBM Cloud environment from within Rational Software Architect, such as browsing the IBM Clouds asset catalog, requesting instances, and managing running instances.\n\nServer Tools Extension for the Cloud\n\nProvides tools for deploying applications to virtualized WebSphere Application Server instances on the IBM Cloud. This feature requires the Extension for SOA and WebSphere feature if installing on Rational Software Architect v8.0.\n\nDeployment Modeling Extension for the Cloud\n\nEnables the Extension for Deployment Planning and Automation to interact with IBM Cloud environments, for purposes such as using Cloud assets to define and request target environments and validating the settings and compatibility of those environments. This feature requires the Extension for Deployment Planning and Automation feature in Rational Software Architect v8.0.\n\nThese components can be installed through IBM Installation Manager. If you are interested in working with the IBM Cloud and would like to find out more about the IBM Cloud, look at pricing, or talk to a service representative, please contact IBM as described on the following page: Power your development and testing environment with cloud computing.\n\nBack to top\n\nJava EE 6\n\nJava EE 6 simplifies Java EE 5 by improving usability. Java EE 6 adds new capabilities to the platform and adds new features to existing technologies such as EJB, Java servlet technology, and JavaServer Faces (JSF) technology.\n\nJava EE 6 continues the usability improvements made in previous releases of Java EE, making it easier to develop enterprise and web applications. Annotations define web components such as servlets and servlet filters.\n\nJava EE 6 adds new technologies that make the platform even more powerful:\n\nJSF 2.0\n\nJava API for RESTful web services (JAX-RS)\n\nJAX-WS 2.2\n\nJPA 2.0\n\nServlet 3.0\n\nEJB 3.1\n\nTooling support for Java EE 6\n\nJSR-109 1.3: webservices.xml editor.\n\nBindings/Extensions editing and validation support for no-interface and singleton session beans.\n\nProject creation wizards for EE 6 projects\n\nDeployment support for EE 6 projects.\n\nEditor support for all EE 6 deployment descriptors including the new fragment.xml for Web Fragments.\n\nJava EE Import/Export support for all EE 6 artifacts.\n\nDisplay EE 6 model in Enterprise Explorer.\n\nEJB 3.1 Bean creation wizard enhancements.\n\nPublishing of EE 6 modules to WebSphere Application Server version 8 Beta.\n\nBack to top\n\nJava EE Connector (J2C) Tools\n\nJava EE 6 toleration\n\nCICSECIResourceAdapter and CICSXAResourceAdapter update to Version 8.\n\n(new) CICS Transaction Gateway (CTG) V8.\n\nIMS TM Resource Adapters updates to version 11.20 and 10.40.\n\nEnhance deployment support for Faces Web page.\n\nBack to top\n\nJSF Tools\n\nJSF 2.0\n\nIn JSF 2.0, Facelets 2.0 is the standard view decoration language for JSF application development. Facelets provides a lightweight templating framework that is designed for component reuse and ease of development and maintenance. The JSF tools in this product fully support JSF 2.0 and Facelet development. You can create Facelet pages and templates, drag and drop Facelet UI components from the palette to your page, and edit the component attributes in the Properties view. JSF 2.0 offers the following new features:\n\nManaged bean configuration using annotations instead of XML.\n\nFacelet template and instance page creation.\n\nComposite components, that help you to turn a page into a JSF UI component.\n\nNative AJAX support of partial page refreshes.\n\nBookmarking support with new link and button tags.\n\nBack to top\n\nMicrosoft .NET modeling and transformations\n\nNew features\n\nAll existing Microsoft .NET modeling and transformation features are now supported by Microsoft Visual Studio 2010.\n\nSupport for Microsoft .NET 4.0 features is available. The following features are supported for C# 4.0 and Microsoft Visual Basic 10:\n\nDynamic types and optional method parameters for C# 4.0\n\nAuto-implemented properties, collection initializers and the From keyword in field and property initializers for Visual Basic 10\n\nModeling and transformation of covariant and contravariant type parameters for both C# 4.0 and Visual Basic 10\n\nBack to top\n\nModel execution and simulation\n\nNew features\n\nIt is now possible to simulate UML behavior models. All kinds of UML behaviors are supported (activities, interactions, state machines and UAL opaque behaviors). During simulation UML diagrams will be animated with runtime information, such as the next element to execute, already executed elements, the location of activity tokens, the active state etc. Traditional debugger-like features such as breakpoints, restart, suspend/resume are available, as well as modeling specific features such as the ability to define events to be injected into simulated event-driven models.\n\nModel simulation can be used together with the Deployment Planning and Automation feature in order to visualize the execution of UML interactions and activities in topology diagrams. The communication between deployment units will be animated, and it is also possible to visualize the communication history by means of overlayed arrows in the topology diagrams. These annotated deployment diagrams can be used as a means to communicate an IT architecture to various stakeholders, to find flaws in the suggested design, and to visualize key scenarios in the proposed deployment topology.\n\nBack to top\n\nModeling for communications applications\n\nNew feature\n\nModeling for Communication Application now supports SIP servlet 1.1 (JSR-289) specification for modeling SIP applications. It also supports generation of SIPp files from Call Flow models through Call Flow–to-SIPp transformation.\n\nBack to top\n\nOSGi application development tools (new installable feature)\n\nThe OSGi application framework provides a programming model for developing, assembling, and deploying modular applications that use Java EE and OSGi technologies. OSGi application development tools help you to build enterprise applications that benefit from the modularity, dynamism, versioning, and third-party bundle integration provided by the OSGi applications framework. Using OSGi applications, you can deploy and manage your applications as a set of versioned OSGi bundles. You can also configure one or more bundle repositories to host common bundles used by multiple applications simplifying the deployment of applications that use the common bundles.\n\nThe OSGi application development tools accelerate and simplify the development of OSGi applications and bundles by helping you:\n\nCreate OSGi bundles, composite bundles, and applications. Bundles contain Java code, resources, and a manifest that describes the bundle and bundle dependencies. Composite bundles group bundles into aggregates to ensure consistent behavior. Applications group a set of bundles to provide a coherent business logic and can access external bundle repositories.\n\nImport and export OSGi bundles, composite bundles, and applications.\n\nConvert existing Java EE web, JPA, plug-in, or simple Java projects into OSGi bundles to take advantage of the many benefits of the OSGi framework.\n\nEdit OSGi application manifest files. The manifest file contains metadata that enables the OSGi Framework to process the modular aspects of the bundle.\n\nCreate and edit OSGi blueprint configuration files that contain the component assembly and configuration information for a bundle. The file describes how components are registered in the OSGi service registry or how they look up services from the OSGi service registry.\n\nCreate and edit OSGi blueprint binding configuration files that contain the resource references to authentication alias bindings for a bundle. If an OSGi application contains an OSGi blueprint binding configuration file when it is deployed as an asset, the binding configuration file provides the default authentication alias values that are used when binding the resource references.\n\nSupport blueprint extension elements such as transaction and JPA.\n\nDeploy OSGi applications to the WebSphere Application Server Version 7.0 Feature Pack for OSGi Applications and Java Persistence API 2.0.\n\nDiagnose and fix problems in your bundle and applications using validation and quick fixes.\n\nView your bundles and bundle details graphically in the Bundle Explorer.\n\nBack to top\n\nPage designer\n\nSupport for standards and standard currency:\n\nTools to support visual editing of Facelet pages.\n\nTools to support visual design of Dojo pages. Dojo widgets can be dragged and dropped from the Dojo palette onto the Web page and the widgets' properties can be edited in the Properties view.\n\nProductivity enhancement\n\nDrag and drop Flash objects from the palette, visualize the object in the Design pane and receive autocomplete help for new Flash attributes in the Source pane.\n\nConvert widgets from one widget type to another type.\n\nJSP Fragment editing helps determine how a fragment will be visualized when included in different files.\n\nJSP include support for VCT.\n\nSVG Image rendering feature enables users to include .svg images in Web pages, visualize in the Design pane and set the size as a normal image.\n\nView all the pages affected by changing a particular style rule in a CSS file.\n\nBack to top\n\nPortal tools\n\nDojo tooling for portlet applications.\n\nInter-portlet communication using Dojo events.\n\nSite Designing Portlet.\n\niWidget tooling for Portal.\n\nRemote Procedure Call Tooling.\n\nOption to enable/disable the Dev mode on Portal server runtime.\n\nTooling support for WebSphere Portal Server v6.1.x and v7.0.\n\nTooling support for multiple profiles for WebSphere Portal v7.0\n\nBack to top\n\nProfiling tools\n\nNew features\n\nUse profiling tools to identify and fix performance issues in your applications. The profiling tools perform memory-usage analysis, method-level execution analysis, and thread analysis.\n\nNew features of profiling tools in this release:\n\nEnvironment variables do not need to be defined when profiling applications running on a local WebSphere Application Server and some remote WebSphere Application Servers.\n\nObject names and live data content are available during memory-usage analysis.\n\nIn conjunction with IBM Rational Agent Controller, Version 8.3, you can profile an application running on a remote WebSphere Application Server, Version 6.1, 7.0, and 8.0 Beta on Windows, Linux, AIX, z/OS, Linux for System Z, Solaris SPARC, and Solaris x86.\n\nProfile tooling code is now generated to permit the creation of tooling elements through the Project Explorer menu.\n\nIt is now possible to create tooling for stereotypes on association classes.\n\nBack to top\n\nRational License Key Server\n\nUpdate\n\nRational License Key Server, Version 8.1.1 is now available for the version 8.0 release of the product. You must upgrade your license server to Rational License Key Server, Version 8.1.1, before installing the product, if you use FLEXlm floating or token licenses for your product and chargeable components. Rational License Key Server, Version 8.1.1 is backward compatible. You can use Rational License Key Server, Version 8.1.1 with earlier versions of the product. For information about how to upgrade from v7.1.x or an earlier Rational License Key Server to v8.1.1, see http://publib.boulder.ibm.com/infocenter/rational/v0r0m0/index.jsp?topic=/com.ibm.rational.license.doc/topics/r_migration.html.\n\nBack to top\n\nRational Rose model import\n\nNew feature\n\nTo import subunits incrementally into the Rational UML modeling products, on the Rational Rose model Subunit Conversion page select the Import subunits incrementally check box.\n\nBy using this import option, you can use less memory to import subunits of a large Rational Rose model and remap the model to the existing model or package faster.\n\nNote: If you have a large Rational Rose model with no subunit, try breaking the model into subunits and use the incremental import option.\n\nBack to top\n\nRational Tau model import\n\nNew feature\n\nThis new importing feature simplifies the reuse of Rational Tau models by creating model projects from Rational Tau project files. The import process includes many common model elements and diagrams. Some manual cleanup and remodeling is required after you import a model.\n\nBack to top\n\nService Component Architecture (SCA) Tools\n\nAdded OSGi application as a new implementation type for Service Component Architecture (SCA) components. You can create and edit OSGi application components using v8.0 of the product and can deploy and test SCA contributions with OSGi application components onto the WAS v7.0 server with OSGi and SCA FePs.\n\nAdded a browse dialog for defining an EJB binding. The dialog allows the user to browse and choose the EJB 3.x beans and WAS servers in the workspace. The URI attribute of the EJB binding is constructed based on the user choices.\n\nAdded support in the New Component Wizard, Regenerate implementation wizard and Generate JAX-WS Interface wizard for WSDLs with portType only.\n\nAdded SCA property reflection support in the Refresh from Implementation wizard.\n\nBack to top\n\nStructured data import\n\nNew feature\n\nYou can now import data stored in a comma-separated value format. The import is driven by Java Emitter Templates (JET) transformations and can be readily extended to handle a number of different structured formats such as spreadsheets. The imported data are mapped to create UML and UML Profile-based Integrated Architecture (UPIA) representations.\n\nBack to top\n\nSupport for Microsoft Visual Basic\n\nNew feature\n\nModeling, code generation, and reverse engineering is now support for Microsoft Visual Basic.\n\nBack to top\n\nToken licensing\n\nNew support\n\nToken licensing is supported in the version 8.0 release of the product, including the chargeable components. Token-based licensing is a form of floating licensing in which licensing is tracked at the level of the tools or features being used instead of how many instances of a product are in use. In token licensing, an organization buys a pool of license tokens. When a user starts a feature of the product, a number of tokens are issued to that user out of the pool of tokens available. For more details about token licensing, contact your local IBM marketing representative.\n\nBack to top\n\nTransformation core\n\nNew feature\n\nA new transformation, called the composite transformation, is available to run multiple transformation configurations in one action. You can create a transformation configuration for the composite transformation and specify a list of other transformation configurations to run. When you run the composite transformation configuration, the transformation runs all the transformation configurations in the list.\n\nBack to top\n\nUML Action Language (UAL)\n\nNew feature\n\nUML Action Language (UAL) is a surface language for UML Action Semantics. You can now create a model with a default language set as UAL and have a package import to one of the UAL model libraries. UAL Editor has a typical modern IDE editor features such as syntax coloring, compilation error markers, and model based content assist for code completion. It can be used to add or edit UAL action code snippets to opaque elements (behavior, expression, action).\n\nYou can use UAL compilation and translation framework to compile and validate the UAL code snippets in the context of a model. You can also use it to create extensions to UML transformations for various target languages (such as C++, Java, C#) to translate the UAL code snippets to the target language.\n\nBack to top\n\nUML modeler\n\nNew features\n\nSupport for diagram layers has been added. The relevant UI is in the new Layers view. It is possible to lock or unlock layers to prevent editing, hide or show layers, select shapes on layer, and reorder layers (to reorder the z-order of shapes on the layer).\n\nIn the Project Explorer view, preferences have been added to allow displaying the workspace path and to show models and profiles under the corresponding file.\n\nDecorations for validation results now appear on the diagram in addition to the existing decorations in the Project Explorer view. Hovering over the decorator displays a tool tip with an explanation.\n\nA Problems dialog box on Selection dialog box has been added to show problems on the selection and optionally its children. The dialog box allows performing multiple quick fixes at once or displaying multiple constraint definitions at once.\n\nMarking models have been introduced to support different views of the same model. Profiles applied to the marking model are available in the targeted (\"marked\") model. The stereotype applications are stored in the marking and not in the marked model even though the element itself resides in the marked model. This enables different views of the same model depending on which marking model is open.\n\nStereotype properties can be shown on the diagram in either a separate compartment or in a Stereotype Attribute Note.\n\nSupport for Property Sets has been added to work with a group of stereotype properties.\n\nA default active language can be specified for a viewpoint.\n\nViewpoints can be exported and imported.\n\nSupport for Interaction Overview diagrams has been added.\n\nSupport for timing diagrams has been added.\n\nSupport for lost messages and found messages has been added to sequence diagrams.\n\nA validation rule has been added for sequence diagrams: Message signature operation should be contained in the target lifeline classifier.\n\nA validation rule has been added for sequence diagrams: Private operation call.\n\nA Message can be renamed even when an operation has been defined for its signature.\n\nSupport for Start Object Behavior Action has been added to activity diagrams.\n\nSupport for Entry Points and Exit Points has been added to Composite States and Orthogonal States in state machine diagrams.\n\nSupport for Any Receive Event has been added to the state machine diagrams.\n\nPublic API for alias support was added to com.ibm.xtools.uml.core.IUMLHelper.\n\nThe com.ibm.xtools.modeler.ui.repairReferences extension point was added to enable: 1) fix broken URIs to external resources like imported libraries and 2) fix a broken set of IDs in an external resource.\n\nEnhancements\n\nThe Modeling perspective has been redesigned. It is streamlined to contain 4 views: the Project Explorer view, the Layers view, the Properties view, and the Outline view. Other less commonly used views are available as Fast Views. The old perspective layout has been renamed to Classic Modeling.\n\nIn the Project Explorer view, diagrams are grouped by type (instead of only alphabetically)\n\nThe integration of element imports has been improved. The way the context is determined has been enhanced. Properties are displayed for the imported element, not the Element Import. In the Project Explorer view, when adding or deleting elements under the Element Import, the focus is not lost (i.e. focus does not jump back to the original element). In addition, in the Project Explorer view, sorting is performed by the name of the imported element.\n\nThe Repair Workspace References dialog box has been enhanced to provide an option to search the entire workspace and an option to dirty the model that allows to save the fixed model.\n\nYou can specify the refactoring scope of model, project, or workspace for the standard refactoring operations.\n\nWhen a model fragment is reloaded, focus is preserved in the Project Explorer view. In addition, only the changed fragment is reloaded for better performance.\n\nYou can select multiple sub-fragments to open.\n\nDeleting a message’s referenced signal or operation will set the name of the message to Unspecified on a sequence diagram in addition to removing the referenced signal or operation.\n\nBack to top\n\nUML/BPMN modeling\n\nNew features\n\nThe navigation to related elements and other representations of elements is improved with the new linking and navigation functionality. Hovering over diagram elements, for example an attribute in a class, displays a pop-up dialog allowing to show the properties of the related element such as the type of the attribute in the class. When editing types in the properties view, a button allows to navigate to the type. In the properties view pop-up, you can navigate to the element in the Project Explorer view. More elements support the navigation to the Project Explorer. The public application pro"
    }
}