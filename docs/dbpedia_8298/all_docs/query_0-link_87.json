{
    "id": "dbpedia_8298_0",
    "rank": 87,
    "data": {
        "url": "https://www.slideshare.net/slideshow/principal-of-programming-language/103909834",
        "read_more_link": "",
        "language": "en",
        "title": "Principal of Programming Language",
        "top_image": "https://cdn.slidesharecdn.com/ss_thumbnails/ppl-1-180702064833-thumbnail.jpg?width=640&height=640&fit=bounds",
        "meta_img": "https://cdn.slidesharecdn.com/ss_thumbnails/ppl-1-180702064833-thumbnail.jpg?width=640&height=640&fit=bounds",
        "images": [
            "https://public.slidesharecdn.com/images/next/svg/logo/slideshare-scribd-company.svg?w=128&q=75 1x, https://public.slidesharecdn.com/images/next/svg/logo/slideshare-scribd-company.svg?w=256&q=75 2x",
            "https://cdn.slidesharecdn.com/profile-photo-SATYENDRA_MOHAN-48x48.jpg?cb=1701670241",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-1-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-1-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-1-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-2-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-2-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-2-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-3-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-3-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-3-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-4-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-4-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-4-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-5-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-5-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-5-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-6-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-6-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-6-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-7-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-7-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-7-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-8-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-8-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-8-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-9-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-9-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-9-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-10-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-10-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-10-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-11-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-11-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-11-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-12-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-12-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-12-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-13-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-13-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-13-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-14-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-14-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-14-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-15-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-15-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-15-2048.jpg 2048w",
            "https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-16-320.jpg 320w, https://image.slidesharecdn.com/ppl-1-180702064833/85/Principal-of-Programming-Language-16-638.jpg 638w, https://image.slidesharecdn.com/ppl-1-180702064833/75/Principal-of-Programming-Language-16-2048.jpg 2048w"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2018-07-02T06:48:33+00:00",
        "summary": "",
        "meta_description": "Principal of Programming Language  - Download as a PDF or view online for free",
        "meta_lang": "en",
        "meta_favicon": "https://public.slidesharecdn.com/_next/static/media/favicon.7bc3d920.ico",
        "meta_site_name": "SlideShare",
        "canonical_link": "https://www.slideshare.net/slideshow/principal-of-programming-language/103909834",
        "text": "1. JIT BarabankiMr Satyendra Mohan Srivastava\n\n2. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 2 Programming language Programming language can be define as following: 1) Tool for instructing machine 2) Means for communicating between programmers 3) Vehicle for expressing high level design 4) Notation for algorithms and data structures 5) It acts as a tool for experiment 6) Controlling computerized devices\n\n3. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 3 Why study programming languages There are various reason regarding the study of programming languages but following are six main reasons: 1) To improve your ability to develop effective algorithms 2) To improve your use of your existing programming language 3) To increase your vocabulary of useful programming constructs 4) To allow a better choice of programming language 5) To make it easier to learn a new language 6) To make it easier to design a new language\n\n4. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 4 Why study programming languages Reason 1: To improve your ability to develop effective algorithms  The depth at which people can think is heavily influenced by the expressive power of their language.  It is difficult for people to conceptualize structures that they cannot describe, verbally or in writing. Reason 2: To improve your use of your existing programming language  Many professional programmers have a limited formal education in computer science, limited to a small number of programming languages.  They are more likely to use languages with which they are most comfortable than the most suitable one for a particular job.\n\n5. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 5 Why study programming languages Reason 3: To increase your vocabulary of useful programming constructs  Computer science is consider as a young discipline and most software technologies (design methodology, software development, and programming languages) are not yet mature. Therefore, they are still evolving.  The understanding of programming language design and implementation makes it easier to learn new languages. Reason 4: To allow a better choice of programming language  It is often necessary to learn about language implementation; it can lead to a better understanding of why the language was designed the way that it was.  Fixing some bugs requires an understanding of implementation issues.\n\n6. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 6 Why study programming languages Reason 4: To allow a better choice of programming language  Some languages are better for some jobs than others. (i) FORTRAN and APL for calculations, COBOL and RPG for report generation, LISP and PROLOG for AI, etc.  Improve your use of existing programming language  By understanding how features are implemented, you can make more efficient use of them.\n\n7. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 7 Why study programming languages Reason 5: To make it easier to learn a new language  To improve your use of existing programming language  By understanding how features are implemented, you can make more efficient use of them. Examples:  Creating arrays, strings, lists, records.  Using recursions, object classes, etc.\n\n8. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 8 Why study programming languages Reason 6: To make it easier to design a new language  Designing a new language require prior knowledge of previous one to make it effective, efficient and convenient to users.  The previous knowledge as well as concepts are usual to design a new language irrespective of their work domains.\n\n9. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 9 History of Programming Languages 1950s: FORTRAN, LISP 1970s: Ada, C, Pascal, Prolog, Smalltalk 1980s: C++, ML, Perl, Postscript 1990s: Java According to recent survey, Over 500 languages were used in defense projects by USA.\n\n10. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 10 History of Programming Languages S.No. Application Primary Language Secondary Language 1 Business COBOL Assembler 2 Scientific FORTRAN ALGOL, APL and Basic 3 System Assembler Jovial, Forth 4 AI LISP SNOBOL 5 Business COBOL, C++, JAVA, SPREAD SHEET C, PL/I 6 Scientific FORTRON, C, C++, JAVA Ada, Basic, Modula 7 System C, C++, JAVA Ada, Basic, Modula 8 New Paradigm ML, Small Talk, ML\n\n11. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 11 Development of Early Languages Numerically based languages In 1940s, WWII is used to solving differential equations. In 1950s, symbolic notations appear Grace Hopper introduced the A-0 language John Backus introduced Speedcoding Both Speedcoding and A-0 were designed to compute arithmetic expressions into executable machine language. FORTRAN, meaning FORmula TRANSlator and ALGOL are the example of numerical based languages\n\n12. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 12 Development of Early Languages Business Languages Cobol was standardized in 1968. Artificial-intelligence languages The Rand Corporation designed and developed the Information Processing Language (IPL). John McCarthy of MIT designed and developed LIst PRocessing (LISP). Systems languages C changed the systems area, but that did not come until the 1970s.\n\n13. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 13 What makes a good language  Attributes of a good language (i) Clarity, simplicity, unity Orthogonality: The term Orthogonality refers to the attribute being able to combine various features of a language in all possible combination with every combination being meaningful. (ii) Naturalness (iii) Verification and validation (iv) Cost of use\n\n14. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 14 Problem Solving  Defining the system  Analyzing the define system  Detail system specification  Design the system  Implement the design  Testing and Debugging  Validation\n\n15. 7/2/2018 Mr Satyendra Mohan Srivastava, JIT Barabanki 15 Programming Environment  It refers to the environment in which programs are created, designed and tested.  It consist of a set of support tools and command language for invoking them."
    }
}