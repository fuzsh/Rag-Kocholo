{
    "id": "wrong_mix_range_subsidiary_00141_1",
    "rank": 35,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Essbase",
        "read_more_link": "",
        "language": "en",
        "title": "Wikipedia",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/en/thumb/b/b4/Ambox_important.svg/40px-Ambox_important.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2005-03-21T21:54:32+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Essbase",
        "text": "Database management system\n\nEssbaseOriginal author(s)Arbor Software CorporationStable release\n\n21.5 / June 2023; 1 year ago ( )\n\nOperating systemWindows, Linux, IBM AIX, HP-UX, SolarisTypeMultidimensional databaseLicenseProprietaryWebsitewww .oracle .com /business-analytics /essbase .html\n\nEssbase is a multidimensional database management system (MDBMS) that provides a platform upon which to build analytic applications. Essbase began as a product from Arbor Software, which merged with Hyperion Software in 1998. Oracle Corporation acquired Hyperion Solutions Corporation in 2007. Until late 2005 IBM also marketed an OEM version of Essbase as DB2 OLAP Server.[1]\n\nThe database researcher E. F. Codd coined the term \"on-line analytical processing\" (OLAP) in a whitepaper[2] that set out twelve rules for analytic systems (an allusion to his earlier famous set of twelve rules defining the relational model). This whitepaper, published by Computerworld, was somewhat explicit in its reference to Essbase features, and when it was later discovered that Codd had been sponsored by Arbor Software, Computerworld withdrew the paper.[3]\n\nIn contrast to \"on-line transaction processing\" (OLTP), OLAP defines a database technology optimized for processing human queries rather than transactions. The results of this orientation were that multidimensional databases oriented their performance requirements around a different set of benchmarks (Analytic Performance Benchmark, APB-1) than that of RDBMS (Transaction Processing Performance Council [TPC]).\n\nHyperion renamed many of its products in 2005, giving Essbase an official name of Hyperion System 9 BI+ Analytic Services, but the new name was largely ignored by practitioners. The Essbase brand was later returned to the official product name for marketing purposes, but the server software still carried the \"Analytic Services\" title until it was incorporated into Oracle's Business Intelligence Foundation Suite (BIFS) product.[4]\n\nIn August 2005, Information Age magazine named Essbase as one of the 10 most influential technology innovations of the previous 10 years,[5] along with Netscape, the BlackBerry, Google, virtualization, Voice Over IP (VOIP), Linux, XML, the Pentium processor, and ADSL. Editor Kenny MacIver said: \"Hyperion Essbase was the multi-dimensional database technology that put online analytical processing on the business intelligence map. It has spurred the creation of scores of rival OLAP products – and billions of OLAP cubes\".[6]\n\nEssbase was originally developed to address the scalability issues associated with spreadsheets such as Lotus 1-2-3 and Microsoft Excel. Indeed, the patent covering (now expired) Essbase uses spreadsheets as a motivating example to illustrate the need for such a system.[7]\n\nIn this context, \"multi-dimensional\" refers to the representation of financial data in spreadsheet format. A typical spreadsheet may display time intervals along column headings, and account names on row headings. For example:\n\nJan Feb Mar Total Quantity 1000 2000 3000 6000 Sales $100 $200 $300 $600 Expenses $80 $160 $240 $480 Profit $20 $40 $60 $120\n\nIf a user wants to break down these values by region, for example, this typically involves the duplication of this table on multiple spreadsheets:\n\nAn alternative representation of this structure would require a three-dimensional spreadsheet grid, giving rise to the idea that \"Time\", \"Account\", and \"Region\" are dimensions. As further dimensions are added to the system, it becomes very difficult to maintain spreadsheets that correctly represent the multi-dimensional values. Multidimensional databases such as Essbase provide a data store for values that exist, at least conceptually, in a multi-dimensional \"hypercube\".\n\nAs the number and size of dimensions increases, developers of multidimensional databases increasingly face technical problems in the physical representation of data. Say the above example was extended to add a \"Customer\" and \"Product\" dimension:\n\nDimension Number of dimension values Accounts 4 Time 4 Region 3 Customer 10,000 Product 5,000\n\nIf the multidimensional database reserved storage space for every possible value, it would need to store 2,400,000,000 (4 × 4 × 3 × 10,000 × 5,000) cells. If the software maps each cell as a 64-bit floating point value, this equates to a memory requirement of about 17.9 GiB (exactly 19.2 GB). In practice, of course, the number of combinations of \"Customer\" and \"Product\" that contain meaningful values will be a tiny subset of the total space. This property of multi-dimensional spaces is referred to as sparsity.\n\nOLAP systems generally provide for multiple levels of detail within each dimension by arranging the members of each dimension into one or more hierarchies. A time dimension, for example, may be represented as a hierarchy starting with \"Total Time\", and breaking down into multiple years, then quarters, then months. An Accounts dimension may start with \"Profit\", which breaks down into \"Revenue\" and \"Expenses\", and so on.\n\nIn the example above, if \"Product\" represents individual product SKUs, analysts may also want to report using aggregations such as \"Product Group\", \"Product Family\", \"Product Line\", etc. Similarly, for \"Customer\", natural aggregations may arrange customers according to geographic location or industry.\n\nThe number of aggregate values implied by a set of input data can become surprisingly large. If the Customer and Product dimensions are each in fact six \"generations\" deep, then 36 (6 × 6) aggregate values are affected by a single data point. It follows that if all these aggregate values are to be stored, the amount of space required is proportional to the product of the depth of all aggregating dimensions. For large databases, this can cause the effective storage requirements to be many hundred times the size of the data being aggregated.\n\nSince version 7, Essbase has supported two \"storage options\" which take advantage of sparsity to minimize the amount of physical memory and disk space required to represent large multidimensional spaces. The Essbase patent[7] describes the original method, which aimed to reduce the amount of physical memory required without increasing the time required to look up closely related values. With the introduction of alternative storage options, marketing materials called this the Block Storage Option (Essbase BSO), later referred to as Essbase Analytics.\n\nPut briefly, Essbase requires the developer to tag dimensions as \"dense\" or \"sparse\". The system then arranges data to represent the hypercube into \"blocks\", where each block comprises a multi-dimensional array made up of \"dense\" dimensions, and space is allocated for every potential cell in that block. Sparsity is exploited because the system only creates blocks when required. In the example above, say the developer has tagged \"Accounts\" and \"Time\" as \"dense\", and \"Region\", \"Customer\", and \"Product\" as \"sparse\". If there are, say, 12,000 combinations of Region, Customer and Product that contain data, then only 12,000 blocks will be created, each block large enough to store every possible combination of Accounts and Time. The number of cells stored is therefore 192000 (4 × 4 × 12000), requiring under 2 GiB of memory (exact 1,536 MB), plus the size of the index used to look up the appropriate blocks.\n\nBecause the database hides this implementation from front-end tools (i.e., a report that attempts to retrieve data from non-existent cells merely sees \"null\" values), the full hypercube can be navigated naturally, and it is possible to load values into any cell interactively.\n\nUsers can specify calculations in Essbase BSO as:\n\nThe aggregation of values through dimensional hierarchies;\n\nStored calculations on dimension members;\n\n\"Dynamically calculated\" dimension members; or\n\nProcedural \"calculation scripts\" that act on values stored in the database.\n\nThe first method (dimension aggregation) takes place implicitly through addition, or by selectively tagging branches of the hierarchy to be subtracted, multiplied, divided or ignored. Also, the result of this aggregation can be stored in the database, or calculated dynamically on demand—members must be tagged as \"Stored\" or \"Dynamic Calc.\" to specify which method is to be used.\n\nThe second method (stored calculations) uses a formula against each calculated dimension member – when Essbase calculates that member, the result is stored against that member just like a data value.\n\nThe third method (dynamic calculation) is specified in exactly the same format as stored calculations, but calculates a result when a user accesses a value addressed by that member; the system does not store such calculated values.\n\nThe fourth method (calculation scripts) uses a procedural programming language specific to the Essbase calculation engine. This type of calculation may act upon any data value in the hypercube, and can therefore perform calculations that cannot be expressed as a simple formula.\n\nA calculation script must also be executed to trigger the calculation of aggregated values or stored calculations as described above—a built-in calculation script (called the \"default calculation\") can be used to execute this type of calculation.\n\nAlthough block storage effectively minimizes storage requirements without impacting retrieval time, it has limitations in its treatment of aggregate data in large applications, motivating the introduction of a second storage engine, named Aggregate Storage Option (Essbase ASO) or more recently, Enterprise Analytics. This storage option makes the database behave much more like an OLAP database, such as SQL Server Analysis Services.\n\nFollowing a data load, Essbase ASO does not store any aggregate values, but instead calculates them on demand. For large databases, where the time required to generate these values may become inconvenient, the database can materialize one or more aggregate \"views\", made up of one aggregate level from each dimension (for example, the database may calculate all combinations of the fifth generation of Product with the third generation of Customer), and these views are then used to generate other aggregate values where possible. This process can be partially automated, where the administrator specifies the amount of disk space that may be used, and the database generates views according to actual usage.\n\nThis approach has a major drawback in that the cube cannot be treated for calculation purposes as a single large hypercube, because aggregate values cannot be directly controlled, so write-back from front-end tools is limited, and complex calculations that cannot be expressed as MDX expressions are not possible.\n\nEssbase ASO can specify calculations as:\n\nThe aggregation of values through dimensional hierarchies; or\n\nDynamically calculated dimension members.\n\nThe first method (dimension aggregation) basically duplicates the algorithm used by Essbase BSO.\n\nThe second method (dynamic calculations) evaluates MDX expressions against dimension members.\n\nThe majority of Essbase users work with Essbase data via an add-in for Microsoft Excel (previously also Lotus 1-2-3) known as Smart View. The Essbase Add-In is a standard plugin to Microsoft Excel and creates an additional menu that can be used to connect to Essbase databases, retrieve or write data, and navigate the cube's dimensions (\"Zoom in\", \"Pivot\", etc.).[8]\n\nIn 2005, Hyperion began to offer a visualization tool called Hyperion Visual Explorer (HVE) which was an OEM from Tableau Software. Tableau Software originated at Stanford University as a government-sponsored research project to investigate new ways for users to interact with relational and OLAP databases. Hyperion and Tableau together built fundamentally the first versions of Tableau Software which was designed specifically for multidimensional (OLAP) databases. Oracle quickly terminated the OEM arrangement with Tableau Software soon after the acquisition of Hyperion in 2007.\n\nMost other well known analytics vendors provide user-facing applications with support for Essbase and include;\n\nHyperion Analyzer (aka Hyperion System 9 BI+ Web Analysis)\n\nHyperion Reports (aka Hyperion System 9 BI+ Financial Reporting)\n\nHyperion Enterprise Reporting\n\nHyperion Business Intelligence (aka Hyperion System 9 BI+ Interactive Reporting, and Brio Interactive Reporting)\n\nHyperion SQR (aka Hyperion System 9 BI+ Production Reporting)\n\nAlphablox\n\nArcplan dynaSight (aka Arcplan Enterprise)\n\nOracle Business Intelligence Suite Enterprise Edition (aka OBIEE, Siebel Analytics)\n\nDodeca Spreadsheet Management System[9]\n\nDodeca Excel Add-In for Essbase[10]\n\nReporting Suite[11]\n\nEV Analytics[12]\n\nThe previous offerings from Hyperion acquired new names as given below:\n\nHyperion's previous offerings Hyperion System 9 BI+ offerings Hyperion Essbase ASO Enterprise Analytics Hyperion Essbase BSO Essbase Analytics Hyperion Analyzer Web Analysis Hyperion Reports Financial Reporting Hyperion Intelligence Interactive Reporting Hyperion SQR Production Reporting Hyperion Metrics Builder Enterprise Metrics\n\nAPIs are available for C, Visual Basic and Java, and embedded scripting support is available for Perl. The standardised XML for Analysis protocol can query Essbase data sources using the MDX language.\n\nIn 2007, Oracle Corporation began bundling Hyperion BI tools into Oracle Business Intelligence Enterprise Edition Plus.\n\nA number of standard interfaces can administer Essbase applications:\n\nESSCMD, the original command line interface for administration commands;\n\nMaxL, a \"multi-dimensional database access language\" which provides both a superset of ESSCMD commands, but with a syntax more akin to SQL, as well as support for MDX queries;\n\nEssbase Application Manager, the original Microsoft Windows GUI administration client, compatible with versions of Essbase before 7.0;\n\nEssbase Administration Services, later renamed Analytic Administration Services, and then back to 'Essbase Administration Services' in v. 9.3.1, the currently supported GUI administration client; and\n\nEssbase Integration Server for maintaining the structure and content of Essbase databases based on data models derived from relational or file-based data sources.\n\nSince 2017, Essbase Cloud has been available as part of the Oracle Analytics Cloud (OAC), a suite of analytics that include reports and dashboards, data visualization, inline data preparation and mobile.[13]\n\nThere are several significant competitors among the OLAP, analytics products to that of Essbase (HOLAP/MOLAP) on the market, among them SAP BPC, Microsoft SQL Server Microsoft Analysis Services, (MOLAP, HOLAP, ROLAP), IBM Cognos (ROLAP), IBM/Cognos/Applix TM1 (MOLAP), Oracle OLAP (ROLAP/MOLAP), MicroStrategy (ROLAP), and EXASolution (ROLAP).\n\nAlso note that of the above competitors, including Essbase, all use heterogenous relational (Microsoft SQL Server, Oracle, IBM DB/2, TeraData, Access, etc.) or non-relational data sourcing (Excel, text Files, CSV Files, etc.) to feed the cubes (facts and dimensional data), except for Oracle OLAP which may only use Oracle relational sourcing.\n\nAs of 2009 two options can export Essbase cubes into other formats:\n\nCubePort, a commercial conversion application, converts Essbase cubes to the Microsoft SQL Server Analysis Services product. This product performs an object-to-object translation that make up an Essbase cube, including: outline, member formulas, calc scripts, data loading (load rules), report scripts to MDX queries, substitution variables, and security model. It can extract from any platform version of Essbase, including Oracle/Hyperion Essbase on Windows, Unix, AIX, HP UX, Solaris, IBM DB/2 OLAP, or AS/400 Showcase Essbase.\n\nOlapUnderground Outline Extractor performs a pure, rudimentary, export of the outline, though it does not directly create any new objects. The output is a simple text file that can be pulled indirectly into other OLAP products, among other uses, such as synchronizing outlines.\n\nOLAP\n\nOracle OLAP\n\nBusiness Intelligence\n\nData warehouse\n\nHyperion Planning\n\nComparison of OLAP servers"
    }
}