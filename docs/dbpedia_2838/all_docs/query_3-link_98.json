{
    "id": "dbpedia_2838_3",
    "rank": 98,
    "data": {
        "url": "https://docs.photoprism.app/developer-guide/media/thumbnails/",
        "read_more_link": "",
        "language": "en",
        "title": "Thumbnails",
        "top_image": "https://i.photoprism.app/prism?cover=64&style=centered%20dark&title=Thumbnails",
        "meta_img": "https://i.photoprism.app/prism?cover=64&style=centered%20dark&title=Thumbnails",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "PhotoPrism UG"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Official Documentation",
        "meta_lang": "en",
        "meta_favicon": "../../../icons/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://docs.photoprism.app/developer-guide/media/thumbnails/",
        "text": "Thumbnail Generation and Storage¶\n\nIntroduction¶\n\nPhotoPrism can use libvips and the native disintegration/imaging package to generate thumbnails for display in search results and in the full-screen viewer.\n\nThe smallest configurable size limit is 720px, which corresponds to the fit_720 thumbnail size. Most sizes up to 720x720 will be generated by default and should therefore always be available.\n\nBesides their obvious use in the frontend, the indexer also uses thumbnails for color detection, face recognition and image classification, see Advanced Settings in the User Guide.\n\nStandard Sizes¶\n\nThe smallest configurable static and dynamic size limit is 720px, so most sizes up to fit_720 are always generated by default. Higher size limits generate thumbnails with more detail at higher resolutions - either statically (pre-generated while indexing) or on demand if the configuration permits.\n\nOptional thumbnail sizes cannot be pre-generated and are only rendered on request, for example when sharing an image on Instagram.\n\nThe following overview shows the name, dimensions, and aspect ratio for each thumbnail size as well as a description of how it is used:\n\nName Width Height Aspect Ratio Available Usage colors 3 3 1:1 Always Color Detection tile_50 50 50 1:1 Always List View tile_100 100 100 1:1 Always Places View left_224 224 224 1:1 On-Demand TensorFlow right_224 224 224 1:1 On-Demand TensorFlow tile_224 224 224 1:1 Always TensorFlow, Mosaic View tile_500 500 500 1:1 Always Cards View fit_720 720 720 Preserved Always SD TV, Mobile tile_1080 1080 1080 1:1 Optional Instagram fit_1280 1280 1024 Preserved On-Demand HD TV, SXGA fit_1600 1600 900 Preserved Optional Social Media fit_1920 1920 1200 Preserved On-Demand Full HD fit_2048 2048 2048 Preserved Optional DCI 2K, Tablets fit_2560 2560 1600 Preserved On-Demand Quad HD, Notebooks fit_3840 3840 2400 Preserved Optional 4K Ultra HD fit_4096 4096 4096 Preserved On-Demand DCI 4K, Retina 4K fit_7680 7680 4320 Preserved On-Demand 8K Ultra HD 2\n\n↪ internal/thumb/sizes.go\n\nColor Profiles¶\n\nsRGB is the standard color space used when generating thumbnails. An ICC color profile for wide-gamut displays can optionally be embedded.\n\nLearn more ›\n\nFile Storage¶\n\nGenerated thumbnail files are stored in the storage/cache/thumbnails folder, where the path and file name depend on the thumbnail size and original file hash, e.g.:\n\nDownscaling Filters¶\n\nLinear¶\n\nBilinear interpolation takes a weighted average of the four neighborhood pixels to calculate its final interpolated value. The result is a much smoother image than the original image. When all known pixel distances are equal, then the interpolated value is simply their sum divided by four. This technique performs interpolation in both directions, horizontal and vertical. This technique gives better result than nearest neighbor interpolation and take less computation time compared to bicubic interpolation.\n\nCubic¶\n\nCatmull-Rom is a local interpolating spline developed for computer graphics purposes. Its initial use was in design of curves and surfaces, and has recently been used in several applications. Catmull-Rom splines are a family of cubic interpolating splines formulated such that the tangent at each point is calculated using the previous and next point on the spline. The results are similar to ones produced by bicubic interpolation with regards to sharpness, but the Catmull-Rom reconstruction is clearly superior in smooth signal region.\n\nLanczos¶\n\nThe Lanczos interpolation function is a mathematical formula used to smoothly interpolate the value of a digital image between its samples. It maps each sample of the given image to a translated and scaled copy of the Lanczos kernel, which is a sinc function windowed by the central hump of a dilated sinc function. The sum of these translated and scaled kernels is then evaluated at the desired pixel. Lanczos interpolation has the best properties in terms of detail preservation and minimal generation of aliasing artifacts for geometric transformations not involving strong down sampling. However higher order Lanczos interpolation requires high computational time, which makes it unsuitable for most commercial software.\n\nBlackman¶\n\nBlackman is a modification of Lanczos that has better control of ringing artifacts.\n\nServer API¶\n\nLike most commercial image hosting services, we have chosen to implement a cookie-free thumbnail API to minimize request latency by avoiding unnecessary network traffic.\n\nLearn more ›\n\nFurther Reading¶"
    }
}