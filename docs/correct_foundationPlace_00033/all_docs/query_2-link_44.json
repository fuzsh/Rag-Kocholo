{
    "id": "correct_foundationPlace_00033_2",
    "rank": 44,
    "data": {
        "url": "https://github.com/marklogic/java-client-api",
        "read_more_link": "",
        "language": "en",
        "title": "api: Java client for the MarkLogic enterprise NoSQL database",
        "top_image": "https://opengraph.githubassets.com/282583450a757b233244b78ee4a7126c539648495839ccbe69942965a4b17572/marklogic/java-client-api",
        "meta_img": "https://opengraph.githubassets.com/282583450a757b233244b78ee4a7126c539648495839ccbe69942965a4b17572/marklogic/java-client-api",
        "images": [
            "https://camo.githubusercontent.com/c22b66b757fd8aa4226bb6fa07c905f8edd90b0229de247bbab6220165ab0e24/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6d61726b6c6f6769632f6a6176612d636c69656e742d6170692e737667",
            "https://camo.githubusercontent.com/22c1c449922d0dfa3f0f7a6591848fda26e26df1251f83b0dea0da82865c9a2b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6d61726b6c6f6769632f6a6176612d636c69656e742d6170692e737667",
            "https://camo.githubusercontent.com/db9dfde8049c5d66ba62fde707d2cfb30e26f9f26ff274c3442c0aec1ec410a4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667",
            "https://camo.githubusercontent.com/37e134ba952e39219261babced856695dd98231c4948a32f1cf84494b561e10f/68747470733a2f2f736e796b2e696f2f746573742f6769746875622f6d61726b6c6f6769632f6a6176612d636c69656e742d6170692f62616467652e737667",
            "https://avatars.githubusercontent.com/u/298950?s=64&v=4",
            "https://avatars.githubusercontent.com/u/5026193?s=64&v=4",
            "https://avatars.githubusercontent.com/u/8634482?s=64&v=4",
            "https://avatars.githubusercontent.com/u/7087293?s=64&v=4",
            "https://avatars.githubusercontent.com/u/19510878?s=64&v=4",
            "https://avatars.githubusercontent.com/u/14857031?s=64&v=4",
            "https://avatars.githubusercontent.com/u/1747973?s=64&v=4",
            "https://avatars.githubusercontent.com/u/5034960?s=64&v=4",
            "https://avatars.githubusercontent.com/u/17153443?s=64&v=4",
            "https://avatars.githubusercontent.com/u/12160092?s=64&v=4",
            "https://avatars.githubusercontent.com/u/382672?s=64&v=4",
            "https://avatars.githubusercontent.com/u/2940775?s=64&v=4",
            "https://avatars.githubusercontent.com/u/8721137?s=64&v=4",
            "https://avatars.githubusercontent.com/u/23352472?s=64&v=4"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Java client for the MarkLogic enterprise NoSQL database - marklogic/java-client-api",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/marklogic/java-client-api",
        "text": "The MarkLogic Java Client makes it easy to write, read, delete, and find documents in a MarkLogic database. The client requires connecting to a MarkLogic REST API app server and is ideal for applications wishing to build upon the MarkLogic REST API.\n\nThe client supports the following core features of the MarkLogic database:\n\nWrite and read binary, JSON, text, and XML documents.\n\nQuery data structure trees, marked-up text, and all the hybrids in between those extremes.\n\nProject values, tuples, and triples from hierarchical documents and aggregate over them.\n\nPatch documents with partial updates.\n\nUse Optimistic Locking to detect contention without creating locks on the server.\n\nExecute ACID modifications so the change either succeeds or throws an exception.\n\nExecute multi-statement transactions so changes to multiple documents succeed or fail together.\n\nCall Data Services by means of a Java interface on the client for data functionality implemented by an endpoint on the server.\n\nThe client can be used in applications running on Java 8, 11, and 17. If you are using Java 11 or higher and intend to use JAXB, please see the section below for ensuring that the necessary dependencies are available in your application's classpath.\n\nTo use the client in your Maven project, include the following in your pom.xml file:\n\nTo use the client in your Gradle project, include the following in your build.gradle file:\n\nNext, read The Java API in Five Minutes to get started.\n\nFull documentation is available at:\n\nJava Application Developer's Guide\n\nJavaDoc\n\nIf you are using Java 11 or higher (including Java 17) and you wish to use JAXB with the client, you'll need to include JAXB API and implementation dependencies as those are no longer included in Java 11 and higher.\n\nFor Maven, include the following in your pom.xml file:\n\nFor Gradle, include the following in your build.gradle file (this can be included in the same dependencies block as the one that includes the marklogic-client-api dependency):\n\nYou are free to use any implementation of JAXB that you wish, but you need to ensure that you're using a JAXB implementation that corresponds to the javax.xml.bind interfaces. JAXB 3.0 and 4.0 interfaces are packaged under jakarta.xml.bind, and the Java API does not yet depend on those interfaces.\n\nThus, you are free to include an implementation of JAXB 3.0 or 4.0 in your project for your own use; it will not affect the Java API. A caveat though is if you are trying to use different major versions of the same JAXB implementation library - such as org.glassfish.jaxb:jaxb-runtime - then you will run into an expected dependency conflict between the two versions of the library. This can be worked around by using a different implementation of JAXB 3.0 or JAXB 4.0 - for example:\n\nThe client will soon be updated to use the newer jakarta.xml.bind interfaces. Until then, the above approach or one similar to it will allow for both the old and new JAXB interfaces and implementations to exist together in the same classpath."
    }
}