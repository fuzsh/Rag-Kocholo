{
    "id": "correct_foundationPlace_00033_1",
    "rank": 6,
    "data": {
        "url": "https://www.progress.com/marklogic/server/features/multi-model-database",
        "read_more_link": "",
        "language": "en",
        "title": "Multi-Model NoSQL Database Features",
        "top_image": "https://www.progress.com/images/default-source/default-album/progress-album/images-album/social-image.png",
        "meta_img": "https://www.progress.com/images/default-source/default-album/progress-album/images-album/social-image.png",
        "images": [
            "https://d117h1jjiq768j.cloudfront.net/images/default-source/marklogic/marklogic-resources-hex-bg.svg?sfvrsn=b551503_5",
            "https://d117h1jjiq768j.cloudfront.net/images/default-source/resource-center/paper/whitepaper-3-thumbnail.svg?v=2",
            "https://d117h1jjiq768j.cloudfront.net/images/default-source/resource-center/ebook/ebook-2-thumbnail.svg?v=2",
            "https://d117h1jjiq768j.cloudfront.net/images/default-source/resource-center/video/video-1-thumbnail.svg?sfvrsn=57c920fc_9",
            "https://d117h1jjiq768j.cloudfront.net/images/default-source/marklogic/overview-ml/marklogic-overview-prefooter-bg.svg?sfvrsn=8a31df87_6&v=2"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Learn about what makes MarkLogic’s multi-model database the right solution for your enterprise.",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico?v=2",
        "meta_site_name": "Progress.com",
        "canonical_link": "https://www.progress.com/marklogic/server/features/multi-model-database",
        "text": "The Document Model – Flexible and Human-Oriented\n\nThe document database model is the most flexible of the NoSQL data models, and the most popular. Documents are ideal for handling varied and complex hierarchical data. Humans can read them, they closely map to the conceptual or business model of the data, and they avoid the impedance mismatch problem that relational databases have. In summary, here are the main benefits of using the document database model:\n\nFast development\n\nSchema-agnostic\n\nData “denormalized”\n\nLeverages all attributes\n\nQueries everything in context\n\nIdeal for data integration\n\nTo securely access and share documents, MarkLogic provides a built-in search engine, document and element level security controls, redaction policies, and more. The search engine automatically indexes documents for full-text search on ingestion and gives you the flexibility to define additional indexes (e.g., range indexes, geospatial indexes) and customize relevance ranking. This and various other out-of-box features (like facets, snippets, etc.) enable you to quickly build advanced search applications. Whether it’s Java objects that represent business entities or free-flowing text from a “document” in the more traditional sense (Microsoft Word documents, PDFs, etc.), they are all naturally stored as JSON and XML documents with strong consistency in the MarkLogic platform.\n\nSemantic Graph Database Model for Relationships\n\nDocuments are fantastic for storing business entities, but when it comes to entity relationships, a semantic graph database model—another popular NoSQL model—is best. It’s designed to store and manage relationships among people, customers, providers, or any other entity of interest.\n\nAdditionally, MarkLogic provides a semantic graph data model in the form of a built-in RDF triple store, which stores and manages semantic data. We call this capability MarkLogic Semantics. Semantics enhances the document model by providing a smart way to connect and enhance the JSON and XML documents. This facilitates data integration and enables more powerful querying to discover relationships and make inferences.\n\nSemantics also provides context for your data by storing metadata (e.g. ontologies). For example, consider a product catalog that has information about parts, and one part is listed with a size of “42”. But, where is the contextual information: What are the units of “42”? What is the tolerance? Who measured it? When was it measured? This contextual information is the semantics data, which can be stored as RDF triples in MarkLogic.\n\nSimilar to the document model, the MarkLogic platform’s built-in search engine indexes RDF triples for fast execution of semantic searches using SPARQL queries. You can easily compose complex queries that combine semantic and document searches to discover insights.\n\nGeospatial Search Capabilities\n\nThe document data model provides the flexibility to store geospatial data. MarkLogic can natively store, manage, and search geospatial data, including points of interest, intersecting paths, and regions of interest. This enables you to answer the “where” question in the context of all your other data (entities, relationships, etc.).\n\nThe built-in search engine indexes geospatial data to power location-based search queries and alerts for geospatial applications. Learn more about how customers are using Geospatial to implement powerful location-based search applications.\n\nStructured, Relational Views of Data\n\nRelational data models are useful for a reason. Sometimes, it’s really convenient to have structured views of your data in a tabular form that you can query with good ol’ standard SQL. With MarkLogic, your developers will feel right at home.\n\nMarkLogic supports standard SQL. It allows you to create relational views on top of your data for SQL analytics without compromising data security. The underlying data never changes — it’s still available in its original format in the MarkLogic platform.\n\nThe underlying technology that makes this level of SQL support possible is unique to MarkLogic . It’s called Template Driven Extraction (TDE). It enables you to define a relational lens over your data (or entities) so you can query it using standard SQL. Hence, you can use familiar BI tools for operational analytics.\n\nIntegrated Indexes\n\nMulti-model databases provide a unified search interface to query multiple data models using integrated indexes. Typically, you have to choose and manage specific indexes for each data type. On the other hand, the MarkLogic platform has an integrated suite of indexes that allow fast data access – immediately after data is loaded. A multi-model database works more like Google — Google doesn’t require web pages to fit a certain format, it just indexes them and makes them accessible via a unified search interface.\n\nThe MarkLogic platform’s built-in search engine indexes all data types and delivers exceptional search performance. Hence, users can quickly search data across multiple data models with a single, composable query. For example, you can combine semantic and search queries to find patients who are uninsured and suffer from chronic illness.\n\nComposable Queries\n\nMulti-model databases provide industry-standard query languages and APIs to flexibly store and access data for all the supported data models. With the MarkLogic platform, users can query data using Search, SQL, SPARQL, or REST API. It also supports multiple programming languages like JavaScript, Node, Java, and XQuery.\n\nAs a true multi-model database, MarkLogic also provides its Optic API as a unified query interface for multi-model data access. It provides flexible and easy access to data across all data models. You can create single, composable query across documents, relational views, and semantic graphs (in any combination). For example, you can use the Optic API to search and filter documents, execute relational operations (like join or aggregate), and retrieve (or construct) documents on output. Try doing that with another multi-model database!\n\nUnified Platform\n\nA multi-model database complements its data modeling flexibility and unified query interface with a single data security, governance, and transactional model. As a unified data platform, it increases developers’ productivity and operational efficiency.\n\nAs a true multi-model database, MarkLogic provides a unified data security, governance, and consistency model. It uses a shared-nothing architecture to provide scalability and availability, and reduces the operational footprint for development, testing, upgrades, backup and recovery, and more."
    }
}