{
    "id": "correct_foundationPlace_00033_2",
    "rank": 36,
    "data": {
        "url": "https://www.iri.com/blog/migration/data-migration/using-marklogic-data-in-iri-voracity/",
        "read_more_link": "",
        "language": "en",
        "title": "Using MarkLogic Data in IRI Voracity",
        "top_image": "https://www.iri.com/blog/wp-content/uploads/2016/06/marklogic-voracity.png",
        "meta_img": "https://www.iri.com/blog/wp-content/uploads/2016/06/marklogic-voracity.png",
        "images": [
            "https://www.iri.com/blog/wp-content/uploads/2019/02/iri-logo-total-data-management-small-1.png",
            "https://www.iri.com/blog/wp-content/uploads/2016/06/marklogic-voracity-618x350.png",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-0.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-1.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-3.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-4.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-5.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-6.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-7.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-8.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-9.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-10.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-11.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-12.jpg",
            "http://www.iri.com/blog/wp-content/uploads/2016/06/t_Using-MarkLogic-Data-in-IRI-Voracity-Chaitail-Mitra-13.jpg",
            "https://www.iri.com/blog/wp-content/uploads/2024/07/Featured-image-Oracle-TLS-support-350x300.png",
            "https://www.iri.com/blog/wp-content/uploads/2014/06/Textual-ETL-featured-image-350x300.png",
            "https://www.iri.com/blog/wp-content/uploads/2024/05/Featured-image-SQL-SSL-Connection-350x300.png",
            "https://www.iri.com/blog/wp-content/uploads/2024/04/Bloor-Research-on-IRI-data-classification-featured-image-350x300.png",
            "https://www.iri.com/blog/wp-content/uploads/2024/02/IRI-Voracity-and-Data-Fabric-banner-350x250.jpg",
            "https://www.iri.com/blog/wp-content/uploads/2024/01/Featured-image-DarkShield-PII-Discovery-Masking-Charts-350x300.png",
            "https://www.iri.com/blog/wp-content/uploads/2024/01/data-class-mapping-350x300.png",
            "https://www.iri.com/blog/wp-content/uploads/2024/01/schema-data-class-search-350x300.png",
            "https://www.iri.com/blog/wp-content/uploads/2024/01/Finding-masking-PII-RDB-wizard-featured-image-350x300.png",
            "https://www.iri.com/blog/wp-content/uploads/2024/01/Featured-Image-Files-Wizard-350x300.png",
            "https://www.iri.com/blog/wp-content/uploads/2023/12/Featured-image-for-import-data-classes-350x300.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Chaitali Mitra"
        ],
        "publish_date": "2016-06-20T17:12:25+00:00",
        "summary": "",
        "meta_description": "The IRI Voracity data management platform now supports the MarkLogic NoSQL database as a source for structured data discovery (classification, profiling, and search), integration (ETL, CDC, SCD), migration (conversion and replication , governance (data cleansing and masking), and analytic (reporting and wrangling) jobs. In this article, I explain how to set up the MarkLogic server for SQL operations,Read More",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "IRI",
        "canonical_link": "https://www.iri.com/blog/migration/data-migration/using-marklogic-data-in-iri-voracity/",
        "text": "The IRI Voracity data management platform now supports the MarkLogic NoSQL database as a source for structured data discovery (classification, profiling, and search), integration (ETL, CDC, SCD), migration (conversion and replication , governance (data cleansing and masking), and analytic (reporting and wrangling) jobs. In this article, I explain how to set up the MarkLogic server for SQL operations, and configure Voracity to source MarkLogic data via ODBC in IRI Workbench.\n\nMarkLogic Server is the Enterprise NoSQL Database that combines database internals, search-style indexing, and application server behaviors. It uses XML documents as its data model, and stores the documents within a fully ACID compliant transactional repository. It indexes the words and values from each of the loaded documents, as well as the document structure. And, because of its unique Universal Index, MarkLogic doesn’t require advance knowledge of the document structure (its “schema”), nor complete adherence to a particular schema. Through its application server capabilities, it is programmable and extensible.\n\nTo set up the MarkLogic server for ODBC access, I need to create:\n\na SQL database\n\nrange indexes for the database\n\ndata fields\n\nan ODBC apps server\n\nSet up MarkLogic Server\n\nInstall MarkLogic on your network and reach it through the browser in IRI Workbench for convenience. Select Windows=>Show View=>Other=>Internal Web browser and navigate to http://hostname:8001:\n\nConfigure ODBC Server & Create the Database\n\nTo create a SQL-ready database in MarkLogic, the first Configure tab step is to create a “forest” and attach it to the database, which I named SQLData1. I then created an ODBC Server (shown below, via Groups, Apps Server) named SQL with Port number 5432. In the modules field, select (file system) to store MarkLogic documents, and in the database field, select the SQLData1 database we created.\n\nClick OK to save these settings. Next, click to expand Databases in the explorer pane, and under SQLData1, create range element indexes to define each column name and data type for use in multiple tables within a schema we will later call “main”:\n\nCreating Tables (Views) in MarkLogic\n\nGiven that we have previously defined columns for use, we can assign them to a new schema which will have a series of defined tables or views. To create the schema, use a Curl command like this:\n\ncurl -X POST –anyauth –user admin:admin –header “Content-Type:application/json” -d ‘{“view-schema-name”: “main”}’ http://localhost:8002/manage/v2/databases/SQLData1/view-schemas/?format=json\n\nOnce I create the schema ‘main’ I will create a view called ‘emps’, which contain some of the previously defined range element index IDs (or columns); e.g., ‘firstname’, ‘lastname’, and ‘employeeid’ range indexes. Employeeid uses the integer data type, while FirstName, LastName use a string.\n\nCurl Code in Cygwin prompt\n\nThrough these views, SQL inserts and queries via ODBC will work in MarkLogic’s Query Console (below), and thus, operations on this data in IRI Voracity as well. For more detailed instructions in this area, refer to https://docs.marklogic.com/guide/sql/setup.\n\nLoading & displaying data in MarkLogic Query Console\n\nIn the IRI Workbench internal browser, I can access the MarkLogic Query Console to do ad hoc queries, insert XML or JSON documents, or RDF Triples. In this case, I will use it to enter (load / insert) the actual data elements into my now SQL/ODBC-ready view, emps, via JavaScript. Each row is stored as a JSON document in this case, and can be queried with SQL syntax.\n\nODBC connection in IRI Workbench\n\nOnce the backend DB is configured, we must configure its ODBC driver for use with Voracity. From the IRI Workbench, I click on the toolbar’s IRI icon, and select Data Connection Registry. From there, click add:\n\nFrom the ODBC Data Source Administrator window, use the System DSN tab and Configure … to enter the connection parameters to MarkLogic. In the MarkLogic SQL ODBC Driver Setup window, enter the database name we created (in this case SQLData1). The server name is localhost, and username and password match what’s in use with the MarkLogic server and port (5432). Test and save the connection.\n\nRetrieve data from MarkLogic (View) & Load in Oracle\n\nI next need to create an IRI data definition file (DDF) to make use of the MarkLogic data in each view. To do this in the IRI Workbench GUI for Voracity (or other IRI products using DDF), I will use the Import Metadata Wizard. First, I create a New IRI Project in the Workbench Project Explorer to hold my work:\n\nNext, from the IRI Menu=> Select Import Table metadata. Select the Data Source Name (DSN) “MarkLogicSQL” and the table “main.emps”:\n\nThe resulting DDF file is shown below; note that my connection to MarkLogic must remain open while I’m interfacing with it:\n\nThis DDF is now available for use in any IRI job script sourcing this table. I will use it in my sort and mask application below.\n\nFrom the CoSort toolbar menu (stopwatch icon), select New Sort Job. After naming my job script, I am taken to the data source specification. I locate my ODBC source for the MarkLogic table, and then select Add Existing Metadata to provide the necessary field layouts for the CoSort program. Voracity uses SortCL to manipulate, mask, and report on MarkLogic and other ODBC and file-based data sources.\n\nI can then specify one or more sort keys:\n\nIn the next screen I define and format my target(s), where I also specified a redaction rule to mask sensitive portions of the column values on output:\n\nI also redacted the FIRSTNAME and LASTNAME column values with the replace_chars(FIRSTNAME, “*”). Protection rule. See this video on how to use IRI Workbench dialogs (or wizards) to redact data and otherwise mask sensitive data in your target fields.\n\nThe code and the output produced in IRI Workbench\n\nThe job produced in the wizard connects to MarkLogic, sorts and masks the data in the main.emps view, and sends the output to both an Oracle DB and flat-file (standard output) target, both shown below:"
    }
}