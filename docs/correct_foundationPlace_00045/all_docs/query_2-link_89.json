{
    "id": "correct_foundationPlace_00045_2",
    "rank": 89,
    "data": {
        "url": "https://theartsmechanical.wordpress.com/2017/04/11/the-very-early-days-of-cad/",
        "read_more_link": "",
        "language": "en",
        "title": "The Very Early Days Of CAD",
        "top_image": "http://history-computer.com/ModernComputer/Software/images/Ivan_Sutherland1962.jpg",
        "meta_img": "http://history-computer.com/ModernComputer/Software/images/Ivan_Sutherland1962.jpg",
        "images": [
            "https://i0.wp.com/history-computer.com/ModernComputer/Software/images/Ivan_Sutherland1962.jpg",
            "https://i0.wp.com/archive.computerhistory.org/resources/still-image/TX-2/tx-2.ivan_sutherland_on_CAD_program.1962-1963.102652182.lg.jpg",
            "https://i0.wp.com/www.americanmachinist.com/content/site304/articles/11_01_1998/hallfame0100jpg_00000002979.jpg",
            "https://i0.wp.com/www.sme.org/uploadedImages/Publications/ME_Magazine/2001/August_01_Issue_Volume_127_No_2/4.pic6.jpg",
            "https://i0.wp.com/www.sme.org/uploadedImages/Publications/ME_Magazine/2001/August_01_Issue_Volume_127_No_2/4.pic7.jpg",
            "https://secure.gravatar.com/blavatar/7f0617b6eea56e8a304f43ea2549bfc5c53687d8123dd3ef1fff83f2582eb179?s=50&d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png",
            "https://secure.gravatar.com/blavatar/7f0617b6eea56e8a304f43ea2549bfc5c53687d8123dd3ef1fff83f2582eb179?s=50&d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [
            "https://www.youtube.com/embed/57wj8diYpgY?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent",
            "https://www.youtube.com/embed/USyoT_Ha_bA?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent",
            "https://www.youtube.com/embed/BKM3CmRqK2o?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent",
            "https://www.youtube.com/embed/l7W75UfAjRI?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent",
            "https://www.youtube.com/embed/itd-4lMoXgI?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent",
            "https://www.youtube.com/embed/OlJns3fPItE?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent",
            "https://www.youtube.com/embed/gDXWo70xVwA?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent",
            "https://www.youtube.com/embed/aDXvyRd3JY4?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent",
            "https://www.youtube.com/embed/_1g1b_EeVHw?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent",
            "https://www.youtube.com/embed/2OUpnqn4Fl0?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2017-04-11T00:00:00",
        "summary": "",
        "meta_description": "I've been looking at computer graphics and engineering CAD systems for most of my life.  I've been a more or less continuous user of CAD systems for over thirty years now and I thought I knew most of how it came about.  There have been things I never really understood about how the way things worked…",
        "meta_lang": "en",
        "meta_favicon": "https://secure.gravatar.com/blavatar/7f0617b6eea56e8a304f43ea2549bfc5c53687d8123dd3ef1fff83f2582eb179?s=32",
        "meta_site_name": "The Arts Mechanical",
        "canonical_link": "https://theartsmechanical.wordpress.com/2017/04/11/the-very-early-days-of-cad/",
        "text": "I’ve been looking at computer graphics and engineering CAD systems for most of my life. I’ve been a more or less continuous user of CAD systems for over thirty years now and I thought I knew most of how it came about. There have been things I never really understood about how the way things worked in CAD as opposed to how a designer or drafter thinks, but I didn’t think to look into that very deeply.\n\nThat changed when Adam Savage had a treasure hunt for SXSW and mentioned Ivan Sutherland as part of the clue. I remembered Sutherland’s name as part of Evan’s and Sutherland in those endless open screens in various CAD programs where all the copyrights are listed, but who was responsible for what isn’t exactly clear with ten or fifteen second view of a screen that rapidly is replaced by yet another screen. Back then there was no internet to look things up anyway. Adam’s treasure hunt clue started yet another treasure hunt to answer some of the questions I hadn’t really thought about for some time. Nor had I thought very much about the pantheon of engineers that I owed so much to.\n\nhttp://americanmachinist.com/cadcam-software/cadcam-hall-fame\n\nThere’s still more here.\n\nhttp://www.cadhistory.net/\n\nI had always known that CAD programs had been around for long time, but I hadn’t realized how long. I had always that the programs had come after workstations capable of running them were readily available. After all why buy a car if you don’t have a horse to pull it with?\n\nTurns out that I was a little bit wrong. Computer scientists at Lincoln Labs at MIT were playing around with the most primitive and basic Computer Aided design on a machine that would be about the last thing you would expect as a workstation, a late 1950’s computer that filled up a building. The computer was called the Tx-2 and the software was created as thesis project by Ivan Sutherland who called it “Sketchpad.” Here are some links about Sketchpad, the TX-2 and Sutherland.\n\nhttps://en.wikipedia.org/wiki/Sketchpad\n\nhttps://en.wikipedia.org/wiki/Ivan_Sutherland\n\nhttps://www.billbuxton.com/Lincoln.html\n\nhttps://en.wikipedia.org/wiki/TX-2\n\nClick to access Sketchpad_A_Man-Machine_Graphical_Communication_System_Jan63.pdf\n\nhttps://archive.org/details/AlanKeyD1987\n\nIn many ways sketchpad was just a bit too early. The ideas, as all too frequently do, out ran the ability implement them.\n\nIt was more than 2,300 years after Euclid that the first true CAD software, a very innovative system (although of course primitive compared to today’s CAD software) called “Sketchpad” was developed by Ivan Sutherland as part oh his PhD thesis at MIT in the early 1960s. Sketchpad was especially innovative CAD software because the designer interacted with the computer graphically by using a light pen to draw on the computer’s monitor. It is a tribute to Ivan Sutherland’s ingenuity that even in 2004, when operations which took hours on 1960s computer technology can be executed in less than a millionth of a second and touch-sensitive TFT combination display/input devices are readily available, there is no leading CAD software that has yet incorporated such directness into its user interface.\n\nSketchpad was the world’s first CAD software but the first commercial CAM software system, a numerical control programming tool named PRONTO, had already been developed in 1957 by Dr. Patrick J. Hanratty. For that reason it is Dr. Hanratty who is most often referred to as “the father of CAD CAM”.\n\nDue to the very high cost of early computers and to the unique mechanical engineering requirements of aircraft and automobiles, large aerospace and automotive companies were the earliest commercial users of CAD software. First-generation CAD software systems were typically 2D drafting applications developed by a manufacturer’s internal IT group (often collaborating with university researchers) and primarily intended to automate repetitive drafting chores. Dr. Hanratty co-designed one such CAD system, named DAC (Design Automated by Computer) at General Motors Research Laboratories in the mid 1960s. Proprietary CAD software programs were also developed by McDonnell-Douglas (CADD released in 1966), Ford (PDGS released in 1967), Lockheed (CADAM released in 1967) and many others.\n\nAlso in the mid 1960s, the Digigraphics division of Control Data Corporation released the first commercially available CAD software system. The system was a successor to ITEK’s earlier CAD software research system (which was named “The Electronic Drafting Machine” and ran on a Digital Equipment Corp. PDP-1 mainframe computer) and as with the Sketchpad CAD software, input was made using a light pen. Digigraphics was priced at $500,000 per unit and only a very few units were ever sold.\n\nMuch of the early pioneering research in 2D CAD software was performed at what was then MIT’s Mathematical Laboratory (now the Department of Computer Science). European researchers were also becoming active though and in 1965, Charles Lang’s team. including Donald Welbourn and A.R.Forrest, at Cambridge University’s Computing Laboratory began serious research into 3D modeling CAD software. The commercial benefits of Cambridge University’s 3D CAD software research did not begin to appear until the 1970 however, elsewhere in mid 1960s Europe, French researchers were doing pioneering work into complex 3D curve and surface geometry computation. Citroen’s de Casteljau made fundamental strides in computing complex 3D curve geometry and Bezier (at Renault) published his breakthrough research, incorporating some of de Casteljau’s algorithms, in the late 1960s. The work of both de Casteljau and Bezier continues to be one of the foundations of 3D CAD software to the present time. Both MIT (S.A.Coons in 1967) and Cambridge University (A.R.Forrest, one of Charles Lang’s team, in 1968) were also very active in furthering research into the implementation of complex 3D curve and surface modeling in CAD software.\n\nhttp://www.cadazz.com/cad-software-history.htm\n\nSketchpad was an innovative system developed in 1963 by Ivan Sutherland as part of his PhD thesis. It is a tribute to Sketchpad’s uniqueness that it defined a GUI (Graphical User Interface) more than 20 years before the term was first used.\n\nSketchpad was developed at MIT’s Lincoln Laboratory on a TX-2 computer. The computer was very advanced for its time and had 320kb main memory, an 8Mb magnetic tape storage device, a 7 inch 1024×1024 monitor, a light pen and a button box. As with most computers of that era, programs were written in macro-assembler, punched onto paper tape and fed into the computer’s paper tape reader. The computer occupied about 1,000 square feet (~93 square meters) and the 320kb memory core alone was ~1 cubic yard (~0.76 cubic meters).\n\nSketchpad’s most incredible breakthroughs were in the way that it allowed the user to interact with the computer:\n\nthe light pen was used to draw directly on the computer’s monitor and incorporated graphical user interface techniques such as rubber-banding of lines and zooming,\n\nrubber-banded lines could be constrained to always intersect at a precise angle,\n\nan advanced memory architecture was developed that allowed the creation of master objects and “instances” which were very memory efficient copies of the masters,\n\nthe master-instance concept allowed the creation of a master drawing and then duplicates to be created which would inherit properties of the objects in the master drawing unless they were locally changed,\n\nif the master drawing was changed then the changes would automatically be propogated through the instances in any duplicates.\n\nSketchpad’s drawings were created, duplicated and stored at 2000:1 scale which allowed very large layouts. Sketchpad proved beyond doubt that computers could automate repetitive design and drafting tasks with a reliability and accuracy not possible by manual methods. Possibly of even greater significance and sadly almost ignored in the CAD software market in the 40 years since Ivan Sutherland published his thesis, Sketchpad proved that computers can be used not just for engineering and repetitive drafting but can be used interactively by designers and potentially artists in the concept creation and innovation stage of a product’s lifecycle.\n\nhttp://www.cadazz.com/cad-software-Sketchpad.htm\n\nSketchpad ran on the Lincoln TX-2 computer, an innovative machine designed in 1956 (it had a large amount of memory for its time: a vacuum-tube-driven core of 64K words, a faster, transistor-driven core of 4K words, a paper-tape reader and could also use magnetic tape as auxiliary storage.) TX-2 was an “on-line” computer (at that time most computers would run “batches” of jobs and were not interactive), used to investigate the use of Surface Barrier transistors for digital circuits. TX-2 included a nine inch CRT and a light pen which first gave Sutherland his idea. He imagined that one should be able to draw on the computer. Sketchpad was able to do just this, creating highly precise drawings, and also introduced important innovations such as memory structures to store objects and the ability to zoom in and out.\n\nIvan Sutherland using Sketchpad in 1962\n\nThe Sketchpad uses drawing as a novel communication medium for a computer. The system contains input, output, and computation programs which enable it to interpret information drawn directly on a computer display. It was a general purpose system and has been used to draw electrical, mechanical, scientific, mathematical, and animated drawings. Sketchpad has shown the most usefulness as an aid to the understanding of processes, such as the notion of linkages, which can be described with pictures. Sketchpad also makes it easy to draw highly repetitive or highly accurate drawings and to change drawings previously drawn with it.\n\nA Sketchpad user sketches directly on a computer display with a “light pen.” The light pen is used both to position parts of the drawing on the display and to point to them to change them. A set of push buttons controls the changes to be made such as “erase”, “move”, etc.\n\nInformation sketched can include straight line segments and circle arcs. Arbitrary symbols may be defined from any collection of line segments, circle arcs, and previously defined symbols. A user may define and use as many symbols as he wishes. Any change in the definition of a symbol is at once seen wherever that symbol appears.\n\nSketchpad stores explicit information about the topology of a drawing. If the user moves one vertex of a polygon, both adjacent sides will be moved. If the user moves a symbol, all lines attached to that symbol will automatically move to stay attached to it. The topological connections of the drawing are automatically indicated by the user as he sketches. Since Sketchpad is able to accept topological information from a human being in a picture language perfectly natural to the human, it can be used as an input program for computation programs which require topological data, e.g., circuit simulators.\n\nSketchpad itself is able to move parts of the drawing around to meet new conditions which the user may apply to them. The user indicates conditions with the light pen and push buttons. For example, to make two lines parallel, he successively points to the lines with the light pen and presses a button. The conditions themselves are displayed on the drawing so that they may be erased or changed with the light pen language. Any combination of conditions can be defined as a composite condition and applied in one step.\n\nIt is easy to add entirely new types of conditions to Sketchpad’s vocabulary. Since the conditions can involve anything computable, Sketchpad can be used for a very wide range of problems. It has been used, for example, to find the distribution of forces in the members of truss bridges drawn with it.\n\nSketchpad drawings are stored in the computer in a specially designed “ring” structure. The ring structure features rapid processing of topological information with no searching at all. The basic operations used in Sketchpad for manipulating the ring structure are described.\n\nhttp://history-computer.com/ModernComputer/Software/Sketchpad.html\n\nHere’s Ivan Sutherland using Sketchpad on the TX-2.(Computer History Museum)\n\nhttp://www.computerhistory.org/revolution/input-output/14/349/1878\n\nSketchpad was a stepping stone to the first commercial CAD system running on the then new DEC PDP 1, which was probably the first minicomputer. The system was called Digigraphics and was sold by the Itek Corporation. Unfortunately Itek was a defense contractor which limited the possible customers. So Itek sold the program to CDC. The big problem was that the software was there, but there was still no horse for the cart so CDC eventually shut Digigraphics down.\n\nhttps://en.wikipedia.org/wiki/Digigraphics\n\nClick to access 06%20First%20Commercial%20CAD%20System.pdf\n\nHere’s some demo videos for Sketchpad.\n\nSketchpad was a dead end because the computer hardware just wasn’t there to run anything powerful enough to do the work. The TV2 was huge and was not really fast enough to support more than one user at a time. Which was a fatal flaw for a piece of software that required interactivity. There was also the problem that CDC did not really NEED a CAD package and wasn’t willing to stick to developing something just on the speculation that it might sell someday. Digigraphics was simply too early.\n\nThe path to CAD needed a user willing to spend the resources because they needed the product. That user would be GM. A car is a huge project for an engineering and design department to handle and handling the engineering documentation was a task that was growing with each new model year. Also in the early 1960’s it was becoming obvious that many of the machining and production processes would be handled by computer. It was only natural that the possibilities of creating the part definition and drawings on the computer would obviously reduce the time for conception to production and make the design process more productive.\n\nFaced with having to design a series of car models every year, GM had a pressing need for streamlining the design process. GM also had the money and resources to invest in advanced technologies like computer graphics if it had the potential to make the desing process far more efficient.\n\nTo create the software, GM recruited Patrick Hanratty, who developed a software called DAC. In many ways DAC had the same issues as sketchpad. The software was simply too advanced for the hardware. Here’s a bunch of stuff about DAC and Patrick Hanratty below.\n\nOne of the people involved with the General Motors CAD project was Dr. Patrick Hanratty, who later left GM to form his own company and develop the first commercially available software for mechanical drafting. Dr. Hanratty’s software was used as the basis for nearly a dozen start-up companies selling turnkey CAD programs. Today, an estimated 90% of commercial drafting software can trace its roots back to Dr. Hanratty’s original program, called Adam.\n\nA quarter century ago, the very idea of CAD and CAM being linked was far-fetched and provocative to say the least. But today, production of a part is set in motion from a designer’s graphic terminal.\n\nWhat CAD and CAM now constitute is one of the greatest technological and economic forces ever seen in industry. Unfortunately, this fact is not comprehended by the public at large. Outside of the manufacturing and design engineering communities, few people realize how instrumental CAD and CAM are in establishing our standard of living at unprecedented heights.\n\nThe combined technologies need a Pantheon where landmark events and the people responsible for them can be honored and remembered. To this end, a CAD-CAM Hall of Fame has been established. Dr. Ivan Sutherland, Mr. John Parsons, and Dr. Patrick Hanratty are the first inductees. AMERICAN MACHINIST’S sister publication MACHINE DESIGN is handing out the honors.\n\nPatrick J. Hanratty\n\nPatrick J. Hanratty’s pioneering contributions to CAD/CAM technology date back to 1957 when he developed software for Pronto, the first commercial NC programming language, while working at General Electric. Soon after, he devised a set of standardized machine-readable characters for use on bank checks.\n\nThat standard was accepted by the American Banking Association and is still in use today. At the same time, he began dabbling in computer-generated graphics, a largely unexplored field at the time.\n\nIn 1961 he moved on to General Motors Research Laboratories where he helped develop DAC, (Design Automated by Computer), the first CAD/CAM system to use interactive graphics. Hanratty’s efforts in the project concentrated on the NC and graphics portion of the overall system. Although DAC was said to be incredibly useful and unparalleled in the auto industry for designing complex die molds, GM discarded the system when it upgraded its hardware and abandoned the software written for its older computers.\n\nIn 1970, Hanratty started his own company, ICS to write and market a CAD/CAM drafting package. Unfortunately, he targeted the software to run on a machine few people had heard of, and wrote it in TPL, his own programming language that even fewer people knew. Needless to say, the company was less than a success. But it did teach Hanratty some important lessons that are just as valid today: “Never generate anything closely coupled to a specific architecture. And make sure you keep things open to communicate with other systems, even your competitors.”\n\nHe disbanded ICS and went on to form a new company, Manufacturing and Consulting Services (MCS) in 1971. Working alone, he wrote Adam, the first commercially available integrated, interactive graphics design, drafting, and manufacturing system. And this time he wrote it in Fortran and designed it to run on virtually any machine.\n\nThe package was a success. He eventually upgraded it to run on 16-bit, then 32-bit computers. He added more machining and surfacing capabilities and eventually rechristened it AD-2000. Even today, many major CAD/CAM companies can trace their software back to code written by Hanratty for Adam, AD-2000, and its follow-on Anvil-4000. Adam, for example, was licensed by Computervision Corp. for Cadds, by Gerber Scientific Inc. for IDS 3, and McDonnell Douglas for Unigraphics.\n\nSome of the innovative firsts that sprung from MCS include Auto-Grapl and Autosnap 3D, along with Anvil-5000, a full-featured mainframe and workstation CADCAM system that works on PCs without a reduction in capabilities. Intelligent Modeler, a relational/parametric solid modeler that is fully integrated with a complete CAM system, also has its roots in MCS.\n\nAutosnap 3D lets computer users automatically create 3D solid models from a 2D drawing. Auto-Grapl lets engineers design components, view the geometry, then command the system to write a program, in Grapl, that would make the part using NC machining. “We wanted a set of programs that would let the computer write its own program,” says Hanratty. “And from a customer’s point of view, Auto-Grapl is the most significant advance to date in the CAD/CAM industry, or for that matter, in any area of computer science — the computer writes the program for you.”\n\nhttp://americanmachinist.com/cadcam-software/cadcam-hall-fame\n\nhttps://en.wikipedia.org/wiki/Patrick_J._Hanratty\n\nClick to access 15%20Patrick%20Hanratty%20and%20MCS.pdf\n\nhttps://en.wikipedia.org/wiki/DAC-1\n\nhttp://www.autodesk.com/campaigns/inspired-by-autocad/cad-innovation?mktvar002=690203&utm_medium=social-pd&utm_source=facebook&utm_campaign=amer-mul-new-subscriber&utm_id=690203&td=acadinspire\n\nhttps://history.gmheritagecenter.com/wiki/index.php/GM%27s_Road_to_Virtual_Product_Development\n\nPatrick Hanratty could be said to be the father of Computer Aided Design. What he did was important and it increased drawing productivity but the key to engineering has always been the actual part and getting those parts made.\n\nFortunately, automating manufacturing processes is older than the computer itself. IN fact punched cards were first used to automate silk looms in France in the early 1800’s.\n\nMr. Burke’s claims notwithstanding, I’ve never seen a card or taped driven multiple riveter or drill from the 19th Century. I’m going to leave that as the usual “something I heard” by a BBC writers who didn’t know about machines or do their homework. Frankly it’s not possible to use a mechanical linkage to control heavy machine tools because there is no real way to amplify the signals from the holes in the card or tape. Which is why until the mid 20th Century that numerical control was only used in light duty machines like looms and player pianos.\n\nThe advent of WW2 and the invention of servo motors changed that. Which brings us to the last of three players in this post, John T. Parsons. See more about him below.\n\nhttps://en.wikipedia.org/wiki/John_T._Parsons\n\nParsons: My salesman, Robert Snyder, was visiting Bill Wilcox at Wright Field, and Wilcox said they were having a terrible time with a new jet plane’s wing construction. The Air Force had given a contract to Republic Aviation for a fighter plane, and to Lockheed for a medium-range bomber with a 220′ wingspan. The designs were so heavy that the planes couldn’t fly. They were wondering what to do, and they called me to see if I could figure out a way to build them with a machine. So I talked with Wilcox and Lockheed, and went to California. The first day there I spoke to 50 different people and only one, a fellow by the name of George Papen, showed any interest in a machine. That was on a Monday morning. I called him the next day and said, what in the world is wrong here? He said, “John, you’ve thrown them for a loop. Give them a few days, come back in on Thursday.” Well I still hadn’t made any converts except for Papen. Now just picture the situation for a minute. Lockheed had contracted to design a machine to make these wings. This machine had five axes of cutter movement, and each of these was tracer controlled using a template. Nobody was using my method of making templates, so just imagine what chance they were going to have of making an accurate airfoil shape with inaccurate templates.\n\nBecause of this work, and an article on it in Business Week magazine, a general wrote me, saying they would be interested in financing the development of a machine to make templates. In December 1949, Stulen and I prepared a dog-and-pony show for the government’s visit using a Swiss boring mill located at Snyder Machine & Tool Corp. in Detroit. It turned out there would be about 10 people from the Air Force and one from the Navy to see the process. Stulen calculated the angles for a template. The group saw what the machine could do with the coordinate points and the leadscrew. I received a $200,000 contract from the Air Force Air Material Command to build an automated machine, which of course, was grabbing a figure out of the air.\n\nThe director system was built by MIT’s Servo Lab, along with the specially designed paper-tape key-punching desk. Note that the input to the director is paper tape; output signals are recorded on the magnetic tape unit shown at the right. The system was advertised by Giddings and Lewis as their Numericord.\n\nRO: Were you going to build the numerically controlled machine yourself?\n\nParsons: At this time, I had already started working with Snyder Machine, which manufactured transfer-style machines, to build the equipment without the Air Force contract, and I had incurred about $150,000 in expenses with Snyder Tool.\n\nSnyder had designed a machine, and then Stulen and I realized that we needed servomechanisms to get accurate positions. Massachusetts Institute of Technology (MIT) in Cambridge, MA had a servo lab, and I went to see them. I gave them a subcontract to design the servos for the machine. The contract originally called for research from July 1, 1949 to June 30, 1950. It was extended to February 1951. At this time we called my machine the Card-a-matic Milling Machine. When I got the contract from the Air Force, I immediately hired a fellow by the name of Robert H. Marsh who was with a New England machine-tool builder. He was the one who talked me into going to MIT because of their servomechanism lab. I hired Marsh as the liaison engineer with IBM, because I had signed a contract the previous December in 1948 with them to furnish my company with a data-input device for their punch-card machine.\n\nRO: Did MIT stay on track with the servomechanism portion of the machine?\n\nParsons: The problem was that MIT overshot their budget with me by about $50,000. I finally had to ask the government for more money for the servomechanism. MIT gave me an amount that I used for the bid then I added on my portion of the work. So I put in my bid for a price increase, and MIT underbid me.\n\nMIT told me they had one overhead rate for private industry, and another, lower one, for the government. But I never dreamed that anybody as reputable as MIT would deliberately go ahead and take over my project. MIT knew the costs were going up, and they were afraid the government might back out on the whole deal. They were even looking for a machine to experiment with. MIT was aware of a lot of government surplus machine tools used during World War II, and they went looking for one, which ended up being a Cincinnati Hydro-Tel vertical milling machine with a 24×60″ bed size.\n\nAt this point, MIT negotiated a new contract with the Air Force that essentially removed the Parsons Company from further development of the NC system. Originally, Parson wanted to build two Card-a-matic Milling Machines, numbers one and two. One was an experimental working model, and the second model would be the final machine. The experimental machine would have an 18×40″ table with the final machine having a 28×72” table. The machines would use an IBM punch card reader that fed cards into a standard IBM calculating machine. Next, the calculator would deliver pulses to a servomotor to move the ballscrew. Later the Parsons team found that the card reader would be far too slow to achieve the goal feed rates of 15 ipm, and Marsh suggested a paper-punch tape or a magnetic-tape reader. A paper punch-tape reader that used a keypunching machine to put holes in the tape was incorporated into MIT’s final design on the Cincinnati milling machine. A digital processor using vacuum tubes took the place of the IBM punch-card calculator that Stulen originally envisioned to control the movements of the machine’s axes.\n\nHow did the name numerical control develop? Parsons had a contest at MIT to pick a name. Numerical control was chosen, and the winner received a $50 prize.\n\nRO: What happened next?\n\nParsons: In March, 1952, MIT completed the NC machine, but they didn’t deliver the machine to me even though my contract with them called for delivery of it to me. They insisted that they could do a better demonstration than I could. That, of course, was ridiculous, because they didn’t know machining. MIT put on shows for the aircraft, machine tool, and electronics industries, and refused to invite me to attend those demonstrations. So I went to the Air Force and asked for invitations for Stulen and myself. The Air Force insisted that MIT invite me and Stulen. I was invited to all three demonstrations, and Stulen was only invited to one. At one of the demonstrations, a fellow from a Swiss company said to me, “you’re about as welcome around here as a bride’s mother on a honeymoon.”\n\nAt dinner after the MIT demonstrations, a Pratt & Whitney engineer said, “We don’t see anything patentable about this process.” I said, “I don’t agree,” and I went to work getting the patent. I managed to get those patents even though MIT was trying to patent the process at the same time. In January, 1954, I hired a patent law firm to do the work for 25% of all fees and royalties.\n\nA patent was issued to John T. Parsons on January 14, 1958 three months before the MIT filing. The inventors were John T. Parsons and Frank Stulen. Patent No. 2,821,187.\n\nRO: Once you received a patent, did you license it, or continue to develop NC yourself?\n\nParsons: After the initial MIT demonstration, and obtaining a patent, the next step was to find somebody to license NC. I worked very hard on getting a company to develop it. I decided to go to Bendix, because of their Detroit headquarters, and because it was easier than going to New York or out East to a machine-tool builder. The director of their research lab was A.C. Hall. I believe he was one of the founders of the servo lab at MIT. He had been there, and he understood the concept. He reported to Lawrence Highland, who was director of research at Bendix. I made several trips to Bendix over a period of four to six months, and then Highland called my patent lawyer, Richard Mason, and myself to Detroit for a meeting.\n\nHe said, “We’ve decided there is just nothing in the patented process that we can use.” I embarked on an 11-minute soliloquy and ended with, “If I had properly explained this thing to you, you could not have possibly made that decision.” He said, “if you feel that strongly about it I’ll send Hall down to MIT to have another look.” He came back, and we had a contract, an exclusive license to Bendix, with the right to sub-license. They were very dilatory in sub-licensing. They had granted some sub-licenses, but I figured there were at least 30 companies infringing my patents, and I couldn’t afford to fight them in court. Later, in 1970, I had a meeting with Bendix, and said, I can’t fuss around with the patents anymore. I want you to buy a paid-up license for one million dollars within 60 days, or else I will move my auditors in. Under the agreement with them, I had the right to audit their sales, on which I collected royalties. So I put the heat on them, and I got the contract and money. I had to pay Mason 25% of anything I made on the patent. Mason said, “John, you should give a percentage to each of four MIT engineers for their work.” I ended up giving 3% to the engineers and to MIT and 10% to Stulen in 1970.\n\nBendix was producing some machines themselves, and they were also granting licenses. To give you an idea, IBM took the biggest license, which was around $750,000. Fujitsu took one for $700,000 and GE for the same amount.\n\nRO: Why did it take so long between licensing the patent and the widespread use of NC?\n\nParsons: The slow progress of computer development was part of the problem. In addition, the people who were trying to sell the idea didn’t really know manufacturing—they were computer people.\n\nThe NC concept was so strange to manufacturers, and so slow to catch on, that the US Army itself finally had to build 120 NC machines and lease them to various manufacturers to begin popularizing its use.\n\nIn March 1968, Parsons sold his company to a California conglomerate by the name of HITCO, and was to have stayed on as head of the Parsons division in Traverse City. Because of business differences, however he resigned six months later, and created a consulting and design firm to pursue development of technology with the US Navy for the manufacture of controllable-pitch propellers.\n\nHe had also begun work on the development of a milling machine to produce polystyrene patterns, and another machine he called ParTape, for automatic programming and tape preparation for an NC machine. It was a takeoff on the tracer mill concept, all intended to make numerical control more accessible in manufacturing.\n\nThe prototype machines were never completed because of problems with the vendor. After exhausting financial resources, including proceeds from the Bendix agreement, Parsons found himself in a situation not unfamiliar to many great innovators. He was rich in ideas, but had neither the money nor the clout to take them to fruition.\n\nThe Parsons’ Corp. had its own small helicopter to demonstrate its rotor blades. John Parsons is on the right.\n\nAs a consultant, he was involved in several projects throughout the 1970s dealing with alternative energy sources, including the conceptual design of a wind-energy system that would use a 420′ diam blade to produce power.\n\nA decade later his accomplishments began to be acknowledged outside the industry. In 1985 he and Frank Stulen were among the first recipients of the National Medal of Technology, which was presented to them by President Ronald Reagan. In 1993, Parsons was inducted into the National Inventors Hall of Fame.\n\nParsons personally received approximately 15 US patents in the fields of numerical control, marine propellers, foundry systems, and data-acquisition methods, and his business was awarded about 35 patents. He also pioneered adhesive bonding in metal aircraft structures, then built the first all-composite airplane. His technology revolutionized the production of conventional and controllable-pitch ship propellers. He produced fuel lines that were 20” in diameter and 22′ long for the Saturn booster that launched the US astronauts to the moon. Parsons brought computers to aircraft design, manufacturing, and real-time management reporting. He developed evaporative patterns produced by NC to replace weldments with streamlined castings, which revolutionized the production of automobile body dies.\n\nhttp://www.sme.org/Tertiary.aspx?id=36002\n\nClick to access 20071023_presentation-1.pdf\n\nhttp://history.computer.org/pioneers/parsons.html\n\nNumerical control changed not only how machines were controlled, but what you could do with them. For the first time you could no machine complicated surfaces in multiple axis without resorting to calculating complex cams and dedicating a tool to the part. You could also used the same machine for different parts without the need to retool the machine or build an entire new machine. The advantages for the aerospace industry were obvious.\n\nWhen you sit and work with a CAD software of 3D graphics software, it’s good to realize just how lucky you are. When the first drawing program was developed the machine to run it on. for ones seat took up it’s own building. We’ve come a long way in a very short period of time and engineering and the products we all use have benefitted from the work of the early CAD developers. Which makes me glad that I chased the stories down.\n\nUpdate: Promotional video from Sperry."
    }
}