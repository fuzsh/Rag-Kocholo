{
    "id": "correct_subsidiary_00020_0",
    "rank": 87,
    "data": {
        "url": "https://www.loryanstrant.com/2022/12/16/creating-a-sharepoint-page-using-microsoft-graph-api-and-power-automate/",
        "read_more_link": "",
        "language": "en",
        "title": "Creating a SharePoint page using Microsoft Graph API and Power Automate",
        "top_image": "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh2.png?fit=540%2C599&ssl=1",
        "meta_img": "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh2.png?fit=540%2C599&ssl=1",
        "images": [
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2020/12/cropped-LS-only-transparent-150x150-1.png?fit=512%2C512&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh2.png?fit=540%2C599&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh1.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh2.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh3.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh4.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh5.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh6.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh7.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh8.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh9.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2022/12/121622_0608_CreatingaSh10.png?w=750&ssl=1",
            "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2020/12/cropped-LS-only-transparent-150x150-1.png?fit=512%2C512&ssl=1"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Loryan Strant"
        ],
        "publish_date": "2022-12-16T00:00:00",
        "summary": "",
        "meta_description": "Thanks to the workflow that notifies me of updates to the Microsoft Graph API, I saw a new addition to the list: the sitePage resource type. This is exciting for me, as I currently have some workflows that distribute SharePoint pages to various sites both within our own tenant, as well as client tenants. Currently…",
        "meta_lang": "en",
        "meta_favicon": "https://i0.wp.com/www.loryanstrant.com/wp-content/uploads/2020/12/cropped-LS-only-transparent-150x150-1.png?fit=32%2C32&ssl=1",
        "meta_site_name": "Loryan Strant, Microsoft 365 MVP",
        "canonical_link": "https://www.loryanstrant.com/2022/12/16/creating-a-sharepoint-page-using-microsoft-graph-api-and-power-automate/",
        "text": "Thanks to the workflow that notifies me of updates to the Microsoft Graph API, I saw a new addition to the list: the sitePage resource type.\n\nThis is exciting for me, as I currently have some workflows that distribute SharePoint pages to various sites both within our own tenant, as well as client tenants. Currently these are triggered by a page being published in a central location, with specific information used as trigger conditions.\n\nWhat’s annoying about this scenario is that I need to create connectors in Power Automate to the client tenant using an account in their environment. It also means I need a workflow per client (to keep it clean).\n\nNow with the addition of the sitePage resource type in Microsoft Graph, I can make this work programmatically across any number of clients – all from a single workflow.\n\nWARNING: This is a beta feature at present, so don’t use it for production systems unless you’re find to accept the risks.\n\nRequirements\n\nThe requirements of this are fairly simple. We need:\n\nAn app registration in Azure AD that has the “Sites.ReadWrite.All” application permission added\n\nA repository where the details are stored, including:\n\nClient name\n\nTenant ID\n\nApp/Client ID\n\nSecret\n\nSharePoint site ID\n\nNow, we could use a different way to authenticate, and we could also use an action to perform a search in the tenant to find the relevant site by name or URL, but if we’ve got that – then it’s not exactly difficult to get the SharePoint site ID and store it in our repository.\n\nFor the purposes of this, I’m going to store it in a SharePoint list:\n\nWorkflow\n\nAt a high-level, my workflow is quite simple:\n\nIn my specific scenario, all the workflow is doing is publishing a page with an embedded video, as part of a program of regular content I create for clients. So all I need to provide is a page title and the URL suffix from the embed code.\n\nThe next step of the workflow takes my page title, and turns it into a file name:\n\nThe code used here is:\n\nconcat(replace(triggerBody()['text'],' ','-'),'.aspx')\n\nFrom here, we’re now ready to retrieve all the sites we want to apply this to:\n\nWithin our Apply to Each, we have three steps:\n\nCreate the page\n\nParse the JSON of the page creation\n\nPublish the page, using the ID from step 2\n\n(If you’re comfortable with extracting the page ID value directly from the results of step 1, then you don’t need the Parse JSON action.)\n\nIn the page creation action, I’m creating a very simple page that only has a single embed web part on it, and I’m passing variables from both the trigger as well as the Get Items action.\n\nThe Parse JSON is relatively straightforward:\n\nAnd for the final step we hit publish on the page:\n\nAnd that’s it! We have a simple page published in each tenant listed, with the same content.\n\nIf you want something more glamorous, refer to the sitePage resource type page to get a breakdown of the structure of the body of the content.\n\nAppendix\n\nHere’s the full details of the body of the page creation and Parse JSON actions.\n\nCreate page\n\n{ \"name\": \"@{outputs('Compose_-_replace_spaces_with_hyphens_and_add_file_extension')}\", \"title\": \"@{triggerBody()['text']}\", \"pageLayout\": \"article\", \"promotionKind\": \"newsPost\", \"showComments\": false, \"showRecommendedPages\": false, \"titleArea\": { \"enableGradientEffect\": true, \"imageWebUrl\": \"/_layouts/15/images/sleektemplateimagetile.jpg\", \"layout\": \"plain\", \"showAuthor\": false, \"showPublishedDate\": true, \"showTextBlockAboveTitle\": false, \"textAboveTitle\": \"\", \"textAlignment\": \"left\", \"imageSourceType\": 2, \"title\": \"@{triggerBody()['text']}\" }, \"canvasLayout\": { \"horizontalSections\": [ { \"layout\": \"oneColumn\", \"id\": \"1\", \"emphasis\": \"none\", \"columns\": [ { \"id\": \"1\", \"webparts\": [ { \"id\": \"669d4d75-eca0-4e8b-95d7-2e765dd4859a\", \"webPartType\": \"490d7c76-1824-45b2-9de3-676421c997fa\", \"data\": { \"audiences\": [], \"dataVersion\": \"1.2\", \"description\": \"Embed content from other sites such as Sway, YouTube, Vimeo, and more\", \"title\": \"Embed\", \"properties\": { \"embedCode\": \"<iframe src=\\\"https://player.vimeo.com/video/@{triggerBody()['text_2']}\\\" width=\\\"640\\\" height=\\\"360\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen; picture-in-picture\\\" allowfullscreen=\\\"\\\"></iframe>\", \"cachedEmbedCode\": \"<iframe src=\\\"https://player.vimeo.com/video/@{triggerBody()['text_2']}\\\" width=\\\"640\\\" height=\\\"360\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen; picture-in-picture\\\" allowfullscreen=\\\"\\\"></iframe>\", \"shouldScaleWidth\": true, \"thumbnailUrl\": \"\", \"cachedEmbedCodeThumbnail\": \"\" }, \"serverProcessedContent\": { \"imageSources\": [ { \"key\": \"imageSource\", \"value\": \"/_LAYOUTS/IMAGES/VISUALTEMPLATEIMAGE1.JPG\" } ] } } } ] } ] } ] } }\n\nParse JSON\n\n{ \"type\": \"object\", \"properties\": { \"@@odata.context\": { \"type\": \"string\" }, \"@@odata.etag\": { \"type\": \"string\" }, \"eTag\": { \"type\": \"string\" }, \"id\": { \"type\": \"string\" }, \"lastModifiedDateTime\": { \"type\": \"string\" }, \"name\": { \"type\": \"string\" }, \"webUrl\": { \"type\": \"string\" }, \"title\": { \"type\": \"string\" }, \"pageLayout\": { \"type\": \"string\" }, \"thumbnailWebUrl\": { \"type\": \"string\" }, \"promotionKind\": { \"type\": \"string\" }, \"showComments\": { \"type\": \"boolean\" }, \"showRecommendedPages\": { \"type\": \"boolean\" }, \"createdBy\": { \"type\": \"object\", \"properties\": { \"user\": { \"type\": \"object\", \"properties\": { \"displayName\": { \"type\": \"string\" } } } } }, \"lastModifiedBy\": { \"type\": \"object\", \"properties\": { \"user\": { \"type\": \"object\", \"properties\": { \"displayName\": { \"type\": \"string\" } } } } }, \"parentReference\": { \"type\": \"object\", \"properties\": { \"siteId\": { \"type\": \"string\" } } }, \"contentType\": { \"type\": \"object\", \"properties\": { \"id\": { \"type\": \"string\" }, \"name\": { \"type\": \"string\" } } }, \"publishingState\": { \"type\": \"object\", \"properties\": { \"level\": { \"type\": \"string\" }, \"versionId\": { \"type\": \"string\" } } }, \"reactions\": { \"type\": \"object\", \"properties\": {} }, \"titleArea\": { \"type\": \"object\", \"properties\": { \"enableGradientEffect\": { \"type\": \"boolean\" }, \"imageWebUrl\": { \"type\": \"string\" }, \"layout\": { \"type\": \"string\" }, \"showAuthor\": { \"type\": \"boolean\" }, \"showPublishedDate\": { \"type\": \"boolean\" }, \"showTextBlockAboveTitle\": { \"type\": \"boolean\" }, \"textAboveTitle\": { \"type\": \"string\" }, \"textAlignment\": { \"type\": \"string\" }, \"title\": { \"type\": \"string\" }, \"authors@odata.type\": { \"type\": \"string\" }, \"authors\": { \"type\": \"array\" }, \"authorByline@odata.type\": { \"type\": \"string\" }, \"authorByline\": { \"type\": \"array\" }, \"imageSourceType\": { \"type\": \"integer\" }, \"serverProcessedContent\": { \"type\": \"object\", \"properties\": { \"imageSources\": { \"type\": \"array\", \"items\": { \"type\": \"object\", \"properties\": { \"key\": { \"type\": \"string\" }, \"value\": { \"type\": \"string\" } }, \"required\": [ \"key\", \"value\" ] } } } } } } } }\n\nAlso published on Medium."
    }
}