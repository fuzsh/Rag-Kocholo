{
    "id": "correct_subsidiary_00020_1",
    "rank": 9,
    "data": {
        "url": "https://ravichandran.blog/2020/05/04/file-browse-and-select-or-upload-using-pnp-file-picker-in-the-sharepoint-framework-spfx-webpart/",
        "read_more_link": "",
        "language": "en",
        "title": "File browse and select or upload using PnP File Picker in the SharePoint Framework (SPFx) webpart",
        "top_image": "https://ravichandran.blog/wp-content/uploads/2020/05/file.jpg",
        "meta_img": "https://ravichandran.blog/wp-content/uploads/2020/05/file.jpg",
        "images": [
            "https://ravichandran.blog/wp-content/uploads/2020/05/file.jpg?w=810",
            "https://ravichandran.blog/wp-content/uploads/2020/05/file.jpg?w=996",
            "https://ravichandran.blog/wp-content/uploads/2020/05/git.png",
            "https://0.gravatar.com/avatar/3d5666d7ffcbb5399e71721a67d35740571ae100cfb37bf6486f2cc9e5c33b97?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/0f69b6dc60532b4b25dad706c8c01da2f773660eb46341905b6f9abcc06ea7bf?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/85e17e7772fcaf17b75d4645b07a8e79f0d9d3d2f9805d627e1a96cb1511fdf5?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/0f69b6dc60532b4b25dad706c8c01da2f773660eb46341905b6f9abcc06ea7bf?s=50&d=identicon&r=G",
            "https://1.gravatar.com/avatar/1200c1c0739056288951a76bebba8328a340b284e4623eb99b31b5f447df4887?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/0f69b6dc60532b4b25dad706c8c01da2f773660eb46341905b6f9abcc06ea7bf?s=50&d=identicon&r=G",
            "https://1.gravatar.com/avatar/1a02a3240d5a7f0fb17b7d1f1d319d95e4e1b5e611e6d791786e082e228792a8?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/0f69b6dc60532b4b25dad706c8c01da2f773660eb46341905b6f9abcc06ea7bf?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/0f69b6dc60532b4b25dad706c8c01da2f773660eb46341905b6f9abcc06ea7bf?s=128&d=identicon&r=G",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2020/05/list-and-list-item.gif?resize=40%2C40&ssl=1",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2020/05/panel.png?resize=40%2C40&ssl=1",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2020/05/pnp-date-picker.jpg?resize=40%2C40&ssl=1",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2020/06/select.png?resize=40%2C40&ssl=1",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2020/05/card.png?resize=40%2C40&ssl=1",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2020/06/nav.png?resize=40%2C40&ssl=1",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2021/09/day3.png?resize=40%2C40&ssl=1",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2020/05/popup.png?resize=40%2C40&ssl=1",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2020/05/carousel.jpg?resize=40%2C40&ssl=1",
            "https://i0.wp.com/ravichandran.blog/wp-content/uploads/2020/05/page.png?resize=40%2C40&ssl=1",
            "https://ravichandran.blog/wp-content/uploads/2022/11/image-2-1.png?w=32",
            "https://ravichandran.blog/wp-content/uploads/2022/11/image-2-1.png?w=32",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Ravichandran Krishnasamy"
        ],
        "publish_date": "2020-05-04T00:00:00",
        "summary": "",
        "meta_description": "This article provide steps to implement the PnP File Picker in the SharePoint Framework (SPFx), generally File picker control allows to browse and select a file from various places. Currently supported locations - Recent files - tab allows to select a file from recently modified files based on the search results. - Web search -…",
        "meta_lang": "en",
        "meta_favicon": "https://ravichandran.blog/wp-content/uploads/2022/11/image-2-1.png?w=32",
        "meta_site_name": "Ravichandran Blog",
        "canonical_link": "https://ravichandran.blog/2020/05/04/file-browse-and-select-or-upload-using-pnp-file-picker-in-the-sharepoint-framework-spfx-webpart/",
        "text": "This article provide steps to implement the PnP File Picker in the SharePoint Framework (SPFx), generally File picker control allows to browse and select a file from various places. Currently supported locations – Recent files – tab allows to select a file from recently modified files based on the search results. – Web search – tab uses Bing cognitive services to look for a file. (Only images) – OneDrive – tab allows to select a file from the user’s One Drive. – Site document libraries – tab allows to select a file from the existing site document libraries. – Upload – tab allows to upload a file from local drive. – From a link – tab allows to paste a link to the document.\n\nCreate a new web part project\n\nOpen power shell and run following comment to create a new web part by running the Yeoman SharePoint Generator\n\nyo @microsoft/sharepoint\n\nWhen prompted:\n\nEnter the webpart name as your solution name, and then select Enter.\n\nSelect Create a subfolder with solution name for where to place the files.\n\nSelect Y to allow the solution to be deployed to all sites immediately.\n\nSelect N on the question if solution contains unique permissions.\n\nSelect WebPart as the client-side component type to be created.\n\nThe next set of prompts ask for specific information about your web part:\n\nEnter your web part name, and then select Enter.\n\nEnter your web part description, and then select Enter.\n\nSelect React framework as the framework you would like to use, and then select Enter.\n\nStart Visual Studio Code (or your favorite code editor) within the context of the newly created project folder.\n\ncd .\\web part name\\ code .\n\nInstall the library and required dependencies\n\nnpm install @pnp/sp --save npm install @pnp/spfx-controls-react --save --save-exact\n\nImport the library into your application, update constructor, and access the root sp object in render for PnPjs libraries.\n\nConfigure the custom properties\n\nCreate a new source code file under the src\\webparts\\spfxPnpDatetimepicker\\components\\ folder of the solution. Call the new file <Interface name>State.ts and use it to create a TypeScript Interface\n\nIn addition, you need to update the render method of the client-side web part to create a properly configured instance of the React component for rendering. The following code shows the updated method definition.\n\nUpdate the SpfxPnpDatetimepicker.tsx file. First, add some import statements to import the types you defined earlier. Notice the import for <interface default name>Props and <interface default name>State. There are also some imports for the PnP components used to render the UI of the PnP React component and pnp sp imports.\n\nReplace this render function with the following code.\n\nUpdate the React component type declaration and add a constructor, as shown in the following example.\n\nplace the below code inside the react component code, these functions using PnPjs to upload file to the SharePoint Document library\n\nDeploy the solution\n\nYou’re now ready to build, bundle, package, and deploy the solution.\n\nRun the gulp commands to verify that the solution builds correctly.\n\ngulp build\n\nUse the following command to bundle and package the solution.\n\ngulp bundle --ship gulp package-solution --ship\n\nBrowse to the app catalog of your target tenant and upload the solution package. You can find the solution package under the sharepoint/solution folder of your solution. It is the .sppkg file. After you upload the solution package in the app catalog. you can find and the web part anywhere across the tenant.\n\nSharing is caring!"
    }
}