{
    "id": "correct_subsidiary_00020_1",
    "rank": 52,
    "data": {
        "url": "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/",
        "read_more_link": "",
        "language": "en",
        "title": "Build And Deploy The Client Side Web Part (SPFx) In SharePoint Online",
        "top_image": "https://www.c-sharpcorner.com/images/csharp-corner.png",
        "meta_img": "https://www.c-sharpcorner.com/images/csharp-corner.png",
        "images": [
            "https://www.c-sharpcorner.com/App_Themes/CSharp/Images/SiteLogo.png",
            "https://www.c-sharpcorner.com/Images/csharp/ajax-loader-small.gif",
            "https://www.c-sharpcorner.com/Images/csharp/ajax-loader-small.gif",
            "https://www.c-sharpcorner.com/Images/csharp/ajax-loader-small.gif",
            "https://www.c-sharpcorner.com/UploadFile/MinorCatImages/060125AM.PNG",
            "https://www.c-sharpcorner.com/UploadFile/AuthorImage/93cb2720180831065858.jpg.ashx?width=98&height=98",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/cmd prompt1.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/gulp clean2.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/CDN path3.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/bundle task4.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/SharePoint5.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/Package process6.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/project folder7.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/Local.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/deploy folder8.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/document9.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/upload10.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/solution11.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/image013.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/image014.jpg",
            "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/Images/SPFx14.jpg",
            "https://www.c-sharpcorner.com/UploadFile/EBooks/07062020013600AM/11162022110739AM07062020014329AMSharePointOnlineOffice365Administration.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Kaviya Balasubramanian"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "The article introduces SPFx (SharePoint Framework), ideal for SharePoint Online. It contrasts with older app models, highlighting its client-side Web parts for faster loading without IFrames. It covers creating and deploying Web parts using Gulp tasks, and CDN integration.",
        "meta_lang": "en",
        "meta_favicon": "/Images/favicon.png",
        "meta_site_name": "",
        "canonical_link": "https://www.c-sharpcorner.com/article/build-and-deploy-the-client-side-web-part-spfx-in-sharepoint-online/",
        "text": "In the previous article, we saw how to create a new client Webpart (SPFx) for SharePoint Online with a React template.\n\nWhat is SPFx?\n\nSPFx is introduced in SharePoint 2016. It is one of the new features in SharePoint.\n\nSharePoint app model development is used before SPFx. It was introduced in SP 2013.\n\nSharePoint apps client Web parts are loaded inside an IFrame, so it takes some time to load but SPFx is not like it and is fast.\n\nWe can use SPFx in SharePoint pages and SharePoint modern site pages. in the previous article, we saw how to create a modern site page and how to add the Web part inside the modern site pages.\n\nClient-side Web parts are client-side components, which runs inside the context of a SharePoint page.\n\nClient-side Web parts can be deployed to SharePoint Online and you can also use modern JavaScript tools and libraries to build them.\n\nClient-side Web parts support the features, which are given below.\n\nBuilding with HTML and JavaScript.\n\nBoth SharePoint Online and on-premises environments.\n\nSteps\n\nFollow the steps given below to build and deploy SPFx,\n\nStep 1. Open the cmd prompt, once your development is done.\n\nStep 2. Run the command given below to clean the project and subsequently press enter.\n\ngulp clean\n\nStep 3. Before you run the Gulp bundle, make the change of CDN path (folder from a document library or original CDN path), go to config/write-manifests.json file.\n\nStep 4. Now, run Gulp bundle --ship, and SharePoint Framework will generate debug bundles in the dist folder.\n\ngulp bundle --ship\n\nSharePoint Framework supports two types of builds, which are a debug build and a release build. Both are triggered, using the Gulp bundle task.\n\nIf you request a release build, use the gulp bundle --production or gulp bundle --ship command (the production and ship arguments are interchangeable, and using either of them gives exactly the same result). SharePoint Framework will generate optimized bundles and copy them to the temp/deploy folder.\n\nStep 4. Finally, run the gulp package-solution --ship. To create a .sppkg file, it must deployed in the SharePoint app catalog.\n\nThis .sppkg file is located in the SharePoint folder inside the project folder.\n\nThe package process is done.\n\nOnce we run the commands given above, then get the bundle file from your project folder.\n\nOpen your project folder - Temp - deploy.\n\nIn the deploy folder, copy all the files and add in the SharePoint library path or CDN, which you mentioned in the write-manifests.json file.\n\nUpload the files to the SharePoint document library.\n\nOnce you completed the steps given above, upload the app in an app catalog and install it on your SharePoint site.\n\nGet .sppkg file from <project folder> - Sharepoint - solution - <helloworldsample-webpart.sppkg>.\n\nSharePoint folder\n\nInside the SharePoint folder, click the solution folder to get the .sppkg file.\n\nInside the solution folder, copy the .sppkg file and upload it to an app catalog.\n\nUpload the app file in app catalog\n\nAfter you upload the app file, you will get the pop-up, as shown below, and click Deploy to trust the client-side Webpart.\n\nNow, install the app and add the client app part to your pages or modern site pages.\n\nRefer to the URL given below.\n\nInstall your SharePoint client-side web part (SPFx)\n\nThe Web part will be available, which is based on the group name, you provided in the HelloWorldSampleWebPart.manifest.json file.\n\nFinally, client-side Webpart (SPFx) has been deployed successfully.\n\nSummary\n\nIn this article, we have explored how to take the build for the client-side Web part and deploy the Web part in SharePoint Online."
    }
}