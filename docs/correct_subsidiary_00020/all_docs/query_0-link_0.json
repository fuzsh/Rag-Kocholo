{
    "id": "correct_subsidiary_00020_0",
    "rank": 0,
    "data": {
        "url": "https://learn.microsoft.com/en-us/sharepoint/dev/sp-add-ins/publish-sharepoint-add-ins",
        "read_more_link": "",
        "language": "en",
        "title": "Publish SharePoint Add-ins",
        "top_image": "https://learn.microsoft.com/en-us/media/open-graph-image.png",
        "meta_img": "https://learn.microsoft.com/en-us/media/open-graph-image.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-03-05T08:06:00+00:00",
        "summary": "",
        "meta_description": "Decide where to publish your SharePoint Add-ins.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://learn.microsoft.com/en-us/sharepoint/dev/sp-add-ins/publish-sharepoint-add-ins",
        "text": "You've finished developing your SharePoint Add-inâthe final step is to make it available to your users. You can do this by publishing the add-in to one of the following:\n\nAppSource - Publish your add-in to AppSource to make it publically available, so that it can be acquired by users of any SharePoint deployment.\n\nAn internal organization add-in catalog - Publish your add-in to an internal organization add-in catalog, hosted on your SharePoint deployment, to make it available to users who access that SharePoint deployment.\n\nFor information about how to package your add-in for publication by using Visual Studio 2012, see Publish SharePoint Add-ins by using Visual Studio.\n\nPublishing to AppSource\n\nTo publish an add-in to AppSource, you must first open a developer account.\n\nWhen you upload an add-in to AppSource for publication, Microsoft performs a validation check. For example, it checks that the add-in is free of viruses and that the add-in manifest markup is valid and complete, and verifies that any SharePoint solution packages (.wsp files) that you included in the add-in do not contain elements that aren't allowed, or SharePoint features with a scope that is broader than web. The package is also inspected for objectionable content. If the add-in package passes validation, it's wrapped into a file and signed by Microsoft.\n\nPublishing to an add-in catalog\n\nIf you're creating SharePoint Add-ins for your own company's use or a specific corporate client, instead of the general public, you'll likely want to publish your add-in to an internal add-in catalog hosted on SharePoint. A private add-in catalog is a dedicated site collection in a SharePoint web application (or a SharePoint Online tenancy) that hosts document libraries for SharePoint Add-ins and Office Add-ins. Putting the catalog into its own site collection makes it easier for the web application administrator or tenant administrator to limit permissions to the catalog.\n\nUploading a SharePoint Add-in to a corporate add-in catalog is as easy as uploading any file to a SharePoint document library. You fill out a pop-up form in which you supply the local URL of the add-in package and other information, such as the name of the add-in. When you upload the add-in to an add-in catalog, there are similar checks, and add-ins that do not pass are marked as invalid or disabled in the catalog.\n\nDeciding where to publish your SharePoint Add-in\n\nThe following table offers a comparison of publishing to AppSource or to an add-in catalog, and lists issues to consider when deciding where to publish your add-in. We recommend you decide where you plan to publish your add-in before you design and develop it; in some cases, such as licensing, where you publish your add-in will affect the design and development of your add-in.\n\nTable 1. Considerations for where to publish your add-in\n\nAppSource Add-in Catalog Add-in is publicly available. Add-in is available to users with access to this SharePoint deployment. Licensing framework is available. Licensing framework is not available for use. Add-in package is verified by Microsoft for technical and content adherence to policies. Add-in package verification is performed by SharePoint when add-in is uploaded. You must be signed up with Partner Center to upload add-ins. No registration with Microsoft is required.\n\nSee also"
    }
}