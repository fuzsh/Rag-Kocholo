{
    "id": "correct_subsidiary_00034_0",
    "rank": 76,
    "data": {
        "url": "https://www.slideshare.net/slideshow/enterprise-agile-transformation-strategies-13987236/13987236",
        "read_more_link": "",
        "language": "en",
        "title": "Enterprise Agile Transformation Strategies",
        "top_image": "https://cdn.slidesharecdn.com/ss_thumbnails/agile2012-agiletransformationstrategies-120816064925-phpapp02-thumbnail.jpg?width=640&height=640&fit=bounds",
        "meta_img": "https://cdn.slidesharecdn.com/ss_thumbnails/agile2012-agiletransformationstrategies-120816064925-phpapp02-thumbnail.jpg?width=640&height=640&fit=bounds",
        "images": [
            "https://public.slidesharecdn.com/images/next/logo-slideshare-scribd-company.svg?w=128&q=75 1x, https://public.slidesharecdn.com/images/next/logo-slideshare-scribd-company.svg?w=256&q=75 2x",
            "https://cdn.slidesharecdn.com/profile-photo-mcottmeyer-48x48.jpg?cb=1535574250",
            "https://image.slidesharecdn.com/agile2012-agiletransformationstrategies-120816064925-phpapp02/85/Enterprise-Agile-Transformation-Strategies-1-320.jpg 320w, https://image.slidesharecdn.com/agile2012-agiletransformationstrategies-120816064925-phpapp02/85/Enterprise-Agile-Transformation-Strategies-1-638.jpg 638w, https://image.slidesharecdn.com/agile2012-agiletransformationstrategies-120816064925-phpapp02/75/Enterprise-Agile-Transformation-Strategies-1-2048.jpg 2048w"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2012-08-16T06:49:23+00:00",
        "summary": "",
        "meta_description": "Enterprise Agile Transformation Strategies - Download as a PDF or view online for free",
        "meta_lang": "en",
        "meta_favicon": "https://public.slidesharecdn.com/_next/static/media/favicon.7bc3d920.ico",
        "meta_site_name": "SlideShare",
        "canonical_link": "https://www.slideshare.net/slideshow/enterprise-agile-transformation-strategies-13987236/13987236",
        "text": "1. Exploring Enterprise Agile Transformation Strategies Mike Cottmeyer, Enterprise Agile Coach LeadingAgile, LLC\n\n3. The Problem...\n\n4. The Problem... Having lots of agile teams in an enterprise isn’t enterprise agility • Sometimes organizations fall into the trap of thinking that having agile teams means they have an agile organization • Enterprise agility is when all the parts of the organization work together to create Agile outcomes • The entire delivery capability of the enterprise has to be focused on agile principles and execution\n\n5. The Problem... Focusing only at the team level can result in local optima within your organization • Sometimes a team can perform well at Scrum, but the business doesn’t see any incremental value from their investment • Sometimes a high-performance team can disrupt other functions in the organization if the upstream and downstream processes are not able to work at the same pace\n\n6. The Problem... Team level Agile practices are different from Agile practices at scale • The practices we put in place at the team level often don’t work when we apply them in larger organizations • Practices have to adapted at scale to accommodate more diverse groups of stakeholders and more complicated value streams\n\n7. The Problem... Agile at scale requires a broader set of tools and techniques • Scrum and XP at the team level • Kanban and Lean at the program and portfolio level • RUP and Traditional Project Management at the Enterprise\n\n8. We are just now starting to put all the pieces together...\n\n9. The Solution...\n\n10. The Solution... Part One First... we do have to get team level agile right. We are going to talk about some of the things you can do that will lead to successful team-level Agile transformations. • The fundamentals behind why Agile works • Common challenges that cause Agile to fail • What does it look like when things are really going well? • What is different about an enterprise-level Agile transformation?\n\n11. The Solution... Part Two Next we will explore a safe, pragmatic, iterative and incremental framework for transforming any sized organization... • Deﬁne the organizational competencies required at all levels of the enterprise • How to adapt agile competencies for scale • How to adapt agile competencies for cadence\n\n12. The Solution... Part Three We’ll discuss the three major areas you need to pay attention to in order to execute a safe and pragmatic enterprise Agile transformation... • Establishing an agile org structure • Introducing disciplined Agile practices • Intentionally addressing people and culture\n\n13. The Solution... Part Four Finally, as we begin to wrap-up the talk, we’ll explore a few things that will help you put all of this together... • Overview of the model end-to-end • If we have time... case studies\n\n14. The Solution... Part One How Does Agile Work and Why Does it Fail?\n\n15. What Makes Agile Work?\n\n16. What Makes Agile Work? Teams stay together and are highly engaged • Agile practices are built around cross- functional teams that have everything necessary to deliver an increment of value to the organization • Teams that stay together over time tend to be more productive than teams that are constantly forming and reforming • Empowered self-directed teams are able to own the solution and creatively solve\n\n17. What Makes Agile Work? Teams are focused on a queue of projects or product enhancements • Rather than forming teams to deliver projects, agile methods leave teams together and funnel project through teams • The project list is basically a prioritized backlog of work that a team is responsible for delivering\n\n18. What Makes Agile Work? Minimize dependencies and strive for loose coupling between teams • The more coupling we have between teams, the more difﬁcult it is to change direction when we learn something new about the emerging product • Teams that have external dependencies are not able to make and meet commitments because they don’t have everything necessary to own the commitment\n\n19. What Makes Agile Work? Fully engaged business partners • Many organizations are guilty of throwing ill- deﬁned requirements over to the delivery teams, constantly changing direction through the life of the project, and holding teams accountable for on-time delivery • Agile is geared for change, but requires close collaboration between stakeholders and teams to make real-time tradeoffs as the product is in development\n\n20. What Makes Agile Work? Attention to getting done and completing work before new work is started • Delivering an increment of working, tested, potentially shippable software on regular time intervals assures that we can measure progress against real, measurable product outcomes\n\n21. What Makes Agile Work? Technical excellence and continuous attention to product quality • The underlying health of the system is a critical success factor for running successful agile projects • Defects and technical debt impact product delivery in unpredictable ways making it nearly impossible to reliably make and meet commitments\n\n22. What Makes Agile Fail?\n\n23. What Makes Agile Fail? Agile team is a local optimization and out of alignment with the rest of the business • Pilot teams are formed and given everything they need to be successful at the expense of the rest of the delivery organization • Teams can deliver product faster than the organization can consume it • Teams starve the requirements queue because Strategy and Product Management can’t keep up\n\n24. What Makes Agile Fail? Project driven organizations or uneven investment across product lines • Very difﬁcult to keep cross-functional teams together over time because the investment mix is constantly changing • Organizations tend to want to matrix people across multiple teams at the same time\n\n25. What Makes Agile Fail? Value is either too broadly deﬁned or too narrowly deﬁned • Overly vague requirements lead the development team to ﬁll in the gaps based in their own knowledge and experience • Overly speciﬁed requirements lead to an activity based mentality rather than a value based mentality\n\n26. What Makes Agile Fail? Organizational structures and product architectures work against establishing cross functional teams • Matrix organizations and functional silos make it very challenging to create high-performing agile teams • Tightly coupled legacy architectures make it difﬁcult to organize teams around feature groups or components within the solution framework\n\n27. What Makes Agile Fail? Overly political cultures and lack of trust • Command and control leadership • Micromanagement • Disempowering language\n\n28. What Makes Agile Fail? Inability to balance capacity and demand • Invalid and inaccurate estimates • Inability to make and meet commitments • More work than the teams can possibly deliver in the timeframes expected\n\n29. What Makes Agile Fail? Looking at agile as a process overlay rather than a transformative event in your organization • Agile is just something that the developers do • Not recognizing the broad organizational change necessary to make an agile transformation sustainable\n\n30. A Well Formed Agile Organization\n\n31. A Well Formed Agile Organization Cross functional teams aligned directly to solve business problems • Products • Features • Programs • Components • Services • Business Capabilities\n\n32. A Well Formed Agile Organization Clear voice of the business and a willingness to make tradeoffs to meet time and cost constraints • Highly engaged product ownership • Willingness to deal with reality • Focus on maximizing value and reducing risk\n\n33. A Well Formed Agile Organization Individual empowerment and shared accountability for outcomes • Establish boundaries and ownership but empower within those boundaries • Teams own outcomes not activities\n\n34. A Well Formed Agile Organization Disciplined attention to technical excellence and product quality • Technical excellence stabilizes the requirements delivery function\n\n35. A Well Formed Agile Organization Predictable, accountable, able to consistently make and meet commitments • Teams have the ability to consistently do what they say they are going to do • Predictable agile teams are the foundational element of a predictable agile enterprise\n\n36. Reinventing Agile Situationally speciﬁc strategies at scale to solve these problems and maintain business agility • How do team level competencies need to be adapted to take into consideration issues of scale and the different planning horizons required in larger enterprises • How do you build the necessary organization, introduce new practices, and start shifting the culture in a way that leads to sustainable organizational change\n\n37. The Solution... Part Two Competencies, Frequency, and Scale\n\n38. Agile Competencies • Product Deﬁnition • Planning & Coordination • Delivery Practices • Continuous Improvement • Organizational Enablement\n\n39. Agile Competencies • Product Deﬁnition • Planning & Coordination • Delivery Practices • Continuous Improvement • Organizational Enablement\n\n40. Agile Competencies • Product Deﬁnition • Planning & Coordination • Delivery Practices • Continuous Improvement • Organizational Enablement\n\n41. Agile Competencies • Product Deﬁnition • Planning & Coordination • Delivery Practices • Continuous Improvement • Organizational Enablement\n\n42. Agile Competencies • Product Deﬁnition • Planning & Coordination • Delivery Practices • Continuous Improvement • Organizational Enablement\n\n43. Agile Competencies • Product Deﬁnition • Planning & Coordination • Delivery Practices • Continuous Improvement • Organizational Enablement\n\n44. Product Deﬁnition • Establish the product vision • Deﬁne the product roadmap • Decompose features • Estimate size and effort • Deﬁne acceptance criteria\n\n45. Product Deﬁnition • Establish the product vision • Deﬁne the product roadmap • Decompose features • Estimate size and effort • Deﬁne acceptance criteria\n\n46. Product Deﬁnition • Establish the product vision • Deﬁne the product roadmap • Decompose features • Estimate size and effort • Deﬁne acceptance criteria\n\n47. Product Deﬁnition • Establish the product vision • Deﬁne the product roadmap • Decompose features • Estimate size and effort • Deﬁne acceptance criteria\n\n48. Product Deﬁnition • Establish the product vision • Deﬁne the product roadmap • Decompose features • Estimate size and effort • Deﬁne acceptance criteria\n\n49. Product Deﬁnition • Establish the product vision • Deﬁne the product roadmap • Decompose features • Estimate size and effort • Deﬁne acceptance criteria\n\n50. Delivery Practices • Deﬁne the solution • Build the solution • Test the solution • Establish product quality • Deploy the solution\n\n51. Delivery Practices • Deﬁne the solution • Build the solution • Test the solution • Establish product quality • Deploy the solution\n\n52. Delivery Practices • Deﬁne the solution • Build the solution • Test the solution • Establish product quality • Deploy the solution\n\n53. Delivery Practices • Deﬁne the solution • Build the solution • Test the solution • Establish product quality • Deploy the solution\n\n54. Delivery Practices • Deﬁne the solution • Build the solution • Test the solution • Establish product quality • Deploy the solution\n\n55. Delivery Practices • Deﬁne the solution • Build the solution • Test the solution • Establish product quality • Deploy the solution\n\n56. Planning & Coordination • Establish a planning cadence • Perform activity breakdown • Establish a delivery cadence • Limit work in process • Make and meet commitments\n\n57. Planning & Coordination • Establish a planning cadence • Perform activity breakdown • Establish a delivery cadence • Limit work in process • Make and meet commitments\n\n58. Planning & Coordination • Establish a planning cadence • Perform activity breakdown • Establish a delivery cadence • Limit work in process • Make and meet commitments\n\n59. Planning & Coordination • Establish a planning cadence • Perform activity breakdown • Establish a delivery cadence • Limit work in process • Make and meet commitments\n\n60. Planning & Coordination • Establish a planning cadence • Perform activity breakdown • Establish a delivery cadence • Limit work in process • Make and meet commitments\n\n61. Planning & Coordination • Establish a planning cadence • Perform activity breakdown • Establish a delivery cadence • Limit work in process • Make and meet commitments\n\n62. Continuous Improvement • Metrics and reporting • Establish stable velocity • Conduct retrospectives • Update the backlog • Enable process improvement\n\n63. Continuous Improvement • Metrics and reporting • Establish stable velocity • Conduct retrospectives • Update the backlog • Enable process improvement\n\n64. Continuous Improvement • Metrics and reporting • Establish stable velocity • Conduct retrospectives • Update the backlog • Enable process improvement\n\n65. Continuous Improvement • Metrics and reporting • Establish stable velocity • Conduct retrospectives • Update the backlog • Enable process improvement\n\n66. Continuous Improvement • Metrics and reporting • Establish stable velocity • Conduct retrospectives • Update the backlog • Enable process improvement\n\n67. Continuous Improvement • Metrics and reporting • Establish stable velocity • Conduct retrospectives • Update the backlog • Enable process improvement\n\n68. Organizational Enablement • Establish teams • Effective communication • Effective collaboration • Empowerment • Trust\n\n69. Organizational Enablement • Establish teams • Effective communication • Effective collaboration • Empowerment • Trust\n\n70. Organizational Enablement • Establish teams • Effective communication • Effective collaboration • Empowerment • Trust\n\n71. Organizational Enablement • Establish teams • Effective communication • Effective collaboration • Empowerment • Trust\n\n72. Organizational Enablement • Establish teams • Effective communication • Effective collaboration • Empowerment • Trust\n\n73. Organizational Enablement • Establish teams • Effective communication • Effective collaboration • Empowerment • Trust\n\n74. Visualizing Improvement\n\n75. Visualizing Improvement\n\n76. Visualizing Improvement\n\n77. Competencies at Scale • Team • Multi-Team • Program • Portfolio • Enterprise\n\n78. Team Agility Scrum Team\n\n79. Multi-Team Agility Scrum Scrum Team Team\n\n80. Multi-Team Agility Scrum Scrum Scrum Team Team Team\n\n81. Multi-Team Agility Scrum Scrum Scrum Scrum Team Team Team Team\n\n82. Program Agility Product Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n83. Program Agility Product Product Team Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n84. Portfolio Agility Portfolio Team Product Product Team Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n85. Enterprise Agility Strategy Portfolio Team Team Product Product Team Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n86. Enterprise Agility Strategy Portfolio Support Team Team Team Product Product Team Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n87. Competencies in Time • Continuous • Daily • Strategic Iteration • Release Release • Strategic Iteration Daily Continuous\n\n88. Competencies in Time • Continuous • Daily • Iteration Strategic • Release Release • Strategic Iteration Daily Continuous\n\n89. Competencies in Time • Continuous • Daily • Iteration Strategic • Release Release • Strategic Iteration Daily Continuous\n\n90. Competencies in Time • Continuous • Daily • Iteration Strategic • Release Release • Strategic Iteration Daily Continuous\n\n91. Competencies in Time • Continuous • Daily • Iteration Strategic • Release Release • Strategic Iteration Daily Continuous\n\n92. Competencies in Time • Continuous • Daily • Iteration Strategic • Release Release • Strategic Iteration Daily Continuous\n\n93. The Solution... Part Three The Agile Adoption and Transformation Lifecycle\n\n94. Adoption vs. Transformation First... we want to untangle two words that sometimes can be used interchangeably • Agile Adoption is about what you do... practices, tools, techniques, ceremonies, and habits • Agile Transformation is about who you are... reﬂected in both the structure of the organization and who you are as people Long term results require both adoption and transformation to be successful\n\n95. Adoption vs. Transformation Second... we want clearly articulate the three major focus areas that must be addressed interdependently • Organizational Structure is about how you create teams and how you organize them • Agile Practice is about the methods and tools you choose to introduce • People and Culture is about changing hearts and minds of the individuals in the organization All three aspects are essential to sustain agility\n\n96. Incremental vs. Iterative Third... we want introduce the notion that introducing Agile is an iterative and incremental process for you organization • Iterative is when parts of the system are developed at different times and integrated as they are completed • Incremental is when you go back over parts of the system making improvements The strategy is to increment the organization by building teams and iterate the teams over time\n\n97. Incremental vs. Iterative Courtesy of Jeff Patton\n\n98. Incremental vs. Iterative Incremental Courtesy of Jeff Patton\n\n99. Incremental vs. Iterative Incremental Iterative Courtesy of Jeff Patton\n\n100. Adoption/Transformation Cycle Incrementing and Iterating the Agile Enterprise • Organiza(onal+ Change physical Transforma(on+ structures and introduce teams • Teach people new Personal+ Adopt++ practices and ways Transforma(on+ Prac(ces+ of working • Help people internalize the value system\n\n101. Adoption/Transformation Cycle Organizational Transformation • Establish top to Organiza(onal+ bottom structure Transforma(on+ and roadmap • Incrementally make changes and Personal+ Adopt++ establish teams Transforma(on+ Prac(ces+ • Deﬁne policies and working agreements between teams\n\n102. Adoption/Transformation Cycle Adopting Practices •Sprint planning, daily stand-ups, Organiza(onal+ product reviews, Transforma(on+ and retrospectives •Identify and train a Product Owner Personal+ Adopt++ and ScrumMaster Transforma(on+ Prac(ces+ •Teach TDD, CI, Story Maps, and MMF\n\n103. Adoption/Transformation Cycle Personal Transformation • Develop an ability Organiza(onal+ to deal with Transforma(on+ uncertainty and adaptation • Help people work Personal+ Adopt++ toward common Transforma(on+ Prac(ces+ organizational goals • Help foster empathy, trust, and teamwork\n\n104. Common Anti-Patterns • Establishing teams without breaking down the strict functional silos and rigid role deﬁnitions • Running daily standup meetings that devolve into status updates for the project manager • Coming back from CSM training only to ﬁnd that there is no way to form agile teams and no interest in agile\n\n105. Common Anti-Patterns • Establishing teams without breaking down the strict functional silos and rigid role deﬁnitions • Running daily standup meetings that devolve into status updates for the project manager • Coming back from CSM training only to ﬁnd that there is no way to form agile teams and no interest in agile\n\n106. Common Anti-Patterns • Establishing teams without breaking down the strict functional silos and rigid role deﬁnitions • Running daily standup meetings that devolve into status updates for the project manager • Coming back from CSM training only to ﬁnd that there is no way to form agile teams and no interest in agile\n\n107. Common Anti-Patterns • Establishing teams without breaking down the strict functional silos and rigid role deﬁnitions • Running daily standup meetings that devolve into status updates for the project manager • Coming back from CSM training only to ﬁnd that there is no way to form agile teams and no interest in agile\n\n108. The Solution... Part Four Exploring the Integrated Framework\n\n109. Phase I - Structure Scrum Team\n\n110. Phase I - Structure Scrum Scrum Team Team\n\n111. Phase I - Structure Product Team Scrum Scrum Team Team\n\n112. Phase 2 - Structure Product Team Scrum Scrum Scrum Team Team Team\n\n113. Phase 2 - Structure Product Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n114. Phase 2 - Structure Product Product Team Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n115. Phase 3 - Structure Portfolio Team Product Product Team Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n116. Phase 3 - Structure Strategy Portfolio Team Team Product Product Team Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n117. Phase 3 - Structure Strategy Portfolio Support Team Team Product Product Team Team Scrum Scrum Scrum Scrum Team Team Team Team\n\n118. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase I Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement OrganizationalFactors Cultural Enablement 116\n\n119. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase I Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 117\n\n120. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase I Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 118\n\n121. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase I Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 119\n\n122. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase 2 Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 120\n\n123. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase 2 Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 121\n\n124. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase 2 Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 122\n\n125. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase 3 Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 123\n\n126. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase 3 Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 124\n\n127. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase 3 Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 125\n\n128. Organizationa l Transformatio Value Delivery Personal Adopt Transformatio Practices n Phase 3 Product Planning Delivery Continuous Deﬁnition Coordination Practices Improvement Organizational Enablement 126\n\n129. Phase I - Cadence Strategic Release Iteration Daily Continuous\n\n130. Phase I - Cadence Strategic Release Iteration Daily Continuous\n\n131. Phase I - Cadence Strategic Release Iteration Daily Continuous\n\n132. Phase I - Cadence Strategic Release Iteration Daily Continuous\n\n133. Phase I - Cadence Strategic Release Iteration Daily Continuous\n\n134. Phase 2 - Cadence Strategic Release Iteration Daily Continuous\n\n135. Phase 2 - Cadence Strategic Release Iteration Daily Continuous\n\n136. Phase 2 - Cadence Strategic Release Iteration Daily Continuous\n\n137. Phase 2 - Cadence Strategic Release Iteration Daily Continuous\n\n138. Phase 3 - Cadence Strategic Release Iteration Daily Continuous\n\n140. Single Team/Single Product Sub 25 person product company and a start-up • Started with team level practices • Lots of attention early to team culture • Began engaging senior leaders on strategy and portfolio management • Currently integrating marketing, sales, and support\n\n141. Multi-Team/Single Product Sub-100 person product company. 10 years old and privately owned. • Program level ﬁrst.. established a PO team • 3 tightly integrated Scrum teams • Deﬁned the portfolio governance layer • Established the relationship between strategy and support • Modeled the overall value stream and wrapped the Scrum process in a two-tiered Kanban\n\n142. Multi-Team/Multi-Product Sub-300 person organization. 100 person development organization. 8 Scrum teams. • Big-bang team-level adoption • Teams aligned by products • Product ownership by product • Program and portfolio level views established • Limiting projects in progress • Solid release planning • Integration with upstream and downstream\n\n143. Multi-Team/Multi-Product Large multi-national organization. Scope is a 500 person development organization with 55 Scrum teams. • Started with a basic view of the portfolio layer • Portfolio level value stream mapping, RACI • Built out the program management layer with PO teams to develop a requirements management capability • Program level value stream mapping, RACI, introduced agile tooling • Introduced Scrum at the team level\n\n144. Products of Products Large multi-national company. Geographically dispersed. Products of products. • Scrum teams by product/component • Product Owner teams established • Portfolio level governance model • Lean/TOC planning model • Integration with a traditional PMO for metrics and reporting\n\n145. Guitar Mummies Source: http://www2.gibson.com/news-lifestyle/features/en-us/219-gibson-custom.aspx"
    }
}