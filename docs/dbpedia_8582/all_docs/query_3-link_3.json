{
    "id": "dbpedia_8582_3",
    "rank": 3,
    "data": {
        "url": "https://stackoverflow.com/questions/78060417/what-is-the-difference-between-com-objects-and-nuget-packages",
        "read_more_link": "",
        "language": "en",
        "title": "What is the difference between COM objects and NuGet packages?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/AuU6E.png?s=64",
            "https://lh3.googleusercontent.com/a/AItbvmkpx3oG-M5f2JdDlwHG_rG8PIsHxmVuuQCapOmW=k-s64",
            "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/AuU6E.png?s=64",
            "https://lh3.googleusercontent.com/a/ACg8ocJQRWhzVZNaCicIxeBfrmqJqzd2vCJs7_JGRywYRJfPRbE=k-s64",
            "https://stackoverflow.com/posts/78060417/ivc/3e78?prg=8ae471c0-5ea2-40c5-8387-8085c0143d44"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-02-26T11:00:23",
        "summary": "",
        "meta_description": "In some study project I have the task to add a reference to system com object, and I know it is a dynamic library, but I absolutely don't understand what the difference between COM objects and NuGet",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/78060417/what-is-the-difference-between-com-objects-and-nuget-packages",
        "text": "COM is a decades-old component technology, originally (IIRC) created by Microsoft. It predates .NET and was originally intended to enable programmers to reuse libraries or extend existing applications. COM components were typically dll files, and were often written in C++ or Visual Basic.\n\nThe protocol was binary, and you had to 'register' the component (in the Windows registry, IIRC). Registration was machine-wide and done by identifier, which meant that you could only have one version of a COM component installed on a machine.\n\nFrom a .NET developer's perspective, I'd consider it a legacy technology.\n\nNuGet, on the other hand, is a package management system. In .NET, you can create reusable libraries (also dll files). While it's possible to register a .NET library as a COM component (by implementing some special interfaces or something - I honestly no longer remember how one worked with it), you can also just copy the dll file to the folder where your .NET application runs, and it becomes available to that process.\n\nThis means that you can have many versions of the same .NET library on the same machine. Application A uses version 1.1 of a library, while application B uses version 3.2.\n\nIn the first years of .NET, you'd typically download reusable libraries as Zip files, unpack them, and copy them around as necessary.\n\nThis did solve the 'dll hell' problem of COM, but was tedious and somewhat error-prone for other reasons. Thus, like in other languages, a package manager system emerged. This is called NuGet, and is similar to package managers for other languages/platforms.\n\nNuGet is a way to distribute and manage reusable libraries, most of which are .NET dlls."
    }
}