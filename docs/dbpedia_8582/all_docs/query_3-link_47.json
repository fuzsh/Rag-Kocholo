{
    "id": "dbpedia_8582_3",
    "rank": 47,
    "data": {
        "url": "https://docs.developers.optimizely.com/content-management-system/docs/technology-stack",
        "read_more_link": "",
        "language": "en",
        "title": "Technology stack",
        "top_image": "https://files.readme.io/2916738-small-Optimizely_Logo_FullColor_Dark_Digital.png",
        "meta_img": "https://files.readme.io/2916738-small-Optimizely_Logo_FullColor_Dark_Digital.png",
        "images": [
            "https://files.readme.io/f20ff2a-Optimizely_Symbol_Mono_Light_1.svg",
            "https://files.readme.io/f20ff2a-Optimizely_Symbol_Mono_Light_1.svg",
            "https://files.readme.io/2dafc4b-imagesmb6c.png",
            "https://files.readme.io/11fc0ea-imagetsqvn.png",
            "https://files.readme.io/438c85c-imageth4ex.png",
            "https://files.readme.io/efa7627-techstack2.png",
            "https://files.readme.io/8ed7967-techstack3.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Describes the technology on which Optimizely Content Management System (CMS) is built.",
        "meta_lang": "en",
        "meta_favicon": "https://files.readme.io/3e49f6c-small-Optimizely_Symbol_FullColor.png",
        "meta_site_name": "Content Management System",
        "canonical_link": "https://docs.developers.optimizely.com/content-management-system/docs/technology-stack",
        "text": "Optimizely Content Management System (CMS) is based on Microsoft technology and uses ASP.NET Core as a web development platform. Optimizely uses the SQL Server relational database. On top of that, Optimizely has a framework API used by products in the Optimizely platform.\n\nThe .NET framework\n\nOptimizely is based on the ASP.NET Core, providing the following advantages:\n\nEasier for developers to implement solutions using rich IDEs like Visual Studio or Visual Studio Code.\n\nHigh performant platform\n\nAn open and agnostic tool that can be used with any JavaScript framework and API you want.\n\nCross-platform means developing and hosting applications on many platforms, such as Windows and Linux.\n\nIn Optimizely, the .NET API is implemented following Microsoft guidelines. Because .NET is a language-independent architecture, developers have a wide choice of development methods for their solutions. Optimizely CMS is written in C#, but developers can use other programming languages such as VB.NET or F#. Optimizely CMS development in .NET is fully object-oriented. See the Microsoft .NET documentation.\n\nFrom CMS 12, the platform is built on ASP.NET Core.\n\nOptimizely ASP.NET Core information hub\n\nOptimizely ASP.NET Core Add-ons\n\nOverview of upgrading to ASP.NET Core\n\nWhy upgrade to Content Cloud (CMS) 12?\n\nUpgrade Assistant\n\nBreaking changes in Content Cloud (CMS) 12\n\nAbout .NET\n\nConfusion around ASP.NET Core and ASP.NET\n\nBefore version 12, CMS was built on ASP.NET 4 (based on .NET Framework). Years ago, Microsoft announced that ASP.NET 4 would be replaced by ASP.NET 5, which would have a different framework.\n\nLater, Microsoft announced another platform, ASP.NET Core, and that they would continue with ASP.NET 4. ASP.NET 5 was said to be dead. ASP.NET 4 and ASP.NET Core were supposed to be equally good and would work together in parallel.\n\nBut it turned out that people wanted to have things from ASP.NET4 and ASP.NET Core, so to solve that, Microsoft introduced a third platform, ASP.NET Standard, a smaller sub-set of things from ASP.NET 4 and ASP.NET Core.\n\nASP.NET 5 is the next version of ASP.NET Core, and again ASP.NET 4 is \"dead in the water.\" The last improvements to .NET Framework were released with .NET 4.8.\n\nSystem overview\n\nThe base CMS Framework provides built-in editorial and administrative functions like version management, content preview, approval workflows, multi-language support, and access rights. Data is stored in an SQL database. The customized solution is built on top of this platform. Optimizely can run as an on-premises installation or in the cloud. See System requirements for Optimizely.\n\nCustomized solution\n\nA customized solution typically contains these parts:\n\nGraphical profile for the site as style sheets (CSS format). These include predefined colors and fonts used on the site.\n\nResponsive design is often applied to support multi-channel displays.\n\nFunctions to support content creation, for example, specific pages or block types.\n\nSystems integrations as required for the site, for example, connection to an article database.\n\nAccess rights are configured for users and user groups to control content structure and publishing access. It may involve integration with external membership providers.\n\nContent is created by editors and stored in the database.\n\nAssets such as images and documents used on the site.\n\nDatabase\n\nOptimizely uses Microsoft SQL Server to store content and other information created in the system. Database editions, including SQL Azure, are supported. A database with the Optimizely schema is automatically created when creating sites from the Visual Studio integration. Each version of the database schema targets a specific version of Optimizely.\n\nWeb server\n\nOn-premises Optimizely sites in production typically use Microsoft Internet Information Services (IIS), a flexible, general-purpose web server that runs on Windows operating systems to serve requested HTML pages or files. When developing locally, you can use Kestrel or IIS Express, included with Visual Studio, and then move to the full IIS when it is ready to go live. See Deployment.\n\nDevelopment environment\n\nOptimizely solutions are conveniently developed using SQL Server and Visual Studio or Visual Studio Code from Microsoft. Optimizely also provides a set of dotnet templates to speed up website development.\n\nCMS supports building templates using server-side-rendered templates such as MVC and Razor Pages and using a client-side framework.\n\nDeveloping for the cloud\n\nAn Optimizely solution can be hosted in the cloud or on-premises. Cloud-based solutions are a cost-efficient way to manage websites, as these will dynamically scale out and in again depending on traffic volume. The cost is based on usage and number of running instances. You can manage your cloud-based solutions yourself or use Optimizely Digital Experience Platform (DXP)."
    }
}