{
    "id": "dbpedia_8582_0",
    "rank": 95,
    "data": {
        "url": "https://ozeki-sms-gateway.com/p_3194-sms-nuget-library-for-c-sharp.html",
        "read_more_link": "",
        "language": "en",
        "title": "SMS nuget library for C#",
        "top_image": "https://ozeki-sms-gateway.com/attachments/3194/how-to-install-a-nuget-package-step-three.png",
        "meta_img": "https://ozeki-sms-gateway.com/attachments/3194/how-to-install-a-nuget-package-step-three.png",
        "images": [
            "https://ozeki-sms-gateway.com/attachments/1/ozeki_logo_60x60px.png",
            "https://ozeki-sms-gateway.com/attachments/2010/Home2.svg",
            "https://ozeki-sms-gateway.com/attachments/1/icon-learn.png",
            "https://ozeki-sms-gateway.com/attachments/1/icon-download.png",
            "https://ozeki-sms-gateway.com/attachments/1/icon-manual.png",
            "https://ozeki-sms-gateway.com/attachments/1/icon-buy.png",
            "https://ozeki-sms-gateway.com/attachments/1/icon-contact.png",
            "https://ozeki-sms-gateway.com/attachments/1/signin.png",
            "https://ozeki-sms-gateway.com/attachments/3194/how-to-install-a-nuget-package-step-one.png",
            "https://ozeki-sms-gateway.com/attachments/3194/how-to-install-a-nuget-package-step-two.png",
            "https://ozeki-sms-gateway.com/attachments/3194/how-to-install-a-nuget-package-step-three.png",
            "https://ozeki-sms-gateway.com/attachments/3194/the-installed-and-imported-nuget-package.png",
            "https://ozeki-sms-gateway.com/attachments/3194/the-output-of-the-send-sms-cs-code.png",
            "https://ozeki-sms-gateway.com/attachments/3194/the-send-sms-in-the-ozeki-sms-gateway.png",
            "https://myozeki.com/index.php?srv=sms&api=qrgen&t=https%3A%2F%2Fozeki-sms-gateway.com%2Fp_3194-sms-nuget-library-for-c-sharp.html"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Nuget is the package manager of the",
        "meta_lang": "en",
        "meta_favicon": "https://ozeki-sms-gateway.com/attachments/1/ozeki-logo.png",
        "meta_site_name": "Ozeki SMS Gateway",
        "canonical_link": "https://ozeki-sms-gateway.com/p_3194-sms-nuget-library-for-c-sharp.html",
        "text": "How to use the Ozeki Rest SMS Api Nuget Package\n\nNuget is the package manager of the .NET framework. You can use a Nuget package in any .NET based application. If you are using Visual Studio 2019 you are able to install a Nuget pakcage with a few clicks. In the following videos I'll show you how to create a C# console application, and how to use the Ozeki.Libs.Rest nuget package in that console application written in C#.\n\nCreate a new C# console application in Visual Studio\n\nInstall the Ozeki.Libs.Rest NuGet package\n\nImport the previously installed NuGet package with using Ozeki.Libs.Rest;\n\nCreate a new Configuration, Message and a MessageApi object using the Ozeki.Libs.Rest pakcage\n\nUsing the MessageApi object send the previously created message\n\nWhat is NuGet?\n\nNuGet is the official package-manager for NET, mad by Microsoft.\n\nStep 1 - How to create a new C# console application\n\nYour browser does not support the video tag.\n\nStep 2 - How to install the Ozeki.Libs.Rest NuGet package\n\nTo install a NuGet package in Visual Studio you need to right click onto the icon of the project, then select the Manage NuGet Packages from the dropdown menu. After that you have to search for the package you want to install, in this case it is the Ozeki.Libs.Rest package. When you have found the Ozeki.Libs.Rest package you have to install it by clicking on the Install button. When it is installed, you are able to import and use the package in your project.\n\nYour browser does not support the video tag.\n\nManage NuGet Packages\n\nTo reach the menu where you can manage your NuGet Packages, right-click the project title in the Solution Explorer. It will bring up a sub-menu where you can find the 'Manage NuGet Packages...' button (Figure 1). Click it to open the NuGet package installer.\n\nInstall the Ozeki.Libs.Rest package\n\nType in the following text in the search bar of the NuGet Packet manager: 'Ozeki.Libs.Rest'. The search engine will show the one package you need. Choose it by clicking. As you can see on Figure 2, on the right side of the panel, you will find an 'Install' button. Click it and it will start the installation process.\n\nThe installed package\n\nNow the previously empty 'installed' packages list, contains a package. It is the installed Ozeki.Libs.Rest. Now you can start using it. If you would like to install more packages to Visual Studio Code, repeat the process, but search for other packages.\n\nStep 3 - How to use the Ozeki.Libs.Rest package in your C# application\n\nIn order to use the contents of the Ozeki.Libs.Rest package, you need to import it by using the following line of code:\n\nusing Ozeki.Libs.Rest;\n\nCreating a program that uses that Ozeki.Libs.Rest\n\nIn this video, we are going to show you how to use the Ozeki.Libs.Rest NuGet package in a C# application. The video will start with an empty code editor, and you will see the working SMS sending application at the end of the video. You will learn how to write a code that uses the Ozeki.Libs.Rest to send SMS messages through the Ozeki SMS Gateway. The video is very detailed, you can see all the lines of code you need to provide in order to have a working system. It takes only 1:46 to watch the video, but you will understand the process by the end of it.\n\nYour browser does not support the video tag.\n\nThe source code of the project\n\nOn Figure 4, you can see the source code of the project. As you can see, the 'username' and the 'password' variables contain the login credentials for the HTTP user. The 'Toaddress' and the 'Text' variables contain the address and the text of the message. If you are familiar with the C# programming language, feel free to change the values of the variable to send a customized message.\n\nThe output of the program\n\nIf you run your program, you will see the result of it in the 'Debug Console'. You will see the text 'Success' and some information about the message after. It means that the message sending was successful. Press and key to close the debug console.\n\nCheck the sent folder\n\nAfter you have done the process, you can check the Sent folder in Ozeki SMS Gateway (Figure 6). There you will see your test message, with any other message sent before. You can find out more information about any message by clicking them.\n\nSummary\n\nThis article explained how to use the Ozeki Rest SMS Api Nuget Package. This innovation can be really helpful if you want to send text messages from C#.\n\nThe synergy between C# codes and Ozeki SMS Gateway ensures that you get the highest possible performance. The Ozeki SMS Gateway offers excellent logging capabilities, which means you can track down errors quickly and reduce downtime.\n\nMake sure that you don't finish reading here, visit Ozeki's tutorial page where more information can be found about topics like SMS sending and receiving in C#. Now the only thing to do is to download Ozeki SMS Gateway and let the work begin!\n\nMore information"
    }
}