{
    "id": "dbpedia_8582_3",
    "rank": 49,
    "data": {
        "url": "https://www.codeproject.com/Articles/193262/A-Tough-Nugget-NuGet-Package-Manager",
        "read_more_link": "",
        "language": "en",
        "title": "A Tough Nugget – NuGet Package Manager",
        "top_image": "https://www.codeproject.com/favicon/favicon-32x32.png",
        "meta_img": "https://www.codeproject.com/favicon/favicon-32x32.png",
        "images": [
            "https://codeproject.freetls.fastly.net/images/t.gif",
            "https://www.codeproject.com/script/Membership/Images/octicons_github-lg.png",
            "https://www.codeproject.com/script/Membership/Images/facebook-lg.png",
            "https://www.codeproject.com/script/Membership/Images/google-plus-lg.png",
            "https://www.codeproject.com/script/Membership/Images/microsoft-lg.png",
            "https://codeproject.freetls.fastly.net/App_Themes/CodeProject/Img/logo250x135.gif",
            "https://pubads.g.doubleclick.net/gampad/jump?iu=/6839/lqm.codeproject.site/Programming-LanguagesXML&sz=728x90&c=345059",
            "https://codeproject.freetls.fastly.net/images/write13.png",
            "https://codeproject.freetls.fastly.net/images/write13.png",
            "https://codeproject.freetls.fastly.net/images/write13.png",
            "https://codeproject.freetls.fastly.net/images/write13.png",
            "https://codeproject.freetls.fastly.net/images/write13.png",
            "https://www.codeproject.com/App_Themes/CodeProject/Img/print48.png",
            "https://www.codeproject.com/Uploads/Membership/ProfileImages/{162f07b1-939f-4ebd-8059-ce9e9d4c05cb}.jpg",
            "https://codeproject.freetls.fastly.net/script/Ratings/Images/star-fill-lg.png",
            "https://codeproject.freetls.fastly.net/script/Ratings/Images/star-fill-lg.png",
            "https://codeproject.freetls.fastly.net/script/Ratings/Images/star-fill-lg.png",
            "https://codeproject.freetls.fastly.net/script/Ratings/Images/star-fill-lg.png",
            "https://codeproject.freetls.fastly.net/script/Ratings/Images/star-fill-lg.png",
            "https://codeproject.freetls.fastly.net/App_Themes/CodeProject/Img/views32.png",
            "https://codeproject.freetls.fastly.net/App_Themes/CodeProject/Img/bookmarks32.png",
            "https://www.codeproject.com/KB/Blogs/193262/nuget_thumb_5334713D.png",
            "https://www.codeproject.com/KB/Blogs/193262/NuGet-in-Extension-Manager_thumb_77692FF2.png",
            "https://www.codeproject.com/KB/Blogs/193262/The-Package-Manager-Console_thumb_5ADC1845.png",
            "https://www.codeproject.com/KB/Blogs/193262/Using-PowerShell-Commands_thumb_3AB0E5BB.png",
            "https://www.codeproject.com/KB/Blogs/193262/Add-Library-Package-Reference_thumb_62B36F0D.png",
            "https://www.codeproject.com/KB/Blogs/193262/Add-Library-Package-Reference-Dialog_thumb_6C883AAB.png",
            "https://www.codeproject.com/Uploads/Membership/ProfileImages/{162f07b1-939f-4ebd-8059-ce9e9d4c05cb}.jpg",
            "https://www.codeproject.com/script/Geo/Images/IL.gif",
            "https://www.codeproject.com/images/twitter-x-48.png",
            "https://www.codeproject.com/images/linkedin-32.png",
            "https://pubads.g.doubleclick.net/gampad/jump?iu=/6839/lqm.codeproject.site/Programming-LanguagesXML&sz=728x90&c=345059",
            "https://pubads.g.doubleclick.net/gampad/jump?iu=/6839/lqm.codeproject.site/Programming-LanguagesXML&sz=300x250&c=345059",
            "https://pubads.g.doubleclick.net/gampad/jump?iu=/6839/lqm.codeproject.site/Programming-LanguagesXML&sz=160x600&c=345059"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Gil Fink"
        ],
        "publish_date": "2011-05-09T00:00:00",
        "summary": "",
        "meta_description": "The NuGet Package Manager helps to manage the Open Source component packages and their dependencies and by that decrease the amount of cumbersome work that the developer will need to do.",
        "meta_lang": "en",
        "meta_favicon": "/favicon/apple-touch-icon.png",
        "meta_site_name": "CodeProject",
        "canonical_link": "https://www.codeproject.com/Articles/193262/A-Tough-Nugget-NuGet-Package-Manager",
        "text": "Introduction\n\nOnce upon a time, when a .NET developer wanted to install a third-party/Open Source component, the amount of work he had to do was enormous. Things like downloading the component with all its dependencies, installing the latest component version, saving the component into source control, deploying the component with the application and more made this mission very hard and cumbersome. In other platforms such as Java and Ruby, there were solutions for this problem which wrapped components into packages and deployed those packages. NuGet is an Open Source package manager that is integrated into Visual Studio 2010 and helps to do exactly that. If you are a .NET developer and you haven’t heard about NuGet, then I hope that this post will help you to get started with it.\n\nWhat We Strive?\n\nThese days, building large applications includes a lot of parts/components or third party packages. For example, when you start writing a web application, you’ll probably want to integrate jQuery, Modernizr, and other components that will help you to build a better application. When you want to add an assembly, you also want to add all the dependencies that it includes. Without the dependencies (such as configuration files, images, and etc.) the component won’t work at all. But there you start to hit a wall. How to download the latest component version? How to get all the dependencies? How to manage the whole thing? Not doing a good job in these issues can lead to a messy application that holds out of date dependencies that break it apart. This is why NuGet is so important.\n\nNuGet Package Manager\n\nNuGet is a package manager that is integrated into Visual Studio 2010. It is an Open Source project that can be downloaded from CodePlex but it can be added to Visual Studio also through the Extension Manager, as you can see in the next figure:\n\nWhen you install NuGet, you will have the ability to use it in two main ways:\n\nThe Package Manager Console – use a PowerShell console with commands that help to do the package management.\n\nThe Add Library Package Reference sialog – use a VS dialog in order to manage the packages.\n\nThe Package Manager Console\n\nFrom the two option management options, this is my preferred one. The Package Manager Console is a PowerShell console that helps to manage the packages that you install into your application.\n\nIf you can’t see the console after the NuGet installation, you can go to the Tools menu in VS –> Library Package Manager –> Package Manager Console in order to open it. There are a few PowerShell commands in NuGet that you will have to know, such as:\n\nGet-Package – Gets the set of packages available from the package source. The default source is the current project. If you like to get a package that doesn’t exist in your project then use the following syntax:\n\ntetx\n\nGet-Package [package-name] -ListAvailable\n\nInstall-Package – install a package and all its dependencies.\n\nUpdate-Package – updates a package and its dependencies to the latest package version.\n\nUninstall-Package – uninstall a package that you installed in your solution.\n\nThere are other commands as well such as Add-BindingRedirect but the main ones were written previously. Here is an example that shows how to get the available packages in the solution and how to install the Modernizr package:\n\nYou can explore the commands and their syntax using the PowerShell Get-Help command. After you install the packages, NuGet will add a packages.config file into your project that will include the details of the package name and version that are available in the project. Here is an example of such a file:\n\n=\"1.0\"=\"utf-8\" <packages> <packageid=\"Modernizr\"version=\"1.7\"/> <packageid=\"jQuery\"version=\"1.6\"/> </packages>\n\nAlso it will do all the relevant integration for you. For example, adding a Scripts directory in your application and adding the full and minimized version when you install Modernizr. Another thing that can help a lot is the ability to build PowerShell script files that manage automatic installation of packages. Then, you can add the solution to source control with those files and when other developers get the latest version, they can run the script and get all the packages and their dependencies.\n\nThe Add Library Package Reference Dialog\n\nThis is a graphic dialog for doing the same thing like in the Package Manager Console. When you install NuGet, it adds a new menu item into the menu item of the project. You can point the project name, press the right mouse button, and select the “Add Library Package Reference” to invoke NuGet's package management dialog:\n\nIn the dialog, you can see the installed packages, get packages from the online packages gallery, update the packages to their latest version, and more.\n\nSummary\n\nNuGet is a great extension to Visual Studio’s stack of extensions. It helps to manage the Open Source component packages and their dependencies and by that decrease the amount of cumbersome work that the developer will need to do. One of its better qualities is that it is so simple and easy to use. If you ask me, this is a must know tool for .NET developers."
    }
}