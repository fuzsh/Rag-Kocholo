{
    "id": "dbpedia_109_1",
    "rank": 80,
    "data": {
        "url": "https://httpd.apache.org/docs/trunk/es/mod/core.html",
        "read_more_link": "",
        "language": "en",
        "title": "Servidor HTTP Apache VersiÃ³n 2.5",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://httpd.apache.org/docs/trunk/es/images/feather.png",
            "https://httpd.apache.org/docs/trunk/es/images/left.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/down.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif",
            "https://httpd.apache.org/docs/trunk/es/images/up.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "es",
        "meta_favicon": "../images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Funcionalidad BÃ¡sica de Apache\n\nIdiomas disponibles: de | en | es | fr | ja | tr\n\nDescripciÃ³n:Funcionalides bÃ¡sicas del Servidor HTTP Apache que siempre estÃ¡n presentes. Estado:Core\n\nDirectiva AcceptFilter ¶\n\nDescripciÃ³n:Configura mejoras para un Protocolo de Escucha de Sockets Sintaxis:AcceptFilter protocol accept_filter Contexto:server config Estado:Core MÃ³dulo:core\n\nEsta directiva hace posible mejoras especÃ­ficas a nivel de sistema operativo y a travÃ©s del tipo de Protocolo para un socket que escucha. La premisa bÃ¡sica es que el kernel no envÃ­e un socket al servidor hasta que o bien los datos se hayan recibido o bien se haya almacenado en el buffer una Respuesta HTTP completa. Actualmente sÃ³lo estÃ¡n soportados Accept Filters sobre FreeBSD, TCP_DEFER_ACCEPT sobre Linux, y AcceptEx() sobre Windows.\n\nEl uso de none para un argumento desactiva cualquier filtro aceptado para ese protocolo. Esto es Ãºtil para protocolos que requieren que un servidor envÃ­e datos primeros, tales como ftp: o nntp:\n\nAcceptFilter nntp none\n\nLos nombres de protocolo por defecto son https para el puerto 443 y http para todos los demÃ¡s puertos. Para especificar que se estÃ¡ utilizando otro protocolo con un puerto a la escucha, aÃ±ade el argumento protocol a la directiva Listen.\n\nLos valores por defecto de FreeBDS son:\n\nAcceptFilter http httpready AcceptFilter https dataready\n\nEl filtro httpready almacena en el buffer peticiones HTTP completas a nivel de kernel. Una vez que la peticiÃ³n es recibida, el kernel la envÃ­a al servidor. Consulta la pÃ¡gina man de accf_http(9) para mÃ¡s detalles. Puesto que las peticiones HTTPS estÃ¡n encriptadas, sÃ³lo se utiliza el filtro accf_data(9).\n\nLos valores por defecto en Linux son:\n\nAcceptFilter http data AcceptFilter https data\n\nEn Linux, TCP_DEFER_ACCEPT no soporta el buffering en peticiones http. Cualquier valor ademÃ¡s de none habilitarÃ¡ TCP_DEFER_ACCEPT en ese socket. Para mÃ¡s detalles ver la pÃ¡gina man de Linux tcp(7).\n\nLos valores por defecto en Windows son:\n\nAcceptFilter http data AcceptFilter https data\n\nSobre Windows mpm_winnt interpreta el argumento AcceptFilter para conmutar la API AcceptEx(), y no soporta el buffering sobre el protocolo http. Hay dos valores que utilizan la API Windows AcceptEx() y que recuperan sockets de red entre conexiones. data espera hasta que los datos han sido transmitidos como se comentaba anteriormente, y el buffer inicial de datos y las direcciones de red son recuperadas a partir de una Ãºnica llamada AcceptEx(). connect utiliza la API AcceptEx() API, y recupera tambiÃ©n las direcciones de red, pero a diferencia de none la opciÃ³n connect no espera a la transmisiÃ³n inicial de los datos.\n\nSobre Windows, none usa accept() antes que AcceptEx() y no recuperarÃ¡ sockets entre las conexiones. Lo que es Ãºtil para los adaptadores de red con un soporte precario de drivers, asÃ­ como para algunos proveedores de red tales como drivers vpn, o filtros de spam, de virus o de spyware.\n\nConsulte tambiÃ©n\n\nProtocol\n\nDirectiva AcceptPathInfo ¶\n\nDescripciÃ³n:Los recursos aceptan informaciÃ³n sobre su ruta Sintaxis:AcceptPathInfo On|Off|Default Valor por defecto:AcceptPathInfo Default Contexto:server config, virtual host, directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core\n\nEsta directiva controla si las peticiones que contienen informaciÃ³n sobre la ruta que sigue un fichero que existe (o un fichero que no existe pero en un directorio que sÃ­ existe) serÃ¡n aceptadas o denegadas. La informaciÃ³n de ruta puede estar disponible para los scripts en la variable de entorno PATH_INFO.\n\nPor ejemplo, asumamos que la ubicaciÃ³n /test/ apunta a un directorio que contiene Ãºnicamente el fichero here.html. Entonces, las peticiones tanto para /test/here.html/more como para /test/nothere.html/more recogen /more como PATH_INFO.\n\nLos tres posibles argumentos para la directiva AcceptPathInfo son los siguientes:\n\nOff\n\nUna peticiÃ³n sÃ³lo serÃ¡ aceptada si se corresponde con una ruta literal que existe. Por lo tanto, una peticiÃ³n con una informaciÃ³n de ruta despuÃ©s del nombre de fichero tal como /test/here.html/more en el ejemplo anterior devolverÃ¡ un error 404 NOT FOUND.\n\nOn\n\nUna peticiÃ³n serÃ¡ aceptada si una ruta principal de acceso se corresponde con un fichero que existe. El ejemplo anterior /test/here.html/more serÃ¡ aceptado si /test/here.html corresponde a un fichero vÃ¡lido.\n\nDefault\n\nLa gestiÃ³n de las peticiones con informaciÃ³n de ruta estÃ¡ determinada por el controlador responsable de la peticiÃ³n. El controlador principal para para ficheros normales rechaza por defecto peticiones PATH_INFO. Los controladores que sirven scripts, tales como cgi-script e isapi-handler, normalmente aceptan PATH_INFO por defecto.\n\nEl objetivo principal de la directiva AcceptPathInfo es permitirnos sobrescribir la opciÃ³n del controlador de aceptar o rechazar PATH_INFO. Este tipo de reescritura se necesita, por ejemplo, cuando utilizas un filtro, tal como INCLUDES, para generar contenido basado en PATH_INFO. El controlador principal normalmente rechazarÃ­a la peticiÃ³n, de modo que puedes utilizar la siguiente configuraciÃ³n para habilitarla como script:\n\n<Files \"mypaths.shtml\"> Options +Includes SetOutputFilter INCLUDES AcceptPathInfo On </Files>\n\nDirectiva AccessFileName ¶\n\nDescripciÃ³n:Nombre del fichero distribuido de configuraciÃ³n Sintaxis:AccessFileName filename [filename] ... Valor por defecto:AccessFileName .htaccess Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nMientras que procesa una peticiÃ³n el servidor busca el primer fichero de configuraciÃ³n existente dentro de un listado de nombres en cada directorio de la ruta del documento, si los ficheros distribuidos de configuraciÃ³n estÃ¡n habilitados para ese directorio. Por ejemplo:\n\nAccessFileName .acl\n\nAntes de servir el documento /usr/local/web/index.html, el servidor leerÃ¡ /.acl, /usr/.acl, /usr/local/.acl y /usr/local/web/.acl para las directivas, salvo que estÃ©n deshabilitadas con:\n\n<Directory \"/\"> AllowOverride None </Directory>\n\nConsulte tambiÃ©n\n\nAllowOverride\n\nFicheros de configuraciÃ³n\n\nFichero .htaccess\n\nDirectiva AddDefaultCharset ¶\n\nDescripciÃ³n:Juego de casrÃ¡cteres que se le aÃ±ade por defecto a una respuesta del tipo contenido \"content-type\" es text/plain o text/html Sintaxis:AddDefaultCharset On|Off|charset Valor por defecto:AddDefaultCharset Off Contexto:server config, virtual host, directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core\n\nEsta directiva especifica un valor por defecto para el tipo de soporte que se usa como parÃ¡metro del juego de carÃ¡cteres (el nombre de una codificaciÃ³n de carÃ¡cteres) para ser aÃ±adido a una respuesta si y solo si el contenido de \"content-type\" es o text/plain o text/html. Esto deberÃ­a sobreescribir cualquier juego de caracteres que se le especifique en el cuerpo de la respuesta mediante un elemento META, aunque el comportamiento exacto depende a menudo de la confuguracion del usuario cliente. Una configuraciÃ³n de AddDefaultCharset Off deshabilita esta funcionalidad. AddDefaultCharset On habilita un conjunto de caracteres por defecto de iso-8859-1. Cualquier otro valor se asume que sea el charset que va a ser usado, que debe ser uno de los juegos de carÃ¡cteres registradas por el IANA para su uso en los tipos de medios de Internet (MIME types). Por ejemplo:\n\nAddDefaultCharset utf-8\n\nAddDefaultCharset deberÃ­a ser utilizada sÃ³lo cuando se sepa que todo el texto del recurso al que se le aplica se sabe que va a estar en ese juego de caracteres y es inconveniente etiquetar los documentos individualmente. Un ejemplo de ello es aÃ±adir el juego de caracteres a recursos con contenido autogenerado, tales como scripts legados de CGI, que pueden ser vulnerables a ataques de tipo XSS (Cross-Site Scripting), debido a datos que incluye el usuario en la salida. Notese, sin embargo una mejor soluciÃ³n es arreglar (o eliminar) dichos scripts, ya que dejar por defecto un juego de carÃ¡cteres no protege a los usuarios que han habilitado la funcionalidad \"auto-detect character encoding\" en sus navegadores.\n\nConsulte tambiÃ©n\n\nAddCharset\n\nDirectiva AllowEncodedSlashes ¶\n\nDescripciÃ³n:Determina si Determines whether encoded path separators in URLs are allowed to be passed through Sintaxis:AllowEncodedSlashes On|Off Valor por defecto:AllowEncodedSlashes Off Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache httpd 2.0.46 and later\n\nThe AllowEncodedSlashes directive allows URLs which contain encoded path separators (%2F for / and additionally %5C for \\ on according systems) to be used. Normally such URLs are refused with a 404 (Not found) error.\n\nTurning AllowEncodedSlashes On is mostly useful when used in conjunction with PATH_INFO.\n\nNote\n\nAllowing encoded slashes does not imply decoding. Occurrences of %2F or %5C (only on according systems) will be left as such in the otherwise decoded URL string.\n\nConsulte tambiÃ©n\n\nAcceptPathInfo\n\nDirectiva AllowOverride ¶\n\nDescripciÃ³n:Types of directives that are allowed in .htaccess files Sintaxis:AllowOverride All|None|directive-type [directive-type] ... Valor por defecto:AllowOverride None (2.3.9 and later), AllowOverride All (2.3.8 and earlier) Contexto:directory Estado:Core MÃ³dulo:core\n\nWhen the server finds an .htaccess file (as specified by AccessFileName) it needs to know which directives declared in that file can override earlier configuration directives.\n\nOnly available in <Directory> sections\n\nAllowOverride is valid only in <Directory> sections specified without regular expressions, not in <Location>, <DirectoryMatch> or <Files> sections.\n\nWhen this directive is set to None, then .htaccess files are completely ignored. In this case, the server will not even attempt to read .htaccess files in the filesystem.\n\nWhen this directive is set to All, then any directive which has the .htaccess Context is allowed in .htaccess files.\n\nThe directive-type can be one of the following groupings of directives.\n\nAuthConfig\n\nAllow use of the authorization directives (AuthDBMGroupFile, AuthDBMUserFile, AuthGroupFile, AuthName, AuthType, AuthUserFile, Require, etc.).\n\nFileInfo\n\nAllow use of the directives controlling document types (ErrorDocument, ForceType, LanguagePriority, SetHandler, SetInputFilter, SetOutputFilter, and mod_mime Add* and Remove* directives), document meta data (Header, RequestHeader, SetEnvIf, SetEnvIfNoCase, BrowserMatch, CookieExpires, CookieDomain, CookieStyle, CookieTracking, CookieName), mod_rewrite directives RewriteEngine, RewriteOptions, RewriteBase, RewriteCond, RewriteRule) and Action from mod_actions.\n\nIndexes\n\nAllow use of the directives controlling directory indexing (AddDescription, AddIcon, AddIconByEncoding, AddIconByType, DefaultIcon, DirectoryIndex, FancyIndexing, HeaderName, IndexIgnore, IndexOptions, ReadmeName, etc.).\n\nLimit\n\nAllow use of the directives controlling host access (Allow, Deny and Order).\n\nOptions[=Option,...]\n\nAllow use of the directives controlling specific directory features (Options and XBitHack). An equal sign may be given followed by a comma (but no spaces) separated lists of options that may be set using the Options command.\n\nExample:\n\nAllowOverride AuthConfig Indexes\n\nIn the example above all directives that are neither in the group AuthConfig nor Indexes cause an internal server error.\n\nFor security and performance reasons, do not set AllowOverride to anything other than None in your <Directory /> block. Instead, find (or create) the <Directory> block that refers to the directory where you're actually planning to place a .htaccess file.\n\nConsulte tambiÃ©n\n\nAccessFileName\n\nConfiguration Files\n\n.htaccess Files\n\nDirectiva AllowOverrideList ¶\n\nDescripciÃ³n:Individual directives that are allowed in .htaccess files Sintaxis:AllowOverrideList None|directive [directive-type] ... Valor por defecto:AllowOverrideList None Contexto:directory Estado:Core MÃ³dulo:core\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\nAccessFileName\n\nAllowOverride\n\nConfiguration Files\n\n.htaccess Files\n\nDirectiva AsyncFilter ¶\n\nDescripciÃ³n:Set the minimum filter type eligible for asynchronous handling Sintaxis:AsyncFilter request|connection|network Valor por defecto:AsyncFilter request Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Only available from Apache 2.5.0 and later.\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva CGIMapExtension ¶\n\nDescripciÃ³n:Technique for locating the interpreter for CGI scripts Sintaxis:CGIMapExtension cgi-path .extension Contexto:directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core Compatibilidad:NetWare only\n\nThis directive is used to control how Apache httpd finds the interpreter used to run CGI scripts. For example, setting CGIMapExtension sys:\\foo.nlm .foo will cause all CGI script files with a .foo extension to be passed to the FOO interpreter.\n\nDirectiva CGIPassAuth ¶\n\nDescripciÃ³n:Enables passing HTTP authorization headers to scripts as CGI variables Sintaxis:CGIPassAuth On|Off Valor por defecto:CGIPassAuth Off Contexto:directory, .htaccess Anula:AuthConfig Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache HTTP Server 2.4.13 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva CGIVar ¶\n\nDescripciÃ³n:Controls how some CGI variables are set Sintaxis:CGIVar variable rule Contexto:directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache HTTP Server 2.4.21 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva DefaultRuntimeDir ¶\n\nDescripciÃ³n:Base directory for the server run-time files Sintaxis:DefaultRuntimeDir directory-path Valor por defecto:DefaultRuntimeDir DEFAULT_REL_RUNTIMEDIR (logs/) Contexto:server config Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache 2.4.2 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\nthe security tips for information on how to properly set permissions on the ServerRoot\n\nDirectiva DefaultStateDir ¶\n\nDescripciÃ³n:Base directory for the persistent state files Sintaxis:DefaultStateDir directory-path Valor por defecto:DefaultStateDir DEFAULT_REL_STATEDIR (state/) Contexto:server config Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache 2.5.1 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\nthe security tips for information on how to properly set permissions on the ServerRoot\n\nDirectiva DefaultType ¶\n\nDescripciÃ³n:This directive has no effect other than to emit warnings if the value is not none. In prior versions, DefaultType would specify a default media type to assign to response content for which no other media type configuration could be found. Sintaxis:DefaultType media-type|none Valor por defecto:DefaultType none Contexto:server config, virtual host, directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core Compatibilidad:The argument none is available in Apache httpd 2.2.7 and later. All other choices are DISABLED for 2.3.x and later.\n\nThis directive has been disabled. For backwards compatibility of configuration files, it may be specified with the value none, meaning no default media type. For example:\n\nDefaultType None\n\nDefaultType None is only available in httpd-2.2.7 and later.\n\nUse the mime.types configuration file and the AddType to configure media type assignments via file extensions, or the ForceType directive to configure the media type for specific resources. Otherwise, the server will send the response without a Content-Type header field and the recipient may attempt to guess the media type.\n\nDirectiva Define ¶\n\nDescripciÃ³n:Define the existence of a variable Sintaxis:Define parameter-name Contexto:server config Estado:Core MÃ³dulo:core\n\nEquivalent to passing the -D argument to httpd.\n\nThis directive can be used to toggle the use of <IfDefine> sections without needing to alter -D arguments in any startup scripts.\n\nDirectiva <Directory> ¶\n\nDescripciÃ³n:Enclose a group of directives that apply only to the named file-system directory, sub-directories, and their contents. Sintaxis:<Directory directory-path> ... </Directory> Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\n<Directory> and </Directory> are used to enclose a group of directives that will apply only to the named directory, sub-directories of that directory, and the files within the respective directories. Any directive that is allowed in a directory context may be used. Directory-path is either the full path to a directory, or a wild-card string using Unix shell-style matching. In a wild-card string, ? matches any single character, and * matches any sequences of characters. You may also use [] character ranges. None of the wildcards match a `/' character, so <Directory /*/public_html> will not match /home/user/public_html, but <Directory /home/*/public_html> will match. Example:\n\n<Directory /usr/local/httpd/htdocs>\n\nOptions Indexes FollowSymLinks\n\n</Directory>\n\nBe careful with the directory-path arguments: They have to literally match the filesystem path which Apache httpd uses to access the files. Directives applied to a particular <Directory> will not apply to files accessed from that same directory via a different path, such as via different symbolic links.\n\nRegular expressions can also be used, with the addition of the ~ character. For example:\n\n<Directory ~ \"^/www/.*/[0-9]{3}\">\n\nwould match directories in /www/ that consisted of three numbers.\n\nIf multiple (non-regular expression) <Directory> sections match the directory (or one of its parents) containing a document, then the directives are applied in the order of shortest match first, interspersed with the directives from the .htaccess files. For example, with\n\n<Directory />\n\nAllowOverride None\n\n</Directory>\n\n<Directory /home/>\n\nAllowOverride FileInfo\n\n</Directory>\n\nfor access to the document /home/web/dir/doc.html the steps are:\n\nApply directive AllowOverride None (disabling .htaccess files).\n\nApply directive AllowOverride FileInfo (for directory /home).\n\nApply any FileInfo directives in /home/.htaccess, /home/web/.htaccess and /home/web/dir/.htaccess in that order.\n\nRegular expressions are not considered until after all of the normal sections have been applied. Then all of the regular expressions are tested in the order they appeared in the configuration file. For example, with\n\n<Directory ~ abc$>\n\n# ... directives here ...\n\n</Directory>\n\nthe regular expression section won't be considered until after all normal <Directory>s and .htaccess files have been applied. Then the regular expression will match on /home/abc/public_html/abc and the corresponding <Directory> will be applied.\n\nNote that the default access for <Directory /> is Allow from All. This means that Apache httpd will serve any file mapped from an URL. It is recommended that you change this with a block such as\n\n<Directory />\n\nOrder Deny,Allow\n\nDeny from All\n\n</Directory>\n\nand then override this for directories you want accessible. See the Security Tips page for more details.\n\nThe directory sections occur in the httpd.conf file. <Directory> directives cannot nest, and cannot appear in a <Limit> or <LimitExcept> section.\n\nConsulte tambiÃ©n\n\nHow <Directory>, <Location> and <Files> sections work for an explanation of how these different sections are combined when a request is received\n\nDirectiva <DirectoryMatch> ¶\n\nDescripciÃ³n:Enclose directives that apply to the contents of file-system directories matching a regular expression. Sintaxis:<DirectoryMatch regex> ... </DirectoryMatch> Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\n<DirectoryMatch> and </DirectoryMatch> are used to enclose a group of directives which will apply only to the named directory (and the files within), the same as <Directory>. However, it takes as an argument a regular expression. For example:\n\n<DirectoryMatch \"^/www/(.+/)?[0-9]{3}\">\n\nwould match directories in /www/ that consisted of three numbers.\n\nCompatability\n\nPrior to 2.3.9, this directive implicitly applied to sub-directories (like <Directory>) and could not match the end of line symbol ($). In 2.3.9 and later, only directories that match the expression are affected by the enclosed directives.\n\nTrailing Slash\n\nThis directive applies to requests for directories that may or may not end in a trailing slash, so expressions that are anchored to the end of line ($) must be written with care.\n\nConsulte tambiÃ©n\n\n<Directory> for a description of how regular expressions are mixed in with normal <Directory>s\n\nHow <Directory>, <Location> and <Files> sections work for an explanation of how these different sections are combined when a request is received\n\nDirectiva DocumentRoot ¶\n\nDescripciÃ³n:Directory that forms the main document tree visible from the web Sintaxis:DocumentRoot directory-path Valor por defecto:DocumentRoot /usr/local/apache/htdocs Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nThis directive sets the directory from which httpd will serve files. Unless matched by a directive like Alias, the server appends the path from the requested URL to the document root to make the path to the document. Example:\n\nDocumentRoot /usr/web\n\nthen an access to http://www.my.host.com/index.html refers to /usr/web/index.html. If the directory-path is not absolute then it is assumed to be relative to the ServerRoot.\n\nThe DocumentRoot should be specified without a trailing slash.\n\nConsulte tambiÃ©n\n\nMapping URLs to Filesystem Locations\n\nDirectiva <Else> ¶\n\nDescripciÃ³n:Contains directives that apply only if the condition of a previous <If> or <ElseIf> section is not satisfied by a request at runtime Sintaxis:<Else> ... </Else> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core Compatibilidad:Nested conditions are evaluated in 2.4.26 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\n<If>\n\n<ElseIf>\n\nHow <Directory>, <Location>, <Files> sections work for an explanation of how these different sections are combined when a request is received. <If>, <ElseIf>, and <Else> are applied last.\n\nDirectiva <ElseIf> ¶\n\nDescripciÃ³n:Contains directives that apply only if a condition is satisfied by a request at runtime while the condition of a previous <If> or <ElseIf> section is not satisfied Sintaxis:<ElseIf expression> ... </ElseIf> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core Compatibilidad:Nested conditions are evaluated in 2.4.26 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\nExpressions in Apache HTTP Server, for a complete reference and more examples.\n\n<If>\n\n<Else>\n\nHow <Directory>, <Location>, <Files> sections work for an explanation of how these different sections are combined when a request is received. <If>, <ElseIf>, and <Else> are applied last.\n\nDirectiva EnableMMAP ¶\n\nDescripciÃ³n:Use memory-mapping to read files during delivery Sintaxis:EnableMMAP On|Off Valor por defecto:EnableMMAP On Contexto:server config, virtual host, directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core\n\nThis directive controls whether the httpd may use memory-mapping if it needs to read the contents of a file during delivery. By default, when the handling of a request requires access to the data within a file -- for example, when delivering a server-parsed file using mod_include -- Apache httpd memory-maps the file if the OS supports it.\n\nThis memory-mapping sometimes yields a performance improvement. But in some environments, it is better to disable the memory-mapping to prevent operational problems:\n\nOn some multiprocessor systems, memory-mapping can reduce the performance of the httpd.\n\nDeleting or truncating a file while httpd has it memory-mapped can cause httpd to crash with a segmentation fault.\n\nFor server configurations that are vulnerable to these problems, you should disable memory-mapping of delivered files by specifying:\n\nEnableMMAP Off\n\nFor NFS mounted files, this feature may be disabled explicitly for the offending files by specifying:\n\n<Directory \"/path-to-nfs-files\"> EnableMMAP Off </Directory>\n\nDirectiva EnableSendfile ¶\n\nDescripciÃ³n:Use the kernel sendfile support to deliver files to the client Sintaxis:EnableSendfile On|Off Valor por defecto:EnableSendfile Off Contexto:server config, virtual host, directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core Compatibilidad:Available in version 2.0.44 and later. Default changed to Off in version 2.3.9.\n\nThis directive controls whether httpd may use the sendfile support from the kernel to transmit file contents to the client. By default, when the handling of a request requires no access to the data within a file -- for example, when delivering a static file -- Apache httpd uses sendfile to deliver the file contents without ever reading the file if the OS supports it.\n\nThis sendfile mechanism avoids separate read and send operations, and buffer allocations. But on some platforms or within some filesystems, it is better to disable this feature to avoid operational problems:\n\nSome platforms may have broken sendfile support that the build system did not detect, especially if the binaries were built on another box and moved to such a machine with broken sendfile support.\n\nOn Linux the use of sendfile triggers TCP-checksum offloading bugs on certain networking cards when using IPv6.\n\nOn Linux on Itanium, sendfile may be unable to handle files over 2GB in size.\n\nWith a network-mounted DocumentRoot (e.g., NFS, SMB, CIFS, FUSE), the kernel may be unable to serve the network file through its own cache.\n\nFor server configurations that are not vulnerable to these problems, you may enable this feature by specifying:\n\nEnableSendfile On\n\nFor network mounted files, this feature may be disabled explicitly for the offending files by specifying:\n\n<Directory \"/path-to-nfs-files\"> EnableSendfile Off </Directory>\n\nPlease note that the per-directory and .htaccess configuration of EnableSendfile is not supported by mod_cache_disk. Only global definition of EnableSendfile is taken into account by the module.\n\nDirectiva Error ¶\n\nDescripciÃ³n:Abort configuration parsing with a custom error message Sintaxis:Error message Contexto:server config, virtual host, directory, .htaccess Estado:Core MÃ³dulo:core Compatibilidad:2.3.9 and later\n\nIf an error can be detected within the configuration, this directive can be used to generate a custom error message, and halt configuration parsing. The typical use is for reporting required modules which are missing from the configuration.\n\nExample\n\n# ensure that mod_include is loaded\n\n<IfModule !include_module>\n\nError mod_include is required by mod_foo. Load it with LoadModule.\n\n</IfModule>\n\n# ensure that exactly one of SSL,NOSSL is defined\n\n<IfDefine SSL>\n\n<IfDefine NOSSL>\n\nError Both SSL and NOSSL are defined. Define only one of them.\n\n</IfDefine>\n\n</IfDefine>\n\n<IfDefine !SSL>\n\n<IfDefine !NOSSL>\n\nError Either SSL or NOSSL must be defined.\n\n</IfDefine>\n\n</IfDefine>\n\nDirectiva ErrorDocument ¶\n\nDescripciÃ³n:What the server will return to the client in case of an error Sintaxis:ErrorDocument error-code document Contexto:server config, virtual host, directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core\n\nIn the event of a problem or error, Apache httpd can be configured to do one of four things,\n\noutput a simple hardcoded error message\n\noutput a customized message\n\nredirect to a local URL-path to handle the problem/error\n\nredirect to an external URL to handle the problem/error\n\nThe first option is the default, while options 2-4 are configured using the ErrorDocument directive, which is followed by the HTTP response code and a URL or a message. Apache httpd will sometimes offer additional information regarding the problem/error.\n\nURLs can begin with a slash (/) for local web-paths (relative to the DocumentRoot), or be a full URL which the client can resolve. Alternatively, a message can be provided to be displayed by the browser. Examples:\n\nErrorDocument 500 http://foo.example.com/cgi-bin/tester\n\nErrorDocument 404 /cgi-bin/bad_urls.pl\n\nErrorDocument 401 /subscription_info.html\n\nErrorDocument 403 \"Sorry can't allow you access today\"\n\nAdditionally, the special value default can be used to specify Apache httpd's simple hardcoded message. While not required under normal circumstances, default will restore Apache httpd's simple hardcoded message for configurations that would otherwise inherit an existing ErrorDocument.\n\nErrorDocument 404 /cgi-bin/bad_urls.pl\n\n<Directory /web/docs>\n\nErrorDocument 404 default\n\n</Directory>\n\nNote that when you specify an ErrorDocument that points to a remote URL (ie. anything with a method such as http in front of it), Apache HTTP Server will send a redirect to the client to tell it where to find the document, even if the document ends up being on the same server. This has several implications, the most important being that the client will not receive the original error status code, but instead will receive a redirect status code. This in turn can confuse web robots and other clients which try to determine if a URL is valid using the status code. In addition, if you use a remote URL in an ErrorDocument 401, the client will not know to prompt the user for a password since it will not receive the 401 status code. Therefore, if you use an ErrorDocument 401 directive then it must refer to a local document.\n\nMicrosoft Internet Explorer (MSIE) will by default ignore server-generated error messages when they are \"too small\" and substitute its own \"friendly\" error messages. The size threshold varies depending on the type of error, but in general, if you make your error document greater than 512 bytes, then MSIE will show the server-generated error rather than masking it. More information is available in Microsoft Knowledge Base article Q294807.\n\nAlthough most error messages can be overriden, there are certain circumstances where the internal messages are used regardless of the setting of ErrorDocument. In particular, if a malformed request is detected, normal request processing will be immediately halted and the internal error message returned. This is necessary to guard against security problems caused by bad requests.\n\nIf you are using mod_proxy, you may wish to enable ProxyErrorOverride so that you can provide custom error messages on behalf of your Origin servers. If you don't enable ProxyErrorOverride, Apache httpd will not generate custom error documents for proxied content.\n\nConsulte tambiÃ©n\n\ndocumentation of customizable responses\n\nDirectiva ErrorLog ¶\n\nDescripciÃ³n:Location where the server will log errors Sintaxis: ErrorLog file-path|syslog[:facility] Valor por defecto:ErrorLog logs/error_log (Unix) ErrorLog logs/error.log (Windows and OS/2) Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nThe ErrorLog directive sets the name of the file to which the server will log any errors it encounters. If the file-path is not absolute then it is assumed to be relative to the ServerRoot.\n\nExample\n\nErrorLog /var/log/httpd/error_log\n\nIf the file-path begins with a pipe character \"|\" then it is assumed to be a command to spawn to handle the error log.\n\nExample\n\nErrorLog \"|/usr/local/bin/httpd_errors\"\n\nSee the notes on piped logs for more information.\n\nUsing syslog instead of a filename enables logging via syslogd(8) if the system supports it. The default is to use syslog facility local7, but you can override this by using the syslog:facility syntax where facility can be one of the names usually documented in syslog(1). The facility is effectively global, and if it is changed in individual virtual hosts, the final facility specified affects the entire server.\n\nExample\n\nErrorLog syslog:user\n\nSECURITY: See the security tips document for details on why your security could be compromised if the directory where log files are stored is writable by anyone other than the user that starts the server.\n\nNote\n\nWhen entering a file path on non-Unix platforms, care should be taken to make sure that only forward slashed are used even though the platform may allow the use of back slashes. In general it is a good idea to always use forward slashes throughout the configuration files.\n\nConsulte tambiÃ©n\n\nLogLevel\n\nApache HTTP Server Log Files\n\nDirectiva ErrorLogFormat ¶\n\nDescripciÃ³n:Format specification for error log entries Sintaxis: ErrorLog [connection|request] format Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache httpd 2.3.9 and later\n\nErrorLogFormat allows to specify what supplementary information is logged in the error log in addition to the actual log message.\n\nSimple example\n\nErrorLogFormat \"[%t] [%l] [pid %P] %F: %E: [client %a] %M\"\n\nSpecifying connection or request as first paramter allows to specify additional formats, causing additional information to be logged when the first message is logged for a specific connection or request, respectivly. This additional information is only logged once per connection/request. If a connection or request is processed without causing any log message, the additional information is not logged either.\n\nIt can happen that some format string items do not produce output. For example, the Referer header is only present if the log message is associated to a request and the log message happens at a time when the Referer header has already been read from the client. If no output is produced, the default behaviour is to delete everything from the preceeding space character to the next space character. This means the log line is implicitly divided into fields on non-whitespace to whitespace transitions. If a format string item does not produce output, the whole field is ommitted. For example, if the remote address %a in the log format [%t] [%l] [%a] %M is not available, the surrounding brackets are not logged either. Space characters can be escaped with a backslash to prevent them from delimiting a field. The combination '% ' (percent space) is a zero-witdh field delimiter that does not produce any output.\n\nThe above behaviour can be changed by adding modifiers to the format string item. A - (minus) modifier causes a minus to be logged if the respective item does not produce any output. In once-per-connection/request formats, it is also possible to use the + (plus) modifier. If an item with the plus modifier does not produce any output, the whole line is ommitted.\n\nA number as modifier can be used to assign a log severity level to a format item. The item will only be logged if the severity of the log message is not higher than the specified log severity level. The number can range from 1 (alert) over 4 (warn) and 7 (debug) to 15 (trace8).\n\nSome format string items accept additional parameters in braces.\n\nFormat String Description %% The percent sign %...a Remote IP-address and port %...A Local IP-address and port %...{name}e Request environment variable name %...E APR/OS error status code and string %...F Source file name and line number of the log call %...{name}i Request header name %...k Number of keep-alive requests on this connection %...l Loglevel of the message %...L Log ID of the request %...{c}L Log ID of the connection %...{C}L Log ID of the connection if used in connection scope, empty otherwise %...m Name of the module logging the message %M The actual log message %...{name}n Request note name %...P Process ID of current process %...T Thread ID of current thread %...t The current time %...{u}t The current time including micro-seconds %...{cu}t The current time in compact ISO 8601 format, including micro-seconds %...v The canonical ServerName of the current server. %...V The server name of the server serving the request according to the UseCanonicalName setting. \\ (backslash space) Non-field delimiting space % (percent space) Field delimiter (no output)\n\nThe log ID format %L produces a unique id for a connection or request. This can be used to correlate which log lines belong to the same connection or request, which request happens on which connection. A %L format string is also available in mod_log_config, to allow to correlate access log entries with error log lines. If mod_unique_id is loaded, its unique id will be used as log ID for requests.\n\nExample (somewhat similar to default format)\n\nErrorLogFormat \"[%{u}t] [%-m:%l] [pid %P] %7F: %E: [client\\ %a] %M% ,\\ referer\\ %{Referer}i\"\n\nExample (similar to the 2.2.x format)\n\nErrorLogFormat \"[%t] [%l] %7F: %E: [client\\ %a] %M% ,\\ referer\\ %{Referer}i\"\n\nAdvanced example with request/connection log IDs\n\nErrorLogFormat \"[%{uc}t] [%-m:%-l] [R:%L] [C:%{C}L] %7F: %E: %M\"\n\nErrorLogFormat request \"[%{uc}t] [R:%L] Request %k on C:%{c}L pid:%P tid:%T\"\n\nErrorLogFormat request \"[%{uc}t] [R:%L] UA:'%+{User-Agent}i'\"\n\nErrorLogFormat request \"[%{uc}t] [R:%L] Referer:'%+{Referer}i'\"\n\nErrorLogFormat connection \"[%{uc}t] [C:%{c}L] local\\ %a remote\\ %A\"\n\nConsulte tambiÃ©n\n\nErrorLog\n\nLogLevel\n\nApache HTTP Server Log Files\n\nDirectiva ExtendedStatus ¶\n\nDescripciÃ³n:Keep track of extended status information for each request Sintaxis:ExtendedStatus On|Off Valor por defecto:ExtendedStatus Off[*] Contexto:server config Estado:Core MÃ³dulo:core\n\nThis option tracks additional data per worker about the currently executing request, and a utilization summary; you can see these variables during runtime by configuring mod_status. Note that other modules may rely on this scoreboard.\n\nThis setting applies to the entire server, and cannot be enabled or disabled on a virtualhost-by-virtualhost basis. The collection of extended status information can slow down the server. Also note that this setting cannot be changed during a graceful restart.\n\nNote that loading mod_status will change the default behavior to ExtendedStatus On, while other third party modules may do the same. Such modules rely on collecting detailed information about the state of all workers. The default is changed by mod_status beginning with version 2.3.6; the previous default was always Off.\n\nDirectiva FileETag ¶\n\nDescripciÃ³n:File attributes used to create the ETag HTTP response header for static files Sintaxis:FileETag component ... Valor por defecto:FileETag INode MTime Size Contexto:server config, virtual host, directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core\n\nThe FileETag directive configures the file attributes that are used to create the ETag (entity tag) response header field when the document is based on a static file. (The ETag value is used in cache management to save network bandwidth.) The FileETag directive allows you to choose which of these -- if any -- should be used. The recognized keywords are:\n\nINode\n\nThe file's i-node number will be included in the calculation\n\nMTime\n\nThe date and time the file was last modified will be included\n\nSize\n\nThe number of bytes in the file will be included\n\nAll\n\nAll available fields will be used. This is equivalent to:\n\nFileETag INode MTime Size\n\nNone\n\nIf a document is file-based, no ETag field will be included in the response\n\nThe INode, MTime, and Size keywords may be prefixed with either + or -, which allow changes to be made to the default setting inherited from a broader scope. Any keyword appearing without such a prefix immediately and completely cancels the inherited setting.\n\nIf a directory's configuration includes FileETag INode MTime Size, and a subdirectory's includes FileETag -INode, the setting for that subdirectory (which will be inherited by any sub-subdirectories that don't override it) will be equivalent to FileETag MTime Size.\n\nWarning\n\nDo not change the default for directories or locations that have WebDAV enabled and use mod_dav_fs as a storage provider. mod_dav_fs uses INode MTime Size as a fixed format for ETag comparisons on conditional requests. These conditional requests will break if the ETag format is changed via FileETag.\n\nServer Side Includes\n\nAn ETag is not generated for responses parsed by mod_include, since the response entity can change without a change of the INode, MTime, or Size of the static file with embedded SSI directives.\n\nDirectiva <Files> ¶\n\nDescripciÃ³n:Contains directives that apply to matched filenames Sintaxis:<Files filename> ... </Files> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core\n\nThe <Files> directive limits the scope of the enclosed directives by filename. It is comparable to the <Directory> and <Location> directives. It should be matched with a </Files> directive. The directives given within this section will be applied to any object with a basename (last component of filename) matching the specified filename. <Files> sections are processed in the order they appear in the configuration file, after the <Directory> sections and .htaccess files are read, but before <Location> sections. Note that <Files> can be nested inside <Directory> sections to restrict the portion of the filesystem they apply to.\n\nThe filename argument should include a filename, or a wild-card string, where ? matches any single character, and * matches any sequences of characters. Regular expressions can also be used, with the addition of the ~ character. For example:\n\n<Files ~ \"\\.(gif|jpe?g|png)$\">\n\nwould match most common Internet graphics formats. <FilesMatch> is preferred, however.\n\nNote that unlike <Directory> and <Location> sections, <Files> sections can be used inside .htaccess files. This allows users to control access to their own files, at a file-by-file level.\n\nConsulte tambiÃ©n\n\nHow <Directory>, <Location> and <Files> sections work for an explanation of how these different sections are combined when a request is received\n\nDirectiva <FilesMatch> ¶\n\nDescripciÃ³n:Contains directives that apply to regular-expression matched filenames Sintaxis:<FilesMatch regex> ... </FilesMatch> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core\n\nThe <FilesMatch> directive limits the scope of the enclosed directives by filename, just as the <Files> directive does. However, it accepts a regular expression. For example:\n\n<FilesMatch \"\\.(gif|jpe?g|png)$\">\n\nwould match most common Internet graphics formats.\n\nConsulte tambiÃ©n\n\nHow <Directory>, <Location> and <Files> sections work for an explanation of how these different sections are combined when a request is received\n\nDirectiva FlushMaxPipelined ¶\n\nDescripciÃ³n:Maximum number of pipelined responses above which they are flushed to the network Sintaxis:FlushMaxPipelined number Valor por defecto:FlushMaxPipelined 5 Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:2.5 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva FlushMaxThreshold ¶\n\nDescripciÃ³n:Threshold above which pending data are flushed to the network Sintaxis:FlushMaxThreshold number-of-bytes Valor por defecto:FlushMaxThreshold 65535 Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:2.5 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva ForceType ¶\n\nDescripciÃ³n:Forces all matching files to be served with the specified media type in the HTTP Content-Type header field Sintaxis:ForceType media-type|None Contexto:directory, .htaccess Anula:FileInfo Estado:Core MÃ³dulo:core Compatibilidad:Moved to the core in Apache httpd 2.0\n\nWhen placed into an .htaccess file or a <Directory>, or <Location> or <Files> section, this directive forces all matching files to be served with the content type identification given by media-type. For example, if you had a directory full of GIF files, but did not want to label them all with .gif, you might want to use:\n\nForceType image/gif\n\nNote that this directive overrides other indirect media type associations defined in mime.types or via the AddType.\n\nYou can also override more general ForceType settings by using the value of None:\n\n# force all files to be image/gif:\n\n<Location /images>\n\nForceType image/gif\n\n</Location>\n\n# but normal mime-type associations here:\n\n<Location /images/mixed>\n\nForceType None\n\n</Location>\n\nThis directive primarily overrides the content types generated for static files served out of the filesystem. For resources other than static files, where the generator of the response typically specifies a Content-Type, this directive has no effect.\n\nDirectiva GprofDir ¶\n\nDescripciÃ³n:Directory to write gmon.out profiling data to. Sintaxis:GprofDir /tmp/gprof/|/tmp/gprof/% Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nWhen the server has been compiled with gprof profiling support, GprofDir causes gmon.out files to be written to the specified directory when the process exits. If the argument ends with a percent symbol ('%'), subdirectories are created for each process id.\n\nThis directive currently only works with the prefork MPM.\n\nDirectiva HostnameLookups ¶\n\nDescripciÃ³n:Enables DNS lookups on client IP addresses Sintaxis:HostnameLookups On|Off|Double Valor por defecto:HostnameLookups Off Contexto:server config, virtual host, directory Estado:Core MÃ³dulo:core\n\nThis directive enables DNS lookups so that host names can be logged (and passed to CGIs/SSIs in REMOTE_HOST). The value Double refers to doing double-reverse DNS lookup. That is, after a reverse lookup is performed, a forward lookup is then performed on that result. At least one of the IP addresses in the forward lookup must match the original address. (In \"tcpwrappers\" terminology this is called PARANOID.)\n\nRegardless of the setting, when mod_authz_host is used for controlling access by hostname, a double reverse lookup will be performed. This is necessary for security. Note that the result of this double-reverse isn't generally available unless you set HostnameLookups Double. For example, if only HostnameLookups On and a request is made to an object that is protected by hostname restrictions, regardless of whether the double-reverse fails or not, CGIs will still be passed the single-reverse result in REMOTE_HOST.\n\nThe default is Off in order to save the network traffic for those sites that don't truly need the reverse lookups done. It is also better for the end users because they don't have to suffer the extra latency that a lookup entails. Heavily loaded sites should leave this directive Off, since DNS lookups can take considerable amounts of time. The utility logresolve, compiled by default to the bin subdirectory of your installation directory, can be used to look up host names from logged IP addresses offline.\n\nDirectiva HttpProtocolOptions ¶\n\nDescripciÃ³n:Modify restrictions on HTTP Request Messages Sintaxis:HttpProtocolOptions [Strict|Unsafe] [RegisteredMethods|LenientMethods] [Allow0.9|Require1.0] Valor por defecto:HttpProtocolOptions Strict LenientMethods Allow0.9 Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:2.2.32 or 2.4.24 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva <If> ¶\n\nDescripciÃ³n:Contains directives that apply only if a condition is satisfied by a request at runtime Sintaxis:<If expression> ... </If> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core\n\nThe <If> directive evaluates an expression at runtime, and applies the enclosed directives if and only if the expression evaluates to true. For example:\n\n<If \"$req{Host} = ''\">\n\nwould match HTTP/1.0 requests without a Host: header.\n\nYou may compare the value of any variable in the request headers ($req), response headers ($resp) or environment ($env) in your expression.\n\nApart from =, If can use the IN operator to compare if the expression is in a given range:\n\n<If %{REQUEST_METHOD} IN GET,HEAD,OPTIONS>\n\nConsulte tambiÃ©n\n\nExpressions in Apache HTTP Server, for a complete reference and more examples.\n\nHow <Directory>, <Location>, <Files> sections work for an explanation of how these different sections are combined when a request is received. <If> has the same precedence and usage as <Files>\n\nDirectiva <IfDefine> ¶\n\nDescripciÃ³n:Encloses directives that will be processed only if a test is true at startup Sintaxis:<IfDefine [!]parameter-name> ... </IfDefine> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core\n\nThe <IfDefine test>...</IfDefine> section is used to mark directives that are conditional. The directives within an <IfDefine> section are only processed if the test is true. If test is false, everything between the start and end markers is ignored.\n\nThe test in the <IfDefine> section directive can be one of two forms:\n\nparameter-name\n\n!parameter-name\n\nIn the former case, the directives between the start and end markers are only processed if the parameter named parameter-name is defined. The second format reverses the test, and only processes the directives if parameter-name is not defined.\n\nThe parameter-name argument is a define as given on the httpd command line via -Dparameter at the time the server was started or by the Define directive.\n\n<IfDefine> sections are nest-able, which can be used to implement simple multiple-parameter tests. Example:\n\nhttpd -DReverseProxy -DUseCache -DMemCache ...\n\n# httpd.conf\n\n<IfDefine ReverseProxy>\n\nLoadModule proxy_module modules/mod_proxy.so\n\nLoadModule proxy_http_module modules/mod_proxy_http.so\n\n<IfDefine UseCache>\n\nLoadModule cache_module modules/mod_cache.so\n\n<IfDefine MemCache>\n\nLoadModule mem_cache_module modules/mod_mem_cache.so\n\n</IfDefine>\n\n<IfDefine !MemCache>\n\nLoadModule cache_disk_module modules/mod_cache_disk.so\n\n</IfDefine> </IfDefine> </IfDefine>\n\nDirectiva <IfDirective> ¶\n\nDescripciÃ³n:Encloses directives that are processed conditional on the presence or absence of a specific directive Sintaxis:<IfDirective [!]directive-name> ... </IfDirective> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core Compatibilidad:Available in 2.4.34 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\n<IfSection>\n\nDirectiva <IfFile> ¶\n\nDescripciÃ³n:Encloses directives that will be processed only if file exists at startup Sintaxis:<IfFile [!]parameter-name> ... </IfFile> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core Compatibilidad:Available in 2.4.34 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva <IfModule> ¶\n\nDescripciÃ³n:Encloses directives that are processed conditional on the presence or absence of a specific module Sintaxis:<IfModule [!]module-file|module-identifier> ... </IfModule> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core Compatibilidad:Module identifiers are available in version 2.1 and later.\n\nThe <IfModule test>...</IfModule> section is used to mark directives that are conditional on the presence of a specific module. The directives within an <IfModule> section are only processed if the test is true. If test is false, everything between the start and end markers is ignored.\n\nThe test in the <IfModule> section directive can be one of two forms:\n\nmodule\n\n!module\n\nIn the former case, the directives between the start and end markers are only processed if the module named module is included in Apache httpd -- either compiled in or dynamically loaded using LoadModule. The second format reverses the test, and only processes the directives if module is not included.\n\nThe module argument can be either the module identifier or the file name of the module, at the time it was compiled. For example, rewrite_module is the identifier and mod_rewrite.c is the file name. If a module consists of several source files, use the name of the file containing the string STANDARD20_MODULE_STUFF.\n\n<IfModule> sections are nest-able, which can be used to implement simple multiple-module tests.\n\nThis section should only be used if you need to have one configuration file that works whether or not a specific module is available. In normal operation, directives need not be placed in <IfModule> sections.\n\nDirectiva <IfSection> ¶\n\nDescripciÃ³n:Encloses directives that are processed conditional on the presence or absence of a specific section directive Sintaxis:<IfSection [!]section-name> ... </IfSection> Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core Compatibilidad:Available in 2.4.34 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\n<IfDirective>\n\nDirectiva Include ¶\n\nDescripciÃ³n:Includes other configuration files from within the server configuration files Sintaxis:Include [optional|strict] file-path|directory-path|wildcard Contexto:server config, virtual host, directory Estado:Core MÃ³dulo:core Compatibilidad:Wildcard matching available in 2.0.41 and later, directory wildcard matching available in 2.3.6 and later\n\nThis directive allows inclusion of other configuration files from within the server configuration files.\n\nShell-style (fnmatch()) wildcard characters can be used in the filename or directory parts of the path to include several files at once, in alphabetical order. In addition, if Include points to a directory, rather than a file, Apache httpd will read all files in that directory and any subdirectory. However, including entire directories is not recommended, because it is easy to accidentally leave temporary files in a directory that can cause httpd to fail. Instead, we encourage you to use the wildcard syntax shown below, to include files that match a particular pattern, such as *.conf, for example.\n\nWhen a wildcard is specified for a file component of the path, and no file matches the wildcard, the Include directive will be silently ignored. When a wildcard is specified for a directory component of the path, and no directory matches the wildcard, the Include directive will fail with an error saying the directory cannot be found.\n\nFor further control over the behaviour of the server when no files or directories match, prefix the path with the modifiers optional or strict. If optional is specified, any wildcard file or directory that does not match will be silently ignored. If strict is specified, any wildcard file or directory that does not match at least one file will cause server startup to fail.\n\nWhen a directory or file component of the path is specified exactly, and that directory or file does not exist, Include directive will fail with an error saying the file or directory cannot be found.\n\nThe file path specified may be an absolute path, or may be relative to the ServerRoot directory.\n\nExamples:\n\nInclude /usr/local/apache2/conf/ssl.conf\n\nInclude /usr/local/apache2/conf/vhosts/*.conf\n\nOr, providing paths relative to your ServerRoot directory:\n\nInclude conf/ssl.conf\n\nInclude conf/vhosts/*.conf\n\nWildcards may be included in the directory or file portion of the path. In the following example, the server will fail to load if no directories match conf/vhosts/*, but will load successfully if no files match *.conf.\n\nInclude conf/vhosts/*/vhost.conf\n\nInclude conf/vhosts/*/*.conf\n\nIn this example, the server will fail to load if either conf/vhosts/* matches no directories, or if *.conf matches no files:\n\nInclude strict conf/vhosts/*/*.conf\n\nIn this example, the server load successfully if either conf/vhosts/* matches no directories, or if *.conf matches no files:\n\nInclude optional conf/vhosts/*/*.conf\n\nConsulte tambiÃ©n\n\napachectl\n\nDirectiva IncludeOptional ¶\n\nDescripciÃ³n:Includes other configuration files from within the server configuration files Sintaxis:IncludeOptional file-path|directory-path|wildcard Contexto:server config, virtual host, directory Estado:Core MÃ³dulo:core Compatibilidad:Available in 2.3.6 and later. Not existent file paths without wildcards do not cause SyntaxError after 2.4.30\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\nInclude\n\napachectl\n\nDirectiva KeepAlive ¶\n\nDescripciÃ³n:Enables HTTP persistent connections Sintaxis:KeepAlive On|Off Valor por defecto:KeepAlive On Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nThe Keep-Alive extension to HTTP/1.0 and the persistent connection feature of HTTP/1.1 provide long-lived HTTP sessions which allow multiple requests to be sent over the same TCP connection. In some cases this has been shown to result in an almost 50% speedup in latency times for HTML documents with many images. To enable Keep-Alive connections, set KeepAlive On.\n\nFor HTTP/1.0 clients, Keep-Alive connections will only be used if they are specifically requested by a client. In addition, a Keep-Alive connection with an HTTP/1.0 client can only be used when the length of the content is known in advance. This implies that dynamic content such as CGI output, SSI pages, and server-generated directory listings will generally not use Keep-Alive connections to HTTP/1.0 clients. For HTTP/1.1 clients, persistent connections are the default unless otherwise specified. If the client requests it, chunked encoding will be used in order to send content of unknown length over persistent connections.\n\nWhen a client uses a Keep-Alive connection it will be counted as a single \"request\" for the MaxConnectionsPerChild directive, regardless of how many requests are sent using the connection.\n\nConsulte tambiÃ©n\n\nMaxKeepAliveRequests\n\nDirectiva KeepAliveTimeout ¶\n\nDescripciÃ³n:Amount of time the server will wait for subsequent requests on a persistent connection Sintaxis:KeepAliveTimeout num[ms] Valor por defecto:KeepAliveTimeout 5 Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Specifying a value in milliseconds is available in Apache httpd 2.3.2 and later\n\nThe number of seconds Apache httpd will wait for a subsequent request before closing the connection. By adding a postfix of ms the timeout can be also set in milliseconds. Once a request has been received, the timeout value specified by the Timeout directive applies.\n\nSetting KeepAliveTimeout to a high value may cause performance problems in heavily loaded servers. The higher the timeout, the more server processes will be kept occupied waiting on connections with idle clients.\n\nIn a name-based virtual host context, the value of the first defined virtual host (the default host) in a set of NameVirtualHost will be used. The other values will be ignored.\n\nDirectiva <Limit> ¶\n\nDescripciÃ³n:Restrict enclosed access controls to only certain HTTP methods Sintaxis:<Limit method [method] ... > ... </Limit> Contexto:directory, .htaccess Anula:AuthConfig, Limit Estado:Core MÃ³dulo:core\n\nAccess controls are normally effective for all access methods, and this is the usual desired behavior. In the general case, access control directives should not be placed within a <Limit> section.\n\nThe purpose of the <Limit> directive is to restrict the effect of the access controls to the nominated HTTP methods. For all other methods, the access restrictions that are enclosed in the <Limit> bracket will have no effect. The following example applies the access control only to the methods POST, PUT, and DELETE, leaving all other methods unprotected:\n\n<Limit POST PUT DELETE>\n\nRequire valid-user\n\n</Limit>\n\nThe method names listed can be one or more of: GET, POST, PUT, DELETE, CONNECT, OPTIONS, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, and UNLOCK. The method name is case-sensitive. If GET is used it will also restrict HEAD requests. The TRACE method cannot be limited (see TraceEnable).\n\nA <LimitExcept> section should always be used in preference to a <Limit> section when restricting access, since a <LimitExcept> section provides protection against arbitrary methods.\n\nThe <Limit> and <LimitExcept> directives may be nested. In this case, each successive level of <Limit> or <LimitExcept> directives must further restrict the set of methods to which access controls apply.\n\nWhen using <Limit> or <LimitExcept> directives with the Require directive, note that the first Require to succeed authorizes the request, regardless of the presence of other Require directives.\n\nFor example, given the following configuration, all users will be authorized for POST requests, and the Require group editors directive will be ignored in all cases:\n\n<LimitExcept GET> Require valid-user </LimitExcept>\n\n<Limit POST> Require group editors </Limit>\n\nDirectiva <LimitExcept> ¶\n\nDescripciÃ³n:Restrict access controls to all HTTP methods except the named ones Sintaxis:<LimitExcept method [method] ... > ... </LimitExcept> Contexto:directory, .htaccess Anula:AuthConfig, Limit Estado:Core MÃ³dulo:core\n\n<LimitExcept> and </LimitExcept> are used to enclose a group of access control directives which will then apply to any HTTP access method not listed in the arguments; i.e., it is the opposite of a <Limit> section and can be used to control both standard and nonstandard/unrecognized methods. See the documentation for <Limit> for more details.\n\nFor example:\n\n<LimitExcept POST GET>\n\nRequire valid-user\n\n</LimitExcept>\n\nDirectiva LimitInternalRecursion ¶\n\nDescripciÃ³n:Determine maximum number of internal redirects and nested subrequests Sintaxis:LimitInternalRecursion number [number] Valor por defecto:LimitInternalRecursion 10 Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache httpd 2.0.47 and later\n\nAn internal redirect happens, for example, when using the Action directive, which internally redirects the original request to a CGI script. A subrequest is Apache httpd's mechanism to find out what would happen for some URI if it were requested. For example, mod_dir uses subrequests to look for the files listed in the DirectoryIndex directive.\n\nLimitInternalRecursion prevents the server from crashing when entering an infinite loop of internal redirects or subrequests. Such loops are usually caused by misconfigurations.\n\nThe directive stores two different limits, which are evaluated on per-request basis. The first number is the maximum number of internal redirects, that may follow each other. The second number determines, how deep subrequests may be nested. If you specify only one number, it will be assigned to both limits.\n\nExample\n\nLimitInternalRecursion 5\n\nDirectiva LimitRequestBody ¶\n\nDescripciÃ³n:Restricts the total size of the HTTP request body sent from the client Sintaxis:LimitRequestBody bytes Valor por defecto:LimitRequestBody 0 Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core\n\nThis directive specifies the number of bytes from 0 (meaning unlimited) to 2147483647 (2GB) that are allowed in a request body. See the note below for the limited applicability to proxy requests.\n\nThe LimitRequestBody directive allows the user to set a limit on the allowed size of an HTTP request message body within the context in which the directive is given (server, per-directory, per-file or per-location). If the client request exceeds that limit, the server will return an error response instead of servicing the request. The size of a normal request message body will vary greatly depending on the nature of the resource and the methods allowed on that resource. CGI scripts typically use the message body for retrieving form information. Implementations of the PUT method will require a value at least as large as any representation that the server wishes to accept for that resource.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.\n\nIf, for example, you are permitting file upload to a particular location, and wish to limit the size of the uploaded file to 100K, you might use the following directive:\n\nLimitRequestBody 102400\n\nFor a full description of how this directive is interpreted by proxy requests, see the mod_proxy documentation.\n\nDirectiva LimitRequestFields ¶\n\nDescripciÃ³n:Limits the number of HTTP request header fields that will be accepted from the client Sintaxis:LimitRequestFields number Valor por defecto:LimitRequestFields 100 Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nNumber is an integer from 0 (meaning unlimited) to 32767. The default value is defined by the compile-time constant DEFAULT_LIMIT_REQUEST_FIELDS (100 as distributed).\n\nThe LimitRequestFields directive allows the server administrator to modify the limit on the number of request header fields allowed in an HTTP request. A server needs this value to be larger than the number of fields that a normal client request might include. The number of request header fields used by a client rarely exceeds 20, but this may vary among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. Optional HTTP extensions are often expressed using request header fields.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks. The value should be increased if normal clients see an error response from the server that indicates too many fields were sent in the request.\n\nFor example:\n\nLimitRequestFields 50\n\nWarning\n\nWhen name-based virtual hosting is used, the value for this directive is taken from the default (first-listed) virtual host for the NameVirtualHost the connection was mapped to.\n\nDirectiva LimitRequestFieldSize ¶\n\nDescripciÃ³n:Limits the size of the HTTP request header allowed from the client Sintaxis:LimitRequestFieldSize bytes Valor por defecto:LimitRequestFieldSize 8190 Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nThis directive specifies the number of bytes that will be allowed in an HTTP request header.\n\nThe LimitRequestFieldSize directive allows the server administrator to reduce or increase the limit on the allowed size of an HTTP request header field. A server needs this value to be large enough to hold any one header field from a normal client request. The size of a normal request header field will vary greatly among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. SPNEGO authentication headers can be up to 12392 bytes.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.\n\nFor example:\n\nLimitRequestFieldSize 4094\n\nUnder normal conditions, the value should not be changed from the default.\n\nWarning\n\nWhen name-based virtual hosting is used, the value for this directive is taken from the default (first-listed) virtual host for the NameVirtualHost the connection was mapped to.\n\nDirectiva LimitRequestLine ¶\n\nDescripciÃ³n:Limit the size of the HTTP request line that will be accepted from the client Sintaxis:LimitRequestLine bytes Valor por defecto:LimitRequestLine 8190 Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nThis directive sets the number of bytes that will be allowed on the HTTP request-line.\n\nThe LimitRequestLine directive allows the server administrator to reduce or increase the limit on the allowed size of a client's HTTP request-line. Since the request-line consists of the HTTP method, URI, and protocol version, the LimitRequestLine directive places a restriction on the length of a request-URI allowed for a request on the server. A server needs this value to be large enough to hold any of its resource names, including any information that might be passed in the query part of a GET request.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.\n\nFor example:\n\nLimitRequestLine 4094\n\nUnder normal conditions, the value should not be changed from the default.\n\nWarning\n\nWhen name-based virtual hosting is used, the value for this directive is taken from the default (first-listed) virtual host for the NameVirtualHost the connection was mapped to.\n\nDirectiva LimitXMLRequestBody ¶\n\nDescripciÃ³n:Limits the size of an XML-based request body Sintaxis:LimitXMLRequestBody bytes Valor por defecto:LimitXMLRequestBody 1000000 Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core\n\nLimit (in bytes) on maximum size of an XML-based request body. A value of 0 will disable any checking.\n\nExample:\n\nLimitXMLRequestBody 0\n\nDirectiva <Location> ¶\n\nDescripciÃ³n:Applies the enclosed directives only to matching URLs Sintaxis:<Location URL-path|URL> ... </Location> Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nThe <Location> directive limits the scope of the enclosed directives by URL. It is similar to the <Directory> directive, and starts a subsection which is terminated with a </Location> directive. <Location> sections are processed in the order they appear in the configuration file, after the <Directory> sections and .htaccess files are read, and after the <Files> sections.\n\n<Location> sections operate completely outside the filesystem. This has several consequences. Most importantly, <Location> directives should not be used to control access to filesystem locations. Since several different URLs may map to the same filesystem location, such access controls may by circumvented.\n\nThe enclosed directives will be applied to the request if the path component of the URL meets any of the following criteria:\n\nThe specified location matches exactly the path component of the URL.\n\nThe specified location, which ends in a forward slash, is a prefix of the path component of the URL (treated as a context root).\n\nThe specified location, with the addition of a trailing slash, is a prefix of the path component of the URL (also treated as a context root).\n\nIn the example below, where no trailing slash is used, requests to /private1, /private1/ and /private1/file.txt will have the enclosed directives applied, but /private1other would not.\n\n<Location /private1> ...\n\nIn the example below, where a trailing slash is used, requests to /private2/ and /private2/file.txt will have the enclosed directives applied, but /private2 and /private2other would not.\n\n<Location /private2/> ...\n\nWhen to use <Location>\n\nUse <Location> to apply directives to content that lives outside the filesystem. For content that lives in the filesystem, use <Directory> and <Files>. An exception is <Location />, which is an easy way to apply a configuration to the entire server.\n\nFor all origin (non-proxy) requests, the URL to be matched is a URL-path of the form /path/. No scheme, hostname, port, or query string may be included. For proxy requests, the URL to be matched is of the form scheme://servername/path, and you must include the prefix.\n\nThe URL may use wildcards. In a wild-card string, ? matches any single character, and * matches any sequences of characters. Neither wildcard character matches a / in the URL-path.\n\nRegular expressions can also be used, with the addition of the ~ character. For example:\n\n<Location ~ \"/(extra|special)/data\">\n\nwould match URLs that contained the substring /extra/data or /special/data. The directive <LocationMatch> behaves identical to the regex version of <Location>, and is preferred, for the simple reason that ~ is hard to distinguish from - in many fonts.\n\nThe <Location> functionality is especially useful when combined with the SetHandler directive. For example, to enable status requests, but allow them only from browsers at example.com, you might use:\n\n<Location /status>\n\nSetHandler server-status\n\nRequire host example.com\n\n</Location>\n\nNote about / (slash)\n\nThe slash character has special meaning depending on where in a URL it appears. People may be used to its behavior in the filesystem where multiple adjacent slashes are frequently collapsed to a single slash (i.e., /home///foo is the same as /home/foo). In URL-space this is not necessarily true. The <LocationMatch> directive and the regex version of <Location> require you to explicitly specify multiple slashes if that is your intention.\n\nFor example, <LocationMatch ^/abc> would match the request URL /abc but not the request URL //abc. The (non-regex) <Location> directive behaves similarly when used for proxy requests. But when (non-regex) <Location> is used for non-proxy requests it will implicitly match multiple slashes with a single slash. For example, if you specify <Location /abc/def> and the request is to /abc//def then it will match.\n\nConsulte tambiÃ©n\n\nHow <Directory>, <Location> and <Files> sections work for an explanation of how these different sections are combined when a request is received.\n\nLocationMatch\n\nDirectiva <LocationMatch> ¶\n\nDescripciÃ³n:Applies the enclosed directives only to regular-expression matching URLs Sintaxis:<LocationMatch regex> ... </LocationMatch> Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nThe <LocationMatch> directive limits the scope of the enclosed directives by URL, in an identical manner to <Location>. However, it takes a regular expression as an argument instead of a simple string. For example:\n\n<LocationMatch \"/(extra|special)/data\">\n\nwould match URLs that contained the substring /extra/data or /special/data.\n\nConsulte tambiÃ©n\n\nHow <Directory>, <Location> and <Files> sections work for an explanation of how these different sections are combined when a request is received\n\nDirectiva LogLevel ¶\n\nDescripciÃ³n:Controls the verbosity of the ErrorLog Sintaxis:LogLevel [module:]level [module:level] ... Valor por defecto:LogLevel warn Contexto:server config, virtual host, directory Estado:Core MÃ³dulo:core Compatibilidad:Per-module and per-directory configuration is available in Apache HTTP Server 2.3.6 and later\n\nLogLevel adjusts the verbosity of the messages recorded in the error logs (see ErrorLog directive). The following levels are available, in order of decreasing significance:\n\nLevel Description Example emerg Emergencies - system is unusable. \"Child cannot open lock file. Exiting\" alert Action must be taken immediately. \"getpwuid: couldn't determine user name from uid\" crit Critical Conditions. \"socket: Failed to get a socket, exiting child\" error Error conditions. \"Premature end of script headers\" warn Warning conditions. \"child process 1234 did not exit, sending another SIGHUP\" notice Normal but significant condition. \"httpd: caught SIGBUS, attempting to dump core in ...\" info Informational. \"Server seems busy, (you may need to increase StartServers, or Min/MaxSpareServers)...\" debug Debug-level messages \"Opening config file ...\" trace1 Trace messages \"proxy: FTP: control connection complete\" trace2 Trace messages \"proxy: CONNECT: sending the CONNECT request to the remote proxy\" trace3 Trace messages \"openssl: Handshake: start\" trace4 Trace messages \"read from buffered SSL brigade, mode 0, 17 bytes\" trace5 Trace messages \"map lookup FAILED: map=rewritemap key=keyname\" trace6 Trace messages \"cache lookup FAILED, forcing new map lookup\" trace7 Trace messages, dumping large amounts of data \"| 0000: 02 23 44 30 13 40 ac 34 df 3d bf 9a 19 49 39 15 |\" trace8 Trace messages, dumping large amounts of data \"| 0000: 02 23 44 30 13 40 ac 34 df 3d bf 9a 19 49 39 15 |\"\n\nWhen a particular level is specified, messages from all other levels of higher significance will be reported as well. E.g., when LogLevel info is specified, then messages with log levels of notice and warn will also be posted.\n\nUsing a level of at least crit is recommended.\n\nFor example:\n\nLogLevel notice\n\nNote\n\nWhen logging to a regular file messages of the level notice cannot be suppressed and thus are always logged. However, this doesn't apply when logging is done using syslog.\n\nSpecifying a level without a module name will reset the level for all modules to that level. Specifying a level with a module name will set the level for that module only. It is possible to use the module source file name, the module identifier, or the module identifier with the trailing _module omitted as module specification. This means the following three specifications are equivalent:\n\nLogLevel info ssl:warn\n\nLogLevel info mod_ssl.c:warn\n\nLogLevel info ssl_module:warn\n\nIt is also possible to change the level per directory:\n\nLogLevel info\n\n<Directory /usr/local/apache/htdocs/app>\n\nLogLevel debug\n\n</Files>\n\nPer directory loglevel configuration only affects messages that are logged after the request has been parsed and that are associated with the request. Log messages which are associated with the connection or the server are not affected.\n\nDirectiva LogLevelOverride ¶\n\nDescripciÃ³n:Override the verbosity of the ErrorLog for certain clients Sintaxis:LogLevel ipaddress[/prefixlen] [module:]level [module:level] ... Valor por defecto:unset Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache HTTP Server 2.5.0 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\nLogLevel\n\nDirectiva MaxKeepAliveRequests ¶\n\nDescripciÃ³n:Number of requests allowed on a persistent connection Sintaxis:MaxKeepAliveRequests number Valor por defecto:MaxKeepAliveRequests 100 Contexto:server config, virtual host Estado:Core MÃ³dulo:core\n\nThe MaxKeepAliveRequests directive limits the number of requests allowed per connection when KeepAlive is on. If it is set to 0, unlimited requests will be allowed. We recommend that this setting be kept to a high value for maximum server performance.\n\nFor example:\n\nMaxKeepAliveRequests 500\n\nDirectiva MaxRangeOverlaps ¶\n\nDescripciÃ³n:Number of overlapping ranges (eg: 100-200,150-300) allowed before returning the complete resource Sintaxis:MaxRangeOverlaps default | unlimited | none | number-of-ranges Valor por defecto:MaxRangeOverlaps 20 Contexto:server config, virtual host, directory Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache HTTP Server 2.3.15 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva MaxRangeReversals ¶\n\nDescripciÃ³n:Number of range reversals (eg: 100-200,50-70) allowed before returning the complete resource Sintaxis:MaxRangeReversals default | unlimited | none | number-of-ranges Valor por defecto:MaxRangeReversals 20 Contexto:server config, virtual host, directory Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache HTTP Server 2.3.15 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva MaxRanges ¶\n\nDescripciÃ³n:Number of ranges allowed before returning the complete resource Sintaxis:MaxRanges default | unlimited | none | number-of-ranges Valor por defecto:MaxRanges 200 Contexto:server config, virtual host, directory Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache HTTP Server 2.3.15 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva MergeSlashes ¶\n\nDescripciÃ³n:Controls whether the server merges consecutive slashes in URLs. Sintaxis:MergeSlashes ON|OFF Valor por defecto:MergeSlashes ON Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Added in 2.5.1\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva MergeTrailers ¶\n\nDescripciÃ³n:Determines whether trailers are merged into headers Sintaxis:MergeTrailers [on|off] Valor por defecto:MergeTrailers off Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:2.4.11 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva Mutex ¶\n\nDescripciÃ³n:Configures mutex mechanism and lock file directory for all or specified mutexes Sintaxis:Mutex mechanism [default|mutex-name] ... [OmitPID] Valor por defecto:Mutex default Contexto:server config Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache HTTP Server 2.3.4 and later\n\nThe Mutex directive sets the mechanism, and optionally the lock file location, that httpd and modules use to serialize access to resources. Specify default as the first argument to change the settings for all mutexes; specify a mutex name (see table below) as the first argument to override defaults only for that mutex.\n\nThe Mutex directive is typically used in the following exceptional situations:\n\nchange the mutex mechanism when the default mechanism selected by APR has a functional or performance problem\n\nchange the directory used by file-based mutexes when the default directory does not support locking\n\nSupported modules\n\nThis directive only configures mutexes which have been registered with the core server using the ap_mutex_register() API. All modules bundled with httpd support the Mutex directive, but third-party modules may not. Consult the documentation of the third-party module, which must indicate the mutex name(s) which can be configured if this directive is supported.\n\nThe following mutex mechanisms are available:\n\ndefault | yes\n\nThis selects the default locking implementation, as determined by APR. The default locking implementation can be displayed by running httpd with the -V option.\n\nnone | no\n\nThis effectively disables the mutex, and is only allowed for a mutex if the module indicates that it is a valid choice. Consult the module documentation for more information.\n\nposixsem\n\nThis is a mutex variant based on a Posix semaphore.\n\nWarning\n\nThe semaphore ownership is not recovered if a thread in the process holding the mutex segfaults, resulting in a hang of the web server.\n\nsysvsem\n\nThis is a mutex variant based on a SystemV IPC semaphore.\n\nWarning\n\nIt is possible to \"leak\" SysV semaphores if processes crash before the semaphore is removed.\n\nSecurity\n\nThe semaphore API allows for a denial of service attack by any CGIs running under the same uid as the webserver (i.e., all CGIs, unless you use something like suexec or cgiwrapper).\n\nsem\n\nThis selects the \"best\" available semaphore implementation, choosing between Posix and SystemV IPC semaphores, in that order.\n\npthread\n\nThis is a mutex variant based on cross-process Posix thread mutexes.\n\nWarning\n\nOn most systems, if a child process terminates abnormally while holding a mutex that uses this implementation, the server will deadlock and stop responding to requests. When this occurs, the server will require a manual restart to recover.\n\nSolaris is a notable exception as it provides a mechanism which usually allows the mutex to be recovered after a child process terminates abnormally while holding a mutex.\n\nIf your system implements the pthread_mutexattr_setrobust_np() function, you may be able to use the pthread option safely.\n\nfcntl:/path/to/mutex\n\nThis is a mutex variant where a physical (lock-)file and the fcntl() function are used as the mutex.\n\nWarning\n\nWhen multiple mutexes based on this mechanism are used within multi-threaded, multi-process environments, deadlock errors (EDEADLK) can be reported for valid mutex operations if fcntl() is not thread-aware, such as on Solaris.\n\nflock:/path/to/mutex\n\nThis is similar to the fcntl:/path/to/mutex method with the exception that the flock() function is used to provide file locking.\n\nfile:/path/to/mutex\n\nThis selects the \"best\" available file locking implementation, choosing between fcntl and flock, in that order.\n\nMost mechanisms are only available on selected platforms, where the underlying platform and APR support it. Mechanisms which aren't available on all platforms are posixsem, sysvsem, sem, pthread, fcntl, flock, and file.\n\nWith the file-based mechanisms fcntl and flock, the path, if provided, is a directory where the lock file will be created. The default directory is httpd's run-time file directory relative to ServerRoot. Always use a local disk filesystem for /path/to/mutex and never a directory residing on a NFS- or AFS-filesystem. The basename of the file will be the mutex type, an optional instance string provided by the module, and unless the OmitPID keyword is specified, the process id of the httpd parent process will be appended to to make the file name unique, avoiding conflicts when multiple httpd instances share a lock file directory. For example, if the mutex name is mpm-accept and the lock file directory is /var/httpd/locks, the lock file name for the httpd instance with parent process id 12345 would be /var/httpd/locks/mpm-accept.12345.\n\nSecurity\n\nIt is best to avoid putting mutex files in a world-writable directory such as /var/tmp because someone could create a denial of service attack and prevent the server from starting by creating a lockfile with the same name as the one the server will try to create.\n\nThe following table documents the names of mutexes used by httpd and bundled modules.\n\nMutex name Module(s) Protected resource mpm-accept prefork and worker MPMs incoming connections, to avoid the thundering herd problem; for more information, refer to the performance tuning documentation authdigest-client mod_auth_digest client list in shared memory authdigest-opaque mod_auth_digest counter in shared memory ldap-cache mod_ldap LDAP result cache rewrite-map mod_rewrite communication with external mapping programs, to avoid intermixed I/O from multiple requests ssl-cache mod_ssl SSL session cache ssl-stapling mod_ssl OCSP stapling response cache watchdog-callback mod_watchdog callback function of a particular client module\n\nThe OmitPID keyword suppresses the addition of the httpd parent process id from the lock file name.\n\nIn the following example, the mutex mechanism for the MPM accept mutex will be changed from the compiled-in default to fcntl, with the associated lock file created in directory /var/httpd/locks. The mutex mechanism for all other mutexes will be changed from the compiled-in default to sysvsem.\n\nMutex default sysvsem\n\nMutex mpm-accept fcntl:/var/httpd/locks\n\nDirectiva NameVirtualHost ¶\n\nDescripciÃ³n:Designates an IP address for name-virtual hosting Sintaxis:NameVirtualHost addr[:port] Contexto:server config Estado:Core MÃ³dulo:core\n\nA single NameVirtualHost directive identifies a set of identical virtual hosts on which the server will further select from on the basis of the hostname requested by the client. The NameVirtualHost directive is a required directive if you want to configure name-based virtual hosts.\n\nThis directive, and the corresponding VirtualHost, must be qualified with a port number if the server supports both HTTP and HTTPS connections.\n\nAlthough addr can be a hostname, it is recommended that you always use an IP address or a wildcard. A wildcard NameVirtualHost matches only virtualhosts that also have a literal wildcard as their argument.\n\nIn cases where a firewall or other proxy receives the requests and forwards them on a different IP address to the server, you must specify the IP address of the physical interface on the machine which will be servicing the requests.\n\nIn the example below, requests received on interface 192.0.2.1 and port 80 will only select among the first two virtual hosts. Requests received on port 80 on any other interface will only select among the third and fourth virtual hosts. In the common case where the interface isn't important to the mapping, only the \"*:80\" NameVirtualHost and VirtualHost directives are necessary.\n\nNameVirtualHost 192.0.2.1:80\n\nNameVirtualHost *:80\n\n<VirtualHost 192.0.2.1:80>\n\nServerName namebased-a.example.com\n\n</VirtualHost>\n\n<VirtualHost 192.0.2.1:80>\n\nServername namebased-b.example.com\n\n</VirtualHost>\n\n<VirtualHost *:80>\n\nServerName namebased-c.example.com\n\n</VirtualHost>\n\n<VirtualHost *:80>\n\nServerName namebased-d.example.com\n\n</VirtualHost>\n\nIf no matching virtual host is found, then the first listed virtual host that matches the IP address and port will be used.\n\nIPv6 addresses must be enclosed in square brackets, as shown in the following example:\n\nNameVirtualHost [2001:db8::a00:20ff:fea7:ccea]:8080\n\nArgument to <VirtualHost> directive\n\nNote that the argument to the <VirtualHost> directive must exactly match the argument to the NameVirtualHost directive.\n\nNameVirtualHost 192.0.2.2:80\n\n<VirtualHost 192.0.2.2:80>\n\n# ...\n\n</VirtualHost>\n\nConsulte tambiÃ©n\n\nVirtual Hosts documentation\n\nDirectiva Options ¶\n\nDescripciÃ³n:Configures what features are available in a particular directory Sintaxis:Options [+|-]option [[+|-]option] ... Valor por defecto:Options All Contexto:server config, virtual host, directory, .htaccess Anula:Options Estado:Core MÃ³dulo:core\n\nThe Options directive controls which server features are available in a particular directory.\n\noption can be set to None, in which case none of the extra features are enabled, or one or more of the following:\n\nAll\n\nAll options except for MultiViews. This is the default setting.\n\nExecCGI\n\nExecution of CGI scripts using mod_cgi is permitted.\n\nFollowSymLinks\n\nThe server will follow symbolic links in this directory.\n\nEven though the server follows the symlink it does not change the pathname used to match against <Directory> sections.\n\nNote also, that this option gets ignored if set inside a <Location> section.\n\nOmitting this option should not be considered a security restriction, since symlink testing is subject to race conditions that make it circumventable.\n\nIncludes\n\nServer-side includes provided by mod_include are permitted.\n\nIncludesNOEXEC\n\nServer-side includes are permitted, but the #exec cmd and #exec cgi are disabled. It is still possible to #include virtual CGI scripts from ScriptAliased directories.\n\nIndexes\n\nIf a URL which maps to a directory is requested, and there is no DirectoryIndex (e.g., index.html) in that directory, then mod_autoindex will return a formatted listing of the directory.\n\nMultiViews\n\nContent negotiated \"MultiViews\" are allowed using mod_negotiation.\n\nNote\n\nThis option gets ignored if set anywhere other than <Directory>, as mod_negotiation needs real resources to compare against and evaluate from.\n\nSymLinksIfOwnerMatch\n\nThe server will only follow symbolic links for which the target file or directory is owned by the same user id as the link.\n\nNote\n\nThis option gets ignored if set inside a <Location> section.\n\nThis option should not be considered a security restriction, since symlink testing is subject to race conditions that make it circumventable.\n\nNormally, if multiple Options could apply to a directory, then the most specific one is used and others are ignored; the options are not merged. (See how sections are merged.) However if all the options on the Options directive are preceded by a + or - symbol, the options are merged. Any options preceded by a + are added to the options currently in force, and any options preceded by a - are removed from the options currently in force.\n\nWarning\n\nMixing Options with a + or - with those without is not valid syntax, and is likely to cause unexpected results.\n\nFor example, without any + and - symbols:\n\n<Directory /web/docs>\n\nOptions Indexes FollowSymLinks\n\n</Directory>\n\n<Directory /web/docs/spec>\n\nOptions Includes\n\n</Directory>\n\nthen only Includes will be set for the /web/docs/spec directory. However if the second Options directive uses the + and - symbols:\n\n<Directory /web/docs>\n\nOptions Indexes FollowSymLinks\n\n</Directory>\n\n<Directory /web/docs/spec>\n\nOptions +Includes -Indexes\n\n</Directory>\n\nthen the options FollowSymLinks and Includes are set for the /web/docs/spec directory.\n\nNote\n\nUsing -IncludesNOEXEC or -Includes disables server-side includes completely regardless of the previous setting.\n\nThe default in the absence of any other settings is All.\n\nDirectiva Protocol ¶\n\nDescripciÃ³n:Protocol for a listening socket Sintaxis:Protocol protocol Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache 2.1.5 and later. On Windows from Apache 2.3.3 and later.\n\nThis directive specifies the protocol used for a specific listening socket. The protocol is used to determine which module should handle a request, and to apply protocol specific optimizations with the AcceptFilter directive.\n\nYou only need to set the protocol if you are running on non-standard ports, otherwise http is assumed for port 80 and https for port 443.\n\nFor example, if you are running https on a non-standard port, specify the protocol explicitly:\n\nProtocol https\n\nYou can also specify the protocol using the Listen directive.\n\nConsulte tambiÃ©n\n\nAcceptFilter\n\nListen\n\nDirectiva Protocols ¶\n\nDescripciÃ³n:Protocols available for a server/virtual host Sintaxis:Protocols protocol ... Valor por defecto:Protocols http/1.1 Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Only available from Apache 2.4.17 and later.\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\nProtocolsHonorOrder\n\nDirectiva ProtocolsHonorOrder ¶\n\nDescripciÃ³n:Determines if order of Protocols determines precedence during negotiation Sintaxis:ProtocolsHonorOrder On|Off Valor por defecto:ProtocolsHonorOrder On Contexto:server config, virtual host Estado:Core MÃ³dulo:core Compatibilidad:Only available from Apache 2.4.17 and later.\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\nProtocols\n\nDirectiva QualifyRedirectURL ¶\n\nDescripciÃ³n:Controls whether the REDIRECT_URL environment variable is fully qualified Sintaxis:QualifyRedirectURL On|Off Valor por defecto:QualifyRedirectURL Off Contexto:server config, virtual host, directory Anula:FileInfo Estado:Core MÃ³dulo:core Compatibilidad:Directive supported in 2.4.18 and later. 2.4.17 acted as if 'QualifyRedirectURL On' was configured.\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva ReadBufferSize ¶\n\nDescripciÃ³n:Size of the buffers used to read data Sintaxis:ReadBufferSize bytes Valor por defecto:ReadBufferSize 8192 Contexto:server config, virtual host, directory Estado:Core MÃ³dulo:core Compatibilidad:2.5 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva RegexDefaultOptions ¶\n\nDescripciÃ³n:Allow to configure global/default options for regexes Sintaxis:RegexDefaultOptions [none] [+|-]option [[+|-]option] ... Valor por defecto:RegexDefaultOptions DOTALL DOLLAR_ENDONLY Contexto:server config Estado:Core MÃ³dulo:core Compatibilidad:Only available from Apache 2.4.30 and later.\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nDirectiva RegisterHttpMethod ¶\n\nDescripciÃ³n:Register non-standard HTTP methods Sintaxis:RegisterHttpMethod method [method [...]] Contexto:server config Estado:Core MÃ³dulo:core Compatibilidad:Available in Apache HTTP Server 2.4.24 and later\n\nThe documentation for this directive has not been translated yet. Please have a look at the English version.\n\nConsulte tambiÃ©n\n\nHTTPProtocolOptions\n\nAllowMethods\n\nDirectiva RLimitCPU ¶\n\nDescripciÃ³n:Limits the CPU consumption of processes launched by Apache httpd children Sintaxis:RLimitCPU seconds|max [seconds|max] Valor por defecto:Unset; uses operating system defaults Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core\n\nTakes 1 or 2 parameters. The first parameter sets the soft resource limit for all processes and the second parameter sets the maximum resource limit. Either parameter can be a number, or max to indicate to the server that the limit should be set to the maximum allowed by the operating system configuration. Raising the maximum resource limit requires that the server is running as root, or in the initial startup phase.\n\nThis applies to processes forked off from Apache httpd children servicing requests, not the Apache httpd children themselves. This includes CGI scripts and SSI exec commands, but not any processes forked off from the Apache httpd parent such as piped logs.\n\nCPU resource limits are expressed in seconds per process.\n\nConsulte tambiÃ©n\n\nRLimitMEM\n\nRLimitNPROC\n\nDirectiva RLimitMEM ¶\n\nDescripciÃ³n:Limits the memory consumption of processes launched by Apache httpd children Sintaxis:RLimitMEM bytes|max [bytes|max] Valor por defecto:Unset; uses operating system defaults Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core\n\nTakes 1 or 2 parameters. The first parameter sets the soft resource limit for all processes and the second parameter sets the maximum resource limit. Either parameter can be a number, or max to indicate to the server that the limit should be set to the maximum allowed by the operating system configuration. Raising the maximum resource limit requires that the server is running as root, or in the initial startup phase.\n\nThis applies to processes forked off from Apache httpd children servicing requests, not the Apache httpd children themselves. This includes CGI scripts and SSI exec commands, but not any processes forked off from the Apache httpd parent such as piped logs.\n\nMemory resource limits are expressed in bytes per process.\n\nConsulte tambiÃ©n\n\nRLimitCPU\n\nRLimitNPROC\n\nDirectiva RLimitNPROC ¶\n\nDescripciÃ³n:Limits the number of processes that can be launched by processes launched by Apache httpd children Sintaxis:RLimitNPROC number|max [number|max] Valor por defecto:Unset; uses operating system defaults Contexto:server config, virtual host, directory, .htaccess Anula:All Estado:Core MÃ³dulo:core\n\nTakes 1 or 2 parameters. The first parameter sets the soft resource limit for all processes and the second parameter sets the maximum resource limit. Either parameter can be a number, or max to indicate to the server that the limit should be set to the maximum allowed by the operating system configuration. Raising the maximum resource limit requires that the server is running as root, or in the initial startup phase.\n\nThis applies to processes forked off from Apache httpd children servicing requests, not the Apache httpd children themselves. This includes CGI scripts and SSI exec commands, but not any processes forked off from the Apache httpd parent such as piped logs.\n\nProcess limits control the number of processes per user.\n\nNote\n\nIf CGI processes are not running under user ids other than the web server user id, this directive will limit the number of processes that the server itself can create. Evidence of this situation will be indicated by cannot fork messages in the error_log.\n\nConsulte tambiÃ©n\n\nRLimitMEM\n\nRLimitCPU\n\nDirectiva ScriptInterpreterSource ¶\n\nDescripciÃ³n:Technique for locating the interpreter for CGI scripts Sintaxis:ScriptInterpreterSource Registry|Registry-Strict|Script Valor por defecto:ScriptInterpreterSource Script Contexto:server config, virtual host, directory, .htaccess Anula:FileInfo Estado:Core MÃ³d"
    }
}