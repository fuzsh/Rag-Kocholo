{
    "id": "dbpedia_7489_3",
    "rank": 92,
    "data": {
        "url": "https://embeddedcomputing.com/technology/processing/interface-io/the-road-to-embedded-world-23-berlin-germany-sixtyfps",
        "read_more_link": "",
        "language": "en",
        "title": "The Road to embedded world ’23: Berlin, Germany, SixtyFPS",
        "top_image": "https://embeddedcomputing.com/ecd-favicon-browser-32x32.png",
        "meta_img": "https://embeddedcomputing.com/ecd-favicon-browser-32x32.png",
        "images": [
            "https://embeddedcomputing.com/assets/img/ECDlogo_whiteREV2016@2x.png",
            "https://embeddedcomputing.com/assets/img/ECDlogo_whiteREV2016@2x.png",
            "https://data.embeddedcomputing.com/uploads/articles/authorfiles/images/Image.jpeg",
            "https://embeddedcomputing.com/assets/img/authors/profile-image.jpg",
            "https://data.embeddedcomputing.com/uploads/resize/320/200/external/data.embeddedcomputing.com/uploads/articles/primary_images/1719328047.png",
            "https://data.embeddedcomputing.com/uploads/resize/320/200/external/data.embeddedcomputing.com/uploads/articles/primary_images/1721829451.png",
            "https://data.embeddedcomputing.com/uploads/resize/320/200/external/data.embeddedcomputing.com/uploads/articles/primary_images/1724252395.png",
            "https://data.embeddedcomputing.com/uploads/resize/320/200/external/data.embeddedcomputing.com/uploads/articles/primary_images/1724421256.png"
        ],
        "movies": [
            "https://www.youtube.com/embed/ideJZaSLA_Y",
            "https://www.youtube.com/embed/dkBwNocItGs"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "OpenSystems Media"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Join SixtyFPS at its booth (hall 4, booth 306) while visiting embedded world 2023. The booth will hold experts from SixtyFPS as they demonstrate&nbsp;its Slint, a commercial-grade Rust-based cross-platform toolkit to efficiently develop fluid graphical user interfaces for embedded devices and desktop applications. The toolkit supports multiple programming languages, such as Rust, C++, and JavaScript.&nbsp;",
        "meta_lang": "en",
        "meta_favicon": "/ecd-favicon-safari-180x180.png",
        "meta_site_name": "Embedded Computing Design",
        "canonical_link": "https://embeddedcomputing.com/technology/processing/interface-io/the-road-to-embedded-world-23-berlin-germany-sixtyfps",
        "text": "News\n\nJoin SixtyFPS at its booth (hall 4, booth 306) while visiting embedded world 2023. The booth will hold experts from SixtyFPS as they demonstrate its Slint, a commercial-grade Rust-based cross-platform toolkit to efficiently develop fluid graphical user interfaces for embedded devices and desktop applications. The toolkit supports multiple programming languages, such as Rust, C++, and JavaScript.\n\nRust, as a “memory-safe” language, produces secure code and, crucially, doesn't worsen performance to achieve it. The language has been steadily gaining adherents and is now at a turning point with it being an officially recognized and accepted language in Linux. With this, Rust could very well become the dominant programming language replacing C/C++ in the embedded systems area.\n\nThe ubiquity of smartphones and the decreasing cost of TFT screens have impacted how we interface with embedded devices. TFT screens are being increasingly used on embedded devices to provide visual feedback as well as offering a touch-based system to control the device.\n\nWith a commercial-grade Rust-based user interface toolkit, manufacturers can significantly reduce software risks and security vulnerabilities without compromising on the end-user experience.\n\n“Back in summer 2021, when we evaluated UI frameworks for our embedded devices, we were looking for performance, flexibility, and cost efficiency. Many of the established UI frameworks have limitations on flexibility and comes often at a high price. Slint came in as a fresh contender, and after a thorough evaluation, we decided to become an early adopter, a decision that we can now confirm as the right one. Slint provides us with the flexibility and features we need; the performance is good, and the service and support has been outstanding.” -- Lead Customer manufacturing door control panels\n\nSlint leverages declarative programming style to allow users to define the user interface in a markup language which can be integrated into an existing code base written in any programming language. Rust, C++, and JavaScript are currently supported and integration into other programming languages are planned.\n\nTo instantaneously show design changes on development platform, users are granted access to “Live Preview” as well as “Hot Reload” giving the ability to update design on target hardware without full compilation of the program. It allows faster validation of user interface that are built with Slint.\n\nCompared to other Rust-based user interface toolkits, Slint’s focus on embedded and desktop platforms makes it a scalable solution. Being able to run on devices with a few KBs of RAM to rendering complex User Interface on desktop. (https://youtu.be/dkBwNocItGs)\n\nSlint is developed, together with the community, in the open on GitHub -https://github.com/slint-ui/slint/ and benefits from reviews, contributions, and testing to achieve an overall high software quality.\n\nThe product roadmap is publicly available in the GitHub repository - https://github.com/slint-ui/slint/issues. Feature development is prioritized based on customer requests and community feedback."
    }
}