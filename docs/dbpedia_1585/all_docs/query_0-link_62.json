{
    "id": "dbpedia_1585_0",
    "rank": 62,
    "data": {
        "url": "https://www.easyagile.com/agile-terminology/",
        "read_more_link": "",
        "language": "en",
        "title": "Agile Terminology",
        "top_image": "https://cdn.sanity.io/images/w4zc2lav/production/82d3af761de6a6098ce94696217e9919c755d641-1920x1080.png",
        "meta_img": "https://cdn.sanity.io/images/w4zc2lav/production/82d3af761de6a6098ce94696217e9919c755d641-1920x1080.png",
        "images": [
            "https://cdn.sanity.io/images/w4zc2lav/production/12909be4febfef8a81ca657f9980ef2ff17faeba-352x352.png?w=352&h=352&auto=format",
            "https://cdn.sanity.io/images/w4zc2lav/production/12909be4febfef8a81ca657f9980ef2ff17faeba-352x352.png?w=352&h=352&auto=format"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "The following agile terminology will help deepen your understanding of the agile software development methodology",
        "meta_lang": "en",
        "meta_favicon": "/favicon-32x32.png?v=fbc7fe5c172b670265aa70a1fac65a3c",
        "meta_site_name": "Easy Agile",
        "canonical_link": "https://easyagile.com/agile-terminology/",
        "text": "A\n\nAgile\n\nAgile Coach\n\nAgile Manifesto\n\nAgile Mindset\n\nAgile Team\n\nAll-hands\n\nB\n\nBacklog Refinement\n\nBurndown Chart\n\nC\n\nCross-functional Team\n\nD\n\nDaily Stand-up\n\nDefinition of Done\n\nE\n\nEpic\n\nEstimation\n\nExtreme Programming\n\nK\n\nKanban\n\nKanban Board\n\nKnowledge Worker\n\nL\n\nLean Agile\n\nP\n\nPareto Principle\n\nPartner\n\nPersonas\n\nPlanning Poker\n\nProduct Backlog\n\nProduct Owner\n\nProgram\n\nProgram Board\n\nProgram Increment\n\nProgram Increment Objectives\n\nR\n\nRetrospective or Retro\n\nS\n\nSAFe\n\nScrum\n\nScrum Master\n\nSpike\n\nSprint\n\nSprint Planning\n\nSprint Review\n\nSprint Velocity\n\nStory Points\n\nSystem 1\n\nSystem 2\n\nT\n\nTable-stakes\n\nU\n\nUser Story\n\nUser Story Mapping\n\nA\n\nAgile\n\nA software development methodology. It focuses on flexibility, collaboration between team members, and delivering consistent value to stakeholders. With each iteration comes new, actionable insights into what’s working, what isn’t, and what needs to change. It’s a multidimensional way of working that removes the bottlenecks inherent in traditional project management.\n\nRead a beginner's guide to agile methodology.\n\nAgile Coach\n\nAn agile coach provides professional coaching and know-how by helping organizations understand the agile methodology and its benefits well enough to implement it at scale across cross-functional teams.\n\nFind out how to become (and remain) a great agile coach.\n\nAgile Manifesto\n\nA set of values and principles that drive improvement in software development processes. These values are Individuals and interactions over processes and tools, Working software over comprehensive documentation, Customer collaboration over contract negotiation, and Responding to change over following a plan.\n\nFind out what the 12 agile manifesto principles are.\n\nAgile Mindset\n\nUnderstanding and living the four core values; respect people, optimize flow, encourage innovation, and relentlessly improve.\n\nStart thinking with an agile mindset now.\n\nAgile Team\n\nIn each development cycle — or sprint — of an agile project, each agile team iterates the product according to customer feedback. That increases the speed of product development and the efficiency of that process. And in each iteration, the team releases or launches a new or improved product functionality.\n\nFind out the three key roles of an Agile team.\n\nAll-hands\n\nA meeting with everyone (esp. including distributed team members) to understand how the whole team is going.\n\nB\n\nBacklog Refinement\n\nIncludes keeping the backlog up-to-date and complete, splitting broad user stories such as tasks or bugs, adding detail to them to improve comprehension, adding or reviewing estimates to issues, and ordering backlog issues to deliver high-priority ones.\n\nFollow this essential checklist for effective backlog refinement (and what to avoid).\n\nBurndown Chart\n\nA visualization of how much work is left to do and how much time there is to complete it. Visible to everyone. This graphical representation predicts how much work the team plans to complete within the allotted time.\n\nFind out how you can use burndown charts for agile product development.\n\nC\n\nCross-functional Team\n\nThe team is made up of people from across the business with different expertise and skill sets. Together the team works toward a common goal.\n\nIs a cross-functional team the right fit for your team?\n\nD\n\nDaily Stand-up\n\nA short meeting to briefly hear from each person on the team what they've been doing, what they're planning to do, and if anything is blocking their work.\n\nHow do I run stand-up?\n\nDefinition of Done\n\nYou need to clearly define the sprint's goals and what it means to be done. How will the team know if they achieved the desired outcomes? What does “done” look like? Does everyone agree on this definition for every given task and the overall goals of the sprint?\n\nHow does having a definition of done help my sprint?\n\nE\n\nEpic\n\nAn epic is a bigger, overarching story or step in the journey that contains user stories.\n\nFind out how epics play an important role in user story mapping.\n\nEstimation\n\nHaving an idea of how much work it will take to finish each user story.\n\n5 agile estimation tips to help with backlog prioritization.\n\nExtreme Programming\n\nIs an agile approach centered around improving software quality and responsiveness while evolving with customer requirements.\n\nRead more about extreme programming here.\n\nK\n\nKanban\n\nAn agile workflow where you visually organize tasks that ensure work items move forward while allowing changes and adjustments to be made along the way.\n\nWhat's the difference between Kanban and Scrum?\n\nKanban Board\n\nIn its simplest form, a Kanban board has three columns; To-Do, Doing, and Done. Work moves from one section to the next on a physical or digital board, depending on how far along the specific task is.\n\nWhere can I find a digital kanban board?\n\nKnowledge Worker\n\nA person whose job involves handling or using information; typically, someone whose job is to sit in front of a computer.\n\nL\n\nLean Agile\n\nAn agile methodology that, in basic terms, is quite simple: improve efficiency by eliminating waste. Lean agile strives to reduce all tasks and activities that don’t provide real value.\n\nWhat are the 5 Lean Principles?\n\nP\n\nPareto Principle\n\nA principle that observes that 80% of outcomes are the result of only 20% of actions. A reason to focus on higher-impact work.\n\nPartner\n\nCompanies that work with us to sell and implement our solutions for customers. You can find our Easy Agile Partners here.\n\nPersonas\n\nFictional generalizations of your most valuable customers. They help teams understand their customers by bringing together demographic information like age, gender, location, and income, alongside psychographic information like interests, frustrations, and personal or professional motivations.\n\nHow to create a persona in 9 simple steps.\n\nPlanning Poker\n\nIs an accurate, collaborative, team-building method of estimating the work for each user story.\n\nFind out how to play planning poker with your team.\n\nProduct Backlog\n\nA product backlog is a prioritized and ordered list that represents the work to be completed by a development team.\n\nFind out the 4 characteristics of a good product backlog.\n\nProduct Owner\n\nThe agile team member with the deepest knowledge of the product. When something isn't right with the product, they should know that quickly. They deeply understand how the product contributes to the company's vision and goals.\n\nDiscover what agile events are especially important for a Product Owner.\n\nProgram\n\nA long-term theme of work for several teams towards a business objective. A part of the SAFe framework.\n\nI want to know more about what a program is.\n\nProgram Board\n\nA visual summary of features or goals, cross-team dependencies, and other factors that impact their delivery.\n\nHow does the program board help with the planning process?\n\nProgram Increment\n\nA meta-work cycle composed of several teams working over several sprints to develop a set of work or features within a program; characterized by a PI planning session at the beginning. A part of the SAFe framework.\n\nHow to do program increment planning?\n\nPrograms Increment Objectives\n\nThey link the scheduled features to broader business objectives. This helps align work that needs to be done with broader business goals. They are then broken down into committed and uncommitted objectives.\n\nHow to reap the benefits of smart Program Increment Objectives\n\nR\n\nRetrospective or Retro\n\nA meeting at the end of a work cycle (such as a sprint) to review the work process and consider improvements.\n\nHow do I lead a retrospective that creates constant improvement?\n\nS\n\nSAFe\n\nSAFe stands for scaled agile framework enterprise. As agile focuses on small-scale continuous improvement, SAFe uses its philosophy at an enterprise level. SAFe increases business agility, resulting in flexible and responsive teams for larger organizations.\n\nFind out how SAFe agile increases enterprise performance.\n\nScrum\n\nAn Agile framework characterized by set-length work cycles (sprints) and meetings at the beginning and end of cycles to plan and review work.\n\nWhat are the ceremonies involved in the Scrum framework?\n\nScrum Master\n\nThey guide the team through the Scrum process. They facilitate the process, helping the team to master the framework and improve from one sprint to the next.\n\nFind out how to become a successful scrum master.\n\nSpike\n\nTo spend a fixed period investigating the viability of a task or feature; prevents tasks with a lot of unknowns expanding to take more time than they're worth.\n\nSprint\n\nA work cycle in Scrum-style Agile typically one or two weeks of work.\n\nWhat is the difference between a sprint and a version?\n\nSprint Backlog\n\nA sprint backlog consists of the items that must be completed to reach the sprint goal.\n\nWhat's the difference between a sprint backlog and a product backlog?\n\nSprint Planning\n\nAn agile ceremony designed to align the team around a goal for the next sprint and the specific set of backlog items that will make that sprint goal a reality.\n\nHow do I run sprint planning?\n\nSprint Review\n\nTime to showcase the team’s completed work and gather feedback from stakeholders. A variety of attendees from outside the team offer valuable insights from different viewpoints. This event also helps build trust with both external and internal stakeholders.\n\nHow do I run a sprint review?\n\nSprint Velocity\n\nA development team's velocity is the amount of work completed in each sprint. It can be used as a measure of how long it will take the team to work through its backlog.\n\nFind out how Lyft boosted velocity by 20%.\n\nStory Points\n\nA measure of the estimated difficulty or duration of a task or ticket.\n\nIt is an arbitrary scale that a team develops over time as story points aren't directly proportional to time in hours or a 1-10 scale: story points estimate tasks relative to other estimated tasks.\n\nFind out why user story points matter.\n\nSystem 1\n\nTo propose the first solution that comes to mind; the immediate or instinctive answer (Daniel Kahneman, Thinking Fast and Slow, 2011).\n\nSystem 2\n\nTo consider a problem more deeply/thoroughly (Daniel Kahneman, Thinking Fast and Slow, 2011).\n\nFind out how the Easy Agile Team engages system 2\n\nT\n\nTable-stakes\n\nThe basic, expected features or requirements of a product. For example, a social networking app where you couldn't directly message other people would be weird.\n\nU\n\nUser Story\n\nA user story is a goal or outcome that the user or customer wants to achieve. Usually, you’ll write user stories like this:\n\n“As a [persona type], I want to [action] so that [benefit].”\n\nA user story should be the smallest unit of work that can deliver value back to the customer.\n\nHow do I write a good user story?\n\nUser Story Mapping\n\nA useful way to organize and prioritize your user stories so that you can schedule your work and design your releases."
    }
}