{
    "id": "dbpedia_1585_3",
    "rank": 83,
    "data": {
        "url": "https://aws.amazon.com/compare/the-difference-between-agile-devops/",
        "read_more_link": "",
        "language": "en",
        "title": "Difference Between Software Development Practices",
        "top_image": "https://a0.awsstatic.com/libra-css/images/logos/aws_logo_smile_1200x630.png",
        "meta_img": "https://a0.awsstatic.com/libra-css/images/logos/aws_logo_smile_1200x630.png",
        "images": [
            "https://docs.aws.amazon.com/images/prescriptive-guidance/latest/strategy-migration-connect/images/cm.png",
            "https://d2908q01vomqb2.cloudfront.net/77de68daecd823babbb58edb1c8e14d7106e83bb/2018/05/24/SignalFx-2.jpg",
            "https://d1.awsstatic.com/webteam/product-pages/Product-Page_Standard-Icons_03_Start-Building_SqInk.6a1ef4429a6604cda9b0857084aa13e2ee4eebca.png",
            "https://d1.awsstatic.com/webteam/product-pages/Product-Page_Standard-Icons_01_Product-Features_SqInk.a8d5666758afc5121b4eb818ae18126031c4b61e.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "What's the Difference of Agile and DevOps. Comparing similarities and differences between Agile and DevOps with AWS.",
        "meta_lang": "en",
        "meta_favicon": "https://a0.awsstatic.com/libra-css/images/site/fav/favicon.ico",
        "meta_site_name": "Amazon Web Services, Inc.",
        "canonical_link": "https://aws.amazon.com/compare/the-difference-between-agile-devops/",
        "text": "The agile methodology emerged in 2000 as a response to the limitations of traditional, more rigid software development methodologies. The “Manifesto for Agile Software Development,” published in 2001, outlined its core values, principles, and practices. Agile practices focus on customer collaboration, rapid change, continuous delivery, and iterative development.\n\nDevOps originated from agile practices and developed because of a need for more synergy between operations and development teams. Patrick Debois coined DevOps in 2009. Debois built upon the principles of agile practices but expanded them to include operations and automation. DevOps supports agile practices by providing additional areas of focus.\n\nNext, we give some more similarities between DevOps and agile practices.\n\nObjectives\n\nBoth DevOps and agile methodologies focus on improving the software development and delivery process. They also promote collaboration, efficiency, and continuous improvement. They both use cross-functional collaboration to provide feedback loops and continuously improve work. Both use lean principles to streamline and maximize efficiency.\n\nDevOps and agile practices encourage teams to implement improvements, collaborate, and reduce bottlenecks. This allows both methodologies to speed up software development while maintaining quality.\n\nQuality assurance\n\nAgile and DevOps methodologies both place emphasis on testing to ensure the reliability of software. Both focus on testing code changes to detect issues as early as possible. Unit tests, functional tests, performance tests, acceptance testing, and integration testing are all common.\n\nBy focusing on frequent code testing throughout the development process, agile and DevOps teams can deliver reliable, high-quality software.\n\nContinuous improvement\n\nAgile practices and DevOps promote a culture of learning, growth, enhanced processes, and improvement. Teams make incremental changes iteratively to improve a product.\n\nThe agile methodology uses Scrum practices like retrospectives to help foster a culture of improvement. For instance, after each iteration, a team reflects on what they did well and what they could improve. They identify future action items to improve productivity, customer satisfaction, and collaboration.\n\nSimilarly, DevOps teams use post-incident reviews and monitor data to find areas of improvement.\n\nRead about Scrum »\n\nDevOps and agile practices are complementary approaches in the software delivery lifecycle. They meet customer needs differently by focusing on distinct principles and practices.\n\nPurpose\n\nThe agile methodology focuses on incremental software development. It encourages teams to collaborate with customers, deliver value, and respond quickly to change. Teams use agile practices to efficiently respond to evolving customer needs and market demands in software development.\n\nDevOps includes operations teams in the agile software development culture. The role of operations is to deploy and deliver the software to end users. If software changes frequently, the operations team also has to keep up. They have to manage software environment configuration changes, which becomes increasingly challenging as the application scales.\n\nDevOps breaks down silos and focuses on collaboration between the development and operations team. Various tools and technologies increase flexibility and efficiency in deploying software.\n\nPrinciples\n\nThese are the four main principles, or priorities, of agile methodology:\n\nIndividuals and interactions over processes and tools\n\nWorking software over comprehensive documentation\n\nCustomer collaboration over contract negotiation\n\nReactive change over rigidly following a plan\n\nAgile teams embrace change and provide incremental and iterative development throughout a project lifecycle. They involve customers early on and throughout the process, which helps ensure that teams adjust to client requests.\n\nIn contrast, DevOps has five main principles, summarized by the acronym CALMS:\n\nCollaboration between development and operations teams for shared responsibility\n\nAutomation tools and techniques to automate repetitive tasks, reduce errors, and increase efficiency\n\nLean strategy to eliminate any processes that increase time to delivery\n\nMeasurement of performance by collecting and analyzing data\n\nSharing information and learnings across teams to improve overall performance and innovation\n\nPractices\n\nThe agile methodology splits tasks into smaller units called stories. An agile team will work in short iteration periods called sprints. Each sprint creates a new, shippable increment of the software or product. Team members participate in daily stand-up meetings to coordinate. Similarly, the agile approach uses a range of regular retrospectives to improve and find efficiencies.\n\nDevOps automates the process of building, testing, and deploying as much as possible. This supports the frequent release of new software versions. Continuous integration merges code into a shared repository, which helps ensure developers regularly test code. Continuous delivery uses deployment pipelines to deploy to several environments at once.\n\nDevOps also uses infrastructure as code (IaC), so teams can handle management and provisioning as software development tasks. By monitoring infrastructure and applications, developers find potential issues and troubleshoot for improvement.\n\nSkills\n\nAgile team members need to be adaptable, flexible, and good communicators. Most team members also have cross-functional skills and can work across several domains to complete a product. Communication is vital, as agile teams must give and respond to feedback effectively.\n\nDevOps teams need skills like security awareness, monitoring, automation knowledge, and operations skills. DevOps team members write IaC scripts and develop tools that monitor the delivery pipeline. Maintaining automated workflows is vital for DevOps.\n\nDevOps teams need a more technical understanding of software deployment automation. Agile teams include non-technical members like business analysts and project managers."
    }
}