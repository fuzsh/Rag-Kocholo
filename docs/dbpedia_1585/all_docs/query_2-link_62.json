{
    "id": "dbpedia_1585_2",
    "rank": 62,
    "data": {
        "url": "https://businessmap.io/agile/agile-at-scale/agile-teams",
        "read_more_link": "",
        "language": "en",
        "title": "What Is an Agile Team? Structure and Principles",
        "top_image": "https://businessmap.io/wp-content/uploads/website-images/Agile/Self-organizing-teams.png",
        "meta_img": "https://businessmap.io/wp-content/uploads/website-images/Agile/Self-organizing-teams.png",
        "images": [
            "https://businessmap.io/images/header/businessmap.svg",
            "https://businessmap.io/images/header/businessmap-white.svg",
            "https://businessmap.io/images/about/twitter_gray.svg",
            "https://businessmap.io/images/about/linkedin_gray.svg",
            "https://businessmap.io/images/about/facebook_gray.svg",
            "https://businessmap.io/wp-content/uploads/website-images/Agile/Self-organizing-teams.png",
            "https://businessmap.io/wp-content/uploads/website-images/Agile/transparency-across-all-projects.png",
            "https://businessmap.io/wp-content/uploads/website-images/Agile/Multile-workflows-services-on-a-Kanban-board.png",
            "https://businessmap.io/wp-content/uploads/website-images/Agile/Swimlanes-on-a-kanban-board-for-risk-management.png",
            "https://businessmap.io/wp-content/uploads/website-images/Agile/connectedness-kanban.png",
            "https://businessmap.io/attachments/BlogAuthor/23/main/iva-krasteva_thumb-main.png",
            "https://businessmap.io/images/about/twitter_gray.svg",
            "https://businessmap.io/images/about/linkedin_gray.svg",
            "https://businessmap.io/images/about/facebook_gray.svg",
            "https://businessmap.io/images/resources/grid6.png",
            "https://businessmap.io/images/resources/blue-arrow.svg",
            "https://businessmap.io/images/resources/grid6.png",
            "https://businessmap.io/images/resources/blue-arrow.svg",
            "https://businessmap.io/images/header/businessmap.svg",
            "https://businessmap.io/images/home/pixel-bg.png",
            "https://businessmap.io/images/home/pixel-bg.png",
            "https://businessmap.io/images/social/linkedin.png",
            "https://businessmap.io/images/social/facebook.png",
            "https://businessmap.io/images/social/youtube.png",
            "https://businessmap.io/images/social/instagram.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "agile teams",
            "agile team structure"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "An Agile team is a cross-functional group of people with a common goal who are flexible in the way they work and adaptable to changing customer requirements.",
        "meta_lang": "",
        "meta_favicon": "/images/favicon.ico",
        "meta_site_name": "Kanban Software for Agile Project Management",
        "canonical_link": "https://businessmap.io/agile/agile-at-scale/agile-teams",
        "text": "An Agile team's main idea is to have a group of people with a common goal who are flexible in the way they work and more adaptable to changing customer requirements. One thing that distinguishes them from traditional teams is that they are self-directed and self-organized individuals who practice shared leadership.\n\nAnother common characteristic of Agile teams is that they are cross-functional teams. It places a focus on generalizing specialists who can contribute to several domains instead of just their own. The idea is to cross-skill people on a single team with the purpose of eliminating hand-offs and dependencies.\n\nWhile this has its benefits, it requires a sufficient amount of disruption of existing processes, especially if we are talking about more traditional organizations embarking on an Agile transformation. As a result, companies often experience high rates of chaos and resistance, which could be too hard for them to deal with. Eventually, they go back to their old ways of operating, discarding the idea of building Agile teams.\n\nThat's why a better approach to reduce this risk would be to keep your existing structure (especially if it's been giving you solid results so far) and look to improve it gradually through continuous experimentation.\n\nEvolutionary Approach to Building an Agile Team Structure\n\nWhen implementing Agile for the first time, many people believe that's a one-time endeavor that ends with applying a specific framework. In reality, the process keeps progressing as you learn how to do things better and better.\n\nThat's why Kanban takes an evolutionary and human-centric approach to form Agile teams and scale agility across the organization. The method encourages us to simply start where we are now by visualizing our existing operations, respecting the current processes and Agile roles, and then evolving from there.\n\nService-Orientation Agenda\n\nThe first step to evolving your teams and making them more Agile is to see them as services (responsible for value creation) rather than expendable resources. From engineering/product development to sales and marketing, every team member is a service provider of some sort who helps the company move forward by adding value to the final offering, either directly or indirectly.\n\nTo ensure a symbiosis between all teams, you need to view them as an ecosystem of interdependent services where each service evolves on its own. As a result, you will have a way to optimize the entire flow of value to your customers and derive large-scale improvements from localized optimizations at the service level.\n\nFor example, Kanban aims to achieve that by using a network of interconnected Kanban boards where every team visualizes its work (the service they provide) inside their system. To ensure that those systems work correctly and stay responsive to changing customer requirements, we abide by the following three service-delivery Kanban principles.\n\nFocus on the Customer\n\nEverything we produce should be seen from a customer perspective. That's why the stepping stone to improving our team's value delivery is to understand what makes our services fit for its purpose. To do that, we measure their \"fitness criteria\" - an indicator that tells us how well a product or service fulfills a customer's desires.\n\nApart from quality (functional and non-functional), it usually represents service-delivery indicators such as delivery rate (end-to-end duration), predictability, quantity, etc. To measure those, you can use Agile metrics such as lead and cycle time, WIP (Work In Progress), throughput, etc., and charts that help you visualize and analyze how you deliver value.\n\nOnce teams have this knowledge, they are capable of designing their workflows to customer needs and producing services that are more \"fit for purpose\" for their target market.\n\nManage work, not people\n\nTo ensure successful service delivery, you should also focus on managing work while letting people self-organize around it. Remember, team members are the ones closest to the technical details of customer requests, so it makes sense to let them decide how to execute those requests best.\n\nIn turn, leaders should create alignment within the network of services by communicating a shared purpose. They need to manage work by visualizing queues, alleviating bottlenecks, and measuring flow efficiency rather than only tracking timelines. This results in higher team morale, increased efficiency, and, eventually, better service delivery to the end customers.\n\nEvolve policies to improve business outcomes\n\nFinally, to keep your systems working properly, you need to view your team's processes as a set of policies that create a shared understanding of how work gets done. Make those policies explicit and visible to everyone. This opens them up for collaborative discussions and potential improvements.\n\nThe idea is to initially see how your teams deliver services to the market and then gradually evolve their approach by reflecting the value delivery process from a customer point of view. As a result, you will improve overall business outcomes while retaining the agility to adapt to changing customer needs quickly whenever necessary.\n\nHow to Manage Services with Kanban in Practice?\n\nAs mentioned, every team in the organization provides a service of some sort, and their work should be visualized. To build more Agile teams, you should look to evolve that system to achieve better predictability and shorter cycle times to market. To accomplish that, you need to have a way to manage various types of services, risks associated with them and streamline team collaboration across the entire network.\n\nLet's see how you can achieve this in practice below.\n\nIdentify and Manage Different Work Types on the Kanban board\n\nIf every team provides a service of their own, then the different types of work can represent sub-services within the team. To identify them, you can map your team's work process on a Kanban board and structure it so that team members can easily manage the flow of different work types.\n\nFor example, fixing a defect in a product component represents a service for increasing the deliverable's quality. In case the team responsible for that receives a steady number of similar requests, they should visualize the flow of that specific type of work and look to optimize it to meet customer's service delivery requirements better.\n\nIn Kanbanize by Businessmap, for example, we do that in practice with the help of Multiple workflows. There, the idea is to manage the delivery of various work types or even entire projects (depending on their size) to the end customer. This helps our teams create better organization inside their service-delivery processes and increases efficiency as they don't have to switch between multiple boards to check the progress of various work types (sub-services).\n\nIntroduce Classes of Service to Increase Predictability\n\nClasses of service represent policies of how we treat our work. There are four typical classes of service: Expedite, Fixed Delivery Date, Standard, and Intangible. However, those are only guidelines, and you are encouraged to introduce your own based on your workflow's specificity.\n\nThe idea here is simple. Classes of service help you manage the risk of delaying specific work items based on their urgency. For example, Expedite separates tasks that are critical and bear the highest cost of delay. On the other hand, a fixed Delivery Date classifies items that customers want to be delivered by a specific point in time.\n\nTo introduce different classes of service in your work process, you can visualize them on the Kanban boards. In Kanbanize by Businessmap, we use swimlanes to define classes of service and apply them within our Multiple workflows. This helps us meet customer delivery expectations for different work types and have a way to manage our processes' predictability as a whole.\n\nVisualize Cross-Team Dependencies to Streamline Collaboration\n\nOne of the most important things for building Agile teams that we haven't mentioned yet is team collaboration. To ensure the proper flow of value delivery from your entire service network, you need to streamline the collaboration between teams responsible for every service.\n\nInstead of eliminating cross-team dependencies, you visualize them and then evolve the way you manage them. In practice, this can happen with interlinked Kanban boards where the entire flow of value from one service to the other is made visible.\n\nWith the introduction of regular Agile ceremonies (meetings) across the entire Agile organization, teams will collaborate, sync progress, and discuss dependencies in front of the boards. As a result, they can swiftly adapt to changing customer needs or market conditions and collaboratively seek ways to improve their service-delivery processes.\n\nIn Summary\n\nBuilding Agile teams require you to view your existing structure as an ecosystem of interdependent services and then evolve it by creating an individual system for each service. This way, you will be able to build stable teams that provide \"fit for purpose\" solutions to their customers and retain agility to changes.\n\nTo manage your team’s services, you need to:"
    }
}