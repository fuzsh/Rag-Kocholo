{
    "id": "dbpedia_1585_3",
    "rank": 92,
    "data": {
        "url": "https://www.mongodb.com/resources/solutions/use-cases/agile-development",
        "read_more_link": "",
        "language": "en",
        "title": "What Is Agile? | A Beginner’s Guide | MongoDB",
        "top_image": "http://s3.amazonaws.com/info-mongodb-com/_com_assets/cms/kuzt9r42or1fxvlq2-Meta_Generic.png",
        "meta_img": "http://s3.amazonaws.com/info-mongodb-com/_com_assets/cms/kuzt9r42or1fxvlq2-Meta_Generic.png",
        "images": [
            "https://webimages.mongodb.com/_com_assets/cms/kuyjf3vea2hg34taa-horizontal_default_slate_blue.svg?auto=format%252Ccompress",
            "https://webimages.mongodb.com/_com_assets/cms/lyj1z1iiimsre0lsz-search_updated_white.svg?auto=format%252Ccompress",
            "https://webimages.mongodb.com/_com_assets/icons/atlas_product_family.svg",
            "https://webimages.mongodb.com/_com_assets/icons/atlas_database.svg",
            "https://webimages.mongodb.com/_com_assets/icons/atlas_search.svg",
            "https://webimages.mongodb.com/_com_assets/icons/mdb_vector_search.svg",
            "https://webimages.mongodb.com/_com_assets/icons/atlas_stream_processing.svg",
            "https://webimages.mongodb.com/_com_assets/icons/enterprise_advanced_product family.svg",
            "https://webimages.mongodb.com/_com_assets/icons/community_edition_product_family.svg",
            "https://webimages.mongodb.com/_com_assets/icons/mdb_compass.svg",
            "https://webimages.mongodb.com/_com_assets/icons/atlas_integration.svg",
            "https://webimages.mongodb.com/_com_assets/icons/mdb_migrator.svg",
            "https://webimages.mongodb.com/_com_assets/icons/atlas_product_family.svg",
            "https://webimages.mongodb.com/_com_assets/icons/general_events_ask_the_experts.svg",
            "https://webimages.mongodb.com/_com_assets/icons/general_content_tutorial.svg",
            "https://webimages.mongodb.com/_com_assets/icons/general_events_session.svg",
            "https://webimages.mongodb.com/_com_assets/cms/lyekm5ifrkqjod0wu-search_updated.svg?auto=format%252Ccompress",
            "https://webimages.mongodb.com/_com_assets/cms/kuyjf3vea2hg34taa-horizontal_default_slate_blue.svg?auto=format%252Ccompress",
            "https://webimages.mongodb.com/_com_assets/cms/lyekm5ifrkqjod0wu-search_updated.svg?auto=format%252Ccompress",
            "https://webimages.mongodb.com/_com_assets/cms/l3ouv2k1wmpxzmgxd-image3.png?auto=format%252Ccompress",
            "https://webimages.mongodb.com/_com_assets/cms/l3oukkrekjk1lg9n9-image2.png?auto=format%252Ccompress",
            "https://webimages.mongodb.com/_com_assets/cms/kuyj3d95v5vbmm2f4-horizontal_white.svg?auto=format%252Ccompress"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Explore the essentials of Agile development, a dynamic software and project management methodology that accelerates software delivery in dynamic environments.",
        "meta_lang": "en",
        "meta_favicon": "/assets/images/global/favicon.ico",
        "meta_site_name": "MongoDB",
        "canonical_link": "https://www.mongodb.com/resources/solutions/use-cases/agile-development",
        "text": "3 core values of Agile\n\nOutlined in the Agile Manifesto, the core values of Agile development emphasize include:\n\nIndividuals and interactions over processes and tools.\n\nCustomer collaboration over contract negotiation.\n\nResponding quickly to change rather than following a rigid plan.\n\nAlthough tools and techniques might be effective in speeding up the development cycle, they are of no use if placed in the wrong hands. More team collaboration and regular meetings ensure everyone is on the same page. Agile prioritizes personal interaction and collaborative teamwork over strict adherence to tools and processes. This focus enhances transparency and aligns team efforts toward common objectives.\n\nCustomer collaboration over contract negotiation\n\nBusinesses and their markets are ever-evolving and so, a fixed plan may not always work. As business grows, demands and goals will continually change for good. Businesses should be flexible to quickly adapt to new changes and respond positively. Involving stakeholders throughout the project lifecycle, Agile values customer collaboration above strict adherence to contract terms. This flexibility facilitates beneficial adjustments and enhancements during the project.\n\nResponding quickly to a change rather than following a rigid plan Businesses are ever-evolving and so, a fixed plan may not always work. As business grows, demands and goals will continually change for good. Businesses should be flexible to quickly adapt to new changes and respond positively. Agile teams are highly adaptive, recognizing that responsiveness to change can lead to significant product improvements and higher customer satisfaction.\n\nThe 12 principles of Agile software development\n\nThe 12 principles behind the Agile Manifesto offer more detailed guidance on implementing Agile in day-to-day operations. They include:\n\n1. Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.\n\nThe first principle of Agile makes clear that the primary focus is customer satisfaction.\n\nSoftware development takes time, costs money, and exists to meet customer needs. Sooner equals better: The goal of Agile is to generate high-value applications early and often.\n\n2. Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.\n\nThe second principle of the Agile process recognizes that the only thing permanent in business is change, so adjustments and modifications to application requirements should be expected and welcomed, even in the late stages of development. The last thing users and customers need is software that's outdated or irrelevant upon arrival.\n\n3. Deliver working software frequently, from a couple of weeks to a couple of months, with a preference for the shorter timescale.\n\nThis principle underscores the importance of iteration and accelerated time-to-value. It's never too early to generate value, which is why Agile focuses on a time frame of a couple of weeks to a couple of months. Think smaller releases, more often.\n\n4. Business people and developers must work together daily throughout the project.\n\nAgile emphasizes overcoming traditional silos and barriers to smooth collaboration between the development and business sides of the house. The fourth principle recognizes that misunderstandings are resolved before they can find their way into code, and feedback comes quickly enough to avert problems before users ever see them.\n\n5. Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\n\nProjects are only as good as the people who work on them — and software development is a case in point. Developers whose skills are empowered by the right training, environment, tools, and management support will naturally create successful projects.\n\n6. The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.\n\nThe sixth Agile principle acknowledges the importance of clear, direct communication.\n\nIn other words, the best and most productive interactions are one on one. With modern tools like Zoom, Skype, and Teams, distributed teams can and should collaborate face-to-face over distances and time zones.\n\n7. Working software is the primary measure of progress.\n\nIf there's one Agile rule that stands above all the rest, it's the seventh principle: That progress is measured not by models, analysis, or flowcharts — but by a real, live, functioning product. When following an Agile development process, the mantra is always: Working software is the primary measure of progress. Note: It’s understood that software that passes tests is considered working software.\n\nThe essence of the eighth Agile principle is continuity. Agile is about ongoing exertion, not one-time spurts. When successfully employed, its processes facilitate workflows that are consistent and sustainable over the long term.\n\n9. Continuous attention to technical excellence and good design enhances agility.\n\nUndeniably, Agile puts a premium on rapid development, but not at the expense of good design and technical quality. A mediocre product won't fully meet user needs no matter how fast it gets delivered. That's why the ninth principle acknowledges the critical cross-functional collaboration that Agile promotes: Agility must be counterbalanced with a focus on quality and user experience.\n\n10. Simplicity — the art of maximizing the amount of work not done — is essential.\n\nThe tenth Agile principle defines simplicity as “the art of maximizing the amount of work not done.” This means, among other things, eliminating outmoded procedures, favoring automation over manual processes, using macro libraries where available, and in general, taking the most direct route to each given objective. Simplicity is essential.\n\n11. The best architectures, requirements, and designs emerge from self-organizing teams.\n\nThe eleventh Agile principle understands that good developers work best when they feel ownership in the work product. According to Conway’s Law, the design of a system will mirror the communication structures of the organization that built it. Therefore, a key enabler for effective development rests with management. Higher-ups must trust the team to organize its efforts, consult with business stakeholders, and dive into coding — free from over-control or micro-management.\n\n12. At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.\n\nThe twelfth agile principle acknowledges the fact that no individual or group makes perfect decisions all the time. There's always room for improvement. This makes it imperative for Agile teams to periodically assess, optimize, and fine-tune their efforts. Often this is called a “retrospective” or, in the case of a failed project, a “post-mortem.”"
    }
}