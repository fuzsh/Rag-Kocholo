{
    "id": "dbpedia_1585_0",
    "rank": 52,
    "data": {
        "url": "https://www.planview.com/resources/guide/agile-methodologies-a-beginners-guide/history-of-agile/",
        "read_more_link": "",
        "language": "en",
        "title": "The History of Agile",
        "top_image": "https://media.planview.com/wp-content/uploads/2020/01/social-planview-rebrand-min.jpg",
        "meta_img": "https://media.planview.com/wp-content/uploads/2020/01/social-planview-rebrand-min.jpg",
        "images": [
            "https://media.planview.com/wp-content/uploads/2018/08/history-of-agile-1.jpg",
            "https://media.planview.com/wp-content/uploads/2018/08/history-of-agile-1.jpg",
            "https://media.planview.com/wp-content/uploads/2018/08/history-of-agile-2.jpg",
            "https://media.planview.com/wp-content/uploads/2018/08/history-of-agile-2.jpg",
            "https://media.planview.com/wp-content/uploads/2018/10/AgileandLean-1024x523.jpg",
            "https://media.planview.com/wp-content/uploads/2018/10/AgileandLean-1024x523.jpg",
            "https://media.planview.com/wp-content/uploads/2019/09/rachaelle-lynn.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2019-11-21T19:50:58+00:00",
        "summary": "",
        "meta_description": "How can knowing the history of Agile help us better understand the methodology and its positive impact on today’s development world? Let’s take a look.",
        "meta_lang": "",
        "meta_favicon": "https://media.planview.com/favicon/favicon.ico",
        "meta_site_name": "Planview",
        "canonical_link": "https://www.planview.com/resources/guide/agile-methodologies-a-beginners-guide/history-of-agile/",
        "text": "Today, Agile is a well-known development methodology and the approach of choice for many development teams, especially those trying to create an environment of continuous delivery.\n\nWhen we think of Agile, we often think of high levels of collaboration and flexibility as well as an iterative environment in which requirements evolve alongside changing needs. As a result, we also tend to conceptualize Agile as an approach that helps development teams across various industries deliver new features faster.\n\nBut how did we get here? What does the history of Agile entail? And how can knowing the history of Agile help us better understand the methodology and its positive impact on today’s development world? Let’s take a look.\n\nImagine if you had to wait years for a solution to the key problems your business faces. Less than 30 years ago, that type of wait time was the norm. And we can trace the earliest roots in the history of Agile to this problem.\n\nBefore Agile came about, development teams (particularly those in the software, manufacturing, aerospace and defense industries) would identify problems and plan a solution. They would then work to develop that solution and bring it to market in its entirety. Specifically, most teams used the Waterfall approach, a development methodology that follows a set path in which teams:\n\nSet project requirements and the scope of work\n\nDesign a product based on those pre-determined requirements\n\nBuild the product\n\nTest the product\n\nFix any problems discovered during testing\n\nLaunch a finished product\n\nThis approach may sound fine, but Waterfall required teams to stick to the requirements and scope of work set out at the very beginning of the project and not make any changes or additions along the way. And following that fixed plan could prove troublesome, since Waterfall prioritized bringing a complete product to market – meaning it could take years before teams finished the project at hand.\n\nDuring those years, the nature of the problem would often change (but the project requirements would not), rendering the planned solution out of date by the time it finally got to market. On the customer side, this delay meant that critical problems would go unsolved for years at a time. And even when a solution became available, the problem it was intended to solve had likely changed in nature.\n\nOn the developer side, this struggle meant bringing new products to market that no longer had a strong market fit. In many cases, it also led to a development graveyard of unfinished products, as teams simply abandoned the work along the way rather than deliver an outdated product. As a result of these challenges, we can consider the Waterfall methodology the antagonist in the history of Agile.\n\nFrustrated by the status quo, several software development teams began to change their approach to planning and delivering new products throughout the 1990s.\n\nDuring this time, we saw the introduction of development methods like Scrum, Rapid Application Development, Extreme Programming, DSDM, Feature-Driven Development and Pragmatic Programming. While these methods vary, the common thread among all of them is a lighter-weight model that allows for more flexibility and less overhead planning. These approaches to software development are the earliest methods in the history of Agile that ultimately led to what we know today.\n\nFinally, in the early 2000s, the history of Agile – and the future of development – changed forever.\n\nIt all started in the spring of 2000, when a group of 17 software developers, including Martin Fowler, Jim Highsmith, Jon Kern, Jeff Sutherland, Ken Schwaber, and Bob Martin met in Oregon to discuss how they could speed up development times in order bring new software to market faster. They recognized two key opportunities that achieving this goal would make possible:\n\nShortening the delay of benefits to users in order to resolve the product-market fit and development graveyard problems\n\nGetting feedback from users quickly to confirm the usefulness of new software and continue to improve on it accordingly.\n\nWhile this meeting did not result in the Agile methodology we know today, it was a critical milestone in the history of Agile, as speed to market, rapid feedback and continuous improvement are hallmarks of the Agile methodology.\n\nThe history of Agile came a long way during the February 2001 meeting in Snowbird, Utah, but the trajectory of Agile had still only just begun. Following that three-day meeting, the group of 17 leaders was ready for the next chapter in the history of Agile: Convincing the world of the value of everything they laid out in the Agile Manifesto.\n\nAgile goes mainstream\n\nTo help spread the word about the Agile Manifesto, the founding fathers in the story of the history of Agile decided to create a more permanent organization, and so the Agile Alliance was born. The Agile Alliance is a nonprofit organization that still exists today. The organization’s goal is to share information about Agile, provide resources for teams looking to adopt the Agile methodology and continue to evolve the approach to meet changing needs.\n\nFollowing the creation of the alliance, the history of Agile took off in a big way, gaining traction with software development teams throughout the early 2000s. Along the way, those teams often contributed to the history of Agile as we know it today, introducing practices like quick decisions, the “role-feature-reason” format for user stories, retrospectives, and daily meetings (often referred to as standups).\n\nAs Agile took off, the role of the Agile Alliance expanded. In 2003, the now-formal Agile Alliance returned to Utah for the first annual Agile conference — an important milestone in the history of Agile. The group described this event as being “dedicated to furthering Agile principles and providing a venue for people and ideas to flourish.” This annual conference, named Agile 20XX, continues to this day.\n\nThe Agile Alliance has also expanded geographically over the years. Today, the Agile Alliance supports affiliate groups all over the world that promote Agile in local markets and help nearby organizations adopt the Agile Manifesto.\n\nAgile picks up steam\n\nWhile Agile took off in the early 2000s, we saw the Agile Manifesto pick up new steam in the 2010s.\n\nBy this time, the history of Agile was a commonly recounted story among development teams, but between 2012 and 2015, real life success metrics began to accompany that story. As a result of the ability to demonstrate success in Agile at that point, the benefits of adopting the lightweight methodology became undeniable. That makes it no surprise that during this three-year period we also saw Agile surpass the 50% mark in adoption, truly taking the development world by storm.\n\nAs of 2018, we see near ubiquitous adoption of Agile in some sense across development teams, particularly those in the software industry. So what’s next in the history of Agile?\n\nWe now live in a time in which people joke that technology is outdated the moment it hits the market – and in some cases, this feels very true.\n\nIt also brings us back to the earliest parts of the history of agile and the problems development teams faced with the waterfall methodology. This situation begs the question: Can the Agile Manifesto stand the test of time?\n\nWhile no one knows the future, it’s safe to say that the history of Agile is not yet complete. But the next chapter in that history book might look a bit different than what we’ve seen so far.\n\nToday, we hear a lot about DevOps, or the idea of creating a continuous loop of delivery in which new software can go to market at any time and is always ready for production. DevOps is the latest iteration of the idea that high quality products should be delivered to users as quickly as possible and then improved upon on a regular basis. While it’s easy to think of DevOps as a new approach that will bring Agile to an end, so far this has proven not to be the case. Currently, we see teams embracing Agile and DevOps hand-in-hand, and we can likely expect this trend to continue for the next several years.\n\nIt’s a testament to those first meetings of the group of 17 software developers in 2000 and 2001 that shaped the history of Agile that, nearly two decades later, all kinds of development (and now testing) teams continue to embrace the core tenets of the Agile Manifesto. Along the way, Agile has evolved to meet changing needs, but it still stays true to that initial manifesto. Of course, we wouldn’t expect anything less from a manifesto built on the idea that teams need the ability to evolve their approach at any time to better meet changing needs."
    }
}