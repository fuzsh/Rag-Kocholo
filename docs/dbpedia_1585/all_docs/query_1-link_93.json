{
    "id": "dbpedia_1585_1",
    "rank": 93,
    "data": {
        "url": "https://praxent.com/blog/agile-software-development-process-puts-command",
        "read_more_link": "",
        "language": "en",
        "title": "What is Agile Software Development? How it Puts You in Command",
        "top_image": "https://praxent.com/wp-content/uploads/2016/11/Software-Development-Lifecycle-Header.jpg",
        "meta_img": "https://praxent.com/wp-content/uploads/2016/11/Software-Development-Lifecycle-Header.jpg",
        "images": [
            "https://praxent.com/wp-content/themes/praxent/assets/images/logo.svg",
            "https://praxent.com/wp-content/themes/praxent/assets/images/logo.svg",
            "https://praxent.com/wp-content/themes/praxent/assets/images/blog-icons/article.svg",
            "https://praxent.com/wp-content/themes/praxent/assets/images/blog-icons/podcast.svg",
            "https://praxent.com/wp-content/themes/praxent/assets/images/blog-icons/press.svg",
            "https://praxent.com/wp-content/themes/praxent/assets/images/blog-icons/webinar.svg",
            "https://praxent.com/wp-content/themes/praxent/assets/images/blog-icons/whitepaper.svg",
            "https://praxent.com/wp-content/uploads/2016/11/Software-Development-Lifecycle-Image-1.png",
            "https://praxent.com/wp-content/uploads/2016/11/Software-Development-Sprints.png",
            "https://no-cache.hubspot.com/cta/default/332848/2918a95a-12bc-4213-bb06-b0bcdf245e28.png",
            "https://praxent.com/wp-content/uploads/2024/06/PBM-Thumbnails-blog-300x300.png",
            "https://praxent.com/wp-content/uploads/2023/12/Locality-bank-Thumbnail-300x300.png",
            "https://praxent.com/wp-content/uploads/2023/12/Plinqit-Thumbnail-300x300.png",
            "https://praxent.com/wp-content/themes/praxent/assets/images/logo.svg",
            "https://praxent.com/wp-content/themes/praxent/assets/images/aicpa.png",
            "https://praxent.com/wp-content/themes/praxent/assets/images/c-reviews.png",
            "https://praxent.com/wp-content/themes/praxent/webroot/img/Inc5000_stacked_gold.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2016-11-22T18:16:05-06:00",
        "summary": "",
        "meta_description": "Learn why the trick to effective agile development is the constant collaboration between you, the software engineers, and UX designers.",
        "meta_lang": "",
        "meta_favicon": "https://praxent.com/wp-content/uploads/2024/02/cropped-Logo-Symbol-Praxent-favicon-32x32.png",
        "meta_site_name": "Praxent",
        "canonical_link": "https://praxent.com/blog/agile-software-development-process-puts-command",
        "text": "Agile software development: a process that puts you in command\n\nWhat is agile methodology, and how does the agile software development process work?\n\nEditor’s note: This piece was originally published in 2016. It’s been so popular that we updated it in 2019.\n\nDetermining if it’s time to create custom software is a major consideration for any company, and one that is not taken lightly. The decision to build software usually stems from one of two main events:\n\nYou have a specific pain point that needs resolution\n\nYou have a breakthrough idea that could set you apart in your industry\n\nSoftware development is often seen as a gateway to innovation, or used as a way to increase efficiency and boosts profits. Although ample thought and planning go into the process, in business (and in life) it’s impossible to foresee and plan for every bit of good news and every pitfall we encounter. Software is no different. Ideas pop up over time, new business challenges present themselves, users interact with software and have needs that no one could have predicted. Inevitably, you end up with a long list of features you want for your new software, or a list of features that’s completely different from those you originally outlined. This is the reason why we use Agile software development at Praxent.\n\nWhat Is Agile Methodology?\n\nAgile development is defined as an iterative method of software development that is inherently flexible. Agile’s adaptability makes it possible for projects to evolve during development — without impacting the overall timeline or budget. With agile, it’s easy to make changes to functionality, course corrections based upon user research, or even large pivots in direction or overall scope. Agile not only allows for change but accounts for it, enabling the team to uphold the schedule and propel the forward momentum of the project.\n\nHow Does Agile Development Work?\n\nAgile is a unique approach to the software development lifecycle, which is becoming increasingly common. In agile development, all work occurs concurrently, as opposed to in the linear (“waterfall”) manner characteristic of traditional development methodologies. In waterfall, project tasks fall in a sequential order with each task dependent on completion of the one before it. Making changes in waterfall is costly and inefficient as issues cannot be addressed until the end, thus requiring massive interruptions to timeline and budget. With agile, changes are anticipated and thus built in. Agile employs a process called “scrum,” and work is completed in two week periods referred to as “sprints.”\n\nThe Agile Software Development Process: Working In Sprints\n\nThe agile software development life cycle involves a series of short two-week phases referred to as “sprints.” All work is organized into specific lists, and prioritized according to the business value it will create. These lists are managed using a software tool, with JIRA being the industry standard. The project manager manages the queue of items, which are organized into the following 3 categories:\n\nWorking in sprints allows for fluidity, and the ability to adjust for changes or concerns that arise. At Praxent, our developers meet with our clients once a week for about an hour. During this time, they will discuss with the client any business requirements or changes that will affect the design and how to manage them. This way, they prioritize the features and figure out what to work on during the next sprint. This is often referred to as “sprint planning”.\n\nWhen new features pop up, we size them for you. Sizing, also often called estimation, determines how much work will go into the feature, so you can make an informed decision when prioritizing it. At the end of each sprint there’s an opportunity for a recap or review of work completed and any issues encountered – this is the project “retrospective”.\n\nCreating that free flow of information between you and the developers is critical to getting the software you want. Ultimately, you make the decisions that affect the final product and lifecycle, while we provide guidance to get you there. In Agile, you come first, not the technology.\n\nThe true genius behind effective development is the constant collaboration between you, the software engineers, and designers.\n\nWhy Use Agile Software Development?\n\nSoftware development is a fluid and complex process. To be effective, the initial plan shouldn’t attempt to encompass everything that could arise during the course of the project. The Agile software process recognizes this, and provides teams with a series of meeting rituals to ensure the project remains flexible to changing business requirements, features, timeline and budget. It begins with the initial consultation and continues beyond the initial release to encompass ongoing support and evolution. In this way, we like to define agile development as the flexibility to change your mind. This flexibility is agile’s biggest benefits.\n\nAt Praxent, we practice Agile development and have rituals in place to help define the development lifecycle. Going into a new project you know what to expect; ongoing communication and collaboration allow insight throughout every phase. We work to reduce setbacks that can occur and this starts with a frank discussion about how new features can impact the project.\n\nOne of our Solution Architects, Ryan Ostrom, explains Agile development as “Defining the first priority for the business and then delivering it before working on the next priority.” Together with our clients, we explore which ideas are most practical and effective and which ones are less likely to work.\n\n–"
    }
}