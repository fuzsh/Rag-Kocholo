{
    "id": "dbpedia_1585_3",
    "rank": 33,
    "data": {
        "url": "https://www.productplan.com/learn/agile-product-management/",
        "read_more_link": "",
        "language": "en",
        "title": "The Ultimate Guide to Agile Product Management",
        "top_image": "https://www.productplan.com/uploads/2019/11/agile-product-management.png",
        "meta_img": "https://www.productplan.com/uploads/2019/11/agile-product-management.png",
        "images": [
            "https://www.productplan.com/uploads/The-4-Agile-Values-1200-1-300x157.png",
            "https://www.productplan.com/uploads/2019/01/Blog-for-agile-feedback-in-post-01-300x140.png",
            "https://no-cache.hubspot.com/cta/default/3434168/0e75bee7-2f50-4cce-b0bb-8b996dc96c5c.png",
            "https://www.productplan.com/uploads/image-3-300x157.png",
            "https://no-cache.hubspot.com/cta/default/3434168/a3b30e69-b4f1-4026-910b-c9e30c9e412e.png",
            "https://no-cache.hubspot.com/cta/default/3434168/83ca4782-9cfe-4234-83e5-2ac0ed8ecf84.png",
            "https://www.productplan.com/uploads/2019/10/Theme-based-roadmap-example-300x157.png",
            "https://www.productplan.com/uploads/2019/12/timeline-kanban-roadmap-300x157.png",
            "https://www.productplan.com/uploads/2018/11/Agile-planning-onion-255x300.png",
            "https://www.productplan.com/uploads/2020/01/waterfall-agile-transition-300x157.png",
            "https://www.productplan.com/wp-content/themes/productplan/assets/images/linkedin.svg",
            "https://www.productplan.com/wp-content/themes/productplan/assets/images/facebook.svg",
            "https://www.productplan.com/wp-content/themes/productplan/assets/images/x-logo.svg",
            "https://www.productplan.com/wp-content/themes/productplan/assets/images/youtube.svg",
            "https://www.productplan.com/wp-content/themes/productplan/assets/images/instagram.svg",
            "https://px.ads.linkedin.com/collect/?pid=1410714&fmt=gif"
        ],
        "movies": [
            "https://fast.wistia.net/embed/iframe/63zzsgdpdh?videoFoam=true"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2022-12-14T20:06:28+00:00",
        "summary": "",
        "meta_description": "Agile may not be perfect, but it has changed how organizations approach product management. What does Agile mean in practice? Let's break it down.",
        "meta_lang": "",
        "meta_favicon": "/uploads/PP-favicon.png",
        "meta_site_name": "ProductPlan",
        "canonical_link": "https://www.productplan.com/learn/agile-product-management/",
        "text": "Agile product management might be the “new kid on the block” compared to linear, waterfall development, but the Agile Manifesto was published two decades ago. Since then, Agile has infiltrated not just software development but many other industries.\n\nIts appeal is apparent—shortening timelines, maximizing productivity, empowering agile decision making, and creating autonomy—yet it comes with tradeoffs. There’s something comfortable and reassuring about the old way and its command-and-control, predictable nature of product development.\n\nBut the ability to rapidly respond to shifting market conditions and quickly incorporating new technology has made Agile too tempting to resist for many. Combined with increased experienced Agile practitioners eager to transplant their favored methodologies to new workplaces, along with consultants and coaches ready to ease the transformation, Agile has become a certainty in most industries.\n\nWhile this Agile wave has shaken up the status quo for many disciplines, product managers have been uniquely impacted by Agile overtaking their corporate cultures. The role’s processes, artifacts, and traditions have been upended, with old-timers scrambling to adapt while newcomers see Agile as how business gets done.\n\nAgile product management comes with new rules, new tools, and new expectations. The learning curve isn’t quite as steep as it may seem for both newcomers and veterans.\n\nWhat is Agile Product Management?\n\nRegardless of the methodologies employed or the environment where they work, the fundamentals of being a product manager shouldn’t change. Product managers are responsible for creating a product strategy in collaboration with their stakeholders and securing organizational buy-in and alignment.\n\nThey then determine how to pursue that strategy and its related goals and objectives by prioritizing different initiatives, many of which they identify using quantitative and qualitative research tactics. These product elements intend to delight customers, illustrate the product’s value, build loyalty, and generate revenue (or other KPIs the organization values). They’re typically organized and presented to stakeholders in a product roadmap.\n\nAgile or waterfall, the above, high-level view of the role doesn’t change. It’s what happens next where things diverge.\n\nOpen to interpretation\n\nIn a traditional waterfall environment, product managers would create detailed product requirements documents, listing out every parameter of the feature, use cases, acceptance criteria, and maybe even wireframes or mockups.\n\nThe modus operandi here is “build me exactly what I asked for.” UX and product development would grab the baton, get to work, and pass it off to QA after weeks or months. Product releases tend to get spread out, scheduled, and, in most cases, things don’t ship until they’re complete.\n\nBut in an Agile world, the organization follows a different path once everyone agrees on the strategy. Instead of being handed a paint-by-numbers picture of what to build, UX and product development play a more active role in determining what gets made.\n\nProduct management is still generating requirements, but these more often come in the form of user stories. “A current user can invite their friends to try the product” or “after purchasing something, a customer can review their purchase to inform other potential buyers.”\n\nSometimes there will be user personas attached to these stories, so now it’s “Bob” a 17-year-old gamer who spends time on Twitch and TikTok or “Nancy” a 39-year-old suburban mother of three who volunteers at the food pantry.\n\nPresented with these user stories and personas, the entire team determines the best approach to helping the “user” accomplish the task specified in the story. Product management doesn’t spell out in advance where reviews for each product listing will reside or the prompts for how purchasers can leave a review. That’s determined collaboratively during the actual development cycle.\n\nSmall steps vs. giant leaps\n\nAnother critical difference between Agile and waterfall is the inherently iterative nature of Agile development. In contrast, traditional product development was about building a finished product before it hit the market Agile prizes incremental progress.\n\nAgile product development typically breaks work out into sprints versus releases. Cadences may vary, but the basic idea is that you chunk work up into sprints, which typically span two-to-four weeks. Assuming that the output of the sprint is ready for prime time, the new code is released after passing acceptance testing.\n\nSprints significantly reduces the time between when work commences and when users start seeing value. It also shortens the feedback loop, letting the team see what’s working and what doesn’t before factoring that into the next iteration of a given feature.\n\nBy investing smaller chunks of time and resources into an initial phase, organizations can be more reactive to market demands and competition while simultaneously creating a “finished” product that reflects things learned from earlier releases. It also allows companies to “cut bait” if a particular endeavor isn’t panning out, allowing them to pursue a different approach or abandon that initiative altogether.\n\nThe approach creates a nimble and responsive approach to product development that is particularly well suited for software and web-based solutions. It’s easy to continually churn out updates that automatically install and are used by most customers. Agile is less likely to experience the benefits of a feedback loop since no one is releasing a new version of hardware or major enterprise solutions every few weeks.\n\nThe expediency and efficiency have driven organizational adoption of Agile principles at record rates. Competitive pressures, accelerating growth, and maximizing revenue generation are worth shaking up the status quo.\n\nDefining Agile\n\nAgile is an iterative product-development methodology. Teams work in brief, incremental “sprints,” frequently regrouping to review the work and make changes.\n\nThe Agile method encourages frequent feedback. It boasts the ability to switch focus and priority quickly in contrast to the more traditional, sequence-based, waterfall methodology. Teams split out long-term plans into discrete phases for execution\n\nMaking the Transition from Waterfall to Agile\n\nAgile transformation should not be spearheaded by product management, but product managers have both a vital role to play and will feel a major impact by the switch.\n\nProduct roadmaps are another area where the transition from waterfall to Agile is highly disruptive. The old ways of building product roadmaps don’t often translate well to this new world. High-level goals replace micromanagement and minutiae.\n\nHowever, the product roadmap in some ways is more important than ever in an Agile environment. It is a guide and reference point when so many other elements are in flux. Stakeholders and Agile teams alike will look to it for inspiration and direction, making their accuracy and accessibility a top priority.\n\nAt the same time, Agile brings an unprecedented level of uncertainty in the planning process. Organizations at least tell themselves what the future holds and how the product will address it in a waterfall environment.\n\nAgile’s foundation is rooted in acknowledging that the future is largely unknown, so companies must be prepared to respond quickly and change course as needed. Product roadmaps should shorten their time horizons and leverage themes to incorporate the learnings ascertained through increased customer and prospect feedback.\n\nProduct managers often gravitate toward Kanban-style roadmaps and tools versus linear ones, as they better fit the new decentralized, fluid approach to product development and innovation. Kanban tools also provide a quick reference for product managers when asked what’s happening with a particular initiative.\n\nMaking the most of each sprint\n\nShort, frequent bursts of productivity should be a mission for product managers eager to deliver value to new and existing users. Sprints cut the time between ideation and deployment while simultaneously enabling ongoing optimization. These sprints attributes are prized by customer-centric product teams.\n\nSprints also shine a spotlight on the value (or lack thereof) of their contents. When 100% of the product development team dedicates time to a single initiative for one (or two or three) sprints, there’s even more urgency to determine the ROI of the endeavor. Unlike a big release with a jumble of features, the singular focus forces a reckoning of whether it’s worth it or not.\n\nBut maximizing the value of every sprint requires proper team composition, role assignment, and process structure. Product managers have an essential part to play in this by clearing everyone’s plates of distractions and continually seeking improvement via sprint retrospectives to repeat what worked and change up what didn’t.\n\nOne technique valued by many Agile product managers is utilizing the Agile Planning Onion. By starting big with a Vision, then getting progressively more specific with a Product Roadmap, then a particular Release, then an Iteration, before finally reaching Daily activities, product management can bridge the gap between long-term ideals and day-to-day execution.\n\nIt also enables Agile Product Leaders not to immerse themselves in every detail and nuance of the product development cycle. While some may enjoy getting into the weeds, product leaders must remain focused on the big picture and keep an eye on the future.\n\nKeeping up with continuous delivery\n\nThe end game for some organizations diving into Agile is continuous delivery. That means shipping code as soon as the bits are dry instead of waiting for a sprint to wrap up.\n\nContinuous delivery and product roadmaps seem even less compatible than “regular” Agile, but the same truths apply. Code might always be shipping, and precise release dates are hard to nail down, but coders aren’t operating independently and following their random whims.\n\nNo matter how frequently a product is updated, those improvements should drive the themes, goals, outcomes, and KPIs that the organization has prioritized. So there’s still ample opportunity for product roadmaps to serve their intended purpose of aligning and guiding development activities. It just shortens the feedback loop even further to maximize the value of what folks are building.\n\nLeading an Agile Team\n\nManaging product teams in an Agile environment is different from more traditional product development environments in several key ways. Savvy product leaders recognize this and can position their team members—and themselves—for success with an intentional, thoughtful approach.\n\nOne significant difference between waterfall settings and Agile workplaces is the pace. There was once time and space for lengthy reviews and iterations of documents and specifications, with change requests shopped around for signature approval and no one deviating from extremely detailed instructions without good reason and discussion.\n\nThat isn’t an option in an Agile environment, where entire sprints may only last a couple of weeks, and developers and engineers need answers and clarifications ASAP to get their deliverables included in the next release. The option doesn’t mesh well with top-down, command-and-control management styles.\n\nInstead, product leaders must empower their team members to become decisive subject matter experts to interact directly with product development to hash out issues and reach a consensus without incurring delays. The process requires both trust and clear communication and alignment within the product team itself.\n\nProduct leaders must have confidence that their lieutenants will accurately and correctly assess situations and make prudent recommendations and decisions based on their sound understanding of the product strategy, goals, and roadmap. The findings require strategic alignment at all levels and an objective-based product strategy that stakeholders of all ilks fully understand. When the engineers and product management are both on the same page regarding the product’s strategic direction, it’s easier for them to hash out minor details on the fly.\n\nDelegating and entrusting team members to handle things independently may be uncomfortable, but it’s essential to creating a high-performing Agile product team. There isn’t the time or bandwidth for every decision to run up the chain of command to the department head, nor is that efficient use of everyone’s time. Giving teams frameworks such as DACI can help them navigate which decisions to make and when they must defer and escalate.\n\nHowever, there should be an ongoing dialogue between product leaders and their team members. An open conversation will create awareness of those downstream decisions and ensure the entire team remains unified and aligned behind the current strategic goals and desired outcomes while keeping customer centricity top of mind. Creating this culture and hiring candidates capable of operating independently can dictate how successful an Agile product leader can be.\n\nIntegrating Agile at Every Point in the Product Life Cycle\n\nCommonly, the term Agile refers to startups and technology-driven companies where engineers are the rock stars. But this mischaracterization does an injustice to the benefits Agile can bring to products at any stage.\n\nIntroduction\n\nFor new products, the primary goals are establishing product-market fit and generating demand. This stage of the product life cycle often gets imbued with lots of trial-and-error and experimentation. This stage is an area where Agile brings a lot of value to the table.\n\nRapid iterations and build-learn-adjust cycles are imperative to finding the sweet spot for a new product, so devoting multiple sprints to this effort after introducing an MVP can cut down on time spent fiddling with user experience branding, and growth.\n\nIt’s all about seeing what sticks and then building on that, which is where Agile can facilitate the rapid expansion of customer value to make the product more appealing to a broader set of potential customers.\n\nGrowth\n\nOnce the product has some traction, it’s time to generate those hockey-stick growth curves senior leadership adores so much—most product organizations in this phase concentrate on increasing usage, conquering new markets, and generating revenue.\n\nAgile’s short development cycles can facilitate a steady stream of minor improvements, whether it’s optimized user experiences, quashed bugs, or streamlined processes and performance. Each tweak can reduce friction, increase customer delight, and augment the value proposition that marketing and sales package for current and new markets.\n\nThere’s still a lot of learning as new users come aboard with their own unique set of circumstances and problems to be solved. At the same time, the product’s growing pains and shortcomings can be addressed. In short order as well.\n\nMaturity\n\nWhen growth plateaus, products must shift focus once again, this time to efficiency. It’s all about reducing costs and maximizing profits from a relatively static user base while still throwing them enough bones to keep them engaged and putting out the fires that could cause them to jump ship.\n\nBeyond optimization, new enhancements are selectively added to the product to keep loyal customers happy and increase usage within the established footprint and market the product has carved out. At the same time, defensive maneuvers need implementation as the competition looks to poach customers as the market becomes more of a zero-sum game.\n\nAgile’s attributes are once again a benefit. Even though the technical resources dedicated to a mature product may shrink to customer-specific work, Agile product development teams can take on projects designed to maintain market share and address emerging issues.\n\nSince the development cycles are short and most of these initiatives can squeeze into a sprint or two, product leaders can still ensure their top needs are getting some attention. If they can’t command the same army of engineers, they had at their disposal during those heady days of growth.\n\nDecline\n\nAll things must end at some point, and products are certainly no exception. But Agile can help keep products afloat a little longer by squeezing out important releases via a relative skeleton crew that may not be 100% dedicated to the product.\n\nThey achieve this often by releasing functionality that stems the tide of churn and wins back a portion of the defectors by doing things like supporting new platforms or integrations that weren’t part of the landscape when the product was in its heyday. These precision moves can usually happen quickly. Updated and with minimal resources as Agile teams working on more promising products make a guest appearance.\n\nOccasionally, a declining product may attempt to pivot to a more promising market or repurpose its technology and functionality to solve a new problem. In these cases, Agile’s ability to facilitate rapid experimentation and trial is once again a valuable asset to see if such a late-stage shift has the legs to succeed."
    }
}