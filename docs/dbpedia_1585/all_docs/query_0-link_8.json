{
    "id": "dbpedia_1585_0",
    "rank": 8,
    "data": {
        "url": "https://scaledagileframework.com/agile-teams/",
        "read_more_link": "",
        "language": "en",
        "title": "Scaled Agile Framework",
        "top_image": "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Teams_6.0_featured_image.png",
        "meta_img": "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Teams_6.0_featured_image.png",
        "images": [
            "https://scaledagileframework.com/wp-content/uploads/2024/05/skyline-DC.svg",
            "https://scaledagileframework.com/wp-content/uploads/2023/12/colored-pattern.svg",
            "https://scaledagileframework.com/wp-content/uploads/2024/05/DC-location-Date.svg",
            "https://scaledagileframework.com/wp-content/uploads/2023/12/logo-safe-summit.svg",
            "https://scaledagileframework.com/wp-content/uploads/2023/12/pattern-triangle.svg",
            "https://scaledagileframework.com/wp-content/uploads/2023/09/SAI-logo_studioTeal-1.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Teams_6.0_nav_icon.png",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Release_Train_F05-3.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Release_Train_F04-2.svg",
            "https://scaledagileframework.com/wp-content/uploads/2023/05/Agile_Teams_F03.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Teams_F04.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Teams_F05.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Release_Train_THUMB_01.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Release_Train_THUMB_02.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Release_Train_THUMB_03.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Release_Train_THUMB_F04.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Release_Train_THUMB_05.svg",
            "https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Teams_F06_WEB.png 600w, https://scaledagileframework.com/wp-content/uploads/2022/10/Agile_Teams_F06_WEB-300x111.png 300w"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2012-08-07T18:55:57+00:00",
        "summary": "",
        "meta_description": "An Agile Team is a cross-functional group of typically ten or fewer individuals with all the skills necessary to define, build, test, and deliver value to their customer.",
        "meta_lang": "en",
        "meta_favicon": "https://scaledagileframework.com/wp-content/uploads/2023/09/cropped-android-chrome-512x512-1-32x32.png",
        "meta_site_name": "Scaled Agile Framework",
        "canonical_link": "https://scaledagileframework.com/agile-teams/",
        "text": "Agile Teams\n\nAn Agile Team is a cross-functional group of typically ten or fewer individuals with all the skills necessary to define, build, test, and deliver value to their customer.\n\nAgile Teams may be technical teams focused on building digitally-enabled solutions, business teams delivering business functions, or, increasingly, elements of both. By quickly delivering work in small increments, all Agile Teams strive for fast learning, gaining fast customer feedback, assessing the results, and adjusting accordingly.\n\nDetails\n\nAgile teams are self-organizing and self-managing and are accountable for delivering results that meet the needs and expectations of their customers and stakeholders.\n\nAgile Teams power the Agile Release Train (ART) and thereby, the entire development portfolio. Agile teams collaborate with other teams to deliver ART solutions. They contribute to the Vision and Roadmap, and participate in ART events. In addition, teams build the Continuous Delivery Pipeline (CDP) that accelerates the flow of value and supports the ability to Release on Demand.\n\nAgile teams are cross-functional, long-lived, and organized to deliver value as easily as possible. By building longer-lived teams and trains, enterprises can eliminate the start-stop-start ‘project’ way of working (see Lean Budgets) and eliminate waste and delays in the process. Agile Teams’ Lean-Agile Leaders provide the vision, guidance, and autonomy necessary to foster and promote high-performing Agile teams. As a result, assigning work to individual team members is no longer required. Teams become self-directed, self-reliant, and have more autonomy, further enabling decentralized decision-making all the way to the individual contributor. Agile teams are more productive than groups of similar individuals, are more engaged in their work, and have more fun on the job.\n\nCharacteristics of Agile Teams\n\nAll Agile teams share certain defining characteristics, as described in the following sections.\n\nTeams Constitute the ART\n\nMost Agile Teams are a part of an Agile Release Train and deliver value together with other teams that operate within the context of a common solution mission. They synchronize frequently with other teams, stakeholders, and their management. Some Agile teams—for example, business teams, enabler teams that support multiple ARTs, independent research teams, LACE teams, etc.— can deliver value independently of an ART, but they still benefit from their Agile method in establishing the flow of customer value.\n\nThis article describes common characteristics and responsibilities for all types of SAFe Agile teams.\n\nAgile Teams are Cross-functional\n\nAgile teams are composed of members dedicated full-time to their teams and contain all the functions they need to deliver value (Figure 1). This avoids individuals multiplexing across teams and eliminates the handoffs and delays that occur when pushing value across functional silos. Most generally, Agile Teams are capable, enabled, and able to:\n\nDefine –­ Elaborate and design the features and stories needed to deliver customer value\n\nBuild – Contain all skills necessary to create the elements of the solution\n\nTest – Ensure quality and performance of the new functionality\n\nDeploy – Deploy increments of value to their customer\n\nAgile Teams are Organized Around Value\n\nSAFe Principle #10 – Organize around value, guides enterprises to organize people and teams around one goal: the continuous delivery of value to the customer. But to do so, they must consider how best to design their Agile Teams. As described in the book Team Topologies [1], SAFe recommends four primary ways to organize Agile Teams (Figure 2).\n\nStream-aligned teams are end customer-aligned and are capable of performing all the steps needed to build end-to-end customer value\n\nComplicated subsystem teams are organized around critical solution subsystems. They focus on areas of high technical specialization, which limits the cognitive load on all the teams\n\nPlatform teams provide application services and APIs for stream-aligned teams to be able to leverage common platform services\n\nEnabling teams provides tools, services, and short-term expertise to other teams\n\nFurther guidance on this important aspect of organizing Agile Teams can be found in the extended guidance article Organizing Agile Teams and ARTs: Team Topologies at Scale.\n\nHigh-Performing\n\nGreat teams require more than talented individuals. Team composition and dynamics play a significant role. In fact, who is on a team has less impact on performance than how the team works together. High-performing teams share many ‘teaming’ characteristics:\n\nAlignment on a shared vision with clear goals and purpose\n\nA safe environment for taking risks without fear of embarrassment or criticism\n\nDiversity of knowledge and skills to independently make quick, effective decisions\n\nMutual trust that allows for both healthy conflict and reliance on others\n\nAccountability to each other and the organization for reliably completing quality work\n\nMeeting commitments\n\nUnderstanding their work’s broader impact on the organization\n\nHaving fun with their work and with each other\n\nSAFe’s Organizational Agility competency provides more information on how Lean-thinking people and high-performing Agile Teams work to create better business outcomes.\n\nEnabled by Critical Roles\n\nAgile Teams are further enabled by two specialty roles (Figure 3).\n\n1. The Product Owner (PO) contributes to the Vision and roadmap and works with the team to define Stories and prioritize the team’s work. By working with the customer and the teams, they define a backlog that addresses customer needs and also helps maintain the technical integrity of the product.\n\n2. The Scrum Master / Team Coach (SM/TC) helps implement and maintain Agile practices, optimizes and improves team performance, partners with the Release Train Engineer (RTE) to guide improvements of the entire ART, and helps to optimize the flow of value.\n\nWhen an Agile Team applies SAFe Scrum, the SM/TC has specialty skills to facilitate effective implementation of SAFe Scrum. When a team applies SAFe Team Kanban, the SM/TC has the specialty skills to facilitate an effective Kanban implementation.\n\nEstablishing Flow with Scrum and Kanban\n\nEvery Agile Team is responsible for establishing a fast, reliable flow of value to the customer. They achieve this by mastering two primary aspects (Figure 4):\n\nA team operating model – SAFe Scrum or SAFe Team Kanban\n\nThe SAFe Team Flow accelerators that enhance the implementation of the model\n\nSAFe Scrum and SAFe Team Kanban provide a set of practices that guide the team. This includes events, communication strategies, and specific rules that direct the progress of the work. But these methods work best with an underlying paradigm that helps the team maximize the flow of value to the customer. SAFe Flow Accelerators (SAFe Principle #6) provides this guiding paradigm. As part of this, teams:\n\nWork in small batches\n\nKeep work-in-process under control\n\nAddress bottlenecks\n\nPeriodically retrospect the product and the process\n\nMost teams start their Agile journey by adopting SAFe Scrum. Practices like cadence-based planning, commitment to iteration goals, frequent retros, a daily sync, and adhering to a short iteration timebox are routine.\n\nHowever, the work of some teams is better suited to respond to frequent and less plannable events. In this case, SAFe Team Kanban is often the preferred team operating model. SAFe Team Kanban is less dependent on iteration timeboxes, focusing more on a continuous flow of stories through the backlog to the customer.\n\nBoth methods are highly effective and are more alike than they are different. And in SAFe, both types of teams apply a Kanban system to manage their backlogs and work activities. In addition, many Agile teams build hybrid models to address their specific needs.\n\nResponsibilities\n\nThe objective of every Agile Team is the same: to build the great products their customers need. They fulfill five primary areas of responsibility, as shown in Figure 5.\n\nEach is described in the sections below.\n\nNote: ‘Product’ is an important choice of words here. Realistically, not every team delivers a tangible, standalone product to an end-user customer, more typically, the full ART is required to do that. However, every team can and should recognize that whatever value they deliver—be it product, systems, subsystem, component, services, APIs, or other valuable assets—all benefit from treating their work as a product and knowing their customer, be they internal or external to the enterprise.\n\nConnecting with the Customer\n\nAgile Teams are responsible for understanding customer needs and defining the functionality needed to satisfy them. In order to develop a thorough understanding of the customer context, they apply Customer Centricity. To understand the problem and design the right solution, they apply Design Thinking. Doing so requires that all Agile teams:\n\nBuild empathy with the customer – To build a great product for the customer, the team needs to think like the customer. However, often due to multiple degrees of separation from the customer, teams may struggle to understand actual customer needs and what represents value to them. Thus, increasing a team’s exposure to the customer context is essential. There are many ways to do that, including:\n\nLeveraging the Product Owners’ skills, knowledge, and responsibilities\n\nEstablishing direct communication with the customer\n\nParticipating in solution support\n\nDirect observation of the customer in action\n\nImplementing solution telemetry to monitor usage\n\nAdditionally, effective Agile teams spend time developing and understanding their primary user personas— and their needs, struggles, and opportunities for improvement.\n\nParticipate in product definition – Agile team members leverage their knowledge of customer personas to create user stories and acceptance criteria. While the solution vision and feature definition is led by Product Management, it’s the teams that create the stories that fulfill that vision, as led by the PO.\n\nDesign and execute experiments – As a part of customer and solution research, Agile Teams plan, execute, and review the results of various experiments. They implement research spikes, low-fidelity models, and prototypes to gain fast feedback.\n\nPlanning the Work\n\nAgile Teams plan their own work. Planning allows teams to stay aligned with the rest of the train and progressively refine work within a short timeframe. Planning involves all team members and relies on collaboration and transparency. Effective planning facilitates alignment to a common goal while leveraging the flexibility and autonomy of each team member in achieving their objectives. Planning occurs at two levels:\n\nART Planning – PI Planning is the event where each Agile Team gains alignment with the rest of the train and creates their backlog for the upcoming PI. PI Planning provides the larger, system view that is necessary to achieve a shared goal. As a result of PI Planning, the team creates a set of PI Objectives and a story-level outline of the planned progression of their work across iterations. This seeds the Team Backlog for the upcoming PI.\n\nTeam planning – Once ART alignment has been established, teams perform shorter-term planning on a regular basis during the PI. The purpose of this planning is to leverage new learnings and plan the next short increment of value. The planning approach differs depending on whether a team applies SAFe Scrum or SAFe Team Kanban.\n\nRefining the Team Backlog – As knowledge emerges, teams continuously refresh and refine their backlog. The backlog is used to identify and prioritize the upcoming work they need to do to deliver their committed value.\n\nDelivering Value\n\nValue delivery is the primary task of an Agile Team. As a part of this effort, a team must be able to define, build, and test their stories. Many teams can also directly deploy new functionality into production or release them directly to the customer. This is the core process that takes place in the Development Value Stream to which the team contributes.\n\nFrequently integrate and test – A fast rhythm of development requires frequent integration and testing. This helps uncover technology and implementation problems early and gives the teams enough time to respond to the findings. The articles on Built-in Quality and Team and Technical Agility provide deeper guidance on these practices.\n\nRegularly synchronize with the rest of the train – While executing the PI, a team has multiple checkpoints with the rest of the train. This can take place in the form of an ART Sync that includes Coaches Sync and PO Sync. These events create visibility into the progress toward current PI objectives and help the ART make timely adjustments.\n\nBuild the continuous delivery pipeline – An effective Agile development process also depends on a continuous delivery pipeline that has mechanisms for Continuous Exploration, Continuous Integration, and Continuous Deployment. This typically requires value stream mapping to identify sources of delay and excessive variability.\n\nRelease frequently – Some teams are able to release directly to the customer. These teams may—typically in collaboration with some specialized teams or Shared Services—establish their own release process. Decisions on when to release value are typically made at different levels: major releases may be decided upon during PI Planning; routine deployments are governed at the iteration level. Others can even be event-driven.\n\nGetting Feedback\n\nThe speed of solution development depends directly on the speed and fidelity of the feedback the team can obtain. Without it, the team cannot adjust the course quickly. Errors start to accumulate, resulting in ineffective and delayed solutions. Both customer and technology feedback are needed to move forward effectively.\n\nFind pathways to the customer – In a large organization, the customer may be many degrees of separation away from the Agile team that creates value. The Product Owner serves as a local customer proxy and can be instrumental in helping the team establish the right connections to obtain direct customer feedback. System Demos are one productive venue for customer feedback. Teams should also seek feedback from ad hoc interactions with the customers who are using the solution in their working environment.\n\nFrequently validate technical concerns – A team must continually validate the assumptions behind the solution architecture and the implementation strategy. Technology feedback comes from frequent integration, testing, and deployment. Additionally, research spikes and prototypes help to cost-effectively explore technical strategies.\n\nImproving relentlessly\n\nRelentless improvement is a core value of SAFe. Agile teams constantly seek ways to improve their process and the outcomes they are responsible for.\n\nSAFe provides a comprehensive approach for measuring competency, flow, and outcomes, the three primary measures that predict business results (Figure 6).\n\nAs a part of the improvement effort, the teams do the following:\n\nRun routine improvement events – Many teams use regular team-level retrospectives during iterations. Additionally, all ART teams participate in a joint Inspect & Adapt event with leaders whose help can be crucial in establishing and implementing necessary corrective action.\n\nImprove some things immediately – Some problems should be addressed as they occur, without waiting for the next improvement event. Addressing issues as they emerge is an integral part of a culture of continuous improvement.\n\nLearn More\n\n[1] Skelton, Matthew, and Manuel Pais. Team Topologies: Organizing Business and Technology Teams for Fast Flow. IT Revolution Press, 2019.\n\nLast update: 22 August 2023"
    }
}