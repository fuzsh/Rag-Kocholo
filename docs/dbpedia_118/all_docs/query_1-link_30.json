{
    "id": "dbpedia_118_1",
    "rank": 30,
    "data": {
        "url": "https://www.datacamp.com/blog/all-about-r",
        "read_more_link": "",
        "language": "en",
        "title": "What is R? - An Introduction to The Statistical Computing Powerhouse",
        "top_image": "https://images.datacamp.com/image/upload/v1648708884/shutterstock_589980632_3b4f9c3d0a.jpg",
        "meta_img": "https://images.datacamp.com/image/upload/v1648708884/shutterstock_589980632_3b4f9c3d0a.jpg",
        "images": [
            "https://images.datacamp.com/image/upload/v1648708884/shutterstock_589980632_3b4f9c3d0a.jpg",
            "https://images.datacamp.com/image/upload/v1648636925/image1_c3708f64bb.png",
            "https://images.datacamp.com/image/upload/v1648636925/image4_72f671f873.png",
            "https://images.datacamp.com/image/upload/v1648709437/screenshot_2022_03_31_at_08_42_33_b301430c26.png",
            "https://images.datacamp.com/image/upload/v1648709438/screenshot_2022_03_31_at_08_44_48_73bddab928.png",
            "https://images.datacamp.com/image/upload/v1714478776/z4yjdbadjqgqtpjpcrmx.png",
            "https://images.datacamp.com/image/upload/v1665758005/summer_worsley_df34d380b8.png 1x, https://images.datacamp.com/image/upload/v1665758005/summer_worsley_df34d380b8.png 2x",
            "https://images.datacamp.com/image/upload/v1665758005/summer_worsley_df34d380b8.png 1x, https://images.datacamp.com/image/upload/v1665758005/summer_worsley_df34d380b8.png 2x",
            "https://images.datacamp.com/image/upload/w_128/v1658164166/What_Can_You_Do_With_R_114196b6f3.png 1x, https://images.datacamp.com/image/upload/w_256/v1658164166/What_Can_You_Do_With_R_114196b6f3.png 2x",
            "https://images.datacamp.com/image/upload/w_384/v1658164166/What_Can_You_Do_With_R_114196b6f3.png 1x, https://images.datacamp.com/image/upload/w_750/v1658164166/What_Can_You_Do_With_R_114196b6f3.png 2x",
            "https://images.datacamp.com/image/upload/v1657881099/DC_logo_new_56cef25cde.png 1x, https://images.datacamp.com/image/upload/v1657881099/DC_logo_new_56cef25cde.png 2x",
            "https://images.datacamp.com/image/upload/v1658157569/karlijn_5fd8178e25.png 1x, https://images.datacamp.com/image/upload/v1658157569/karlijn_5fd8178e25.png 2x",
            "https://images.datacamp.com/image/upload/v1658157569/karlijn_5fd8178e25.png 1x, https://images.datacamp.com/image/upload/v1658157569/karlijn_5fd8178e25.png 2x",
            "https://images.datacamp.com/image/upload/v1657881099/DC_logo_new_56cef25cde.png 1x, https://images.datacamp.com/image/upload/v1657881099/DC_logo_new_56cef25cde.png 2x",
            "https://images.datacamp.com/image/upload/v1662144770/Minoo_Ashtiani_bb46d0f997.jpg 1x, https://images.datacamp.com/image/upload/v1662144770/Minoo_Ashtiani_bb46d0f997.jpg 2x",
            "https://images.datacamp.com/image/upload/v1662144769/Aditya_Sharma_24bd7540bf.jpg 1x, https://images.datacamp.com/image/upload/v1662144769/Aditya_Sharma_24bd7540bf.jpg 2x"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Summer Worsley"
        ],
        "publish_date": "2022-03-30T00:00:00+00:00",
        "summary": "",
        "meta_description": "Learn everything you need to know about the R programming language and discover why it is the most widely used language in data science.",
        "meta_lang": "en",
        "meta_favicon": "/marketing-backgrounds/favicons/apple-touch-icon-57x57.png",
        "meta_site_name": "",
        "canonical_link": "https://www.datacamp.com/blog/all-about-r",
        "text": "R is a statistical programming tool that’s uniquely equipped to handle data, and lots of it.\n\nWrangling mass amounts of information and producing publication-ready graphics and visualizations is easy with R. So are all sorts of data analysis, mining, and modeling tasks.\n\nBecause it was first designed by statisticians for statistical purposes, R is exceptionally well-suited to data science, an important field in today’s world.\n\nWhile R’s core function is statistical analysis and graphics, its use extends past these and into AI, machine learning, financial analysis, and more.\n\nConsistently ranked as one of the world’s most popular programming languages, not to mention one that commands high salaries, R has been around since the early 1990s and is still going strong.\n\nBut what is R? Read on to learn more about the R programming language including its history, who uses it, and possible career paths with R skills under your belt.\n\nWhat is R?\n\nR is a statistical computing and graphics system. This system is comprised of two parts: the R language itself (which is what most people mean when they talk about R) and a run-time environment.\n\nR is an interpreted language, which means that users access its functions through a command-line interpreter.\n\nUnlike languages such as Python and Java, R is not a general-purpose programming language. Instead, it’s considered a domain-specific language (DSL), meaning its functions and use are designed for a specific area of use or domain.\n\nIn R’s case, that’s statistical computing and analysis. By extension, R is commonly used for all manner of data science tasks.\n\nR is equipped with a large set of functions that enable data visualizations, so users can analyze data, model it as required, and then create graphics. In addition to the language’s in-built graphical functions, there are numerous add-ons or modules that facilitate this.\n\nHow Popular is R Programming Language?\n\nR is a popular programming language, especially in certain fields such as data science, academic research, and statistics.\n\nIn October 2023, R held 17th place on the TIOBE Index, and in August 2020, R was in 8th place. Updated monthly, the TIOBE Index is a good indicator of a programming language’s popularity.\n\nThere are 50 languages listed in the index and more than 8000 other programming languages, so it’s safe to say that R is popular!\n\nIn May 2020, R briefly lost its top-twenty spot in the TIOBE Index, leading many to speculate that the language’s jump from academic research to commercial use was quickly supplanted by Python. However, this lull in popularity didn’t last long and as TechRepublic reported, by July of the same year, R was in the top ten.\n\nR is the language of choice for statistical engineers and statistical research. And universities around the world use R to aid their research work in numerous fields.\n\n“R’s success is an example of the power of an academia-supported community to elevate a language beyond its expected threshold.” - Stephen O'Grady, RedMonk Analyst\n\nMany people think R’s jump to top-ten popularity in 2020 was down to the language’s increased use in COVID-19 research. When there’s a lot of data to wrangle, R is the ideal tool—just one reason why the language is still popular today, nearly 30 years after its inception.\n\nWhen was R created?\n\nR was created in the early 1990s by University of Auckland statisticians Ross Ihaka and Robert Gentleman.\n\nIhaka and Gentleman, both then statistics professors at the New Zealand university, saw what Ihaka called a “common need for a better software environment” in their computer science laboratories. This realization prompted the pair to begin developing R, an implementation of the earlier S programming language.\n\nAlthough the professors started working on R in the early 90s, version 1.0.0 wasn’t officially released until February 2000.\n\nWhat does R’s name mean?\n\nThe R language got its name for two reasons: because R is the first letter in the inventors’ names, and because R is a play on the name of its parent language S, which was originally developed by Bell Telephone Laboratories.\n\nR and S and Scheme\n\nTo fully understand R, it’s helpful to understand S, the main language that informed its development.\n\nThe S programming language\n\nS was developed in the mid-1970s by John Chambers and others working for Bell Labs. Its purpose was to offer an interactive approach to statistical computing, one that was user-friendly and made data analysis tasks easier and faster.\n\nIn a 2013 interview, Chambers notes that the Bell Labs team wanted people to have “access to the best computational methods that existed, regardless of where they had come from.”\n\nHe has also said that the team wanted users to “begin in an interactive environment, where they did not consciously think of themselves as programming. Then as their needs became clearer and their sophistication increased, they should be able to slide gradually into programming.”\n\nS’s general philosophy was much like R’s: to offer a software environment that facilitates computational programming and statistical analysis, one that anyone can learn to use.\n\nLike R, S can also be used to write longer programs centered on statistical tasks. Unlike R, though, S and its later iteration, S-PLUS, were licensed products, meaning they had to be purchased from a company.\n\nIt’s important to note that R is not a distinct language; rather, it’s a dialect of S.\n\nSyntax and semantics\n\nLinguists use the terms syntax and semantics to describe elements of natural languages, and computer scientists have adopted these terms for programming languages too.\n\nIn computer programming, syntax refers to the rules that dictate a language’s ‘spelling’ and ‘grammar,’ while semantics refers to how a language’s data or commands are presented.\n\nR’s syntax was very similar to that of S in its early years. This made it easy for people using S-PLUS to change to R, which played a key role in R’s eventual popularity in academia. R’s semantics, however, is closer to that of Scheme, a functional programming language.\n\nIs R a low or high-level language?\n\nR is considered a high-level programming language. This classification is based on its level of abstraction from machine language. Unlike low-level languages that require in-depth knowledge of computer memory and processes, high-level languages like R are designed to be easily understood and written by humans, making them more accessible for statisticians, data analysts, and researchers.\n\nR offers power, extensibility, and flexibility in droves, but the ‘cost’ when compared to languages like Python is a certain level of complexity.\n\nR is not the easiest programming language to learn, but it’s also not as difficult as many would have you believe. DataCamp has been teaching people how to use R for more than a decade, and we’ve fine-tuned our methods.\n\nThe trick is to focus on the essentials first and then to grow your R skills and knowledge as you progress. If you’d like to try R programming, check out our free Introduction to R course.\n\nHow R Has Evolved Over the Years\n\nR has been open-source for most of its lifespan, so there have been big changes to the number of packages available for the language.\n\nThe language itself has undergone some changes, too, as we’ve moved from the first version to the most recent, and the fields in which R is used have also expanded. Before covering that in more depth, let’s take a look at a few milestones in R’s history:\n\nA brief history of R\n\n1991 - Ross Ihaka and Robert Gentleman begin work on a new dialect of S as a research project for the Department of Statistics at the University of Auckland.\n\n1993 - The first announcement of R hits the public via the data archive StatLib and the s-news mailing list.\n\n1995 - Fellow statistician Martin Mächler convinces R’s inventors to release the language under a GNU general public license, making R both free to use and open-source.\n\nIhaka and Gentleman release their seminal paper introducing R to the world.\n\n1997 - The R Core Team was formed, this group is the only one with write access to R source code, and they review and enact any suggested changes to the language.\n\nThe same year, the Comprehensive R Archive Network (CRAN) was formed. This repository of open-source R software packages, extensions to the language itself, helps professionals with myriad tasks.\n\n2000 - R version 1.0.0 was released to the public.\n\n2003 - The R Foundation was formed to hold and administer the R software copyright and to provide support for the R language project.\n\n2004 - R version 2.0.0 is released.\n\n2009 - The R Journal, an open-access journal for statistical computing and research, is established.\n\n2013 - R version 3.0.0 is released.\n\n2020 - R version 4.0.0 is released.\n\nJune 2023 - We're currently on R version 4.3.1.\n\nThe R Community\n\nThe R community is the people all around the world who use R, contribute to the packages available on the CRAN library, or both.\n\nThis community is known for being very active; there are plenty of people running forums about R, blogging about it, and answering questions on Stack Overflow and other places. In addition to all the virtual R resources and support, there are a number of large R conferences that run on a regular basis.\n\nIf you want to do something with R and you’re not sure how to begin, there’s a very good chance that there’s a package available to help you. The bustling R community has produced thousands of tools that extend R’s capabilities.\n\nAccording to CRAN, there are nearly 20,000 R packages available. Some of these packages have risen to prominence in their own right, including the Tidyverse. You can learn more about R packages and how to install them in a separate guide.\n\nThe R Tidyverse\n\nThere’s a good chance that if you’ve read a bit about R, you’ll have heard of the Tidyverse.\n\nThe Tidyverse isn’t a single package; rather, it’s a package of individual R packages. These packages are all designed for data science and analytics.\n\nEach tool in the total Tidyverse package is designed to work in conjunction with the others and provide a very clear flow between data science tasks.\n\nThe Tidyverse is the brainchild of Hadley Wickham, Chief Scientist at RStudio and co-author of ‘R for Data Science.’ This self-proclaimed “opinionated collection of R packages” has proven popular worldwide, and data scientists all over the world now rely on the Tidyverse for their work.\n\nIn fact, it’s safe to say that anyone who wants to work with R or with data, in general, these days needs to understand the Tidyverse. You can check it out in DataCamp’s online Introduction to the Tidyverse and the skill track on Tidyverse Fundamentals with R.\n\nThe Rise of Data Science\n\nIt would be amiss to chart R’s evolution without mentioning the rise of data science in more detail.\n\nAs the world shifted from analog systems to digitization (making existing systems digital) in the late 20th century, data became increasingly valuable. Today, it’s worth more than gold.\n\nBusinesses in all sectors and industries need to understand their clients and potential clients to remain competitive, and public organizations can do a better job when they’re equipped with as much information as possible.\n\nAll of this data holds plenty of insights that organizations can capitalize on, they just need the right tools.\n\nR is one of those tools, as is Python, SQL, Power Bi, Tableau, and others. To properly understand the information hidden in the data, we need professionals such as data scientists and analysts.\n\nAs data science became more important in the modern world, the demand for people with the technical skills to read and interpret data rose accordingly. Today, for example, data science is one of the highest-paid IT roles, with an average salary of over US$120,000, according to Indeed.\n\nWho Uses R?\n\nPlenty of professionals use R in their work, and the language is used across a variety of fields. Before looking at those, let’s review a few possible careers with R skills.\n\nCareers with R\n\nData scientist\n\nStatistical engineer\n\nData analyst\n\nR programmer\n\nData architect\n\nDatabase administrator\n\nGeo statistician\n\nResearcher\n\nBusiness intelligence\n\nFinancial analyst\n\nMachine learning scientist\n\nQuantitative analyst\n\nStatistician\n\nAnd more…\n\nFields and industries where R is used\n\nBecause it’s powerful and capable of all sorts of data analysis, visualization, and modeling tasks, R is used in a diverse range of industries and sectors. Here are just a few:\n\nAcademia\n\nMuch like English is the world’s lingua franca, R is the dominant programming language in many academic institutions. Its use isn’t limited to statistics either; many kinds of research need quantitative data including correlational, experimental, and descriptive, and these occur across fields.\n\nDigitalization (the process of embracing data and associated tools) and the rise of big data have touched all fields of study and research, leading to increased use of R in academic settings.\n\nFor example, IBM’s Statistical Package for the Social Sciences (SPSS) was once the leading software choice for social sciences. Now, R is the top choice for many reasons:\n\nR is 100% free for both institutions and students\n\nR is compatible with all operating systems and data from various file types\n\nR enables transparent and reproducible research\n\nR makes creating data visualizations easy\n\nA 2013 DataCamp survey on R in education showed that 71.1% of the respondents were in economics or business studies while only 10.5% were in computer science, showing that data literacy and skills matter across the board.\n\nData Science\n\nAlongside Python, R is an important language in the world of data science. With the help of R, professionals can model and analyze both structured and unstructured data, they can also use R to create machine learning and statistical analysis tools that assist in their work.\n\nR makes handling data from various sources easy, from import to analysis. Plus the R system itself and the CRAN library offer plenty of data visualization functions and tools, which makes it easy for professionals to present their research and findings in an impactful and easy-to-read format.\n\nStatistics\n\nIt goes without saying since it’s a statistical programming language, but R is the go-to for statistics and statistical computing—after all, it was designed by statisticians for this purpose.\n\nA broad range of packages supports work in this field, while the R language itself can be used to develop software tools that include statistical functions. Its use may even go further. In an interview, RStudio computer scientist Joe Cheng notes that R can be used as a general-purpose language to implement new statistical languages.\n\nFinance\n\nWith its flexibility and aptitude for any data analysis task, it’s not surprising that R has found increased use in finance. Companies such as ANZ and Bank of America use the language for credit risk analysis and modeling, financial reporting, handling investment portfolios, and numerous other tasks.\n\nDedicated tools such as jrvFinance and the bundle package Rmetrics allow those working in finance to perform financial computations, even if they have limited programming experience.\n\nDataCamp offers a range of R for finance courses, including Finance Fundamentals in R, and Applied Finance in R.\n\nSocial Media\n\nSince its early days of Open Dairy and Bolt, social media has grown its reach from a few tech-savvy users to practically everyone who owns a smartphone. These days, it’s hard to find someone who uses no social media platforms.\n\nSocial media is also big business, a business that primarily trades in data. Companies such as Meta (Facebook and Instagram) and TikTok rely on users’ habits to offer targeted advertising to other companies.\n\nEvery single thing you do or interact with on social media generates data that can be used for this purpose, and tools such as R are the perfect way for social media companies to extract insights from the mass amounts of data they collect and manage the algorithms that keep users coming back for content that suits their interests.\n\nWhich companies use R?\n\nHere are just a few of the big-name companies that use R in their tech stack:\n\nBank of America\n\nAmazon\n\nFacebook\n\nJP Morgan\n\nGoogle\n\nAccenture\n\nLinkedIn\n\nIBM\n\nUber\n\nDeloitte\n\nThe New York Times\n\nFord\n\nHP\n\nAnd many more…\n\nSome Code Examples\n\nR can perform basic code like creating a matrix and its manipulation, as we can see below:\n\n#Let’s create a matrixmatrix_A <- matrix(1:10,nrow = 5, byrow = TRUE)matrix_A\n\n#Now let’s add a column to the matrixmatrix_A1 <- cbind(matrix_A,c(6:10))matrix_A1\n\nIt can also help with data analysis and manipulation:\n\n#Let's load a built-in dataset data(mtcars)#print first 10 rowshead(mtcars,10)\n\n#Let us try to sort the dataset based on ascending order of horsepowerattach(mtcars)df<- mtcars[order(hp),]head(df,10)\n\nR Basics and Advanced R\n\nPeople with basic R knowledge can use the programming language to perform basic data sorting and analysis tasks, such as assigning variables and using the command line to perform calculations.\n\nThey can also produce visual representations of data, such as pie charts or graphs. They might even use R to help them manage their own personal finances or those of a small company.\n\nAs expected, people with advanced knowledge of R can do all these things and many more besides.\n\nR’s use extends past creating visualizations and data analysis. Because it’s a powerful statistical computing tool, R can be used to build predictive machine learning models and other data science tools.\n\nAlthough it’s primarily a functional and domain-specific language, R can even be used for some object-oriented programming tasks. Experts may also use R for metaprogramming, the creation of programs that can then write or manipulate other programs.\n\nWhether you’d just like a tool to better manage your own spending habits or you want to become a master of the R code, DataCamp can help. Our broad range of R courses and career tracks are suitable for everyone, from absolute R beginner to competent R programmer and beyond.\n\nCheck out our R Cheat Sheet, which outlines some of the basics\n\nShould I Choose R or Python?\n\nWe've got a whole article covering R vs Python - in reality, if you're looking to seriously pursue data science and analytics, you'll eventually need to learn both languages. Python, a general-purpose language with a broad ecosystem, is sometimes favored for its versatility, making it ideal for machine learning, AI, and integration with other tools. R, on the other hand, was specifically designed for statistical computing and graphics, making it a preferred choice for specialized statistical analyses and research.\n\nThe choice of which to learn or use will often depend on the project you're working on and what you hope to achieve. Thankfully, both languages have many learning resources you can turn to when you're honing your skills.\n\nWhat is R? Final Thoughts\n\nR is a popular programming language that allows people to adeptly handle mass amounts of data, generate publication-quality visualizations, and perform a range of statistical and analytic computing tasks.\n\nUsed in fields including data science, finance, academia, and more, R is powerful, flexible, and extensible. It’s also free and completely open-source, which means there are plenty of packages available to help R users with all manner of tasks and a supportive community of R lovers worldwide."
    }
}