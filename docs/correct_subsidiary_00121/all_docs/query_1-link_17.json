{
    "id": "correct_subsidiary_00121_1",
    "rank": 17,
    "data": {
        "url": "https://medium.com/%40girish1729/zero-to-linux-pro-c20560f0d331",
        "read_more_link": "",
        "language": "en",
        "title": "A brief look at web 2.0, JavaScript and HTML5",
        "top_image": "https://miro.medium.com/v2/resize:fit:626/0*mgSiYu5mjx1Nosgq.jpeg",
        "meta_img": "https://miro.medium.com/v2/resize:fit:626/0*mgSiYu5mjx1Nosgq.jpeg",
        "images": [
            "https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png",
            "https://miro.medium.com/v2/resize:fill:88:88/0*2blFLovHo1tqiQPI.jpeg",
            "https://miro.medium.com/v2/resize:fill:144:144/0*2blFLovHo1tqiQPI.jpeg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Girish Venkatachalam",
            "medium.com"
        ],
        "publish_date": "2023-08-10T06:28:34.966000+00:00",
        "summary": "",
        "meta_description": "If you are old enough to know what Internet was in the 90s, what websites meant and how few videos were around then you know what I mean. When Google started mapping the globe to compete with Yahoo…",
        "meta_lang": "en",
        "meta_favicon": "https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png",
        "meta_site_name": "Medium",
        "canonical_link": "https://medium.com/@girish1729/zero-to-linux-pro-c20560f0d331",
        "text": "Birth of web 2.0\n\nIf you are old enough to know what Internet was in the 90s, what websites meant and how few videos were around then you know what I mean.\n\nThe stepwise progression toward the web of today is the focus of this newsletter.\n\nWhen Google started mapping the globe to compete with Yahoo! maps then Ajax was born with the XMLHTTPRequest method in browser to fetch data asynchronously.\n\nNetscape came up with ECMAScript that was renamed as JavaScript. Websites started getting more top heavy instead of doing everything on the backend.\n\nMore interactivity, more powerful end user machines meant that the web components that made the web also changed to evolve with the times.\n\nInternet of today is no longer just HTML. It is much more than that. It is no longer marquees, blinking text, images and download links.\n\nSocial or participative web\n\nWeb 2.0 was named as social web by Darcy DiNucci an author and expert in end user experience. It is social indeed. With today’s web being much more suited for taking over the real world social interactions limited by geographic proximity to something beyond.\n\nYou can share photos, videos, voice notes and more. Smell is the only sense that cannot be shared online yet.\n\nAll other aspects of human behavior can be shared online. We can build communities, relationships, conduct biz and romance.\n\nThere is no dearth of media rich content. It has been a content explosion of sorts.\n\nThe geocities home pages of 90s\n\nBut things weren’t always this way. When Internet was only an inter connection of disparate networks, then websites were only static home pages that ran dumb web pages with 0 processing on the browser end.\n\nEven form filling had to be validated by database queries on backend. Today’s web experience is a very long list of improvements from the world without JavaScript on the frontend.\n\nWhat changed?\n\nJavaScript quickly caught on with web developers. Various frameworks like jQuery, Angular, Svelte, React and Vue started dominating the web scene.\n\nWith developer focus shifting from the backend SQL queries and HTML/CSS to thousands of lines of JavaScript code that ran powerful frontend tools that did word processing, desktop publishing,drawing , video embedding, audio processing and more, things changed permanently.\n\nThe web experience was no longer limited to websites and information store houses. Instead it became a driving force of moving all desktop apps that were written for end user platforms or OSes to the web browser.\n\nGoogle even came with a Chromebook, a machine that only worked when connected to the Internet.\n\nWhy is ECMAScript or JavaScript important?\n\nJavaScript started becoming more and more developed as a programming language that delivered real value. The power of object oriented programming, the ability to manipulate the HTML DOM, the ability to modify CSS and do powerful asynchronous tasks, using closures and promises for harnessing the event loop all worked wonders for end user richness.\n\nAs a non techie end user, the returns given by JavaScript when combined with the HTML evolution and CSS to go with it were pretty cool.\n\nMeanwhile advances in HTTP pipelining, in burgeoning speeds and bandwidth by laying more undersea cables, CDNs and more media rich content to pump over the browser meant that browser became the single most important arm of the Internet experience.\n\nWhat is node.js?\n\nNode.js is nothing but JavaScript written for the backend. It is any JavaScript code that runs outside of the browser VM. The virtual machine instead runs inside a traditional OS like Windows, Linux or MAC.\n\nAs you may know node.js made significant inroads into traditional processing tasks on Linux that were dominated by older programming languages. Using the JavaScript event loop based asynchronous programming paradigm shifted the balance in favor of efficient code for performing mundane tasks on Linux.\n\nFor instance I have written a node.js based document processor to work with JSON. I have done cryptography projects using node.js. You can do sockets coding, create even a mail server (Haraka) and more.\n\nJust look at GitHub for the various JavaScript projects that are massively popular and you can get an idea what I mean.\n\nEvolution of web standards\n\nWebsockets, BOSH, XMPP, JSON and more came and brought along its own improvements that paid rich dividends for the end user.\n\nW3C and other standards bodies started working on responsive websites, the picture tag for images for saving network resources and identified a semantic structure for HTML that grew with the need to evolve resulting in HTML5.\n\nHTML, CSS and JavaScript\n\nAs you can perhaps guess, the web design people or full stack developers have to be really conversant with HTML, CSS and JavaScript. They need to be able to weave their JavaScript logic to manipulate the content inside the HTML Document Object Model to deliver value to end users.\n\nThe above diagram captures the essence of a web page. But a web page is only part of the story. Without a powerful HTTP protocol that dropped old idea of starting a new TCP connection for every click or fresh request, it started doing pipelining of multiple requests, instead of using age old text based verbs, HTTP started carrying tunneled traffic as well as websocket high performance instantaneous data.\n\nAll these and more have given us a truly spectacular end user experience. With more to come as years go by.\n\nConclusion\n\nInternet has proved one thing. Even if everything looks done and finished, still things will change. More changes come about to accommodate ever increasing demand for end user delight.\n\nCurrently video is the media that is produced the most as opposed to text of before. And Internet has already started taking the media explosion in its stride.\n\nAs years go by, the web standards that make all this possible will evolve even further to take on more changes."
    }
}