{
    "id": "correct_subsidiary_00121_1",
    "rank": 49,
    "data": {
        "url": "https://www.htmhell.dev/adventcalendar/2023/5/",
        "read_more_link": "",
        "language": "en",
        "title": "The Hellish History of HTML: An incomplete and personal account",
        "top_image": "https://www.htmhell.dev/images/og/advent23_5.png?s=011221s",
        "meta_img": "https://www.htmhell.dev/images/og/advent23_5.png?s=011221s",
        "images": [
            "https://www.htmhell.dev/adventcalendar/2023/5/images/HellishHistory.png",
            "https://www.htmhell.dev/adventcalendar/2023/5/images/Tim_tshirt.png",
            "https://www.htmhell.dev/adventcalendar/2023/5/images/blink_main.jpg",
            "https://www.htmhell.dev/adventcalendar/2023/5/images/NSvIE.jpg",
            "https://www.htmhell.dev/adventcalendar/2023/5/images/WebmasterPalette.jpg",
            "https://www.htmhell.dev/adventcalendar/2023/5/images/front-end-stack.png",
            "https://www.htmhell.dev/adventcalendar/2023/5/images/StatCounter-browser-ww-monthly-200901-201612.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-12-05T00:00:00",
        "summary": "",
        "meta_description": "A collection of bad practices in HTML, copied from real websites.",
        "meta_lang": "en",
        "meta_favicon": "/apple-touch-icon.png",
        "meta_site_name": "The Hellish History of HTML: An incomplete and personal account - HTMHell",
        "canonical_link": "https://www.htmhell.dev/adventcalendar/2023/5/",
        "text": "by Jason Cranford Teague published on Dec 05, 2023\n\nNote: HTML standards are developed first in browsers, so the version might have already became the de facto standard before the official standard document is released.\n\nThe story so far:\n\nIn the beginning Tim Berners-Lee created the World Wide Web. This has made a lot of people very angry and â putting all of humanity in constant contact with each other â been widely regarded as a bad move.\n\nThis would be called the Hypertext Transfer Protocol, but you probably see it every day as http://. Although initially intended as a way to share scientific papers, Berners-Lee quickly realized it would do a lot more than that:\n\nI designed it for a social effect â to help people work together â and not as a technical toy.\n\nHis vision has led us to today, where the Web is now the predominant information platform for the planet Earth, and the language he created to create documents, HTML, is used by billions.\n\nUnlike other systems at the time that were making use of the growth of home computers and modems â like AOL and Compuserve â Berners-Lee provided the World Wide Web as a free and open standard:\n\nThe web is for everyone. It should be accessible to people with disabilities and be available in whatever language they speak.\n\nHTML: The Early Years (1990 â 1991)\n\nIn 1990, the Web was at best an âalphaâ version of what it would become. Until then, computer networks were generally limited to a local area (LAN) and required a good deal of computer knowledge to use, much less create. There were other contenders at the time that allowed wider area networks (WAN) that could communicate with computers around a country or around the World. Most notable of these was the Internet. My favorite (and arguably the most popular) way of traveling the Internet in the early 1990s was Gopher. Gopher was (and technically still is) a way to retrieve documents from the Internet stored on a server. However, it quickly fell out of favor after HTTP arrived on the scene. This is, probably for the best. Can you imagine if we were all surfing the Gopher today?\n\nWhat HTTP had going for it was HTML. Every single web page ever created uses the Hypertext Markup Language. Tim based HTML off of Standard Generalized Markup Language (SGML) which was already in common use at CERN, mostly by just adding the <a> tag for hypertext links.\n\nIn the early 1990s, HTML was pretty limited. In fact it didnât include <img> tags, and its design capabilities were sub-par even when compared to even the clunky word processors of the day. So web pages of the time at best looked like poorly formatted text files.\n\nWhat the Web did offer, though, was the seemingly magical ability to click a link on one web page and instantly (ok, quickly) load another web page created by anyone else located anywhere in the world.\n\nIn 1990, this was big stuff!\n\nHTMLâ1â & HTML+: The Wild Frontier (1991 â 1995)\n\nThe first public mention of HTML was an informal CERN document in 1991, listing just 18 tags. There are now around 140. The Web in those early years was just an academic curiosity used by Universitiesâ¦ well, used by tech geeks at a few universities. The HTML tags were so informal that they were really defined more by whatever the person who wrote the Web browser code wanted them to be and they could (and did) just make up their own.\n\nAlthough there were a few web browsers available, there was one that rose to popularity amongst the tech geeks of the time. Mosaic, released in 1993, was co-created by a (at the time) idealistic and starry eyed student by the name of Marc Andreessen atttending the University of Illinois at Urburna-Champaign. Marc decided it was such a good idea that, in 1994, he released Netscape Navigator as a consumer product. Free from academic constrains, Netscape could add features and functionality to appeal to non-academics as well as add whatever tags they felt appropriate. These tags were referred to as HTML+.\n\nThis freedom led to a lot of growth in what the Web could do with tags for greater styling (remember, CSS is still several years off) and structure. Added during this time were tags we take for granted like tables, forms, and inline images.\n\nThis freedom also led to a few really terrible tags, for example Netscape introduced <blink>, which, in case you canât tell, caused the enclosed content to blink on and off. No, you couldnât control the speed. No, you couldnât make it stop. The text just blinked on and offâ¦ on and offâ¦ on and offâ¦ and would keep doing that until you left the page.\n\nUnfortunately, this also meant that if you used tags recognized by one browser there was no guarantee they would be implemented or even included by another. This lead to problems when your web page didnât display the way you intended. Fortunately, HTML is a very forgiving language, and if the browser didnât recognize a tag it was supposed to just ignore it completely but should still display the content as if there was no tag. Still, imagine if you had set up a data table for your web page. If the userâs browser didnât recognize the <table> tag, all that information becomes an unintelligible mess.\n\nAnother problem on the horizon was that there was no guarantee that the different browser makers would agree on what each tag specifically did or even what to call them. One browser might display a <p> with the first line indented, while another could require you to add an extra <p> or <br><br> to add a space between paragraphs. Interestingly, what we did at the time out of necessity â no indent and an extra space between paragraphs â has became the editorial norm we still use today.\n\nThere was obviously a need for some kind of standard for HTML if the Web was going to grow out of its infancy.\n\nIn 1994, Tim started The World Wide Web Consortium, at first to create standards for HTML that could be agreed upon and used by anyone creating browsers and websites.\n\nNetscape would rule the early web until Microsoft, seeing the threat to their desktop market, ignited the bitter struggle known to legend as The Browser Wars.\n\nHTML2: The Standards Rise (1995 â 1997)\n\nRealizing that all of these different browsers needed to agree on exactly what tags were available in HTML and at least a rough guideline on how they should present the content, Tim started The World Wide Web Consortium.\n\nThe W3C would become the recognized body for setting Web technology standards, including (amongst many others) HTML, CSS, SVG, XML, and Web Accessibility. The one exception to this is JavaScript, which is controlled by ECMA International.\n\nHTML2 attempted to make order out of the chaos that HTML had quickly become. Although not introducing any particularly exciting features, it codified the existing features to give everyone a level playing field to work on.\n\nI just want to reiterate that at this point in the Web, CSS (which today does the lionâs share of actual visual design on the Web) and JavaScript (which does the lionâs share of interactivity on the web) were both new technologies that even if implemented had a lot of cross-browser inconsistencies. JavaScript caught on fast, but it would be the turn of the century before CSS would become the default way to add a visual layer to HTML code.\n\nHTML3.2: Short and Sweet (1997)\n\nAlthough it didnât last long as a standard, HTML3, brought the standard fully under the control of the W3C. Despite working on it for almost two years, HTML 3.0 was never released as a standard. According to the W3C, the difference between HTML 2.0 and HTML 3.0 was, âso large that standardization and deployment of the whole proposal proved unwieldyâ and was eventually dropped.\n\nInstead of starting from scratch, the W3C worked to refine the 2.0 standard, releasing HTML 3.2 (code named wilbur for reasons no one is sure of) in January of 1997 HTML4 was released a little less than twelve months later in December.\n\nBy 1997, the Web was beginning to take off as a commercial platform. HTML 3.2 standardized features we take for granted today like tables, text flow around images, and inputs. Crucially, HTML 3.2 was backwards compatible with HTML 2, meaning that older Web pages could be displayed, something that still holds true to today.\n\nAlthough some tags were depreciated â most notably <blink> and <marque> to the celebration of many â it secured HTMLâs future as a stable standard that could be relied on. In fact, the one serious attempt to move away from the principle of backwards compatibility ended in time waisting disgrace. But weâll talk more about XHTML2 in a bit.\n\nAlthough short lived, the HTML 3.2 recommendation set the stage for keeping the standard free and open, so that no one company could monopolize or privatize it. Instead, the W3C the took public input and invited experts and company representatives to help guide its development and approve the final recommendations, another principal the W3C still follows.\n\nSometime around 1996â97, the Web began to quickly gain in popularity as more and more people saw its usefulness. There were publications moving online making news instant, online stores that could undersell their brick-and-mortar competitors (thanks Amazon), and much improved web search capabilities (thanks Google). Oh, and there were apparently some photographs of scantily clad men and womenâ¦ ummmâ¦ exercising together.\n\nThis was a time known as the Dot-com Boom.\n\nHTML4: Boom Goes the Web (1997 â 2014)\n\nIt was the best of times, it was the worst of times. The HTML4 standard was released and JavaScript and CSS, despite browser inconsistencies, were being adapted to create better designs for a more dynamic Web.\n\nHTML4 improved tables and forms, introduced support for CSS and JavaScript, allowed better accessibility features and internationalization, you could embed external content with the <iframe> tag (the much maligned <frame> tag was deprecated), and plugins like Flash could be added using the <embed> tag.\n\nA gold rush began, with start-up companies springing up like weeds. This period was know as the Dot-Com Boom. Everybody and their brother had an idea for how to make money out of the Web, and they all needed someone who knew HTML. Jobs quickly flourished for Information Architects, Visual Designers, and Programmers. The good times of free gourmet meals at work, video arcade break rooms, and corporate parties on cruise lines seemed like it would never end.\n\nAt the same time, two different Web browsers were vying for the hearts and minds of the Web viewing public. This was a time known to Web lore as âThe Browser Warsâ as Microsoft Internet Explorer and Netscape Navigator battled it out. Maybe we should really call this The First Browser War or The Great Browser War or Browser War I or maybe even WWWWAR I. As we shall see, another browser war was less than ten years away and another one may be going on now.\n\nThe Dot-com boom turned out to be a bubble and the bubble began to burst in late 2000. I will not dwell too long on this sad chapter in Web history, only to say that it had a profound effect on the burgeoning Web professionals of the day. Many were unceremoniously dumped from their first job â their dream job â crying over stock options that went from millions to pennies on the dollar all while watching the entire industry seemed to be imploding around them.\n\nThat said, the Dot-com bust cleared the way for a rethinking of how the web would work. Just a few years later, there was an explosion of new sites that were finally realizing the promise of the Web. Although Web 2.0 is often thought of as starting in the early 2000s, the power that drove it had been around since the mid-1990s when Cascading Style Sheets and Javascript (the duo technologies often referred to together at the time as DHTML or Dynamic HTML) became standards adopted by Web browsers.\n\nWhat had held the development back was the technical debt of how the web was started and inconsistencies in how browsers displayed the Core Web Standards (HTML, CSS, JavaScript). What would look great in Netscape might fall apart in Internet Explorer, so we developed a lot of work arounds and kludges or just limited designs for cross-browser compatibility.\n\nFor better or worse, by 2001 Microsoft came out on top, and Web designers could begin to rely on a consistent, if lack luster in its standards adherence, Web browser to create for. Web2.0 could now actually take off.\n\nAfter that, things simmered down for a bit in a period I refer to as âPax Webâ, and Flash, although not an open standard like HTML, was quickly adapted to bring more video and interactive content to the Web. Flash was easy enough for designers to use without having to learn a lot of code, and allowed for dynamic and highly interactive designs, something we struggle to recreate on the Web even today after Flashâs demise at the hands of the Apple iPhone.\n\nMy Own HTMHell: Internet Explorer 6\n\nAsk any Web designer or developer working in the 2000s what it was that woke them up screaming in the middle of the night in panic and rage, the answer will likely be Internet Explorer 6. Launched in 2001 and preinstalled on every Windows computer as the default browser, it became the Internet to many people.\n\nWhile talking to a class of fourth graders in the mid-2000s about the Web, I wanted to use their class computer to show some examples and asked the teacher if they had a Web browser. Her response was, âNo, we just have the Internet,â and pointed to the Internet Explorer Icon.\n\nDespite being the window to the web for billions (at its height, IE6 had something like around 80% of the world browser market), it had spotty, incomplete, inconsistent and buggy Web standards implementations. This made the job of creating Web sites difficult at the best of times, especially if you wanted to stick to standards and maintain cross-browser support.\n\nI spent many, many, MANY hours during that time adjusting and re-adjusting my HTML, CSS, and JavaScript, using arcane kludges â like playing a sadistic whack-a-mole where whacking one guarantees another five popping up â and often just having to settle for the lowest common denominator to get what I wanted to display the way I wanted it to display the same way on every browser.\n\nXHTML1: Strict Machine (2000 â 2008)\n\nAlthough HTML4 solidified the Web, there were those who thought it too loose-goose to be considered a real solution for data mark up. HTML was very forgiving. It didnât require that you follow proper syntax and anything the browser didnât understand it would just throw out. That is browsers except IE6, of course, which would just choke (more HTMHell).\n\nIn 2000, the W3C released XHTML 1.0 as a reformulation of HTML using XML syntax. Extensible Markup Language (XML) had been around for a while as a markup language used to structure and organize data. The W3C decided to establish a competing standard to provide easier integration with XML code. XHTML aimed to combine the best of HTML and XML, providing stricter rules for markup and enabling interoperability with XML-based technologies.\n\nXHTML was stricter than simple HTML, meaning that syntax couldnât be fudged, but creating a page using XHTML was compatible with and little different than creating one in HTML4. However, it did force developers to be more semantic, consistent, and accessible with their code, something still important today.\n\nXHTML2: Look Back in Anger (DOA)\n\nThe idea behind XHTML2 was bold, brave, and completely ineffective. Rather than simply evolve HTML and XHTML, XHTML2 sought to start over and create a stricter and more modular version the Web markup language. It was heavily based on XML and eliminated all presentation elements in favor of CSS. The idea was to force the complete separation of structure from presentation thus allowing for the code to be device independent.\n\nThere was just one problem: XHTML2 would not be backwards compatible.\n\nHTML had, since its beginning, been backwards compatible, meaning that older Web pages could display even in browsers using newer HTML standards. XHTML2 would have quite literally broken the Web. In addition, the new language was far more complex, and stricter enforcement of syntax and structure made creating Web pages much more difficult without a programming background.\n\nDevelopment ofÂ XHTML2 was eventually abandoned in 2009 as interest in a more promising standard was catching on.\n\nHTML5: A New Hope (2014 â Now)"
    }
}