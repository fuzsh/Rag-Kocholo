{
    "id": "dbpedia_2232_2",
    "rank": 67,
    "data": {
        "url": "https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-8-103",
        "read_more_link": "",
        "language": "en",
        "title": "Modeling biochemical transformation processes and information processing with Narrator",
        "top_image": "https://static-content.springer.com/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig1_HTML.jpg",
        "meta_img": "https://static-content.springer.com/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig1_HTML.jpg",
        "images": [
            "https://pubads.g.doubleclick.net/gampad/ad?iu=/270604982/bmc/bmcbioinformatics/articles&sz=728x90,970x90&pos=LB1&doi=10.1186/1471-2105-8-103&type=article&kwrd=Process Node,Graphical Notation,System Biology Markup Language,Species Transformation,System Biology Graphical Notation&pmc=L15001,B12050,I23050,L17004,M14018&",
            "https://bmcbioinformatics.biomedcentral.com/static/images/bmc/logos/logo-bmc-white-series-d1f4e4f0a7.svg",
            "https://bmcbioinformatics.biomedcentral.com/static/images/bmc/logos/logo-bmc-white-strapline-sn-f224388d67.svg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig1_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig2_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig3_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig4_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig5_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig6_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig7_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig8_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig9_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig10_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig11_HTML.jpg",
            "https://media.springernature.com/lw685/springer-static/image/art%3A10.1186%2F1471-2105-8-103/MediaObjects/12859_2007_Article_1475_Fig12_HTML.jpg",
            "https://pubads.g.doubleclick.net/gampad/ad?iu=/270604982/bmc/bmcbioinformatics/articles&sz=300x250&pos=MPU1&doi=10.1186/1471-2105-8-103&type=article&kwrd=Process Node,Graphical Notation,System Biology Markup Language,Species Transformation,System Biology Graphical Notation&pmc=L15001,B12050,I23050,L17004,M14018&",
            "https://bmcbioinformatics.biomedcentral.com/track/article/10.1186/1471-2105-8-103",
            "https://bmcbioinformatics.biomedcentral.com/static/images/logo-springernature-acb40b85fb.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Johannes J",
            "Niall M"
        ],
        "publish_date": "2007-03-27T00:00:00",
        "summary": "",
        "meta_description": "Software tools that model and simulate the dynamics of biological processes and systems are becoming increasingly important. Some of these tools offer sophisticated graphical user interfaces (GUIs), which greatly enhance their acceptance by users. Such GUIs are based on symbolic or graphical notations used to describe, interact and communicate the developed models. Typically, these graphical notations are geared towards conventional biochemical pathway diagrams. They permit the user to represent the transport and transformation of chemical species and to define inhibitory and stimulatory dependencies. A critical weakness of existing tools is their lack of supporting an integrative representation of transport, transformation as well as biological information processing. Narrator is a software tool facilitating the development and simulation of biological systems as Co-dependence models. The Co-dependence Methodology complements the representation of species transport and transformation together with an explicit mechanism to express biological information processing. Thus, Co-dependence models explicitly capture, for instance, signal processing structures and the influence of exogenous factors or events affecting certain parts of a biological system or process. This combined set of features provides the system biologist with a powerful tool to describe and explore the dynamics of life phenomena. Narrator's GUI is based on an expressive graphical notation which forms an integral part of the Co-dependence Methodology. Behind the user-friendly GUI, Narrator hides a flexible feature which makes it relatively easy to map models defined via the graphical notation to mathematical formalisms and languages such as ordinary differential equations, the Systems Biology Markup Language or Gillespie's direct method. This powerful feature facilitates reuse, interoperability and conceptual model development. Narrator is a flexible and intuitive systems biology tool. It is specifically intended for users aiming to construct and simulate dynamic models of biology without recourse to extensive mathematical detail. Its design facilitates mappings to different formal languages and frameworks. The combined set of features makes Narrator unique among tools of its kind. Narrator is implemented as Java software program and available as open-source from http://www.narrator-tool.org .",
        "meta_lang": "en",
        "meta_favicon": "/static/img/favicons/bmc/apple-touch-icon-582ef1d0f5.png",
        "meta_site_name": "BioMed Central",
        "canonical_link": "https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-8-103",
        "text": "Motivation\n\nOne goal of investigating the dynamic behavior of biochemical systems and processes is to understand biological causality in terms of regulation and control mechanisms. Computerized mathematical models of such dynamic behavior have become an important methodology in the pursuit of this goal. Many modeling and simulation tools have been reported in the literature. The Systems Biology Markup Language (SBML) Web site [1] lists more than 100 such tools, all of which adhere to the SBML standard, facilitating the exchange of biochemical reaction network models. In addition to systems modeling and simulation tools, the SBML site posts a large number of tools addressing other tasks, including tools to convert SBML files into other languages or formats (such as R [2], Matlab [3] or Mathematica [4]), to modify and combine different SBML files (see for example SBMLmerge [5]), and to interactively analyze and explore a large number of already developed biological models (e.g., Web-based kinetic modeling [6, 7] and kinetic model databases or modelbases [8]).\n\nSeveral excellent tools have been developed for modeling and simulating biochemical networks, some of which provide sophisticated, GUI-based design tools for visual model development. Most of these tools are freely available as software packages or as online tools. Examples include Copasi [34], Virtual Cell [9], JDesigner [10], CellWare [12] and CellDesigner [11, 33], which are well developed and widely used in the systems biology community.\n\nA critical weakness of the symbolic notations of these tools is their lack of supporting an integrative representation of biological transformation and transportation processes as well as biological information processing.\n\nWithin the context of this work, we define species transformation as the alteration or change of species participating in biochemical processes. Examples of species transformation include stoichiometric reactions, enzymatic reactions, synthesis and degradation processes or modification processes such as methylation and phosphorylation. Biological transport refers to processes that transport organic, biochemical or inorganic substances between or within cells. Protein translocation across subcellular compartments or material flow through biological membranes are examples of biological transport. Biological information processing controls the processes involved in species transformation and species transport. By processing the information provided by one or more information sources and by regulating biological transport and transformation processes accordingly, biological systems can control both the maintenance of a state and also state transitions from one state to the next. Based on this definition information sources can be of different biological and non-biological nature such as a set of transcription factors controlling the expression of a gene, or physical parameters influencing a biological process (e.g. temperature, osmotic pressure or pH-values). Typical examples of biological information processing include gene regulatory processes and cell-cell or cell-environment interactions mediated through receptor proteins. To simultaneously model species transformation and biological information processing is important because only this integrative approach can describe biochemical processes including the influencing factors that control such processes and their interplay. For example, a model of osmotic shock in yeast should capture species transformation and information processing because it is not possible to formulate the causal dependencies of osmotic shrinking and swelling of yeast cells by defining transformation processes exclusively. Instead the processing of internal and external ion concentration levels is fundamental in the response processes initiated by the yeast cells and thus must be integrated into the model to provide contextual causality of the underlying system. While the main focus of most existing tools is placed on the description of species transformation, the modeling of information processing which controls such transformations is an important feature missing in those tools. The main novelty of the Narrator tool is that it facilitates the integrative modeling and simulation of biological transformation, transport and information processing.\n\nThe following illustrative example is to demonstrate the necessity of an integrative modeling approach that combines transformation and information processing. It is based on a model of osmotic shock in yeast and was developed by Klipp and coworkers [15]. This model, illustrated in Figure 1, integrates biochemistry (species transformation, gene regulation, metabolism) and biophysics (volume and internal and external osmotic pressure). While the control system involving signal transduction, gene regulation, metabolic transformation and glycerol transport, can be seamlessly described with the abovementioned tools, it is difficult to represent the biophysical system, which involves information or signal processing, with the graphical notations provided by these tools. The development of the Narrator software tool was driven by the need to model and simulate such multi-modal biological systems.\n\nCo-dependence models\n\nThe Narrator tool presented in this paper implements the Co-dependence Methodology [14], which consists of a set of concepts and tools facilitating the modeling and simulation of biological systems and processes. Among others, the development of this methodology was guided by the following needs: The methodology should\n\n1.\n\nEnable life scientists to express the full complexity of biological functioning, including species transport, transformation and information processing which guides these processes.\n\n2.\n\nProvide a visual or graphical notation suitable for use in informal pen-and-paper discussions and implementation as sophisticated graphical user interface of computerized modeling tools.\n\n3.\n\nBe executable on a computer to enable the testing of proposed dynamics in silico.\n\nThe conceptual architecture of the Co-dependence Methodology can be divided into four layers (Figure 2). Narrator's Notation layer at the top provides a flexible and intuitive visual or graphical notation facilitating the specification of a wide range of biological functioning and information processing mechanisms. Each model in Narrator is captured at the canonical Model Structure layer, which represents the basic modeling abstractions and concepts (e.g. species, process). The components at the Model Structure level are also used to realize the mapping (depicted in the conceptual structure by the Formalism Mapping element) of the model into various formal or mathematical frameworks, schemes or languages. Finally, the Formalism layer represents the different types of formal and mathematical languages in which models developed in Narrator can be expressed to facilitate computation and sharing. Currently three of such formalisms are supported: ordinary differential equations, Gillespie's Direct Method and SBML.\n\nCo-dependence Notation\n\nMost notations currently used in systems biology tools facilitate the description of conventional biochemical pathways and are based on mathematical bipartite graphs or directed hypergraphs. A bipartite graph (or bigraph) is defined by a set of graph vertices (nodes) decomposed into two disjoint sets such that no two graph vertices within the same set are adjacent, i.e., they are not joined by a graph edge (link or arc). A directed hypergraph is a graph in which generalized edges (also known as hyperarcs) may connect more than two nodes. The two types of graphs have been shown to be equivalent when used for representing transport and transformation of chemical species [13, 40]. In bipartite graphs, there are two kinds of node, and no edge can relate nodes of the same kind. This is useful for linking biological species to processes or reactants to products. Hyperarcs of directed hypergraphs can be used to relate sets of reactants to sets of products, where each set belong to the same kind of node. Additionally, both notations can represent inhibitory and stimulatory dependencies between chemical species and their transformation processes. Petri nets [18], the E-Cell process variable model or graphical notations used in JDesigner or CellWare belong to this class of graph.\n\nAs illustrated in Figure 3, Co-dependence Methodology models comprise, similar to bipartite graphs, two different kinds of node, called species and process. In their notational rendering, rectangles represent molecular species and clouds denote transformation or transport processes. Directed links are used to describe a dependency between two nodes and represent either material or informational flow. Thick-lined arrows represent material flow and are always connected between reaction and species nodes. Thin-lined, dashed links represent informational flow and can connect species with process nodes or directly relate two process nodes.\n\nA novel aspect in the Co-dependence Notation is the explicit labeling of information sources using small, unfilled circles. Interpreted dynamically, information sources are considered as mathematical variables that are integrated into the function or rate law of their associated process. This is illustrated in Figure 3c by the small Co-dependence model and its corresponding equations. Species A and species B, for instance, have an influence on the process transforming species A, B and C.\n\nA thick arc in combination with a small circle indicates that there exists material as well as informational flow between a species and a process node. In this co-dependent relationship between a species and a process, the species influences the process that is transforming the species.\n\nCo-dependence models are fully isomorph to systems of ordinary differential equations (ODEs). The rate of change of each species represents an ODE and, as shown in Figure 3c and Figure 3d, it is the visual emphasis of information sources in the Co-dependence Notation (see information source labels) that enables the presentation of the individual factors playing a functional role in the ODEs. Process nodes that are representing the transformation of species are then describing the coupling of the ODEs.\n\nAn additional novel aspect of the Co-dependence Notation is the optional use of information processing nodes to represent constants or computed logical entities such as rate constants, external stimuli or genetic switches. Information processing nodes also belong to the class of process nodes, yet, as shown in Figure 3d, they are rendered as large circles. Information processing nodes also serve as information sources and can be linked to other process nodes accordingly. Thus, links in Co-dependence models cannot only connect species nodes with process nodes but can also directly relate two or more process nodes with each other. This facilitates the representation of both species transformation and information processing within a single conceptual framework.\n\nFrom a graph-theoretical point of view the visual representation of information processing is made possible by defining a link or edge type which is able to connect process and species nodes as well as relating two process nodes. Such an informational relation between two process nodes has no direct biochemical interpretation and therefore is not considered in notations derived from biochemical pathway diagrams. Yet, as we shall demonstrate, this extension is extremely useful when incorporating abstractions or additional information into models as is for example required when integrating biochemical and biophysical aspects in one model. Consequently, in Co-dependence models, process nodes describe both the transformation of concentration levels of their participating species as well as the processing and supply of information. In particular, the ability to link processes informationally is of considerable value in scenarios illustrated by the following four scenarios.\n\nScenario 1: Incorporating exogenous variables\n\nA link between two process nodes can describe how exogenous factors affect a biological system. For example, Klipp et al. describe the phosphorelay mechanism of the yeast high osmolarity glycerol (HOG) pathway which controls the transcriptional response of yeast cells to high osmolarity [15]. In the phosphorelay model depicted in Figure 4, we present graphically the individual species and their state transitions of the phosphorelay mechanism. We further show that species SLN1 is directly affected by the Turgor pressure which again depends on the Internal and External osmotic pressure. Thus, we can visually describe which species is contributing as an osmosensor to the regulation of the HOG pathway and how this species depends on various biophysical influences.\n\nScenario 2: Describing detailed steps of information processing\n\nFigure 4 illustrates what we understand by the term detailed steps of information processing. Sometimes it is convenient to elaborate a single informational dependency into a sequence of processing steps. For example, in Figure 4, where the simple dependency of process v1 on the species glycerol has been expanded into the more detailed description involving Experimental input signal, External and Internal osmotic pressure, and Turgor pressure. These detailed steps of information processing allow us to visually close the loop between the biological system internal osmotic pressure and its environments (external osmotic pressure).\n\nScenario 3: Reducing diagram complexity with auxiliary processes\n\nIn ODE-based modeling, differential-algebraic equations are often used to reduce the complexity of the differential equations by simplifying their right-hand expressions with auxiliary variables. Biochemical models frequently make use of this method. However, although SBML's AssignmentRule tag provides support for it, the process nodes in Narrator can improve the readability of equation systems by structuring information processing in a similar way. Differential-algebraic equations thus translate to Co-dependence models without any increase in diagram complexity.\n\nIn signaling models, auxiliary variables are sometimes used to describe the concentration, activity or any other property of a protein which is represented as multiple species due to the existence of protein modifications. For example, in a model describing the mitotic activation of the tyrosine kinase Src [16], a process node called src_activity is used to calculate the total enzymatic activity of that kinase. In the model depicted in Figure 5, Src is represented in four different phosphorylation states. Due to allosteric effects each state contributes to kinase activity to a different degree (represented by different weights of informational links A-D). The value of the src_activity node is then reused in processes that represent reactions catalyzed by this kinase (links labeled E, F, G in Figure 5).\n\nSimilarly, in the Co-dependence interpretation of the cell cycle model describing chemical oscillations in the early embryonic development of the frog Xenopus laevis embryos [17] (shown in Figure 6), we also make use of an auxiliary process node to structure the composition and usage of the Pool of all removed forms of Cyclin:Cdk2 dimers contained in the model. This variable Pool is defined as auxiliary variable in the differential-algebraic equation system [17] and could be seamlessly translated into the Co-dependence Notation.\n\nBoth examples (Figure 5 and Figure 6) illustrate how the proliferation of links can be avoided by introducing auxiliary process nodes.\n\nScenario 4: Emphasizing important process parameters\n\nQuantitative models of biological processes strongly depend on constant parameters such as Hill coefficients, half-saturation constants, rate constants or specific growth and degradation rates. In a Co-dependence model we can describe selected parameters explicitly with process nodes to emphasize their importance to the overall model or to allow direct manipulation of the parameter value via our software tool Narrator.\n\nIn all abovementioned examples it is up to the modeler to decide which level of detail is appropriate for a model. For example, if we incorporated only biochemical transformation processes into our model it would look very similar to other bipartite approaches such as Hybrid Object Net [18] or E-Cell [19].\n\nOn the other hand, information processing structures resemble the models of the System Dynamics methodology. In this method, developed by Forrester [32], dynamic system models are built with stock and flow diagrams which implement the principle of accumulation [20]. Here, dynamic behavior is described by flows that accumulate in stocks and a third node type called converter can be used to describe graphically the information processing in a system. This graphical notation however is not suitable for modeling stoichiometric relations in metabolic reactions and thus is not applicable to biochemical modeling [21]."
    }
}