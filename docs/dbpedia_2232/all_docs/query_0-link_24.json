{
    "id": "dbpedia_2232_0",
    "rank": 24,
    "data": {
        "url": "https://sed-ml.org/showcase.html",
        "read_more_link": "",
        "language": "en",
        "title": "Software tools and libraries",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://sed-ml.org/images/logoSEDML_H75.png",
            "https://sed-ml.org/images/showcase/CellDesigner.png",
            "https://sed-ml.org/images/showcase/Copasi2SedML.png",
            "https://sed-ml.org/images/showcase/jws.png",
            "https://sed-ml.org/images/showcase/OpenCOR.png",
            "https://sed-ml.org/images/showcase/SBML_Testsuite.png",
            "https://sed-ml.org/images/showcase/Systems_Biology_Simulation_Core_Library.png",
            "https://sed-ml.org/images/showcase/SBW_Simulation_Tool.png",
            "https://sed-ml.org/images/showcase/SED-ED.png",
            "https://sed-ml.org/images/showcase/SED-ML_Script_Editor.png",
            "https://sed-ml.org/images/showcase/SED-ML_Web_Tools.png",
            "https://sed-ml.org/images/showcase/tellurium.png",
            "https://sed-ml.org/images/showcase/clibsedml.png",
            "https://sed-ml.org/images/showcase/jlibsedml.png",
            "https://sed-ml.org/images/showcase/libSedML.png",
            "https://sed-ml.org/images/showcase/Copasi2SedML.png",
            "https://sed-ml.org/images/showcase/jws.png",
            "https://sed-ml.org/images/showcase/OpenCOR.png",
            "https://sed-ml.org/images/showcase/SBML_Testsuite.png",
            "https://sed-ml.org/images/showcase/Systems_Biology_Simulation_Core_Library.png",
            "https://sed-ml.org/images/showcase/SBW_Simulation_Tool.png",
            "https://sed-ml.org/images/showcase/SED-ED.png",
            "https://sed-ml.org/images/showcase/SED-ML_Script_Editor.png",
            "https://sed-ml.org/images/showcase/SED-ML_Web_Tools.png",
            "https://sed-ml.org/images/showcase/tellurium.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "sed-ml.org"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Simulation Experiment Description Language (SED-ML)",
        "meta_lang": "en",
        "meta_favicon": "favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "BioSimulators utils Python\n\nL1V3\n\nHigh-level library for reading, writing, validating and executing SED-ML documents, including documents inside COMBINE/OMEX archives. Also provides a command-line application for validating and executing SED-ML documents inside COMBINE/OMEX archives with BioSimulators-compliant simulation tool. clibsedml C\n\nL1V1\n\nPortable C library for SED-ML. jlibsedml Java\n\nL1V1\n\nL1V2\n\nAn extensible open source Java library to create, manipulate, validate and store SED-ML files. jlibsedml also provides XPath support and an execution framework for running simulations and post-processing the results - clients provide the simulation implementation. libSEDML C++, C# (Swig), Java (Swig), Perl (Swig), Python (Swig), R (Swig), Ruby (Swig)\n\nL1V1\n\nL1V2\n\nL1V3\n\nL1V4\n\nC++ library for reading and writing SED-ML. Swig languange bindings for C#, Java, Python, R and Ruby. libSedML (old version) .NET library\n\nL1V1\n\nlibSedML is a set of .NET libraries for supporting SED-ML. The core library libSedML supports reading, validating and writing of SED-ML descriptions, along with all necessary utility functions for resolving models and XPath expressions. Two additional libraries are included: libSedMLRunner, which allows to schedule and execute simulation experiments encoded in SED-ML files using either RoadRunner# (Bergmann et al., 2006) or a variety of simulators exposed through the Systems Biology Workbench (SBW, Bergmann et al., 2006a) like iBioSim (Myers et al., 2009) and COPASI (Hoops et al., 2006). A third library, libSedMLScript, provides a script based language for defining SED-ML experiments. phraSED-ML C++, Python (Swig) A paraphrased, human-readable adaptation of SED-ML, phraSED-ML language allows modelers to use simple text commands to encode various elements of SED-ML (models, tasks, simulations, and results) in a format easy to read and modify. The library can translate this script to SED-ML for use in other softwares. BioSimulators\n\nAny\n\nAny\n\nRegistry of simulation tools with information about the model formats, simulation formats, modeling frameworks, and simulation algorithms that they support. Many simulation tools are available as Docker images with standardized entrypoints for executing SED-ML files in COMBINE/OMEX archives. BioSimulators test suite\n\nSBML\n\nSBML-fbc\n\nSBML-qual\n\nXML-based\n\nAny\n\nL1V3\n\nTool for checking that simulation tools execute SED-ML files and COMBINE archives consistently with the specifications of these formats. BioSimulators utils\n\nSBML\n\nSBML-fbc\n\nSBML-qual\n\nXML-based\n\nAny\n\nL1V3\n\nCommand-line application for validating and executing SED-ML documents inside COMBINE/OMEX archives with BioSimulators-compliant simulation tool. Also provides a high-level Python library for reading, writing, validating and executing SED-ML documents, including documents inside COMBINE/OMEX archives. COPASI\n\nSBML\n\nL1V1\n\nL1V2\n\nL1V3\n\nL1V4\n\nSoftware application for simulation and analysis of biochemical networks and their dynamics. COPASI is a stand-alone program that supports models in the SBML standard and can simulate their behavior using ODEs or Gillespie`s stochastic simulation algorithm; arbitrary discrete events can be included in such simulations. COPASI supports impor and export of SED-ML files. Copasi2SedML\n\nCopasiML\n\nL1V1\n\nLibrary and tools that allow to convert a COPASI file containing a time course task to SED-ML L1V1. This work is based on the COPASI C# bindings and libSedML.. iBioSim\n\nSBML\n\nL1V1\n\nL1V2\n\nTool for the modeling, analysis, and design of genetic circuits. iBioSim support models representing metabolic networks, cell-signaling pathways, and other biological and chemical systems. iBioSim supports importing and exporting models specified using the Systems Biology Markup Language (SBML). It can import all levels and versions of SBML and is able to export Level 3 Version 1. Simulations of SBML models based on SED-ML is supported. JWS Online\n\nSBML\n\nL1V3\n\nTool for the construction, modification and simulation of kinetic models and for the storage of curated models. It provides a selection of simulation experiments as SED-ML and COMBINE archives. OpenCOR\n\nCellML\n\nOpen source cross-platform modelling environment. OpenCOR is a replacement for COR. runBioSimulations\n\nSBML\n\nSBML-fbc\n\nSBML-qual\n\nXML-based\n\nAny\n\nL1V3\n\nWeb application and REST API for executing SED-ML documents in COMBINE/OMEX archives and visualizing their results. runBioSimulations can execute simulations using all of the standardized simulation tools in the BioSimulators registry. Together, these tools support simulations for multiple model formats, modeling frameworks, and over 40 simulation algorithms. SBML Testsuite\n\nSBML\n\nL1V3\n\nConformance testing system for SBML. It allows developers and users to test the degree and correctness of SBML support provided in an SBML-compatible software package. All tests are available also as SED-ML files. sbmlsim\n\nSBML\n\nL1V1\n\nL1V2\n\nL1V3\n\nL1V4\n\nCollection of Python utilities to simulate to simplify simulations with SBML models implemented on top of roadrunner. Features include among others simulation experiments, simulation reports parameter fitting. Systems Biology Simulation Core Library (SBSCL)\n\nSBML\n\nL1V1\n\nL1V2\n\nEfficient and exhaustive Java library of methods to interpret the content of models encoded in the Systems Biology Markup Language (SBML) and its numerical solution. SBSCL is based on JSBML. SBSCL can also read SED-ML files. SBW Simulation Tool\n\nSBML\n\nL1V1\n\nExtensible, interactive environment for carrying out simulation experiments of SBML models. This project can use RoadRunner or SBW enabled simulators to carry out simulations.The simulation tool allows you to execute the simulations directly, with support for remote models (even in BioModels.net) and the SED-ML archive. SED-ED\n\nXML-based\n\nL1V1\n\nL1V2\n\nVisual editor for viewing, editing and validating SED-ML documents using a graphical workflow notation. SED-ED previews model changes for any XML based model, generates XPath expressions for targetting model elements, displays and edits notes in an embedded browser, works with SEDX archives as well as plain SEDML files, retrieves models from Biomodels using Miriam URNs, provides standard undo/redo/copy/paste/align functionality for editing. SED-ED is available either as a standalone application, an Eclipse plugin (update site http://www.sbsi.ed.ac.uk/update) or an SBSIVisual plugin. SED-ML Script Editor\n\nCelLML\n\nSBML\n\nL1V1\n\nAllows to construct SED-ML documents using a simplified script language. Starting out by directly importing SBML or CellML models an initial script is generated that can be simulated. From there it is easy to modify it to suite your needs. SED-ML Web Tools\n\nCelLML\n\nSBML\n\nL1V1\n\nOnline application providing support to edit, simulate and validate SED-ML files online."
    }
}