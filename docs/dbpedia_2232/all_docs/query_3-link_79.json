{
    "id": "dbpedia_2232_3",
    "rank": 79,
    "data": {
        "url": "https://docs.fedoraproject.org/en-US/neurofedora/install-media/",
        "read_more_link": "",
        "language": "en",
        "title": "Installation Media",
        "top_image": "https://docs.fedoraproject.org/en-US/_/img/docs_logo.png",
        "meta_img": "https://docs.fedoraproject.org/en-US/_/img/docs_logo.png",
        "images": [
            "https://docs.fedoraproject.org/en-US/_/img/docs_logo_white.png",
            "https://docs.fedoraproject.org/en-US/_/img/fedora-blue.png",
            "https://docs.fedoraproject.org/en-US/_/img/logo-sponsored-by-red-hat.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Learn more about Fedora Linux, the Fedora Project & the Fedora Community.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "Fedora Docs",
        "canonical_link": "https://docs.fedoraproject.org/en-US/neurofedora/install-media/",
        "text": "The Fedora Linux Comp-Neuro OS is a customised operating system for computational neuroscientists.\n\nBased on the Fedora Linux with Gnome OS (Fedora Workstation), it includes a variety of simulators and analysis tools used in computational neuroscience, such as: auryn, bionetgen, calcium-calculator, COPASI, qalculate, getdp, genesis-simulator, gnuplot, moose, nest, neuron, neurord, octave, paraview, python3, brian2, ipython, nest, neuron, libNeuroML, neo, nineml, PyLEMS, and smoldyn.\n\nIt also includes the Python Science stack: matplotlib, jupyter notebook, numpy, pandas, pillow, scikit-image, scikit-learn, scipy, statsmodels, and sympy. Additionally, it also includes Julia and R programming languages that are commonly used for analysis.\n\nMore software from the Fedora repositories can be installed using the package manager.\n\nA number of Fedora Linux products with immutable operating systems are also available. In these variants, unlike traditional platforms where the operating system consists of multiple pieces of software that can all be modified independently, the operating system is a single unit where all components are updated together. User applications and containers are kept separate from the host system. These features are intended to make the system more stable and reliable.\n\nThese platforms are excellent for containerized applications and container based development workflows."
    }
}