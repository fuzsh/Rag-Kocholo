{
    "id": "dbpedia_2232_3",
    "rank": 71,
    "data": {
        "url": "http://wiki.biouml.org/index.php/Tools_Comparison_2022",
        "read_more_link": "",
        "language": "en",
        "title": "Tools Comparison 2022",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://wiki.biouml.org/skins/common/images/poweredby_mediawiki_88x31.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Here we collect information about similar software and their features in comparison with BioUML.\n\nComparisons made by third parties\n\nSupport of SBML standard can be measured by percentage of passed tests from test suite presented on SBML web site.\n\nExtensive comparison of different simulators according to their speed and percentage of passed SBML tests was performed by Maggioli et al.[1]\n\nThis comparison was made in February 2022. Previous was done in 2019 and is available at separate page Tools Comparison.\n\nBioUML [2] COPASI [3] iBioSim [4]. CellDesigner [5] Tellurium[6] Morpheus[7] libRoadRunner Current version\n\n(stable) 2021.3\n\n(Sep 2021) 4.34\n\n(Aug 2021) 3.0.0\n\n(Sep 2017) 4.4.2\n\n(Jun 2020) 2.2.0\n\n(Dec 2019) 2.2.6\n\n(Feb 2022) 1.4.18\n\n(May 2017) Capabilities 1. Model creation visual\\text-based via tables visual visual text-based via tables via direct API 2. Simulation + + + + + + + 3. Parameter fitting + + - - +/- (3rd party\n\npython libraries) + via python/Julia 4. Model analysis + + + - + + + 5. Unique or rare features Parameter identifiability,\n\nManual parameter fitting Generic nonlinear optimization Markov Chain analysis\n\nusing state-based abstraction Provides a special notation\n\nfor biochemical reaction networks\n\n(i.e. CellDesigner notation) MopheusML language for\n\nmulticellular and multiscale modeling,\n\nspatial models,\n\nCellular Potts models 6. Database access + - + + +/- (3rd party\n\npython libraries) - - 7. Jupyter notebooks + + + - + - + Model formalism 1. ODE + + + + + + + 2. Stochastic Gillespie-type + + + + + + + 3. Algebraic + - + - + + - 4. Discrete + + + + + + + 5. Flux balance + - + - - - - 6. Modular modeling + - + - + + + 7. Mixed formalisms + - + - - + - 8. Agent-based + - + - - + - 9. Rule-based + - - - - + - 10. Population-based + - + - - + - 11. Cellular Potts Models - - - - - + - Systems Biology Markup Language 1. level and version l3v2 (all tests passed) l3v2 except\n\nalgebraic l3v2 l2v4 l3v2, except\n\nalgebraic, delay l3v2, except\n\nalgebraic l3v2 except\n\nalgebraic, delay 2. comp fully (all tests passed) import fully (all tests passed) - partially partially partially 3. fbc + - + - - - - 4. arrays - - + - - - - 5. distrib - - + - - - - 6. layout - - + - - - - Other Standards 1. SBGN PD + export - + - - - 2. SBGN-ML + - - + - - - 3. SedML + + + + + - - 4. Combine archive + + + - + - - 5. SBOL - - + - +/- (3rd party\n\npython libraries) - - 6. Antimony + - - - + - - 7. Bionetgen + (standalone) - - - - - - 8. BioPAX + - - + - - - Availability 1. Windows + + + + + + + 2. Linux + + + + + + + 3. MacOS + + + + + + + 4. Web application + + - - via Colab - via Colab Programming Language Java C++ Java/ะก Java Python/Julia C++ C/C++/Pyhton/Julia\n\nReferences"
    }
}