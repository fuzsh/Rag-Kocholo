{
    "id": "dbpedia_7677_2",
    "rank": 20,
    "data": {
        "url": "https://en.wikipedia.org/wiki/List_of_computer_scientists",
        "read_more_link": "",
        "language": "en",
        "title": "List of computer scientists",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Text-x-generic.svg/28px-Text-x-generic.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/30px-Commons-logo.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2001-10-18T13:06:15+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/List_of_computer_scientists",
        "text": "This is a dynamic list and may never be able to satisfy particular standards for completeness. You can help by adding missing items with reliable sources.\n\nThis is a list of computer scientists, people who do work in computer science, in particular researchers and authors.\n\nSome persons notable as programmers are included here because they work in research as well as program. A few of these people pre-date the invention of the digital computer; they are now regarded as computer scientists because their work can be seen as leading to the invention of the computer. Others are mathematicians whose work falls within what would now be called theoretical computer science, such as complexity theory and algorithmic information theory.\n\nAtta ur Rehman Khan – Mobile Cloud Computing, Cybersecurity, IoT\n\nWil van der Aalst – business process management, process mining, Petri nets\n\nScott Aaronson – quantum computing and complexity theory\n\nRediet Abebe – algorithms, artificial intelligence\n\nHal Abelson – intersection of computing and teaching\n\nSerge Abiteboul – database theory\n\nSamson Abramsky – game semantics\n\nLeonard Adleman – RSA, DNA computing\n\nManindra Agrawal – polynomial-time primality testing\n\nLuis von Ahn – human-based computation\n\nAlfred Aho – compilers book, the 'a' in AWK\n\nFrances E. Allen – compiler optimization\n\nGene Amdahl – supercomputer developer, Amdahl Corporation founder\n\nDavid P. Anderson – volunteer computing\n\nLisa Anthony – natural user interfaces\n\nAndrew Appel – compiler of text books\n\nCecilia R. Aragon – invented treap, human-centered data science\n\nBruce Arden – programming language compilers (GAT, Michigan Algorithm Decoder (MAD)), virtual memory architecture, Michigan Terminal System (MTS)\n\nKevin Ashton – pioneered and named The Internet of Things at M.I.T.\n\nSanjeev Arora – PCP theorem\n\nWinifred \"Tim\" Alice Asprey – established the computer science curriculum at Vassar College\n\nJohn Vincent Atanasoff – computer pioneer, creator of Atanasoff Berry Computer (ABC)\n\nShakuntala Atre – database theory\n\nLennart Augustsson – languages (Lazy ML, Cayenne), compilers (HBC Haskell, parallel Haskell front end, Bluespec SystemVerilog early), LPMud pioneer, NetBSD device drivers\n\nCharles Babbage (1791–1871) – invented first mechanical computer called the supreme mathematician\n\nCharles Bachman – American computer scientist, known for Integrated Data Store\n\nRoland Carl Backhouse – mathematics of computer program construction, algorithmic problem solving, ALGOL\n\nJohn Backus – FORTRAN, Backus–Naur form, first complete compiler\n\nDavid F. Bacon – programming languages, garbage collection\n\nDavid Bader\n\nVictor Bahl\n\nAnthony James Barr – SAS System\n\nJean Bartik (1924–2011) – one of the first computer programmers, on ENIAC (1946), one of the first Vacuum tube computers, back when \"programming\" involved using cables, dials, and switches to physically rewire the machine; worked with John Mauchly toward BINAC (1949), EDVAC (1949), UNIVAC (1951) to develop early \"stored program\" computers\n\nAndrew Barto\n\nFriedrich L. Bauer – Stack (data structure), Sequential Formula Translation, ALGOL, software engineering, Bauer–Fike theorem\n\nRudolf Bayer – B-tree\n\nGordon Bell (born 1934) – computer designer DEC VAX, author: Computer Structures\n\nSteven M. Bellovin – network security\n\nCecilia Berdichevsky (1925–2010) – pioneering Argentinian computer scientist\n\nTim Berners-Lee – World Wide Web\n\nDaniel J. Bernstein – qmail, software as protected speech\n\nPeter Bernus\n\nJeff Bezos – founder of Amazon\n\nAbhay Bhushan\n\nDines Bjørner – Vienna Development Method (VDM), RAISE\n\nGerrit Blaauw – one of the principal designers of the IBM System 360 line of computers\n\nSue Black\n\nDavid Blei\n\nDorothy Blum – National Security Agency\n\nLenore Blum – complexity\n\nManuel Blum – cryptography\n\nBarry Boehm – software engineering economics, spiral development\n\nCorrado Böhm – author of the structured program theorem\n\nKurt Bollacker\n\nJeff Bonwick – invented slab allocation and ZFS\n\nGrady Booch – Unified Modeling Language, Object Management Group\n\nGeorge Boole – Boolean logic\n\nAndrew Booth – developed the first rotating drum storage device\n\nKathleen Booth – developed the first assembly language\n\nAnita Borg (1949–2003) – American computer scientist, founder of Anita Borg Institute for Women and Technology\n\nBert Bos – Cascading Style Sheets\n\nMikhail Botvinnik – World Chess Champion, computer scientist and electrical engineer, pioneered early expert system AI and computer chess\n\nJonathan Bowen – Z notation, formal methods\n\nStephen R. Bourne – Bourne shell, portable ALGOL 68C compiler\n\nHarry Bouwman (born 1953) – Dutch Information systems researcher, and Professor at the Åbo Akademi University\n\nRobert S. Boyer – string searching, ACL2 theorem prover\n\nKarlheinz Brandenburg – Main mp3 contributor\n\nGilles Brassard – BB84 protocol and quantum cryptography pioneer\n\nLawrence M. Breed – implementation of Iverson Notation (APL), co-developed APL\\360, Scientific Time Sharing Corporation cofounder\n\nJack E. Bresenham – early computer-graphics contributions, including Bresenham's algorithm\n\nSergey Brin – co-founder of Google\n\nDavid J. Brown – unified memory architecture, binary compatibility\n\nPer Brinch Hansen (surname \"Brinch Hansen\") – RC 4000 multiprogramming system, operating system kernels, microkernels, monitors, concurrent programming, Concurrent Pascal, distributed computing & processes, parallel computing\n\nSjaak Brinkkemper – methodology of product software development\n\nFred Brooks – System 360, OS/360, The Mythical Man-Month, No Silver Bullet\n\nRod Brooks\n\nMargaret Burnett – visual programming languages, end-user software engineering, and gender-inclusive software\n\nRod Burstall – languages COWSEL (renamed POP-1), POP-2, NPL, Hope; ACM SIGPLAN 2009 PL Achievement Award\n\nMichael Butler – Event-B\n\nPino Caballero Gil – cryptography\n\nTracy Camp – wireless computing\n\nMartin Campbell-Kelly – history of computing\n\nRosemary Candlin\n\nRod Canion – cofounder of Compaq Computer Corporation\n\nBryan Cantrill – invented DTrace\n\nLuca Cardelli\n\nJohn Carmack – codeveloped Doom\n\nMichael Caspersen – programming methodology, education in OO programming, leadership in developing informatics education\n\nEdwin Catmull – computer graphics\n\nVint Cerf – Internet, TCP/IP\n\nGregory Chaitin\n\nRobert Cailliau – Belgian computer scientist\n\nZhou Chaochen – duration calculus\n\nPeter Chen – entity-relationship model, data modeling, conceptual model\n\nLeonardo Chiariglione – founder of MPEG\n\nTracy Chou – computer scientist and activist\n\nAlonzo Church – mathematics of combinators, lambda calculus\n\nAlberto Ciaramella – speech recognition, patent informatics\n\nEdmund M. Clarke – model checking\n\nJohn Cocke – RISC\n\nEdgar F. Codd (1923–2003) – formulated the database relational model\n\nJacques Cohen – computer science professor\n\nIan Coldwater – computer security\n\nSimon Colton – computational creativity\n\nAlain Colmerauer – Prolog\n\nDouglas Comer – Xinu\n\nPaul Justin Compton – Ripple Down Rules\n\nRichard W. Conway – CORC, CUPL, and PL/C languages and dialects; programming textbooks\n\nGordon Cormack – co-invented dynamic Markov compression\n\nStephen Cook – NP-completeness\n\nJames Cooley – Fast Fourier transform (FFT)\n\nDanese Cooper – open-source software\n\nFernando J. Corbató – Compatible Time-Sharing System (CTSS), Multics\n\nKit Cosper – open-source software\n\nPatrick Cousot – abstract interpretation\n\nIngemar Cox – digital watermarking\n\nDamien Coyle – computational neuroscience, neuroimaging, neurotechnology, and brain-computer interface\n\nSeymour Cray – Cray Research, supercomputer\n\nNello Cristianini – machine learning, pattern analysis, artificial intelligence\n\nJon Crowcroft – networking\n\nW. Bruce Croft\n\nGlen Culler – interactive computing, computer graphics, high performance computing\n\nHaskell Curry\n\nLuigi Dadda – designer of the Dadda multiplier\n\nOle-Johan Dahl – Simula, object-oriented programming\n\nRyan Dahl – founder of node.js project\n\nAndries van Dam – computer graphics, hypertext\n\nSamir Das – Wireless Networks, Mobile Computing, Vehicular ad hoc network, Sensor Networks, Mesh networking, Wireless ad hoc network\n\nNeil Daswani – computer security, co-founder and co-director of Stanford Advanced Computer Security Program, co-founder of Dasient (acquired by Twitter), former chief information security of LifeLock and Symantec's Consumer Business Unit\n\nChristopher J. Date – proponent of database relational model\n\nTerry A. Davis – creator of TempleOS\n\nJeff Dean – Bigtable, MapReduce, Spanner of Google\n\nErik Demaine – computational origami\n\nTom DeMarco\n\nRichard DeMillo – computer security, software engineering, educational technology\n\nDorothy E. Denning – computer security\n\nPeter J. Denning – identified the use of an operating system's working set and balance set, President of ACM\n\nMichael Dertouzos – Director of Massachusetts Institute of Technology (MIT) Laboratory for Computer Science (LCS) from 1974 to 2001\n\nAlexander Dewdney\n\nRobert Dewar – IFIP WG 2.1 member, ALGOL 68, chairperson; AdaCore cofounder, president, CEO\n\nVinod Dham – P5 Pentium processor\n\nJan Dietz (born 1945) (decay constant) – information systems theory and Design & Engineering Methodology for Organizations\n\nWhitfield Diffie (born 1944) (linear response function) – public key cryptography, Diffie–Hellman key exchange\n\nEdsger W. Dijkstra – algorithms, Dijkstra's algorithm, Go To Statement Considered Harmful, semaphore (programming), IFIP WG 2.1 member\n\nMatthew Dillon – DragonFly BSD with LWKT, vkernel OS-level virtualisation, file systems: HAMMER1, HAMMER2\n\nAlan Dix – wrote important university level textbook on human–computer interaction\n\nJack Dongarra – linear algebra high performance computing (HCI)\n\nMarco Dorigo – ant colony optimization\n\nPaul Dourish – human computer interaction\n\nCharles Stark Draper (1901–1987) – designer of Apollo Guidance Computer, \"father of inertial navigation\", MIT professor\n\nSusan Dumais – information retrieval\n\nAdam Dunkels – Contiki, lwIP, uIP, protothreads\n\nJon Michael Dunn – founding dean of Indiana University School of Informatics, information based logics especially relevance logic\n\nSchahram Dustdar – Distributed Systems, TU Wien, Austria\n\nPeter Eades – graph drawing\n\nAnnie Easley\n\nWim Ebbinkhuijsen – COBOL\n\nJohn Presper Eckert – ENIAC\n\nAlan Edelman – Edelman's Law, stochastic operator, Interactive Supercomputing, Julia (programming language) cocreator, high performance computing, numerical computing\n\nBrendan Eich – JavaScript, Mozilla\n\nPhilip Emeagwali – supercomputing\n\nE. Allen Emerson – model checking\n\nDouglas Engelbart – tiled windows, hypertext, computer mouse\n\nBarbara Engelhardt – latent variable models, genomics, quantitative trait locus (QTL)\n\nDavid Eppstein\n\nAndrey Ershov – languages ALPHA, Rapira; first Soviet time-sharing system AIST-0, electronic publishing system RUBIN, multiprocessing workstation MRAMOR, IFIP WG 2.1 member, Aesthetics and the Human Factor in Programming\n\nDon Estridge (1937–1985) – led development of original IBM Personal Computer (PC); known as \"father of the IBM PC\"\n\nOren Etzioni – MetaCrawler, Netbot\n\nChristopher Riche Evans\n\nDavid C. Evans – computer graphics\n\nShimon Even\n\nScott Fahlman\n\nEdward Feigenbaum – intelligence\n\nEdward Felten – computer security\n\nTim Finin\n\nRaphael Finkel\n\nDonald Firesmith\n\nGary William Flake\n\nTommy Flowers – Colossus computer\n\nRobert Floyd – NP-completeness\n\nSally Floyd – Internet congestion control\n\nLawrence J. Fogel – evolutionary programming\n\nJames D. Foley\n\nKen Forbus\n\nL. R. Ford, Jr.\n\nLance Fortnow\n\nMahmoud Samir Fayed – PWCT, Ring\n\nMartin Fowler\n\nRobert France\n\nHerbert W. Franke\n\nEdward Fredkin\n\nYoav Freund\n\nDaniel P. Friedman\n\nCharlotte Froese Fischer – computational theoretical physics\n\nPing Fu\n\nXiaoming Fu\n\nKunihiko Fukushima – neocognitron, artificial neural networks, convolutional neural network architecture, unsupervised learning, deep learning\n\nD. R. Fulkerson\n\nRichard P. Gabriel – Maclisp, Common Lisp, Worse is Better, League for Programming Freedom, Lucid Inc., XEmacs\n\nZvi Galil\n\nBernard Galler – MAD (programming language)\n\nHector Garcia-Molina\n\nMichael Garey – NP-completeness\n\nHugo de Garis\n\nBill Gates – cofounder of Microsoft\n\nDavid Gelernter\n\nLisa Gelobter – was the Chief Digital Service Officer for the U.S. Department of Education, founder of teQuitable\n\nCharles Geschke\n\nZoubin Ghahramani\n\nSanjay Ghemawat\n\nJeremy Gibbons – generic programming, functional programming, formal methods, computational biology, bioinformatics\n\nJuan E. Gilbert – human-centered computing\n\nLee Giles – CiteSeer\n\nSeymour Ginsburg – formal languages, automata theory, AFL theory, database theory\n\nRobert L. Glass\n\nKurt Gödel – computability; not a computer scientist per se, but his work was invaluable in the field\n\nAshok Goel\n\nJoseph Goguen\n\nE. Mark Gold – Language identification in the limit\n\nAdele Goldberg – Smalltalk\n\nAndrew V. Goldberg – algorithms, algorithm engineering\n\nIan Goldberg – cryptographer, off-the-record messaging\n\nJudy Goldsmith – computational complexity theory, decision theory, and computer ethics\n\nOded Goldreich – cryptography, computational complexity theory\n\nShafi Goldwasser – cryptography, computational complexity theory\n\nGene Golub – Matrix computation\n\nMartin Charles Golumbic – algorithmic graph theory\n\nGastón Gonnet – cofounder of Waterloo Maple Inc.\n\nIan Goodfellow – machine learning\n\nJames Gosling – Network extensible Window System (NeWS), Java\n\nPaul Graham – Viaweb, On Lisp, Arc\n\nRobert M. Graham – programming language compilers (GAT, Michigan Algorithm Decoder (MAD)), virtual memory architecture, Multics\n\nSusan L. Graham – compilers, programming environments\n\nJim Gray – database\n\nSheila Greibach – Greibach normal form, Abstract family of languages (AFL) theory\n\nDavid Gries – The Science of Programming, Interference freedom, Member Emeritus, IFIP WG 2.3 on Programming Methodology\n\nRobert Griesemer – Go language\n\nRalph Griswold – SNOBOL\n\nBill Gropp – Message Passing Interface, Portable, Extensible Toolkit for Scientific Computation (PETSc)\n\nTom Gruber – ontology engineering\n\nShelia Guberman – handwriting recognition\n\nRamanathan V. Guha – Resource Description Framework (RDF), Netscape, RSS, Epinions\n\nNeil J. Gunther – computer performance analysis, capacity planning\n\nJürg Gutknecht – with Niklaus Wirth: Lilith computer; Modula-2, Oberon, Zonnon programming languages; Oberon operating system\n\nMichael Guy – Phoenix, work on number theory, computer algebra, higher dimension polyhedra theory; with John Horton Conway\n\nGiri Topper - Topper of Anna University and Programmer\n\nNico Habermann – operating systems, software engineering, inter-process communication, process synchronization, deadlock avoidance, software verification, programming languages: ALGOL 60, BLISS, Pascal, Ada\n\nPhilipp Matthäus Hahn – mechanical calculator\n\nEldon C. Hall – Apollo Guidance Computer\n\nWendy Hall\n\nJoseph Halpern\n\nMargaret Hamilton – ultra-reliable software design, Apollo program space missions\n\nRichard Hamming – Hamming code, founder of the Association for Computing Machinery\n\nJiawei Han – data mining\n\nFrank Harary – graph theory\n\nBrian Harris – machine translation research, Canada's first computer-assisted translation course, natural translation theory, community interpreting (Critical Link)\n\nJuris Hartmanis – computational complexity theory\n\nJohan Håstad – computational complexity theory\n\nLes Hatton – software failure and vulnerabilities\n\nIgor Hawryszkiewycz (born 1948) – American computer scientist and organizational theorist\n\nHe Jifeng – provably correct systems\n\nEric Hehner – predicative programming, formal methods, quote notation, ALGOL\n\nMartin Hellman – encryption\n\nGernot Heiser – operating system teaching, research, commercialising, Open Kernel Labs, OKL4, Wombat\n\nJames Hendler – Semantic Web\n\nJohn L. Hennessy – computer architecture\n\nAndrew Herbert\n\nCarl Hewitt\n\nKelsey Hightower – open source, cloud computing\n\nDanny Hillis – Connection Machine\n\nGeoffrey Hinton\n\nJulia Hirschberg\n\nTin Kam Ho – artificial intelligence, machine learning\n\nC. A. R. Hoare – logic, rigor, communicating sequential processes (CSP)\n\nLouis Hodes (1934–2008) – Lisp, pattern recognition, logic programming, cancer research\n\nBetty Holberton – ENIAC programmer, developed the first Sort Merge Generator\n\nJohn Henry Holland – genetic algorithms\n\nHerman Hollerith (1860–1929) – invented recording of data on a machine readable medium, using punched cards\n\nGerard Holzmann – software verification, logic model checking (SPIN)\n\nJohn Hopcroft – compilers\n\nAdmiral Grace Hopper (1906–1992) – developed early compilers: FLOW-Matic, COBOL; worked on UNIVAC; gave speeches on computer history, where she gave out nano-seconds\n\nEric Horvitz – artificial intelligence\n\nAlston Householder\n\nPaul Hudak (1952–2015) – Haskell language design, textbooks on it and computer music\n\nDavid A. Huffman (1925–1999) – Huffman coding, used in data compression\n\nJohn Hughes – structuring computations with arrows; QuickCheck randomized program testing framework; Haskell language design\n\nRoger Hui – co-created J language\n\nWatts Humphrey (1927–2010) – Personal Software Process (PSP), Software quality, Team Software Process (TSP)\n\nSandra Hutchins (born 1946) – speech recognition\n\nJean Ichbiah – Ada\n\nRoberto Ierusalimschy – Lua (programming language)\n\nDan Ingalls – Smalltalk, BitBlt, Lively Kernel\n\nMary Jane Irwin\n\nKenneth E. Iverson – APL, J\n\nIvar Jacobson – Unified Modeling Language, Object Management Group\n\nAnil K. Jain (born 1948)\n\nRamesh Jain\n\nJonathan James\n\nJordi Ustrell Aguilà\n\nDavid S. Johnson\n\nStephen C. Johnson\n\nAngie Jones – software engineer and automation architect. Holds 26 patented inventions in the United States of America and Japan\n\nCliff Jones – Vienna Development Method (VDM)\n\nMichael I. Jordan\n\nMathai Joseph\n\nAravind K. Joshi\n\nBill Joy (born 1954) – Sun Microsystems, BSD UNIX, vi, csh\n\nDan Jurafsky – natural language processing\n\nWilliam Kahan – numerical analysis\n\nRobert E. Kahn – TCP/IP\n\nAvinash Kak – digital image processing\n\nPoul-Henning Kamp – invented GBDE, FreeBSD Jails, Varnish cache\n\nDavid Karger\n\nRichard Karp – NP-completeness\n\nNarendra Karmarkar – Karmarkar's algorithm\n\nMarek Karpinski – NP optimization problems\n\nTed Kaehler – Smalltalk, Squeak, HyperCard\n\nAlan Kay – Dynabook, Smalltalk, overlapping windows\n\nNeeraj Kayal – AKS primality test\n\nManolis Kellis – computational biology\n\nJohn George Kemeny – the language BASIC\n\nKen Kennedy – compiling for parallel and vector machines\n\nBrian Kernighan (born 1942) – Unix, the 'k' in AWK\n\nCarl Kesselman – grid computing\n\nGregor Kiczales – CLOS, reflective programming, aspect-oriented programming\n\nPeter T. Kirstein – Internet\n\nStephen Cole Kleene – Kleene closure, recursion theory\n\nDan Klein – Natural language processing, Machine translation\n\nLeonard Kleinrock – ARPANET, queueing theory, packet switching, hierarchical routing\n\nDonald Knuth – The Art of Computer Programming, MIX/MMIX, TeX, literate programming\n\nAndrew Koenig – C++\n\nDaphne Koller – Artificial intelligence, bayesian network\n\nMichael Kölling – BlueJ\n\nAndrey Nikolaevich Kolmogorov – algorithmic complexity theory\n\nJanet L. Kolodner – case-based reasoning\n\nDavid Korn – KornShell\n\nKees Koster – ALGOL 68\n\nRobert Kowalski – logic programming\n\nJohn Koza – genetic programming\n\nJohn Krogstie – SEQUAL framework\n\nJoseph Kruskal – Kruskal's algorithm\n\nMaarja Kruusmaa – underwater roboticist\n\nThomas E. Kurtz (born 1928) – BASIC programming language; Dartmouth College computer professor\n\nRichard E. Ladner\n\nMonica S. Lam\n\nLeslie Lamport – algorithms for distributed computing, LaTeX\n\nButler Lampson – SDS 940, founding member Xerox PARC, Xerox Alto, Turing Award\n\nPeter Landin – ISWIM, J operator, SECD machine, off-side rule, syntactic sugar, ALGOL, IFIP WG 2.1 member, advanced lambda calculus to model programming languages (aided functional programming), denotational semantics\n\nTom Lane – Independent JPEG Group, PostgreSQL, Portable Network Graphics (PNG)\n\nBörje Langefors\n\nChris Lattner – creator of Swift (programming language) and LLVM compiler infrastructure\n\nSteve Lawrence\n\nEdward D. Lazowska\n\nJoshua Lederberg\n\nManny M Lehman\n\nCharles E. Leiserson – cache-oblivious algorithms, provably good work-stealing, coauthor of Introduction to Algorithms\n\nDouglas Lenat – artificial intelligence, Cyc\n\nYann LeCun\n\nRasmus Lerdorf – PHP\n\nMax Levchin – Gausebeck–Levchin test and PayPal\n\nLeonid Levin – computational complexity theory\n\nKevin Leyton-Brown – artificial intelligence\n\nJ.C.R. Licklider\n\nDavid Liddle\n\nJochen Liedtke – microkernel operating systems Eumel, L3, L4\n\nJohn Lions – Lions' Commentary on UNIX 6th Edition, with Source Code (Lions Book)\n\nCharles H. Lindsey – IFIP WG 2.1 member, Revised Report on ALGOL 68\n\nRichard J. Lipton – computational complexity theory\n\nBarbara Liskov – programming languages\n\nYanhong Annie Liu – programming languages, algorithms, program design, program optimization, software systems, optimizing, analysis, and transformations, intelligent systems, distributed computing, computer security, IFIP WG 2.1 member\n\nDarrell Long – computer data storage, computer security\n\nPatricia D. Lopez – broadening participation in computing\n\nGillian Lovegrove\n\nAda Lovelace – first programmer\n\nDavid Luckham – Lisp, Automated theorem proving, Stanford Pascal Verifier, Complex event processing, Rational Software cofounder (Ada compiler)\n\nEugene Luks\n\nNancy Lynch\n\nNadia Magnenat Thalmann – computer graphics, virtual actor\n\nTom Maibaum\n\nGeorge Mallen – creative computing, computer arts\n\nSimon Marlow – Haskell developer, book author; co-developer: Glasgow Haskell Compiler, Haxl remote data access library\n\nZohar Manna – fuzzy logic\n\nJames Martin – information engineering\n\nRobert C. Martin (Uncle Bob) – software craftsmanship\n\nJohn Mashey\n\nYuri Matiyasevich – solving Hilbert's tenth problem\n\nYukihiro Matsumoto – Ruby (programming language)\n\nJohn Mauchly (1907–1980) – designed ENIAC, first general-purpose electronic digital computer, and EDVAC, BINAC and UNIVAC I, the first commercial computer; worked with Jean Bartik on ENIAC and Grace Murray Hopper on UNIVAC\n\nUjjwal Maulik (born 1965) multi-objective clustering and Bioinformatics\n\nDerek McAuley – ubiquitous computing, computer architecture, networking\n\nConor McBride – researches type theory, functional programming; cocreated Epigram (programming language) with James McKinna; member IFIP Working Group 2.1 on Algorithmic Languages and Calculi\n\nJohn McCarthy – Lisp (programming language), ALGOL, IFIP WG 2.1 member, artificial intelligence\n\nAndrew McCallum\n\nDouglas McIlroy – macros, pipes, Unix philosophy\n\nChris McKinstry – artificial intelligence, Mindpixel\n\nMarshall Kirk McKusick – BSD, Berkeley Fast File System\n\nLambert Meertens – ALGOL 68, IFIP WG 2.1 member, ABC (programming language)\n\nKurt Mehlhorn – algorithms, data structures, LEDA\n\nDora Metcalf – entrepreneur, engineer and mathematician\n\nBertrand Meyer – Eiffel (programming language)\n\nSilvio Micali – cryptography\n\nRobin Milner – ML (programming language)\n\nJack Minker – database logic\n\nMarvin Minsky – artificial intelligence, perceptrons, Society of Mind\n\nJames G. Mitchell – WATFOR compiler, Mesa (programming language), Spring (operating system), ARM architecture\n\nTom M. Mitchell\n\nArvind Mithal – formal verification of large digital systems, developing dynamic dataflow architectures, parallel computing programming languages (Id, pH), compiling on parallel machines\n\nPaul Mockapetris – Domain Name System (DNS)\n\nCleve Moler – numerical analysis, MATLAB\n\nFaron Moller – concurrency theory\n\nJohn P. Moon – inventor, Apple Inc.\n\nCharles H. Moore – Forth language\n\nEdward F. Moore – Moore machine\n\nGordon Moore – Moore's law\n\nJ Strother Moore – string searching, ACL2 theorem prover\n\nRoger Moore – co-developed APL\\360, created IPSANET, co-founded I. P. Sharp Associates\n\nHans Moravec – robotics\n\nCarroll Morgan – formal methods\n\nRobert Tappan Morris – Morris worm\n\nJoel Moses – Macsyma\n\nRajeev Motwani – randomized algorithm\n\nOleg A. Mukhanov – quantum computing developer, co-founder and CTO of SeeQC\n\nStephen Muggleton – Inductive Logic Programming\n\nKlaus-Robert Müller – machine learning, artificial intelligence\n\nAlan Mycroft – programming languages\n\nBrad A. Myers – human-computer interaction\n\nMihai Nadin – anticipation research\n\nMakoto Nagao – machine translation, natural language processing, digital library\n\nFrieder Nake – pioneered computer arts\n\nBonnie Nardi – human–computer interaction\n\nPeter Naur (1928–2016) – Backus–Naur form (BNF), ALGOL 60, IFIP WG 2.1 member\n\nRoger Needham – computer security\n\nJames G. Nell – Generalised Enterprise Reference Architecture and Methodology (GERAM)\n\nGreg Nelson (1953–2015) – satisfiability modulo theories, extended static checking, program verification, Modula-3 committee, Simplify theorem prover in ESC/Java\n\nBernard de Neumann – massively parallel autonomous cellular processor, software engineering research\n\nKlara Dan von Neumann (1911–1963) – early computers, ENIAC programmer and control designer\n\nJohn von Neumann (1903–1957) – early computers, von Neumann machine, set theory, functional analysis, mathematics pioneer, linear programming, quantum mechanics\n\nAllen Newell – artificial intelligence, Computer Structures\n\nMax Newman – Colossus computer, MADM\n\nAndrew Ng – artificial intelligence, machine learning, robotics\n\nNils John Nilsson (1933–2019) – artificial intelligence\n\nG.M. Nijssen – Nijssen's Information Analysis Methodology (NIAM) object–role modeling\n\nTobias Nipkow – proof assistance\n\nMaurice Nivat – theoretical computer science, Theoretical Computer Science journal, ALGOL, IFIP WG 2.1 member\n\nPhiwa Nkambule – Fintech, artificial intelligence, machine learning, robotics\n\nJerre Noe – computerized banking\n\nPeter Nordin – artificial intelligence, genetic programming, evolutionary robotics\n\nDonald Norman – user interfaces, usability\n\nPeter Norvig – artificial intelligence, Director of Research at Google\n\nGeorge Novacky – University of Pittsburgh: assistant department chair, senior lecturer in computer science, assistant dean of CAS for undergraduate studies\n\nKristen Nygaard – Simula, object-oriented programming\n\nMartin Odersky – Scala programming language\n\nPeter O'Hearn – separation logic, bunched logic, Infer Static Analyzer\n\nT. William Olle – Ferranti Mercury\n\nSteve Omohundro\n\nSevero Ornstein\n\nJohn O'Sullivan – Wi-Fi\n\nJohn Ousterhout – Tcl programming language\n\nMark Overmars – video game programming\n\nSusan Owicki – interference freedom\n\nLarry Page – co-founder of Google\n\nSankar Pal\n\nParitosh Pandya\n\nChristos Papadimitriou\n\nDavid Park (1935–1990) – first Lisp implementation, expert in fairness, program schemas, bisimulation in concurrent computing\n\nDavid Parnas – information hiding, modular programming\n\nDJ Patil – former Chief Data Scientist of United States\n\nYale Patt – Instruction-level parallelism, speculative architectures\n\nDavid Patterson – reduced instruction set computer (RISC), RISC-V, redundant arrays of inexpensive disks (RAID), Berkeley Network of Workstations (NOW)\n\nMike Paterson – algorithms, analysis of algorithms (complexity)\n\nMihai Pătraşcu – data structures\n\nLawrence Paulson – ML\n\nRandy Pausch (1960–2008) – human–computer interaction, Carnegie professor, \"Last Lecture\"\n\nJuan Pavón – software agents\n\nJudea Pearl – artificial intelligence, search algorithms\n\nAlan Perlis – Programming Pearls\n\nRadia Perlman – spanning tree protocol\n\nPier Giorgio Perotto – computer designer at Olivetti, designer of the Programma 101 programmable calculator\n\nRózsa Péter – recursive function theory\n\nSimon Peyton Jones – functional programming, Glasgow Haskell Compiler, C--\n\nKathy Pham – data, artificial intelligence, civic technology, healthcare, ethics\n\nRoberto Pieraccini – speech technologist, engineering director at Google\n\nKeshav Pingali – IEEE Computer Society Charles Babbage Award, ACM Fellow (2012)\n\nGordon Plotkin\n\nAmir Pnueli – temporal logic\n\nWillem van der Poel – computer graphics, robotics, geographic information systems, imaging, multimedia, virtual environments, games\n\nRobin Popplestone – COWSEL (renamed POP-1), POP-2, POP-11 languages, Poplog IDE; Freddy II robot\n\nCicely Popplewell (1920–1995) – British software engineer in 1960s\n\nEmil Post – mathematics\n\nJon Postel – Internet\n\nFranco Preparata – computer engineering, computational geometry, parallel algorithms, computational biology\n\nWilliam H. Press – numerical algorithms\n\nRapelang Rabana\n\nGrzegorz Rozenberg – natural computing, automata theory, graph transformations and concurrent systems\n\nMichael O. Rabin – nondeterministic machine\n\nDragomir R. Radev – natural language processing, information retrieval\n\nT. V. Raman – accessibility, Emacspeak\n\nBrian Randell – ALGOL 60, software fault tolerance, dependability, pre-1950 history of computing hardware\n\nAnders P. Ravn – Duration Calculus\n\nRaj Reddy – artificial intelligence\n\nDavid P. Reed\n\nTrygve Reenskaug – model–view–controller (MVC) software architecture pattern\n\nJohn C. Reynolds – continuations, definitional interpreters, defunctionalization, Forsythe, Gedanken language, intersection types, polymorphic lambda calculus, relational parametricity, separation logic, ALGOL\n\nJoyce K. Reynolds – Internet\n\nReinder van de Riet – Editor: Europe of Data and Knowledge Engineering, COLOR-X event modeling language\n\nBernard Richards – medical informatics\n\nMartin Richards – BCPL\n\nAdam Riese\n\nC. J. van Rijsbergen\n\nDennis Ritchie – C (programming language), Unix\n\nRon Rivest – RSA, MD5, RC4\n\nKen Robinson – formal methods\n\nColette Rolland – REMORA methodology, meta modelling\n\nJohn Romero – codeveloped Doom\n\nAzriel Rosenfeld\n\nDouglas T. Ross – Automatically Programmed Tools (APT), Computer-aided design, structured analysis and design technique, ALGOL X\n\nGuido van Rossum – Python (programming language)\n\nM. A. Rothman – UEFI\n\nWinston W. Royce – waterfall model\n\nRudy Rucker – mathematician, writer, educator\n\nSteven Rudich – complexity theory, cryptography\n\nJeff Rulifson\n\nJames Rumbaugh – Unified Modeling Language, Object Management Group\n\nPeter Ružička – Slovak computer scientist and mathematician\n\nGeorge Sadowsky\n\nMehrnoosh Sadrzadeh – compositional models of meaning, machine learning\n\nUmar Saif\n\nGerard Salton – information retrieval\n\nJean E. Sammet – programming languages\n\nClaude Sammut – artificial intelligence researcher\n\nCarl Sassenrath – operating systems, programming languages, Amiga, REBOL\n\nMahadev Satyanarayanan – file systems, distributed systems, mobile computing, pervasive computing\n\nWalter Savitch – discovery of complexity class NL, Savitch's theorem, natural language processing, mathematical linguistics\n\nJonathan Schaeffer\n\nWilhelm Schickard – one of the first calculating machines\n\nJürgen Schmidhuber – artificial intelligence, deep learning, artificial neural networks, recurrent neural networks, Gödel machine, artificial curiosity, meta-learning\n\nSteve Schneider – formal methods, security\n\nBruce Schneier – cryptography, security\n\nFred B. Schneider – concurrent and distributed computing\n\nSarita Schoenebeck – human–computer interaction\n\nGlenda Schroeder – command-line shell, e-mail\n\nBernhard Schölkopf – machine learning, artificial intelligence\n\nDana Scott – domain theory\n\nMichael L. Scott – programming languages, algorithms, distributed computing\n\nRobert Sedgewick – algorithms, data structures\n\nRavi Sethi – compilers, 2nd Dragon Book\n\nNigel Shadbolt\n\nAdi Shamir – RSA, cryptanalysis\n\nClaude Shannon – information theory\n\nDavid E. Shaw – computational finance, computational biochemistry, parallel architectures\n\nCliff Shaw – systems programmer, artificial intelligence\n\nScott Shenker – networking\n\nShashi Shekhar – spatial computing\n\nBen Shneiderman – human–computer interaction, information visualization\n\nEdward H. Shortliffe – MYCIN (medical diagnostic expert system)\n\nDaniel Siewiorek – electronic design automation, reliability computing, context aware mobile computing, wearable computing, computer-aided design, rapid prototyping, fault tolerance\n\nJoseph Sifakis – model checking\n\nHerbert A. Simon – artificial intelligence\n\nMunindar P. Singh – multiagent systems, software engineering, artificial intelligence, social networks\n\nRamesh Sitaraman – helped build Akamai's high performance network\n\nDaniel Sleator – splay tree, amortized analysis\n\nAaron Sloman – artificial intelligence and cognitive science\n\nArne Sølvberg – information modelling\n\nBrian Cantwell Smith – reflective programming, 3lisp\n\nDavid Canfield Smith – invented interface icons, programming by demonstration, developed graphical user interface, Xerox Star; Xerox PARC researcher, cofounded Dest Systems, Cognition\n\nSteven Spewak – enterprise architecture planning\n\nCarol Spradling\n\nRobert Sproull\n\nRohini Kesavan Srihari – information retrieval, text analytics, multilingual text mining\n\nSargur Srihari – pattern recognition, machine learning, computational criminology, CEDAR-FOX\n\nMaciej Stachowiak – GNOME, Safari, WebKit\n\nRichard Stallman (born 1953) – GNU Project\n\nRonald Stamper\n\nThad Starner\n\nRichard E. Stearns – computational complexity theory\n\nGuy L. Steele, Jr. – Scheme, Common Lisp\n\nThomas Sterling – creator of Beowulf clusters\n\nAlexander Stepanov – generic programming\n\nW. Richard Stevens (1951–1999) – author of books, including TCP/IP Illustrated and Advanced Programming in the Unix Environment\n\nLarry Stockmeyer – computational complexity, distributed computing\n\nSalvatore Stolfo – computer security, machine learning\n\nMichael Stonebraker – relational database practice and theory\n\nOlaf Storaasli – finite element machine, linear algebra, high performance computing\n\nChristopher Strachey – denotational semantics\n\nVolker Strassen – matrix multiplication, integer multiplication, Solovay–Strassen primality test\n\nBjarne Stroustrup – C++\n\nMadhu Sudan – computational complexity theory, coding theory\n\nGerald Jay Sussman – Scheme\n\nBert Sutherland – graphics, Internet\n\nIvan Sutherland – graphics\n\nLatanya Sweeney – data privacy and algorithmic fairness\n\nMario Szegedy – complexity theory, quantum computing\n\nParisa Tabriz – Google Director of Engineering, also known as the Security Princess\n\nRoberto Tamassia – computational geometry, computer security\n\nAndrew S. Tanenbaum – operating systems, MINIX\n\nAustin Tate – Artificial Intelligence Applications, AI Planning, Virtual Worlds\n\nBernhard Thalheim – conceptual modelling foundation\n\nÉva Tardos\n\nGábor Tardos\n\nRobert Tarjan – splay tree\n\nValerie Taylor\n\nMario Tchou – Italian engineer, of Chinese descent, leader of Olivetti Elea project\n\nJaime Teevan\n\nShang-Hua Teng – analysis of algorithms\n\nLarry Tesler – human–computer interaction, graphical user interface, Apple Macintosh\n\nAvie Tevanian – Mach kernel team, NeXT, Mac OS X\n\nCharles P. Thacker – Xerox Alto, Microsoft Research\n\nDaniel Thalmann – computer graphics, virtual actor\n\nKen Thompson – mainly designed and authored Unix, Plan 9 and Inferno operating systems, B and Bon languages (precursors of C), created UTF-8 character encoding, introduced regular expressions in QED, co-authored Go language\n\nSimon Thompson – functional programming research, textbooks; Cardano domain-specific languages: Marlowe\n\nSebastian Thrun – AI researcher, pioneered autonomous driving\n\nWalter F. Tichy – RCS\n\nSeinosuke Toda – computation complexity, recipient of 1998 Gödel Prize\n\nChai Keong Toh – mobile ad hoc networks pioneer\n\nLinus Torvalds – Linux kernel, Git\n\nLeonardo Torres Quevedo (1852–1936) – invented El Ajedrecista (the chess player) in 1912, a true automaton built to play chess without human guidance. In his work Essays on Automatics (1913), introduced the idea of floating-point arithmetic. In 1920, built an early electromechanical device of the Analytical Engine.\n\nGodfried Toussaint – computational geometry, computational music theory\n\nGloria Townsend\n\nEdwin E. Tozer – business information systems\n\nJoseph F Traub – computational complexity of scientific problems\n\nJohn V. Tucker – computability theory\n\nJohn Tukey – founder of FFT algorithm, box plot, exploratory data analysis and Coining the term 'bit'\n\nAlan Turing (1912–1954) – British computing pioneer, Turing machine, algorithms, cryptology, computer architecture\n\nDavid Turner – SASL, Kent Recursive Calculator, Miranda, IFIP WG 2.1 member\n\nMurray Turoff – computer-mediated communication\n\nJeffrey D. Ullman – compilers, databases, complexity theory\n\nLeslie Valiant – computational complexity theory, computational learning theory\n\nVladimir Vapnik – pattern recognition, computational learning theory\n\nMoshe Vardi – professor of computer science at Rice University\n\nDorothy Vaughan\n\nBernard Vauquois – pioneered computer science in France, machine translation (MT) theory and practice including Vauquois triangle, ALGOL 60\n\nUmesh Vazirani\n\nManuela M. Veloso\n\nFrançois Vernadat – enterprise modeling\n\nRichard Veryard – enterprise modeling\n\nSergiy Vilkomir – software testing, RC/DC\n\nPaul Vitanyi – Kolmogorov complexity, Information distance, Normalized compression distance, Normalized Google distance\n\nAndrew Viterbi – Viterbi algorithm\n\nJeffrey Scott Vitter – external memory algorithms, compressed data structures, data compression, databases\n\nPaul Vixie – DNS, BIND, PAIX, Internet Software Consortium, MAPS, DNSBL\n\nEiiti Wada – ALGOL N, IFIP WG 2.1 member, Japanese Industrial Standards (JIS) X 0208, 0212, Happy Hacking Keyboard\n\nDavid Wagner – security, cryptography\n\nDavid Waltz\n\nJames Z. Wang\n\nSteve Ward\n\nManfred K. Warmuth – computational learning theory\n\nDavid H. D. Warren – AI, logic programming, Prolog, Warren Abstract Machine (WAM)\n\nKevin Warwick – artificial intelligence\n\nJan Weglarz\n\nPhilip Wadler – functional programming, Haskell, Monad, Java, logic\n\nPeter Wegner – object-oriented programming, interaction (computer science)\n\nJoseph Henry Wegstein – ALGOL 58, ALGOL 60, IFIP WG 2.1 member, data processing technical standards, fingerprint analysis\n\nPeter J. Weinberger – programming language design, the 'w' in AWK\n\nMark Weiser – ubiquitous computing\n\nJoseph Weizenbaum – artificial intelligence, ELIZA\n\nDavid Wheeler – EDSAC, subroutines\n\nFranklin H. Westervelt – use of computers in engineering education, conversational use of computers, Michigan Terminal System (MTS), ARPANET, distance learning\n\nSteve Whittaker – human computer interaction, computer support for cooperative work, social media\n\nJennifer Widom – nontraditional data management\n\nGio Wiederhold – database management systems\n\nNorbert Wiener – Cybernetics\n\nAdriaan van Wijngaarden – Dutch pioneer; ARRA, ALGOL, IFIP WG 2.1 member\n\nMary Allen Wilkes – LINC developer, assembler-linker designer\n\nMaurice Vincent Wilkes – microprogramming, EDSAC\n\nYorick Wilks – computational linguistics, artificial intelligence\n\nJames H. Wilkinson – numerical analysis\n\nSophie Wilson – ARM architecture\n\nShmuel Winograd – Coppersmith–Winograd algorithm\n\nTerry Winograd – artificial intelligence, SHRDLU\n\nPatrick Winston – artificial intelligence\n\nNiklaus Wirth – ALGOL W, IFIP WG 2.1 member, Pascal, Modula, Oberon\n\nNeil Wiseman – computer graphics\n\nDennis E. Wisnosky – Integrated Computer-Aided Manufacturing (ICAM), IDEF\n\nStephen Wolfram – Mathematica\n\nMike Woodger – Pilot ACE, ALGOL 60, Ada (programming language)\n\nPhilip Woodward – ambiguity function, sinc function, comb operator, rep operator, ALGOL 68-R\n\nBeatrice Helen Worsley – wrote the first PhD dissertation involving modern computers; was one of the people who wrote Transcode\n\nSteve Wozniak – engineered first generation personal computers at Apple Computer\n\nJie Wu – computer networks\n\nWilliam Wulf – BLISS system programming language + optimizing compiler, Hydra operating system, Tartan Laboratories\n\nMihalis Yannakakis\n\nAndrew Chi-Chih Yao\n\nJohn Yen\n\nNobuo Yoneda – Yoneda lemma, Yoneda product, ALGOL, IFIP WG 2.1 member\n\nEdward Yourdon – Structured Systems Analysis and Design Method\n\nMoti Yung\n\nLotfi Zadeh – fuzzy logic\n\nHans Zantema – termination analysis\n\nArif Zaman – pseudo-random number generator\n\nStanley Zdonik — database management systems\n\nHussein Zedan – formal methods and real-time systems\n\nShlomo Zilberstein – artificial intelligence, anytime algorithms, automated planning, and decentralized POMDPs\n\nJill Zimmerman – James M. Beall Professor of Mathematics and Computer Science at Goucher College\n\nMark Zuckerberg – cofounder of Facebook and Meta Platforms\n\nKonrad Zuse – German pioneer of hardware and software\n\nLists portal"
    }
}