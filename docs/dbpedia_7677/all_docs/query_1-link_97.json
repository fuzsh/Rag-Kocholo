{
    "id": "dbpedia_7677_1",
    "rank": 97,
    "data": {
        "url": "https://www.usenix.org/events/sec06/tech/tech.html",
        "read_more_link": "",
        "language": "en",
        "title": "Security '06 Technical Sessions",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.usenix.org/events/sec06/art/sec06banner.gif",
            "https://www.usenix.org/events/sec06/art/longbar.gif",
            "https://www.usenix.org/events/sec06/tech/art/left_bar_yellow.gif",
            "https://www.usenix.org/events/sec06/tech/art/left_bar_yellow.gif",
            "https://www.usenix.org/events/sec06/tech/art/left_bar_yellow.gif",
            "https://www.usenix.org/events/sec06/tech/art/left_bar_yellow.gif",
            "https://www.usenix.org/events/sec06/tech/art/left_bar_yellow.gif",
            "https://www.usenix.org/events/sec06/tech/art/left_bottom.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/legacy/graphics/dot_clear.gif",
            "https://www.usenix.org/legacy/graphics/mp3_icon.gif",
            "https://www.usenix.org/events/sec06/art/footer.gif",
            "https://www.usenix.org/events/sec06/art/questmark.gif",
            "https://www.usenix.org/events/sec06/art/dot_clear.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "INVITED TALKS\n\nVancouver Island\n\nSelling Security to Software Developers: Lessons Learned While Building a Commercial Static Analysis Tool\n\nBrian Chess, Fortify Software\n\nListen in MP3 format\n\nOver the past ten years, static analysis has undergone a rebirth in both the academic and the commercial world. At the same time, security has become a critical topic for software makers. At the confluence of these trends is a new crop of static analysis tools that identify software security bugs in source code.\n\nThis talk covers what I have learned during the process of creating and selling a commercial static analysis product. Some of the lessons about static analysis are intuitive (better analysis results lead to better sales), while some are not (when a customer says \"false positive\" what they mean is \"result I do not like\"). In addition to relating my experience with static analysis, I will take a look at the differences between software security as addressed in the academic community and as practiced by software developers in the \"real world.\"\n\nBrian Chess is Chief Scientist at Fortify Software. His work focuses on practical methods for creating secure systems. Brian draws on his previous research in integrated circuit test and verification to find new ways to uncover security issues before they become security disasters.\n\nBrian received his Ph.D. in computer engineering from the University of California at Santa Cruz, where he studied the application of static analysis to the problem of finding security-relevant defects in source code. Prior to joining Fortify, Brian spent a decade in Silicon Valley working at both big and small companies and thinking about both software and hardware problems. Small companies and software problems came out on top.\n\nINVITED TALKS\n\nVancouver Island\n\nSecurity Vulnerabilities, Exploits, and Attack Patterns: 15 Years of Art, Pseudo-Science, Fun, and Profit\n\nIvan Arce, Core Security Technologies\n\nListen in MP3 format: Part 1 | Part 2 | Q & A\n\nView the presentation slides\n\nThe emergence and widespread adoption of home computers in the '80s helped raise a generation of young technologists that thrived on the search for security bugs, development of exploit code, and devising convoluted attack patterns. Self-perceived as a group of modern libertarians, techno-artists, half-baked scientists, information age vandals, and savvy businessmen, this generation has often led the development of technologies and techniques that give shape to the modern information security industry. Viruses, software cracks, shellcodes, exploits, mass-rooters, worms, rootkits, and their corresponding defensive counterparts are artifacts of an attacking mindset in search of punishment (x)or legitimacy.\n\nThis talk will plunge into the depths of landmark attack technologies developed during the past 15 years and analyze them in the context of current and future information security trends.\n\nBring extra batteries for the rant-o-meter.\n\nIvan Arce is co-founder and CTO of Core Security Technologies where he sets the technical direction for the company and is responsible for overseeing the research, development, quality assurance, and deployment of all Core products. At Core, Ivan performed and led teams that perform network penetration testing, source code and binary software security analysis, vulnerability research, and development of offensive and defensive security software.\n\nPrior to founding Core, he served as VP of Research and Development at a computer telephony integration company in Argentina where he was responsible for the development, testing, and deployment of mission-critical computer telephony applications. Previously, Arce spent 8 years as an information security consultant and software developer for banks, government agencies, and financial and telecommunications corporations.\n\nINVITED TALKS\n\nBritish\n\nSignaling Vulnerabilities in Law Enforcement Wiretapping Systems\n\nMatt Blaze, University of Pennsylvania\n\nListen in MP3 format: Talk | Q & A\n\nThe politics of wiretapping is a hot topic (again) lately. But how do the police actually tap telephones, anyway? How might tapping technology fail? Telephone wiretap and dialed number recording systems are used by law enforcement and national security agencies to collect critical investigative intelligence and legal evidence. This talk will examine the technology of (legal) wiretapping and show how many of these systems are vulnerable to simple, unilateral countermeasures that allow wiretap targets to prevent their call audio from being recorded and/or cause false or inaccurate dialed digits and call activity to be logged. The countermeasures exploit the unprotected in-band signals passed between the telephone network and the collection system and are effective against many of the wiretapping technologies currently used by US law enforcement, including at least some \"CALEA\" systems. We'll explore possible workarounds, as well as the broader implications of the security vulnerabilities in evidence collection systems.\n\nThis talk describes joint work with Micah Sherr, Eric Cronin, and Sandy Clark. A recent paper can be found (with audio) here.\n\nINVITED TALKS\n\nVancouver Island\n\nTuring Around the Security Problem\n\nCrispin Cowan, Director of Software Engineering, Novell\n\nListen in MP3 format\n\nView the presentation slides\n\nComputers have advanced so much in the 75 years of computing history that one might wonder why we still cannot make a secure computer system. Sure, it is hard, but lots of things are hard, and other computing problems fall before the onslaught of determined research. So why can't we make computers secure? This talk will examine the theoretical underpinnings of computer security, going all the way back to the original work by Alan Turing in 1932, to discover that reliably building secure software systems is actually provably impossible. We will also explore the socio-economic factors that make even building kind-of-secure systems unlikely.\n\nThus we are stuck with the problem of defending a perpetually vulnerable software base. We then explore the field of intrusion prevention; the art of defending systems despite latent vulnerabilities. Intrusion prevention also has a theoretical history, this time going back to Boyd, a fighter jet pilot from the 1950s. We will explain how Boyd's theories of engagement apply to modern intrusion prevention, and use this perspective to survey the range of ways that vulnerable systems can be defended, bringing us back to the modern context as we go \"Turing\" around the security problem.\n\nCrispin Cowan was the CTO and founder of Immunix, Inc., recently acquired by Novell. Dr. Cowan now works as an architect for Novell with respect to security for the Linux platform and applications that Novell offers for Linux, and with particular attention to the AppArmor product that came with the Immunix acquisition. Dr. Cowan developed several host security technologies under DARPA funding, including prominent technologies like the StackGuard compiler defense against buffer overflows, and the LSM (Linux Security Modules) interface in Linux 2.6. Dr. Cowan also co-invented the \"time-to-patch\" method of assessing when it is safe to apply a security patch. Prior to founding Immunix, he was a professor with the Oregon Graduate Institute, Department of Computer Science and Engineering. He holds a Ph.D. from the University of Western Ontario and a Masters of Mathematics from the University of Waterloo.\n\nINVITED TALKS\n\nVancouver Island\n\nAspect-Oriented Programming: Radical Research in Modularity\n\nGregor Kiczales, Professor, Department of Computer Science, University of British Columbia\n\nListen in MP3 format\n\nView the presentation slides\n\nAspect-oriented programming (AOP) is based on a radical exploration of modularity in software development. By presenting new mechanisms that enable better modularization in a number of systems, AOP is driving us to ask fundamental questions about what modularity should mean in our field.\n\nIn the past, we have tended to think of modularity in terms of hierarchies of crisply defined blocks, where each block or module defines its interface with the surrounding modules. This idea seems attractive but experience tells us that it is hard to actually get the modularity of the software we build just right. Some issues are hard to code (or design) in a single module, others just don't seem to want to stay where you put them.\n\nWork in AOP and other areas suggests a different conception of modularity, based on crosscutting structures and a more fluid notion of module boundaries.\n\nThe talk will present existing AOP techniques and the problems they solve, as well as open practical and research problems ranging from mechanisms to applications, theoretical formulations, and conceptual foundations.\n\nGregor Kiczales is Professor of Computer Science at the University of British Columbia. His work is directed at enabling programmers to write programs that, as much as possible, look like their design. He has pursued this goal in a number of projects, including CLOS and its metaobject protocol, open implementations of system software and middleware, and aspect-oriented programming. He led the Xerox PARC projects that developed aspect-oriented programming and AspectJ. He is author, with Danny Bobrow and Jim des Rivieres of \"The Art of the Metaobject Protocol.\"\n\nINVITED TALKS\n\nVancouver Island\n\nSurviving Moore's Law: Security, AI, and Last Mover Advantage\n\nPaul Kocher, Cryptography Research\n\nListen in MP3 format\n\nMost computer security research focuses on the pursuit of a \"binary\" ideal of security, such as proofs of correctness or cryptographic strength. Meanwhile, security for actual systems and networks increasingly relies on patches, rather than demonstrably strong designs. The cause: advances in complexity are causing greater harm to computer security than benefits.\n\nCoping with this problem requires strategies designed specifically for the needs of complex systems. This talk will explore approaches that have worked and others that have failed spectacularly, while considering the long-term prospects for security.\n\nPaul Kocher is President and Chief Scientist of Cryptography Research, where he leads a research team that specializes in applying results from cryptography and computer science to solve real-world security problems. His work includes co-authoring SSL v3.0, designing the DES Key Search machine Deep Crack, discovering Differential Power Analysis, and leading numerous security engineering projects.\n\nINVITED TALKS\n\nVancouver Island\n\nDRM Wars: The Next Generation\n\nEd Felten, Princeton University\n\nListen in MP3 format\n\nTechnologists, lawyers, and politicians have been fighting for years over digital rights/restrictions management (DRM) technology. This talk will survey the current state of the DRM wars and predict where they will go. How will the industry's techno-legal strategies evolve? What is the political climate for extension or reform of the DMCA and other laws and regulations? What will be the fallout from the Sony rootkit incident? Which advocacy groups are effective change agents and which are not? How will future DRM wars affect researchers, entrepreneurs, open source developers, and tinkerers? How can technologists affect the DRM wars? The talk will address these and other questions.\n\nEdward W. Felten is a Professor of Computer Science and Public Affairs at Princeton University, and is the founding director of Princeton's Center for Information Technology Policy. His research interests include computer security and privacy, especially relating to media and consumer products, and technology law and policy. He writes a blog on these topics at freedom-to-tinker.com.\n\nINVITED TALKS\n\nVancouver Island\n\nAcademic Department or Corporate Lab, Which Fits?\n\nBill Aiello, Professor and Chair, Department of Computer Science, University of British Columbia\n\nListen in MP3 format\n\nView the presentation slides\n\nAfter 15 years in two of the Bell Labs' progeny, the last 5 as a division manager for cryptography and network security at AT&T Labs, a little over a year ago I became the head of the computer science department at the University of British Columbia. This was not exactly a controlled experiment since it involved moving from the U.S. to Canada, from the East Coast to the West Coast and switching from corporate research to academia. But I'll share my thoughts on what I've seen as the similarities and differences between life in a university versus life in a corporate research lab on issues such as incentives, funding, intellectual freedom, decision-making structures, intellectual property, performance review, and graduate student project supervision.\n\nThis will be a non-technical session for graduate students on the job market, for more senior researchers contemplating a move from corporate research to academia or vice versaand for anyone else who wants to join in the discussion. I expect lots of folks in the audience to add, rebut, amplify, you name it. And we'll leave time to discuss changes in both corporate and government support for long-term research and the implications for life in corporate labs and universities in the future. In the end, most computer science and security researchers could be happy in either a university department or a corporate research lab but for some the fit is distinctly better in one versus the other. Hopefully, from the ensuing discussion, we can all help junior researchers come away with a better understanding of the pros and cons, the ups and downs, unique to each type of job."
    }
}