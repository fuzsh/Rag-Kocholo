{
    "id": "dbpedia_1587_1",
    "rank": 2,
    "data": {
        "url": "https://www.agilealliance.org/agile101/agile-glossary/",
        "read_more_link": "",
        "language": "en",
        "title": "Agile Glossary and Terminology",
        "top_image": "https://agilealliance.org/wp-content/uploads/2019/12/Agile_Alliance_Logo_Square.jpg",
        "meta_img": "https://agilealliance.org/wp-content/uploads/2019/12/Agile_Alliance_Logo_Square.jpg",
        "images": [
            "https://www.agilealliance.org/wp-content/uploads/2022/08/agile-alliance-logo.svg",
            "https://www.agilealliance.org/wp-content/uploads/2023/03/agile-membership-banner-mega-menu.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2024/08/agile-online-deliver-better-results-gil-broza-1024x538.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2023/01/member-more-effective.svg",
            "https://www.agilealliance.org/wp-content/uploads/2019/09/download-agile-manifesto-12-principles.png",
            "https://www.agilealliance.org/wp-content/uploads/2024/08/we-are-the-world-150x150.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2024/08/agile2024-recap-feature-150x150.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2024/07/miro-blog-featured-150x150.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2023/03/agile-resources-menu.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2023/03/agile-global-affilates.png",
            "https://www.agilealliance.org/wp-content/uploads/2022/08/agile-alliance-logo.svg",
            "https://www.agilealliance.org/wp-content/uploads/2023/12/lucid-partner-carousel-side.png",
            "https://www.agilealliance.org/wp-content/uploads/2023/12/gehtsoft-partner-carousel-side.png",
            "https://www.agilealliance.org/wp-content/uploads/2022/10/become-member-sidebar-2023.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2022/09/agile-alliance-game-on-sidebar-2023b.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2024/08/we-are-the-world-150x150.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2024/08/agile2024-recap-feature-150x150.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2024/07/miro-blog-featured-150x150.jpg",
            "https://www.agilealliance.org/wp-content/uploads/2022/08/lucid-partner-footers.png",
            "https://www.agilealliance.org/wp-content/uploads/2022/08/gehtsoft-partner-footer.png",
            "https://www.agilealliance.org/wp-content/uploads/2019/10/Agile-Alliance-footer-logo.png",
            "https://www.agilealliance.org/wp-content/uploads/2022/08/Bluesky_butterfly-icon-white.svg",
            "https://www.agilealliance.org/wp-content/uploads/2019/10/Agile-Alliance-footer-logo.png",
            "https://www.agilealliance.org/wp-content/uploads/2023/05/agile-alliance-logo.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2015-11-07T20:03:29-08:00",
        "summary": "",
        "meta_description": "Learn the unique terminology used in Agile development from the experts at Agile Alliance.",
        "meta_lang": "en",
        "meta_favicon": "https://www.agilealliance.org/wp-content/uploads/2021/12/agile-alliance-logo-icon-150x150.png",
        "meta_site_name": "Agile Alliance |",
        "canonical_link": "https://www.agilealliance.org/agile101/agile-glossary/",
        "text": "Acceptance Test Driven Development (ATDD) involves team members with different perspectives (customer, development, testing) collaborating to write acceptance tests in advance of implementing the corresponding functionality.\n\nAn acceptance test is a formal description of the behavior of a software product, generally expressed as an example or a usage scenario. A number of different notations and approaches have been proposed for such examples or scenarios.\n\nAntipatterns are common solutions to common problems where the solution is ineffective and may result in undesired consequences.\n\nIn the context of software development, build refers to the process that converts files and other assets under the developers' responsibility into a software product in its final or consumable form. The build is automated when these steps are repeatable, require no direct human intervention, and can be performed at any time with no information other than what is stored in the source code control repository.\n\nBacklog grooming is when the product owner and some, or all, of the rest of the team refine the backlog on a regular basis to ensure the backlog contains the appropriate items, that they are prioritized, and that the items at the top of the backlog are ready for delivery.\n\nBDD is a practice where members of the team discuss the expected behavior of a system in order to build a shared understanding of expected functionality.\n\nBurndown charts and burnup charts track the amount of output (in terms of hours, story points, or backlog items) a team has completed across an iteration or a project.\n\nBusiness agility is the ability of an organization to sense changes internally or externally and respond accordingly in order to deliver value to its customers.\n\nCollective code ownership is the explicit convention that every team member can make changes to any code file as necessary: either to complete a development task, to repair a defect, or to improve the code's overall structure.\n\nContinuous deployment aims to reduce the time elapsed between writing a line of code and making that code available to users in production. To achieve continuous deployment, the team relies on infrastructure that automates and instruments the various steps leading up to deployment, so that after each integration successfully meeting these release criteria, the live application is updated with new code.\n\nContinuous Integration is the practice of merging code changes into a shared repository several times a day in order to release a product version at any moment. This requires an integration procedure which is reproducible and automated.\n\nClass Responsibility Collaborator (CRC) Cards are an object oriented design technique teams can use to discuss what a class should know and do and what other classes it interacts with.\n\nCustomer development is a four-step framework, originally identified by Steve Blank, to discover and validate that you have identified a need(s) that customers have built the right product to satisfy [â€¦]\n\nThe daily meeting is one of the most commonly practiced Agile techniques and presents opportunity for a team to get together on a regular basis to coordinate their activities.\n\nThe definition of done is an agreed upon list of the activities deemed necessary to get a product increment, usually represented by a user story, to a done state by the end of a sprint.\n\nDefinition of Ready involves creating clear criteria that a user story must meet before being accepted into an upcoming iteration. This is typically based on the INVEST matrix.\n\nAn epic is a large user story that cannot be delivered as defined within a single iteration or is large enough that it can be split into smaller user stories.\n\nIn software development, an \"estimate\" is the evaluation of the effort necessary to carry out a given development task; this is most often expressed in terms of duration.\n\nExploratory testing is, more than strictly speaking a \"practice,\" a style or approach to testing software which is often contrasted to \"scripted testing.\"\n\nExtreme Programming (XP) is an agile software development framework that aims to produce higher quality software, and higher quality of life for the development team. XP is the most specific of the agile frameworks regarding appropriate engineering practices for software development.\n\nIn an Agile context, Incremental Development is when each successive version of a product is usable, and each builds upon the previous version by adding user-visible functionality.\n\n\"Information radiator\" is the term for any of a number of visual displays which a team places in a highly visible location, so that all team members can see the latest information at a glance.\n\n\"Integration\" (or \"integrating\") refers to any efforts still required for a project team to deliver a product suitable for release as a functional whole.\n\nThe acronym INVEST stands for a set of criteria used to assess the quality of a user story. If the story fails to meet one of these criteria, the team may want to reword it.\n\nAn iteration is a timebox during which development takes place. The duration may vary from project to project and is usually fixed.\n\nAgile projects are iterative insofar as they intentionally allow for \"repeating\" software development activities, and for potentially \"revisiting\" the same work products (the phrase \"planned rework\" is sometimes used; refactoring is a good example).\n\nA Milestone Retrospective is a team's detailed analysis of the project's significant events after a set period of time or at the project's end.\n\nA Minimum Marketable Feature is a small, self-contained feature that can be developed quickly and that delivers significant value to the user.\n\nA Minimum Viable Product is the \"version of a new product which allows a team to collect the maximum amount of validated learning about customers with the least effort.\"\n\nMob Programming is a software development approach where the whole team works on the same thing, at the same time, in the same space, and at the same computer.\n\nMock Objects (commonly used in the context of crafting automated unit tests) consist of instantiating a test-specific version of a software component.\n\nPair programming consists of two programmers sharing a single workstation (one screen, keyboard and mouse among the pair). The programmer at the keyboard is usually called the \"driver\", the other, also actively involved in the programming task but focusing more on overall direction is the \"navigator\"; it is expected that the programmers swap roles every few minutes or so.\n\nPersonas are synthetic biographies of fictitious users of the future product.\n\nAn approach to estimation used by Agile teams. Each team member \"plays\" a card bearing a numerical value corresponding to a point estimation for a user story.\n\nAgile teams generally prefer to express estimates in units other than the time-honored \"man-hours.\" Possibly the most widespread unit is \"story points.\"\n\nA product backlog is a list of the new features, changes to existing features, bug fixes, infrastructure changes or other activities that a team may deliver in order to achieve a specific outcome.\n\nThe product owner is a role on a product development team responsible for managing the product backlog in order to achieve the desired outcome that a product development team seeks to accomplish.\n\nA high-level summary of the project's key success factors displayed on one wall of the team room as a flipchart-sized sheet of paper.\n\nScrum is a process framework used to manage product development and other knowledge work. Scrum is empirical in that it provides a means for teams to establish a hypothesis of how they think something works, try it out, reflect on the experience, and make the appropriate adjustments. That is, when the framework is used properly.\n\nThe scrum master is the team role responsible for ensuring the team lives agile values and principles and follows the processes and practices that the team agreed they would use.\n\nA technique to scale Scrum up to large groups (over a dozen people), consisting of dividing the groups into Agile teams of 5-10.\n\nScrumban is a mixture of the Scrum Method and the Kanban Method.\n\nMembers of an Agile development team normally choose which tasks to work on, rather than being assigned work by a manager.\n\nA team adopting the \"simple design\" practice bases its software design strategy on a set of \"simple design\" principles.\n\nA sprint backlog is the subset of product backlog that a team targets to deliver during a sprint to accomplish the sprint goal and progress toward an outcome.\n\nStory mapping consists of ordering user stories along two independent dimensions based on the order activities occur and sophistication of implementation.\n\nSplitting consists of breaking up one user story into smaller ones, while preserving the property that each user story separately has measurable business value.\n\nThe team aims for a work pace that they would be able to sustain indefinitely.\n\nA basic task board is divided into three columns labeled \"To Do,\" \"In Progress,\" and \"Done.\" Cards are placed in the columns reflecting the current status.\n\nTest-driven development (TDD) is a style of programming where coding, testing, and design are tightly interwoven. Benefits include reduction in defect rates.\n\nA \"team\" in the Agile sense is a small group of people, assigned to the same project or effort, nearly all of them on a full-time basis.\n\nThe team has the use of a dedicated space for the duration of the project, set apart from other groups' activities.\n\n\"Card, Conversation, Confirmation\" is a formula that captures the social nature of user stories.\n\nThree amigos refers to the primary perspectives to examine an increment of work before, during, and after development. Those perspectives are: Business - What problem are we trying to solve? Development - How might we build a solution to solve that problem? Testing - What about this, what could possibly happen?\n\nThe daily meeting is structured around the following three questions: What have you completed? What will you do next? What is getting in your way?\n\nA timebox is a previously agreed period of time during which a person or a team works steadily towards completion of some goal."
    }
}