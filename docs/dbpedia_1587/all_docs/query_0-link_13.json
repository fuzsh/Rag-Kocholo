{
    "id": "dbpedia_1587_0",
    "rank": 13,
    "data": {
        "url": "https://asana.com/resources/agile-methodology",
        "read_more_link": "",
        "language": "en",
        "title": "What Is Agile Methodology? (A Beginner’s Guide) [2024] • Asana",
        "top_image": "https://assets.asana.biz/m/71d0d338d75db41a/webimage-article-agile-agile-methodology-2x.jpg",
        "meta_img": "https://assets.asana.biz/m/71d0d338d75db41a/webimage-article-agile-agile-methodology-2x.jpg",
        "images": [
            "https://assets.asana.biz/m/3c783c71ef817d3e/original/WEBINAR-PNG-24AI-ON_DEMAND-800x512-v2.png",
            "https://assets.asana.biz/m/c0f90a11ed114d5/original/RM25_resources_featuredreadthumbnail.png",
            "https://assets.asana.biz/m/4bfad42502bff345/original/05-31-2024-State-of-AI-at-Work-Hero-Image.png",
            "https://assets.asana.biz/m/3c783c71ef817d3e/original/WEBINAR-PNG-24AI-ON_DEMAND-800x512-v2.png",
            "https://assets.asana.biz/m/c0f90a11ed114d5/original/RM25_resources_featuredreadthumbnail.png",
            "https://assets.asana.biz/m/4bfad42502bff345/original/05-31-2024-State-of-AI-at-Work-Hero-Image.png",
            "https://assets.asana.biz/transform/8724b24b-d9b0-4e2b-9392-33dc8cba3abd/blog_profile_photos_0014_Sarah-Laoyan?io=transform:fill,width:32&format=webp 1x, https://assets.asana.biz/transform/8724b24b-d9b0-4e2b-9392-33dc8cba3abd/blog_profile_photos_0014_Sarah-Laoyan?io=transform:fill,width:64&format=webp 2x",
            "https://assets.asana.biz/transform/a55f3e9f-008f-44bd-8354-006745a02f7d/article-agile-agile-methodology-2x?io=transform:fill,width:375&format=webp 375w, https://assets.asana.biz/transform/a55f3e9f-008f-44bd-8354-006745a02f7d/article-agile-agile-methodology-2x?io=transform:fill,width:480&format=webp 480w, https://assets.asana.biz/transform/a55f3e9f-008f-44bd-8354-006745a02f7d/article-agile-agile-methodology-2x?io=transform:fill,width:768&format=webp 768w, https://assets.asana.biz/transform/a55f3e9f-008f-44bd-8354-006745a02f7d/article-agile-agile-methodology-2x?io=transform:fill,width:960&format=webp 960w, https://assets.asana.biz/transform/a55f3e9f-008f-44bd-8354-006745a02f7d/article-agile-agile-methodology-2x?io=transform:fill,width:1120&format=webp 1120w, https://assets.asana.biz/transform/a55f3e9f-008f-44bd-8354-006745a02f7d/article-agile-agile-methodology-2x?io=transform:fill,width:1440&format=webp 1440w, https://assets.asana.biz/transform/a55f3e9f-008f-44bd-8354-006745a02f7d/article-agile-agile-methodology-2x?io=transform:fill,width:1680&format=webp 1680w, https://assets.asana.biz/transform/a55f3e9f-008f-44bd-8354-006745a02f7d/article-agile-agile-methodology-2x?io=transform:fill,width:2560&format=webp 2560w",
            "https://assets.asana.biz/transform/f3519623-44e4-4506-8e1f-38cb74819c58/inline-agile-agile-methodology-1-2x?io=transform:fill,width:375&format=webp 375w, https://assets.asana.biz/transform/f3519623-44e4-4506-8e1f-38cb74819c58/inline-agile-agile-methodology-1-2x?io=transform:fill,width:480&format=webp 480w, https://assets.asana.biz/transform/f3519623-44e4-4506-8e1f-38cb74819c58/inline-agile-agile-methodology-1-2x?io=transform:fill,width:768&format=webp 768w, https://assets.asana.biz/transform/f3519623-44e4-4506-8e1f-38cb74819c58/inline-agile-agile-methodology-1-2x?io=transform:fill,width:960&format=webp 960w, https://assets.asana.biz/transform/f3519623-44e4-4506-8e1f-38cb74819c58/inline-agile-agile-methodology-1-2x?io=transform:fill,width:1120&format=webp 1120w, https://assets.asana.biz/transform/f3519623-44e4-4506-8e1f-38cb74819c58/inline-agile-agile-methodology-1-2x?io=transform:fill,width:1440&format=webp 1440w, https://assets.asana.biz/transform/f3519623-44e4-4506-8e1f-38cb74819c58/inline-agile-agile-methodology-1-2x?io=transform:fill,width:1680&format=webp 1680w, https://assets.asana.biz/transform/f3519623-44e4-4506-8e1f-38cb74819c58/inline-agile-agile-methodology-1-2x?io=transform:fill,width:2560&format=webp 2560w",
            "https://assets.asana.biz/transform/3052d1de-4844-46f9-9571-386d3adbe50c/article-agile-technical-debt-2x?io=transform:fill,width:375&format=webp 375w, https://assets.asana.biz/transform/3052d1de-4844-46f9-9571-386d3adbe50c/article-agile-technical-debt-2x?io=transform:fill,width:480&format=webp 480w, https://assets.asana.biz/transform/3052d1de-4844-46f9-9571-386d3adbe50c/article-agile-technical-debt-2x?io=transform:fill,width:768&format=webp 768w, https://assets.asana.biz/transform/3052d1de-4844-46f9-9571-386d3adbe50c/article-agile-technical-debt-2x?io=transform:fill,width:960&format=webp 960w, https://assets.asana.biz/transform/3052d1de-4844-46f9-9571-386d3adbe50c/article-agile-technical-debt-2x?io=transform:fill,width:1120&format=webp 1120w, https://assets.asana.biz/transform/3052d1de-4844-46f9-9571-386d3adbe50c/article-agile-technical-debt-2x?io=transform:fill,width:1440&format=webp 1440w, https://assets.asana.biz/transform/3052d1de-4844-46f9-9571-386d3adbe50c/article-agile-technical-debt-2x?io=transform:fill,width:1680&format=webp 1680w, https://assets.asana.biz/transform/3052d1de-4844-46f9-9571-386d3adbe50c/article-agile-technical-debt-2x?io=transform:fill,width:2560&format=webp 2560w",
            "https://assets.asana.biz/transform/07f90203-5e0f-4788-b455-a968db5fb769/article-collaboration-workplace-adaptability-skills-2x?io=transform:fill,width:375&format=webp 375w, https://assets.asana.biz/transform/07f90203-5e0f-4788-b455-a968db5fb769/article-collaboration-workplace-adaptability-skills-2x?io=transform:fill,width:480&format=webp 480w, https://assets.asana.biz/transform/07f90203-5e0f-4788-b455-a968db5fb769/article-collaboration-workplace-adaptability-skills-2x?io=transform:fill,width:768&format=webp 768w, https://assets.asana.biz/transform/07f90203-5e0f-4788-b455-a968db5fb769/article-collaboration-workplace-adaptability-skills-2x?io=transform:fill,width:960&format=webp 960w, https://assets.asana.biz/transform/07f90203-5e0f-4788-b455-a968db5fb769/article-collaboration-workplace-adaptability-skills-2x?io=transform:fill,width:1120&format=webp 1120w, https://assets.asana.biz/transform/07f90203-5e0f-4788-b455-a968db5fb769/article-collaboration-workplace-adaptability-skills-2x?io=transform:fill,width:1440&format=webp 1440w, https://assets.asana.biz/transform/07f90203-5e0f-4788-b455-a968db5fb769/article-collaboration-workplace-adaptability-skills-2x?io=transform:fill,width:1680&format=webp 1680w, https://assets.asana.biz/transform/07f90203-5e0f-4788-b455-a968db5fb769/article-collaboration-workplace-adaptability-skills-2x?io=transform:fill,width:2560&format=webp 2560w",
            "https://assets.asana.biz/transform/b2373105-da01-4992-a8d8-65084ebd5771/article-project-management-burndown-chart-2x?io=transform:fill,width:375&format=webp 375w, https://assets.asana.biz/transform/b2373105-da01-4992-a8d8-65084ebd5771/article-project-management-burndown-chart-2x?io=transform:fill,width:480&format=webp 480w, https://assets.asana.biz/transform/b2373105-da01-4992-a8d8-65084ebd5771/article-project-management-burndown-chart-2x?io=transform:fill,width:768&format=webp 768w, https://assets.asana.biz/transform/b2373105-da01-4992-a8d8-65084ebd5771/article-project-management-burndown-chart-2x?io=transform:fill,width:960&format=webp 960w, https://assets.asana.biz/transform/b2373105-da01-4992-a8d8-65084ebd5771/article-project-management-burndown-chart-2x?io=transform:fill,width:1120&format=webp 1120w, https://assets.asana.biz/transform/b2373105-da01-4992-a8d8-65084ebd5771/article-project-management-burndown-chart-2x?io=transform:fill,width:1440&format=webp 1440w, https://assets.asana.biz/transform/b2373105-da01-4992-a8d8-65084ebd5771/article-project-management-burndown-chart-2x?io=transform:fill,width:1680&format=webp 1680w, https://assets.asana.biz/transform/b2373105-da01-4992-a8d8-65084ebd5771/article-project-management-burndown-chart-2x?io=transform:fill,width:2560&format=webp 2560w",
            "https://assets.asana.biz/transform/a4b917b4-b872-4507-b0bc-038140634793/article-project-planning-resource-allocation-2x?io=transform:fill,width:375&format=webp 375w, https://assets.asana.biz/transform/a4b917b4-b872-4507-b0bc-038140634793/article-project-planning-resource-allocation-2x?io=transform:fill,width:480&format=webp 480w, https://assets.asana.biz/transform/a4b917b4-b872-4507-b0bc-038140634793/article-project-planning-resource-allocation-2x?io=transform:fill,width:768&format=webp 768w, https://assets.asana.biz/transform/a4b917b4-b872-4507-b0bc-038140634793/article-project-planning-resource-allocation-2x?io=transform:fill,width:960&format=webp 960w, https://assets.asana.biz/transform/a4b917b4-b872-4507-b0bc-038140634793/article-project-planning-resource-allocation-2x?io=transform:fill,width:1120&format=webp 1120w, https://assets.asana.biz/transform/a4b917b4-b872-4507-b0bc-038140634793/article-project-planning-resource-allocation-2x?io=transform:fill,width:1440&format=webp 1440w, https://assets.asana.biz/transform/a4b917b4-b872-4507-b0bc-038140634793/article-project-planning-resource-allocation-2x?io=transform:fill,width:1680&format=webp 1680w, https://assets.asana.biz/transform/a4b917b4-b872-4507-b0bc-038140634793/article-project-planning-resource-allocation-2x?io=transform:fill,width:2560&format=webp 2560w",
            "https://luna1.co/Download_App_Store_Badge_US.svg",
            "https://luna1.co/Google_Play_EN.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Sarah Laoyan"
        ],
        "publish_date": "2024-02-02T11:00:00+00:00",
        "summary": "",
        "meta_description": "Agile methodology is a framework that breaks projects down into several dynamic phases, commonly known as sprints. Learn more.",
        "meta_lang": "en",
        "meta_favicon": "https://brand.asana.biz/image/upload/f_auto:image,fl_preserve_transparency/v1696462482/asana_favicon_57x57.png",
        "meta_site_name": "Asana",
        "canonical_link": "https://asana.com/resources/agile-methodology",
        "text": "Scrum, Kanban, waterfall, Agile.\n\nThere's a wide array of project management frameworks you can use. Some methods though, like waterfall, aren't as effective for software teams. With priorities and customer needs constantly changing, the Agile methodology breaks projects up into several phases to drive continuous improvement.\n\nAgile project management isn’t just useful for software project management—all types of teams have been successful with this dynamic methodology. If you’re looking to get started with Agile, you’ve come to the right place.\n\nWhat is the Agile methodology?\n\nAgile methodology is a project management framework that breaks projects down into several dynamic phases, commonly known as sprints.\n\nThe Agile framework is an iterative methodology. After every sprint, teams reflect and look back to see if there was anything that could be improved so they can adjust their strategy for the next sprint.\n\nCreate an Agile project plan template\n\nWhat is the Agile Manifesto?\n\nThe Agile Manifesto is a document that focuses on four values and 12 principles for Agile software development. It was published in February 2001 by 17 software developers who needed an alternative to the more linear product development process.\n\nWhat are the 4 pillars of Agile?\n\nAs outlined in the Agile Manifesto, there are four main values of Agile project management:\n\nIndividuals over processes and tools: Agile teams value team collaboration and teamwork over working independently and doing things \"by the book.”\n\nWorking software over comprehensive documentation: The software that Agile teams develop should work. Additional work, like documentation, is not as important as developing good software.\n\nCustomer collaboration over contract negotiation: Customers are extremely important within the Agile methodology. Agile teams allow customers to guide where the software should go. Therefore, customer collaboration is more important than the finer details of contract negotiation.\n\nResponding to change over following a plan: One of the major benefits of Agile project management is that it allows teams to be flexible. This framework allows for teams to quickly shift strategies and workflows without derailing an entire project.\n\nWhat are the 12 Agile principles?\n\nThe four values of Agile are the pillars of Agile methodology. From those values, the team developed 12 principles.\n\nIf the four values of Agile are the weight-bearing pillars of a house, then these 12 principles are the rooms you can build within that house. These principles can be easily adapted to fit the needs of your team.\n\nThe 12 principles used in Agile methodology are:\n\nSatisfy customers through early, continuous improvement and delivery.When customers receive new updates regularly, they're more likely to see the changes they want within the product. This leads to happier, more satisfied customers—and more recurring revenue.\n\nWelcome changing requirements, even late in the project. The Agile framework is all about adaptability. In iterative processes like Agile, being inflexible causes more harm than good.\n\nDeliver value frequently. Similar to principle #1, delivering value to your customers or stakeholders frequently makes it less likely for them to churn.\n\nBreak the silos of your projects. Collaboration is key in the Agile framework. The goal is for people to break out of their own individual projects and collaborate together more frequently.\n\nBuild projects around motivated individuals. Agile works best when teams are committed and actively working to achieve a goal.\n\nThe most effective way to communicate is face-to-face. If you’re working on a distributed team, spend time communicating in ways that involve face-to-face communication like Zoom calls.\n\nWorking software is the primary measure of progress. The most important thing that teams should strive for with the Agile framework is the product. The goal here is to prioritize functional software over everything else.\n\nMaintain a sustainable working pace. Some aspects of Agile can be fast-paced, but it shouldn't be so fast that team members burn out. The goal is to maintain sustainability throughout the project.\n\nContinuous excellence enhances agility. If the team develops excellent code in one sprint, they can continue to build off of it the next. Continually creating great work allows teams to move faster in the future.\n\nSimplicity is essential. Sometimes the simplest solution is the best solution. Agile aims to not overcomplicate things and find simple answers to complex problems.\n\nSelf-organizing teams generate the most value. Similar to principle #5, proactive teams become valuable assets to the company as they strive to deliver value.\n\nRegularly reflect and adjust your way of work to boost effectiveness. Retrospective meetings are a common Agile practice. It's a dedicated time for teams to look back and reflect on their performance and adapt their behaviors for the future.\n\nCreate an Agile project plan template\n\nWhat are the benefits of the Agile development methodology?\n\nYou commonly find Agile project management used in application development or other types of software development. This is because software is constantly changing, and the needs of the product have to change with it.\n\nBecause of this, linear project management methods like the waterfall model are less effective. Here are a few other reasons why teams use Agile:\n\nAgile methods are adaptable\n\nThere's a reason why they call it the Agile methodology. One of the main benefits of using Agile processes in software development is the ability to shift strategies quickly, without disrupting the flow of a project.\n\nBecause phases in the traditional waterfall method flow into one another, shifting strategies is challenging and can disrupt the rest of the project roadmap. Since software development is a much more adaptable field, project managing rapid changes in the traditional sense can be challenging. This is part of the reason why Agile project management is favored in software development.\n\nAgile fosters collaborative teamwork\n\nOne of the Agile principles states that the most effective way to communicate with your team is face-to-face. Combine this with the principle that encourages teams to break project silos and you have a recipe for collaborative teamwork.\n\nWhile technology has changed since Agile’s inception and work has shifted to welcome more remote-friendly policies, the idea of working face-to-face still hasn't changed.\n\nRead: 10 easy steps to boost team collaboration\n\nAgile methods focus on customer needs\n\nOne of the unique aspects of software development is that teams can focus on customer needs much more closely than other industries. With the rise of cloud-based software, teams can get feedback from their actual customers quickly.\n\nSince customer satisfaction is a key driver for software development, it’s easy to see why it was included in the Agile process. By collaborating with customers, Agile teams can prioritize features that focus on customer needs. When those needs change, teams can take an Agile approach and shift to a different project.\n\nAgile methodologies\n\nThe Agile framework is an umbrella for several different variations. Here are a few of the most common Agile methodologies.\n\nKanban\n\nKanban is a visual approach to Agile. Teams use online Kanban board tools to represent where certain tasks are in the development process. Tasks are represented by cards on a board, and stages are represented in columns. As team members work on tasks, they move cards from the backlog column to the column that represents the stage the task is in.\n\nThis method is a good way for teams to identify roadblocks and to visualize the amount of work that’s getting done.\n\nRead: A beginner's guide to Kanban boards\n\nScrum\n\nScrum is a common Agile methodology for small teams and also involves sprints. The team is led by a Scrum master whose main job is to clear all obstacles for others executing the day-to-day work.\n\nScrum teams meet daily to discuss active tasks, roadblocks, and anything else that may affect the development team.\n\nSprint planning: This event kicks off the sprint. Sprint planning outlines what can be delivered in a sprint (and how).\n\nSprint retrospective: This recurring meeting acts as a sprint review—to iterate on learnings from a previous sprint that will improve and streamline the next one.\n\nExtreme Programming (XP)\n\nTypically used in software development, Extreme Programming (XP) is an Agile framework that outlines values that will allow your team to work together more effectively.\n\nThe five values of XP include:\n\nCommunication\n\nSimplicity\n\nFeedback\n\nCourage\n\nRespect\n\nSimilar to daily Scrum standups, there are regular releases and iterations, yet XP is much more technical in its approach. If your dev team needs to quickly release and respond to customer requests, XP focuses on the “how” it will get done.\n\nAdaptive Project Framework (APF)\n\nThe Adaptive Project Framework, also known as Adaptive Project Management (APM) grew from the idea that unknown factors can show up at any time during a project. This technique is mainly used for IT projects where more traditional project management techniques don’t apply.\n\nThis framework is based on the idea that project resources can change at any time. For example, budgets can change, timelines can shift, or team members working on the project may transition to different teams. APF focuses on the resources that a project has, as opposed to the resources a project needs.\n\nExtreme Project Management (XPM)\n\nThis type of project management is often used for very complex projects with a high level of uncertainty. This approach involves constantly adapting processes until they lead to the desired result. This type of project involves many spontaneous changes and it’s normal for teams to switch strategies from one week to the next.\n\nXPM requires a lot of flexibility. This is one of the reasons why each sprint is short—only a few weeks maximum. This methodology allows for frequent changes, trial-and-error approaches to problems, and many iterations of self-correction.\n\nRead: Understanding the iterative process, with examples\n\nAdaptive Software Development (ASD)\n\nThis Agile methodology enables teams to quickly adapt to changing requirements. The main focus of this process is continuous adaptation. The phases of this project type—speculate, collaborate, and learn—allow for continuous learning as the project progresses.\n\nIt’s not uncommon for teams running ASD to be in all three phases of ASD at once. Because of its non-linear structure, it’s common for the phases to overlap. Because of the fluidity of this type of management, there’s a higher likelihood that the constant repetition of the three phases helps team members identify and solve problems much quicker than standard project management methods.\n\nDynamic Systems Development Method (DSDM)\n\nThe Dynamic Systems Development Method is an Agile method that focuses on a full project lifecycle. Because of this, DSDM has a more rigorous structure and foundation, unlike other Agile methods.\n\nThere are four main phases of DSDM:\n\nFeasibility and business study\n\nFunctional mode or prototype iteration\n\nDesign and build iteration\n\nImplementation\n\nFeature Driven Development (FDD)\n\nFeature Driven Development blends different Agile best practices. While still an iterative method of project management, this model focuses more on the exact features of a software that the team is working to develop. Feature-driven development relies heavily on customer input, as the features the team prioritizes are the features that the customers need.\n\nThis model also allows teams to update projects frequently. If there is an error, it's quick to cycle through and implement a fix as the phases of this framework are constantly moving.\n\nRead: Waterfall vs. Agile vs. Kanban vs. Scrum: What's the difference?\n\nOrganize Agile processes with Asana\n\nYou’ll often hear software development teams refer to the Agile process—but any team can run Agile. If you’re looking for a more flexible project management framework, try Agile.\n\nCreate an Agile project plan template"
    }
}