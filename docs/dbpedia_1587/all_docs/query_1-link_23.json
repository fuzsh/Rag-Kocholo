{
    "id": "dbpedia_1587_1",
    "rank": 23,
    "data": {
        "url": "https://renierbotha.com/2018/02/21/executive-overview-of-4-commonly-used-agile-methodologies/",
        "read_more_link": "",
        "language": "en",
        "title": "Executive Summary of 4 commonly used Agile Methodologies",
        "top_image": "https://renierbotha.com/wp-content/uploads/2018/02/agile-sw-dev-cycle.jpg",
        "meta_img": "https://renierbotha.com/wp-content/uploads/2018/02/agile-sw-dev-cycle.jpg",
        "images": [
            "https://renierbotha.com/wp-content/uploads/2017/05/rb-vista-logo-xs.png?w=101",
            "https://renierbotha.com/wp-content/uploads/2018/02/agile-sw-dev-cycle.jpg?w=765&h=380&crop=1",
            "https://renierbotha.com/wp-content/uploads/2018/02/scrum.jpg",
            "https://renierbotha.com/wp-content/uploads/2018/02/xp.jpg",
            "https://renierbotha.com/wp-content/uploads/2018/02/lean.jpg",
            "https://renierbotha.com/wp-content/uploads/2018/02/kanban.jpg",
            "https://1.gravatar.com/avatar/18f5672a6330edb153b5241166ca90e350b24040b3754eeede6ed7e7a9612a26?s=48&d=identicon&r=G",
            "https://renierbotha.com/wp-content/uploads/2017/05/cropped-rb-logo-small.jpg?w=50",
            "https://renierbotha.com/wp-content/uploads/2017/05/cropped-rb-logo-small.jpg?w=50",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [
            "https://www.slideshare.net/slideshow/embed_code/key/5DBuy7dU0Z9Oxv"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2018-02-21T00:00:00",
        "summary": "",
        "meta_description": "AGILE – What business executives need to know #2: Overview of 4 most commonly used Agile Methodologies In the first article in this series we focussed on an overview of what Agile software development is and referred to the Agile SCRUM methodology to describe the agile principles. Let's recap - Wikipedia describes Agile Software Development as…",
        "meta_lang": "en",
        "meta_favicon": "https://renierbotha.com/wp-content/uploads/2017/05/cropped-rb-logo-small.jpg?w=32",
        "meta_site_name": "renierbotha ltd",
        "canonical_link": "https://renierbotha.com/2018/02/21/executive-overview-of-4-commonly-used-agile-methodologies/",
        "text": "AGILE – What business executives need to know #2: Overview of 4 most commonly used Agile Methodologies\n\nIn the first article in this series we focussed on an overview of what Agile software development is and referred to the Agile SCRUM methodology to describe the agile principles.\n\nLet’s recap – Wikipedia describes Agile Software Development as an approach to software development under which requirements and solutions evolve through the collaborative effort of self-organizing cross functional teams and their customers / end users. It advocates adaptive planning, evolutionary development, early delivery, and continuous improvement, and it encourages rapid and flexible response to change. For an overview see the first blog post…\n\nSeveral agile delivery methodologies are in use for example: Adaptive Software Development (ASD); Agile Nodelling; Agile Unified Process (AUP); Disciplined Agile Delivery; Dynamic Systems Development Method (DSDM); Extreme Programming (XP); Feature-Driven Development (FDD); Lean Software Development (LEAN); Kanban; Rapid Application Development (RAD); Scrum; Scrumban.\n\nThis article covers a brief overview of the four most frequently used Agile Methodologies:\n\nScrum\n\nExtreme Programming (XP)\n\nLean\n\nKanban\n\nSCRUM\n\nUsing Scrum framework the project work is broken down into user stories (basic building blocks of agile projects – these are functional requirements explained in an in business context) which are collated in the backlog (work to be done). Stories, from the backlog, are grouped into sprints (development iteration) based on story functionality dependencies, priorities and resource capacity. The resource capacity is determined by the speed (velocity) at which the team can complete stories, which are categorised into levels of complexity and effort required to complete. Iterations are completed with fully functional deliverables for each story until all the needed stories are completed for functional solutions.\n\nScrum is based on three pillars:\n\nTransparency – providing full visibility on the project progress and a clear understanding of project objectives to the project team but more importantly to the stakeholders responsible for the outcome of the project.\n\nInspection – Frequent and repetitive checks on project progress and milestones as work progresses towards the project goal. The focus of these inspections is to identify problems and differences from the project objectives as well as to identify if the objectives have changed.\n\nAdaptation – Responding to the outcome of the inspections to adapt the project to realign in addressing problems and change in objectives.\n\nThrough the SCRUM methodology, four opportunities for Inspection and Adaptation are provided:\n\nSprint Retrospective\n\nDaily Scrum meeting\n\nSprint review meeting\n\nSprint planning meeting\n\nA Scrum team is made of a Product Owner, a Scrum Master and the Development Team.\n\nScrum activity can be summarised within the following events:\n\nSprint – a fixed time development iteration\n\nSprint Planning meetings\n\nDaily Scrum meetings (Stand-Up meetings)\n\nSprint Review meetings\n\nSprint Retrospectives\n\nXP – EXTREME PROGRAMMING\n\nExtreme Programming (XP) provides a set of technically rigorous, team-oriented practices such as Test Driven Development, Continuous Integration, and Pairing that empower teams to deliver high quality software, iteratively.\n\nLEAN\n\nLean grew from out of the Toyota manufacturing Production System (TPS). Some key elements of this methodology are:\n\nOptimise the whole\n\nEliminate waste\n\nBuild quality in\n\nLearn constantly\n\nDeliver fast\n\nEngage everybody\n\nKeep improving\n\nLean five principles:\n\nSpecify value from the customer’s point of view. Start by recognizing that only a small percentage of overall time, effort and resources in a organization actually adds value to the customer.\n\nIdentify and map the value chain. This is the te entire set of activities across all part of the organization involved in delivering a product or service to the customer. Where possible eliminate the steps that do not create value\n\nCreate flow – your product and service should flow to the customer without any interruptions, detours or waiting – delivering customer value.\n\nRespond to customer demand (also referred to as pull). Understand the demand and optimize the process to deliver to this demand – ensuring you deliver only what the customer wants and when they want it – just in time production.\n\nPursue perfection – all the steps link together waste is identified – in layers as one waste rectification can expose another – and eliminated by changing / optimizing the process to ensure all assets add value to the customer.\n\nKANBAN\n\nKanban is focussed the visual presentation and management of work on a kanban board to better balance the understanding of the volume of work with the available resources and the delivery workflow.\n\nSix general work practices are exercised in kanban:\n\nVisualisation\n\nLimiting work in Progress (WIP)\n\nFlow management\n\nMaking policies explicit\n\nUsing feedback loops to ensure customer and quality alignment\n\nCollaborative & experimental evolution of process and solutions\n\nBy limiting WIP you are minimising waste through the elimination of multi tasking and context switching.\n\nThere is no prescription of the number of steps to follow but it should align with the natural evolution of the changes being made in resolving a problem or completing a specific peace of work.\n\nIt focuses on delivering to customer expectations and needs by promoting team collaboration including the customer.\n\nA Pragmatic approach\n\nThese techniques together provide a powerful, compelling and effective software development approach that brings the needed flexibility / agility into the software development lifecycle.\n\nCombining and borrowing components from different methodologies to find the optimum delivery method that will deliver to the needs of the organisation is key. Depending on the specific business needs/situation, these components are combined to optimise the design, development and deployment of the software.\n\nHelpful references:\n\nA good overview of different agile methodologies can be found on this slideshare at .\n\nFurther Reading:\n\n-> What Is Agile? A Philosophy That Develops Through Practice from Umar Ali"
    }
}