{
    "id": "dbpedia_1587_2",
    "rank": 73,
    "data": {
        "url": "https://uit.stanford.edu/pmo/agile-development-methodology",
        "read_more_link": "",
        "language": "en",
        "title": "Agile Development Methodology",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://uit.stanford.edu/sites/all/themes/stanford_uit/logo.svg",
            "https://uit.stanford.edu/sites/all/themes/stanford_uit/images/footer-stanford-logo@2x.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://uit.stanford.edu/sites/all/themes/stanford_uit/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://uit.stanford.edu/pmo/agile-development-methodology",
        "text": "Roles and Responsibilities Scrum Master Individual held accountable for removing impediments to the ability of the team to deliver the product goals and deliverables; acts as a buffer between the team and any distracting influences. (aka Project Manager) Product Owner Individual who represents the stakeholders and is the voice of the customer. He or she is accountable for ensuring that the team delivers value to the business. The Product Owner writes (or has the team write) customer-centric items (typically user stories), ranks and prioritizes them, and adds them to the product backlog. (aka Business Analyst) Development Team Individuals responsible for implementing the user stories/requirements. The Development Team consists of professionals who do the work of delivering a potentially releasable increment of \"Done\" product at the end of each Sprint. Only members of the Development Team increase the increment. QA Individual responsible for testing and validating the implementation of the user stories/requirements. Business Owner Individual responsible for eliciting the requirements and later validating the implementation of the user stories/requirements. Meetings (guidelines for best practice) Sprint Planning\n\nThe work to be performed in the Sprint is planned at the Sprint Planning Meeting. The plan is created by the collaborative work of the entire Scrum Team. The Sprint Planning Meeting is time-boxed. For example, two-week Sprints have four-hour Sprint Planning Meetings.\n\nThe two parts of the Sprint Planning Meeting answer the following questions, respectively:\n\nWhat will be delivered in the Increment resulting from the upcoming Sprint?\n\nHow will the work needed to deliver the Increment be achieved?\n\nDaily Scrum (Standup)\n\nThe Daily Scrum is a 15-minute time-boxed event for the Development Team to synchronize activities and create a plan for the next 24 hours. This is done by inspecting the work since the last Daily Scrum and forecasting the work that could be done for the next one. The Daily Scrum is held at the same time and place each day to reduce complexity.\n\nDuring the meeting, each Development Team member explains:\n\nWhat has been accomplished since the last meeting\n\nWhat will be done before the next meeting\n\nWhat obstacles are in the way\n\nSprint Review (Demo) A Sprint Review is held at the end of the Sprint to inspect the Increment and adapt the Product Backlog if needed. During the Sprint Review, the Scrum Team and stakeholders collaborate about what was done in the Sprint. Based on that and any changes to the Product Backlog during the Sprint, attendees collaborate on the next things that could be done. This is an informal meeting, and the presentation of the Increment is intended to elicit feedback and foster collaboration. Typically, for 2 week Sprints, this can be a 2 hour meeting. The Product Owner identifies what has been \"Done\" and what has not; the Development Team discusses what went well during the Sprint, what problems it ran into, and how those problems were solved; the Product Owner discusses the Product Backlog as it stands, and he or she projects likely completion dates based on progress to date; and the entire group collaborates on what to do next, so that the Sprint Review provides valuable input to subsequent Sprint Planning Meetings. Feedback/issues can become new stories. Sprint Retrospective\n\nThe Sprint Retrospective is an opportunity for the Scrum Team only to inspect itself and create a plan for improvements to be enacted during the next Sprint. The Sprint Retrospective occurs after the Sprint Review and prior to the next Sprint Planning Meeting.\n\nThe purpose of the Sprint Retrospective is to:\n\nInspect how the last Sprint went with regards to people, relationships, process, and tools\n\nIdentify and order the major items that went well and potential improvements\n\nCreate a plan for implementing improvements to the way the Scrum Team does its work\n\nArtifacts Product Backlog — required\n\nThe Product Backlog is an ordered list of everything that might be needed in the product and is the single source of requirements for any changes to be made to the product. The Product Owner is responsible for the Product Backlog, including its content, availability, and ordering.\n\nThe Product Backlog is:\n\nA collection of all the User Stories\n\nControlled and organized by the Product Owner\n\nAlways prioritized and estimated\n\nMaintained and visible to the team\n\nThink of it as a wish list of the things that would make the product \"great.\"\n\nSprint Backlog — required The Sprint Backlog is the set of Product Backlog items selected for the Sprint plus a plan for delivering the product Increment and realizing the Sprint Goal. The Sprint Backlog is a forecast by the Development Team about what functionality will be in the next Increment and the work needed to deliver that functionality. It defines the work the Development Team will perform to turn Product Backlog items into a \"Done\" Increment. It makes visible all of the work that the Development Team identifies as necessary to meet the Sprint Goal. Increment (Burn down Chart) — required The Increment is the sum of all the Product Backlog items completed during a Sprint and all previous Sprints. At the end of a Sprint, the new Increment must be \"Done,\" which means it must be in a useable condition and meet the Scrum Team's definition of \"Done.\" It must be in useable condition regardless of whether or not the Product Owner decides to actually release it. User Stories — required\n\nUser Stories are one of the primary development artifacts for Scrum project teams. A User Story is a very high-level definition of a requirement, containing just enough information so that the developers can produce a reasonable estimate of the effort to implement it. Stakeholders write user stories, not the developers. User Stories are simple enough that people can learn to write them in a few minutes, so it makes sense that the domain experts (the stakeholders) write them.\n\nUser stories include the following:\n\nThe requirements themselves\n\nAcceptance criteria\n\nHow the team will know the User Story has been completed\n\nDefinition of Done — good practice\n\nWhen the Product Backlog item or an Increment is described as \"Done,\" everyone must understand what that means. Although this varies significantly by Scrum Team, members must have a shared understanding of what it means for work to be complete to ensure transparency. This is the \"Definition of Done\" for the Scrum Team and is used to assess when work is complete on the product Increment.\n\nExample definitions:\n\nUnit tests have been written and have passed\n\nCode was deployed to system test environment and passed system tests\n\nCode passed Smoke tests\n\nAny build/deployment/configuration changes have been implemented and documented\n\nRelevant documentation/diagrams have been produced and/or updated\n\nCode is security compliant\n\nCode includes unit tests that were reviewed and checked in\n\nTests have been described and executed\n\nBuild/release notes have been written\n\nCompliance documentation has been updated to include current functionality\n\nVision — good practice The product vision paints a picture of the future that draws people in. It describes who the customers are, what the customers need, and how these needs will be met. It captures the essence of the product— the critical information we must know to develop and launch a winning product ... since the Product Owner is responsible for the success of the product and its return on investment (ROI), he or she should lead the vision-creation activities through close collaboration with the team.\n\nSource: The Product Vision by Roman Pichler\n\nWork Agreement — good practice Work agreements are the set of rules/disciplines/processes the team agrees to follow without fail to make themselves more efficient and successful ... Team members themselves set these. The ScrumMaster may have to play the role of facilitating the meeting that's held to come up with work agreements, but it is the team that decides on the agreements themselves. The team also reviews them periodically during retrospective meetings.\n\nSource: \"Work Agreements for a Scrum Team\" (external link) by Vignesh Murthy"
    }
}