{
    "id": "correct_subsidiary_00037_1",
    "rank": 27,
    "data": {
        "url": "https://www.techtarget.com/searchapparchitecture/definition/application-service-provider-ASP",
        "read_more_link": "",
        "language": "en",
        "title": "What is application service provider (ASP)?",
        "top_image": "https://cdn.ttgtmedia.com/ITKE/images/logos/TTlogo-379x201.png",
        "meta_img": "https://cdn.ttgtmedia.com/ITKE/images/logos/TTlogo-379x201.png",
        "images": [
            "https://cdn.ttgtmedia.com/rms/onlineimages/ferguson_kevin.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineImages/cloud_computing-service_categories_mobile.jpg",
            "https://cdn.ttgtmedia.com/visuals/LeMagIT/hero_article/API-MuleSoft-2_searchsitetablet_520X173.jpg",
            "https://cdn.ttgtmedia.com/rms/computerweekly/Joe-OHalloran-2022-140x180px.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineimages/code_g1078919244_searchsitetablet_520X173.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineImages/taylor_twain.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineimages/disasater_recovery_g486296390_searchsitetablet_520X173.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineImages/bigelow_stephen.jpg",
            "https://cdn.ttgtmedia.com/visuals/digdeeper/4.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineimages/chai_wesley.jpg"
        ],
        "movies": [
            "https://www.youtube.com/embed/4oQjPlS2gSg"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Kevin Ferguson",
            "Joe O’Halloran",
            "Twain Taylor",
            "Stephen Bigelow",
            "Wesley Chai"
        ],
        "publish_date": "2021-04-01T00:00:00+00:00",
        "summary": "",
        "meta_description": "Learn how application service providers offered software and services over the internet. SaaS providers have largely taken the place of ASPs today.",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "App Architecture",
        "canonical_link": "https://www.techtarget.com/searchapparchitecture/definition/application-service-provider-ASP",
        "text": "Definition\n\napplication service provider (ASP)\n\nBy\n\nKevin Ferguson\n\nWhat is an application service provider?\n\nAn application service provider (ASP) is a company that offers individuals or enterprises access to applications and related services over the internet. The term has largely been replaced by software as a service (SaaS) provider, although in some parts of the world, companies still use the two labels interchangeably.\n\nASP services were at one time called \"apps on tap.\" They were an important alternative for individuals and smaller companies with low budgets for information technology (IT) and also for larger companies exploring the idea of outsourcing their IT infrastructure around the turn of the century.\n\nEarly ASPs focused on delivering specialized applications that were expensive to install and maintain. Essentially, the model required the ASP customer to purchase the software and then pay a provider to host it.\n\nIn 1999, Hewlett-Packard, SAP and Qwest Communications International Inc. formed the Application Service Provider Industry Consortium (ASPIC), a group representing ASP service providers. HP, SAP and Qwest teamed up to make SAP's popular R/3 applications available at \"cybercenters\" that would serve the applications to other companies. Around the same time, Microsoft allowed some companies to offer its BackOffice products, including SQL Server, Exchange and Windows NT Server, on a rental, pay-as-you-use basis.\n\nASPs provided applications and services to small enterprises and individuals on a pay-per-use or annual license fee basis. Meantime, larger organizations provided their own in-house ASP service, moving applications off personal computers (PCs) and putting them on a special kind of Application Server that was designed to work with thin client workstations. This approach enabled enterprises to return to the more centralized control over application costs and use that they had in the period prior to the advent of the PC.\n\nHow do ASPs work?\n\nASPs delivered applications via the internet or a private network. Clients were charged one of four ways:\n\na usage-based fee structure;\n\na fee based on features;\n\na flat monthly or annual fee; or\n\na combination of these previous three.\n\nThose fees covered hosting, maintenance and support. In this model, ASPs provided a specific environment for each client and did not share that environment with other clients. This single-tenancy approach ensured security and continuity of operations.\n\nThe ASP definition was somewhat fluid in the late 1990s and early 2000s. Many early ASPs offered only their own applications. Other ASPs hosted and repackaged multiple third-party applications, many of them simple collaborative tools. However, a near collapse of the ASP market in the early 2000s led surviving ASPs to offer more integrated applications and to rebrand or reimagine themselves as managed service providers (MSPs), web service providers or application infrastructure providers.\n\nEventually, the market gave way to the SaaS and platform as a service (PaaS) models. Both the SaaS and PaaS models typically offer a mix of proprietary and third-party offerings.\n\nAdvantages and disadvantages of the ASP model\n\nThe ASP approach comes with several advantages and disadvantages, including the following:\n\nASP advantages\n\nCosts. The customer, in theory, would not need to hire a large IT staff because the ASP would handle much of the work. Customers also could shift costs from capital to operating expenditures, which was attractive to some customers for accounting reasons.\n\nDeployment. Faster rollout is possible, because the back end of the application is already up and running.\n\nUpgrades. As part of their service contract, ASPs could track and push software upgrades, freeing customers of that task.\n\nService-level agreements (SLAs). These agreements are tailored to specific customers.\n\nASP disadvantages\n\nCosts. In a single-tenant environment, applications that a customer purchased or leased are walled off from other customers' applications. As a result, there are no economies of scale. So, costs do not fall as ASPs take on more customers.\n\nSecurity. Because most ASP customers were SMBs, ASPs offered them virtual servers, rather than dedicated servers. The real security risks of this were debated, but the appearance of security risk hurt the early ASP market.\n\nLack of integration. Early ASPs did offer software suites, but a lack of integration with customers' legacy software also hurt the early ASP market.\n\nDifferences between ASP and SaaS delivery models\n\nThere are a number of differences between the ASP delivery model and SaaS. In an ASP delivery model, the customer typically purchases software and pays an ASP to host and maintain it. SaaS vendors manage software they have developed on their own or, in many cases, offer both their own applications and those developed by third parties.\n\nTraditional ASPs used a single-tenant architecture and software clients had to be installed on the end users' computers. In contrast, SaaS providers use a multi-tenant architecture, and an application is accessed through a web browser and serves multiple users and businesses.\n\nToday, ASPs are not used much. Customers who need providers that will host specific, customized applications or off-the-shelf applications in a secure data center, may choose to look for an application service provider.\n\nTypes of application service providers\n\nASPs are divided into categories depending on the type of applications they provide or the customer base they serve. The five common types of application service providers are the following:\n\nLocal or regional. Focuses on the needs of businesses in a specific local or regional area.\n\nSpecialist. Provides one type of application or service to meet a business's needs in a specific area, such as e-commerce management.\n\nVertical market. Hosts applications to meet the needs of a business in a specific industry -- such as a law practice of a healthcare provider.\n\nEnterprise. Has a range of business applications for larger businesses, such as enterprise resource planning (ERP) software.\n\nVolume. Offers a low-cost prepackaged set of applications.\n\nApplication service provider examples\n\nAs mentioned earlier, ASPs generally have been replaced by SaaS providers. Some examples of ASPs include the HP, SAP and Qwest alliance discussed earlier, as well as the following:\n\nCorio was founded in 1998 and provided a suite of enterprise applications. It bought the ASP assets of Qwest CyberSolutions LLC, a subsidiary of Qwest Communications in 2002. IBM then bought Corio in 2005.\n\nDoubleClick provided ad-serving services to publishers, marketers and agencies. It was founded in 1995, and Google bought DoubleClick in 2008.\n\nFutureLink, another short-lived company, was founded in 1998. It was also a founding member of the ASPIC, and it offered applications from Great Plains, Microsoft, Onyx, Pivotal and Sales Logix for monthly subscription fees. FutureLink shut down in 2001.\n\nPandesic was an early ASP, formed out of a 1997 joint venture between SAP and Intel. It offered an e-commerce management application. It was out of business by July 2000.\n\nASP is also an abbreviation for Active Server Page.\n\nEnterprises today are focused on how to make the best use of SaaS as they move more of their applications and workloads to the cloud. Find out the latest thinking in this look at SaaS vs. IaaS cloud models.\n\nContinue Reading About application service provider (ASP)\n\nSaaS VS ASP – Understanding the Difference\n\nASP hosting vs. Software as a Service (SaaS) providers\n\nCounting the costs of IaaS and SaaS\n\nThe 8 features all enterprise SaaS applications must have\n\nSecurity for SaaS applications starts with collaboration\n\nRelated Terms\n\nexception handler\n\nAn exception handler is code that stipulates what a program will do when an anomalous or exceptional event occurs and disrupts ... See complete definition\n\nOpenID (OpenID Connect)\n\nOpenID Connect is an open specification for authentication and single sign-on (SSO). See complete definition\n\nreactive programming\n\nReactive programming is a programming paradigm, or model, that centers around the concept of reacting to changes in data and ... See complete definition\n\nDig Deeper on Application development and design\n\nVonage unveils network API availability\n\nBy: Joe O’Halloran\n\nWhat to know about building microservices with ASP.NET Core\n\nBy: Twain Taylor\n\nThe history of cloud computing explained\n\nBy: Stephen Bigelow\n\nWhat is Software as a Service (SaaS)?\n\nBy: Wesley Chai"
    }
}