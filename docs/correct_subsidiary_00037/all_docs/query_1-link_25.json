{
    "id": "correct_subsidiary_00037_1",
    "rank": 25,
    "data": {
        "url": "https://developer.dowjones.com/site/docs/factiva_apis/factiva_workflow_apis_soap/soap/xml/cie_GetCompanyReport.gsp",
        "read_more_link": "",
        "language": "en",
        "title": "",
        "top_image": "https://developer.dowjones.com/images/favicon.ico",
        "meta_img": "https://developer.dowjones.com/images/favicon.ico",
        "images": [
            "https://developer.dowjones.com/images/Developer-Platform-ONE-LINE-Full-Color-01.svg",
            "https://developer.dowjones.com/images/Developer-Platform-ONE-LINE-Full-Color-01.svg",
            "https://developer.dowjones.com/images/close-small.svg",
            "https://developer.dowjones.com/images/arrow@2xback.svg",
            "https://developer.dowjones.com/images/chevron-right@2x.svg",
            "https://developer.dowjones.com/images/chevron-right@2x.svg",
            "https://developer.dowjones.com/images/chevron-right@2x.svg",
            "https://developer.dowjones.com/images/chevron-left@2x.svg",
            "https://developer.dowjones.com/images/arrow-right.svg",
            "https://developer.dowjones.com/images/chevron-left@2x.svg",
            "https://developer.dowjones.com/images/chevron-left@2x.svg",
            "https://developer.dowjones.com/images/arrow-right.svg",
            "https://developer.dowjones.com/images/arrow-right.svg",
            "https://developer.dowjones.com/images/arrow-right.svg",
            "https://developer.dowjones.com/images/arrow-right.svg",
            "https://developer.dowjones.com/static/images/home.svg",
            "https://developer.dowjones.com/images/DJ_Logo_Small_Format_light_background_RGB.svg",
            "https://developer.dowjones.com/images/facebook-white.svg",
            "https://developer.dowjones.com/images/facebook-white.svg",
            "https://developer.dowjones.com/images/linkedin-white.svg",
            "https://developer.dowjones.com/images/linkedin-white.svg",
            "https://developer.dowjones.com/images/twitter-white.svg",
            "https://developer.dowjones.com/images/twitter-white.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "GetCompanyReport\n\nDescription\n\nThis transaction retrieves information pertaining to the company report for a given a Factiva company code, with such details as company basics, data on key executives, key competitors, key financials, overview and history, company peer comparison, (sales of) products and services, selected financial indicator ratios, etc. (For a response with a richer set of financial assets not previously included in the database and more detail, see GetCompanyReportEx and GetCompanyReportEx2.)\n\nNote: To validate this transaction request using an XML schema, carefully follow the exact sequence of elements as shown in the diagram below. (Failure to adhere to the specific element order shown will result in an invalid child element error when posting the request.)\n\nDiagram\n\nInterfaces\n\nNote: Initially, you must design, build and refine your application in our test environment: http://developer.beta.factiva.com. See Getting Started With Factiva Developer's Kit. FDK Parsers: 3.0 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 3.10 3.11 3.12 3.13 3.14 3.15 3.16 FDK Objects: 3.0 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 3.10 3.11 3.12 3.13 3.14 3.15 3.16 SOAP Action: urn:factiva:developer:v3_0/GetCompanyReport\n\nChildren\n\nRequired Optional controlData language companyCode\n\nSource\n\nXML\n\n<xsd:element name=\"GetCompanyReport\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"controlData\" type=\"xsd:string\"/> <xsd:element name=\"companyCode\" type=\"xsd:string\"/> <xsd:element name=\"language\" type=\"xsd:string\" minOccurs=\"0\"/> </xsd:sequence> </xsd:complexType> </xsd:element>\n\nResponse\n\nDescription\n\nThis transaction provides the response to a request.\n\nDiagram\n\nChildren\n\nRequired Optional companyReportResponse none\n\nSource\n\nXML\n\n<xsd:element name=\"GetCompanyReportResponse\"> <xsd:complexType> <xsd:sequence> <xsd:element name=\"companyReportResponse\" type=\"CompanyReportResponse\"/> </xsd:sequence> </xsd:complexType> </xsd:element>\n\nSample\n\nBoth the XML request and response samples for this transaction are typically \"wrapped\" in a SOAP envelope.\n\nRequest\n\nXML\n\n<GetCompanyReport xmlns=\"urn:factiva:developer:v3_0:parsers\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"> <controlData><![CDATA[SID=xxxxx]]></controlData> <companyCode>IBM</companyCode> <language>en</language> </GetCompanyReport>\n\nResponse\n\nA successful <GetCompanyReport> request transaction returns the following response:\n\nXML"
    }
}