{
    "id": "dbpedia_464_3",
    "rank": 44,
    "data": {
        "url": "https://www.academia.edu/8663427/object-oriented_programming",
        "read_more_link": "",
        "language": "en",
        "title": "(PDF) object-oriented programming",
        "top_image": "http://a.academia-assets.com/images/open-graph-icons/fb-paper.gif",
        "meta_img": "http://a.academia-assets.com/images/open-graph-icons/fb-paper.gif",
        "images": [
            "https://a.academia-assets.com/images/academia-logo-redesign-2015-A.svg",
            "https://a.academia-assets.com/images/academia-logo-redesign-2015.svg",
            "https://a.academia-assets.com/images/single_work_splash/adobe.icon.svg",
            "https://0.academia-photos.com/attachment_thumbnails/35020392/mini_magick20190319-1868-15b4qfr.png?1553048330",
            "https://0.academia-photos.com/17897787/4998809/20618234/s65_yogi.xnu.jpg",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loswp/related-pdf-icon.png",
            "https://a.academia-assets.com/images/loaders/paper-load.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Yogi  XNU",
            "du-in.academia.edu"
        ],
        "publish_date": "2014-10-06T00:00:00",
        "summary": "",
        "meta_description": "Interview Questions",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://www.academia.edu/8663427/object_oriented_programming",
        "text": "Object-Oriented Programming (OOP) is a programming paradigm that uses objects - data structure that consists of data field and methods. This includes their interaction with designing application and computer programs. The concept of Computer Programming Languages has shifted mostly to Object-Oriented Programming (OOP). All the beginning languages play their parts to make computer language more human and finally the object-oriented approach makes it better to model the real world object. Many languages have emerged from this revolution. This includes Smalltalk, C, C++, C#, Java, Visual Studio and others. There are three of the most basic concepts for object-oriented programming. They are classes, objects, and methods. However, there are a few more concepts of OOP that one will want to become familiar with. These are Inheritance, Abstraction, Polymorphism, Event, and Encapsulation. These concepts make it easier for programmers to deal with or avoid errors when developing a program in Object-Oriented Programming (OOP). This paper seeks to discuss the concept of OOP to the level that even a layman can understand.\n\nAns. C++ is an object-oriented programming language created by Bjarne Stroustrup. C++ maintains almost all aspects of the C language, while simplifying memory management and adding several features-including a new datatype known as a class (you will learn more about these later)-to allow objectoriented programming. C++ maintains the features of C which allowed for low-level memory access but also gives the programmer new tools to simplify memory management. C++ used for: C++ is a powerful general-purpose programming language. It can be used to create small programs or large applications. It can be used to make CGI scripts or console only DOS programs. C++ allows you to create programs to do almost anything you need to do. The creator of C++, Bjarne Stroustrup, has put together a partial list of applications written in C++. 2 How do you find out if a linked-list has an end? (i.e. the list is not a cycle) Ans. You can find out by using 2 pointers. One of them goes 2 nodes each time. The second one goes at 1 nodes each time. If there is a cycle, the one that goes 2 nodes each time will eventually meet the one that goes slower. If that is the case, then you will know the linked-list is a cycle. 3 What is a class? A class is a user defined type or data structure declared with keyword class that has data and functions (also called methods) as its members whose access is governed by the three access specifiers private, protected or public (by default access to members of a class is private). A class (declared with keyword class) in C++ differs from a structure (declared with keyword struct) as by default, members are private in a class while they are public in a structure. The private members are not accessible outside the class; they can be accessed only through methods of the class. The public members form an interface to the class and are accessible outside the class. Instances of these data types are known as objects and can contain member variables, constants, member functions, and overloaded operators defined by the programmer. 4 What is an object?"
    }
}