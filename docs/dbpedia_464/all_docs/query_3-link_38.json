{
    "id": "dbpedia_464_3",
    "rank": 38,
    "data": {
        "url": "https://wiki.osdev.org/MacOS",
        "read_more_link": "",
        "language": "en",
        "title": "OSDev Wiki",
        "top_image": "https://wiki.osdev.org/favicon.ico",
        "meta_img": "https://wiki.osdev.org/favicon.ico",
        "images": [
            "https://wiki.osdev.org/images/f/fe/Stub.png",
            "https://wiki.osdev.org/resources/assets/poweredby_mediawiki_88x31.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "XNU (acronym for \"X is Not Unix\") is a hybrid kernel based on Mach 2.5, a hybrid kernel derived from BSD and the Accent kernel, which is used in macOS. It was developed for the NeXTStep operating system; when Apple purchased NeXT, they opted to use NeXTStep to replace the obsolete classic Mac OS (Mac OS 9 and older), which had poor memory protection and cooperative multitasking.\n\nmacOS is Apple's partly proprietary operating system for Macintosh computers, which is, in fact, able to be run on any modern x86-64 computer; it also has a mobile version, iOS, and other specialised editions: tvOS and watchOS.\n\nDarwin is the term for the core BSD UNIX system which macOS builds atop.\n\nFeatures\n\nXNU as a direct derivative from 4.3BSD inherits most of its features, as well as some features imported from other BSD systems such as FreeBSD. Features of BSD heritage include:\n\nPOSIX system calls and the various BSD extensions;\n\nthe kqueue event multiplexing system;\n\nMandatory Access Control (MAC).\n\nAnd XNU and OS X introduce a lot of specific features, including:\n\nown sandboxing system;\n\nown file system hierarchy (with FHS preserved);\n\nApple Events and FSEvents;\n\nOpenDirectory, an authentification system;\n\nSystemConfiguration, a modular configuration mechanism;\n\nApple System Log (ASL);\n\nAppleScript;\n\nnotifyd and distnoted, notification (IPC) mechanisms;\n\nlaunchd, a system initialisation and service management system'\n\nMach APIs;\n\nthe I/O Kit, an object-oriented drivers framework;\n\nand more.\n\nOS X is a certified UNIX system.\n\nSecurity\n\nCode signing\n\nOS X and iOS support code signing. In OS X it can be disabled, but in iOS it is a heavy protection mechanism, which allows only reviewed apps to be run. However, Apple sells developer and enterprise certificates which can be used to distribute malware; a user only needs to install a profile. There also were a vulnerability which allowed to install outdated profiles by resetting the date. Apple can easily block certificates.\n\nEntitlements\n\nAn entitlement is simply a permission written for a binary; even with root access it is not possible to override them. For example, running a program which uses task_for_pid Mach call under root without the required entitlements will result in an error. Of course, entitlements are signed.\n\nSandboxing\n\nThis feature is present in both OS X and iOS, but in iOS it is much harder. In fact, it is a jail, which places applications inside their own environment, from which they can only access their own root. More about app sandbox here.\n\nHybrid Kernel Design\n\nmacOS is derived from the Mach 2.5 operating system, a derivative of the 4.3BSD UNIX system which rearchitected the lowest levels of the BSD kernel. The primary inspiration for this redesign was the Accent kernel developed at Carnegie-Mellon University. Mach made several adaptations to the Accent model to better support UNIX compatibility.\n\nThe core abstractions of the Mach kernel are four: tasks, threads, ports, port sets, messages, and memory objects. The BSD kernel is adapted to use these underlying Mach abstractions to provide a complete higher-level BSD UNIX system.\n\nA later version of Mach, version 3.0, was able to detach the new low-level abstraction layer from the BSD kernel, yielding a Microkernel, where the BSD kernel was replaced with userland servers carved out from the BSD kernel code. XNU, however, was forked from Mach 2.5, which had not yet done so. While some improvements were imported from Mach 3.0, Apple opted not to separate the BSD kernel into userland servers. Thus XNU represents the Hybrid Kernel approach.\n\nSee Also\n\nArticles\n\nMicrokernel\n\nHybrid Kernel"
    }
}