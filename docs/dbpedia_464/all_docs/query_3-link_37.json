{
    "id": "dbpedia_464_3",
    "rank": 37,
    "data": {
        "url": "https://www.slideshare.net/slideshow/codeql-dtrace-memory-disclosure-vulnerabilities-in-xnu/257721195",
        "read_more_link": "",
        "language": "en",
        "title": "CodeQL + DTrace = Memory Disclosure Vulnerabilities in XNU",
        "top_image": "https://cdn.slidesharecdn.com/ss_thumbnails/slides-230508014701-72374c33-thumbnail.jpg?width=640&height=640&fit=bounds",
        "meta_img": "https://cdn.slidesharecdn.com/ss_thumbnails/slides-230508014701-72374c33-thumbnail.jpg?width=640&height=640&fit=bounds",
        "images": [
            "https://public.slidesharecdn.com/images/next/svg/logo/slideshare-scribd-company.svg?w=128&q=75 1x, https://public.slidesharecdn.com/images/next/svg/logo/slideshare-scribd-company.svg?w=256&q=75 2x",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-1-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-1-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-1-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-2-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-2-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-2-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-3-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-3-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-3-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-4-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-4-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-4-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-5-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-5-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-5-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-6-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-6-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-6-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-7-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-7-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-7-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-8-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-8-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-8-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-9-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-9-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-9-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-10-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-10-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-10-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-11-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-11-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-11-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-12-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-12-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-12-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-13-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-13-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-13-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-14-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-14-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-14-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-15-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-15-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-15-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-16-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-16-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-16-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-17-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-17-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-17-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-18-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-18-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-18-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-19-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-19-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-19-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-20-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-20-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-20-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-21-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-21-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-21-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-22-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-22-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-22-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-23-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-23-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-23-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-24-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-24-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-24-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-25-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-25-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-25-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-26-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-26-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-26-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-27-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-27-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-27-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-28-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-28-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-28-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-29-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-29-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-29-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-30-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-30-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-30-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-31-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-31-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-31-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-32-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-32-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-32-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-33-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-33-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-33-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-34-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-34-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-34-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-35-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-35-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-35-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-36-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-36-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-36-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-37-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-37-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-37-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-38-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-38-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-38-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-39-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-39-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-39-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-40-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-40-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-40-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-41-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-41-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-41-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-42-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-42-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-42-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-43-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-43-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-43-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-44-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-44-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-44-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-45-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-45-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-45-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-46-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-46-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-46-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-47-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-47-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-47-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-48-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-48-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-48-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-49-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-49-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-49-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-50-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-50-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-50-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-51-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-51-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-51-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-52-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-52-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-52-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-53-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-53-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-53-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-54-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-54-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-54-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-55-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-55-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-55-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-56-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-56-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-56-2048.jpg 2048w",
            "https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-57-320.jpg 320w, https://image.slidesharecdn.com/slides-230508014701-72374c33/85/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-57-638.jpg 638w, https://image.slidesharecdn.com/slides-230508014701-72374c33/75/CodeQL-DTrace-Memory-Disclosure-Vulnerabilities-in-XNU-57-2048.jpg 2048w"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-05-08T01:47:01+00:00",
        "summary": "",
        "meta_description": "CodeQL + DTrace = Memory Disclosure Vulnerabilities in XNU - Download as a PDF or view online for free",
        "meta_lang": "en",
        "meta_favicon": "https://public.slidesharecdn.com/_next/static/media/favicon.7bc3d920.ico",
        "meta_site_name": "SlideShare",
        "canonical_link": "https://www.slideshare.net/slideshow/codeql-dtrace-memory-disclosure-vulnerabilities-in-xnu/257721195",
        "text": "1. CodeQL + DTrace = in XNU HowtofindmultiplememorydisclosuresinXNUusingCodeQL\n\n4. Motivation AppleintervieweraskedmeseveraltimeswhyIdon'tlookforbugsinthekernel Is it hard for you? Before December 2022 ,Ihaven'tlookedintothe XNU sourcecode 4\n\n6. KernelMemoryDisclosure\n\n10. DTrace Releasedin 2005 byOracle ApplemergeditintoXNUin 2007 Wasitthoroughlyaudited? It'scomplexandhasitsemulatorin the kernel #define DIF_OP_OR 1 /* or r1, r2, rd */ #define DIF_OP_XOR 2 /* xor r1, r2, rd */ ... #define DIF_OP_STRIP 80 /* strip r1, key, rd */ bsd/sys/dtrace.h 10\n\n13. Codepattern IdecidedtolookforOOBissues.Forthat,Iwroteaquerytofindsuchcode,whichmeets theconditionsbelow: a >= b ,where a issigned,and b isnot No a <= 0 and a < 0 checks a isanarrayindex 13\n\n14. a >= b ,where a issigned,and b isnot from Variable arg where exists( GEExpr ge | ge.getLeftOperand() = arg.getAnAccess() and ge.getLeftOperand(). getExplicitlyConverted(). getUnderlyingType().(IntegralType).isSigned() and ge.getRightOperand(). getExplicitlyConverted(). getUnderlyingType().(IntegralType).isUnsigned() ) select arg 14\n\n15. No a < 0 and a <= 0 checks from Variable arg where not exists( LTExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getRightOperand().getValue() = \"0\" ) and not exists( LEExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getRightOperand().getValue() = \"0\" ) select arg 15\n\n16. a isanarrayindex from Variable arg, ArrayExpr ae where ae.getArrayOffset() = arg.getAnAccess() select ae.getArrayOffset(), ae.getEnclosingFunction() 16\n\n17. Combined from Variable arg, ArrayExpr ae where exists( GEExpr ge | ge.getLeftOperand() = arg.getAnAccess() and ge.getLeftOperand(). getExplicitlyConverted(). getUnderlyingType().(IntegralType).isSigned() and ge.getRightOperand(). getExplicitlyConverted(). getUnderlyingType().(IntegralType).isUnsigned() ) and not exists( LTExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getRightOperand().getValue() = \"0\" ) and not exists( LEExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getRightOperand().getValue() = \"0\" ) and ae.getArrayOffset() = arg.getAnAccess() select ae.getArrayOffset(), ae.getEnclosingFunction() 17\n\n18. Thequeryproduces 20 results Only 6 differentfunctions 18\n\n19. fasttrap_pid_getargdesc // args: (void *arg, dtrace_id_t id, void *parg, dtrace_argdesc_t *desc) if (probe->ftp_prov->ftp_retired != 0 || desc->dtargd_ndx >= probe->ftp_nargs) { desc->dtargd_ndx = DTRACE_ARGNONE; return; } ndx = (probe->ftp_argmap != NULL) ? probe->ftp_argmap[desc->dtargd_ndx] : desc->dtargd_ndx; Docs:gettheargumentdescriptionforargs[X] bsd/dev/dtrace/fasttrap.c 19\n\n20. dtargd_ndx is int typedef struct dtrace_argdesc { ... int dtargd_ndx; /* arg number (-1 iff none) */ ... } dtrace_argdesc_t; ftp_nargs is unsigned char struct fasttrap_probe { ... uint8_t ftp_nargs; /* translated argument count */ ... }; bsd/sys/dtrace.h,bsd/sys/fasttrap_impl.h 20\n\n21. Bothsidesareconvertedto int As desc->dtargd_ndx is int and probe->ftp_nargs is unsigned char if (probe->ftp_prov->ftp_retired != 0 || desc->dtargd_ndx >= probe->ftp_nargs) { desc->dtargd_ndx = DTRACE_ARGNONE; return; } If desc->dtargd_ndx < 0 ,then desc->dtargd_ndx >= probe->ftp_nargs isalways false 21\n\n22. OOBRead, desc->dtargd_ndx isanindex ndx = (probe->ftp_argmap != NULL) ? probe->ftp_argmap[desc->dtargd_ndx] : desc->dtargd_ndx; If probe->ftp_argmap isn't null ,it'spossibletoreachthefirstexpressionanduse desc->dtargd_ndx withvalueslessthan 0 22\n\n24. dtrace_pops typedef struct dtrace_pops { ... void (*dtps_getargdesc)(void *arg, dtrace_id_t id, void *parg, dtrace_argdesc_t *desc); ... } dtrace_pops_t; dtrace_pops_t static dtrace_pops_t pid_pops = { ... .dtps_getargdesc = fasttrap_pid_getargdesc, ... }; bsd/sys/dtrace.h,bsd/dev/dtrace/fasttrap.c 24\n\n26. Upperboundcheckin fasttrap_pid_getargdesc if (probe->ftp_prov->ftp_retired != 0 || desc->dtargd_ndx >= probe->ftp_nargs) { desc->dtargd_ndx = DTRACE_ARGNONE; return; } Comparingto -1 in dtrace_ioctl if (desc.dtargd_ndx == DTRACE_ARGNONE) return (EINVAL); bsd/dev/dtrace/fasttrap.c,bsd/dev/dtrace/dtrace.c 26\n\n27. Howtoleakout-of-boundsvalues? ndx = (probe->ftp_argmap != NULL) ? probe->ftp_argmap[desc->dtargd_ndx] : desc->dtargd_ndx; str = probe->ftp_ntypes; for (i = 0; i < ndx; i++) { str += strlen(str) + 1; } (void) strlcpy(desc->dtargd_native, str, sizeof(desc->dtargd_native)); Wecontrolintegerindex desc->dtargd_ndx andarrayof null delimitedstrings probe->ftp_ntypes (arrayofchars) Wehavetoleak probe->ftp_argmap[desc->dtargd_ndx] ( ndx isinteger)value into desc->dtargd_native 27\n\n28. Theidea str = probe->ftp_ntypes; // { 1, 1, 0, 1, 0, 2, 0, 3, 0, ...} for (i = 0; i < ndx; i++) { // ndx is a value to leak str += strlen(str) + 1; } (void) strlcpy(desc->dtargd_native, str, sizeof(desc->dtargd_native)); Wecouldpopulate probe->ftp_ntypes withanarrayofnulldelimitedstrings [1, 1, 0, 1, 0, 2, 0, 3, 0, ..., 255] from0to255(showedasbytes) Encode 0 forexampleas [1, 1, 0] ,soit'scopiedtotheuserland Then ndx equalstovaluein str Specialcase— 0 is \"x01x01x00\" 28\n\n29. ndx = 0 str = probe->ftp_ntypes; // { 1, 1, 0, 1, 0, 2, 0, 3, 0, ...} for (i = 0; i < ndx; i++) { // ^ str += strlen(str) + 1; } // str points to \"x01x01x00\" (void) strlcpy(desc->dtargd_native, str, sizeof(desc->dtargd_native)); ndx = 1 str = probe->ftp_ntypes; // { 1, 1, 0, 1, 0, 2, 0, 3, 0, ...} for (i = 0; i < ndx; i++) { // ^ str += strlen(str) + 1; } // str points to \"x01x00\" (void) strlcpy(desc->dtargd_native, str, sizeof(desc->dtargd_native)); 29\n\n30. Howtoreach? _dtrace_ioctl → DTRACEIOC_PROBEARG switchcase→ fasttrap_pid_getargdesc 30\n\n31. CVE-2023-27941 Kernel Available for: macOS Ventura Impact: An app may be able to disclose kernel memory Description: An out-of-bounds read issue existed that led to the disclosure of kernel memory. This was addressed with improved input validation. Details Thebugallowsreadingdatabytebybyteinarangeof2GB Requiresrootaccess 31\n\n32. Patch Reversed fasttrap_pid_getargdesc changes if (probe->ftp_prov->ftp_retired != 0 || desc->dtargd_ndx < 0 || // added desc->dtargd_ndx >= probe->ftp_nargs) { desc->dtargd_ndx = DTRACE_ARGNONE; return; } Applehasn'treleasedthenew XNU sourcecode 32\n\n33. KernelMemoryDisclosure\n\n34. Codepattern a < b ,where a issigned Thecomparisonabovehappensin IfStmt No a <= 0 and a < 0 checks a isanarrayindex 34\n\n35. a < b ,where a issigned,happensin IfStmt from Variable arg where exists( LTExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getParent() instanceof IfStmt and le.getLeftOperand(). getExplicitlyConverted(). getUnderlyingType().(IntegralType).isSigned() ) select arg IfStmt is if (a < b) {} ,butnot a < b in for (a = 0; a < b; a++) 35\n\n36. No a < 0 and a <= 0 checks from Variable arg where not exists( LTExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getRightOperand().getValue() = \"0\" ) and not exists( LEExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getRightOperand().getValue() = \"0\" ) select arg 36\n\n37. a isanarrayindex from Variable arg, ArrayExpr ae where ae.getArrayOffset() = arg.getAnAccess() select ae.getArrayOffset(), ae.getEnclosingFunction() 37\n\n38. Filterresultsbyafilepath from ArrayExpr ae where ae.getFile().getAbsolutePath(). matches(\"%/xnu-build/xnu/%\") and not ae.getFile().getAbsolutePath(). matches(\"%/xnu-build/xnu/SETUP/%\") select ae.getArrayOffset(), ae.getEnclosingFunction() 38\n\n39. Combined from Variable arg, ArrayExpr ae where exists( LTExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getParent() instanceof IfStmt and le.getLeftOperand(). getExplicitlyConverted(). getUnderlyingType().(IntegralType).isSigned() ) and not exists( LTExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getRightOperand().getValue() = \"0\" ) and not exists( LEExpr le | le.getLeftOperand() = arg.getAnAccess() and le.getRightOperand().getValue() = \"0\" ) and ae.getArrayOffset() = arg.getAnAccess() and ae.getFile().getAbsolutePath().matches(\"%/xnu-build/xnu/%\") and not ae.getFile().getAbsolutePath().matches(\"%/xnu-build/xnu/SETUP/%\") select ae.getArrayOffset(), ae.getEnclosingFunction() 39\n\n40. Thequeryproduces 169 results Only 45 differentfunctions 40\n\n41. OOBRead, argno isanindexon arm64 uint64_t fasttrap_pid_getarg(void *arg, dtrace_id_t id, void *parg, int argno, int aframes) { arm_saved_state_t* regs = find_user_regs(current_thread()); /* First eight arguments are in registers */ if (argno < 8) { return saved_state64(regs)->x[argno]; } Docs:getthevalueforanargXorargs[X]variable bsd/dev/arm64/fasttrap_isa.c 41\n\n42. OOBRead, argno isanindexon x86_64 uint64_t fasttrap_pid_getarg(void* arg, dtrace_id_t id, void* parg, int argno, int aframes) { pal_register_cache_state(current_thread(), VALID); return (fasttrap_anarg( (x86_saved_state_t*)find_user_regs(current_thread()), 1, argno)); } fasttrap_anarg // args: (x86_saved_state_t *regs, int function_entry, int argno) if (argno < 6) return ((&regs64->rdi)[argno]); bsd/dev/i386/fasttrap_isa.c,bsd/dev/i386/fasttrap_isa.c 42\n\n43. dtrace_pops typedef struct dtrace_pops { ... uint64_t (*dtps_getargval)(void *arg, dtrace_id_t id, void *parg, int argno, int aframes); ... } dtrace_pops_t; dtrace_pops_t static dtrace_pops_t pid_pops = { ... .dtps_getargval = fasttrap_pid_getarg, ... }; bsd/dev/dtrace/fasttrap.c 43\n\n44. dtps_getargval mightbeapointerto fasttrap_pid_getarg // func: dtrace_dif_variable // args: (dtrace_mstate_t *mstate, dtrace_state_t *state, uint64_t v, // uint64_t ndx) val = pv->dtpv_pops.dtps_getargval(pv->dtpv_arg, mstate->dtms_probe->dtpr_id, mstate->dtms_probe->dtpr_arg, ndx, aframes); bsd/dev/dtrace/dtrace.c 44\n\n45. Boundscheck? // func: dtrace_dif_variable // args: (dtrace_mstate_t *mstate, dtrace_state_t *state, uint64_t v, // uint64_t ndx) if (ndx >= sizeof (mstate->dtms_arg) / sizeof (mstate->dtms_arg[0])) { ... dtrace_provider_t *pv; uint64_t val; pv = mstate->dtms_probe->dtpr_provider; if (pv->dtpv_pops.dtps_getargval != NULL) val = pv->dtpv_pops.dtps_getargval(pv->dtpv_arg, mstate->dtms_probe->dtpr_id, mstate->dtms_probe->dtpr_arg, ndx, aframes); ndx isan unsigned long long ,laterit'sconvertedintoan int in fasttrap_pid_getarg , argno argument 45\n\n46. Howtoreach? dtrace_dif_emulate → DIF_OP_LDGA opcode→ dtrace_dif_variable → fasttrap_pid_getarg 46\n\n47. AnoldPoChelpedtotriggerthevulnerablefunction AlmostthesamecodeflowasinCVE-2017-13782byKevinBackhouse Butyouhavetousea fasttrap provider,whichallowstracinguserlandfunctions It'spossibletodefineafunction void foo() {} TraceitusingDTrace: pid$target::foo:entry { ... } 47\n\n48. Codeflowdifference pv = mstate->dtms_probe->dtpr_provider; if (pv->dtpv_pops.dtps_getargval != NULL) val = pv->dtpv_pops.dtps_getargval(pv->dtpv_arg, mstate->dtms_probe->dtpr_id, mstate->dtms_probe->dtpr_arg, ndx, aframes); // CVE-2023-28200 ... else val = dtrace_getarg(ndx, aframes, mstate, vstate); // CVE-2017-13782 9 linesdifference bsd/dev/dtrace/dtrace.c 48\n\n49. CVE-2023-28200 Kernel Available for: macOS Ventura Impact: An app may be able to disclose kernel memory Description: A validation issue was addressed with improved input sanitization. Details Thebugallowsreadingdatainarangeof16GB Requiresrootaccess 49\n\n50. Patch Reversed dtrace_dif_variable changes if (ndx >= sizeof (mstate->dtms_arg) / sizeof (mstate->dtms_arg[0])) { if ((ndx & 0x80000000) != 0) return 0; // added ... dtrace_provider_t *pv; uint64_t val; pv = mstate->dtms_probe->dtpr_provider; if (pv->dtpv_pops.dtps_getargval != NULL) val = pv->dtpv_pops.dtps_getargval(pv->dtpv_arg, mstate->dtms_probe->dtpr_id, mstate->dtms_probe->dtpr_arg, ndx, aframes); Additionalcheckaddedincallerfunction Calleefunctionsareunfixedforsomereason 50\n\n51. @jaakerblom 51\n\n52. Why? root access!= kernel accessonmacOS SIP putsthewholesystemintoasandbox even root can'tloaduntrustedkernelextensions +Ihad App Sandbox Escape → user to root LPEchain 52\n\n54. Conclusion Applehastomaintaintwoarchitectures: x86_64 and arm64 C-like virtual functions make static analysisharder 54\n\n56. Thankyou"
    }
}