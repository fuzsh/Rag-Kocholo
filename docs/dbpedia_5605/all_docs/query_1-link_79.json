{
    "id": "dbpedia_5605_1",
    "rank": 79,
    "data": {
        "url": "https://stackoverflow.com/questions/9994493/scale-image-to-fit-a-bounding-box",
        "read_more_link": "",
        "language": "en",
        "title": "Scale image to fit a bounding box",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/zL1re.jpg?s=64",
            "https://www.gravatar.com/avatar/95daeaa6bf18eacdc49a6441b40c399e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/bf7d39f4ed9c289feca7de38a0093250?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/95daeaa6bf18eacdc49a6441b40c399e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/1eaa9a21adaea164fcbaa6969cb2df4d?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/Tgzti.jpg?s=64",
            "https://www.gravatar.com/avatar/1f63532195f05d345ea46330f5b36939?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/e92146e270ae11efac6405927b6439af?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/50ddd1285dc08b2c9136615ec6a6f726?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/c77e49a58e68f76b9672857916cb2f50?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/afe25b043d863824ff514f174af2930c?s=64&d=identicon&r=PG",
            "https://graph.facebook.com/1206483825/picture?type=large",
            "https://www.gravatar.com/avatar/ee37e205916d74e0e563aeef42a7fc11?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/Z0g8T.png?s=64",
            "https://www.gravatar.com/avatar/781b389bb43eccf0dd6f8eaf5f595da1?s=64&d=identicon&r=PG",
            "https://graph.facebook.com/100002857159039/picture?type=large",
            "https://lh6.googleusercontent.com/-0AVfpmXsszc/AAAAAAAAAAI/AAAAAAAAANo/TEmoamEIaZ8/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/5ed02658b2440179f00eeff8beb7aa4c?s=64&d=identicon&r=PG",
            "https://graph.facebook.com/673209420/picture?type=large",
            "https://www.gravatar.com/avatar/5ed02658b2440179f00eeff8beb7aa4c?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/48e9b89b58f8ff2c4f4ff92b16df0586?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/5ed02658b2440179f00eeff8beb7aa4c?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/48177cfd6cef150ba5e316ef15990c61?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://stackoverflow.com/posts/9994493/ivc/538f?prg=c7be4503-b3cd-46a9-848e-8168244b817d",
            "https://stackoverflow.com/js-false.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2012-04-03T13:39:12",
        "summary": "",
        "meta_description": "Is there a css-only solution to scale an image into a bounding box (keeping aspect-ratio)? This works if the image is bigger than the container:\n\nimg {\n  max-width: 100%;\n  max-height: 100%;\n}\r\nExa...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/9994493/scale-image-to-fit-a-bounding-box",
        "text": "Note: Even though this is the accepted answer, this other answer is more accurate and is currently supported in all browsers if you have the option of using a background image.\n\nEdit 2: In the modern age, using object-fit might be an even better solution: https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\n\nNo, there is no CSS only way to do this in both directions. You could add\n\n.fillwidth { min-width: 100%; height: auto; }\n\nTo the an element to always have it 100% width and automatically scale the height to the aspect ratio, or the inverse:\n\n.fillheight { min-height: 100%; width: auto; }\n\nto always scale to max height and relative width. To do both, you will need to determine if the aspect ratio is higher or lower than it's container, and CSS can't do this.\n\nThe reason is that CSS does not know what the page looks like. It sets rules beforehand, but only after that it is that the elements get rendered and you know exactly what sizes and ratios you're dealing with. The only way to detect that is with JavaScript.\n\nAlthough you're not looking for a JS solution I'll add one anyway if someone might need it. The easiest way to handle this with JavaScript is to add a class based on the difference in ratio. If the width-to-height ratio of the box is greater than that of the image, add the class \"fillwidth\", else add the class \"fillheight\".\n\n$('div').each(function() { var fillClass = ($(this).height() > $(this).width()) ? 'fillheight' : 'fillwidth'; $(this).find('img').addClass(fillClass); });\n\n.fillwidth { width: 100%; height: auto; } .fillheight { height: 100%; width: auto; } div { border: 1px solid black; overflow: hidden; } .tower { width: 100px; height: 200px; } .trailer { width: 200px; height: 100px; }\n\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script> <div class=\"tower\"> <img src=\"http://placekitten.com/150/150\" /> </div> <div class=\"trailer\"> <img src=\"http://placekitten.com/150/150\" /> </div>\n\nThis example to stretch the image proportionally to fit the entire window. An improvisation to the above correct code is to add $( window ).resize(function(){});\n\nfunction stretchImg(){ $('div').each(function() { ($(this).height() > $(this).find('img').height()) ? $(this).find('img').removeClass('fillwidth').addClass('fillheight') : ''; ($(this).width() > $(this).find('img').width()) ? $(this).find('img').removeClass('fillheight').addClass('fillwidth') : ''; }); } stretchImg(); $( window ).resize(function() { strechImg(); });\n\nThere are two if conditions. The first one keeps checking if the image height is less than the div and applies .fillheight class while the next checks for width and applies .fillwidth class. In both cases the other class is removed using .removeClass()\n\nHere is the CSS\n\n.fillwidth { width: 100%; max-width: none; height: auto; } .fillheight { height: 100vh; max-width: none; width: auto; }\n\nYou can replace 100vh by 100% if you want to stretch the image with in a div. This example to stretch the image proportionally to fit the entire window.\n\nI have used table to center image inside the box. It keeps aspect ratio and scales image in a way that is totally inside the box. If the image is smaller than the box then it is shown as it is in the center. Below code uses 40px width and 40px height box. (Not quite sure how well it works because I removed it from another more complex code and simplified it little bit)\n\n.SmallThumbnailContainer { display: inline-block; position: relative; float: left; width: 40px; height: 40px; border: 1px solid #ccc; margin: 0px; padding: 0px; } .SmallThumbnailContainer { width: 40px; margin: 0px 10px 0px 0px; } .SmallThumbnailContainer tr { height: 40px; text-align: center; } .SmallThumbnailContainer tr td { vertical-align: middle; position: relative; width: 40px; } .SmallThumbnailContainer tr td img { overflow: hidden; max-height: 40px; max-width: 40px; vertical-align: middle; margin: -1px -1px 1px -1px; }\n\n<table class=\"SmallThumbnailContainer\" cellpadding=\"0\" cellspacing=\"0\"> <tr> <td> <img src=\"https://www.gravatar.com/avatar/bf7d39f4ed9c289feca7de38a0093250?s=32&d=identicon&r=PG\" width=\"32\" height=\"32\" alt=\"OP's SO avatar image used as a sample jpg because it is hosted on SO, thus always available\" /> </td> </tr> </table>\n\nNote: the native thumbnail size in this snippet is 32px x 32px, which is smaller than its 40px x 40px container. If the container is instead sized smaller than the thumbnail in any dimension, say 40px x 20px, the image flows outside the container in the dimensions that are smaller than the corresponding image dimension. The container is marked by a gray 1px border."
    }
}