{
    "id": "dbpedia_7488_3",
    "rank": 54,
    "data": {
        "url": "https://www.linkedin.com/posts/slint-ui_2023-slint-in-review-activity-7143576849892212736-i44W",
        "read_more_link": "",
        "language": "en",
        "title": "Slint on LinkedIn: 2023: Slint in Review",
        "top_image": "https://media.licdn.com/dms/image/sync/v2/D4E27AQEzSxglB6q5DA/articleshare-shrink_800/articleshare-shrink_800/0/1711636499380?e=2147483647&v=beta&t=PzB8AJL1PCM2dbh1IIJniwn7XsbqXuw47DcPxGwT33k",
        "meta_img": "https://media.licdn.com/dms/image/sync/v2/D4E27AQEzSxglB6q5DA/articleshare-shrink_800/articleshare-shrink_800/0/1711636499380?e=2147483647&v=beta&t=PzB8AJL1PCM2dbh1IIJniwn7XsbqXuw47DcPxGwT33k",
        "images": [
            "https://media.licdn.com/dms/image/v2/D4E3DAQGHZnOLYoDhGw/image-scale_127_750/image-scale_127_750/0/1694379808605/slint_ui_cover?e=2147483647&v=beta&t=FUoYRI5zvB_FK5yR58lMxSxiHUu8h0JBhf5IQwL3LZs"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Slint"
        ],
        "publish_date": "2023-12-21T12:24:02.231000+00:00",
        "summary": "",
        "meta_description": "After an exciting and eventful year for us at Slint, we&#39;d like to pause for a moment and reflect on the highlights of 2023…",
        "meta_lang": "en",
        "meta_favicon": "https://static.licdn.com/aero-v1/sc/h/al2o9zrvru7aqj8e1x2rzsrca",
        "meta_site_name": "",
        "canonical_link": "https://www.linkedin.com/posts/slint-ui_2023-slint-in-review-activity-7143576849892212736-i44W",
        "text": "🚀 Exciting News! 🚀 Hey LinkedIn family, I'm thrilled to share that I've successfully completed a coding challenge on HackerRank! 🎉👩💻 The problem: Merge the Tools 💡 Hyperlink: https://lnkd.in/ePKKRfSt 🔗 Challenge Breakdown: In this problem, I had to divide a string into substrings of length k and then merge duplicate characters within each substring. I'm excited to share this journey with you all! 🚀 Feel free to check out the problem and my solution. Your thoughts and feedback are always welcome. Let's keep pushing boundaries and coding our way to success! 💻🌟 #CodingChallenge #HackerRank #Python #Success\n\nExcited to unveil our 24-hour hackathon journey at Roolathon, hosted by Srinivas Institute of Technology on 21st-22nd. Guided by the visionary Bangera Paveen , our team, including me, Harivardhan D Mallya , and M. Vaibhav , collaboratively crafted a cutting-edge chatbot for financial advising. Powered by Python for the core logic, integrated seamlessly with Flask, and adorned with HTML, CSS, and JS for a polished frontend. The intensity, creativity, and teamwork showcased during this event were truly remarkable. Looking forward to more collaborative ventures and pushing the boundaries of innovation! 💡🚀 #Roolathon #Hackathon #Python #Flask #HTML #CSS #JS #innovation\n\nWhen the leaves turn their color, and the sun is enjoyable, ahh, October, you beautiful month. When the days are shorter, and you don't feel bad when it's raining, oh yes, it's Hacktober. Let me share how my #hacktoberfest2023 has been (so far): I contributed to Komiser, #DocsGPT, and to my own project S3-simpler(https://lnkd.in/e_5vj2nN) and here are my Learnings: 🤯 The use of Go programming language and its ability to execute multiple tasks concurrently. ☁️ How the pricing of CloudFront Functions are calculated, and that they differ from Lambda@Edge 🤖 Use LangChain to develop a language model 🐍 Get to improve my rusty Python skills 🚫 Without any marketing, you won't get any visibility 🐰 Trying out Bun and realized its bundler was not correctly bundling to ESM 📚 Creating a library for ESM and CJS (Dual-Mode) Check out my full blog post! #hacktoberfest #opensource\n\nWeek 6 at Carolina Code School: We’re halfway there! 🎉 The emotions are intense and all over the place as we hit this midpoint. Last week, our instructor shared this image reminding us that feeling overwhelmed and emotional is completely normal. In fact, every student/cohort before us has felt the same way at this stage. Despite the constant flood of emotions, the phrase “But I'm doing it anyway” has become my mantra. Thanks to our amazing teacher and the incredibly supportive team, I know that even with the challenges, I’m on the right path. Here’s to pushing through, embracing the journey, and continuing this incredible adventure together! #WomenWhoCode #SoftwareDevelopment #Coding #WebDevelopment #DevOps #WomenInTech #Python #CSS #HTML #FastAPI #SQL #JavaScript #FullStackDeveloper #Motivation\n\nDay 5: Progress in the LeetCode Adventure! Day 5 of my 100-day LeetCode challenge, and I'm thrilled to share another accomplishment! Today's victory: solving the \"Best Time to Buy and Sell Stock\" problem. Problem: https://lnkd.in/g46D3KhK Solution: https://lnkd.in/g-ZDV88T Approach: This Python function efficiently calculates the maximum profit that can be obtained from buying and selling a stock represented by its prices over a period of time. By iterating through the prices and keeping track of the minimum price (m) and the maximum profit (output), we find the optimal buying and selling points. Excited to continue this journey and tackle more challenges ahead! 💪✨ #100DaysOfCode #LeetCode #Python #Algorithm #DataStructures\n\nHello Connections ! 👋 Excited to share our latest insights on #100daysofcode trends! 🚀 📖 Day : 89/100 🎯 Solving LeetCode Problems. ❓Problem: 367- Valid Perfect Square. https://lnkd.in/gFGqa9rf I recently tackled an interesting problem about checking if a given positive integer is a Valid Perfect Square, without using any built-in library functions like `sqrt`. Here's a concise summary of the approach I used, implemented in C++: The goal is to determine if a given number is a perfect square. A number is a perfect square if it can be expressed as the product of an integer with itself (e.g., 16=4×4 16=4×4). ✅Approach: To determine if a given positive integer is a perfect square without using built-in library functions, we employ a binary search method. We start by initializing two pointers, `low` and `high`, to 1 and the number itself, respectively. Using binary search, we iteratively calculate the midpoint and check if its square equals the given number. If it does, the number is a perfect square, and we return `True`. If the square is less than the given number, we move the `low` pointer up; if it is more, we move the `high` pointer down. This process continues until the pointers converge. If no perfect square is found during this search, we return `False`. This method ensures an efficient O(log n) time complexity. #leetcode100days #leetcode2024 #datastructures #Day89 #LeetCode #keepcoding #datastructuresandalgorithms #codenewbie #cppprogramming #leetcode #dsachallenge #pointers #string #DP #backtracking #array #ifelse #problemsolving #leetcode #community #javascript #datascience #programming #development #programminglife #bangladesh"
    }
}