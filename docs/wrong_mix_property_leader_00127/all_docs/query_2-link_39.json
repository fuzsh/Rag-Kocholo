{
    "id": "wrong_mix_property_leader_00127_2",
    "rank": 39,
    "data": {
        "url": "https://github.com/rmusser01/Infosec_Reference/blob/master/Draft/L-SM-TH.md",
        "read_more_link": "",
        "language": "en",
        "title": "Infosec_Reference/Draft/L-SM-TH.md at master · rmusser01/Infosec_Reference",
        "top_image": "https://opengraph.githubassets.com/06faee6207694dcb99bfafdca002bb2a6900ea288e9ec4b4907142e96c5e24c4/rmusser01/Infosec_Reference",
        "meta_img": "https://opengraph.githubassets.com/06faee6207694dcb99bfafdca002bb2a6900ea288e9ec4b4907142e96c5e24c4/rmusser01/Infosec_Reference",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "An Information Security Reference That Doesn't Suck; https://rmusser.net/git/admin-2/Infosec_Reference for non-MS Git hosted version. - Infosec_Reference/Draft/L-SM-TH.md at master · rmusser01/Infosec_Reference",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/rmusser01/Infosec_Reference/blob/master/Draft/L-SM-TH.md",
        "text": "Logging(Host/Network) / Security Monitoring / Threat Hunting\n\nTable of Contents\n\n101\n\nAgnostic ToC\n\nNetwork-based ToC\n\nCloud ToC\n\nmacOS ToC\n\nLinux ToC\n\nWindows ToC\n\nData Storage & Analysis ToC\n\nAgnostic\n\nLogging\n\nMonitoring\n\nDetection Engineering\n\nThreat Hunting\n\n101\n\nBuilding a Program\n\nResources\n\nNon-101 General\n\nAPT Hunts\n\nMethodologies\n\nData Analytics\n\nEmail Logs\n\nHunt Experiences/Demonstrations of\n\n(Malicious) Insider Hunting\n\nMetrics\n\nTools\n\nOthers\n\nESXI\n\nICS\n\nSlack\n\nOSQuery\n\nOSQuery\n\nNetwork-based\n\nLogging\n\nMonitoring\n\nDetection Engineering\n\nThreat Hunting\n\nCloud\n\nmacOS\n\nLogging\n\nMonitoring\n\nDetection Engineering\n\nThreat Hunting\n\nLinux\n\nLogging\n\nMonitoring\n\nDetection Engineering\n\nThreat Hunting\n\nWindows\n\nLogging\n\nMonitoring\n\nDetection Engineering\n\nThreat Hunting\n\nData Storage & Analysis\n\nELK\n\n101\n\nElasticSearch\n\nLogstash\n\nKibana\n\nEvent Query Language\n\nTools\n\nGraylog\n\nSplunk\n\nTo Add:\n\nOSQuery\n\nAuditpol\n\nELK/Splunk/Graylog stuff\n\nZeek/Bro\n\nSOAR\n\nJupyter\n\nHunt experiences\n\nMordor\n\nGrafana/Loki/Prometheus\n\nExternal Surface Monitoring\n\nHunter's Forge\n\nHELK Lab\n\nYARA\n\nEDR stuff\n\nAuditD\n\nNetwork protocols\n\nLogging\n\n101\n\nLogging vs Tracing vs Monitoring - Phil Winder\n\nAn Introduction to Logging for Programmers - Stefanos Vardalos(2017)\n\nLogs Are Streams, Not Files - Adam Wiggins(2011)\n\nLogs and Metrics - Cindy Sridharan(2017)\n\nLogs and Time Series are not the same - Philip O'Toole(2020)\n\nHow To Create a Logging Strategy - Tom Harrison(2021)\n\nUltimate Guide - Loggly\n\nUltimate Guide to Logging - Your open-source resource for understanding, analyzing, and troubleshooting system logs\n\nLog File Monitoring and Alerting - DHound\n\nReliable Event Logging Protocol - Wikipedia\n\nArticles/Writeups\n\nGeneral\n\nLogging v. instrumentation - Peter Bourgon(2016)\n\nOWASP Logging Cheat Sheet\n\nUsing AWS and Azure for Cost Effective sLog Ingestion with Data Processing Pipelines for SIEMs - Liam Stevenson(2021)\n\nThe Log: What every software engineer should know about real-time data's unifying abstraction - Jay Kreps(2013)\n\nBuilding\n\nBuilding A Central Logging Service In-House - Akhil Labudubariki(2018)\n\nPart 1: Building a Centralized Logging Application - Vikesh Tiwari(2018)\n\nExperiences\n\nLies My Parents Told Me (About Logs) - Charity Majors(2017)\n\nTransitioning Logging and Monitoring Systems at The Economist - Kathryn Jonas(2017)](https://hackernoon.com/transitioning-logging-and-monitoring-systems-at-the-economist-3c6116ba30a8)\n\nWhen logging causes security incidents; What we learned from GitHub and Twitter - Scott Helme(2018)\n\nStream Processing\n\nLogs and real-time stream processing - Jay Kreps(2016)\n\nStructured Logging\n\nYou Could Have Invented Structured Logging - Eben Freeman(2017)\n\nStructured Logging and Your Team - (2018)\n\nTesting\n\nWhy and How to Test Logging - Manuel Pais, Matthew Skelton(2016)\n\nTalks/Presentations/Videos\n\nUn-broken logging - the foundation of operability - Matthew Skelton(Operability.io2015)\n\nSlides\n\nThe way in which many (most?) software teams use logging needs a re-think as we move into a world of microservices and remote sensors. Instead of using logging merely to dump out stack traces, our logs become a continuous trace of application state, with unique-enough identifiers for every interesting point of execution. We also use transaction identifiers to trace calls across components, services, and queues, so that we can reconstruct distributed calls after the fact. Logging becomes a rich source of insight for developers and operations people alike, as we 'listen to the logs' and tighten feedback cycles to improve our software systems.\n\nOne Puzzle Piece at a Time: Logging Quick Wins - Celeste Hall(BSides Cleveland2018)\n\nHave you put off setting up log analytics in your organization? With everything else we have to do, it can be easy to let logs take the back seat. That changes today! Learn what logs to ingest and how to get started with some quick and easy log monitoring searches. Then, use it to get insight into your organization and start \"putting the puzzle together.\"\n\nLogging ALL THE THINGS Without All The Cost With Open Source Big Data Tools - DEFCON22 - Zach Fasel\n\nMany struggle in their job with the decision of what events to log in battle against costly increases to their licensing of a commercial SIEM or other logging solution. Leveraging the open source solutions used for \"big-data\" that have been proven by many can help build a scalable, reliable, and hackable event logging and security intelligence system to address security and (cringe) compliance requirements. We’ll walk through the various components and simple steps to building your own logging environment that can extensively grow (or keep sized just right) with just additional hardware cost and show numerous examples you can implement as soon as you get back to work (or home).\n\nLogging Pitfalls and How to Abuse Them - Kevin Kaminski, Michael Music(BSides Tampa2019)\n\nYou cannot defend from what you cannot see. A lack of proper logging from endpoints, servers, and security appliances is a widespread issue for companies in every industry. We will outline the most common logging gaps, mistakes, and misconfigurations that we've seen and how an attacker can abuse them. This can include identifying what exactly the blue team will not see, and how knowledge of the shortcomings can allow attackers to evade the blue team or generally be more lazy and comfortable in their attack. We will also offer insight on how to solve these common problems from a high level.\n\nWhen Logging Everything Becomes an Issue - Edward Ruprecht - Edward Ruprecht(WWHF2020)\n\nDiscussing potential issues with logging Sysmon and PowerShell logs. Potential sensitive data leakage, best practices, and scalability issues.\n\nMonitoring\n\n101\n\nLogging vs Tracing vs Monitoring - Phil Winder\n\nMonitoring in the time of Cloud Native - Cindy Sridharan(2017)\n\nMetrics are Dead? Thoughts after Monitorama - Paul Dix(2017)\n\nMonitoring demystified: A guide for logging, tracing, metrics - Mitch Pronschinske\n\nAn Introduction to Metrics, Monitoring, and Alerting - Justin Ellingwood(2017)\n\nHow to Monitor the SRE Golden Signals - Steve Mushero(2017)\n\nArticles/Blogposts/Writeups\n\nGeneral\n\nThe Mon-ifesto Part 1: Metrics - Peter Christian Fraedrich(2018)\n\nCrown Jewels: Monitoring vs Mitigating - Pen Consultants\n\nIntroducing the Funnel of Fidelity - Jared Atkinson(2019)\n\n[...]As a result, I created a model to describe the conceptual process that organizations follow to quantify the high level roles and responsibilities of a detection and response program. As events pass through the model the depth of event analysis and fidelity is increased. For this reason I call the model the Funnel of Fidelity (following the naming convention of David Bianco’s Pyramid of Pain).\n\nExperiences\n\nMonitoring of GitLab.com - Marin Jankovski, Steve Loyd\n\nLessons from Building Observability Tools at Netflix - Netflix(2018)\n\nTalks/Presentations/Videos\n\nTaking Event Correlation With You - Rob King(BHUSA2015)\n\nEffective Monitoring for Operational Security - Russell Mosley, Ryan St. Germain(BSidesCharm2018)\n\nAs Infosec practitioners, how well do you really know and monitor your IT and business operations? Would you identify a data exfiltration event by a bandwidth increase without attendant malware alerts? Would you identify an employee staying late and attempting to gain physical access to a restricted area? Would you identify a successful VPN login from another country? We will present effective monitoring methods we utilize and the resulting outputs that teach us what normal operations look like in order to identify suspicious activity. By reviewing these types of reports or tickets on a daily basis you will know your IT and business operations well enough to identify anomalies that may evade detection by your security tools. We will show example reports and tickets from our organization covering a variety of these topics and discuss how we analyze them, as well as how we use the information to better tune our monitoring tools.\n\nBreach Detection/Response\n\nArticles/Blogposts/Presentations/Talks/Writeups\n\nThe fox is in the Henhouse - Detecting a breach before the damage is done\n\nTools\n\nInfection Monkey\n\nThe Infection Monkey is an open source security tool for testing a data center's resiliency to perimeter breaches and internal server infection. The Monkey uses various methods to self propagate across a data center and reports success to a centralized Command and Control(C&C) server.\n\n411\n\nConfigure Searches to periodically run against a variety of data sources. You can define a custom pipeline of Filters to manipulate any generated Alerts and forward them to multiple Targets.\n\nPattern\n\nPattern is a web mining module for Python. It has tools for: Data Mining: web services (Google,; Twitter, Wikipedia), web crawler, HTML DOM parser; Natural Language Processing: part-of-speech taggers, n-gram search, sentiment analysis, WordNet; Machine Learning: vector space model, clustering, classification (KNN, SVM, Perceptron); Network Analysis: graph centrality and visualization.\n\nFileSystem\n\nTools\n\nfswatch\n\nA cross-platform file change monitor with multiple backends: Apple OS X File System Events, *BSD kqueue, Solaris/Illumos File Events Notification, Linux inotify, Microsoft Windows and a stat()-based backend.\n\nGraphing\n\nMetric graphs 101: Timeseries graphs - John Matson(2016)\n\nInfrastructure Monitoring\n\nNinja Level Infrastructure Monitoring Workshop - Defcon24\n\nThis repository contains all the presentation, documentation and the configuration, sample logs, ansible playbook, customized dashboards and more.\n\nInfra Metrics\n\nArticles/Blogposts/Writeups\n\nBuilding low-overhead metrics collection for high-performance systems - Jonathan Brown(2018)\n\nWeb\n\nTools\n\nGoAccess\n\nGoAccess is an open source real-time web log analyzer and interactive viewer that runs in a terminal on *nix systems or through your browser. It provides fast and valuable HTTP statistics for system administrators that require a visual server report on the fly.\n\nDetection Engineering\n\n101\n\nArticles/Writeups\n\nMethods of Detection - Jack Crook\n\nWhat’s in a name? TTPs in Info Sec - Robby Winchester(2017)\n\nLessons Learned in Detection Engineering - Ryan McGeehan(2017)\n\nUncovering The Unknowns - Jonathan Johnson(2019)\n\nMapping Windows API’s to Sysmon Events\n\nCan We Have “Detection as Code”? - Anton Chuvakin(2020\n\nDetection In Depth - Joshua Prager(2020)\n\nDetections of Past, Present, and Future - Robby Winchester(2020)\n\nImplementing DevOps and CI/CD Pipelines to Detection Engineering - Mehmet Ergene(2020)\n\nThe why, what, and how of threat research - Matt Graeber(2020)\n\nHow to Design Detection Logic - Part 1 - Menasec(2020)\n\nDissecting a Detection: An Analysis of ATT&CK Evaluations Data (Sources) Part 1 of 2 - Jamie Williams(2020)\n\nDetection Engineering Maturity Matrix - Kyle Bailey(2021\n\nDetection Engineering Maturity Matrix\n\nPlaying Detection with a Full Deck - Jared Atkinson(2021)\n\nA Primer to Detection Engineering Dimensions in a SOC Universe - Hamza Ouadia(2022)\n\nMindMaps\n\nThreat Hunting & Detection Engineering mindmaps\n\nControl Validation Compass\n\nYou Cannot Detect Techniques in the Execution Tactic! And What To Do Instead - Tareq Alkhatib(2022)\n\nTalks & Presentations\n\nWaking up the data engineer in you! - Jared Atkinson(Derbycon2019)\n\nAt almost every company we visit, we find that there is a disconnect between data engineers and security analysts. Security analysts are responsible for using available data to find potential adversaries, while data engineers are responsible for securing, standardizing, and making data available for analysts. It may seem obvious that these two roles should work together, but it is usually not the case which limits how analysts can use data and technology to detect adversaries. This talk focuses on why it is important for security analysts to understand data engineering basics before building detections. We will use a detection use case to show how a non-scalable process can be made into an efficient detection by looking at telemetry as the foundation of a strong detection capability.\n\n$SignaturesAreDead = “Long Live RESILIENT Signatures” wide ascii nocase - Matthew Dunwoody, Daniel Bohannon(BruCON 0x0A)\n\nSignatures are dead, or so we're told. It's true that many items that are shared as Indicators of Compromise (file names/paths/sizes/hashes and network IPs/domains) are no longer effective. These rigid indicators break at the first attempt at evasion. Creating resilient detections that stand up to evasion attempts by dedicated attackers and researchers is challenging, but is possible with the right tools, visibility and methodical (read iterative) approach. As part of FireEye's Advanced Practices Team, we are tasked with creating resilient, high-fidelity detections that run across hundreds of environments and millions of endpoints. In this talk we will share insights on our processes and approaches to detection development, including practical examples derived from real-world attacks.\n\nThe Unified Kill Chain: Designing a Unified Kill Chain for analyzing, comparing and defending against cyber attacks - Mr. drs. Paul Pols(2017)\n\n\"In this thesis,a Unified Kill Chain(UKC)modelis developedthat focuses on the tactics that form the consecutive phases of cyber attacks(Table 1). Ahybrid research approach is used to develop the UKC,combiningdesign science with qualitative research methods. The UKC is first developed through literature study, extendingthe CKC by uniting improvements that were previously proposed by other authors withthe tactics of MITRE’s ATT&CK™model. The UKC is subsequently iteratively evaluatedand improved through case studies of attacksby Fox-IT’s Red Team and APT28(alias Fancy Bear). The resulting UKC is a meta model that supports the development of end-to-end attack specific kill chains and actor specific kill chains, that can subsequently be analyzed, compared and defended against.\"\n\nThe Art of Detection - Jay Dimartino(DEFCON27 Packet Hacking Village)\n\nEver inherited a security rule you were afraid to modify? Ever import a Yara rule only to have the alerts blow up in your face? Does your SEIM or security appliance keep you up at night with email alerts? The Art of Detection focuses on the methodology of writing and sharing accurate detections to make you a better detection author. Gain confidence in managing false positives, learn rule sharing best practices, tackle large monolithic detections, and write detections that feed other detections. Learn the importance of your intelligence test data, and if your intelligence streams could be causing bias.\n\nThe return of detection engineering: detection development using CI/CD - Patrick Bareiß(x33fcon2020)\n\nThe later you find a bug in your detections, the more expensive it is to solve it! Therefore, the presenters will introduce CI pipelines in order to proactively find bugs in detection rules, before they are deployed in production. The CI pipelines leverage a combination of lab and attack simulation. Well developed detection rules provide strong signals into anomalous and potentially malicious activity. Poorly developed detection rules flood the analysts with low-level alerts and are the cause of alert fatigue. This talk will introduce a modern approach of detection engineering using Continuous Integration and Continuous Delivery (CI/CD). The later you find a bug in your detections, the more expensive it is to solve it! Therefore, the presenter will introduce CI pipelines in order to proactively find bugs in detection rules, before they are deployed in production. In order to successfully test the effectiveness of your detection, you need a lab and an attack simulation engine. The attack range combines both a lab and attack simulation into an easy to use tool. The presenter will introduce the attack range tool and show how you can integrate it into your CI/CD pipeline to automatically test your detections. Lastly, the presenter will share how CD can automatically deliver the detection rules to the SIEM via either a package or over an API.\n\nRethinking Detection Engineering – Jared Atkinson (SO-CON 2020)\n\nPsychologist Jean Piaget is renown for his investigation into cognitive development and how we learn to deal with abstract concepts. In Information Security we often deal with abstract concepts like \"find evil\" or \"detect malicious activity,\" however it is often difficult to break these down from the abstract concept into their specific elements. In this talk, I will discuss my perspective of common follies of abstraction in detection, triage, and investigation and how I approach breaking down problems into discrete components.\n\nUnderstanding Technique Abstraction for Detection Engineers - Jared Atkinson, Luke Paine, and Jonny\n\nHave you ever struggled to build a detection because you didn't know where to start? In sports, it is important to understand strengths and weaknesses of your opponent. Before a game, teams study their opponents in painstaking detail to make sure they understand what they are up against. Not only can this approach win championships, but it can help build powerful detections. In this workshop you will learn to look past the superficial nature of attack tools, revealing how tools are a simple abstraction layer hiding the inner workings of a technique. We will use this understanding to discuss and demonstrate how this understanding can be used to build detections beyond simple tool signatures.\n\nConverting Blue Team Expertise of Customer Networks into Advanced Host-Based Alerting - Stephen Spence(2020)\n\nWhat happens when the dream of host event log aggregation is realized and you have to figure out what to do with ALL that data? Through solutions such as Splunk and the Elastic Stack, many blue teamers finally have access to millions/billions of windows event logs, Sysmon, endpoint protection logs, and other log types. Often the challenge of creating alerts off this data looks a lot like attempt to implement Sigma and hope you can alert on evil. This presentation will describe how to transform a blue team’s knowledge of a customer’s network into advanced signature creation. We will cover my experiences in tuning to a customer’s traffic and creating alerts on the negative space, simplify complex Sigma rules, future proof alerts against schema changes, and consider search performance at the same time. Additionally this presentation will show how to take events collected during Red Team engagements and build alerting that is specific to the customer environment that will pay dividends in the future.\n\nResilient Detection Engineering - Olaf Hartong(WWHF Deadwood2020)\n\nA Voyage to Uncovering RPC Telemetry – Jonathan Johnson (SO-CON 2020)\n\nRemote Procedure Calls (RPC) is a core component of the Windows Operating System. This technology is commonly leveraged by adversaries when performing various attacks. \"A Voyage to Uncovering Telemetry\" provides a walk-through on how Jonathan studied this technology to uncover various telemetry sources that provides detection engineers with the proper insight needed to identify this behavior, whether benign or malicious.\n\nIdentifying Novel Malware at Scale - Pedram Amini(SANS HackFest&Ranges Summit2020)\n\nIt's no secret that client-side attacks are a common source of compromise for many organizations. Web browser and e-mail borne malware campaigns target users by way of phishing, social engineering, and exploitation. Office suites from vendors such as Adobe and Microsoft are ubiquitous and provide a rich and ever-changing attack surface. Poor user awareness and clever social engineering tactics frequently result in users consenting to the execution of malicious embedded logic such as macros, JavaScript, ActionScript, and Java applets. In this talk, we'll explore a mechanism for harvesting a variety of these malware lures for the purposes of dissection and detection. We'll explore mechanisms for clustering and identifying \"interesting\" samples. Specifically, we're on the hunt for malware lures that can provide a heads up to defenders on upcoming campaigns as adversaries frequently test their lures against AV consensus. Multiple real-world examples are provided, proving that an astute researcher, can harvest zero-day exploits from the public domain.\n\nDiscovering C&C in Malicious PDF with obfuscation, encoding and other tech - Filip Pires(BSides Athens2021)\n\nDetection mapping - how does your coverage compare to ATTACK.pdf - Olaaf Hartong\n\nRethinking Detection Engineering: Threat Scoring for Prioritization – Josh Prager (SO-CON 2020)\n\nThe complexity of defensive tooling in the current industry can cause an abundance of alerts that are often dismissed without substantial justification. With the necessary context added to alert event data, we can decipher exactly what the analyst needs to know to properly prioritize and triage alerts. In this talk, we'll describe our approach to building a prioritization of composite event fields and defining a score to address alerts programmatically. We will show you how creating questions via the composite events and scoring those same questions can alter the priority list of alerts as they come into the queue.\n\nPapers\n\nCommand-Line Obfuscation\n\nTools\n\nFlerken\n\nThis talk first shares some key observations on CLOB such as its attack vectors and analyzing strategies. Then we give a detailed design of Flerken. The description is divided in two parts, namely Kindle (for Windows) and Octopus (for Linux). Respectively, we will show how human readability can serve as an effective statistical feature against PS/CMD obfuscation, and how dynamic syntax parsing can be adopted to eliminate false positives/negatives against Bash CLOB. The effectiveness of Flerken is evaluated via representative black/white command samples and performance experiments.\n\nDetection Ideas & Techniques\n\nDetection Ideas & Rules\n\nEvery day a number of Threat Intelligence reports come into the world. Prepared by different vendors and teams almost none of them contain ready to use detection ideas and rules. In most cases we get only list of IOCs associated with particular threat actor. From my perspective, the reason of that is that DFIR teams do their job perfectly, but detection engineering is simply not their job. It is our - Threat Hunters' job. The idea of this repository is to analyze public Threat Intelligence reports, interesting TTPs, tools and various offensive tradecraft to generate ready to use detection ideas and rules implementations, which can be used by threat hunters and security monitoring teams.\n\nMethodologies\n\nArticles/Blogposts/Writeups\n\nCapability Abstraction - Jared Atkinson\n\nThis is the first of a multipart blog series by the SpecterOps detection team. The goal of this series is to introduce and discuss foundational detection engineering concepts. To make these concepts as consumable as possible, we are focusing the entire series around Kerberoasting. Focusing on this technique allows readers to focus on the strategies presented in each article instead of worrying about the details of the technique itself. The focus of this post is a concept we call “capability abstraction.” The idea is that an attacker’s tools are merely an abstraction of their attack capabilities, and detection engineers must understand how to evaluate abstraction while building detection logic.\n\nGetting Started with ATT&CK: Detection and Analytics - John Wunder(2019)\n\nIntroducing the Funnel of Fidelity - Jared Atkinson(2019)\n\nDetection Spectrum - Jared Atkinson(2020)\n\nCapability Abstraction - Jared Atkinson(2020)\n\nCapability Abstraction Case Study: Detecting Malicious Boot Configuration Modifications - Micahel Barclay(2021)\n\nTalks/Presentations/Videos\n\nMetrics\n\nArticles/Blogposts/Writeups\n\nThe Detection Maturity Level Model - Ryan Stillion(2014)\n\nHow to Measure Threat Detection Quality for an Organization? - Anton Chuvakin(2022)\n\nTalks/Presentations/Videos\n\nYARA-related\n\nArticles/Blogposts/Writeups\n\nTalks/Presentations/Videos\n\nTools\n\nReversingLabs YARA Rules\n\nTools\n\nFile Analysis\n\nentropy\n\nentropy is a simple command-line tool to calculate the entropy of files.\n\nHelper Libraries\n\nhuntlib\n\nA Python library to help with some common threat hunting data analysis operations\n\nNetwork Traffic\n\nhallucinate\n\nOne-stop TLS traffic inspection and manipulation using dynamic instrumentation\n\nPCAP-ATTACK\n\nContainer of PCAP captures mapped to the relevant attack tactic.\n\nTesting\n\nAutomata\n\nBlogpost\n\nAutomata is a tool to detect errors early and measure the Effectiveness of SIEM rules against the behaviors that the rule was developed to work against, ensuring that the whole process of data collection, parsing, and query of security data is working properly and alert when things don't work as intended.\n\natomic-threat-coverage\n\nAtomic Threat Coverage is highly automatable framework for accumulation, development and sharing actionable analytics.\n\nThreat Hunting\n\n101\n\n101\n\nCyber KillChain\n\nThe Alexiou Principle - cepogue(2009)\n\nCyber Threat Hunting | Chris Brenton | October 2020 | 4 Hours\n\nChris Brenton from Active Countermeasures is conducting another free, one-day, Cyber Threat Hunting Training online course! One of the biggest challenges in security today is identifying when our protection tools have failed and a threat actor has made it onto our network. In this free, 4-hour course, we will cover how to leverage network and host data to perform a cyber threat hunt. The course includes hands-on labs using packet captures of various command and control channels. We also discuss how you can use our new Sysmon tool BeaKer to detect attacks on the host with Sysmon... for free! The labs enable you to apply what you've learned using various open-source tools. By the end of the course, you’ll understand the tools and techniques needed to perform compromise assessments within your own environment. While the course will be available later for download, live attendees will receive a \"Cyber Security Threat Hunter Level-1\" certificate.\n\nattack-coverage\n\nAn excel-centric approach for managing the MITRE ATT&CK® tactics and techniques. The Excel file AttackCoverage.xlsx can be used to get a coverage measure of MITRE ATT&CK® tactics and techniques, in terms of detections rules. Working as DFIR consultants for different companies, with different SOCs and technologies in place, it was needed a simple and portable way to get a sort of awareness about which attackers' tactics/techniques a customer is able to detect and, more important, what is missing.\n\nThreat Hunting Principles - SecureWorksCTU(2021)\n\nArticles/Writeups\n\nThe Pyramid of Pain - David Bianco(2014)\n\nIncident Response is Dead… Long Live Incident Response - Scott J Roberts(2015)\n\nA Simple Hunting Maturity Model - detect-respond.blogspot (2015)\n\nThe Origin of Threat Hunting - TaoSecurity(2017)\n\nDetecting the Unknown: A Guide to Threat Hunting - UK Gov(2019)\n\nExpanding on Pyramid of Pain - limbenjamin(2020)\n\nThe Cyber Hunting Maturity Model - Sqrrl(2015)\n\nThreat Hunting - Getting Closer to Anomalous Behavior - Jack Crook(2016)\n\nThe ThreatHunting Project Annotated Reading List\n\n\"I hereby declare the Law Of A Threat Hunter (LOATH): 𝘍𝘰𝘳 𝘦𝘷𝘦𝘳𝘺 𝘵𝘸𝘰 𝘮𝘰𝘴𝘵 𝘥𝘪𝘴𝘵𝘢𝘯𝘵 𝘵𝘦𝘤𝘩𝘯𝘰𝘭𝘰𝘨𝘪𝘦𝘴 𝘵𝘩𝘦𝘳𝘦 𝘦𝘹𝘪𝘴𝘵 𝘢 𝘥𝘦𝘷𝘦𝘭𝘰𝘱𝘦𝘳 𝘵𝘩𝘢𝘵 𝘸𝘪𝘭𝘭 𝘣𝘳𝘪𝘯𝘨 𝘵𝘩𝘦𝘮 𝘵𝘰𝘨𝘦𝘵𝘩𝘦𝘳.\" - HexacornTweet\n\nThe Threat Hunting Reference Model Part 2: The Hunting Loop - Sqrrl\n\nThe Who, What, Where, When, Why and How of Effective Threat Hunting - Robert Lee, Rob Lee(2016)\n\nBuilding Threat Hunting Strategies with the Diamond Model - Sergio Caltagirone(2016)\n\nCyber Threat Hunting (1): Intro - Samuel Alonso(2016)\n\nPart 2: Getting Ready\n\nPart 3: Hunting in the perimeter\n\nCyber Hunting: 5 Tips To Bag Your Prey - David J. Bianco\n\nBillions and Billions of Logs; Oh My - Jack Crook(2017)\n\nData Science Hunting Funnel - Austin Taylor(2017)\n\nDemystifying Threat Hunting Concepts - Josh Liburdi(2017)\n\nThis post is about demystifying threat hunting concepts that seem to trip up practitioners and outsiders.\n\nThe Role of Evidence Intention - Chris Sanders(2018)\n\nDeTT&CT: Mapping your Blue Team to MITRE ATT&CK™ - Marcus Bakker(2019)\n\nDeTTECT - Detect Tactics, Techniques & Combat Threats\n\nA Deep Drive on Proactive Threat Hunting - Nisha Sharma(2020)\n\nOn TTPs - Ryan Stillions(2020)\n\n[...]I set off a few months ago on a personal quest. I wanted to see if I could locate any official citations that attempted to clearly define, compare or contrast \"TTPs\" in a cyber context, and show how they could be used both individually and jointly with other models to further advance our work in the context of things above and beyond atomic Indicators of Compromise (IOCs). In this blog post I'll share with you what I found regarding the definitions of \"TTPs\", and then transition into how I believe they apply to incident detection and response.\n\nHunting mindmaps - sbousseaden\n\nSummarized Overview of different hunting paths an Analyst can take per EventId or technique.\n\nThreat Hunting - Zero to Hero - Slavi Parpulev(2020)\n\nThe PARIS Model\n\nPractical security engineering: Stateful detection - Samir Bousseaden(2020)\n\nThreat Hunting. Why might you need it - CyberPolygon(2021)\n\nThoughts on Assessing Threat Actor Intent & Sophistication - Harlan Carvey(2021)\n\nA Guide to Threat Hunting in a SOC - @paulsec4(2021)\n\nThreat Hunting in action - CyberPolygon(2021)\n\nTalks & Presentations\n\nThreat Hunting Workshop - Methodologies for Threat Analysis - RiskIQ\n\nThreat Hunting 101: Become The Hunter - Hamza Beghal(HITBGSEC 2017)\n\nThreat Hunting, The New Way - In Ming, Wei Chea(HITCon Pacific2017)\n\nAdvanced threat hunting with open-source tools and no budget - Joseph DePlato(SecureWV/Hack3rcon 2018)\n\nThis talk is designed to provide you the skills necessary to hunt for malicious actors on the networks you defend. I will teach you how to do this using primarily Open-Source software and technologies. You CAN have effective cybersecurity on a limited budget. Part 1: OSINT Network defenses - talk through creating an open-source network intrusion detection sensor leveraging a Raspberri Pi and Suricata. We have successfully deployed these sensors on network up to 500 endpoints. We will cover the basics of what Suricata is as well as how to use a Pi for better visibility within a network. Part 2: OSINT Threat Intel - talk through using a number of different tools for faster false positive detection. Will also speak about how to automate some of the OSINT feeds for the Suricata sensor - daily OSINT updates protecting the network. Part 3: Now that we have some tooling in place - how do we look for anomalous activity. Will cover how to approach an investigation, define attackers and define a compromise. Part 4: Introduction of our F3EA Framework for threat hunting. Explore all 5 sections and define what each are and how they relate to the overall investigation. The Framework is iterative and feeds itself. Part 5: Threat Hunting models - practical examples of how to hunt and a number of common techniques that we have found highly successful.\n\nA Process is No One: Hunting for Token Manipulation - Jared Atkinson, Robby Winchester(Derbycon2018)\n\nDoes your organization want to start Threat Hunting, but you’re not sure how to begin? Most people start with collecting ALL THE DATA, but data means nothing if you’re not able to analyze it properly. This talk begins with the often overlooked first step of hunt hypothesis generation which can help guide targeted collection and analysis of forensic artifacts. We will demonstrate how to use the MITRE ATTACK Framework and our five-phase Hypothesis Generation Process to develop actionable hunt processes, narrowing the scope of your Hunt operation and avoiding “analysis paralysis.” We will then walk through a detailed case study of detecting access token impersonation/manipulation from concept to technical execution by way of the Hypothesis Generation Process.\n\nOn the Hunt: Hacking the Hunt Group - Chris Silvers, Taylor Banks(NolaCon2018\n\nGoal is to motivate listeners to be better cyber practitioners, employees, and patients and end result will be better patient medical record security for all of society. In theory\n\nReducing The Breach Detection Gap - Markus Hubbard(DerpCon2020)\n\nMethodologies on identifying signs of compromise incorporating e-mail schema, DNS, expanding web structures, robots.txt, honeyports, honeysql, honeypot accounts, honeypot workstations, canary documents, file modification alerts, etc.\n\nHunting by Numbers: Defensive Hunting Program and Outcomes | Chris Crowley | WWHF Deadwood 2020\n\nCrowley walks through the steps he wants Network Defenders to go through to hunt. Step by step on how to prepare, how to select hunts, data to collect in advance, data to collect along the way, and how to put the tools away when you're done so the next hunt is more productive and effective. He discusses easy ways to report on the effort with tangible outputs (including easy to collect metrics) that demonstrate the value of hunting to your management and constituents. This talk presents your new way to establish the routing for hunting, explains how this relates to SIEM Use Cases, and gives a winning strategy to gain the time to actually take this proactive measure in your organization. Less \"we don't have time to hunt\" and more \"hold my flask and stand back.\"\n\nEverything You've Been Told About Threat Hunting is a Lie | Lesley Carhart | WWHF Deadwood 2020\n\nAs leaders, we've been told that to Do Security in the 20s, we have to have the capacity to \"Threat Hunt\". As individual contributors, we've been told that traditional SOC analysts are on the way out, to be replaced by mystical \"threat hunters\". So, what is threat hunting, really? How can you do it in your environment today, what value does it bring, and what people and technologies does it require? How do you build a threat hunting program with a big budget or a tiny one? What skills do you need to grow to be great at threat hunting? These questions and more will be tackled as we discuss why we need to threat hunt and what it practically can and cannot do.\n\nWhen Worlds Collide: OSS Hunting & Adversarial Simulation | BHIS & Friends(2020)\n\n\"The group will discuss Roberto Rodriguez (@Cyb3rWard0g) and Nate Guagenti’s (@neu5ron) development and maintenance of the HELK project while focusing on the ongoing development of Mordor, Datasets, and Azure Resource Manager templates. Joining the world-class hunters is Marcello Salvati (Byt3bl33d3r), developer of CrackMapExec and SILENTTRINITY to continue the discussion of OSS adversarial simulation. John Strand will add commentary on the history of adversarial simulation, hunting, and where the industry may be headed.\"\n\nFind_Evil - Threat Hunting Anurag Khanna(SANS2020)\n\nToday, organizations are constantly under attack. While security teams are getting good at monitoring and incident response, the frontier to conquer is proactively looking for evil in the environment. Threat hunting is one of the ways in which organizations can proactively look for threats. This talk would discuss the fundamentals of threat hunting, what the hunting teams should look for and how to collect and analyze relevant data. We will discuss some of the recipes to perform threat hunting.\n\nBecoming a Threat Hunter: This Is One Way - Jason Wood(Texas Cyber Summit2021)\n\nTalks/Presentations/Videos\n\nObjectively Measuring Hunt Value - Justin Kohler, Patrick Perry(BSidesAugusta 2018)\n\nQuantify Your Hunt: Not Your Parents’ Red Team - Devon Kerr, Roberto Rodriguez(SANS Threat Hunting Summit 2018)\n\nBSides Charm2018 Version\n\nThis presentation builds on the MITRE ATT&CK framework by explaining how to measure the coverage and quality of ATT&CK, while demonstrating open-source Red Team tools and automation that generate artifacts of post-exploitation.\n\nPapers\n\nHunt Evil: Your Practical Guide to Threat Hunting - threathunting.net\n\nHuntpedia - Sqrrl\n\nThreat Hunting: Open Season on the Adversary - Eric Cole(2016)\n\nMental Models for Effective Searching - Chris Sanders\n\nA Practical Model for Conducting Cyber Threat Hunting - Dan Gunter, Marc Seitz(2018)\n\nThere remains a lack of definition and a formal model from which to base threat hunting operations and quantifying the success of said operations from the beginning of a threat hunt engagement to the end that also allows analysis of analytic rigor and completeness. The formal practice of threat hunting seeks to uncover the presence of attacker tactics, techniques, and procedures (TTP) within an environment not already discovered by existing detection technologies. This research outlines a practical and rigorous model to conduct a threat hunt to discover attacker presence by using six stages: purpose, scope, equip, plan review, execute, and feedback. This research defines threat hunting as the proactive, analyst-driven process to search for attacker TTP within an environment. The model was tested using a series of threat hunts with real-world datasets. Threat hunts conducted with and without the model observed the effectiveness and practicality of this research. Furthermore, this paper contains a walkthrough of the threat hunt model based on the information from the Ukraine 2016 electrical grid attacks in a simulated environment to demonstrate the model’s impact on the threat hunt process. The outcome of this research provides an effective and repeatable process for threat hunting as well as quantifying the overall integrity, coverage, and rigor of the hunt.\n\nGenerating Hypotheses for Successful Threat Hunting - Robert M. Lee, David Bianco\n\nThreat hunting is a proactive and iterative approach to detecting threats. Although threat hunters should rely heavily on automation and machine assistance, the process itself cannot be fully automated. One of the human’s key contributions to a hunt is the formulation of a hypotheses to guide the hunt. This paper explores three types of hypotheses and outlines how and when to formulate each of them.\n\nBuilding a Program\n\nArticles/Blogposts\n\nHow to start Threat Hunting (even if your team is small!) - svch0st(2020)\n\nBuilding and Maturing Your Threat Hunting Program - David Szili(2019)\n\nTalks/Presentations/Videos\n\nThreat Hunting: Defining the Process While Circumventing Corporate Obstacles - Kevin Foster, Matt Schneck, Ryan Andress( BSides Philadelphia 2017)\n\nThreat hunting is a hot topic spurred on by the thought that it,s not a matter of if, but when, your organization will be breached. Mature security organizations are shifting in their approach from solely relying on reactive response and black box security tools to proactive hunting. This shift in approach requires large amounts of network and endpoint data to tie together attacker tools, tactics, and procedures. Security teams often have their hands tied due to limited budgets, politics and their ability to affect change with what information gets logged (just try getting a DNS admin to check a box that says \"Debug\" in prod). Hypothesis driven data acquisition can be used to overcome environmental challenges, provide a specific goal, and reduce analysis paralysis. This presentation will discuss hypothesis driven threat hunting using free and commercial tools for organizations which face common corporate roadblocks.\n\n[We're going on a Threat Hunt, Gonna find a bad-guy. - Todd Sanders(Derbycon2017)](https://www.irongeek.com/i.php?page=videos/derbycon7/t218-were-going-on-a-threat-hunt-gonna-find-a-bad-guy-todd-sanders *-Purpose-Driven-Hunt:-What-do-I-do-with-all-this-data?-Jared-Atkinson,-Robby-Winchester(Derbycon2017)\n\nDoes your organization want to start Threat Hunting, but you’re not sure how to begin? Most people start with collecting ALL THE DATA, but data means nothing if you’re not able to analyze it properly. This talk focuses on the often overlooked first step of hunt hypothesis generation which can help guide targeted collection and analysis of forensic artifacts. We will demonstrate how to use the MITRE ATTACK Framework and our five-phase Hypothesis Generation Process to develop actionable hunt processes, narrowing the scope of your Hunt operation and avoiding “analysis paralysis.” We will then walk through a case study of Golden Ticket detection from concept to technical execution by way of the Hypothesis Generation Process. Along the way, we will detail some of the most common Golden Ticket indicators and will release a new PowerShell script for extracting Kerberos ticket information without any dependencies on external binaries.\n\nHost-Hunting on a Budget - Leo Bastidas(BSidesAugusta2019)\n\nThreat Hunting and Other Arcane Magic - (BSidesRochester2019)\n\n\"Threat hunting is often misunderstood. This talk is meant to dispel some misconceptions as well as build a foundation to perform hunts in any network. It’s not about just tools or just data, you’ll need both and an understanding of the stories they tell. After building the fundamentals, we will walk though some hunt scenarios to find those dark hooded intruders. Happy hunting.\"\n\nEvolving the Hunt: A Case Study in Improving a Mature Hunt Program - David J Bianco, Cat Self(Sans DFIR Summit2021)\n\nAs a major U.S. retailer with a strong cybersecurity focus, Target has long had a functional, mature threat hunting program. When David Bianco took over responsibility for the hunting program in early 2019, leadership’s key question was “How can we do even better?” But what does “better” mean for a hunting program, and how do you get from where you are now to where you want to be? In this presentation, we’ll talk about coming into an existing threat hunting program, prioritizing areas for improvement, and then implementing those improvements to make a great hunting program even better. Attendees will learn the key functions of a threat hunting program and how to evaluate the current hunting program maturity level, set an appropriate maturity improvement goal, identify and prioritize possible program changes to support the desired improvements, and understand how and why these efforts work (or don’t work!).\n\nHow to make intelligence, hunting, and response BFFs - Kamil Bojarski(x33fcon2021\n\nContinuous Threat Hunting: A Practical Webinar - Justin Vaicaro(2020)\n\n\"Threat hunting is a vital but often misunderstood practice for organizations and security teams. In order to be successful, a threat hunting program must be proactive, continually tuned, and optimized to align with the organization’s goals. Further, realistic detections must be built around the direct threats that are specifically targeting the organization, its business vertical, and geographical presence. In this practical webinar, Randy Pargman, Senior Director of Threat Hunting & Counterintelligence at Binary Defense, and Justin Vaicaro, Senior Incident Response Consultant at TrustedSec, will share methods and strategies to cultivate a more effective threat hunting program.\"\n\nResources\n\nawesome-threat-detection\n\nAre the Attackers Out of Our Network? A Guide to Successful Threat Hunting - TrustedSec\n\nNon-101 General\n\nArticles/Blogposts/Writeups\n\nHunting From The Top - Jack Crook(2016)\n\nCategories of Abnormal - Jack Crook(2016)\n\nMy Thoughts on Threat Hunting - Jack Crook(2016)\n\nDon't wait for an intrusion to find you - Jack Crook(2016)\n\nA Few Of My Favorite Things - Jack Crook(2017)\n\nA Few of My Favorite Things - Continued - Jack Crook(2017)\n\nPatterns of Behavior - Jack Crook(2017)\n\nHunting for Chains - Jack Crook(2017)\n\nDynamic Correlation, ML and Hunting - Jack Crook(2020)\n\nBlue Team: System Live Analysis [Part 1]- A Proactive Hunt! - Meisam Eslahi(2020)\n\n[Part 2]- Windows: Rules and Tools\n\n[Part 3]- Windows: Technical Checklist\n\n[Part 4] - Windows: System Information and Configurations\n\n[Part 5] - Windows: Users, Groups, and Privileges\n\nSpotting the Red Team on VirusTotal! - Xavier Mertens(2021)\n\nThe Myth of Part-time Hunting, Part 1: The Race Against Ever-diminishing Breakout Times - Falcon OverWatch Team(2021)\n\nAPT Hunts\n\nArticles/Blogposts/Writeups\n\nLight in the Dark: Hunting for SUNBURST - Matt Bromiley, Andrew Rector, Robert Wallace(2021)\n\nHunting for advanced Tactics, Techniques and Procedures (TTPs) - CyberPolygon\n\nHunting Red Team Activities with Forensic Artifacts - Haboob Team(2020)\n\nLet’s set ice on fire: Hunting and detecting IcedID infections - Thomas Barabosch(2021)\n\nBreaking down NOBELIUM’s latest early-stage toolset - Microsoft Threat Intelligence Center(2021)\n\nMethodologies\n\n'Data Driven Approach'\n\nThreat Hunting Research Methodology: A Data Driven Approach by Roberto & Jose Luis Rodriguez(InsomniHack2019)\n\nThreat hunting as a process is still being defined for many organizations across various industries. Hence, the justification of its budget becomes even harder. Some security teams don’t have a formalized team in place, and they see threat hunting as an informal, ad-hoc procedure where it becomes the responsibility of all Cyber employees to find malicious activity. Others see threat hunting as a formalized process that requires a full-time team focused more on creating detection strategies for adversaries even when they are not in the production environment. No matter how it is defined, there is still uncertainty pertaining to the impact that threat hunting has to the security posture of an organization. In addition, organizations believe that buying more tools and hiring more people would solve their problem. However, they disregard the fact that they might not even have the right data to start with. In this presentation, we will share a threat hunting research methodology that focuses on assessing what an organization has and needs from a data perspective to validate the detection of an adversary. This talk will show organizations how they can assess the collection and quality of their data and create data analytics to set their teams up for more effective engagements in production networks.\n\nThe Threat Hunter Playbook\n\nThe Threat Hunter Playbook is a community-driven, open source project to share detection logic, adversary tradecraft and resources to make detection development more efficient. All the detection documents in this project follow the structure of MITRE ATT&CK categorizing post-compromise adversary behavior in tactical groups and are available in the form of interactive notebooks.\n\n'Hunting Loop'\n\nThe Hunting Loop - Sqrrl(2015)\n\nA Framework for Cyber Threat Hunting - Sqrrl\n\n'A Practical Model For Conducting Cyber Threat Hunting'\n\nA Practical Model for Conducting Cyber Threat Hunting - Dan Gunter, Marc Seitz(2018)\n\nTaHiTI\n\nTaHiTI Threat Hunting Methodology\n\nTaHiTI: a threat hunting methodology (whitepaper)\n\nData Analysis\n\nArticles/Blogposts/Writeups\n\nAn In-Depth Look Into Data Stacking - M-Labs\n\nData stacking is the application of frequency analysis to large volumes of similar data in an effort to isolate and identify anomalies. In short, data stacking is an investigative technique that can be used to find a needle in a digital haystack. It involves an iterative process of reducing large amounts of data into manageable chunks that can be consumed and investigated.\n\nDefining ATT&CK Data Sources, Part I: Enhancing the Current State - Jose Luis Rodriguez(2020)\n\nDefining ATT&CK Data Sources, Part II: Operationalizing the Methodology - Jose Luis Rodriguez(2020)\n\nAnalysis of\n\nArticles/Blogposts/Writeups\n\nAnalysis of Variance - RPubshttps://rpubs.com/aaronsc32/anova-compare-more-than-two-groups\n\nWhat is the Tukey Test / Honest Significant Difference? - statisticshowto.com\n\nTukey's Test for Post-Hoc Analysis - Aaron Schlegel(2018)\n\nWATSON: Abstracting Behaviors from Audit Logs via Aggregation of Contextual Semantics - Jun Zeng, Zheng Leong Chua, Yinfang Chen, Kaihang Ji, Zhenkai Liang, Jian Mao\n\nTalks/Presentations/Videos\n\nTop 10 2015-2016 compromise patterns observed & how to use non-traditional Internet datasets to detect & avoid them - Arian J Evans, James Pleger(Derbycon2016)\n\nWe have seen a consistent set of patterns in attacker behaviors, and breach targets, over the last year. We often see where adversaries are repeat offenders - reusing the same recon techniques, and the same threat infrastructure (in new ways), to attack the same target again - if the target continues to play whack-a-mole treating hardening systems and investigating breaches as one-off events. This presentation will focus on the common patterns of compromise, and adversarial behavior in the early stages of the \"kill-chain\", leading up to the first attack. The goal for Red-teams & vuln-managers is to show how adversaries do recon and setup, to enable you to measure & manage your attack surface more realistically to how your adversaries will map it out. The goal for Blue-teams & IR is to show new patterns and pivots we see adversaries make, and what Internet security datasets you can use to pinpoint them.\n\nStringSifter: Learning to Rank Strings Output for Speedier Malware Analysis - Philip Tully, Matthew Haigh, Jay Gibble, Michael Sikorski(Derbycon2019)\n\nIn static analysis, one of the most useful initial steps is to inspect a binary's printable characters via the Strings program. However, running Strings on a piece of malware inevitably produces noisy strings mixed in with important ones, which can only be uncovered after sifting through the entirety of its messy output. To address this, we are releasing StringSifter: a machine learning-based tool that automatically ranks strings based on their relevance for malware analysis. In our presentation, we'll show how StringSifter allows analysts to conveniently focus on strings located towards the top of its predicted output, and that it performs well based on criteria used to evaluate web search and recommendation engines. We?ll also demonstrate StringSifter live in action on sample binaries.\n\nAnalytics Creation & Curation\n\nArticles/Blogposts/Writeups\n\nCoefficient of variation - Wikipedia\n\n\"In probability theory and statistics, the coefficient of variation (CV), also known as relative standard deviation (RSD), is a standardized measure of dispersion of a probability distribution or frequency distribution. It is often expressed as a percentage, and is defined as the ratio of the standard deviation <snip>to the mean<snip>.\"\n\nIntroducing Explainable Threat Intelligence - Tomislav Peričin(2020)\n\nLet's build a Full-Text Search engine - Artem Krylysov(2020)\n\nBuilding a full-text search engine in 150 lines of Python code - Bart de Goede(2021)\n\nHunting for anomalies with time-series analysis - m365guy(2021)\n\nEvadere Classifications - Jonathan Johnson(2021)\n\nPresenting Data\n\nHow to numerically represent semi-structured log data for anomaly detection? - Marcin Kowiel(PyData Warsaw2019)\n\nDatasets\n\nSecurity Datasets\n\nThe Security Datasets project is an open-source initiatve that contributes malicious and benign datasets, from different platforms, to the infosec community to expedite data analysis and threat research.\n\nPublic dataset of Cloudtrail logs from flaws.cloud - Scott Piper(2020)\n\nAPT29 Evals Detection Hackathon May 2nd, 2020\n\nSuricata PT Open Ruleset\n\nThe Attack Detection Team searches for new vulnerabilities and 0-days, reproduces it and creates PoC exploits to understand how these security flaws work and how related attacks can be detected on the network layer. Additionally, we are interested in malware and hackers’ TTPs, so we develop Suricata rules for detecting all sorts of such activities.\n\nVisualization\n\nWindows & Sysmon Events visualization using Neo4j & Python - Anastasios Chatziefstratiou(BSides København2021)\n\nMy presentation is divided in 2 parts, theory and tool demonstration. On the theory I will highlight the general idea behind the tool and how can help Cyber security teams. On the demonstration part, I will utilize my python3 script (Epimitheus) in order to import the Windows & Sysmon events as well as querying the Neo4j based on Mitre ATT&CK TTPs.\n\nVisualize Windows Logs With Neo4j - Pwntario Team(2020)\n\nTools\n\nDanger-Zone\n\nCorrelate data between domains, IPs and email addresses, present it as a graph and store everything into Elasticsearch and JSON files.\n\nfreq\n\nfrequency analysis script;\n\n\"While sitting in SANS SEC511 I listened to @sethmisenar laement the difficulty in using existing tools to detect DGA (Domain Generation Algorithm) hostnames often used by malware. There are lots of AI based tools out there that do this but some are rather complex. I thought I could quickly write a tool that would work. In about 30 minutes I threw together some old code I had lying around from a SQL Injection tool I worked on and I had a working proof of concept. freq.py was born and it worked pretty well. A year later @securitymapper had me wrap it in a web interface so he could query it from a SIEM and then the tool took off. It turns out to be a pretty effective technique and gained some popularity and wide use! This is a rewrite of the tool that incorporates some lessons learned and performance enhancements.\"\n\nhuntlib\n\nA Python library to help with some common threat hunting data analysis operations\n\nFlare\n\nFlare is a network analytic framework designed for data scientists, security researchers, and network professionals. Written in Python, it is designed for rapid prototyping and development of behavioral analytics, and intended to make identifying malicious behavior in networks as simple as possible.\n\nBrim\n\nDesktop application to efficiently search and analyze super-structured data. Powered by Zed.\n\nEmail-Logs\n\nArticles/Blogposts/Writeups\n\nThreat Hunting and Detection with Email Logs - Mehmet Ergene(2020)\n\nHunt Experiences/Demonstrations of\n\nArticles/Blogposts/Writeups\n\nThreat Hunting with Python: Prologue and Basic HTTP Hunting - Dan Gunter(2017)\n\nPart 2: Detecting Nmap Behavior with Bro HTTP Logs\n\nPart 3: Taming SMB\n\nPart 4: Examining Microsoft SQL Based Historian Traffic\n\nWhat does APT Activity Look Like on macOS? - Jaron Bradley(2018)\n\nThreat Hunting Part 1: Improving Through Hunting - Dan Gunter\n\nPart 2: Hunting on ICS Networks\n\nActive Defense and the Hunting Maturity Model - Jamie Buening\n\nHunting Red Team Empire C2 Infrastructure - Chokepoint\n\nThreat Hunting for Ransomware with CarbonBlack Response and AnyRun - Manfred Chang(2021)\n\nTalks/Presentations/Papers\n\nLicense to Kill: Malware Hunting with the Sysinternals Tools\n\nDetect Me If You Can - Ben Ten(Derbycon2017)\n\nAs long as there is a \"Patch Tuesday\", and software has bugs, there will always be an attack vector to which defensive controls are unable to defend. This is because most defensive strategies have focused on stopping attacks at their initial vector. In this talk, I will go over how I attack and bypass most deflection controls and go under the detection radar. I will then highlight the areas where defenders can begin to build a detection defense which will identify attacker behavior regardless of the initial vector. I will run through attacks I have used, which bypass several deflective controls, and show you how you can create detection controls to detect me; that is, if you can.\n\nAdvanced Attack Detection - William Burgess, Matt Watkins(Securi-Tay2017)\n\nIn this talk, we’ll explain some of the technical concepts of threat hunting. We will be looking at what is beyond traditional signature detection – the likes of AV, IPS/IDS and SIEMs, which in our experience are ineffective – and detailing some of the ways you can catch real attackers in the act. As a case study, we’ll look at some of the specifics of common attack frameworks - the likes of Metasploit and Powershell Empire - walking through an example attack, and showing how they can be detected. From large-scale process monitoring to live memory analysis and anomaly detection techniques, we will cover some of the technical quirks when it comes to effective attack detection.\n\nLooking for Needles in Needlestacks w/ Threat Hunting Toolkit - Derek Banks & Ethan Robish(BHIS2021)\n\nSlides\n\n\"Ever feel lost when trying to perform a threat hunt on your network? Join us for a peek at a threat hunting scenario where we uncover an advanced command and control channel in a real network. We'll give you background on our threat hunting process, show you the techniques we use, and discuss the problems we encounter hunting modern networks. We'll even introduce you to a toolkit that has helped us become more effective by speeding up our process.\"\n\n(Malicious) Insider Hunting\n\nArticles/Blogposts/Writeups\n\nMore Behavioral Hunting and Insider Data Theft - Jack Crook(2021)\n\nTalks/Presentations/Papers\n\nMetrics\n\nThe Hunting Cycle and Measuring Success - findingbad.blogspot(2016)\n\nCreating & Tracking Threat Hunting Metrics - Josh Liburdi(2020)\n\nConfidently Measuring Attack Technique Coverage by Asking Better Questions - Matt Graeber(BSides Augusta2021)\n\nIf a tree falls down in the woods and no one is around to hear it, did it make a sound? I don’t know so let’s build a sensor to find out! What does a tree falling in the woods sound like? Does it sound different depending on the tree and the specific forest it’s in? Does it sound distinct from a deer falling on its face? Hyper-rational inquiring minds must know\n\nSerialization Attacks\n\nTools\n\nheyserial\n\nProgrammatically create hunting rules for deserialization exploitation with multiple keywords, gadget chains, object types, encodings, and rule types\n\nWebShells\n\nArticles/Blogposts/Writeups\n\nGhost in the shell: Investigating web shell attacks - MSDART/MSTIC(2020)\n\nTalks/Presentations/Videos\n\nHunting for Exploit Kits - Joe Desimone(Derbycon2016)\n\nHunting Webshells: Tracking TwoFace - Josh Bryant, Robert Falcone(Defcon19)\n\nTools\n\nthreathunting\n\nAssorted, MIT licensed, threat hunting rules from @bradleyjkemp\n\nTheThreatHuntLibrary\n\nA collection of organised hunts based of yaml files to create markdown pages for analyst use.\n\nAutonomousThreatSweep\n\nThe repository provides threat hunting queries for various threats/attacks that can be leveraged directly within the Securonix Snypr platform.\n\nWild Hunt\n\nA collection of tools and offensive techniques aimed at actively finding adversaries\n\nAdvanced hunting queries for Microsoft 365 Defender\n\nThis repo contains sample queries for advanced hunting in Microsoft 365 Defender. With these sample queries, you can start to experience advanced hunting, including the types of data that it covers and the query language it supports. You can also explore a variety of attack techniques and how they may be surfaced through advanced hunting.\n\nHunts - Threat Hunting Project\n\nThe ThreatHunting Project\n\nAn informational repo about hunting for adversaries in your IT environment.\n\ngrapl\n\nGrapl is a Graph Platform for Detection and Response with a focus on helping Detection Engineers and Incident Responders stop fighting their data and start connecting it. Grapl leverages graph data structures at its core to ensure that you can query and connect your data efficiently, model complex attacker behaviors for detection, and easily expand suspicious behaviors to encompass the full scope of an ongoing intrusion.\n\nOther\n\nESXi\n\nArticles/Writeups\n\nESXi Security Events Log Monitoring - communities.vmware\n\nAnalyze ESXi Logs for Security-Related Messages\n\nTools\n\nsexilog\n\nSexiLog is a specific ELK virtual appliance designed for vSphere environment\n\nICS\n\nArticles/Blogposts/Writeups\n\nTalks/Presentations/Papers\n\nHunting for Threats in Industrial Environments and Other Scary Places - Nick Tsamis(BSides Charm2019)\n\nThreat hunting in Industrial Control Systems is a proactive tactic that can be employed by network defenders to gain familiarity with network terrain and to seek out malicious behavior, presence of vulnerabilities, or otherwise unknown activity. Unique constraints in operational technology environments present significantly different challenges than more standard computing environments. This presentation provides the audience with an inside look into challenges that ICS threat hunters face.\n\nSlack\n\nSlack API Auditor\n\nProvides a quick method of collecting Slack access logs and integration logs, then forwards them via Logstash.\n\nOSQuery\n\n101\n\nosquery\n\nosquery is a SQL powered operating system instrumentation, monitoring, and analytics framework. Available for Linux, macOS, Windows, and FreeBSD.\n\nTable Schema v4.3\n\nGetting Started Documentation\n\nOptimizing Queries in OSQuery - Dennis Griffin(2018)\n\nArticles/Blogposts/Writeups\n\nosquery Across the Enterprise - Chris L(Palantir 2017)\n\nPalantir osquery Configuration The goal of this project is to provide a baseline template for any organization considering a deployment of osquery in a production environment.\n\nBlue Team Diary, Entry #1: Leveraging Osquery For Enhanced Incident Response & Threat Hunting - Dimitrios Bougioukas(2019)\n\nTalks/Presentations/Videos\n\nLeveraging Osquery For Enhanced Incident Response & Threat Hunting - Dimitrios Bougioukas(2019)\n\nThis video accompanies eLearnSecurity's Blue Team Diary, Entry #1: Leveraging Osquery For Enhanced Incident Response & Threat Hunting post on medium.\n\nOsquery across compliance, monitoring, risk and threat hunting - Hugh Neale(QueryCon2019)\n\nStories, use cases and lessons learnt from the front line: Hugh will demonstrate how powerful osquery is across compliance, monitoring, risk IAM and threat hunting. The goal is to help build a complete picture of your IT estate and security posture. This talk is aimed at IT and Security operations. Zercurity has been using osquery in production workloads from startups to listed companies. They use osquery for inventory management, monitoring, compliance, risk, vulnerability management and IAM to name a few. Hugh will share some of their takeaways over the last few years and tell you about some of the things you can build atop osquery.\n\nSlides\n\nMonitoring Ephemeral Infrastructure with osquery - Matt Jane(Querycon219)\n\nModern infrastructure and deployment methods, as well as web-scale infrastructure have brought about a new paradigm in infrastructure management. Short lived and ephemeral resources allow applications to scale up and down on demand. Unfortunately this means that one of the primary information gather methods of osquery, scheduled queries, becomes far less useful if queries are scheduled for a longer interval than the infrastructure will exist. This doesn’t mean osquery and scheduled queries are no longer useful, far from it. It simply means that we need to adjust our way of thinking a bit and adapt our methods of information gathering to overcome these new issues.\n\nSlides\n\nLinux security event monitoring with osquery - Alessandro Gario(Querycon2019)\n\nThis talk introduces security event monitoring on Linux, and our lessons learned from attempts to implement it within osquery. Our first experience with osquery event monitoring was rewriting its use of Auditd. In order to capture events within containers, we next implemented an event publisher based on eBPF. We discovered what works, what doesn’t, and some paths forward.\n\nHow osquery uses sqlite3 and rocksdb - Alex Malone(Querycon2019)\n\nWe will walk through a query from SQL to the logged JSON results, noting the important interactions with sqlite3 and rocksdb. For example, the processes table specifies an INDEX on pid. What does that entail, and how does it impact how the table generate() function is called? In this talk, listeners will gain insight into the sqlite3 virtual table API.\n\nTooling\n\nFleet Managers\n\nFleet\n\nFleet is the most widely used open-source osquery Fleet manager. Deploying osquery with Fleet enables live queries, and effective management of osquery infrastructure.\n\nDoorman\n\nDoorman is an osquery fleet manager that allows administrators to remotely manage the osquery configurations retrieved by nodes. Administrators can dynamically configure the set of packs, queries, and/or file integrity monitoring target paths using tags. Doorman takes advantage of osquery's TLS configuration, logger, and distributed read/write endpoints, to give administrators visibility across a fleet of devices with minimal overhead and intrusiveness.\n\nPlugins/Extensions\n\nosquery-go\n\nThis project contains Go bindings for creating osquery extensions in Go.\n\nosquery-python\n\nThis project contains the official Python bindings for creating osquery extensions in Python.\n\nbrosquery\n\nThis project builds an OSQuery module libbro.so for loading bro logs as tables in osquery.\n\nosquery extensions by Trail of Bits\n\nThis repository includes osquery extensions developed and maintained by Trail of Bits.\n\nQueries\n\nThreat Hunting & Incident Investigation with Osquery\n\n\"The objective of this repo is to share 100+ hunting queries (osquery) that will help cyber threat analysts (hunter/investigator) in their hunting or investigation exercises. Broadly, I have covered persistence, process interrogation, memory analysis, driver profiling, and other misc categories. Persistence and Process Interrogations queries map to the multiple tactics & techniques/sub-techniques of MITRE ATT&CK framework.\"\n\nIoC-Related\n\n101\n\nthreat-recognition\n\n\"I attempted to diagram everything I've learned about the problem-set of endpoint threat recognition over the past 2 years of research. (Final Draft)\"\n\nArticles/Blogposts/Writeups\n\nIndicator life cycle applied to threat hunting - Joseliyo(2021)\n\nPapers\n\nFrom TTP to IoC: Advanced Persistent Graphs for Threat Hunting - Aimad Berady, Mathieu Jaume, Valérie Viet Triem Tong, Gilles Guette(2021\n\nDefenders fighting against Advanced Persistent Threats need to discover the propagation area of an adversary as quickly as possible. This discovery takes place through a phase of an incident response operation called Threat Hunting, where defenders track down attackers within the compromised network. In this article, we propose a formal model that dissects and abstracts elements of an attack, from both attacker and defender perspectives. This model leads to the construction of two persistent graphs on a common set of objects and components allowing for (1) an omniscient actor to compare, for both defender and attacker, the gap in knowledge and perceptions; (2) the attacker to become aware of the traces left on the targeted network; (3) the defender to improve the quality of Threat Hunting by identifying false-positives and adapting logging policy to be oriented for investigations. In this article, we challenge this model using an attack campaign mimicking APT29, a real-world threat, in a scenario designed by the MITRE Corporation. We measure the quality of the defensive architecture experimentally and then determine the most effective strategy to exploit data collected by the defender in order to extract actionable Cyber Threat Intelligence, and finally unveil the attacker.\n\n'Dumb' Binary Analysis\n\nTypos and other obscurities that can be found inside Windows binaries - Hexacorn(2020)\n\nSig\n\nThe most powerful and customizable binary pattern scanner written in modern C++\n\nFile Analysis\n\nBinaryAlert\n\nBinaryAlert is an open-source serverless AWS pipeline where any file uploaded to an S3 bucket is immediately scanned with a configurable set of YARA rules. An alert will fire as soon as any match is found, giving an incident response team the ability to quickly contain the threat before it spreads.\n\nStreamAlert\n\nStreamAlert is a serverless, real-time data analysis framework which empowers you to ingest, analyze, and alert on data from any environment, using data sources and alerting logic you define. Computer security teams use StreamAlert to scan terabytes of log data every day for incident detection and response.\n\nYara\n\n101\n\nArticles/Blogposts/Writeups\n\nThreat Hunting With Yara Rules - Larosh Khan(2021)\n\nLogging\n\nArticles/Writeups\n\nIntroducing Network Error Logging - dcreager.net(2018)\n\nImproving Packet Capture Performance – 1 of 3 - Bill Stearns(2020)\n\nPart 2\n\nPart 3\n\nTalks/Presentations/Videos\n\nCollect All the Data - Protect All the Things - Aaron Rosenmund(Derbycon2019)\n\nProtecting all the things, all the time requires the collection and analysis of all the data. The range of threats is wide and can be highly advanced. To bring the sexy back to blue team, the next generation security operations team has too look across all the available data sources. Correlating of network, application, machine, and endpoint OS data events to find anomalous behavior and reduce false positives. This talk covers application of different methods of collection and analysis as well as the use of machine learning to generate behavioral anomalies that are incorporated into overall continuous monitoring capabilities to catch a variety of apt activity before a signature has been developed. This is not a vendor talk and nearly all tools discussed are open source and free.\n\nMonitoring\n\nArticles/Writeups\n\nMaking the Most of OSSEC\n\nUsing SiLK for Network Traffic Analysis\n\nCurrent State of Virtualizing Network Monitoring\n\nTalks/Presentations\n\nPassive IPS Reconnaissance and Enumeration - false positive (ab)use - Arron Finnon\n\nNetwork Intrusion Prevention Systems or NIPS have been plagued by \"False Positive\" issues almost since their first deployment. A \"False Positive\" could simply be described as incorrectly or mistakenly detecting a threat that is not real. A large amount of research has gone into using \"False Positive\" as an attack vector either to attack the very validity of an IPS system or to conduct forms of Denial of Service attacks. However the very reaction to a \"False Positive\" in the first place may very well reveal more detailed information about defences than you might well think.\n\nYou Pass Butter: Next Level Security Monitoring Through Proactivity\n\nFlow-Data\n\nTalks/Presentations/Videos\n\nGo with the Flow: Get Started with Flow Analysis Quickly and Cheaply - Jason Smith(2016\n\nSome people love buzzwords. I hate them personally. This is especially true for zazzy terms that describe things people have been doing or dealing with for ages. This talk will focus on setting up a next generation platform that will allow you to take control of big data, and hone your hunting skills at the same time. I'm kidding. Whats old is new again, so we're diving into some network flow data. I'll show you how to set it up quickly (less than 10 minutes) and for free (hardware not included). I'll also be showing you how to get started with analysis using some common and not-so-common situations.\n\nPapers\n\nNetwork Profiling Using Flow - (2012\n\nThis report provides a step-by-step guide for profiling—discovering public-facing assets on a network—using network flow (netflow) data. Netflow data can be used for forensic purposes, for finding malicious activity, and for determining appropriate prioritization settings. The goal of this report is to create a profile to see a potential attacker’s view of an external network. Readers will learn how to choose a data set, find the top assets and services with the most traffic on the network, and profile several services. A cas e study provides an example of the profiling process. The underlying concepts of using netflow data are presented so that readers can apply the approach to other cases. A reader using this repor t to profile a network can expect to end with a list of public-facing assets and the ports on which each is communicating and may also learn other pertinent information, such as external IP addresses, to which the asset is connecting. This report also provides ideas for using, maintaining, and reporting on findings. The appendices include an example profile and scripts for running the commands in the report. The scripts are a summary only and cannot replace reading and understanding this report.\n\nIDS/IPS Tools\n\nSnort\n\nSnort\n\nA free lightweight network intrusion detection system for UNIX and Windows.\n\nSnort FAQ\n\nSnort User Manual\n\nSnort Documentation\n\nBro/Zeek\n\n101\n\nZeek\n\nZeek is an open source software platform that provides compact, high-fidelity transaction logs, file content, and fully customized output to analysts, from the smallest home office to the largest, fastest research and commercial networks.\n\nZeek Quick Start Guide\n\nZeek Documentation\n\nTry Zeek in your browser!\n\nWriting Zeek Scripts\n\nArticles/Blogposts\n\nSimplifying Bro IDS Log Parsing with ParseBroLogs - Dan Gunter\n\nTools\n\nbro-intel-generator\n\nScript for generating Bro intel files from pdf or html reports\n\nbro-domain-generation\n\nDetect domain generation algorithms (DGA) with Bro. The module will regularly generate domains by any implemented algorithms and watch for those domains in DNS queries. This script only works with Bro 2.1+.\n\nExfil Framework\n\nThe Exfil Framework is a suite of Bro scripts that detect file uploads in TCP connections. The Exfil Framework can detect file uploads in most TCP sessions including sessions that have encrypted payloads (SCP,SFTP,HTTPS).\n\nbrim\n\nDesktop application to efficiently search large packet captures and Zeek logs.\n\nSuricata\n\n101\n\nSuricata\n\nSuricata is a high performance Network IDS, IPS and Network Security Monitoring engine. Open Source and owned by a community run non-profit foundation, the Open Information Security Foundation (OISF).\n\nSuricata Documentation\n\nSuricata Quick Start Guide\n\nSuricata Installation Guides for various platforms\n\nSetting up Suricata on a Microtik Router\n\nRulesets\n\nCreating\n\nDeveloping complex Suricata rules with Lua – part 1 - Didier Stevens(2017)\n\nPart 2\n\nRepos\n\nsuricata-rules\n\nArgus\n\nArgus\n\nArgus is an open source layer 2+ auditing tool (including IP audit) written by Carter Bullard which has been under development for over 10 years.\n\nArgus on NSM Wiki\n\nArgus FAQ\n\nArgus How-To\n\nArgus Manual\n\nOther\n\nMaltrail\n\nMaltrail is a malicious traffic detection system, utilizing publicly available (black)lists containing malicious and/or generally suspicious trails, along with static trails compiled from various AV reports and custom user defined lists, where trail can be anything from domain name (e.g. zvpprsensinaix.com for Banjori malware), URL (e.g. http://109.162.38.120/harsh02.exe for known malicious executable), IP address (e.g. 185.130.5.231 for known attacker) or HTTP User-Agent header value (e.g. sqlmap for automatic SQL injection and database takeover tool). Also, it uses (optional) advanced heuristic mechanisms that can help in discovery of unknown threats (e.g. new malware).\n\nIDS/IPS Monitoring Tools\n\nSnorby\n\nSnorby - Github\n\nSnorby is a ruby on rails web application for network security monitoring that interfaces with current popular intrusion detection systems (Snort, Suricata and Sagan). The basic fundamental concepts behind Snorby are simplicity, organization and power. The project goal is to create a free, open source and highly competitive application for network monitoring for both private and enterprise use.\n\nSquil\n\nSguil (pronounced sgweel) is built by network security analysts for network security analysts. Sguil's main component is an intuitive GUI that provides access to realtime events, session data, and raw packet captures. Sguil facilitates the practice of Network Security Monitoring and event driven analysis. The Sguil client is written in tcl/tk and can be run on any operating system that supports tcl/tk (including Linux, * BSD, Solaris, MacOS, and Win32).\n\nSquil FAQ\n\nSquert\n\nSquert is a web application that is used to query and view event data stored in a Sguil database (typically IDS alert data). Squert is a visual tool that attempts to provide additional context to events through the use of metadata, time series representations and weighted and logically grouped result sets. The hope is that these views will prompt questions that otherwise may not have been asked.\n\nSlide Deck on Squert\n\nInstall/setup/etc - Github\n\nPCAPs\n\nSigma\n\nSigma\n\nSigma is a generic and open signature format that allows you to describe relevant log events in a straight forward manner. The rule format is very flexible, easy to write and applicable to any type of log file. The main purpose of this project is to provide a structured form in which researchers or analysts can describe their once developed detection methods and make them shareable with others. Sigma is for log files what Snort is for network traffic and YARA is for files.\n\nSigma Specification\n\nHow to Write Sigma Rules - Florian Roth\n\nSigma - Generic Signatures for Log Events - Thomas Patzke(Hack.lu2017)\n\nLog files are a great resource for hunting threats and analysis of incidents. Unfortunately, there is no standardized signature format like YARA for files or Snort signatures for network traffic. This makes sharing of log signatures by security researchers and software developers problematic. Further, most SIEM systems have their own query language, which makes signature distribution in large heterogeneous environments inefficient and increases costs for replacement of SIEM solutions.Sigma tries to fill these gaps by providing a YAML-based format for log signatures, an open repository of signatures and an extensible tool that converts Sigma signatures into different query languages. Rules and tools were released as open source and are actively developed. This presentation gives an overview about use cases, Sigma rules and the conversion tool, the development community and future plans of the project.\n\nMITRE ATT&CK and Sigma Alerting - Justin Henderson, John Hubbard(2019)\n\nThis webcast will introduce the Sigma Alert project and show examples of creating alert rules against MITRE ATT&CK framework items to discover attacks in a way that works for multiple products. Sigma allows for writing rules in a neutral rule format that supports converting the rule to support your product of choice.\n\nTraffic Analysis\n\nBehavioral Analysis using DNS, Network Traffic and Logs, Josh Pyorre (@joshpyorre)\n\nMultiple methods exist for detecting malicious activity in a network, including intrusion detection, anti-virus, and log analysis. However, the majority of these use signatures, looking for already known events and they typically require some level of human intervention and maintenance. Using behavioral analysis methods, it may be possible to observe and create a baseline of average behavior on a network, enabling intelligent notification of anomalous activity. This talk will demonstrate methods of performing this activity in different environments. Attendees will learn new methods which they can apply to further monitor and secure their networks\n\nDNS\n\nNetwork Forensics with Windows DNS Analytical Logging\n\nSMB\n\nAn Introduction to SMB for Network Security Analysts - 401trg\n\nTLS\n\nTLS client fingerprinting with Bro\n\nTalk/Presentation\n\nIn this talk we will show the benefits of SSL fingerprinting, JA3’s capabilities, and how best to utilize it in your detection and response operations. We will show how to utilize JA3 to find and detect SSL malware on your network. Imagine detecting every Meterpreter shell, regardless of C2 and without the need for SSL interception. We will also announce JA3S, JA3 for SSL server fingerprinting. Imagine detecting every Metasploit Multi Handler or [REDACTED] C2s on AWS. Then we’ll tie it all together, making you armed to the teeth for detecting all things SSL.\n\nTools\n\nRITA - Real Intelligence Threat Analytics\n\nRITA is an open source network traffic analysis framework.\n\nRITA - Finding Bad Things on Your Network Using Free and Open Source Tools\n\nGeneral\n\nDNSpop\n\nTools to find popular trends by analysis of DNS data. For more information, see my blog post on the most popular subdomains on the internet. Hit the results directory to get straight to the data.\n\nYeti\n\nYeti is a platform meant to organize observables, indicators of compromise, TTPs, and knowledge on threats in a single, unified repository. Yeti will also automatically enrich observables (e.g. resolve domains, geolocate IPs) so that you don't have to. Yeti provides an interface for humans (shiny Bootstrap-based UI) and one for machines (web API) so that your other tools can talk nicely to it.\n\nMalcom - Malware Communication Analyzer\n\nMalcom is a tool designed to analyze a system's network communication using graphical representations of network traffic, and cross-reference them with known malware sources. This comes handy when analyzing how certain malware species try to communicate with the outside world.\n\nBeaconBits\n\nBeacon Bits is comprised of analytical scripts combined with a custom database that evaluate flow traffic for statistical uniformity over a given period of time. The tool relies on some of the most common characteristics of infected host persisting in connection attempts to establish a connection, either to a remote host or set of host over a TCP network connection. Useful to also identify automation, host behavior that is not driven by humans.\n\nGeneral Tools\n\nGeneral\n\nSecurity Onion\n\nSecurity Onion is a Linux distro for intrusion detection, network security monitoring, and log management. It's based on Ubuntu and contains Snort, Suricata, Bro, OSSEC, Sguil, Squert, Snorby, ELSA, Xplico, NetworkMiner, and many other security tools. The easy-to-use Setup wizard allows you to build an army of distributed sensors for your enterprise in minutes!\n\nBandwidth\n\nbmon - bandwidth monitor and rate estimator\n\nbmon is a monitoring and debugging tool to capture networking related statistics and prepare them visually in a human friendly way. It features various output methods including an interactive curses user interface and a programmable text output for scripting.\n\nData Tranformation\n\nPip3line, the Swiss army knife of byte manipulation\n\nPip3line is a raw bytes manipulation utility, able to apply well known and less well known transformations from anywhere to anywhere (almost).\n\ndnstwist\n\nDomain name permutation engine for detecting typo squatting, phishing and corporate espionage\n\nDNS\n\nDNSChef\n\nDNSChef is a highly configurable DNS proxy for Penetration Testers and Malware Analysts. A DNS proxy (aka \"Fake DNS\") is a tool used for application network traffic analysis among other uses. For example, a DNS proxy can be used to fake requests for \"badguy.com\" to point to a local machine for termination or interception instead of a real host somewhere on the Internet.\n\nPassive DNS\n\nA tool to collect DNS records passively to aid Incident handling, Network Security Monitoring (NSM) and general digital forensics. * PassiveDNS sniffs traffic from an interface or reads a pcap-file and outputs the DNS-server answers to a log file. PassiveDNS can cache/aggregate duplicate DNS answers in-memory, limiting the amount of data in the logfile without losing the essense in the DNS answer.\n\nHTTP Traffic\n\nCaptipper\n\nCapTipper is a python tool to analyze, explore and revive HTTP malicious traffic. CapTipper sets up a web server that acts exactly as the server in the PCAP file, and contains internal tools, with a powerful interactive console, for analysis and inspection of the hosts, objects and conversations found.\n\nPCAPs/Packet Capture\n\nCapLoader\n\nCapLoader is a Windows tool designed to handle large amounts of captured network traffic. CapLoader performs indexing of PCAP/PcapNG files and visualizes their contents as a list of TCP and UDP flows. Users can select the flows of interest and quickly filter out those packets from the loaded PCAP files. Sending the selected flows/packets to a packet analyzer tool like Wireshark or NetworkMiner is then just a mouse click away.\n\nNetdude\n\nThe Network Dump data Displayer and Editor is a framework for inspection, analysis and manipulation of tcpdump trace files. It addresses the need for a toolset that allows easy inspection, modification, and creation of pcap/tcpdump trace files. Netdude builds on any popular UNIX-like OS, such as Linux, the BSDs, or OSX.\n\nStenographer\n\nStenographer is a full-packet-capture utility for buffering packets to disk for intrusion detection and incident response purposes. It provides a high-performance implementation of NIC-to-disk packet writing, handles deleting those files as disk fills up, and provides methods for reading back specific sets of packets quickly and easily.\n\nPCAPDB\n\nPcapDB is a distributed, search-optimized open source packet capture system. It was designed to replace expensive, commercial appliances with off-the-shelf hardware and a free, easy to manage software system. Captured packets are reorganized during capture by flow (an indefinite length sequence of packets with the same src/dst ips/ports and transport proto), indexed by flow, and searched (again) by flow. The indexes for the captured packets are relatively tiny (typically less than 1% the size of the captured data).\n\nNetwork Miner\n\nNetworkMiner is a Network Forensic Analysis Tool (NFAT) for Windows (but also works in Linux / Mac OS X / FreeBSD). NetworkMiner can be used as a passive network sniffer/packet capturing tool in order to detect operating systems, sessions, hostnames, open ports etc. without putting any traffic on the network. NetworkMiner can also parse PCAP files for off-line analysis and to regenerate/reassemble transmitted files and certificates from PCAP files.\n\nSilLK\n\nSilk\n\nThe SiLK analysis suite is a collection of command-line tools for processing SiLK Flow records created by the SiLK packing system. These tools read binary files containing SiLK Flow records and partition, sort, and count these records. The most important analysis tool is rwfilter, an application for querying the central data repository for SiLK Flow records that satisfy a set of filtering options. The tools are intended to be combined in various ways to perform an analysis task. A typical analysis uses UNIX pipes and intermediate data files to share data between invocations of the tools.\n\nAdministering/Installing SiLK\n\nSiLK Tool Tips\n\nSiLK Reference Guide\n\nSiLK Toolsuite Quick Reference Guide\n\nflowbat\n\nAwesome flow tool, SiLK backend\n\nShellCode Analysis\n\nShellcode Analysis Pipeline\n\nI recently required an automated way of analyzing shellcode and verifying if it is detected by Libemu, Snort, Suricata, Bro, etc. Shellcode had to come from public sources like Shell-Storm, Exploit-DB and Metasploit. I needed an automated way of sourcing shellcode from these projects and pass it on to the analysis engines in a pipeline-like mechanism. This posts documents the method I used to complete this task and the overall progress of the project.\n\nDetection Engineering\n\nFYI\n\nlooking for JARM/JA3/Etc? Look at the section below, I've broken things out by protocol\n\nTools\n\nRecog: A Recognition Framework\n\nRecog is a framework for identifying products, services, operating systems, and hardware by matching fingerprints against data returned from various network probes. Recog makes it simple to extract useful information from web server banners, snmp system description fields, and a whole lot more.\n\nPapers * A Taxonomy of Network Threats and the Effect of Current Datasets on Intrusion Detection Systems - Hanan Hindy, David Brosset, Ethan Bayne, Amar Kumar Seeam, Christos Tachtatzis, Robert Atkinson, Xavier Bellekens(2020) * As the world moves towards being increasingly dependent on computers and automation, building secure applications, systems and networks are some of the main challenges faced in the current decade. The number of threats that individuals and businesses face is rising exponentially due to the increasing complexity of networks and services of modern networks. To alleviate the impact of these threats, researchers have proposed numerous solutions for anomaly detection; however, current tools often fail to adapt to ever-changing architectures, associated threats and zero-day attacks. This manuscript aims to pinpoint research gaps and shortcomings of current datasets, their impact on building Network Intrusion Detection Systems (NIDS) and the growing number of sophisticated threats. To this end, this manuscript provides researchers with two key pieces of information; a survey of prominent datasets, analyzing their use and impact on the development of the past decade's Intrusion Detection Systems (IDS) and a taxonomy of network threats and associated tools to carry out these attacks. The manuscript highlights that current IDS research covers only 33.3% of our threat taxonomy. Current datasets demonstrate a clear lack of real-network threats, attack representation and include a large number of deprecated threats, which together limit the detection accuracy of current machine learning IDS approaches. The unique combination of the taxonomy and the analysis of the datasets provided in this manuscript aims to improve the creation of datasets and the collection of real-world data. As a result, this will improve the efficiency of the next generation IDS and reflect network threats more accurately within new datasets.\n\nThreat Hunting\n\n101\n\nAwesome Network Analysis\n\nA curated list of awesome network analysis resources.\n\nArticles/Writeups\n\nPart 1: Threat hunting with BRO/Zeek and EQL - Spartan2194(2019)\n\nPart 2: Intro to Threat Hunting – Understanding the attacker mindset with Powershell Empire and the Mandiant Attack Lifecycle - Spartan2194(2020)\n\nDNS based threat hunting and DoH (DNS over HTTPS) - blog.redteam.pl(2019)\n\nSeeing (Sig)Red - Felipe Molina de la Torre(2020)\n\nTalks & Presentations\n\nTop 8 Things to Analyze in When Monitoring Outgoing Connections to Detect Compromised System - Randy Franklin\n\nIn this webinar, Randy Franklin Smith of Ultimate Windows Security, discusses the Top 8 Things to Analyze while monitoring outgoing connections from your network to the Internet: Reputation of destination IPs and domains; DNS queries from clients on your network; Suspect traffic patterns; Unrecognized protocols; Masquerading protocols; Known signatures; Prohibited protocols; DLP indicators\n\nTales from the Network Threat Hunting Trenches - BHIS\n\nIn this webcast John walks through a couple of cool things we’ve found useful in some recent network hunt teams. He also shares some of our techniques and tools (like RITA) that we use all the time to work through massive amounts of data. There are lots of awesome websites that can greatly increase the effectiveness of your in network threat hunting.\n\nNetwork gravity: Exploiring a enterprise network - Casey Martin(BSides Tampa2020)\n\nEnterprise networks are often complex, hard to understand, and worst of all - undocumented. Few organizations have network diagrams and asset management systems and even fewer organizations have those that are effective and up to date. Leveraging an organization's SIEM or logging solution, network diagrams and asset inventories can be extrapolated from this data through the 'gravity' of the network. Similar to our solar system and galaxy, even if you cannot confirm or physically see an object, you can measure the forces of gravity it exerts on the observable objects around it that we do know about. For example, unconfirmed endpoints can be enumerated by the authentication activity they register on known domain controllers. The inferred list of endpoints and their network addresses can begin to map out logical networks. The unpolished list of logical networks can be mapped against known egress points to identify physical networks and potentially identify undiscovered egress points and the technologies that exist at the egress points. As more objects are extrapolated and inferred, the more accurate the model of your enterprise network will become. Through this iterative and repeatable process, network diagrams and asset inventories can be drafted, further explored, refined, and ultimately managed. Even the weakest of observable forces can create fingerprints that security professionals can leverage to more effectively become guardians of the galaxy.\n\nPapers\n\nHeadPrint: Detecting Anomalous Communications through Header-based Application Fingerprinting - Riccardo Bortolameotti, Thijs van Ede, Andrea Continella, Thomas Hupperich, Maarten H. Everts, Reza Rafati, Willem Jonker, Pieter Hartel, Andreas Peter(2020)\n\nUnder the Shadow of Sunshine: Understanding and Detecting Bulletproof Hosting on Legitimate Service Provider Networks - Sumayah Alrwais, Xiaojing Liao, Xianghang Mi, Peng Wang, XiaoFeng Wang, Feng Qian, Raheem Beyah, Damon McCoy\n\nIn this paper, we present the first systematic study on thisnew trend of BPH services. By collecting and analyzing a large amount of data (25 Whois snapshots of the entire IPv4 addressspace, 1.5 TB of passive DNS data, and longitudinal data fromseveral blacklist feeds), we are able to identify a set of newfeatures that uniquely characterizes BPH on sub-allocations and are costly to evade. Based upon these features, we train a classifierfor detecting malicious sub-allocated network blocks, achieving a 98% recall and 1.5% false discovery rates according to our evaluation. Using a conservatively trained version of our classifier,we scan the whole IPv4 address space and detect 39K malicious network blocks. This allows us to perform a large-scale study ofthe BPH service ecosystem, which sheds light on this underground business strategy, including patterns of network blocks being recycled and malicious clients migrating to different network blocks, in an effort to evade IP address based blacklisting. Our study highlights the trend of agile BPH services and points to potential methods of detecting and mitigating this emerging threat.\n\nProtocol Agnostic\n\nArticles/Writeups\n\nPCAP Command-Line Madness! - Hal Pomeranz()\n\nTools\n\nfatt\n\nA script for extracting network metadata and fingerprints such as JA3 and HASSH from packet capture files (pcap) or live network traffic. The main use-case is for monitoring honeypots, but you can also use it for other use cases such as network forensic analysis. fatt works on Linux, macOS and Windows.\n\nBruteShark\n\nBruteShark is a Network Forensic Analysis Tool (NFAT) that performs deep processing and inspection of network traffic (mainly PCAP files, but it also capable of directly live capturing from a network interface). It includes: password extracting, building a network map, reconstruct TCP sessions, extract hashes of encrypted passwords and even convert them to a Hashcat format in order to perform an offline Brute Force attack.\n\nDNS\n\nArticles/Writeups\n\nDetecting DNS Tunneling - Greg Farnham(2013)\n\nHunting the Known Unknowns (with DNS) - Ryan Kovar, Steve Brant(2015)\n\nRandom Words on Entropy and DNS - Ryan Kovar(2015)\n\nSuspicious Domains Tracking Dashboard - Xavier Mertens(2017)\n\nProactive Malicious Domain Search - Xavier Mertens(2017)\n\nDNS is NOT Boring! Using DNS to Expose and Thwart Attacks - Rod Rasmussen(FIRST 2017)\n\nHunting Your DNS Dragons - Derek King(2018)\n\nFiltering out top 1 million domains from corporate network traffic - Dan Ramaan(2018)\n\nThreat hunting using DNS firewalls and data enrichment - Adam Ziaja(2019\n\nPassive (Aggressive) DNS - Donald \"Mac\" McCarthy(Derpcon2020)\n\ntlds_hunt.py\n\nwell hunting for tld's is what we do\n\nHunting for Suspicious DNS Communications - Moath Maharmeh(2022)\n\nTalks/Presentations/Videos\n\nDoH! DNS over HTTPS: for Attackers and Defenders - Marcus W Tonsmann(WWHF2020)\n\nDoH is coming. This talk will prepare you by covering the basics of the protocol, available tools for testers, and techniques being leveraged by real adversaries. Proactive defensive measures will also be discussed, with an eye towards the future.\n\nHTTP/S\n\nArticles/Writeups\n\nAn Introduction to HTTP fingerprinting - Saumil Shah(2004)\n\nHTTP Client Fingerprinting Using SSL Handshake Analysis - Qualys SSL Labs\n\nWireshark Tutorial: Decrypting HTTPS Traffic - Brad Duncan(2020\n\nTalks/Presentations/Videos\n\nTools\n\nOS Fingerprinting\n\nArticles/Writeups\n\nDerevolutionizing OS Fingerprinting cat and mouse game - Jaime Sanchez(DEFCON27 Recon Village)\n\nTalks/Presentations/Videos\n\nTools\n\nNeighbor Cache Fingerprinter\n\nThis tool provides a mechanism for remote operating system detection by extrapolating characteristics of the target system's underlying Neighbor Cache and general ARP behavior. Given the non-existence of any standard specification for how the Neighbor Cache should behave, there several differences in operating system network stack implementations that can be used for unique identification.\n\nOSfooler-ng\n\nOSfooler-ng prevents remote active/passive OS fingerprinting by tools like nmap or p0f\n\nQUIC\n\nArticles/Writeups\n\nGQUIC Protocol Analysis and Fingerprinting in Zeek - Caleb Yu(2022)\n\nTalks/Presentations/Videos\n\nTools\n\nGQUIC Protocol Analyzer\n\nGQUIC Protocol Analyzer for Zeek (Bro) Network Security Monitor\n\nRDP\n\nArticles/Writeups\n\nRDP Fingerprinting - Adel Ka(2019)\n\nTalks/Presentations/Videos\n\nSeeing the Invisible: Finding Fingerprints on Encrypted Traffic - Adel Karimi(KawaiiCon2019)\n\nSlides\n\nTools\n\nSSH\n\nArticles/Writeups\n\nOpen Sourcing HASSH - Ben Reardon(2018)\n\nTalks/Presentations/Videos\n\n\"SSH, so hot right now. Profiling it with HASSH\" - Ben Reardon & Adel Karimi(BSides Canberra(2019)\n\nSlides\n\nHASSH - a Profiling Method for SSH Clients and Servers - Ben Reardon(ACoD2019)\n\nSlides\n\nTools\n\nHASSH\n\n\"HASSH\" is a network fingerprinting standard which can be used to identify specific Client and Server SSH implementations. The fingerprints can be easily stored, searched and shared in the form of an MD5 fingerprint.\n\nhassh-utils\n\nNmap NSE Script and Docker image for HASSH - the SSH client/server fingerprinting method\n\nTLS\n\nArticles/Writeups\n\nTLS fingerprinting: Smarter Defending & Stealthier Attacking - SquareLemon(2015)\n\nTLS Fingerprinting with JA3 and JA3S - John Althouse\n\nEasily Identify Malicious Servers on the Internet with JARM - John Althouse(2021)\n\nEffective TLS Fingerprinting Beyond JA3 - ntop.org\n\nHunting Koadic Pt. 2 - JARM Fingerprinting - Pat H(2020)\n\nTLS Fingerprint\n\n\"We collect anonymized TLS Client Hello messages from the University of Colorado Boulder campus network, in order to measure the popularity of various implementations actually used in practice.\"\n\nTLS Fingerprinting in the Real World - Blake Anderson(2019)\n\nTalks/Presentations/Videos\n\nPapers\n\nHTTPS traffic analysis and client identification using passive SSL/TLS fingerprinting - Martin Husák1, Milan Čermák1, Tomáš Jirsík1, Pavel Čeleda(2016)\n\n\"The encryption of network traffic complicates legitimate network monitoring, traffic analysis, and network forensics. In this paper, we present real-time lightweight identification of HTTPS clients based on network monitoring and SSL/TLS fingerprinting. Our experiment shows that it is possible to estimate the User-Agent of a client in HTTPS communication via the analysis of the SSL/TLS handshake. The fingerprints of SSL/TLS handshakes, including a list of supported cipher suites, differ among clients and correlate to User-Agent values from a HTTP header. We built up a dictionary of SSL/TLS cipher suite lists and HTTP User-Agents and assigned the User-Agents to the observed SSL/TLS connections to identify communicating clients. The dictionary was used to classify live HTTPS network traffic. We were able to retrieve client types from 95.4 % of HTTPS network traffic. Further, we discussed host-based and network-based methods of dictionary retrieval and estimated the quality of the data.\"\n\nThe use of TLS in Censorship Circumvention - Sergey Frolov, Eric Wustrow(2019)\n\nIn this paper, we collect and analyze real-world TLS traffic from over 11.8 billion TLS connections over 9 months to identify a wide range of TLS client implementations actually used on the Internet. We use our data to analyze TLS implementations of several popular censorship circumvention tools, including Lantern, Psiphon, Signal, Outline, TapDance, and Tor (Snowflake and meek pluggable transports). We find that the many of these tools use TLS configurations that are easily distinguishable from the real-world traffic they attempt to mimic, even when these tools have put effort into parroting popular TLS impl"
    }
}