{
    "id": "dbpedia_442_2",
    "rank": 92,
    "data": {
        "url": "https://www.computerhistory.org/revolution/digital-logic/12/269",
        "read_more_link": "",
        "language": "en",
        "title": "How Do Digital Computers “Think”?",
        "top_image": "http://images.computerhistory.org/revonline/images/500004702-03-01.jpg?w=600",
        "meta_img": "",
        "images": [
            "http://images.computerhistory.org/revonline/images/102681565p-03-01.jpg?w=600",
            "http://images.computerhistory.org/revonline/images/102681565p-03-01.jpg?w=48",
            "http://images.computerhistory.org/revonline/images/102681565p-03-02.jpg?w=48",
            "http://images.computerhistory.org/revonline/images/102681565p-03-03.jpg?w=48",
            "http://images.computerhistory.org/revonline/images/500004702-03-01.jpg?w=600",
            "http://images.computerhistory.org/revonline/images/500004323-03-01.jpg?w=600",
            "http://images.computerhistory.org/revonline/images/500004365-05-01.jpg?w=600",
            "http://images.computerhistory.org/revonline/images/102716233p-03-01.jpg?w=600",
            "http://images.computerhistory.org/revonline/images/102716243p-03-01.jpg?w=600",
            "http://images.computerhistory.org/revonline/images/102647854p-03-01.jpg?w=600",
            "https://www.computerhistory.org/revolution/images/feed-icon-14x14.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "People"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "How Do Digital Computers “Think”?All digital computers rely on a binary system of ones and zeros, and on rules of logic set out in the 1850s by English mathematician George Boole. A computer can represent the binary digits (bits) zero and one mechanically with wheel or lever positions, or electronically with voltage or current. The underlying math remains the same.  Bit sequences can represent numbers or letters.",
        "meta_lang": "",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "All digital computers rely on a binary system of ones and zeros, and on rules of logic set out in the 1850s by English mathematician George Boole.\n\nA computer can represent the binary digits (bits) zero and one mechanically with wheel or lever positions, or electronically with voltage or current. The underlying math remains the same. Bit sequences can represent numbers or letters.\n\nBoolean Logic\n\nJust three operations (specifying AND, OR, and NOT) can perform all logic functions. So argued self-taught mathematician George Boole in his 1847 work, The Mathematical Analysis of Logic. In 1854, as Professor of Mathematics at Queens College, Ireland, Boole expanded his concept in An Investigation of the Laws of Thought.\n\nFor decades, Boole’s ideas had no apparent practical use. His work was largely ignored until applied by Claude Shannon to telephone switch design in the 1930s. Today it is called Boolean Algebra, a foundation of digital logic.\n\nPutting Boolean Logic to Work\n\nClaude Shannon encountered George Boole’s ideas in a college philosophy class in the 1930s. He recognized its value for real world problems.\n\nShannon’s 1937 MIT master’s thesis, A Symbolic Analysis of Relay and Switching Circuits, applied Boolean algebra to the design of logic circuits using electromechanical relays. Shannon is also remembered for a seminal 1948 paper on information theory, A Mathematical Theory of Communication.\n\nClaude Shannon wasn’t the first to apply Boole’s concepts. Victor Shestakov proposed similar ideas in 1935, but didn’t publish until 1941—and then only in Russian.\n\nWhat Makes A Computer Circuit?\n\nComputer circuits are built from simple elements called “gates,” made from either mechanical or electronic switches. They operate according to Boolean algebra to determine the value of an output signal (one or zero), or to save a value in a “flip-flop,” a storage unit built from several gates.\n\nThree basic gate types are AND, OR, and NOT. But others, such as NAND (NOT AND), can by themselves form any computer circuit, including those for arithmetic, memory, and executing instructions. Modern computers have the equivalent of hundreds of millions of NAND gates."
    }
}