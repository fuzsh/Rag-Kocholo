{
    "id": "dbpedia_5041_2",
    "rank": 23,
    "data": {
        "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/align-items",
        "read_more_link": "",
        "language": "en",
        "title": "align-items - CSS: Cascading Style Sheets",
        "top_image": "https://developer.mozilla.org/mdn-social-share.cd6c4a5a.png",
        "meta_img": "https://developer.mozilla.org/mdn-social-share.cd6c4a5a.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-08-08T11:52:10+00:00",
        "summary": "",
        "meta_description": "The CSS align-items property sets the align-self value on all direct children as a group. In flexbox, it controls the alignment of items on the cross axis. In grid layout, it controls the alignment of items on the block axis within their grid areas.",
        "meta_lang": "en",
        "meta_favicon": "/favicon-48x48.cbbd161b.png",
        "meta_site_name": "MDN Web Docs",
        "canonical_link": "https://developer.mozilla.org/en-US/docs/Web/CSS/align-items",
        "text": "normal\n\nThe effect of this keyword is dependent of the layout mode we are in:\n\nIn absolutely-positioned layouts, the keyword behaves like start on replaced absolutely-positioned boxes, and as stretch on all other absolutely-positioned boxes.\n\nIn static position of absolutely-positioned layouts, the keyword behaves as stretch.\n\nFor flex items, the keyword behaves as stretch.\n\nFor grid items, this keyword leads to a behavior similar to the one of stretch, except for boxes with an aspect ratio or an intrinsic sizes where it behaves like start.\n\nThe property doesn't apply to block-level boxes, and to table cells.\n\ncenter\n\nThe flex items' margin boxes are centered within the line on the cross-axis. If the cross-size of an item is larger than the flex container, it will overflow equally in both directions.\n\nstart\n\nThe items are packed flush to each other toward the start edge of the alignment container in the appropriate axis.\n\nend\n\nThe items are packed flush to each other toward the end edge of the alignment container in the appropriate axis.\n\nself-start\n\nThe items are packed flush to the edge of the alignment container's start side of the item, in the appropriate axis.\n\nself-end\n\nThe items are packed flush to the edge of the alignment container's end side of the item, in the appropriate axis.\n\nbaseline, first baseline, last baseline\n\nAll flex items are aligned such that their flex container baselines align. The item with the largest distance between its cross-start margin edge and its baseline is flushed with the cross-start edge of the line.\n\nstretch\n\nIf the items are smaller than the alignment container, auto-sized items will be equally enlarged to fill the container, respecting the items' width and height limits.\n\nanchor-center\n\nIn the case of anchor-positioned elements, aligns the items to the center of the associated anchor element in the block direction. See Centering on the anchor using anchor-center.\n\nsafe\n\nUsed alongside an alignment keyword. If the chosen keyword means that the item overflows the alignment container causing data loss, the item is instead aligned as if the alignment mode were start.\n\nunsafe\n\nUsed alongside an alignment keyword. Regardless of the relative sizes of the item and alignment container and whether overflow which causes data loss might happen, the given alignment value is honored."
    }
}