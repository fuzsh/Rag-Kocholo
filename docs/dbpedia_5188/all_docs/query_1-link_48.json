{
    "id": "dbpedia_5188_1",
    "rank": 48,
    "data": {
        "url": "https://docs.newrelic.com/docs/nrql/using-nrql/query-time-range/",
        "read_more_link": "",
        "language": "en",
        "title": "Set a query's time range",
        "top_image": "https://docs.newrelic.com/favicon-32x32.png?v=c6adf0dad65cc1d73c93c5e0b1680678",
        "meta_img": "https://docs.newrelic.com/favicon-32x32.png?v=c6adf0dad65cc1d73c93c5e0b1680678",
        "images": [
            "https://px.ads.linkedin.com/collect/?pid=7273&fmt=gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "A detailed description of how to set the timerange of a NRQL query.",
        "meta_lang": "en",
        "meta_favicon": "/favicon-32x32.png?v=c6adf0dad65cc1d73c93c5e0b1680678",
        "meta_site_name": "",
        "canonical_link": "https://docs.newrelic.com/docs/nrql/using-nrql/query-time-range/",
        "text": "We created NRQL to query telemetry data, and every query made with NRQL only considers telemetry data that falls within a specified time range. If a query request doesn't specify a time range, it defaults to reporting the last hour of telemetry data by default. Fortunately, we have multiple ways to set time ranges for your query so that you can get exactly the data you need from precise buckets of time.\n\nSpecify a time range\n\nYou can use two methods to specify the time range in your queries:\n\nUse the dashboard time picker. When viewing a dashboard, the time picker's range supersedes a query's SINCE and UNTIL clauses, unless you've configured the dashboard widgets to disable the time picker.\n\nInclude SINCE and/or UNTIL. For example:\n\nFROM Foo SELECT* SINCE 2 days ago UNTIL 1day ago\n\nSee the Specifying a time section below for a list of supported time formats.\n\nUse time range snapping\n\nYou can sometimes adjust the specified SINCE and UNTIL times depending on the type of query you run with either metric or TIMESERIES range snapping.\n\nMetric query snapping\n\nQueries with metric events and some sample event types may need to adjust the time range based on the metric's roll-up time aggregations. For example:\n\nLooking at the JSON response to this query, this 47-hour-and-59-minute time range resolves to 5-minute metric time aggregations, so the actual time range snaps to nearby aggregation boundaries: \"beginTime\": \"2023-12-20T00:00:00Z\", \"endTime\": \"2023-12-22T00:00:00Z\".\n\nTIMESERIES query snapping\n\nQueries with TIMESERIES may need to adjust the time range so the results do not include a partial time series bucket. For example:\n\nLooking at the JSON response to this query, the time series buckets base themselves on the end of the time range, and the start time is adjusted so the first bucket in the response covers a full 5 minutes: \"beginTime\": \"2023-12-20T00:08:12Z\", \"endTime\": \"2023-12-21T00:03:12Z\".\n\nSpecify a time with SINCE and UNTIL\n\nYou have a few ways to specify time in the SINCE and until UNTIL clauses.\n\nUnix time (Epoch Milliseconds)\n\nThe time can be referenced as Unix time in milliseconds. This is the number of milliseconds since 1970-01-01T00:00:00Z, or midnight on the 1st of January, 1970. For example:\n\nThese timestamp values resolve to a time range starting at 2023-12-18T11:34:56.789Z and ending at 2023-12-18T12:34:56.789Z.\n\nRelative time (n [ time units] ago)\n\nRelative time can be referenced as n [time units] ago with the following components:\n\nn: A positive integer value.\n\n[time units]: Available time units include milliseconds, seconds, minutes, hours, days, weeks, months (defined as 30 days), quarters (defined as 91 days), or years (defined as 365 days). Time unit pluralization is optional, so you can leave the \"s\" off the end of the unit. 2 day ago and 2 days ago have the same meaning.\n\nThe time is relative to the time you run the query. For example, assume that you ran a query at 2023-12-18T12:34:56.789Z. You would get different results depending on what relative time value you used:\n\nRelative temporal time\n\nYou can also use relative time using temporal time references. These relative time references resolve to the beginning of the temporal time interval. A relative temporal time reference will honor a WITH TIMEZONE clause. Select a collapser below to see more information on specific temporal time references:\n\nYou can specify a time range time using a DateTime string. The parser generally supports the ISO 8601 DateTime format: '2023-12-18T12:34:56.789-06:00'. But, the DateTime parser can also recognize variants of the ISO standard format, like '2023-12-18 12:34'. The parser also supports date-only ('2023-12-18') and time-only ('12:34:56') strings. We have the options and examples for using a DateTime string below:\n\nTimezones\n\nZone IDs"
    }
}