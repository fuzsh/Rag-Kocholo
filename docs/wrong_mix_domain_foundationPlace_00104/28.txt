I recently read the news that Siebel had turned 20 years. Man, that is a respectable age for a CRM software product! Although its market share may have peaked 10 years ago already and today the discussion on the future of Siebel is now circling around the question of when will the last Siebel instance be turned off, you still have to the give credit to the CRM software grandfather. Here’s how Denis Pombriant puts it in his “Siebel at 20” article:

“In many ways, though, Siebel still is the market. Go into a Global 2000 company and you will see a Siebel system; today Salesforce users might flank that system’s users too. For many of these companies, Siebel is a workhorse system that has been through some of the wars and continues to be serviceable.”

Inspired by this, I decided to compile a few pieces of history around Microsoft’s CRM product, to provide some context on where it originates from and how the platform has developed over the years. After all, with the first version having been released in 2003, Dynamics CRM has also now reached the 10 years milestone. I’ve personally worked with Microsoft’s CRM only starting from 2005, but the story starts from much earlier than that. I’ve had to do a bit of software archaeology in digging up the events that took place before my first encounter with CRM 3.0, so not all the details may be accurate and you’re more than welcome to add your comments at the end to fill in the blanks.

Alright then, let’s step onto the timeline and start our journey towards CRM 2013 right from the beginning.

Before CRM

A common belief that circulates out there in the wild is that CRM is just another product that Microsoft has bought and integrated into its business software portfolio, like the ERP products Great Plains, Axapta and Navision (nowadays Dynamics GP, AX and NAV). Well, that’s not entirely true, but we can trace back the origins of CRM to the year 2000 and a product by the name iCommunicate.net. Here’s an article taken from IThell.com:

iCommunicate.net – the first IThell.com Halo Award winner!

Without a doubt, this is the winner as the coolest (and most helpful) new product of the expo and is the first product to be awarded the Halo Award for providing a solution that can truly help folks in IT by making it easier than ever before to cost-effectively manage customers, customer solutions and resolve customer problems. iCommunicate.net is a web based, out sourced solution (ASP) for CRM with a tremendous feature set and a great pricing model.

In 2001 Microsoft acquired iCommunicate, which had 10 employees at the time. The developers behind iCommunicate.NET moved to Redmond and started developing a modern, web based CRM application together with Microsoft’s team. Aaron Elder, the lead developer of iCommunicate, shares many wonderful bits of information about the project in his MSDN blog posts. Here’s an enlightening quote on what the starting point was for developing Microsoft CRM:

When I first joined the team the “application” was literally a mess, this of course was “ok” because at the time the application was referred to only as the “reference app”. The application that you all know and dare I say love, was originally only going to be an MSDN example of what you could build on top of the CRM Platform!

There are not many screenshots of iCommunicate.NET available anymore and I’ve only managed to save these two from Google’s cache. According to Aaron, the Microsoft CRM 1.0 UI was simply a logical evolution of the UI he designed for iCommunicate.NET, so perhaps this is one of the more concrete heritages carried over from the pre-Microsoft era of the CRM product.

Version 1

Here’s the press release that marked the birth of Microsoft CRM: Microsoft announces new customer relationship management solution. Notice how Microsoft bCentral is one of the online services mentioned as a CRM solution. This service hosted by XO Communications apparently offered some basic contact management and email campaign functionality aimed at the SMB market.

Microsoft CRM 1.0 was released in January 2003, with the official name being the catchy “Microsoft Business Solutions Customer Relationship Management 1.0”. Here’s a screenshot of the home page that the system offered to the users for a quick glance of the open activities, alongside a Quick Create menu and an announcements list. The navigation bar at the bottom of the screen offered the familiar modules of Workplace, Sales and Service. The reports of CRM 1.0 were not built on SQL Server functionality yet but instead leveraged the well known Crystal Reports product (which was later acquired by Business Objects, which in turn was bought by SAP).

Although it wasn’t possible to perform any advanced customization tasks on CRM in a supported manner, such as adding new entities, the Microsoft partners were already at the time finding good business in filling the gaps of CRM 1.2. Still, everyone was really putting their hopes on CRM 2.0 being an easier product to sell to customers, with more built-in features and improved reliability.

V2/3.0 and The Birth of XRM

What was first called Microsoft CRM 2.0 and later Microsoft CRM 2005 became vaporware, as after being delayed a few times the version was never released. In the meantime, Microsoft had revealed information about an ambitious initiative called Project Green in 2003, which aimed to to combine all the business products (CRM, Great Plains, Axapta, Navision, Salomon) onto a single code base. It wasn’t until 2007 that the project was announced as dead & buried, with each of the ERP products remaining separate platforms for the foreseeable future and CRM naturally carrying on with its own roadmap for primarily managing the customer facing interactions instead of financial transactions.

Microsoft CRM 3.0 was released in December 2005. Or more precisely, Microsoft Dynamics CRM 3.0, as the Dynamics brand was launched in September 2005 to harmonize Microsoft’s ERP and CRM product offering. So even though we didn’t get a Microsoft Business Framework (MBF), at least product names were all aligned under the Dynamics umbrella. This branding update didn’t quite manage to cover all corners of the application and the name “Microsoft CRM” or “MSCRM” in short still carries on today as popular nickname for the product.

The UI of v3.0 introduced the navigation paradigm that has been largely carried onward to the current CRM 2011 version. Imitating the Outlook modules, the product now had a “Wunderbar” in the bottom left corner of the screen, including the new Marketing module that introduced basic campaign management functionality into the core CRM offering.

Most importantly, with CRM 3.0 it was now possible to create brand new custom entities to expand the default data model to cover whatever business domain that the customer was working in. The term “XRM” was introduced into the Microsoft corporate lingo to describe these new scenarios for eXtended Relationship Management. A whitepaper from 2008 titled “Microsoft Dynamics CRM as a Business Application Platform” written by Jason Hunt and Aaron Elder, the original architects of the platform, goes into great depth on why Dynamics CRM should not be considered as “just CRM” but something much more formidable and powerful.

Dynamics CRM 4.0: on-premises and Online

While CRM 3.0 was a single organization application, Microsoft Dynamics CRM 4.0 launched in December 2007 was “multi-everything”: multiple languages, multiple currencies and, most importantly, multiple tenants. The proprietary workflow system of CRM 3.0 was also replaced with a Windows Workflow Foundation based implementation that was able to cover significantly more process automation scenarios. Oh, and instead of writing custom business logic as “callouts” you now created plug-ins. The UI was still all about lists of records, but at least there was a Report Wizard introduced that allowed the users to build simple reports to group and visualize data.

Only a few months after the on-premises of CRM 4.0 version saw the light of day, a whole new breed of Dynamics CRM was unleashed. Although initially only available in North America, Microsoft Dynamics CRM Online marked the beginning of the cloud services era in Microsoft’s business applications, with BPOS (Exchange, SharePoint, OCS) following its lead later during the same year. There wasn’t a feature parity between the cloud and the on-premises server yet, due to limitations of not being able to do programmatic extensions like plug-ins for CRM Online yet. The multi-tenant nature of CRM 4.0 also encouraged several hosting companies to start offering CRM alongside other MS products.

At this point, Dynamics CRM had already started to gain recognition from the press and was considered as a product that was bound to capture a significant share of the CRM software market. In 2008 CRM Magazine ran a cover story with the title “Is Microsoft winning the CRM race?” (read the full digipaper article). In the interview, Steve Ballmer is especially optimistic about their chances of extending their coverage to “many tens of millions of seats” thanks to the potential of XRM to grow beyond the CRM space. There’s also an interesting question presented related to his views on the importance of social media in the enterprise today, meaning five years ago, four years before they acquired Yammer:

“If social networking is all about, “How do you interact with people and content in a group setting?” – that’s what SharePoint’s all about, that’s what Office Communications Server is about, it’s about even what CRM is a bout in a sense. It’s just a much more formal instruction set of interactions.”

Dynamics CRM 2011 and the solution framework

Up until this point, CRM had provided great capabilities for organizations to customize their own environment in a highly flexible manner. From an ISV perspective things weren’t quite as rosy, though, since the multitude of different customizations that could exist in the CRM organization made it very difficult to deliver a standardized application package that could be safely installed and uninstalled without affecting the components from other vendors within the same organization. To fix this, CRM 2011 introduced the concept of solutions and solution layers that allowed partners to deliver managed packages of customizations and web resources to be deployed to any CRM organization, almost in the same way as you could install apps on your iPhone. Dynamics Marketplace was launched to showcase these apps, although it didn’t quite live up to the full potential of what might have been.

CRM 2011 also contained a lot of new functionality on the user interface layer. The most visible change was the addition of charts and dashboards, which made it possible to summarize the data in CRM views in real time, without running reports or creating Excel pivot graphs. The ribbon from Office 2007 was now added into CRM, bringing in a much more visual method of presenting the multitude of options and actions that a user could perform on a record. Combine this with the new forms’ support for subgrids, headers & footers and a wealth of web resource types and the result was a highly extensible UI on top of the already flexible platform capabilities.

Shortly after the CRM 2011 release, Microsoft announced that it was adopting a more agile approach to developing it’s CRM product, with the target of bringing updates to the system twice a year instead of the traditional 2-3 year release cycle of business software in the past. The November 2011 Service Update introduced both functional improvements as well as completely new features in the form of Activity Feeds, which were Microsoft’s answer to the demand of bringing in more social tools into its internal facing business applications. The next planned update, however, was cancelled as the delivery of cross-browser support and the partner provided mobile applications in Q2 2012 proved to be a too ambitious goal. The beginning of the year 2013 did however see the next Service Update being released, containing not just the much requested browser support extension but a whole new user interface option for CRM Online customers (codename Polaris).

The next user experience frontier: Dynamics CRM 2013

The world is a very different place today than it was at the beginning of the 21st century when Microsoft CRM saw the light of day. Back then we were working with Windows PC’s that rarely left the office desk. Phones were actually for phone calls. The web consisted of documents, not networks of people. IE6 was the bleeding edge of web browsers. With this in mind, a CRM system designed in 2013 would therefore obviously look completely different from a system launched in 2003, wouldn’t it?

Say hello to Microsoft Dynamics CRM 2013 and the next decade of CRM applications. In today’s world we want to access the customer data from any device we happen to be holding, which is why CRM 2013 includes clients not only for any browser and any computer (read: PC) running Outlook but also tablet devices powered by Windows 8 and iOS, smartphones running Windows Phone 8, Android or iOS (to be launched separately), and any other obscure devices that can access the updated Mobile Express web client.

Also, we’d prefer not to be bombarded by a large array of menu options we could potentially be clicking but rather want to focus on the content itself, which is why CRM 2013 provides a new, clean UI that minimizes unnecessary navigation options and maximizes the screen estate available to offer an easy to digest overview of the customer relationship status. Oh, and we’d prefer not to have tens of popups to deal with, thank you very much.

CRM 2013 is not all about just candy on the surface (pun alert!), there’s also great advancements made on the platform side. Alongside the new Business Process Flow form visualizations there are new capabilities that allow you to perform some of the customizations that previously required writing Javascript or C# plug-ins: Business Rules and Real-time Workflows. Another back-end feature that will improve CRM’s compatibility with the brave new world of mobile devices is Server-side Synchronization, which will replace many of the tasks that the Email Router and Outlook have previously been performing.

What’s next?

We have seen the Dynamics CRM application go through quite a transformation in the 10 + years it’s been on the market. It’s likely that the speed of change is not about to slow down in terms of what the CRM application itself does or looks like, but the trends in the customer relationship management space may shift the focus from the core application more towards the network of other services that CRM integrates with.

The first examples of this new direction can be seen in the services Microsoft has recently acquired. Yammer, Marketing Pilot and Netbreeze will become a part of the CRM story, but they will never be shipped as bits that you deploy onto your CRM server. Instead the platform will be more and more adapted to leveraged these new loosely coupled services, from whichever direction the next ones may be arriving from, alongside the core functionality of the application platform we’ve come to know as a CRM product in its default guise.

In reference to Siebel, it’s an intriguing question to ponder about where will Dynamics CRM be by the time it reaches its 20th birthday. There’s not enough pages left on this blog article to explore the potential scenarios anymore, but if you’ve got any memories related to the past 10 years of Microsoft CRM or thoughts on the next decade, I’d sure love to hear them in the comments!