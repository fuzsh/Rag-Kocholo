{
    "id": "yago_31618_0",
    "rank": 32,
    "data": {
        "url": "https://www.scientific-computing.com/feature/meet-mr-matlab",
        "read_more_link": "",
        "language": "en",
        "title": "Meet Mr Matlab",
        "top_image": "https://www.scientific-computing.com/themes/custom/bootstrap_sass_lse/images/faviconSCW.ico",
        "meta_img": "https://www.scientific-computing.com/themes/custom/bootstrap_sass_lse/images/faviconSCW.ico",
        "images": [
            "https://www.scientific-computing.com/themes/custom/bootstrap_sass_lse/images/scientific-computing-logo.svg",
            "https://www.scientific-computing.com/themes/custom/bootstrap_sass_lse/images/scientific-computing-logo.svg",
            "https://www.scientific-computing.com/sites/default/files/styles/content_banner/public/content/feature/lead-image/oct06profile_3.jpg?h=e3e2ff68&itok=ptjPT3r8",
            "https://www.scientific-computing.com/sites/default/files/styles/card_image/public/2024-03/metamorworks%20shutterstock_1948083631.jpg?h=8f74817f&itok=sxiRkMns"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "John Murphy meets scientific computing's leading 'celebrity', Cleve Moler, co-founder of The MathWorks",
        "meta_lang": "en",
        "meta_favicon": "/themes/custom/bootstrap_sass_lse/images/faviconSCW.ico",
        "meta_site_name": "",
        "canonical_link": "https://www.scientific-computing.com/feature/meet-mr-matlab",
        "text": "The world of computing has produced its own celebrities, who achieve fame beyond their field and are up there with pop musicians and film stars. But in the world of scientific computing, there are few celebrities to compare with Cleve Moler, co-founder of The MathWorks and original creator of Matlab, a programme used by an astounding one million scientists and engineers around the world.\n\nThe programme has proved to be more than the ‘one-hit wonders’ that have come and gone in the history of computing and is thriving and expanding today in a way that is usually reserved for the commercial software stars like Microsoft and Oracle. Unusually, it has barely been heard of outside the scientific and engineering world.\n\nMoler is just a maths professor from a small university, who created a programme for his own use. He discovered that other people liked it and started using it for things for which he never even imagined it could be used. His colleague Jack Little, as CEO of The MathWorks, has created a huge empire based on it, with about 1,000 employees, a turnover in excess of $300m per year (2004) and a growth rate that reached 186 per cent (also 2004).\n\nRob Schreiber, a Fellow at HP Labs and former professor of computer science at Stanford University, said that Moler was the nearest thing the mathematical computing world had to a rock star. He was popular as a person and had also made an enormous contribution to the work of scientists all over the world.\n\nHe says: ‘His main contribution has been in making scientists more productive in their work. I have used a lot of programming languages and I use Matlab because it makes me more productive. The phenomenal success of The MathWorks is primarily due to its product. However, having said that, CEO Jack Little is certainly the one that built the company and sustained it, driving enhancement and improvement of the product for 20 years, so he deserves equal credit.’\n\nHe says another factor in Moler’s popularity is his big personality. He said he is always funny and entertaining and the success he has achieved has not changed him from the days when the two first met in the 1970s. These days he exudes the image of a wise grandfather and Schreiber says that has not changed in the past 30 years.\n\nHe adds: ‘He is also an extremely generous man and always acknowledges the contributions of others, in particular people like Jim Wilkinson, who inspired him in his younger days. While Cleve did not invent much of what makes Matlab what it is, he is responsible for some fundamental inventions in matrix computation, most notably the QZ algorithm of Stewart and Moler. And Moler’s way of doing and seeing things is stamped all over the design of Matlab.’\n\nCleve Moler was born in Salt Lake City, Utah. Although most of his school friends and his first wife were Mormons, he was not. As a child, he was always interested in numbers. He says when he saw a license plate number he liked to factor it in his head. He was also interested in amateur radio and built his own equipment. At high school he got a job as a TV cameraman. He did well at school and was second in a state-wide maths competition, which stood him in good stead when he applied to CalTech to study mathematics. He had turned down a place at MIT, deciding he liked the smaller school better.\n\nHe says: ‘I guess I was a nerd, but when I got to CalTech I found there were a lot more nerdy guys than me. It was a very important place to me and I made a lot of friends. I was active in student affairs and edited the student paper. Any contact with the faculty was through Richard Feynman. I also went to classes given by Linus Pauling, who taught chemistry.’\n\nMoler decided he wanted to be a science writer, partly because both his parents were journalists. He had never considered a career as a mathematician. But then he was introduced to computers by John Todd, an Irishman who had worked on the Enigma code-breaking effort during WW2.\n\n‘Computers have always been part of my life. I wrote my first computer programme in 1958. What surprised me is how much they are now part of everybody else’s lives. I always think I used computers for what God had intended them for, to do arithmetic.’\n\nAfter he graduated, Todd suggested he went to work with and old colleague at UCLA called George Forsyth, who was a maths professor at Stanford. Moler joined the graduate programme to do mathematics and, while he was there, Forsyth founded Stanford’s Computer Science Department. While there, he got to meet Jim Wilkinson, who was a visiting lecturer. Wilkinson was one of the true pioneers, who had worked with Alan Turing at the National Physical Laboratory in London, and was a real inspiration to Moler. He spent some time working at the Jet Propulsion Laboratory at the time they were working on the moon shots.\n\nHe had started working on matrix computation, because he realised it were important to many aspects of applied mathematics. He had never wanted to be a pure mathematician, and always saw mathematics for how it can be applied in the real world.\n\nAfter gaining his PhD, he got the chance to work in Zurich through a contact of John Forsyth. After a year he returned to the US and looked for a job.\n\nHe says: ‘I was really hot stuff by the time I had left graduate school, because I had been to Stanford and had worked with Forsyth. I got lots of job offers and even considered working for IBM. I had offers from Berkeley and UCLA; I could have gone wherever I wanted. I chose the University of Michigan, because of the people I met there – in particular Bernie Gower and Bob Bartells. They needed someone to take over Bartells’s teaching work, because he didn’t have time any more.’\n\nHe got married to a woman who had been in the graduate programme of the computer science department and was now looking for an academic position. Moler could have stayed at Michigan, but they decided to find somewhere where both could get a job. Moler calls it ‘The Academic Two Body Problem’. They were both offered positions at the University of New Mexico. He admits it was a move to a less established department, but he had contacts at Los Alamos so he set about building it up. But fate would intervene.\n\nHe says: ‘Soon after we got to New Mexico my wife and I separated and divorced. I was put into the maths department and she was in the computer science department, so we did not have to have anything to do with each other professionally. She eventually left and I became chairman of the computer science department.’\n\nHe had been working on the early ideas for what would become Matlab while in Michigan in 1970, but it was his time in New Mexico where it really started to take shape. He wanted to create a simpler way for his students to create programs using the LINPACK and EISPACK libraries of Fortran subroutines, without having to write complex Fortran programmes. He got a book on the subject of parsing and started to create his own programming language.\n\nHe says: ‘There were similar things around back then, and some of them were quite successful, such as APL. I came up with a very simple design. I had not intended it to become some powerful thing. I had simple-minded objectives and approaches. The original Matlab was just a couple of thousand lines of code and was designed for people to modify to their needs. Also it was based on matrices, which are mathematically very useful in a variety of fields. Also they provide a very good paradigm for computing.\n\n‘I was lucky in that the things that I was personally interested in were useful to other people. I didn’t invent Matlab to be used by a lot of other people. I put things into Matlab that I found useful and other people have also found them useful.\n\n‘In design discussions today at The MathWorks, I find that the people working there are not users of Matlab so they don’t like making design decisions. They like to leave things as an option for users to decide, or else ask users what they think. I argue against that by saying we have to make these decisions and tell the users what they want.’\n\nDuring the 1970s and early 80s Moler developed his programme further with some vague ideas of commercial spin-offs. He offered Matlab to the NAG subroutine library, but was turned down. He even went to visit a fledgling software company, near his University in Albuquerque, called Microsoft. When he arrived there was a handmade sign on the door saying they had moved to Redmond, Washington, so he never got a chance to pitch Matlab to them. In the early 1980s he met John ‘Jack’ Little, and things changed.\n\nMoler says: ‘I am the father of Matlab, but Jack Little is the father of The MathWorks. He is the spirit and the brains behind the company. Little had academic training as a control engineer at MIT and Stanford so he knew the applications of matrices to control theory, which is still one of the main parts of our business – and I didn’t know anything about it. When the PC came out in 1982, Little figured that it could be used for technical computing. It was Little who started the company.’\n\nMoler co-founded the company, but didn’t actually join it – primarily because, at the beginning, it was not generating enough money to pay his salary. He left Little to run things and took a job in Oregon to work with a parallel computing offshoot of Intel. Then he went to a Silicon Valley start-up company called Ardent, which was one of the many ‘superstar’ companies formed around that time. It eventually merged with its largest rival and, between the two companies, they got through $800m of venture capital before it collapsed. It went down in history as the biggest flop in the computer industry until the dotcom era.\n\nBy this time, The MathWorks was starting to generate enough money to pay him, so Moler joined the company. He had continued to be involved with The MathWorks, writing software as a consultant. The Ardent computer was meant to come bundled with Matlab and it was probably the machine’s most attractive feature.\n\nMoler is clear that it was Little’s commercial vision that is the cornerstone of the company’s success. He said Little is very careful about everything that he does and thinks about every aspect of running the company. Another of the keys to Matlab’s commercial success comes down to a controversial decision to create a student edition of the package.\n\nMoler says: ‘When we decided to do a student edition almost 15 years ago, our sales and marketing people were very wary about this. They thought people would pirate that edition and we would lose sales. But we did it very carefully and our commercial customers realised it was important not to cheat. It did work, as we got a lot of users as students, but it was a risk. We didn’t expect to make money directly from the university sales and the fact that it got us committed customers didn’t happen right away.’\n\nMoler is presently chairman of the company and a member of one its software development teams that works on the underlying mathematics – but he is not the manager of that team, just another developer. His rock star status does mean that he spends a lot of time travelling and addressing conferences as the ambassador of the company. But the rest of the time he spends either working from his home back in New Mexico or at The MathWorks offices, working with his fellow developers.\n\nHe says: ‘I’ve never managed a team. I don’t enjoy it and I don’t do it very well. I work for Penny [Anderson, his programming group manager at The MathWorks]. I argue with her. When we disagree I tell her what I think, but then I say it’s your decision, because it’s your baby now, I don’t have to live with it. But I am this grandfather figure spokesman for the company.’\n\nHe describes his role within the group as being very much like a professor supervising and inspiring a research group of young academics, a role with which he is very comfortable. In fact, he still keeps his hand in with occasional teaching at the University of California Santa Barbara, where he is an adjunct professor. He is president elect of the Society for Industrial and Applied Mathematics and expects to spend a lot of time supporting its activities next year. He is very careful to encourage the ideas of younger members of the team and sees his role as very much in supporting them. And he absolutely loves the attention he gets from them\n\nHe says: ‘I’m 67 years old; the average age of people at The Mathworks is around the mid-20s. I tell them what Forsyth told me: we will teach you what we know and then we will get out of your way.’\n\nMoler believes there are still plenty of frontiers for Matlab. There are people who could use Matlab but choose to use C or spreadsheets instead. There are new fields emerging, such as biological computing.\n\nHe says: ‘What a biologist calls a pathway is what an engineer calls a model and what a mathematician calls an ordinary differential equation.’\n\nHe says there are people, including friends of his, who will not use Matlab because they believe it should be open source, but he thinks that there is a role for both types of software.\n\nHe says: ‘The guy who created IMSL said that water is free, but you have to pay a company to bring it to your house. That is true of Matlab.\n\n‘If you want to write your own programme for control theory you can use LAPACK, which is free, but we bring it to you in a form that is easy for you to use. For any particular scientist or engineer the money that it costs them is not the money they pay us; it’s the time they spend learning to use it.’\n\nEducation\n\n1961 California Institute of Technology, B.S., mathematics\n\n1965 Stanford University, M.S., 1963, Ph.D., mathematics"
    }
}