{
    "id": "yago_31618_3",
    "rank": 36,
    "data": {
        "url": "https://www.mathworks.com/videos/understanding-compliance-to-the-misra-c-2012-coding-guidelines-121398.html",
        "read_more_link": "",
        "language": "en",
        "title": "Understanding Compliance to the MISRA C 2012 Coding Guidelines",
        "top_image": "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/favicon.20240807145759133.ico",
        "meta_img": "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/favicon.20240807145759133.ico",
        "images": [
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/mathworks-logo-rev.20240807145759133.svg",
            "https://www.mathworks.com/videos/software-development-workflow-enforcing-coding-rules-1-of-3-91596/_jcr_content/video.adapt.full.medium.jpg/1494389431939.jpg",
            "https://www.mathworks.com/videos/checking-misra-code-rule-compliance-with-polyspace-products-71064/_jcr_content/video.adapt.full.medium.jpg/1679420914159.jpg",
            "https://www.mathworks.com/videos/cleve-moler-receives-the-2012-ieee-computer-society-computer-pioneer-award-70402/_jcr_content/video.adapt.full.medium.jpg/1470199147581.jpg",
            "https://www.mathworks.com/videos/modeling-standards-compliance-68885/_jcr_content/video.adapt.full.medium.jpg/1692175112708.jpg",
            "https://www.mathworks.com/videos/lte-tutorial-understanding-the-lte-resource-grid-99215/_jcr_content/video.adapt.full.medium.png/1695976510982.png",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/pic-header-mathworks-logo.20240807145759133.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-facebook.20240807145759133.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-twitter.20240807145759133.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-instagram.20240807145759133.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-youtube.20240807145759133.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-linkedin.20240807145759133.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-rss.20240807145759133.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Learn how the use of deep semantic analysis and abstract interpretation within the Polyspace engine helps you comply with MISRA C 2012.",
        "meta_lang": "en",
        "meta_favicon": "/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/favicon.20240807145759133.ico",
        "meta_site_name": "",
        "canonical_link": "https://www.mathworks.com/videos/understanding-compliance-to-the-misra-c-2012-coding-guidelines-121398.html",
        "text": "MISRA coding guidelines are widely adopted across various industries as it helps avoid unreliable coding constructs and develop robust and reliable software. The most recent update to the standard – MISRA C 2012 was released back in 2013 and we see a lot of our customers updating to the new coding guidelines. In this webinar, we will cover the changes to the MISRA guidelines and how these changes help to better comply using static analysis tools.\n\nIn this webinar you will see that there are many tools that can help with MISRA compliance, but they are not all equal. You may have tools that report imprecise violations or only offer partial coverage of the standard. For example, Directive 4.1 stipulates that “Run-time failures shall be minimized”. This can only be supported by tools that can detect run time errors. You will learn how the use of deep semantic analysis and abstract interpretation within the Polyspace engine helps cover such directives in addition to detecting violations with better accuracy.\n\nFurthermore, we will demonstrate how Polyspace provides detailed information, making it easy to review true violations and provide evidence to justify the deviations. With integration to model based design, the process is further simplified for generated code from Simulink, with the ability to trace the results to the model and add deviations at the model level to reduce maintenance efforts."
    }
}