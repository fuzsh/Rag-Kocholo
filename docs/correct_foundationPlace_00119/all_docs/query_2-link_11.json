{
    "id": "correct_foundationPlace_00119_2",
    "rank": 11,
    "data": {
        "url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html",
        "read_more_link": "",
        "language": "en",
        "title": "Regions and Zones",
        "top_image": "https://docs.aws.amazon.com/assets/images/favicon.ico",
        "meta_img": "https://docs.aws.amazon.com/assets/images/favicon.ico",
        "images": [
            "https://docs.aws.amazon.com/images/AWSEC2/latest/UserGuide/images/EC2_select_region.png",
            "https://docs.aws.amazon.com/images/AWSEC2/latest/UserGuide/images/EC2_select_region.png",
            "https://docs.aws.amazon.com/images/AWSEC2/latest/UserGuide/images/region-with-azs.png",
            "https://docs.aws.amazon.com/images/AWSEC2/latest/UserGuide/images/availability-zone-mapping.png",
            "https://docs.aws.amazon.com/images/AWSEC2/latest/UserGuide/images/region-with-lzs.png",
            "https://docs.aws.amazon.com/images/AWSEC2/latest/UserGuide/images/region-with-wavelength-zones.png",
            "https://docs.aws.amazon.com/images/AWSEC2/latest/UserGuide/images/region-with-outpost.png",
            "https://d1ge0kk1l5kms0.cloudfront.net/images/G/01/webservices/console/warning.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "EC2",
            "Amazon EC2",
            "EC2 instance",
            "EC2 Linux instance",
            "EC2 Windows instance",
            "instance",
            "VM",
            "virtual machine",
            "Availability Zones",
            "Local Zones",
            "Outposts",
            "Wavelength Zones"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Describes the Regions, Availability Zones, Local Zones, Outposts, and Wavelength Zones world-wide where you can host your instances.",
        "meta_lang": "en",
        "meta_favicon": "/assets/images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html",
        "text": "Amazon EC2 is hosted in multiple locations world-wide. These locations are composed of AWS Regions, Availability Zones, Local Zones, AWS Outposts, and Wavelength Zones.\n\nAWS operates state-of-the-art, highly available data centers. Although rare, failures can occur that affect the availability of instances that are in the same location. If you host all of your instances in a single location that is affected by a failure, none of your instances would be available.\n\nTo help you determine which deployment is best for you, see AWS Wavelength FAQs.\n\nRegions\n\nEach Region is designed to be isolated from the other Regions. This achieves the greatest possible fault tolerance and stability.\n\nWhen you view your resources, you see only the resources that are tied to the Region that you specified. This is because Regions are isolated from each other, and we don't automatically replicate resources across Regions.\n\nWhen you launch an instance, you must select an AMI that's in the same Region. If the AMI is in another Region, you can copy the AMI to the Region you're using. For more information, see Copy an AMI.\n\nNote that there is a charge for data transfer between Regions. For more information, see Amazon EC2 Pricing - Data Transfer.\n\nAvailable Regions\n\nYour account determines the Regions that are available to you.\n\nThe following table lists the Regions provided by an AWS account. You can't describe or access additional Regions from an AWS account, such as the AWS GovCloud (US) Regions or the China Regions. To use a Region introduced after March 20, 2019, you must enable the Region. For more information, see Specify which AWS Regions your account can use in the AWS Account Management Reference Guide.\n\nFor more information, see AWS Global Infrastructure.\n\nThe number and mapping of Availability Zones per Region may vary between AWS accounts To list the Availability Zones that are available to your account, you can use the Amazon EC2 console or the command line interface. For more information, see Describe your Regions.\n\nRegions and endpoints\n\nWhen you work with an instance using the command line interface or API actions, you must specify its Regional endpoint. For more information about the Regions and endpoints for Amazon EC2, see Amazon EC2 endpoints and quotas in the Amazon Web Services General Reference.\n\nFor more information about endpoints and protocols in AWS GovCloud (US-West), see Service Endpoints in the AWS GovCloud (US) User Guide.\n\nDescribe your Regions\n\nYou can use the Amazon EC2 console or the command line interface to determine which Regions are available for your account. For more information about these command line interfaces, see Access Amazon EC2.\n\nTo find your Regions using the AWS CLI\n\nUse the describe-regions command as follows to describe the Regions that are enabled for your account.\n\naws ec2 describe-regions\n\nTo describe all Regions, including any Regions that are disabled for your account, add the --all-regions option as follows.\n\naws ec2 describe-regions --all-regions\n\nGet the Region display name\n\nYou can use AWS Systems Manager Parameter Store to view the display name of a Region. Each Region has public parameters in the following path.\n\n/aws/service/global-infrastructure/regions/region-code\n\nThe public parameters for a Region include the following:\n\nThe longName parameter contains the Region display name. The following get-parameters-by-path command returns the display name of the af-south-1 Region. It uses the --query option to scope the output to the name of the Region. You must enclose the query string in single quotes on Linux. To run this command using the Windows Command Prompt, either omit the single quotes or change them to double quotes.\n\nAWS CLI on Linux\n\naws ssm get-parameters-by-path \\ --path /aws/service/global-infrastructure/regions/af-south-1 \\ --query 'Parameters[?Name.contains(@,`longName`)].Value' \\ --output text\n\nAWS CLI on Windows\n\naws ssm get-parameters-by-path ^ --path /aws/service/global-infrastructure/regions/af-south-1 ^ --query \"Parameters[?Name.contains(@,`longName`)].Value\" ^ --output text\n\nTools for PowerShell\n\nIf it is not installed, install the AWS.Tools.SimpleSystemsManagement module to Tools for PowerShell by running Install-AWSToolsModule AWS.Tools.SimpleSystemsManagement -CleanUp.\n\n$parameterPath = \"/aws/service/global-infrastructure/regions/af-south-1\" $substringToMatch = \"longName\" $filteredParameters = Get-SSMParametersByPath -Path $parameterPath ` | Where-Object { $_.Name -like \"*$substringToMatch*\" } ` | ForEach-Object { Write-Output $_.Value } $filteredParameters\n\nThe following is example output.\n\nAfrica (Cape Town)\n\nFor more information, see Working with public parameters in the AWS Systems Manager User Guide.\n\nSpecify the Region for a resource\n\nEvery time you create an Amazon EC2 resource, you can specify the Region for the resource. You can specify the Region for a resource using the AWS Management Console or the command line.\n\nConsiderations\n\nSome AWS resources might not be available in all Regions. Ensure that you can create the resources that you need in the desired Regions before you launch an instance.\n\nAlternatively, you can use the --region (AWS CLI) or -Region (AWS Tools for Windows PowerShell) command line option with each individual command. For example, --region us-east-2.\n\nFor more information about the endpoints for Amazon EC2, see Amazon EC2 endpoints and quotas in the AWS General Reference.\n\nAvailability Zones\n\nEach Region has multiple, isolated locations known as Availability Zones. The code for Availability Zone is its Region code followed by a letter identifier. For example, us-east-1a.\n\nWhen you launch an instance, you select a Region and a virtual private cloud (VPC), and then you can either select a subnet from one of the Availability Zones or let us choose one for you. If you distribute your instances across multiple Availability Zones and one instance fails, you can design your application so that an instance in another Availability Zone can handle requests. You can also use Elastic IP addresses to mask the failure of an instance in one Availability Zone by rapidly remapping the address to an instance in another Availability Zone.\n\nThe following diagram illustrates multiple Availability Zones in an AWS Region. Availability Zone A and Availability Zone B each have one subnet, and each subnet has instances. Availability Zone C has no subnets, therefore you can't launch instances into this Availability Zone.\n\nAs Availability Zones grow over time, our ability to expand them can become constrained. If this happens, we might restrict you from launching an instance in a constrained Availability Zone unless you already have an instance in that Availability Zone. Eventually, we might also remove the constrained Availability Zone from the list of Availability Zones for new accounts. Therefore, your account might have a different number of available Availability Zones in a Region than another account.\n\nAZ IDs\n\nTo ensure that resources are distributed across the Availability Zones for a Region, we independently map Availability Zones to codes for each AWS account in our oldest Regions. For example, the us-east-1a for your AWS account might not be the same physical location as the us-east-1a for another AWS account.\n\nTo coordinate Availability Zones across accounts in all Regions even those that map Availability Zones, use the AZ IDs, which are unique and consistent identifiers for an Availability Zone. For example, use1-az1 is an AZ ID for the us-east-1 Region, and it has the same physical location in every AWS account. You can view the AZ IDs for your account to determine the physical location of your resources relative to the resources in another account. For example, if you share a subnet in the Availability Zone with the AZ ID use1-az2 with another account, this subnet is available to that account in the Availability Zone whose AZ ID is also use1-az2.\n\nThe following diagram illustrates two accounts with different mappings of Availability Zone code to AZ ID.\n\nDescribe your Availability Zones\n\nYou can use the Amazon EC2 console or the command line interface to determine which Availability Zones are available for your account. For more information about these command line interfaces, see Access Amazon EC2.\n\nLaunch instances in an Availability Zone\n\nWhen you launch an instance, select a Region that puts your instances closer to specific customers, or meets the legal or other requirements that you have. By launching your instances in separate Availability Zones, you can protect your applications from the failure of a single location.\n\nWhen you launch an instance, you can optionally specify an Availability Zone in the Region that you are using. If you do not specify an Availability Zone, we select an Availability Zone for you. When you launch your initial instances, we recommend that you accept the default Availability Zone, because this allows us to select the best Availability Zone for you based on system health and available capacity. If you launch additional instances, specify an Availability Zone only if your new instances must be close to, or separated from, your running instances.\n\nMigrate an instance to another Availability Zone\n\nIf necessary, you can migrate an instance from one Availability Zone to another. For example, if you try to modify the instance type of your instance and we can't launch an instance of the new instance type in the current Availability Zone, you can migrate the instance to an Availability Zone with capacity for the new instance type.\n\nThe migration process involves:\n\nLocal Zones\n\nA Local Zone is an extension of an AWS Region in geographic proximity to your users. Local Zones have their own connections to the internet and support AWS Direct Connect, so that resources created in a Local Zone can serve local users with low-latency communications. For more information, see What is AWS Local Zones? in the AWS Local Zones User Guide.\n\nThe code for a Local Zone is its Region code followed by an identifier that indicates its physical location. For example, us-west-2-lax-1 in Los Angeles.\n\nThe following diagram illustrates the AWS Region us-west-2, two of its Availability Zones, and two of its Local Zones. The VPC spans the Availability Zones and one of the Local Zones. Each zone in the VPC has one subnet, and each subnet has an instance.\n\nTo use a Local Zone, you must first enable it. For more information, see Opt in to Local Zones. Next, create a subnet in the Local Zone. Finally, launch resources in the Local Zone subnet, such as instances, so that your applications are close to your users.\n\nAvailable Local Zones\n\nYou can use the Amazon EC2 console or a command line interface to determine which Local Zones are available for your account. For a complete list, see AWS Local Zones Locations.\n\nTo find your Local Zones using the AWS CLI\n\nUse the describe-availability-zones command as follows to describe all Local Zones in the specified Region, even if they are not enabled. To describe only the Local Zones that you've enabled, omit the --all-availability-zones option.\n\naws ec2 describe-availability-zones --region region-name --filters Name=zone-type,Values=local-zone --all-availability-zones\n\nOpt in to Local Zones\n\nBefore you can specify a Local Zone for a resource or service, you must opt in to Local Zones.\n\nConsideration\n\nSome AWS resources might not be available in all Regions. Make sure that you can create the resources that you need in the desired Regions or Local Zones before launching an instance in a specific Local Zone. For a list of services supported in each Local Zone see AWS Local Zones Features.\n\nTo opt in to Local Zones using the AWS CLI\n\nUse the modify-availability-zone-group command.\n\nLaunch instances in a Local Zone\n\nWhen you launch an instance, you can specify a subnet that is in a Local Zone. You also allocate an IP address from a network border group. A network border group is a unique set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses, for example, us-west-2-lax-1a.\n\nYou can allocate the following IP addresses from a network border group:\n\nFor more information about how to launch an instance in a Local Zone, see Getting started with AWS Local Zones in the AWS Local Zones User Guide.\n\nWavelength Zones\n\nAWS Wavelength enables developers to build applications that deliver ultra-low latencies to mobile devices and end users. Wavelength deploys standard AWS compute and storage services to the edge of telecommunication carriers' 5G networks. Developers can extend a virtual private cloud (VPC) to one or more Wavelength Zones, and then use AWS resources like Amazon EC2 instances to run applications that require ultra-low latency and a connection to AWS services in the Region.\n\nA Wavelength Zone is an isolated zone in the carrier location where the Wavelength infrastructure is deployed. Wavelength Zones are tied to a Region. A Wavelength Zone is a logical extension of a Region, and is managed by the control plane in the Region.\n\nThe code for a Wavelength Zone is its Region code followed by an identifier that indicates the physical location. For example, us-east-1-wl1-bos-wlz-1 in Boston.\n\nThe following diagram illustrates the AWS Region us-west-2, two of its Availability Zones, and a Wavelength Zone. The VPC spans the Availability Zones and the Wavelength Zone. Each zone in the VPC has one subnet, and each subnet has an instance.\n\nTo use a Wavelength Zone, you must first opt in to the Zone. For more information, see Enable Wavelength Zones. Next, create a subnet in the Wavelength Zone. Finally, launch your resources in the Wavelength Zones subnet, so that your applications are closer to your end users.\n\nWavelength Zones are not available in every Region. For information about the Regions that support Wavelength Zones, see Available Wavelength Zones in the AWS Wavelength Developer Guide.\n\nDescribe your Wavelength Zones\n\nYou can use the Amazon EC2 console or the command line interface to determine which Wavelength Zones are available for your account. For more information about these command line interfaces, see Access Amazon EC2.\n\nEnable Wavelength Zones\n\nBefore you specify a Wavelength Zone for a resource or service, you must opt in to Wavelength Zones.\n\nTo enable Wavelength Zones using the AWS CLI\n\nUse the modify-availability-zone-group command.\n\nLaunch instances in a Wavelength Zone\n\nWhen you launch an instance, you can specify a subnet which is in a Wavelength Zone. You also allocate a carrier IP address from a network border group, which is a unique set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses, for example, us-east-1-wl1-bos-wlz-1.\n\nFor information about how to launch an instance in a Wavelength Zone, see Get started with AWS Wavelength in the AWS Wavelength Developer Guide.\n\nAWS Outposts\n\nAWS Outposts is a fully managed service that extends AWS infrastructure, services, APIs, and tools to customer premises. By providing local access to AWS managed infrastructure, AWS Outposts enables customers to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.\n\nAn Outpost is a pool of AWS compute and storage capacity deployed at a customer site. AWS operates, monitors, and manages this capacity as part of an AWS Region. You can create subnets on your Outpost and specify them when you create AWS resources. Instances in Outpost subnets communicate with other instances in the AWS Region using private IP addresses, all within the same VPC.\n\nThe following diagram illustrates the AWS Region us-west-2, two of its Availability Zones, and an Outpost. The VPC spans the Availability Zones and the Outpost. The Outpost is in an on-premises customer data center. Each zone in the VPC has one subnet, and each subnet has an instance.\n\nTo begin using AWS Outposts, you must create an Outpost and order Outpost capacity. For more information about Outposts configurations, see our catalog. After your Outpost equipment is installed, the compute and storage capacity is available for you when you launch Amazon EC2 instances on your Outpost.\n\nLaunch instances on an Outpost\n\nYou can launch EC2 instances in the Outpost subnet that you created. Security groups control inbound and outbound traffic for instances with elastic network interfaces in an Outpost subnet, as they do for instances in an Availability Zone subnet. To connect to an EC2 instance in an Outpost subnet, you can specify a key pair when you launch the instance, as you do for instances in an Availability Zone subnet.\n\nWe recommend that you limit the root volume for an instance on an Outpost rack to 30 GiB or smaller. You can specify data volumes in the block device mapping of the AMI or the instance to provide additional storage. To trim unused blocks from the boot volume, see How to Build Sparse EBS Volumes in the AWS Partner Network Blog.\n\nWe recommend that you increase the NVMe timeout for the root volume. For more information, see I/O operation timeout.\n\nFor information about how to create an Outpost, see Get started with AWS Outposts in the AWS Outposts User Guide.\n\nCreate a volume on an Outpost rack\n\nAWS Outposts offers rack and server form factors. If your capacity is on an Outpost rack, you can create EBS volumes in the Outpost subnet that you created. When you create the volume, specify the Amazon Resource Name (ARN) of the Outpost.\n\nThe following create-volume command creates an empty 50 GB volume on the specified Outpost.\n\naws ec2 create-volume --availability-zone us-east-2a --outpost-arn arn:aws:outposts:us-east-2:123456789012:outpost/op-03e6fecad652a6138 --size 50"
    }
}