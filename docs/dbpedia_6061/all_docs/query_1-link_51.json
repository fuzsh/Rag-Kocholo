{
    "id": "dbpedia_6061_1",
    "rank": 51,
    "data": {
        "url": "https://reshax.com/topic/211-slayer-engine-indiana-jones-and-the-emperors-tomb-pc-msh-and-mtx-files/",
        "read_more_link": "",
        "language": "en",
        "title": "[Slayer Engine] Indiana Jones And The Emperor's Tomb (PC) - MSH AND MTX Files",
        "top_image": "https://reshax.com/uploads/monthly_2024_06/image.png.544a6fc961407443a3644e2702ea2508.png",
        "meta_img": "https://reshax.com/uploads/monthly_2024_06/image.png.544a6fc961407443a3644e2702ea2508.png",
        "images": [
            "https://reshax.com/uploads/monthly_2023_10/ResHAx.png.8d0c04471b8e0b5c91965bc82a4c27dc.png",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_10/43476.thumb.png.593706f14baca71780204dacd533f13a.png",
            "https://reshax.com/uploads/monthly_2023_10/8_Regular.svg",
            "https://reshax.com/uploads/monthly_2023_10/43476.thumb.png.593706f14baca71780204dacd533f13a.png",
            "https://reshax.com/uploads/monthly_2023_10/8_Regular.svg",
            "https://reshax.com/uploads/monthly_2024_07/Wicon.thumb.png.8325c93c1190e66885aa55ffaa99937f.png",
            "https://reshax.com/uploads/monthly_2023_10/8_Regular.svg",
            "https://reshax.com/uploads/monthly_2024_07/Wicon.thumb.png.8325c93c1190e66885aa55ffaa99937f.png",
            "https://reshax.com/uploads/monthly_2023_10/8_Regular.svg",
            "https://reshax.com/uploads/monthly_2023_11/indianahat-msh.png.8b6b5938eece3e8eb1eea1837ea5f48b.png",
            "https://reshax.com/uploads/monthly_2023_11/uglyDWords.png.254a54efc4f75422fd92d4227634ff3c.png",
            "https://reshax.com/uploads/monthly_2024_07/Wicon.thumb.png.8325c93c1190e66885aa55ffaa99937f.png",
            "https://reshax.com/uploads/monthly_2023_10/8_Regular.svg",
            "https://reshax.com/uploads/monthly_2024_07/Wicon.thumb.png.8325c93c1190e66885aa55ffaa99937f.png",
            "https://reshax.com/uploads/monthly_2023_10/8_Regular.svg",
            "https://reshax.com/uploads/monthly_2023_11/indianaHat.png.d8e022fd6a6c8bbe17c4e434abe148f2.png",
            "https://reshax.com/uploads/monthly_2023_10/avatar.thumb.jpg.9fb2d4beeab55fcde35f26a64c965113.jpg",
            "https://reshax.com/uploads/monthly_2023_10/6_Enthusiast.svg",
            "https://reshax.com/uploads/monthly_2023_10/avatar.thumb.jpg.9fb2d4beeab55fcde35f26a64c965113.jpg",
            "https://reshax.com/uploads/monthly_2023_10/6_Enthusiast.svg",
            "https://reshax.com/uploads/monthly_2023_11/532e96_a4eda54155d84e08b8ef4cd29334dd43mv2.png.66f7f2a1fee26a3982c49d93c1ac065e.png",
            "https://reshax.com/uploads/monthly_2023_11/avatar_co_400.thumb.jpg.8e834600000fc5b581401331ab2c6941.jpg",
            "https://reshax.com/uploads/monthly_2023_10/3_Apprentice.svg",
            "https://reshax.com/uploads/monthly_2023_11/avatar_co_400.thumb.jpg.8e834600000fc5b581401331ab2c6941.jpg",
            "https://reshax.com/uploads/monthly_2023_10/3_Apprentice.svg",
            "https://reshax.com/uploads/monthly_2023_11/532e96_a4eda54155d84e08b8ef4cd29334dd43mv2.png.66f7f2a1fee26a3982c49d93c1ac065e.png",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2024_07/Wicon.thumb.png.8325c93c1190e66885aa55ffaa99937f.png",
            "https://reshax.com/uploads/monthly_2023_10/8_Regular.svg",
            "https://reshax.com/uploads/monthly_2024_07/Wicon.thumb.png.8325c93c1190e66885aa55ffaa99937f.png",
            "https://reshax.com/uploads/monthly_2023_10/8_Regular.svg",
            "https://reshax.com/uploads/monthly_2024_01/imported-photo-1478.thumb.png.bd4ee76770010a71059de0b4bf8bf310.png",
            "https://reshax.com/uploads/monthly_2023_10/1_Newbie.svg",
            "https://reshax.com/uploads/monthly_2024_01/imported-photo-1478.thumb.png.bd4ee76770010a71059de0b4bf8bf310.png",
            "https://reshax.com/uploads/monthly_2023_10/1_Newbie.svg",
            "https://reshax.com/uploads/monthly_2023_11/532e96_a4eda54155d84e08b8ef4cd29334dd43mv2.png.66f7f2a1fee26a3982c49d93c1ac065e.png",
            "https://reshax.com/uploads/monthly_2023_10/imported-photo-183.thumb.png.c646c4feea582110e525286df2065c65.png",
            "https://reshax.com/uploads/monthly_2023_10/6_Enthusiast.svg",
            "https://reshax.com/uploads/monthly_2023_10/imported-photo-183.thumb.png.c646c4feea582110e525286df2065c65.png",
            "https://reshax.com/uploads/monthly_2023_10/6_Enthusiast.svg",
            "https://reshax.com/uploads/monthly_2023_10/1_Newbie.svg",
            "https://reshax.com/uploads/monthly_2023_10/1_Newbie.svg",
            "https://reshax.com/uploads/monthly_2024_01/imported-photo-482.thumb.jpeg.79e721682311d1ca5d8d987478404ba1.jpeg",
            "https://reshax.com/uploads/monthly_2023_10/3_Apprentice.svg",
            "https://reshax.com/uploads/monthly_2024_01/imported-photo-482.thumb.jpeg.79e721682311d1ca5d8d987478404ba1.jpeg",
            "https://reshax.com/uploads/monthly_2023_10/3_Apprentice.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2023_11/Jason_Vorhees.thumb.jpg.e3498229e61d69b1e11dad09e485477c.jpg",
            "https://reshax.com/uploads/monthly_2023_10/2_Rookie.svg",
            "https://reshax.com/uploads/monthly_2024_06/image.thumb.png.3fbba59effa870c6d7e4b1f5ebfb994a.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Jason Voorhees"
        ],
        "publish_date": "2023-11-10T09:01:37+00:00",
        "summary": "",
        "meta_description": "Hello There, I Have These Files That I Cannot Open And They Are From The 3D Models With Bones And The Other Files Are From A Few Pages Of Texture, The One From The 3D Model With Bones Is .MSH And The Other From .MTX Is The One From The Textureschars.rar",
        "meta_lang": "en",
        "meta_favicon": "https://reshax.com/uploads/monthly_2023_10/android-chrome-36x36.png?v=1712924441",
        "meta_site_name": "ResHax",
        "canonical_link": "https://reshax.com/topic/211-slayer-engine-indiana-jones-and-the-emperors-tomb-pc-msh-and-mtx-files/",
        "text": "OK So here is bms only for unpack textures. You must also use bat command to merge header + raw data. I don't know how to append that dds header to the raw data.\n\n###################################################### # Indiana Jones And The Emperors Tomb - *.mtx unpack # ###################################################### get BaseFileName basename idstring \"MULTITEX\" get Flag_0 uint16 get Flag_1 uint16 get Unknown_0 uint32 get Unknown_1 uint32 get TextureCount uint32 get TableSize uint32 get Unknown_2 uint32 get InfoSize uint32 for i = 0 < TextureCount get TextureId uint32 if InfoSize == 120 getdstring Dummy 0x4 elif InfoSize == 128 getdstring Dummy 0xC endif get Unknown_0 uint32 get Unknown_1 uint16 get Unknown_2 uint16 savepos StrOffset get FileName string goto StrOffset getdstring Dummy 0x40 get TextureWidth uint32 get TextureHeight uint32 get Unknown_3 uint32 get Unknown_4 uint32 getdstring Dummy 0x4 get MipMapCount uint32 get Unknown_5 uint32 get PixelFormat uint32 get BaseOffset uint32 get DataSize uint32 savepos TMP goto BaseOffset get LayerSize uint32 savepos Offset string RAWNAME p \"%s/%s.raw\" BaseFileName FileName string HDRNAME p \"%s/%s.dds\" BaseFileName FileName if PixelFormat == 0 set MEMORY_FILE binary \"\\x44\\x44\\x53\\x20\\x7C\\x00\\x00\\x00\\x0F\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x41\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\xFF\\x00\\x00\\xFF\\x00\\x00\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\\xFF\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" putVarChr MEMORY_FILE 0x10 TextureWidth long putVarChr MEMORY_FILE 0xC TextureHeight long log HDRNAME 0 128 MEMORY_FILE elif PixelFormat == 1 set MEMORY_FILE binary \"\\x44\\x44\\x53\\x20\\x7C\\x00\\x00\\x00\\x07\\x10\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x44\\x58\\x54\\x31\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" putVarChr MEMORY_FILE 0x10 TextureWidth long putVarChr MEMORY_FILE 0xC TextureHeight long log HDRNAME 0 128 MEMORY_FILE elif PixelFormat == 3 set MEMORY_FILE binary \"\\x44\\x44\\x53\\x20\\x7C\\x00\\x00\\x00\\x07\\x10\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x44\\x58\\x54\\x33\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" putVarChr MEMORY_FILE 0x10 TextureWidth long putVarChr MEMORY_FILE 0xC TextureHeight long log HDRNAME 0 128 MEMORY_FILE elif PixelFormat == 5 set MEMORY_FILE binary \"\\x44\\x44\\x53\\x20\\x7C\\x00\\x00\\x00\\x07\\x10\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x44\\x58\\x54\\x35\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" putVarChr MEMORY_FILE 0x10 TextureWidth long putVarChr MEMORY_FILE 0xC TextureHeight long log HDRNAME 0 128 MEMORY_FILE endif log RAWNAME Offset LayerSize goto TMP next i\n\nAfter unpack create bat file and copy it to the folder with unpacked files and run. It will merge all files to the dds and deletes itself. So backup it.\n\nBat file to merge header + raw data\n\ncopy /b *.dds+*.raw *.dds del *.raw del create_dds.bat\n\nHere's also 010 template from which was bms made.\n\n//------------------------------------------------ //--- 010 Editor v14.0 Binary Template // // File: // Authors: // Version: // Purpose: // Category: // File Mask: // ID Bytes: // History: //------------------------------------------------ OutputPaneClear();LittleEndian(); local string FileName=GetFileName(),FilePath=FileNameGetPath(FileName,true),BaseName=FileNameGetBase(FileName,false); local uint32 i,j,k; struct HEADER { char Sign[8]; uint16 Flags[2]; uint32 Unknown_0,Unknown_1,TextureCount,TableSize,Unknown_2,InfoSize; }; struct FILETABLEINFO { struct FILEINFO { uint32 TextureId; if (Header.InfoSize == 120) uint32 FF[1]; else if (Header.InfoSize == 128) uint32 FF[3]; uint32 Unknown_0; uint16 Unknown_1,Unknown_2; local uint32 StrOffset=FTell(); local string TextureName=ReadString(StrOffset,0); byte Dummy[64]; uint32 TextureWidth,TextureHeight,Unknown_3,Unknown_4; ubyte Unknown_5[4]; uint32 MipMapCount,Unknown_6,PixelFormat,FileOffset,FileSize; }FileInfo[Header.TextureCount]<optimize=false>; }; struct FILEDATA { for (i=0; i < Header.TextureCount; i++){ FSeek(FileTableInfo.FileInfo[i].FileOffset); struct DATA { struct MIPMAP { uint32 LayerSize; byte LayerData[LayerSize]; }MipMap[FileTableInfo.FileInfo[i].MipMapCount]<optimize=false>; }Data; } }; HEADER Header; FILETABLEINFO FileTableInfo; FILEDATA FileData;\n\nAnd on top of that Noesis python script. But it has one flaw. First texture doesn't have original file name and I don't know how to fix it. But this is definitely better than bms because you can preview images before export.\n\nfrom inc_noesis import * import noesis import rapi import os def registerNoesisTypes(): handle = noesis.register(\"Indiana Jones and The Emperors Tomb\", \".mtx\") noesis.setHandlerTypeCheck(handle, noepyCheckType) noesis.setHandlerLoadRGBA(handle, noepyLoadRGBA) noesis.logPopup() return 1 def noepyCheckType(data): bs = NoeBitStream(data) if len(data) < 20: return 0 if bs.readUInt64() != 0x58455449544C554D: return 0 return 1 def noepyLoadRGBA(data, texList): bs = NoeBitStream(data) baseName = rapi.getExtensionlessName(rapi.getLocalFileName(rapi.getInputName())) Sign = bs.readBytes(8) Unknown_0 = bs.readUShort() Unknown_1 = bs.readUShort() Unknown_2 = bs.readUInt() Unknown_3 = bs.readUInt() TextureCount = bs.readUInt() TableSize = bs.readUInt() Unknown_4 = bs.readUInt() InfoSize = bs.readUInt() # Header End for i in range(TextureCount): TextureID = bs.readUInt() if InfoSize == 120: Unknown_0 = bs.readBytes(4) elif InfoSize == 128: Unknown_0 = bs.readBytes(12) Unknown_1 = bs.readUInt() Unknown_2 = bs.readUShort() Unknown_3 = bs.readUShort() NameStrOffset = bs.tell() FileNameStr = bs.readString() print(FileNameStr) bs.seek(NameStrOffset, NOESEEK_ABS) Dummy = bs.readBytes(64) TextureWidth = bs.readUInt() TextureHeight = bs.readUInt() Unknown_4 = bs.readUInt() Unknown_5 = bs.readUInt() Unknown_6 = bs.readBytes(4) MipMapCount = bs.readUInt() Unknown_7 = bs.readUInt() PixelFormat = bs.readUInt() DataOffset = bs.readUInt() FileSize = bs.readUInt() EndOfEntry = bs.tell() # Seek data bs.seek(DataOffset, NOESEEK_ABS) DataSize = bs.readUInt() data = bs.readBytes(DataSize) if PixelFormat == 0: texFmt = noesis.NOESISTEX_RGBA32 elif PixelFormat == 1: texFmt = noesis.NOESISTEX_DXT1 elif PixelFormat == 3: texFmt = noesis.NOESISTEX_DXT3 elif PixelFormat == 5: texFmt = noesis.NOESISTEX_DXT5 bs.seek(EndOfEntry, NOESEEK_ABS) texList.append(NoeTexture(FileNameStr, TextureWidth, TextureHeight, data, texFmt)) return 1"
    }
}