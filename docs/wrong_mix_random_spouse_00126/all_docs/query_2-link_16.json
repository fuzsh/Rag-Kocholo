{
    "id": "wrong_mix_random_spouse_00126_2",
    "rank": 16,
    "data": {
        "url": "https://medium.com/%40srowen/what-50-years-of-data-science-leaves-out-2366c9b61d3d",
        "read_more_link": "",
        "language": "en",
        "title": "What “50 Years of Data Science” Leaves Out",
        "top_image": "https://miro.medium.com/v2/resize:fit:1200/1*f8AI9Ocx45woh1-PDtXDpA.png",
        "meta_img": "https://miro.medium.com/v2/resize:fit:1200/1*f8AI9Ocx45woh1-PDtXDpA.png",
        "images": [
            "https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png",
            "https://miro.medium.com/v2/resize:fill:88:88/1*5erKQuWaIJAMLEOkFUsK1w.jpeg",
            "https://miro.medium.com/v2/resize:fill:144:144/1*5erKQuWaIJAMLEOkFUsK1w.jpeg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Sean Owen",
            "medium.com"
        ],
        "publish_date": "2015-11-15T13:52:27.022000+00:00",
        "summary": "",
        "meta_description": "As a B-list celebrity data scientist, and skeptic of the underspecified, overhyped “Data Science” movement, I was so glad to find David Donoho’s critical take in 50 Years of Data Science, which has…",
        "meta_lang": "en",
        "meta_favicon": "https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png",
        "meta_site_name": "Medium",
        "canonical_link": "https://medium.com/@srowen/what-50-years-of-data-science-leaves-out-2366c9b61d3d",
        "text": "Sean Owen\n\n·\n\nFollow\n\n6 min read\n\n·\n\nNov 15, 2015\n\n--\n\nAs a B-list celebrity data scientist, and skeptic of the underspecified, overhyped “Data Science” movement, I was so glad to find David Donoho’s critical take in 50 Years of Data Science, which has made its way around the Internet. Read it now. I suppose it should really be called 53 years of Data Science, but 50 is a popular number of things to have something of.\n\nThis paper narrates a strong Statistics-based take on Data Science, one which rightly punctures much of the puffery around this term and “Big Data.” Ultimately, it proposes its own better Statistics-based take. The smack-down is rewarding, but reading it given my Engineering-based take on Data Science, it looks like an attack on a partial straw-man. Along the way to arguing that Data Science can’t be much more than Statistics, it fails to contemplate Data Engineering, which I’d argue is most of what Data Science is and Statistics is not.\n\nThrough section 2.1, the paper might be summarized thus:\n\nFor better or worse, something called “Data Science” is a big deal. Whatever it is seems to be co-opting Statistics as a mere piece, maybe even not so important, of a new and larger discipline. The purported reason that this is more than just Statistics is the size of data, but that’s nonsense because sometimes Statistics has grappled with large data in the past.\n\nIt offers a few anecdotes in support, and the premise is sound. Statistics and numerical computing have been intertwined for decades, and as in all areas of computing, we always crave ways to analyze a little more data, a little more quickly.\n\nHowever, it doesn’t follow that scale never qualitatively changes a field. Scale has changed the nature of statistics itself over time. Its origins lie in an era of too little data, and it evolved techniques to compensate for too-small sample sizes, and optimized for ease of manual calculation. Compare that to the very example cited in the paper: punch cards to make tallying a census feasible. Hardly what William Sealy Gosset would have imagined as his field?\n\nSection 2.2–2.4 may be the single central blind-spot in this world-view. I might paraphrase it as:\n\nWe’re told “Data Science” and “Big Data” are different because they require different technical skills and new jobs. But all of these new skills are just so much running to stand still. Just look at how much software and work it takes to find a maximum of things in Hadoop’s MapReduce! It’s hopelessly primitive compared to existing tools.\n\nIt may go without saying that virtually nobody would now use MapReduce directly for this. Frameworks like Apache Crunch, Cascading, or especially Apache Spark have long since made this nearly a one-liner in within the Hadoop ecosystem alone. The MapReduce example is chosen exactly to maximize exposition of the boilerplate of Mappers and Reducers while requiring minimal exposition of content — just taking a max. But, this is a minor quibble. It’s true that the cart has been firmly in front of the horse in much of the Big Data movement. Too many have assumed that all problems must be solved as huge-data problems first, as a matter of future-proofing. Yes, somewhere, someone has used MapReduce to count a 1MB data set.\n\nMatlab and R are invoked to show just how mature and elegant their max() functions are in comparison. This is ironically what many would call in to explain the problem that Big Data technologies were built to solve: to scale beyond what Matlab or R can accomplish on one big machine. That is, good luck with max() over 10 terabytes of data. Good luck with max() over even 1 gigabyte of data, if that data isn’t already on your workstation.\n\nReally, this argues that if basic things are hard to build in distributed computing, nothing of any sophistication can be implemented there. What does it profit us to scale up primitive techniques? You’d only have to look to projects like Spark’s MLlib, which provides a perfectly suitable distributed implementations of, say, Latent Dirichlet Allocation, to see what a few lines of code can accomplish at scale. (Heck, LDA was implemented directly on MapReduce by Apache Mahout back in the day.) MLlib is no R, but it’s already entering the same ballpark.\n\nThe section attempts to conclude that more data is no big deal, but Peter Norvig and Google might disagree, given their oft-cited The Unreasonable Effectiveness of Data. It’s an argument from practical experience at web scale that, in a nutshell, more data beats better algorithms. If this is even sort of, sometimes true, then there might just be something of value that’s different from Statistics at scale, and that something might be what people are calling Data Science.\n\nSections 3–6 survey key shifts in thinking within Statistics as it has already evolved towards “Data Analysis.” Paraphrases follow:\n\nJohn Tukey’s The Future of Data Analysis, the 50+-year-old paper behind the title, asserts that Statistics must become concerned with the handling and processing of data, its size, and visualization.\n\nJohn Chambers’s S language, the predecessor of R, is the forerunner of the “notebook” concept, where an academic paper can be made runnable, scripted, shareable.\n\nLeo Breiman’s Two Cultures notes that concern strictly with prediction accuracy is different from inference about models, and that the former is under-represented in academia but prevalent in industry, where it has turned into “machine learning.”\n\nThe “common task framework” inherently values the quality of outputs of a black-box model, not the subjective explanatory power of the model, and this is immensely powerful in practice in driving better outputs.\n\nSection 7 surveys how Data Science is taught today, and Section 8 proposes how it should be presented. The curriculum here is well-thought-out and no less valid than the many worse, less-specific notions of Data Science out there. It is something bigger than pure Statistics, and acknowledges that this something is most certainly to do with data and computing.\n\nYet, how can this view embrace data and computing here, but decry the scale of data as irrelevant at the beginning? By Section 8, it’s merely dismissed as a detail. Data integration and wrangling is given a paragraph as well, with a recommendation to adopt the excellent so-called Hadleyverse (after its primary mover, Hadley Wickham) of R packages for data manipulation. This itself embeds an assumption that something like R is a sufficient platform for Data Science in 2015.\n\nFrom where I sit at Cloudera, a Data Scientist with only the skills listed in the proposed curriculum would be a formidably useful addition to any team. However, a team with only these skills would struggle to create a real live production anything. It’s one thing to create an excellent fraud detection model in R, and quite another to build:\n\nFault-tolerant ingest of live data at scale that could represent fraudulent actions\n\nReal-time computation of features based on the data stream\n\nSerialization, versioning and management of a fraud detection model\n\nReal-time prediction of fraud based on computed features at scale\n\nLearning over all historical data\n\nIncremental update of the production model in near-real-time\n\nMonitoring, testing, productionization of all of the above\n\nAnd in the end, in industry, any predictive model of actual value is going to be productionized, and need to accomplish one or more of the above. Far from a mere detail, it’s 80+% of the work I see people whose job title contains the string “Data Scientist” actually doing.\n\nThe most common argument is that the concerns above are simply something else, and not Data Science; they’re Data Engineering, or Software Engineering. Yes. Then again, much of the curriculum presented in the paper is something else: pure Statistics.\n\nThe paper presents an excellent picture of most of what the broad umbrella of Data Science seems should cover. I would argue that Software Engineering remains as big a part, and can’t be written out of the Data Science story."
    }
}