{
    "id": "dbpedia_2905_3",
    "rank": 16,
    "data": {
        "url": "https://rclone.org/",
        "read_more_link": "",
        "language": "en",
        "title": "Rclone",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://rclone.org/img/logo_on_dark__horizontal_color.svg",
            "https://rclone.org/img/logo_on_light__horizontal_color.svg",
            "https://rclone.org/img/logos/backblaze.svg",
            "https://rclone.org/img/logos/idrive_e2.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Nick Craig-Wood"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Rclone syncs your files to cloud storage: Google Drive, S3, Swift, Dropbox, Google Cloud Storage, Azure, Box and many more.",
        "meta_lang": "en",
        "meta_favicon": "/img/rclone-32x32.png",
        "meta_site_name": "",
        "canonical_link": "https://rclone.org/",
        "text": "Rclone syncs your files to cloud storage\n\nAbout rclone\n\nWhat can rclone do for you?\n\nWhat features does rclone have?\n\nWhat providers does rclone support?\n\nDownload\n\nInstall\n\nAbout rclone\n\nRclone is a command-line program to manage files on cloud storage. It is a feature-rich alternative to cloud vendors' web storage interfaces. Over 70 cloud storage products support rclone including S3 object stores, business & consumer file storage services, as well as standard transfer protocols.\n\nRclone has powerful cloud equivalents to the unix commands rsync, cp, mv, mount, ls, ncdu, tree, rm, and cat. Rclone's familiar syntax includes shell pipeline support, and --dry-run protection. It is used at the command line, in scripts or via its API.\n\nUsers call rclone \"The Swiss army knife of cloud storage\", and \"Technology indistinguishable from magic\".\n\nRclone really looks after your data. It preserves timestamps and verifies checksums at all times. Transfers over limited bandwidth; intermittent connections, or subject to quota can be restarted, from the last good file transferred. You can check the integrity of your files. Where possible, rclone employs server-side transfers to minimise local bandwidth use and transfers from one provider to another without using local disk.\n\nVirtual backends wrap local and cloud file systems to apply encryption, compression, chunking, hashing and joining.\n\nRclone mounts any local, cloud or virtual filesystem as a disk on Windows, macOS, linux and FreeBSD, and also serves these over SFTP, HTTP, WebDAV, FTP and DLNA.\n\nRclone is mature, open-source software originally inspired by rsync and written in Go. The friendly support community is familiar with varied use cases. Official Ubuntu, Debian, Fedora, Brew and Chocolatey repos. include rclone. For the latest version downloading from rclone.org is recommended.\n\nRclone is widely used on Linux, Windows and Mac. Third-party developers create innovative backup, restore, GUI and business process solutions using the rclone command line or API.\n\nRclone does the heavy lifting of communicating with cloud storage.\n\nWhat can rclone do for you?\n\nRclone helps you:\n\nBackup (and encrypt) files to cloud storage\n\nRestore (and decrypt) files from cloud storage\n\nMirror cloud data to other cloud services or locally\n\nMigrate data to the cloud, or between cloud storage vendors\n\nMount multiple, encrypted, cached or diverse cloud storage as a disk\n\nAnalyse and account for data held on cloud storage using lsf, ljson, size, ncdu\n\nUnion file systems together to present multiple local and/or cloud file systems as one\n\nFeatures\n\nTransfers\n\nMD5, SHA1 hashes are checked at all times for file integrity\n\nTimestamps are preserved on files\n\nOperations can be restarted at any time\n\nCan be to and from network, e.g. two different cloud providers\n\nCan use multi-threaded downloads to local disk\n\nCopy new or changed files to cloud storage\n\nSync (one way) to make a directory identical\n\nBisync (two way) to keep two directories in sync bidirectionally\n\nMove files to cloud storage deleting the local after verification\n\nCheck hashes and for missing/extra files\n\nMount your cloud storage as a network disk\n\nServe local or remote files over HTTP/WebDav/FTP/SFTP/DLNA\n\nExperimental Web based GUI\n\nSupported providers\n\n(There are many others, built on standard protocols such as WebDAV or S3, that work out of the box.)\n\n1Fichier Home Config\n\nAkamai Netstorage Home Config\n\nAlibaba Cloud (Aliyun) Object Storage System (OSS) Home Config\n\nAmazon S3 Home Config\n\nBackblaze B2 Home Config\n\nBox Home Config\n\nCeph Home Config\n\nChina Mobile Ecloud Elastic Object Storage (EOS) Home Config\n\nArvan Cloud Object Storage (AOS) Home Config\n\nCitrix ShareFile Home Config\n\nCloudflare R2 Home Config\n\nDigitalOcean Spaces Home Config\n\nDigi Storage Home Config\n\nDreamhost Home Config\n\nDropbox Home Config\n\nEnterprise File Fabric Home Config\n\nFastmail Files Home Config\n\nFTP Home Config\n\nGoogle Cloud Storage Home Config\n\nGoogle Drive Home Config\n\nGoogle Photos Home Config\n\nHDFS Home Config\n\nHetzner Storage Box Home Config\n\nHiDrive Home Config\n\nHTTP Home Config\n\nImageKit Home Config\n\nInternet Archive Home Config\n\nJottacloud Home Config\n\nIBM COS S3 Home Config\n\nIDrive e2 Home Config\n\nIONOS Cloud Home Config\n\nKoofr Home Config\n\nLeviia Object Storage Home Config\n\nLiara Object Storage Home Config\n\nLinkbox Home Config\n\nLinode Object Storage Home Config\n\nMagalu Home Config\n\nMail.ru Cloud Home Config\n\nMemset Memstore Home Config\n\nMega Home Config\n\nMemory Home Config\n\nMicrosoft Azure Blob Storage Home Config\n\nMicrosoft Azure Files Storage Home Config\n\nMicrosoft OneDrive Home Config\n\nMinio Home Config\n\nNextcloud Home Config\n\nOVH Home Config\n\nBlomp Cloud Storage Home Config\n\nOpenDrive Home Config\n\nOpenStack Swift Home Config\n\nOracle Cloud Storage Swift Home Config\n\nOracle Object Storage Home Config\n\nownCloud Home Config\n\npCloud Home Config\n\nPetabox Home Config\n\nPikPak Home Config\n\npremiumize.me Home Config\n\nput.io Home Config\n\nProton Drive Home Config\n\nQingStor Home Config\n\nQiniu Cloud Object Storage (Kodo) Home Config\n\nQuatrix by Maytech Home Config\n\nRackspace Cloud Files Home Config\n\nrsync.net Home Config\n\nScaleway Home Config\n\nSeafile Home Config\n\nSeagate Lyve Cloud Home Config\n\nSeaweedFS Home Config\n\nSFTP Home Config\n\nSia Home Config\n\nSMB / CIFS Home Config\n\nStackPath Home Config\n\nStorj Home Config\n\nSynology Home Config\n\nSugarSync Home Config\n\nTencent Cloud Object Storage (COS) Home Config\n\nUloz.to Home Config\n\nUptobox Home Config\n\nWasabi Home Config\n\nWebDAV Home Config\n\nYandex Disk Home Config\n\nZoho WorkDrive Home Config\n\nThe local filesystem Home Config\n\nVirtual providers\n\nThese backends adapt or modify other storage providers:\n\nAlias: Rename existing remotes Home Config\n\nCache: Cache remotes (DEPRECATED) Home Config\n\nChunker: Split large files Home Config\n\nCombine: Combine multiple remotes into a directory tree Home Config\n\nCompress: Compress files Home Config\n\nCrypt: Encrypt files Home Config\n\nHasher: Hash files Home Config\n\nUnion: Join multiple remotes to work together Home Config"
    }
}