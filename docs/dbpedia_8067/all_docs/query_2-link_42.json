{
    "id": "dbpedia_8067_2",
    "rank": 42,
    "data": {
        "url": "https://stackoverflow.com/questions/44717164/unable-to-import-svg-files-in-typescript",
        "read_more_link": "",
        "language": "en",
        "title": "Unable to import svg files in typescript",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://www.gravatar.com/avatar/8733e76d85015ea1cb935c82985e6610?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/b52b32ea278023d67410f03c950863fa?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/3471c8002d61aceac298c81848d714dc?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/8733e76d85015ea1cb935c82985e6610?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/05c09a65a7da49f59996c4b08b7046b3?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/wJREV.jpg?s=64",
            "https://www.gravatar.com/avatar/1bcb7a0a31549d35925e0fd1a8cccd5a?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/8e968daec5e4e6f599c905060ffcbbfa?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/gIt1g.png?s=64",
            "https://www.gravatar.com/avatar/dc2817abce63081a83af37455a4ae1b5?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://lh4.googleusercontent.com/-e4B-nmFW5OY/AAAAAAAAAAI/AAAAAAAAAAA/ci6SgtxRnEU/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/71a02e73cee3974654cfe2529cf2bd94?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://lh5.googleusercontent.com/-7yDMvoYzcFA/AAAAAAAAAAI/AAAAAAAAAAc/HrZFxtJaZ6Q/photo.jpg?sz=64",
            "https://i.sstatic.net/6vhvm.png",
            "https://www.gravatar.com/avatar/5e5cbbffdeeeafbeeba0492c35385aeb?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/40cb9acb094e5c7f4adbefa8de3793d3?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/f326d98f60866289ddce8fbc01f16bdb?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/55183f5e3373ecad21ac91dd61ba81ba?s=64&d=identicon&r=PG",
            "https://graph.facebook.com/2370892156259037/picture?type=large",
            "https://lh3.googleusercontent.com/-vIk2Kv9zs0A/AAAAAAAAAAI/AAAAAAAAAA8/68iABvnsu9Y/photo.jpg?sz=64",
            "https://i.sstatic.net/D0EZJ.png?s=64",
            "https://www.gravatar.com/avatar/29e153bde51f31946ca8c37b5a2bb385?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/CnYqu.png?s=64",
            "https://lh3.googleusercontent.com/a-/AFdZucpSeRyW5DQeJLcT96QhhbgTZ6ISnVCBeuw_Z8V0=k-s64",
            "https://www.gravatar.com/avatar/37b179eedff1bff18a891da0bb2ead82?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/3fdb8518473ec145645e5925e7f08598?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/7d3b1b447b8ec429be00d231c2360e9e?s=64&d=identicon&r=PG",
            "https://lh4.googleusercontent.com/-vH6tYs09tfY/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuclrxq-nqHwkHxvAlkzYwnlKT1uXNg/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/fd106c33b3ec3877f4f9e75eae373b2d?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/vFWo2.jpg?s=64",
            "https://i.sstatic.net/B6v3v.jpg?s=64",
            "https://stackoverflow.com/posts/44717164/ivc/0d4f?prg=8640e4fb-896e-4a06-9436-386689e21046"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2017-06-23T08:54:16",
        "summary": "",
        "meta_description": "In typescript(*.tsx) files I cannot import svg file with this statement:\n\nimport logo from './logo.svg';\r\nTranspiler says:[ts] cannot find module './logo.svg'.\nMy svg file is just &lt;svg&gt;...&lt...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/44717164/unable-to-import-svg-files-in-typescript",
        "text": "If you use webpack, you can do this by creating a custom types file.\n\nCreate a file named custom.d.ts with the following content:\n\ndeclare module \"*.svg\" { const content: React.FunctionComponent<React.SVGAttributes<SVGElement>>; export default content; }\n\nAdd the custom.d.ts to tsconfig.json as below\n\n\"include\": [\"src/components\", \"src/custom.d.ts\"]\n\nSource: https://webpack.js.org/guides/typescript/#importing-other-assets\n\nIf you're using create-react-app 2+: docs\n\nAdd a custom.d.ts file (I created it on the root path of my src dir) with the correct type (thanks to RedMatt):\n\ndeclare module '*.svg' { const content: React.FunctionComponent<React.SVGAttributes<SVGElement>>; export default content; }\n\nInstall svg-react-loader or some other, then:\n\nUse it as the main svg loader\n\nOr if you're migrating a codebase and don't want to touch the working part (JS) specify the loader on the import:\n\nimport MySVG from '-!svg-react-loader!src/assets/images/name.svg'\n\nThen just use it as a JSX tag:\n\nfunction f() { return (<MySVG />); }\n\nI scoured the internet looking for a solution to this issue. This stackoverflow question came up as the top lead, but none of the answers worked for me.\n\nFinally, I was able to come to a solution by trying a few different techniques.\n\nCreate an ./globals.d.ts file in the root of your project, at the same place/level your ./tsconfig.json is.\n\nInside that ./globals.d.ts file, add this:\n\ndeclare module '*.svg' { const content: string; export default content; }\n\nThis properly imports the .svg as a string, which is an issue I noticed in the top-rated answer.\n\nUpdate your tsconfig.json with the following:\n\n{ \"files\": [\"globals.d.ts\"] }\n\nThat's it - that got it to work in my case. I will note - this is in a VanillaJS app.\n\nSolution without webpack and custom.d.ts\n\nFor me, none of the above solutions worked alone. Because I don't use the Webpack in my current project.\n\nI investigated the outputs in the log, then the following way worked for me, without creating a file (custom.d.ts), changing the config, or installing a new dependency:\n\nconst logo: string = require(\"../assets/images/logo.svg\").default; <img src={logo} alt=\"logo\" />\n\nFor svg format you need to add .default, but not for png format.\n\nThis comment helped if you want src functionality as well as being able to make it a react component. https://github.com/parcel-bundler/parcel/discussions/7910#discussioncomment-3690319\n\nThis goes in your globals.d.ts at the same level as your tsconfig.json\n\ndeclare module '*.svg' { export const ReactComponent: React.FC<React.SVGProps<SVGSVGElement>>; const src: string; export default src;\n\n}\n\n// eslint-disable-next-line spaced-comment /// <reference types=\"react-scripts\" />\n\nif you are using the puglin slint it may be that he has disabled thinking it was a comment but not to read the svg you need this type script module just disable the line and be happy\n\nIf you're using NextJs ^13 with TypeScript, this should help you out:\n\nnpm install --save-dev @svgr/webpack\n\nSince NextJs uses webpack, we need this plugin to process svg files and use those file import as React components. Learn more about svgr webpack plugin.\n\nThen, open your next.config.* file, and add this webpack config to next config:\n\nmodule.export = { // other config values webpack(config) { config.module.rules.push({ test: /\\.svg$/i, issuer: { and: [/\\.(js|ts|md)x?$/] }, use: ['@svgr/webpack'], }); return config; } };\n\nNow, we need to override type definition for svg file content. It shouldn't be any but a proper component definition.\n\nCreate a custom .d.ts file anywhere in your project with the following content:\n\n// custom.d.ts declare module '*.svg' { const ReactComponent: React.FC<React.SVGProps<SVGSVGElement>>; export default ReactComponent; }\n\nWe also need to import this file in typescript config file - tsconfig.json:\n\n\"include\": [ \"types/custom.d.ts\", \"next-env.d.ts\" ]\n\nOur custom declaration file should be included before next-env.d.ts. This order is important.\n\nWe should be good now.\n\nimport SvgLogo from 'path/to/logo.svg'; function App() { return ( <SvgLogo /> ); }\n\nFor me it worked when I put the following line in src/types/images.d.ts\n\ndeclare module '*.svg';\n\nand I'm importing images the following way\n\nimport { ReactComponent as WifiIcon } from '../../../assets/images/Wifi.svg';\n\nin tsconfig.json\n\nI have following complierOptions\n\n\"compilerOptions\": { \"typeRoots\": [\"node_modules/@types\", \"src/types\"] }\n\nhope it helps someone. I use CRA the newest version.\n\nIf you're using Webpack >= v5 and would like to inline your image, this would perfectly work for you:\n\nconst logo = require('./logo.svg') as string; function MyComponent() { return ( <img src={logo} /> // <img src=\"data:image/svg+xml;base64,...\" /> ); }\n\nIn webpack.config.js add the following changes:\n\nmodule: { rules: [ // inline svg-files (see https://webpack.js.org/guides/asset-modules/) { test: /\\.svg/, type: 'asset/inline' } ] }\n\nAnd yeah, also please note it might not work if your Content-Security-Policy header is set to strict options (e.g. only 'self') so it wouldn't allow inline images.\n\nIn that case you'll see a \"broken\" image on the web-page and a warning in the Dev Tools Console. To fix, just add data: into Content-Security-Policy setup, like this:\n\nContent-Security-Policy: img-src 'self' data:"
    }
}