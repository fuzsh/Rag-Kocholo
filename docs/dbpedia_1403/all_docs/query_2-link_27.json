{
    "id": "dbpedia_1403_2",
    "rank": 27,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Visual_programming_language",
        "read_more_link": "",
        "language": "en",
        "title": "Visual programming language",
        "top_image": "https://upload.wikimedia.org/wikipedia/commons/8/8f/Add_all_numbers_block.png",
        "meta_img": "https://upload.wikimedia.org/wikipedia/commons/8/8f/Add_all_numbers_block.png",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Add_all_numbers_block.png/290px-Add_all_numbers_block.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Ringlang_shot10.jpg/300px-Ringlang_shot10.jpg",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2004-03-02T16:00:06+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Visual_programming_language",
        "text": "Programming language written graphically by a user\n\nNot to be confused with Design language.\n\nIn computing, a visual programming language (visual programming system, VPL, or, VPS), also known as diagrammatic programming,[1][2] graphical programming or block coding, is a programming language that lets users create programs by manipulating program elements graphically rather than by specifying them textually.[3] A VPL allows programming with visual expressions, spatial arrangements of text and graphic symbols, used either as elements of syntax or secondary notation. For example, many VPLs are based on the idea of \"boxes and arrows\", where boxes or other screen objects are treated as entities, connected by arrows, lines or arcs which represent relations. VPLs are generally the basis of Low-code development platforms.\n\nDefinition\n\n[edit]\n\nVPLs may be further classified, according to the type and extent of visual expression used, into icon-based languages, form-based languages, and diagram languages. Visual programming environments provide graphical or iconic elements which can be manipulated by users in an interactive way according to some specific spatial grammar for program construction.\n\nThe general goal of VPLs is to make programming more accessible to novices and to support programmers at three different levels[4]\n\nSyntax\n\nVPLs use icons/blocks, forms and diagrams trying to reduce or even eliminate the potential of syntactic errors helping with the arrangement of programming primitives to create well-formed programs.\n\nSemantics\n\nVPLs may provide some mechanisms to disclose the meaning of programming primitives. This could include help functions providing documentation functions built-in to programming languages.\n\nPragmatics\n\nVPLs support the study of what programs mean in particular situations. This level of support allows users to put artifacts created with a VPL into a certain state in order to explore how the program will react to that state. Examples: In AgentSheets or AgentCubes users can set games or simulations into a particular state in order to see how program would react. With the Thymio programming language users can bring a robot into a certain state in order to see how it will react, i.e., which sensors will be activated.\n\nAs of 2005, current developments try to integrate the visual programming approach with dataflow programming languages to either have immediate access to the program state, resulting in online debugging, or automatic program generation and documentation. Dataflow languages also allow automatic parallelization, which is likely to become one of the greatest programming challenges of the future.[5]\n\nThe Visual Basic, Visual C#, Visual J# etc. languages of the Microsoft Visual Studio integrated development environment (IDE) are not visual programming languages: the representation of algorithms etc. is textual even though the IDE embellishes the editing and debugging activities with a rich user interface. A similar consideration applies to most other rapid application development environments which typically support a form designer and sometimes also have graphical tools to illustrate (but not define) control flow and data dependencies.\n\nParsers for visual programming languages can be implemented using graph grammars.[6][7]\n\nTypes of visual languages\n\n[edit]\n\nThe following list is not mutually exclusive, as some visual programming environments may incorporate elements from multiple paradigms. The choice of visual programming paradigm often depends on the specific requirements of the application or the preferences of the users or the developers.\n\nBlock-based programming\n\nPopularized by platforms like Scratch and Blockly, used in educational settings and for introductory programming.\n\nFlowcharts\n\nWidely used in software engineering and systems design for representing algorithms and processes.\n\nDrag-and-drop interfaces\n\nCommonly used in GUI design tools and development environments for creating user interfaces.\n\nNode graphs\n\nFrequently used in visual programming languages, game development, and dataflow systems.\n\nDataflow programming\n\nPopular in parallel computing, signal processing, and visual programming environments.\n\nIconic programming\n\nUsed in various contexts for simplifying programming tasks, often associated with mobile app development.\n\nState machines\n\nWidely employed in game development, control systems, and modeling reactive systems.\n\nSheet-based programming\n\nFound in spreadsheet applications and certain educational programming environments.\n\nTimeline-based programming\n\nCommon in multimedia and animation software for sequencing events over time.\n\nSpatial programming\n\nApplied in certain interactive and 3D modeling environments.\n\nForm-based programming\n\nUsed in applications where user input and graphical interfaces play a significant role, such as data entry applications.\n\nGeneral-purpose visual languages\n\n[edit]\n\nMost of the VPLs are designed for education or domain-specific usage where the target users are novice programmers. But there are some research projects try to provide a general-purpose visual programming language that can be used by mainstream programmers in any software project instead of using textual programming languages like (C, C++, Java, etc.).\n\nFor example, research projects such as Envision [8][9] and PWCT[10] are designed to achieve this goal. It's common for a VPL to be developed using a textual programming language. Developing general-purpose VPLs allows the other way around. For example, a new textual programming language Compiler and Virtual Machine is developed using visual programming in 2016.[11]\n\nList of visual languages\n\n[edit]\n\nThis is a dynamic list and may never be able to satisfy particular standards for completeness. You can help by adding missing items with reliable sources.\n\nThe following contains a list of notable visual programming languages.\n\nEducational\n\n[edit]\n\nAgentCubes, 3D and 2D game design and simulation design computational thinking tools.\n\nAgentSheets, game authoring and computational science authoring tool.\n\nAlice, an object based language used to program 3D environments.\n\nAnalytica, for building and analyzing quantitative models for decision and risk analysis.\n\nApp Inventor for Android, a tool for creating Android applications, based on Blockly and Kawa.\n\nBlockly, a client-side library for the programming language JavaScript for creating block-based visual programming languages (VPLs) and editors. Blockly is known for its use on Scratch.\n\nBubble, for creating production-ready web applications.\n\nCatrobat, block-based visual programming language for animations, apps and games\n\nEtoys, developed under the direction of Alan Kay at Disney to support constructionist learning, influenced by Seymour Papert and the Logo programming language\n\nFlowcode, a visual programming tool for embedded microcontrollers and Windows.\n\nFlowgorithm, creates executable flowcharts which can be converted to several languages.\n\nGreenfoot, an IDE for Java or Stride primarily designed for educational purposes, as well as for GUI and game development\n\nHopscotch, an iPad app, and visual programming language for creating touchscreen-oriented mobile applications.\n\nKodu, a visual programming tool for Logo.\n\nKojo, a programming language, IDE, and learning environment.\n\nmBlock, an extension of Scratch for Arduino hardware interfaces. Developed by Makeblock.\n\nOpen Roberta, online programming environment from Fraunhofer IAIS, designed for children.\n\nPencil Code, a visual programming language centered on drawing with a pencil\n\nRaptor, a product of the USAF, for drawing executable flowcharts.\n\nScratch, a product of MIT, designed for children in K-12 and after-school programs.\n\nScratchJr, an interpretation of Scratch designed primarily for younger audiences (5-7-year-old children).\n\nSnap!, a browser-based reimplementation of BYOB, and extension of Scratch, with first class procedures and lists. Used for teaching at UC Berkeley.\n\nStagecast Creator, a Java-based teaching system.\n\nStarLogo, an agent-based simulation language developed by Mitchel Resnick, Eric Klopfer, and others at MIT Media Lab. An extension of the Logo programming language (a dialect of Lisp).\n\nToonTalk, programming system for children.\n\nVisual Logic, for creating executable flowcharts.\n\nVIPLE Visual IoT/Robotics Programming Language Environment\n\nMultimedia\n\n[edit]\n\nAudioMulch, an audio signal flow based sound and music creation environment\n\nBidule, a modular node and patch cord environment for the creation of interactive computer music and multimedia (Windows, MacOS).[12]\n\nBlender, the open source 3D graphics package, includes node graphs for building shaders,[13] composites[14] and textures,[15] non-destructive geometry.[16][17]\n\nCameleon, graphical functional language\n\nClickteam's The games factory/Multimedia fusion series, environments made for visually developing games\n\nDynamo, a generative modeling interface for Autodesk Revit\n\nFilter Forge Node based filter generation for image processing.\n\nHoudini (software) vfx, modeling and animation software.\n\nGenerativeComponents, a parametric CAD software developed by Bentley Systems\n\nGrasshopper 3d, a generative modeling interface for Rhinoceros 3D\n\nIsadora, a proprietary graphic programming environment for Mac OS X and Microsoft Windows, with emphasis on real-time manipulation of digital video.\n\nKyma (sound design language), a visual programming language for sound design used by musicians, researchers, and sound designers.\n\nMama (software) – a programming language and IDE for building 3D animations and games\n\nMax (software), visual programming environment for building interactive, real-time music and multimedia applications\n\nMax/MSP\n\nPure Data\n\nnato.0+55+3d\n\nNodal, a node-based generative programming software application for music composition\n\nNuke, an object-based visual programming software for visual effects compositing by The Foundry powered by Tcl, Python and Blink-script.\n\nOpenMusic, a visual programming language for music composition (based on Common Lisp Object System (CLOS)) applications, and mobile applications\n\nPure Data (Pd) is a visual programming language developed for creating interactive computer music and multimedia works.\n\nQuartz Composer, a language for processing and rendering graphical data (macOS)\n\nReaktor, a DSP and MIDI-processing language by Native Instruments\n\nScala Multimedia Authoring suite and complete multimedia system for AmigaOS and Windows\n\nSoftimage, with ICE Interactive Creative Environment.\n\nSynthEdit, a Synthesizer construction tool using a VPL.\n\nTouchDesigner, visual programming language for real-time multimedia content\n\nVirtools, a middleware used to create interactive 3D experiences\n\nvvvv, a general purpose toolkit with a special focus on real-time video synthesis and programming large media environments with physical interfaces, real-time motion graphics, audio and video.\n\nWireFusion, visual programming environment for creating interactive 3D web presentations\n\nVideo games\n\n[edit]\n\nBabylon.js has a node material editor that can be used to build shaders, procedural textures, particle systems and post processing effects.[18]\n\nBlender Game Engine (Graphical logic editor)\n\nBuildbox\n\nClickteam Fusion, a 2D game creation software with event editor system, developed by Clickteam SARL, originally known as Klik n' Play, The Games Factory and Multimedia Fusion 2\n\nConstruct 2-3 are HTML5-based 2D game editors, developed by Scirra Ltd.\n\nConstruct Classic is the previous, DirectX-based open-sourced version of Construct.[19][20]\n\nCryEngine has a node-based visual programming language called FlowGraph.\n\nDreams, which runs on PlayStation, has an extensive visual language to allow players to create any kind of game\n\nGame Builder Garage, a 3D and 2D game creation tool for the Nintendo Switch, developed by Nintendo.\n\nGameMaker Studio, has a drag-and-drop game creation system developed by YoYo Games.\n\nGameSalad is a visual game creation tool developed by GameSalad, Inc.\n\nGDevelop is a visual game creation tool created by Florian Rival (4ian).\n\nGodot game engine allows game scripts and graphics shaders to be built using node-graph visual programming languages.\n\nHuman Resource Machine is a visual programming-based puzzle game developed by Tomorrow Corporation.\n\nKodu, a software designed to program games with a 3D interface developed by Microsoft Research.\n\nMakeCode Arcade, by Microsoft\n\nPixel Game Maker MV is an interface-based 2D video game development tool.\n\nRec Room includes a game creation system with a node-based visual programming language called Circuits.\n\nSnowdrop has a visual scripting system.\n\nStencyl, a video game creation tool.\n\nUnity has a visual scripting system as of the ECS release.\n\nUnreal Engine 4 has a node-based visual programming language called Blueprints, and also shaders.\n\nMany modern video games make use of behavior trees, which are in principle a family of simple programming languages designed to model behaviors for non-player characters. The behaviors are modeled as trees, and are often edited in graphical editors.\n\nSystems / simulation\n\n[edit]\n\nAnalytica, a commercial visual language for decision models based on influence diagrams.\n\nBPEL (Business Process Execution Language), currently a Graphical user based Programming Language used to create orchestration logic for data and web services. It is based on XML, but has a graphical interface for faster coding.\n\nDRAKON, a graphical algorithmic language\n\nFlowcode is a graphical programming language to program embedded microprocessors\n\nFunction block diagrams, used in programmable logic controllers\n\nGNU Radio, a development toolkit which provides signal-processing blocks to implement software-defined-radios and signal-processing systems\n\nKNIME, the Konstanz Information Miner, is an open source data analytics, reporting and integration platform\n\nLabVIEW, a graphical language designed for engineers and scientists\n\nLadder logic, a language that simulates relay logic commonly used in programmable logic controllers\n\nMeVisLab, cross-platform application framework for medical image processing and scientific visualization\n\nMicrosoft Visual Programming Language, dataflow language for robotics programming that is a component of Microsoft Robotics Studio\n\nMindRover, a robot programming game incorporating a dataflow \"wiring\" language\n\nMinibloq, visual programming language for robotics and Arduino compatible boards\n\nMST Workshop, an interactive visual programming language for creating mathematical solutions, rapid prototyping, two-dimensional and three-dimensional graphic applications\n\nNode-RED: software system rapid development toolkit\n\nNXT-G, a visual programming language for the Lego Mindstorms NXT robotics kit\n\nOpenDX scientific data visualization using a visual programming language and data flow model\n\nOpenWire - adds visual dataflow programming abilities to Delphi via Visual Component Library (VCL) components and a graphical editor (homonymous binary protocol is unrelated)\n\nOrange - An open-source, visual programming tool for data mining, statistical data analysis, and machine learning\n\nOutSystems language, a visual modeling language to develop and change all layers of business centric web applications\n\nPrograph - an object-oriented programming language that uses iconic symbols to represent actions to be taken on data\n\nPtolemy Project - a project aimed at modeling and designing real-time embedded systems.\n\nQucs graphical interface to set up simulation of electronic circuit signal and noise behavior\n\nReallusion - iClone, a 3D software with Lua language and visual programming design\n\nROBO Pro, a visual programming language for the fischertechnik robotics kit\n\nScicos A graphical language associated with the numerical analysis package ScicosLab (originally SciLab)\n\nSequential function chart, a Petri-net like programming language for programmable logic controllers\n\nSimcenter Amesim, graphical programming environment for modeling, simulating and analyzing multidomain dynamical systems\n\nSimulink, graphical programming environment for modeling, simulating and analyzing multidomain dynamical systems\n\nStateflow, a graphical language that includes executable state transition diagrams, flow charts, state transition tables, and truth tables\n\nSTELLA, a VPL for system dynamics modeling\n\nSoftimage ICE, a node-based system that is used to create and modify 3D models, simulate particles and perform various other tasks\n\nUnified Modeling Language depicts connectives (arrows) such as 'isA', 'has' as icons; resources can be roles\n\nVEE is a powerful graphical programming environment for automated test, measurement and advanced analysis used in Test Engineering.\n\nVisSim, modeling and simulation language, allows making mathematical models quickly and executing them in real-time\n\nAutomation\n\n[edit]\n\nAutomator\n\nCiMPLE, Visual Programming Language by ThinkLABs for teaching robotics\n\nFlow a graphical integration language used in the webMethods platform\n\nPipeline Pilot is a scientific visual and dataflow programming language, and the authoring tool for the Accelrys Enterprise Platform.\n\nData warehousing / business intelligence\n\n[edit]\n\nAb Initio, a tool for ETL processing by creating graphs\n\nAlteryx Designer, a tool for data processing and analytics incorporating SQL, R, and Python.\n\nApache Nifi, software project to automate the flow of data between software systems.\n\nIBM Cognos Business Intelligence, is an example for front-end programs in Business Intelligence applications, which are used to generate SQL queries to run against RDBMS databases\n\nIBM InfoSphere DataStage, an ETL tool\n\nInformatica Powercenter is an ETL tool to design mappings graphically for data load in Data Warehouse systems\n\nMicrosoft Access, query design functionality\n\nMicrosoft SQL Server Integration Services (SSIS), a platform for data integration and workflow applications\n\nPentaho Data Integration (PDI), formerly named Kettle, an open-source ETL tool\n\nMiscellaneous\n\n[edit]\n\nCube , an esolang to emulate a 3D cube via a 2D text interface \"Cube\".\n\nKwikpoint, an isotype visual translator created by Alan Stillman\n\nMorphic (software), makes it easier to build and edit graphical objects by direct manipulation and from within programs; the whole Self (programming language) programming environment is built using Morphic\n\nPiet, an esoteric language, the program is an image whose pixels are the language's elements\n\nPWCT, Free open source visual programming language for software development\n\nPygmalion, a creative programming environment developed in 1975 by DARPA based on human communication and systems design\n\nShortcuts, a visual scripting language developed by Apple for creating macros on macOS, iOS, iPadOS, and watchOS.\n\nStreamBase Systems, StreamBase EventFlow is a visual programming language for processing streaming events\n\nWebML, is a visual language for designing complex data-intensive Web applications that can be automatically generated\n\nYahoo! Pipes is a visual data-flow programming system to process web data[21]\n\nYAWL, graphical workflow language\n\nLegacy\n\n[edit]\n\nAppWare, also known as MicroBrew, icon based programming for classic Mac OS and Microsoft Windows\n\nMacromedia Authorware - flowchart based programming language\n\nHelix and Double Helix, a pioneering database management system for the Apple Macintosh platform, created in 1983\n\nIllumination Software Creator, a language and IDE for visually creating desktop and mobile software\n\nThingLab\n\nVisual styles\n\n[edit]\n\nDRAKON (Dragon), a SDL- and AADL-influenced visual 2D programming language designed for developing the on-board hard real-time software system for automatic flight and landing of the Soviet/Russian Buran (Snowstorm) orbiting spacecraft\n\nExecutable UML, a profile of the Universal Modeling Language specification defining executable semantics for a subset of UML\n\nFlowchart\n\nSubtext\n\nSee also\n\n[edit]\n\nArgument map\n\nCognitive dimensions of notations - Notation assessment for visual and non-visual languages\n\nConcept map\n\nDataflow programming\n\nDeutsch limit, an aphorism about the information density of language primitives in a visual notation\n\nDomain-specific modeling\n\nDrag and drop\n\nFlow-based programming\n\nGraph drawing\n\nLow-code development platform\n\nNo-code development platform\n\nProgramming game\n\nUnified Modeling Language\n\nVisual language\n\nVisual modeling\n\nVisual thinking\n\nReferences\n\n[edit]\n\nBased on material from the Free On-line Dictionary of Computing, used with permission."
    }
}