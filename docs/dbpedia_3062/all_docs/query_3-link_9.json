{
    "id": "dbpedia_3062_3",
    "rank": 9,
    "data": {
        "url": "https://www.gspann.com/resources/blogs/effective-ways-of-optimizing-tableau-performance-and-building-interactive-dashboards/",
        "read_more_link": "",
        "language": "en",
        "title": "Optimize Tableau Performance and Build Interactive Dashboards",
        "top_image": "https://www.gspann.com/favicon-32x32.png?v=601b25856fe697e06400180ead463e9d",
        "meta_img": "https://www.gspann.com/favicon-32x32.png?v=601b25856fe697e06400180ead463e9d",
        "images": [
            "https://www.gspann.com/static/GSPANN-Logo-118e08f639b657b898557aacd9e34333.svg",
            "https://images.prismic.io/gspann/5989d59c-00e5-4156-b610-479cec5bbd37_Image+1_+Products+of+Tableau.jpg?auto=compress,format",
            "https://images.prismic.io/gspann/ae886c4b-3f61-4418-b1b8-c31777e72533_Image+2_+Tableau%E2%80%99s+Architecture.jpg?auto=compress,format",
            "https://images.prismic.io/gspann/9066ac16-6b49-4ee9-b366-cde059ff00b7_Image+3_+Tableau+Performance+Recording.jpg?auto=compress,format",
            "https://images.prismic.io/gspann/c3f7328e-7faf-4e73-8e42-02b99d72275d_Author+-+Madhuri.jpg?auto=compress,format",
            "https://images.prismic.io/gspann/653f47800b105250cf53bc7b_Thumbnail-300X225.jpg?auto=format%2Ccompress&rect=0%2C0%2C300%2C225&w=300&h=225",
            "https://images.prismic.io/gspann/7dbbef15-b61c-4fe3-9c7f-543dbf915c82_Thumbnail+-+300X225.jpg?auto=compress,format&rect=0,0,300,225&w=300&h=225",
            "https://images.prismic.io/gspann/8520b2b4-1fcf-446a-93a8-6877dc66240e_Thumbnail+-+300X225.jpg?auto=compress,format&rect=0,0,300,225&w=300&h=225",
            "https://gspann.cdn.prismic.io/gspann/7e0f9f1c-6ca0-484d-b995-9e24876afee2_Latest.svg",
            "https://images.prismic.io/gspann/653f47800b105250cf53bc7b_Thumbnail-300X225.jpg?auto=format%2Ccompress&rect=0%2C0%2C300%2C225&w=300&h=225",
            "https://images.prismic.io/gspann/7dbbef15-b61c-4fe3-9c7f-543dbf915c82_Thumbnail+-+300X225.jpg?auto=compress,format&rect=0,0,300,225&w=300&h=225",
            "https://images.prismic.io/gspann/8520b2b4-1fcf-446a-93a8-6877dc66240e_Thumbnail+-+300X225.jpg?auto=compress,format&rect=0,0,300,225&w=300&h=225",
            "https://gspann.cdn.prismic.io/gspann/7e0f9f1c-6ca0-484d-b995-9e24876afee2_Latest.svg",
            "https://images.prismic.io/gspann/653f47800b105250cf53bc7b_Thumbnail-300X225.jpg?auto=format%2Ccompress&rect=0%2C0%2C300%2C225&w=300&h=225",
            "https://images.prismic.io/gspann/ea6ea9ec-06ee-495b-bd5f-59a84f09d1a1_gspann-logo-white.svg?auto=compress,format"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Tableau performance",
            "Optimizing Tableau",
            "Tableau Optimization",
            "Analyze Tableau performance",
            "Tableau performance optimization",
            "Build Interactive Dashboards on Tableau",
            "creating reports on Tableau",
            "data visualization."
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "This blog will help you quickly improve Tableau performance and find effective ways of building Tableau report & interactive dashboards.",
        "meta_lang": "en",
        "meta_favicon": "/favicon-32x32.png?v=601b25856fe697e06400180ead463e9d",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Tableau is a great collaboration platform that is intuitive in nature. It allows a user to build interesting and visually-rich workbooks and dashboards. Tableau is a powerful and high-performing visualization tool that allows many organizations to deliver scalable solutions and make better business decisions.\n\nHow Does Tableau Function?\n\nTableau is a data visualization tool that projects descriptive information about images and visuals. It has the most powerful feature to connect any data source or databases, including cloud services. It helps in transforming data into a dashboard or story for illustration. Tableau includes five products, named Tableau Reader, Tableau Public, Tableau Server, Tableau Online, and Tableau Desktop. You would require advanced calculation and analytical methods to develop visual reports to get an interactive dashboard on Tableau Desktop.\n\nThe Performance Recording feature in Tableau records performance information of key events as you interact with a workbook. You can view performance metrics in a workbook that Tableau creates to analyze and troubleshoot different events known to affect the performance, called Query execution. To analyze Tableau's performance, it is crucial to understand the functionality of Tableau visualization and architecture.\n\nTableau has an n-tier architecture and enterprise-class business analytics platform to connect the users with the components mentioned below:\n\n1. Data Server: It has data sources from heterogeneous sources for Tableau desktop to capture analytical data visualizations, execute ad hoc queries, and help in decision-making. It also has data storage in the form of data marts, files, and cubes.\n\nData Warehouse\n\nData Marts\n\nFiles\n\nCubes\n\n2. Data Connectors: They provide an interface to connect external data sources to Tableau data servers. Inbuilt Open Database Connectivity (ODBC) SQL connectors can connect to any database without using native connectors. Tableau data engine includes random-access memory (RAM), read-only memory (ROM), and cache memory.\n\nMulti-Dimensional Expressions (MDX) Connectors\n\nSQL Connectors\n\nTableau Data Engine\n\n3. Tableau Components: These components play an important role in Tableau visualization. VizQL server sends a query to the database and fetches the data for reports. Every time data hits the database, it creates a time lag, leaving a temporary space as a cache to reduce the execution load time. These data servers pull the data extracts and help in connectivity. An application server plays a role in authenticating users for data visibility.\n\nVizQL Server\n\nData Server\n\nApplication Server\n\n4. Metadata Management: Metadata stores information for data security, data storage, and data calculation.\n\n5. Gateway: It channelizes the request from the user to a Tableau component every time the client makes a request, forwarding it to an external load balancer for processing.\n\nHow to Optimize Tableau Performance?\n\nYou can start by recording the performance. Go to Help > Settings and Performance > Start Performance Recording. The performance recorder can make you aware of the slow worksheets, slow queries, and long render time on dashboards. It will help in identifying query text for optimization at the database level.\n\nCreate Tableau to analyze and troubleshoot different events that are known to affect performance:\n\nQuery execution, query compilation, geocoding, connections to data sources, layout computations, extract generation, blending data, server rendering (Tableau Server only)\n\nData rendering is an important point of Tableau performance, initiated by taking a few precautionary measures to optimize Tableau performance and reports.\n\nWhat is the Role of Indexes and How do They Improve Report Performance in Tableau?\n\nIndexes improve query execution of the table when they join conditions, and these are executed for respected columns. Check indexes created on filters used by the report or requirement, along with primary and foreign keys. It’s important to conduct primary execution at the database level to check data performance.\n\nTo partition or not to partition\n\nIf you want to keep the live connection, it is recommended to split the database into multiple parts. If you moved every project data into its own table, you can bring the data back into Tableau using a wildcard union.\n\nBy using a partitioned database, the loading time is reduced to 13 seconds since the performance recorder calculates the time it takes to generate the extract and performs a comparison between the two as well.\n\nOptimizing at the database level\n\nExperts never recommend working on a live database connection. Although everyone is expected to eventually move on to an extract, there is a value in making Tableau optimization at the database level. In the current scenarios, developers are compelled to use live connections to expedite the extract durations. Tableau helps developers translate actions into SQL queries inside the performance reports. An SQL query is a lot easier to understand as opposed to XML ones used on Tableau extracts. However, it is important to make sure that queries always run in parallel.\n\nTableau data extract\n\nIt works faster with data extracts as it quickens query execution or optimization, ensuring faster data retrieval. You can limit the number of column usage by hiding and restricting the data using filters at the data extract level. A join in a custom query will end in slow downing the report, hence, it’s better to materialize the view at the database level.\n\nFilters\n\nApplying filters in a Tableau report and restricting the data also improves the report performance. Context filters expedite report execution and check for any changes. You can replace quick filters showing only relevant values that would cascade since the users interact and they perform faster. Select the \"hide all unused fields\" option from Tableau to exclude all unused fields from the extract while minimizing the extract refresh time and custom SQL query time.\n\nCalculations\n\nCalculations play another major role in the Tableau report performance. You must always use Boolean when the conditions Tableau are applied and, on the aggregation part, Min. or Max. instead of AVG. case statement for group visualizations, which would return a faster output. Try to create calculations at the database level when it is a production view. Limit the usage of marks on view, row-level calculations, and blended calculations.\n\nPublishing\n\nAfter publishing a dashboard to the Tableau Server, the local computation may impact the server. Thus, it’s best to limit the usage of groups, hierarchies, blending, table calculations, and reference lines. Table calculations are powerful and can be slowly performed as they are dependent on the Tableau engine.\n\nEffective Ways of Building Interactive Tableau Dashboards\n\nA well-designed dashboard can align an organization's efforts, help uncover key insights, and improve decision-making. It’s important to build an effective dashboard by using a strategic, operational, analytical, and tactical approach to reach the right audience.\n\nHere are five principles of building an interactive Tableau dashboard:\n\n1. Combining Reports\n\nA dashboard offers key information and precise data. You can choose a dynamic layout where you can split the information into a segment for a proper and better understanding of the report.It’s recommended to avoid using automatic sizing to fix a dashboard size.\n\n2. Provide Context\n\nIt’s important to provide a brief with a properly labeled axis on the dashboard. An effective designing tip for data comparison is required to compare data against targets, projected values, and date/period. An effective report would be easy for you to understand and read at the first glance. It’s also best to avoid using larger file images to reduce the loading time.\n\n3. Custom SQL\n\nYou must avoid using custom SQL in live connections, rather, use views to implement custom SQL and connect Tableau to the view. Tableau creates sub-queries for custom SQL that are difficult for databases to handle, hence, it’s suggested to use views in the database or multiple joins instead of using custom SQL.\n\n4. Limit the Number of Views\n\nIt is a good idea to limit the number of views you include in a dashboard to two or three. If you add too many views, you may lose visual clarity in the details. You can always create more dashboards to enhance the story scope, but too many views may interfere with the performance of your dashboard after it is published.\n\n5. Enable Highlighting\n\nThe highlight button on the toolbar is used to show highlights between the views. When highlighting is on, a selection in one view highlights the related data in other views. The highlighter can be turned on for all fields or some specific selected fields.\n\nYou also have the option to display a highlighter that allows customers to highlight certain parts of a view, based on what they enter or select.\n\nEndnote\n\nA Tableau Server has powerful capabilities that govern the data sources, database connections, workbooks, and more through processes, but these capabilities can only be utilized when the Tableau is optimized for that kind of performance.\n\nWe, at GSPANN, have tested everything to find what works the best in different scenarios. However, explaining everything in a blog is like trying to capture a whole subject into a chapter. While we hope you get maximum value from this information, don’t hesitate to reach out to us."
    }
}