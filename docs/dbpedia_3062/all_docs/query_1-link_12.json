{
    "id": "dbpedia_3062_1",
    "rank": 12,
    "data": {
        "url": "https://stackoverflow.com/questions/30798279/compel-a-method-with-specific-annotation-to-have-specific-parameters-signature",
        "read_more_link": "",
        "language": "en",
        "title": "Compel a method with specific annotation to have specific parameters/signature",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://www.gravatar.com/avatar/9507f22452711fdde0abd18750b0ca87?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/m0V51.jpg?s=64",
            "https://www.gravatar.com/avatar/1593ecf28b204068027f050329d171b4?s=64&d=identicon&r=PG",
            "https://stackoverflow.com/posts/30798279/ivc/599f?prg=3e58e833-12dd-4c3f-a38e-86e5fee7557d"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2015-06-12T08:07:29",
        "summary": "",
        "meta_description": "I have an annotation as:\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n@Target(",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/30798279/compel-a-method-with-specific-annotation-to-have-specific-parameters-signature",
        "text": "I have an annotation as:\n\nimport java.lang.annotation.ElementType; import java.lang.annotation.Retention; import java.lang.annotation.RetentionPolicy; import java.lang.annotation.Target; @Target(ElementType.METHOD) @Retention(RetentionPolicy.RUNTIME) public @interface MyAnnotation { String annotationArgument1() default \"\"; String annotationArgument2(); }\n\nI have two classes as:\n\nclass MyClass1 { @MyAnnotation(annotationArgument1=\"ABC\", annotationArgument2=\"XYZ\") public void method1(MyClass2 object) { //do something } @MyAnnotation(annotationArgument1=\"MNO\", annotationArgument2=\"PQR\") public void method2(MyClass2 object) { //do something } } class MyClass2 { int num; }\n\nI want method1 and method2 (or any other method in any other class annotated with @MyAnnotation) to take only one argument as MyClass2 because they are annotated with @MyAnnotation. If some other argument is passed, it must give a compile time error.\n\nIs it actually possible to do this? If yes, how can it be done and if no, what is alternate to make this kind of behavior possible?"
    }
}