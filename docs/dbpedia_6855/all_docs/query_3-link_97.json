{
    "id": "dbpedia_6855_3",
    "rank": 97,
    "data": {
        "url": "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/bnchelp.html",
        "read_more_link": "",
        "language": "en",
        "title": "BKG Ntrip Client",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/BKG_Logo_oS.jpg",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/ntrip-logo.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure01.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure02.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure03.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure04.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure05.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure06.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure07.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure08.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure09.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure10.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure11.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure12.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure13.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure14.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure15.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure16.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure17.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure18.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure19.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure20.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure21.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure22.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure23.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure24.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure25.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure26.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure27.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure28.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure29.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure30.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure31.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure32.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure33.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure34.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure35.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure36.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure37.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure38.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure39.png",
            "https://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/IMG/Figure40.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Authors\n\nGeorg Weber(1), Leoš Mervart(2), Andrea Stürze(1), Dirk Stöcker(3)\n\n(1) Federal Agency for Cartography and Geodesy (BKG), Frankfurt, Germany\n\n(2) Czech Technical University (CTU), Department of Geomatics, Prague, Czech Republic\n\n(3) Alberding GmbH, Wildau, Germany\n\nContact\n\nFeel free to send comments, suggestions or bug reports to:\n\nFederal Agency for Cartography and Geodesy (BKG) Department of Geodesy, Section Satellite Navigation Richard-Strauss-Allee 11 60598 Frankfurt am Main, Germany email: igs-ip@bkg.bund.de\n\nLegal Notice\n\nBNC has been written under GNU General Public License (GPL). Source code is available from Subversion software archive https://software.rtcm-ntrip.org/svn/trunk/BNC. Precompiled binaries of BNC are available for MS Windows, Linux, and Mac OS X systems. They can be downloaded from https://igs.bkg.bund.de/ntrip/bnc.\n\nCopyright © 2005-2023 Federal Agency for Cartography and Geodesy (BKG), Frankfurt, Germany\n\nCitation\n\nTo help justify funding the development of BNC, we kindly ask users to include a citation when applying the software results in a publication. We suggest:\n\nWeber, G., L. Mervart, A. Stürze, A. Rülke and D. Stöcker (2016): BKG Ntrip Client, Version 2.12. Mitteilungen des Bundesamtes für Kartographie und Geodäsie, Vol. 49, Frankfurt am Main, 2016.\n\nTable of Contents\n\n1. General Information\n\n1.1 Purpose\n\n1.2 Supported GNSS\n\n1.3 Data Flow\n\n1.4 Handling\n\n1.5 Installation\n\n1.5.1 Compilation\n\n1.6 Configuration\n\n1.6.1 Examples\n\n1.7 Limitations\n\n1.8 Looking Back\n\n2. Settings Details\n\n2.1 Top Menu Bar\n\n2.1.1 File\n\n2.1.2 Help\n\n2.2 Network\n\n2.2.1 Proxy\n\n2.2.2 SSL\n\n2.3 General\n\n2.3.1 Logfile\n\n2.3.2 Append Files\n\n2.3.3 Reread Configuration\n\n2.3.4 Auto Start\n\n2.3.5 Raw Output File\n\n2.4 RINEX Observations\n\n2.4.1 Filenames\n\n2.4.2 Directory\n\n2.4.3 File Interval\n\n2.4.4 Sampling\n\n2.4.5 Skeleton Extension\n\n2.4.6 Skeleton Mandatory\n\n2.4.7 Skeleton Directory\n\n2.4.8 Script\n\n2.4.9 Version 3 and 4\n\n2.4.10 Version 2\n\n2.5 RINEX Ephemeris\n\n2.5.1 Directory\n\n2.5.2 Interval\n\n2.5.3 Port\n\n2.5.4 Version\n\n2.6 RINEX Editing & QC\n\n2.6.1 Action\n\n2.6.2 Input Files\n\n2.6.3 Output Files\n\n2.6.4 Logfiles\n\n2.6.5 Plots for Signals\n\n2.6.6 Directory for Plots\n\n2.6.7 Set Edit Options\n\n2.6.8 Command Line, No Window\n\n2.7 SP3 Comparison\n\n2.7.1 Input SP3 Files\n\n2.7.2 Exclude Satellites\n\n2.7.3 Logfile\n\n2.8 Broadcast Corrections\n\n2.8.1 Directory, ASCII\n\n2.8.2 Interval\n\n2.8.3 Port\n\n2.8.4 Wait for Full Corr Epoch\n\n2.9 Feed Engine\n\n2.9.1 Port\n\n2.9.2 Wait for Full Obs Epoch\n\n2.9.3 Sampling\n\n2.9.4 File\n\n2.9.5 Port (unsynchronized)\n\n2.10 Serial Output\n\n2.10.1 Mountpoint\n\n2.10.2 Port Name\n\n2.10.3 Baud Rate\n\n2.10.4 Flow Control\n\n2.10.5 Parity\n\n2.10.6 Data Bits\n\n2.10.7 Stop Bits\n\n2.10.8 NMEA\n\n2.10.9 File\n\n2.10.10 Height\n\n2.10.11 Sampling\n\n2.11 Outages\n\n2.11.1. Observation Rate\n\n2.11.2. Failure Threshold\n\n2.11.3. Recovery Threshold\n\n2.11.4. Script\n\n2.12 Miscellaneous\n\n2.12.1. Mountpoint\n\n2.12.2. Log Latency\n\n2.12.3. Scan RTCM\n\n2.12.4. Port\n\n2.13 PPP Client\n\n2.13.1 PPP (1): Input and Output\n\n2.13.1.1 Data Source\n\n2.13.1.2 Corrections Stream\n\n2.13.1.3 Corrections File\n\n2.13.1.4 Ionosphere Stream\n\n2.13.1.5 Ionosphere File\n\n2.13.1.6 RINEX Observation File\n\n2.13.1.7 RINEX Navigation File\n\n2.13.1.8 ANTEX File\n\n2.13.1.9 Coordinates File\n\n2.13.1.10 BLQ File\n\n2.13.1.11 Logfile Directory\n\n2.13.1.12 NMEA Directory\n\n2.13.1.13 SNX TRO Directory\n\n2.13.1.13.1 Interval\n\n2.13.1.13.2 Sampling\n\n2.13.1.13.3 Analysis Center\n\n2.13.1.13.4 Solution ID\n\n2.13.2 PPP (2): Processing Options\n\n2.13.2.1 GNSS Observations\n\n2.13.2.2 Code Observations\n\n2.13.2.3 Phase Observations\n\n2.13.2.4 Elevation Dependent Weighting\n\n2.13.2.5 Minimum Number of Observations\n\n2.13.2.6 Minimum Elevation\n\n2.13.2.7 Wait for Clock Corrections\n\n2.13.2.8 Seeding\n\n2.13.2.9 Constraints\n\n2.13.2.10 GIM Pseudo Observations\n\n2.13.3 PPP (3): Processed Stations\n\n2.13.3.1 Station\n\n2.13.3.2 Sigma North/East/Up\n\n2.13.3.3 Noise North/East/Up\n\n2.13.3.4 Tropo Sigma\n\n2.13.3.5 Tropo Noise\n\n2.13.3.6 NMEA Port\n\n2.13.3.6 Signal Priorities\n\n2.13.4 PPP (4): Plots\n\n2.13.4.1 PPP Plot\n\n2.13.4.2 Audio Response\n\n2.13.4.3 Track Map\n\n2.13.4.4 Dot-properties\n\n2.13.4.4.1 Size\n\n2.13.4.4.2 Color\n\n2.13.4.5 Post Processing Speed\n\n2.14 Combine Corrections\n\n2.14.1 Combine Corrections Table\n\n2.14.1.1 Add Row, Delete\n\n2.14.1.2 Method\n\n2.14.1.3 Maximal Clock Residuum\n\n2.14.1.4 Maximal Orbit Displacement\n\n2.14.1.5 Sampling\n\n2.14.1.6 Satellite Systems\n\n2.15 Upload Corrections\n\n2.15.1 Add, Delete Row\n\n2.15.2 Host, Port, Mountpoint, Ntrip Version, User and Password\n\n2.15.3 System\n\n2.15.4 Format\n\n2.15.5 Center of Mass\n\n2.15.6 SP3 File\n\n2.15.7 RNX File\n\n2.15.8 BSX File\n\n2.15.9 PID, SID, IOD\n\n2.15.10 Interval\n\n2.15.11 Sampling\n\n2.15.11.1 Orbits\n\n2.15.11.2 SP3\n\n2.15.11.3 RINEX\n\n2.15.11.4 SINEX\n\n2.15.12 Custom Trafo\n\n2.15.13 ANTEX File\n\n2.16 Upload Ephemeris\n\n2.16.1 Host & Port\n\n2.16.2 Mountpoint, Ntrip Version, User, Password\n\n2.16.3 Satellite System\n\n2.16.4 Sampling\n\n2.17 Streams Canvas\n\n2.17.1 Edit Streams\n\n2.17.2 Delete Stream\n\n2.17.3 Reconfigure Stream Selection On-the-fly\n\n2.18 Logging Canvas\n\n2.18.1 Log\n\n2.18.2 Throughput\n\n2.18.3 Latency\n\n2.18.4 PPP Plot\n\n2.19 Bottom Menu Bar\n\n2.19.1 Add Stream\n\n2.19.1.1 Add Stream - Coming from Caster\n\n2.19.1.1.1 Caster Host and Port\n\n2.19.1.1.2 Casters Table\n\n2.19.1.1.3 User and Password\n\n2.19.1.1.4 Get Table\n\n2.19.1.1.5 Ntrip Version\n\n2.19.1.1.6 Map\n\n2.19.1.2 Add Stream - Coming from TCP/IP Port\n\n2.19.1.3 Add Stream - Coming from UDP Port\n\n2.19.1.4 Add Stream - Coming from Serial Port\n\n2.19.2 Delete Stream\n\n2.19.3 Map\n\n2.19.4 Start\n\n2.19.5 Stop\n\n2.19.6 Help? = Shift+F1\n\n2.20 Command Line Options\n\n2.20.1 Version\n\n2.20.2 Display\n\n2.20.3 No Window Mode\n\n2.20.4 File Mode\n\n2.20.5 Configuration File\n\n2.20.6 Configuration Options\n\n3. Annex\n\n3.1 RTCM Standards\n\n3.1.1 Ntrip Version 1\n\n3.1.2 Ntrip Version 2\n\n3.1.3 RTCM Version 2\n\n3.1.4 RTCM Version 3\n\n3.2 Command Line Help\n\n3.3 Further Reading\n\n3.4 Abbreviations\n\nList of Figures\n\nFig. TitleChapter 1Flowchart, BNC connected to a GNSS rover for Precise Point Positioning1.3 2Flowchart, BNC converting RTCM streams to RINEX batches1.3 3Flowchart, BNC feeding a real-time GNSS engine and uploading encoded Broadcast Corrections1.3 4Flowchart, BNC combining Broadcast Correction streams1.3 5Sections on BNC's main window1.4 6Management of configuration options in BNC1.6 7BNC's 'Network' panel configured to ignore eventually occurring SSL error messages2.2.2 8BNC translating incoming RTCM Version 3 Observation streams to 15 min RINEX Version 4 Observation files2.4 9Example for creating RINEX quality check analysis graphics output with BNC2.6.5 10Example for satellite availability, elevation and PDOP plots as a result of a RINEX quality check analysis with BNC2.6.5 11Sky plot examples for multipath, part of RINEX quality check analysis with BNC2.6.5 12Sky plot examples for signal-to-noise ratio, part of RINEX quality check analysis with BNC2.6.5 13Example for BNC's 'RINEX Editing Options' window2.6.7 14Example for RINEX file concatenation with BNC2.6.7 15Example for comparing two SP3 files with satellite orbit and clock data using BNC2.7 16Graphical results from an example comparison of two SP3 files with satellite orbit and clock data using BNC2.7.3 17Example for pulling, saving and output of Broadcast Corrections using BNC2.8.3 18Synchronized BNC output via IP port to feed a GNSS real-time engine2.9 19Flowcharts, BNC forwarding a stream to a serially connected receiver; sending NMEA sentences is mandatory for VRS streams2.10 20BNC pulling a RTCM Version 3 stream to feed a serial connected receiver with observations from a nearby reference station for conventional RTK2.10 21RTCM message numbers, latencies and observation types logged by BNC2.12 22Real-time Precise Point Positioning with BNC, PPP Panel 12.13.1 23Precise Point Positioning with BNC, PPP Panel 22.13.2 24Precise Point Positioning with BNC in 'Quick-Start' mode, PPP Panel 42.13.2.10 25Precise Point Positioning with BNC, PPP Panel 32.13.3 26Track of positions from BNC with OpenStreetMap in background2.13.4.3 27BNC combining Broadcast Correction streams2.14 28'INTERNAL' PPP with BNC using a combination of Broadcast Corrections2.14 29BNC producing Broadcast Corrections from incoming precise orbits and clocks and uploading them to an Ntrip Broadcaster2.15 30Setting BNC's Custom Transformation Parameters window2.15.3 31BNC uploading a combined Broadcast Correction stream2.15.12 32BNC producing Broadcast Ephemeris streams from globally distributed RTCM streams; upload in RTCM format to an Ntrip Broadcaster2.16.3 33Bandwidth consumption of RTCM streams received by BNC2.18.2 34Latency of RTCM streams received by BNC2.18.3 35Example for time series plot of displacements produced by BNC2.18.4 36Steam input communication links accepted by BNC2.19 37BNC's 'Select Broadcaster' table2.19.1.1.2 38Broadcaster source-table shown by BNC2.19.1.1.4 39Stream distribution map shown by BNC as derived from Ntrip Broadcaster source-table2.19.1.1.6 40BNC configuration for pulling a stream via serial port2.19.1.4\n\nList of Tables\n\nTab. TitleChapter 1Status of RTCM Version 3 message implementations in BNC supporting various GNSS systems1.2 2Contents and format of synchronized output of observations feeding a GNSS engine2.9\n\n1. General Information\n\nThe BKG Ntrip Client (BNC) is a program for simultaneously retrieving, decoding, converting and processing or analyzing real-time GNSS data streams applying the 'Networked Transport of RTCM via Internet Protocol' (Ntrip) standard. It has been developed within the framework of the IAG sub-commission for Europe (EUREF) and the International GNSS Service (IGS). Although meant to be a real-time tool, it comes with some post processing functionality. It can be used for data coming from Ntrip Broadcasters like\n\nhttp://euref-ip.net/home\n\nhttp://igs-ip.net/home\n\nhttp://products.igs-ip.net/home\n\nor similar caster installation.\n\nDocumentation\n\nBNC provides context-sensitive help (What's This) related to specific objects. Furthermore, it comes with severl example configurations. The here presented documentation is available as part of the software, as a PDF file and can be find as well as an online documentation: http://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/src/bnchelp.html.\n\nNote that some figures presented in this documentation may show screenshots from earlier versions of BNC. If so, there is either no relevant change compared to the current appearance of the program or no change at all.\n\nAcknowledgements\n\nOliver Montenbruck, German Space Operations Center, DLR, Oberpfaffenhofen, Germany published a RTCM Version 2 decoder unter GNU GPL which has been integrated in BNC.\n\nAndre Hauschild, German Space Operations Center, DLR, revised the RTCM Version 2 decoder and has provided a lot of hints regarding bugs and new features.\n\nZdenek Lukes, Czech Technical University Prague, Department of Geodesy, extended the RTCM Version 2 decoder to handle message types 3, 20, 21, and 22 and added the loss of lock indicator.\n\nLennard Huisman, Kadaster Netherlands, and Rolf Dach, Astronomical Institute University of Bern, assisted in handling satellite clocks in transformations from ITRF to regional reference frames.\n\nDenis Laurichesse, Centre National d'Etudes Spatiales (CNES), suggested synchronizing observations and clock corrections to reduce high frequency noise in PPP solutions.\n\nAlexis Blot, Centre National d'Etudes Spatiales (CNES), has provided a lot of hints regarding bugs and new features. Furthermore he has helped in the interoperability tests of RTCM-SSR and IGS-SSR format as well as the therefore used RTNET Interface.\n\nLoukis Agrotis, Symban Ltd, has provided a lot of hints regarding bugs and new features.\n\nErwin Wiesensarter, Federal Agency for Cartography and Geodesy (BKG), provides actual builds of BNC for several Linux operating systems as well as for Mac OS X systems. Furthermore, he has provided some helpful scripts available under http://software.rtcm-ntrip.org/export/HEAD/ntrip/trunk/BNC/scripts.\n\nPeter Neumaier, Federal Agency for Cartography and Geodesy (BKG), provide the Windows MSI File and helps a lot regarding testing and user support.\n\n1.1 Purpose\n\nPromoting Open RTCM Standards for streaming GNSS data over the Internet has been a major aspect in developing BNC as Open Source real-time software. Basically, the tool enables the test, validation and further evolution of new RTCM messages for precise satellite navigation. With high-level source code at hand, it also allows university education to catch up with comprehensive state-of-the-art positioning and potentially contributes fresh ideas which are free from any licensing.\n\nBNC was designed to serve the following purposes:\n\nRetrieve real-time GNSS data streams available through the Ntrip transport protocol\n\nRetrieve real-time GNSS data streams via TCP directly from an IP address without using the Ntrip transport protocol\n\nRetrieve real-time GNSS data streams from a local UDP or serial port without using the Ntrip transport protocol\n\nPlot stream distribution map from Ntrip Broadcaster source-tables\n\nGenerate RINEX Observation and Navigation files to support near real-time GNSS post processing applications\n\nEdit or concatenate RINEX files or carry out RINEX Quality Checks (QC)\n\nHandle RINEX Versions 2, 3 and 4 Observation and Navigation files\n\nCompare SP3 files containing satellite orbit and clock data\n\nGenerate State Space Represenation (SSR) messages through an IP port to\n\nsupport real-time Precise Point Positioning on GNSS rovers\n\nsupport the (outside) combination of such streams as coming simultaneously from various correction providers\n\nGenerate ephemeris and synchronized or unsynchronized observations epoch by epoch through an IP port to support real-time GNSS network engines\n\nFeed a stream into a GNSS receiver via serial communication link\n\nMonitor the performance of a network of real-time GNSS data streams to generate advisory notes in case of outages or corrupted streams\n\nScan RTCM streams for incoming antenna information, observation types, message types and repetition rates and latencies and GLONASS slot numbers and frequency channels\n\nCarry out real-time Precise Point Positioning to determine GNSS rover positions\n\nEnable multi-station Precise Point Positioning for simultaneous processing of observations from a whole network of receivers\n\nPlot positions derived via PPP from RTCM streams or RINEX files on maps from OpenStreetMap\n\nSimultaneously process several SSR streams to produce, encode and upload combined SSR streams\n\nEstimate real-time tropospheric zenith path delays and save them in SINEX troposphere file format\n\nRead GNSS orbits and clocks in a plain ASCII format from an IP port. They can be produced by a real-time GNSS engine and should be referenced to the IGS Earth-Centered-Earth-Fixed (ECEF) reference system. BNC will then\n\nConvert the IGS Earth-Centered-Earth-Fixed orbits and clocks into Broadcast Corrections with radial, along-track and out-of-plane components\n\nUpload Broadcast Corrections as an RTCM-SSR or IGS-SSR stream to an Ntrip Broadcaster\n\nRefer the orbit and clock corrections to a specific reference system\n\nLog the Broadcast Clock Corrections as Clock RINEX files for further processing using other tools than BNC\n\nLog the Broadcast Orbit and Clock Corrections as SP3 files for further processing using other tools than BNC\n\nLog the Code and Phase Biases as SINEX Bias files for further processing using other tools than BNC\n\nUpload a Broadcast Ephemeris stream in RTCM Version 3 format;\n\nBNC supports the following GNSS stream formats and message types:\n\nRTCM Version 2 message types\n\nRTCM Version 3 legacy message types\n\nRTCM Version 3 Multiple Signal Messages (MSM) and High Precision Multiple Signal Messages (HP MSM)\n\nRTCM Version 3 message types for Broadcast Ephemeris\n\nRTCM Version 3 State Space Representation (SSR) messages\n\nIGS State Space Representation (SSR) Version 1 messages\n\nRTNET, a plain ASCII format defined within BNC to receive SSR informations from a serving GNSS engine\n\nBNC supports the following GNSS file formats:\n\nRINEX Version 2.11, 3.x and 4.x, Receiver Independent Exchange format for observation and navigation data\n\nThe Extended Standard Product 3 Orbit Format SP3-d\n\nClock RINEX Version 3.04 format for (station and) satellite clock solutions\n\nSINEX BIAS â Solution (Software/technique) INdependent EXchange Format for GNSS Biases Version 1.00\n\nSINEX TRO â Solution (Software/technique) INdependent EXchange Format for TROpospherican meteorological parameters Version 2.0\n\nANTEX Version 1.4, Antenna Exchange format for Antenna Phase Center variations\n\nNMEA Version 0813, National Marine Electronics Association format for satellite navigation data\n\nA plain ASCII format defined within BNC to save all SSR informations within a file\n\nNote that BNC allows to by-pass decoding and conversion algorithms for incoming streams, leaves whatever is received untouched to save it in files or output it through a local TCP/IP port.\n\n1.2 Supported GNSS\n\nBNC is permanently completed to finally support all existing GNSS systems throughout all features of the program. The table below shows in detail which GNSS systems are supported so far by particular applications when using the latest BNC version. Application areas named here are:\n\nDecoding of RTCM, RTCM-SSR, IGS-SSR and RTNET streams\n\nRINEX and SINEX Bias file input and output\n\nSINEX TRO and SP3 file output\n\nEncoding of SSR and ephemeris messages\n\nUpload of SSR and ephemeris messages\n\nPPP (Precise Point Positioning)\n\nCombining/merging SSR or ephemeris messages from various real-time sources\n\nThe table indicates if a message implementation in BNC could so far only be based on a 'RTCM Proposal'.\n\nTable 1: Status of RTCM Version 3 message implementations in BNC supporting various GNSS systems\n\nMessage\n\nType # Description GNSS\n\nSystem RTCM\n\nProposal Decoding RINEX/\n\nSP3 Encoding Upload PPP Combin.\n\nGeneral 1005,1006 Station x 1007,1008 Antenna x 1033 Receiver, Antenna x 1013 System Parameters x\n\nNavigation 1019 Ephemeris GPS x x x x x x 1020 Ephemeris GLONASS x x x x x x 1045 Ephemeris Galileo F/Nav x x x x x 1046 Ephemeris Galileo I/Nav x x x x x x 1043 Ephemeris SBAS x x x x x x 1044 Ephemeris QZSS x x x x x 1042 Ephemeris BDS x x x x x x 1041 Ephemeris IRNSS x x x x x\n\nObservation 1001-4 Conventional Messages GPS x x x 1009-12 Conventional Messages GLONASS x x x\n\nObservation 1071-77 Multiple Signal Message GPS x x x 1081-87 Multiple Signal Message GLONASS x x x 1091-97 Multiple Signal Message Galileo x x x 1101-07 Multiple Signal Message SBAS x x 1111-17 Multiple Signal Message QZSS x x 1121-27 Multiple Signal Message BDS x x x 1131-37 Multiple Signal Message IRNSS x x\n\nRTCM SSR I 1057 Orbit Corrections GPS x x x x x x 1063 Orbit Corrections GLONASS x x x x x x 1240 Orbit Corrections Galileo x x x x x x x 1246 Orbit Corrections SBAS x x x x x x 1252 Orbit Corrections QZSS x x x x x x 1258 Orbit Corrections BDS x x x x x x x 1058 Clock Corrections GPS x x x x x x 1064 Clock Corrections GLONASS x x x x x x 1241 Clock Corrections Galileo x x x x x x x 1247 Clock Corrections SBAS x x x x x x 1253 Clock Corrections QZSS x x x x x x 1259 Clock Corrections BDS x x x x x x x 1059 Code Biases GPS x x x x x x 1065 Code Biases GLONASS x x x x x x 1242 Code Biases Galileo x x x x x x x 1248 Code Biases SBAS x x x x x x 1254 Code Biases QZSS x x x x x x 1260 Code Biases BDS x x x x x x x 1061, 1062 User Range Accuracy, HR GPS x 1067, 1068 User Range Accuracy, HR GLONASS x 1244, 1245 User Range Accuracy, HR Galileo x x 1250, 1251 User Range Accuracy, HR SBAS x x 1256, 1257 User Range Accuracy, HR QZSS x x 1262, 1263 User Range Accuracy, HR BDS x x 1060 Comb. Orbits & Clocks GPS x x x x x x 1066 Comb. Orbits & Clocks GLONASS x x x x x x 1243 Comb. Orbits & Clocks Galileo x x x x x x x 1249 Comb. Orbits & Clocks SBAS x x x x x x 1255 Comb. Orbits & Clocks QZSS x x x x x x 1261 Comb. Orbits & Clocks BDS x x x x x x x\n\nRTCM SSR II 1264 VTEC GNSS x x x x x x 1265 Phase Biases GPS x x x x x x 1266 Phase Biases GLONASS x x x x x x 1267 Phase Biases Galileo x x x x x x 1268 Phase Biases SBAS x x x x x 1269 Phase Biases QZSS x x x x x 1270 Phase Biases BDS x x x x x x\n\nIGS SSR 4076 IGS SSR GNSS x x x x x x\n\n1.3 Data Flow\n\nBNC can be used in different contexts with varying data flows. Typical real-time communication follows the Ntrip protocol over TCP/IP (also via SSL), RTSP/RTP or UDP, plain TCP/IP protocol, or serial communication links. Stream content could be observations, ephemeris, SSR products or NMEA sentences.\n\nThe first of the following figures shows a flow chart of BNC connected to a GNSS receiver providing observations via serial or TCP communication link for the purpose of Precise Point Positioning.\n\nFigure 1: Flowchart, BNC connected to a GNSS rover for Precise Point Positioning\n\nThe second figure shows the conversion of RTCM streams to RINEX files.\n\nFigure 2: Flowchart, BNC converting RTCM streams to RINEX batches\n\nThe third figure shows a flow chart of BNC feeding a real-time GNSS engine, which estimates precise orbits and clocks. BNC is used in this scenario to encode SSR corrections to RTCM-SSR or IGS-SSR and upload them to an Ntrip Broadcaster.\n\nFigure 3: Flowchart, BNC feeding a real-time GNSS engine and uploading encoded Broadcast Corrections\n\nThe fourth figure shows BNC combining several Broadcast SSR Correction streams to disseminate the combination product while saving results in SP3, Clock RINEX and SINEX Bias files.\n\nFigure 4: Flowchart, BNC combining Broadcast Correction streams\n\n1.4 Handling\n\nAlthough BNC is mainly a real-time tool to be operated online, it can be run offline\n\nTo simulate real-time observation situations for debugging purposes;\n\nFor post processing purposes.\n\nFurthermore, apart from its regular window mode, BNC can be run as a batch/background job in a 'no window' mode, using processing options from a previously saved configuration or from command line.\n\nUnless it runs offline, BNC\n\nRequires access to the Internet with a minimum of about 2 to 6 kbits/sec per stream depending on the stream format and the number of visible satellites. You need to make sure that the connection can sustain the required bandwidth;\n\nRequires the clock of the host computer to be properly synchronized;\n\nHas the capacity to retrieve hundreds of GNSS data streams simultaneously. Please be aware that such usage may incur a heavy load on the Ntrip Broadcaster side depending on the number of streams requested. We recommend limiting the number of streams where possible to avoid unnecessary workload.\n\nThe main window of BNC shows a 'Top menu bar' section, a 'Settings' sections with panels to set processing options, a 'Streams' section, a section for 'Log' tabs, and a 'Bottom menu bar' section, see figure below.\n\nFigure 5: Sections on BNC's main window\n\nRunning BNC in interactive mode requires graphics support. This is also required in batch mode when producing plots. Windows and Mac OS X systems always support graphics. However, when using BNC in batch mode on Linux systems for producing plots, you need to make sure that at least a virtual X-Server like 'Xvfb' is installed and the '-display' command line option is used. Alternatively, the command line option '--plattform' can be tried to use with the argument 'offscreen' and the '-display' command line option.\n\nThe usual handling of BNC is that you first select a number of streams ('Add Stream'). Any stream configured to BNC shows up on the 'Streams' canvas in the middle of BNC's main window. You then go through BNC's various configuration panels to set a combination of input, processing and output options before you start the program ('Start'). Most configuration panels are dedicated to a certain function of BNC. If the first option field on such a configuration panel is empty, the affected functionality is deactivated.\n\nRecords of BNC's activities are shown in the 'Log' tab which is part of the 'Log' canvas. The bandwidth consumption per stream, the latency of incoming observations, and a PPP time series for coordinate displacements are also part of that canvas and shown in the 'Throughput', 'Latency' and 'PPP Plot' tabs.\n\nConfiguration options are usually first set using BNC's Graphical User Interface (GUI), then saved in a configuration file. For routine operations in batch mode all of BNC's configuration options can be extracted from the configuration file and applied using the program's Command Line Interface (CLI).\n\n1.5 Installation\n\nPrecompiled builds of BNC are available for Windows, Linux, and Mac OS X systems. They can be downloaded for installation from https://igs.bkg.bund.de/ntrip/bnc. Please ensure that you always use the latest version of the program.\n\nWindows: A dynamically compiled shared library build for Mircrosoft Windows systems is provided as Microsoft Installer (MSI) file. MSI files are used for installation, storage, and removal of programs. The BNC files are contained in a MSI package, which is used with the program's client-side installer service, an .EXE file, to open and install the program. We used the MSVC 2019 compiler to create BNC for Windows. After installation your 'bnc.exe' file shows up e.g. under 'All Programs'.\n\nLinux: Shared library builds for BNC are provided for a selection of Linux distributions. Download the ZIP archive for a version which fits to your Linux system, unzip the archive and run the included BNC binary.\n\nMac OS X Build: A shared library 'Disk iMaGe' (DMG) file is provided for BNC on OS X systems; it also comes in a ZIP archive. The DMG file format is used in the Mac for distributing software. Mac install packages appear as a virtual disk drive. After download, when the DMG file icon is double clicked, the virtual drive is 'mounted' on the desktop. Install BNC by dragging the 'bnc.app' icon to your '/Applications' folder. To start BNC, double click on '/Applications/bnc.app'. You could also start BNC via Command Line Interface (CLI) using command '/Applications/bnc.app/Contents/MacOS/bnc'.\n\n1.5.1 Compilation\n\nBNC has been written as Open Source and published under GNU General Public License (GPL). The latest source code can be checked out from the Subversion repository at http://software.rtcm-ntrip.org/svn/trunk/BNC. A ZIP archive available from https://igs.bkg.bund.de/ntrip/bnc provides the source code.\n\nThe following describes how you can produce your own builds of BNC on Windows, Linux, and Mac systems. It is likely that BNC can also be compiled on other systems where a GNU compiler and Qt Version 5 or any later version is installed.\n\nStatic versus Shared Libraries\n\nYou can produce static or shared library builds of BNC. Static builds are sufficient in case you do not want BNC to produce track maps on top of OpenStreetMap (OSM). The usage would require the QtWebEngineWidges library which can only be part of BNC builds from shared Qt libraries. Hence, having a shared library Qt installation available is a precondition for producing a shared library build of BNC.\n\nMS Windows Systems, Shared Library\n\nThis section contains some hints how to build a shared Qt 15.5.8 library on MS Windows systems to then create your own shared build of BNC. But is is highly recommended to use the dynamically compiled shared library build for Mircrosoft Windows systems which is provided as Microsoft Installer (MSI) file.\n\nSupport for Secure Sockets Layer (SSL) communication is provided by the OpenSSL Toolkit, which must be obtained separately. Download the latest version of the toolkit that is supported by Qt and install OpenSSL libraries in C:\\OpenSSL-Win64. The OpenSSL libraries are looked up first in the drectory of the executable, then in the Windows System directory, and finally in all directories listed in the PATH environment variable. You can configure how Qt uses OpenSSL by setting either the -openssl / -openssl-runtime or -openssl-linked configure flags. To link Qt Network against OpenSSL libraries, set the -openssl-linked configure argument and use the OPENSSL_PREFIX variable to let Qt correctly locate and build against your OpenSSL installation. For example: configure -openssl-linked OPENSSL_PREFIX=\"C:\\OpenSSL-Win64\".\n\nThe following tools are required at build time:\n\nPython 2.7.5 or later. Python 3 is not supported.\n\nWindows binaries of Bison, Flex, GPerf from the GnuWin32 project (http://gnuwin32.sourceforge.net/), required to build QtWebEngine\n\nNode.js version 12 or later\n\nVisual Studio 2019 or clang-cl (msvc mode) version 8 or later, required to build QtWebEngine\n\nJom is recommended because it is a clone of nmake to support the execution of multiple independent commands in parallel. It basically adds the -j command line switch similar to GNU make\n\nActive Template Library (ATL), usually included in the Visual Studio installation\n\nWindows 10 SDK version 10.0.19041 or later\n\nand its location should be listed in the PATH environment variable.\n\nTo use OpenGL, pass the command line option '-opengl dynamic' to the configure script.\n\nDownload the file 'qt-everywhere-opensource-src-5.15.8.zip' e.g. from https://download.qt.io/official_releases/qt/5.15/5.15.8/single/ and unzip the ZIP archive and move the contents of the contained directory into a directory e.g. C:\\Qt\\qt-everywhere-src-5.15.8.\n\nOpen a x64 Native Tools Command Promt for VS 2019\n\nGo to directory C:\\Qt\\qt-everywhere-src-5.15.8 and configure Qt using command\n\n.\\configure -prefix C:\\Qt\\5.15.8\\ -opensource -release -platform win32-msvc -icu -I C:\\icu-windows\\include -L C:\\icu-windows\\lib64 -qt-pcre -qt-zlib -qt-freetype -qt-harfbuzz -qt-libpng -qt-libjpeg -qt-sqlite -qt-tiff -qt-webp -mp -confirm-license -openssl-linked OPENSSL_PREFIX=\"C:\\OpenSSL-Win64\" -opengl dynamic -webengine-proprietary-codecs -recheck-all -nomake tests -nomake examples -no-sql-mysql -skip qtdoc -skip qtquickcontrols -skip qtscript -skip qtxmlpatterns -skip qtandroidextras -skip qtgamepad -skip qtmultimedia -skip qtpurchasing -skip qtwayland -skip qtspeech -skip qtlottie -skip qtscxml -skip qt3d -skip qtcharts -skip qtdatavis3d -skip qtgraphicaleffects -skip qtquickcontrols -skip qtquickcontrols2 -skip qtremoteobjects\n\nCompile Qt using command\n\njom or nmake\n\nInstall Qt using command\n\njom install or nmake install\n\nCreate somewhere a file QtEnv.bat with the following content:\n\nset QTDIR=C:\\Qt\\5.15.8 set PATH=%PATH%C:\\Qt\\5.15.8\\bin; set QMAKESPEC=C:\\Qt\\5.15.8\\mkspecs\\win32-msvc\n\nand exceute file QtEnv.bat\n\nDownload latest BNC from SVN repository http://software.rtcm-ntrip.org/svn/trunk/BNC.\n\nGo to directory BNC and enter command\n\nqmake bnc.pro\n\nEnter command\n\nnmake\n\nFind binary file bnc.exe in directory named src.\n\nLinux Systems\n\nQt development tools have to be installed as well as some other libraries e.g. for openssl. They can be easily installed from your system repositories. BNC 2.13 needs Qt5. See the docker files for the most used Linux systems. To compile the BNC program, you first download the source code from the SVN repository http://software.rtcm-ntrip.org/svn/trunk/BNC. Go to directory BNC and run the following commands:\n\nqmake bnc.pro make\n\nYou will find a build of BNC in directory BNC.\n\nMac OS X Systems\n\nPlease use the precompiled build of BNC\n\n1.6 Configuration\n\nAs a default, configuration files for running BNC on Unix/Linux/Mac OS X systems are saved in directory '${HOME}/.config/BKG'. On Windows systems, they are typically saved in directory 'C:/Documents and Settings/Username/.config/BKG'. The default configuration filename is 'BNC.bnc'.\n\nThe default filename 'BNC.bnc' can be changed and the file content can easily be edited. On graphical user interfaces it is possible to Drag & Drop a configuration file icon to start BNC (not on Mac OS X systems). It is also possible to start and configure BNC via command line. Some configuration options can be changed on-the-fly. See annexed 'Command Line Help' for a complete set of configuration options.\n\nBNC maintains configuration options at three different levels:\n\nGUI, input fields level\n\nActive configuration level\n\nConfiguration file, disk level\n\nFigure 6: Management of configuration options in BNC:\n\nLeft:BNC in graphics mode; active configuration options are introduced through GUI input fields and finally saved on disk Middle:BNC in 'no window' mode; active configuration options are read from disk Right:BNC in 'no window' mode without configuration file; default configuration options can be overwritten via command line options\n\nConfiguration options are usually specified using GUI input fields (1) after launching BNC. When hitting the 'Start' button, configuration options are transferred one level down to become BNC's active configuration (2), allowing the program to begin its operation. Pushing the 'Stop' button ends data processing so that the user can finally terminate BNC through 'File'->'Quit'->'Save Options' which saves processing options in a configuration file to disk (3). It is important to understand that:\n\nActive configuration options (2) are independent from GUI input fields and configuration file content.\n\nHence changing configuration options at GUI level (1) while BNC is already processing data does not influence a running job.\n\nEditing configuration options at disk level (3) while BNC is already processing data does also not influence a running job. However, there are two exceptions which force BNC to update certain active options on-the-fly:\n\nPushing the 'Reread & Save Configuration' button lets BNC immediately reread its configuration from GUI input fields to make them active configuration options. Then BNC saves them on disk.\n\nSpecifying the 'Reread configuration' option lets BNC reread its configuration from disk at pre-defined intervals.\n\nA specific BNC configuration can be started in 'no window' mode from scratch without a configuration file if options for the active configuration level (2) are provided via command line.\n\n1.6.1 Examples\n\nBNC comes with a number of configuration examples which can be used on all operating systems. Copy the complete directory 'Example_Configs' which comes with the software to your disc. It includes sub-directories 'Input' and 'Output'. There are several ways to start BNC using one of the example configurations:\n\nOn graphical systems (except for Mac systems), you may use the computer mouse to 'drag' a configuration file icon and 'drop' it on top of BNC's program icon.\n\nYou could also start BNC using a command line for naming a specific configuration file (suggested e.g. for Mac systems):\n\n/Applications/bnc.app/Contents/MacOS/bnc --conf <configFileName>\n\nOn non-graphical systems or when running BNC in batch mode in the background you may start the program using a command line with a configuration file option in 'no window' mode (example for Windows systems):\n\nbnc.exe --conf <configFileName> --nw\n\nAlthough it's not a must, we suggest that you always create BNC configuration files with filename extension '.bnc'.\n\nWe furthermore suggest for convenience reasons that you configure your system to automatically start BNC when you double-click a file with the filename extension '.bnc'. The following describes what to do on MS Windows systems to associate the BNC program to such configuration files:\n\nRight-click a file that has the extension '.bnc' and then click 'Open'. If the 'Open' command is not available, click 'Open With' or double-click the file.\n\nWindows displays a dialog box that says that the system cannot open this file. The dialog box offers several options for selecting a program.\n\nClick 'Select the program from a list', and then click 'OK'.\n\nThe 'Open With' dialog box is displayed. Click 'Browse', locate and then click the BNC program, and then click 'Open'.\n\nClick to select the 'Always use the selected program to open this kind of file' check box.\n\nClick 'OK'.\n\nSome of the presented example configurations contain a user ID 'Example' with a password 'Configs' for accessing a few GNSS streams from public Ntrip Broadcasters. This free generic account is arranged for convenience reasons only. Please be so kind as to replace the generic account details as well as the place holder's 'User' and 'Pass' by the personal user ID and password you receive following an online registration through http://register.rtcm-ntrip.org.\n\nNote that the account for an Ntrip Broadcaster is usually limited to pulling a specified maximum number of streams at the same time. As running some of the example configurations requires pulling several streams, it is suggested to make sure that you do not exceed your account's limits.\n\nMake also sure that sub-directories 'Input' and 'Output' which are part of the example configurations exist on your system or adjust the affected example configuration options according to your needs.\n\nSome BNC options require Antenna Phase Center variations as made available from IGS through so-called ANTEX files at https://files.igs.org/pub/station/general/igs20.atx. An example ANTEX file 'igs20.atx' is part of the BNC package for convenience.\n\nThe example configurations assume that no proxy protects your BNC host. Should a proxy be operated in front of BNC then you need to introduce its name or IP and port number in the 'Network' panel.\n\n(A) Working with Configuration Files\n\nYou should be able to run all configuration file examples without changing contained options. However, configuration 'Upload.bnc' is an exception because it requires an input stream from a connected network engine.\n\nConfiguration File 'RinexObs.bnc'\n\nPurpose: Convert RTCM streams to RINEX Observation files. The configuration pulls RTCM Version 3 streams from Ntrip Broadcasters using Ntrip Version 2 to generate 15min 1Hz RINEX Version 4 Observation files. See https://igs.bkg.bund.de/ntrip/#rtcm-obs for observation stream resources.\n\nConfiguration File 'RinexEph.bnc'\n\nPurpose: Convert a RTCM stream with navigation messages to RINEX Navigation files. The configuration pulls a RTCM Version 3 stream with Broadcast Ephemeris coming from the real-time EUREF and IGS networks and saves hourly RINEX Version 4 Navigation files. See https://igs.bkg.bund.de/ntrip/#rtcm-eph for further real-time Broadcast Ephemeris resources.\n\nConfiguration File 'BrdcCorr.bnc'\n\nPurpose: Save Broadcast Corrections from RTCM SSR messages in hourly plain ASCII files. See https://igs.bkg.bund.de/ntrip/#rtcm-corr for various real-time IGS or EUREF orbit/clock correction products.\n\nConfiguration File 'RinexConcat.bnc'\n\nPurpose: Concatenate several RINEX Version 3 files to produce one compiled file and edit the marker name in the file header. The sampling interval is set to 30 seconds. See section 'RINEX Editing & QC' in the documentation for examples on how to call BNC from command line in 'no window' mode for RINEX file editing, concatenation and quality check.\n\nConfiguration File 'RinexQC.bnc'\n\nPurpose: Check the quality of a RINEX Version 4 file by means of a multipath analysis. Results are saved on disk in terms of a plot in PNG format. See section 'RINEX Editing & QC' in the documentation for examples on how to call BNC from command line in 'no window' mode for RINEX file editing, concatenation and quality check.\n\nConfiguration File 'RTK.bnc'\n\nPurpose: Feed a serial connected receiver with observations from a nearby reference station for conventional RTK. The stream is scanned for RTCM messages. Message type numbers and latencies of incoming observations are reported in BNC's logfile.\n\nConfiguration File 'FeedEngine.bnc'\n\nPurpose: Feed a real-time GNSS engine with observations from remote reference stations. The configuration pulls a single stream from an Ntrip Broadcaster. You could also pull several streams from different casters. Incoming observations are decoded, synchronized, output through a local IP port and also saved into a file. Failure and recovery thresholds are specified to inform about outages.\n\nConfiguration File 'PPP.bnc'\n\nPurpose: Precise Point Positioning from observations of a rover receiver. The configuration reads RTCM Version 3 observations, a Broadcast Ephemeris stream and a stream with Broadcast Corrections. Positions are saved in the logfile. More detailed PPP results are saved in the PPP logfile.\n\nConfiguration File 'PPPNet.bnc'\n\nPurpose: Precise Point Positioning for several rovers or receivers from an entire network of reference stations in one BNC job. The possible maximum number of PPP solutions per job depends on the processing power of the hosting computer. This example configuration reads two RTCM Version 3 observation streams, a Broadcast Ephemeris stream and a stream with Broadcast Corrections. Detailed PPP Results for the two stations are saved in PPP logfiles.\n\nConfiguration File 'PPPQuickStart.bnc'\n\nPurpose: Precise Point Positioning in Quick-Start mode from observations of a static receiver with precisely known position. The configuration reads RTCM Version 3 observations, Broadcast Corrections and a Broadcast Ephemeris stream. Positions are saved in NMEA format on disc. They are also output through IP port for real-time visualization with tools like RTKPLOT. Positions are saved in the logfile.\n\nConfiguration File 'PPPPostProc.bnc'\n\nPurpose: Precise Point Positioning in post processing mode. BNC reads RINEX Version 3 Observation and Navigation files and a Broadcast Correction file. Optionally, an Ionosphere file containing VTEC informations can be used. If such a file is not specified, VTEC informations from the Broadcast Corrections file are used. PPP processing options are set to support the Quick-Start mode. The output is saved in a specific post processing logfile and contains coordinates derived over time following the implemented PPP filter algorithm.\n\nConfiguration File 'PPPOsm.bnc'\n\nPurpose: Track BNC's point positioning solutions using OpenStreetMap as background. BNC reads a RINEX Observation file and a RINEX Navigation file to carry out a 'Standard Point Positioning' solution in post processing mode. Although this is not a real-time application it requires the BNC host to be connected to the Internet. Specify a computation speed, then hit button 'Open Map' to open the track map, then hit 'Start' to visualize receiver positions on top of OSM maps.\n\nConfiguration File 'PPPGalHAS.bnc'\n\nPurpose: Precise Point Positioning in Quick-Start mode with SSR corrections from the Galileo HAS Internet Data Distribution (IDD) interface with observations of a static receiver with quite precisely known position. Because the Galileo HAS provides Code Biases and corrections for satellite orbits and clocks for GPS and Galileo, the configuration uses GPS and Galileo navigation data only. Access to the Galileo HAS Internet Data Distribution is available by registration: https://www.gsc-europa.eu/galileo/services/galileo-high-accuracy-service-has/internet-data-distribution-registration-form Purpose: Single Point Positioning in Quick-Start mode from observations of a static receiver with quite precisely known position. The configuration uses Galileo observations only and a Broadcast Ephemeris stream.\n\nConfiguration File 'SaveSp3.bnc'\n\nPurpose: Produces SP3 files from a Broadcast Ephemeris stream and a Broadcast Correction stream. The Broadcast Correction stream is formally introduced in BNC's 'Combine Corrections' table. Note that producing SP3 requires an ANTEX file because SP3 file content should be referred to CoM..\n\nConfiguration File 'Sp3ETRF2000PPP.bnc'\n\nPurpose: Produce SP3 files from a Broadcast Ephemeris stream and a stream carrying ETRF2000 Broadcast Corrections. The Broadcast Correction stream is formally introduced in BNC's 'Combine Corrections' table. The configuration leads to a SP3 file containing orbits also referred to ETRF2000. Pulling in addition observations from a reference station at precisely known ETRF2000 position allows comparing an 'INTERNAL' PPP solution with a known ETRF2000 reference coordinate.\n\nConfiguration File 'Upload.bnc'\n\nPurpose: Upload orbits and clocks from a real-time GNSS engine to an Ntrip Broadcaster. For that the configuration reads precise orbits and clocks in RTNET format. It also reads a stream carrying Broadcast Ephemeris. BNC converts the orbits and clocks into Broadcast Corrections and encodes them to IGS-SSR messages to finally upload them to an Ntrip Broadcaster. The Broadcast Correction stream is referred to satellite Antenna Phase Center (APC) and reference system IGS20. Orbits are saved on disk in SP3 format and clocks are saved in Clock RINEX format.\n\nConfiguration File 'Combi.bnc'\n\nPurpose: Pull 2 streams carrying Broadcast Corrections, and Satellite Code Biases together with Broadcast Ephemeris from an Ntrip Broadcaster to produce a combined Broadcast Correction stream. BNC encodes the combination product in IGS-SSR messages and uploads them to an Ntrip Broadcaster. The Broadcast Correction stream is referred to satellite Antenna Phase Center (APC) and not to satellite Center of Mass (CoM). Its reference system is IGS20. Orbits are saved in SP3 format (referred to CoM) and clocks in Clock RINEX format.\n\nConfiguration File 'CombiPPP.bnc'\n\nPurpose: This configuration equals the 'Combi.bnc' configuration. However, the combined Broadcast Corrections are in addition used for an 'INTERNAL' PPP solutions based on observations from a static reference station with known precise coordinates. This allows a continuous quality check of the combination product through observing coordinate displacements.\n\nConfiguration File 'UploadEph.bnc'\n\nPurpose: Pull a number of streams from reference stations to get the contained Broadcast Ephemeris messages. They are encoded to RTCM Version 3 format and uploaded for the purpose of providing a Broadcast Ephemeris stream with an update rate of 5 seconds.\n\nConfiguration File 'CompareSp3.bnc'\n\nPurpose: Compare two SP3 files to calculate RMS values for orbit and clock differences. GPS satellite G05 and GLONASS satellite R18 are excluded from this comparison. Comparison results are saved in a logfile.\n\nConfiguration File 'Empty.bnc'\n\nPurpose: Provide an empty example configuration file for BNC which only contains the default settings.\n\n(B) Working with Command Line configuration options\n\nThe following configuration examples make use of BNC's 'Command Line Interface' (CLI). Configuration options are exclusively specified via command line. No configuration file is used. Examples are provided as shell scripts for a Linux system. They call BNC in 'no window' batch mode (command line option -nw). The scripts expect 'Example_Configs' to be the current working directory.\n\nShell Script 'RinexQC.sh'\n\nPurpose: Equals configuration file example 'RinexQC.bnc', checks the quality of a RINEX Version 4 file by means of a multipath analysis. The platform offscreen is used while producing plot files in PNG format. BNC is offline. All results are saved on disk.\n\nShell Script 'RinexConcat.sh'\n\nPurpose: Equals configuration file example 'RinexConcat.bnc', concatenates several RINEX Version 3 files to produce one compiled file and edit the marker name in the file header. The sampling interval is set to 30 seconds. BNC is offline.\n\nShell Script 'RinexEph.sh'\n\nPurpose: Equals configuration file example 'RinexEph.bnc', converts a RTCM stream with navigation messages to RINEX Navigation files. The configuration pulls a RTCM Version 3 stream with Broadcast Ephemeris coming from the real-time EUREF and IGS networks and saves hourly RINEX Version 4 Navigation files. BNC runs online until it's terminated after 10 seconds. See https://igs.bkg.bund.de/ntrip/#rtcm-eph for further real-time Broadcast Ephemeris resources.\n\nShell Script 'ScanLate.sh'\n\nPurpose: Scan an observation stream for contained RTCM message types, print observation latencies. The output is saved in a logfile. Latencies are reported every 10 seconds. BNC runs online until it's terminated after 20 seconds.\n\nShell Script 'RinexObs.sh'\n\nPurpose: Equals configuration file example 'RinexObs.bnc', converts RTCM streams to RINEX Observation files. The configuration pulls streams from two Ntrip Broadcasters using Ntrip Version 2 to generate 15min 1Hz RINEX Version 4 Observation files. See https://igs.bkg.bund.de/ntrip/#rtcm-obs for observation stream resources. BNC runs online until it's terminated after 30 seconds.\n\n(C) Command Line configuration options overwriting Configuration File options\n\nFor specific applications you may like to use your own set of standard configuration options from a configuration file and update some of its content via command line. When using a configuration file together with command line configuration options in one BNC call, the command line configuration options will always overrule options contained in the configuration file.\n\nShell Script 'CompareSp3.sh'\n\nPurpose: Equals configuration file example 'CompareSp3.bnc', compares two SP3 files to calculate RMS values for orbit and clock differences. However, instead of excluding GPS satellite G05 and GLONASS satellite R18 from the comparison as specified in 'CompareSp3.bnc', GPS satellite G06 and all GLONASS satellites are excluded via command line option. BNC runs offline. Comparison results are saved in a logfile.\n\n1.7 Limitations\n\nIn Qt-based desktop environments (like KDE) on Unix/Linux platforms it may happen that you experience a crash of BNC at startup even when running the program in the background using the '-nw' option. This is a known bug most likely resulting from an incompatibility of Qt libraries in the environment and in BNC. Entering the command 'unset SESSION_MANAGER' before running BNC may help as a work-around.\n\nUsing RTCM Version 3 to produce RINEX files, BNC will properly handle most message types. However, when handling message types 1001, 1003, 1009 and 1011 where the ambiguity field is not set, the output will be no valid RINEX. All values will be stored modulo 299792.458 (speed of light).\n\nUsing RTCM Version 2, BNC will only handle message types 18 and 19 or 20 and 21 together with position and the antenna offset information carried in types 3 and 22. Note that processing carrier phase corrections and pseudo-range corrections contained in message types 20 and 21 needs access to Broadcast Ephemeris. Hence, whenever dealing with message types 20 and 21, make sure that Broadcast Ephemeris become available for BNC through also retrieving at least one RTCM Version 3 stream carrying message types 1019 (GPS ephemeris) and 1020 (GLONASS ephemeris).\n\nBNC's 'Get Table' function only shows the STR records of a source-table. You can use an Internet browser to download the full source-table content of any Ntrip Broadcaster by simply entering its URL in the form of http://host:port. Data field number 8 in the NET records may provide information about where to register for an Ntrip Broadcaster account.\n\nEUREF as well as IGS adhere to an open data policy. Streams are made available through Ntrip Broadcasters at http://euref-ip.net/home, http://igs-ip.net/home and http://products.igs-ip.net/home free of charge to anyone for any purpose. There is no indication up until now how many users will need to be supported simultaneously. The given situation may develop in such a way that it might become difficult to serve all registered users at the same times. In cases where limited resources on the Ntrip Broadcaster side (software restrictions, bandwidth limitation etc.) dictates, first priority in stream provision will be given to stream providers followed by re-broadcasting activities and real-time analysis centers while access to others might be temporarily denied.\n\nOnce BNC has been started, many of its configuration options cannot be changed as long as it is stopped. See chapter 'Reread Configuration' for on-the-fly configuration exceptions.\n\nDrag and drop of configuration files is currently not supported on Mac OS X. On such system you have to start BNC via command line.\n\nLooking Back\n\nA basic function of BNC is streaming GNSS data over the open Internet using the Ntrip transport protocol. Employing IP streaming for satellite positioning goes back to the beginning of our century. Wolfgang Rupprecht has been the first person who developed TCP/IP server software under the acronym of DGPS-IP (Rupprecht 2000) and published it under GNU General Public License (GPL). While connecting marine beacon receivers to PCs with permanent access to the Internet he transmitted DGPS corrections in an RTCM format to support Differential GPS positioning over North America. With approximately 200 bits/sec the bandwidth requirement for disseminating beacon data was comparatively small. Each stream was transmitted over a unique combination of IP address and port. Websites informed about existing streams and corresponding receiver positions.\n\nTo cope with an increasing number of transmitting GNSS reference stations, the Federal Agency for Cartography and Geodesy (BKG) together with the Informatik Centrum Dortmund (ICD) in Germany developed a streaming protocol for satellite navigation data called 'Networked Transport of RTCM via Internet Protocol' (Ntrip). The protocol was built on top of the HTTP standard and included the provision of meta data describing the stream content. Any stream could now be globally transmitted over just one IP port: HTTP port 80. Stream availability and content details became part of the transport protocol. The concept was first published in 2003 (Weber and Honkala 2004, Weber et al. 2005a) and was based on three software components, namely an NtripServer pushing data from a reference station to an NtripCaster and an NtripClient pulling data from the stream splitting caster to support a rover receiver. (Note that from a socket-programmers perspective NtripServer and NtripClient both act as clients; only the NtripCaster operates as socket-server.) Ntrip could essentially benefit from Internet Radio developments. It was the ICECAST multimedia server, which provided the bases for BKG's 'Professional Ntrip Broadcaster' with software published first in 2003 and of course again as Open Source under GPL.\n\nFor BKG as a governmental agency, making Ntrip an Open Industry Standard has been an objective from the very beginning. The 'Radio Technical Commission for Maritime Services' (RTCM) accepted 'Ntrip Version 1' in 2004 as 'RTCM Recommended Standard' (Weber et al. 2005b). Nowadays there is almost no geodetic GNSS receiver which does not come with integrated NtripClient and NtripServer functionality as part of the firmware. Hundreds of NtripCaster implementations are operated world-wide for highly accurate satellite navigation through RTK networks. Thousands of reference stations upload observations via NtripServer to central computing facilities for any kind of NtripClient application. In 2011 'Ntrip Version 2' was released (RTCM SC-104 2011) which cleared and fixed some design problems and HTTP protocol violations. It also supports TCP/IP via SSL and adds optional communication over RTSP/RTP and UDP.\n\nWith the advent of Ntrip as an open streaming standard, BKG's interest turned towards taking advantage from free real-time access to GNSS observations. International Associations such as the IAG Reference Frame Sub Commissions for Africa (AFREF), Asia & Pacific (APREF), Europe (EUREF), North America (NAREF) Latin America & Caribbean (SIRGAS), and the International GNSS Service (IGS) maintain continental or even global GNSS networks with the majority of modern receivers supporting Ntrip stream upload. Through operating BKG's NtripCaster software, these networks became extremely valuable sources of real-time GNSS information. In 2005, this was the starting point for developing the 'BKG Ntrip Client' (BNC) as a multi-stream Open Source NtripClient that allows pulling hundreds of streams simultaneously from any number of NtripCaster installations world-wide. Decoding incoming RTCM streams and output observations epoch by epoch via IP port to feed a real-time GNSS network engine became BNC's first and foremost ability (Weber and Mervart 2009). Converting decoded streams to short high-rate RINEX files to assist near real-time applications became a welcome by-product right from the start of this development.\n\nAdding real-time Precise Point Positioning (PPP) support to BNC began in 2010 as an important completion in view of developing an Open RTCM Standard for that. According to the State Space Representation (SSR) model, new Version 3 messages are proposed to provide e.g. satellite orbit and clock corrections and ionospheric corrections as well as biases for code and phase data. The ultimate goal for SSR standardization is to reach centimeter level accuracy within seconds as an alternative to Network RTK methods such as VRS, FKP, and MAC. Because of interoperability aspects, an Open Standard in this area is of particular interest for clients. Regarding stand-alone PPP in BNC, it is worth mentioning that the program is not and can never be in competition with a receiver manufacturer's proprietary solution. Only software or services that are part of a receiver firmware could have the potential of becoming a thread for commercial interests. However, implementing or not implementing an Open PPP approach in a firmware is and will always remain a manufacturer's decision.\n\nImplementing some post processing capability is essential for debugging real-time software in case of problems. So certain real-time options in BNC were complemented to work offline through reading data from files. Moreover, beginning in 2012, the software was extended to support Galileo, BeiDou, and QZSS besides GPS and GLONASS. With that, the Open Source tool BNC could be used for RINEX Version 3 file editing, concatenation and quality checks, a post processing functionality demanded by the IGS Multi-GNSS Experiment and not really covered at that time by UNAVCO's famous TEQC program with its limitation on GPS.\n\nThe well-established, mature codebase is mostly written in C++ language. Its publication under GNU GPL is thought to be well-suited for test, validation and demonstration of new approaches in precise real-time satellite navigation when IP streaming is involved. Commissioned by a German governmental agency, the overall intention has been to push the development of RTCM Recommended Standards to the benefit of IAG institutions and services such as IGS and the interested public in general.\n\n2. Settings Details\n\nThe general documentation approach is to create a separate chapter for each processing option in a sequence which follows the layout of BNC's Graphical User Interface (GUI). The advantage is that searching for help by means of the document's Table of Contents (TOC) is quite convenient. A rather comprehensive number of TOC entries is the accepted downside of this approach.\n\nThe following chapters describe how to set BNC program options. They explain the 'Top Menu Bar', the 'Settings Canvas' with the processing options, the content of the 'Streams Canvas' and 'Logging Canvas', and the 'Bottom Menu Bar'.\n\n2.1 Top Menu Bar\n\nThe top menu bar allows selecting a font for the BNC windows, save configured options, or quit the program execution. It also provides access to the program's documentation.\n\n2.1.1 File\n\nThe 'File' button lets you\n\nSelect an appropriate font.\n\nUse smaller font size if the BNC main window exceeds the size of your screen.\n\nReread and save selected options in configuration file.\n\nWhen using 'Reread & Save Configuration' while BNC is already processing data, some configuration options become immediately effective on-the-fly without interrupting uninvolved threads while all of them are saved on disk. See section 'Reread Configuration' for a list of on-the-fly changeable configuration options.\n\nQuit the BNC program.\n\n2.1.2 Help\n\nThe 'Help' button provides access to\n\nHelp contents.\n\nYou may keep the 'Help Contents' window open while configuring BNC.\n\nA 'Flow Chart' showing BNC linked to a real-time GNSS network engine such as RTNET.\n\nGeneral information about BNC.\n\nClose the 'About BNC' window to continue working with BNC.\n\n2.2 Network\n\nYou may need to specify a proxy when running BNC in a protected network. You may also like to use the Transport Layer Security (TLS) and its predecessor, Secure Sockets Layer (SSL) cryptographic protocols for secure Ntrip communication over the Internet.\n\n2.2.1 Proxy - Usage in a protected LAN\n\nIf you are running BNC within a protected Local Area Network (LAN), you might need to use a proxy server to access the Internet. Enter your proxy server IP and port number in case one is operated in front of BNC. If you do not know the IP and port of your proxy server, check the proxy server settings in your Internet browser or ask your network administrator. Without any entry, BNC will try to use the system proxies.\n\nNote that IP streaming is often not allowed in a LAN. In this case you need to ask your network administrator for an appropriate modification of the local security policy or for the installation of a TCP relay to the Ntrip Broadcaster you need to access. If this is not possible, you might need to run BNC outside your LAN on a host that has unobstructed connection to the Internet.\n\n2.2.2 SSL - Transport Layer Security\n\nCommunication with an Ntrip Broadcaster over Secure Sockets Layer (SSL) as well as the download of RINEX skeleton files when available from HTTPS websites requires the exchange of client and/or server certificates.\n\nSpecify the path to a directory where you save CA certificates on your system. BNC creates from *.crt and *.pem files a CA certificate database, which is used by the socket during the handshake phase to validate the peer's certificate.\n\nSSL communication may involve queries coming from the Ntrip Broadcaster or from a HTTPS website hosting RINEX skeletons. Such a query could show up under BNC's 'Log' tab especially when self-signed SSL certificates are used. Example:\n\nSSL Error Server Certificate Issued by: GNSS Data Center BKG (Bundesamt für Geodäsie und Kartographie) Cannot be verified The issuer certificate of a locally looked up certificate could not be found The root CA certificate is not trusted for this purpose No certificates could be verified\n\nQueries should not be received by a client when a server uses official SSL certificates.\n\nYou may also just try communication via SSL to check out whether this is supported by the involved Ntrip Broadcaster. Note that SSL communication is usually done over port 443.\n\nTwo-sided communication with an Ntrip Broadcaster over SSL requires in addition the exchange of client certificates. Specify the full path to the client certificates on your system. The file naming convention for client certificates in BNC is as follows:\n\n<hostname>.<port>.crt for the certificate and <hostname>.<port>.key for the private key, where <hostname> is without https://.\n\nIf available, the client or personal authentication certificate is presented to the peer during the SSL handshake process. Password protected key files are not supported. Don't try communication via two sided SSL if you are not sure whether this is supported by the involved Ntrip Broadcaster.\n\nTick 'Ignore SSL authorization errors' if you generally trust the server and do not want to be bothered with this.\n\nFigure 7: BNC's 'Network' panel configured to ignore eventually occurring SSL error messages\n\n2.3 General\n\nThe following defines general settings for BNC's logfile, file handling, reconfiguration on-the-fly, and auto-start.\n\n2.3.1 Logfile - optional\n\nRecords of BNC's activities are shown in the 'Log' tab on the bottom of the main window. These logs can be saved into a file when a valid path is specified in the 'Logfile (full path)' field. The logfile name will automatically be extended by a string '_YYMMDD' for the current date. This leads to series of daily logfiles when running BNC continuously. Message logs cover the communication status between BNC and the Ntrip Broadcaster as well as problems that may occur in the communication link, stream availability, stream delay, stream conversion etc. The time stamps within the 'Log' tab are given in UTC. The time stamps within the logfile are given in GPS Time. The default value for 'Logfile (full path)' is an empty option field, meaning that BNC logs will not be saved into a file.\n\nThe following is an example for the content of a logfile written by BNC when operated in Precise Point Positioning (PPP) mode:\n\n22-10-04 19:53:57 ========== Start BNC v2.13 (LINUX) ========== 22-10-04 19:53:57 Panel 'PPP' active 22-10-04 19:53:57 WTZR00DEU0: Get data in RTCM 3.x format 22-10-04 19:53:57 BCEP00BKG0: Get data in RTCM 3.x format 22-10-04 19:53:58 SSRA00BKG1: Get data in RTCM 3.x format 22-10-04 19:53:58 Configuration read: 08_PPP.bnc, 3 stream(s) 22-10-04 19:53:58 BCEP00BKG0: UNHEALTHY EPH G28 LNAV: 2022 10 04 20 00 00 22-10-04 19:54:13 2022-10-04_19:53:59.000 WTZR00DEU0 X = 4075580.5340 Y = 931854.3984 Z = 4801568.4250 NEU: -0.1623 +0.2450 +0.2991 TRP: +2.1833 +0.0002 22-10-04 19:54:13 2022-10-04_19:54:00.000 WTZR00DEU0 X = 4075580.5393 Y = 931854.4017 Z = 4801568.4126 NEU: -0.1748 +0.2471 +0.2936 TRP: +2.1833 +0.0002 22-10-04 19:54:14 2022-10-04_19:54:01.000 WTZR00DEU0 X = 4075580.4979 Y = 931854.4015 Z = 4801568.3441 NEU: -0.1891 +0.2560 +0.2153 TRP: +2.1833 +0.0004 22-10-04 19:54:14 2022-10-04_19:54:02.000 WTZR00DEU0 X = 4075580.4871 Y = 931854.4003 Z = 4801568.3157 NEU: -0.1995 +0.2573 +0.1868 TRP: +2.1833 +0.0007 22-10-04 19:54:14 2022-10-04_19:54:03.000 WTZR00DEU0 X = 4075580.4698 Y = 931854.3966 Z = 4801568.3005 NEU: -0.1961 +0.2575 +0.1637 TRP: +2.1833 +0.0009 22-10-04 19:54:14 2022-10-04_19:54:04.000 WTZR00DEU0 X = 4075580.4598 Y = 931854.3940 Z = 4801568.2881 NEU: -0.1964 +0.2573 +0.1476 TRP: +2.1833 +0.0010 22-10-04 19:54:18 2022-10-04_19:54:05.000 WTZR00DEU0 X = 4075580.4625 Y = 931854.3971 Z = 4801568.2917 NEU: -0.1966 +0.2597 +0.1525 TRP: +2.1833 +0.0012 22-10-04 19:54:18 2022-10-04_19:54:06.000 WTZR00DEU0 X = 4075580.4587 Y = 931854.3966 Z = 4801568.2912 NEU: -0.1940 +0.2600 +0.1496 TRP: +2.1833 +0.0014 22-10-04 19:54:18 2022-10-04_19:54:07.000 WTZR00DEU0 X = 4075580.4539 Y = 931854.3931 Z = 4801568.2818 NEU: -0.1960 +0.2577 +0.1389 TRP: +2.1833 +0.0018 22-10-04 19:54:18 2022-10-04_19:54:08.000 WTZR00DEU0 X = 4075580.4502 Y = 931854.3946 Z = 4801568.2757 NEU: -0.1975 +0.2599 +0.1321 TRP: +2.1833 +0.0021 22-10-04 19:54:18 2022-10-04_19:54:09.000 WTZR00DEU0 X = 4075580.4478 Y = 931854.3958 Z = 4801568.2737 NEU: -0.1973 +0.2617 +0.1293 TRP: +2.1833 +0.0023 ...\n\n2.3.2 Append Files - optional\n\nWhen BNC is started, new files are created by default and existing files with the same name will be overwritten. However, users might want to append existing files following a restart of BNC, a system crash or a BNC crash. Tick 'Append files' to continue with existing files and keep what has been recorded so far. Note that option 'Append files' affects all types of files created by BNC.\n\n2.3.3 Reread Configuration - optional\n\nWhen operating BNC online in 'no window' mode (command line option -nw), some configuration options can nevertheless be changed on-the-fly without interrupting the running process. For that, you force the program to reread parts of its configuration in pre-defined intervals from disk. Select '1 min', '1 hour', or '1 day' to let BNC reread on-the-fly changeable configuration options every full minute, hour, or day. This lets in-between edited options become effective without interrupting uninvolved threads.\n\nNote that following configuration options saved on disk can be changed/edited on-the-fly while BNC is already processing data:\n\n'mountPoints' to change the selection of streams to be processed, see section 'Streams'\n\n'outWait' to change the 'Wait for full obs epoch' option, see section 'Feed Engine'\n\n'outSampl' to change the 'Sampling' option, see section 'Feed Engine'\n\n'outFile' to change the 'File' name where synchronized observations are saved in plain ASCII format\n\n2.3.4 Auto Start - optional\n\nYou may like to auto-start BNC at startup time in window mode with pre-assigned configuration options. This may be required e.g. immediately after booting your system. Tick 'Auto start' to supersede the usage of the 'Start' button. Make sure that you maintain a link to BNC for that in your Autostart directory (Windows systems) or call BNC in a script below directory /etc/init.d (Unix/Linux/Mac OS X systems).\n\nSee BNC's command line option '-nw' for an auto-start of BNC in 'no window' mode.\n\n2.3.5 Raw Output File - optional\n\nBNC can save all data coming in through various streams in one daily file. The information is recorded in the specified 'Raw output file' in the received order and format. This feature allows a BNC user to run the PPP option offline with observations, Broadcast Corrections, and Broadcast Ephemeris being read from a previously saved file. It supports the offline repetition of a real-time situation for debugging purposes (Record & Replay functionality) and is not meant for post processing.\n\nData will be saved in blocks in the received format separated by ASCII time stamps like (example):\n\n2022-10-04T20:07:31 WTZR00DEU0 RTCM_3.3 202\n\nThis example block header tells you that 202 bytes were saved in the data block following this time stamp. The information in this block is encoded in RTCM Version 3 format, comes from mountpoint WTZR00DEU0 and was received at 20:07:31 GPS Time on 2022-10-04. BNC adds its own time stamps in order to allow the reconstruction of a recorded real-time situation.\n\nThe default value for 'Raw output file' is an empty option field, meaning that BNC will not save all raw data into one single daily file.\n\n2.4 RINEX Observations\n\nObservations will be converted to RINEX if they come in either RTCM Version 2 or RTCM Version 3 format. Depending on the RINEX version and incoming RTCM message types, files generated by BNC may contain data from GPS, GLONASS, Galileo, BDS, SBAS, QZSS, and/or IRNSS. In case an observation type is listed in the RINEX header but the corresponding observation is unavailable, its value is set to zero '0.000' or left blank. Note that the 'RINEX TYPE' field in the RINEX Version 3 Observation file header is always set to 'M(MIXED)' or 'Mixed' even if the file only contains data from one system.\n\nIt is important to understand that converting RTCM streams to RINEX files requires a priori information on observation types for specifying a complete RINEX header. Regarding the RINEX Version 2 file header, BNC simply introduces all observation types defined in the Version 2 standard and later reports \"0.000\" for observations which are not received. However, following this approach is not possible for RINEX Version 3 files from RTCM Version 3 MSM streams because of the huge number of observation types, which might in principle show up. The solution implemented in BNC is to start with RINEX Version 3 observation type records from skeleton files (see section 'Skeleton Extension' and 'Skeleton Mandatory') and switch to a default selection of observation types when such file is not available or does not contain the required information.\n\nPlease note that RTCM Version 3 messages 1084 (MSM4) for GLONASS observations do not contain the GLONASS channel numbers. These observation messages can only be converted to RINEX when you add messages which include the channel numbers, such as the GLONASS ephemeris messages 1020. The GLONASS channel number is available as extended information within MSM5/7 messages.\n\nThe screenshot below shows an example setup of BNC when converting streams to RINEX. Streams are coming from Ntrip Broadcaster http://igs-ip.net:2101. Specifying a decoder string 'ZERO2FILE' would mean to not convert the affected stream but save its content as received. On Wed Oct 5 2022 that would result for the Mountpoint 'FFMJ00DEU0' into a file named 'FFMJ00DEU0_221005'.\n\nFigure 8: BNC translating incoming RTCM Version 3 Observation streams to 15 min RINEX Version 4 Observation files\n\n2.4.1 RINEX Filenames\n\nThe RINEX filenames generated by BNC depend on the chosen RINEX format. The following convention holds in case of RINEX Version 3 and RINEX Version 4 filenames:\n\nFilename Parameter # Char. Meaning Name 9 Site, station and country code S 1 Data source Start Time 11 YYYYDDDHHMM Period 3 File period Obs. Freq. 3 Observation frequency Content 2 Content type Format 3 File format Compression 2-3 Compression method (optional)\n\nExamples (Figure 8) for Mixed RINEX Version 4 GNSS observation filenames, files containing 15 minutes of data, one observation every second, 'MO' standing for 'Mixed Observations':\n\nFFMJ00DEU_S_20222781400_15M_01S_MO.rnx CUT000AUS_S_20222781400_15M_01S_MO.rnx\n\nNote that filename details are produced from the stream's mountpoint as well as corresponding BNC settings and meta data from the Ntrip Broadcaster source-table.\n\nRINEX Version 2 filenames are derived from the first 4 characters of the corresponding stream's mountpoint (4-Char Station ID). For example, data from mountpoints FFMJ00DEU0 and CUT000AUS0 will have 15-minutes RINEX Observation files named\n\nFFMJ278O00.22O CUT0278O00.22O\n\nThe RINEX version 2 filneme convention can be summrized as follows:\n\n{4-Char-Station-ID}{ddd}{h}{mm}.{yy}O\n\nwhere 'ddd' is the day of year, 'h' is a letter which corresponds to an hour long UTC time block, 'mm' is the starting minute within the hour. and 'yy' is the year.\n\n2.4.2 Directory - optional\n\nHere you can specify the path to where the RINEX Observation files will be stored. If the specified directory does not exist, BNC will not create RINEX Observation files. Default value for 'Directory' is an empty option field, meaning that no RINEX Observation files will be written.\n\n2.4.3 File Interval - mandatory if 'Directory' is set\n\nSelect the length of the RINEX Observation file to be generated. The default value is 1 day.\n\n2.4.4 Sampling - mandatory if 'Directory' is set\n\nSelect the RINEX Observation sampling interval in seconds. A value of zero '0' tells BNC to store all received epochs into RINEX. This is the default value.\n\n2.4.5 Skeleton Extension - optional\n\nWhenever BNC starts to generate RINEX Observation files (and then once every day at midnight), it first tries to retrieve information needed for RINEX headers from so-called public RINEX header skeleton files which are derived from sitelogs. An HTTP or HTTPS link to a directory containing these skeleton files may be available through data field number 7 of the affected NET record in the source-table. See https://igs.bkg.bund.de/root_ftp/IGS/station/rnxskl/BRUX00BEL.skl for an example of a public RINEX header skeleton file for EPN station Brussels. Note that the download of RINEX skeleton files from HTTPS websites requires the exchange of client and/or server certificates. Clarify 'SSL' options offered through panel 'Network' for details.\n\nSometimes public RINEX header skeleton files are not available, their content is not up to date, or you need to put additional/optional records in the RINEX header. For that, BNC allows using personal skeleton files that contain the header records you would like to include. You can derive a personal RINEX header skeleton file from the information given in an up to date sitelog. A file in the RINEX Observations 'Directory' with a 'Skeleton extension' suffix is interpreted by BNC as a personal RINEX header skeleton file for the corresponding stream.\n\nWhen producing RINEX Observation files from mountpoints like 'BRUX00BEL0', 'WTZR_RTCM3', and 'BRUX0', the following skeleton filenames would be accepted\n\nBRUX00BEL.skl (9 char corresponding to RINEX version 3,4) WTZR_RTCM.skl (9 char corresponding to RINEX version 3,4) BRUX.skl (4 char corresponding to RINEX version 2)\n\nif 'Skeleton extension' is set to 'skl'. As an alternative the basename is tried to use with lower cases as well.\n\nNote the following regulations regarding personal RINEX header skeleton files: If such a file exists in the 'RINEX directory', the corresponding public RINEX header skeleton file is ignored. The RINEX header is generated solely from the content of the personal skeleton.\n\nPersonal skeletons should contain a complete first header record of type 'RINEX VERSION / TYPE'\n\nThey should then contain an empty header record of type 'PGM / RUN BY / DATE' which will be completed by BNC and included in the RINEX file header.\n\nThey should further contain complete header records of type\n\n'MARKER NAME'\n\n'OBSERVER / AGENCY'\n\n'REC # / TYPE / VERS'\n\n'ANT # / TYPE'\n\n'APPROX POSITION XYZ'\n\n'ANTENNA: DELTA H/E/N'\n\n'WAVELENGTH FACT L1/2 for RINEX Version 2 files\n\n'SYS / # / OBS TYPES' for RINEX Version 3 files, will be ignored in Version 2 files\n\nThey may contain any other optional complete header record as defined in the RINEX documentation.\n\nThey should also contain an empty header record of type '# / TYPES OF OBSERV'. It will be used in RINEX Version 2 files and ignored in Version 3 files.\n\nBNC will include these lines in the final RINEX file header together with an additional 'COMMENT'-line describing the source of the stream.\n\nPersonal skeletons must not contain a header record of type 'TIME OF FIRST OBS'\n\nThey should finally contain an empty last header record of type 'END OF HEADER'\n\nIf neither a public nor a personal RINEX header skeleton file is available for BNC, a default header will be used.\n\nThe following is a skeleton example for a RINEX file:\n\nOBSERVATION DATA M RINEX VERSION / TYPE PORTIONS OF THIS HEADER GENERATED BY BKG AT 05-Oct-22 04:51 COMMENT FROM SITELOG CUT000AUS_20201020.log COMMENT OBS TYPES from www.igs-ip.net/CUT000AUS0 COMMENT CUT000AUS MARKER NAME 59945M001 MARKER NUMBER CUT OBSERVER / AGENCY 5023K67889 TRIMBLE NETR9 5.45 REC # / TYPE / VERS 4928353386 TRM59800.00 SCIS ANT # / TYPE -2364337.2699 4870285.5624 -3360809.8398 APPROX POSITION XYZ 0.0000 0.0000 0.0000 ANTENNA: DELTA H/E/N G 13 C1C L1C D1C S1C C2W L2W S2W C2X L2X S2X C5X L5X S5X SYS / # / OBS TYPES R 13 C1C L1C D1C S1C C1P L1P S1P C2C L2C S2C C2P L2P S2P SYS / # / OBS TYPES E 13 C1X L1X D1X S1X C7X L7X S7X C8X L8X S8X C5X L5X S5X SYS / # / OBS TYPES J 10 C1C L1C D1C S1C C2X L2X S2X C5X L5X S5X SYS / # / OBS TYPES C 10 C2I L2I D2I S2I C6I L6I S6I C7I L7I S7I SYS / # / OBS TYPES 22 R01 1 R02 -4 R03 5 R04 6 R05 1 R06 -4 R07 5 R08 6 GLONASS SLOT / FRQ # R09 -2 R10 -7 R11 0 R12 -1 R13 -2 R14 -7 R15 0 R17 4 GLONASS SLOT / FRQ # R18 -3 R19 3 R20 2 R21 4 R23 3 R24 2 GLONASS SLOT / FRQ # END OF HEADER\n\n2.4.6 Skeleton Mandatory - optional\n\nTick check box 'Skeleton mandatory' in case you want that RINEX files are only produced when skeleton files are available for BNC. If no skeleton file is available for a particular source, then no RINEX observation file will be produced from the affected stream.\n\nNote that a skeleton file contains RINEX header information such as receiver and antenna types. In case of stream conversion to RINEX Version 3, a skeleton file should also contain information on potentially available observation types. A missing skeleton file will force BNC to only save a default set of RINEX 3 observation types.\n\n2.4.7 Skeleton Directory - optional\n\nHere you can specify the path, where local skeleton files are located. If no directory is specified, the path is assumed to where the RINEX Observation files will stored.\n\n2.4.8 Script - optional\n\nWhenever a RINEX Observation file is saved, you might want to compress, copy or upload it immediately via FTP. BNC allows you to execute a script/batch file to carry out these operations. To do that, specify the full path to such script/batch file. BNC will pass the RINEX Observation file path to the script as a command line parameter (%1 on Windows systems, $1 on Unix/Linux/Mac OS X systems).\n\nThe triggering event for calling the script or batch file is the end of a RINEX Observation file 'Interval'. If that is overridden by a stream outage, the triggering event is the stream reconnection.\n\nAs an alternative to initiating file uploads through BNC, you may like to call an upload script or batch file through your crontable or Task Scheduler (independent from BNC) once every one or two minutes after the end of each RINEX file 'Interval'.\n\n2.4.9 Version 3 and 4 - optional\n\nCurrently, the default format for RINEX Observation files is RINEX Version 3. RINEX version 4 can be chosen as well. The resulting observation files are backward compatible to RINEX version 3.\n\nNote, that it is possible to force an RTCM Version 2 stream to be saved in RINEX Version 3 file format. However, this is not recommended, because such stream cannot be precisely mapped to RINEX Version 3 as the required information on tracking modes (observation attributes) is not part of RTCM Version 2.\n\n2.4.10 Version 2 - optional\n\nGNSS observation data are generally hold available within BNC according to attributes as defined in RINEX Version 3 or 4. These attributes describe the tracking mode or channel when generating the observation signals. Capital letters specifying signal generation attributes are e.g. A, B, C, D, E, I, L, M, N, P, Q, S, W, X, Y, or Z, see RINEX Version 3 and 4 documentation. Nevertheless, there are two applications where the program can be setup to produce data files in RINEX Version 2.11 format:\n\nWhen saving the content of incoming observation streams in RINEX Version 2 files as described in this section.\n\nWhen editing or concatenating RINEX version 3/4 files to save them in Version 2 format, see section on 'RINEX Editing & QC'.\n\nSelect RINEX 'Version 2' if you would like to save RTCM Version 3 observation streams in RINEX Version 2 format. As the Version 2 format ignores signal generation attributes, BNC is forced to somehow map RINEX Version 3/4 to RINEX Version 2 although this cannot be done in one-to-one correspondence. Hence we introduce a 'Signal priority' list of attributes (characters, forming a string) for mapping Version 3/4 to Version 2.\n\nSignal priorities can be specified as equal for all systems, as system specific or as system and frequency specific. For example:\n\n'CWPX_?' (General signal priorities valid for all GNSS)\n\n'I:ABCX' (System specific signal priorities for IRNSS)\n\n'G:12&PWCSLX G:5&IQX R:12&PC R:3&IQX' (System and frequency specific signal priorities)\n\nThe default 'Signal priority' list is defined as follows:\n\n'G:12&PWCSLX G:5&IQX R:12&PC R:3&IQX R:46&ABX E:16&BCXZ E:578&IQX J:1&SLXCZ J:26&SLX J:5&IQX C:267&IQX C:18&DPX I:ABCX S:1&C S:5&IQX'\n\nAs an example the 'Signal priority' of 'CWPX_?' is explained in more detail:\n\nSignals with attribute 'C' enjoy the highest priority. If such a RINEX Version 3/4 observation becomes available, it is presented as RINEX Version 2 observation if that is the format you wish to see. Observations with other attributes are being ignored.\n\nIf no signal with 'C' attribute is available but we have an observation with 'W' attribute, BNC presents that one as RINEX Version 2 observation and ignores all observations with other attributes. The same applies mutatis mutandis to observations with P and X attributes.\n\nIf no signal with 'C', 'W', 'P', or 'X' attribute is available but a signal with undefined generation attribute (underscore character, '_') exists, BNC presents that one as RINEX Version 2 observation. Note that observation attributes should actually always be available in RINEX Version 3/4. Hence the underscore character makes only sense in a few very special cases.\n\nIf no signal with 'C', 'W', 'P', 'X', or '_' generation attribute exists then the question mark '?' tells BNC to present the first of any other appearing signal as RINEX Version 2 observation.\n\nYou may like to specify your own 'Signal priority' string(s) for producing RINEX Version 2 files.\n\n2.5 RINEX Ephemeris\n\nBroadcast Ephemeris can be saved in RINEX Navigation files when received e.g. via RTCM Version 3 message types:\n\n1019 (GPS) or\n\n1020 (GLONASS) or\n\n1041 (IRNSS) or\n\n1042 (BDS/BeiDou) or\n\n1043 (SBAS) or\n\n1044 (QZSS) or\n\n1045 (Galileo F/NAV) or\n\n1046 (Galileo I/NAV).\n\nThe filename convention follows the details given in section 'RINEX Filenames' except that the first four characters are 'BRDC'.\n\nRegarding RINEX Version 3/4 you will find all ephemeris data for GPS, GLONASS, Galileo, SBAS, QZSS, BDS, and IRNSS gathered in one Navigation file.\n\nThe following is an example for a RINEX Version 3/4 Navigation filename. The file contains one hour's data. 'MN' stands for 'Multi Constellation Navigation' data.\n\nBRDC00WRD_S_20222791000_01H_MN.rnx\n\nFor RINEX Version 2 Navigation files the last character is 'N' or 'G' for GPS or GLONASS ephemeris in two separate files.\n\nNote further that BNC will ignore incorrect or outdated Broadcast Ephemeris data, leaving a note 'WRONG EPHEMERIS' or 'OUTDATED EPHEMERIS' in the logfile.\n\n2.5.1 Directory - optional\n\nSpecify a path for saving Broadcast Ephemeris data in RINEX Navigation files. If the specified directory does not exist, BNC will not create RINEX Navigation files. Default value for Ephemeris 'Directory' is an empty option field, meaning that no RINEX Navigation files will be created.\n\n2.5.2 Interval - mandatory if 'Directory' is set\n\nSelect the length of RINEX Navigation files. The default value is '1 day'.\n\n2.5.3 Port - optional\n\nBNC can output Broadcast Ephemeris in RINEX Version 3 format on your local host (IP 127.0.0.1) through an IP 'Port'. Specify an IP port number to activate this function. The default is an empty option field, meaning that no ASCII ephemeris output via IP port is generated.\n\nThe source code for BNC comes with an example Perl script 'test_tcpip_client.pl' that allows you to read BNC's ephemeris ASCII output from the IP port.\n\n2.5.4 Version - optional\n\nDefault format for RINEX Navigation files containing Broadcast Ephemeris is RINEX Version 3, saving the ephemeris data in RINEX Version 3.05. Select 'Version 2' if you want to save the ephemeris data in RINEX Version 2.11 format. Select 'Version 4' if you want to save the ephemeris data in RINEX Version 4.x format.\n\nNote that the here choosen Version concerns the Broadcast Ephemeris output through IP port as well.\n\n2.6 RINEX Editing & QC\n\nBesides stream conversion from RTCM to RINEX, BNC allows editing RINEX files or concatenate their content. RINEX Observation and Navigation files can be handled. BNC can also carry out a RINEX file Quality Check. In summary and besides Stream Translation, this functionality in BNC covers\n\nFile Editing and concatenation\n\nFile Quality Check\n\nMultipath analysis sky plots\n\nSignal-to-noise ratio sky plots\n\nSatellite availability plots\n\nSatellite elevation plots\n\nPDOP plots\n\nand hence follows UNAVCO's famous TEQC program (see Estey and Meertens 1999). The remarkable thing about BNC in this context is that it supports RINEX Version 3 under GNU General Public License with full GUI support and graphics output.\n\n2.6.1 Action - optional\n\nSelect an action. Options are 'Edit/Concatenate' and 'Analyze'.\n\nSelect 'Edit/Concatenate' if you want to edit RINEX file content according to options specified under 'Set Edit Options' or if you want to concatenate several RINEX files.\n\nSelect 'Analyze' if you are interested in a quality check of your RINEX file content.\n\n2.6.2 Input Files - mandatory\n\nSpecify full path to input RINEX Observation file(s), and\n\nspecify full path to input RINEX Navigation file(s).\n\nWhen specifying several input files, BNC will concatenate their contents. In case of RINEX Observation input files with different observation type header records, BNC will output only one set of adjusted observation type records in the RINEX header which fits to the whole file content.\n\n2.6.3 Output Files - optional if 'Action' is set to 'Edit/Concatenate'\n\nIf 'Edit/Concatenate' is selected, specifying the full path to output RINEX Observation file(s) and specifying the full path to output RINEX Navigation file(s) is optional. Default are empty option fields, meaning that no RINEX files will be saved on disk.\n\n2.6.4 Logfile - optional\n\nSpecify the name of a logfile to save information on RINEX file Editing/Concatenation or Analysis. Default is an empty option field, meaning that no logfile will be saved.\n\nNote that logfiles from analyzing RINEX files may become quite large. Hence, BNC provides an option 'Summary only' to limit logfile content to some essential information in case 'Action' is set to 'Analyze'. The following is an example for a RINEX quality check analysis logfile:\n\nQC Format Version : 1.1 Navigation File(s) : MAO000USA_R_20221720000_01D_MN.rnx Ephemeris : 1776 OK 3617 UNHEALTHY 116 WRONG MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH G09 LNAV: 2022 06 21 04 00 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH G09 LNAV: 2022 06 21 06 00 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH G09 LNAV: 2022 06 21 08 00 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH J07 LNAV: 2022 06 21 07 00 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH J07 LNAV: 2022 06 21 08 00 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH G09 LNAV: 2022 06 21 10 00 00 .. MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH C35 D1 : 2022 06 21 23 00 14 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH C26 D1 : 2022 06 21 23 00 14 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH C44 D1 : 2022 06 21 23 00 14 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH C24 D1 : 2022 06 21 23 00 14 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH C21 D1 : 2022 06 21 23 00 14 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH C12 D1 : 2022 06 21 23 00 14 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH C40 D1 : 2022 06 21 23 00 14 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH E11 FNAV: 2022 06 21 22 50 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH G08 LNAV: 2022 06 21 23 59 44 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH E11 FNAV: 2022 06 21 23 00 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH E11 FNAV: 2022 06 21 23 10 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH E11 FNAV: 2022 06 21 23 20 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH E11 FNAV: 2022 06 21 23 30 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH E25 FNAV: 2022 06 21 23 30 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH E11 FNAV: 2022 06 21 23 40 00 MAO000USA_R_20221720000_01D_MN.rnx : WRONG EPH E25 FNAV: 2022 06 21 23 40 00 Observation File : MAO000USA_R_20221720000_01D_30S_MO.rnx RINEX Version : 4.00 Marker Name : MAO0 Marker Number : 40445M005 Receiver : SEPT POLARX5 Antenna : LEIAR25.R3 LEIT Position XYZ : -5466067.2677 -2404332.8007 2242123.7442 Antenna dH/dE/dN : 0.0000 0.0000 0.0000 Start Time : 2022-06-21 00.00.00.0 End Time : 2022-06-21 23.59.30.0 Interval : 30 sec Observation Types C: C1P L1P D1P S1P C5P L5P D5P S5P C2I L2I D2I S2I C7I L7I D7I S7I C6I L6I D6I S6I C7D L7D D7D S7D Observation Types E: C1C L1C D1C S1C C6C L6C D6C S6C C5Q L5Q D5Q S5Q C7Q L7Q D7Q S7Q C8Q L8Q D8Q S8Q Observation Types G: C1C L1C D1C S1C C1W S1W C2W L2W D2W S2W C2L L2L D2L S2L C5Q L5Q D5Q S5Q C1L L1L D1L S1L Observation Types I: C5A L5A D5A S5A Observation Types J: C1C L1C D1C S1C C2L L2L D2L S2L C5Q L5Q D5Q S5Q C1L L1L D1L S1L C1Z L1Z D1Z S1Z C5P L5P D5P S5P Observation Types R: C1C L1C D1C S1C C1P L1P D1P S1P C2P L2P D2P S2P C2C L2C D2C S2C Observation Types S: C1C L1C D1C S1C C5I L5I D5I S5I Analysed GNSS : 4 C E G J C: Satellites: 42 C: Signals : 6 1P 2I 5P 6I 7D 7I C: 1P: Observations : 28217 C: 1P: Slips (file+found): 60 + 22 C: 1P: Gaps : 147 C: 1P: Mean SNR : 43.9 C: 1P: Mean Multipath : 0.60 C: 2I: Observations : 43725 C: 2I: Slips (file+found): 124 + 32 C: 2I: Gaps : 209 C: 2I: Mean SNR : 44.8 C: 2I: Mean Multipath : 0.66 C: 5P: Observations : 28373 C: 5P: Slips (file+found): 52 + 7 C: 5P: Gaps : 100 C: 5P: Mean SNR : 43.5 C: 5P: Mean Multipath : 0.26 C: 6I: Observations : 43887 C: 6I: Slips (file+found): 95 + 15 C: 6I: Gaps : 156 C: 6I: Mean SNR : 44.6 C: 6I: Mean Multipath : 0.29 C: 7D: Observations : 30073 C: 7D: Slips (file+found): 45 + 10 C: 7D: Gaps : 28 C: 7D: Mean SNR : 44.1 C: 7D: Mean Multipath : 0.28 C: 7I: Observations : 11450 C: 7I: Slips (file+found): 23 + 0 C: 7I: Gaps : 16 C: 7I: Mean SNR : 43.0 C: 7I: Mean Multipath : 0.00 E: Satellites: 27 E: Signals : 5 1C 5Q 6C 7Q 8Q E: 1C: Observations : 28931 E: 1C: Slips (file+found): 49 + 6 E: 1C: Gaps : 83 E: 1C: Mean SNR : 42.7 E: 1C: Mean Multipath : 0.43 E: 5Q: Observations : 27473 E: 5Q: Slips (file+found): 34 + 6 E: 5Q: Gaps : 62 E: 5Q: Mean SNR : 43.5 E: 5Q: Mean Multipath : 0.22 E: 6C: Observations : 27564 E: 6C: Slips (file+found): 40 + 9 E: 6C: Gaps : 77 E: 6C: Mean SNR : 45.5 E: 6C: Mean Multipath : 0.39 E: 7Q: Observations : 27504 E: 7Q: Slips (file+found): 35 + 7 E: 7Q: Gaps : 55 E: 7Q: Mean SNR : 44.2 E: 7Q: Mean Multipath : 0.25 E: 8Q: Observations : 27099 E: 8Q: Slips (file+found): 48 + 9 E: 8Q: Gaps : 35 E: 8Q: Mean SNR : 47.1 E: 8Q: Mean Multipath : 0.08 G: Satellites: 32 G: Signals : 6 1C 1L 1W 2L 2W 5Q G: 1C: Observations : 33608 ( 35429) 94.86 % G: 1C: Slips (file+found): 120 + 40 G: 1C: Gaps : 159 G: 1C: Mean SNR : 43.8 G: 1C: Mean Multipath : 0.56 G: 1L: Observations : 4975 ( 35429) 14.04 % G: 1L: Slips (file+found): 17 + 5 G: 1L: Gaps : 17 G: 1L: Mean SNR : 44.0 G: 1L: Mean Multipath : 0.54 G: 1W: Observations : 32785 ( 35429) 92.54 % G: 1W: Slips (file+found): 0 + 41 G: 1W: Gaps : 83 G: 1W: Mean SNR : 33.5 G: 1W: Mean Multipath : 0.55 G: 2L: Observations : 24939 ( 35429) 70.39 % G: 2L: Slips (file+found): 81 + 26 G: 2L: Gaps : 95 G: 2L: Mean SNR : 41.4 G: 2L: Mean Multipath : 0.49 G: 2W: Observations : 32785 ( 35429) 92.54 % G: 2W: Slips (file+found): 110 + 44 G: 2W: Gaps : 83 G: 2W: Mean SNR : 33.5 G: 2W: Mean Multipath : 0.32 G: 5Q: Observations : 17026 ( 35429) 48.06 % G: 5Q: Slips (file+found): 41 + 8 G: 5Q: Gaps : 47 G: 5Q: Mean SNR : 46.2 G: 5Q: Mean Multipath : 0.26 J: Satellites: 4 J: Signals : 6 1C 1L 1Z 2L 5P 5Q J: 1C: Observations : 9433 ( 9493) 99.37 % J: 1C: Slips (file+found): 64 + 7 J: 1C: Gaps : 14 J: 1C: Mean SNR : 38.0 J: 1C: Mean Multipath : 0.71 J: 1L: Observations : 9438 ( 9493) 99.42 % J: 1L: Slips (file+found): 14 + 10 J: 1L: Gaps : 10 J: 1L: Mean SNR : 38.9 J: 1L: Mean Multipath : 0.58 J: 1Z: Observations : 9428 ( 9493) 99.32 % J: 1Z: Slips (file+found): 20 + 7 J: 1Z: Gaps : 16 J: 1Z: Mean SNR : 40.6 J: 1Z: Mean Multipath : 0.61 J: 2L: Observations : 9435 ( 9493) 99.39 % J: 2L: Slips (file+found): 12 + 9 J: 2L: Gaps : 10 J: 2L: Mean SNR : 38.9 J: 2L: Mean Multipath : 0.58 J: 5P: Observations : 9443 ( 9493) 99.47 % J: 5P: Slips (file+found): 12 + 11 J: 5P: Gaps : 8 J: 5P: Mean SNR : 36.4 J: 5P: Mean Multipath : 0.18 J: 5Q: Observations : 9457 ( 9493) 99.62 % J: 5Q: Slips (file+found): 12 + 11 J: 5Q: Gaps : 7 J: 5Q: Mean SNR : 41.4 J: 5Q: Mean Multipath : 0.13 > 2022 06 21 00 00 0.0000000 41 0.6 G08 0.00 0.00 9 L1C .. 44.1 C1C . 0.58 C1W . 0.59 L2W .. 40.6 C2W . 0.77 L2L .. 37.3 C2L . 0.74 L5Q .. 45.3 C5Q . 0.33 G10 32.29 79.31 9 L1C .. 49.6 C1C . 0.16 C1W . 0.16 L2W .. 44.0 C2W . 0.09 L2L .. 48.2 C2L . 0.11 L5Q .. 51.6 C5Q . 0.09 G16 54.18 -127.22 5 L1C .. 47.1 C1C . 0.21 C1W . 0.21 L2W .. 39.4 C2W . 0.10 G21 15.13 -68.49 5 L1C .. 41.8 C1C . 0.53 C1W . 0.53 L2W .. 25.6 C2W . 0.27 G22 26.49 158.25 5 L1C .. 44.6 C1C . 0.27 C1W . 0.27 L2W .. 30.1 C2W . 0.29 G23 0.00 0.00 11 L1C .. 45.3 C1C . 0.33 C1W . 0.33 L2W .. 33.9 C2W . 0.17 L2L .. 42.5 C2L . 0.24 L5Q .. 46.3 C5Q . 0.25 L1L .. 45.7 C1L . 0.27 G26 0.00 0.00 9 L1C .. 46.7 C1C . 0.28 C1W . 0.29 L2W .. 36.8 C2W . 0.09 L2L .. 43.7 C2L . 0.21 L5Q .. 48.6 C5Q . 0.10 G27 0.00 0.00 9 L1C .. 48.8 C1C . 0.23 C1W . 0.23 L2W .. 43.4 C2W . 0.17 L2L .. 48.2 C2L . 0.15 L5Q .. 51.9 C5Q . 0.10 G31 0.00 0.00 7 L1C .. 35.7 C1C . 4.35 C1W . 4.31 L2W .. 18.4 C2W . 4.31 L2L s. 31.1 C2L . 0.00 G32 0.00 0.00 9 L1C .. 49.2 C1C . 0.32 C1W . 0.32 L2W .. 39.9 C2W . 0.15 L2L .. 44.6 C2L . 0.16 L5Q .. 48.0 C5Q . 0.09 E02 43.91 -107.45 10 L1C .. 47.6 C1C . 0.27 L6C .. 50.3 C6C . 0.23 L5Q .. 48.5 C5Q . 0.11 L7Q .. 48.8 C7Q . 0.14 L8Q .. 51.7 C8Q . 0.02 E03 2.45 -161.42 10 L1C .. 37.7 C1C . 0.74 L6C .. 37.4 C6C . 0.48 L5Q .. 36.9 C5Q . 0.14 L7Q .. 37.6 C7Q . 0.18 L8Q .. 40.3 C8Q . 0.16 E04 8.83 44.72 7 C1C . 0.00 C6C . 0.00 L5Q .. 28.5 C5Q . 0.00 C7Q . 0.00 L8Q .. 31.2 C8Q . 0.00 E05 37.64 160.08 10 L1C .. 46.5 C1C . 0.13 L6C .. 49.7 C6C . 0.12 L5Q .. 47.0 C5Q . 0.12 L7Q .. 47.5 C7Q . 0.10 L8Q .. 50.3 C8Q . 0.03 E09 42.44 89.19 10 L1C .. 47.7 C1C . 0.20 L6C .. 50.7 C6C . 0.13 L5Q .. 48.1 C5Q . 0.09 L7Q .. 48.9 C7Q . 0.19 L8Q .. 51.5 C8Q . 0.04 E11 20.61 64.05 10 L1C .. 41.7 C1C . 0.14 L6C .. 42.8 C6C . 0.14 L5Q .. 39.0 C5Q . 0.14 L7Q .. 39.2 C7Q . 0.12 L8Q .. 42.1 C8Q . 0.03 E25 29.05 -169.12 10 L1C .. 44.2 C1C . 0.36 L6C .. 47.6 C6C . 0.26 L5Q .. 45.0 C5Q . 0.13 L7Q .. 46.0 C7Q . 0.20 L8Q .. 48.5 C8Q . 0.07 E30 18.32 -53.65 10 L1C .. 42.8 C1C . 0.34 L6C .. 46.1 C6C . 0.37 L5Q .. 42.7 C5Q . 0.26 L7Q .. 43.5 C7Q . 0.32 L8Q .. 46.1 C8Q . 0.03 E34 26.84 -52.94 10 L1C .. 45.5 C1C . 0.36 L6C .. 46.7 C6C . 0.59 L5Q .. 44.1 C5Q . 0.22 L7Q .. 44.6 C7Q . 0.21 L8Q .. 47.4 C8Q . 0.05 E36 44.38 10.32 10 L1C .. 47.1 C1C . 0.23 L6C .. 50.4 C6C . 0.14 L5Q .. 48.4 C5Q . 0.18 L7Q .. 49.1 C7Q . 0.13 L8Q .. 51.7 C8Q . 0.04 J02 25.68 -71.42 12 L1C .. 43.6 C1C . 0.60 L2L .. 40.0 C2L . 0.83 L5Q .. 44.4 C5Q . 0.06 L1L .. 43.6 C1L . 0.71 L1Z .. 43.4 C1Z . 0.64 L5P .. 40.8 C5P . 0.09 J03 18.88 -66.71 12 L1C .. 41.0 C1C . 0.45 L2L .. 40.3 C2L . 0.58 L5Q .. 42.9 C5Q . 0.17 L1L .. 41.7 C1L . 0.49 L1Z .. 41.4 C1Z . 0.47 L5P .. 39.4 C5P . 0.17 J04 6.08 -127.48 12 L1C .. 39.3 C1C . 1.18 L2L .. 38.2 C2L . 1.45 L5Q .. 39.2 C5Q . 0.59 L1L .. 38.7 C1L . 1.31 L1Z .. 40.4 C1Z . 1.21 L5P .. 35.0 C5P . 0.60 J07 3.70 -94.81 11 C1C . 0.51 L2L .. 37.0 C2L . 0.20 L5Q .. 39.5 C5Q . 0.09 L1L .. 32.7 C1L . 0.21 L1Z .. 38.9 C1Z . 0.25 L5P .. 30.9 C5P . 0.16 C01 20.30 -102.21 6 L2I .. 41.8 C2I . 0.00 L7I .. 42.6 C7I . 0.00 L6I .. 40.1 C6I . 0.00 C04 35.59 -109.87 6 L2I .. 44.5 C2I . 0.00 L7I .. 45.4 C7I . 0.00 L6I .. 44.6 C6I . 0.00 C11 18.91 -42.10 6 L2I .. 39.0 C2I . 0.00 L7I .. 46.1 C7I . 0.00 L6I .. 44.6 C6I . 0.00 C12 51.55 8.60 6 L2I .. 48.5 C2I . 0.00 L7I .. 51.5 C7I . 0.00 L6I .. 50.9 C6I . 0.00 C14 7.32 -150.82 6 L2I .. 37.8 C2I . 0.00 L7I .. 40.9 C7I . 0.00 L6I .. 41.4 C6I . 0.00 C21 75.79 138.30 10 L1P .. 49.0 C1P . 0.14 L5P .. 51.9 C5P . 0.06 L2I .. 50.8 C2I . 0.25 L6I .. 52.5 C6I . 0.08 L7D .. 51.0 C7D . 0.07 C22 36.50 44.63 10 L1P .. 47.4 C1P . 0.30 L5P .. 47.4 C5P . 0.16 L2I .. 49.6 C2I . 0.26 L6I .. 49.9 C6I . 0.25 L7D .. 47.3 C7D . 0.21 C24 16.27 -139.62 10 L1P .. 43.9 C1P . 0.74 L5P .. 42.8 C5P . 0.12 L2I .. 44.7 C2I . 0.71 L6I .. 43.5 C6I . 0.16 L7D .. 42.6 C7D . 0.19 C25 8.87 -85.45 10 L1P .. 38.0 C1P . 1.84 L5P .. 40.3 C5P . 0.29 L2I .. 41.7 C2I . 1.50 L6I .. 41.5 C6I . 0.37 L7D .. 39.8 C7D . 0.35 C26 4.25 177.77 10 L1P .. 40.0 C1P . 0.75 L5P .. 37.8 C5P . 0.28 L2I .. 41.7 C2I . 0.66 L6I .. 40.5 C6I . 0.22 L7D .. 37.7 C7D . 0.28 C34 36.24 -28.48 10 L1P .. 46.7 C1P . 0.36 L5P .. 42.5 C5P . 0.23 L2I .. 48.9 C2I . 0.44 L6I .. 48.1 C6I . 0.21 L7D .. 42.3 C7D . 0.38 C35 16.68 103.11 10 L1P .. 41.8 C1P . 0.44 L5P .. 41.5 C5P . 0.20 L2I .. 43.3 C2I . 0.34 L6I .. 43.0 C6I . 0.19 L7D .. 40.9 C7D . 0.21 C40 10.26 -34.76 10 L1P .. 42.4 C1P . 0.36 L5P .. 37.4 C5P . 0.32 L2I .. 43.1 C2I . 0.45 L6I .. 39.4 C6I . 0.54 L7D .. 38.4 C7D . 0.31 C42 30.61 -156.42 10 L1P .. 46.0 C1P . 0.34 L5P .. 46.6 C5P . 0.17 L2I .. 47.7 C2I . 0.33 L6I .. 48.1 C6I . 0.08 L7D .. 46.1 C7D . 0.14 C44 53.90 52.53 10 L1P .. 48.1 C1P . 0.18 L5P .. 49.4 C5P . 0.11 L2I .. 50.9 C2I . 0.34 L6I .. 50.9 C6I . 0.15 L7D .. 48.9 C7D . 0.10 C57 0.00 0.00 4 L2I .. 48.1 C2I . 0.00 L6I .. 48.2 C6I . 0.00 C59 15.79 -100.68 6 L2I .. 43.8 C2I . 0.00 L6I .. 41.7 C6I . 0.00 L7D .. 41.5 C7D . 0.00 > 2022 06 21 00 00 30.0000000 41 0.6 ...\n\nThe epoch-specific output\n\nEach 'Epoch Record' contains 9 parameters. Example:\n\n> 2022 06 21 00 00 30.0000000 49 0.5\n\nTheir meaning is as follows:\n\nSpecial character '>' is the first"
    }
}