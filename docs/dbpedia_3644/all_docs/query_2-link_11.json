{
    "id": "dbpedia_3644_2",
    "rank": 11,
    "data": {
        "url": "https://stackoverflow.com/questions/28821804/how-can-i-quickly-determine-the-state-for-a-given-zipcode",
        "read_more_link": "",
        "language": "en",
        "title": "How can I quickly determine the State for a given zipcode?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://cdn.sstatic.net/Img/teams/teams-promo.svg?v=e507948b81bf",
            "https://i.sstatic.net/yofKv.jpg?s=64",
            "https://i.sstatic.net/yofKv.jpg?s=64",
            "https://i.sstatic.net/fy1Dv.png?s=64",
            "https://graph.facebook.com/10101252258336955/picture?type=large",
            "https://i.sstatic.net/EDoiY.png?s=64",
            "https://i.sstatic.net/0EerT.jpg?s=64",
            "https://www.gravatar.com/avatar/60162a2f47e25bfea5892c6fbc666f5e?s=64&d=identicon&r=PG",
            "https://lh6.googleusercontent.com/-0hzEWpOJIkQ/AAAAAAAAAAI/AAAAAAAAA9A/i0nqA-WRsWY/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/3f3df95fbff015d5c1621bfd966277c1?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/895031fde80e6cca795f93518015d519?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/cd66178e7fa0d554e36366500422bd79?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://stackoverflow.com/posts/28821804/ivc/945e?prg=84fd582b-dbc8-4adf-9dcc-b2586deda888"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Tony Brasunas"
        ],
        "publish_date": "2015-03-03T00:12:58",
        "summary": "",
        "meta_description": "I don't need the city or address, just the state. And I don't want to make an API call if possible. The priority is a light-weight solution, ideally just Javascript.\n\nI have a user-input zipcode, a...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/28821804/how-can-i-quickly-determine-the-state-for-a-given-zipcode",
        "text": "US zipcode data is in fact stable enough that you can do this without hitting an API or a database if you only need the State (not the City or anything else).\n\nHere's a lightweight JS solution that takes a zipcode (as a string), determines the proper US state, and returns the state.\n\nfunction getState(zipString) { /* Ensure param is a string to prevent unpredictable parsing results */ if (typeof zipString !== 'string') { console.error('Must pass the zipcode as a string.'); return; } /* Ensure we have exactly 5 characters to parse */ if (zipString.length !== 5) { console.error('Must pass a 5-digit zipcode.'); return; } /* Ensure we don't parse strings starting with 0 as octal values */ const zipcode = parseInt(zipString, 10); let st; let state; /* Code cases alphabetized by state */ if (zipcode >= 35000 && zipcode <= 36999) { st = 'AL'; state = 'Alabama'; } else if (zipcode >= 99500 && zipcode <= 99999) { st = 'AK'; state = 'Alaska'; } else if (zipcode >= 85000 && zipcode <= 86999) { st = 'AZ'; state = 'Arizona'; } else if (zipcode >= 71600 && zipcode <= 72999) { st = 'AR'; state = 'Arkansas'; } else if (zipcode >= 90000 && zipcode <= 96699) { st = 'CA'; state = 'California'; } else if (zipcode >= 80000 && zipcode <= 81999) { st = 'CO'; state = 'Colorado'; } else if ((zipcode >= 6000 && zipcode <= 6389) || (zipcode >= 6391 && zipcode <= 6999)) { st = 'CT'; state = 'Connecticut'; } else if (zipcode >= 19700 && zipcode <= 19999) { st = 'DE'; state = 'Delaware'; } else if (zipcode >= 32000 && zipcode <= 34999) { st = 'FL'; state = 'Florida'; } else if ( (zipcode >= 30000 && zipcode <= 31999) || (zipcode >= 39800 && zipcode <= 39999) ) { st = 'GA'; state = 'Georgia'; } else if (zipcode >= 96700 && zipcode <= 96999) { st = 'HI'; state = 'Hawaii'; } else if (zipcode >= 83200 && zipcode <= 83999 && zipcode != 83414) { st = 'ID'; state = 'Idaho'; } else if (zipcode >= 60000 && zipcode <= 62999) { st = 'IL'; state = 'Illinois'; } else if (zipcode >= 46000 && zipcode <= 47999) { st = 'IN'; state = 'Indiana'; } else if (zipcode >= 50000 && zipcode <= 52999) { st = 'IA'; state = 'Iowa'; } else if (zipcode >= 66000 && zipcode <= 67999) { st = 'KS'; state = 'Kansas'; } else if (zipcode >= 40000 && zipcode <= 42999) { st = 'KY'; state = 'Kentucky'; } else if (zipcode >= 70000 && zipcode <= 71599) { st = 'LA'; state = 'Louisiana'; } else if (zipcode >= 3900 && zipcode <= 4999) { st = 'ME'; state = 'Maine'; } else if (zipcode >= 20600 && zipcode <= 21999) { st = 'MD'; state = 'Maryland'; } else if ( (zipcode >= 1000 && zipcode <= 2799) || (zipcode == 5501) || (zipcode == 5544 ) ) { st = 'MA'; state = 'Massachusetts'; } else if (zipcode >= 48000 && zipcode <= 49999) { st = 'MI'; state = 'Michigan'; } else if (zipcode >= 55000 && zipcode <= 56899) { st = 'MN'; state = 'Minnesota'; } else if (zipcode >= 38600 && zipcode <= 39999) { st = 'MS'; state = 'Mississippi'; } else if (zipcode >= 63000 && zipcode <= 65999) { st = 'MO'; state = 'Missouri'; } else if (zipcode >= 59000 && zipcode <= 59999) { st = 'MT'; state = 'Montana'; } else if (zipcode >= 27000 && zipcode <= 28999) { st = 'NC'; state = 'North Carolina'; } else if (zipcode >= 58000 && zipcode <= 58999) { st = 'ND'; state = 'North Dakota'; } else if (zipcode >= 68000 && zipcode <= 69999) { st = 'NE'; state = 'Nebraska'; } else if (zipcode >= 88900 && zipcode <= 89999) { st = 'NV'; state = 'Nevada'; } else if (zipcode >= 3000 && zipcode <= 3899) { st = 'NH'; state = 'New Hampshire'; } else if (zipcode >= 7000 && zipcode <= 8999) { st = 'NJ'; state = 'New Jersey'; } else if (zipcode >= 87000 && zipcode <= 88499) { st = 'NM'; state = 'New Mexico'; } else if ( (zipcode >= 10000 && zipcode <= 14999) || (zipcode == 6390) || (zipcode == 501) || (zipcode == 544) ) { st = 'NY'; state = 'New York'; } else if (zipcode >= 43000 && zipcode <= 45999) { st = 'OH'; state = 'Ohio'; } else if ((zipcode >= 73000 && zipcode <= 73199) || (zipcode >= 73400 && zipcode <= 74999) ) { st = 'OK'; state = 'Oklahoma'; } else if (zipcode >= 97000 && zipcode <= 97999) { st = 'OR'; state = 'Oregon'; } else if (zipcode >= 15000 && zipcode <= 19699) { st = 'PA'; state = 'Pennsylvania'; } else if (zipcode >= 300 && zipcode <= 999) { st = 'PR'; state = 'Puerto Rico'; } else if (zipcode >= 2800 && zipcode <= 2999) { st = 'RI'; state = 'Rhode Island'; } else if (zipcode >= 29000 && zipcode <= 29999) { st = 'SC'; state = 'South Carolina'; } else if (zipcode >= 57000 && zipcode <= 57999) { st = 'SD'; state = 'South Dakota'; } else if (zipcode >= 37000 && zipcode <= 38599) { st = 'TN'; state = 'Tennessee'; } else if ( (zipcode >= 75000 && zipcode <= 79999) || (zipcode >= 73301 && zipcode <= 73399) || (zipcode >= 88500 && zipcode <= 88599) ) { st = 'TX'; state = 'Texas'; } else if (zipcode >= 84000 && zipcode <= 84999) { st = 'UT'; state = 'Utah'; } else if (zipcode >= 5000 && zipcode <= 5999) { st = 'VT'; state = 'Vermont'; } else if ( (zipcode >= 20100 && zipcode <= 20199) || (zipcode >= 22000 && zipcode <= 24699) || (zipcode == 20598) ) { st = 'VA'; state = 'Virginia'; } else if ( (zipcode >= 20000 && zipcode <= 20099) || (zipcode >= 20200 && zipcode <= 20599) || (zipcode >= 56900 && zipcode <= 56999) ) { st = 'DC'; state = 'Washington DC'; } else if (zipcode >= 98000 && zipcode <= 99499) { st = 'WA'; state = 'Washington'; } else if (zipcode >= 24700 && zipcode <= 26999) { st = 'WV'; state = 'West Virginia'; } else if (zipcode >= 53000 && zipcode <= 54999) { st = 'WI'; state = 'Wisconsin'; } else if ( (zipcode >= 82000 && zipcode <= 83199) || zipcode == 83414 ) { st = 'WY'; state = 'Wyoming'; } else { st = 'none'; state = 'none'; console.log('No state found matching', zipcode); } /* Return `state` for full name or `st` for postal abbreviation */ return st; }\n\nFor the return value:\n\nReturn state on the last line to get the state's full name; or\n\nReturn st on the last line to get the state's two-letter postal abbreviation.\n\nMany thanks to @kevin-boucher and @abaldwin99 for help on parsing smaller New England codes and avoiding the dreaded octal evaluation bug with their answers here.\n\nAlso thanks for much of the original code goes to this useful page.\n\nI ended up downloading a CSV file from the United States zip code database. I too did not want to integrate with a dependency API.\n\nThe CSV file came with more information than I needed. I parsed the file for only the zip and state columns, and created a Hash of zip code to state code (I'm using Ruby on Rails) that I maintain and use in my application. You could do something similar with Javascript.\n\nThere are problems with current revision of the accepted answer of using ranges.\n\nFirst, this answer does not account for the United States outlying areas like AE (Armed Forces Europe https://www.zip-codes.com/state/ae.asp), AA (Armed Forces Americas https://www.zip-codes.com/state/aa.asp), and others.\n\nSecond, ranges change, and zip codes change (though infrequently). The accepted answer has several revisions to add \"edge cases\" and \"corner cases\" to the ranges over the years. But I think what's really happening here is that zip codes are changing, and the ranges in that answer are having to constantly keep getting updated. I discovered several zip codes that didn't work for the current revision of the accepted answer. There could be more examples â€” I didn't do an exhaustive check. [Fiddle]\n\n// Prints DC, but should be MD // https://www.zip-codes.com/zip-code/20588/zip-code-20588.asp console.log(`20588: ${getState(\"20588\")}`); // Prints OK, but should be TX // https://www.zip-codes.com/zip-code/73960/zip-code-73960.asp console.log(`73960: ${getState(\"73960\")}`); // Prints ID, but should be WY // https://www.zip-codes.com/zip-code/83414/zip-code-83414.asp console.log(`83414: ${getState(\"83414\")}`); // Prints OK, but should be TX // https://www.zip-codes.com/zip-code/73960/zip-code-73960.asp console.log(`73960: ${getState(\"73960\")}`);\n\nIt's true that downloading from the CSV file from the United States zip code database will only represent a point-in-time for zip code data. Anybody going with this solution will need to periodically do a fresh download that file to get the most up-to-date data. But given the guarantees on their website, it's better to rely on this maintained source of truth, rather than relying on ranges.\n\nFrom their website:\n\n\"We constantly monitor USPS data for major changes and release new data when there are significant changes. Our confidence is so high that we offer a money back guarantee: if you find any major changes before we make data updates, we'll issue a full refund.\"\n\nI realize the OP was originally asking for PHP or JS but I ended up here so someone else might also find this useful.\n\nHere is a C# version with updated zip code ranges (built from a database of 42k zip codes)\n\npublic static string GetStateFromZip(int zipCode) { return zipCode switch { var zip when zip >= 600 && zip <= 999 => \"Puerto Rico\", var zip when zip >= 1001 && zip <= 2791 => \"Massachusetts\", var zip when zip >= 2801 && zip <= 2940 => \"Rhode Island\", var zip when zip >= 3031 && zip <= 3897 => \"New Hampshire\", var zip when zip >= 3901 && zip <= 4992 => \"Maine\", var zip when zip >= 5001 && zip <= 5495 => \"Vermont\", var zip when zip >= 5501 && zip <= 5544 => \"Massachusetts\", var zip when zip >= 5601 && zip <= 5907 => \"Vermont\", var zip when zip >= 6001 && zip <= 6389 => \"Connecticut\", var zip when zip >= 6390 && zip <= 6390 => \"New York\", var zip when zip >= 6401 && zip <= 6928 => \"Connecticut\", var zip when zip >= 7001 && zip <= 8989 => \"New Jersey\", var zip when zip >= 9000 && zip <= 9900 => \"Military\", var zip when zip >= 10001 && zip <= 14975 => \"New York\", var zip when zip >= 15001 && zip <= 19640 => \"Pennsylvania\", var zip when zip >= 19701 && zip <= 19980 => \"Delaware\", var zip when zip >= 20001 && zip <= 20039 => \"Washington, D.C.\", var zip when zip >= 20040 && zip <= 20167 => \"Virginia\", var zip when zip >= 20042 && zip <= 20599 => \"Washington, D.C.\", var zip when zip >= 20331 && zip <= 20331 => \"Maryland\", var zip when zip >= 20335 && zip <= 20797 => \"Maryland\", var zip when zip >= 20799 && zip <= 20799 => \"Washington, D.C.\", var zip when zip >= 20810 && zip <= 21930 => \"Maryland\", var zip when zip >= 22001 && zip <= 24658 => \"Virginia\", var zip when zip >= 24701 && zip <= 26886 => \"West Virginia\", var zip when zip >= 27006 && zip <= 28909 => \"North Carolina\", var zip when zip >= 29001 && zip <= 29948 => \"South Carolina\", var zip when zip >= 30001 && zip <= 31999 => \"Georgia\", var zip when zip >= 32000 && zip <= 34997 => \"Florida\", var zip when zip >= 35004 && zip <= 36925 => \"Alabama\", var zip when zip >= 37010 && zip <= 38589 => \"Tennessee\", var zip when zip >= 38601 && zip <= 39776 => \"Mississippi\", var zip when zip >= 39813 && zip <= 39897 => \"Georgia\", var zip when zip >= 39901 && zip <= 39901 => \"Georgia\", var zip when zip >= 40003 && zip <= 42788 => \"Kentucky\", var zip when zip >= 43001 && zip <= 45999 => \"Ohio\", var zip when zip >= 46001 && zip <= 47997 => \"Indiana\", var zip when zip >= 48001 && zip <= 49971 => \"Michigan\", var zip when zip >= 50001 && zip <= 52809 => \"Iowa\", var zip when zip >= 53001 && zip <= 54990 => \"Wisconsin\", var zip when zip >= 55001 && zip <= 56763 => \"Minnesota\", var zip when zip >= 56901 && zip <= 56999 => \"Washington, D.C.\", var zip when zip >= 57001 && zip <= 57799 => \"South Dakota\", var zip when zip >= 58001 && zip <= 58856 => \"North Dakota\", var zip when zip >= 59001 && zip <= 59937 => \"Montana\", var zip when zip >= 60001 && zip <= 62999 => \"Illinois\", var zip when zip >= 63001 && zip <= 65899 => \"Missouri\", var zip when zip >= 66002 && zip <= 67954 => \"Kansas\", var zip when zip >= 68001 && zip <= 68118 => \"Nebraska\", var zip when zip >= 68119 && zip <= 68120 => \"Iowa\", var zip when zip >= 68122 && zip <= 69367 => \"Nebraska\", var zip when zip >= 70001 && zip <= 71232 => \"Louisiana\", var zip when zip >= 71233 && zip <= 71233 => \"Mississippi\", var zip when zip >= 71234 && zip <= 71497 => \"Louisiana\", var zip when zip >= 71601 && zip <= 72959 => \"Arkansas\", var zip when zip >= 73001 && zip <= 73199 => \"Oklahoma\", var zip when zip >= 73301 && zip <= 73399 => \"Texas\", var zip when zip >= 73401 && zip <= 74966 => \"Oklahoma\", var zip when zip >= 75001 && zip <= 75501 => \"Texas\", var zip when zip >= 75502 && zip <= 75502 => \"Arkansas\", var zip when zip >= 75503 && zip <= 79999 => \"Texas\", var zip when zip >= 80001 && zip <= 81658 => \"Colorado\", var zip when zip >= 82001 && zip <= 83128 => \"Wyoming\", var zip when zip >= 83201 && zip <= 83876 => \"Idaho\", var zip when zip >= 84001 && zip <= 84790 => \"Utah\", var zip when zip >= 85001 && zip <= 86556 => \"Arizona\", var zip when zip >= 87001 && zip <= 88441 => \"New Mexico\", var zip when zip >= 88510 && zip <= 88595 => \"Texas\", var zip when zip >= 88901 && zip <= 89883 => \"Nevada\", var zip when zip >= 90001 && zip <= 96162 => \"California\", var zip when zip >= 96201 && zip <= 96698 => \"Military\", var zip when zip >= 96701 && zip <= 96898 => \"Hawaii\", var zip when zip >= 96910 && zip <= 96932 => \"Guam\", var zip when zip >= 97001 && zip <= 97920 => \"Oregon\", var zip when zip >= 98001 && zip <= 99403 => \"Washington\", var zip when zip >= 99501 && zip <= 99950 => \"Alaska\", _ => \"\" }; }\n\nHere's the PHP version of @Tony Brasunas accepted answer\n\n<?php function getState( $zipcode ) { /* Ensure we have exactly 5 characters to parse */ if ( strlen( $zipcode ) !== 5) { return 'Must pass a 5-digit $zipcode.'; } $st = ''; $state = ''; /* Code cases alphabetized by state */ if ($zipcode >= 35000 && $zipcode <= 36999) { $st = 'AL'; $state = 'Alabama'; } else if ($zipcode >= 99500 && $zipcode <= 99999) { $st = 'AK'; $state = 'Alaska'; } else if ($zipcode >= 85000 && $zipcode <= 86999) { $st = 'AZ'; $state = 'Arizona'; } else if ($zipcode >= 71600 && $zipcode <= 72999) { $st = 'AR'; $state = 'Arkansas'; } else if ($zipcode >= 90000 && $zipcode <= 96699) { $st = 'CA'; $state = 'California'; } else if ($zipcode >= 80000 && $zipcode <= 81999) { $st = 'CO'; $state = 'Colorado'; } else if (($zipcode >= 6000 && $zipcode <= 6389) || ($zipcode >= 6391 && $zipcode <= 6999)) { $st = 'CT'; $state = 'Connecticut'; } else if ($zipcode >= 19700 && $zipcode <= 19999) { $st = 'DE'; $state = 'Delaware'; } else if ($zipcode >= 32000 && $zipcode <= 34999) { $st = 'FL'; $state = 'Florida'; } else if ( ($zipcode >= 30000 && $zipcode <= 31999) || ($zipcode >= 39800 && $zipcode <= 39999) ) { $st = 'GA'; $state = 'Georgia'; } else if ($zipcode >= 96700 && $zipcode <= 96999) { $st = 'HI'; $state = 'Hawaii'; } else if ($zipcode >= 83200 && $zipcode <= 83999) { $st = 'ID'; $state = 'Idaho'; } else if ($zipcode >= 60000 && $zipcode <= 62999) { $st = 'IL'; $state = 'Illinois'; } else if ($zipcode >= 46000 && $zipcode <= 47999) { $st = 'IN'; $state = 'Indiana'; } else if ($zipcode >= 50000 && $zipcode <= 52999) { $st = 'IA'; $state = 'Iowa'; } else if ($zipcode >= 66000 && $zipcode <= 67999) { $st = 'KS'; $state = 'Kansas'; } else if ($zipcode >= 40000 && $zipcode <= 42999) { $st = 'KY'; $state = 'Kentucky'; } else if ($zipcode >= 70000 && $zipcode <= 71599) { $st = 'LA'; $state = 'Louisiana'; } else if ($zipcode >= 3900 && $zipcode <= 4999) { $st = 'ME'; $state = 'Maine'; } else if ($zipcode >= 20600 && $zipcode <= 21999) { $st = 'MD'; $state = 'Maryland'; } else if ( ($zipcode >= 1000 && $zipcode <= 2799) || ($zipcode == 5501) || ($zipcode == 5544 ) ) { $st = 'MA'; $state = 'Massachusetts'; } else if ($zipcode >= 48000 && $zipcode <= 49999) { $st = 'MI'; $state = 'Michigan'; } else if ($zipcode >= 55000 && $zipcode <= 56899) { $st = 'MN'; $state = 'Minnesota'; } else if ($zipcode >= 38600 && $zipcode <= 39999) { $st = 'MS'; $state = 'Mississippi'; } else if ($zipcode >= 63000 && $zipcode <= 65999) { $st = 'MO'; $state = 'Missouri'; } else if ($zipcode >= 59000 && $zipcode <= 59999) { $st = 'MT'; $state = 'Montana'; } else if ($zipcode >= 27000 && $zipcode <= 28999) { $st = 'NC'; $state = 'North Carolina'; } else if ($zipcode >= 58000 && $zipcode <= 58999) { $st = 'ND'; $state = 'North Dakota'; } else if ($zipcode >= 68000 && $zipcode <= 69999) { $st = 'NE'; $state = 'Nebraska'; } else if ($zipcode >= 88900 && $zipcode <= 89999) { $st = 'NV'; $state = 'Nevada'; } else if ($zipcode >= 3000 && $zipcode <= 3899) { $st = 'NH'; $state = 'New Hampshire'; } else if ($zipcode >= 7000 && $zipcode <= 8999) { $st = 'NJ'; $state = 'New Jersey'; } else if ($zipcode >= 87000 && $zipcode <= 88499) { $st = 'NM'; $state = 'New Mexico'; } else if ( ($zipcode >= 10000 && $zipcode <= 14999) || ($zipcode == 6390) || ($zipcode == 501) || ($zipcode == 544) ) { $st = 'NY'; $state = 'New York'; } else if ($zipcode >= 43000 && $zipcode <= 45999) { $st = 'OH'; $state = 'Ohio'; } else if (($zipcode >= 73000 && $zipcode <= 73199) || ($zipcode >= 73400 && $zipcode <= 74999) ) { $st = 'OK'; $state = 'Oklahoma'; } else if ($zipcode >= 97000 && $zipcode <= 97999) { $st = 'OR'; $state = 'Oregon'; } else if ($zipcode >= 15000 && $zipcode <= 19699) { $st = 'PA'; $state = 'Pennsylvania'; } else if ($zipcode >= 300 && $zipcode <= 999) { $st = 'PR'; $state = 'Puerto Rico'; } else if ($zipcode >= 2800 && $zipcode <= 2999) { $st = 'RI'; $state = 'Rhode Island'; } else if ($zipcode >= 29000 && $zipcode <= 29999) { $st = 'SC'; $state = 'South Carolina'; } else if ($zipcode >= 57000 && $zipcode <= 57999) { $st = 'SD'; $state = 'South Dakota'; } else if ($zipcode >= 37000 && $zipcode <= 38599) { $st = 'TN'; $state = 'Tennessee'; } else if ( ($zipcode >= 75000 && $zipcode <= 79999) || ($zipcode >= 73301 && $zipcode <= 73399) || ($zipcode >= 88500 && $zipcode <= 88599) ) { $st = 'TX'; $state = 'Texas'; } else if ($zipcode >= 84000 && $zipcode <= 84999) { $st = 'UT'; $state = 'Utah'; } else if ($zipcode >= 5000 && $zipcode <= 5999) { $st = 'VT'; $state = 'Vermont'; } else if ( ($zipcode >= 20100 && $zipcode <= 20199) || ($zipcode >= 22000 && $zipcode <= 24699) || ($zipcode == 20598) ) { $st = 'VA'; $state = 'Virgina'; } else if ( ($zipcode >= 20000 && $zipcode <= 20099) || ($zipcode >= 20200 && $zipcode <= 20599) || ($zipcode >= 56900 && $zipcode <= 56999) ) { $st = 'DC'; $state = 'Washington DC'; } else if ($zipcode >= 98000 && $zipcode <= 99499) { $st = 'WA'; $state = 'Washington'; } else if ($zipcode >= 24700 && $zipcode <= 26999) { $st = 'WV'; $state = 'West Virginia'; } else if ($zipcode >= 53000 && $zipcode <= 54999) { $st = 'WI'; $state = 'Wisconsin'; } else if ($zipcode >= 82000 && $zipcode <= 83199) { $st = 'WY'; $state = 'Wyoming'; } else { $st = 'none'; $state = 'none'; return 'No state found matching' . $zipcode; } return $st; }"
    }
}