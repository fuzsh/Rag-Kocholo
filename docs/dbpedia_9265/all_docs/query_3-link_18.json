{
    "id": "dbpedia_9265_3",
    "rank": 18,
    "data": {
        "url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Text_labels_and_names",
        "read_more_link": "",
        "language": "en",
        "title": "Text labels and names - Accessibility",
        "top_image": "https://developer.mozilla.org/mdn-social-share.cd6c4a5a.png",
        "meta_img": "https://developer.mozilla.org/mdn-social-share.cd6c4a5a.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-04-17T05:19:10+00:00",
        "summary": "",
        "meta_description": "There are many situations in which a control, dialog, or other website feature should be given a descriptive name or label to allow users of assistive technologies to understand what its purpose is and how to operate it correctly. There are a number of different types of problems in this category, found in different contexts, and each has its own solution. The different problems and solutions are discussed in the sections below.",
        "meta_lang": "en",
        "meta_favicon": "/favicon-48x48.cbbd161b.png",
        "meta_site_name": "MDN Web Docs",
        "canonical_link": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Text_labels_and_names",
        "text": "The following example show a simple image map (taken from H24: Providing text alternatives for the area elements of image maps):\n\nhtml\n\n<img src=\"welcome.gif\" usemap=\"#map1\" alt=\"Areas in the library. Select an area for more information on that area.\" /> <map id=\"map1\" name=\"map1\"> <area shape=\"rect\" coords=\"0,0,30,30\" href=\"reference.html\" alt=\"Reference\" /> <area shape=\"rect\" coords=\"34,34,100,100\" href=\"media.html\" alt=\"Audio visual lab\" /> </map>\n\nSee the <area> element reference page for a live interactive example.\n\nFor any container whose contents act as a dialog box (for example, a modal dialog asking the user to make a choice or respond to an action being taken), give it a descriptive label or name, so that assistive technology users can easily discover what its purpose is.\n\nA dialog box is generally denoted by an ARIA role=\"dialog\" or role=\"alertdialog\"; you can use the aria-label or aria-labelledby attributes to provide a label.\n\nThe following example shows a simple dialog box, defined as such using role=\"dialog\" and labelled using aria-labelledby.\n\nhtml\n\n<div role=\"dialog\" aria-labelledby=\"dialog1Title\" aria-describedby=\"dialog1Desc\"> <h2 id=\"dialog1Title\">Your personal details were successfully updated</h2> <p id=\"dialog1Desc\"> You can change your details at any time in the user account section. </p> <button>Close</button> </div>\n\nIf the dialog box doesn't have a heading, you can instead use aria-label to contain the label text:\n\nhtml\n\n<div role=\"dialog\" aria-label=\"Personal details updated confirmation\"> <p> Your personal details were successfully updated. You can change your details at any time in the user account section. </p> <button>Close</button> </div>\n\nIt is important in each HTML document to include a <title> that describes the page's purpose. A common navigation technique for users of assistive technology is to infer what content a page contains by reading its title. If the title is not available, they have to navigate the page to determine its content, which can be a time consuming and potentially confusing process.\n\nThe title for the reference article about the <title> element is as follows:\n\nhtml\n\n<title> &lt;title&gt;: The Document Title element - HTML: Hypertext Markup Language | MDN </title>\n\nAnother example might look like so:\n\nhtml\n\n<title>Fill in your details to register â myGov services</title>\n\nTo help the user, you can update the page title value to reflect significant page state changes (such as form validation problems):\n\nhtml\n\n<title>2 errors â Fill in your details to register â myGov services</title>\n\nFor best accessibility, include a <figcaption> within a <figure> element, even though doing so is technically optional. The caption is in addition to any alternative text on images within the figure. The caption describes the purpose of the figure in the document, which may be different from a simple description of a visual item, as provided by the alternative text.\n\nWhen grouping a set of form elements together with a <fieldset> element, you should include a nested <legend> element inside it, containing a clear description of the group.\n\nUsers of assistive technology find this description helpful when trying to work out the overall purpose of the group. Without the legend, they would have to navigate around the individual form controls in the group to infer an idea of the overall purpose, which could result in confusion.\n\nAll elements within a form must have a <label> that identifies its purpose. This applies to all types of <input> items, as well as <button>, <output>, <select>, <textarea>, <progress> and <meter> elements, as well as any element with the switch ARIA role.\n\nThe form element can be placed inside the <label>, in which case the association between the form element and the label is obvious from the structure. Or, you can create an association between a <label> and a form element by specifying the form element's id value as the value of the label's for attribute.\n\nFrame elements, both <iframe> and the older, obsolete <frame>, must have a title to describe the contents of the frame. Use the title attribute to label a frame element. Without a title, users of assistive technologies have to navigate into the frame in order to understand what it contains, which can be difficult and confusing.\n\nThe <frame> element is no longer part of the HTML specification. Support for it may be dropped by browsers in the future. In addition, it is difficult for screen readers to navigate pages with <frame> elements. For best accessibility and future maintenance, redesign any pages that use frames to use CSS to achieve a similar layout.\n\nAs a best practice, also provide a <title> for the document that is enclosed in the frame, with content identical to the frame's title attribute. (This assumes that the enclosed document is under your control; if not, try to match the frame's title attribute to the document's title.) Some screen readers replace the contents of the title attribute with the contents of the enclosed document's <title>. It's safest and most accessible to provide the same title in both places.\n\nMake sure that your headings have non-empty text content, and are not hidden, such as with CSS display:none or aria-hidden=true. Users of screen readers rely on headings to understand the structure and content of a document.\n\nAlso, be sure you are using heading elements only for actual section headings, and not as a shortcut way to make text stand out. Screen reader users typically \"skim\" a page's headings, much like sighted users; non-heading text that is marked-up with heading elements can cause confusion.\n\nMake sure that <iframe> elements have a title attribute to describe the contents of the frame. Without a title, users of assistive technologies have to navigate into the frame in order to understand what it contains, which can be difficult and confusing.\n\nAs a best practice, also provide a <title> for the document that is enclosed in the frame, with content identical to the frame's title attribute. (This assumes that the enclosed document is under your control; if not, try to match the frame's title attribute to the document's title.) Some screen readers replace the contents of the title attribute with the contents of the enclosed document's <title>. It's safest and most accessible to provide the same title in both places.\n\nIf you define more than one toolbar in a web application using the ARIA toolbar role, you must use the aria-label attribute to label each one so that it can be described by assistive technology. It is a good practice to label a toolbar, even if there is only one per page."
    }
}