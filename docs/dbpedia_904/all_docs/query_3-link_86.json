{
    "id": "dbpedia_904_3",
    "rank": 86,
    "data": {
        "url": "https://stackoverflow.com/questions/28906487/fatal-error-class-phpmailer-not-found",
        "read_more_link": "",
        "language": "en",
        "title": "Fatal error: Class 'PHPMailer' not found",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://cdn.sstatic.net/Img/teams/teams-promo.svg?v=e507948b81bf",
            "https://i.sstatic.net/tBx7Q.jpg?s=64",
            "https://www.gravatar.com/avatar/a3488ac45b71c2f0829a84d1f93a1d75?s=64&d=identicon&r=PG",
            "https://lh6.googleusercontent.com/-cJ6Eebg0s2E/AAAAAAAAAAI/AAAAAAAAAFw/XEozXNj7QY8/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/71bdc573a9bbb05ac777ce20ad36b229?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/vJmMwxo7.jpg?s=64",
            "https://i.sstatic.net/Om5Xt.jpg?s=64",
            "https://i.sstatic.net/uw6bl.jpg?s=64",
            "https://i.sstatic.net/ILq5W.png?s=64",
            "https://i.sstatic.net/RCKhV.jpg?s=64",
            "https://graph.facebook.com/10208373587136584/picture?type=large",
            "https://www.gravatar.com/avatar/5f01291cbf613ad9406d94032c502848?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/KC1SK.jpg?s=64",
            "https://lh6.googleusercontent.com/-INvyEhQlRV8/AAAAAAAAAAI/AAAAAAAAAdE/70dQzTDiPuY/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/d224931479d37358a38a448a54eb6be8?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://graph.facebook.com/10211815955056849/picture?type=large",
            "https://stackoverflow.com/posts/28906487/ivc/a37c?prg=d9409097-3c33-43c4-949f-592e7ff84eae"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2015-03-06T19:48:41",
        "summary": "",
        "meta_description": "I tried :include_once('C:\\Inetpub\\wwwroot\\php\\PHPMailer\\PHPMailerAutoload.php');\r\n  Fatal error: Class 'PHPMailer' not found in C:\\Inetpub\\wwwroot\\php\\index.php on line 151\r\nI place the PHPMailerAu...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/28906487/fatal-error-class-phpmailer-not-found",
        "text": "This answers in an extension to what avs099 has given above, for those who are still having problems:\n\n1.Makesure that you have php_openssl.dll installed(else find it online and install it);\n\n2.Go to your php.ini; find extension=php_openssl.dll enable it/uncomment\n\n3.Go to github and downland the latetest version :6.0 at this time.\n\n4.Extract the master copy into the path that works better for you(I recommend the same directory as the calling file)\n\nNow copy this code into your foo-mailer.php and render it with your gmail stmp authentications.\n\nrequire(\"/PHPMailer-master/src/PHPMailer.php\"); require(\"/PHPMailer-master/src/SMTP.php\"); require(\"/PHPMailer-master/src/Exception.php\"); $mail = new PHPMailer\\PHPMailer\\PHPMailer(); $mail->IsSMTP(); $mail->CharSet=\"UTF-8\"; $mail->Host = \"smtp.gmail.com\"; $mail->SMTPDebug = 1; $mail->Port = 465 ; //465 or 587 $mail->SMTPSecure = 'ssl'; $mail->SMTPAuth = true; $mail->IsHTML(true); //Authentication $mail->Username = \"[email protected]\"; $mail->Password = \"*******\"; //Set Params $mail->SetFrom(\"[email protected]\"); $mail->AddAddress(\"[email protected]\"); $mail->Subject = \"Test\"; $mail->Body = \"hello\"; if(!$mail->Send()) { echo \"Mailer Error: \" . $mail->ErrorInfo; } else { echo \"Message has been sent\"; }\n\nDisclaimer:The original owner of the code above is avs099 with just my little input.\n\nTake note of the additional:\n\na) (PHPMailer\\PHPMailer) namespace:needed for name conflict resolution.\n\nb) The (require(\"/PHPMailer-master/src/Exception.php\");):It was missing in avs099's code thus the problem encountered by aProgger,you need that line to tell the mailer class where the Exception class is located.\n\nAs of 2021-07, and PHPMailer 6.5.0, without composer you need to do your includes in the following order:\n\n$rdir = str_replace(\"\\\\\", \"/\", __DIR__); //Root Dir require $rdir.'/PHPMailer/src/Exception.php'; require $rdir.'/PHPMailer/src/PHPMailer.php'; require $rdir.'/PHPMailer/src/SMTP.php'; use PHPMailer\\PHPMailer\\PHPMailer; use PHPMailer\\PHPMailer\\SMTP; use PHPMailer\\PHPMailer\\Exception;\n\nYou may need to tweak based on your directory structure.\n\nThe rest of the code works as expected.\n\n$mail = new PHPMailer(true); try { //Server settings $mail->SMTPDebug = SMTP::DEBUG_SERVER; //Enable verbose debug output $mail->isSMTP(); //Send using SMTP $mail->Host = 'smtp.yourserver.com'; //Set the SMTP server to send through $mail->SMTPAuth = true; //Enable SMTP authentication $mail->Username = '[email protected]'; //SMTP username $mail->Password = 'password'; //SMTP password $mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS; //Enable implicit TLS encryption $mail->Port = 465; //TCP port to connect to; use 587 if you have set `SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS` //Recipients $mail->setFrom('[email protected]'); $mail->addAddress('[email protected]', 'Joe User'); //Add a recipient $mail->addAddress('[email protected]', 'Joe Doe'); //Name is optional $mail->addAddress('[email protected]', 'Optional Name'); //Name is optional $mail->addReplyTo('[email protected]', 'Information'); $mail->addCC('[email protected]'); $mail->addBCC('[email protected]'); //Attachments $mail->addAttachment('/var/tmp/file.tar.gz'); //Add attachments $mail->addAttachment('/tmp/image.jpg', 'new.jpg'); //Optional name //Content $mail->isHTML(true); //Set email format to HTML $mail->Subject = 'Here is the subject'; $mail->Body = 'This is the HTML message body <b>in bold!</b>'; $mail->AltBody = 'This is the body in plain text for non-HTML mail clients'; $mail->send(); echo 'Message has been sent'; } catch (Exception $e) { echo \"Message could not be sent. Mailer Error: {$mail->ErrorInfo}\"; }\n\nI suggest you look into getting composer. https://getcomposer.org Composer makes getting third-party libraries a LOT easier and using a single autoloader for all of them. It also standardizes on where all your dependencies are located, along with some automatization capabilities.\n\nDownload https://getcomposer.org/composer.phar to C:\\Inetpub\\wwwroot\\php\n\nDelete your C:\\Inetpub\\wwwroot\\php\\PHPMailer\\ directory.\n\nUse composer.phar to get the phpmailer package using the command line to execute\n\ncd C:\\Inetpub\\wwwroot\\php php composer.phar require phpmailer/phpmailer\n\nAfter it is finished it will create a C:\\Inetpub\\wwwroot\\php\\vendor directory along with all of the phpmailer files and generate an autoloader.\n\nNext in your main project configuration file you need to include the autoload file.\n\nrequire_once 'C:\\Inetpub\\wwwroot\\php\\vendor\\autoload.php';\n\nThe vendor\\autoload.php will include the information for you to use $mail = new \\PHPMailer;\n\nAdditional information on the PHPMailer package can be found at https://packagist.org/packages/phpmailer/phpmailer\n\nI was with the same problem except with a slight difference, the version of PHPMailer 6.0, by the good friend avs099 I know that the new version of PHPMailer since February 2018 does not support the autoload, and had a serious problem to instantiate the libraries with the namespace in MVC, I leave the code for those who need it.\n\n//Controller protected function getLibraryWNS($libreria) { $rutaLibreria = ROOT . 'libs' . DS . $libreria . '.php'; if(is_readable($rutaLibreria)){ require_once $rutaLibreria; echo $rutaLibreria . '<br/>'; } else{ throw new Exception('Error de libreria'); } } //loginController public function enviarEmail($email, $nombre, $asunto, $cuerpo){ //Import the PHPMailer class into the global namespace $this->getLibraryWNS('PHPMailer'); $this->getLibraryWNS('SMTP'); //Create a new PHPMailer instance $mail = new \\PHPMailer\\PHPMailer\\PHPMailer(); //Tell PHPMailer to use SMTP $mail->isSMTP(); //Enable SMTP debugging // $mail->SMTPDebug = 0; // 0 = off (for production use), 1 = client messages, 2 = client and server messages Godaddy POR CONFIRMAR $mail->SMTPDebug = 1; // debugging: 1 = errors and messages, 2 = messages only //Whether to use SMTP authentication $mail->SMTPAuth = true; // authentication enabled //Set the encryption system to use - ssl (deprecated) or tls $mail->SMTPSecure = 'ssl'; //Seguridad Correo Gmail //Set the hostname of the mail server $mail->Host = \"smtp.gmail.com\"; //Host Correo Gmail //Set the SMTP port number - 587 for authenticated TLS, a.k.a. RFC4409 SMTP submission $mail->Port = 465; //587; //Verifica si el servidor acepta envios en HTML $mail->IsHTML(true); //Username to use for SMTP authentication - use full email address for gmail $mail->Username = '[email protected]'; //Password to use for SMTP authentication $mail->Password = 'tucontraseña'; //Set who the message is to be sent from $mail->setFrom('[email protected]','Creador de Páginas Web'); $mail->Subject = $asunto; $mail->Body = $cuerpo; //Set who the message is to be sent to $mail->addAddress($email, $nombre); //Send the message, check for errors if(!$mail->Send()) { echo \"Mailer Error: \" . $mail->ErrorInfo; return false; } else { echo \"Message has been sent\"; return true; }"
    }
}