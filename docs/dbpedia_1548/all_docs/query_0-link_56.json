{
    "id": "dbpedia_1548_0",
    "rank": 56,
    "data": {
        "url": "https://github.com/cloudwego/hertz",
        "read_more_link": "",
        "language": "en",
        "title": "cloudwego/hertz: Go HTTP framework with high",
        "top_image": "https://opengraph.githubassets.com/22f78001a3f7359b72ef69039af44afdfbf8c842b669641921297ba772bd4c02/cloudwego/hertz",
        "meta_img": "https://opengraph.githubassets.com/22f78001a3f7359b72ef69039af44afdfbf8c842b669641921297ba772bd4c02/cloudwego/hertz",
        "images": [
            "https://camo.githubusercontent.com/de452a1be5623b55c1804ba6e9e7a09cde9ea09c78ba28a3805d2128e5138649/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f636c6f75647765676f2f686572747a",
            "https://camo.githubusercontent.com/856fb930c107de5c2becfec1626ef844a5bdb986c8af049c3873e625e82fb1aa/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f75705f6d6573736167653d636c6f75647765676f2675726c3d68747470732533412532462532467777772e636c6f75647765676f2e696f253246",
            "https://camo.githubusercontent.com/f1b696fa3827bdb4e4fef0f62ce1b2c15270723384aa555a95586728b6ca2211/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f636c6f75647765676f2f686572747a",
            "https://camo.githubusercontent.com/023c08b7361b2674c8f0709e7789d7ca947110609e0a083b0d5f7c2fd2bb3aa5/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f636c6f75647765676f2f686572747a",
            "https://camo.githubusercontent.com/1a5b7784da0765c3bc8f0837f9be6a90adcd6628995e8fefe0da286793af5dc1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f636c6f75647765676f2f686572747a",
            "https://camo.githubusercontent.com/ebb25e811dcfb5e6a9aa9ba2e06d4c74901690e39b2fbf8fb9bb5e634b238dac/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f636c6f75647765676f2f686572747a",
            "https://camo.githubusercontent.com/f54d3df697b6a3a28f622452cc59c479a2fd9df7275b3e7d45e507d26057f9ca/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f636c6f75647765676f2f686572747a",
            "https://camo.githubusercontent.com/9ae11ea0957fb4aabb93bdc98ed2e99e3f6247f059d082103ecd4d9c2bf9288e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f636c6f75647765676f2f686572747a",
            "https://github.com/cloudwego/hertz/raw/develop/images/performance-4.png",
            "https://github.com/cloudwego/hertz/raw/develop/images/performance-3.png",
            "https://github.com/cloudwego/hertz/raw/develop/images/lark_group.png",
            "https://camo.githubusercontent.com/5a2492221e1b06ab2a8890d934305c7bbed1f5f2d4e29c547c116fea47bca0bc/68747470733a2f2f636f6e747269622e726f636b732f696d6167653f7265706f3d636c6f75647765676f2f686572747a",
            "https://camo.githubusercontent.com/fa972bf6f5d17c89e8cea97f77b127dcacb078cb3345a5367d3135118e33740b/68747470733a2f2f6c616e6473636170652e636e63662e696f2f696d616765732f636e63662d6c616e6473636170652d686f72697a6f6e74616c2d636f6c6f722e737667",
            "https://camo.githubusercontent.com/dba4b1999321d18dbda3176fea04261ea05701461a152991d08d71e1cf221fbf/68747470733a2f2f7777772e636e63662e696f2f77702d636f6e74656e742f75706c6f6164732f323032332f30342f636e63662d6d61696e2d736974652d6c6f676f2e737667",
            "https://avatars.githubusercontent.com/u/113436801?s=64&v=4",
            "https://avatars.githubusercontent.com/u/25625830?s=64&v=4",
            "https://avatars.githubusercontent.com/u/113436801?s=64&v=4",
            "https://avatars.githubusercontent.com/u/105070202?s=64&v=4",
            "https://avatars.githubusercontent.com/u/57974043?s=64&v=4",
            "https://avatars.githubusercontent.com/u/25177775?s=64&v=4",
            "https://avatars.githubusercontent.com/u/105070202?s=64&v=4",
            "https://avatars.githubusercontent.com/u/56347255?s=64&v=4",
            "https://avatars.githubusercontent.com/u/97507466?s=64&v=4",
            "https://avatars.githubusercontent.com/u/9826697?s=64&v=4",
            "https://avatars.githubusercontent.com/u/97824201?s=64&v=4",
            "https://avatars.githubusercontent.com/u/37136584?s=64&v=4",
            "https://avatars.githubusercontent.com/u/90381261?s=64&v=4",
            "https://avatars.githubusercontent.com/u/18114624?s=64&v=4",
            "https://avatars.githubusercontent.com/u/92938836?s=64&v=4",
            "https://avatars.githubusercontent.com/u/65756378?s=64&v=4",
            "https://avatars.githubusercontent.com/u/70408571?s=64&v=4",
            "https://avatars.githubusercontent.com/u/11827916?s=64&v=4",
            "https://avatars.githubusercontent.com/u/87760338?s=64&v=4",
            "https://avatars.githubusercontent.com/u/45022150?s=64&v=4",
            "https://avatars.githubusercontent.com/u/16001996?s=64&v=4",
            "https://avatars.githubusercontent.com/u/17381902?s=64&v=4"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Go HTTP framework with high-performance and strong-extensibility for building micro-services. - cloudwego/hertz",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/cloudwego/hertz",
        "text": "English | 中文\n\nHertz [həːts] is a high-usability, high-performance and high-extensibility Golang HTTP framework that helps developers build microservices. It was designed with reference to other open-source frameworks like fasthttp, gin, echo and combined with the internal requirements in ByteDance. At present, it has been widely used inside ByteDance. Nowadays, more and more microservices use Golang. If you have requirements for microservice performance and hope that the framework can fully meet the internal customizable requirements, Hertz will be a good choice.\n\nHigh usability\n\nDuring the development process, it is often more important to write the correct code quickly. Therefore, in the iterative process of Hertz, we actively listen to users' opinions and continue to polish the framework, hoping to provide users with a better user experience and help users write correct code faster.\n\nHigh performance\n\nHertz uses the self-developed high-performance network library Netpoll by default. In some special scenarios, compared to Go Net, Hertz has certain advantages in QPS and time delay. For performance data, please refer to the Echo data in the figure below.\n\nComparison of four frameworks: Comparison of three frameworks: For detailed performance data, please refer to hertz-benchmark.\n\nHigh extensibility\n\nHertz adopts a layered design, providing more interfaces and default extension implementations. Users can also extend by themselves. At the same time, thanks to the layered design of the framework, the extensibility of the framework will be much greater. At present, only stable capabilities are open-sourced to the community. More planning refers to RoadMap.\n\nMulti-protocol support\n\nThe Hertz framework provides HTTP/1.1, HTTP/2, HTTP/3, ALPN protocol support natively. In addition, due to the layered design, Hertz even supports custom build protocol resolution logic to meet any needs of protocol layer extensions.\n\nNetwork layer switching capability\n\nHertz implements the function to switch between Netpoll and Go Net on demand. Users can choose the appropriate network library for different scenarios. And Hertz also supports the extension of network library in the form of plug-ins.\n\nThe Hertz-Examples repository provides code out of the box. more\n\nContains introduction and use of general middleware, context selection, data binding, data rendering, direct access, logging, error handling. more\n\nContains instrumentation, logging, tracing, monitoring, OpenTelemetry integration. more\n\nContains service registration and discovery extensions, Sentinel integration. more\n\nContains network library extensions. more\n\nApidoc, framework configurable items list. more\n\nFrequently Asked Questions. more\n\nPerformance testing can only provide a relative reference. In production, there are many factors that can affect actual performance. We provide the hertz-benchmark project to track and compare the performance of Hertz and other frameworks in different situations for reference.\n\nRelated Projects\n\nNetpoll: A high-performance network library. Hertz integrated by default.\n\nHertz-contrib: A partial extension library of Hertz, which users can integrate into Hertz through options according to their needs.\n\nExample: Use examples of Hertz.\n\nExtensions Description Autotls Make Hertz support Let's Encrypt. Http2 HTTP2 support for Hertz. Websocket Enable Hertz to support the Websocket protocol. Etag Support ETag (or entity tag) HTTP response header for Hertz. Limiter Provides a current limiter based on the bbr algorithm. Monitor-prometheus Provides service monitoring based on Prometheus. Obs-opentelemetry Hertz's Opentelemetry extension that supports Metric, Logger, Tracing and works out of the box. Opensergo The Opensergo extension. Pprof Extension for Hertz integration with Pprof. Registry Provides service registry and discovery functions. So far, the supported service discovery extensions are nacos, consul, etcd, eureka, polaris, servicecomb, zookeeper, redis. Sentry Sentry extension provides some unified interfaces to help users perform real-time error monitoring. Tracer Link tracing based on Opentracing. Basicauth Basicauth middleware can provide HTTP basic authentication. Jwt Jwt extension. Keyauth Provides token-based authentication. Requestid Add request id in response. Sessions Session middleware with multi-state store support. Casbin Supports various access control models by Casbin. Cors Provides cross-domain resource sharing support. Csrf Csrf middleware is used to prevent cross-site request forgery attacks. Secure Secure middleware with multiple configuration items. Gzip A Gzip extension with multiple options. I18n Helps translate Hertz programs into multi programming languages. Lark Use hertz handle Lark/Feishu card message and event callback. Loadbalance Provides load balancing algorithms for Hertz. Logger Logger extension for Hertz, which provides support for zap, logrus, zerologs logging frameworks. Recovery Recovery middleware for Hertz. Reverseproxy Implement a reverse proxy. Swagger Automatically generate RESTful API documentation with Swagger 2.0. Cache Hertz middleware for cache HTTP response with multi-backend support\n\nByteDance Practice on Go Network Library\n\nUltra-large-scale Enterprise-level Microservice HTTP Framework — Hertz is Officially Open Source!\n\nByteDance Open Source Go HTTP Framework Hertz Design Practice\n\nHelp ByteDance Reduce Costs and Increase Efficiency, the Design Practice for Large-scale Enterprise-level HTTP Framework Hertz\n\nA Practical Introduction to the HTTP Framework Hertz: A Guide to Performance Testing\n\nContributing\n\nHertz RoadMap\n\nHertz is distributed under the Apache License, version 2.0. The licenses of third party dependencies of Hertz are explained here.\n\nEmail: conduct@cloudwego.io\n\nHow to become a member: COMMUNITY MEMBERSHIP\n\nIssues: Issues\n\nSlack: Join our CloudWeGo community Slack Channel.\n\nLark: Scan the QR code below with Lark to join our CloudWeGo/hertz user group.\n\nThank you for your contribution to Hertz!"
    }
}