{
    "id": "dbpedia_1548_0",
    "rank": 82,
    "data": {
        "url": "https://www.cloudwego.io/docs/hertz/tutorials/toolkit/usage-thrift/",
        "read_more_link": "",
        "language": "en",
        "title": "hz usage(thrift)",
        "top_image": "https://www.cloudwego.io/favicons/favicon-16x16.png",
        "meta_img": "https://www.cloudwego.io/favicons/favicon-16x16.png",
        "images": [
            "https://www.cloudwego.io/img/logo.png",
            "https://www.cloudwego.io/webfonts/lark.svg",
            "https://www.cloudwego.io/webfonts/x-twitter.svg",
            "https://images.ctfassets.net/e5382hct74si/78Olo8EZRdUlcDUFQvnzG7/fa4cdb6dc04c40fceac194134788a0e2/1618983297-powered-by-vercel.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-02-21T00:00:00+00:00",
        "summary": "",
        "meta_description": "A leading practice for building enterprise cloud native middleware!",
        "meta_lang": "en",
        "meta_favicon": "/favicons/favicon.ico",
        "meta_site_name": "CloudWeGo",
        "canonical_link": "https://www.cloudwego.io/docs/hertz/tutorials/toolkit/usage-thrift/",
        "text": "// handler path: biz/handler/hello/example/hello_service.go // where \"hello/example\" is the namespace of thrift IDL // \"hello_service.go\" is the name of the service in the thrift IDL, all methods defined by the service will be generated in this file // HelloMethod . // @router /hello [GET] func HelloMethod(ctx context.Context, c *app.RequestContext) { var err error var req example.HelloReq err = c.BindAndValidate(&req) if err != nil { c.String(400, err.Error()) return } resp := new(example.HelloResp) // You can modify the logic of the entire function, not just the current template resp.RespBody = \"hello,\" + req.Name // added logic c.JSON(200, resp) }\n\n// idl/hello.thrift namespacegohello.examplestructHelloReq{1:stringName (api.query=\"name\");}structHelloResp{1:stringRespBody;}structOtherReq{1:stringOther (api.body=\"other\");}structOtherResp{1:stringResp;}serviceHelloService{HelloRespHelloMethod(1:HelloReqrequest)(api.get=\"/hello\");OtherRespOtherMethod(1:OtherReqrequest)(api.post=\"/other\");}serviceNewService{HelloRespNewMethod(1:HelloReqrequest)(api.get=\"/new\");}"
    }
}