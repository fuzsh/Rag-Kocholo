{
    "id": "dbpedia_110_1",
    "rank": 52,
    "data": {
        "url": "https://support.appsflyer.com/hc/en-us/articles/208874366-OneLink-links-and-experiences",
        "read_more_link": "",
        "language": "en",
        "title": "OneLink links and experiences",
        "top_image": "https://support.appsflyer.com/hc/theming_assets/01HZPNZP0PMVE38595JDM76KVW",
        "meta_img": "https://support.appsflyer.com/hc/theming_assets/01HZPNZP0PMVE38595JDM76KVW",
        "images": [
            "https://support.appsflyer.com/hc/theming_assets/01HZPNZNS1V0MAK6X9REHJWNXH",
            "https://support.appsflyer.com/hc/theming_assets/01HZPNZP0PMVE38595JDM76KVW",
            "https://support.appsflyer.com/hc/article_attachments/360010357778",
            "https://support.appsflyer.com/hc/article_attachments/360009665718",
            "https://support.appsflyer.com/hc/article_attachments/360009563357",
            "https://support.appsflyer.com/hc/article_attachments/10007734732433",
            "https://support.appsflyer.com/hc/theming_assets/01HZPNZR5QA08YMWYSJBR9K5PJ"
        ],
        "movies": [
            "https://www.youtube.com/embed/KZBrxGEjVUE"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-08-06T09:24:33+00:00",
        "summary": "",
        "meta_description": "At a glance: Create OneLink links that give users exactly the experience you want them to have. Users who click the link are redirected...",
        "meta_lang": "en",
        "meta_favicon": "/hc/theming_assets/01HZPNZP4YBHRKZTJAX88HNM6W",
        "meta_site_name": "Help Center",
        "canonical_link": "https://support.appsflyer.com/hc/en-us/articles/208874366-OneLink-links-and-experiences",
        "text": "At a glance: Create OneLink links that give users exactly the experience you want them to have. Users who click the link are redirected to the correct app store, web URL, or into the app as needed. And users are attributed to the correct media source.\n\nOneLink links and experiences\n\nYour customers interact with your brand across many different online and offline touchpoints. No matter where your users come from, you can create a link that provides the perfect experience for them, from click, to app install, to deep linking to deferred deep linking.\n\nThe steps required to set up a link are described in detail in the section that follows, but basically, they include the following:\n\nSelecting a user experience\n\nGeneral settings\n\nExperience-specific settings\n\nDeep linking and redirections settings\n\nAdditional parameter settings\n\nCreate a OneLink link\n\nWho's involved\n\nOnly a marketer is required to create OneLink links with an experience that redirects users to app stores, web URL, or, once the template is set up to open the app with Android App Links and iOS Universal Links, into the home page of the app.\n\nTo add deep linking and deferred deep linking functionality to links, both a marketer and Android/iOS developers are required.\n\nPrerequisites\n\nAn AppsFlyer account with at least one app.\n\nA OneLink template on which to base your links.\n\nFor attribution: The AppsFlyer SDK already installed in each of your mobile apps.\n\nIf the SDK is not yet installed in your apps, it is still possible to create a working redirection link, but it will not be possible to measure installs in your dashboard, deep link, or deferred deep link.\n\nTime required\n\n30 minutes for most links, but approximately 3 hours for links that require deep linking or deferred deep linking functionality.\n\nOutcome\n\nA link that sends users to the correct app store, web page, or into the app based on their device, and gives them exactly the experience you want them to have.\n\nTo create a OneLink link with a specific user experience:\n\nIn AppsFlyer, from the side menu, select Engage > OneLink management.\n\nSelect the OneLink template to add a custom link for.\n\nClick Add link.\n\nSelect the experience you want to create for your users.\n\nSelect a media source or enter a custom media source. This is the media source under which data displays in AppsFlyer. The media source is included in your link as the pid parameter value.\n\nClick Next.\n\nComplete General settings.\n\nClick Next.\n\n[Optional] Complete the procedures relevant to the user experience you're creating:\n\nExperience Procedure options\n\nSocial-to-app\n\nText-to-app\n\nReferral to app\n\nCustom link\n\nSocial media preview\n\nSocial app landing page\n\nEmail-to-app\n\nIf you're using an ESP, follow the ESP integration instructions.\n\nApp-to-app\n\nYou can create dynamic links that work across multiple apps via cross-promotion.\n\nReferral-to-app\n\nSocial media preview\n\nSocial app landing page\n\nYou can dynamically create referral-to-app links via the SDK in your app via user invite integration.\n\nClick Next.\n\n[Optional] In Deep linking and redirection, complete deep linking/deferred deep linking setup. Skip this section if this link isnâ€™t intended for deep linking.\n\n[Optional] In Deep linking and redirection, change the redirection settings. Skip this section if the redirection settings from the OneLink template are correct.\n\nClick Next.\n\nIn Additional parameters, add predefined or custom parameters to your link for more granular analysis. Learn more about attribution parameters\n\nClick Generate link.\n\nExperiences\n\nYou can create links for the following user experiences:\n\nSocial-to-app: Engage your users on social media and send them from social media posts to your app.\n\nApp-to-app: Send users to your app via ads that they see in other apps.\n\nQR-to-app: Use QR codes to drive app installs by having users scan a QR code at key points during their offline customer experience. You can also put QR codes on your desktop site, or on TV and CTV ads to route users to your app.\n\nEmail-to-app: Use email service providers (ESPs) to engage users via email and send them from their inbox to your app.\n\nText-to-app: Create links for your SMS and messaging campaigns and engage users via texts messages.\n\nReferral-to-app: Create user invite links that allow users or influencers to invite others to your app or share specific in-app content, for example, an article.\n\nCustom link: For user journeys that don't fit one of the experiences mentioned above, you can create a OneLink custom link. Then, no matter where your users come from, whether via desktop or mobile, online or offline, owned or paid media, you can easily send them to the right place.\n\nGeneral settings\n\nGeneral settings is a section of the OneLink link creation process that applies to all experiences.\n\nTo complete the general settings:\n\n[Optional] Change the media source name.\n\n[Optional] Change the campaign name.\n\n[Optional] Turn on Retargeting if you plan to use this link to target existing users.\n\nThis enables you to see the re-engagements performed by users clicking on your custom link.\n\nExisting users that click on non-retargeting links (UA) also launch the app, and have the same user experience. However, their re-engagements are recorded as regular sessions, which means it's impossible to measure the success of the owned media campaign.\n\nImportant! For retargeting to work, you also need to enable retargeting for the app.\n\n[Optional] Turn on Ignore active users for retargeting and select the inactivity window.\n\nThis adds the parameter af_inactivity_window=[number of days] to your link, and all users active during the period are ignored for retargeting.\n\nSet the re-engagement window to determine the time period following the re-engagement, where the user's in-app events are attributed to the retargeting media source.\n\nYou can set the value in days (1-90), hours (up to 23), or even lifetime.\n\nThe re-engagement window is added to the link in the af_reengagement_window parameter.\n\n[Optional] In the Link branding subsection:\n\nSelect a different domain to reflect your brand. Learn more\n\nEdit the URL ID to highlight the campaign offering. The URL ID must be maximum 50 characters and can be a combination of letters and numbers. By default, it is 8 characters.\n\nEnable retargeting for the app\n\nIf Retargeting was never enabled for the app, you need to do it once. Learn more\n\nTo set Retargeting at the app level:\n\nIn AppsFlyer, from the side menu, select Settings > App Settings.\n\nIn the Attribution section, enable Re-engagement attribution.\n\nClick Save settings.\n\nSocial media preview - OG tags\n\nWhen a link is shared, open graph (OG) tags are used to generate a preview with a title, description, and image.\n\nThese OG tags may automatically be taken from the web URL or app store you are redirecting to. However, sometimes this method of generating a preview fails. Therefore, we recommend setting your social media previews in OneLink, either using the OneLink UI, or, for links not created in the OneLink UI, by adding OG tag parameters to your link.\n\nThe Social media preview feature is supported by the following platforms:\n\nFacebook: posts and DMs\n\nX (formerly Twitter): posts and DMs\n\niMessage\n\nWhatsApp\n\nLinkedIn: posts and DMs\n\nLine\n\nTelegram\n\nSlack\n\nSignal\n\nKakaoTalk\n\nDiscord\n\nReddit\n\nTo create your own social media preview in the OneLink UI:\n\nIn your OneLink custom link editor, go to the Share on social media section.\n\nIn the Social media preview section, enter a:\n\nTitle\n\nDescription\n\nImage URL\n\nTo add OG tag parameters to your link (if it was not created in the OneLink UI):\n\nAdd the following required parameters:\n\naf_og_title (up to 40 characters)\n\naf_og_description (up to 300 characters)\n\naf_og_image\n\nNote:\n\nYou can add the OG tag parameters to your link outside the AppsFlyer UI.\n\nIf you add separate OG tags for X (formerly Twitter), they will override the regular AppsFlyer preview.\n\nSocial app landing page\n\nImportant!\n\niOS Universal Links are now supported in Meta ads.\n\nAs Meta now supports universal links, a social app landing page is no longer required for Meta paid ads that support universal links.\n\nA social app landing page is needed for owned posts (non paid ads).\n\nSocial media apps may break the smooth experience of existing users using Universal Links. This can be overcome by:\n\n[Recommended] Creating a social app landing page.\n\nWhen creating a social media app landing page, we recommend making sure you have a URI scheme configured.\n\n[Alternative] Forcing the app to open using the af_force_deeplink=true parameter.\n\nNote: This parameter is automatically enabled for Kakaotalk, Naver, Naver-Blog, Chrome, Weibo, and X (formerly Twitter).\n\nWith a social app landing page, users who click ads in social media apps are redirected to an AppsFlyer-generated landing page. From there, they can be deep linked, or continue to install the app.\n\nAppsFlyer provides a variety of social app landing page templates. Element positions in the templates are fixed, but the elements themselves are customizable, including background image or color, titles, texts, images, buttons, tags, and more.\n\nThe social app landing page can be used with the following social media apps:\n\nInstagram\n\nFacebook/Facebook Messenger (Note: For Facebook and Facebook Messenger, if both URI scheme and a Social app landing page are set up, the Social app landing page doesn't display.)\n\nLinkedIn\n\nPinterest for iOS\n\nSnapchat\n\nX (formerly Twitter)\n\nWeChat\n\nUser experience\n\nWhen the user engages with the CTA button in the landing page:\n\nIf app is installed: the clicking user launches the app.\n\nIf app is NOT installed: the user is taken to the relevant app store. Upon install, it's possible to defer deep linking the user (explained in deep linking and deferred deep linking).\n\nNote\n\nThe social app landing page only supports OneLink short URL.\n\nTo use the social app landing page:\n\nConfigure the landing page as described in the following section.\n\nRecord the generated OneLink short URL.\n\nThe social app landing page does not work with long OneLink URLs.\n\nPost the OneLink short URL on the social app.\n\nAttribution is determined based on your attribution settings.\n\nTo set up the Social apps landing page:\n\nIn your Custom link setup, go to the Share on social media section.\n\nIn the Social app landing page section, click Create landing page.\n\nA window to choose a landing page template opens.\n\nTo choose a landing page template, hover over the selected template and click Create.\n\nTip: Hover over the ðŸ›ˆ icon of a template to see in which cases it should be used. Clustered Poster and ShowAndTell are recommended for Instagram.\n\nCustomize all the elements in the landing page creative. To do so, select elements by name or click on them on the preview image.\n\nTip: Save your texts in case you replace the creative template.\n\nReplace all template images with your own images.\n\nEnter image URLs including the extension, for example, https://example.com/image.png.\n\nUse one of the following file types: jpeg, jpg, png.\n\nNote: webp format isn't supported.\n\nThe recommendations for the images are:\n\nTemplate image type Maximum image file size Image ratio Collection 300 KB 16:9 (horizontal)\n\nTrapeze\n\nCarousel\n\nShowAndTell\n\n300 KB 1:1\n\nFlyer\n\nPoster\n\nBlurry poster\n\nClustered poster\n\n300 KB 9:16 (vertical)\n\nIf one or more of the images isn't an exact URL, an error will display, and you will not be able to review the creative.\n\nTo review the landing page creative, click Review.\n\nIf changes are needed, click Back to editor.\n\nTo save your landing page, click Done.\n\nImportant: New/updated landing page creatives only apply after generating/updating the custom link.\n\n[Optional] To edit your landing page, click Edit social app landing page.\n\nDeep linking and deferred deep linking\n\nDeep linking means you retarget your existing app users and send them directly into a specific experience (for example, a specific page) within your app, without being directed to the app store or app home page first. These users are attributed using retargeting attribution.\n\nDeferred deep linking means you give new users a similar deep linking experience as existing users. But their user flow is that first, new users are sent to the app store, and after they download and launch the app, they are sent to the specific experience or page.\n\nNote: Setting up deep linking and deferred deep linking requires your Android and iOS developers.\n\nTo set up deep linking and deferred deep linking to direct users to a specific experience in the app:\n\nContact your iOS and Android developers to plan the deep_link_value to set on your links.\n\nThe deep_link_value is the value name for the specific in-app content that users will be directed to. The developers implement the desired behavior of the deep_link_value in the code.\n\nThe developers implement the desired behavior in the code. Share the guide so they understand the technical flow and see examples:\n\nFor deep linking AND deferred deep linking new or existing users, with or without your app.\n\nConsiderations for UDL:\n\nRequires SDK V6.1 or later.\n\nClick lookback window can be up to 15 minutes.\n\nNote: Customers already using OneLink for deep linking may be using the legacy methods for Android and iOS, instead of UDL.\n\nTips\n\nThe deep_link_value can be based on a product SKU, social media post ID, URL path, or any other value.\n\nIt is important to work with your developers to come up with the best long-term system for the deep_link_value and any other parameters or values. This will minimize additional app updates. Speak to your developer about the use of dynamic values, to generate many different deep links that go to different content within the app, without needing to change the app code every time.\n\nFor example, the deep_link_value of a fruit type was chosen and the developers made the values dynamic. This means you can enter any fruit without the need for further work by your dev team.\n\nhttps://onelink-sample-app.onelink.me/H5hv?pid=Email&c=fruit_of_the_month&deep_link_value=apples...\n\nhttps://onelink-sample-app.onelink.me/H5hv?pid=Email&c=fruit_of_the_month&deep_link_value=bananas...\n\nhttps://onelink-sample-app.onelink.me/H5hv?pid=Email&c=fruit_of_the_month&deep_link_value=peaches...\n\nAfter receiving confirmation from the developers that the app behaves according to the selected parameters and values, in the Deep linking and redirection section of the link setup page, enter the Deep link value according to what you decided with the developers.\n\n[Optional] If your deep linking requires more than one in-app experience (for example, you want to direct users to a product, and separately offer them a discount), you can add an Additional deep link value (that uses the parameter deep_link_sub1) to the deep linking data payload. You can add further deep link parameters (deep_link_sub2-10) in the Additional parameters section.\n\nContact your iOS and Android developers to plan the values.\n\nThe developers implement the desired behavior in the code. Share the OneLink guides with your developers to understand the technical flow and see examples.\n\nIn the Additional parameters section, add custom parameters deep_link_sub2-10 and values as required, according to what you decided with the developers.\n\nNote\n\nOnce parameters and dynamic values are implemented by the developers, the marketer can use OneLink API to automatically generate thousands of custom links. Learn more\n\nRedirection\n\nTo send new users to a landing page, instead of to the app store:\n\nIn the Deep linking and redirection section of the link setup page, under When app isn't installed, select to send users to a different URL.\n\nThe custom Android and iOS URLs redirect new users to the landing page you specify.\n\nNote! If your OneLink template already has a set value for a custom URL, these custom link URLs override it.\n\nYou can also send new users to custom store product pages.\n\nAdditional parameters\n\nYou may want to add additional parameters to your link, such as Campaign, Ad set name, Ad name, Channel, your own custom parameters, or 1-5 subscriber parameters. This enables a more granular analysis of your marketing efforts. Read more about additional attribution parameters.\n\nYou can also add additional deep linking parameters (deep_link_sub2-10).\n\nTo add parameters:\n\nIn the Additional parameters section of the link setup, click Add parameter.\n\nSelect the parameter to add or enter a custom parameter.\n\nTesting\n\nYou can test whether your link works to redirect:\n\nNew users without your app installed\n\nExisting users with your app installed\n\nNew users without your app installed\n\nPrerequisites: A registered test device without the app.\n\nTo test your link:\n\nIn AppsFlyer, from the side menu, select Engage > OneLink Custom Links.\n\nHover over the Actions icon of the link you want to test and click Get URL.\n\nSend the short or long URL to your phone. You can either:\n\nScan the QR code with your phone camera or QR scanner app.\n\nEmail or WhatsApp yourself the link, and open it on your phone.\n\nNote: Do not paste into iOS notes, or directly into a mobile browser. Often, the mobile operating system intentionally will not open the app in this context.\n\nClick the link on your mobile device.\n\nDepending on your platform, it should take you to the app store or landing page.\n\nNote: A real click on a mobile device is needed. Javascript or 301/302 redirects can't trigger Universal Links and Android App Links. Even basic redirections fail with these methods on some browsers.\n\nDownload and launch the app.\n\nThe app should open to its home screen.\n\nIf you implemented deferred deep linking, the app should open to the content you specified in the link parameters.\n\nIn the AppsFlyer Overview dashboard look for a new install.\n\nLook for a new click and install under media source (e.g. test) and the campaign name you put in the URL.\n\nLink not working as expected? Check out the OneLink FAQ and troubleshooting guide.\n\nExisting users with your app installed\n\nPrerequisites: An Android and/or iOS device with the app installed. Make sure it is the app source and version where the developer(s) made changes (and implemented Universal Links, App Links, and/or URI schemes).\n\nTo test your link:\n\nIn AppsFlyer, from the side menu, select Engage > OneLink Management.\n\nClick the selected OneLink template.\n\nFrom the list, select the Custom link.\n\nHover over the Actions icon of the link you want to test and click Get URL.\n\nSend the short or long URL to your phone. You can either:\n\nScan the QR code with your phone camera or QR scanner app.\n\nEmail or WhatsApp yourself the link, and open it on your phone.\n\nNote: Do not paste into iOS notes, or directly into a mobile browser. Often, the mobile operating system intentionally will not open the app in this context.\n\nClick the link on your mobile device.\n\nThe app should open to its home screen.\n\nIf you implemented deep linking, the app should open to the content you specified in the link parameters.\n\nGo to the AppsFlyer Retargeting dashboard.\n\nLook for a new click/re-engagement (app open) under your link's media source (e.g. test) and the campaign name you put in the URL.\n\nLink not working as expected? Check out the OneLink FAQ and troubleshooting guide.\n\nAdditional procedures\n\nCreate a custom impression URL\n\nCustom impression links enable you to:\n\nMeasure the impressions to clicks conversion rates of the ads you display.\n\nReceive attribution for impressions.\n\nPrerequisites: A working OneLink long URL. Short URLs are not supported.\n\nWho is involved:\n\nMarketer and web developer\n\nTo create impression URLs for measuring impressions only:\n\nIn AppsFlyer, from the side menu, select Engage > OneLink Management.\n\nHover over the Options menu, of the link you want to test and click Get URL.\n\nCopy the OneLink long URL for editing.\n\nExample: https://subdomain.onelink.me/j7rN?pid=email&c=Spring\n\nReplace the subdomain (or the entire Branded Domain, if you're using one) with 'impressions'. Example: https://impressions.onelink.me/j7rN?pid=email&c=Spring\n\nCopy the impression URL and send it to your developer.\n\nInstruct your web developer to implement the impression URL in the website logic.\n\nNow you have an impression URL, that can be used to count impressions on your website pages but can't attribute new installs. For view-through attribution, follow the next steps.\n\nTo use impression URLs for attribution:\n\nPrepare the impression URL as described in the earlier steps.\n\nMake sure view-through attribution is turned on.\n\n[Optional] If you wish to change the default 1-day view-through lookback window value, add the af_viewthrough_lookback parameter with the new value. For example, af_viewthrough_lookback=1d.\n\nCopy the impression URL and send it to your developer.\n\nInstruct your web developer to implement the impression URL in the website logic.\n\nFull impression URL example:\n\nhttps://impressions.onelink.me/j7rN?pid=email&c=Spring&af_viewthrough_lookback=1d\n\nDeep linking post-event\n\nYou may want to deep link users into specific activities or pages only after an event, for example:\n\nLogging in\n\nViewing a splash screen\n\nConsenting to terms and conditions\n\nAnd more\n\nTo deep link users after an event:\n\nAsk your developers to follow their instructions for deep linking users post-event for Android and iOS.\n\nDeferred deep linking with iOS Private Relay\n\nWith the launch of iOS 15, Apple provides iCloud+ users with a feature called Private Relay, which gives them the option to encrypt their web-browsing traffic and hide their exact location, IP address, and the contents of their browsing traffic. If users opt-in to Private Relay, this could interfere with attribution and deferred deep linking. Meaning, once a new user without the app goes to the App Store, and installs and launches the app, Private Relay could prevent them from being sent to a specific page in the app.\n\nTo ensure that deferred deep linking (DDL) continues to work as expected, you need to implement one of the following AppsFlyer solutions:\n\n[Recommended] App Clip-based solution: Create an App Clip that gives you user attribution data, and directs users to a customized App Clip experience similar to the one you want DDL to achieve. The app clip can also include a flow to direct users from your App Clip to your full app.\n\nClipboard-based solution: Create a web landing page that copies the deferred deep linking data from the URL and correctly redirects the user to the app. Note: This solution does not help with attribution.\n\nApp Clip-based solution\n\nThis solution combines OneLink short URLs with the App Clips technology available on iOS, and allows you to send users to specific flows in your product without the need to install the full app. The OneLink short URL gives you user attribution data, and directs users to a customized App Clip experience similar to the one you want DDL to achieve. The app clip can also include a flow to direct users from your App Clip to your full app. Note: If users reinstall the full app from the App Clip-based solution, it may be reported in AppsFlyer as an organic install.\n\nFlow\n\nThe flow of the App Clip-based DDL solution is as follows:\n\nThe advertiser creates an App Clip and adds it to a OneLink template for users with Private Relay turned on.\n\nThe user taps the OneLink URL.\n\nAppsFlyer web handler checks whether the:\n\nDevice is using iOS 15+\n\nBrowser is Safari\n\nUser has Private Relay turned on.\n\nOnce AppsFlyer confirms the above, and the user is prompted to either click Play App Clip or View in Safari.\n\nIf the user clicks Play App Clip, an App Clip card displays to the user.\n\nIf the user clicks View in Safari, a landing page opens, prompting them to open the App Clip.\n\nThe user opens the App Clip.\n\nThe App Clip opens and provides the user with the experience decided by the app marketer and developer.\n\nIf the App Clip includes a flow to direct users to the full app, the users are sent to the App Store to download the full app. Upon app launch, they get the user experience defined by the developer.\n\nPrerequisites: AppsFlyer SDK V6.4.0+\n\nTo set up the App Clip-based DDL solution:\n\nTell the developer to follow the App Clip-based solution dev hub instructions. and create an App Clip that provides the desired user experience. This can also include a flow to direct users from your App Clip to your full app.\n\nCreate or edit a OneLink template with Universal Links and deferred deep linking.\n\nIn the OneLink template, turn on Display App Clip if user has Private Relay. Don't turn this on unless you have an App Clip.\n\nNote: When making changes to a OneLink template with Universal Links, such as adding (or removing) App Clip capability, it may take several hours for the AASA file to update. Therefore, the links you create based on the template may not have the updated functionality right away.\n\nCreate a custom link based on the OneLink template.\n\nIn App Store Connect, go to the App Clip Experience section, scroll down to App URLs, and enter either your OneLink template URL (domain + template ID. For example: yourbrand.onelink.me/GrbZ), or a specific OneLink custom link short URL.\n\nNote: If you enter a OneLink custom link, the App Clip-based solution will only work for users tapping that specific link; other links created based off the OneLink template will not work.\n\nClipboard-based solution\n\nFlow\n\nThe flow of the clipboard-based DDL solution is as follows:\n\nThe advertiser creates a deferred deep link that contains the parameter af_cp_lp=true.\n\nThe user taps the deferred deep link.\n\nAppsFlyer checks whether the:\n\nDevice is using iOS 15+\n\nBrowser is Safari\n\nUser has Private Relay turned on.\n\nLink contains the parameter af_cp_lp=true.\n\nOnce AppsFlyer confirms the above, the web landing page loads, containing the app icon, image, and a CTA to get the app from the App Store. The user also sees a message that explains the process: that the URL is copied to ensure the best user experience that will send them to the specific page in the app.\n\nThe user taps Get the app.\n\nThe user is sent to the App Store to install the app. Then, at first launch, they are sent to the specific app page.\n\nRequirements\n\nThe copy/paste landing page DDL solution requires:\n\nThe user to be browsing the web on Safari.\n\nThe deferred deep link to include the af_cp_lp=true parameter.\n\nAppsFlyer iOS SDK V6+.\n\nYour iOS app developer to implement code that pastes the deferred deep link data in the URL from the clipboard. This is not part of the AppsFlyer SDK.\n\nThe end-user to keep the checkbox ticked (default). If it is unchecked, the URL is not copied and deferred deep linking doesn't work.\n\nSetup\n\nTo set up the clipboard-based DDL solution:\n\nTell your iOS developer to:\n\nFollow the dev hub instructions and integrate the required code in the AppsFlyer SDK.\n\nImplement code that pastes the deferred deep link data in the URL from the clipboard. This is not part of the AppsFlyer SDK.\n\nAdd the af_cp_lp=true parameter to your links.\n\nYou can do so by adding a custom parameter in the AppsFlyer OneLink custom link UI or simply append the parameter to any of your links.\n\nAdditional information\n\nExamples\n\nBasic example\n\nMark is the marketer of a successful grocery delivery service called \"Feed Me.\" Mark targets his user-base phone numbers to download Feed Me's new mobile iOS and Android apps. An SMS campaign is planned. However, Mark doesn't know which users have Android or iOS devices. He also doesn't know whether or not they have the app installed.\n\nTo solve this, Mark sends users an SMS containing a short URL powered by OneLink. When users receive the SMS and click the link:\n\nIf they donâ€™t have the app yet, it automatically directs them to the appropriate app store or landing page, where it's easy for them to install the app.\n\nIf they already have the app installed, the app opens for them.\n\nThe new installs and re-engagements are attributed to the SMS campaign, enabling Mark to check the success of the SMS campaign in AppsFlyer.\n\nDeep linking example\n\nMark the marketer's SMS (from the previous example) had mild success in getting users to download and open the app. However, not many users who clicked the link and opened the app converted to place an order.\n\nMark decides to increase conversion by offering a free bag of peaches, apples, or avocados with every purchase. For this, Mark creates a smooth, deep-linking experience for existing users. He sends his user base a detailed email stressing the benefits of these 3 healthy fruits.\n\nFor each fruit mentioned in the email, Mark includes a link with a deep link value powered by OneLink, configured (with the help of mobile developers) to:\n\nTo solve this, Mark sends users an SMS containing a short URL powered by OneLink. When users receive the SMS and click the link:\n\nIf they already have the app installed, they are taken straight to the relevant fruit page.\n\nIf they donâ€™t have the app yet, they are directed to the appropriate app store or landing page, based on their device. And then, once they download and open the app, they are taken straight to the fruit page.\n\nTraits and limitations\n\nTrait Remarks OneLink characters\n\nTotal URL length must not exceed 2000 characters\n\nLink name and media source: must not exceed 150 characters\n\nThe following special characters are not allowed in OneLink parameters or values: ;, *, !, @, #, ?, $, ^, :, &, ~, `, =, +, â€™, >, <, /, {, }, %\n\nThe () special character is not allowed in Android, iOS, and web redirection parameters\n\nShort URL ID must not exceed 50 characters\n\nMaximum links The maximum number of OneLink links you can create in AppsFlyer is 120,000 per account. Posting OneLink URLs in web pages Using target=\"_blank\" in the HTML href tag does not result in redirection to Google Play or App Store. If the OneLink URL is placed inside an html a tag with the target=\"_blank\" attribute, it opens a blank page in Chrome on Android and iOS. This affects OneLink functionality. Make sure that the a tag doesn't include the target attribute. Agencies\n\nAgencies can't use OneLink templates or links. They're for custom/owned media sources only.\n\nAd networks\n\nAgencies can't use OneLink templates or links. They're for custom/owned media sources only.\n\nSocial media preview image\n\nIf the image type is not supported by the social media platform, it doesn't display.\n\nFor WhatsApp, the image can't exceed 300 KB.\n\nDesktop When you set the OneLink URL or template to redirect desktop users to a different URL, the web URL is added to the link in the af_web_dp parameter. When the link contains af_web_dp, AppsFlyer does not register a click when it comes from a desktop. af_enc_data\n\nNot supported in impression URLs.\n\nAndroid social apps WebView\n\nDue to recent changes in various Android social apps, the deep linking redirection flow in the internal browser view (WebView) was broken.\n\nTo accommodate the changes and re-enable deep linking and redirection, we had to introduce additional user interaction for the following Android social apps:\n\nFacebook versions above v420\n\nInstagram\n\nFacebook Messenger\n\nSnapchat\n\nThe new user flow requires users of the above apps to click on an additional landing page button to trigger the redirection to the Google Play Store and other third-party stores.\n\nThis button is added automatically, requiring no action from the advertiser.\n\nNotes:\n\nFacebook versions 420 and below work as before, with no additional user interaction.\n\nApp Links in Facebook posts work as before with no additional user interaction.\n\nApp Links in Instagram chat work as before with no additional user interaction.\n\nIn deep linking flow, when the app is not installed, there is a known limitation: an error pop-up message. This message does not affect the flow; the user is still redirected to the store as expected.\n\nOneLink link previews\n\nDescription\n\nOneLink link previews sometimes fail to display correctly on Facebook and LinkedIn. The issue arises when the destination website does not recognize the AppsFlyerBot-Previewer/1.0 user-agent string in the preview request as coming from a robot (or crawler). In such cases, the website fails to respond with the appropriate OG-tagged preview content.\n\nSolution\n\nYou can configure your landing page to treat pages with the AppsFlyerBot-Previewer/1.0 user-agent header string as coming from a robot by updating your website robot.txt file.\n\nAndroid Naver Blog app Deep linking is not supported on Android Naver Blog app. Users will be taken to Google Play or to the web redirection as defined on the link. Chrome browser on iOS Due to a change in Chrome iOS, whenever a user clicks a URI scheme link in Chrome on iOS, a pop-up is displayed, prompting users to confirm opening the app or redirecting to the App Store."
    }
}