{
    "id": "dbpedia_6513_3",
    "rank": 91,
    "data": {
        "url": "https://discussions.unity.com/t/torque-dead/431598",
        "read_more_link": "",
        "language": "en",
        "title": "Torque DEAD...??",
        "top_image": "https://europe1.discourse-cdn.com/unity/original/3X/a/a/aaeab82727497b6f37f4312dcd57be21e6cd25e8.png",
        "meta_img": "https://europe1.discourse-cdn.com/unity/original/3X/a/a/aaeab82727497b6f37f4312dcd57be21e6cd25e8.png",
        "images": [
            "https://emoji.discourse-cdn.com/google/slight_smile.png?v=12",
            "https://emoji.discourse-cdn.com/google/slight_smile.png?v=12",
            "https://emoji.discourse-cdn.com/google/slight_smile.png?v=12",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/zumwalt/48/128785_2.png",
            "https://emoji.discourse-cdn.com/google/slight_smile.png?v=12",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/zumwalt/48/128785_2.png",
            "https://emoji.discourse-cdn.com/google/slight_smile.png?v=12",
            "https://emoji.discourse-cdn.com/google/slight_smile.png?v=12",
            "https://emoji.discourse-cdn.com/google/slight_smile.png?v=12",
            "https://emoji.discourse-cdn.com/google/slight_smile.png?v=12",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/quietus2/48/444325_2.png",
            "https://emoji.discourse-cdn.com/google/slight_smile.png?v=12"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-12-20T20:11:34+00:00",
        "summary": "",
        "meta_description": "http://www.torquepowered.com/community/blogs/view/20495 \nOk, so blow me away, Unity successfully killed Torque in less than 5 years, why don’t you guys buy them? \nThey got good peeps and good ideas, just very bad managem&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://europe1.discourse-cdn.com/unity/optimized/3X/5/d/5d3b1bfc21f0dea8ce3730e22d85cbf4072b7c02_2_32x32.png",
        "meta_site_name": "Unity Discussions",
        "canonical_link": "https://discussions.unity.com/t/torque-dead/431598",
        "text": "Right, Instant Action killed Torque\n\nUnity and Torque are not even in the same field (anyone indicating something else has not understood at least one of the two if not both).\n\nTorque is higher end, but has some strong focus on shooter. Also it requires expert programmers or months of time to understand the source code, cause scripting is basically useless for anything but UI\n\nUnity on the other end is some middleground, running like 3-4 years behind “now” when it comes to the technical support and quality of standard functionality (renderer, multithreading, real plugin interface not just a “call out” system, …) but on the other end very productive and rather easy to get in.\n\nUnity makes up for its technical weakness by targeting more platforms.\n\nthat being said though, torque has been on the x360 for years (through T360, not TorqueX just to be clear ;)) while unity is still working its way there\n\nI kind of feel that Torque killed itself.\n\nIt felt somewhat two faced. It’s supposed to make coding and game making much easier, all the while giving you a gigantic block of complex, buggy, undocumented code. Either you are new, and will not understand or be able to unravel their code base, or you are skilled/knowledgable enough to get it all working, in which case you probably don’t have as much use for an indie focused third party engine. You can either roll your own from parts like Ogre and Bullet, or you are with a larger company and can afford a bigger, more extensive engine.\n\nWhen using it I felt a large reliance on the C++ side, which was poorly documented and a giant pile of years and years worth of coding. I think that hurt it significantly. A 3rd party, indie focused engine that is not designed to be accessible by new and unskilled programmers is going to leave it with a small target market.\n\nUnity’s scripting is a good example of a way to hide and obscure the complexities of the engine for beginners, you don’t have to know all that’s going on under the hood, just that something is going on.\n\nyea, been working on my PHD so I have not even been to their site or seen the threads in gossip, how I overlooked it until today is beyond me, have had more important stuff to do in life than to wait on them to fix the Torque2D for iPhone or Torque3D for iPhone along with the new T2D/T3D engines which look and feel awesome in general, I know the two companies and products are different but somewhere in the back of my mind I thought this whole instant action thing was going to yield something other than oblivion\n\nYeah some of the Torque 2D was quite well documented. It had a full scripting Doc, although some parts were still being filled in when I used it.\n\nThe iPhone scripting was quite slow, but there were workarounds and it was reparable.\n\nThe Torque3D code was a bit of a hairy mess. Something that could work fine in an internal engine where the guy who made it works a few desks down, so I have someone to talk to constantly and can learn a lot easily, but when given such a massive C++ project with such minimal documentation it was incredibly difficult to really start making functional objects and handling the different update and networking calls to properly move objects smoothly. It just wasn’t accessible, and it doesn’t matter how powerful and optimized it is if it can’t be properly used.\n\nThat being said I made some a really neat 3D Laser effect and Flamethrower weapon, after doing about a month and a half of research into how to make a custom weapon class. It was just too difficult to learn and start creating that it didn’t really have a good market that wanted that sort of product.\n\nThe T3D code actually is pretty well structured compared to how TGE is (and as such TGB in most parts)\n\nAnd thats likely also where most skilled Torque 3D programmers came from, TGE and TGEA\n\nAlso people tend to forget what Torque original was and to large part is up to today: The engine behind Tribes 2\n\nAlso independent of all bad stuff: up to today there is only 1 networking system that can compete with Torque networking and thats quake. Anything else is weaker.\n\nTribes 2 is even up to today the only shooter who ever had 256 players on a single map and that back in 56k days already (in comparision, the BF creators claim that its impossible to do even 64player maps due to the traffic and that although they have 50 to 100 times the bandwidth available at least )\n\nAgreed, now if I can just figure out how to get the TGE networking piece independent of the game engine so I can merge it into my Unity projects for giggles. I guess it is simply time for me to go back and makes sure I have the most recent versions of the 3 pages of software I own from them. I did like TGEA, was an early adopter of everything Torque although I am sorely disappointed that the people who made the MMO kit never gave me my download link, but that is not GG’s fault. The amusement from reading all of the forums will be sorely missed when they go, if they haven’t already, haven’t even tried yet today.\n\nThe iT2D beat Unity to the iPhone with a pure 2D engine for the iPhone, very cool, now the real question will be how they will handle the licensing for those who own the Torque series of products??\n\nFrom what I remember, Torque’s networking was just a highly selective delta compressed stream, using a bitvector to determine what actually gets sent. Not really that fancy.\n\nWhile it worked well, it did require a convoluted bit of top-down code, flipping bits dirty here and there as needed with a matched parsing on the other side. A far cry from ‘Add a netview and stuff is synched automagically.’\n\nThe beauty of it, was that it worked on 28.8k and 56k modems for hundreds of players, sure, automagically is cool, always will be, but fat is fat That is sort of like saying that Linux running on a 1mb floppy is not as powerful as Windows that takes up 4 gig just to boot. Torque had some VERY creative developers who were allowed to think outside of the box and they understood assembly language and how things worked for slow networks and slow computers. Unfortunately that skill is near to extinct with todays computers having so much ram and hard drive along with gigabit networks.\n\nCertainly. I wonder what would be faster though, stuffing the netcode in a plugin (with horrible recompiling ever 2 minutes as you work on it) or doing the necessary bitvector work in C# or Unityscript.\n\nOh without a doubt that’s true Zumwalt. I remember starting in the mid 90’s, when a “computer professional” changed from a skilled midrange or mainframe operator/programmer to, “Insert CD, click next->next->finish”\n\nThere’s not too many end-users around either, who could stomach fighting with HIMEM.SYS configs in an attempt to free up that last 3k of memory so Doom would run!\n\nComputers have become an appliance as Steve Jobs wanted, and people are downright spoiled!\n\nDoom!!! You obviously never tried to make 11th hour run (in color)! The DOS loader had to be in a specific order, AND dos had to load high…\n\nI’m starting to blame higher education for some of the things I’m seeing with younger developers. I’ve had kids with their masters struggle with Thread execution. The schools are teaching using the same massive bloat-ware IDEs that they use in the work world. Now, don’t get me wrong, i’d rather point my wizard at a wsdl and automagic my Web Service or client (or both). But d*mn it all, you should know wizards produce LCD code, and have some idea what makes it work!\n\nI will say that development today isn’t what it was, any network coding requires a much broader understanding of other technologies than the “good old days”. What gets me is when young people pay big dollars for education, only to graduate and have neither breath nor depth. Professors in any computer related field, can’t simply attend their manditory 2 seminars a year and expect to teach people what they need to know.\n\nBack on topic, I chose Unity over Torque in '07 simply because I knew I’d bury myself in code and compiler optomization rather than focus on making games. That and this community The torque community (at the time at least) was much more in line with other “game engine” communities, with snide “RTFC” responses to new comer questions, and some community members that seemed to devote their life to hammering anyone who dared to ask any but the most arcane questions. Forum moderation goes a long way (may HiggyB’s sanity RIP ).\n\nCheers,\n\nGalen"
    }
}