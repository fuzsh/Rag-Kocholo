{
    "id": "dbpedia_8742_0",
    "rank": 59,
    "data": {
        "url": "https://docs.contao.org/dev/reference/dca/fields/",
        "read_more_link": "",
        "language": "en",
        "title": "Fields :: Contao Developer Documentation",
        "top_image": "https://docs.contao.org/dev/images/favicon.png",
        "meta_img": "https://docs.contao.org/dev/images/favicon.png",
        "images": [
            "https://docs.contao.org/dev/reference/dca/images/help-wizard.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Definition of table columns.",
        "meta_lang": "en",
        "meta_favicon": "https://docs.contao.org/dev/images/favicon.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Fields\n\nThe fields key of the DCA defines the columns of a table. Depending on these settings, the Contao core engine decides which type of form field to load, whether a user is allowed to access a certain field and whether a field can be used as sort or filter criteria.\n\nExample\n\nReference\n\nKeyValueDescriptionlabel&$GLOBALS['TL_LANG'] (array)Field label. Typically a reference to the global language array. Needs to be an array containing two elements: the field’s label and its description.1defaultDefault value (mixed)Default value that is set when a new record is created.excludetrue/false (bool)If true the field will be excluded for non-admins. It can be enabled in the user group module (allowed excluded fields).toggletrue/false (bool)since 4.13 If true the field can be used to trigger the toggle action.searchtrue/false (bool)If true the field will be included in the search menu (see “sorting records” -> “panelLayout”).sortingtrue/false (bool)If true the field will be included in the sorting menu (see “sorting records” -> “panelLayout”).filtertrue/false (bool)If true the field will be included in the filter menu (see “sorting records” -> “panelLayout”).flagSorting mode (integer)1 Sort by initial letter ascending\n\n2 Sort by initial letter descending\n\n3 Sort by initial X letters ascending (see length)\n\n4 Sort by initial X letters descending (see length)\n\n5 Sort by day ascending\n\n6 Sort by day descending\n\n7 Sort by month ascending\n\n8 Sort by month descending\n\n9 Sort by year ascending\n\n10 Sort by year descending\n\n11 Sort ascending\n\n12 Sort descending\n\nNote: flags 5 through 10 will also enable formatting of timestamps in the back end when used as a label somewhere.lengthSorting length (integer)Allows to specify the number of characters that are used to build sorting groups (flag 3 and 4).inputTypeField type (string)checkbox Checkbox\n\ncheckboxWizard Checkbox Wizard\n\nchmod CHMOD table\n\nfileTree File tree\n\nimageSize Two text fields with drop-down menu (creates an Image Size Array)\n\ninputUnit Text field with small unit drop-down menu\n\nkeyValueWizard Key » Value wizard\n\nlistWizard List wizard\n\nmetaWizard Used for setting meta information in the file manager\n\nmoduleWizard Module wizard\n\noptionWizard Option wizard\n\npageTree Page tree\n\npassword Password field\n\npicker General purpose picker\n\nradio Radio button\n\nradioTable Table with images and radio buttons\n\nsectionWizard Used for defining sections in the page layout\n\nselect Drop-down menu\n\nserpPreview Search Engine Result Preview (SERP) widget\n\ntableWizard Table wizard\n\ntext Text field\n\ntextStore Text field that will not display its current value\n\ntextarea Textarea\n\ntimePeriod Text field with drop-down menu\n\ntrbl Four text fields with a small unit drop-down menuoptionsOptions (array)Options of a drop-down menu or radio button menu.\n\nSpecify as ['opt1', 'opt2', 'opt3'] or ['value1' => 'label1', 'value2' => 'label2'].\n\nSpecial case ambiguous numerical value/index: [0 => 'label1', 1 => 'label2'] or ['0' => 'label1', '1' => 'label2']: If option values are integers and starting with 0, the label will also be used as value. Use the eval option isAssociative to prevent this.options_callbackCallback function (array)Callback function that returns an array of options. Please specify as ['Class', 'Method'].foreignKeytable.field (string)Get options from a database table. Returns ID as key and the field you specify as value. The field can be a complete SQL expression, e.g.: tl_member.CONCAT(firstname,' ',lastname)reference&$GLOBALS['TL_LANG'] (array)Array that holds the options labels. Typically a reference to the global language array.explanationArray key (string)Array key that holds the explanation. This is a reference to the XPL category of the explain translation domain. See more information below.input_field_callbackCallback function (array)Executes a custom function instead of using the default input field routine and passes the the DataContainer object and the label as arguments.evalField configuration (array)Various configuration options. See next paragraph.wizardCallback functions (array)Call a custom function and add its return value to the input field. Please specify each callback as ['Class', 'Method'].sqlDatabase field definition (string or array)Describes data type and its database configuration. (see paragraph SQL Column Definition).relationConfiguration of relations (array)Describes relation to parent table (see paragraph Relations).load_callbackCallback functions (array)These functions will be called when the field is loaded. Please specify each callback function as ['Class', 'Method']. Passes the field’s value and the data container as arguments. Expects the field value as return value.save_callbackCallback functions (array)These functions will be called when the field is saved. Please specify each callback function as ['Class', 'Method']. Passes the field’s value and the data container as arguments. Expects the field value as return value. Throw an exception to display an error message.xlabelCallback functions (array)These functions will be called when the widget is rendered and allows you to add additional html after the field label. Please specify each callback function as ['Class', 'Method'].\n\nExplanation\n\nExplanations are used together with the helpwizard eval setting. The latter will show the help wizard icon and the help wizard itself will show the explanation. explanation is a configuration value holding a simple string. It is a reference to the $GLOBALS['TL_LANG']['XPL'] translation array, i.e. a reference into the XPL category of the explain translation domain.\n\nThe explanation itself can be defined in two ways: either as a single string:\n\nor as a multi dimensonal array representing an explanation table:\n\nEvaluation\n\nThe evaluation array (eval) configures a particular field in detail. You can e.g. create mandatory fields, add a date picker or define the rows and columns of a textarea. You can also modify the field appearance or enable data encryption. Each field can be validated against a regular expression.\n\nKeyValueDescriptionaddWizardClasstrue/false (bool)Whether or not to add the wizard CSS class for the widget if a wizard icon is in use. Default: true. Note: this setting does not exist anymore in Contao 4.12 and up.allowHtmltrue/false (bool)If true the current field will accept HTML input (see “Allowed HTML tags” in the back end System => Settings).alwaysSavetrue/false (bool)If true the field will always be saved, even if its value has not changed. This can be useful in conjunction with a load_callback.basicEntitiestrue/false (bool)since 5.0 If true converts basic entities like &shy;, &amp; etc. back to their Contao representation [&], [-] etc. when editing and vice versa when saving.blankOptionLabelLabel (string)Label for the blank option (defaults to -).chosentrue/false (bool)Native selects enhanced with Chosen.collapseUncheckedGroupstrue/false (bool)since 4.13 If true all option groups without at least one checked option will be collapsed. The first group of options will not be collapsed if there are no options selected at all. Applies to checkbox widgets with a nested array of options only.colorpickertrue/false (bool)If true the current field will have a mooRainbow color picker.colsColumns (integer)Number of columns (used for textarea, radioTable and tableWizard fields).csvDelimiter (string)The choice of this field will not be stored as serialized string but rather as given delimiter-separated list. Example: 'eval' => ['csv'=>',']customRgxpRegular expression (string)since 4.11 Custom regular expression to be used when using 'rgxp' => 'custom'customTplFilename (string)Use own template for this input field 'customTpl' => 'template-file-name'datepickertrue/false (bool)If true the current field will have a MooTools-DatePicker.dcaPickertrue/false (bool)If true the general purpose picker will be shown. Allows to pick different records from the system and return them as an insert tag.decodeEntitiestrue/false (bool)If true HTML entities will be decoded. Note that HTML entities are always decoded if allowHtml is true.disabledtrue/false (bool)Disables the field (not supported by all field types).doNotCopytrue/false (bool)If true the current field will not be duplicated if the record is duplicated.doNotSaveEmptytrue/false (bool)If true the field will not be saved if it is empty.doNotShowtrue/false (bool)If true the current field will not be shown in “edit all” or “show details” mode.doNotTrimtrue/false (bool)If true the whitespace of the input of this field will not be trimmed before saving.encrypttrue/false (bool)If true the field value will be stored encrypted.extensionsFile extensions (string)Limits the file tree to certain file types (comma separated list). Applies to file trees only.fallbacktrue/false (bool)If true the field can only be assigned once per table.feEditabletrue/false (bool)If true the current field can be edited in the front end. Applies to table tl_member only.feGroupGroup name (string)personal personal data\n\naddress address details\n\ncontact contact details\n\nlogin login details (table tl_member only)\n\nYou can also define your own groups.fieldTypeInput field type (string)checkbox allow multiple selections\n\nradio allow a single selection only Applies to file and page trees only.filestrue/false (bool)If true files and folders will be shown. If false, only folders will be shown. Applies to file trees only.filesOnlytrue/false (bool)Removes the radio buttons or checkboxes next to folders. Applies to file trees only.findInSettrue/false (bool)Sort by the actual option values instead of their labels.helpwizardtrue/false (bool)If true the helpwizard icon will appear next to the field label.hideInputtrue/false (bool)If true the field value will be hidden (it is still visible in the page source though!).includeBlankOptiontrue/false (bool)If true a blank option will be added to the options array. Applies to drop-down menus only.isAssociativetrue/false (boolean)Indicates that an array of options is indeed an associative array. Example of an ambiguous array of options: ['0' => 'Zero', '1' => 'One'].isBooleantrue/false (bool)Indicates that a particular field is boolean.isGallerytrue/false (bool)Displays selected files of a fileTree widget as an image gallery.isHexColortrue/false (bool)Defines the input as being a color definition in Hex notation. Invalid characters will automatically be removed.isSortabletrue/false (bool)since 4.10 Enable sorting for the selected items. Applies to file trees and pickers.mandatorytrue/false (bool)If true the field cannot be empty.maxlengthMaximum length (integer)Maximum number of characters that is allowed in the current field.maxvalMaximum value (integer)Maximum number value to be checked (upper bound).metaFieldsmetaWizard fields (array)Defines the available fields for the metaWizard input type.minlengthMinimum length (integer)Minimum number of characters that have to be entered.minvalMinimum value (integer)Minimum number value to be checked (lower bound).multipletrue/false (bool)Make the input field multiple. Applies to text fields, select menus, radio buttons and checkboxes. Required for the checkbox wizard.nospacetrue/false (bool)If true whitespace characters will not be allowed.orderFieldOrder column (string)Database column where the order of the selected items gets stored. This is only required if isGallery or isDownloads is set. Applies to file trees only.pathPath (string)Custom root directory for file trees. Applies to file trees only.placeholderPlaceholder (string)Displays a placeholder for the respective field.preserveTagstrue/false (bool)If true no HTML tags will be removed at all.readonlytrue/false (bool)Makes the field read only (not supported by all field types).rgxpRegular expression (string)Limits the user input to certain rules (see paragraph Regular Expressions).rowsRows (integer)Number of rows (used for textarea and tableWizard fields).rteRich text editor file (string)ace or tinyMCE for example. For ace you can also define the type, e.g. ace|js or ace|php. Note: allowHtml and decodeEntities is automatically enabled if rte equals to ace|html or if it starts with tiny.sizeSize (integer)Size of a multiple select menu or number of input fields.spaceToUnderscoretrue/false (bool)If true any whitespace character will be replaced by an underscore.styleStyle attributes (string)Style attributes (e.g. border:2px).submitOnChangetrue/false (bool)If true the form will be submitted when the field value changes.tl_classCSS class(es) (string)Add the given CSS class(es) to the generated HTML. See section Arranging Fields for supported values.trailingSlashtrue/false (bool)If true a trailing slash will be added to the field value. If false, an existing trailing slash will be removed from the field value.uniquetrue/false (bool)If true the field value cannot be saved if it exists already.uploadFolderPath (string)The target path for file uploads of the upload widget.useRawRequestDatatrue/false (bool)If true the raw request data from the Symfony request is used. Warning: input filtering is bypassed! Make sure the data is never output anywhere in the back end unescaped which it would if you added the field to a regular back end list view for example.versionizetrue/false (bool)If false skip this field in the versioning. Default true.\n\nRegular Expressions\n\nRegular expressions (rgxp) requires the input of a field to match a pre-defined format. A lot of useful formats are shipped with Contao, but additional formats can be registered using a hook.\n\nKeyDescriptiondigitallows numeric characters only (including full stop [.] and minus [-])naturalallows non-negative natural numbers (including 0)alphaallows alphabetic characters only (including full stop [.] minus [-] and space [ ])alnumallows alphanumeric characters only (including full stop [.] minus [-], underscore [_] and space [ ])extnddisallows #<>()\\\\=dateexpects a valid datetimeexpects a valid timedatimexpects a valid date and timefriendlyexpects a valid “friendly name format” e-mail address (Lorem Ipsum <foobar@example.com> or Lorem Ipsum [foobar@example.com])emailexpects a valid e-mail addressemailsexpects a valid list of valid e-mail addressesurlexpects a valid URLaliasexpects a valid aliasfolderaliasexpects a valid folder URL aliasphoneexpects a valid phone number (numeric characters, space [ ], plus [+], minus [-], parentheses [()] and slash [/])prcntallows numbers between 0 and 100localeexpects a valid locale (e.g. “de_CH”)languageexpects a valid language code (e.g. “de-CH”)\n\nMeta Wizard Fields\n\nWhen using the metaWizard input type, as it is used in tl_files within the Contao core for example, the available fields can be defined through the metaFields key in the eval definition of the field. This definition is an associative array, where the key is the key of the meta field and its value will be used for additional attributes of the text input field.\n\nFor example, this is the definition of the tl_files.meta field from the Contao core:\n\nEach meta field is always a simple text input, which can be expanded with additional HTML attributes. In this case, all the meta fields get the attribute maxlength=\"255\".\n\nIf you want to add an additional meta field to the file manager of Contao, you could do it like this:\n\nThis will insert the new meta field, however it will have no label in the back end, as its translation is still missing. The translation key for these meta fields consists of the name of the field, grouped and prefixed by MSC.aw_. So for this new field the translation definition could look like this:\n\nRelations\n\nRelations describe, how database fields are related to other tables. Define the referenced table in the foreignKey key. Relations provide model classes to load referenced data sets efficiently and developer friendly. (see \\Contao\\Model::getRelated()).\n\nKeyValueDescriptionloadLoad behaviour (string)lazy Loading referenced records only when necessary (default, saves RAM)\n\neager Loading referenced records automatically (saves database calls)tableRelation table (string)A database table for this relation. Optional, by default Contao tries to extract it from the foreignKey attribute.fieldRelation table field (string)Override the default relation field (id). Useful for relation with tl_files.uuid for example.\n\nSQL Column Definition\n\nSince Contao 3.0, the database definition is added using the sql key as a string to each DCA field, e.g. varchar(255) NOT NULL default ''. Starting from Contao 4.3, one can use Doctrine Schema Representation to take full advantage of the Doctrine Database Abstraction Layer.\n\nExamples:"
    }
}