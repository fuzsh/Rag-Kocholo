{
    "id": "dbpedia_8742_0",
    "rank": 80,
    "data": {
        "url": "https://docs.contao.org/dev/framework/hooks/",
        "read_more_link": "",
        "language": "en",
        "title": "Hooks :: Contao Developer Documentation",
        "top_image": "https://docs.contao.org/dev/images/favicon.png",
        "meta_img": "https://docs.contao.org/dev/images/favicon.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Extending front end and back end functionality.",
        "meta_lang": "en",
        "meta_favicon": "https://docs.contao.org/dev/images/favicon.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Hooks\n\nHooks are entry points into the Contao core (and some of its extension bundles). Have a look at the hook reference for a list of all available hooks. You can register your own callable logic that will be executed as soon as a certain point in the execution flow of the core will be reached. Consider the following example.\n\nThe hook activateAccount will be executed as soon as a user account is activated and all the callable functions registered to the particular hook are called in order of addition.\n\nIn order to be compatible with the method execution you need to consider the parameters that will be passed to your function.\n\nIn this case an instance of Contao\\MemberModel and an instance of Contao\\ModuleRegistration will be passed as arguments to the hook.\n\nSome hooks require its listener to return a specific value, that will be passed along. For example the compileFormFields needs you to return arrFields.\n\nRegistering hooks\n\nAs of Contao 4.13, there are four different ways of subscribing to a hook. The recommended way is using PHP attributes together with invokable services. Which one you use depends on your setup. For example, if you still need to support PHP 7 you can use annotations. If you still develop hooks for Contao 4.4 then you still need to use the PHP array configuration.\n\nInvokable Services"
    }
}