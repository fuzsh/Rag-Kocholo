{
    "id": "dbpedia_8742_1",
    "rank": 41,
    "data": {
        "url": "https://fossies.org/linux/contao/DEPRECATED.md",
        "read_more_link": "",
        "language": "en",
        "title": "Contao: DEPRECATED.md",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://fossies.org/warix/forest1.gif",
            "https://fossies.org/warix/forest2.gif",
            "https://fossies.org/delta_answer_10.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "\"Fossies\" - the Fresh Open Source Software Archive\n\nMember \"contao-4.13.46/DEPRECATED.md\" (6 Aug 2024, 12771 Bytes) of package /linux/www/contao-4.13.46.tar.gz:\n\nDeprecated features\n\nCURRENT_ID\n\nThe CURRENT_ID constant and session variable have been deprecated and will be removed in Contao 5.0. Use DataContainer::$currentPid instead to determine the ID of the current parent record.\n\n$intCurrentParentRecordId = $dc->currentPid;\n\nRequest library\n\nUsing Contao\\Request is deprecated and will no longer work in Contao 5.0. Use an alternative library such as symfony/http-client instead.\n\nCache library\n\nUsing Contao\\Cache is deprecated and will no longer work in Contao 5.0. Use your own in-memory caches instead. Use symfony/cache for persistence.\n\n$GLOBALS['TL_CSS_UNITS']\n\nThe $GLOBALS['TL_CSS_UNITS'] variable has been deprecated and will be removed in Contao 5.0. Set the appropriate units in the DCA file instead.\n\n$GLOBALS['TL_AUTO_ITEM']\n\nThe $GLOBALS['TL_AUTO_ITEM'] variable has been deprecated and will be removed together with the useAutoItem setting in Contao 5.0. Using auto items can no longer be disabled then.\n\nBE_USER_LOGGED_IN\n\nThe constant BE_USER_LOGGED_IN has been deprecated and will be removed in Contao 5.0. It was historically used to preview unpublished elements in the front end. Use the token checker service to check the separate cases instead:\n\nFE_USER_LOGGED_IN\n\nThe constant FE_USER_LOGGED_IN has been deprecated and will be removed in Contao 5.0. Use the token checker service instead:\n\n$hasFrontendUser = System::getContainer()->get('contao.security.token_checker')->hasFrontendUser();\n\nkernel.packages\n\nThe kernel.packages parameter has been deprecated in Contao 4.5 and will be removed in Contao 5.0. Use the Composer\\InstalledVersions class instead.\n\n$coreVersion = InstalledVersions::getPrettyVersion('contao/core-bundle');\n\nTL_ASSETS_URL and TL_FILES_URL\n\nThe constants TL_ASSETS_URL and TL_FILES_URL have been deprecated in Contao 4.5 and will be removed in Contao 5.0. Use the assets or files context instead:\n\nImage service\n\nThe Image and Picture classes have been deprecated in favor of the image and picture services. Here are three examples of how to use the services:\n\nImage::get()\n\nImage::create()\n\nPicture::create()\n\nMore information: https://github.com/contao/image/blob/master/README.md\n\nFORM_FIELDS\n\nUsing the FORM_FIELDS mechanism to determine which form fields have been submitted has been deprecated in Contao 4.0 and will no longer work in Contao 5.0. Make sure to always submit at least an empty string in your widget.\n\nPage handler without getResponse()\n\nUsing a custom page handler without a getResponse() method has been deprecated in Contao 4.0 and will no longer work in Contao 5.0.\n\nVERSION and BUILD\n\nThe VERSION and BUILD constants have been deprecated in Contao 4.0 and will be removed in Contao 5.0. Use the ContaoCoreBundle::getVersion() method instead.\n\n$coreVersion = ContaoCoreBundle::getVersion();\n\nmember_grouped.html5\n\nAccessing the field groups via one of the following properties in the member_grouped.html5 template has been deprecated in Contao 4.0 and will no longer work in Contao 5.0:\n\n$this->personal\n\n$this->address\n\n$this->contact\n\n$this->login\n\n$this->captcha\n\nUse $this->categories instead.\n\n\"channel\" token\n\nUsing the simple token \"channel\" in newsletter subscription mails has been deprecated in Contao 4.0 and will no longer work in Contao 5.0. Use the \"channels\" token instead.\n\n$this->arrCache\n\nUsing $this->arrCache, which is defined in the System class, has been deprecated in Contao 4.0 and will no longer work in Contao 5.0. If you are using it in your class, make sure to define it as property.\n\n$this->items in pagination templates\n\nUsing $this->items in pagination templates has been deprecated in Contao 4.0 and will no longer work in Contao 5.0. Use $this->pages instead.\n\nTL_SCRIPT_URL and TL_PLUGINS_URL\n\nThe constants TL_SCRIPT_URL and TL_PLUGINS_URL have been deprecated in Contao 4.0 and will be removed in Contao 5.0. Use TL_ASSETS_URL instead.\n\nUnresolvableDependenciesException\n\nThe UnresolvableDependenciesException class has been deprecated in Contao 4.0 and will be removed in Contao 5.0.\n\n$this->language in TinyMCE config files\n\nUsing $this->language in TinyMCE configuration files has been deprecated in Contao 4.0 and will no longer work in Contao 5.0. Use the static method Backend::getTinyMceLanguage() instead.\n\n$GLOBALS['TL_LANGUAGE'] and $_SESSION['TL_LANGUAGE']\n\nUsing the globals $GLOBALS['TL_LANGUAGE'] and $_SESSION['TL_LANGUAGE'] has been deprecated in Contao 4.0 and will no longer work in Contao 5.0. Use the locale from the request object instead:\n\n$locale = System::getContainer()->get('request_stack')->getCurrentRequest()->getLocale();\n\n$GLOBALS['TL_LANG']['LNG']\n\nUsing the globals $GLOBALS['TL_LANG']['LNG'] has been deprecated in Contao 4.12 and will no longer work in Contao 5.0. Use the locales service instead:\n\n$locales = System::getContainer()->get('contao.intl.locales')->getLocales();\n\n$GLOBALS['TL_LANG']['CNT']\n\nUsing the globals $GLOBALS['TL_LANG']['CNT'] has been deprecated in Contao 4.12 and will no longer work in Contao 5.0. Use the countries service instead:\n\n$countries = System::getContainer()->get('contao.intl.countries')->getCountries();\n\nRequest.Mixed (JavaScript)\n\nUsing the old Request.Mixed class instead of Request.Contao has been deprecated in Contao 4.0 and will no longer work in Contao 5.0.\n\n\"subpalette\" event (JavaScript)\n\nThe \"subpalette\" event, which is currently fired when a subpalette is toggled via Ajax, has been deprecated in Contao 4.0 and will be removed in Contao 5.0. Subscribe to the \"ajax_change\" event instead.\n\nSession class\n\nThe Session class has been deprecated in Contao 4.0 and will be removed in Contao 5.0. Use the session service instead:\n\n$session = System::getContainer()->get('session');\n\nWidget::addSubmit()\n\nThe Widget::addSubmit() method has been deprecated in Contao 4.0 and will be removed in Contao 5.0. It already does not add a submit button anymore.\n\nContent elements\n\nFor reasons of backwards compatibility, it is currently not required to set the tl_content.ptable column; it will treat an empty column like it had been set to tl_article.\n\nThis behavior has been deprecated in Contao 4.0 and will no longer be supported in Contao 5.0. If you have developed an extension which creates content elements, make sure to always set the ptable column.\n\nContao class loader\n\nEven though we are still using the Contao class loader, it has been deprecated in favor of the Composer class loader. You should no longer use it, and you can no longer use it to override arbitrary core classes.\n\nUsing $this in configuration files\n\nUsing $this in configuration files such as config/config.php or dca/*.php has been deprecated in Contao 4.0 and will no longer work in Contao 5.0.\n\nYou can use the static helper methods such as System::loadLanguageFile() or Controller::loadDataContainer() instead.\n\nConstants\n\nThe constants TL_ROOT, TL_MODE, TL_START, TL_SCRIPT, TL_REFERER_ID and REQUEST_TOKEN have been deprecated and will be removed in Contao 5.0.\n\nUse the kernel.project_dir instead of TL_ROOT:\n\n$rootDir = System::getContainer()->getParameter('kernel.project_dir');\n\nUse the ScopeMatcher service instead of using TL_MODE:\n\nUse the kernel start time instead of TL_START:\n\n$startTime = System::getContainer()->get('kernel')->getStartTime();\n\nUse the request stack to get the route instead of using TL_SCRIPT:\n\nUse the request attribute _contao_referer_id instead of TL_REFERER_ID:\n\n$refererId = System::getContainer()->get('request_stack')->getCurrentRequest()->get('_contao_referer_id');\n\nUse the contao.csrf.token_manager service instead of REQUEST_TOKEN:\n\n$requestToken = System::getContainer()->get('contao.csrf.token_manager')->getDefaultTokenValue();\n\nPHP entry points\n\nContao 4 only uses a single PHP entry point, namely the index.php or preview.php file. The previous PHP entry points have been removed and a route has been set up for each one instead (see UPGRADE.md).\n\nUsing the old paths is deprecated and will no longer work in Contao 5.0.\n\nModuleLoader\n\nThe ModuleLoader class is no longer used and only kept for reasons of backwards compatibility. It is deprecated and will be removed in Contao 5.0. Use the container parameter kernel.bundles instead:\n\n$bundles = System::getContainer()->getParameter('kernel.bundles');\n\ndatabase.sql files\n\nUsing database.sql files to set up tables is deprecated in Contao 4.0 and will no longer be supported in Contao 5.0. Use DCA files instead:\n\ndcaconfig.php\n\nUsing the dcaconfig.php file to adjust a data container is deprecated in Contao 4.0 and will no longer be supported in Contao 5.0. Add the DCA files with your modifications to the contao/dca folder instead.\n\ninitconfig.php\n\nUsing the initconfig.php file to customize the initialization process is deprecated in Contao 4.0 and will no longer be supported in Contao 5.0. Subscribe to one of the Symfony events instead (e.g. kernel.request).\n\nlangconfig.php"
    }
}