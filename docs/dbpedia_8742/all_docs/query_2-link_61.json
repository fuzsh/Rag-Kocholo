{
    "id": "dbpedia_8742_2",
    "rank": 61,
    "data": {
        "url": "https://metamodels.readthedocs.io/en/latest/manual/install.html",
        "read_more_link": "",
        "language": "en",
        "title": "Install and update MetaModels — MetaModels 2.0.0 documentation",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "../_static/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://metamodels.readthedocs.io/en/latest/manual/install.html",
        "text": "Installation of MM 2.2Â¶\n\nMetaModels 2.2 brings full compatibility with Contao 4.9 and several features and Optimizations. For example, MM 2.2 is compatible with the strict mode of higher MySQL versions or current MariaDB or manual file sorting.\n\nThe installation requirements for MetaModels 2.2 are\n\na running Contao 4.9.x (LTS) and\n\nPHP 7.2/7.3\n\nMySQL from 5.5.5 (InnoDB), MariaDB\n\nMetaModels 2.2 is now ready for use and can be started via the Composer (console) or the Contao Manager can be installed. get access to the currently protected repository about our âeary adopter programâ - more about this under Fundrasing on the MM website.\n\nFurther features of MM 2.2 (will be added continuously):\n\ncompatible with the strict mode of MySQL and MariaDB\n\nmanual file sorting (including translated files)\n\nInstalling MM 2.1Â¶\n\nThe installation requirements for MetaModels 2.1 are:\n\na running Contao 4.4.x (LTS) and\n\nPHP 7.1/7.2\n\nMySQL from 5.5.5 (InnoDB), MariaDB (without strict mode)\n\nHigher versions of Contao and/or PHP are possible, but not officially supported.\n\nIn the Contao manager you can enter metamodels/ to get all available packages are listed. The basic package metamodels/core has to be installed - and in addition additional attributes and filters can be added depending on the task.\n\nIn addition to the individual packages, there are bundles which contain different packages for a simplified installation.\n\nFor an introduction to MetaModels we recommend the bundle metamodels/bundle_start - herewith the core as well as the most important attributes and filters are defined without e.g. the packages for multilingualism installed.\n\nAs in MetaModesls 2.0, there is also the metamodels/bundle_all bundle, which is installed next to the bundle_start will also install the multilanguage packages (note: the translatedselect packages are also installed). translated tags are no longer included here, as they are only to be used for special cases).\n\nFurther modules like âRegister filterâ, âRadius searchâ, âRatingâ etc. are available as separate packages to add.\n\nIn addition to the Contao Manager, the installation of packages and bundles can be done directly via the console via Composer possible - e.g. with\n\nphp web/contao-manager.phar.php composer require metamodels/core\n\nor\n\nphp web/contao-manager.phar.php composer require metamodels/bundle_start\n\nInstead of php you may have to specify the path to the corresponding PHP binary.\n\nAfter the installation a update of the database is not possible via the install tool of Contao. to forget!\n\nWith a conversion (2.0 -> 2.1) or a new installation it is a good opportunity to only use the attributes and filters which are necessary for the project. Was previously e.g. metamodels/bundle_all in use, you can query the really used attributes and filters with the following SQL commands:\n\nTesting of special packages via ComposerÂ¶\n\nThe bundle âbundle_allâ contains all currently available and released MetaModels packages. Additionally there are packages with bugfixes or brandnew functions that have to be tested. For the MetaModels core this could be e.g. a package called âdev-hotfix-xyzâ. You can see those packages inter alia on Github within the corresponding repository (e.g. MetaModels/core) in the âbranchesâ tab.\n\nIn case that you want to test a package like this, youâll have to separately select and install it in the package management. For the selection in the package management, check the checkbox âdependencies i nstalledâ and then click on the corresponding package, e.g. âmetamodels/coreâ and aditionally in the following options click on e.g. âdev-hotfix-xyzâ.\n\nAfter âReserve package for installationâ youâll have to make some small changes to Composer-JSON. To do this go to the package manager to âsettingsâ and there click onto âexpert modeâ. The displayed JSON file has to be extended with the entry âas 2.0.0â within the node ârequireâ. If you happen to have several extra packages you have to do this for every entry.\n\nfor example:\n\n\"metamodels/core\": \"^2.1\" modify to\n\n\"metamodels/core\": \"dev-hotfix/2.1.25 as 2.1.25\"\n\nAfter the installation via âupdate packagesâ you should delete the Composer cache in the âsettingsâ of the package management.\n\nAs MetaModels is closely interlinked with the DC_general (DCG), you will frequently need to update to a newer version here as well for testing. The procedure is the same as for MetaModels including the adjustment of the JSON entry with the âas 2.0.0â.\n\nTo come back to the initial version , just delete the package in the package management.\n\nPlease never forget to provide the MetaModels developer team with your valuable feedback after your test on Github."
    }
}