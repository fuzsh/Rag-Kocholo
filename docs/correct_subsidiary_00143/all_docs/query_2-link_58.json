{
    "id": "correct_subsidiary_00143_2",
    "rank": 58,
    "data": {
        "url": "https://mrochadba.wordpress.com/mysql/",
        "read_more_link": "",
        "language": "en",
        "title": "MYSQL",
        "top_image": "http://upload.wikimedia.org/wikipedia/en/thumb/6/62/MySQL.svg/124px-MySQL.svg.png",
        "meta_img": "http://upload.wikimedia.org/wikipedia/en/thumb/6/62/MySQL.svg/124px-MySQL.svg.png",
        "images": [
            "https://i0.wp.com/upload.wikimedia.org/wikipedia/en/thumb/6/62/MySQL.svg/124px-MySQL.svg.png",
            "https://i0.wp.com/upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Mysql-screenshot.PNG/300px-Mysql-screenshot.PNG",
            "https://i0.wp.com/upload.wikimedia.org/wikipedia/en/thumb/9/9c/The_MySQL_Workbench_startup_screen.png/220px-The_MySQL_Workbench_startup_screen.png",
            "https://i0.wp.com/upload.wikimedia.org/wikipedia/commons/thumb/8/82/LAMP_software_bundle.svg/400px-LAMP_software_bundle.svg.png",
            "https://i0.wp.com/upload.wikimedia.org/wikipedia/en/timeline/d18ad23ff5064920be4839c34162c8ca.png",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2015-05-28T03:41:43+00:00",
        "summary": "",
        "meta_description": "MySQL From Wikipedia, the free encyclopedia   (Redirected from MYSQL) MySQL Screenshot of the default MySQL command-line banner and prompt Original author(s) MySQL AB Developer(s) Oracle Corporation Initial release 23 May 1995; 20 years ago Stable release 5.6.24[1] / 6 April 2015; 51 days ago Preview release 5.7.7[2] / 8 April 2015; 49 days ago Development status Active Written…",
        "meta_lang": "pt",
        "meta_favicon": "https://s1.wp.com/i/favicon.ico",
        "meta_site_name": "MR DBA",
        "canonical_link": "https://mrochadba.wordpress.com/mysql/",
        "text": "From Wikipedia, the free encyclopedia\n\n(Redirected from MYSQL)\n\nInterfaces\n\nMySQL is a relational database management system (RDBMS), and ships with no GUI tools to administer MySQL databases or manage data contained within the databases. Users may use the included command line tools,[19][20] or use MySQL “front-ends”, desktop software and web applications that create and manage MySQL databases, build database structures, back up data, inspect status, and work with data records.[21][22][23][24] The official set of MySQL front-end tools, MySQL Workbench is actively developed by Oracle, and is freely available for use.[25]\n\nGraphical\n\nThe official MySQL Workbench is a free integrated environment developed by MySQL AB, that enables users to graphically administer MySQL databases and visually design database structures. MySQL Workbench replaces the previous package of software, MySQL GUI Tools. Similar to other third-party packages, but still considered the authoritative MySQL front end, MySQL Workbench lets users manage database design & modeling, SQL development (replacing MySQL Query Browser) and Database administration (replacing MySQL Administrator).\n\nMySQL Workbench is available in two editions, the regular free and open source Community Edition which may be downloaded from the MySQL website, and the proprietary Standard Edition which extends and improves the feature set of the Community Edition.\n\nThird-party proprietary and free graphical administration applications (or “front ends”) are available that integrate with MySQL and enable users to work with database structure and data visually. Some well-known front ends, in alphabetical order, are:\n\nAdminer – a free MySQL front end written in one PHP script, capable of managing multiple databases, with many CSS skins available\n\nDatabase Workbench – a software application for development and administration of multiple relational databases including MySQL, with interoperationality between different database systems\n\nDBEdit – a free front end for MySQL and other databases\n\nHeidiSQL – a full featured free front end that runs on Windows, and can connect to local or remote MySQL servers to manage databases, tables, column structure, and individual data records. Also supports specialised GUI features for date/time fields and enumerated multiple-value fields[26]\n\nLibreOffice Base – LibreOffice Base allows the creation and management of databases, preparation of forms and reports that provide end users easy access to data. Like Microsoft Access, it can be used as a front-end for various database systems, including Access databases (JET), ODBC data sources, and MySQL or PostgreSQL[27]\n\nNavicat – a series of proprietary graphical database management applications, developed for Windows, Macintosh and Linux\n\nOpenOffice.org – freely available OpenOffice.org Base can manage MySQL databases if the entire suite is installed\n\nphpMyAdmin – a free Web-based front-end, widely installed[28] by web hosting services since it is developed in PHP and included in the LAMP stack, and MAMP, XAMPP and WAMP software bundle installers\n\nSQLBuddy – a free Web-based front end, developed in PHP\n\nSQLyog – proprietary, but there is also a free ‘community’ edition available\n\nToad for MySQL – a free development and administration front end for MySQL from Dell Software\n\nWebmin – a free Web-based management utility and a MySQL front end, developed in Perl with some parts written in Java\n\nOther available proprietary MySQL front ends include dbForge Studio for MySQL, DBStudio, Epictetus, Microsoft Access, Oracle SQL Developer, SchemaBank, SQLPro SQL Client, Toad Data Modeler and DaDaBIK.\n\nCommand line\n\nMySQL ships with many command line tools, from which the main interface is ‘mysql’ client.[19][20] Third parties have also developed tools to manage MySQL servers.\n\nMySQL Utilities – a set of utilities designed to perform common maintenance and administrative tasks. Originally included as part of the MySQL Workbench, the utilities are now a stand-alone download available from Oracle.\n\nPercona Toolkit – a cross-platform toolkit for MySQL, developed in Perl.[29] Percona Toolkit can be used to prove replication is working correctly, fix corrupted data, automate repetitive tasks, and speed up servers. Percona Toolkit is included with several Linux distributions such as CentOS and Debian, and packages are available for Fedora and Ubuntu as well. Percona Toolkit was originally developed as Maatkit, but as of late 2011, Maatkit is no longer developed.\n\nProgramming\n\nMySQL works on many system platforms, including AIX, BSDi, FreeBSD, HP-UX, eComStation, i5/OS, IRIX, Linux, OS X, Microsoft Windows, NetBSD, Novell NetWare, OpenBSD, OpenSolaris, OS/2 Warp, QNX, Oracle Solaris, Symbian, SunOS, SCO OpenServer, SCO UnixWare, Sanos and Tru64. A port of MySQL to OpenVMS also exists.[30]\n\nMySQL is written in C and C++. Its SQL parser is written in yacc, but it uses a home-brewed lexical analyzer.[31] Many programming languages with language-specific APIs include libraries for accessing MySQL databases. These include MySQL Connector/Net for integration with Microsoft’s Visual Studio (languages such as C# and VB are most commonly used) and the JDBC driver for Java. In addition, an ODBC interface called MyODBC allows additional programming languages that support the ODBC interface to communicate with a MySQL database, such as ASP or ColdFusion. The HTSQL – URL-based query method also ships with a MySQL adapter, allowing direct interaction between a MySQL database and any web client via structured URLs.\n\nFeatures\n\nMySQL is offered under two different editions: the open source MySQL Community Server and the proprietary Enterprise Server.[32] MySQL Enterprise Server is differentiated by a series of proprietary extensions which install as server plugins, but otherwise shares the version numbering system and is built from the same code base.\n\nMajor features as available in MySQL 5.6:\n\nA broad subset of ANSI SQL 99, as well as extensions\n\nCross-platform support\n\nStored procedures, using a procedural language that closely adheres to SQL/PSM[33]\n\nTriggers\n\nCursors\n\nUpdatable views\n\nOnline DDL when using the InnoDB Storage Engine.\n\nInformation schema\n\nPerformance Schema\n\nA set of SQL Mode options to control runtime behavior, including a strict mode to better adhere to SQL standards.\n\nX/Open XA distributed transaction processing (DTP) support; two phase commit as part of this, using the default InnoDB storage engine\n\nTransactions with savepoints when using the default InnoDB Storage Engine. The NDB Cluster Storage Engine also supports transactions.\n\nACID compliance when using InnoDB and NDB Cluster Storage Engines[34]\n\nSSL support\n\nQuery caching\n\nSub-SELECTs (i.e. nested SELECTs)\n\nBuilt-in Replication support (i.e. Master-Master Replication & Master-Slave Replication) with one master per slave, many slaves per master.[35] Multi-master replication is provided in MySQL Cluster,[36] and multi-master support can be added to unclustered configurations using Galera Cluster.[37]\n\nFull-text indexing and searching[b]\n\nEmbedded database library\n\nUnicode support[c]\n\nPartitioned tables with pruning of partitions in optimizer\n\nShared-nothing clustering through MySQL Cluster\n\nMultiple storage engines, allowing one to choose the one that is most effective for each table in the application.[d]\n\nNative storage engines InnoDB, MyISAM, Merge, Memory (heap), Federated, Archive, CSV, Blackhole, NDB Cluster.\n\nCommit grouping, gathering multiple transactions from multiple connections together to increase the number of commits per second.\n\nThe developers release minor updates of the MySQL Server approximately every two months. The sources can be obtained from MySQL’s website or from MySQL’s Bazaar repository, both under the GPL license.\n\nLimitations\n\nLike other SQL databases, MySQL does not currently comply with the full SQL standard for some of the implemented functionality, including foreign key references when using some storage engines other than the default of InnoDB,[38] and check constraints.[39]\n\nUp until MySQL 5.7, triggers are limited to one per action / timing, meaning that at most one trigger can be defined to be executed after an INSERT operation, and one before INSERT on the same table.[40] No triggers can be defined on views.[40]\n\nMySQL, like most other transactional relational databases, is strongly limited by hard disk performance. This is especially true in terms of write latency.[41] Given the recent appearance (as of 2012) of very affordable consumer-grade SATA-interface solid-state drives that offer zero mechanical latency, a fivefold speedup over even an eight-drive RAID array can be had for a smaller investment.[42][43]\n\nMySQL database’s inbuilt functions like UNIX_TIMESTAMP() will return 0 after 03:14:07 UTC on 19 January 2038.[44]\n\nDeployment\n\nMySQL can be built and installed manually from source code, but this can be tedious so it is more commonly installed from a binary package unless special customizations are required. On most Linux distributions the package management system can download and install MySQL with minimal effort, though further configuration is often required to adjust security and optimization settings.\n\nThough MySQL began as a low-end alternative to more powerful proprietary databases, it has gradually evolved to support higher-scale needs as well. It is still most commonly used in small to medium scale single-server deployments, either as a component in a LAMP-based web application or as a standalone database server. Much of MySQL’s appeal originates in its relative simplicity and ease of use, which is enabled by an ecosystem of open source tools such as phpMyAdmin. In the medium range, MySQL can be scaled by deploying it on more powerful hardware, such as a multi-processor server with gigabytes of memory.\n\nThere are however limits to how far performance can scale on a single server (‘scaling up’), so on larger scales, multi-server MySQL (‘scaling out’) deployments are required to provide improved performance and reliability. A typical high-end configuration can include a powerful master database which handles data write operations and is replicated to multiple slaves that handle all read operations.[45] The master server synchronizes continually with its slaves so in the event of failure a slave can be promoted to become the new master, minimizing downtime. Further improvements in performance can be achieved by caching the results from database queries in memory using memcached, or breaking down a database into smaller chunks called shards which can be spread across a number of distributed server clusters.[46]\n\nBackup\n\nFilesystem snapshot or volume manager snapshot – backups are performed by using an external tool provided by the operating system (such as LVM) or storage device, with additional support from MySQL for ensuring consistency of such snapshots.\n\nmysqldump – a logical backup tool included with both community and enterprise editions of MySQL. Supports backup from all storage engines.\n\nMySQL Enterprise Backup – a hot backup utility included as part of the MySQL Enterprise subscription from Oracle. Offers native InnoDB hot backup, as well as backup for other storage engines.\n\nXtraBackup – open source MySQL hot backup software. Some notable features include hot, non-locking backups for InnoDB storage, incremental backups, streaming, parallel-compressed backups, throttling based on the number of I/O operations per second, etc.[47]\n\nHigh availability\n\nEnsuring high availability requires a certain amount of redundancy in the system. For database systems, the redundancy traditionally takes the form of having a primary server acting as a master, and using replication to keep secondaries available to take over in case the primary fails. This means that the “server” that the application connects to is in reality a collection of servers, not a single server. In a similar manner, if the application is using a sharded database, it is in reality working with a collection of servers, not a single server. In this case, a collection of servers is usually referred to as a farm.[48]\n\nOne of the projects aiming to provide high availability for MySQL is MySQL Fabric, an integrated system for managing a collection of MySQL servers, and a framework on top of which high availability and database sharding is built. MySQL Fabric is open-source and is intended to be extensible, easy to use, and to support procedure execution even in the presence of failure, providing an execution model usually called resilient execution. MySQL client libraries are extended so they are hiding the complexities of handling failover in the event of a server failure, as well as correctly dispatching transactions to the shards. As of September 2013, there is currently support for Fabric-aware versions of Connector/J, Connector/PHP, Connector/Python, as well as some rudimentary support for Hibernate and Doctrine. As of May 2014, MySQL Fabric is in the general availability stage of development.[49]\n\nCloud deployment\n\nMain article: Cloud database\n\nMySQL can also be run on cloud computing platforms such as Amazon EC2. Listed below are some common deployment models for MySQL on the cloud:\n\nVirtual Machine Image – cloud users can upload a machine image of their own with MySQL installed, or use a ready-made machine image with an optimized installation of MySQL on it, such as the one provided by Amazon EC2.[50]\n\nMySQL as a Service – some cloud platforms offer MySQL “as a service”. In this configuration, application owners do not have to install and maintain the MySQL database on their own. Instead, the database service provider takes responsibility for installing and maintaining the database, and application owners pay according to their usage.[51] Notable cloud-based MySQL services are the Amazon Relational Database Service; Rackspace; HP Converged Cloud; Heroku and Jelastic.\n\nManaged MySQL cloud hosting – the database is not offered as a service, but the cloud provider hosts the database and manages it on the application owner’s behalf. As of 2011, of the major cloud providers, only Terremark and Rackspace offer managed hosting for MySQL databases.[52][53]\n\nCommunity\n\nThe MySQL server software itself and the client libraries use dual-licensing distribution. They are offered under GPL version 2,[54] beginning from 28 June 2000[55] (which in 2009 has been extended with a FLOSS License Exception)[56] or to use a proprietary license.[57]\n\nSupport can be obtained from the official manual.[58] Free support additionally is available in different IRC channels and forums. Oracle offers paid support via its MySQL Enterprise products. They differ in the scope of services and in price. Additionally, a number of third party organisations exist to provide support and services, including SkySQL Ab and Percona.\n\nMySQL has received positive reviews, and reviewers noticed it “performs extremely well in the average case.” and that the “developer interfaces are there, and the documentation (not to mention feedback in the real world via Web sites and the like) is very, very good”.[59] It has also been tested to be a “fast, stable and true multi-user, multi-threaded sql database server”.[60]\n\nRelated projects\n\nDrizzle – a fork targeted at the web-infrastructure and cloud computing markets. The developers of the product describe it as a “smaller, slimmer and (hopefully) faster version of MySQL”. As a result, many common MySQL features will be stripped out, including stored procedures, query cache, prepared statements, views, and triggers. This is a partial rewrite of the server that does not maintain compatibility with MySQL. However, Drizzle made no new releases since May 2012.[61]\n\nMariaDB – a community-developed fork of the MySQL database source code.[62] The intent also being to maintain high fidelity with MySQL, ensuring a “drop-in” replacement capability with library binary equivalency and exact matching with MySQL APIs and commands. It includes the XtraDB storage engine as a replacement for InnoDB.\n\nPercona Server – a fork of MySQL that includes the XtraDB storage engine. Its policy is to deviate as little as possible from MySQL and remain fully compatible, while providing new features, better performance, and additional instrumentation for analysis of performance and usage.[63][64]\n\nWebScaleSQL – A branch of MySQL 5.6 maintained by Facebook, LinkedIn, Google and Twitter.[65]\n\nHistory\n\nMySQL was created by a Swedish company, MySQL AB, founded by David Axmark, Allan Larsson and Michael “Monty” Widenius. The first version of MySQL appeared on 23 May 1995. It was initially created for personal usage from mSQL based on the low-level language ISAM, which the creators considered too slow and inflexible. They created a new SQL interface, while keeping the same API as mSQL. By keeping the API consistent with the mSQL system, many developers were able to use MySQL instead of the (proprietarily licensed) mSQL antecedent.[citation needed][dubious – discuss]\n\nLegal and acquisition impacts\n\nOn 15 June 2001, NuSphere sued MySQL AB, TcX DataKonsult AB and its original authors Michael (“Monty”) Widenius and David Axmark in U.S District Court in Boston for “breach of contract, tortious interference with third party contracts and relationships and unfair competition”.[66][67]\n\nIn 2002, MySQL AB sued Progress NuSphere for copyright and trademark infringement in United States district court. NuSphere had allegedly violated MySQL’s copyright by linking MySQL’s GPL’ed code with NuSphere Gemini table without being in compliance with the license.[68] After a preliminary hearing before Judge Patti Saris on 27 February 2002, the parties entered settlement talks and eventually settled.[69] After the hearing, FSF commented that “Judge Saris made clear that she sees the GNU GPL to be an enforceable and binding license.”[70]\n\nIn October 2005, Oracle Corporation acquired Innobase OY, the Finnish company that developed the third-party InnoDB storage engine that allows MySQL to provide such functionality as transactions and foreign keys. After the acquisition, an Oracle press release mentioned that the contracts that make the company’s software available to MySQL AB would be due for renewal (and presumably renegotiation) some time in 2006.[71] During the MySQL Users Conference in April 2006, MySQL issued a press release that confirmed that MySQL and Innobase OY agreed to a “multi-year” extension of their licensing agreement.[72]\n\nIn February 2006, Oracle Corporation acquired Sleepycat Software,[73] makers of the Berkeley DB, a database engine providing the basis for another MySQL storage engine. This had little effect, as Berkeley DB was not widely used, and was dropped (due to lack of use) in MySQL 5.1.12, a pre-GA release of MySQL 5.1 released in October 2006.[74]\n\nIn January 2008, Sun Microsystems bought MySQL for $1 billion.[75]\n\nIn April 2009, Oracle Corporation entered into an agreement to purchase Sun Microsystems,[76] then owners of MySQL copyright and trademark. Sun’s board of directors unanimously approved the deal, it was also approved by Sun’s shareholders, and by the U.S. government on 20 August 2009.[77] On 14 December 2009, Oracle pledged to continue to enhance MySQL[78] as it had done for the previous four years.\n\nA movement against Oracle’s acquisition of MySQL, to “Save MySQL”[79] from Oracle was started by one of the MySQL founders, Monty Widenius. The petition of 50,000+ developers and users called upon the European Commission to block approval of the acquisition. At the same time, several Free Software opinion leaders (including Eben Moglen, Pamela Jones of Groklaw, Jan Wildeboer and Carlo Piana, who also acted as co-counsel in the merger regulation procedure) advocated for the unconditional approval of the merger.[citation needed] As part of the negotiations with the European Commission, Oracle committed that MySQL server will continue until at least 2015 to use the dual-licensing strategy long used by MySQL AB, with proprietary and GPL versions available. The antitrust of the EU had been “pressuring it to divest MySQL as a condition for approval of the merger”. But, as revealed by WikiLeaks, the US Department of Justice and Antitrust, at the request of Oracle, pressured the EU to unconditionally approve the merger.[80] The European Commission eventually unconditionally approved Oracle’s acquisition of MySQL on 21 January 2010.[81]\n\nIn January 2009, prior to Oracle’s acquisition of MySQL, Monty Widenius started a GPL-only fork, MariaDB. MariaDB is based on the same code base as MySQL server 5.1 and strives to maintain compatibility with Oracle-provided versions.[82]\n\nMilestones\n\nNotable milestones in MySQL development include:\n\nOriginal development of MySQL by Michael Widenius and David Axmark beginning in 1994[83]\n\nFirst internal release on 23 May 1995\n\nVersion 3.19: End of 1996, from http://www.tcx.se\n\nVersion 3.20: January 1997\n\nWindows version was released on 8 January 1998 for Windows 95 and NT\n\nVersion 3.21: production release 1998, from http://www.mysql.com\n\nVersion 3.22: alpha, beta from 1998\n\nVersion 3.23: beta from June 2000, production release 22 January 2001[84]\n\nVersion 4.0: beta from August 2002, production release March 2003 (unions)\n\nVersion 4.01: beta from August 2003, Jyoti[clarification needed][citation needed] adopts MySQL for database tracking\n\nVersion 4.1: beta from June 2004, production release October 2004 (R-trees and B-trees, subqueries, prepared statements)\n\nVersion 5.0: beta from March 2005, production release October 2005 (cursors, stored procedures, triggers, views, XA transactions)\n\nThe developer of the Federated Storage Engine states that “The Federated Storage Engine is a proof-of-concept storage engine”,[85] but the main distributions of MySQL version 5.0 included it and turned it on by default. Documentation of some of the short-comings appears in “MySQL Federated Tables: The Missing Manual”.[86]\n\nSun Microsystems acquired MySQL AB in 2008.[87]\n\nVersion 5.1: production release 27 November 2008 (event scheduler, partitioning, plugin API, row-based replication, server log tables)\n\nVersion 5.1 contained 20 known crashing and wrong result bugs in addition to the 35 present in version 5.0 (almost all fixed as of release 5.1.51).[88]\n\nMySQL 5.1 and 6.0-alpha showed poor performance when used for data warehousing – partly due to its inability to utilize multiple CPU cores for processing a single query.[89]\n\nOracle acquired Sun Microsystems on 27 January 2010.[90]\n\nThe day Oracle announced the purchase of Sun, Michael “Monty” Widenius forked MySQL, launching MariaDB, and took a swath of MySQL developers with him.[91]\n\nMySQL Server 5.5 was generally available (as of December 2010). Enhancements and features include:\n\nThe default storage engine is InnoDB, which supports transactions and referential integrity constraints.\n\nImproved InnoDB I/O subsystem[92]\n\nImproved SMP support[93]\n\nSemisynchronous replication.\n\nSIGNAL and RESIGNAL statement in compliance with the SQL standard.\n\nSupport for supplementary Unicode character sets utf16, utf32, and utf8mb4.\n\nNew options for user-defined partitioning.\n\nMySQL Server 6.0.11-alpha was announced[94] on 22 May 2009 as the last release of the 6.0 line. Future MySQL Server development uses a New Release Model. Features developed for 6.0 are being incorporated into future releases.\n\nMySQL 5.6 general availability was announced in February 2013. New features included performance improvements to the query optimizer, higher transactional throughput in InnoDB, new NoSQL-style memcached APIs, improvements to partitioning for querying and managing very large tables, TIMESTAMP column type that correctly stores milliseconds, improvements to replication, and better performance monitoring by expanding the data available through the PERFORMANCE_SCHEMA.[95] The InnoDB storage engine also included support for full text search and improved group commit performance.\n\nMySQL 5.7 Development Milestone 3 was released December 2013.[96]\n\nVersions"
    }
}