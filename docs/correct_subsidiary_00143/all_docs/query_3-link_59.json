{
    "id": "correct_subsidiary_00143_3",
    "rank": 59,
    "data": {
        "url": "https://meshedinsights.com/author/webmink/page/2/",
        "read_more_link": "",
        "language": "en",
        "title": "Simon Phipps",
        "top_image": "https://secure.gravatar.com/avatar/5d0a18a1c274f018b9262c848b023da0?s=200&d=identicon&r=g",
        "meta_img": "https://secure.gravatar.com/avatar/5d0a18a1c274f018b9262c848b023da0?s=200&d=identicon&r=g",
        "images": [
            "https://meshedinsights.com/wp-content/uploads/2017/12/cropped-shadeas-of-grey.jpg",
            "https://meshedinsights.com/wp-content/uploads/2021/05/mvimg_20200830_195651.jpg?w=1024",
            "https://meshedinsights.com/wp-content/uploads/2021/04/6273866688_d3c63478cc_k-1.jpg?w=1024",
            "https://meshedinsights.com/wp-content/uploads/2021/03/680973_feac1a720f_o.jpg?w=1024",
            "https://meshedinsights.com/wp-content/uploads/2017/09/rocks.jpg?w=1024",
            "https://meshedinsights.com/wp-content/uploads/2016/10/surfer.jpg?w=1024",
            "https://meshedinsights.com/wp-content/uploads/2017/09/finally-free.jpg?w=1024",
            "https://meshedinsights.com/wp-content/uploads/2021/02/img_20200709_100922_189.jpg?w=1024",
            "https://i1.wp.com/meshedinsights.files.wordpress.com/2017/06/patreon-button.png?ssl=1&w=450",
            "https://www.paypalobjects.com/en_GB/i/btn/btn_donate_LG.gif",
            "https://secure.gravatar.com/blavatar/f6a5421f0f532490a95dd9b149daae519bfa658327bb54c739d825e0d3257ee4?s=50&d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png",
            "https://secure.gravatar.com/blavatar/f6a5421f0f532490a95dd9b149daae519bfa658327bb54c739d825e0d3257ee4?s=50&d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Simon Phipps"
        ],
        "publish_date": "2021-05-27T13:28:30+00:00",
        "summary": "",
        "meta_description": "Read all of the posts by Simon Phipps on Meshed Insights Ltd",
        "meta_lang": "en",
        "meta_favicon": "https://secure.gravatar.com/blavatar/f6a5421f0f532490a95dd9b149daae519bfa658327bb54c739d825e0d3257ee4?s=32",
        "meta_site_name": "Meshed Insights Ltd",
        "canonical_link": "http://www.webmink.com",
        "text": "Using open source elsewhere is not relicensing, it’s overlaying a second license.\n\nSo you’re considering taking some open source code under a minimal, non-reciprocal OSI-approved license and putting it under a different open source license, hopefully in combination with your original code (or another form of larger project).\n\nDon’t call this “relicensing” – it is not! The original license will continue to apply and you remain responsible for complying with its requirements. Only the copyright holder can change the license. You’re not relicensing – instead you are using the rights the license has given you and applying an additional license to the combination of the earlier work and your work.\n\nContinue reading →\n\nThe Supreme Court decision in Oracle vs Google ends a decade-long nightmare for open source developers.\n\nThe decision of the US Supreme Court (SCOTUS) to reverse the erroneous conclusion of the US Federal Circuit appeals court (CAFC) that Google’s use of the Java SE API in Android was a copyright infringement comes as a great relief to open source programmers everywhere. Software developers have always assumed that merely including a function prototype in their code does not require copyright permission as it’s just a fact about the implementation.\n\nContinue reading →\n\nA draft scorecard for determining if a software project is open as bait for a business pivot or genuinely keeping your freedoms protected.\n\nThe seven signs a project is following the rights-ratchet route to riches and the framework for going beyond licensing can be augmented by some straightforward indicators of an issue. None of these alone is necessarily a cause for concern, but the more clicks, the more risks. Here’s a rough-and-ready first draft of a scorecard to check whether your software supplier considers you a community peer and will respect and protect your essential freedoms, or visualises you more like one of those pods in The Matrix. Just count the clicks; the more clicks, the higher the risk this is a rights-ratchet that will end up closed.\n\nContinue reading →\n\nStarted in 1999 and established as an official corporate function in 2005, Sun’s Open Source Program Office (OSPO) was among the first in the industry and maybe the first to use the name.\n\nAs I’ve discussed in earlier posts, corporations are the vehicle for the collective expression of many individuals. However, to the outside world they are a monolith, and are expected to be consistent as well as predictable in their actions. With the many varied, implicit expectations and explicit obligations that different open source projects have, transforming a company’s reputation into that of a good actor in open source is a complex task. It’s also a necessary one if you expect other actors to invest their time and work in your project, or to give you influence in steering a project together.\n\nContinue reading →\n\nHolders of zero-tolerance positions on both sides of the divide need to realise that accommodating open source productively inside standards bodies is both viable and happening now.\n\nYou’ll recall that open source and open standards are orthogonal concepts where even the words they share (like “open”) are defined differently. That doesn’t mean they are mutually exclusive, nor that they are bad together – they can be cultivated well in the same garden. There is great value from accommodating the two orthogonal concepts so that neither is invalidated by non-mandatory elements of the other. When they combine, great value is unleashed.\n\nContinue reading →\n\nWhy accommodating open source at a standards body is like growing blueberries.\n\nFresh-from-the-bush blueberries are one of the good things of life. When I set up my home office about a decade ago, I had to install an underground conduit to supply essential services — power, water, network — and dug a deep trench all along the path that leads there. When I refilled the trench I decided to plant a blueberry hedge so looked into how to grow good blueberries.\n\nContinue reading →\n\nUsing a community FAQ as a way to get internal disagreement addressed and external communities on board – the OpenJDK experience!\n\nIn this talk from FOSS Backstage 2021, Rich Sands and I discuss the way we used a (very large) FAQ to both align the disparate corporate functions inside Sun Microsystems and address the lack of trust in Sun by both the Free Java community and the wider open source community. What we did back then is still a highly appropriate tool for any OSPO that needs to stand in the divide between a controversial corporate position and an aggravated community.\n\nSoftware freedom is important to as an idea, but it also creates all the value of open source for business and should be jealously guarded by OSPOs.\n\nIn talking about open source, I and others routinely use the expression “software freedom” to refer to the set of rights upon which the open source phenomenon is based. It arises as a synonym for “free software”, an unfortunately ambiguous term that leads people hearing it for the first time to conclude all the primary attributes of open source software relate to money — price, cost-of-ownership, license fee and so on.\n\n“Software freedom” puts the focus in the right place — on the essential liberties required to benefit from the software. One problem with this alternative term is we are becoming accustomed to hearing discussions of “freedom” be limited to activist or political contexts, and consequently regard the term “software freedom” with caution. But a focus on software freedom isn’t just for the revolutionaries.\n\nContinue reading →\n\nIs that single-company-controlled project actually open source in the sense of delivering software freedoms to you or just about delivering prospective customers to its host company? Here are 7 tests.\n\nI frequently sum up the nature of open source licensing as granting permission in advance to developers or users to use, improve and share the software for any purpose. But the “Permission In Advance” lens has uses beyond just the rights to copyrights and patents granted in an OSI-approved license.\n\nIn my consulting engagements, I use a “thinking tool” to help clients work through their proposals for new open source community activities. Evaluating a project’s licensing, patent, and community management strategy — both to join it and to host it — should begin with the question: “How confident are community members that they have permission in advance to do whatever they need to succeed?” The more reasons for confidence, the larger the community.\n\nHere are some of the questions community members will be asking, perhaps silently, about single-company open source projects and their own agency as a member of the community:\n\nContinue reading →\n\nIs your Open Source Program Office just part of your corporate defences, or is it the community’s advocate inside your company as well?\n\nAs we considered before, corporations are not a person, but are rather a vehicle for the collective expression of the vision of many individuals, showing the outworking of the processes and systems they devise to embody their vision. So the work of an Open Source Program Office (OSPO) needs to address social change within the company and address community needs outside as well as compliance or other corporate self-protection.\n\nContinue reading →"
    }
}