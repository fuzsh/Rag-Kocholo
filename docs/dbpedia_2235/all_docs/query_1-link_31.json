{
    "id": "dbpedia_2235_1",
    "rank": 31,
    "data": {
        "url": "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/journal.pcbi.1005331",
        "read_more_link": "",
        "language": "en",
        "title": "Scalable Parameter Estimation for Genome-Scale Biochemical Reaction Networks",
        "top_image": "https://journals.plos.org/ploscompbiol/article/figure/image?id=10.1371/journal.pcbi.1005331.g004&size=inline",
        "meta_img": "https://journals.plos.org/ploscompbiol/article/figure/image?id=10.1371/journal.pcbi.1005331.g004&size=inline",
        "images": [
            "https://journals.plos.org/resource/img/orcid_16x16.png",
            "https://journals.plos.org/resource/img/orcid_16x16.png",
            "https://journals.plos.org/resource/img/logo-plos.png",
            "https://journals.plos.org/ploscompbiol/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.g001",
            "https://journals.plos.org/ploscompbiol/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.t001",
            "https://journals.plos.org/ploscompbiol/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.g002",
            "https://journals.plos.org/ploscompbiol/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.g003",
            "https://journals.plos.org/ploscompbiol/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.g004",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e001",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e002",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e003",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e004",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e005",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e006",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e007",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e008",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e009",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e010",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e011",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e012",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e013",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e014",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e015",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e016",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e017",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e018",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e019",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e020",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e021",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e022",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e023",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e024",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e025",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e026",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e027",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e028",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e029",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/file?type=thumbnail&id=10.1371/journal.pcbi.1005331.e030",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.g001",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.t001",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.g002",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.g003",
            "https://journals.plos.org/ploscompbiol/article%3Fid%3D10.1371/article/figure/image?size=inline&id=10.1371/journal.pcbi.1005331.g004",
            "https://journals.plos.org/resource/img/icon.reddit.16.png",
            "https://journals.plos.org/resource/img/icon.fb.16.png",
            "https://journals.plos.org/resource/img/icon.linkedin.16.png",
            "https://journals.plos.org/resource/img/icon.mendeley.16.png",
            "https://journals.plos.org/resource/img/icon.twtr.16.png",
            "https://journals.plos.org/resource/img/icon.email.16.png",
            "https://crossmark-cdn.crossref.org/widget/v2.0/logos/CROSSMARK_BW_horizontal.svg",
            "https://journals.plos.org/resource/img/logo-plos-footer.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Optimization",
            "Genomics",
            "Differential equations",
            "Network analysis",
            "Algorithms",
            "Biochemical simulations",
            "Genome analysis",
            "Mathematical models"
        ],
        "tags": null,
        "authors": [
            "Fabian J. Theis",
            "Jan Hasenauer",
            "Fabian Fr√∂hlich",
            "Barbara Kaltenbacher"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Author Summary In this manuscript, we introduce a scalable method for parameter estimation for genome-scale biochemical reaction networks. Mechanistic models for genome-scale biochemical reaction networks describe the behavior of thousands of chemical species using thousands of parameters. Standard methods for parameter estimation are usually computationally intractable at these scales. Adjoint sensitivity based approaches have been suggested to have superior scalability but any rigorous evaluation is lacking. We implement a toolbox for adjoint sensitivity analysis for biochemical reaction network which also supports the import of SBML models. We show by means of a set of benchmark models that adjoint sensitivity based approaches unequivocally outperform standard approaches for large-scale models and that the achieved speedup increases with respect to both the number of parameters and the number of chemical species in the model. This demonstrates the applicability of adjoint sensitivity based approaches to parameter estimation for genome-scale mechanistic model. The MATLAB toolbox implementing the developed methods is available from http://ICB-DCM.github.io/AMICI/.",
        "meta_lang": "en",
        "meta_favicon": "/resource/img/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005331",
        "text": "Figures\n\nAbstract\n\nMechanistic mathematical modeling of biochemical reaction networks using ordinary differential equation (ODE) models has improved our understanding of small- and medium-scale biological processes. While the same should in principle hold for large- and genome-scale processes, the computational methods for the analysis of ODE models which describe hundreds or thousands of biochemical species and reactions are missing so far. While individual simulations are feasible, the inference of the model parameters from experimental data is computationally too intensive. In this manuscript, we evaluate adjoint sensitivity analysis for parameter estimation in large scale biochemical reaction networks. We present the approach for time-discrete measurement and compare it to state-of-the-art methods used in systems and computational biology. Our comparison reveals a significantly improved computational efficiency and a superior scalability of adjoint sensitivity analysis. The computational complexity is effectively independent of the number of parameters, enabling the analysis of large- and genome-scale models. Our study of a comprehensive kinetic model of ErbB signaling shows that parameter estimation using adjoint sensitivity analysis requires a fraction of the computation time of established methods. The proposed method will facilitate mechanistic modeling of genome-scale cellular processes, as required in the age of omics.\n\nAuthor Summary\n\nIn this manuscript, we introduce a scalable method for parameter estimation for genome-scale biochemical reaction networks. Mechanistic models for genome-scale biochemical reaction networks describe the behavior of thousands of chemical species using thousands of parameters. Standard methods for parameter estimation are usually computationally intractable at these scales. Adjoint sensitivity based approaches have been suggested to have superior scalability but any rigorous evaluation is lacking. We implement a toolbox for adjoint sensitivity analysis for biochemical reaction network which also supports the import of SBML models. We show by means of a set of benchmark models that adjoint sensitivity based approaches unequivocally outperform standard approaches for large-scale models and that the achieved speedup increases with respect to both the number of parameters and the number of chemical species in the model. This demonstrates the applicability of adjoint sensitivity based approaches to parameter estimation for genome-scale mechanistic model. The MATLAB toolbox implementing the developed methods is available from http://ICB-DCM.github.io/AMICI/.\n\nCitation: Fr√∂hlich F, Kaltenbacher B, Theis FJ, Hasenauer J (2017) Scalable Parameter Estimation for Genome-Scale Biochemical Reaction Networks. PLoS Comput Biol 13(1): e1005331. https://doi.org/10.1371/journal.pcbi.1005331\n\nEditor: Jorg Stelling, ETH Zurich, SWITZERLAND\n\nReceived: May 4, 2016; Accepted: December 20, 2016; Published: January 23, 2017\n\nCopyright: ¬© 2017 Fr√∂hlich et al. This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.\n\nData Availability: All relevant data are within the paper and its Supporting Information files.\n\nFunding: This work was supported by the German Research Foundation (DFG; http://www.dfg.de) through the Graduate School of Quantitative Biosciences Munich (QBM; FF), the German Federal Ministry of Education and Research (BMBF; www.bmbf.de) within the SYS-Stomach project (Grant No. 01ZX1310B; JH and FJT) and the Postdoctoral Fellowship Program (https://www.helmholtz-muenchen.de/en/fellows/index.html) of the Helmholtz Zentrum M√ºnchen (JH). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.\n\nCompeting interests: The authors have declared that no competing interests exist.\n\nIntroduction\n\nIn the life sciences, the abundance of experimental data is rapidly increasing due to the advent of novel measurement devices. Genome and transcriptome sequencing, proteomics and metabolomics provide large datasets [1] at a steadily decreasing cost. While these genome-scale datasets allow for a variety of novel insights [2, 3], a mechanistic understanding on the genome scale is limited by the scalability of currently available computational methods.\n\nFor small- and medium-scale biochemical reaction networks mechanistic modeling contributed greatly to the comprehension of biological systems [4]. Ordinary differential equation (ODE) models are nowadays widely used and a variety of software tools are available for model development, simulation and statistical inference [5‚Äì7]. Despite great advances during the last decade, mechanistic modeling of biological systems using ODEs is still limited to processes with a few dozens biochemical species and a few hundred parameters. For larger models rigorous parameter inference is intractable. Hence, new algorithms are required for massive and complex genomic datasets and the corresponding genome-scale models.\n\nMechanistic modeling of a genome-scale biochemical reaction network requires the formulation of a mathematical model and the inference of its parameters, e.g. reaction rates, from experimental data. The construction of genome-scale models is mostly based on prior knowledge collected in databases such as KEGG [8], REACTOME [9] and STRING [10]. Based on these databases a series of semi-automatic methods have been developed for the assembly of the reaction graph [11‚Äì13] and the derivation of rate laws [14, 15]. As model construction is challenging and as the information available in databases is limited, in general, a collection of candidate models can be constructed to compensate flaws in individual models [16]. For all these model candidates the parameters have to be estimated from experimental data, a challenging and usually ill-posed problem [17].\n\nTo determine maximum likelihood (ML) and maximum a posteriori (MAP) estimates for model parameters, high-dimensional nonlinear and non-convex optimization problems have to be solved. The non-convexity of the optimization problem poses challenges, such as local minima, which have to be addressed by the selection of optimization methods. Commonly used global optimization methods are multi-start local optimization [18], evolutionary and genetic algorithms [19], particle swarm optimizers [20], simulated annealing [21] and hybrid optimizers [22, 23] (see [18, 24‚Äì26] for a comprehensive survey). For ODE models with a few hundred parameters and state variables multi-start local optimization methods [18] and related hybrid methods [27] have proven to be successful. These optimization methods use the gradient of the objective function to establish fast local convergence. While the convergence of gradient based optimizers can be significantly improved by providing exact gradients (see e.g. [18, 28, 29]), the gradient calculation is often the computationally most demanding step.\n\nThe gradient of the objective function is usually approximated by finite differences. As this method is neither numerically robust nor computationally efficient, several parameter estimation toolboxes employ forward sensitivity analysis. This decreases the numerical error and computation time [18]. However, the dimension of the forward sensitivity equations increases linearly with both the number of state variables and parameters, rendering its application for genome-scale models problematic. In other research fields such as mathematics and engineering, adjoint sensitivity analysis is used for parameter estimation in ordinary and partial differential equation models. Adjoint sensitivity analysis is known to be superior to the forward sensitivity analysis when the number of parameters is large [30]. Adjoint sensitivity analysis has been used for inference of biochemical reaction networks [31‚Äì33]. However, the methods were never picked up by the systems and computational biology community, supposedly due to the theoretical complexity of adjoint methods, a missing evaluation on a set of benchmark models, and an absence of an easy-to-use toolbox.\n\nIn this manuscript, we provide an intuitive description of adjoint sensitivity analysis for parameter estimation in genome-scale biochemical reaction networks. We describe the end value problem for the adjoint state in the case of discrete-time measurement and provide an user-friendly implementation to compute it numerically. The method is evaluated on seven medium- to large-scale models. By using adjoint sensitivity analysis, the computation time for calculating the objective function gradient becomes effectively independent of the number of parameters with respect to which the gradient is evaluated. Furthermore, for large-scale models adjoint sensitivity analysis can be multiple orders of magnitude faster than other gradient calculation methods used in systems biology. The reduction of the time for gradient evaluation is reflected in the computation time of the optimization. This renders parameter estimation for large-scale models feasible on standard computers, as we illustrate for a comprehensive kinetic model of ErbB signaling.\n\nMethods\n\nIn this section we introduce the model class and the corresponding estimation problem. Subsequently, gradient calculation using finite differences, forward sensitivity analysis and adjoint sensitivity analysis is described and the theoretical complexity as well as some aspects of the numerical implementation are discussed.\n\nMathematical model and experimental data\n\nWe consider ODE models for biochemical reaction networks, (1) in which is the concentration vector at time t and denotes the parameter vector. Parameters are usually kinetic constants, such as binding affinities as well as synthesis, degradation and dimerization rates. The vector field describes the temporal evolution of the concentration of the biochemical species. The mapping provides the parameter dependent initial condition at time t0.\n\nAs available experimental techniques usually do not provide measurements of the concentration of all biochemical species, we consider the output map . This map models the measurement process, i.e. the dependence of the output (or observables) at time point t on the state variables and the parameters, (2) The i-th observable yi can be the concentration of a particular biochemical species (e.g. yi = xl) as well as a function of several concentrations and parameters (e.g. yi = Œ∏m(xl1 + xl2)).\n\nWe consider discrete-time, noise corrupted measurements (3) yielding the experimental data . The number of time points at which measurements have been collected is denoted by N.\n\nRemark: For simplicity of notation we assume throughout the manuscript that the noise variances, , are known and that there are no missing values. However, the methods we will present in the following as well as the respective implementations also work when this is not the case. For details we refer to the S1 Supporting Information.\n\nMaximum likelihood (ML) estimation\n\nWe estimate the unknown parameter Œ∏ from the experimental data using ML estimation. Parameters are estimated by minimizing the negative log-likelihood, an objective function indicating the difference between experiment and simulation. In the case of independent, normally distributed measurement noise with known variances the objective function is given by (4) where yi(tj, Œ∏) is the value of the output computed from Eqs (1) and (2) for parameter value Œ∏. The minimization, (5) of this weighted least squares J yields the ML estimate of the parameters.\n\nThe optimization problem Eq (5) is in general nonlinear and non-convex. Thus, the objective function can possess multiple local minima and global optimization strategies need to be used. For ODE models multi-start local optimization has been shown to perform well [18]. In multi-start local optimization, independent local optimization runs are initialized at randomly sampled initial points in parameter space. The individual local optimizations are run until the stopping criteria are met and the results are collected. The collected results are visualized by sorting them according to the final objective function value. This visualization reveals local optima and the size of their basin of attraction. For details we refer to the survey by Raue et al. [18]. In this study, initial points are generated using latin hypercube sampling and local optimization is performed using the interior point and the trust-region-reflective algorithm implemented in the MATLAB function fmincon.m. Gradients are computed using finite differences, forward sensitivity analysis or adjoint sensitivity analysis.\n\nFinite differences\n\nA n√§ive approximation to the gradient of the objective function with respect to Œ∏k is obtained by finite differences, (6) with a, b ‚â• 0 and the kth unit vector ek. In practice forward differences (a = œµ, b = 0), backward differences (a = 0, b = œµ) and central differences (a = œµ, b = œµ) are widely used. For the computation of forward finite differences, this yields a procedure with three steps:\n\nStep 1 The state trajectory x(t, Œ∏) and output trajectory y(t, Œ∏) are computed.\n\nStep 2 The state trajectories x(t, Œ∏(k)) and the output trajectories y(t, Œ∏(k)) are computed for the perturbed parameters Œ∏(k) = Œ∏ + œµek for k = 1, ‚Ä¶, nŒ∏.\n\nStep 3 The objective function gradient elements , are computed from the output trajectory y(t, Œ∏) and the perturbed output trajectory y(t, Œ∏(k)) for k = 1, ‚Ä¶, nŒ∏.\n\nIn theory, forward and backward differences provide approximations of order œµ while central differences provide more accurate approximations of order œµ2, provided that J is sufficiently smooth. In practice the optimal choice of a and b depends on the accuracy of the numerical integration [18]. If the integration accuracy is high, an accurate approximation of the gradient can be achieved using a, b ‚â™ 1. For lower integration accuracies, larger values of a and b usually yield better approximations. A good choice of a and b is typically not clear a priori (cf. [34] and the references therein).\n\nThe computational complexity of evaluating gradients using finite differences is affine linear in the number of parameters. Forward and backward differences require in total nŒ∏ + 1 function evaluations. Central differences require in total 2nŒ∏ function evaluations. As already a single simulation of a large-scale model is time-consuming, the gradient calculation using finite differences can be limiting.\n\nForward sensitivity analysis\n\nState-of-the-art systems biology toolboxes, such as the MATLAB toolbox Data2Dynamics [7], use forward sensitivity analysis for gradient evaluation. The gradient of the objective function is (7) with denoting the sensitivity of output yi at time point t with respect to parameter Œ∏k. Governing equations for the sensitivities are obtained by differentiating Eqs (1) and (2) with respect to Œ∏k and reordering the derivatives. This yields (8) with denoting the sensitivity of the state x with respect to Œ∏k. Note that here and in the following, the dependencies of f, h, x0 and their (partial) derivatives on t, x and Œ∏ are not stated explicitly but have the to be assumed. For a more detailed presentation we refer to the S1 Supporting Information Section 1.\n\nForward sensitivity analysis consists of three steps:\n\nStep 1 The state trajectory x(t, Œ∏) and output trajectory y(t, Œ∏) are computed.\n\nStep 2 The state sensitivities and the output sensitivities are computed using the state trajectory x(t, Œ∏) for k = 1, ‚Ä¶, nŒ∏.\n\nStep 3 The objective function gradient elements , are computed from the output sensitivities and the output trajectory y(t, Œ∏) for k = 1, ‚Ä¶, nŒ∏.\n\nStep 1 and 2 are often combined, which enables simultaneous error control and the reuse of the Jacobian [30]. The simultaneous error control allows for the calculation of accurate and reliable gradients. The reuse of the Jacobian improves the computational efficiency.\n\nThe number of state and output sensitivities increases linearly with the number of parameters. While this is unproblematic for small- and medium-sized models, solving forward sensitivity equations for systems with several thousand state variable bears technical challenges. Code compilation can take multiple hours and require more memory than what is available on standard machines. Furthermore, while forward sensitivity analysis is usually faster than finite differences, in practice the complexity still increases roughly linearly with the number of parameters.\n\nAdjoint sensitivity analysis\n\nIn the numerics community, adjoint sensitivity analysis is frequently used to compute the gradients of a functional with respect to the parameters if the function depends on the solution of a differential equation [35]. In contrast to forward sensitivity analysis, adjoint sensitivity analysis does not rely on the state sensitivities but on the adjoint state p(t).\n\nThe calculation of the objective function gradient using adjoint sensitivity analysis consists of three steps:\n\nStep 1 The state trajectory x(t, Œ∏) and output trajectory y(t, Œ∏) are computed.\n\nStep 2 The trajectory of the adjoint state p(t) is computed.\n\nStep 3 The objective function gradient elements , k = 1, ‚Ä¶, nŒ∏, are computed from the state trajectory x(t, Œ∏), the adjoint state trajectory p(t) and the output trajectory y(t, Œ∏).\n\nStep 1 and 2, which are usually the computationally intensive steps, are independent of the parameter dimension. The complexity of Step 3 increases linearly with the number of parameters, yet the computation time required for this step is typically negligible.\n\nThe calculation of state and output trajectories (Step 1) is standard and does not require special methods. The non-trivial element in adjoint sensitivity analysis is the calculation of the adjoint state (Step 2). For discrete-time measurements‚Äîthe usual case in systems and computational biology‚Äîthe adjoint state is piece-wise continuous in time and defined by a sequence of backward differential equations. For t > tN, the adjoint state is zero, p(t) = 0. Starting from this end value the trajectory of the adjoint state is calculated backwards in time, from the last measurement t = tN to the initial time t = t0. At the time points at which measurements have been collected, tN, ‚Ä¶, t1, the adjoint state is reinitialised as (9) which usually results in a discontinuity of p(t) at tj. Starting from the end value p(tj) as defined in Eq (9) the adjoint state evolves backwards in time until the next measurement point tj‚àí1 or the initial time t0 is reached. This evolution is governed by the time-dependent linear ODE (10) The repeated evaluation of Eqs (9) and (10) until t = t0 yields the trajectory of the adjoint state. Given this trajectory, the gradient of the objective function with respect to the individual parameters is (11) Accordingly, the availability of the adjoint state simplifies the calculation of the objective function to nŒ∏ one-dimensional integration problems over short time intervals whose union is the total time interval [t0, tN].\n\nAlgorithm 1: Gradient evaluation using adjoint sensitivity analysis\n\n% State and output\n\nStep 1 Compute state and output trajectories using Eqs (1) and (2).\n\n% Adjoint state\n\nStep 2.1 Set end value for adjoint state, ‚àÄt > tN: p(t) = 0.\n\nfor j = N to 1 do\n\nStep 2.2 Compute end value for adjoint state according to the jth measurement using Eq (9).\n\nStep 2.3 Compute trajectory of adjoint state on time interval t = (tj‚àí1, tj] by solving Eq (10).\n\nend\n\n% Objective function gradient\n\nfor k = 1 to nŒ∏ do\n\nStep 3 Evaluation of the sensitivity ‚àÇJ/‚àÇŒ∏k using Eq (11).\n\nend\n\nPseudo-code for the calculation of the adjoint state and the objective function gradient is provided in Algorithm 1. We note that in order to use standard ODE solvers the end value problem Eq (10) can be transformed in an initial value problem by applying the time transformation œÑ = tN ‚àí t. The derivation of the adjoint sensitivities for discrete-time measurements is provided in the S1 Supporting Information Section 1.\n\nThe key difference of the adjoint compared to the forward sensitivity analysis is that the derivatives of the state and the output trajectory with respect to the parameters are not explicitly calculated. Instead, the sensitivity of the objective function is directly computed. This results in practice in a computation time of the gradient which is almost independent of the number of parameters. A visual summary of the different sensitivity analysis methods is provided in Fig 1. Besides the procedures also the computational complexity is indicated.\n\n(a) Sketch and mathematical formulation of the mathematical model of mRNA transfection presented by [36]. The intracellular release of mRNA at time point tr is modeled using the Dirac delta distribution Œ¥. (b) Illustration of finite differences, forward sensitivity analysis and adjoint sensitivity analysis for the model of mRNA transfection: (top) Step 1: simulation of model; (middle) Step 2: intermediate step for gradient calculation; and (bottom) Step 3: calculation of gradient from intermediate results. For all methods, Step 1 and 2 involve numerical simulation (the direction indicated by the arrow) and are computationally demanding, while Step 3 is computationally negligible.\n\nhttps://doi.org/10.1371/journal.pcbi.1005331.g001\n\nImplementation\n\nThe implementation of adjoint sensitivity analysis is non-trivial and error-prone. To render this method available to the systems and computational biology community, we implemented the Advanced Matlab Interface for CVODES and IDAS (AMICI). This toolbox allows for a simple symbolic definition of ODE models (1) and (2) as well as the automatic generation of native C code for efficient numerical simulation. The compiled binaries can be executed from MATLAB for the numerical evaluation of the model and the objective function gradient. Internally, the SUNDIALS solvers suite is employed [30], which offers a broad spectrum of state-of-the-art numerical integration of differential equations. In addition to the standard functionality of SUNDIALS, our implementation allows for parameter and state dependent discontinuities. The toolbox and a detailed documentation can be downloaded from http://ICB-DCM.github.io/AMICI/.\n\nResults\n\nIn the following, we will illustrate the properties of adjoint sensitivity analysis for biochemical reaction networks. For this purpose, we study several models provided in the BioPreDyn benchmark suite [27] and from the curated branch of the Biomodels Database [37]. We compare adjoint sensitivity analysis with forward sensitivity analysis and finite differences regarding accuracy, computational efficiency and scalability for a set of medium- to large-scale models.\n\nInvestigated models\n\nFor the comparison of different gradient calculation methods, we consider a set of standard models from the Biomodels Database [37] and the BioPreDyn benchmark suite [27]. From the biomodels database we considered models for the regulation of insulin signaling by oxidative stress (BM1) [38], the sea urchin endomesoderm network (BM2) [39], and the ErbB sigaling pathway (BM3) [40]. From BioPreDyn benchmark suite we considered models for central carbon metabolism in E. coli (B2) [41], enzymatic and transcriptional regulation of carbon metabolism in E. coli (B3) [42], metabolism of CHO cells (B4) [43], and signaling downstream of EGF and TNF (B5) [44]. Genome-wide kinetic metabolic models of S. cerevisiae and E.coli (B1) [45] contained in the BioPreDyn benchmark suite and the Biomodels Database [15, 45] were disregarded due to previously reported numerical problems [27, 45]. The considered models possess 18-500 state variable and 86-1801 parameters. A comprehensive summary regarding the investigated models is provided in Table 1.\n\nhttps://doi.org/10.1371/journal.pcbi.1005331.t001\n\nTo obtain realistic simulation times for adjoint sensitivities realistic experimental data is necessary (see S1 Supporting Information Section 3). For the BioPreDyn models we used the data provided in the suite, for the ErbB signaling pathway we used the experimental data provided in the original publication and for the remaining models we generated synthetic data using the nominal parameter provided in the SBML definition.\n\nIn the following, we will compare the performance of forward and adjoint sensitivities for these models. As the model of ErbB signaling has the largest number of state variables and is of high practical interest in the context of cancer research, we will analyze the scalability of finite differences and forward and adjoint sensitivity analysis for this model in greater detail. Moreover, we will compare the computational efficiency of forward and adjoint sensitivity analysis for parameter estimation for the model of ErbB signaling.\n\nScalability of gradient evaluation using adjoint sensitivity analysis\n\nThe evaluation of the objective function gradient is the computationally demanding step in deterministic local optimization. For this reason, we compared the computation time for finite differences, forward sensitivity analysis and adjoint sensitivity analysis and studied the scalability of these approaches at the nominal parameter Œ∏0 which was provided in the SBML definitions of the investigated models.\n\nFor the comprehensive model of ErbB signaling we found that the computation times for finite differences and forward sensitivity analysis behave similarly (Fig 2a). As predicted by the theory, for both methods the computation time increased linearly with the number of parameters. Still, forward sensitivities are computationally more efficient than finite differences, as reported in previous studies [18].\n\n(a) Scaling of computation time with respect to the number of parameters for the model of ErbB signaling (BM3). Computation time for finite differences and forward sensitivity equations increases roughly linearly. Computation time for adjoint sensitivity analysis is almost independent of the number of parameters but possesses a higher initial cost. Adjoint sensitivity analysis is 48 times faster than forward sensitivity analysis when considering all parameters. (b,c) Speedup when using adjoint sensitivity analysis over forward sensitivity analysis for gradient computation evaluated for all investigated models compared against nŒ∏ and nx ‚ãÖ nŒ∏. Regression curves (dashed lines) have been fitted to the results of all models excluding B3, which seems to be an outlier. All computations were performed on a MacBook Pro with an 2.9 GHz Intel Core i7 processor.\n\nhttps://doi.org/10.1371/journal.pcbi.1005331.g002\n\nAdjoint sensitivity analysis requires the solution to the adjoint problem, independent of the number of parameters. For the considered model, solving the adjoint problem a single time takes roughly 2-3-times longer than solving the forward problem. Accordingly, adjoint sensitivity analysis with respect to a small number of parameter is disadvantageous. However, adjoint sensitivity analysis scales better than forward sensitivity analysis and finite differences. Indeed, the computation time for adjoint sensitivity analysis is almost independent of the number of parameters. While computing the sensitivity with respect to a single parameter takes on average 10.09 seconds, computing the sensitivity with respect to all 219 parameters takes merely 14.32 seconds. We observe an average increase of 1.9 ‚ãÖ 10‚àí2 seconds per additional parameter for adjoint sensitivity analysis which is significantly lower than the expected 3.24 seconds for forward sensitivity analysis and 4.72 seconds for finite differences. If the sensitivities with respect to more than 4 parameters are required, adjoint sensitivity analysis outperforms both forward sensitivity analysis and finite differences. For 219 parameters, adjoint sensitivity analysis is 48-times faster than forward sensitivities and 72-times faster than finite differences.\n\nTo ensure that the observed speedup is not unique to the model of ErbB signaling (BM3) we also evaluated the speedup of adjoint sensitivity analysis over forward sensitivity analysis on models B2-5 and BM1-2. The results are presented in Fig 2b and 2c. We find that for all models, but model B3, gradient calculation using adjoint sensitivity is computationally more efficient than gradient calculation using forward sensitivities (speedup > 1). For model B3 the backwards integration required a much higher number of integration steps (4 ‚ãÖ 106) than the forward integration (6 ‚ãÖ 103), which results to a poor performance of the adjoint method. One reason for this poor performance could be that, in contrast to other models, the right hand side of the differential equation of model B3 consists almost exclusively of non-linear, non-mass-action terms.\n\nExcluding model B3 we find an polynomial increase in the speedup with respect to the number of parameters nŒ∏ (Fig 2b), as predicted by theory. Moreover, we find that the product nŒ∏ ‚ãÖ nx, which corresponds to the size of the system of forward sensitivity equations, is an even better predictor (R2 = 0.99) than nŒ∏ alone (R2 = 0.83). This suggest that adjoint sensitivity analysis is not only beneficial for systems with a large number of parameters, but can also be beneficial for systems with a large number of state variables. As we are not aware of any similar observations in the mathematics or engineering community, this could be due to the structure of biological reaction networks.\n\nOur results suggest that adjoint sensitivity analysis is an excellent candidate for parameter estimation in large-scale models as it provides good scaling with respect to both, the number of parameters and the number of state variables.\n\nAccuracy and robustness of gradients computing adjoint sensitivity analysis\n\nEfficient local optimization requires accurate and robust gradient evaluation [18]. To assess the accuracy of the gradient computed using adjoint sensitivity analysis, we compared this gradient to the gradients computed via finite differences and forward sensitivity analysis. Fig 3 visualizes the results for the model of ErbB signaling (BM3) at the nominal parameter Œ∏0 which was provided in the SBML definition. The results are similar for other starting points.\n\nEach point represents the absolute value of one gradient element. Points on the diagonal indicate a good agreement. (a) Forward finite differences with œµ = 10‚àí3 vs. adjoint sensitivities. (b) Forward sensitivities vs. adjoint sensitivities. (c) Adjoint sensitivities with high accuracies (absolute error < 10‚àí32, relative error < 10‚àí16) and default accuracies (absolute error < 10‚àí16, relative error < 10‚àí8).\n\nhttps://doi.org/10.1371/journal.pcbi.1005331.g003\n\nThe comparison of the gradients obtained using finite differences and adjoint sensitivity analysis revealed small discrepancies (Fig 3a). The median relative difference (as defined in S1 Supporting Information Section 2) between finite differences and adjoint sensitivity analysis is 1.5 ‚ãÖ 10‚àí3. For parameters Œ∏k to which the objective function J was relatively insensitive, ‚àÇJ/‚àÇŒ∏k < 10‚àí2, there are much higher discrepancies, up to a relative error of 2.9 ‚ãÖ 103.\n\nForward and adjoint sensitivity analysis yielded almost identical gradient elements over several orders of magnitude (Fig 3b). This was expected as both forward and adjoint sensitivity analysis exploit error-controlled numerical integration for the sensitivities. To assess numerical robustness of adjoint sensitivity analysis, we also compared the results obtained for high and low integration accuracies (Fig 3c). For both comparisons we found the similar median relative and maximum relative error, namely 2.6 ‚ãÖ 10‚àí6 and 9.3 ‚ãÖ 10‚àí4. This underlines the robustness of the sensitivitity based methods and ensures that differences observed in Fig 3a indeed originate from the inaccuracy of finite differences.\n\nOur results demonstrate that adjoint sensitivity analysis provides objective function gradients which are as accurate and robust as those obtained using forward sensitivity analysis.\n\nOptimization of large-scale models using adjoint sensitivity analysis\n\nAs adjoint sensitivity analysis provides accurate gradients for a significantly reduced computational cost, this can boost the performance of a variety of optimization methods. Yet, in contrast to forward sensitivity analysis, adjoint sensitivities do not yield sensitivities of observables and it is thus not possible to approximate the Hessian of the objective function via the Fisher Information Matrix [46]. This prohibits the use of possibly more efficient Newton-type algorithms which exploit second order information. Therefore, adjoint sensitivities are limited to quasi-Newton type optimization algorithms, e.g. the Broyden-Fletcher-Goldfarb-Shanno (BFGS) algorithm [47, 48], for which the Hessian is iteratively approximated from the gradient during optimization. In principle, the exact calculation of the Hessian and Hessian-Vector products is possible via second order forward and adjoint sensitivity analysis [49, 50], which possess similar scaling properties as the first order methods. However, both forward and adjoint approaches come at an additional cost and are thus not considered in this study.\n\nTo assess whether the use of adjoint sensitivities for optimization is still viable, we compared the performance of the interior point algorithm using adjoint sensitivity analysis with the BFGS approximation of the Hessian to the performance of the trust-region reflective algorithm using forward sensitivity analysis with Fisher Information Matrix as approximation of the Hessian. For both algorithms we used the MATLAB implementation in fmincon.m. The employed setup of the trust-region algorithm is equivalent to the use of lsqnonlin.m which is the default optimization algorithm in the MATLAB toolbox Data2Dynamics [7], which was employed to win several DREAM challenges. For the considered model the computation time of forward sensitivities is comparable in Data2Dynamics and AMICI. Therefore, we expect that Data2Dynamics would perform similar to the trust-region reflective algorithm coupled to forward sensitivity analysis.\n\nWe evaluated the performance for the model of ErbB signaling based on 100 multi-starts which were initialized at the same initial points for both optimization methods. For 41 out of 100 initial points the gradient could not be evaluated due numerical problems. These optimization runs are omitted in all further analysis. To limit the expected computation to a bearable amount we allowed a maximum of 10 iterations for the forward sensitivity approach and 500 iterations for the adjoint sensitivity approach. As the previously observed speedup in gradient computation was roughly 48 fold, we expected this setup should yield similar computation times for both approaches.\n\nWe found that for the considered number of iterations, both approaches perform similar in terms of objective function value compared across iterations (Fig 4a and 4b). However, the computational cost of one iteration was much cheaper for the optimizer using adjoint sensitivity analysis. Accordingly, given a fixed computation time the interior-point method using adjoint sensitivities outperforms the trust-region method employing forward sensitivities and the FIM (Fig 4c and 4d). In the allowed computation time, the interior point algorithm using adjoint sensitivities could reduce the objective function by up to two orders of magnitude (Fig 4c). This was possible although many model parameters seem to be non-identifiable (see S1 Supporting Information Section 4), which can cause problems.\n\nFor local optimization using forward sensitivity analysis (trust-region method) and local optimization using adjoint sensitivity analysis (interior-point method) we quantified the computation time across 100 local optimization runs with different initial conditions. For 41 out of 100 initial points the gradient could not be evaluated due to numerical problems. These optimization runs are omitted in all further analysis. (a,c) Comparison of objective function value with respect to iteration number and computation time. The hulls and medians computed for both methods are depicted as shaded areas and solid lines. (b,d) Pairwise comparison of objective function value after 10 iterations and 5 hours for both methods. Each dot corresponds to one initial point for the optimization. The coloring indicates which method performed better. (e) Pairwise comparison of the time required to reach the final objective function value achieved in the forward approach. For the adjoint approach the equivalent time is the minimal time to reach the same objective function value. Each dot corresponds to one initial point for the optimization. (f) Histogram of speedup by using adjoint sensitivity analysis over forward sensitivity analysis for individual initial points, computed from (e). All computations were performed on a linux cluster. Runs with same initial conditions were carried out on the same computation node.\n\nhttps://doi.org/10.1371/journal.pcbi.1005331.g004\n\nTo quantify the speedup of the optimization using adjoint sensitivity analysis over the optimization using forward sensitivity analysis, we performed a pairwise comparison of the minimal time required by the adjoint sensitivity approach to reach the final objective function value of the forward sensitivity approach for the individual points (Fig 4e). The median speedup achieved across all multi-starts was 54 (Fig 4f), which was similar to the 48 fold speedup achieved in the gradient computation. The availability of the Fisher Information Matrix for forward sensitivities did not compensate for the significantly reduced computation time achieved using adjoint sensitivity analysis. This could be due to the fact that adjoint sensitivity based approach, being able to carry out many iterations in a short time-frame, can build a reasonable approximation of the Hessian approximation relatively fast.\n\nIn summary, this application demonstrates the applicability of adjoint sensitivity analysis for parameter estimation in large-scale biochemical reaction networks. Possessing similar accuracy as forward sensitivities, the scalability is improved which results in an increased optimizer efficiency. For the model of ErbB signaling, optimization using adjoint sensitivity analysis outperformed optimization using forward sensitivity analysis.\n\nDiscussion\n\nMechanistic mathematical modeling at the genome scale is an important step towards a holistic understanding of biological processes. To enable modeling at this scale, scalable computational methods are required which are applicable to networks with thousands of compounds. In this manuscript, we present a gradient computation method which meets this requirement and which renders parameter estimation for large-scale models significantly more efficient. Adjoint sensitivity analysis, which is extensively used in other research fields, is a powerful tool for estimating parameters of large-scale ODE models of biochemical reaction networks.\n\nOur study of several benchmark models with up to 500 state variables and up to 1801 parameters demonstrated that adjoint sensitivity analysis provides accurate gradients in a computation time which is much lower than for established methods and effectively independent of the number of parameters. To achieve this, the adjoint state is computed using a piece-wise continuous backward differential equation. This backward differential equation has the same dimension as the original model, yet the computation time required to solve it usually is slightly larger. As a result, finite differences and forward sensitivity analysis might be more efficient if the sensitivities with respect to a few parameters are required. The same holds for alternatives like complex-step derivative approximation techniques [51] and forward-mode automatic differentiation [28, 52]. For systems with many parameters, adjoint sensitivity analysis is advantageous. A scalable alternative might be reverse-mode automatic differentiation [28, 53], which remains to be evaluated for the considered class of problems.\n\nFor the model of ErbB signaling we could show that adjoint sensitivity based optimization outperforms forward sensitivity based optimization, which is the standard in most systems biology toolboxes. With the availability of the MATLAB toolbox AMICI the adjoint sensitivity based approach becomes accessible for other researchers. AMICI allows for the fully automated generation of executables for adjoint or forward sensitivity analysis from symbolic model definitions. This way, the toolbox is easy-to-use and can easily be integrated with existing toolboxes. Also other MATLAB toolboxes for computational modeling, e.g. AMIGO [6], Data2Dynamics [7], MEIGO [54] and SBtoolbox2 [55] could be extended to exploit adjoint sensitivity analysis. In addition to adjoint sensitivity analysis, these MATLAB toolboxes could exploit forward sensitivity analysis available via AMICI, as AMICI yields computation times comparable to those of tailored numerical methods such as odeSD [56] (S1 Supporting Information Section 5) or Data2Dynamics [7]. Moreover AMICI comes with detailed documentation and is already now used by several research labs.\n\nOur study of the model of ErbB signaling suggests that for the available data, a large number of parameters remains non-identifiable. While novel technologies provide rich dataset, we expect that non-identifiability will remain a problem. In particular if merely relative measurements are available, as the case for many measurement techniques, additional unknown scaling factors need to be introduced. These scaling factors are, in combination with initial conditions and total abundances, often the source of practical and structural non-identifiabilites [18]. Fortunately, for a broad range of biological questions, these information are not necessary and also state-of-the-art methods optimization seem to work reasonably well in the presence of non-identifiabilities. For the considered model of EreB signaling, we were able to achieve a significant decrease in the objective function value, despite the non-identifiability of parameters. This demonstrates that gradient based optimization is still feasible for large-scale problems. Yet, we believe that convergence of the optimizer could be improved by regularizing the objective function by integrating prior knowledge, possibly in a Bayesian framework [57], from databases such as SABIO-RK [58] or BRENDA [59].\n\nBeyond the use in optimization, gradients computed using adjoint sensitivity analysis will also facilitate the development of more efficient uncertainty analysis methods. Riemann manifold Langevin and Hamiltonian Monte Carlo methods [60, 61] exploit the first and second order local structure of the posterior distribution and profit from more efficient gradient evaluation. The same holds for novel emulator-based sampling procedures [62] and approaches for posterior approximation [63]. By exploiting the proposed approach, rigorous Bayesian parameter estimation for models with hundreds of parameters could become a standard tool instead of an exception [64, 65].\n\nIn conclusion, adjoint sensitivity analysis will facilitate the development of large- and genome-scale mechanistic models for cellular processes as well as other (multi-scale) biological processes [66]. This will complement available statistical analysis methods for omics data [67] by providing mechanistic insights and render a holistic understanding feasible.\n\nSupporting Information\n\nS1 Supporting Information. Supplementary notes regarding sensitivity analysis and additional numerical examples.\n\nThis document provides a detailed derivation of forward and adjoint sensitivity analysis and one additional numerical example for the comparision to the MATLAB toolbox odeSD.\n\nhttps://doi.org/10.1371/journal.pcbi.1005331.s001\n\n(PDF)\n\nS1 Code. MATLAB code.\n\nThis zip-file contains the MATLAB code for the simulation and application examples presented in the paper. We provide implementations of all models, parameter estimation to allow everybody to reproduce the results.\n\nhttps://doi.org/10.1371/journal.pcbi.1005331.s002\n\n(ZIP)\n\nAuthor Contributions\n\nConceived and designed the experiments: FF JH.\n\nPerformed the experiments: FF.\n\nAnalyzed the data: FF JH BK.\n\nWrote the paper: FF BK FJT JH.\n\nReferences\n\n1. Soon WW, Hariharan M, Snyder MP. High-throughput sequencing for biology and medicine. Mol Syst Biol; 2013;9(640). pmid:23340846\n\n2. Chen R et al. Personal omics profiling reveals dynamic molecular and medical phenotypes. Cell; 2012;148(6):1293‚Äì1307. pmid:22424236\n\n3. Ciriello G, Miller ML, Aksoy BA, Senbabaoglu Y, Schultz N, Sander C. Emerging landscape of oncogenic signatures across human cancers. Nat Gen; 2013;45(10):1127‚Äì1133.\n\n4. Kitano H. Computational Systems Biology. Nature; 2002;420(6912):206‚Äì210. pmid:12432404\n\n5. Hoops S, Sahle S, Gauges R, Lee C, Pahle J, Simus N, et al. COPASI‚Äîa COmplex PAthway SImulator. Bioinf; 2006;22:3067‚Äì3074.\n\n6. Balsa-Canto E, Banga JR. AMIGO, a toolbox for advanced model identification in systems biology using global optimization. Bioinf; 2011;27(16):2311‚Äì2313.\n\n7. Raue A, Steiert B, Schelker M, Kreutz C, Maiwald T, Hass H, et al. Data2Dynamics: a modeling environment tailored to parameter estimation in dynamical systems. Bioinf; 2015;31(21):3558‚Äì3560.\n\n8. Kanehisa M, Goto S. KEGG: Kyoto Encyclopedia of Genes and Genomes. Nucleic Acids Res; 2000;28(1):27‚Äì30. pmid:10592173\n\n9. Croft D, O‚ÄôKelly G, Wu G, Haw R, Gillespie M, Matthews L, et al. Reactome: a database of reactions, pathways and biological processes. Nucleic Acids Res; 2011;39(Database issue):D691‚Äì7. pmid:21067998\n\n10. Franceschini A, Szklarczyk D, Frankild S, Kuhn M, Simonovic M, Roth A, et al. STRING v9.1: protein-protein interaction networks, with increased coverage and integration. Nucleic Acids Res; 2013;41(Database issue):D808‚Äì15. pmid:23203871\n\n11. B√ºchel F, Rodriguez N, Swainston N, Wrzodek C, Czauderna T, Keller R, et al. Path2Models: large-scale generation of computational models from biochemical pathway maps. BMC Syst Biol; 2013;7(116).\n\n12. Thiele I, Swainston N, Fleming RMT, Hoppe A, Sahoo S, Aurich MK, et al. A community-driven global reconstruction of human metabolism. Nat Biotechnol; 2013;31(5):419‚Äì25. pmid:23455439\n\n13. Ganter M, Kaltenbach HM, Stelling J. Predicting network functions with nested patterns. Nat Commun; 2014;5:3006. pmid:24398547\n\n14. Dr√§ger A, Zielinski DC, Keller R, Rall M, Eichner J, Palsson BO, et al. SBMLsqueezer 2: context-sensitive creation of kinetic equations in biochemical networks. BMC Syst Biol; 2015;9:68. pmid:26452770\n\n15. Stanford NJ, Lubitz T, Smallbone K, Klipp E, Mendes P, Liebermeister W. Systematic construction of kinetic models from genome-scale metabolic networks. PLoS ONE; 2013;8(11):e79195. pmid:24324546\n\n16. Villaverde AF, Bongard S, Mauch K, M√ºller D, Balsa-Canto E, Schmid J, et al. A consensus approach for estimating the predictive accuracy of dynamic models in biology. Computer Methods and Programs in Biomedicine; 2015;119(1):17‚Äì28. pmid:25716416\n\n17. Hadamard J. Sur les probl√©mes aux d√©riv√©es partielles et leur signification physique. In: Princeton University Bulletin; 1902. p. 49‚Äì52.\n\n18. Raue A, Schilling M, Bachmann J, Matteson A, Schelke M, Kaschek D, et al. Lessons learned from quantitative dynamical modeling in systems biology. PLoS ONE; 2013;8(9):e74335. pmid:24098642\n\n19. B√§ck T. Evolutionary algorithms in theory and practice: evolution strategies, evolutionary programming, genetic algorithms. New York and Oxford: Oxford University Press; 1996.\n\n20. Yang XS. Nature-inspired metaheuristic algorithms. 2nd ed. Bristol, UK: Luniver Press; 2010.\n\n21. Kirkpatrick S, Gelatt CD Jr, M P Vecchi MP. Optimization by simulated annealing. Science; 1983;220(4598):671‚Äì680. pmid:17813860\n\n22. Balsa-Canto E, Peifer M, Banga JR, Timmer J, Fleck C. Hybrid optimization method with general switching strategy for parameter estimation. BMC Syst Biol; 2008;2(26). pmid:18366722\n\n23. Vaz A, Vicente L. A particle swarm pattern search method for bound constrained global optimization. J Global Optim; 2007;39(2):197‚Äì219.\n\n24. Moles CG, Mendes P, Banga JR. Parameter estimation in biochemical pathways: A comparison of global optimization methods. Genome Res; 2003;13:2467‚Äì2474. pmid:14559783\n\n25. Banga JR. Optimization in computational systems biology. BMC Syst Biol; 2008;2(47).\n\n26. Weise T. Global Optimization Algorithms: Theory and Application. Nature Inspired Computation and Applications Laboratory (NICAL), University of Science and Technology, China; 2009.\n\n27. Villaverde AF, Henriques D, Smallbone K, Bongard S, Schmid J, Cicin-Sain D, et al. BioPreDyn-bench: a suite of benchmark problems for dynamic modelling in systems biology. BMC Syst Biol; 2015;9(8). pmid:25880925\n\n28. Griewank A, Walther A. Evaluating Derivatives. 2nd ed. Society for Industrial and Applied Mathematics; 2008.\n\n29. Nocedal J, Wright S. Numerical optimization. Springer Science & Business Media; 2006.\n\n30. Hindmarsh AC, Brown PN, Grant KE, Lee SL, Serban R, Shumaker DE, et al. SUNDIALS: Suite of Nonlinear and Differential/Algebraic Equation Solvers. ACM T Math Software; 2005;31(3):363‚Äì396.\n\n31. Lu J, Muller S, Machn√© R, Flamm C. SBML ODE Solver library: Extensions for inverse analysis. In: Proceedings of the Fifth International Workshop on Computational Systems Biology, WCSB; 2008.\n\n32. Fujarewicz K, Kimmel M, Swierniak A. On fitting of mathematical models of cell signaling pathways using adjoint systems. MBE; 2005;2(3):527‚Äì534. pmid:20369938\n\n33. Lu J, August E, Koeppl H. Inverse problems from biomedicine: Inference of putative disease mechanisms and robust therapeutic strategies. J Math Biol; 2012;67(1):143‚Äì168. pmid:22526835\n\n34. Hanke M, Scherzer O. Inverse problems light: Numerical differentiation. The American Mathematical Monthly; 2001;108(6):512‚Äì521.\n\n35. Plessix RE. A review of the adjoint-state method for computing the gradient of a functional with geophysical applications. Geophys J Int; 2006;167(2):495‚Äì503.\n\n36. Leonhardt C, Schwake G, St√∂gbauer TR, Rappl S, Kuhr JT, Ligon TS, et al. Single-cell mRNA transfection studies: Delivery, kinetics and statistics by numbers. Nanomedicine: Nanotechnology, Biology, and Medicine; 2014;10(4):679‚Äì688.\n\n37. Li C, Donizelli M, Rodriguez N, Dharuri H, Endler L, Chelliah V, et al. BioModels Database: An enhanced, curated and annotated resource for published quantitative kinetic models. BMC Syst Biol; 2010;4:92. pmid:20587024\n\n38. Smith GR, Shanley DP. Computational modelling of the regulation of Insulin signalling by oxidative stress. BMC Syst Biol; 2013;7(1):1.\n\n39. K√ºhn C, Wierling C, K√ºhn A, Klipp E, Panopoulou G, Lehrach H, et al. Monte carlo analysis of an ode model of the sea urchin endomesoderm network. BMC Syst Biol; 2009;3(1):1.\n\n40. Chen WW, Schoeberl B, Jasper PJ, Niepel M, Nielsen UB, Lauffenburger DA, et al. Input‚Äìoutput behavior of ErbB signaling pathways as revealed by a mass action model trained against dynamic data. Mol Syst Biol; 2009;5(239).\n\n41. Chassagnole C, Noisommit-Rizzi N, Schmid JW, Mauch K, Reuss M. Dynamic modeling of the central carbon metabolism of Escherichia coli. Biotechnol Bioeng; 2002;79(1):53‚Äì73. pmid:17590932\n\n42. Kotte O, Zaugg JB, Heinemann M. Bacterial adaptation through distributed sensing of metabolic fluxes. Mol Syst Biol; 2010;6(1). pmid:20212527\n\n43. Villaverde AF, Bongard S, Mauch K, M√ºller D, Balsa-Canto E, Schmid J, et al. High-Confidence Predictions in Systems Biology Dynamic Models. In: 8th International Conference on Practical Applications of Computational Biology & Bioinformatics (PACBB 2014). Cham: Springer International Publishing; 2014. p. 161‚Äì171.\n\n44. MacNamara A, Terfve C, Henriques D, Bernab√© BP, Saez-Rodriguez J. State‚Äìtime spectrum of signal transduction logic models. Phys Biol; 2012;9(4):045003. pmid:22871648\n\n45. Smallbone K, Mendes P. Large-scale metabolic models: From reconstruction to differential equations. Ind Biotechnol; 2013;9(4):179‚Äì184.\n\n46. Longford NT. A fast scoring algorithm for maximum likelihood estimation in unbalanced mixed models with nested random effects. Biometrika; 1987;74(4):817‚Äì827.\n\n47. Fletcher R, Powell MJ. A rapidly convergent descent method for minimization. Comp J; 1963;6(2):163‚Äì168.\n\n48. Goldfarb D. A Family of Variable-Metric Methods Derived by Variational Means. Math Comp; 1970;24(109):23‚Äì26.\n\n49. Guay M, McLean DD. Optimization and sensitivity analysis for multiresponse parameter estimation in systems of ordinary differential equations. Comp and Chem Eng; 1995;19(12):1271‚Äì1285. An International Journal of Computer Application in Chemical Engineering.\n\n50. √ñzyurt DB, Barton PI. Cheap Second Order Directional Derivatives of Stiff ODE Embedded Functionals. SIAM Journal on Scientific Computing; 2005;26(5):1725‚Äì1743.\n\n51. Martins JRRA, Sturdza P, Alonso JJ. The complex-step derivative approximation. ACM Trans Math Softw; 2003;29:245‚Äì262.\n\n52. Chang YF, Corliss GF. ATOMFT: Solving ODEs and DAEs using Taylor series. Comp Math App; 1994;28(10‚Äì12):209‚Äì233.\n\n53. Linnainmaa S. Taylor expansion of the accumulated rounding error. BIT; 1976;16(2):146‚Äì160.\n\n54. Egea JA, Henriques D, Cokelaer T, Villaverde AF, MacNamara A, Danciu DP, et al. MEIGO: an open-source software suite based on metaheuristics for global optimization in systems biology and bioinformatics. BMC Bioinf; 2014;15(136).\n\n55. Schmidt H, Jirstrand M. Systems biology toolbox for MATLAB: a computational platform for research in systems biology. Bioinf; 2006;22(4):514‚Äì515.\n\n56. Gonnet P, Dimopoulos S, Widmer L, Stelling J. A specialized ODE integrator for the efficient computation of parameter sensitivities. BMC Syst Biol; 2012;6(46). pmid:22607742\n\n57. G√°bor A, Banga JR. Robust and efficient parameter estimation in dynamic models of biological systems. BMC Syst Biol; 2015;9:74. pmid:26515482\n\n58. Wittig U, Kania R, Golebiewski M, Rey M, Shi L, Jong L, et al. SABIO-RK‚Äîdatabase for biochemical reaction kinetics. Nucl Acids Res; 2012;40(D1):D790‚ÄìD796. pmid:22102587\n\n59. Chang A, Scheer M, Grote A, Schomburg I, Schomburg D. BRENDA, AMENDA and FRENDA the enzyme information system: new content and tools in 2009. Nucleic Acids Res; 2009;37(Database issue):D588‚Äì92. pmid:18984617\n\n60. Neal RM. MCMC using Hamiltonian dynamics. In: Brooks S, Gelman A, Jones G, Meng XL, editors. Handbook of Markov Chain Monte Carlo. London, United Kingdom: Chapman & Hall / CRC Press; 2011.\n\n61. Girolami M, Calderhead B. Riemann manifold Langevin and Hamiltonian Monte Carlo methods. J R Statist Soc B; 2011;73(2):123‚Äì214.\n\n62. Lan S, Bui-Thanh T, Christie M, Girolami M. Emulation of higher-order tensors in manifold Monte Carlo methods for Bayesian inverse problems. arXiv; 2015. arXiv:1507.06244v2 [stat.CO].\n\n63. Fr√∂hlich F, Hross S, Theis FJ, Hasenauer J. Radial basis function approximation of Bayesian parameter posterior densities for uncertainty analysis. In: Mendes P, Dada JO, Smallbone KO, editors. Proceedings of the 12th International Conference on Computational Methods in Systems Biology (CMSB 2014), Manchester, UK. Lecture Notes in Bioinformatics. Springer International Publishing Switzerland; 2014. p. 73‚Äì85.\n\n64. Xu TR, Vyshemirsky V, Gormand A, von Kriegsheim A, Girolami M, Baillie GS, et al. Inferring signaling pathway topologies from multiple perturbation measurements of specific biochemical species. Sci Signal; 2010;3(113):ra20.\n\n65. Hug S, Raue A, Hasenauer J, Bachmann J, Klingm√ºller U, Timmer J, et al. High-dimensional Bayesian parameter estimation: Case study for a model of JAK2/STAT5 signaling. Math Biosci; 2013;246(2):293‚Äì304. pmid:23602931\n\n66. Hasenauer J, Jagiella N, Hross S, Theis FJ. Data-driven modelling of biological multi-scale processes. Journal of Coupled Systems and Multiscale Dynamics; 2015;3(2):101‚Äì121.\n\n67. Berger B, Peng J, Singh M. Computational solutions for omics data. Nat Rev Genet; 2013;14(5):333‚Äì346. pmid:23594911"
    }
}