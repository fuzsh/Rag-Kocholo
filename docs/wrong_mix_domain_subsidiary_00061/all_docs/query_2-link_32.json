{
    "id": "wrong_mix_domain_subsidiary_00061_2",
    "rank": 32,
    "data": {
        "url": "https://blog.payara.fish/how-to-deploy-an-application-on-payara-server-5",
        "read_more_link": "",
        "language": "en",
        "title": "How to Deploy an Application on Payara Server 5",
        "top_image": "https://blog.payara.fish/hubfs/back%20to%20basics.jpg",
        "meta_img": "https://blog.payara.fish/hubfs/back%20to%20basics.jpg",
        "images": [
            "https://334594.fs1.hubspotusercontent-na1.net/hub/334594/hubfs/jonblogpic.jpg?width=200&name=jonblogpic.jpg",
            "https://no-cache.hubspot.com/cta/default/334594/39319061-9b0e-4e3b-ae3c-03f0b547d094.png",
            "https://blog.payara.fish/hubfs/deployapplication.png",
            "https://blog.payara.fish/hubfs/listapplications.png",
            "https://blog.payara.fish/hubfs/clusterjsp_application.png",
            "https://blog.payara.fish/hubfs/undeploy_application.png",
            "https://blog.payara.fish/hubfs/deploy_clsuterjsp_adminconsole.png",
            "https://blog.payara.fish/hubfs/autodeploy_copy_clusterjsp.png",
            "https://blog.payara.fish/hubfs/remove_autodeploy_clusterjsp.png",
            "https://no-cache.hubspot.com/cta/default/334594/7a5cce4a-1c08-4a04-a259-3c85c1934c9d.png",
            "https://blog.payara.fish/hs-fs/hubfs/flight.jpeg?width=500&name=flight.jpeg",
            "https://blog.payara.fish/hs-fs/hubfs/Adding%20Payara%20Server%20to%20the%20Visual%20Studio%20Code-14.png?width=500&name=Adding%20Payara%20Server%20to%20the%20Visual%20Studio%20Code-14.png",
            "https://no-cache.hubspot.com/cta/default/334594/interactive-171222903711.png",
            "https://blog.payara.fish/hubfs/__Payara_theme_template_files/nav/award.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Jonathan Coustick"
        ],
        "publish_date": "2020-02-13T10:30:00+00:00",
        "summary": "",
        "meta_description": "To run a web application, it must be first deployed on an application server such as Payara Server. Here are a few different ways to get your app running.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://blog.payara.fish/how-to-deploy-an-application-on-payara-server-5",
        "text": "This is Part 2 of our Payara Server - Back to Basics series, see Part 1 - Installing Payara Server on Ubuntu here.\n\nIn order for a web application to run, it must be first deployed on an application server such as Payara Server. Deployment in the context of web applications is the act of installing the application on a server. It allows requests to be handled and so on. This guide will provide you with a few different ways to get your application running.\n\nIf you're currently on GlassFish and want to try deploying an application to Payara Server, migrating is relatively painless! Check out our migration guide:\n\nSetup\n\n1) For simplicity, this demonstration will be using a sample application called clusterjsp.war, the source code of which can be downloaded from:https://github.com/eclipse-ee4j/glassfish-samples/tree/master/ws/javaee6/ha/clusterjsp.\n\n2) Place your application or the hello application into a directory of your choosing. Lets refer to this directory as sample-dir .\n\n3) Before you begin to deploy any application, at least one Payara Server / GlassFish domain must be started. For guidance on how to do this refer to my previous GlassFish Back to Basics blog at https://blog.payara.fish/back-to-basics-installing-payara-server-5-on-ubuntu .\n\nDeploying an Application from the Command Line\n\n1) Use the asadmin deploy command in your shell box. The form of the command is as follows:\n\ninstall-directory/bin/asadmin deploy sample-dir/war-name\n\n(install-directory is where Payara Server is installed)\n\n2) To list the deployed application, use the list-applications command as shown below\n\n3) To access the application, navigate to http://localhost:8080/clusterjsp/ to see this page:\n\nUndeploying an Application from the Command Line\n\n1) In this case, use the undeploy command as similarly done for deploy:\n\ninstall-directory/bin/asadmin undeploy war-name\n\nHowever, for war-name, omit the .war extension and refer to it by just the name. For example:\n\nDeploying an Application from the Administration Console\n\n1) Access the administration console by navigating to http://localhost:4848 (make sure a domain is running beforehand).\n\n2) Click on applications under the heading common tasks on the left side of the page.\n\n3) Any deployed applications are listed here. Since there are none right now, click on deploy.\n\n4) The current display should be the deploy applications or modules page. There are two options available. Select Packaged File to be Uploaded to the Server and click browse. Navigate to where your application is located. Select the file and click open. You should be returned to the same page with some settings listed below. If the steps have been done correctly, it should look like this:\n\n5) Change any settings if needed otherwise accept the default settings and click ok to be returned to the applications page. Your application should now be listed.6) Finally, under the action tab click launch. The default URL for the application is http://localhost:8080/appname In this case http://localhost:8080/clusterjsp.\n\nUndeploying an Application from the Administration Console\n\n1) Go to http://localhost:4848 .\n\n2) Click on applications under the common tasks header.\n\n3) Select the check box next to the application you wish to undeploy.\n\n4) To undeploy the application – click undeploy. To disable the application – click disable.\n\nDeploying an Application Automatically\n\n1) Make sure a domain is at least running. Copy your application to theinstall-directory/glassfish/domains/domain-name/autodeploy directory. The default domain is called domain1.Doing the same step in terminal is shown as follows:\n\n2) Finally go to http://localhost:8080/hello to access your application.\n\nUndeploy an Application Automatically\n\n1) Simply delete the application file from the directory. In terminal :\n\nAnd that's all! Want a complete, step-by-step guide to getting started with the Payara Platform? We've got an online and printable guide for that:"
    }
}