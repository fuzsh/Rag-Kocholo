{
    "id": "wrong_mix_domain_subsidiary_00061_3",
    "rank": 15,
    "data": {
        "url": "https://spring.io/projects/spring-cloud-alibaba",
        "read_more_link": "",
        "language": "en",
        "title": "Spring Cloud Alibaba",
        "top_image": "https://spring.io/img/og-spring.png",
        "meta_img": "https://spring.io/img/og-spring.png",
        "images": [
            "https://spring.io/img/logos/spring-initializr.svg",
            "https://spring.io/img/extra/footer.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Level up your Java code and explore what Spring can do for you.",
        "meta_lang": "en",
        "meta_favicon": "/favicon-32x32.png?v=96334d577af708644f6f0495dd1c7bc8",
        "meta_site_name": "Spring Cloud Alibaba",
        "canonical_link": "https://spring.io/projects/spring-cloud-alibaba",
        "text": "Spring Cloud Alibaba (https://sca.aliyun.com/en-us/) provides a one-stop solution for distributed application development. It contains all the components required to develop distributed applications, making it easy for you to develop your applications using Spring Cloud.\n\nWith Spring Cloud Alibaba, you only need to add some annotations and a small amount of configurations to connect Spring Cloud applications to the distributed solutions of Alibaba, and build a distributed application system with Alibaba middleware.\n\nFeatures\n\nSpring Cloud\n\nFlow control and service degradation：flow control, circuit breaking and system adaptive protection with Alibaba Sentinel\n\nService registration and discovery：instances can be registered with Alibaba Nacos and clients can discover the instances using Spring-managed beans. Supports Ribbon, the client side load-balancer via Spring Cloud Netflix\n\nDistributed Configuration：using Alibaba Nacos as a data store\n\nEvent-driven：building highly scalable event-driven microservices connected with Spring Cloud Stream RocketMQ Binder\n\nMessage Bus: link nodes of a distributed system with Spring Cloud Bus RocketMQ\n\nDistributed Transaction：support for distributed transaction solution with high performance and ease of use with Seata\n\nDubbo RPC：extend the communication protocols of Spring Cloud service-to-service calls by Apache Dubbo RPC\n\nSpring Boot\n\nAll the Spring Boot Starters are maintained in Alibaba Cloud Spring Boot Project.\n\nSpring Boot Starter for Alibaba Cloud Object Storage Service\n\nSpring Boot Starter for Alibaba Cloud Short Message Service\n\nSpring Boot Starter for Alibaba Cloud Redis\n\nSpring Boot Starter for Alibaba Cloud RDS MySQL\n\nSpring Boot Starter for Alibaba Cloud SchedulerX\n\nGetting Started\n\nThe easiest way to get started is by including the Spring Cloud BOM and then adding spring-cloud-alibaba-dependencies to your application’s classpath. If you don’t want to include all of the Spring Cloud Alibaba features you can add individual starters for the features you would like.\n\nThe spring-cloud-alibaba-dependencies dependency in pom:\n\n<dependencyManagement> <dependencies> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-alibaba-dependencies</artifactId> <version>{project-version}</version> <type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement>\n\nIf you want to use Spring Boot Starters for Alibaba Cloud services, you should add the Aliyun Spring Boot BOM to your pom.xml:\n\n<dependencyManagement> <dependencies> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>aliyun-spring-boot-dependencies</artifactId> <version>{project-version}</version> <type>pom</type> <scope>import</scope> </dependency> </dependencies> </dependencyManagement>\n\nRun your Spring Boot/Cloud applications on Alibaba Cloud\n\nEnterprise Distributed Application Service (EDAS) is a platform as a service (PaaS) service for application hosting and microservice management, providing full-stack solutions such as application development, deployment, monitoring, and O&M. It supports Apache Dubbo, Spring Cloud, and other microservice runtime environments, helping you easily migrate applications to Alibaba Cloud.\n\nFollow this tutorial to prepare a Java Spring Boot/Cloud application for deployment in EDAS.\n\nMicroServices Engine (MSE) is a microservices platform for the mainstream open source microservices frameworks Spring Cloud, including governance center and full managed registration/configuration center such as Zookeeper, Eureka and Nacos.\n\nYour application can enjoy the comprehensive microservices governance capability provided by the product without modifying the code and configuration through javaagent technology.\n\nMSE also provides highly available, operation and maintenance free clusters such as zookeeper, Nacos and Eureka, fully compatible with the standard interface of open source products by hosting registration / configuration center."
    }
}