{
    "id": "wrong_mix_domain_subsidiary_00061_3",
    "rank": 49,
    "data": {
        "url": "https://cloud.google.com/build/docs/deploying-builds/deploy-appengine",
        "read_more_link": "",
        "language": "en",
        "title": "Deploying to App Engine",
        "top_image": "https://cloud.google.com/_static/cloud/images/social-icon-google-cloud-1200-630.png",
        "meta_img": "https://cloud.google.com/_static/cloud/images/social-icon-google-cloud-1200-630.png",
        "images": [
            "https://www.gstatic.com/devrel-devsite/prod/v1698cdd3153b47734bb6d9d8688c4490898207543be76b2c5805f109c27c7695/cloud/images/cloud-logo.svg",
            "https://www.gstatic.com/devrel-devsite/prod/v1698cdd3153b47734bb6d9d8688c4490898207543be76b2c5805f109c27c7695/cloud/images/cloud-logo.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://www.gstatic.com/devrel-devsite/prod/v1698cdd3153b47734bb6d9d8688c4490898207543be76b2c5805f109c27c7695/cloud/images/favicons/onecloud/favicon.ico",
        "meta_site_name": "Google Cloud",
        "canonical_link": "https://cloud.google.com/build/docs/deploying-builds/deploy-appengine",
        "text": "This page explains how to deploy applications to App Engine using Cloud Build. If you're new to Cloud Build, read the quickstarts and the build configuration overview first.\n\nApp Engine is a fully managed, serverless platform for developing and hosting web applications at scale. For more information on App Engine, read the App Engine documentation.\n\nBefore you begin\n\nEnable the App Engine API:\n\nEnable the App Engine API\n\nTo run the gcloud commands on this page, install the Google Cloud CLI.\n\nHave your application source code that you want to build and deploy to App Engine handy. Your source code needs to be stored in a repository, such as Cloud Source Repositories, GitHub, or Bitbucket.\n\nRequired IAM permissions\n\nGrant the App Engine Admin role and Service Account User to the Cloud Build service account:\n\nOpen the Cloud Build Settings page:\n\nOpen the Cloud Build Settings page\n\nSet the status of the App Engine Admin role and the Service Account User role to Enabled.\n\nConfiguring the deployment\n\nCloud Build enables you to use any publicly available container image to execute your tasks. You can do this by specifying the image in a build step in the Cloud Build config file.\n\nApp Engine provides the gcloud app deploy command, which builds an image with your source code and deploys that image on App Engine. You can use the cloud-sdk image as a build step in your config file to invoke gcloud commands within the image. Arguments passed to this build step are passed to the gcloud CLI directly, allowing you to run any gcloud command in this image.\n\nTo deploy an application to App Engine, use the following steps:\n\nCreate a Cloud Build configuration file named cloudbuild.yaml or cloudbuild.json.\n\nIn the config file:\n\nAdd a name field to specify the cloud-sdk build step.\n\nAdd an entrypoint field to use the bash tool when cloud-sdk is invoked.\n\nIn the args field, invoke the gcloud app deploy command and set a timeout for App Engine to use when it invokes Cloud Build. This is required because Cloud Build build steps and builds have a default timeout of 10 minutes and App Engine deployments could take longer than that to complete. Specifying a longer timeout will make sure that the build doesn't timeout if gcloud app deploy takes longer than 10 minutes to complete.\n\nTimeout errors when using the App Engine standard environment: You can configure timeouts as described here only when using the App Engine flexible environment. The App Engine standard environment does not allow the build timeout to be configured. If you're using Cloud Build for deploying on the App Engine standard environment, and your build is failing with a timeout error, consider using the App Engine flexible environment or Cloud Run instead of the App Engine standard environment.\n\nAdd a build timeout value of more than 10 minutes.\n\nYAML\n\nsteps: - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk' entrypoint: 'bash' args: ['-c', 'gcloud config set app/cloud_build_timeout 1600 && gcloud app deploy'] timeout: '1600s'\n\nJSON\n\n{ \"steps\": [ { \"name\": \"gcr.io/google.com/cloudsdktool/cloud-sdk\", \"entrypoint\": \"bash\", \"args\": [ \"-c\", \"gcloud config set app/cloud_build_timeout 1600 && gcloud app deploy\" ] } ], \"timeout\": \"1600s\" }\n\nStart the build, where SOURCE_DIRECTORY is the path or URL to the source code and REGION is one of the supported build regions to start the build:\n\ngcloud builds submit --region=REGION SOURCE_DIRECTORY\n\nContinuous deployment\n\nYou can automate the deployment of your software to App Engine by creating Cloud Build triggers. You can configure your triggers to build and deploy images whenever you update your source code.\n\nTo automate your deployment to App Engine:\n\nIn your repository, add a config file with steps to invoke the gcloud app deploy command:\n\nYAML\n\nsteps: - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk' entrypoint: 'bash' args: ['-c', 'gcloud config set app/cloud_build_timeout 1600 && gcloud app deploy'] timeout: '1600s'\n\nJSON\n\n{ \"steps\": [ { \"name\": \"gcr.io/google.com/cloudsdktool/cloud-sdk\", \"entrypoint\": \"bash\", \"args\": [ \"-c\", \"gcloud config set app/cloud_build_timeout 1600 && gcloud app deploy\" ] } ], \"timeout\": \"1600s\" }\n\nCreate a build trigger with the config file created in the previous step:\n\nOpen the Triggers page in the Google Cloud console:\n\nOpen Triggers page\n\nSelect your project from the project selector drop-down menu at the top of the page.\n\nClick Open.\n\nClick Create trigger.\n\nOn the Create trigger page, enter the following settings:\n\nEnter a name for your trigger.\n\nSelect the repository event to start your trigger.\n\nSelect the repository that contains your source code and build config file.\n\nSpecify the regex for the branch or tag name that will start your trigger.\n\nConfiguration: Choose the build config file you created previously.\n\nClick Create to save your build trigger.\n\nAnytime you push new code to your repository, you will automatically start a build and deploy on App Engine.\n\nFor more information on creating Cloud Build triggers, see Creating and managing build triggers.\n\nWhat's next"
    }
}