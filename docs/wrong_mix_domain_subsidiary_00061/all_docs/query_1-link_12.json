{
    "id": "wrong_mix_domain_subsidiary_00061_1",
    "rank": 12,
    "data": {
        "url": "https://cloud.google.com/kms/docs/create-key-ring",
        "read_more_link": "",
        "language": "en",
        "title": "Create a key ring",
        "top_image": "https://cloud.google.com/_static/cloud/images/social-icon-google-cloud-1200-630.png",
        "meta_img": "https://cloud.google.com/_static/cloud/images/social-icon-google-cloud-1200-630.png",
        "images": [
            "https://www.gstatic.com/devrel-devsite/prod/v1698cdd3153b47734bb6d9d8688c4490898207543be76b2c5805f109c27c7695/cloud/images/cloud-logo.svg",
            "https://www.gstatic.com/devrel-devsite/prod/v1698cdd3153b47734bb6d9d8688c4490898207543be76b2c5805f109c27c7695/cloud/images/cloud-logo.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "This page shows you how to create a key ring in Cloud KMS to contain and organize your keys.",
        "meta_lang": "en",
        "meta_favicon": "https://www.gstatic.com/devrel-devsite/prod/v1698cdd3153b47734bb6d9d8688c4490898207543be76b2c5805f109c27c7695/cloud/images/favicons/onecloud/favicon.ico",
        "meta_site_name": "Google Cloud",
        "canonical_link": "https://cloud.google.com/kms/docs/create-key-ring",
        "text": "Stay organized with collections Save and categorize content based on your preferences.\n\nThis page shows you how to create a key ring in Cloud KMS. A key ring is the root resource for Cloud KMS keys and key versions. Each key ring exists within a given location. For more information about Cloud KMS resources, see Cloud KMS resources.\n\nBefore you begin\n\nBefore completing the tasks on this page, you need the following:\n\nA Google Cloud project resource to contain your Cloud KMS resources. This project is called your key project. We recommend that your key project does not contain any other Google Cloud resources. Enable the Cloud KMS API on your key project.\n\nEnable the API\n\nThe name of the location where you want to create your key ring. Choose a location that is near your other resources and that supports your chosen protection level. To view available locations and the protection levels they support, see Cloud KMS locations.\n\nRequired roles\n\nTo get the permissions that you need to create key rings, ask your administrator to grant you the Cloud KMS Admin (roles/cloudkms.admin) IAM role on the project or a parent resource. For more information about granting roles, see Manage access.\n\nThis predefined role contains the permissions required to create key rings. To see the exact permissions that are required, expand the Required permissions section:\n\nRequired permissions\n\nThe following permissions are required to create key rings:\n\ncloudkms.keyRings.create\n\ncloudkms.keyRings.get\n\ncloudkms.keyRings.list\n\ncloudkms.locations.get\n\ncloudkms.locations.list\n\nresourcemanager.projects.get\n\nYou might also be able to get these permissions with custom roles or other predefined roles.\n\nCreate a key ring\n\nFollow these steps to create a key ring for your new key. If you want to use an existing key ring instead, you can create a key.\n\nConsole\n\nGo to the Key Management page in the Google Cloud console.\n\nGo to Key Management\n\nClick Create key ring.\n\nFor Key ring name, enter a name for your key ring.\n\nFor Key ring location, select a location like \"us-east1\".\n\nClick Create.\n\ngcloud\n\nIn the Google Cloud console, activate Cloud Shell.\n\nActivate Cloud Shell\n\nIn your environment, run the gcloud kms keyrings create command:\n\ngcloud kms keyrings create KEY_RING \\ --location LOCATION\n\nReplace the following:\n\nKEY_RING: the name of the key ring that contains the key.\n\nLOCATION: the Cloud KMS location of the key ring.\n\nFor information on all flags and possible values, run the command with the --help flag.\n\nC#\n\nTo run this code, first set up a C# development environment and install the Cloud KMS C# SDK.\n\nusing Google.Api.Gax.ResourceNames; using Google.Cloud.Kms.V1; public class CreateKeyRingSample { public KeyRing CreateKeyRing( string projectId = \"my-project\", string locationId = \"us-east1\", string id = \"my-key-ring\") { // Create the client. KeyManagementServiceClient client = KeyManagementServiceClient.Create(); // Build the parent location name. LocationName locationName = new LocationName(projectId, locationId); // Build the key ring. KeyRing keyRing = new KeyRing { }; // Call the API. KeyRing result = client.CreateKeyRing(locationName, id, keyRing); // Return the result. return result; } }\n\nGo\n\nTo run this code, first set up a Go development environment and install the Cloud KMS Go SDK.\n\nimport ( \"context\" \"fmt\" \"io\" kms \"cloud.google.com/go/kms/apiv1\" \"cloud.google.com/go/kms/apiv1/kmspb\" ) // createKeyRing creates a new ring to store keys on KMS. func createKeyRing(w io.Writer, parent, id string) error { // parent := \"projects/PROJECT_ID/locations/global\" // id := \"my-key-ring\" // Create the client. ctx := context.Background() client, err := kms.NewKeyManagementClient(ctx) if err != nil { return fmt.Errorf(\"failed to create kms client: %w\", err) } defer client.Close() // Build the request. req := &kmspb.CreateKeyRingRequest{ Parent: parent, KeyRingId: id, } // Call the API. result, err := client.CreateKeyRing(ctx, req) if err != nil { return fmt.Errorf(\"failed to create key ring: %w\", err) } fmt.Fprintf(w, \"Created key ring: %s\\n\", result.Name) return nil }\n\nJava\n\nTo run this code, first set up a Java development environment and install the Cloud KMS Java SDK.\n\nimport com.google.cloud.kms.v1.KeyManagementServiceClient; import com.google.cloud.kms.v1.KeyRing; import com.google.cloud.kms.v1.LocationName; import java.io.IOException; public class CreateKeyRing { public void createKeyRing() throws IOException { // TODO(developer): Replace these variables before running the sample. String projectId = \"your-project-id\"; String locationId = \"us-east1\"; String id = \"my-asymmetric-signing-key\"; createKeyRing(projectId, locationId, id); } // Create a new key ring. public void createKeyRing(String projectId, String locationId, String id) throws IOException { // Initialize client that will be used to send requests. This client only // needs to be created once, and can be reused for multiple requests. After // completing all of your requests, call the \"close\" method on the client to // safely clean up any remaining background resources. try (KeyManagementServiceClient client = KeyManagementServiceClient.create()) { // Build the parent name from the project and location. LocationName locationName = LocationName.of(projectId, locationId); // Build the key ring to create. KeyRing keyRing = KeyRing.newBuilder().build(); // Create the key ring. KeyRing createdKeyRing = client.createKeyRing(locationName, id, keyRing); System.out.printf(\"Created key ring %s%n\", createdKeyRing.getName()); } } }\n\nNode.js\n\nTo run this code, first set up a Node.js development environment and install the Cloud KMS Node.js SDK.\n\n// // TODO(developer): Uncomment these variables before running the sample. // // const projectId = 'my-project'; // const locationId = 'us-east1'; // const id = 'my-key-ring'; // Imports the Cloud KMS library const {KeyManagementServiceClient} = require('@google-cloud/kms'); // Instantiates a client const client = new KeyManagementServiceClient(); // Build the parent location name const locationName = client.locationPath(projectId, locationId); async function createKeyRing() { const [keyRing] = await client.createKeyRing({ parent: locationName, keyRingId: id, }); console.log(`Created key ring: ${keyRing.name}`); return keyRing; } return createKeyRing();\n\nPHP\n\nTo run this code, first learn about using PHP on Google Cloud and install the Cloud KMS PHP SDK.\n\nuse Google\\Cloud\\Kms\\V1\\Client\\KeyManagementServiceClient; use Google\\Cloud\\Kms\\V1\\CreateKeyRingRequest; use Google\\Cloud\\Kms\\V1\\KeyRing; function create_key_ring( string $projectId = 'my-project', string $locationId = 'us-east1', string $id = 'my-key-ring' ): KeyRing { // Create the Cloud KMS client. $client = new KeyManagementServiceClient(); // Build the parent location name. $locationName = $client->locationName($projectId, $locationId); // Build the key ring. $keyRing = new KeyRing(); // Call the API. $createKeyRingRequest = (new CreateKeyRingRequest()) ->setParent($locationName) ->setKeyRingId($id) ->setKeyRing($keyRing); $createdKeyRing = $client->createKeyRing($createKeyRingRequest); printf('Created key ring: %s' . PHP_EOL, $createdKeyRing->getName()); return $createdKeyRing; }\n\nPython\n\nTo run this code, first set up a Python development environment and install the Cloud KMS Python SDK.\n\nfrom google.cloud import kms def create_key_ring( project_id: str, location_id: str, key_ring_id: str ) -> kms.CryptoKey: \"\"\" Creates a new key ring in Cloud KMS Args: project_id (string): Google Cloud project ID (e.g. 'my-project'). location_id (string): Cloud KMS location (e.g. 'us-east1'). key_ring_id (string): ID of the key ring to create (e.g. 'my-key-ring'). Returns: KeyRing: Cloud KMS key ring. \"\"\" # Create the client. client = kms.KeyManagementServiceClient() # Build the parent location name. location_name = f\"projects/{project_id}/locations/{location_id}\" # Build the key ring. key_ring = {} # Call the API. created_key_ring = client.create_key_ring( request={ \"parent\": location_name, \"key_ring_id\": key_ring_id, \"key_ring\": key_ring, } ) print(f\"Created key ring: {created_key_ring.name}\") return created_key_ring\n\nRuby\n\nTo run this code, first set up a Ruby development environment and install the Cloud KMS Ruby SDK.\n\n# TODO(developer): uncomment these values before running the sample. # project_id = \"my-project\" # location_id = \"us-east1\" # id = \"my-key-ring\" # Require the library. require \"google/cloud/kms\" # Create the client. client = Google::Cloud::Kms.key_management_service # Build the parent location name. location_name = client.location_path project: project_id, location: location_id # Build the key ring. key_ring = {} # Call the API. created_key_ring = client.create_key_ring parent: location_name, key_ring_id: id, key_ring: key_ring puts \"Created key ring: #{created_key_ring.name}\"\n\nAPI\n\nThese examples use curl as an HTTP client to demonstrate using the API. For more information about access control, see Accessing the Cloud KMS API.\n\ncurl \"https://cloudkms.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/keyRings?key_ring_id=KEY_RING\" \\ --request \"POST\" \\ --header \"authorization: Bearer TOKEN\"\n\nReplace the following:\n\nPROJECT_ID: the ID of the project that contains the key ring.\n\nKEY_RING: the name of the key ring that contains the key.\n\nLOCATION: the Cloud KMS location of the key ring.\n\nSee the KeyRing.create API documentation for more information.\n\nWhat's next\n\nLearn how to create a key.\n\nLearn how to import keys.\n\nLearn how to create external keys."
    }
}