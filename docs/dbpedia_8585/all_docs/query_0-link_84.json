{
    "id": "dbpedia_8585_0",
    "rank": 84,
    "data": {
        "url": "https://en.wikipedia.org/wiki/APT_(software)",
        "read_more_link": "",
        "language": "en",
        "title": "APT (software)",
        "top_image": "https://upload.wikimedia.org/wikipedia/commons/1/19/Apt-get_install_mediawiki.png",
        "meta_img": "https://upload.wikimedia.org/wikipedia/commons/1/19/Apt-get_install_mediawiki.png",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Apt-get_install_mediawiki.png/220px-Apt-get_install_mediawiki.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Synaptic_Package_Manager.png/300px-Synaptic_Package_Manager.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Free_and_open-source_software_logo_%282009%29.svg/28px-Free_and_open-source_software_logo_%282009%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/66/Openlogo-debianV2.svg/80px-Openlogo-debianV2.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/NewTux.svg/13px-NewTux.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Free_and_open-source_software_logo_%282009%29.svg/16px-Free_and_open-source_software_logo_%282009%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/12px-Commons-logo.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/Wikiversity_logo_2017.svg/16px-Wikiversity_logo_2017.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/d/db/Symbol_list_class.svg/16px-Symbol_list_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/12px-Commons-logo.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2003-02-23T21:24:49+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/APT_(software)",
        "text": "Free software package management system\n\nFor other uses, see APT (disambiguation) § Computing and software.\n\nAdvanced Package ToolDeveloper(s)The Debian ProjectInitial release31 March 1998; 26 years ago ( )[1]Stable release\n\n2.9.7[2] / 30 July 2024; 19 days ago ( )\n\nRepositoryWritten inC++,[3] shell script,[3] Extensible Markup Language,[3] CMake,[3] C,[3] Perl[3] Operating systemUnix-likeTypePackage managerLicenseGPLv2+Websitewiki .debian .org /AptCLI\n\nAdvanced package tool, or APT, is a free-software user interface that works with core libraries to handle the installation and removal of software on Debian and Debian-based Linux distributions.[4] APT simplifies the process of managing software on Unix-like computer systems by automating the retrieval, configuration and installation of software packages, either from precompiled files or by compiling source code.[4]\n\nUsage\n\n[edit]\n\nAPT is a collection of tools distributed in a package named apt. A significant part of APT is defined in a C++ library of functions; APT also includes command-line programs for dealing with packages, which use the library. Three such programs are apt, apt-get and apt-cache. They are commonly used in examples because they are simple and ubiquitous. The apt package is of \"important\" priority in all current Debian releases, and is therefore included in a default Debian installation. APT can be considered a front end to dpkg, friendlier than the older dselect front end. While dpkg performs actions on individual packages, APT manages relations (especially dependencies) between them, as well as sourcing and management of higher-level versioning decisions (release tracking and version pinning).\n\nAPT is often hailed as one of Debian's best features,[5][6][7][8] which Debian developers attribute to the strict quality controls in Debian's policy.[9][10]\n\nA major feature of APT is the way it calls dpkg — it does topological sorting of the list of packages to be installed or removed and calls dpkg in the best possible sequence. In some cases, it utilizes the --force options of dpkg. However, it only does this when it is unable to calculate how to avoid the reason dpkg requires the action to be forced.\n\nInstalling software\n\n[edit]\n\nThe user indicates one or more packages to be installed. Each package name is phrased as just the name portion of the package, not a fully qualified filename (for instance, in a Debian system, libc6 would be the argument provided, not libc6_1.9.6-2.deb). Notably, APT automatically gets and installs packages upon which the indicated package depends (if necessary). This was an original distinguishing characteristic of APT-based package management systems, as it avoided installation failure due to missing dependencies, a type of dependency hell.\n\nAnother distinction is the retrieval of packages from remote repositories. APT uses a location configuration file (/etc/apt/sources.list) to locate the desired packages, which might be available on the network or a removable storage medium, for example, and retrieve them, and also obtain information about available (but not installed) packages.\n\nAPT provides other command options to override decisions made by apt-get's conflict resolution system. One option is to force a particular version of a package. This can downgrade a package and render dependent software inoperable, so the user must be careful.\n\nFinally, the apt_preferences mechanism allows the user to create an alternative installation policy for individual packages.\n\nThe user can specify packages using a POSIX regular expression.\n\nAPT searches its cached list of packages and lists the dependencies that must be installed or updated.\n\nAPT retrieves, configures and installs the dependencies automatically.\n\nTriggers are the treatment of deferred actions.\n\nUsage modes of apt and apt-get that facilitate updating installed packages include:\n\nupdate is used to resynchronize the package index files from their sources. The lists of available packages are fetched from the location(s) specified in /etc/apt/sources.list. For example, when using a Debian archive, this command retrieves and scans the Packages.gz files, so that information about new and updated packages is available.\n\nupgrade is used to install the newest versions of all packages currently installed on the system from the sources enumerated in /etc/apt/sources.list. Packages currently installed with new versions available are retrieved and upgraded; under no circumstances are currently installed packages removed, or packages not already installed retrieved and installed. New versions of currently installed packages that cannot be upgraded without changing the install status of another package will be left at their current version.\n\nfull-upgrade (apt) and dist-upgrade (apt-get), in addition to performing the function of upgrade, also intelligently handles changing dependencies with new versions of packages; apt and apt-get have a \"smart\" conflict resolution system, and will attempt to upgrade the most important packages at the expense of less important ones if necessary. The /etc/apt/sources.list file contains a list of locations from which to retrieve desired package files.[4] aptitude has a smarter dist-upgrade feature called full-upgrade.[11]\n\nConfiguration and files\n\n[edit]\n\n/etc/apt contains the APT configuration folders and files.\n\napt-config is the APT Configuration Query program.[12] apt-config dump shows the configuration.[13]\n\nFiles\n\n[edit]\n\n/etc/apt/sources.list:[14] Locations to fetch packages from.\n\n/etc/apt/sources.list.d/: Additional source list fragments.\n\n/etc/apt/apt.conf: APT configuration file.\n\n/etc/apt/apt.conf.d/: APT configuration file fragments.\n\n/etc/apt/preferences.d/: Directory with version preferences files. This is where \"pinning\" is specified, i.e. a preference to get certain packages from a separate source or from a different version of a distribution.\n\n/var/cache/apt/archives/: Storage area for retrieved package files.\n\n/var/cache/apt/archives/partial/: Storage area for package files in transit.\n\n/var/lib/apt/lists/: Storage area for state information for each package resource specified in sources.list\n\n/var/lib/apt/lists/partial/: Storage area for state information in transit.\n\nSources\n\n[edit]\n\nAPT relies on the concept of repositories in order to find software and resolve dependencies. For APT, a repository is a directory containing packages along with an index file. This can be specified as a networked or CD-ROM location. As of 14 August 2021, the Debian project keeps a central repository of over 50,000 software packages ready for download and installation.[15]\n\nAny number of additional repositories can be added to APT's sources.list configuration file (/etc/apt/sources.list) and then be queried by APT. Graphical front ends often allow modifying sources.list more simply (apt-setup). Once a package repository has been specified (like during the system installation), packages in that repository can be installed without specifying a source and will be kept up-to-date automatically.\n\nIn addition to network repositories, compact discs and other storage media (USB keydrive, hard disks...) can be used as well, using apt-cdrom[16] or adding file:/ URI[17] to the source list file. apt-cdrom can specify a folder other than a CD-ROM, using the -d option (i.e. a hard disk or a USB keydrive). The Debian CDs available for download contain Debian repositories. This allows non-networked machines to be upgraded. One can also use apt-zip.\n\nProblems may appear when several sources offer the same package(s). Systems that have such possibly conflicting sources can use APT pinning to control which sources should be preferred.\n\nAPT pinning\n\n[edit]\n\nThe APT pinning feature allows users to force APT to choose particular versions of packages which may be available in different versions from different repositories. This allows administrators to ensure that packages are not upgraded to versions which may conflict with other packages on the system, or that have not been sufficiently tested for unwelcome changes.\n\nIn order to do this, the pins in APT's preferences file (/etc/apt/preferences) must be modified,[18] although graphical front ends often make pinning simpler.\n\nFront ends\n\n[edit]\n\nSeveral other front ends to APT exist, which provide more advanced installation functions and more intuitive interfaces. These include:\n\nSynaptic, a GTK graphical user interface\n\nUbuntu Software Center, a GTK graphical user interface developed by the Ubuntu project\n\naptitude, a console client with CLI and ncurses-based TUI interfaces\n\nKPackage, part of KDE\n\nAdept package manager, a graphical user interface for KDE (deb, rpm, bsd)\n\nPackageKit, a D-Bus frontend, maintained by freedesktop.org, powers GNOME Software and KDE Discover.\n\nGDebi, a GTK-based tool sponsored for Ubuntu. (There is also a Qt version, available in the Ubuntu repositories as gdebi-kde.)\n\napt-cdrom, a way to add a new CDROM to APT's list of available repositories (sources.lists). It is necessary to use apt-cdrom to add CDs to the APT system, it cannot be done by hand.\n\napt-zip, a way to use apt with removable media, specifically USB flash drives.\n\naptURL, an Ubuntu software package that enables end-user applications to install with a single-click through a browser.[19][20]\n\nCydia, a package manager for jailbroken iOS based on APT (ported to iOS as part of the Telesphoreo project).[21][22]\n\nSileo, like Cydia, a package manager for jailbroken iOS based on newer versions of APT (ported to iOS by the Electra team)\n\ngnome-apt, a GTK/GNOME-widget-based graphical front end. Developed by Havoc Pennington[23]\n\nMuon discover (previous Muon software center), a Qt-based graphical user interface\n\nHildon application manager (Maemo application), a Maemo front end\n\napticron, a service designed to be run via cron to email notices of pending updates to a system administrator (sysadmin).\n\nAPT Daemon, a front end that runs as a service to allow users to install software through PolicyKit and is in turn the framework used by Ubuntu software center (along with the Linux Mint software manager).\n\nPackage installer, part of MX Linux.\n\nApt-offline: A convenient way to make any available non-containerized change to any Debian-type Linux installation without using a direct Internet connection. However, a temporary direct connection can be required, such as to install Apt-offline on some of the relevant types of Linux, and to add PPA's to the sources-list.\n\nAPT front ends can:\n\nsearch for new packages;\n\nupgrade packages;\n\ninstall or remove packages and\n\nupgrade the whole system to a new release.\n\nAPT front ends can list the dependencies of packages being installed or upgraded, ask the administrator if packages recommended or suggested by newly installed packages should be installed too, automatically install dependencies and perform other operations on the system such as removing obsolete files and packages.\n\nHistory\n\n[edit]\n\nThe original effort that led to the apt-get program was the dselect replacement project known by its codename Deity.[24] This project was commissioned in 1997 by Brian White, the Debian release manager at the time. The first functional version of apt-get was called dpkg-get and was only intended to be a test program for the core library functions that would underpin the new user interface (UI).[25]\n\nMuch of the original development of APT was done on Internet relay chat (IRC), so records have been lost. The 'Deity creation team' mailing list archives include only the major highlights.\n\nThe 'Deity' name was abandoned as the official name for the project due to concerns over the religious nature of the name. The APT name was eventually decided after considerable internal and public discussion. Ultimately the name was proposed on IRC, accepted and then finalized on the mailing lists.[26]\n\nAPT was introduced in 1998 and original test builds were circulated on IRC. The first Debian version that included it was Debian 2.1, released on 9 March 1999.[27]\n\nIn the end the original goal of the Deity project of replacing the dselect user interface was a failure. Work on the user interface portion of the project was abandoned (the user interface directories were removed from the concurrent versions system) after the first public release of apt-get. The response to APT as a dselect method and a command line utility was so great and positive that all development efforts focused on maintaining and improving the tool. It was not until much later that several independent people built user interfaces on top of libapt-pkg.\n\nEventually, a new team picked up the project, began to build new features and released version 0.6 of APT which introduced the Secure APT feature, using strong cryptographic signing to authenticate the package repositories.[28]\n\nVariants\n\n[edit]\n\nAPT was originally designed as a front end for dpkg to work with Debian's .deb packages. A version of APT modified to also work with the RPM Package Manager system was released as APT-RPM.[29] The Fink project has ported APT to Mac OS X for some of its own package management tasks,[30] and APT is also available in OpenSolaris.\n\napt-file\n\n[edit]\n\napt-file is a command, packaged separately from APT, to find which package includes a specific file, or to list all files included in a package on remote repositories.[31]\n\nSee also\n\n[edit]\n\nFree and open-source software portal\n\nAlien\n\nAppStream\n\nAPTonCD\n\nGNU Guix\n\nWajig\n\nList of software package management systems\n\nReferences\n\n[edit]"
    }
}