{
    "id": "dbpedia_8585_1",
    "rank": 77,
    "data": {
        "url": "https://codelabs.developers.google.com/vertex-training-autopkg",
        "read_more_link": "",
        "language": "en",
        "title": "Vertex AI: Use autopackaging to fine tune Bert with Hugging Face on Vertex AI Training",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.gstatic.com/devrel-devsite/prod/v20ab951cf37b43fc7a428ae75ce91d8269f391204ca16525bc8a5ececea0ab56/codelabs/images/lockup.svg",
            "https://www.gstatic.com/devrel-devsite/prod/v20ab951cf37b43fc7a428ae75ce91d8269f391204ca16525bc8a5ececea0ab56/codelabs/images/lockup.svg",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/vertex-product-overview_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/enable-vertex_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/workbench-menu_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/managed-notebooks_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/new-notebook_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/create-notebook_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/idle-shutdown_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/open-jl_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/authenticate_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/launcher-terminal_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/local-training_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-started_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/training-job_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/model-output_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-nb_2880.png 2880w",
            "https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_36.png 36w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_48.png 48w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_72.png 72w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_96.png 96w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_480.png 480w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_720.png 720w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_856.png 856w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_960.png 960w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_1440.png 1440w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_1920.png 1920w,https://codelabs.developers.google.com/static/vertex-training-autopkg/img/delete-storage_2880.png 2880w",
            "https://www.gstatic.com/devrel-devsite/prod/v20ab951cf37b43fc7a428ae75ce91d8269f391204ca16525bc8a5ececea0ab56/codelabs/images/lockup-google-for-developers.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://www.gstatic.com/devrel-devsite/prod/v20ab951cf37b43fc7a428ae75ce91d8269f391204ca16525bc8a5ececea0ab56/codelabs/images/favicon.png",
        "meta_site_name": "Google Codelabs",
        "canonical_link": "https://codelabs.developers.google.com/vertex-training-autopkg",
        "text": "1. Overview\n\nIn this lab, you'll learn how to run a custom training job on Vertex AI Training with the autopackaging feature. Custom training jobs on Vertex AI use containers. If you do not want to build your own image, you can use auotpackaging, which will build a custom Docker image based on your code, push the image to Container Registry, and start a CustomJob based on the image.\n\nWhat you learn\n\nYou'll learn how to:\n\nUse local mode to test your code.\n\nConfigure and launch a custom training job with autopackaging.\n\nThe total cost to run this lab on Google Cloud is about $2.\n\n2. Use Case Overview\n\nUsing libraries from Hugging Face, you'll fine tune a Bert model on the IMDB dataset. The model will predict whether a movie review are positive or negative. The dataset will be downloaded from the Hugging Face datasets library, and the Bert model from the Hugging Face transformers library.\n\n3. Intro to Vertex AI\n\nThis lab uses the newest AI product offering available on Google Cloud. Vertex AI integrates the ML offerings across Google Cloud into a seamless development experience. Previously, models trained with AutoML and custom models were accessible via separate services. The new offering combines both into a single API, along with other new products. You can also migrate existing projects to Vertex AI. If you have any feedback, please see the support page.\n\nVertex AI includes many different products to support end-to-end ML workflows. This lab will focus on Training and Workbench.\n\n4. Set up your environment\n\nYou'll need a Google Cloud Platform project with billing enabled to run this codelab. To create a project, follow the instructions here.\n\nStep 1: Enable the Compute Engine API\n\nNavigate to Compute Engine and select Enable if it isn't already enabled.\n\nStep 2: Enable the Vertex AI API\n\nNavigate to the Vertex AI section of your Cloud Console and click Enable Vertex AI API.\n\nStep 3: Enable the Container Registry API\n\nNavigate to the Container Registry and select Enable if it isn't already. You'll use this to create a container for your custom training job.\n\nStep 4: Create a Vertex AI Workbench instance\n\nFrom the Vertex AI section of your Cloud Console, click on Workbench:\n\nFrom there, click MANAGED NOTEBOOKS:\n\nThen select NEW NOTEBOOK.\n\nGive your notebook a name, and then click Advanced Settings.\n\nUnder Advanced Settings, enable idle shutdown and set the number of minutes to 60. This means your notebook will shutdown automatically when not in use so you don't incur unnecessary costs.\n\nYou can leave all of the other advanced settings as is.\n\nNext, click Create.\n\nOnce the instance has been created, select Open JupyterLab.\n\nThe first time you use a new instance, you'll be asked to authenticate.\n\n5. Write training code\n\nTo start, from the Launcher menu, open a Terminal window in your notebook instance:\n\nCreate a new directory called autopkg-codelab and cd into it.\n\nmkdir autopkg-codelab cd autopkg-codelab\n\nFrom your Terminal, run the following to create a directory for the training code and a Python file where you'll add the code:\n\nmkdir trainer touch trainer/task.py\n\nYou should now have the following in your autopkg-codelab/ directory:\n\n+ trainer/ + task.py\n\nNext, open the task.py file you just created and copy the code below.\n\nimport argparse import tensorflow as tf from datasets import load_dataset from transformers import AutoTokenizer from transformers import TFAutoModelForSequenceClassification CHECKPOINT = \"bert-base-cased\" def get_args(): '''Parses args.''' parser = argparse.ArgumentParser() parser.add_argument( '--epochs', required=False, default=3, type=int, help='number of epochs') parser.add_argument( '--job_dir', required=True, type=str, help='bucket to store saved model, include gs://') args = parser.parse_args() return args def create_datasets(): '''Creates a tf.data.Dataset for train and evaluation.''' raw_datasets = load_dataset('imdb') tokenizer = AutoTokenizer.from_pretrained(CHECKPOINT) tokenized_datasets = raw_datasets.map((lambda examples: tokenize_function(examples, tokenizer)), batched=True) # To speed up training, we use only a portion of the data. # Use full_train_dataset and full_eval_dataset if you want to train on all the data. small_train_dataset = tokenized_datasets['train'].shuffle(seed=42).select(range(1000)) small_eval_dataset = tokenized_datasets['test'].shuffle(seed=42).select(range(1000)) full_train_dataset = tokenized_datasets['train'] full_eval_dataset = tokenized_datasets['test'] tf_train_dataset = small_train_dataset.remove_columns(['text']).with_format(\"tensorflow\") tf_eval_dataset = small_eval_dataset.remove_columns(['text']).with_format(\"tensorflow\") train_features = {x: tf_train_dataset[x] for x in tokenizer.model_input_names} train_tf_dataset = tf.data.Dataset.from_tensor_slices((train_features, tf_train_dataset[\"label\"])) train_tf_dataset = train_tf_dataset.shuffle(len(tf_train_dataset)).batch(8) eval_features = {x: tf_eval_dataset[x] for x in tokenizer.model_input_names} eval_tf_dataset = tf.data.Dataset.from_tensor_slices((eval_features, tf_eval_dataset[\"label\"])) eval_tf_dataset = eval_tf_dataset.batch(8) return train_tf_dataset, eval_tf_dataset def tokenize_function(examples, tokenizer): '''Tokenizes text examples.''' return tokenizer(examples['text'], padding='max_length', truncation=True) def main(): args = get_args() train_tf_dataset, eval_tf_dataset = create_datasets() model = TFAutoModelForSequenceClassification.from_pretrained(CHECKPOINT, num_labels=2) model.compile( optimizer=tf.keras.optimizers.Adam(learning_rate=0.01), loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=tf.metrics.SparseCategoricalAccuracy(), ) model.fit(train_tf_dataset, validation_data=eval_tf_dataset, epochs=args.epochs) model.save(f'{args.job_dir}/model_output') if __name__ == \"__main__\": main()\n\nA few things to note about the code:\n\nCHECKPOINT is the model we want to fine tune. In this case, we use Bert.\n\nThe TFAutoModelForSequenceClassification method will load the specified language model architecture + weights in TensorFlow and add a classification head on top with randomly initialized weights. In this case, we have a binary classification problem (positive or negative) so we specify num_labels=2 for this classifier.\n\n6. Containerize and run training code locally\n\nYou can use the gcloud ai custom-jobs local-run command to build a Docker container image based on your training code and run the image as a container on your local machine. Running a container locally executes your training code in a similar way to how it runs on Vertex AI Training, and can help you debug problems with your code before you perform custom training on Vertex AI.\n\nIn our training job, we'll export our trained model to a Cloud Storage Bucket. From your Terminal, run the following to define an env variable for your project, making sure to replace your-cloud-project with the ID of your project:\n\nPROJECT_ID='your-cloud-project'\n\nThen, create a bucket. If you have an existing bucket, feel free to use that instead.\n\nBUCKET_NAME=\"gs://${PROJECT_ID}-bucket\" gsutil mb -l us-central1 $BUCKET_NAME\n\nWhen we run the custom training job on Vertex AI Training, we'll make use of a GPU. But since we did not specify our Workbench instance with GPUs, we'll use a CPU based image for local testing. In this example, we use a Vertex AI Training pre-built container.\n\nRun the following to set the URI of a Docker image to use as the base of the container.\n\nBASE_CPU_IMAGE=us-docker.pkg.dev/vertex-ai/training/tf-cpu.2-7:latest\n\nThen set a name for the resulting Docker image built by the local run command.\n\nOUTPUT_IMAGE=$PROJECT_ID-local-package-cpu:latest\n\nOur training code uses the Hugging Face datasets and transformers libraries. These libraries are not included in the image we have selected as our base image, so we will need to provide them as requirements. To do this, we will create a requirements.txt file in our autopkg-codelab directory.\n\nEnsure you are in the autopkg-codelab directory and type the following in your terminal.\n\ntouch requirements.txt\n\nYou should now have the following in your autopkg-codelab directory:\n\n+ requirements.txt + trainer/ + task.py\n\nOpen up the requirements file and paste in the following\n\ndatasets==1.18.2 transformers==4.16.2\n\nFinally, execute the gcloud ai custom-jobs local-run command to kick of training on our Workbench managed instance.\n\ngcloud ai custom-jobs local-run \\ --executor-image-uri=$BASE_CPU_IMAGE \\ --python-module=trainer.task \\ --output-image-uri=$OUTPUT_IMAGE \\ -- \\ --job_dir=$BUCKET_NAME\n\nYou should see the Docker image being built. The dependencies we added to the requirements.txt file will be pip installed. This may take a few minutes to complete the first time you execute this command. Once the image is built, thetask.py file will start running and you'll see the model training. You should see something like this:\n\nBecause we are not using a GPU locally, model training will take a long time. You can Ctrl+c and cancel local training instead of waiting for the job to complete.\n\nNote that if you wanted to do further testing, you can also directly run the image built above, without repackaging.\n\ngcloud beta ai custom-jobs local-run \\ --executor-image-uri=$OUTPUT_IMAGE \\ -- \\ --job_dir=$BUCKET_NAME \\ --epochs=1\n\n7. Create a custom job\n\nNow that we have tested out local mode, we'll use the autopackaging feature to launch our custom training job on Vertex AI Training. With a single command, this feature will:\n\nBuild a custom Docker image based on your code.\n\nPush the image to Container Registry.\n\nStart a CustomJob based on the image.\n\nReturn to the terminal and cd up one level above your autopkg-codelab directory.\n\n+ autopkg-codelab + requirements.txt + trainer/ + task.py\n\nSpecify the Vertex AI Training pre-built TensorFlow GPU image as the base image for the custom training job.\n\nBASE_GPU_IMAGE=us-docker.pkg.dev/vertex-ai/training/tf-gpu.2-7:latest\n\nNext, execute the gcloud ai custom-jobs create command. First, this command will build a custom Docker image based on the training code. The base image is the Vertex AI Training pre-built container we set as BASE_GPU_IMAGE. The autopackaging feature will then pip install the datasets and transformers libraries as specified in our requirements.txt file.\n\ngcloud ai custom-jobs create \\ --region=us-central1 \\ --display-name=fine_tune_bert \\ --args=--job_dir=$BUCKET_NAME \\ --worker-pool-spec=machine-type=n1-standard-4,replica-count=1,accelerator-type=NVIDIA_TESLA_V100,executor-image-uri=$BASE_GPU_IMAGE,local-package-path=autopkg-codelab,python-module=trainer.task\n\nLet's take a look at the worker-pool-spec argument. This defines the worker pool configuration used by the custom job. You can specify multiple worker pool specs in order to create a custom job with multiple worker pools for distributed training. In this example, we only specify a single worker pool, as our training code is not configured for distributed training.\n\nHere are some of the key fields of this spec:\n\nmachine-type (Required): The type of the machine. Click here for supported types.\n\nreplica-count: The number of worker replicas to use for this worker pool, by default the value is 1.\n\naccelerator-type: The type of GPUs. Click here for supported types. In this example, we specified one NVIDIA Tesla V100 GPU.\n\naccelerator-count: The number of GPUs for each VM in the worker pool to use, by default the value is 1.\n\nexecutor-image-uri: The URI of a container image that will run the provided package. This is set to our base image.\n\nlocal-package-path: The local path of a folder that contains training code.\n\npython-module: The Python module name to run within the provided package.\n\nSimilar to when you ran the local command, you will see the Docker image being built and then the training job kick off. Except instead of seeing the output of the training job, you'll see the following message confirming that your training job has launched. Note that the first time you run the custom-jobs create command, it may take a few minutes for the image to be built and pushed.\n\nReturn to the Vertex AI Training section of the cloud console and under CUSTOM JOBS you should see your job running.\n\nThe job will take around 20 minutes to complete.\n\nOnce complete, you should see the following saved model artifacts in the model_output directory in your bucket.\n\n🎉 Congratulations! 🎉\n\nYou've learned how to use Vertex AI to:\n\nContainerize and run training code locally\n\nSubmit training jobs to Vertex AI Training with autopackaging\n\nTo learn more about different parts of Vertex AI, check out the documentation.\n\n8. Cleanup\n\nBecause we configured the notebook to time out after 60 idle minutes, we don't need to worry about shutting the instance down. If you would like to manually shut down the instance, click the Stop button on the Vertex AI Workbench section of the console. If you'd like to delete the notebook entirely, click the Delete button.\n\nTo delete the Storage Bucket, using the Navigation menu in your Cloud Console, browse to Storage, select your bucket, and click Delete:"
    }
}