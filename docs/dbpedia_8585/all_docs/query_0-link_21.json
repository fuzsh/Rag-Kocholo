{
    "id": "dbpedia_8585_0",
    "rank": 21,
    "data": {
        "url": "https://www.jamf.com/resources/videos/zero-touch-packaging-and-patch-management-with-patchbot/",
        "read_more_link": "",
        "language": "en",
        "title": "Zero-touch packaging and patch management with PatchBot",
        "top_image": "https://media.jamf.com/images/poster/zero-touch-packaging-and-patch-management-with-patchbot_jnuc2020.jpg?h=400&q=80&w=700",
        "meta_img": "https://media.jamf.com/images/poster/zero-touch-packaging-and-patch-management-with-patchbot_jnuc2020.jpg?h=400&q=80&w=700",
        "images": [
            "https://resources.jamf.com/images/logos/jamf-one-color-dark-for-print-css.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "This is a presentation for those who are interested in using the Jamf Pro API to automate workflows.",
        "meta_lang": "en",
        "meta_favicon": "/apple-touch-icon-57x57.png",
        "meta_site_name": "",
        "canonical_link": "https://www.jamf.com/resources/videos/zero-touch-packaging-and-patch-management-with-patchbot/",
        "text": "This is a presentation for those who are interested in using the Jamf Pro API to automate workflows.\n\nThis is a presentation for those who are interested in using the Jamf Pro API to automate workflows. If you have a well set-up MDM then the biggest challenge you can be left with is keeping all the packages up to date in your MDM and your fleet properly patched. Every new application you install at enrollment or offer in Self Service just makes the task harder. In a high-security environment such as a finance company like the Suncorp Group, it is not only challenging but vital. At Suncorp I have leveraged AutoPkg, the Jamf patch management system, and Jamf API to build a total solution where almost all of my applications are automatically patched on my fleet without me touching a thing. Patch levels across the fleet have gone from woeful to good in a period of six months. I will explain the basics of AutoPkg and writing custom processors in Python for AutoPkg. I will show how I used further Python to send reports to Microsoft Teams. Finally I will show how patches are moved from test to production using Python and AutoPkg. I will also elaborate some of the lessons learnt engineering the whole system and what I plan for the future. (All the code is available on Github.)"
    }
}