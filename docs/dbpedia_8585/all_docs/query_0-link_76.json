{
    "id": "dbpedia_8585_0",
    "rank": 76,
    "data": {
        "url": "https://wiki.ubuntu.com/QATeam/AutomatedTesting/Hackfest",
        "read_more_link": "",
        "language": "en",
        "title": "QATeam/AutomatedTesting/Hackfest",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://wiki.ubuntu.com/IconsPage?action=AttachFile&do=get&target=iconCircle48.png",
            "https://wiki.ubuntu.com/IconsPage?action=AttachFile&do=get&target=picto_calendar_48.png",
            "https://wiki.ubuntu.com/IconsPage?action=AttachFile&do=get&target=picto_locations_48.png",
            "https://wiki.ubuntu.com/IconsPage?action=AttachFile&do=get&target=picto_discussion_48.png",
            "https://wiki.ubuntu.com/IconsPage?action=AttachFile&do=get&target=picto_projects_we_love_48.png",
            "https://wiki.ubuntu.com/moin_static198/light/img/icon_smile.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "The automated tests we are aiming for will always be run whenever a package is updated or its dependencies change. This should help a lot in ensuring that the functionality we need is always there. Write a test, make sure stuff works forever.\n\nWhat are the automated testing technologies in use?\n\nAutopkg\n\nAutopkg tests are run at build time automatically by the buildbots for the package. The goal of these tests is to provide system and integration testing to guarantee basic functionality. You can see the live output of the current autopkg tests here.\n\nAutopilot\n\nThese tests are written in python using the autopilot framework. The goal of these tests is to provide higher level application and functional testing. The tests are written in python and can be user executed or scripted via a test runner such as UTAH or jenkins to run and publish results automatically.\n\nPreparing yourself\n\nIf you want to get started, check out this overview page, the Autopkg documentation (Spanish), and the Autopilot documentation. If you have a bit of a background in programming or scripting, you will find it easy to follow along and get started.\n\nLaunchpad\n\nBefore you begin make sure you have a launchpad profile, and your machine is setup to work with bzr and launchpad. This tutorial will make sure you are all set.\n\nAutopkg\n\nIt's quite straight-forward to get started and set up. Simply run these commands and you should be ready to go:\n\nsudo apt-get install qemu-utils kvm eatmydata bzr bzr branch lp:auto-package-testing cd auto-package-testing ./bin/prepare-testbed -r utopic amd64\n\nNote: if you use a different architecture, feel free to change amd64 to something different.\n\nAutopilot\n\nInstall autopilot:\n\nsudo add-apt-repository ppa:autopilot/ppa sudo apt-get update && sudo apt-get install python-autopilot\n\nGive me something to work on!\n\nYou're all set, read the docs, feel ready to go? Perfect! We have a list of tests we're looking for autopkg tests. You can simply assign one to yourself, get started and ask questions on IRC if you should get stuck.\n\nFor autopilot, have a look at the project site, and the work items indentified. Anything that doesn't already show someone as working on is yours Assign it to yourself, geet started, and show up on IRC to ask questions and participate. We'll help you get your branches merged quickly.\n\nLet's make Ubuntu better, let's ensure stuff always works, let's do it together!\n\nNotes for reviewers"
    }
}