{
    "id": "dbpedia_8585_1",
    "rank": 33,
    "data": {
        "url": "http://www.science.smith.edu/~jcrouser/SDS293/labs/python-intro.html",
        "read_more_link": "",
        "language": "en",
        "title": "Introduction to python",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "For most analyses, the first step involves importing a data set into python. For this class, a lot of the data comes from the ISLR package. Unfortunately this isn't available for python so I've exported the data to CSV to make things easier. We can use the read_csv() function from the pandas library to import it.\n\nWe begin by loading in the Auto data set.\n\nNothing happens when you run this, but now the data is available in your environment.\n\nTo view the data, we can either print the entire dataset by typing its name, or we can just look at the first few rows with the head() function.\n\nNow that we have the data, we can begin to learn things about it. For example, if we want to know how many rows and columns the DataFrame contains:\n\nThis tells us that the data has 392 observations, or rows, and nine variables, or columns.\n\nThe ${\\tt .dtypes}$ atribute tells us that most of the variables are numeric or integer, although the ${\\tt name }$ variable is a character vector.\n\nOften, we want to know some basic things about variables in our data. Calling the describe() method on a DataFrame will give you an idea of some of the distributions of your variables.\n\nThe summary suggests that origin might be better thought of as a factor. It only seems to have three possible values, 1, 2 and 3. If we read the documentation about the data we will learn that these numbers correspond to where the car is from: 1. American, 2. European, 3. Japanese. So let's cast that variable into a categorical variable using using the astype() function .\n\nIf we want to include a summary of this variable when we call .describe(), we need to let python know we want ALL the variables (not just the quantitative ones):\n\nThe basic idea is that you need to initialize a plot with ggplot() and then add \"geoms\" (short for geometric objects) to the plot. The ggplot package is based on the Grammar of Graphics, a famous book on data visualization theory. It is a way to map attributes in your data (like variables) to \"aesthetics\" on the plot. The parameter aes() is short for aesthetic.\n\nFor more about the ggplot2 syntax, view the documentation using the help() function. There are also great online resources for ggplot2, like ggplot from Å·hat.\n\nThe cylinders variable is stored as a numeric vector, so python has treated it as quantitative. However, since there are only a small number of possible values for cylinders, one may prefer to treat it as a qualitative variable. We can turn it into a factor, again using an astype() call."
    }
}