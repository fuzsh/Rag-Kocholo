{
    "id": "dbpedia_8585_0",
    "rank": 44,
    "data": {
        "url": "https://www.geeksforgeeks.org/how-to-install-python-packages-for-aws-lambda-layers/",
        "read_more_link": "",
        "language": "en",
        "title": "How to Install Python Packages for AWS Lambda Layers?",
        "top_image": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "meta_img": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "images": [
            "https://media.geeksforgeeks.org/gfg-gg-logo.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310181416/Hnetcomimage1.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310165121/11.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310181823/event.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310182003/4.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310165350/31.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310165448/41.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310192812/dock1.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310195856/dock3.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310165642/27.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310165820/26.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220223192008/25.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310200711/docker.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310201819/layer1171.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310202054/mypa.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220223192831/11.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310171404/124.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310165944/13.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310202626/createlayer.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310203015/laye71.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310170056/23.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220310170132/24.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/new-premium-rbanner-us.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/gfgFooterLogo.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/googleplay.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/appstore.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/suggestChangeIcon.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/createImprovementIcon.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Data Structures",
            "Algorithms",
            "Python",
            "Java",
            "C",
            "C++",
            "JavaScript",
            "Android Development",
            "SQL",
            "Data Science",
            "Machine Learning",
            "PHP",
            "Web Development",
            "System Design",
            "Tutorial",
            "Technical Blogs",
            "Interview Experience",
            "Interview Preparation",
            "Programming",
            "Competitive Programming",
            "Jobs",
            "Coding Contests",
            "GATE CSE",
            "HTML",
            "CSS",
            "React",
            "NodeJS",
            "Placement",
            "Aptitude",
            "Quiz",
            "Computer Science",
            "Programming Examples",
            "GeeksforGeeks Courses",
            "Puzzles",
            "SSC",
            "Banking",
            "UPSC",
            "Commerce",
            "Finance",
            "CBSE",
            "School",
            "k12",
            "General Knowledge",
            "News",
            "Mathematics",
            "Exams"
        ],
        "tags": null,
        "authors": [
            "GeeksforGeeks"
        ],
        "publish_date": "2022-03-22T12:00:44",
        "summary": "",
        "meta_description": "A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.",
        "meta_lang": "en",
        "meta_favicon": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_favicon.png",
        "meta_site_name": "GeeksforGeeks",
        "canonical_link": "https://www.geeksforgeeks.org/how-to-install-python-packages-for-aws-lambda-layers/",
        "text": "AWS Lambda Layer is a zip file archive that contains the required additional code (libraries, dependencies, or custom runtimes) or data to run your AWS Lambda function. AWS Lambda function can then pull this required content in form of lambda layers. When an AWS Lambda function is invoked, the layer with all the dependencies is loaded along with it during the runtime.\n\nWhy do we need lambda layers?\n\nAWS Lambda function supports only some standard libraries during its runtime. Therefore it becomes problematic when you have to use external libraries (for example pandas) with your lambda function. In such cases, we can make use of lambda layers or a deployment package. But using a lambda layer as compared to a deployment package is rather useful.\n\nAdvantages of using lambda layers\n\nUsing AWS Lambda Layers has the following benefits:\n\nReusability: One lambda layer can be used across many different AWS Lambda functions.\n\nCode-sharing: Lambda layers enable us to share the common code or functions, libraries, and dependencies among various lambda functions.\n\nUsing Lambda layers helps you focus on your main code or business logic. Additionally, it helps keep your Lambda function code smaller.\n\nUsing Lambda layers helps reduce deployment package size.\n\nIf there is a need to update your common code or any dependency you can do so in one place rather than making changes in individual lambda functions.\n\nSince lambda layers provide a feature to store different versions you can use the older version of a package or a new version as per the requirements.\n\nNote: A lambda function can have up to 5 layers. In this tutorial, we will see how to install python packages for AWS Lambda Layers. Note that regardless of which python package you want to use with your lambda functions, the below steps will be the same.\n\nSteps to add python packages in AWS lambda layers\n\nStep 1: Go to the AWS management console.\n\nStep 2: Click on create function.\n\nStep 3: Create a lambda function named “mylambda”\n\nStep 4: Choose Python 3.9 and x86_64 architecture and click on create a function\n\nStep 5: Now try importing the requests module in your lambda function. So, create an event named “myevent” by clicking the down arrow on the test button.\n\nStep 6: Deploy the function.\n\nNow click on test. As soon as you click on the test, you will see an error message.\n\nTo create a lambda layer we need to create a zip file containing all the dependencies for the ‘requests’ package and upload it to our layer. To create this zip file we will make use of docker.\n\nWhy docker?\n\nSince lambda uses the Amazon Linux environment, if you are using windows and create a zip file of dependencies it might not work while you run your lambda function. After you finish setting up docker, open the command prompt and run:\n\ndocker run -it ubuntu\n\nThe flag “-it” is used to open an interactive shell.\n\nNote: If you get an error after running the above command check if you have an ubuntu image. To check for the docker images, use the command:\n\ndocker images\n\nNow run the following commands to update, install the required Python version and install pip.\n\napt update\n\napt install python3.9\n\napt install python3-pip\n\nSince we also have to make a zip file afterward, install zip.\n\napt install zip\n\nCreate a directory where we want to install our requests package.\n\nmkdir -p layer/python/lib/python3.9/site-packages\n\nThis will create a folder named: “layer”. Finally, install the requests package by using the command:\n\npip3 install requests -t layer/python/lib/python3.9/site-packages/\n\nNow go to the “layer” folder\n\ncd layer\n\nIf you do ‘ls’ you will see a folder named python here.\n\nNow create the zip folder of the installed package in the layer directory.\n\nzip -r mypackage.zip *\n\nNow we have to copy the zip file mypackage.zip to our local folder.\n\nTo do that, open a new command prompt and get the container ID by running:\n\ndocker ps -a\n\nNow use the below command to copy the zip file from your container to a local folder.\n\nFormat:\n\ndocker cp <Container-ID:path_of_zip_file> <path_where_you_want_to_copy>\n\nExample:\n\ndocker cp 7cdd497f0560:/layer/mypackage.zip C:\\Users\\lenovo\\Desktop\\layer\n\nNow you will have a ‘mypackage.zip’ file in the path you described.\n\nNow let’s create a lambda layer. On the left side of the console click on layers\n\nClick on create a layer button.\n\nName your layer as “mylayer”. Notice that you have an option to upload a zip file or upload a file from amazon s3. If files are larger then upload them on s3 and give the link to the zip file.\n\nIn this tutorial, we will directly upload it as a zip file. Choose compatible architecture as: x86_64. Since we selected the same while creating our lambda function. And choose compatible runtime as python3.9, upload zip file, and click on create.\n\nA lambda layer will be successfully created. Now we just need to attach this with our lambda function. If you are creating the layer for the first time your version number will be reflected as 1. (Value of Lambda Layer version is immutable that is the version number is incremented by 1 each time you create a new layer).\n\nNavigate back to the lambda function. Scroll down to the bottom and click on add a layer (Under Layers section).\n\nClick on the custom layer and select ‘mylayer’, select the version and click on add.\n\nNow it’s time to test it! Click on test.\n\nYour lambda function will now run successfully!\n\nSome important points:\n\nThe unzipped files from the lambda layer will be present in the /opt directory in the Lambda runtime.\n\nYou can also use AWS Cloud9 environment to create the zip file instead of docker."
    }
}