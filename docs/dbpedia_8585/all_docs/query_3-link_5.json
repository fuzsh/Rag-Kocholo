{
    "id": "dbpedia_8585_3",
    "rank": 5,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Listaller",
        "read_more_link": "",
        "language": "en",
        "title": "Listaller",
        "top_image": "https://upload.wikimedia.org/wikipedia/commons/b/b1/Listaller-Logo.png",
        "meta_img": "https://upload.wikimedia.org/wikipedia/commons/b/b1/Listaller-Logo.png",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/b/b1/Listaller-Logo.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Free_and_open-source_software_logo_%282009%29.svg/28px-Free_and_open-source_software_logo_%282009%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/NewTux.svg/13px-NewTux.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Free_and_open-source_software_logo_%282009%29.svg/16px-Free_and_open-source_software_logo_%282009%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/d/db/Symbol_list_class.svg/16px-Symbol_list_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/9c/Symbol_file_class.svg/16px-Symbol_file_class.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2011-03-16T17:26:17+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Listaller",
        "text": "Linux package management system\n\nListallerDeveloper(s)Matthias KlumppInitial releaseDecember 2007; 16 years ago ( )Stable release\n\n0.5.9[1] / 8 September 2014; 9 years ago ( )\n\nRepositoryWritten inVala, C/C++Operating systemLinuxTypePackage management systemLicenseGNU Lesser General Public License, GNU General Public LicenseWebsitelistaller .tenstral .net\n\nListaller is a free computer software installation system (similar to a package management system) aimed at making it simple to create a package that can be installed on all Linux distributions as well as providing tools and API to make software management on Linux more user-friendly.\n\nHistory\n\n[edit]\n\nListaller was started in December 2007 by freedesktop.org developer Matthias Klumpp as an experimental project to explore the possibility of writing a universal user interface to manage all kinds of Linux software, no matter how it was installed. Therefore, Listaller had backends to manage Autopackage, LOKI, Mojo and native distribution packages. The original project provided one user interface to manage all kinds of installed software. Interaction with the native distribution package management was done via an own abstraction layer, which was later replaced by PackageKit.[2] Listaller also provided a cross-distribution software installation format which should have made it easier to create packages which run on multiple distributions. The installer part of Listaller was also able to assist in installing Autopackage packages. The very first versions were written in Object Pascal.\n\nAlthough the project started as an experiment, it soon evolved to a competitor for Autopackage and Mojo. Until 2011, Listaller never made any stable release. With the announcement of AppStream a lot of the original Listaller goals would be achieved, so the author decided to change Listaller away from a full software manager to a software installer only and joined forces with the AppStream project. Because Pascal was not considered as ideal language to collaborate with other projects and the project already had spent much time in developing Pascal bindings to third-party libraries, Listaller was rewritten in Vala with a subset of the original features and the main goal to provide seamless integration with AppStream and PackageKit. Therefore the universal software manager part was removed and the project now focuses on creating a cross-distro format for distribution of binary Linux software.\n\nAs of Nov 10, 2014 Matthias announced the Limba project.[3] Limba[4] is supposed to be Listaller's next version.\n\nMethodology\n\n[edit]\n\nListaller is intended to be used for installing binary, or pre-compiled, versions of non-core applications such as word processors, web browsers, and personal computer games, rather than core libraries and applications such as operating system shells. Listaller is not intended to provide support for installing system libraries for security reasons. Listaller is using an own package format, so-called IPK packages (short for Installation package), which are LZMA-compressed signed tarballs.\n\nIPK packages contain only small configuration files to modify the setup process. They do not provide their own logic or scripts which are run during install time. All parts of a setup process are handled by Listaller's built-in routines, which make it possible for distributors to modify the setup process of 3rd-party applications to comply to their own policy, if necessary.\n\nThe key value of Listaller is integration into desktop environments, existing package management tools and distributions. Therefore, the project provides several integration components by default, which make it possible to manage Listaller-installed 3rd-party applications from any software manager which supports PackageKit and/or AppStream.\n\nAt time it is discussed to run all installed 3rd-party tools in a Sandbox by default.[5]\n\nPrograms that use Listaller must also be relocatable, meaning they must be installable to varying directories with a single binary. This makes it possible for Listaller to install software for non-root users into their home directory, although this method has to be enabled explicitly and its use is not encouraged. The Listaller Developer Tools provide tools and documentation for application developers to make their software relocatable.\n\nListaller and Autopackage\n\n[edit]\n\nIn August 2010 both projects announced they will merge.[6] As consequence of the merge, Autopackage abandoned its own package binary package format and all user interfaces to install Autopackage packages. Autopackage tools like BinReloc to create relocatable applications or APBuild are now developed as part of the Listaller project. Reason for merging Autopackage into Listaller was mainly a great lack of developers in both projects so they decided to join forces.\n\nIntegration\n\n[edit]\n\nKDE provides support for Listaller through Apper, although distributors need to explicitly enable it using a compile-time switch. Support for GNOME is currently being developed as part of the GNOME-PackageKit suite. In theory, any distribution which can run PackageKit >= 0.8.6 should be able to provide Listaller support too. Ubuntu announced that they will not use Listaller as 3rd-party installer for their Ubuntu Phone, but develop an own, Ubuntu-specific solution instead.[7]\n\nSee also\n\n[edit]\n\nFree and open-source software portal\n\nAppStream\n\nReferences\n\n[edit]"
    }
}