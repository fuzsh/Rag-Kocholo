{
    "id": "dbpedia_2798_1",
    "rank": 49,
    "data": {
        "url": "https://github.com/EsupPortail/esup-wayf/blob/master/DOC",
        "read_more_link": "",
        "language": "en",
        "title": "esup-wayf/DOC at master · EsupPortail/esup-wayf",
        "top_image": "https://opengraph.githubassets.com/875053010f241682458b878ad6f1fc31d44f3cf27d01b80f2de321e7a36578a3/EsupPortail/esup-wayf",
        "meta_img": "https://opengraph.githubassets.com/875053010f241682458b878ad6f1fc31d44f3cf27d01b80f2de321e7a36578a3/EsupPortail/esup-wayf",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "WAYF basé sur SWITCHwayf intégrant des fonctionnalités de géolocalisation et discofeed - esup-wayf/DOC at master · EsupPortail/esup-wayf",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/EsupPortail/esup-wayf/blob/master/DOC",
        "text": "Copyright (c) 2014, SWITCH\n\nSee LICENSE file for details.\n\n-------------------------------------------------------------------------------\n\nSWITCHwayf Documentation\n\n========================\n\nFind below the documentation and configuration options for the SWITCHwayf.\n\n-------------------------------------------------------------------------------\n\n**This document is written in the markdown syntax**\n\n-------------------------------------------------------------------------------\n\nDescription\n\n-----------\n\nThe SWITCHwayf is an implementation of the Shibboleth WAYF and SAML2 Discovery\n\nService protocol for use withing a Shibboleth architecture.\n\nSome of the Features:\n\n- Supports Discovery Service and the Shibboleth authentication request protocol\n\n- Supports processing SAML2 metadata files\n\n- The central Discovery Service also works without Java Script\n\n- Search-as-you type or selection from a list of organisations\n\n- Various customizations options for header, footer, language strings etc.\n\n- I18N support, currently language packs for en, de, it, fr and some other\n\nlanguages are included\n\n- HTML code generation for embedding the WAYF directly into a web page\n\n- Support for remembering IdP selection accross different services (when\n\nEmbedded WAYF is used)\n\n- Preselecting entry in drop down list by\n\n- SAML common domain cookie that contains selected Identity Providers\n\n- resource path info hint (e.g.\n\n/WAYF/unige.ch?shire=https://... selects University of Geneva, depends\n\nof course on the ID scheme a federation uses)\n\n- Kerberos preselection\n\n- IP range preselection\n\n- IP reverse DNS lookup preselection\n\n- Transparent redirection mode, e.g. /WAYF/unige.ch/redirect?shire=https://...\n\n-------------------------------------------------------------------------------\n\nCustomization Options\n\n---------------------\n\nSince version 1.12 any graphical aspects can be customized such that these\n\nchanges normally should survive bug-fix and minor version upgrades.\n\nFiles whose names start with 'default-' can be copied and renamed to start with\n\n'custom-' in order to customize the file's behaviour.\n\nIn particular, the following customizations can be applied:\n\n* HTML Header: custom-header.php\n\nCustomize page header\n\n* HTML Footer: custom-footer.php\n\nCustomize page footer\n\n* HTML Body: custom-body.php\n\nCustomize WAYF/DS body\n\n* HTML Body: custom-settings.php\n\nCustomize WAYF/DS permanent settings body\n\n* HTML Body: custom-notice.php\n\nCustomize WAYF/DS permanent settings notice body\n\n* HTML Body: custom-embedded-wayf.php\n\nCustomize WAYF/DS body\n\n* HTML Error: custom-error.php\n\nCustomize error messages\n\n* CSS Main Style: css/custom-styles.css\n\nCustomize CSS styles that are loaded in addition to the default-styles.css.\n\nTherefore, they can be used to overwrite the default CSS styles.\n\n* CSS Improved Drop Down Style: css/custom-ImprovedDropDown.css\n\nCustomize CSS styles to alter the appearance of the improved drop-down list,\n\nboth for the stand-alone WAYF as well as the Embedded WAYF. The styles are\n\nloaded in addition to the default-ImprovedDropDown.css.\n\n* Languages: custom-languages.php\n\nCan be used to change default or add new language strings. The custom\n\nlanguages strings in addition to the default styles. Therefore, they can be\n\nused to overwrite the default CSS styles.\n\nIf a custom file doesn't exist yet, the default templates and settings\n\nare used. To create a custom template, copy the default files with:\n\n`cp default-{$template}.php custom-{$template}.php`\n\nwhere {$template} stands for the file you want to customize. Unless otherwise\n\nmentioned the custom files replace the default files completely. Please read the\n\nabove information for each custom file.\n\n-------------------------------------------------------------------------------\n\nLogging\n\n-------\n\nErrors are generally written to syslog. Error messages might be cases where\n\nfiles cannot be read or written due to permission problems.\n\nIf the configuration option $useLogging is true, a log file will be written to\n\nthe path specified in $WAYFLogFile. This log file is an audit log file where\n\neach line is an entry of the form:\n\n{DATE} {TIME} {IP} {IDP-SELECTION} {REQUEST-TYPE} {IDP-ENTITYID} {FORWARDING-URL}\n\nLog entries are only created if the user was forwarded to an Identity Provider.\n\n- {DATE} = Date of request, e.g. 2010-11-02\n\n- {TIME} = Time of request, e.g. 06:25:13\n\n- {IP} = IP of requester, e.g. 127.0.0.1\n\n- {IDP-SELECTION} = How the IdP was selected: Cookie or Request\n\n- {REQUEST-TYPE} = Type of request: DS, WAYF, Embedded-DS, Embedded-WAYF\n\n- {IDP-ENTITYID} = EntityID of the IdP the user was forwarded to.\n\n- {FORWARDING-URL} = URL the user was redirected to\n\n- {SP-ENTITYID} = EntityID of the SP the user was coming from.\n\n-------------------------------------------------------------------------------\n\nOptimizations\n\n-------------\n\nIf an instance of the SWITCHwayf has to deal with many requests and the load\n\nis becoming higher and higher, one should consider using a PHP opcode\n\ncacher like XCache, apc, eaccelerator, phpa, truck-mmcache or similar.\n\nUsing such a tool can decrease the processing time of the PHP code almost by\n\nhalf. However, own tests have shown that the bottleneck in general is not\n\nthe PHP processing but the TLS handshake, which has nothing to do with PHP\n\nor the SWITCHwayf itself. Still, the more entities (Identity Providers and\n\nService Provider) and instance consumes, the higher the processing speed gain.\n\nBenchmark tests conducted by SWITCH demonstrated that generating the\n\nJavascript WAYF/embedded-wayf.js can be speed up using APC or XCache\n\nconsiderably (> 15%) if the script is accessed via HTTP (without TLS).\n\nHowever, if the script is accessed via HTTPS, the overall speed gain by using\n\nan opcode cacher is much less because the TLS hand-shake is what\n\nneeds most time.\n\n-------------------------------------------------------------------------------\n\nSAML2 Metadata support\n\n----------------------\n\nIn case the WAYF/DS should display the list of IdPs by parsing them from a\n\nSAML2 Medatadata file that is used by Shibboleth:\n\n- Set $useSAML2Metadata in config.php to true\n\n- Specify the path to the metadata file that should be read in $metadataFile\n\nand make sure this file is updated regularely by Shibboleth or a cron job\n\n- Make sure the files specified in $metadataIDPFile and $metadataSPFile can be\n\nwritten by the userthat executes the PHP script (the web server user,\n\ne.g. www-data or _www)\n\nThe parsend IDP and SP entries will be stored in $metadataIDPFile and\n\n$metadataSPFile as executable PHP code, thus benefiting from opcode caching\n\n(see chapter \"Optimization\" above).\n\nIf an entry should changed, removed or extended in this automatically\n\ngenerated file, one can extend the IDP definitions by modifying them in\n\nthe $IDPConfigFile. To overwrite IDP values with entries in the $IDPConfigFile,\n\nmake sure the entry $SAML2MetaOverLocalConf is set to 'false';\n\nFor example one could change the displayed name of an IdP by adding an entry in\n\nthe file $IDPConfigFile like:\n\n$IDProviders[\"https://sso.example.org/idp/shibboleth\"][\"Name\"] = \"Foobar\";\n\nIf an entry is in the SAML metadata file but should not be shown in the drop\n\ndown list, it can be hidden/removed with:\n\n$IDProviders[\"https://sso.example.org/idp/shibboleth\"] = '';\n\nTo force a periodic refresh of the IdP, run readMetadata.php in command line\n\nmode, i.e. by executing a cron script like:\n\n5 * * * * /usr/bin/php readMetadata.php > /dev/null\n\n-------------------------------------------------------------------------------\n\nEmbedded WAYF support\n\n---------------------\n\nWith the embedded WAYF support administrators of a Shibboleth protected\n\napplication can easily integrate a Discovery Service on the any page of their\n\napplication just by copying and adapting the HTML code snippet generated by the\n\nSWITCHwayf via the URL /WAYF/embedded-wayf.js/snippet.html\n\nThe embedded WAYF then will display on the remote site a drop-down list with the\n\nIdentity Provider to authenticate.\n\nOne can also configure the embedded WAYF to hide or add Identity Providers\n\n(even from remote federations) or adapt the look and feel of the embedded wayf.\n\nThis can be done by simpling modifying the JavaScript variables in the HTML\n\nsnippet.\n\n**Note**\n\nWhen activating the Embedded WAYF, carefully protect the host where the WAYF is\n\noperated on. If an instance of SWITCHwayf gets compromised, an attacker could\n\nmodify the JavaScript that is embedded on the remote site in a malicous wayf\n\n(e.g. phish the user's password, redirect users to malicous pages, steal their\n\nsessions etc). One should also ensure that a centrally operated WAYF has a very\n\nhigh availability because many services will depend on it.\n\nAlso, please be aware that using the Embedded WAYF allows anybody to guess a\n\nuser's Home Organisation without much effort. This information then could be\n\nused for phising attacks for example!\n\nExample Embedded WAYF Usage:\n\n* https://toolbox.switch.ch/\n\n* https://aai-viewer.switch.ch/\n\n* https://www.olat.uzh.ch/\n\n* https://ilias.unibe.ch/\n\n* https://sympa.unil.ch/\n\n-------------------------------------------------------------------------------\n\nHow to use the Embedded WAYF?\n\n-----------------------------\n\n1. Find a web page where a Discovery Service in form of the Embedded WAYF\n\ncan be placed. This page of course may not enforce a Shibboleth session.\n\n2. Get a sample HTML snippet to embed on the page. To get the snippet access the\n\nWAYF with this URL:\n\nhttps://{HOSTNAME}/{PATH-TO-WAYF}/WAYF/embedded-wayf.js/snippet.html\n\nThe script should return HTML code that consists of a configuration\n\nJavaScript, a JavaScript loaded from the\n\nhttps://{HOSTNAME}/{PATH-TO-WAYF}/WAYF/embedded-wayf.js and a\n\nNoScript element for cases where a user has JavaScript not enabled.\n\n3. Adapt at minimum all the 'ESSENTIAL SETTINGS' at the top of the snippet and\n\nthe URL in the NoScript element.\n\nOptionally also adapt the recommended and advanced settings.\n\nOptionally remove all commented-out/obsolete settings of the configuration\n\nJavaScript.\n\n4. Insert the edited snippet anywhere in the body of a page outside any HTML\n\n'form' element.\n\n5. Save the page and then access it with your web browser to check whether it\n\nworks. Also try logging in with JavaScript disabled.\n\nEmbedded WAYF code limitations:\n\n* The Embedded WAYF won't work if placed within an HTML form element.\n\n* If the embedded WAYF is placed on the right side or at the bottom of a web page,\n\nit may be that the web browser cannot expand and render the complete drop-down\n\nlist of Identity Providers. Turning on the wayf_use_improved_drop_down_list\n\nsetting might be a solution in this case.\n\n* If placed on a host where no Service Provider is installed, the Embedded WAYF\n\nmight not be able to detect whether a user is logged in or not. Also, the\n\nwayf_use_disco_feed might not be used.\n\n-------------------------------------------------------------------------------\n\nKerberos support\n\n----------------\n\nIf this features is used, the web server needs to support Negotiate/SPNEGO\n\nKerberos protocol. For example by using mod_auth_kerb.\n\n1. Make a symlink of the file 'WAYF' and name it like configured in the variable\n\n$kerberosRedirectURL\n\n2. Protect file $kerberosRedirectURL with Kerberos. The Kerberos realm must be\n\nspecified in \"IDProvider.conf.php\" for each IdP. Each IdP's KDC must also\n\nestablish a Kerberos cross-realm trust with the WAYF's KDC. This was tested\n\nwith a Windows 2000 KDC, with the WAYF running on RHEL4.\n\n-------------------------------------------------------------------------------\n\nConfiguration file format\n\n-------------------------\n\nHave a look at the file 'IDProvider.conf.php' for an example of the file format\n\nthat is used to configure the list of Identity Provider to display. It's\n\nsupposed to be mostly self-explanatory. Basically the file format is PHP code\n\nthat defines an array of arrays called $IDProviders.\n\nThe keys of the array $IDProviders must correspond to the entityIDs of the\n\nIdentity Providers or a unique value in case of a cascaded WAYF/DS or\n\na category. The entityID must be a valid URI (URL or URN) where in the\n\ncase of a URN the last component must be a valid hostname.\n\nIf metadata is not parsed from SAML2 metadta (using the setting\n\n$useSAML2Metadata = false), the IdPs and category entries will be displayed\n\nin order as defined in the configuration file and no sorting is done.\n\nIf SAML2 metadata is used ($useSAML2Metadata = true) to generate the list of\n\nIdentity Providers, they are sorted within the category/type according to their\n\nIndex value (see below) and then alphabetically after their (local) Name.\n\nIf an IdP has no type, it will be in the category 'unknown', which will be added\n\nat the end of the drop down list.\n\nIf an IdP has a type for which no category was defined, it will also be added\n\nto the category unknown but will keep its type value, which is used for sorting\n\nand for the categories of the Embedded Discovery Service.\n\nA general entry for an Identity Provider, a cascaded WAYF/DS or a category is\n\nof the following form:\n\n$IDProviders[{KEY}] = {ENTRY}\n\n* {KEY}is a unique value that must correspond to the entity's entityID in case\n\nthe entry stands for an Identity Provider. For entries of Type category, the\n\n{KEY'} should be an identifier that corresponds to a 'Type' of an IdP.\n\n* '{ENTRY} is a hash array with the following keys:\n\n* ['Type']: Optional\n\nType that is used for the embedded wayf to hide or show certain categories.\n\nDefault type will be 'unknown' if not specified.\n\nAn entry for another WAYF/DS that the user should be redirected to should\n\nhave ['Type'] ='wayf\n\nThe Type values 'category' and 'wayf' are reserved words that are not allowed\n\nto be assigned to entries for Identity Providers.\n\n* ['Name']: Mandatory\n\nDefault name to display in drop-down list\n\n* [{LANG}]: Optional\n\n{LANG} is a language identifier, e.g. 'en-GB', 'it', 'fr-F', 'de', ...\n\nThe value is an array with the following keys:\n\n- ['Name']: Optional\n\nDisplay name\n\n- ['Keywords']: Optional\n\nKeywords associated with the Identity Provider.\n\nUsed for search-as-you-type feature of improved drop-down list. Space delimited.\n\n* ['SSO']: Mandatory\n\nShould be the SAML1 SSO endpoint of the IdP\n\n* ['Realm']: Optional\n\nKerberos Realm\n\n* ['IP'][]: Optional\n\nIP ranges of that organizations that can be used to guess a user's Identity\n\nProvider\n\n* ['Index']: Optional\n\nAn alphanumerical value that is used for sorting categories and Identity\n\nProvider in ascending order if the Identity Providers are parsed from metadata.\n\nThis is only relevant if $includeLocalConfEntries = true\n\nFor category entries, only Type, (local) Name and Index are relevant.\n\nThe format for the file $metadataSPFile is very similar.\n\nA general entry for an Identity Provider, a cascaded WAYF/DS or a category is\n\nof the following form:\n\n$metadataSProviders[{KEY}] = {ENTRY}\n\n* {KEY} is a unique value that must correspond to the Service Provider's entityID.\n\n* 'ENTRY} is a hash array with the following keys:\n\n* ['Name']: Mandatory\n\nDefault name to display in drop-down list. By default the MDUI:DisplayName,\n\nthe ServiceName or the entityID is used. If there is a display name\n\navailable in the WAYF's default language that one will be used. Otherwise\n\nEnglish or the only available DisplayName is used.\n\n* [{LANG}]: Optional\n\n{LANG} is a language identifier, e.g. 'en-GB', 'it', 'fr-F', 'de', ...\n\nThe value is an array with the following keys:\n\n- ['Name']: Optional\n\nDisplay name\n\n* ['DSURL']: Optional\n\nList of DiscoveryService endpoints of the SP.\n\n* ['ACURL']: Mandatory\n\nList of Assertion Consumer endpoints of the SP.\n\n* ['Protocols']: Mandatory\n\nProtocols supported by the SP, e.g.: urn:oasis:names:tc:SAML:2.0:protocol\n\nurn:oasis:names:tc:SAML:1.1:protocol\n\n-------------------------------------------------------------------------------\n\nPath Info parameters and files\n\n------------------------------\n\nModifying the WAYF's URL it is possible to influence its behaviour. This can be\n\ndone by appending certain Path Info extension to the URL. The Path Info\n\ncomponents can also be combined. The allowed syntax is:\n\n* [/{I18N-STRING}][/redirect][/{ENTITYID-HOSTNAME}]\n\n* [/{I18N-STRING}][/embedded-wayf.js]\n\n* [/embedded-wayf.js/snippet.html]\n\n* [/IDProviders.json]\n\n* [/IDProviders.php]\n\n* [/IDProviders.txt]\n\n**Note:**\n\nThe web server must support the use of Path Info.\n\n-------------------------------------------------------------------------------\n\nHinted Identity Provider and transparent redirects\n\n--------------------------------------------------\n\nPath Info Extensions: [/redirect][/{ENTITYID-HOSTNAME}]\n\n{ENTITYID-HOSTNAME} must be the host name of an entityId or the last component\n\nof a URN. Examples:\n\n* https://aai-login.switch.ch/idp/shibboleth -> aai-login.switch.ch\n\n* urn:mace:switch.ch:aaitest:aai-demo-idp.switch.ch -> aai-demo-idp.switch.ch\n\nIf '/redirect' is included in the Path Info as well, the web browser is\n\nredirected transparently to the specified entityID hostname.\n\n**Note**\n\nOne must make sure that the entityID hostname is not the same as one of\n\nthe reserved keywords like 'redirect', the below mentioned file types\n\nor a i18n langauge abbreviation.\n\n-------------------------------------------------------------------------------\n\nLanguage preselection:\n\n----------------------\n\nPath Info Extensions: [/{I18N-STRING}]\n\nExamples of {I18N-STRING} strings are 'en', 'de_CH' or 'fr_CH.ISO8859-1' etc.\n\nHowever, in the default distribution only 'en', 'de', 'fr', 'it' and 'pt' are\n\navailable and supported. But it would be easy to create sub types of existing\n\nlanguages for country/region support by adding something like this to\n\nlanguages.php:\n\n// Create a country specific copy of the German language strings\n\n$langStrings['de_CH'] = $langStrings['de'];\n\n// Overwrite a specific string\n\n$langStrings['de_CH']['title'] = 'Auswahl der Heimorganisation';\n\n-------------------------------------------------------------------------------\n\nSpecial handlers:\n\n-----------------\n\nIn order for the Embedded WAYF feature to work there are some special files that\n\nneed to be generated. The following Path Info Extensions must be the last\n\ncomponents of the Path Info URL.\n\nPath Info Extensions:\n\n* [/deleteSettings]\n\nAs the name suggests, this handler delete all settings cookies that were stored\n\nby the WAYF service in cookies. Unless there is a 'return' GET argument\n\nprovided the user is sent to the settings page.\n\n* [/embedded-wayf.js]\n\nGenerates the JavaScript for the Embedded WAYF\n\n* [/embedded-wayf.js/snippet.html\n\nGenerates HTML snippet for the Embedded WAYF\n\n* [/ShibbolethDS-IDProviders.js]\n\nReturns JavaScript consisting of only a variable called myJSONObject. It\n\ncontains the IDProviders array. If $exportPreselectedIdP = true, the last\n\nelement of that array will be a key called 'preselectedIDP', which contains\n\nthe Identity Provider that would be preselected in the drop-down list for\n\nthat user.\n\n* [/ShibbolethDS-IDProviders.json]\n\nSame as above but as a JSON data array.\n\n* [/IDProviders.txt]\n\nSame as above but in human readable form.\n\n* [/IDProviders.php]"
    }
}