The engine, as a product of GG/IA was not directly managed by Castle, but as the CEO he does have influence over it. I don’t know what they should have done, but I knew at the time the moves they were making would end poorly. Ideally, Eric will really push for Torque to be presented more professionally than it has in the past. Eric is a very smart programmer, but that is a different set of skills than running a company or managing a product. Unlike b-school graduates, I realize that being smart enough to learn programming means he is probably smart enough to learn other things as well as the whole “people person” and “details person” schism is entirely fabricated to make some people feel smarter than they actually are.

Yes, Brett, the same guy that would crap all over Unity on the GG forums about not getting the source code with Unity. If Unity was that terrible, he wouldn’t have moved. He appears to either have lied about his feelings on releasing source code or had a sudden change of heart when presented with a new job. Opportunists should be handled with extreme skepticism.

What GG has to do, and what they already started doing in 2010, is think into the future and plan stuff, instead of relying on spontanously horrible ideas, letting “theory crafters” do decisions (TGEA 1.7 and 1.8 happened in their solid form cause GG had to create a game with it) and listen to the community when doing so.

Torque was all fine and great up to the day where one fundamental fatal decision was made: Scrapping the whole rendering and pipeline core of TGEA after Milestone 4, a few months before release, although there were in beta for far beyond a year and then release something thats this fucked up and broken that it was totally unusable in any form.

This was what brought Torque down in the end, the fact that TGEA was released although royally fucked up, pushed further by taking beyond a year to get the first usable version of it out (1.7).

any reasonable mind took Milestone 4 for development basically (Dreamlords was MS4 based until they upgraded to 1.7 / 1.8 if I recall right), but all those who bought beyond it didn’t get its sources anymore and were just fucked and thus pissed.

I myself had to downport Forbidden Magic from TGEA to TGE + MK II cause TGEA was that full of bugs with the majority of previously working tools in TGE not working anymore either after finding more and more minor to major bugs and shortcomings in the engine that prevented many of the tools from even standing a chance to work.

It was a dire situation and the once rather famous Torque brand (which still has the best networking available to date out of my view) got a very hefty hit that not even the great TGB could have compensated for.

The consequences were then rather visible. BlitzMax was able to pickup a fair amount of users that would otherwise have gotten TGB thanks to a great community and community tools and systems to just use and on the 3D end it was never like there was no competition with Truevision 3D, OGRE, Irrlicht and C4 on the field (Unity at that time was at best in the position to compete with TGE, if at all)

Well, at the current price point it’s probably a worthwhile purchase for just about anyone with the cash.

For the current pricing, I’ll probably get at least the 2D and i2D products just to compliment Unity while at the same time keeping some form of competition going. If you’re making a 2D game, particularly for iPhone, there’s a big advantage to i2D on both price and 2D tools/performance atm over Unity.

The key thing that Torque needs to do (and cutting the product options down is a a good start), is try to become as artist friendly as possible.

Even though I’m more of a programmer, it’s easy to see that making an artist and/or non-tech friendly product moves more units than appealing primarily to programmers. I think any programmer worth their weight can “adapt” a lot more easily and therefore there’s less of a need to constantly push the “we offer source code” angle, because non-programmers mostly don’t care about that, they want ease of use/learning, and that’s the biggest expansion area to the game engine market.

The editor and tools in Torque are “ok”, but there are certainly some gotchas at this point, and I think it’s generally not nearly as obvious how to start/put things together for a “non programmer” with any of the Torque products as compared to Unity. Also, their proprietary torquescript really needs an alternative like C#, if for no other reason, simply because it adds so much applicable training material that they don’t have to produce themselves.

Anyway, that’s what I see as the weaknesses at the moment.

Regardless…to plug the source, keep in mind that if you buy the product and the company still goes under, you’re in a much better position with Torque for “future use” than you are with Unity. You can modify the source yourself, or pay someone else to do it for you in a pinch, so odds are you can still get a product or product(s) out with it without the need for updates from garagegames if things go south.

Hear hear!

The first ever email I sent to someone at Unity was to thank them for releasing a product with native support for Maya files. It took me ages to learn how to export a model to work with Torque and even longer still to try and figure out vehicles. Hell, I even wrote a car setup tutorial and nearly 2 years after I abandoned Torque I still get mails from people asking me to re-upload my sample files… I hated Torque until I got the scripting thing down… then found my feet and I was well underway, struggling only with the darn model export thing… Then I found Unity and with tears in my eyes I wrote a huge “Thank you” letter to Tom and struggled like mad to get the money for Unity as I had just spent my money on Torque the week before…

So again, hear hear for ease of use. Just one thing I can’t understand, yet, probably because I have not looked at it in years… with all that Unity has to offer, why do any of you Unity users even still care to try Torque out? To follow it’s progress? To care about the company? That’s like buying a Porche and spending your weekends in the bike shop studying the latest developments in pedal materials… What am I missing?

T3D actually went far on the artist friendly side or generally better and more complete editors. Also the pipeline now has DAE → DTS conversion right in the engine, which helps fighting the problem that you had only a handfull of tools to get working DTS at all.

It also got more script only driven support due to the non-source license offered (but that can’t compete with TGB at all, which does require sources only if you really want to do engine modifications / extensions, otherwise TGB goes fine as pure script engine), T3D is only partially usable without a programmer able to work with C++, unless you do a shooter where its likely the best possible option price wise at the end of the day.

But it is and remains a more professionals oriented engine than Unity which for my liking is attracting a bit too appealing to the “kiddo with no background” crowd that as a consequence is then completely incapable or unwilling to even make any meaning out of the docs and hope for tutorials that offer them copy paste solutions and alike.

The Torque iPhone engine is “dedicated” 2D, so the feature set for that type of game is far more complete, and despite the performance advances in mobile, 2D is still the best alternative in that market, when considering price, performance, and the need for “simple games”.

The T2D/iT2D editor is FAR more advanced for making 2D games as well. Tiles with layers and snapping systems for 2D graphics and a solid viewer for 2D animation sprites, plus a much more robust physics system for 2D sprites, just to name a few. There are also three starter kits you can purchase for three major game types (platformer, adventure, and kart) that have a TON of the basic scripting done for you already, just add your own graphics and modify some variables essentially to have a full game up quickly.

Getting the source code is a huge advantage if you ever intend to expand to a larger operation with dedicated programming talent and/or you have the skill to work in the source yourself. I’ll put it this way. If you’ve ever been frustrated by a bug in Unity, that you have to wait for the next release months later to fix, OR…in some cases, find an annoying bug that never reaches a priority to get fixed in any release, with Torque, you can fix it yourself, if you have the skill.

very clever marketing movement over there for the new owners to acquire the old name and all that “old values” crap.

but they are still the same products, the same problems and honestly with unity and for those who doesnt want unity, theres udk , so i dont see how with unity and udk as competitors, how in the hell will they compete if they are the same crappy old products, i as former torque user i know the horrors of the torque engine…

with most of the competitors already having a built in integration to some third party physics engine, i dont know how “you can integrate yourself the physics engine that you want” can be a strong selling point, in that case " you can make your own engine" would also be irresistible…

i think the point here its not what its more graphically advanced or not, i think the main important point of new game middle ware should be focused on ease of use, strong solid tools and pain free workflow and unity its the closest thing to that than any other middle ware in the market in my opinion

I believe Eric did a fantastic job to save the engine part of the company when Instant Action folded.

The engine side always made money, so it was logical it would be attractive to an investment group.

They have decided to focus on the main game engines, and nothing else.

Also they are moving into bigger offices, and are hiring more people.

During the closure time, they had people working on fixing bugs the entire time.

The $99 sale will allow both existing customers, and new ones to take advantage of the source code.

I think all the engines out there have advantages, and I like Unity for the web over flash.

But I love Torque for the source code, and the T3D rendering.

I will use multiple engines, Unity and Torque. :razz:

UDK doesn’t offer sources and on any reasonable scale will cost you 100 times more. So its rather easy to see if you ask me

Also, torques networking is still the best in industry and with it being FPS geared it attracts exactly that crowd that UT invested a lot of wasted time to attract too with the Bootcamp demo: Graphics sluts that don’t care for solid stuff, flexibility, creative but pruely for graphics so it seems that T3D might exactly be in the field Unity is hunting

Also on the graphics end T3D is still among the least expensive and most powerfull solutions out there (Leadwerks is more powerfull but at the time also significantly more expensive cause it does not come with sources). Unity is still hunting to reach where the first public beta of T3D was in 2009 graphics wise and physics wise just to name 2 examples.

In the end: anyone thinking in the line of a single engine will never get anywhere outside of a hobby cause nobody with a reasonable mind would use “taste” as an objective criteria to measure an engines value for the project.

Torque has its space, Unity has and even UDK has although its space for usage out of my view is extremely limited to the engines I own and use otherwise for freelance work reasons (T3D Pro, U3 Pro, C4, Leadwerks 2.x, Shiva Advanced) due to the licensing.

For a shooter for example I would never even considering to touch Unity, as it means that I waste weeks trying to get networking etc to the point where T3D was already before I downloaded and touched it and even at its best day Unity will not compete with the networking and the dedicated server support nor can I change that cause Unity neither offers sources nor is UT willing to finally offer their modified raknet implementation so we could use native raknet servers going by the fact that the request for it has been ignored since 2.0 days at least. Unpleasant but a fact, but this kind of things is why I would recommend everybody to remain open about technologies.

They aren’t your baby, you don’t die when not using the same one nor will it be jealous and try to kick you like your GF if you use a different one

Torque engines are so full of bugs that I think that we can even say that torque itself is a bug.

All iphone torque engine are money steal products. They simply are extremly difficult to use, are full of bugs, and they are unable to move anything in real time.

The only think amazing is the 2d editor, is really really well done. The bad thing is that it is extremely slow. EXTREMELY. You are going to have a lot of problems if you want to do something complex, with a lot of graphics and effects.

They are a fraud, they sell something that lacks the most basic and obvious optimizations.

Redbeer: Don’t ever try to acquire their products. Use cocos2d for a 2d game for iphone http://www.cocos2d-iphone.org/ Is one million times better. It runs even in the first iphone and it runs really really well.

dreamora: the same. For a FPS the best option is UDK or unity, They are much powerful, have better performance, look better (MUCH better), have much better documentation, and are more cheap.

One thing that I remember really well: All products forums are blocked until you buy their products. And it has a lot of sense when you buy one of this products and in the forums you can see that 99% post are people asking to fix bugs or make it work.

Also, i really laugh with the “you can always fix the bug yourserlf” argument. Fix a bug on an engine with thousands of files needs a lot of work, and is a NON trivial problem. And in torque we are not talking about “one” bug, we talk about hundreds before you can really finish a game…