{
    "id": "correct_subsidiary_00101_3",
    "rank": 14,
    "data": {
        "url": "https://www.verisign.com/en_US/channel-resources/domain-registry-products/epp-sdks/index.xhtml",
        "read_more_link": "",
        "language": "en",
        "title": "Verisign EPP SDKs: Guide And Tools",
        "top_image": "https://www.verisign.com/en_US/resources/img/VRSN_logo_vertical_600x315.png",
        "meta_img": "https://www.verisign.com/en_US/resources/img/VRSN_logo_vertical_600x315.png",
        "images": [
            "https://www.verisign.com/en_US/resources/img/hero/blueberry.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "SDKs",
            "EPP Standard",
            "Verisign"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Verisign implements to the entire EPP standard. Here are the EPP SDKs guidelines and tools to help you develop your client applications.",
        "meta_lang": "en",
        "meta_favicon": "https://www.verisign.com/en_US/favicon-196x196.png",
        "meta_site_name": "",
        "canonical_link": "https://www.verisign.com/en_US/channel-resources/domain-registry-products/epp-sdks/index.xhtml",
        "text": "Version Distribution Documents Notes 1.16.1.0 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Added inclusion of the pom file in the lib/epp directory.\n\n2. Updated the library dependencies in libs.gradle to the latest version, including commons-codec:commons-codec:1.15,junit:junit:4.13.2,org.slf4j:slf4j-api:1.7.35,org.slf4j:slf4j-log4j12:1.7.35,ch.qos.logback:logback-core:1.2.10,ch.qos.logback:logback-classic:1.2.10,xerces:xercesImpl:2.12.1,xml-apis:xml-apis:2.0.2.\n\n3. Updated draft-ietf-regext-secure-authinfo-transfer to RFC 9154.\n\n4. Updated draft-ietf-regext-epp-registry-maintenance to RFC 9167.\n\n5. Patched the reference of the log4j2 libraries (org.apache.logging.log4j:log4j-slf4j-impl, org.apache.logging.log4j:log4j-core, and org.apache.logging.log4j:log4j-api) from version 2.15.0 to version 2.17.1 to address a log4j2 vulnerability.\n\n6. Added support for draft-ietf-regext-epp-eai-07 to the bundle in the eai project directory.\n\n7. Updated the dependency for the EPP SDK to be Java 11 or higher.\n\n1.15.0.2 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Patched the reference of the log4j2 libraries (org.apache.logging.log4j:log4j-slf4j-impl, org.apache.logging.log4j:log4j-core, and org.apache.logging.log4j:log4j-api) from version 2.14.1 to version 2.15.0 to address a log4j2 zero-day vulnerability in CVE-2021-44228. 1.15.0.1 Use version 1.15.0.2 Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Removed old v01 version of the registry mapping, and updated the dependencies in launchpolicy and loginsecpolicy.\n\n2. Updated from draft-ietf-regext-epp-registry-maintenance-14 to draft-ietf-regext-epp-registry-maintenance-15.\n\n3. Removed the premium domain extension from the bundle.\n\n4. Added the com.verisign.epp.codec.unhandlednamespaces.v1_0.EPPUnhandledNamespacesMonitor interface and the com.verisign.epp.codec.unhandlednamespaces.v1_0.EPPUnhandledNamespacesMonitorLogger implementation class with integration into the filter classes (EPPUnhandledNamespacesPollMessageFilter and EPPUnhandledNamespacesResponseFilter).\n\n5. Removed old versions of the registry fee extension (draft-brown-epp-fees-06, draft-brown-epp-fees-07, draft-ietf-regext-epp-fees-00, draft-ietf-regext-epp-fees-08).\n\n6. Updated from draft-ietf-regext-secure-authinfo-transfer-04 to draft-ietf-regext-secure-authinfo-transfer-07.\n\n7. Updated draft-ietf-regext-unhandled-namespaces to RFC 9038.\n\n8. Removed the JOBS Contact Extension from the bundle.\n\n9. Added the Maintenance EPP Mapping to the bundle, starting with draft-ietf-regext-epp-registry-maintenance-14.\n\n10. Removed the logger configuration properties from epp.config, which include EPP.LogMode, EPP.LogLevel, EPP.LogCfgFile, and EPP.LogCfgFileWatch.\n\n11. Changed the use of the Log4J 1 API for logging to use SLF4J along with support for multiple backend loggers, including Log4J 1, Log4J 2, and Logback. The backend logger will be auto-configured based on the logger libraries and configuration file included in the classpath. Log4J 2 is set as the default backend logger.\n\n12. Added the testClientInitiatedRenegotation test to com.verisign.epp.interfaces.EPPSessionTst to use the RenogotiationSession to verify that client-initiated renegotiation is disabled.\n\n13. Added setting the jdk.tls.rejectClientInitiatedRenegotiation system propery when launching the Stub Server to disable client-initiated renegotiation.\n\n14. Created the com.verisign.epp.interfaces.RenogotiationSession class to test whether the EPP server support client-initiated renegotiation.\n\n15. Made the getter methods of com.verisign.epp.client.EPPSSLClientSocket public to enable testing client-initiated renegotiation.\n\n16. Added the option of passing the cause for the com.verisign.epp.exception.EPPCommandException.\n\n17. Updated the Login Security Extension to only support the RFC (1.0) version.\n\n18. Added the com/verisign/epp/pool/*Tst.class classes for the testClient and the testClientServer Gradle tasks.\n\n19. Added support for the minAbsoluteTimeout and maxAbsoluteTimeout session pool (single and system) properties to randomize the absolute timeout on a per session basis between the minimum and maximum absolute timeout. The absoluteTimeout property is overridden by the setting of both the minAbsoluteTimeout and maxAbsoluteTimeout properties.\n\n20. Revised the test cases in com.verisign.epp.codec.domain.EPPDomainTst.testDomainUpdate to exactly match the example provided in RFC 5731 and to add a case for an update with the host attribute model.\n\n21. Changed the addresses attribute and associated accessor methods in com.verisign.epp.codec.domain.EPPHostAttr to be Vector<EPPHostAddress> and created the hasAddresses() : boolean and addAddress(EPPHostAddress) methods.\n\n22. Changed the com.verisign.epp.codec.domain.EPPDomainAddRemove servers attributes and the associated accessor methods to use Vector<?> instead of Vector<String> to support both host objects (String) and host attributes (EPPHostAttr). Created the addServer(EPPHostAttr) method for host attribute to match the addServer(String) method for host object.\n\n23. Replaced draft-ietf-regext-unhandled-namespaces-01 with draft-ietf-regext-unhandled-namespaces-03.\n\n24. Updated com.verisign.epp.transport.client.EPPSSLClientSocket and com.verisign.epp.transport.client.EPPPlainClientSocket classes to use the EPP.ConTimeOut property for the connection timeout and the EPP.ReadTimeOut property for the read timeout. Previously, the EPP.ConTimeOut only applied to the read timeout and was not used for the connection timeout. The EPPEnv.getReadTimeOut() method was added for the EPP.ReadTimeOut property. The EPP.ConTimeOut property value will be used for the EPP.ReadTimeOut if the EPP.ReadTimeOut property is not set.\n\n25. Updated the com.verisign.epp.codec.domain.EPPDomainTst to use the new \"add\" methods for com.verisign.epp.codec.domain.EPPDomainAddRemove.\n\n26. Added \"add\" for the list attributes and \"has\" methods for all attributes in com.verisign.epp.codec.domain.EPPDomainAddRemove.\n\n27. Fixed reference of Vector<String> with Vector<EPPDomainStatus> for the statuses in com.verisign.epp.codec.domain.EPPDomainAddRemove.\n\n28. Added use of generics to the Vector attributes of com.verisign.epp.codec.domain.EPPDomainAddRemove.\n\n29. Added EPPUtil.namespaceToNamespaceSuffix(String), EPPUtil.findUnsupportedExtNamespaceSuffixes(List<String>, List<EPPCodecComponent), EPPCommand.findUnsupportedExtNamespaceSuffixes(List<String), EPPResponse.findUnsupportedExtNamespaceSuffixes(List<String) for easier configuration and logging using XML namespace suffixes.\n\n30. Added EPPUtil.findExtNamespaces(List<EPPCodecComponent>, List<String), EPPUtil.findExtNamespaceSuffixes(List<EPPCodecComponent>, List<String), EPPCommand.findExtNamespaces(List<String), EPPCommand.findExtNamespaceSuffixes(List<String), EPPResponse.findExtNamespaces(List<String), EPPResponse.findExtNamespaceSuffixes(List<String) for more quickly identifying command and response extensions.\n\n31. Replaced draft-ietf-regext-login-security-08 and draft-ietf-regext-login-security-09 with epp-login-security-rfc8807.\n\n32. The Pool.[Client|Server|XMLSignature].<property> properties have been replaced with a single property per pool (EPP.[SchemaCachingParserPool|TransformerPool|XMLSignaturePool].size), where the pools are used in both the client and the server. The prior properties will be ignored and the default pool size is set to 10 if the new properties do not exist. Look to the new bundles/verisign/epp.config for use of the new pool properties.\n\n33. Replaced PoolMan with Apache Commons Pool 2 for the parser and transformer pools. The Singleton classes com.verisign.epp.pool.parser.EPPSchemaCachingParserPool, com.verisign.epp.pool.parser.EPPXMLSignatureParserPool, com.verisign.epp.pool.transformer.EPPTransformerPool, and epp.verisign.epp.util.EPPStrictContactParserPool needed to be created along with changes to the com.verisign.epp.util.EPPXMLByteArray, com.verisign.epp.util.EPPXMLStream, and other classes dependent on the pools.\n\n34. Replaced the use of Apache Commons Pool 1 with Apache Commons Pool 2 for use in com.verisign.epp.pool.EPPSessionPool and associated classes. The maxActive pool property is deprecated for the maxTotal property and the initMaxActive property is deprecated for the initMaxTotal property. Removed use of the poolableClassName property.\n\n35. Changed to use gradle 6.4 in gradle-wrapper.properties.\n\n36. Updated from dnsjava version 2.1.9 to version 3.1.0.\n\n37. Added com.verisign.epp.util.EPPUtil.findUnsupportedExtNamespaces(List<String>, List<EPPCodecComponent>), com.verisign.epp.codec.gen.EPPCommand.findUnsupportedExtNamespaces(List<String>), and com.verisign.epp.codec.gen.EPPResponse.findUnsupportedExtNamespaces(List<String>) to identify unsupported EPP extensions, and the associated unit tests in com.verisign.epp.util.EPPCodecTst.testFindDUnsupportedExtensions().\n\n38. Revised com.verisign.epp.codec.domain.EPPDomainCreateCmd to use generics for the Vector lists as a prototype for revising the EPP SDK to leverage generics while maintaining interface backward compatibility. Added has and add methods for each of the list properties (contacts, servers). Revised the servers list to work only with name server objects and added a new serverAttrs list and corresponding methods to use host attributes.\n\n39. Revised com.verisign.epp.codec.domain.EPPDomainInfoResp to use generics for the Vector lists as a prototype for revising the EPP SDK to leverage generics while maintaining interface backward compatibility. Added has and add methods for each of the list properties (statuses, contacts, nses, and hosts). Revised the nses list to work only with name server objects and added a new nsAttrs list and corresponding methods to use host attributes.\n\n40. Replaced draft-ietf-regext-epp-fees-20 with RFC 8748. 1.12.0.12 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Replaced the use of Ant for builds to Gradle.\n\n2. Removed all use of the \"xsi:schemaLocation\" XML attribute, the use of the \"http://www.w3.org/2001/XMLSchema-instance\" XML namespace, and the passing of the schemaLocation to the com.verisign.epp.codec.gen.EPPService class.\n\n3. Created the com.verisign.epp.interfaces.EPPSession.initLoginAdapter() method and ensured that it is called in all of the com.verisign.epp.interfaces.EPPSession.init methods.\n\n4. Updated com.verisign.epp.interfaces.EPPSessionTst to address a \"missing type arguments for generic class Class<T>\" warning.\n\n5. Updated draft draft-ietf-regext-epp-fees and fee-1.0.xsd for draft-ietf-regext-epp-fees-19.\n\n6. Updated the EPPPollQueueMgr.delete method to use the <poll> element instead of the \"epp\" prefixed <epp:poll> element in the value of the error response, since the \"epp\" namespace prefix is undefined.\n\n7. Added support for draft-ietf-regext-login-security-04.\n\n8. Fixed an issue with the logging of the received packets on the client-side by updating the com.verisign.epp.interfaces.EPPSession class.\n\n9. Removed old versions of the Login Security Extension. which include v01, v02, and v03. Versions v04 and v1_0 are kept.\n\n10. Updated the order that the factories and handlers are loaded in com.verisign.epp.serverstub.Server.initializeDispatcher(), where the extension factories, then the map factories, and finally the handlers are loaded. This addresses a corner case where the com.verisign.epp.serverstub.ContactHandler is loading the strict contact parser pool prior to the XML schemas linked to the factories are loaded.\n\n11. Fixed the logic of replacing \"contact-1.0-relaxed.xsd\" with \"contact-1.0.xsd\" in com.verisign.epp.util.EPPStrictContactParser, where previously \"contact-1.0-relaxed.xsd\" was removed and \"contact-1.0.xsd\" was not added.\n\n12. Updated draft draft-ietf-regext-epp-fees to draft-ietf-regext-epp-fees-18.\n\n13. Updated EPPSession.getnewPassword() to EPPSession.getNewPassword().\n\n14. Removed unused com.verisign.epp.transport.EPPEventHandler and com.verisign.epp.transport.EPPEventTstHandler.\n\n15. Added masking of password and new password in com.verisign.epp.namestore.util.EPPSecureSendReceiveLogger for com.verisign.epp.codec.loginsec.v02.EPPLoginSec, com.verisign.epp.codec.loginsec.v03.EPPLoginSec, com.verisign.epp.codec.loginsec.v03.EPPLoginSec, or com.verisign.epp.codec.loginsec.v1_0.EPPLoginSec extensions to login command.\n\n16. Fixed com.verisign.epp.codec.loginsec.v1_0.EPPLoginSecUserAgent and com.verisign.epp.codec.loginsec.v04.EPPLoginSecUserAgent getTech(String) : void method to setTech(String) : void.\n\n17. Created sources.jar file named epp-verisign-${build.version}-sources.jar in the epp lib directory and added the DotName extensions (defreg, emailfwd, namewatch, and persreg) to it.\n\n18. Added generation of the EPP SDK POM file when creating the epp-verisign-<version>.jar file.\n\n19. Created the com.verisign.epp.util.EPPDisabledEntityResolver class and use it when the EPP.UseEntityResolver property is set to false to ensure no XML schemas are dynamically resolved.\n\n20. Added support for draft-ietf-regext-login-security-03.\n\n21. Added support for draft-gould-regext-login-security-policy-03.\n\n22. Set the default value in epp.config for the property EPP.UseEntityResolver=false to disable the entity resolver.\n\n23. Set the XML parser features that mitigate the XML eXternal Entity Injection (XXE) vulnerability in com.verisign.epp.util.EPPSchemaCachingParser.\n\n24. Corrected items in the Verisign Bundle EPP SDK Programmer's Guide based on what was done for version 1.11.0.7.\n\n25. Added the initialize(Properties), initialize(String, ClassLoader), and initialize() methods to com.verisign.epp.interfaces.EPPApplication to support different methods of initializing the EPP SDK.\n\n26. Removed decode support for the preWhois and postWhois elements in the restore report command of draft-hollenbeck-epp-rgp-03.\n\n27. Added com.verisign.epp.util.EPPUtil.findDuplicateExtNamespaces(List<EPPCodecComponent>), com.verisign.epp.codec.gen.EPPCommand.findDuplicateExtNamespaces(), and com.verisign.epp.codec.gen.EPPResponse.findDuplicateExtNamespaces() to identify duplicate EPP extensions, and the associated unit tests in com.verisign.epp.util.EPPCodecTst.testFindDuplicateExtensions().\n\n28. Cleaned up the com.verisign.epp.codec.domain code, by not hard coding the XML namespace prefix on decode, cleaning up the imports, cleaning up the comments, and generally making it more consistent with the newer code.\n\n29. Added support for removing the auth info via the <domain:null> element by adding a new ELM_NULL authorization type and the removePassword() method to com.verisign.epp.codec.gen.EPPAuthInfo.\n\n30. Fixed a large set of javadoc errors and warnings. 1.11.0.7 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Updated draft draft-ietf-regext-epp-fees to draft-ietf-regext-epp-fees-16.\n\n2. Updated change poll extension to RFC 8590.\n\n3. Updated organization mapping and organization extension to RFC 8543 and RFC 8544, respectively.\n\n4. Updated from XercesJ 2.11.0 to 2.12.0.\n\n5. Added support for draft-ietf-regext-login-security-01\n\n6. Updated compilation to target Java 8 instead of Java 7.\n\n7. Updated to compile and run with Java 11. Added jaxb-api-2.3.1.jar and fixed many warnings due to deprecated classes and methods.\n\n8. Added support for draft-gould-casanova-regext-unhandled-namespaces-00.\n\n9. Added support for draft-gould-regext-login-security-policy-03.\n\n10. Added support for draft-gould-regext-launch-policy-01.\n\n11. Added support for draft-gould-carney-regext-registry-04.\n\n12. Added support for draft-ietf-regext-validate-04.\n\n13. Removed whois and suggestion from the SDK.\n\n14. Commented out inclusion of the passphrase attributes (identityPassPhrase, identityKeyPassPhrase, and trustStorePassPhrase) in the EPPSSLConfig.toString() : String method to meet logging security best practice.\n\n15. Added support for secure packet logging by creating the com.verisign.epp.util.EPPSendReceiveLogger interface along with the default com.verisign.epp.util.EPPRawSendReceiveLogger class and the com.verisign.epp.namestore.util.EPPSecureSendReceiveLogger class. The default is to use the EPPRawSendReceiveLogger with the option of overriding the default using the EPP.SendReceiveLogger epp.config property. Set the property to com.verisign.epp.namestore.util.EPPSecureSendReceiveLogger to get the password and auth info attributes logged with the \"MASKED\" value.\n\n16. Fixed a bug in com.verisign.epp.codec.emailFwd.EPPEmailFwdCheckResult that set the check reason to the email forwarding name on decode. Updated the EPPEmailFwdCheckResult.equals methods to ensure that all attributes are checked. Made related cleanup changes to com.verisign.epp.codec.defReg.EPPDefRegCheckResult.\n\n17. Added an additional check in com.verisign.epp.util.EPPSchemaCachingEntityResolver to ensure that XML schemas in the classpath are the only XML schemas that can be dynamically loaded.\n\n18. Deprecated com.verisign.epp.namestore.interfaces.NSSubProduct. Removed BZ and revised COM, NET, ORG, and NAME to use the a-label TLD in com.verisign.epp.namestore.interfaces.NSSubProduct.\n\n19. Changed to use TLSv1.2 as the default EPP.SSLProtocol setting across each of the epp.config files.\n\n20. Added support for draft-ietf-regext-epp-fees-13 that adds the urn:ietf:params:xml:ns:epp:fee-1.0 XML namespace with its associated fee-1.0.xsd XML schema, the com.verisign.epp.codec.fee.v1_0 package, and related classes.\n\n21. Added the com.verisign.epp.interfaces.EPPLoginAdapter class, the optional \"EPP.LoginAdapter\" epp.config property, and added invoking the set LoginAdapter within com.verisign.epp.interfaces.EPPSession to support adding an EPP login extension.\n\n22. Added hasService(String) : boolean and hasExtensionService(String) : boolean to com.verisign.epp.codec.gen.EPPServiceMenu and com.verisign.epp.codec.gen.EPPGreeting to be able to easily identify whether the server supports a specific object or extension service.\n\n23. Added EPP.UseUserAgent (EPPEnv.isUseUserAgent() : boolean) and EPP.SDKVersion (EPPEnv.getSDKVersion() : boolean) epp.config properties to support providing the user agent information in the login security extension.\n\n24. Added support for the Login Security Extension.\n\n25. Added the getNamespace() : String method to the com.verisign.epp.codec.gen.EPPCodecComponent interface and all of the implemented classes to make all components self-describing for the XML namespace.\n\n26. Added the com.verisign.epp.codec.gen.EPPPollMessageFilter utility class to filter EPP poll message responses based on the login services (object and command / response) supported by the client.\n\n27. Modified the com.verisign.epp.serverstub.GenHandler.doPoll(EPPEvent, Object) method to call com.verisign.epp.codec.gen.EPPPollMessageFilter in no-op and standard mode to demonstrate filtering the poll messages based on the client login services.\n\n28. Added the getNamespace() : String method to some of the responses (EPPRgpPollResponse, EPPRelatedDomainExtDeleteResp, EPPBalanceInfoResp, EPPLowBalancePollResponse, EPPNameVerificationPendActionMsg) to ensure that they return the correct XML namespace.\n\n29. Removed old fee extension versions including v06, v07, and v08.\n\n30. Replaced references of reseller and resellerext to org and orgext.\n\n31. Created the com.verisign.epp.codec.EPPPollMessageFilter interface that is implemented by the com.verisign.epp.codec.EPPXmlMsgPollMessageFilter, com.verisign.epp.codec.EPPExtValuePollMessageFilter, and com.verisign.epp.codec.EPPFullExtValuePollMessageFilter classes. The optional EPP.PollMessageFilter property is defined to set the desired filter for use within com.verisign.epp.serverstub.GenHandler.doPoll(EPPEvent, Object) when processing the poll messages.\n\n32. Added support for draft-ietf-regext-org-10 by adding com.verisign.epp.codec.org.EPPOrgPendActionMsg, com.verisign.epp.serverstub.OrgPollHandler, and revising com.verisign.epp.serverstub.OrgHandler to handle a pending create and insert a pending action poll message based on a revised com.verisign.epp.interfaces.EPPOrgTst.\n\n33. Replaced the expired test SMDs, SMD CRL, and revoked SMD list based on a posting by ICANN.\n\n34. Fixed some of the XML namespace prefix and URI handling from within com.verisign.epp.codec.gen.EPPValue to support the different poll message filters.\n\n35. Renamed com.verisign.epp.codec.gen.EPPPollMessageFilter to com.verisign.epp.codec.gen.EPPXmlMsgPollMessageFilter, added com.verisign.epp.codec.gen.EPPExtValuePollMessageFilter, and added com.verisign.epp.codec.gen.EPPFullExtValuePollMessageFilter to support three different approaches to filtering poll message data that is unsupported by the client based on the client's login services. The com.verisign.epp.serverstub.GenHandler.doPoll(EPPEvent, Object) is pre-defined to filter via EPPFullExtValuePollMessageFilter, but the filtering can be replaced to use one of the other filters.\n\n36. Removed com.verisign.epp.util.TestErrorHandler and replaced it's used with com.verisign.epp.util.EPPXMLErrorHandler in the test classes.\n\n37. Added the maskString(String) : String method to the EPPSendReceiverLogger class and it's derived classes for use in the EPPXMLErrorHandler class for masking sensitive XML parser errors like the 'pwType'. 1.10.0.3 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Made setting of the XML entity resolver, based on the com.verisign.epp.util.EPPSchemaCachingEntityResolver, a configurable setting using the optional EPP.UseEntityResolver config property, with a default value of true.\n\n2. Added relaxed contact validation support used to transition a thin registry to thick. Relaxed validation leverages a new contact XSD (contact-1.0-relaxed.xsd) that makes the <contact:name>, <contact:addr>, <contact:city>, <contact:street>, <contact:cc>, and <contact:email> elements optional. The new optional EPP.Contact.RelaxedValidation epp.config property must be set to true for the client and server stub to use and validate to the relaxed schema.\n\n3. Replaced reference of com.sun.org.apache.xerces.internal.dom.DocumentImpl to org.apache.xerces.dom.DocumentImpl in EPPUtil.\n\n4. Added logging to EPPGenHandler.handleEvent(EPPEvent, Object).\n\n5. Added getFirstPostalInfo() : EPPContactPostalDefinition to EPPContactInfoResp and EPPContact.\n\n6. Added EPPDomainInfoResp.getContactByType(String) : EPPDomainContact, EPPDomainInfoResp.getAdminContact() : EPPDomainContact, EPPDomainInfoResp.getTechContact() : EPPDomainContact, and EPPDomainInfoResp.getBillingContact() : EPPDomainContact.\n\n7. Added com.verisign.epp.pool.EPPClientTransIdGenerator interface, concrete com.verisign.epp.pool.ClientTransIdGenerator class, and the optional clientTransIdGenerator pool property to define the concrete EPPClientTransIdGenerator to use for generating client transaction identifiers for the login and logout commands for the pool.\n\n8. Added EPPSession.sendMessage(EPPMessage) to help in testing a negative test case, but also as a potentially useful method for sending any EPPMessage to the session.\n\n9. Added more debug logging to EPPSSLImpl.\n\n10. Added validation of the EPPMessage type in the EPPDispatcher and the EPPByteArrayDispatcher to ensure that receiving an EPPResponse or EPPGreeting in the server will return an appropriate error message.\n\n11. Added additional SSL Protocol options in the comments of the EPP.SSLProtocol property and set the default protocol to TLSv1 in the epp.config.\n\n12. Updated the EPPUtil.decodeBooleanAttr(Element, String) method to properly identify a non-existent attribute and to enhance the format of the EPPDecodeException value to easier support.\n\n13. Made the refundable and grace-period attributes of com.verisign.epp.codec.fee.v09.EPPFeeValue truly optional with no default value, while the applied attribute remained with the \"immediate\" default value based on the default value in the XSD. Added \"has\" methods for these attributes, changed the refundable to a Boolean to support a null value, and changed the encode and decode methods to handle non-existent attributes.\n\n14. Added conveniance constructor that takes both a EPPFeeValue and a currency (String) parameter for the com.verisign.epp.codec.fee.v09 classes of EPPFeeTransform, EPPFeeCreate, EPPFeeRenew, EPPFeeTransfer, and EPPFeeUpdate.\n\n15. Added methods for passing and returning the Base64 encoded signed code into com.verisign.epp.codec.verificationcode.EPPEncodedSignedCodeValue. The new EPPEncodedSignedCodeValue methods: decodeValue(byte[]), decodeValue(String), encodeValue(boolean) : String, encodeValueByteArray() : byte[], and encodeValueByteArray(boolean) : byte[] where added.\n\n16. Added support for running the com.verisign.epp.verificationcode.china.ChinaVerificationCodeTst test without the VSP pool and by loading the DNVC from the dnvc.b64 file and the RNVC from the rnvc.b64 file. 1.9.0.1 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Added support for running the com.verisign.epp.verificationcode.china.ChinaVerificationCodeTst test without the VSP pool and by loading the DNVC from the dnvc.b64 file and the RNVC from the rnvc.b64 file.\n\n2. Added support for draft-brown-epp-fees-07.\n\n3. Added additional SSL Protocol options in the comments of the EPP.SSLProtocol property and set the default protocol to TLSv1 in the epp.config.\n\n4. Changed the com.verisign.epp.codec.verificationcode.EPPSignedCode.decode(byte[] aSignedCodeArray) : void from protected to public.\n\n5. Updated the EPPUtil.decodeBooleanAttr(Element, String) method to properly identify a non-existent attribute and to enhance the format of the EPPDecodeException value to easier support.\n\n6. Made the refundable and grace-period attributes of com.verisign.epp.codec.fee.v09.EPPFeeValue truly optional with no default value, while the applied attribute remained with the \"immediate\" default value based on the default value in the XSD.\n\n7. Added convenient constructor that takes both a EPPFeeValue and a currency (String) parameter for the com.verisign.epp.codec.fee.v09 classes of EPPFeeTransform, EPPFeeCreate, EPPFeeRenew, EPPFeeTransfer, and EPPFeeUpdate.\n\n8. Added methods for passing and returning the Base64 encoded signed code into com.verisign.epp.codec.verificationcode.EPPEncodedSignedCodeValue. 1.8.0.4 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Added hasTrustAnchor(): boolean and getTrustAnchor() : TrustAnchor to EPPSignedCode for getting the matching trust anchor from the PKIXParameters upon successful validation.\n\n2. Added support for draft-zhou-eppext-reseller-mapping-02 and draft-zhou-eppext-reseller-02.\n\n3. Added the com.verisign.epp.verificationcode.china.ChinaVerificationCodeTst along with associated changes to the build and stub server behavior to support a test of the 7 predefined verification flows that will work against the Stub Server and the OT&E servers.\n\n4. Added com.verisign.epp.pool.EPPSessionPool.hasSystemSessionPool(String) : boolean method to determine if a specific system session pool existed.\n\n5. Fixed com.verisign.epp.codec.verificationcode.EPPVerificationCode.getVspId() : int to return UNDEFINED instead of throwing NumberFormatException when the vspId is not an integer.\n\n6. Added validation of the verification code (vsp-id and code types) using formatted trust anchor alias names in the trust store. 1.6.0.2 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Added the Verification Code Extension (verificationcode), that complies with draft-gould-eppext-verificationcode-02.\n\n2. Added the China Name Verification Mapping (vsp), that complies with draft-xie-eppext-nv-mapping-01. 1.5.0.0 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Added the EPPSession.sendPacket(byte []) method and EPPXMLStream.writePacket(byte[], OutputStream) to enable sending a packet through the session within having to go through the Codec.\n\n2. Added the Change Poll Mapping (changepoll), that complies with draft-gould-change-poll-02, to the Verisign Bundle.\n\n3. Added the Registry Fee Extension (fee), that complies with draft-brown-epp-fees-03 and draft-brown-epp-fees-04, to the Verisign Bundle.\n\n4. Added the Allocation Token Extension (allocationtoken), that complies with draft-gould-allocation-token-02, to the Verisign Bundle.\n\n5. Updated Launch Phase Extension (launch) to comply with draft-ietf-eppext-launchphase-03 and subsequently draft-ietf-eppext-launchphase-05, by adding support for the Trademark Check Form.\n\n6. Added the IDN Map Extension (idnmap), that complies with draft-ietf-eppext-idnmap-01, to the Verisign Bundle.\n\n7. Added the subID attribute in the info element of NameSuggestion.\n\n8. Added the IDN Table Mapping (idntable), that complies with draft-gould-idn-table-02, to the Verisign Bundle. 1.4.0.0 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Switched to be dependent on Java 6 instead of Java 5. The launch extension already was dependent on Java 6 and with the new dependency on the use of JAXB, the entire SDK is being moved to be dependent on Java 6.\n\n2. Fixed a bug with encoding the XSD dateTime type in EPPUtil by using 4 digit precision for the seconds. The fix was to use a default of 3 digit precision (milliseconds) on the encode and to use JAXB DatatypeConverter.parseDateTime for parsing the dataTime value. Access methods were added (getTimeInstantFormat(): String and setTimeInstantFormat(String)) to enable changing the encoding format if needed. 1.3.0.0 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Updated to the 25nov13 test SMD's (SMD's without whitespace) and test SMD Revocation List. The SMD Revocation List was converted from UTF-8 to ASCII.\n\n2. Updated to support draft-tan-epp-launchphase-12 by updating the launch-1.0.xsd, updating the draft-tan-epp-launchphase.txt in the doc directory, and updating the code and tests to support the new validatorID optional attribute.\n\n3. Fixed the XML namespace handling in the com.verisign.epp.codec.registry.EPPRegistryRegEx class and some of the client classes to com.verisign.epp.codec.registry.EPPRegistryRegEx.\n\n4. Changed com.verisign.epp.codec.signedMark.EPPSignedMark to handle XML parsing exception. This is specially required while parsing the XML obtained from the encoded SMD. 1.1.0.4 Unix Binary (TAR)\n\nUnix Source (TAR)\n\nWindows Binary (ZIP)\n\nWindows Source (ZIP) Programmer's Guide (PDF)\n\nChange Log (TXT) 1. Split com.verisign.epp.codec.EPPSignedMark into two classes EPPSignedMark and EPPEncodedSignedMark to handle the validation of SMD’s with and without extra whitespace.\n\n2. Created SMD InputStream constructor to EPPEncodedSignedMark to directly parse SMD’s.\n\n3. Added support for Revoked SMD validation\n\n4. Added inclusion and testing of ICANN sample SMD’s\n\n5. Added support for more than one CRL to support SMD’s created by the SDK and ICANN sample SMD’s.\n\n6. Added Domain Info Form and the Related Info Form to the Related Domain info command.\n\n7. Created com.verisign.epp.interfaces.EPPRelatedDomain class to support all of the Related Domain Extension commands.\n\n8. Updated com.verisign.epp.namestore.interfaces.NSDomain class to extend com.verisign.epp.interfaces.EPPRelatedDomain for adding support for the new Related Domain Extension commands.\n\n9. Added new “uTLD” attribute in grid for Suggestion.\n\n10. Added new “restricted” status to Suggestion.\n\n11. Broadened the tld type in Suggestion to support Unicode values."
    }
}