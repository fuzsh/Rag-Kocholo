{
    "id": "dbpedia_4193_2",
    "rank": 78,
    "data": {
        "url": "https://blog.archive.org/2013/12/",
        "read_more_link": "",
        "language": "en",
        "title": "Internet Archive Blogs",
        "top_image": "https://blog.archive.org/wp-content/uploads/2023/03/ia-logo-sq-150x150.png",
        "meta_img": "https://blog.archive.org/wp-content/uploads/2023/03/ia-logo-sq-150x150.png",
        "images": [
            "http://jsmess.textfiles.com/images/logo.png",
            "http://blog.archive.org/wp-content/uploads/2013/12/635090727940420469-300x197.jpg",
            "http://blog.archive.org/wp-content/uploads/2013/12/mcdades_poster-300x225.jpg",
            "https://archive.org/download/atari_2600_library/atari2600.jpg",
            "https://archive.org/download/Atari_7800_TOSEC_2012_04_23/atari_7800_by_easterbilby.jpg",
            "https://archive.org/download/Coleco_ColecoVision_TOSEC_2012_04_23/Coleco-vision-console.jpg",
            "https://archive.org/download/library_magnavox_odyssey2/Magnavox-Odyssey-2.jpg",
            "https://archive.org/download/bally_astrocade_library/Bally-Arcade-Console.png",
            "http://blog.archive.org/wp-content/uploads/2013/11/bitcoinrotate.png",
            "http://blog.archive.org/wp-content/uploads/2013/12/01_Title.png",
            "http://blog.archive.org/wp-content/uploads/2013/12/TVnewMap2.gif",
            "http://blog.archive.org/wp-content/uploads/2013/12/Watch4-year.jpg",
            "http://blog.archive.org/wp-content/uploads/2013/12/Compare-Contrast.jpg",
            "http://blog.archive.org/wp-content/uploads/2013/12/rudolph-300x224.png",
            "http://blog.archive.org/wp-content/uploads/2013/12/crateplayer-150x150.png",
            "http://blog.archive.org/wp-content/uploads/2013/12/IAtshirt-f_400-300x300.jpg",
            "http://blog.archive.org/wp-content/uploads/2013/12/IAtshirt-b-universal_400-150x150.jpg",
            "http://blog.archive.org/wp-content/uploads/2013/12/IAtshirt-b-yeah_400-150x150.jpg",
            "http://blog.archive.org/wp-content/uploads/2013/11/FerryBldgFromWaterDusk-300x193.jpg",
            "http://blog.archive.org/wp-content/uploads/2013/11/TouristsGGBopening1936-300x227.jpg",
            "http://blog.archive.org/wp-content/uploads/2013/11/ATripDownMarketStreet1906_1-300x204.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Jason Scott",
            "Brewster Kahle",
            "Roger Macdonald",
            "Alexis Rossi",
            "jeff kaplan"
        ],
        "publish_date": "2013-12-31T00:44:39+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://blog.archive.org/wp-content/uploads/2023/03/ia-logo-sq-150x150.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "The announcements of the Console Living Room and the Historical Software Collection have brought a large amount of attention to the JSMESS emulator that archive.org uses. Naturally, being a relatively new method of playing software in a browser, there are number of technical questions and explanations that people are seeking answers for. This entry is meant to cover the most frequently asked questions and will be updated as new information becomes available.\n\nWhat exactly is the JSMESS emulator?\n\nThe JSMESS emulator is an ongoing project to port the well-established general machine emulator MESS to JavaScript. The bulk amount of work (emulation, research, coding, testing) has been done by the MESS team over the last 15 years to produce a open sourced, accurate, flexible ability to emulate hundreds of individual computer platforms. It is highly portable and is available for a variety of platforms including Windows, OS X, Linux, and many others.\n\nIsn’t JavaScript slow? Isn’t this incredibly wasteful? Why not use…\n\nThe purpose behind utilizing JavaScript as a platform is that JavaScript is a dependable, standardized runtime environment available in essentially all modern browsers. Other solutions tend to work only in one browser, are under litigation/rights issues, or require external plug-ins before use. Should a cross-platform default runtime solution appear and surpass JavaScript, the JSMESS team will revisit the question, but for now, JavaScript is the preferred approach. In short, right now JavaScript Just Works.\n\nThe circumstances by which JavaScript became the defacto cross-platform, default runtime environment are fascinating but out of the scope of this FAQ. It is suggested that you read some of the essays about the situation including Worse is Better and The Principle of Least Power. However we got to this point, it is currently possible to get excellent performance on modern browsers inside of JavaScript for tasks like this emulator.\n\nHow exactly do you convert MESS to JavaScript? Do you rewrite from scratch?\n\nJSMESS is created by running the MESS source code through a compiler called Emscripten. Emscripten is a project by Mozilla for easy conversion of native applications into JavaScript. While notable effort is being done by the JSMESS team to prepare MESS source code for Emscripten, Emscripten does the lion’s share of conversion and allows the code in JSMESS to be as close to MESS as possible without major revision. This conversion utility’s power and flexibility is now expanding into many other projects, some of them unthinkable even a year ago in terms of speed and turnaround time of the project.\n\nWhere possible, the JSMESS team are adding code changes to the original MESS source code or even to Emscripten itself, so that advances in support and function are available to other projects, benefitting all.\n\nI’m having trouble with…\n\nIt is helpful to keep in mind that a full speed running JSMESS only went online at the end of August 2013. Because this is all brand-new in terms of interacting with the families of browsers out there, there are going to be incompatibilities, hiccups, speed issues and other situations.\n\nHere are some common solutions:\n\nGenerally, we find that Firefox runs the quickest JavaScript (partially due to use of asm.js optimizations). It is worth connecting to the site using that browser, which is freely available, to make sure that the problem isn’t located somewhere else along the way for you. (The JSMESS team has a priority to make sure it runs on as many platforms and browsers as possible, of course – but we are a small team, so some variations can be missed.) In general, the goal will be to run equally fast on all browsers.\n\nSome people are running JavaScript blockers or filters, and naturally this program will not work at all in those situations. All current browsers have sliding updates, meaning that a new version comes out very frequently. Check to make sure that you were running the most up-to-date edition of your browser. Usually this information is located in the about menu selection of your browser.\n\nIt says something about a gamepad at the bottom. I can use a gamepad?\n\nIf you have a USB-connected gamepad, it is possible on the SG-1000 emulator to use it with the games. (This will be working on all the platforms, shortly.) To make this happen, go to the loading page, and before pressing the space bar to start the emulation, press buttons on your USB gamepad until the page says it can see the gamepad. Then it should “just work”.\n\nI can’t hear anything!\n\nSound has turned out to be one of the more difficult issues with JavaScript programs. Different browsers handle sound differently, and the human ear notices tiny differences in sound quality much more than they noticed microscopic slowdowns in video rendering. This is definitely on the list to be improved as soon as possible, as soon as we have the best solution in place.\n\nI’m not sure which keys to use!\n\nWe are continually updating instructions with accurate information about which keys activate which selections on a given platform and for a specific program. In general, the arrow keys, and control keys tend to work best, and the number keys sometimes trigger off other options. A team of volunteers has been working on documentation and linking and will continue to.\n\nHow can I help?\n\nIf you are a developer and care about the state of emulation, consider getting involved with contributing fixes and improvements to the MESS emulator. Whatever changes are reflected in that project with regards to platform support and accuracy will come down the line automatically to JSMESS.\n\nIf programming is not your thing, we can always use help with improved metadata, better linking to history, and better context as to the various items are collection. Please contact the software curator at Internet Archive, Jason Scott. He’s at jscott@archive.org.\n\nI wish that you….\n\nWe do too. Our commitment is to make JSMESS as good as it can be, and able to run more platforms, with accurate and smooth sound and performance in the browser. We invite people who want to contribute code or other efforts to reach Jason Scott, or to contibute to the linked code repositories in this FAQ.\n\nThanks!\n\nWe are excited to unveil a couple experimental data-driven visualizations that literally map 400,000 hours of U.S. television news. One of our collaborating scholars, Kalev Leetaru, applied “fulltext geocoding” software to our entire television news research service collection. These algorithms scan the closed captioning of each broadcast looking for any mention of a location anywhere in the world, disambiguate them using the surrounding discussion (Springfield, Illinois vs Springfield, Massachusetts), and ultimately map each location. The resulting CartoDB visualizations provide what we believe is one of the first large-scale glimpses of the geography of American television news, beginning to reveal which areas receive outsized attention and which are neglected.\n\nWatch TV news mentions of places throughout the world for each day.\n\nSelect a TV station and time window to view their representations of places.\n\nKeep in mind that as you explore, zoom-in and click the locations in these pilot maps, you are going to find a lot of errors. Those range from errors in the underlying closed captioning (“two Paris of shoes”) to locations that are paired with onscreen information (a mention of “Springfield” while displaying a map of Massachusetts on the screen). Thus, as you click around, you’re going to find that some locations work great, while others have a lot more error, especially small towns with common names.\n\nWhat you see here represents our very first experiment with revealing the geography of television news and required bringing together a bunch of cutting-edge technologies that are still very much active areas of research. While there is still lots of work to be done, we think this represents a tremendously exciting prototype for new ways of interacting with the world’s information by organizing it geographically and putting it on a map where it belongs!\n\nVirtual Machines: Unlocking Media for Research\n\nIn addition to our public web-based research service, we are facilitating scholars, like Kalev, and other researchers in applying advanced data treatments to our entire collection, at a speed and scale beyond any individual’s capacity. As responsible custodians of an enormous collection of television news content created by others, we endeavor to secure their work within the context of our library. Therefore, rather than lending out copies of large portions of the collection for study, researchers instead work in our “virtual reading room” where they may run their computer algorithms on our servers within the physical confines of the Archive. We hope our evolving demonstrations of this data queries in — results out — process may help forge a new model for how exceptional public interest value can be derived from media without challenging their value and integrity to their creators.\n\nThe Knight Foundation and other insightful donors are providing critical support in our ongoing efforts to open television news and join with others in re-visioning how digital libraries can respectfully address the educational potential of other diverse media. We hope you will consider lending your support.\n\nThe Atlantic"
    }
}