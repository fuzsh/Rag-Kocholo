{
    "id": "dbpedia_4415_3",
    "rank": 21,
    "data": {
        "url": "https://www.plctalk.net/threads/beginner-in-plc-programming-seeking-guidance-and-career-advice.140690/",
        "read_more_link": "",
        "language": "en",
        "title": "Beginner in PLC Programming Seeking Guidance and Career Advice",
        "top_image": "https://www.plctalk.net/favicon.ico",
        "meta_img": "https://www.plctalk.net/favicon.ico",
        "images": [
            "https://www.plctalk.net/data/assets/logo/logo3.gif",
            "https://www.plctalk.net/data/assets/logo/logo3.gif",
            "https://www.plctalk.net/styles/default/xenforo/add_to_home.gif",
            "https://www.plctalk.com/qanda/images/flags/Germany.gif",
            "https://www.plctalk.com/qanda/images/flags/United States.gif",
            "https://www.plctalk.com/qanda/images/flags/United Kingdom.gif",
            "https://www.plctalk.com/qanda/images/flags/United States.gif",
            "https://www.plctalk.net/data/avatars/m/128/128196.jpg?1712408895",
            "https://www.plctalk.com/qanda/images/flags/United States.gif",
            "https://www.plctalk.com/qanda/images/flags/United Kingdom.gif",
            "https://cdn.jsdelivr.net/joypixels/assets/8.0/png/unicode/64/1f602.png",
            "https://cdn.jsdelivr.net/joypixels/assets/8.0/png/unicode/64/1f923.png",
            "https://cdn.jsdelivr.net/joypixels/assets/8.0/png/unicode/64/1f602.png",
            "https://cdn.jsdelivr.net/joypixels/assets/8.0/png/unicode/64/1f923.png",
            "https://cdn.jsdelivr.net/joypixels/assets/8.0/png/unicode/64/1f44d.png",
            "https://cdn.jsdelivr.net/joypixels/assets/8.0/png/unicode/64/1f601.png",
            "https://www.plctalk.com/qanda/images/flags/United Kingdom.gif",
            "https://www.plctalk.com/qanda/images/flags/United Kingdom.gif",
            "https://www.plctalk.net/data/avatars/m/128/128196.jpg?1712408895",
            "https://www.plctalk.com/qanda/images/flags/United States.gif",
            "https://www.plctalk.com/qanda/images/flags/United Kingdom.gif",
            "https://www.plctalk.net/data/avatars/s/0/54.jpg?1704319042",
            "https://www.plctalk.net/data/avatars/s/0/54.jpg?1704319042",
            "https://www.plctalk.net/data/avatars/s/3/3291.jpg?1185662899"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-05-25T08:29:28-04:00",
        "summary": "",
        "meta_description": "Hello everyone,\n\nI’m a mechanical engineer with a strong interest in automation and industrial control systems. I’ve decided to learn PLC programming to...",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "PLCS.net - Interactive Q & A",
        "canonical_link": "https://www.plctalk.net/threads/beginner-in-plc-programming-seeking-guidance-and-career-advice.140690/",
        "text": "1. - Have you programmed before? The first lesson is to learn how to break problems into smaller problems. This is important to learn and usually only gets done with practice. Running logic is quite important to learn so you can see what you did, so I would look online for Codesys resources so you don't have to spend money. There's a fair few examples and tutorials to get you started. If you want to learn Siemens, then look up hegamurl on Youtube.\n\n2. - Codesys since it can run directly on your laptop as a demo. Being in Germany, I'd imagine the German brands to be the next step although then there will be money involved. This being said, Codesys is similar enough to Beckhoff and Siemens to be able to apply the same concepts. Rockwell and American/Japanese brands may not be the same philosophy and there will be some adaptation required.\n\n3. - It's ok to learn it, but please do not limit yourself to it. As nice as it is to solve some problems, it can be downright horrible to diagnose others. Knowing all the languages and all their strengths and weaknesses are what makes you a good and competent programmer. Knowing just the one, no matter how \"hard\" it seems makes you a very limited professional.\n\n4. - The traffic light control of an intersection is one very common one. Remember that you need to account for the lamp status measurement and fault if the lamp isn't working. You can also add some smarts like sensor inputs detecting which direction has more accumulated traffic and play with the opening times to clear it up. Obviously, write simulation logic to test your own logic.\n\nIf you're more inclined to process, you can program stuff like a car wash machine, or an industrial soup maker. If you do these, start from programming blocks for each process device such as proportional valve, solenoid valve, motor, VFD, analog input, etc... and also the simulation logic for it.\n\n5. - I have a degree in electrical engineering, so this was always a path for me. Although I focused on microelectronics for my masters, the lack of jobs in the area meant that I had to take a job in a factory and from there it was easy to jump to a position where I could program these things myself.\n\nAlso, a PLC on its own isn't all that much. Head over to Inductive University and learn a bit about a SCADA. Although Ignition is different than the rest, the principles are still the same to all other SCADA systems in the market.\n\nGood luck.\n\nI have poster this several times. if anyone has something to add, please feel to do so and i will put it in my notes and give you the credit.\n\nHere is a good starting point. if you are going to stay at your current plant, find out what they are using.\n\nFor any given homework assignment or task at work, you must consider these instructions as the customers specifications.\n\n1. read the specifications several times.\n\n2. write down your understanding of what you read in a step by step fashion.\n\n3. review what you wrote down and see if it makes since, modify if necessary.\n\n4. Get with the mechanical designer and discuss the project openly and honestly. When your opinions differ in regards\n\nto an operation, discuss it, don't ignore it.\n\nthere must be a reason for a difference of opinion. modify your instructions and i/o to accommodate the mechanical\n\ndesign if possible. Mechanical design may have to be changed due to plc programming limitations.\n\nYOU BOTH MUST be in agreement on all points of operation before going to step 5. you may have to modify/rewrite\n\nstep 2 and 3 based on the discussion.\n\n5. step through your notes again this time, you are the one following the instructions. In other words, you are the\n\nplc. Write down on paper the events you are doing.\n\nFor example, turn on hydraulic motor 1, write down hydraulic motor 1 on. If a sensor is needed, write that down.\n\n6. continue through the instructions. When you turn off the motor, mark a line thru it.\n\n7. go through your instructions with all the sensors, motor aux. contacts, outputs documented. Modify if necessary.\n\n8. repeat step 6 until no changes are made.\n\n9. Try to group your data words into some organized fashion. The more programs you write, the more organized you become\n\n10. write the plc program using your notes in a step by step manner.\n\n10A Over half way through writing the program you WILL realize a different/better way of doing something you are\n\nalmost done writing (or a new spec will require it) and you will completely rewrite it\n\n10B It WILL happen more than once.\n\nNote: 10A and 10B added to list. thanks Aabeck, member plctalk.net forum\n\n11. DOCUMENT EVERYTHING!!! You may remember things today, but in 5 years and hundreds of programs later, you won't\n\nremember, especially at 2 am, so DOCUMENT EVERYTHING. use easy to understand tags and rung comments.\n\n12. MAINTENANCE is your best friend and your worst enemy.\n\nif you work with them and find out what they can do, write the program where they can trouble shoot the program.\n\nthey will be able to fix the problem and everyone will be happy.\n\nBUT\n\nif you write the program to where you are the only one who understands what is going on, maintenance can't fix the\n\nissue, the machine is down, production is down, management hears about it, your boss hears about it, then you hear\n\nabout it - rewrite the program or else. you get calls all hours of the day and night.\n\nthis still holds true, a machine can cost a billion dollars, but it's not worth 10 cents if maintenance cannot\n\ntrouble shoot the issue and fix the issue. everyone has their own style of programming and you must develop your\n\nown way as well.\n\n13. when the customer is in your shop and brings maintenance, discuss things with them, let them see your code, be open.\n\nif they make suggestions, write them down, don't ignore them. their ideas may save you days of programming.\n\n14. install the program and leave in program mode if possible so you can to debug your i/o\n\n15. when writing your instruction manual(s), use your notes from step 9. Use easy to understand English language.\n\nspecify the i/o, timers, counters, outputs when possible. this will help maintenance even more to see what is going on.\n\n16. Question for you, when is a machine and plc the most dangerous and why?\n\nWhen it’s first powered on – when power is first applied to a machine, you don’t know how things are wired.\n\nWhen you energize the plc outputs, you don’t know how they are wired.\n\nWhen the plc is put into run mode the first time, it will do what you told it to do, NOT what you wanted it to do.\n\n17. debug the program.\n\nRemember, the program will always do what you told it to do, NOT what you wanted it to do.\n\n18. IF you can ask a what if this happens type of question, YOU MUST have an answer, EVEN IF its a 1 in a million\n\nchance. that what if situation will happen in the first 30 minutes of production runoff in front of the customer.\n\ni would add subroutines to the main program like this\n\nmain program then these subroutines.\n\ninputs.\n\nanalog\n\noutputs\n\nstation 1\n\nstation 2.\n\nstation 3\n\nhope this helps,\n\njames"
    }
}