{
    "id": "correct_foundationPlace_00067_3",
    "rank": 56,
    "data": {
        "url": "https://muse.jhu.edu/pub/166/oa_monograph/chapter/899454",
        "read_more_link": "",
        "language": "en",
        "title": "Project MUSE",
        "top_image": "https://muse.jhu.edu/book/24184/og_image.jpg",
        "meta_img": "https://muse.jhu.edu/book/24184/og_image.jpg",
        "images": [
            "https://muse.jhu.edu/images/institution.png",
            "https://muse.jhu.edu/images/person.png",
            "https://muse.jhu.edu/images/icon_accessibility.png",
            "https://muse.jhu.edu/images/muselogo.png",
            "https://muse.jhu.edu/images/muselogo_notext.png",
            "https://muse.jhu.edu/images/search_blue.png",
            "https://muse.jhu.edu/images/search_blue.png",
            "https://muse.jhu.edu/publisher/166/image/colophon.jpg",
            "https://muse.jhu.edu/book/24184/image/f_20",
            "https://i.creativecommons.org/l/by-nc-nd/4.0/88x31.png",
            "https://muse.jhu.edu/images/icon_book.png",
            "https://muse.jhu.edu/images/muselogo_notext.png",
            "https://muse.jhu.edu/images/footer_icon_fb.png",
            "https://muse.jhu.edu/images/footer_icon_linkedin.png",
            "https://muse.jhu.edu/images/footer_icon_twitter.png",
            "https://muse.jhu.edu/images/muselogoblack.png",
            "https://muse.jhu.edu/images/muselogo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "CHAPTER 12\n\nA Handful of Vertebrae and a Headful of Mad\n\nModding DOOM\n\nBack in 1994, even a diehard Mac fanboy like my older brother had got hooked and was moonlighting on a different platform. I remember him grabbing me one evening after the pub and telling me I wasn't going to believe what he'd just downloaded. Someone out there had gone one better than understanding how inspirational Ridley Scott's movie Aliens had been to DOOM; they'd gone out there and actually built it in the game engine. Aliens TC was my very first mod experience, and it sparked a love affair that's lasted nearly twenty years.\n\nSo there I am, me and a motion tracker and a seemingly deserted base. What was so special about the whole experience was that designer Justin Fisher took the bursts of tension that DOOM was so great at creating and extended them to a whole environment. The entire first level of Aliens TC was devoid of monsters. That just hadn't been done before. It might have broken the arcade rules or assumptions about constant stimulation, but it just shoved the concept of anxiously waiting for it all to kick off to a whole new level. If Frictional Games extended this principle to nearly a whole game, creating probably the most pants-shreddingly scary game of recent years with Amnesia: The Dark Descent, you saw it first in the most ambitious, most aggressively imaginative, most obsessive, and (let's not beat about the bush) finest and motliest crew of player-cum-designers the Internet has ever seen: the burgeoning mod community.\n\nModding is creating new variations on a game by using a combination of new assets, new level designs, and alterations to the game's codebase. Mods can be freely distributed and shared, with developers and publishers understanding that these communities and experiences add significant value and shelf life to their products, introduce new users to their games, uncover new talent, and break new ground in terms of experimentation and optimization. It's no accident that many of today's professional developers cut their teeth in the mod scene one way or another, as did a fair number of the staff employed at id for DOOM II and Quake. I'm totally biased about the whole mod scene, as I'm a modder. I have been since I got my hands on the DoomEd level editor, since id worked out that harnessing the power of the fan to the dark engine of DOOM was an opportunity too good to miss, even if it flew in the face of received wisdom about supporting hackers cracking open your games. Once again, it was the kind of brilliant stroke of business sense that defined the company.\n\nWhen Wolfenstein 3D was released, id quickly noticed that one of the first things to happen was that people started trying to crack the code. There was nothing new in this. Computer science is largely built on reverse engineering and optimizing, and this standing on the shoulders of giants hasn't always rubbed along smoothly with the concept of “owned” data, solutions, and products. While some hackers are undoubtedly criminal thugs just waiting for you to open up that mail about a lottery win so that they can hijack your computer and use it to download four hundred gigabytes of pornography into your boss's iPad, there's also a whole Robin Hood subculture who just can't quite get the concept that people are allowed to “own” ideas or that, because of this, it's somehow wrong to help out fellow programmers by improving their work and letting everyone share the benefits of such improvements. Cue the open-source software movement.\n\nIn fact, at the time of DOOM, the OSS movement was operating under a different name: free software. The core representative was the Free Software Foundation, formed in 1985. According to the foundation's terms, “free” meant not that you didn't have to pay for it but that it should be freely available. That's a pretty obtuse concept for most of us, and it doesn't take much to misrepresent or misunderstand it. Faced with that problem, in 1998, “free” became “open,” and Bruce Perens carved out a set of principles and definitions that still stands today: everyone gets access; everyone can distribute; everyone can adapt and use. You can work from someone else's software to make profit, but you can't use it directly to make profit. The result would be better software and community involvement in improving technology. Everybody would benefit in this brave new world.\n\nObviously, id Software wasn't about to give its games away for free, but there were aspects of this approach that had very clear benefits if you were prepared to give away a proportion of your product. We've already talked about the Apogee model: hooking your target market on the first third of the game for free, then charging them to extend the experience. Enabling users to get access to the build tools so they could further extend their experience beyond the charged levels was equally the kind of approach that a large corporation was likely to see as risky (why let the market have the capacity to build for itself the thing you are trying to sell?), but id grasped, metaphorically, that do-it-yourself stores hadn't put craftsmen out of business. This was partially because, as John Carmack admits, the members of the id Software team weren't actually so different from the vilified hackers that this model purportedly supported, empowered, and encouraged.\n\nI still today have clear memories of some of my formative computer game times, like on the Apple II with Wizardry and Ultima. And I would spend time with the sector editor trying to find where the stats are, making maps of everything, figuring out how to do that. And I can remember really clearly wishing that I could read the source code for these things. I remember being able to break into an early Ultima and being able to look at the source code—but wishing I could see how the other games were written. And that had stuck with me through the years. And when we were in a position as a successful independent developer and we could go and do whatever the hell we wanted in many ways,…going ahead and releasing the file formats and then the source code—those are things I still am quite proud of. (JC)\n\nCall it organizational mentality, but id had already demonstrated an appreciation for the approach that you can't make an omelet without borrowing some eggs off your boss when the office is closed, provided you get them back before morning—when they were liberating computers from SoftDisk1 to make Wolfenstein 3D. Romero certainly argues that id was more inclined to respect the hackers than to see them as the enemy.\n\nPeople wanted to make levels with Wolfenstein 3D so badly they figured out how to do it, and that was really, really difficult. It was really hardcore hacking, and when we saw people did that, we thought, wow, people really want our data, we've got to open this up completely…. So with DOOM we didn't try to protect any of the data. We left it wide open. With Wolfenstein 3D, we tightly compressed everything and made it really hard to get at. But with DOOM, we left it open, and that just created the entire modding scene. (JR)\n\nIn other words, modding was going to happen anyway, so at issue was how best to harness it. You didn't have to give everyone your source code, so you could still sell that through licenses to other companies, but there was no harm in letting a community of fans become raging advocates by enabling them to create and share their own content around the networks. That meant they kept talking about DOOM longer; they kept playing longer. You had to buy the full game to get access to mods, so if particularly cool mods, like Fisher's Aliens TC, arrived on the scene, casual (shareware) users might well upgrade to the retail version just to try it out. In essence, you took an army of fans and turned a percentage of them into salespeople. Then you could sit back and watch, looking for ideas, talent, opportunities, areas where things could be improved. For the modders, the opportunity to create as well as play was hugely exciting. Tim Willits, who started his id career as a modder, remembers the buzz of creation as central to his drive to mod.\n\nFor me, modding games was so neat because it was a world. When I first played the original DOOM and when I would look out of the window and see the rest of Phobos out there, I always thought, there's this world to explore—and then to be able to make something that other people could explore and translate that sense of wonder and exploration to somebody else,…well, that's still a motivating factor in everything I've done since then. (TW)2\n\nIn real terms, this is how it worked: packaged up in DOOM was the source code, which actually defines how the game works, and then you had WAD files, which defined each individual level. It was these files that players could get at and into, via tools such as the DoomEd level editor, reappropriating game assets (textures, sprites, artificial intelligence, core physics, and so on) to create their own levels. If you wanted, you could go further with other available tools and create new sprites too, which meant rather than Imps and Cacodemons, you could have Facehuggers and Drones, pulse rifles and motion trackers, cargo bay powerloaders, queens and aliens, Batman and Star Wars characters, and running around a nightclub pacifying Imps with a spliff. In fact, if you can name it, chances are, in the best spirit of the Internet, someone modded DOOM to do it.\n\nWe can roughly divide mods up into a few types.3 On one hand, we have full conversions, where the original game is more or less unrecognizable from the final product (including shifts from first to third person on occasion). In the same class are those mods that achieve a kind of escape velocity and flip over into fully independent games: Counter-Strike (Le & Cliffe 1999) started life a bit like this, as did my own Dear Esther (thechineseroom 2012). On the other hand, we have mods that stick much more closely to the original game, normally taking the form of new assets and optimizations. Optimization mods, generally speaking, involve manipulating the game to adjust properties of preexisting in-game objects and entities. Often, optimizers concentrate on weapons (which is not altogether surprising, given the genre most mods are still based in), arguing that they create more realistic representations of actual real-world ballistics. In the case of games like S.T.A.L.K.E.R., where level editing is extremely difficult and SDKs (Software Development Kits) are not developed to such a modder-friendly degree, the majority of mods tend to be of this type. Between optimization/customization mods and full conversions are mods that add many new features to the game but are still fundamentally anchored in the original title. A good example of this would be Kalyhanos's Oblivion Lost mod (2008) for S.T.A.L.K.E.R., which added blowouts, Burers, and the ability to cook up new superartifacts in anomalies to the original.4 Finally, we have a plethora of mods that add no new code or assets but create new maps in which play can take place. These are often found around games with a strong focus on multiplayer gameplay—I'll return to deathmatch culture in chapter 13—and it is here that the majority of DOOM mods are found. This is primarily because modding levels in DOOM is just very easy and, thus, very quickly achieved the critical mass of community skills, tools, and knowledge that has, in a case study from recent years, made Source modding one of the most potent mod scenes out there.\n\nAs with trying to reconstruct much of DOOM's history, it's next to impossible to accurately chart either the rate with which new mods hit the scene following release or the total number of mods out there in the world. We can say with confidence that there are still a number of very active DOOM modding communities, with new mods still hitting the streets, and we can say that even if we discount the half-finished, the half-baked, and the half-a-line-of-code-got-changed also-rans, we're still looking at literally thousands of substantive, community-generated full conversions and probably tens of thousands of publically accessible levels. We can get an idea of the sheer scale of things by considering the number of WADs that were created or collated for commercial release. Zeta000 on the Doomworld Forums5 provides a useful list (if largely unverified—I've checked the ones mentioned in the discussion that follows) of commercial DOOM WAD collections, and we can see the volume of levels that made it onto these discs. D!Zone Gold (Wizard Works) contained over 3,000 levels; the Demon Gate Mega Collection (Laser Magic) a mere 666, DOOM Heaven for DOOM (Most Significant Bits) brought another 2,500 to the party. Unconfirmed others from zeta000's list include DOOM Mania (525 levels), The Complete DOOM Accessory Pack (2,300 levels), DOOMsday Collection (1,000 levels), and the 191 levels included in id's own Master Levels for DOOM II (1995). Most of these collections have long since faded into obscurity, and many of the included WADs are now distributed around the Internet with the other thousands of freely distributed ones. But this gives us just a glimpse into the volume of mods hitting the streets.\n\nNow consider the expansion of mod culture beyond DOOM. Little Big Planet (Media Molecule 2009) may be a cute platformer with a cracking Stephen Fry voice-over, but it's also, fundamentally, a modding engine, a product designed to enable and encourage users to create and share content. According to Media Molecule, there are over a million Little Big Planet levels out there. And this is just the tip of the iceberg. Halo 3 (Bungie 2007) shipped with the Forge engine, actively pushing the idea that it wasn't just about “finishing the fight” but about going Forerunner and actually building your own ringworld. Behind all of these, hidden in a monster closet, are a bunch of Imps and Pinkys. When you play Little Big Planet, when you use Forge, when you are working the Counter-Strike servers, you have DOOM to thank, because that's where it all started.\n\nIt's worth looking at a few examples of DOOM mods to try and capture the sheer diversity, creativity, violence, and insanity that was swiftly spawned. Alongside Fisher's Aliens TC, the first DOOM total conversion and therefore the world's first total conversion mod, other existing intellectual properties were quickly reinvented as DOOM mods. And, of course, Fisher wasn't the first person to attempt Aliens in game format.6 Back in 1987, Activision gave the world Aliens: The Computer Game, which, ironically, featured a first-person dropship flying sequence, and Squaresoft released its own two-dimensional side-scrolling shooter Aliens: Alien 2 in the same year. The release of the Alien 3 movie (David Fincher 1992) triggered a wave of movie tie-ins, for Amiga, C64, SEGA Master, and others, again as side-scrolling platform shooters. Interestingly, in the same year as DOOM arrived, SEGA released the arcade-only light gun rail shooter Alien 3: The Gun, which is about as close as we get to Fisher (though it doesn't really come close) in terms of capturing the claustrophobic panic and chaos of the movies. Only three years after Fisher's mod, Probe Entertainment brought the franchise to first-person gaming, and it may be argued that not much has really improved since. Fisher wasn't the only mod maker to get the jump on commercial production. Within a couple of years, Star Wars, Star Trek, and Batman had DOOM versions. With the exception of the latter, all had subsequent first-person games released commercially, including Star Wars: Dark Forces (LucasArts 1995) and Star Trek: Voyager—Elite Force (Raven Software 2000). The plethora of mods being created and distributed massively extended DOOM's shelf life and the sense of community loyalty to the brand, an important factor given the volume of DOOM clones that appeared as soon as developers could get them out. Many in the mod community were and still are fiercely noncommercial, and this gives the scene its punk ethos and arguably protects the petri dish of outlaw experimentation we find. However, given that there was clearly money to be made from things that looked like DOOM, sounded like DOOM, and played like DOOM, it's really no surprise that mods started making the leap over into commercial release.\n\nOf course, this was strictly against the rules—mods were allowed on the basis that they were freely distributed and that you could only access them if you owned the licensed game—but that didn't stop products like D!Zone from hitting the shelves. The flip side was that if you were into mods in the first place, chances are you were tapped into the community and found it pretty easy to locate and install a vast number of mods without charge direct from the community. But just as with the do-it-yourself store analogy, having the tools and having the talent are quite different things. If the majority of mods were inevitably simple, unfinished, or badly conceived, there were some emerging star modders, and id recognized that players would pay for a guarantee of quality. Following the retail success of DOOM II during 1995, id contracted Team TNT and the Casali brothers, picking up the to-be-freely-released Evilution mod and commissioning The Plutonia Experiment. Evilution was a fully fledged mod about to go public, including levels designed by the Casali brothers, and stands as an early example of the capacity of mod teams to break out of the scene and into full commercial development. This was not, by any means, the holy grail of modders, but an income to do your obsessive hobby wasn't something a fair number of them were about to turn down. It also represented a route into industry for a large number of developers who are now considered leaders in their field. For John Carmack, this is one of DOOM's important legacies.\n\nThat became the standard industry resume, which was a wonderful thing. Mods just became a really truly wonderful way of seeing [talent]. You don't expect someone to produce something that's necessarily commercial level, but if you can see their passion and their willingness to experiment and try different things and you can listen to them talk about what they were doing, what they failed to achieve, what they were hoping for, that was just great. And of course you got lots and lots of people now in the industry who were able to break in that way. And that was a purely good thing—the degree you had didn't matter. It was what you were able to do with a game engine that mattered, and that was the right way to look at it. (JC)\n\nIn fact, you could argue it went a little deeper than that. It wasn't just that modders ended up working for id—as did Tim Willits and Matt Hooper, the design team for DOOM 3—or even that modding provided a new way into the games industry. Arguably, the creation of the modding scene drove not just the careers of individuals but those of games companies that have gone on to shape the industry itself. Hooper lists companies with high-profile, high-powered staff who cut their teeth in the mod scene: Valve Software, Gearbox, Splash Damage, DICE, 3D Realms, and so on.\n\nI think if you talk to a lot of people working today on shooters, a lot of them came from the modding community. That's all due to John—I don't think he realizes how much that's true…. It was definitely the genesis of the shooter movement. All those guys got their start from the tech John built. All over the place. It's amazing how much. I think some people have lost that fact because it's so long ago, maybe people don't make the connection so much now, but it's undeniable. So many people and so many companies, and it's all down to mods…. John laid that foundation. (MH)7\n\nBut if this drive to create professional standard gaming experiences by Fisher, Team TNT, the Casalis, and other mod stars, such as Dr. Sleep and the Innocent Crew, represented one chunk of the mod community, there was an entirely different and utterly perverse lobby brewing in the blue corner. Over there, the opportunity to go for the comic, the deliberately rubbish, and the just plain barking mad was too much to miss, and the results, gems like Nuts and The Sky May Be, actually give a great deal of so-called art games a run for their money in terms of inventiveness and opaqueness. Nuts features a very big room containing a frame-rate killing 10,617 monsters, where the only way to win is to run as fast as possible over the heads of tightly packed monsters and hope that the lag doesn't catch up with you as several thousand Imps all let fly with their fireballs at the same time. What is fun on a contemporary machine was just plain, well, nuts, back in the early nineties. The Sky May Be, a delightfully surreal outing by Doug the Eagle and Kansam, almost perversely preshadows Portal or Alex (Demruth) Bruce's Antichamber (2012)8 in its feel. Certainly, it thinks big, overhauling the engine to include some brain-melting alterations to weapons and monsters, primary-color graphics that are arranged in huge and random blocks broken up with an equally random selection of textures from the original game, an invulnerable Great God Imp, and a soundtrack by Bach, with the whole thing wrapped up in a vast 8192×8192×8192 engine-breaking cube. Actually, scratch that, because The Sky May Be had its own engine: the Blessed Engine 1.9b Release 2, a self-proclaimed “cure for people bored with DOOM.”9 Troopers move backward and turn into Pinkys when they die. These Pinkys split vertically down the middle when they die, shouting “Happy Days!” The BFG is replaced by the Blessing Cannon, which randomly either instantly kills whatever it hits or renders it immortal. Part of the game is set in space. All of it is set in, apparently, the Great God Imp's toy box. There are liberal smatterings of Monty Python and samples from Zardoz (Boorman 1974): “The gun is GOOD!” If DOOM was the gaming equivalent of a particularly dark and frightening amphetamine trip, The Sky May Be is pure lysergic acid diethylamide and, according to your tastes, either one of the worst travesties ever committed on a game engine or a bloody mad but bloody fantastic work of unfettered genius. I favor the latter. It's certainly a wonderful antidote to being maxed out on the grim gray seriousness of most contemporary shooters."
    }
}