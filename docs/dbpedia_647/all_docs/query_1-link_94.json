{
    "id": "dbpedia_647_1",
    "rank": 94,
    "data": {
        "url": "https://stackoverflow.com/questions/71660533/ibm-mq-connection-using-java",
        "read_more_link": "",
        "language": "en",
        "title": "IBM MQ connection using Java",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/nZ80J.png",
            "https://lh3.googleusercontent.com/a/AATXAJxs63GVnec_IGj0xwQnmj4sr1wGap8M9xaGhaG9=k-s64",
            "https://i.sstatic.net/ex16s.gif?s=64",
            "https://stackoverflow.com/posts/71660533/ivc/937e?prg=66c62077-9b3c-4aea-9fce-6eb081157fc8"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2022-03-29T10:37:06",
        "summary": "",
        "meta_description": "Good Day,\nI am struggling with below error when trying to connect to IBM MQ. Unable to access createContext(); and forces me to use  (JMSContext) cf.createConnection(); which is resulting me error as",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/71660533/ibm-mq-connection-using-java",
        "text": "Good Day,\n\nI am struggling with below error when trying to connect to IBM MQ. Unable to access createContext(); and forces me to use (JMSContext) cf.createConnection(); which is resulting me error as below: \"Exception in thread \"main\" java.lang.ClassCastException: com.ibm.mq.jms.MQConnection cannot be cast to javax.jms.JMSContext at pushmsgs.main(pushmsgs.java:55)\"\n\nimport com.ibm.msg.client.jms.JmsConnectionFactory; import com.ibm.msg.client.jms.JmsFactoryFactory; import com.ibm.msg.client.wmq.WMQConstants; import javax.jms.*; public class pushmsgs { // System exit status value (assume unset value to be 1) private static int status = 1; // Create variables for the connection to MQ private static final String HOST = \"22.188.133.100\"; // Host name or IP address private static final int PORT = 3415; // Listener port for your queue manager private static final String CHANNEL = \"DEV.APP.SVRCONN\"; // Channel name private static final String QMGR = \"SITQUEUEMGR\"; // Queue manager name // private static final String APP_USER = \"app\"; // User name that application uses to connect to MQ //private static final String APP_PASSWORD = \"_APP_PASSWORD_\"; // Password that the application uses to connect to MQ private static final String QUEUE_NAME = \"TESTQUEUE.MQAPP.REQ.RCV\"; // Queue that the application uses to put and get messages to and from /** * Main method * * @param args */ public static void main(String[] args) { // Variables JMSContext context = null; Destination destination = null; JMSProducer producer = null; JMSConsumer consumer = null; try { // Create a connection factory JmsFactoryFactory ff = JmsFactoryFactory.getInstance(WMQConstants.WMQ_PROVIDER); JmsConnectionFactory cf = ff.createConnectionFactory(); // Set the properties cf.setStringProperty(WMQConstants.WMQ_HOST_NAME, HOST); cf.setIntProperty(WMQConstants.WMQ_PORT, PORT); cf.setStringProperty(WMQConstants.WMQ_CHANNEL, CHANNEL); cf.setIntProperty(WMQConstants.WMQ_CONNECTION_MODE, WMQConstants.WMQ_CM_CLIENT); cf.setStringProperty(WMQConstants.WMQ_QUEUE_MANAGER, QMGR); // cf.setStringProperty(WMQConstants.WMQ_APPLICATIONNAME, \"JmsPutGet (JMS)\"); //cf.setBooleanProperty(WMQConstants.USER_AUTHENTICATION_MQCSP, true); // cf.setStringProperty(WMQConstants.USERID, APP_USER); //cf.setStringProperty(WMQConstants.PASSWORD, APP_PASSWORD); //cf.setStringProperty(WMQConstants.WMQ_SSL_CIPHER_SUITE, \"*TLS12\"); // Create JMS objects context = (JMSContext) cf.createConnection(); destination = context.createQueue(\"queue:///\" + QUEUE_NAME); long uniqueNumber = System.currentTimeMillis() % 1000; TextMessage message = context.createTextMessage(\"Your lucky number today is \" + uniqueNumber); producer = context.createProducer(); producer.send(destination, message); System.out.println(\"Sent message:\\n\" + message); context.close(); recordSuccess(); } catch (JMSException jmsex) { recordFailure(jmsex); } System.exit(status); } // end main() /** * Record this run as successful. */ private static void recordSuccess() { System.out.println(\"SUCCESS\"); status = 0; return; } /** * Record this run as failure. * * @param ex */ private static void recordFailure(Exception ex) { if (ex != null) { if (ex instanceof JMSException) { processJMSException((JMSException) ex); } else { System.out.println(ex); } } System.out.println(\"FAILURE\"); status = -1; return; } /** * Process a JMSException and any associated inner exceptions. * * @param jmsex */ private static void processJMSException(JMSException jmsex) { System.out.println(jmsex); Throwable innerException = jmsex.getLinkedException(); if (innerException != null) { System.out.println(\"Inner exception(s):\"); } while (innerException != null) { System.out.println(innerException); innerException = innerException.getCause(); } return; } }\n\nAdded JMS mvn dependency and com.ibm.mq.allclient dependency\n\nIt's because you are assigning the wrong object to the wrong variable.\n\ncontext = (JMSContext) cf.createConnection();\n\nI don't know why you would want to do that. A connection is not a context.\n\nIt should be:\n\nConnection conn = cf.createConnection(\"MyUserId\", \"mypassword\");\n\nSee my example called MQTestJMS51 here.\n\nanswered Mar 29, 2022 at 19:07\n\nRogerRoger\n\n7,3631414 silver badges2121 bronze badges"
    }
}