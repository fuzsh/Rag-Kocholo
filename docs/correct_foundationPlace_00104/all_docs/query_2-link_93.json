{
    "id": "correct_foundationPlace_00104_2",
    "rank": 93,
    "data": {
        "url": "https://textmine.com/post/an-introduction-to-knowledge-graphs",
        "read_more_link": "",
        "language": "en",
        "title": "An Introduction to Knowledge Graphs",
        "top_image": "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/65efef832f6065a7d8b25d10_Blog%20banner-21.png",
        "meta_img": "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/65efef832f6065a7d8b25d10_Blog%20banner-21.png",
        "images": [
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/65851eb3019e97983235c241_textmine-Logotype.svg",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/65851eb3019e97983235c241_textmine-Logotype.svg",
            "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/65cbd610f3383ca528634371_DSC07488.jpg",
            "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/65efef832f6065a7d8b25d10_Blog%20banner-21.png",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder-p-500.webp 500w, https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder-p-800.webp 800w, https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder-p-1080.webp 1080w, https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder.webp 1280w",
            "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/65efefac2949fd18adede435_0OMi7-JZzq0rD7pB9b4DJ6LLfChm_5Igc-573o-iCGMNtNgYiEdOv8iiccGYFd4dnoQlrggbSS78htfl12gWWwS7aicPJi4fDDuiP-_wt0SGZ-gLhfn4XftR7yYuLE9FCyYmNRbuf81BeDGduDe9xAI.png",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/659ffc4993d702a9b53526d1_newsletter-img.svg",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/65a10dc930a9e5fe52dea2e2_vault_cta_img.svg",
            "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/669a966c6b8ea54339d9039c_Blog%20banner-31.png",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder.webp",
            "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/669a7e017d8e8cf5a629a5ac_Blog%20banner-30.png",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder.webp",
            "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/668bec3594dc2caa6a517472_Blog%20banner-29.png",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder.webp",
            "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/6679423a3b5e6f1a6ebed4ec_How%20to%20extract%20text%20from%20a%20PDF%20USING%20AI.png",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder.webp",
            "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/6650736a380240390a7412a2_Blog%20banner-28.png",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder.webp",
            "https://cdn.prod.website-files.com/6594f014685d1e06039267e2/664afe46e72da0087a6ba6e7_Blog%20banner-27.png",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6597a593645c126fd8deb844_placeholder.webp",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/65854c3664548e4eeaca5da9_textmine-Logotype.svg",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/6616ab3ad96e92ffc1a3c122_27001_rgb_purple.webp",
            "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/662ba5bdeca07434a2523250_gdprcertifiedibadge.svg"
        ],
        "movies": [
            "https://www.loom.com/embed/8339cbf351ce45389870f67b2b7e173c?sid=6b272774-003d-4fc3-8756-3f99f2ef50ae"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "An overview of knowledge graphs and their main use cases",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.prod.website-files.com/658436a79186928d001fb5cb/65843c397ffd23f8cd698286_TextMine%20favicon%20(black%20bg)%201.png",
        "meta_site_name": "",
        "canonical_link": "https://textmine.com/post/an-introduction-to-knowledge-graphs",
        "text": "In a world of unstructured data, knowledge graphs are a great approach for modelling a dataset's underlying entities without constraining itself to a fixed schema or set of concepts. Moreover, knowledge graphs can define the relationships between entities as well as how they relate to broader concepts which are defined in ontologies. This article provides an overview of knowledge graphs by defining what they are, discussing their main components, and showing some examples of knowledge graphs across numerous industries such as e-commerce, financial services and document management.\n\nâ\n\nWhat Are Knowledge Graphs?\n\nKnowledge graphs are organised and structured representations of knowledge, displaying connections and relationships between individual points of data. The individual data points are called nodes and they represent entities (people, places, things, or concepts). In order to explore relationships between these nodes, edges are created to represent these connections.\n\nâ\n\nThe following diagram illustrates how the same data can be represented in a table and a graph. One of the key benefits of a graph is that there are no âtable headersâ which limit the properties which can be added to the entities. As a result, a graph can evolve in time without causing any disruption to the datastore.\n\nâ\n\nâ\n\nThe Main Components of Knowledge Graphs\n\nThere are three main components of knowledge graphs, which draw from graph theory: Nodes, edges, and triples. Together, these components form the structure of knowledge graphs and enable the creation of well-mapped graphs for complex domains.\n\nâ\n\nNodes and Edges\n\nA node or vertex represents an entity, concept, or piece of data. For example, people, places, things, and concepts can be considered nodes because they are identifiable.\n\nâ\n\nIn a knowledge graph, nodes usually combine to represent a real-world concept â especially through the ways in which they connect.\n\nâ\n\nHowever, nodes are useless if they are not arranged in a connectable fashion for relational processing.\n\nâ\n\nIn order to form and link nodal relationships, edges connect two nodes in a knowledge graph. Relationships can be direct or indirect, as they are rated within the graph based on connection.\n\nâ\n\nTriples\n\nTriples take nodes plus edges and form a more complex knowledge representation. Triples are broken down into three parts: subject, object, and predicate.\n\nâ\n\nThe subject defines the concept being described, the object represents the value, and the predicate constitutes the relationship. When making semantic statements, a trip is often used to bring structure to the relationships mentioned.\n\nâ\n\nSemantic Reasoning\n\nOne of the benefits of knowledge graphs is that you can infer patterns and relations from the data in the graph. For example, in the previous example of married couples data, a system processing the table of married couples wonât instantly know that the person in the âMarried toâ column is married to the person in the âNameâ column. Semantic reasoning allows you to define rules within the knowledge graph which will automatically apply to the underlying data. In this case, we could define the following Married to rule to automatically infer the married to relationships: If [Name] Married to [Married To] then [Married To] Married to [Name].\n\nâ\n\nIn practice, this means that knowledge graphs can infer new data which might not be explicit in a traditional database. It also means that data which can be inferred wonât need to be stored explicitly and can be instead modelled in a rule. You can also leverage ontologies to define which types of entities the rules should apply to or to enrich the results.\n\nUse Cases of Knowledge Graphs\n\nKnowledge graphs have several practical applications within natural language processing and semantic analysis. Particularly, natural language processing benefits from knowledge graphs by assigning more order to its capabilities.\n\nâ\n\nSemantic Search\n\nTwo aspects of semantic search, faceted and cross-domain search, are empowered by knowledge graphs for applying context to user queries through the investigation of relevant relationships.\n\nâ\n\nWith faceted search, users are able to distil what they need from a query by looking at the categories created by a knowledge graph. Similarly, cross-domain search uses relationships to integrate outputs from a variety of resources.\n\nâ\n\nThe following demo illustrates how faceted search can be used to navigate your business critical documents and contracts:\n\nâ\n\nRecommendation Systems\n\nRecommendation systems have been powered by knowledge graphs for a long time. For example, personalised LinkedIn connection suggestions are accomplished through recording user preferences, item attributes, and other context-specific information. The LinkedIn knowledge graph is then able to identify the closest entities to your knowledge graph and recommend them to you as connection suggestions. This use case is a great fit for knowledge graphs because knowledge graphs leverage the density of connections to navigate the nodes and retrieve close entities whereas a traditional database would have to compute and compare each entitiesâ properties with each other one by one.\n\nâ\n\nNatural Language Processing (NLP)\n\nNatural language processing (NLP) is a field of AI that allows computers to understand, process, and produce human language. Knowledge graphs can assist with question parsing, as they help NLP models produce meaningful, correct responses. Also, information retrieval is made more efficient with the implementation of knowledge graphs, as they add a layer of connection and organisation to NLP.\n\nâ\n\nGenerative AI\n\nGenerative AI models such as large language models typically leverage huge amounts of unstructured data during their initial training and fine-tuning. Knowledge graphs can be leveraged to identify the structure of the underlying data which can then improve the amount of signal which is extracted from the data during the training.\n\nâ\n\nKnowledge Graphs in Industry\n\nKnowledge graphs are a versatile technology which can be applied in many sectors including e-commerce, financial services and document management.\n\nâ\n\nE-commerce\n\nAs mentioned above, knowledge graphs are used to create personalised recommendations and bolster marketing efforts to show the best products to the right demographic. However, in terms of e-commerce, knowledge graphs are also fantastic at organising inventory, which can help companies stay on top of their supplier relationships and product management.\n\nâ\n\nFinancial Services\n\nFinancial services may find knowledge graphs to be useful in risk management and fraud detection programs. Knowledge graphs can syphon information from many financial sources into one, well-connected map that may illuminate financial misappropriation. Additionally, knowledge graphs can identify suspicious patterns, measure risk and alert financial institutions faster than they may be able to catch it themselves.\n\nâ\n\nBusiness-critical Document management\n\nDocuments contain unstructured data which often represent linked concepts which are governed by rules. At the scale of an organisation, documents are stored in drives and typically tracked in spreadsheets. However, due to the linked nature of document data, knowledge graphs are a much more effective way at tracking and answering questions about the information contained within documents. Moreover, knowledge graphs can automatically link related documents together and compare their underlying terms.\n\nâ\n\nConclusion\n\nKnowledge graphs are a versatile technology which are great at storing and navigating hyper linked data. However, before attempting to use or create knowledge graphs, itâs important to have a comprehensive understanding of them and other relevant technologies such as NLP and semantic reasoning. If you are interested in learning more about using knowledge graphs or how they can be applied to business-critical document management, feel free to get in touch with our team!\n\nâ\n\nAbout TextMine"
    }
}