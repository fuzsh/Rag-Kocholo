{
    "id": "correct_foundationPlace_00104_2",
    "rank": 71,
    "data": {
        "url": "https://www.nebula-graph.io/posts/how-to-build-knowledge-graph",
        "read_more_link": "",
        "language": "en",
        "title": "How to Build a Knowledge Graph",
        "top_image": "https://www-cdn.nebula-graph.io/blogs/How_to_build_knowledge_graphs.jpg",
        "meta_img": "https://www-cdn.nebula-graph.io/blogs/How_to_build_knowledge_graphs.jpg",
        "images": [
            "https://www-cdn.nebula-graph.io/nebula-website-5.0/images/logo.png 1x, https://www-cdn.nebula-graph.io/nebula-website-5.0/images/logo.png 2x",
            "https://www-cdn.nebula-graph.io/blogs/supply-chain.jpg",
            "https://www-cdn.nebula-graph.io/blogs/multi-tenant-architecture.jpg",
            "https://www-cdn.nebula-graph.io/blogs/technical_preview_nebulagraph_enterprise_5.0.jpg",
            "https://www-cdn.nebula-graph.io/nebula-website-5.0/images/footer-nebulalogo.svg 1x, https://www-cdn.nebula-graph.io/nebula-website-5.0/images/footer-nebulalogo.svg 2x"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "NebulaGraph is highly scalable and you can use it to build robust knowledge graphs for different use cases, from fraud detection to product recommendations and many more",
        "meta_lang": "en",
        "meta_favicon": "https://www-cdn.nebula-graph.io/nebula-website-dist/favicon.png",
        "meta_site_name": "",
        "canonical_link": "https://www.nebula-graph.io/posts/how-to-build-knowledge-graph",
        "text": "A company probably has lots of data from multiple sources. This could be internal employee data, customer data, data from public sources or even data the company pays to acquire.\n\nTo get value from this data, it normally needs to be channeled through a pipeline that transforms it and eventually presents it in a manner that is usable. Now, for a long time, data management systems have always been in formats that are very complex. You are either plowing through thousands of rows of data or searching through multiple tables to combine different pieces of data to get a result.\n\nBut what if it was possible to visualize all the data instead of packing it in multiple tables that make management a complex affair? This is where knowledge graphs come in.\n\nKnowledge graphs are instrumental in places like the search engines we use to find facts and the chatbots that are becoming popular in areas like customer support. They even power the fraud detection solutions that protect businesses from cybersecurity threats.\n\nIn this article, we explore the important steps it takes to build a vibrant knowledge graph.\n\nWhat is a Knowledge Graph?\n\nIn simple terms, a knowledge graph is a knowledge base with a graph structure. It utilizes a graph database and graph interface for data storage and visualization, respectively.\n\nWhile the term has been around since as far back as 1972, the knowledge graph was popularized by Google in 2012 in a bid to replace its traditional search system. It’s no wonder then that when you google the phrase “knowledge graph”, one of the top results you will see will probably be the popular Google's knowledge graph.\n\nWe choose to use Google’s Knowledge graph to demonstrate the mighty value of knowledge graphs for a good reason. You see, Google has utilized knowledge graphs to great effect and this could as well be one of their powerful secret cards.\n\nIn fact, Google admits in their own blog that “The Knowledge Graph enables you to search for things, people or places that Google knows about—landmarks, celebrities, cities, sports teams…”.\n\nThis is a great revelation of what a knowledge graph can accomplish when built right and put into serious use. In essence, what Google means by “things, people or places” that they know is hsimply data. So they basically take this data and put it in a knowledge graph, and this helps them to drive many of their successful products like the search engine.\n\nRather than accessing and presenting queried data in the traditional rigid manner, knowledge graphs add meaning to queries and data. For instance, traditional search algorithms (like those used in many eCommerce stores) only present data that fits queries exactly. For example, a search query for “bag” brings all results with the “bag” keyword in them.\n\nSemantic algorithms, on the other hand, understand the query, give context to the query, and present dynamic results that fit the query best. A query for “bag” acquires results in the context of “what is a bag” or “different types of bags”. This is made possible thanks to Knowledge Graphs.\n\nAlso Read: Knowledge Graphs and Large Language Models\n\nWhy does your organization need a knowledge graph?\n\nIn the same way that Google is benefiting from the knowledge graph, you too can take all the data that your company possesses, put it into a knowledge graph and use it to drive great products for your customers or even for internal use.\n\nIn addition to improving search,\n\nKnowledge graphs can help in the storage of microdata in machine and human-readable forms\n\nThey simplify large data sets\n\nThey enrich the knowledge base. You don’t just define relationships but also expose hidden relationships between data. With this, complex customer needs are revealed for more effective product recommendations, and business research generally becomes easier and more comprehensive\n\nKnowledge graphs also help you track the flow of an element, which is useful for monitoring solutions. A financial organization, for example, will more easily track the flow of money. A cybersecurity solution can more easily identify affected systems by tracking the flow of a threat.\n\nOne key thing that a knowledge graph does is that it makes it very easy to visualize data. This is possible because of how graph databases work - through connections. If, for example, you run an eCommerce website that sells different types of phones and there is this customer known as ‘John’ who loves to buy a Samsung phone every time the company releases a new phone, you might want to discover which other products John loves to buy so that you can make recommendations. To do this, you will need to connect John to all the other products he has been buying. Once you find the other products that John is fond of buying, you might want to see if there are other customers that have the same traits as John. This requires a connection of all the customers that buy a Samsung phone every time a new one is released. Now, a knowledge graph makes it easy to visualize all these connections, unlike traditional database approaches. If you were to use a traditional database, you will probably need to join multiple tables and do some aggregation. It’s too much work. You will have customers in one table, products in another table, their location in another table, etc. But a graph database will have all this information in one place, enabling you to build connections and derive insights.\n\nAlso Read: Using Knowledge Graph to Detect Fraud\n\nHow to build a knowledge graph: simple steps\n\nBuilding your own comprehensive knowledge graph is important for two things. It ensures you meet up with competitors that already have it implemented. It then allows you to beat competitors in how you use and manage data.\n\nFollow these steps to create one that’s effective.\n\nStep 1: Define the goal or purpose of the knowledge graph\n\nThe first step to building knowledge graphs is to determine what you want to use for the organization. Knowledge graphs have a wide range of applications in enterprise environments.\n\nFor instance, you can use them to just gather, store, and organize data in a format that modernizes your use of data. In more complex applications, you can use them to support a semantic search system and eliminate hallucinations from natural language processing (NLP) operations.\n\nDo you wish to awaken siloed data or reconnect with siloed data environments?\n\nAre you intending to create intelligent chatbots?\n\nDo you want to engage in dynamic, complex research?\n\nAre you looking to visualize/monitor the flow of assets and risks within the organization?\n\nIn a nutshell, you need to determine what you want to use your knowledge graph for before moving to the next steps.\n\nAnother way to structure this step is by asking: What questions am I trying to answer?\n\nLet’s say you want the knowledge graph to help you dig deeper into customer habits. In this case the questions you might want answers for could include:\n\nHow many customers signed up today and how many of those actually purchased a product?\n\nWhat is the gender of these customers?\n\nWhere are they located?\n\nWhat age bracket forms majority of the customers?\n\nWhat products are popular among each age bracket?\n\nIf you’re having difficulty defining the key goal (s), engaging stakeholders can point you in the right direction. Stakeholders are the individuals poised to work with, benefit from, or be affected by the graph when it is eventually launched. This initiative will help you secure buy-in and get adequate support throughout the building process.\n\nStep 2: Establish your knowledge domain\n\nEstablishing a knowledge domain is all about determining the scope of data to be utilized within the graph. Of course, this scope is in turn determined by your use case, and establishing a domain is best achieved when you go from the general to the specific. You use the general use case to determine specific entities and their characteristics within the use case.\n\nIf you wish to build a semantic search system for eCommerce products, for example, your graph should use data that is relevant to this scope. This will be specific data like the product name, product specification, product category, product price, and product vendor, among others. Establishing the domain helps you understand the type of data to collect so your knowledge graph satisfies the intended use case/goals.\n\nStep 3: Gather, clean, and organize relevant data\n\nNow, it’s time to collect relevant data from different sources. You gather data from either private sources within the organization or public sources like OpenAIRE and Wikidata. Wikidata is a database specifically designed to store data in a format that both humans and computers can read.\n\nOnce you gather this data, you carefully analyze it and eliminate any form of redundancy within the data set. You want your knowledge base to be as succinct as possible — you want to be able to parse through data and answer questions as fast as you can. Deduplicate data, check for irrelevant data, and expand data types for more relevant ingestion.\n\nStep 4: Choose a semantic data model\n\nSemantic models define how you want to store and display data in the knowledge graph. They can be said to be formalized templates that define the structure of the knowledge graph. Your semantic model determines how you map and link different data together.\n\nAlthough you can create your semantic data model yourself, some organizations prefer to use existing semantic formalisms to hasten the process. A few of these include the Resource Description Framework (RDF), SPARQL, and the expandable Web Ontology Language (OWL). RDF presents data in basic triples, while OWL seeks to provide more expansive and specific semantics to data. The concept of triples will be explained later on.\n\nThe baseline is to use a semantic model into which your data best fits.\n\nStep 5: Choose a graph Database Management System (DBMS)\n\nOnce you have determined the semantic model, you choose a graph database management system (DBMS) that will best house and handle the knowledge graph for the identified use case.\n\nWhen making a choice here, you want to ensure the graph DBMS is compatible with existing business operations. You don’t just choose one that supports your semantic model, but you choose one that also scales with your business needs as projected.\n\nIngesting data into your graph DBMS is a huge step in bringing your knowledge graph to life. This is where your graph begins to take shape and show just how data-to-data relationships will be represented. Some good graph DBMSs include NebulaGraph, Neo4j, Memgraph, etc.\n\nTo simplify data ingestion into your graph DBMS, you should utilize ETL tools. ETL (Extract, Transform, and Load) tools are programs that help with the conversion of data to formats that fit into your graph and graph DBMS.\n\nThanks to automation, ETLs are more efficient than manual data loading. They aid data cleaning and permit easily customizable data loading processes. Examples of ETL tools for knowledge graphs include Graph.Build Transformers and Graphable.\n\nStep 7: Establish Ontology in Triples\n\nYour taxonomy refers to general classifications and your ontology is the vocabulary you use to specifically define your data relationships. It is through ontology that you make general semantic models more personalized for your use case.\n\nThis is where business goals reconcile with semantic models. Generally, we define ontologies in triples where there is a subject, predicate, and object. Here, there are two entities (subject and object) linked together by a predicate relationship.\n\nMore specifically, three parts make up a knowledge graph ontology:\n\nNode\n\nEdge\n\nLabel\n\nA node is an entity, while the edge defines the kind of relationship to exist between entities. A label specifically states this relationship based on the edge. For example, let’s look at an adult-infant environment.\n\nThe adult and infant are the nodes (entities). The edge can be to define a teaching relationship, and the label (according to the network direction) specifically identifies who teaches whom. We can, for example, say that Adult 1 (node 1) teaches (label) infant 1 (node 2) in a teaching environment (edge). You create ontologies like this for your specific use case.\n\nOne thing to note when creating an ontology, however, is that you need to keep it extensible and reusable across the graph. The D2KG Ontology is a good example of how to establish one for your business. It uses data from “Diavage”, a platform for recording government decisions, to create a vocabulary for the knowledge graph relevant to its use case (retrieving information on government actions).\n\nStep 8: Start small, with a small sample\n\nNow, it’s time to start experimenting with your ontology. You develop your knowledge graph through iterative steps — starting with small data and gradually scaling up.\n\nThis is the step where you practically combine all you have learned so far. You combine semantic models with relevant vocabularies to develop your knowledge graph. Here, you start populating your knowledge graph to answer business-related questions.\n\nStep 9: Test and adjust the knowledge graph\n\nThis step is all about optimizing the knowledge graph to make it more effective and extract more value from data.\n\nTest the knowledge graph against its use case, analyze its performance, and improve on its defective attributes.\n\nOne important operation to note in this testing phase is “inference”. In the context of knowledge graphs, to inference means to find new relationships between data entities. It is one of the unique properties that knowledge graphs have over relational data management systems and one advantage you have to utilize for your business.\n\nTo spot these hidden relationships, you feed your prototype knowledge graph into an inference engine. This engine utilizes AI to understand and implement logical semantics within the graph and generate new relevant relationships.\n\nTest the post-inference knowledge graph for accuracy by running it through queries and semantic solutions you wish to use it with. Use it to answer business questions, check for consistencies, pit it against industry standards, and optimize it where you find it lacking.\n\nAlso Read: Difference Between Graph Database and Relational Database\n\nStep 10: Develop and publish expanded graph for enterprise use\n\nOnce you have found the business-effective mix of modeling, ontology, and inference connection, it’s time to develop the prototype into a fully enterprise knowledge graph.\n\nCreate the full-scale knowledge graph, integrating it with all data sources through ETL tools and utilizing all data to populate the visual knowledge base.\n\nStep 11: Revisit the business goals and check if they have been met\n\nIn the real-world environment, your knowledge graph may behave differently from its prototype in the test environment. To validate its usability, accuracy, and value, you need to compare its results against the business goals drafted in Step One.\n\nAre query results fitting the context?\n\nAre recommendations powered by the knowledge graph working better for customers?\n\nIs your chatbot giving satisfactory answers to all customer queries?\n\nIn short, check the results against why you needed the knowledge graph in the first place. Demo: How to build and query a knowledge by using natural language with NebulaGraph\n\nPerfecting your Knowledge Graph\n\nSo, now you understand how to get knowledge graphs built to serve you perfectly both in the test and real-world environment. You know that you need to check it for business effectiveness. Guess how you can make it better?\n\nYou can make your enterprise knowledge graph better by keeping it easy to update and optimize for more accuracy and semantic expansion.\n\nIn other words when building a knowledge graph, leave room for change. Ensure you can optimize it post-launch, integrate solutions to new business discoveries, and grow the database as the business and data grows.\n\nA great knowledge graph is one that is capable of scaling over time. It is only through this that you can meet or beat competitors in your organization’s search for more market share."
    }
}