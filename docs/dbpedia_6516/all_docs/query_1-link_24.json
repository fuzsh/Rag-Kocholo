{
    "id": "dbpedia_6516_1",
    "rank": 24,
    "data": {
        "url": "https://github.com/IntelRealSense/librealsense/wiki/Release-Notes",
        "read_more_link": "",
        "language": "en",
        "title": "Release Notes",
        "top_image": "https://opengraph.githubassets.com/3989e9bad0706dc4de6414a177dd6f35cfef1a321c4b606e08f8ca5cd3cdd342/IntelRealSense/librealsense",
        "meta_img": "https://opengraph.githubassets.com/3989e9bad0706dc4de6414a177dd6f35cfef1a321c4b606e08f8ca5cd3cdd342/IntelRealSense/librealsense",
        "images": [
            "https://user-images.githubusercontent.com/18511514/47967255-31b38480-e064-11e8-9815-240117e37505.PNG"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Intel® RealSense™ SDK. Contribute to IntelRealSense/librealsense development by creating an account on GitHub.",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/IntelRealSense/librealsense/wiki/Release-Notes",
        "text": "Release Date: April 21st, 2024\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2551\n\nSupport for variable IMU gyro sensitivity on D455 and D435i\n\nMIPI\n\nEnumerate video nodes by name (JP5 and newer)\n\nrs-fw-update can update multiple devices\n\nPlease reinstall udev rules and driver (v1.0.1.21)\n\nLinux compilation collaterals are now placed inside build/<configuration> directory (e.g., build/Release) rather than spread out in different project directories (like in Windows)\n\nAnd additional static compilation target realsense2-all is now available, packaging all other dependent libraries for ease of use\n\nL515 and SR300 Support:\n\nThe last validated release supporting the cameras is: Version 2.50.0\n\nSDK version 2.54.2 supported the cameras but was not validated\n\nFor more information please refer to https://www.intelrealsense.com/message-to-customers/\n\nSupport for Linux kernels 5.19, 6.2, 6.5\n\nPlease make sure DKMS is up-to-date\n\nSupport for JetPack 6.0\n\nAdded periodic options-changed notifications (see API changes)\n\nAuto Exposure Limit & Auto Gain Limit options are back and now available across the D400 line except D415 and D457\n\nAdded SSE optimizations for alignment processing\n\nMetadata scrollbar in the Viewer\n\nNew rs-enumerate-devices format for better readability\n\nIMU values are now reported by the camera as 32 bits, for both accelerometer and gyroscope values\n\nThis API change will NOT work with older versions of LibRealSense!\n\nIMU SDK >= 5.16 SDK < 5.16 FW = 5.16 D455/D435i: dynamic gyro sensitivity.\n\nAll other SKUs: static gyro sensitivity (1000 Deg/Sec) Corrupted IMU values (both Gyro + Accel) FW < 5.16 Static gyro sensitivity (1000 Deg/Sec) Static gyro sensitivity (1000 Deg/Sec)\n\n#12849 - Fix settings in rs2_create_context\n\n#12801 - Cherry Pick PR #12799 l4t: uvc patch fix localversion\n\n#12800 - Cherry Pick PR#12797 & PR#12798: IMU fixes\n\n#12773 - Cherry Pick PR #12772: fix configuration bug in DQT\n\n#12769 - Cherry Pick PR #12764: Jetson Orin JP6 install\n\n#12768 - fix skipped options showing in viewer\n\n#12715 - Gyro sensitivity feature\n\n#12759 - More Coverity issues handled\n\n#12754 - fix coverity issues\n\n#12753 - fix slowness with viewer get_option_values() while drawing\n\n#12731 - WTLAL move to rsutils (float3 etc.)\n\n#12748 - Fix some Coverity issues\n\n#12745 - Revert PR #12671: Viewer Accel and Gyro dashboards\n\n#12743 - backend: mipi dfu default nodes\n\n#12670 - hdr test converted to python and stabilized\n\n#12671 - [Viewer] Accel & Gyro dashboards\n\n#12722 - Auto removed from popup\n\n#12728 - Add start_offset param to md parser with crc\n\n#12687 by @m-mead - Replace calls to cudaDeviceSynchronize with calls to only synchronize the default CUDA stream\n\n#12720 - rs-enum: fix non-zero video index\n\n#12708 - Options: add BOOLEAN & ENUM; rs2_set_option_value\n\n#12714 - backend-v4l2: relax mipi filter\n\n#12692 - **Support strobe HMC (Emitter Always On) **\n\n#12661 - operator<() on rs2::device uses fw-update-id & check-fw-compat works on recovery devices, too\n\n#12696 - V4l2 mipi compatible\n\n#12693 - Extended HWM - Reuse first chunk (Continue #12682)\n\n#12683 - Small fixes\n\n#12682 - Extended HWM commands refactor\n\n#12678 - Remove HDR option\n\n#12679 - Minimal CMake GHA test fix\n\n#12589 - Create fps_helper.py\n\n#12668 - Add more logs to MD alive test to debug failures\n\n#12662 - Stabilize LibCI with retries until we fix the issues/tests\n\n#12650 - Viewer relies on options-changed notifications, and gets ranges even for r/o options\n\n#12637 - [LRS-GL] Support for Align-SSE\n\n#12658 - Add Auto Exp/Gain Limit feature to all D400 except D415+D457\n\n#12652 - FW logs parser should parse :f format as 32 bit float\n\n#12655 - Link to libusb repo in Copyright fixed\n\n#12651 - Add and update SW release compliance files to the repo\n\n#12646 - reverse py_to_json integer types to match json::parse()\n\n#12649 - doc: support linux kernel 6.5\n\n#12642 - Enhance metadata test to verify sensor timestamp\n\n#12636 - [Viewer] Option Open/Close dashboard area\n\n#12616 - option-value and usage in options-changed notifications\n\n#12640 - [Coverity] Fix Major issues\n\n#12624 - Remove SKU D465\n\n#12588 - [Viewer] Font size slider\n\n#12628 - Add error handling mechanism\n\n#12582 - Auto Exp/Gain Limit feature addition to D435i and D455\n\n#12602 - RealSense kernel 6.5 support.\n\n#12622 - Remove memcpy in HWM & command_transfer\n\n#12621 - Enable blocking advanced mode setting\n\n#12618 - Fix intrinsics calculation for non BROWN models\n\n#12561 - run-unit-tests on ykush devices\n\n#12615 - fix json = json_ref\n\n#12610 - remove \"frame counter reset\" log when enabling HID stream\n\n#12600 - Fix gated_by_value_option\n\n#12585 - Separate frame archives for IR streams\n\n#12556 - Fixing Depth Alignment in Align-GL processing block\n\n#12576 - [PointCloud] Set texel intrinsic & extrinsic based on selected stream\n\n#12575 - Frame queue per stream, not per extension\n\n#12573 - Improve test.remote reliability\n\n#12567 - fix setting initialization in rs-terminal and -enumerate-devices\n\n#12563 - Align t2ff KPI to validation KPI\n\n#12555 - rsutils::json cleanup & usage\n\n#12558 - Set top level permissions to GHA\n\n#12557 - config: udev rules for d555e dfu device.\n\n#12554 - Fix exceptions when closing the viewer\n\n#12418 - scripts: patch: modify Interface Protocol to UVC1.5 for 5e\n\n#12550 - helper functions for formatted values on metadata\n\n#12483 - Can update options automatically, get notification of value change\n\n#12541 - Unit test for end recording and start streaming again bug fix\n\n#12544 - test-live-frames-fps time to measure based on fps\n\n#12549 - Add logs to unstable unit test - rgb options metadata consistency\n\n#12540 - Add rs2::device type/desc APIs; dynamic col width in rs-enum; json fixes\n\n#12517 - Add is_xxx() to json::nested; empty string in context config\n\n#12535 - Disable test projection-from-recording from running\n\n#12534 - **End recording and start streaming again - bug fix **\n\n#12533 - Fix Coverity issues\n\n#12531 - Coverity development validation\n\n#12528 - Don't get GVD a second time to check if camera is locked\n\n#12489 - Coverity - Uncaught exception\n\n#12424 - Added class md_attribute_parser_with_crc to dev\n\n#12511 - Fix: Should not set HDR when it is already enabled\n\n#12513 - Refactor the logic and hover text for disabling the record button\n\n#12508 - backlight compensation is for D400 only\n\n#12481 - Test projection from recording\n\n#12507 - Move ASIC & Projector temperatures to D400 only\n\n#12482 - small refactor for synthetic source\n\n#12498 - context construction using make()\n\n#12506 - Spell fix on Jetson docs\n\n#12484 - Make uvc sensor weak pointer\n\n#12502 - udev: fix warnings reported by udevadm verify\n\n#12494 - Add kernels 5.19 and 6.2 to docs\n\n#12491 - fix auto return value error grrrrr\n\n#12485 - [Coverity] Fix an unchecked dynamic cast issues\n\n#12467 - Separate base- from rsutils executable-name; clarify check_false output in unit-tests\n\n#12480 - depth test - removing comparison to no laser\n\n#12475 - Set FW version\n\n#12473 - moving test-image-quality & renaming to test-depth\n\n#12472 - making terminal only functional when focused\n\n#12466 - Add A module (disparity modulation) set and get test\n\n#12471 - add run-unit-tests --device <>\n\n#12468 - Update rsutils::version from 1-2-1-4 bytes to 2-2-2-2\n\n#12449 - image quality test - adding comparison to laser off if depth is detected\n\n#12465 - Fix Coverity issues\n\n#12448 - Participant & liveliness QoS overrides\n\n#12463 - move extract_firmware_version_string() into ds::, d400-private\n\n#12458 - Test point-cloud-from-recordng\n\n#12456 - WA for pipeline start stop until fixed\n\n#12425 - abstract post-processing filter factory via context\n\n#12402 - port tests post-processing-from bag to python\n\n#12426 - Acroname reset on libCI start\n\n#12447 - Fix visual preset depth settings (Colored IR settings were set along with RGB settings, moved to be with depth module settings.)\n\n#12446 - Handle mutex and CV properly on recovery DFU\n\n#12384 - Add feature-interface to sensors\n\n#12432 - derive context settings from configuration file\n\n#12439 - update dds options documentation\n\n#12441 - use non-copying get_to() in rsutils::json::get_ex()\n\n#12427 - Fix Coverity issues\n\n#12417 - move special_folder into rsutils\n\n#12428 - move to non-virtual register_color_processing_blocks()\n\n#12423 - make sure depth frame is used in hdr check to avoid merged frame from…\n\n#12360 - Updating minimal_cmake_version test\n\n#12410 by @mattiasbax - FIX: Add iostream explicit dependency for building with older gcc (7.5.0)\n\n#12420 - fix PR #12378 missing recordable< recommended-pbs >\n\n#12415 - Relax start stop test\n\n#12399 - Color Y formats\n\n#12395 - FW update aligned\n\n#12408 - fix json install for debians\n\n#12397 - Rename temperatures options + add projector temp\n\n#12398 - make json into proper interface lib\n\n#12396 - laser change by textbox now changes value in list to 'Laser'\n\n#12394 - Fix software-device matcher creation\n\n#12386 - third test on image quality removed. now using max laser power\n\n#12378 - remove recommended_processing_blocks_base\n\n#12368 - remove platform dependency in stream.h\n\n#12372 - clean up types.h\n\n#12369 - refactor option.h and related\n\n#12361 by @rhaschke - Fix dependencies in package.xml\n\n#12364 - add PR template\n\n#12322 - USB missing icon bug fix\n\n#12353 - refactor software-device, sensor.h, streaming.h\n\n#12359 - Add security.md file\n\n#12355 - removed width restriction for fw version\n\n#12358 - Gyro sensitivity might not be const for all models\n\n#12357 - Align to GVD spec 0.4\n\n#12354 - remove deprecated L500 APIs\n\n#12356 - Add gated_by_value_option option type\n\n#12350 - add tclap interface library\n\n#12349 - Add ensure_set_xu_option option type\n\n#12346 - metadata_helper::is_enabled() now returns true if not a USB device\n\n#12310 - realsense2-all\n\n#12345 - fix is_port_enable() on libci\n\n#12342 - Syncer debug\n\n#12330 - fix pybackend missing udev watcher\n\n#12326 - Actual FPS simplification & unit change [API change]\n\n#12331 - move all ExternalProjectTargets into '3rd Party'\n\n#12334 - Removed third test comparing laser on/off\n\n#12332 - use RS2_API_FULL_VERSION_STR in tools\n\n#12318 - Cherry-pick PR #12309 - Fix pybind arg names\n\n#12281 - Image quality test\n\n#12303 - remove ppa install for GHA and fix U22 log files\n\n#12301 - Fix wrong user message when trying to backup camera flash\n\n#12289 - remove rs2 structs from context.h\n\n#12298 - Use optical module SN + Disable FW backup stage\n\n#12297 - Clean up types.h a little\n\n#12283 - [GHA] Fix Minimal CMake version test\n\n#12282 - Deadlock test & unit-test-config now listens to donotrun\n\n#12275 - Context callback changes and device mutex removal [API change]\n\n#12270 - static hw_monitor::build_command()\n\n#12272 - Setting preset does not update color options\n\n#12248 - Fix build DQT with visual studio 2017\n\n#12269 - remove context knowledge of playback devices\n\n#12266 - Fixing GHA Minimal CMake version check\n\n#12265 - rscore/device-factory base & usage in context; fix warning\n\n#12241 - hexarray & hexdump\n\n#12259 - Device hub fixes and small refactor in backend\n\n#12257 - Catch2 v3.4 as static lib; U22 in GHA\n\n#12255 - Add support to update multiple MIPI devices in rs-fw-update tool\n\n#12243 - Singleton backend/device-watcher\n\n#12247 - add unit-test-config --not-live and make use in GHA\n\n#11900 by @ciandonovan - Refactor device enumeration for unprivileged containers\n\n#12118 - GHA checking CMake minimal version test\n\n#12225 - Replaced travis with Github Actions on readme files\n\n#12234 - Y16 calibration format test\n\n#12217 - backend-device-factory: separation from context\n\n#12240 - add rs2_device_is_connected, rs2::device::is_connected [API change]\n\n#12239 - enable unit-test-config --live\n\n#12219 - Simplify time-service usage\n\n#12228 - Signal in rsutils\n\n#12231 - master -> development\n\n#12230 - promote v2.54.2 to master\n\n#12223 - fix unit-test-config cmake file detection; add cmake:dependencies\n\n#12224 - New color for button on pop up window Viewer updated\n\n#12200 - Refactor device.h\n\n#12212 - allow multi filters for fw update via viewer\n\n#12209 - Enable D457 FW update on LibCI\n\n#12207 - win_event_device_watcher wait before notify\n\n#12210 - Handle Coverity issues\n\n#12195 - Fix static-analysis issue in frame_holder\n\n#12193 by @hsuys - Fix GetDistance() issue for SoftwareDevice in C#\n\n#12196 - SW device depth-units per sensor's DEPTH_UNITS, if set\n\n#12204 - Prevent the RGB camera from being disabled during FL calibration\n\n#12201 - fix access violation when exiting viewer with playback device\n\n#12191 by @AllenIsaacJose - Update installation_jetson.md\n\n#12138 - Remove recordable<> from many interfaces\n\n#12175 - Add cmdline args to realsense-viewer\n\n#12174 - Fix Coverity issue\n\n#12013 - Refactor Windows documentation\n\n#12167 - calling the continuation method even on frame alloc failure\n\n#12163 - Options registry for non-built-in options\n\n#12162 - do not use IR frame for hdr merging if it does not support meta data\n\n#12149 - Refactor frame interfaces and structures\n\n#12160 - fix update_device::get_device_info\n\n#12151 by @mengyui - update project files to Android Studio 2022 with AGP 8.0\n\n#12153 - [testing] disable ports only if acroname is connected\n\n#12152 - Fw logger multipe devices\n\n#10593 by @mengyui - when launch DQT using default depth/ir profiles\n\n#10965 by @kyosho- - Android 12 Support\n\n#12141 - Devinfo\n\n#12121 - Removing tensorflow wrapper example n.4 & n.5\n\n#12143 - Move lazy to rsutils\n\n#12060 - merge ADL branch to development.\n\n#12146 - script: patches: jammy 6.2 append W10 format for D415\n\n#12120 - scripts: patches: metadata: append SKU\n\n#12132 - [testing] add retries directive\n\n#12124 - add BUILD_LEGACY_PYBACKEND default OFF\n\n#12115 - Fix get_intrinsics for unrectified image\n\n#12128 - Restore calibration changed options only after apply or dismiss\n\n#12126 - fix motion_get_intrinsics\n\n#12109 - sw-dev profiles work; shorter rs-enum-devs output; use-basic-formats -> format-conversion\n\n#12114 - move platform_camera out of context.cpp; remove recovery_info\n\n#12110 - scripts: patches: append SKUs\n\n#12108 - merge ADL to development\n\n#12105 - Draw cross in calibration ROI\n\n#12095 - rs-enumerate-devices fix\n\n#12054 - rs-fw-update tool - handle D457 MIPI device\n\n#12102 - scripts: ipu6 bind commentary\n\n#12096 - scripts: support for kernel 6.2\n\n#12101 - scripts: patch will skip hid for fixed versions\n\n#12099 - Patch 5.4.232 noiio\n\n#12078 - [testing] recycle all ports at start & disable all ports when finish\n\n#12040 - Port test record-software-device to python\n\n#12070 - scripts: ipu6 aggregated camera support.\n\n#12084 - Remove redundant file\n\n#12042 - D457 Segfault when calling get_motion_intrinsics\n\n#12083 - fix string concats in versions-db-manager.cpp\n\n#12003 by @autoantwort - CMake: Use plain add_library\n\n#12041 - merge to dev\n\n#12052 - hdr options and metadata enabled for mipi\n\n#12023 - scripts: rs-enum: update enumeration for jetson devices.\n\n#11953 - GHA - Remove Foxy (EOL) and Galactic (EOL), add Iron (New Distro)\n\n#12051 - remove debug enforcement (-g) from unix compile options\n\n#12038 - Fix minimal FW version UT\n\n#12034 - Update minimal FW version for d455\n\n#12029 - **Fix formats-converter bug **\n\n#11949 - Porting legacy live test - test software-device motion stream\n\n#11969 - scripts: ipu6: fix media controller index\n\n#12008 - merge to development\n\n#11990 - IMU with combined motion stream\n\n#12002 - Remove L500\n\n#11995 - Close laser emitter on Focal Length calibration\n\n#11992 - [RS-Viewer] 3D D455 model added\n\n#11988 - Remove SR300\n\n#11989 - Update API comment\n\n#11946 - DDS using generic format types\n\n#11962 - Fix building with -DBUILD_EASYLOGGINGPP=OFF\n\n#11959 - Fix the installation target directory of the pyrealsense2\n\n#11952 - Add full version attribute for python wrapper\n\n#11880 - Legacy live test - Units transform test\n\n#11930 - [testing] improve exception handling in rspy.test\n\n#11713 - Refactoring Linux installation guide\n\n#11851 by @mengyui - Fix YCrCb2RGB issue in CUDA code.\n\n#11915 - Linux collaterals in single build dir\n\n#11850 - virtual software_device::add_xxx_stream(); support in formats-converter\n\n#11861 - Python wrapper - Explicit config enable_stream(...) to have unique arg count [API CHANGE]\n\n#11917 by @davids91 - Fixed compile error: ‘uint64_t’ does not name a type\n\n#11902 - backend-v4l: stop metadata before video for ipu6\n\n#11907 by @WurmD - fix: issue #11899 log line fix\n\n#11903 - fix cppcheck parser for missing 'file0' in error\n\n#11892 - depth ae mode added to options to ignore in test\n\n#11886 - merge master to dev\n\n#11858 - Update synthetic-stream.cpp\n\n#11856 - remove internal unit-tests (with BUILD_INTERNAL_UNIT_TESTS)\n\n#11810 - Formats-converter renaming and adding comments for clarity\n\n#11822 - Adlp metadata\n\n#11834 - log_to_console now logs to console in Windows\n\n#11837 - scripts: support for jammy 5.19\n\n#11840 - patches: Change device match to uvc1.5 compliant.\n\n#11825 - scripts: patch-hid ignore 5.15.0-72+\n\n#11830 - create rsutils-os.cpp, rsutils-os.h\n\n#11780 - Fix CMake build on a root folder that contains spaces\n\n#11801 - using the method both from sensor and ros_reader\n\n#11714 - Formats conversion\n\n#11766 by @Allius27 - create temporary file in build directory instead of source\n\n#11760 - Add GHA timeout\n\n#11637 - RS-Viewer : metadata scrollbar added\n\n#11751 - [testing] improve rspy.test.remote.Error output\n\n#11707 - replace rspy.test abort_on_fail:bool with on_fail:str (ABORT/RAISE/LOG)\n\n#11711 - Verify support for options before setting them\n\n#11697 - **Fix unstable test metadata alive **\n\n#11668 - live-frames-fps test monitors frame drops\n\n#11695 - add metadata-syncer unit-tests\n\n#11699 - Allow change AE type while not streaming (even if AE is on)\n\n#11665 - improve shorten_json_string; use std::string for json; [testing] improve test.remote & GHA\n\n#11666 - Run more tests on more devices\n\n#11664 - Add a short stress test for start/stop\n\n#11653 - Metadata test alive calibration\n\n#11651 by @coolsarne - Added support for D405 camera\n\n#11650 - add \"gha\" to rspy.test.context using GITHUB_ACTIONS env var\n\n#11647 - Remove unrelated device in metadata test\n\n#11618 - adl-p temporary disable metadata node\n\n#11615 - refactor & optimize frame creation, invocation, metadata syncing\n\n#11600 - MD performance and misc changes\n\n#11598 - add slice and shorten_json_string\n\n#11592 - rs-enum: support for metadata nodes format updates\n\n#11566 - Add support for post processing filters\n\n#11587 - external json & pybind11_json\n\n#11561 - rsutils::deferred RAII; change archive to move data\n\n#11550 - [ADL-P] Automate rs-enum script to udev rules\n\n#11412 - Search extra_data for software-device\n\n#11536 - add rsutils::os::executable_name()\n\n#11534 - add D415 formats\n\n#11472 - backend: dfu - add support for multiple cameras\n\n#11489 - fix cppcheck warnings\n\n#11446 - [testing] add proper indents to rspy.test failures\n\n#11145 - Update rsutils::shared_ptr_singleton; [testing] run-unit-tests --tag negation & using manifest\n\n#11319 - Enumerate video nodes by name\n\n#11324 - [testing] add rspy.test.check_float_lists\n\n#11294 - color processing block acc to platform\n\n#11295 - [ADL-P] LRS V4L2 Backend MPLANE streaming support\n\n#11165 - Build_CI restructure with live-tests on Linux only\n\n#11102 - [testing] change rspy.test.check_equal() to throw an exception for lists\n\n#11080 - clean up rs-enumerate-devices tab output; add --verbose\n\n#11075 - rs-enumerate-devices works\n\n#11063 - add operator<() to rs2::device\n\n#11042 - move json utils into utilities/json.h\n\n#11036 - fix throws; in locked_transfer::send_receive; [testing] fix test-rgb-options-metadata-consistency\n\n#11022 - CUDA fixes for dds branch in release flow\n\n#10386 - context json settings\n\nFull Changelog: https://github.com/IntelRealSense/librealsense/compare/v2.54.2...v2.55.1\n\nRelease Date: 28th Sep, 2023\n\nThis is an incremental bug-fix-only release\n\nNew FW version 5.15.1.0 for the D400 product line\n\nFixed D457 FW CRC signature in metadata\n\nFixed issue with Tare & OCC calibrations at 848x480 resolutions\n\nRobust OCC / Tare. Note: the calibration convergence time has increased\n\nIntroducing: NEW D456 camera support\n\nEnabled manual HDR for D457\n\nFW update tool support for D457\n\n#12169 - Cherry pick #12105 - Draw cross in calibration ROI\n\n#12165 - Cherry pick #11892 - Ignore ae mode in drops on set test\n\n#12164 - Cherry pick #12162 - rs-hdr fix for d457\n\n#12161 - Cherry pick #12128 - UCAL - Restore calibration changed options only after apply or dismiss\n\n#12104 - Cherry pick #12054 - rs-fw-update tool - handle D457 MIPI device\n\n#12085 - Cherry pick #12042 & #12084 - D457 Segfault when calling get_motion_intrinsics\n\n#12079 - Cherry pick #12052 - hdr options and metadata enabled for mipi\n\n#12073 - Cherry pick #12034 & #12038 - Update minimal FW version for d455\n\n#12074 - Cherry pick #11995 - Close laser emitter on Focal Length calibration\n\n#12075 - Release flow & collateral changes (no debug info; no C#/Matlab collaterals; etc.)\n\nRelease Date: 6th Jun, 2023\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2541\n\nNew FW version 5.15.0.2 for the D400 product line\n\nSupport for the D400f family of cameras with filters\n\nSupport for Python 3.11; Python 3.6 is no longer supported\n\nC++14 default in library\n\nJetPack 5 collaterals\n\nSome content has been removed as part of an overall cleanup initiative to minimize the size and complexity of the SDK:\n\nRemoved deprecated camera PIDs, such as T265, L535\n\nThe network-device functionality has been removed in preparation for a replacement in the next release\n\nBoost has been removed as a dependency of realsense-file\n\nSqlite, originally meant for use in internal unit-tests, has not been in quite a while and has been removed, and with it rs2::recording_context and rs2::mock_context\n\n#11703 - AE type option hot fix\n\n#11646 - Deprecate apt-key in distribution_linux.md to align with Debian policy #11644\n\n#11643 - Remove nodejs support from docs\n\n#11409 by @michael-mih - Fixed throw misspell\n\n#11636 - Fix bug in #11625\n\n#11627 - Update GHA linux runners to Ubuntu 20\n\n#11625 - Handle exceptions during device creation\n\n#11626 by @jirislaby - (gcc-13) include cstdint for int_t\n\n#11610 by @kirkoman - fix: close ObjectPool race condition (#8334)\n\n#11611 & #11604 - Fix unsigned fw update for L515\n\n#11602 - changes in hw monitor added\n\n#11591 - HW reset - response required handling\n\n#11585 - Remove unused Hoffman filter\n\n#11567 - Fix metadata\n\n#11574 - move d400 intrinsics and extrinsics to d400 folder\n\n#11569 - Update manual patch to use https (Verified on Ubuntu 22 kernel 5.15)\n\n#11559 - Remove unused code\n\n#11556 - remove useless code in context.cpp\n\n#11551 - change metadata_blob to fit ALL metadata; software_sensor now uses array indexing\n\n#11541 - Type of variable initialization was changed\n\n#11558 - remove sw_device_extra_data (Now that the metadata can encompass all fields #11551)\n\n#11542 - multiple resolutions implementation added, never enabled\n\n#11519 - Viewer small refact\n\n#11520 - limit test-set-gain-stress-test to nightly only (LRS-634)\n\n#11497 - Relocation git install command\n\n#11495 - The python support versions were updated\n\n#11488 - fix crash from leftover T265\n\n#11484 - Pr check add\n\n#11479 - Move stuff to and from common DS\n\n#11477 - Compilation -pedantic flag disabled for glfw on Unix\n\n#11478 - KW - null pointers checks added - other concept\n\n#11475 - printings added in hdr tests\n\n#11469 - KW - null pointer checks added (Tracking on [LRS-696])\n\n#11474 - Move FW version & serial numbers parsing to ds-common\n\n#11473 - Rollback error polling option name\n\n#11417 - support for Python 3.11 with pybind11 v2.10.3\n\n#11442 - Clean cmake opengl warning ubuntu22 (Tracking on [LRS-673])\n\n#11464 - removing register to motion module temperature option\n\n#11448 - Update stb image to version 2.28\n\n#11450 - Add retry to set/get pu commands\n\n#11461 by @alexmehta - Update installation_raspbian.md (Update the raspbian install slightly)\n\n#11397 - Cppcheck cleanup\n\n#11447 - Fix FW version check on RS-Viewer\n\n#11440 - Fix uninitialized variable issue\n\n#11432 - Add depth auto exposure mode\n\n#11399 - Detect the new products in the SDK and Viewer: D435f, D435if, D455f, D456\n\n#11436 - Set different ABI to each python module to fix crash on multiple shared python modules\n\n#11422 - refact ds5 to d400\n\n#11416 by @rupprecht - Fully qualify std::move invocations to fix -Wunqualified-std-cast-call\n\n#11408 - Metadata permission\n\n#11394 - Enumerate video nodes by name\n\n#11404 by @cobar001 - **Make minor adjustments to depth-metrics.h and a few dependencies to improve modularity)\n\n#11396 - update third-party:tinyfiledialogs version to 3.9.0: cleanup format-overflow warning\n\n#11385 - D457 MIPI enable multiple cameras for single DES.\n\n#11402 - remove debug message in global_timestamp_reader\n\n#11398 - fix the streams order in viewer\n\n#11395 - third-party:glad: ignore pedantic directive for sensitive code\n\n#11377 - calling buffer releasing method earlier\n\n#11378 - Retry on \"set_xu\" when device is busy\n\n#11375 - C++latest, step 1\n\n#11373 - Initialization of variables added\n\n#11372 - validating range before set option\n\n#11369 - force update of cppcheck_run.parsed.log in static analysis\n\n#11359 - T265 leftovers in docs and src\n\n#11356 - removing static analysis errors\n\n#11341 - scripts: Add D585 & D585S to metadata patch list in manual scripts\n\n#11345 - remove sqlite, rs2::recording_context & ::mock_context\n\n#11343 - Variables initialization added\n\n#11344 - fix the left pixels column\n\n#11349 - turning flag to true when needed\n\n#11342 - Update static analysis\n\n#11331 - Update missing packages to installation guide\n\n#11334 - Division by zero might occur in ds5-auto-calibration.cpp\n\n#11242 - scripts: L4T 5.0.2 RLS UVC support\n\n#11318 - Remove network device\n\n#11312 - adding string comparison in case duration comparison fails\n\n#11305 - Remove boost from realsense-file\n\n#11307 - Fix crash when advanced mode = OFF\n\n#11221 by @martinseilerameria - Add device iterator to ImGui ID stack for device selection pop up in RealSense Viewer\n\n#11300 - add UT verifying no emitter freq option on legacy devices\n\n#11105 - C++14\n\n#11071 - restoring test for d400 pl\n\n#11287 - Remove TM2 (T265) from LibRS\n\n#11285 - Fix viewer histogram equalization at startup\n\n#11275 - add sample.preset to avoid install problems\n\n#11265 - remove L535\n\n#11237 - Python log unit-tests, with hang fix and more\n\n#11254 - Variable Initialization type was changed\n\n#11235 - Stabilize timestamp domain test: sleeping time.\n\n#11222 - Hkr other ds rebased dev\n\n#11233 - Division by zero might occur in viewer.cpp\n\n#11223 - Update emitter frequency minimal fw version to 5.14.0.0\n\n#11216 - Remove nodejs wrapper\n\n#11217 by @hsuys - GitHub#11171\n\n#11202 - add rsutils::number::running_average<>\n\n#11214 - stabilized-value in pyrsutils; replace 9 cpp tests with 1 py\n\n#11209 - Relax HDR UT KPI\n\n#11191 - rsutils::version, replacing librealsense::firmware_version & sw_update::version\n\n#11193 - Add divide by zero protection\n\n#11186 - Utilities rename to rsutils\n\n#11179 - Reduce cppcheck errors\n\n#11167 - Stabilize timestamp domain test\n\n#11160 - ELPP and utilities changes\n\n#11136 - Hot fix for OCC HA type to use legacy UCAL demo scripts\n\n#11147 - pybind as a dependency in own project; utilities-py; test-split\n\n#11137 - utilities as a library\n\n#11100 - Add ROS2 build step for LibRealSense\n\n#11078 - Add GMSL to RS Viewer for D457\n\n#11095 by @Endruu - Fix memory leaks in post processing filters\n\nSolution name in Visual Studio has changed: librealsense2 -> realsense2 ... make sure you reopen the new solution after running CMake\n\nLibrealsense headers previously in include/librealsense2/utilities have been moved internally into third-party/rsutils and are now a statically-linked library\n\nThis means that realsense2 dependencies now have an additional rsutils dependency\n\nIf including librealsense via its CMake project, this dependency should be injected automatically and nothing needs to be done\n\nAn include directory is automatically added, too: just use #include <rsutils/...>\n\nIf BUILD_PYTHON_BINDINGS is ON, an additional Python library pyrsutils.pyd will be built, and includes access to the utilities functions from it... this is mostly for use in CI, but is available for anyone if needed\n\nVisual Studio solution projects have been moved around a bit, with most of the main ones (rsutils, python wrappers) now under Library alongside realsense2\n\nRelease Date: 6th Dec, 2022\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2531\n\nNew FW version 5.14.0.0 for the D400 product-line\n\nPython 3.10 support\n\nAdded support for Ubuntu 2020 kernels 5.13 and 5.15, and Ubuntu 2022 with kernel 5.15\n\nLibRS ROS wrapper is now supporting ROS Humble - click here for more info\n\nCollaterals for Python 3.5 and Ubuntu 16 are no longer generated or tested\n\nAdded support for MIPI camera OCC/Tare calibration that offloads part of the algorithmic flow to the host, also known as Host-Assistance (HA) mode (see API changes)\n\n#11166 - update D4xx FW to 5.14.0.0\n\n#11001 - OCC/Tare integration with MIPI SKU (Integration of OCC/Tare host-assisted flow)\n\n#11072 - Add python 3.10 support\n\n#11070 by @hsuys - Enable multi camera support for D457\n\n#11076 - Update supported kernel versions in docs\n\n#11061 - Fix jammy debian build\n\n#11041 by @codekansas - Do a shallow git fetch instead of full fetch\n\n#10948 - Fix DSO-18454 laser turned off after calibration\n\n#11034 - D4xx emitter on off\n\n#11026 by @Hsiang0717 - fix rs-server can't compile when -DBUILD_WITH_OPENMP:bool=ON\n\n#11013 by @stefanhige - fix possibly uninitialized memory. Add documentation. (See #11 006.)\n\n#11000 - bump json to v3.11.2\n\n#10953 - Add a new Emitter frequency option\n\n#10992 - Update RS icons\n\n#10971 - Update Intel RealSense logo\n\n#10925 - Test timestamp domain\n\n#10931 by @aoxu2000 - fix type and method err for Python3\n\n#10913 - restricting the D405 w/a for calibration resolution to D405 PID only\n\n#10921 - attempt at reducing warnings (U20)\n\n#10920, #10918 - adding gil_scoped_release to sensor open api methods\n\n#10522 by @YoniChechik - bugfix: next_pixel_in_line\n\n#10634 by @jcremona - Bash script made an incorrect string comparison\n\n#10898 by @dmipx - docs - Ubuntu 20/22 driver patching note\n\n#10895 by @noacoohen - Set the metadata hardware size tool tip description\n\n#10865 by @mengyui - add missing dependence for build kernel module\n\n#10893 by @35selim - Improved/fixed installation.md syntax\n\n#10874 - Fix video md sync issue in v4l2 backend\n\n#10881 by @baderouaich - Fix build fail due missing operator= in popup\n\n#10809 by @baderouaich - Some bug fixes\n\nFix popup's operator== comparison\n\nChanged order of the if condition to avoid the possibility of dereferencing an invalid iterator\n\nFixed wrong usage of memset()\n\nFixed standard deviation check must be between range\n\nFixed wrong usage of memset()\n\nFixed potential memory leak in RsSimpleRTPSink\n\n#10876 by @riking - Fix two undefined behavior issues (pipeline/config, elpp)\n\n#10880 - upgrade ELPP to v9.96.7\n\n#10818 by @chris-durand - Fix compilation with GCC 10+\n\n#10737 - adding support for y16i - 10 MSB\n\n#10745 by @dmipx - LRS Linux kernel support for Y16i\n\n#10625 by @mengyui - enable kernel patch for Ubuntu 22.04\n\n#10840 - Undef v4l debug logs\n\n#10839 - Fix cast/conversion issue when using mixed int/float types\n\n#10816 - Revert \"v4l2 backend - ignoring buffers with flag V4L2_BUF_FLAG_ERROR\" (Reverts IntelRealSense/librealsense#10772)\n\n#10797 - Addressing LRS-462 Viewer IR frames switch\n\n#10800 - cuda code compilation correction\n\n#10798 - D4xx ts global hw fix\n\n#10793 - mipi fw update ui fix\n\n#10794 - wa added in frame size assertion, and processing block for mipi added\n\n#10762 - added utilities/string/chrono.h; fix test-waiting-on.cpp to use it\n\nRelease Date: 28th Sep, 2022\n\nCollaterals for Python 2.7 and 32-bit are no longer generated or tested\n\nNOTE: the Windows installer is still 32-bit\n\nIntroducing support for MIPI devices!\n\nThis is a PRE-release, off a branch that is yet to be merged to the main development branch, of MIPI support. Validation of USB devices is ongoing and, while we expect no major issues, this release is intended for use with a MIPI device.\n\nRelease Date: 23rd Aug 2022\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2511\n\nD405 is now officially supported\n\nWindows 7 executable is no longer created as part of the release, but the code is still compilable\n\n#10740 - Remove unused variable pid in ds5_advanced_mode_base constructor See #10336: Crash in applications when running x86 in Win10 with D405\n\n#10619 - fix #10617 rs-software-device black output\n\n#10147 - Partial frame notif acc to kpi\n\n#10573 - Remove redundant frame copies inside librealsense core\n\n#10388 - Add easylogging include cmake\n\n#10384 - Fix root include path\n\n#10369 - Move utilities to librealsense include dir\n\n#10314 - Fix LibCI-nightly reset_update_counter opcode (wrongly changed in #10261)\n\n#10296 - Remove ENABLE_ZERO_COPY CMake flag (wasn't in use)\n\n#10261 - add debug_protocol::build_command()\n\nadd build_raw_data to the debug_protocol API - (this API generates a raw data cmd from opcode, params, and data)\n\nadd the new API to C# and Python wrappers\n\n#10183 - tooltip corrected\n\n#10152 - Allow retries for USB claim interface + Increase FW update UT stability\n\n#10130 - Force non-realtime playback to be synchronous\n\n#10117 - Fix option_set_drop_test\n\n#10091 - Fix error polling last value reset logic\n\n#10082 - syntax error corrected\n\n#10047 - Gh actions update windows label & fix mac-os OpenSSL link\n\n#10032 - Concurrency improvements (Improve dispatcher::flush() and waiting_on<> so that the stopped mutex/cv are used -- otherwise the stopped signal may not stop the wait and we get a timeout.)\n\n#10024 - Fix playback flush halt + add UT\n\n#9936 - Adjust the Self-Calibration script for UCAL flows\n\n#9912 - Fix UCAL inconsistencies Viewer-specific fixes and refinements:\n\nEnable preview with ROI for GT after HW reset event\n\nImprove FL robustness in USB2 mode by adding more time for camera's exposure to settle\n\nAdd blocking notification when invoking FL-Calib for D455 at USB2 mode.\n\n#9727 by @kevindehecker - Enable patches for kernel 5.11\n\n#9887 - Error on playing paused bag (Fix issue #4249)\n\n#9882 - Ucal fixes (Ucal amendments)\n\n#10210 - Add Ubuntu 20 to installation guide\n\n#9973 - Remove Jetson installation doc Debians built with FORCE_RSUSB comment Jetson Debians no longer build with -DFORCE_RS_USB_BACKEND=true, The backend built is V4L2\n\n#9895 - Add libudev-dev dependency to Jetson installation guide\n\n#9898 - Disclaimer notification for D415 and Self-cal (Add notification and provide a link to Self-Cal white paper)\n\nRelease Date: 11th Nov 2021\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2500\n\n#8925 - [D400] Firmware version 5.13.0.50\n\nIntermittent failures in sequential Depth start/stop stress-test scenario (DSO-17659)\n\nFix for Emitter on/off stops on RGB srteam deactivates (DSO-16964)\n\nMinor fixes and stability improvements\n\n#9336 - [D400] Self-Calibration (UCAL) Routines - enhancements and refactoring\n\nUCAL is an advanced feature(1) intended to compensate for camera's calibration misalignments developed over the product's life cycle after it's being deployed. The re-calibration is achieved by running a set of predefined routines - On-Chip, Tare and Focal-Length(2), on the Depth camera. Each routine is designed to address specific Camera's metric and to re-adjust it to a level comparable to factory calibration spec.\n\n(1) Read the White Paper prior to running UCAL steps, as it affects the camera's calibration tables.\n\n(2) As part of the Self-Calibration refactoring, Focal-Length calibration and Tare Target-based distance calculation were introduced, that require a printed target to be provided (Target_for_print).\n\n#9831 - [Linux] Switch to OS Event-driven device discovery instead of polling mechanism.\n\nReduce camera reset cycles delays and improves software responsiveness.\n\nReplace Linux polling_device_watcher with udev_device_watcher. More than one udev notification is sent for each add/remove event. We \"aggregate\" and enumerate only when a polling period comes up \"empty\" meaning nothing else is incoming.\n\nUtilizes libudev-dev package functionality. (LRS-294)\n\n#9268 - [Docker]\n\nProvide tutorial with a demo docker file to generate and deploy a containerized version of the SDK (LRS-85)\n\n#9558 - [Demo] Pointcloud-Stitching.\n\nThe demo combines Depth live feeds from two cameras and presents a single Wide FOV image.\n\nThe method used to stitch the images is to transfer both pointclouds into the virtual device's coordinate system and then project them on the virtual device's images.\n\nThe app assumes the calibration matrix between the devices is known. A method for calculating it is demonstrated in the wrappers\\pointcloud\\pointcloud-stitching\\doc\\pointcloud-stitching-demo.md file.\n\nThe source code is available under wrapper/pointcloud/pointcloud-stitching/rs-pointcloud-stitching demo path.\n\n#9878 - [Core] fix callback ptr (DSO-17796)\n\n#9876 - [Core] C++17 std::iterator error. Addresses for #6283. (DSO-15172)\n\n#9871 - [Windows] Handle SEMAPHORE_TIMEOUT error on set_pu command. Addresses #7129. (DSO-17181)\n\n#9855 - [Jetsons] Support for l4t 32.6.1 (the latest supported jetson version 32.5.1 is not the latest official version from nvidia (32.6.1) contributed by @wall0404\n\n#9815 - [D400] Group FW calls. Apply wrapper function \"group_multiple_fw_calls\" to ds5 devices to speed-up device activation. Speedsup camera's startup in cold boot scenario by 200+ msec (DSO-16629)\n\n#9845 - [Video4Linux] Fix set gain exception raised on Ubuntu 20. Use Status Interrupt Endpoint Vl42 (async. controls) for verifying set_pu command was executed before the function call returns. (DSO-17185)\n\n#9692 - [D400] Reset Auto Exp/Gain Limit back to default value 0. (DSO-17393)\n\n#9844 - [Core] Wrap android log with lrs namespace. (LRS-316)\n\n#9821 - [RSUSB] Backend - reattach kernel driver.\n\nFixes RSUSB/V4L interoperability:\n\nRSUSB backend detaches the device from the V4L2 kernel driver and never reattaches it. Consequently, after using RSUSB backend, applications using the v4l backend can't find the device. (DSO-17429)\n\n#9824 - [Viewer] Add minimal delay between set_option commands** (LRS-311)\n\n#9804 - [Core] LibCI improvements & VS2019 (glad, atlstr) compatibility. (LRS-303)\n\n#9807 - [C#] Add tutorial for network device. (Follow-up on PR #8809 (LRS-200)\n\n#9792 - [Viewer] Add stream index to stream window title (DSO-17647)\n\n#9794 - [Viewer] Prompt for advanced mode when changing depth units (LRS-202)\n\n#9782 - [Android] Fix Android motion line UX.\n\nDraw a centered dot under dead zone values\n\nChange line color to white to match the RS Viewer UX. (LRS-122)\n\n#9789 - [Viewer] Settings windows affected by measure tool (DSO-17665)\n\n#9764 - [Tools] Add rs-embed tool\n\nThe tool converts 3D models into a string format suitable for embedding into C++ applications.\n\nUpdate 3d models for the supported camera SKUs.\n\nSwitch the tool to use the latest LZ4 library version. (LRS-290)\n\n#9642 - [D400] Presets update\n\nUpdate hard-coded presets to the latest recommended configuration.\n\nSpecify D450 default preset. Tested by comparing the JSONs files of the new presets (in the ticket) to the exported JSONs files from the viewer. (DSO-17183)\n\n#9763 - [Core] Firmware check when updating in recovery mode\n\nAdd FW check when the device is in recovery mode.\n\nAdd D4xx and L5xx FW checks by the FW version when updating in recovery mode.\n\nAdd heuristic FW size check to sr3xxx when updating in recovery mode. Follow-up on PR: #9683 (DSO-17448)\n\n#9770 - [CMake] remove cmake deprecation warnings** (Newer CMake was complaining of deprecations in certain source files. (LRS-108)\n\n#9767 - [Linux] Lower Linux device polling interval to 2 seconds. The time for enumeration when there are no changes is on average 0.005s, when there are changes it is 0.15s. So polling every 2s shouldn't cause too much burden on the system. (LRS-234)\n\n#9768 - [Core] Another escapee for a mem leak (Follow-up to #9762 )\n\n#9762 - [Core] avoid mem leaks in rs.cpp by taking ownership of callback ptrs. Addresses #3873 and #4447: potential memory leak in pipeline::start method (callback overloads). (DSO-13704)\n\n#9746 - [Viewer] Switch off histogram equalization when min/max distance is changed. (LRS-291)\n\n#9688 - [Viewer] Fix Unreadable stream info while multi stream** (If multiple stream views are packed closely together, the Info line overwrites the view to the right. (DSO-17042)\n\n#9732 - [MacOS] Set default CHECK_FOR_UPDATES=OFF for OSX. Due to a non trivial flow when building with online updates on OSX, we set the default CMake flag to OFF (on OSX only) Update the OSX installation guide for users who want the online updates feature on. (DSO-17551)\n\n#9731 - [Viewer] Window size callback is called with value of 0 for height and width. (LRS-292)\n\n#9727 - [Linux] Enable patches for kernel 5.11. Contributed by @kevindehecker.\n\n#9715 - [Core] Dix crash with desynced frames; add unit-test** (LRS-289)\n\n#9517 - [Android] UI fixes\n\nMake the stream statistic view in camera app scrollable (RS5-11519)\n\n#9625 - [Core] Improve unsigned firmware update on android** (Improve unsigned firmware update:\n\nuse file browser to pick the firmware file in any accessible directory\n\nerror handling (DSO-17007, DSO-17550)\n\n#9662 - [Android] RS Camera viewer restarts the stream when rotating screen.\n\nHandle device orientation change to avoid interruption during preview, recording and playback\n\nFix memory leak during device rotations (DSO-14436)\n\n#9716 - [Core] Update frame callback logs\n\nRemove callback-started field in frame\n\nRemove frame release log message\n\nSeparate composite frame release log\n\nSplit archive into several files (DSO-16993)\n\n#9720 - [Viewer] Depth data hides the content of export window. (DSO-17561)\n\n#9721 - [Viewer] Export window affected by Measure tool (DSO-17658)\n\n#9689 - [Android] Default Started streams appears off in settings Changes:\n\nadded getActiveStreams API in sensor and pipeline on android\n\npopulate default stream profiles in camera viewer settings\n\nturn off all settings to reset to default streams. (DSO-15687)\n\n#9711 - [Viewer] Windows sometimes goes to 0 width & height. (LRS-288)\n\n#9710 - [Viewer] Disabling Measure when depth stream is stopped. (DSO-17043)\n\n#9706 - [Viewer] Measurement line is not disappeared after disabling distance Button* Revised tooltip to make it clear how to draw a polygon. (DSO-17043)\n\n#9668 - [Core] Playback behavior with syncer at EOF. Added improvements to Python wrapper usability:\n\nadded frame_queue-like wait_for_frame etc. to syncer so they can be used interchangeably\n\nadded pyrs.sensor.name and repr Also: -added a text converter to rs-convert to easily see the frame content of a rosbag (LRS-172])\n\n#9704 - [Viewer] - Visual Preset value change when reselecting the default value. (LRS-119)\n\n#9677 - [Core] Crash on stopping context\n\nAdded debug messages, in general. But the issue, it seems, was that context::stop() only called device_watcher::stop() when there were NO callbacks registered. (LRS-219)\n\n#9676 - [Demos] 'rs-measure' example program has missing measurement value. (DSO-17549)\n\n#9670 - [Core] Removed unneeded ; character in serialized-utilities.cpp. (Removed unneeded ; character) contributed by @mgeorg\n\n#9669 - [Viewer] Error message when click on pause in 3D Viewer** (DSO-17558)\n\n#9666 - [Viewer] Flash screen hourglass show a palm (hand) icon. (LRS-177)\n\n#9656 - [Android]] Controls option not begins with capital letter Changes: Minor fix controls option not begins with capital letter (DSO-15651)\n\n#9665 - [Tools] Update tool dfu alert\n\nCapitalize messages\n\nShow list of devices without any command-line arguments\n\nIf device is in recovery mode, give proper message (LRS-33)\n\n#9562 - [Viewer] Correct get_folder_path behavior.\n\nFor documents folder use SHGetFolderPath instead of SHGetKnownFolderPath because SHGetKnownFolderPath doesn't give the path to OneDrive documents folder but to the local documents folder. (LRS-229)\n\n#9602 - [Android] - Fix resource issue handling issue.\n\nThis is part b fix to additional issues found when switching between 2d and 3d. Changes:\n\nrelease frame resources when switching between 2d and 3d\n\nhandle cases when only depth, no rgb, is part of the stream\n\nhandle cases when no depth is part of the stream (DSO-16584)\n\n#9011 - [Python] Fix software device in Python wrapper.\n\nfix matcher for Python wrapper. contributed by @mengyui\n\n#9616 - [Core] Fix Stepping Forward / Backwards with playback device. (DSO-17562)\n\n#9593 - [Core] Syncer fix for not releasing frames with inactive stream.\n\nThe syncer was comparing to the wrong timestamp.\n\nReduce the threshold used to detect inactive streams (10 -> 7 gaps), which can also reduce ability to handle big latency. But it's more important to reduce change of reaching the current queue limit of 10 frames.\n\nUnit-test that shows this is WIP, to follow in another PR. (LRS-275)\n\n#9599 - [Viewer] Closing the viewer app while in playback mode causes seg fault.\n\nlive tests crash fix + dispatcher flush() fix** (Includes changes from PR #9570. (LRS-265)\n\n#9595 - [Core] Enable Global_timestamp domain with ARM architecture for Raspberry PI.\n\nRevert patch of commit e992be3b84f164e0e917f6fa0adad9f50e0. Address issue in [librealsense-ros#1906](https://github.com/IntelRealSense/realsense-ros/issues/1906) (DSO-17352)\n\n#9518 - [Android] Sensor callback improvement. (DSO-17538)\n\n#9575 - [Viewer] - Alert user on recovery device bundled update\n\nExpose PID for recovery device\n\nAdd notification for recovery device update. (DSO-17527)\n\n#9559 - [Android] device watcher add is stopped** (LRS-257)\n\n#9498 - [D400] HDR merge - discarding merged frame on resume. (DSO-17341)\n\n#9553 - [Core] Remove circular shared_ptr dependency in Pointcloud class.\n\nHandle memory leak in PointCloud processing block\n\nAddresses a long-standing issue #2860. (DSO-13695)\n\n#9540 - [Core] Update LZ4 compression utility to version 1.9.3**\n\n(Benchmark results of compress + write RGB 1280x720 frame (frame only no additional data)\n\nTested on Windows 10. Laptop HP Elitebook 850 G6\n\n1.8.0 benchmark results: AVG time: 53 [ms], Min time: 40 [ms], Max time: 67 [ms]\n\n1.9.3 benchmark results: AVG time: 23 [ms], Min time: 19 [ms], Max time: 39 [ms]\n\nPerformance improvement of :~ 50% (LRS-34)\n\n#9253 - [MacOS] Fix build on macOS arm64.\n\nThis fixes the build on macOS running on Apple Silicon (arm64). contributed by @prusnak\n\n#9496 - [Android] Java example adjusted to Android X** (LRS-249)\n\n#9525 - [Python] receiver sensitivity option added to python wrapper** (LRS-258)\n\n#9514 - [Android] Memory leak fix. Release point cloud resources when clearing the rendering surface. (DSO-16584)\n\n#9503 - [Core] Fix for device_watcher class.\n\nstart it on register_internal_device_callback** (Device_hub API registers for events using register_internal_device_callback but this didn't start the device-watcher... we weren't getting device change notifications. (DSO-11850).\n\n#9502 - [Core] Add missing DS error codes. (DSO-16036)\n\n#9522 - [Core] Protect playback sensor call to user callback (LRS-255)\n\n#9509 - [Viewer] FW Update via popup fix. (LRS-250)\n\n#9497 - [Core] Fix zero depth for SR300.\n\nAdd UT for depth units from metadata. (LRS-248)\n\n#9491 - [Viewer] - Handle crash with L515 with USB2. Fixes issue introduced in #9382 (LRS-243).\n\n#9490 - **[Viewer] Fix pointcloud for L515\n\nRectifies improver assignment of depth_units. Addresses #9154. (LRS-240)\n\n#9486 - [Core] GCC 7.5 fixes.\n\nAdd explicit #include reference\n\nRemove warning - drop unnecessary struct in signature.\n\n#9482 - [CUDA] Fix building with CUDA accelerators.\n\nHot-fix to propagate depth-units refactoring into CUDA-enabled build. Rectifies #9154\n\n#9633 - [Jetson] Fix doc-jetson-installation.\n\nThis PR fixes the installation for jetson, which is currently broken for the second part. It also has some minor editorial changes to enhance readability.) contributed by @tkazik.\n\n#9849 - [Core] Update installation readme for libudev + add ROS dependency** (LRS-315)\n\n#9834 - [Jetson] Update installation_jetson.md. Fix markdown grammar error. contributed by @Sn-Kinos\n\n#9781 - [Python] Update python wrapper docs Add a note about building pyrealsense from source as a self-contained library (#9760) (LRS-293)\n\n#9719 - [Jetson] Update installation_jetson.md. Contributed by @DestinyOne\n\n#9577 - [Core] Document LRS Viewer version update notifications flow** (LRS-268)\n\n#9547 - [Demo] Fix record and playback readme link** (LRS-218)\n\n#9235 - [MacOS] Update out-of-date brew command in macOS guide. contributed by @zgotsch\n\n#9499 - [Core] Merge record and playback readme files. (LRS-218)\n\nRelease Date: 10th Aug 2021\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2490\n\n#8925 - [D400] Fw version 5.12.15.50.\n\nFixes and stability improvements\n\n#9273 - Wrappers Support OpenVino 2021\n\nAdd support for OpenVino 2020 and 2021.(LRS-71)\n\n#9509 - [Tools] Viewer - fw update via popup fixed. (LRS-250)\n\n#9497 - [Core] Fix SR300 - Depth-units control propagation. (LRS-248)\n\n#9491 - [Core] Fix L515 - Depth-units control propagation. (LRS-243)\n\n#9490 - [Core] Fix L515 - Pointcloud generation. (LRS-240)\n\n#9486 - [Core] Fix Linux compilation with GCC v7.5.\n\n#9482 - [Core] Fix CUDA implementation for Pointcloud.\n\n#9435 - [C#] Restructure tutorials & add load-json\n\nRebase of #8653. (LRS-59)\n\n#9470 - [Core] json preset files format update. (LRS-206)\n\n#9467 - [Core] Adjust cmake target for Presets.\n\nThe presets will be deployed in $ENV{HOME}/Documents/librealsense2/presets (LRS-215)\n\n#9465 - [Core] Update preset json format + Add device info Change preset json format to SCHEMA_VERSION = 1\n\nReading backward compatible - old style (flat) preset json files is supported. (LRS-210)\n\n#9458 - [Core] Create .preset files for planned presets.\n\nAdded json files:\n\nMax Range With Binning.preset\n\nMax Range.preset\n\nMedium Range.preset\n\nMin Range.preset.\n\n(LRS-206)\n\n#9382 - [Core] 0x0B5B to support OEM Cal resolutions Allow streaming non-native resolutions simultaneously. (DSO-17425)\n\n#9441 - **[L515] Add RS2_OPTION_RECEIVER_SENSITIVITY control Integrate into Core and wrappers. (RS5-11828)\n\n#9271 - [Tools] Enhance rs-terminal with files input Pass binary blobs from ANSI files. (DSO-17305)\n\n#9416 - [Core] Remove unused member satisfied_streams input removed from map_sub_device method(... (LRS-212)\n\n#9414 - [CI] Build CI: re-enable Node.js job\n\nFix errors from esling and cpplint\n\nAdded enum checks after linter\n\nChanged folder for npm install (LRS-203) contributed by @whsol\n\n#9321 - [Linux] Clone only the files of the tag for Tegra.\n\nCloning the Tegra kernel sources repository was taking so much time. It couldn't complete even once on my device. With this change*, it only retrieves the tagged version of the repository. The whole process can complete in less than 5 minutes. Refers to https://stackoverflow.com/questions/20280726/how-to-git-clone-a-specific-tag contributed by @rszengin\n\n#9431 - [Android] FW names convention update L5xx -> L51x & L53x Follows on #9264Fixes Jenkins CI nightly. (LRS-214)\n\n#9264 - L5XX FW bundling\n\nChange L5XX_FW_Image to L51X_FW_Image\n\nAdded support for L53X FW bundling.\n\nAdded recommended_fw_version for L5XX. (RS5-11533)\n\n#9415 - [Core] Add parser for Y411 packed format Includes #9065 and #9380 (LRS-29)\n\n#9396 - [L53X] Added min-max fw_version check\n\n(LRS-143)\n\n#9380 - [Core] Tunnel Y411 format as NV12; OpenGL processing** (LRS-29)\n\n#9394 - [Core] Fix playback deadlock on live tests (Git Actions CI fail)\n\nBring back playback sensor flush on end-of-file or else last frames may get lost.\n\nMove sensor stop outside of mutex lock.\n\nFix 2 unit-tests that did not stop & close the sensors.\n\n(LRS-190)\n\n#9379 - [Core] Drop static from function signature Follow up on #9096. Addresses #6055. (DSO-17046)\n\n#9352 - [Android] Sensor API getProfile added, sensor example using it (LRS-182)\n\n#8873 - [Wrappers] Add lrs-net viewer for Python (LRS-174)\n\n#9339 - [Viewer] Add support for recovery device in online update flow\n\nAdd recovery device support\n\nFix misaligned UI\n\nRemove \"Update URL\" button from settings (LRS-64)\n\n#9256 - [C#] Add D400 Calibration APIs extensions. (LRS-74/LRS-75/DSO-16811)\n\nFollow up on @DenisGeek's work in #8773\n\n#9320 - [Android] API fixes\n\nopenSensor with multiple profiles API added (LRS-132) Using Sensor example, we get both depth and infrared profiles from the depth sensor.\n\n#9285 - [Demos] Connect to rs-server and render frames by means of GPU\n\nThis sample demonstrates how to connect to remote rs-server over the network and to utilize the GPU for processing of depth frames received from remote camera. This sample is based on rs-gl sample and appears when generating solution by cmake with BUILD_GRAPHICAL_EXAMPLE , BUILD_GLSL_EXTENSIONS and BUILD_NETWORK_DEVICE flags is ON)\n\n#9065 - [Core] Support for Y411 format (Reopened #8871 Native & SSE support included. (RS5-10803)\n\n#9301 - [Tools] viewer - add informative tooltip message ...when Measure is disabled (DSO-17011)\n\n#9300 - [Core] Depth Units refactoring fix Fix correct depth units extraction from ROSbag records (lRS-140)\n\n#9309 - [Core] Syncer mutex to fix single_consumer_queue::peek() issues And revised peek() mechanism, too... (LRS-162)\n\n#9261 - [L515] Set all the values of amc controls on start up. (Fixes RS5-11488)\n\n#9299 - [Core] Fix playback crash in Dtor (LRS-135)\n\n#9254 - [L515] Control Vertical binning.\n\nAdded RS2_OPTION_VERTICAL_BINNING option - Enables vertical binning which increases the maximal sensed distance.\n\nAdded support on wrappers (RS5-11533)\n\n#9276 - [Wrappers] include USB info on pyrs device repr()\n\nExport data in the following format <pyrealsense2.device: Intel RealSense L515 (S/N: f9440703 FW: 01.05.05.00 UNLOCKED on USB3.2)>\n\n(LRS-129)\n\n#9274 - [Tools] Rosbag-Inspector fix.\n\nAddresses issue introduced with #9154\n\n#9258 - [Core] Handle Dispatcher exception + high CPU usage fix** (Continuation of #9219. (LRS-125)\n\n#9154 - [Core] Add Depth Units value to frame metadata (DSO-16066)\n\n#9255 - [Core] D4xx Default preset with sub-millimetric units (DSO-17316)\n\n#9240 - [Core] change default resolutions for 0xB5B SKU** (LRS-81)\n\n#9228 - [Viewer] FW build version is not properly displayed Fixed regex that parses the version (DSO-17194)\n\n#9238 - [Viewer] - depth units changing fix (LRS-124)\n\n#9230 - [D400] Advanced controls have no min/max (DSO-17312)\n\n#9213 - [Viewer] - Fix decimal point display\n\n#9221 - [Core] Memory leak in IMU/Win Addresses #8091 (DSO-17238, DSO-17239)\n\n#9225 - [Tools] DQT - Fix IR reflectivity display Fix issue created on #9061 (LRS-117)\n\n#9222 - [Tools] Viewer syncer loop correction Switching to IR in 3D texture source froze the view. The render_loop() depends only on synchronization_enable but sometimes we bypass it and so it cannot get the frames... (LRS-116)\n\n#9223 - [Tools] DQT - do not set sensor mode while streaming Caused by #9081. (LRS-115)\n\n#9209 - [Core] fix CppCheck warning in string-utilities.h\n\n#9345 - [MacOS] Update vulkan brew install instructions brew cask install has been superseded by brew install --cask\n\nIf you use brew cask install, you will be greeted with Error: Unknown command: cask. contributed by @alkasm\n\n#9436 - [MacOS] Update installation_osx.md Homebrew doesn't use \"cask\" anymore. IF you try this build process you get this error error: Unknown command: cask I've updated the doc to use the new way of doing things. (Basically just trash the cask part of the install) Ive tested this works.) contributed by @martystack\n\n#9433 - [Debians] Update PPA public server key repo Fix PPA public key registration for X86 and Jetsons due to the deprecation of keys.gnu.net. Uses the alternative server mentioned in #9289 by @hanzheteng. (LRS-204)\n\n#9412 - [Arch] Add librealsense2 playback readme file.\n\n#2860 - Memory-leak in Pointcloud processing block.\n\n#3433 - Valgrind: Conditional jump or move depends on uninitialized variable. (DSO-13700)\n\n#4261 - [T265] Add ability to open multiple devices from different processes.\n\n#4518 – [T265] Pose data produces NaNs. Can still occur in some cases. If detected, please attempt to make a raw data (images + IMU) recording using the recorder tool, and attach a link to it in the github issue, to assist our resolution.\n\n#6009 v2.33.1 does not compile with -DBUILDEASYLOGGINGPP=OFF\n\n[T265][Mac] - Start after stop is not working on Mac with the T265 camera\n\n(DSO-13525) - [D400] 3D viewer moved when sliding the tare calibration sliders\n\nRelease Date: 29th June 2021\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2480\n\n#8905 - Android - Support Sensor API for streaming\n\nAdd sensor open/close/start/stop with callbacks\n\nAdd callbacks to pipeline API with default and custom configurations\n\nDemo apps to use the new APIs\n\nImpact to existing API (these are bugs in current implementation and the change should not impact existing apps):\n\nExtend Java class FrameSet from Frame so the frame from pipeline callback can be cast to a set of frames.\n\nAdd deleter to Java Sensor API with content from old close.\n\n(DSO-16739, DSO-16740)\n\n#8860 - [C#] Example for Pose type stream for T265 device\n\n#9219,#9159,#9210 - [Core] Concurrency & Syncer rework Following the deadlock that Nir experienced, reworked some stuff (and not all because of the deadlock:\n\nsplit off dispatcher code into dispatcher.cpp\n\nsyncer (timestamp) inactive stream handling moved into skip_missing_stream\n\nsyncer identity_matcher names now include the stream index\n\nsingle_consumer_queue::_mutex is now mutable; size() and empty() const\n\nrevised logic inside single_consumer_queue\n\nrevised logic inside dispatcher\n\ncancellable_time::try_sleep() is now templated, requires actual chrono duration (and not just its ::Rep)\n\nsyncer stop() calls now percolate recursively to shut down all queues; new syncs do nothing if syncer was stopped\n\nadd actual matchers to playback device\n\nlive-test issues with playback\n\nadded !mayfail to frame-number syncing test for stability\n\nadded waiting_on<> in utilities/time/waiting-on.h, with unit-test\n\nrework dispatcher::flush()\n\nDSO-16888\n\n#9221 - [Core] Fix Memory leak on IMU sensor query (DSO-17238, DSO-17239 )\n\n#9210 - [Core] Fix Composite frame with playback device Add actual matchers to playback device\n\nlive-test issues with playback\n\nadded !mayfail to frame-number syncing test for stability\n\nadded waiting_on<> in utilities/time/waiting-on.h, with unit-test\n\nrework dispatcher::flush()\n\nDSO-16888\n\n#9188 - [Python] box_dimensioner_multicam_demo error fix for L515 (RS5-11319)\n\n#8156 - [Examples] Recording Bag file under \"Program Files\".\n\nNow it attemts to write to temp folder first\n\n#9207 - [Viewer] Fix crash when opening 'Stereo Module' of a playback\n\n#8884 - [Examples] Connect to rs-server and draw frames by means of GPU\n\nThis sample demonstrates how to connect to remote rs-server over the network and to utilize the GPU for processing of depth frames received from remote camera. This sample is based on rs-gl sample and appears when generating solution by cmake with BUILD_GRAPHICAL_EXAMPLES and BUILD_GLSL_EXTENSIONS flags is ON.\n\n#9185 - [L515] FW version compatibility fix\n\nL515 FW version prerequisites must be defined with min/max range to avoid cross-product versions reference. Can be seen as a temporal solution since FW versions may overlap eventually. Update L515 minimal downgradeable version to 1.5.1.3 instead of 1.4.1.0.\n\n(RS5-11513), (DSO-16641)\n\n#9183 - [Core] Increase the syncer queue on model-views.h to avoid frame drops.\n\nThis queue stores the output from the syncer, and has to be large enough to deal with slowdowns on the processing / rendering threads of the Viewer, to avoid frame drops. The problem here wasn't slowdowns of the other thread -- it was bust output from the syncer, too fast for any other thread to deal with and causing drops. The bursts are caused by latency introduced on the USB/FW side when different streams have different FPS.\n\n(DSO-16419)\n\n#9145 - [Core] 0x0B5B SKU to display in cm** (DSO-17052)\n\n#9081 - [L515] Make sensor-mode r/o during streaming (LRS-7)\n\n#9153 - [Core] 0x0B5B SKU Fix Color stream calibration retrieval (DSO-17104)\n\n#9132 - [Core] 0x0B5B SKU remove intercam sync support (DSO-17061)\n\n#8674 - [Core] Fix Extrinsic map build algorithm (DSO-16814)\n\n#9061 - [Viewer] Fix ROI display rectangle selection (DSO-16748)\n\n#2860 - Memory-leak in Pointcloud processing block.\n\n#3433 - Valgrind: Conditional jump or move depends on uninitialized variable. (DSO-13700)\n\n#4261 - [T265] Add ability to open multiple devices from different processes.\n\n#4518 – [T265] Pose data produces NaNs. Can still occur in some cases. If detected, please attempt to make a raw data (images + IMU) recording using the recorder tool, and attach a link to it in the github issue, to assist our resolution.\n\n#6009 v2.33.1 does not compile with -DBUILDEASYLOGGINGPP=OFF\n\n[T265][Mac] - Start after stop is not working on Mac with the T265 camera\n\n(DSO-13525) - [D400] 3D viewer moved when sliding the tare calibration sliders\n\nRelease Date: 6th June 2021\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2470\n\n#9167 - [L515] FW version 1.5.8.1\n\n#9165 - [D4xx] FW version 5.12.14.50\n\nDisparity Modulation enhancements (DSO-17067)\n\nHandle pattern under strong light in Slave mode. (DSO-17022).\n\nFixes and stability improvements\n\n#8948 - [Core] Firmware Compatibility check as part of Firmware Update\n\nCheck and verify the FW image prior to the firmware update to prevent loss of functionality and/or physical damage to the device. (DSO-16958)\n\n#8977,#8906 - [Tools] rs-convert enhancements.\n\nSupport IMU and Pose serialization into csv format (DSO-16987).\n\nSupport for Ubuntu20/Kernel 5.8 DKMS package (v1.3.18)\n\n#9060 - [Linux] Memory leak with option query\n\n#9008 - [Viewer] Online updates\n\nAdd up to date notification\n\nReset notification delays when user click on check for updates (RS5-11310)\n\n#9051 - [Viewer] No 3D image on playback\n\nPoint cloud frames are ignored during playback / DQT 3D streaming The fix allows the Point cloud frames to be uploaded to the rendering window (RS5-11334)\n\n#8967 - [Viewer] Software Update enhancements (DSO-16893)\n\n#9019 - [D4xx] Remove IR pattern for relevant devices (DSO-17102)\n\n#9017 - [D4xx] Remove emitter-on-off support from 0x0B5B (DSO-17048)\n\n#9041 - [SR300] Support for alternative 0x0AA2 PID (DSO-17101)\n\n#9034 - [L515] HWM_OVER_XU logic rework\n\n#8804 - [Core] Validate Range on controls change (DSO-13749)\n\n#8875 - [Linux/v4l] Memory leak test sensor option.\n\nAdd test for memory issue using valgrind and a fix.(DSO-16885)\n\n#9035 - [3rd party] change libjpeg-turbo branch to 'main' master... branch was renamed to main (cherry picked from commit 9d58316dba78e93ad89aeeace5670c915be2435e))\n\n#9021 - [Unity] Modified editor script for Unity on Linux\n\nChanged BuildAllAssetBundles method for use in Unity on Linux\n\n#8876 - [SR300] Fix SR3xx firmware image size and recovery checks.\n\nAdjust recognized FW sizes for SR3xx.\n\nModify SR3xx recovery device condition for Win10 build 1909. (DSO-16985)\n\n#8749 - [SR300] Enabling LRS examples/tutorials on SR306 (DSO-16721)\n\n#9003 - [L515] Add Transmitter Frequency control Enable receiver sensitivity according to ambient light, bounded by the Receiver Gain control.\n\nFix removal of Max Useful Range and IR Reflectivity. (RS5-11278)\n\n#8921 - [L515] Metadata display negative brightness and hue (DSO-14036)\n\n#8952 - [L5xx] Support for new options.\n\nCreate 0x0b68 hw_options class for options.\n\nRemove option RS2_OPTION_DIGITAL_GAIN not applicable for 0x0b68 .\n\nAdd option RS2_OPTION_RX_SENSITIVITY.\n\nRemove all preset values (except custom) for now - until we will have declaration of presets for 0x0b68.\n\nRemove options RS2_OPTION_ENABLE_MAX_USABLE_RANGE and RS2_OPTION_ENABLE_IR_REFLECTIVITY - for now until we will have declaration of them for 0x0b68.\n\n#8979 - [L515] Remove AC.\n\nBackwards-compatibility is maintained at the level of the C runtime, but not the wrappers or C/C++ compilations: rs2_cah_trigger, for example, was removed -- code using it will not compile. Likewise, the options for TRIGGER and RESET are still there, but nothing supports them and so they have been removed from most wrappers. Interfaces like calibrated_sensor are still there, but no longer in use.\n\n#8896 - [CUDA] Fix unpack from sr300 CUDA implementation\n\nThis PR fixes a bug with incorrect depth image on the SR300 series cameras when librealsense is built with CUDA. Addresses #8897]. The functions unpack_z16_y8_from_sr300_inzi and unpack_z16_y16_from_sr300_inzi use the source data pointer (in) - the first half of the data is bit-shifted and stored in dest[1], the second half is directly copied to dest[0].\n\nIn the CPU version, the pointer is moved in a loop and after its execution it points to in + count - so the copying works as it should.\n\nIn the CUDA version, the pointer is never moved, so bad data is copied to dest[0], resulting in an incorrect depth image.\n\nSimply moving the pointer to the right place fixes the problem. ) contributed by @andrusza2\n\n#8910 - [Core] Signed Firmware image check before updating.\n\nThrow a informative exception message when trying to update signed firmware image if its corrupted or unsupported by the specific device. (DSO-16641)\n\n#8946 - [D4xx] Depth Units default value added (DSO-16963)\n\n#8950 - [D4xx] Fix preset setting when not streaming (DSO-15585)\n\n#8913 - [Core] Replace GVD queries with device update notification ..to verify device removal during DFU.\n\nAdd a ~6 seconds maximum loop to verify the device is disconnected after the DFU command (replacing HWM calls) This partly reverts PR #8018 which caused freezes after DFUs. (RS5-11058)\n\n#8920 - [CMake] Flag to control AVX for OpenVINO\n\nAdd LRS CMake flag BUILD_WITH_CPU_EXTENSIONS [default=ON]. Will affect LRS use of CPU extensions in the future.\n\nIf BUILD_WITH_CPU_EXTENSIONS == OFF => disable AVX support for OpenVINO.\n\n#8912 - [Viewer] SW update - support 3-field version.\n\nDB file parsing will now support 3 fields version (as release versions are represented). i.e \"version\": \"1.5.4\".\n\nBefore the fix the regex supported 3 fields only with an ending period. i.e. \"version: 1.5.4.\"\n\n#8867 - [Viewer] Stop FW logs with button (DSO-16977)\n\n#8903 - [Viewer] crash when close app (RS5-10427)\n\n#8869 - [Python] Add GIL release to enter_update_state() function enter_update_state() can take ~2.5 seconds and need to release the GIL for other function to get CPU time\n\n#8820 - [Core] Protect illegal access on types.h floats** (Fix CppCheck warning on types.h i.e: src\\types.h:585:24: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex] return (&x)[i];)\n\n#8861 - [Android] Android Camera app - Update settings UI to ExpandableListView Fix an issue where not all settings items are accessible at landscape view (RS5-8610)\n\n#8821 - [Core] Realsense2 warnings fixed.\n\n#8856 - [Viewer] Fixed frameset handling on viewer Open the frameset on viewer_model::handle_ready_frames and save the frames on last_frames, so if one of the frames missing we will take the last frame saved. (DSO-16419)\n\n#8525 - [ImGui] Clamp slider rounding operations to keep ranged values\n\nImGUI floating point interpolations and rounding operations do not ensure min/max range on results. The PR fixes it to avoid overriding user-defined min/max slider boundaries. (DSO-15067)\n\n#8805 - [Core] Fix warnings in sensor.cpp.\n\n#8822 - [CMake] Make BUILD_GRAPHICAL_EXAMPLES depend on BUILD_EXAMPLES\n\n#8817 - [Viewer] Increase updates windows stability on multiple updates (Changes:\n\nFix Download & Install button missing on multiple update processes (DSO-16891)\n\nUse typedef to version to info map\n\nInhibit updates popup when updates windows is on - even when only recommended available (Can occur after updating essential update)\n\nBreak \"check_for_updates\" to several functions for simplicity.\n\n#8802 - [CMake] Add BUILD_TOOLS flag to CMake\n\nBUILD_TOOLS is ON by default! NOTE: this may break some builds that have disabled BUILD_EXAMPLES (therefore tools weren't built) but that will now automatically get BUILD_TOOLS so their tools will build (perhaps with errors).\n\n#8816 - [Viewer] Inhibit checking for updates on playback device (Part of RS5-8604)\n\n#8811 - [DQT] Remove online updates\n\n#8807 - [Viewer] Recommended update pop up hot fix.\n\nDisplay updates window only on essential updates.\n\nIf no essential updates, recommended updates will show as a pop up.\n\nThe fix adds a version check for getting the SW/FW updates.\n\n#8986 - Update post-processing-filters.md.\n\nI am not sure if it was supposed to be dec_filter or decimation_filter (same for spatial_filter) contributed by @c-flew\n\n#8935 - No more distinction for different Ubuntu required (=> Use bash for codename) contributed by @tkazik\n\n#2860 - Memory-leak in Pointcloud processing block.\n\n#3433 - Valgrind: Conditional jump or move depends on uninitialized variable. (DSO-13700)\n\n#4261 - [T265] Add ability to open multiple devices from different processes.\n\n#4518 – [T265] Pose data produces NaNs. Can still occur in some cases. If detected, please attempt to make a raw data (images + IMU) recording using the recorder tool, and attach a link to it in the github issue, to assist our resolution.\n\n#6009 v2.33.1 does not compile with -DBUILDEASYLOGGINGPP=OFF\n\n[T265][Mac] - Start after stop is not working on Mac with the T265 camera\n\n(DSO-13525) - [D400] 3D viewer moved when sliding the tare calibration sliders\n\nRelease Date: 2nd May 2021\n\nN/A\n\n#8672 - Add recommended on-line updates\n\nThe Viewer now checks (by default) online for SDK and/or FW recommended updates whenever a new device is detected (previously, it only checked for essential updates)\n\nThe \"Install Recommended Firmware\" button (press More next to your device) was replaced with \"Check For Updates\", which will also look online\n\nIf an update is available, a notification will be displayed (same as before)\n\nNOTE: If the notification was previously dismissed, it may not show up! To reset this, go into settings and, under the General tab, \"Restore Defaults\"\n\n#8925 - [D400] Fw version 5.12.13.50 Fixes and stability improvements\n\n#8790 - [D400] Make intercam_sync option read-only while streaming (DSO-16833)\n\n#8791 - [L515] Brown-Conrady forward/backward distortion, deproject impl (GitHub #7335) (RS5-9995)\n\n#8759 - [Core] Implementation of Brown-Conrady model on SSE , CUDA and GLSL\n\nImplementation of Brown-Conrady transformation on deproject_pixel_to_point_cuda().\n\nFix of Inverse-Brown-Conrady transformation on deproject_pixel_to_point_cuda().\n\nImplementation of Brown-Conrady transformation on get_texture_map_sse().\n\nAdded unit tests for sse code (Inverse and Forward Brown-Conrady)..\n\nAdded unit tests for cuda code (Inverse and Forward Brown-Conrady).\n\nImplementation of Brown-Conrady transformation on GLSL.\n\n#8784 - [Core] Allow physical port retrieval from recovery devices\n\n#8787 - [Linux] Kernel patches for LTS 5.8 and SKU 0x0aa3 and 0x0b68\n\nAdd support for Ubuntu focal/5.8 kernel.\n\nRegister PIDs for metadata support.\n\nApply to LTS kernel patches 4.4-5.4.\n\nFix kernel application for bionic legacy 5.0/5.3.\n\nApply Tegra patches for 32.2.3 and 32.5.1 releases.\n\nMinor refactoring and improvements in manual patching flow.\n\n(DSO-16720, RS5-10737)\n\n#8536 - [Viewer] Adjust error report for out of boundary in viewer (DSO-13749)\n\n#8606 - [Core] SKU 0x0B5B - fine tunings in viewer (DSO-16440)\n\n#8775 - [Windows] Catch exception on shutdown, release resources (DSO-15821)\n\n#8713 - [SR300] Adding SR300 derivative into SDK core\n\nThe following tools are functioning in SR300-like device :\n\nrs-enumerate-devices\n\nRealsense-viewer streaming\n\nRealsense-viewer controls\n\n(DSO-16719)\n\n#8777 - [Python] update examples to python 3\n\nTests work using python 3 (does not include: box_dimensioner_multicam, ethernet_client_server, t265_wheel_odometry).\n\n(RS5-10433)\n\n#8709 - [D400] Added genlock features to extend the option RS2_OPTION_INTER_CAM_SYNC\n\nReplacing old pull request #8584 for adding genlock features to extend the option RS2_OPTION_INTER_CAM_SYN_MODE.\n\n(DSO-16833)\n\n#8751 - [LRS-Net] Fix connecting to network device with realsense-viewer\n\nThere was changes introduced in Feb 15 in model-views.cpp that breaks connections to network devices from realsense-viewer. This PR fixes this. Addresses #8675\n\n#8748 - [Viewer] Resize drop-down box size to fit the text (DSO-12348)\n\n#8724 - [Viewer] Updated OCC part of the RS Viewer (DSO-16841.)\n\n#8690 - [Core] Fix LibRS compilation with ELPP disabled (RS5-10758)\n\n#8696 - [CI] Travis-CI - update OSX image + decrease builds runtime (Travis-CI build fails when using MacOs < 10.13.\n\nUpdate xcode_image to 12.2 (latest)\n\nRemove CHECK_FOR_UPDATE flag for windows build to shorten build time\n\nRemove UT run on Windows first build\n\nRemove building UT on Linux build\n\n#8693 - [Viewer] Fix DQT + Viewer crash when minimized when running on Debug (When running on Debug configuration, minimizing the DQT / Viewer windows cause the application to crash. On this PR I add protection against illegal inputs to open-gl functions.\n\n(RS5-10796)\n\n#8768 - [D400] OCC Documentation Update\n\nReplaced one missing \"OCC All\" with \"OCC Extended\".\n\n(DSO-16841)\n\n#2860 - Memory-leak in Pointcloud processing block.\n\n#3433 - Valgrind: Conditional jump or move depends on uninitialized variable. (DSO-13700)\n\n#4261 - [T265] Add ability to open multiple devices from different processes.\n\n#4518 – [T265] Pose data produces NaNs. Can still occur in some cases. If detected, please attempt to make a raw data (images + IMU) recording using the recorder tool, and attach a link to it in the github issue, to assist our resolution.\n\n#6009 v2.33.1 does not compile with -DBUILDEASYLOGGINGPP=OFF\n\n[T265][Mac] - Start after stop is not working on Mac with the T265 camera\n\n(DSO-13525) - [D400] 3D viewer moved when sliding the tare calibration sliders\n\nRelease Date: 1st Apr 2021\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2440\n\n#8633 - [NodeJs] Support for NodeJs14.\n\nFix Nodejs14 cameras autoconfiguration new glfw\n\n#7997 - [D400] Added rs2_get_target_size_on_frame and updated python wrapper to use it.\n\nAPI rs2_get_target_size_on_frame is created and exposed in the Python wrapper.\n\n#8671 - [D400] Tare calibration fix\n\nFix issues in if statements (DSO-16782).\n\n#8519 - [D400] Auto Exposure Limit : range value setting limitation\n\nWhen setting Auto Exposure value outside the fixed limit, error will be printed to the log and AE value will remain as previous valid value (DSO-16596).\n\n#8428 - [C#] Fix colorizer/Software Object bundle\n\nAddresses #8407\n\n#8018 - [Core] FW update exception interception\n\nWhen FW update runs, the device disconnects when it switches to DFU. Exception is thrown when FW update calls query devices while device still connected (not switch to DFU already.\n\nIn this fix, after sending the command of switching device to DFU, I checked when device is disconnected then continue to next step of querying devices. (DSO-16069)\n\n#8489 - [Android] Redesigning presets activity to dialog\n\n(DSO-15649, DSO-15651)\n\n#8658 - [Core] Add FW version and locked status to device string (RS5-10771)\n\n#8561 - [T265] Fix for race condition during pipeline stop.\n\nThis PR is effectively the suggested fix in the GH issue below. Thank you @ankyur. https://github.com/IntelRealSense/librealsense/issues/7276 I've validated the fix works using the following code:\n\n// Reproduces T265 Hand on Exit. int main(int, char**) { constexpr std::chrono::seconds timeout{ 1 }; while (true) { // Start rs2::config config; rs2::pipeline pipeline; std::cout << \"Entering pipeline.start()\" << std::endl; pipeline.start(); std::cout << \"Exiting pipeline.start()\" << std::endl; std::cout << \"Sleeping for 1 second...\" << std::endl; std::this_thread::sleep_for(timeout); std::cout << \"Entering pipeline.stop()\" << std::endl; pipeline.stop(); std::cout << \"Exiting pipeline.stop()\" << std::endl; } return 0; }\n\nSuspect this fix potentially addresses the following open T265 issues as well: #7553, #5807, #6272, #7555, #7750\n\n#8594 - [Core] FW Update fortification\n\nAdding size check for signed & unsigned firmware (DSO-13524)\n\n#8624 - [D400] Baseline computing corrected (DSO-16780)\n\n#8623 - [D400] Checking supports API before calling get or set to emitter option** (DSO-16782)\n\n#8640 - [Core] Disable_stream() fix when running enable_all_streams() Fix disable_stream() to actually stopping disabled streams from arriving. Reported issue: #3919 (DSO-13705)\n\n#8625 - [Core] Fix deadlock on pipeline.stop() with playback device in non realtime\n\nAdd stop to syncer to avoid deadlock in case of blocking enqueue. (DSO-15157)\n\n#8593 - [L515] Keep USB power on when multiple HWM calls made.\n\nReduce L515 device creation and sensor open/start calls time by keeping the USB power on when multiple access are made. (RS5-8208)\n\n#7880 - [MATLAB] Use case extension draft\n\n#8600 - [NodeJs] Make RSPointCloud.mapTo compatible with `rs_processing.hpp map_to``\n\nRelated to #5057, #6223 RSPointCloud.mapTo should repeat same behavior as rs_processing.hpp map_to which was changed by commit, contributed by @whsol\n\n#8555 - C# tutorial 1 fixes\n\nExample fix: cs-tutorial-1-depth.\n\nChecked against cameras: D415, D435, SR300, L515 and USB2/USB3 .NET 4.8, dotnet 5.0, mono.\n\n#8559 - [C#] tutorial 2 fixes\n\nExample fix: cs-tutorial-2-capture.\n\nChecked against cameras: D415, D435, SR300, L515 and USB2/USB3 .NET 4.8, dotnet 5.0\n\n#8560 - [C#] Tutorial 3 fixes\n\nExample fix: cs-tutorial-3-processing.\n\nVerified for D415, D435, SR300, L515 and USB2/USB3 .NET 4.8, dotnet 5.0\n\n#8552 - C# tutorial 4 fixes Example fix: cs-tutorial-4-software-dev.\n\nVerified for D415, D435, SR300, L515 and USB2/USB3 .NET 4.8, dotnet 5.0.\n\n#8576 - [Python] Update pybind11 version to 2.6.2\n\nApply fixes for python 3.8 + 3.9 support, align to the latest version. (RS5-10670)\n\n#8575 - [Android] Fix record for Android 11 (DSO-16751)\n\n#8573 - [Core] Syncer to produce frameset (always)\n\nSolve the playback with syncer bug added on #8378 and pipeline with single stream bug. The old code expected syncer output to always be a frameset.\n\n#8574 - [Python] Fix auto calibration python example (DSO-16768)\n\n#8570 - [Python] Fix pyrealsense2 crash when importing other pybind11 created modules\n\nPybind's ABI is made up of compiler type among other things, but not compiler version -- so two modules with pybind compiled with VS 2019 and VS 2015 would generate the same ABI and pybind will try to share resources, crashing Python. (see https://github.com/pybind/pybind11/issues/2898). The change forces a unique ABI version to be created and loaded that won't be shared with pybind instances. (RS5-10582)\n\n#8553 - [Viewer] Depth color map ruler show wrong values\n\nFix Viewer depth units ruler's ranges on the right side (RS5-10658)\n\n#8613 - [HDR] link correction\n\nChanged Gif address to the Gif in the development branch instead of the previous (private github link))\n\n#2860 - Memory-leak in Pointcloud processing block.\n\n#3433 - Valgrind: Conditional jump or move depends on uninitialized variable. (DSO-13700)\n\n#4261 - [T265] Add ability to open multiple devices from different processes.\n\n#4518 – [T265] Pose data produces NaNs. Can still occur in some cases. If detected, please attempt to make a raw data (images + IMU) recording using the recorder tool, and attach a link to it in the github issue, to assist our resolution.\n\n#6009 v2.33.1 does not compile with -DBUILDEASYLOGGINGPP=OFF\n\n[T265][Mac] - Start after stop is not working on Mac with the T265 camera\n\n(DSO-13525) - [D400] 3D viewer moved when sliding the tare calibration sliders\n\nRelease Date: 21 Mar 2021\n\nThe Debian Distribution PPA is being transferred and redirected to use new URL with Secure Access - HTTPS instead of HTTP\n\nThe new addresses shall start with https://librealsense.intel.com\n\nThe users who use seamless Ubuntu update shall modify the server's list according to the updated documentation.\n\nRelates to #8414\n\nWith the release of Jetpack 4.4.1 support for RealSense Devices D415,D435(i) has been integrated into the L4T kernel, thus the owners/developers for that platform (Jetson AGX/Nano) that use those devices do not need to apply kernel patches anymore in order to receive the extended functionality and features, such as metadata.\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2430\n\n#8622 - [D400] Fw version v5.12.12.100\n\n#8605 - [L515] FW version 1.5.5.0\n\n#8405 - [Python] Generate wheels for Python 3.8 + 3.9 Package classifiers updated to support python 3.8 + 3.9 (DSO-16485)\n\n#8366 - [NVidia JetPack] Adding support for Jetpack 4.4.1+4.5 (32.4.4 + 32.5)\n\nManage separate kernel patches for formats and metadata since L4T 4.4.1\n\nModify script to avoid redundant patches that have been introduced inL4T 4.4.1\n\nRename 4.9 patches into 4.4/4.4.1 to follow the JetPack baseline version\n\nMinor adjustments to script to handle with Git/Kernel variants\n\nAddresses #8254 ) (DSO-16259)\n\n#8298 - [Android] Support for Android 11\n\nAdded changes needed by Android Studio and the gradle build system for supporting the latest version of the Android SDK (30). The changes were tested to be working on a Pixel device with Android version 11\n\n#8473 - [Core] Video profile eq (video_stream_profile class is missing operator== This cause 2 video_stream_profile objects to use the stream_profile::operator== instead which gives false results.\n\n(DSO-16565)\n\n#8524 - [Core] Fix include in src/sensor.h\n\n#8487 - [Unit-tests] FW update test\n\n#8518 - [Unit-tests] Negative number of assertions\n\n#8494 - [Unit-tests] Memory Leak test fix\n\nFixed internal unit test : \"Extrinsic memory leak detection\" Fix: accepting first arrived frame in each iteration regardless of its frame number (DSO-16625)\n\n#8495 - [Android] FW Update message correction\n\nAvoid suggesting the user to update the recommended fw if already there (DSO-15522)\n\n#8365 - [Core] Add support for SKU B5B (DSO-16440)\n\n#8490 - [Unit-tests] Misc run-unit-tests attempts at better stability Including work in set-options\n\n#8461 - [Core] Fix for IMU drops on playback\n\nAddresses issue #7908.\n\nAdding log for manitenance (DSO-12379)\n\n#8488 - [Windows] LRS examples from Windows installer does not build Split example.hpp ImGui related code into a new file example-imgui.hpp\n\nFix examples includes\n\nFix examples warnings (RS5-10360)\n\n#8463 - [3rd Party] Libcurl update - SSL support\n\nUpdate libcurl third-party to version 7.75\n\nBuild libcurl with SSL\n\nChange online versions DB link to https link (DSO-16463)\n\n#8056 - [L500] Add MUR and reflectivity unit tests\n\n(RS5-9400)\n\n#8462 - [Playback] Slider show milliseconds\n\n(DSO-12379)\n\n#8477 - [Unit-Tests] fixes Fix missing unit-tests test:device & better debug output\n\nAdd rspy.log.debug_indent()\n\nAdd rspy.test.print_separator()\n\nFix some weird behavior with rspy.log color output\n\n#8475 - [L500] Fixed AC-triggers test\n\n#8468 - [Unit-Tests] Added tag directive\n\n#8444 - [Unit-Tests] Fix run-unit-tests issue with finding acroname\n\n#8443 - [Unit-Tests] Added priority option to config\n\n#8440 - [Unit-Tests] Added configuration for c/cpp tests\n\n#7859 - [Unit-Tests] Added unit tests for hw-errors handling\n\nError handling sanity, in and out of streaming (RS5-9659)\n\n#8406 - [Unit-Tests] fixes run-unit-tests.py no longer requires pyrealsense2.pyd\n\n#8432 - [Core] Change to C style cast\n\nFixes #8431 contributed by @surban\n\n#8410 - [Core] Log to output file instead of console\n\nAdding option for printing the fw logs in an output file\n\n#8414 - [Linux Distribution] Update Repository Server URL\n\nReplacing URLs:\n\nrealsense-hw-public.s3.amazonaws.com\n\nrealsense-hw-publics3-eu-west-1.amazonaws.com\n\nwith librealsense.intel.com Installation tested on Ubuntu 16.04, 18.04, 20.04 (DSO-16482)\n\n#8420 - [L500] Update MUR limits and resolution\n\n(RS5-9580)\n\n#8378 - [Core] Syncer Fix\n\nFix syncer bug causing wrong frame order:\n\nFix l500 matcher hierarchy (remove timestamp_composite_matcher as root above device-generated matcher)\n\nAdd mutex to protect try_dequeue and calling to callback\n\nAdd log parameter to syncer (RS5-10200)\n\n#8403 - [Unit-Tests]\n\nFix small issues with devices.py\n\n#8387 - [Core] Use standard cast syntax to cast to float\n\nThis change was supposedly done to reduce / remove the number of warnings, but ended up breaking our Rust bindings to librealsense2 (bindgen is expecting an expression which isn't there). See our realsense-rust fork.\n\nIf you're looking for the specific error when building against the official 2.42 release.) contributed by @ThatGeoGuy\n\n#6653 - [Linux] add patch scripts for debian 10 and linux vanilla\n\nL515 working on Debian 10. contributed by @andrewhodel\n\n#7751 - [Unit-Tests]\n\nEncapsulate the content of internal-tests-linux.cpp with #ifdef __linux__\n\n#8380 - [Android] switch HTTP to HTTPS\n\n... in camera app gradle.build (DSO-16528)\n\n#8336 - [Unit-Tests] - HDR Move HDR tests from live tests to dedicated folder** (DSO-16532)\n\n#8370 - [Unit-Tests] Additional unit-testing fixes\n\n#8359 - [Unit-Tests]\n\nTest:device acroname control (for py only)\n\nSeparated log functionality into rspy.log module\n\nUse devices module from run-unit-tests.py\n\nChanged python subprocess invocation to sys.executable\n\nHWM cmd SET_AGE -> UNIT_AGE_SET, to fit XML\n\n#8328 - [Viewer] OpenVINO filter fix **\n\nDisable OpenVINO filter while streaming single frames (when IMU is ON) and returning it back when IMU is disabled\n\nEnable frameset streaming after IMU is disabled\n\nAddresses #8074 (DSO-15250)\n\n#8351 - [Python Examples] Adjust python examples to support L515 device (RS5-10333)\n\n#8338 - [L500] Mode check remove\n\nRemove the sensor mode check on start stream on custom: profile resolution now trumps sensor_mode\n\nAdded test to check it\n\n#8335 - [Core] Add const to a couple of HW monitor APIs\n\n#8331 - [Tenssor Flow] Rename camera_simulation.py to example5-denoised.py in part 5)\n\n#8304 - [D400] DFU updates Version 107 added, version 106 corrected (DSO-16507)\n\n#8285 - [Android] Fix Permisisons Camera permission skipped in OS versions < 8 (DSO-16060)\n\n#8282 - [3rd Party]Live555 version freeze\n\n#8297 - [Unit-Tests]\n\nFixed preset unit-test issues\n\n#8214 - [Unit-Tests]\n\nPipe unit test for first frame delay issue\n\nTested on D435i and L515, USB3 (DSO-16305)\n\n#8286 - [Doc] Add Android releases artifactory link (DSO-16496)\n\n(RS5-10755) - [Android] Significant slowness when working with Viewer App and L515\n\n(DSO-16751) - [Android] Apk record cannot work with Android 11\n\n#2860 - Memory-leak in Pointcloud processing block.\n\n#3433 - Valgrind: Conditional jump or move depends on uninitialized variable. (DSO-13700)\n\n#4261 - [T265] Add ability to open multiple devices from different processes.\n\n#4518 – [T265] Pose data produces NaNs. Can still occur in some cases. If detected, please attempt to make a raw data (images + IMU) recording using the recorder tool, and attach a link to it in the github issue, to assist our resolution.\n\n#6009 v2.33.1 does not compile with -DBUILDEASYLOGGINGPP=OFF\n\n[T265][Mac] - Start after stop is not working on Mac with the T265 camera\n\n(DSO-13525) - [D400] 3D viewer moved when sliding the tare calibration sliders\n\nRelease Date: 14 Feb 2021\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2420\n\nThe Android Distribution Center has been transferred from bintray.com to jfrog servers starting from Feb 1st. The previously available server is not accessible since Jan 24th. The official releases of the Android apk and Java library can be browsed with https://egiintel.jfrog.io/artifactory/librealsense/com/intel/realsense/librealsense\n\nSee #8280 for details.\n\nNote that the new server currently is hosting SDK releases v2.41.0+ only. Transfer of older releases is envisioned but not prioritized.\n\n#8350 - [L515] FW update v1.5.4.1 (RS5-10444)\n\n#8345 - [D400] FW update v5.12.11.0\n\nMax time limit for IR sensors (DSO-12884)\n\nCustomer enhancements (DSO-15098).\n\n#8036 - [UE] Unreal Engine wrapper is converted to UE4.26\n\nThis changes makes unrealengine4 wrapper to be build against Unreal Engine 4.26 and introduces some breaking changes for engines less than v4.26 according to a new UE API.\n\n#8281 - [API] Enable rolling log files\n\nContinues the work of @aseelegbaria (#8212 Log files can have a max size. upon reaching max size new file will be created and current file will be truncated.\n\n(RS5-9271)\n\n#8211,#8240 - [SDK] CMake Build transition to HTTPS\n\nLibrealsense Cmake Build requires downloading and bundling FW images from external server. Starting with v2.42.0 the actual downloads will be queried using Secure Access (https).\n\nThe new resource URLs are retrofitted into CMake and the source tree documentation.\n\n(DSO-16368, DSO-16444)\n\nFix FW download link url in Realsense-viewer (RS5-8513)\n\n#8220 - [D400] Auto-Exposure and Gain max limits for IR sensors.\n\nThe new APIs set the effective upper bound for Exposure and Gain values for Depth Auto-Exposure. This allows to control and limit the changes in FPS rate while enabling for AE auto-adjustments.\n\nRequires FW5.12.11.0 or later.\n\n#8029 - [MacOS] IMU data processing via HIDAPI on MacOS\n\nSupport of IMU accelerometer and Gyro data on MacOS.\n\ns_hid_device class was modified to receive the IMU data via HIDAPI library functions on Mac OS.\n\n(RS5-9285, RS5-8852, possibly RS5-9121) by @sokolov19830711\n\n#8063 - [Core] -Reset logger Stop and reset reset logger on demand to cope with huge log files. (RS5-9270)\n\n#8289 - **[DQT] Fix L515 handling in Custom Mode **\n\nIn custom mode we need to update the sensor with sensor mode before start.\n\n#8072 - [Unity] using SafeHandle in Context class\n\nContext class with CriticalFinalizerObject and CER implementation.\n\n(DSO-13740)\n\n#8002 - [L515] Remove default preset (RS5-8999)\n\nRemove default preset\n\non LRS start up we calculate if we are in one of the presets and if not we are on custom\n\nwhen loading old Json file if the preset is default the preset will be custom\n\nif user try to set preset default he will get an error.\n\nReading of defaults values\n\non new fw versions( >1.5.3.0) is by get_default command\n\non old fw versions its stay as it was - set_current -1 and than get_current gives the defaults values\n\nupdate defaults values of hw options on the following cases\n\non startup\n\nwhen changing resolution\n\nwhen changing gain\n\nFlow of set preset\n\nset gain according to preset\n\nread the default values\n\nset default values to currents\n\nset laser according to preset\n\nNOTE: When starting to stream, librealsense may raise an exception:\n\nsensor mode (VGA) with RS2_L500_VISUAL_PRESET_CUSTOM is incompatible with the requested profile resolution (XGA)\n\nThis is caused when the visual preset is CUSTOM and the value in RS2_OPTION_SENSOR_MODE does not match the resolution from the profile. Either make sure the preset is one of the predefined ones or set the SENSOR_MODE to match the profile. This exception has since been removed, see PR #8338.\n\n#8261 - [Android] Remove (L515) Confidence stream from settings (RS5-8989)\n\n#8262 - [L515] Deprecate Zero-Order option (RS5-10182)\n\n#8252 - [Core] Fix GCC 5 error/warnings in HDR demo\n\n#8234 - [Linux] Revert \"Switch v4l to use memory-mapped files instead of userptr.\"\n\nUse of mmap leads to sporadic segfault on stream close/frames release.\n\nSwitch back to user-allocated buffers for v4l data exchange.\n\nAddresses #8154.\n\n(DSO-16453)\n\n#8245 - [Live555] Fix build_with_network CMake option and other workarounds\n\nliveMedia update - liveMedia has been upgraded by live555 in 2021-jan-21. Available as an archive from server only.\n\nA workaround for wrong default value about RS2_OPTION_POWER_LINE_FREQUENCY.\n\nA workaround for bad parameter when create frame object in Y8 format with network mode.\n\nadd 'add_to' method for net_device in python wrapper.\n\n#8048 - [EasyLogging] - add asynchronous handling (Linux)\n\nHandling log messages asynchronously to reduce latencies.\n\n( DSO-16295)\n\n#8180 - [L515] Frames Filter unit-tests Check that IR frames do not arrive to the user callback if not specifically asked for.\n\n(RS5-10249)\n\n#8206 - [Viewer] Fix FW update exception showed after entering update state\n\nOn FW update window we see a recoverable exception string during the FW update process. This PR fixes this behaviour. Actions taken:\n\nAdd delay between sending the device command to enter update state and query devices (if we do it too fast we still get the device before it was able to disconnect)\n\nReplace FW update UI exception with log exception\n\n(RS5-7900)\n\n#8176 - [Python] Integrate pybind11 V2.6.1 + replace pybind11 files with clone action\n\nClone pybind11 instead of keeping pybind files inside librealsense2 repo\n\nUpdate pybind version 2.2.1 -> 2.6.1\n\n(RS5-9118)\n\n#8159 - [Examples] HDR demo overhaul\n\nReview and refactoring both in Documentation and in Code.\n\nHandle Mosaic View to present stacked frames.\n\nAdd HDR-specific controls\n\n#7661 - [L500] Age-update implemented for projection (The age is now updated in the DSM on setup. When AC is run the Age and last AC fields in DSM are updated, the fields that involve the MC are not changed.\n\n#8182 - Unit-tests fixes\n\nChange the default directory for test logs to build/unit-tests instead of build.\n\nRemove from the printing of the call stack when check fails the printing of the calls to the functions inside test.py\n\n#8142 - [Core] Memory Leaks fixes (Fixes some memory leaks:\n\nIn the Linux backend, the deleter of a std::unique_ptr didn't call delete;\n\nThe hdr_config type and its sensor were holding mutual shared pointers to each other, causing them to not be deleted;\n\nIn synthetic-stream.cpp, the on_set method is called on a ptr_option, which stores the function passed to that method. However, the lambda passed captures the shared pointer, giving another shared pointer loop.) contributed by @Rheel17\n\n#8066 - [Examples] - rs-kinfu Place OMP pragma before for statement in rs-kinfu app. Fixes #5776. Contributed by @PeterBowman\n\n#8084 - [Open3D] wrapper examples and tutorial\n\nThis PR adds a tutorial and some examples for using RealSense devices through the new Open3D wrapper. contributed by @ssheorey\n\n#8162 - [Unit-Tests] Add run-unit-tests delay after acroname reset; add --stdout, --asis\n\n#8145 - [Unit-Tests] - Acroname controls in unit-tests Disable unit-tests in Travis Linux static build -- the Python version there misbehaved with ModuleNotFoundError and it was to be removed eventually anyway.\n\n#8151 - [Core] fix realsense2-compression & realsense2-net plugin Follow up on #8141\n\n#8141 - [Core] amendments src removed from include directories of projects that do not need it.\n\n#8127 - [D400] Detect IMU type (BMI-085 or BMI-055) regardless of device type.\n\nThis PR allows the device to set the correct accel frame rate based on the IMU type, instead of the device type.\n\nRequires FW 05.12.10.0 or later.\n\nrs-imu-calibration.py was tested using this PR in Ubuntu 16.04.\n\n(DSO-16367)\n\n#8135 - [Unity] Add log creation Add a -logFile parameter to unity export package command for investigation failures\n\n#8105 - [Unit-Tests] updates (RS5-9997)\n\n#8133 - [Examples] Correcting compression labels in rosbag-inspector tool (Compression labels displayed in the tool are swapped) contributed by @matbb\n\n#8131 - [Python] python subprocess invocation using same python exe\n\n#8061 - [L515] IR Reflectivity - hide until value stabilized (RS5-9613)\n\n#8109 - [SDK] REmove redundant Include directories from CMake There was a misuse of the include_directories function where the first argument was a project name. This function should only get the wanted directories as parameters. (RS5-9747)\n\n#8087 - [L515] correct display of advanced controls + UI setting when switching devices\n\nFix querying advanced controls with the wrong sensor mode.\n\nFix restoring UI controls from different device (RS5-9466)\n\n#8073 - [Core] Retrofit changes from v2.41 into Development\n\n#8071 - [Core] Fix GCC 7.0 compilation error\n\n#8064 - [Unit-Tests] enhancements\n\nset-option unit-test fix & bug fix in test.info\n\nabort test in case of exception\n\n(RS5-9850)\n\n#7781 - [Examples] Wrap Viewer/DQT error pop up text The error pop up text on Viewer and DQT application is not wrapped, It use a ImGui::InputTextMultiline because the input text is dynamic. For static text we can use ImGui API - \"ImGui::PushTextWrapPos / ImGui::PopTextWrapPos \". (RS5-9465)\n\n#8050 - [L515] IR Reflectivity - move setting\n\nIR reflectivity option moved to configuration section at the DQT application.\n\n(RS5-9612)\n\n#8052 - [CI] Revert change on Linux parallel build\n\nTravis CI currently allow VM with 2 cores.\n\nUsing -j$(($(nproc)-1)) disabled the parallel build on Linux builds.This PR revert this change\n\n#8051 - [Unit-Tests] fix\n\nFix unit-test failure and add info for the test. (RS5-9850)\n\n#8023 - [PyBackend] fix\n\nDeadlock occurs when HID callback invokes from multi-threads\n\n#8041 - [Unit-Tests] - test.info (RS5-9754)\n\n#7895 - [Unit-Tests] serializable_device preset bug fix & unit-test\n\nAdded a test for serializable device json serialize and load Also changed load_json in l500-serializable so it works with the presets. (RS5-9630)\n\n#8016 - [Unit-Tests] Fixed test-FG - remove 1280x720 resolution\n\nRemove test \"streaming FG 1280x720\". FW support only 800x600 resolution on FG. (RS5-9894)\n\n#8000 - [Unit-Tests] frame drops after set_option Unit-tests to check if there is any frame drops after set_option in Windows and Linux. (RS5-9850)\n\n#8280 - [Android] repo updated in java_example and native_example (DSO-16496)\n\n#8238 - Tensorflow fix Fixed URL in part 3.\n\n#2860 - Memory-leak in Pointcloud processing block.\n\n#3433 - Valgrind: Conditional jump or move depends on uninitialized variable. (DSO-13700)\n\n#4261 - [T265] Add ability to open multiple devices from different processes.\n\n#4518 – [T265] Pose data produces NaNs. Can still occur in some cases. If detected, please attempt to make a raw data (images + IMU) recording using the recorder tool, and attach a link to it in the github issue, to assist our resolution.\n\n#6009 v2.33.1 does not compile with -DBUILDEASYLOGGINGPP=OFF\n\n[T265][Mac] - Start after stop is not working on Mac with the T265 camera\n\n(DSO-13525) - [D400] 3D viewer moved when sliding the tare calibration sliders\n\nRelease Date: 27 Dec 2020\n\nhttps://github.com/IntelRealSense/librealsense/wiki/API-Changes#version-2410\n\n#7802 - [D400] FW Update - 5.12.10.0\n\nBug fixes and improvements\n\n#7808 - [L515] FW Update - 1.5.3.0\n\nBug fixes\n\n#7851 - [OpenVINO] Compatibility to both 2019/2020 versions of the openVINO was added. Compatibility for 2019 and 2020 versions of the openVINO for the openVINO wrapper examles and realsense-viewer has been added. Addresses 6127.\n\n#7983 - [Linux] Kernel 5 improvements:\n\nChanges in v4l backend implementation applicable for Kernels 4.16+ only:\n\nv4l backend - use multiplexing to handle metadata and video payloads\n\nModify UVC_URBs from 5 to 16 to mitigate frame drops in uvcvideo\n\nMinor enhancement in manual patching script\n\nFrame drops unit-test refactoring\n\n#8005 - [Linux] Fix for video buffers guard\n\n#7993 - [Network Device] Update rs-server to the latest Live555.\n\n#7977 - [Android] Enabled advanced mode is not supported\n\nDisplay the advanced mode option only when it's actually supported. (RS5-8619)\n\n#7911 - [D400] Emitter On /Off and Emitter Always On enabling together avoided (DSO-16064)\n\n#7938 - [D400] On-Chip Calibration - Focal Length Enhancements\n\n#7915 - [D400] On-Chip Calibration support for csharp wrapper Add on-chip calibration call in csharp wrapper.) contributed by @mengyui\n\n#7535 - [D400] On-Chip Calibration - Focal Length calibration and merged Tare Ground Truth. Added on-chip focal length calibration and merged tare gr"
    }
}