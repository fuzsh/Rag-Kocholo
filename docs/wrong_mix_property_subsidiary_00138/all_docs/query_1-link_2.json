{
    "id": "wrong_mix_property_subsidiary_00138_1",
    "rank": 2,
    "data": {
        "url": "https://docs.oracle.com/cd/E41106_01/doc.621/e41392/pln_preparing.htm",
        "read_more_link": "",
        "language": "en",
        "title": "Preparing For MetaSolv Solution",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/cd/E41106_01/doc.621/e41392/img/pln_app_server.gif",
            "https://docs.oracle.com/cd/E41106_01/doc.621/e41392/img/pln_simple_config.gif",
            "https://docs.oracle.com/cd/E41106_01/doc.621/e41392/img/pln_citrix_config.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2014-07-03T01:25:19+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Some Helpful Terms\n\nThe following terms are used throughout this guide. They are basic terms necessary for the discussion of deploying an application intended for use over a network by many users.\n\nApplication server:\n\nIn a 3-tier client-server environment, the application server performs the business logic processing between the user's machine (first tier) and the database management system (third tier). A simple example is shown in Figure 1-1.\n\nOracle WebLogic Server is used to handle the interaction between the client, MetaSolv Solution, and the database.\n\nThe MetaSolv Solution business logic, designed to work with the WebLogic server software, is loaded on the same machine and connections are established between the two to allow the exchange of data. Connections are also made between the application server software and the database. The following list shows the benefits of using an application server approach:\n\nProcessing tasks are moved from the client workstations to the application server machine, which saves resources.\n\nMore users can be supported, and you can set up your system so processing continues if a server fails.\n\nDelay between the application and the database server is minimized, increasing the efficiency for processing requests.\n\nFinite resources like database connections are managed in a more structured manner.\n\nWebLogic Domain:\n\nA domain is a group of application servers managed as a single unit. The domain contains at least one instance of WebLogic Server. If multiple server instances exist in the domain, one instance is designated as the administrative server, and the rest become managed servers. Managed servers are controlled from the administrative server console.\n\nWebLogic Administrative Server:\n\nThe administrative server allows you to manage other servers in a domain. This server has a console that allows you to shut down and start up other servers, monitor the environment, and manage activities like security and transaction processing.\n\nWebLogic Managed Server:\n\nA managed server is under the control of the administration server.\n\nWebLogic Clustering:\n\nA cluster is part of a domain dedicated to some specific processing duty (for example, MetaSolv Solution processing). A cluster is not the same as a domain but is a subset of a domain. A cluster generally includes several server instances, and the servers work together as if they were one application. A single cluster or multiple clusters can exist in a domain, but you cannot spread a cluster across more than one domain. One advantage of clusters is their scalability; you can increase the number of servers in a cluster to handle increased processing needs. Clusters also give you high availability, which means if one server fails, another replaces it without the loss of data.\n\nClient:\n\nThe client is the user workstation linked to MetaSolv Solution so that a user can interact with the system to carry out tasks. Some application code is loaded to the client to allow the execution of some MetaSolv Solution graphical features and other processing tasks.\n\nJEE:\n\nJEE is a standard for developing Java applications for a thin-client, multitiered environment. The conventions found in JEE help ensure applications are developed in such a way that communications are simplified between Java applications.\n\nMachine:\n\nThe name of the physical machine that hosts an application server.\n\nSetting Up a Test Environment\n\nBefore you move MetaSolv Solution into production, you should run it in a test environment to ensure you understand how it works and to resolve any issues before you commit the application to your production machines. This document and other MetaSolv Solution documents explain how to set up for a production environment, but you can set up your test environment with some variations. The failover requirements are not as strict for a test environment as they are for production.\n\nFor example, you can run MetaSolv Solution 6.0.x and MetaSolv Solution 6.2.x on the same test machine. You must keep each application separate and ensure that ports used for http communication, name services, and logging are unique for each instance. The Oracle client (tnsnames.ora) must be configured to connect to the appropriate database for each instance.\n\nOn UNIX, use separate users for each instance and set necessary configuration settings for each user. On Windows, you might need to alter some start scripts to ensure the correct paths are set for environment variables such as PATH, CLASSPATH, TNS.ADMIN, and so on.\n\nTo achieve optimum application server performance for individual business needs, load and performance testing in a test environment that represents your true production environment is required. The test environment should mimic how you use your production system, including the transaction mix, number of users, hardware and software infrastructures, database, network usage, and all other relevant factors. Setting up a test environment will allow you to determine the optimal application server settings that you should implement in your production environment for:\n\nConnection pool sizing\n\nExecute thread sizing\n\nJava memory management"
    }
}