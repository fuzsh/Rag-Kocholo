{
    "id": "dbpedia_8277_2",
    "rank": 57,
    "data": {
        "url": "https://e2e.ti.com/support/tools/code-composer-studio-group/ccs/f/code-composer-studio-forum/1263148/c-vs-c-and-libraries",
        "read_more_link": "",
        "language": "en",
        "title": "C vs C++ and libraries",
        "top_image": "https://e2e.ti.com:443/cfs-file/__key/themefiles/tc-s-3fc3f82483d14ec485ef92e206116d49-00000000000000000000000000000000-favicon/tiicon.gif",
        "meta_img": "https://e2e.ti.com:443/cfs-file/__key/themefiles/tc-s-3fc3f82483d14ec485ef92e206116d49-00000000000000000000000000000000-favicon/tiicon.gif",
        "images": [
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/widgetcontainerfiles-3fc3f82483d14ec485ef92e206116d49-s-AAAAAAAAAAAAAAAAAAAAAA-header-header-dXWTWF6YJkCKrTvaFFZaDQ-logo/ic_2D00_logo.png_2D00_250x88.png_2D00_250x88.png?_=638278900268803910",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-groupavatars_2E00_/default.png_2D00_68x68x2.png?_=638256304222205490",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars_2E00_/default.png_2D00_32x32x2.png?_=638256251478916720",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/widgetfiles/95bd25baf0724cf2af03a74ebd4a607a-d/communitymember.gif?_=638373014223297770",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars-00-00-11-47-45/4UDIATQP0NWK.jpg_2D00_28x28x2.jpg?_=638279740036214430",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars_2E00_/default.png_2D00_28x28x2.png?_=638256308571005130",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars-00-00-11-47-45/4UDIATQP0NWK.jpg_2D00_28x28x2.jpg?_=638279740036214430",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars-00-00-00-43-73/4TE8O1DUCMW7.jpg_2D00_28x28x2.jpg?_=638279742769982070",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars-00-00-30-16-92/4U0QMZU562FY.jpg_2D00_28x28x2.jpg?_=638279740084443240",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars_2E00_/default.png_2D00_28x28x2.png?_=638256308571005130",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars-00-00-30-16-92/4U0QMZU562FY.jpg_2D00_28x28x2.jpg?_=638279740084443240",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars-00-00-30-16-92/4U0QMZU562FY.jpg_2D00_28x28x2.jpg?_=638279740084443240",
            "https://e2e.ti.com:443/cfs-filesystemfile/__key/communityserver-components-imagefileviewer/communityserver-components-avatars_2E00_/default.png_2D00_28x28x2.png?_=638256308571005130"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "MSPM0G3507"
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-08-24T18:04:09.043000+00:00",
        "summary": "",
        "meta_description": "Other Parts Discussed in Thread: MSPM0G3507 I'm using MSPM0G3507, but if i put the part into the part number it doesn't let me post into this forum which seems",
        "meta_lang": "en",
        "meta_favicon": "https://e2e.ti.com:443/cfs-file/__key/themefiles/tc-s-3fc3f82483d14ec485ef92e206116d49-00000000000000000000000000000000-favicon/tiicon.gif",
        "meta_site_name": "",
        "canonical_link": "https://e2e.ti.com/support/tools/code-composer-studio-group/ccs/f/code-composer-studio-forum/1263148/c-vs-c-and-libraries",
        "text": "Hello WorkerBee,\n\nIf your question involves MSPM0 (G or L), then you are in the right place. All the examples provided for the MSPM0 families are written in C because that is more widely used in embedded products than C++. That doesn't mean you can't use C++. In Fact, the TI ARM compiler supports both C and C++. There is certainly more overhead in C++ and it will consume more memory than C. The MSPM0G350x family supports up to 128K of FLASH. If you think you may need more than that, then perhaps consider using C.\n\nHere is link to the user guide. Check it out and see if you can get some of your questions answered. If not, let me know.\n\nHi WorkerBee,\n\nIf you are referring to the ARM interrupt vectors, these are defined in the startup file in every MSPM0 driverlib example. If you have downloaded the MSPM0 SDK, you will find these examples in:\n\nC:\\ti\\mspm0_sdk_1_10_01_05\\examples\\nortos\\LP_MSPM0G3507\\driverlib\n\nwhat do i have to do in order to use std::vector ?\n\nNothing special. It is a yet another feature of the library that comes with the compiler. Examples you see in typical C++ books, articles, etc. will build and run.\n\nare things like this ok to use or do they add too much bloat for smaller devices?\n\nIt becomes even more important to build with optimization. For MSPM0 devices, it is usually best to optimize for size by using -Oz. Please see the Optimization Options part of the tiarmclang online manual for more details. You also want to use link-time optimization, both when compiling and linking. For another way to learn about link-time optimization, please watch the video on it from the tiarmclang video series.\n\nIf you truly need all the features of a vector, then using the library implementation is likely to be better than building a custom implementation. If a plain-old array would work just as well, then of course that is cheaper.\n\nThanks and regards,\n\n-George\n\nwww.geeksforgeeks.org/.../\n\nSTL: The C++ Standard Template Library (STL) - GeeksforGeeks\n\nThe Standard Template Library (STL) is a set of C++ template classes to provide common programming data structures and functions such as lists, stacks, arrays, etc. It is a library of container classes, algorithms, and iterators. It is a generalized library and so, its components are parameterized.\n\nContainers or container classes store objects and data. There are in total seven standards “first-class” container classes and three container adaptor classes and only seven header files that provide access to these containers or container adaptors.\n\nSequence Containers: implement data structures that can be accessed in a sequential manner.\n\nvector\n\nlist\n\ndeque\n\narrays\n\nforward_list( Introduced in C++11)\n\nthe vector i was referring to is the one mentioned here, its basically a resizable array.\n\ni'm used to having access to STL and this was just an example, figuring if you could tell me how to build with it, i'd be able to figure out other functions as well.\n\ni tried adding #include <vector> but that didnt work for me, so was wondering what i was missing."
    }
}