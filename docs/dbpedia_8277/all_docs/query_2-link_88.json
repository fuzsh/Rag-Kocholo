{
    "id": "dbpedia_8277_2",
    "rank": 88,
    "data": {
        "url": "https://forum.bricsys.com/discussion/35482/id-better-learn-lisp-or-c-to-create-extensions-for-bricscad",
        "read_more_link": "",
        "language": "en",
        "title": "I'd better learn LISP or C ++ to create extensions for BricsCAD",
        "top_image": "https://forum.bricsys.com/uploads/editor/x0/vypicaam3xr8.jpg",
        "meta_img": "",
        "images": [
            "https://forum.bricsys.com/uploads/userpics/930/nOL1OQAZ54A56.png",
            "https://forum.bricsys.com/uploads/userpics/565/nEPNNYLSYLFJA.jpg",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/userpics/565/nEPNNYLSYLFJA.jpg",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/userpics/565/nEPNNYLSYLFJA.jpg",
            "https://forum.bricsys.com/uploads/userpics/503/nTA8JSU9D5LMP.png",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/userpics/215/nXCV8O3K8YYZ3.png",
            "https://forum.bricsys.com/resources/emoji/smile.png",
            "https://forum.bricsys.com/uploads/userpics/503/nTA8JSU9D5LMP.png",
            "https://forum.bricsys.com/uploads/userpics/215/nXCV8O3K8YYZ3.png",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/userpics/503/nTA8JSU9D5LMP.png",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/userpics/215/nXCV8O3K8YYZ3.png",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/userpics/276/nYF34SGX0KH8D.jpg",
            "https://forum.bricsys.com/uploads/userpics/146/nTUUOSMRAD5DH.jpg",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/userpics/146/nTUUOSMRAD5DH.jpg",
            "https://forum.bricsys.com/uploads/userpics/215/nXCV8O3K8YYZ3.png",
            "https://forum.bricsys.com/uploads/userpics/146/nTUUOSMRAD5DH.jpg",
            "https://forum.bricsys.com/uploads/userpics/276/nYF34SGX0KH8D.jpg",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/userpics/276/nYF34SGX0KH8D.jpg",
            "https://forum.bricsys.com/uploads/defaultavatar/nEZLJTZZBQ04W.jpg",
            "https://forum.bricsys.com/uploads/userpics/276/nYF34SGX0KH8D.jpg",
            "https://forum.bricsys.com/uploads/userpics/522/nU55DERC2R582.png",
            "https://forum.bricsys.com/uploads/userpics/276/nYF34SGX0KH8D.jpg",
            "https://forum.bricsys.com/uploads/editor/x0/vypicaam3xr8.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "natural design",
            "Torsten Moses",
            "James Maeding",
            "Ewen Wallace",
            "Roy Klein Gebbinck",
            "Jason Bourhill",
            "Egor Ermolin"
        ],
        "publish_date": "2019-10-22T09:01:53+00:00",
        "summary": "",
        "meta_description": "Ciao Utilizzo il profilo di mio fratello perchè quello che ho fatto io non mi permette di fare domande (pietro_72_)",
        "meta_lang": "en",
        "meta_favicon": "https://forum.bricsys.com/uploads/favicon_c9119fdadb313985614e2a5cd1b4595b.ico",
        "meta_site_name": "BricsCAD Forum",
        "canonical_link": "https://forum.bricsys.com/discussion/35482/id-better-learn-lisp-or-c-to-create-extensions-for-bricscad",
        "text": "Ciao\n\nUtilizzo il profilo di mio fratello perchè quello che ho fatto io non mi permette di fare domande (pietro_72_)\n\nHo l'hobby per la programmazione e sempre mio fratello m'ha chiesto se potevo fare una piccola estensione BricsCAD per collegarlo a CNC\n\nOltre a imparare ad usare BricsCAD quale linguaggio mi conviene inparare per provare a realizzare qualche estensione, LISP o C++ ?\n\nConosco un po' Python 2.xx, PHP e Javascript e correlati (PyOpenGL, Tkinter, PIL, SVG, x3dom), sto provando a realizzare un estensione per esportare in 3D da QCAD, si può vedere qualcosa sul mio sito (anche se inizio vari progetti ma poi non li completo :-D)\n\nPietro\n\nhttp://creativitainformaticart.altervista.org/\n\nTranslation through Google\n\nHello\n\nI use my brother's profile because what I did does not allow me to ask questions (pietro_72_)\n\nI have a hobby for programming and my brother always asked me if I could make a small BricsCAD extension to connect it to CNC\n\nIn addition to learning to use BricsCAD what language should I use to try to make some extension, LISP or C ++?\n\nI know a bit about Python 2.xx, PHP and Javascript and related (PyOpenGL, Tkinter, PIL, SVG, x3dom), I'm trying to make an extension to export in 3D from QCAD, you can see something on my site (even if I start various projects but then not complete them :-D)\n\nPeter\n\nhttp://creativitainformaticart.altervista.org/\n\nthanks for now\n\nI am more attracted to C ++ (in addition to Qt) also due to the possibility of creating applications or parts of applications that are faster than those that can be realized with interpreted languages in addition to the use of extending various CADs, in addition to the fact that with the right compilers the version of the program for multiple operating systems.\n\nI don't know much about .Net, but does it only work on Windows or does it also run on different operating systems?\n\nDear All,\n\n\"Does LISP run on the Linux version of BRX?\"\n\nyou mean whether Lisp is available on BricsCAD Linux/Mac ?\n\nYes, both Lisp + BRX C++ are available on Linux + Mac (while .NET is Windows only) :-)\n\n@tslewis71\n\nYes, I know ans respect your position ... no doubts, that .NET can be useful ...\n\n\"The reason for .net is to allow non code experts to utilize apis,\"\n\nhmmm - but it requires some level of understanding of programming language(s) and code logic, right ? :-)\n\nFrom that point, programming in .NET languages is not that different from programming in C or C++ (the BRX API supports @tslewis71 and who says that C++ is complicate ? That is a kind of FairyTale, telling about C/C++ from the .NET programmers ...\n\nI could easily say the opposite :-)\n\n\"I’m not going to change career to be a computer scientist to learn c++\"\n\n??? C and C++ are not that complicate to undderstand ... even Java has it's roots in a C++ (ObjectOriented) language ...\n\nBut as mentioned, .NET API is available under BricsCAD Windows, no@tslewis71\n\n\"Please show ex panes or commercially available APIs that require one to code in c++?\"\n\nEasily :-) AutoCAD, MicroStation, ACIS, .... any 2d/3d CAD engine & Modeler have C/C++ APIs ... because of mentioend performance advantages of C/C++\n\n\"The whole point of an api is for it to be accessible to the masses\" Yes and No ... APIs originate from the need + intention to give professionals the ability to extend the CAD core (see AutoCAD's history with introduction of AutoLISP - that was the BigBang) ...\n\nwhich programming language is provided / used, depends on tons of conditions ... never put your point of view into foreground, there is always much more than you would assume (old programmer's rule :-) )\n\nmany greetings & Merry Christmas :-)\n\nAlthough I'm using BricsCAD daily at work, for my personal projects I decided to use Rhino - much better overall in terms of API documentation, community and help. Also I don't like the direction BricsCAD is taking - too much BIM, lack of new 3D tools development and this mixing of BIM, CAD, mechanical, sheet metal and etc. is getting confusing! We have xrefs, blocks, dynamic blocks, components, parametric blocks, layers, structure panel, layers panel, components panel, mechanical browser ...! Even we are using Platinum all the other stuff is there - too much \"Unable to recognize command \"XXXXXXXX\". This error can occur when the command is not supported for the active license.\"\n\nAutoDesks's LISP documentation is pretty good, I don't know about their C++ documentation. But if you have good documentation for their .NET API, I'd love to get a link...\n\nCheck out Kean Walmsley's blog, Through the interface.\n\nFor those considering lisp, .net, or c++, the biggest thing for most users is simplicity and not crashing cad.\n\nLisp and .net are exactly that - simple enough and generally safe.\n\nIt used to be that c++ had to be used for certain critical things. You can do most with .net now though, as it has transactions and so on.\n\nIf someone that had little programming experience got steered to c++, that is a mistake IMO.\n\nYou should at least learn .net first, as you can get more done fasterer, and learn about the structure of a dwg.\n\nA career programmer should consider all API's, as you will need them to implement tools at real companies.\n\nFor instance, just managing the cad startup is best done with lisp. You don't want a compiled thing running you cannot troubleshoot on the spot on a remote machine.\n\nThere are so many circumstances that would cause one to lean one way or the other, but I argue you learn from the bottom up:\n\nLISP, .net, then c++ if you need it.\n\nThe cool thing is .net and c++ can make non cad programs so there are tons of help on the internet on stack overflow, adesk forums, theswamp.org....\n\nFor those looking for lisp help, adesk customization group and theswamp.org are the hangouts. The you have blogs and afralisp.com for non-live help.\n\nSome say don't mention autodesk here. I believe the right answer is what to post, not politics, so oh well.\n\nI see the flames have died down here ... so here I am!\n\nok, ..NET is not \"slow\". If you want slow, do VBA. If you want really slow, do Lisp. .NET, it calls into the *.CAD C++ APIs so of course it is slower but how fast do you need to go? I have written quite a few apps in .NET for *.CADs and they're plenty fast enough for me. File IO tends to be the bottleneck more often than not, even on NvME SSDs but more obviously across networks.\n\nHere's a thread on C++ vs c# performance: https://stackoverflow.com/questions/145110/c-performance-vs-java-c if that's still important to you.\n\nWhat all these discussions fail to account for is your development time - add that to the execution time to get your real elapsed time. Now which language is faster? The one you know! Yeah, especially the \"slow\" ones.\n\nIf you feel you need to work your way up to C++, @James Maeding 's post is good advice.\n\nThis idea of slow is quite relative. I don't think anyone using lisp will care about the speed difference between acad and bcad.\n\nThe more important thing is how you use lisp.\n\nIf you issue a bunch of \"(Command \"this\" \"that\" \"theotherthing\"...), that will be the slowest way you can do anything.\n\nThe next best thing is calling (Entmod...) if you are modifying things.\n\nThe next best is (Entmake...), which is as fast as you can go in lisp - having said that, I wonder if the com interface functions like VLA-ADD.... are faster.\n\nI doubt it, here is why:\n\nThe lisp and com API's use a single \"database transaction\" per entitiy mod or make. Jerry Winters mentioned this way back in 2006 AU.\n\nPeople that have never seen arx or acad .net code have no idea about this, and its one of those golden nuggets to discover.\n\nIf you want speed, use .net or c++ api, and you can do as much as you want in a single transaction. Its 1000x faster.\n\nNot only that, you can make entities in memory and show them on screen, in place of what grdraw/grvecs does in lisp, and 1000x faster.\n\nI'm sure the c++ guys can offer other speed ideas, but that single transaction one is the key.\n\nMy advice, learn both lisp and .net (C#), don't bother with c++ unless you intend to do really special things, in which case you will not need my advice as you know what you are doing.\n\n@Roy Klein Gebbinck\n\nAnother good point. In acad, you can compile a lisp \"project\" to .vlx, which cannot be decompiled, and also, super important, you can compile to \"separate namespace\".\n\nThat means the global vars and functions in your prog cannot be accessed or overwritten by other lisps/progs in the session.\n\nThat is a big deal to me as I commonly tweak functions by the same name in different lisp files.\n\nYou cannot compile to \"separate namespaces\" with bcad. The .des files it creates are not separate namespace.\n\nThe really cool thing about compiling to .vlx and .des though, is you get one file to load, even from a project with 100 files.\n\nThat, and the code is gibberish if looked at in text editor.\n\nI highly recommend using the LDSP to compile to .des for those reasons.\n\nNote that I generally do not accept .des files from others, except developers I know and trust. Same with .vlx or .net dll's."
    }
}