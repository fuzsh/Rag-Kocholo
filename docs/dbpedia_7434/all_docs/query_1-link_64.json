{
    "id": "dbpedia_7434_1",
    "rank": 64,
    "data": {
        "url": "https://developers.google.com/chart/interactive/docs/gallery/geochart",
        "read_more_link": "",
        "language": "en",
        "title": "Visualization: GeoChart",
        "top_image": "https://www.gstatic.com/devrel-devsite/prod/v4513918f2560a1fecca3cf64c2df2e8b263c90b977664567b98ccb062542a623/developers/images/opengraph/google-blue.png",
        "meta_img": "https://www.gstatic.com/devrel-devsite/prod/v4513918f2560a1fecca3cf64c2df2e8b263c90b977664567b98ccb062542a623/developers/images/opengraph/google-blue.png",
        "images": [
            "https://www.gstatic.com/devrel-devsite/prod/v4513918f2560a1fecca3cf64c2df2e8b263c90b977664567b98ccb062542a623/developers/images/lockup-google-for-developers.svg"
        ],
        "movies": [
            "https://developers.google.com/frame/chart/interactive/docs/gallery/geochart_6d1b0e1aec5c3012eae37dfdb17df15e412351c361242db266fe072020961b0a.frame",
            "https://developers.google.com/frame/chart/interactive/docs/gallery/geochart_bd39aa04ce8f79dcdf7ecbe04d6a550bf798c488c4ec1599e3a2eb90484cd1b7.frame",
            "https://developers.google.com/frame/chart/interactive/docs/gallery/geochart_bb62622731d8ecded44dd58a9cb08f2f5faeab902e72f9bd99b6d4ecde1c2c59.frame",
            "https://developers.google.com/frame/chart/interactive/docs/gallery/geochart_07f1c40254df63d17e11b4fbfcc8825aea6dd4b55c6c5e2f137516d03ba8875b.frame",
            "https://developers.google.com/frame/chart/interactive/docs/gallery/geochart_d98c7c00cd3c2a34f9d85298a2b86f48c770215b20019771bf10070d9c54b082.frame"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Learn to create a geochart â€“ a map identified by region, markers, and text.",
        "meta_lang": "en",
        "meta_favicon": "https://www.gstatic.com/devrel-devsite/prod/v4513918f2560a1fecca3cf64c2df2e8b263c90b977664567b98ccb062542a623/developers/images/favicon-new.png",
        "meta_site_name": "Google for Developers",
        "canonical_link": "https://developers.google.com/chart/interactive/docs/gallery/geochart",
        "text": "Overview\n\nA geochart is a map of a country, a continent, or a region with areas identified in one of three ways:\n\nThe region mode colors whole regions, such as countries, provinces, or states.\n\nThe markers mode uses circles to designate regions that are scaled according to a value that you specify.\n\nThe text mode labels the regions with identifiers (e.g., \"Russia\" or \"Asia\").\n\nA geochart is rendered within the browser using SVG or VML. Note that the geochart is not scrollable or draggable, and it's a line drawing rather than a terrain map; if you want any of that, consider a map visualization instead.\n\nRegion GeoCharts\n\nThe regions style fills entire regions (typically countries) with colors corresponding to the values that you assign.\n\n<html> <head> <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script> <script type=\"text/javascript\"> google.charts.load('current', { 'packages':['geochart'], }); google.charts.setOnLoadCallback(drawRegionsMap); function drawRegionsMap() { var data = google.visualization.arrayToDataTable([ ['Country', 'Popularity'], ['Germany', 200], ['United States', 300], ['Brazil', 400], ['Canada', 500], ['France', 600], ['RU', 700] ]); var options = {}; var chart = new google.visualization.GeoChart(document.getElementById('regions_div')); chart.draw(data, options); } </script> </head> <body> <div id=\"regions_div\" style=\"width: 900px; height: 500px;\"></div> </body> </html>\n\nMarker GeoCharts\n\nThe markers style renders circles at specified locations on the geochart, with the color and size that you specify.\n\nTry hovering over the cluttered markers around Rome, and a magnifying glass will open to show the markers in more detail. (The magnifying glass is not supported in Internet Explorer version 8 or earlier.)\n\n<html> <head> <script type='text/javascript' src='https://www.gstatic.com/charts/loader.js'></script> <script type='text/javascript'> google.charts.load('current', { 'packages': ['geochart'], // Note: Because markers require geocoding, you'll need a mapsApiKey. // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings 'mapsApiKey': 'AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY' }); google.charts.setOnLoadCallback(drawMarkersMap); function drawMarkersMap() { var data = google.visualization.arrayToDataTable([ ['City', 'Population', 'Area'], ['Rome', 2761477, 1285.31], ['Milan', 1324110, 181.76], ['Naples', 959574, 117.27], ['Turin', 907563, 130.17], ['Palermo', 655875, 158.9], ['Genoa', 607906, 243.60], ['Bologna', 380181, 140.7], ['Florence', 371282, 102.41], ['Fiumicino', 67370, 213.44], ['Anzio', 52192, 43.43], ['Ciampino', 38262, 11] ]); var options = { region: 'IT', displayMode: 'markers', colorAxis: {colors: ['green', 'blue']} }; var chart = new google.visualization.GeoChart(document.getElementById('chart_div')); chart.draw(data, options); }; </script> </head> <body> <div id=\"chart_div\" style=\"width: 900px; height: 500px;\"></div> </body> </html>\n\nDisplaying Proportional Markers\n\nNormally, marker geocharts display the smallest marker value as a minimal point. If you instead want to display proportional marker values (say, because they're percentages), use the sizeAxis option to set minValue and maxValue explicitly.\n\nFor instance, here's a map of western Europe with populations and areas for three countries: France, Germany, and Poland. The populations are all absolute numbers (e.g., 65 million for France) but the areas are all percentages of the whole: the France marker is colored violet because it's population is middling, but is sized 50 (out of a possible 100) because it contains 50% of the combined area.\n\nIn this code, we use sizeAxis to specify marker sizes in the range from 0 to 100. We also use a colorAxis with RGB values to show the populations as a range of colors from orange to blue, a spectrum that will work well for users with color vision deficiencies. Finally, we specify western Europe with a region of 155, per the \"Content Hierarchy and Codes\" section later in this document.\n\n<html> <head> <script type='text/javascript' src='https://www.gstatic.com/charts/loader.js'></script> <script type='text/javascript'> google.charts.load('current', { 'packages': ['geochart'], // Note: Because markers require geocoding, you'll need a mapsApiKey. // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings 'mapsApiKey': 'AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY' }); google.charts.setOnLoadCallback(drawMarkersMap); function drawMarkersMap() { var data = google.visualization.arrayToDataTable([ ['Country', 'Population', 'Area Percentage'], ['France', 65700000, 50], ['Germany', 81890000, 27], ['Poland', 38540000, 23] ]); var options = { sizeAxis: { minValue: 0, maxValue: 100 }, region: '155', // Western Europe displayMode: 'markers', colorAxis: {colors: ['#e7711c', '#4374e0']} // orange to blue }; var chart = new google.visualization.GeoChart(document.getElementById('chart_div')); chart.draw(data, options); }; </script> </head> <body> <div id=\"chart_div\" style=\"width: 900px; height: 500px;\"></div> </body> </html>\n\nText GeoCharts\n\nYou can overlay text labels onto a geochart with displayMode: text.\n\nColoring your chart\n\nThere are several options for customizing the colors of GeoCharts:\n\ncolorAxis: the spectrum of colors to use for the regions in the datatable.\n\nbackgroundColor: the background color for the chart.\n\ndatalessRegionColor: the color to assign to regions with no associated data.\n\ndefaultColor: the color to assign to regions in the datatable for which the value is either null or unspecified.\n\nThe colorAxis option is the important one: it specifies the range of colors for your data values. In the colorAxis array, the first element is the color given to the smallest value in your dataset, and the last element is the color given to the largest value in your dataset. If you specify more than two colors, interpolation will occur between them.\n\nIn the following chart, we'll use all four options. The colorAxis is used to display Africa with the colors of the pan-African flag, using the latitudes of the countries: from red in the north, through black, to green in the south. The backgroundColor option is used to color the background a light blue, datalessRegionColor to color the non-African countries a light pink, and defaultColor for Madagascar.\n\nLoading\n\nThe google.charts.load package name is \"geochart\". Note that you shouldn't copy our mapsApiKey; that won't work. As long as your chart doesn't require geocoding or use nonstandard codes to identify locations, you don't need a mapsApiKey. For more details, see Load Settings.\n\ngoogle.charts.load('current', { 'packages': ['geochart'], // Note: if your chart requires geocoding or uses nonstandard codes, you'll // need to get a mapsApiKey for your project. The one below won't work. // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings 'mapsApiKey': 'AIzaSyD-9tSrke72PouQMnMX-a7eZSW0jkFMBWY' });\n\nThe geochart visualization class name is google.visualization.GeoChart.\n\nvar visualization = new google.visualization.GeoChart(container);\n\nData format\n\nThe format of the DataTable varies depending on which display mode that you use: regions, markers, or text.\n\nRegions mode format\n\nThe location is entered in one column, plus one optional column as described here:\n\nRegion location [String, Required] - A region to highlight. All of following formats are accepted. You can use different formats in different rows:\n\nA country name as a string (for example, \"England\"), or an uppercase ISO-3166-1 alpha-2 code or its English text equivalent (for example, \"GB\" or \"United Kingdom\").\n\nAn uppercase ISO-3166-2 region code name or its English text equivalent (for example, \"US-NJ\" or \"New Jersey\").\n\nA metropolitan area code. These are three-digit metro codes used to designate various regions; US codes only supported. Note that these are not the same as telephone area codes.\n\nAny value supported by the region property.\n\nRegion color [Number, Optional] - An optional numeric column used to assign a color to this region, based on the scale specified in the colorAxis.colors property. If this column is not present, all regions will be the same color. If the column is present, null values are not allowed. Values are scaled relative to the sizeAxis.minValue/sizeAxis.maxValue values, or to the values specified in the colorAxis.values property, if provided.\n\nMarkers mode format\n\nThe number of columns varies depending on the marker format used, as well as other optional columns.\n\nMarker location [Required]\n\nThe first column is a specific string address (for example, \"1600 Pennsylvania Ave\").\n\nOR\n\nThe first two columns are numeric, where the first column is the latitude, and the second column is the longitude.\n\nNote: Although we recommend ISO 3166 codes to be used for 'regions' mode, 'markers' mode works best with longer names for regions (like Germany, Panama, etc). This is because geocharts, when in 'markers' mode, uses Google Maps for geocoding the locations (converting a string location to a latitude and longitude). This may result in ambiguous locations not getting geocoded as you might expect; such as 'DE' standing for Germany or Delaware, or 'PA' standing for Panama or Pennsylvania.\n\nMarker color [Number, Optional] The next column is an optional numeric column used to assign a color to this marker, based on the scale specified in the colorAxis.colors property. If this column is not present, all markers will be the same color. If the column is present, null values are not allowed. Values are scaled relative to each other, or absolutely to values specified in the colorAxis.values property.\n\nMarker size [Number, Optional] An optional numeric column used to assign the marker size, relative to the other marker sizes. If this column is not present, the value from the previous column will be used (or default size, if no color column is provided as well). If the column is present, null values are not allowed.\n\nText mode format\n\nThe label is entered in the first column, plus one optional column:\n\nText label [String, Required] A specific string address (for example, \"1600 Pennsylvania Ave\").\n\nText size [Number, Optional] The second column is an optional numeric column used to assign the size of the label. If this column is not present, all labels will be the same size.\n\nConfiguration options\n\nName backgroundColor\n\nThe background color for the main area of the chart. Can be either a simple HTML color string, for example: 'red' or '#00cc00', or an object with the following properties.\n\nType: string or object\n\nDefault: white\n\nbackgroundColor.fill\n\nThe chart fill color, as an HTML color string.\n\nType: string\n\nDefault: white\n\nbackgroundColor.stroke\n\nThe color of the chart border, as an HTML color string.\n\nType: string\n\nDefault: '#666'\n\nbackgroundColor.strokeWidth\n\nThe border width, in pixels.\n\nType: number\n\nDefault: 0\n\ncolorAxis\n\nAn object that specifies a mapping between color column values and colors or a gradient scale. To specify properties of this object, you can use object literal notation, as shown here:\n\n{minValue: 0, colors: ['#FF0000', '#00FF00']}\n\nType: object\n\nDefault: null\n\ncolorAxis.minValue\n\nIf present, specifies a minimum value for chart color data. Color data values of this value and lower will be rendered as the first color in the colorAxis.colors range.\n\nType: number\n\nDefault: Minimum value of color column in chart data\n\ncolorAxis.maxValue\n\nIf present, specifies a maximum value for chart color data. Color data values of this value and higher will be rendered as the last color in the colorAxis.colors range.\n\nType: number\n\nDefault: Maximum value of color column in chart data\n\ncolorAxis.values\n\nIf present, controls how values are associated with colors. Each value is associated with the corresponding color in the colorAxis.colors array. These values apply to the chart color data. Coloring is done according to a gradient of the values specified here. Not specifying a value for this option is equivalent to specifying [minValue, maxValue].\n\nType: array of numbers\n\nDefault: null\n\ncolorAxis.colors\n\nColors to assign to values in the visualization. An array of strings, where each element is an HTML color string, for example: colorAxis: {colors:['red','#004411']}. You must have at least two values; the gradient will include all your values, plus calculated intermediary values, with the first color as the smallest value, and the last color as the highest.\n\nType: array of color strings\n\nDefault: null\n\ndatalessRegionColor\n\nColor to assign to regions with no associated data.\n\nType: string\n\nDefault: '#F5F5F5'\n\ndefaultColor\n\nThe color to use when for data points in a geochart when the location (e.g., 'US' ) is present but the value is either null or unspecified. This is distinct from datalessRegionColor, which is the color used when data is missing.\n\nType: string\n\nDefault: '#267114'\n\ndisplayMode\n\nWhich type of geochart this is. The DataTable format must match the value specified. The following values are supported:\n\n'auto' - Choose based on the format of the DataTable.\n\n'regions' - Color the regions on the geochart.\n\n'markers' - Place markers on the regions.\n\n'text' - Label the regions with text from the DataTable.\n\nType: string\n\nDefault: 'auto'\n\ndomain\n\nShow the geochart as though it were being served from this region. For instance, setting domain to 'IN' will display Kashmir as belonging to India rather than as a disputed territory.\n\nType: string\n\nDefault: null\n\nenableRegionInteractivity\n\nIf true, enable region interactivity, including focus and tool-tip elaboration on mouse hover, and region selection and firing of regionClick and select events on mouse click.\n\nThe default is true in region mode, and false in marker mode.\n\nType: boolean\n\nDefault: automatic\n\nforceIFrame\n\nDraws the chart inside an inline frame. (Note that on IE8, this option is ignored; all IE8 charts are drawn in i-frames.)\n\nType: boolean\n\nDefault: false\n\ngeochartVersion\n\nThe version of the GeoChart border data. Versions 10 and 11 are available.\n\nType: number\n\nDefault:10\n\nheight\n\nHeight of the visualization, in pixels. The default height is 347 pixels, unless the width option is specified and keepAspectRatio is set to true - in which case the height is calculated accordingly.\n\nType: number\n\nDefault: auto\n\nkeepAspectRatio\n\nIf true, the geochart will be drawn at the largest size that can fit inside the chart area at its natural aspect ratio. If only one of the width and height options is specified, the other one will be calculated according to the aspect ratio.\n\nIf false, the geochart will be stretched to the exact size of the chart as specified by the width and height options.\n\nType: boolean\n\nDefault: true\n\nlegend\n\nAn object with members to configure various aspects of the legend, or 'none', if no legend should appear. To specify properties of this object, you can use object literal notation, as shown here:\n\n{textStyle: {color: 'blue', fontSize: 16}}\n\nType: Object / 'none'\n\nDefault: null\n\nlegend.numberFormat\n\nA format string for numeric labels. This is a subset of the ICU pattern set . For instance, {numberFormat:'.##'} will display values \"10.66\", \"10.6\", and \"10.0\" for values 10.666, 10.6, and 10.\n\nType: string\n\nDefault: auto\n\nlegend.textStyle\n\nAn object that specifies the legend text style. The object has this format:\n\n{ color: <string>, fontName: <string>, fontSize: <number>, bold: <boolean>, italic: <boolean> }\n\nThe color can be any HTML color string, for example: 'red' or '#00cc00'. Also see fontName and fontSize.\n\nType: object\n\nDefault: {color: 'black', fontName: <global-font-name>, fontSize: <global-font-size>}\n\nregion\n\nThe area to display on the geochart. (Surrounding areas will be displayed as well.) Can be one of the following:\n\n'world' - A geochart of the entire world.\n\nA continent or a sub-continent, specified by its 3-digit code, e.g., '011' for Western Africa.\n\nA country, specified by its ISO 3166-1 alpha-2 code, e.g., 'AU' for Australia.\n\nA state in the United States, specified by its ISO 3166-2:US code, e.g., 'US-AL' for Alabama. Note that the resolution option must be set to either 'provinces' or 'metros'.\n\nType: string\n\nDefault: 'world'\n\nmagnifyingGlass\n\nAn object with members to configure various aspects of the magnifying glass. To specify properties of this object, you can use object literal notation, as shown here:\n\n{enable: true, zoomFactor: 7.5}\n\nType: Object\n\nDefault: {enable: true, zoomFactor: 5.0}\n\nmagnifyingGlass.enable\n\nIf true, when the user lingers over a cluttered marker, a magnifiying glass will be opened.\n\nNote: this feature is not supported in browsers that do not support SVG, i.e. Internet Explorer version 8 or earlier.\n\nType: boolean\n\nDefault: true\n\nmagnifyingGlass.zoomFactor\n\nThe zoom factor of the magnifying glass. Can be any number greater than 0.\n\nType: number\n\nDefault: 5.0\n\nmarkerOpacity\n\nThe opacity of the markers, where 0.0 is fully transparent and 1.0 is fully opaque.\n\nType: number, 0.0â€“1.0\n\nDefault: 1.0\n\nregioncoderVersion\n\nThe version of the regioncoder data. Versions 0 and 1 are available.\n\nType: number\n\nDefault:0\n\nresolution\n\nThe resolution of the geochart borders. Choose one of the following values:\n\n'countries' - Supported for all regions, except for US state regions.\n\n'provinces' - Supported only for country regions and US state regions. Not supported for all countries; please test a country to see whether this option is supported.\n\n'metros' - Supported for the US country region and US state regions only.\n\nType: string\n\nDefault: 'countries'\n\nsizeAxis\n\nAn object with members to configure how values are associated with bubble size. To specify properties of this object, you can use object literal notation, as shown here:\n\n{minValue: 0, maxSize: 20}\n\nType: object\n\nDefault: null\n\nsizeAxis.maxSize\n\nMaximum radius of the largest possible bubble, in pixels.\n\nType: number\n\nDefault: 12\n\nsizeAxis.maxValue\n\nThe size value (as appears in the chart data) to be mapped to sizeAxis.maxSize. Larger values will be cropped to this value.\n\nType: number\n\nDefault: Maximum value of size column in chart data\n\nsizeAxis.minSize\n\nMininum radius of the smallest possible bubble, in pixels.\n\nType: number\n\nDefault: 3\n\nsizeAxis.minValue\n\nThe size value (as appears in the chart data) to be mapped to sizeAxis.minSize. Smaller values will be cropped to this value.\n\nType: number\n\nDefault: Minimum value of size column in chart data\n\ntooltip\n\nAn object with members to configure various tooltip elements. To specify properties of this object, you can use object literal notation, as shown here:\n\n{textStyle: {color: '#FF0000'}, showColorCode: true}\n\nType: object\n\nDefault: null\n\ntooltip.textStyle\n\nAn object that specifies the tooltip text style. The object has this format:\n\n{ color: <string>, fontName: <string>, fontSize: <number>, bold: <boolean>, italic: <boolean> }\n\nThe color can be any HTML color string, for example: 'red' or '#00cc00'. Also see fontName and fontSize.\n\nType: object\n\nDefault: {color: 'black', fontName: <global-font-name>, fontSize: <global-font-size>}\n\ntooltip.trigger\n\nThe user interaction that causes the tooltip to be displayed:\n\n'focus' - The tooltip will be displayed when the user hovers over the element.\n\n'none' - The tooltip will not be displayed.\n\n'selection' - The tooltip will be displayed when the user selects the element.\n\nType: string\n\nDefault: 'focus'\n\nwidth\n\nWidth of the visualization, in pixels. The default width is 556 pixels, unless the height option is specified and keepAspectRatio is set to true - in which case the width is calculated accordingly.\n\nType: number\n\nDefault: auto\n\nContinent Hierarchy and Codes\n\nIt is possible to show geocharts of continents/sub-continents by setting the region option to one of the following 3-digit codes. The codes and the hierarchy are based, with some exceptions, on those developed and maintained by the United Nations Statistics Division .\n\nContinent Sub-Continent Countries 002 - Africa 015 - Northern Africa DZ, EG, EH, LY, MA, SD, SS, TN 011 - Western Africa BF, BJ, CI, CV, GH, GM, GN, GW, LR, ML, MR, NE, NG, SH, SL, SN, TG 017 - Middle Africa AO, CD, ZR, CF, CG, CM, GA, GQ, ST, TD 014 - Eastern Africa BI, DJ, ER, ET, KE, KM, MG, MU, MW, MZ, RE, RW, SC, SO, TZ, UG, YT, ZM, ZW 018 - Southern Africa BW, LS, NA, SZ, ZA 150 - Europe 154 - Northern Europe GG, JE, AX, DK, EE, FI, FO, GB, IE, IM, IS, LT, LV, NO, SE, SJ 155 - Western Europe AT, BE, CH, DE, DD, FR, FX, LI, LU, MC, NL 151 - Eastern Europe BG, BY, CZ, HU, MD, PL, RO, RU, SU, SK, UA 039 - Southern Europe AD, AL, BA, ES, GI, GR, HR, IT, ME, MK, MT, RS, PT, SI, SM, VA, YU 019 - Americas 021 - Northern America BM, CA, GL, PM, US 029 - Caribbean AG, AI, AN, AW, BB, BL, BS, CU, DM, DO, GD, GP, HT, JM, KN, KY, LC, MF, MQ, MS, PR, TC, TT, VC, VG, VI 013 - Central America BZ, CR, GT, HN, MX, NI, PA, SV 005 - South America AR, BO, BR, CL, CO, EC, FK, GF, GY, PE, PY, SR, UY, VE 142 - Asia 143 - Central Asia TM, TJ, KG, KZ, UZ 030 - Eastern Asia CN, HK, JP, KP, KR, MN, MO, TW 034 - Southern Asia AF, BD, BT, IN, IR, LK, MV, NP, PK 035 - South-Eastern Asia BN, ID, KH, LA, MM, BU, MY, PH, SG, TH, TL, TP, VN 145 - Western Asia AE, AM, AZ, BH, CY, GE, IL, IQ, JO, KW, LB, OM, PS, QA, SA, NT, SY, TR, YE, YD 009 - Oceania 053 - Australia and New Zealand AU, NF, NZ 054 - Melanesia FJ, NC, PG, SB, VU 057 - Micronesia FM, GU, KI, MH, MP, NR, PW 061 - Polynesia AS, CK, NU, PF, PN, TK, TO, TV, WF, WS\n\nMethods\n\nMethod clearChart()\n\nClears the chart, and releases all of its allocated resources.\n\nReturn Type: none\n\ndraw(data, options)\n\nDraws the chart. The chart accepts further method calls only after the readyevent is fired. Extended description.\n\nReturn Type: none\n\ngetImageURI()\n\nReturns the chart serialized as an image URI.\n\nCall this after the chart is drawn.\n\nSee Printing PNG Charts.\n\nReturn Type: string\n\ngetSelection()\n\nReturns an array of the selected chart entities. Selectable entities are regions with an assigned value. For this chart, only one entity can be selected at any given moment. Extended description .\n\nReturn Type: Array of selection elements\n\nsetSelection()\n\nSelects the specified chart entities. Cancels any previous selection. Selectable entities are regions with an assigned value. For this chart, only one entity can be selected at a time. Extended description .\n\nReturn Type: none\n\nEvents\n\nData policy"
    }
}