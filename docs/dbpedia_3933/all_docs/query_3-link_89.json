{
    "id": "dbpedia_3933_3",
    "rank": 89,
    "data": {
        "url": "https://nodered.org/docs/getting-started/local",
        "read_more_link": "",
        "language": "en",
        "title": "RED locally : Node",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://nodered.org/images/logos/raspberrypi.svg",
            "https://nodered.org/images/logos/debian.svg",
            "https://nodered.org/images/logos/ubuntu.svg",
            "https://nodered.org/images/logos/redhat.svg",
            "https://nodered.org/images/logos/fedora.svg",
            "https://nodered.org/images/logos/centos.svg",
            "https://nodered.org/images/logos/windows.svg",
            "https://nodered.org/images/logos/raspberrypi.svg",
            "https://nodered.org/images/logos/debian.svg",
            "https://nodered.org/images/logos/ubuntu.svg",
            "https://nodered.org/images/openjs_foundation-logo.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Prerequisites\n\nTo install Node-RED locally you will need a supported version of Node.js.\n\nInstalling with npm\n\nTo install Node-RED you can use the npm command that comes with node.js:\n\nIf you are using Windows, do not start the command with sudo.\n\nThat command will install Node-RED as a global module along with its dependencies.\n\nYou can confirm it has succeeded if the end of the command output looks similar to:\n\nInstalling with docker\n\nTo run in Docker in its simplest form just run:\n\nFor more detailed information see our docker guide.\n\nInstalling with snap\n\nIf your OS supports Snap you can install Node-RED with:\n\nWhen installed as a Snap package, it will run in a secure container that does not have access to some extra facilities that may be needed for you to use, such as:\n\naccess to main system storage. Can only read/write to local home directories.\n\ngcc - needed to compile any binary components of nodes you want to install\n\ngit - needed if you want to use the Projects feature\n\ndirect access to gpio hardware\n\naccess to any external commands your flows want to use with the Exec node (for example).\n\nIf you need access to system hardware or to add nodes that require compilation then we recommend using a full install of Node-RED and not using the snap.\n\nRunning\n\nOnce installed as a global module you can use the node-red command to start Node-RED in your terminal. You can use Ctrl-C or close the terminal window to stop Node-RED.\n\nYou can then access the Node-RED editor by pointing your browser at http://localhost:1880.\n\nThe log output provides you various pieces of information:\n\nThe versions of Node-RED and Node.js\n\nAny errors hit when it tried to load the palette nodes\n\nThe location of your Settings file and User Directory\n\nThe name of the flows file it is using.\n\nNode-RED uses flows_<hostname>.json as the default flows file. You can change this by providing the flow file name as argument to the node-red command.\n\nCommand-line Usage\n\nNode-RED can be started using the command node-red. This command can take various arguments:\n\nOption Description -p, --port PORT Sets the TCP port the runtime listens on. Default: 1880 --safe Starts Node-RED without starting the flows. This allows you to open the flows in the editor and make changes without the flows running. When you deploy your changes, the flows are then started. -s, --settings FILE Sets the settings file to use. Default: settings.js in userDir --title TITLE Set process window title -u, --userDir DIR Sets the user directory to use. Default: ~/.node-red -v Enables verbose output -D X=Y|@file Override individual settings -?, --help Shows command-line usage help and exits flows.json|projectName If the Projects feature is not enabled, this sets the flow file you want to work with. If the Projects feature is enabled, this identifies which project should be started.\n\nNode-RED uses flows_<hostname>.json as the default flows file. If the computer you are running on may change its hostname, then you should ensure you provide a static file name; either as a command-line argument or using the flowsFile option in your settings file.\n\nOverride individual settings\n\nSince Node-RED 1.1.0\n\nYou can override individual settings on the command-line using the -D (or --define) option.\n\nFor example, to change the logging level you can use:\n\nYou can also provide the custom settings as a file:\n\nThe file should contain a list of the settings to override:\n\nPassing arguments to the underlying Node.js process\n\nThere are occasions when it is necessary to pass arguments to the underlying Node.js process. For example, when running on devices like the Raspberry Pi or BeagleBone Black that have a constrained amount of memory.\n\nTo do this, you must use the node-red-pi start script in place of node-red. Note: this script is not available on Windows.\n\nAlternatively, if are running Node-RED using the node command, you must provide arguments for the node process before specifying red.js and the arguments you want passed to Node-RED itself.\n\nThe following two commands show these two approaches:\n\nUpgrading Node-RED\n\nIf you have installed Node-RED as a global npm package, you can upgrade to the latest version with the following command:\n\nIf you are using Windows, do not start the command with sudo.\n\nNext steps"
    }
}