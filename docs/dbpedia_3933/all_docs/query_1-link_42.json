{
    "id": "dbpedia_3933_1",
    "rank": 42,
    "data": {
        "url": "https://www.skinait.com/bibliografia-linux/cms/",
        "read_more_link": "",
        "language": "en",
        "title": "Bibliografía recomendada",
        "top_image": "https://www.skinait.com/bibliografia-linux/cms/clientes/skina/img/favicon.ico",
        "meta_img": "https://www.skinait.com/bibliografia-linux/cms/clientes/skina/img/favicon.ico",
        "images": [
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina/img/logo.png",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina/img/logo.png",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina/img/logo.png",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina/img/logo.png",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina/img/logo.png",
            "https://www.skinait.com/bibliografia-linux/cms/img/menu.png",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "https://www.skinait.com/bibliografia-linux/cms/clientes/skina2018/img/menu_arrow.svg",
            "http://2.bp.blogspot.com/-ShVa5T3UeNw/T_VM6B7uFEI/AAAAAAAAWDE/-S3yOy_AWiE/s320/How-to-Manage-iPhone-iPod-iPad-on-Linux.jpg",
            "https://www.skinait.com/bibliografia-linux/cms/img/waze-ico-blc.png",
            "https://www.skinait.com/bibliografia-linux/cms/img/skina_dev.gif",
            "https://www.skinait.com/bibliografia-linux/cms/img/iconizar.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "linux",
            "unix",
            "comandos",
            "shell",
            "distribuciones"
        ],
        "tags": null,
        "authors": [
            "Matei Cezar",
            "Mateo Santos"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Un completo compendio de enlaces a artículos imprescindibles para aprender UNIX/Linux",
        "meta_lang": "es",
        "meta_favicon": "clientes/skina/img/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "For probably the better part of 15 years, PDF has been the de facto standard for sharing, e-mailing, and printing documents. It is a well-supported format, and Linux distributions have been able to read them since, well, since forever! The only problem is, while Windows and MacOS machines can easily buy and install Adobe Acrobat Pro, there is no native Linux version. Still, there are a few good Linux PDF editors available, and I had a go at testing them for you.\n\nLast year, I covered five of the best open source project management tools, like ProjectLibre and OpenProject. The article struck a chord with readers and continues to prove valuable. So, this year I revisited the tools mentioned in last year's article, taking into account comments and suggestions from readers, and provided an update on where they are today. First, I share five new open source project management tools for 2015. All in all, this article will give you a good look at 11 of the top open source project management tools out there.\n\nFor the last three years, I have rounded up the most popular open source project management tools for Opensource.com readers. As there continues to be major reader interest in this area, I decided to take a look back at the tools we covered in 2014 and 2015, and give you updates on all of these projects. I looked to see which projects had new releases, notable new and improved features, and more.\n\nEvery company has finite resources, so there is a dispute over the use of these resources by all members, this is the point, the dispute of these resources can cause problems among employees, wear and tear on relationships and unproductivity in the organization.\n\nThis discussion seems to be far from the technology, however, to solve these types of problem, many free Softwares are available and in this article, I write about a corporate tool able to help organize the use of resources in a fair and effective way.\n\nSwift is a programming language developed by Apple Inc. It is a general-purpose, multi-paradigm, compiled programming language developed for iOS, macOS, watchOS, tvOS, Linux, and z/OS. According to the developers, Swift is a fantastic way to write software, whether it’s for phones, desktops, servers, or anything else that runs code. It’s a safe, fast, and interactive programming language that combines the best in modern language thinking with wisdom from the wider Apple engineering culture and the diverse contributions from its open-source community. The compiler is optimized for performance and the language is optimized for development, without compromising on either.\n\nI have a lot of Linux tutorial videos in my Laptop. I wanted all of them in my Google Drive, for the sake of backup. The problem is those videos are more than 1 GiB in size. It is practically not a good approach to upload that much big files to my Google drive. Even though Google Drive allows us to upload files up to 5TB, I find it is very time consuming, because it takes lot of time to upload. While contemplating with this issue, I figured it out that it would be much better if I can be able to split those files into smaller size and upload them all one by one. I can then download all parts of the file, and combine all of them, whenever I want. This is just an example. There might be many changes that you want to break a large file into pieces and combine them later. If you ever been in this situation, afraid not. There is a simple command line utility called \"split\" which is used to split the big files into multiple smaller files, and you can join all of them late to make a single file. Sounds useful? Indeed.\n\nFreeBSD 11.1 Installation Guide\n\nFreeBSD is a free, powerful, robust, flexible and stable Open Source operating system based on UNIX which is designed with security and speed in mind.\n\nFreeBSD can operate on a large variety of modern CPU architectures and can power servers, desktops and some kind of custom embedded systems, the most notable being Raspberry PI SBC. As in Linux case, FreeBSD comes with a large collection of pre-compiled software packages, more than 20,000 packages, that can be simply installed in the system from their repositories, called \"Ports\".\n\nIf you want to run a clone of Microsoft Windows to escape the drama of upgrading to Windows 10, try ReactOS -- but do not expect it to be a fully functional replacement any time soon.\n\nReactOS is a free, open source operating system built on the design principles found in the Windows NT architecture.\n\nJust remember that ReactOS is a Windows clone and not a Linux distro with a Windows-like desktop shell. It does not run Linux apps.\n\nThe release last month of version 0.4.1 brings this unique open source project one step closer to its goal of providing users full compatibility with Windows software on a free OS made almost from scratch.\n\nIPFire is a Linux distribution that is focused on delivering a starting point for a router and firewall solution with a web interface. It can be made to do a whole lot, but it may not be the best fit for the needs of a home network.\n\nI'll not go in to performance testing at all in this review as this will vary based on your hardware. You can use any x86_64 (or armv5tel) system with at least two Ethernet ports. You may need a third Ethernet port if you want to use an external wireless access point rather than configuring the box you want to use with IPFire as your access point.\n\nHere's the scenario: we have a Redis server running on a Raspberry Pi and we want to make it available to other machines on a network rather than just using the Redis server in a localhost context. We have already added a password to the Redis server instance; however, due to the high-performance capabilities of Redis, it is possible for outside systems to barrage it with massive number of passwords in parallel to break in. It's time for a firewall.\n\nWe've already reviewed the Linux Lite 3.6 distro some time back and even concluded that it is an excellent distro for any beginner to start with linux and then stay on forever. With a lot of wow factors in that distro, Linux Lite has come up with a more enhanced version in Linux Lite 3.6. And with the 3.6 release, Linux Lite has introduced some major changes since the release of 3.4. Let's look at all the changes and also a step by step installation guide to install Linux Lite 3.6 in your system.\n\nAre you a distro-hopper who likes to try new Linux OSs every few days? If so, I have something for you. Say hello to Sysget, a front-end for popular package managers in Unix-like operating systems. You don't need to learn about every package managers to do basic stuffs like installing, updating, upgrading and removing packages. You just need to remember one syntax for every package manager on every Unix-like operating systems. Sysget is a wrapper script for package managers and it is written in C++. The source code is freely available on GitHub.\n\nIf you are a gamer or you read gaming news at all, you will probably know of SteamOS. It is a new operating system that Valve is working on for dedicated gaming computers. The Operating system is based on Linux and has a Debian x64 architecture as its base. While this is really cool and I am personally looking forward to the day when I we can use this OS for serious gaming, it is still in the Beta development stages.\n\nI might be wrong, but I get the impression that my Windows friends - which would be most of the people I see on a daily basis - think of Linux as this incredibly geeky system from another planet. I think most of them don't understand why I use it and why I don't just stay in the known world - which to them would be Windows. Paradoxically, however, they do get why some folks use Macs.\n\nWhen Microsoft ended support for Windows XP last year, most of us moved on to Windows 7 or 8, but not the nation of China. XP was still in wide use around the country and upgrading was an expensive proposition.\n\nIn a fit of pique, the Chinese government actually banned Windows 8 in retaliation to the end of XP support, which was the ultimate example of cutting off your nose to spite your face.\n\nConseguir trabajo es complicado, sobre todo en tecnología, donde los puestos son altamente competitivos. Sin embargo, hace poco, el ministerio de las TIC aseguró que hay una deficiencia en mano de obra calificada para trabajar en las empresas de tecnología del país. Ahora, según ReadWrite, también hay un déficit de personas con conocimiento en Linux. La Fundación Linux anunció la creación de un programa de certificación para educar y mejorar la oferta de personas especializadas en esta plataforma.\n\nA pesar de que Linux no sea un sistema tan popular para el consumidor, muchas empresas tienen sus servidores sobre la plataforma del pingüino. De acuerdo con IDC, los servidores Linux representan el 28,5% de los ingresos de ese mercado. Esto representa un incremento de 4,6 puntos porcentuales frente al estudio del cuartro trimestre de 2012.\n\nUn estudio de la fundación encontró que el 77% de los encargados de las contrataciones tiene entre sus listas de prioridad a personas con talento en Linux. Además, encontraron que el 86% de las personas que tienen conocimiento en Linux vieron más oportunidades en su carrera.\n\nEl conocimiento sobre esta plataforma es clave para el funcionamiento de internet. Muchas de las compañías más grandes del mercado usan este tipo de servidores. Google, Amazon y Yahoo!, por ejemplo, tienen sus datos en servidores que corren Linux.\n\nAdemás, el sistema está teniendo más calado que antes entre los consumidores finales. Si muchos no lo saben, Android, el sistema operativo móvil más popular del mundo, tiene entre sus entrañas la creación de Linus Torvalds. Lo mismo pasa con los dispositivos Kindle de Amazon.\n\nEl nuevo sistema de certificación tiene un curso en línea y después un examen que vale 300 dólares. Hay dos certificaciones: administrador de sistemas Linux e ingeniero Linux.\n\nEntonces, consiga trabajo estudiando Linux. Parece ser una ecuación muy sencilla.\n\nMateo Santos @matsan187\n\nWhat does open source software mean? When you are explaining it to someone else, how do you convey the value and essense of open source without reinventing it? There have been many hard won lessons in open source since the phrase was first coined in 1997, and we should not forget those lessons.\n\nTo help with that, I've collected 12 memes that are meaningful to me to help share the history, set the stage, and provide context for what open source software is and what it means to the software industry at large.\n\nThis is a manifesto that any private organization can use to frame their collaboration transformation. Take a read and let me know what you think.\n\nI presented a talk at the Linux TODO group using this article as my material. For those of you who are not familiar with the TODO group, they support open source leadership at commercial companies. It is important to lean on each other because legal, security, and other shared knowledge is so important for the open source community to move forward. This is especially true because we need to represent both the commercial and public community best interests.\n\nIt's a hybrid and multi-cloud world, at least according to Red Hat.\n\nSo this week at its Summit in Boston the company that is known for commercializing open source projects for enterprises has taken steps to further facilitate how users of its application development tools can manage workloads across public clouds and on-premises systems.\n\nHere are the key details: Red Hat announced native access to Amazon Web Services products in its Red Hat OpenShift product. OpenShift is the company's platform as a service (PaaS) application development software, and it's also the company's main tool for helping enterprises deploy application containers, including those from Docker.\n\nThe Go programming language, sometimes referred to as Google's golang, is making strong gains in popularity. While languages such as Java and C continue to dominate programming, new models have emerged that are better suited to modern computing, particularly in the cloud. Go's increasing use is due, in part, to the fact that it is a lightweight, open source language suited for today's microservices architectures. Container darling Docker and Google's container orchestration product Kubernetes are built using Go. Go is also gaining ground in data science, with strengths that data scientists are looking for in overall performance and the ability to go from \"the analyst's laptop to full production.\"\n\nOne of the most common tasks in any company's open source department is evaluating internal software to see if it would be a good candidate to give back to the community. When performing this task at PayPal, we found it useful to take each potential open source project through a vetting process originally framed by Danese Cooper that seeks to answer four primary questions:\n\nWho cares?\n\nAre we still using it?\n\nAre we committed to it?\n\nCan it be developed in one public tree?\n\nThis article looks at these questions and why they matter.\n\nI don't think many people answer the question \"What do you want to be when you grow up?\" with \"I want to work in open source.\"\n\nIn my experience, working in the open source community is something that happens as a result of something else. I worked in open source for a short time-in fact, the mission statement of the company I worked for included the words \"open source.\" But my path to that job was not direct and not as laser-focused as one might think.\n\nhttp://www.zdnet.com/article/red-hat-open-sources-how-it-makes-decisions/\n\nRed Hat released its best practices for leading open projects, making decisions, collaborating and communicating.\n\nIn other words, Red Hat just put its decision-making code on Github.\n\nThe company's Open Decision Framework is likely to be a read for business and tech leaders. Officially, the framework is supposed to \"help decision-makers communicate transparently, seek out diverse perspectives, collaborate more effectively across distributed teams, and limit unanticipated impacts of business projects and decisions.\"\n\nRed Hat said it has received requests from outside organizations on how to use open source principles inside their enterprises.\n\nThe five core open source principles--open exchange, participation, meritocracy, community, and release early and often--are outlined in Red Hat's framework.\n\nAny executive who sometimes feels like he or she has to herd cats may find Red Hat's framework interesting.\n\nNPM, short for Node Package Manager, is a command line package manager for installing NodeJS packages, or modules. We already have have published a guide that described how to manage NodeJS packages using NPM. As you may noticed, managing NodeJS packages or modules using Npm is not a big deal. However, if you're not compatible with CLI-way, there is a desktop GUI application named NDM which can be used for managing NodeJS applications/modules. NDM, stands for NPM Desktop Manager, is a free, open source graphical front-end for NPM that allows us to install, update, remove NodeJS packages via a simple graphical window.\n\nThe USS Zumwalt will be a floating data center-armed with missiles and robot guns.\n\nWhen the USS Zumwalt (DDG 1000) puts to sea later this year, it will be different from any other ship in the Navy's fleet in many ways. The $3.5 billon ship is designed for stealth, survivability, and firepower, and it's packed with advanced technology. And at the heart of its operations is a virtual data center powered by off-the-shelf server hardware, various flavors of Linux, and over 6 million lines of software code.\n\nMost Linux installations recommend that you include a SWAP partition. This may seem odd to Windows users, who are used to having their entire operating system on a single partition.\n\nThe value you enter indicates when you want Linux to start actively moving processes from the memory to the SWAP partition. So for example, a value of 10 indicates that processes will be moved when memory usage reaches 90%; the default swappiness value in Ubuntu of 60 indicates that processes will be moved when memory usage reaches 40% muchos lo explican así, no es cierto. No es un porcentaje.\n\nFrom time to time, we need to clear up our system storage to make space for installing new programs and dealing with additional files. This is especially important when you have a low storage device or a limited storage capacity. Even if you have a large storage available but you are a person like me who likes to clear up clutter from time to time, this article will brief you about multiple ways to do so. Ubuntu might be a light operating system but it is not too friendly on the storage, especially because it does not delete the packages it downloads for installing software.\n\nIn this guide, we are going to learn to use df command. The df command, stands for Disk Free, reports file system disk space usage. It displays the amount of disk space available on the file system in a Linux system. The df command is not to be confused with du command. Both serves different purposes. The df command reports how much disk space we have (i.e free space) whereas the du command reports how much disk space is being consumed by the files and folders. Hope I made myself clear. Let us go ahead and see some practical examples of df command, so you can understand it better.\n\nThere are many tools available to create bootable USB drive on Linux. We have already reviewed a few such tools, namely Etcher, Bootiso, and MultiCD. If you don’t want to use these third-party tools, there is a built-in command line tool called dd (Data Duplicator) available to create a bootable USB drives. Using the live bootable medium, we can test the Linux distributions without having to install them on the hard drive. We can also use the live cd for troubleshooting purposes as well. When you try the Live USB, you can do all sort of things, such as installing applications, downloading files, playing media, creating files and folders, customizing it as per your liking and a lot more. However once you reboot the system, all of the said changes will be lost. Because, you are working on a live OS. What if you want to make all changes remain intact even after rebooted the system? That’s what we are going to do now. This tutorial will teach you how to create persistent Live USB using Mkusb tool on Ubuntu and its variants.\n\nGoogle is one of the best known search engine which offers many things as FREE of cost like gmail, gdrive, youtube, google+, etc. Everything we can access through web browser but one big challenge in Linux to access gdrive (Its offering 15GB of free storage) natively through desktop app.\n\nAs of now there is no official google drive client for Linux but the same time we can saw official google drive clients for other operating systems such as Windows, Android, OS X & iOS.\n\nWe already have covered how to manually find and delete files older than X days using \"find\" command in Linux. Today we will do the same, but only if the files have not been accessed for a certain period of time. Say hello to \"Tmpwatch\", a command line utility to recursively delete files that haven’t been accessed for a given time. Not just files, tmpwatch will also delete empty directories as well.\n\nIn this tutorial we'll refer to a practical example of Linux dd command that can be used by system administrators to migrate or clone a Windows Operating System or a Linux OS from a larger HDD partitioned in MBR or GPT layout style to a smaller SSD. In this excerpt we'll use as an example a Windows system installed on a hard disk with multiple partitions. This method can become quite complicated in case the HDD is partitioned in MBR scheme and contains an extended partition with multiple logical partitions or the partitions are out of order. I suggest you don't use this method if that's the case. In such cases it's safer to use ddrescure which can clone your entire disk layout (partition table and used blocks inside each partitions) without actually transferring the empty space. DDrescure can be obtained by installing gddrescue package from Ubuntu main repositories.\n\nYou know those times when things go wrong on your computer, and it won't boot, or you can't' login into your system, or there's a rootkit messing up your booting or you just want to recover files from a drive. Those are the times having a rescue disc will do you a great deal of good in helping you out. So let's take a look at 5 very useful Linux based Rescue CDs you can check out.\n\nSystemRescueCd is a Linux system rescue disk available as a bootable CD-ROM or USB stick for administrating or repairing your system and data after a crash. It aims to provide an easy way to carry out admin tasks on your computer, such as creating and editing the hard disk partitions. It comes with a lot of linux software such as system tools (parted, partimage, fstools, ...) and basic tools (editors, midnight commander, network tools). It can be used for both Linux and windows computers, and on desktops as well as servers. This rescue system requires no installation as it can be booted from a CD/DVD drive or USB stick, but it can be installed on the hard disk if you wish. The kernel supports all important file systems (ext2/ext3/ext4, reiserfs, btrfs, xfs, jfs, vfat, ntfs), as well as network filesystems (samba and nfs)\n\nNow a days, computer or digital forensics is a very important because of crimes related to computer, Internet and mobiles. Evidences such as computer and digital devices contain or store sensitive information which can be useful for forensic investigator in a particular crime or incident.\n\nDigital forensic investigation required tools to extract desired information from the devices. Several commercial tools are exist for forensic investigation however huge amount is required to buy. Open source community also contributed in this field and there are several open source tools for digital forensic field. In this article, best tools related to digital forensic will be explored.\n\nWhen you rescue your data from a dying hard drive, time is of the essence. The longer it takes to copy your data, the more you risk losing. GNU ddrescue is the premium tool for copying dying hard drives, and any block device such as CDs, DVDs, USB sticks, Compact Flash, SD cards -- anything that is recognized by your Linux system as /dev/foo. You can even copy Windows and Mac OS X storage devices because GNU ddrescue operates at the block level, rather than the filesystem level, so it doesn't matter what filesystem is on the device.\n\nWhether you want something free to play or you're looking for invest in a long term favorite, there are plenty of amazing options on Linux. Many of Linux's best titles are actually the best in their genre. This is especially true with some eSports games. Plenty of big names from other platforms have been ported over to Linux recently too, allowing for a ton of choice. That said, these games stand out above the rest.\n\nMost peripherals aren't supported under Linux, right? Well, there's a lot more support available than you probably think. While it's true that most hardware manufacturers completely neglect Linux, it's also true that the open source community is capable of just about anything. They've stepped up and created excellent open-source drivers for a lot of popular gaming hardware. Then, of course, you have mice that just don't need drivers and will work out of the box. Those are a great option for gaming on Linux, too.\n\nPlayOnLinux is a free program that helps to install, run, and manage Windows software on Linux. It can also manage virtual C: drives (known as Wine prefixes), and download and install certain Windows libraries for getting some software to run on Wine properly. Creating different drives using different Wine versions is also possible. It is very handy because what runs well in one version may not run as well (if at all) on a newer version. There is PlayOnMac for macOS and PlayOnBSD for FreeBSD.\n\nWine is the compatibility layer that allows many programs developed for Windows to run under operating systems such as Linux, FreeBSD, macOS and other UNIX systems. The app database (AppDB) gives users an overview of a multitude of programs that will function on Wine, however successfully.\n\nBoth programs can be obtained using your distribution's software center or package manager for convenience.\n\nThere you are typing happily away, when all of a sudden you accidentally hit some hotkeys and weird things happen. Linux does not yet have a universal \"undo\" button, which I think is the most needed feature for any computer, so you have to know what you did so you can undo it. If you don't find the offending keyboard shortcut after reading this article, you'll know where to look to find out how they're configured on your system.\n\nOne of the strengths of Ubuntu is its stability. Each bit of software included inside releases are vigorously tested. They are essentially \"snapshots\" in time. Everything stays stable. This method has proven to be very effective. Ubuntu is used heavily in work and production environments as a result of this. This is great for most users, but for advanced users looking to get the latest and the greatest, this can be a bit of a drawback.\n\nLinux Kernel 4.15 has been released on 28 Jan 2018. You might have heard a lot about Meltdown and Spectre vulnerabilities in the chips for the past few months. Thanks to the entire Linux Kernel development team, this release contains the latest code to deal with Meltdown/Spectre issues. Even though, the issues haven't been completely fixed yet, at least we've got a temporary fix. \"The Linux Kernel 4.15 version is quiet and small, and no last-minute panics, just small fixes for various issues\" Says Linus Torvalds\n\nIf you want to use Linux audio for professional work, but have been using Windows up until now, then there are some important differences you need to know about.\n\nThis article will help explain the basics of Linux audio, and it will do so by directly comparing each part of the system to the equivalent in Windows. This is to make it easy for musicians and sound engineers who understand Windows well to switch to Linux and get back their fun and freedom.\n\nSo sit back, relax, and get ready to learn:\n\nExactly what an audio framework is\n\nThe key differences between the way Linux and Windows handle audio\n\nHow Window's WASAPI and ASIO compare with Linux's ALSA and JACK\n\nOh, the convoluted world of Apple! Neither can you live without an iDevice nor can you live with it. -Even more so, if you're a Linux user. Getting the pretty penguin to tango with Apple's ever-expanding product line has always been a hassle-filled path. From the early days of the iPod, Linux developers have been working hard to make each and every Apple device work with the penguinian OS out of the box. Though they've succeeded to a certain extent, we'll all have to admit that there's a lot of work to be done.\n\nOpenVPN is an open source secure tunnel application. It creates an encrypted tunnel between a client and a server. Any data passing through the tunnel is immune from being read by anyone that is able to intercept the data. In this case, the client will be your Android phone and the server will be a server that you own running OpenVPN.\n\nThis is extremely valuable because it means that all of your data is unreadable by anyone between you and your server. This includes the suspect WiFi network you just connected to, your phone company, or even your office.\n\nOpenVPN has a (well-deserved) reputation for being difficult to setup and configure. However, we will employ some additional tools to get an OpenVPN server up and running in a couple of minutes and get your phone connecting and routing all data to it in a few more.\n\nAll you need for this guide is:\n\nA server running Ubuntu 16.04 (newer versions may work but I have only tested this on 16.04).\n\nAn Android phone.\n\nYour server will need a public IP address that does not have anything bound to port 443. This is the port that HTTPS usually binds to so if you are running a website from this IP then the following guide will not work.\n\nWe will use port 443 because it is frequently allowed outbound through firewalls and the OpenVPN traffic will most likely be mistaken for simple HTTPS traffic.\n\nVnStat is a free, open source, light-weight, and console-based Network Traffic monitor. Using this tool, we can easily find how much network bandwidth is consumed and display the result hourly, daily, monthly, or for specific time period. It gathers the usage details of a single or multiple Network interfaces and displays the summary in the command line. We can use this tool to calculate the approximate amount of Internet bandwidth usage per month or per day or for a particular period of time. In this tutorial, we will see how to monitor Network bandwidth in Linux and BSD using vnStat.\n\nThe software racket is like anything else: there are loud projects that get a lot of attention but don't actually get much done, there are heavyweights that move in and make sure things get done, and there are the quiet ones that work with their head down, diligently, only to turn up at the finish line with a work of art. In this analogy, Kdenlive is my personal heavyweight, but Flowblade has lingered in the background, developing and improving into a surprisingly effective and efficient video editor for Linux.\n\nToday I decided to join the videos taken from my smartphone and make a single movie-like file with audio. But the thing is some videos are shot in portrait mode and some are shot in landscape mode. Before joining the files, I thought that it would be better to align every video files in the same orientation (i.e mode). Of course, there are many GUI-based tools and media players, like Smplayer, VLC, have a built-in feature to rotate videos. But I prefer a commandline utility. I know how to use FFMpeg to perform various operations such as converting files to another format, cropping, splitting and joining files and many. I already have compiled most commonly used FFMpeg commands for beginners and posted them in this guide. However, I do not know how to rotate videos using FFMpeg until today. If you ever wanted to rotate videos using FFMpeg, follow the steps given below.\n\nHome Recording with Ubuntu Studio Part One: Gearing Up\n\nTwenty years ago, the cost of building a studio for the creation of electronic music was pricey, to say the least. The cost of a computer that was suitable for multimedia production could cost the average musician between $1,000 and $2,000. Add in the cost of recording software, additional instruments and equipment, and one could easily spend between $5,000 and $10,000 just to get started.\n\nHome Recording with Ubuntu Studio Part Two: Install-O-Rama\n\nHome Recording with Ubuntu Studio is a three part series of articles that discusses how to create an affordable home recording studio with free and open source software. In Part One: Gearing Up, I discussed the hardware components that are integral to home studio recording, and demonstrated how you can acquire this equipment for under $1,000. In part two of the series, we will start to go into depth about the software aspects of the studio. First, I will walk you through an installation of Ubuntu Studio, a Linux-based operating system that was made for content creation. Next, I will install additional software from the KXStudio repositories and finally, I will make some adjustments to the installation to improve its user experience.\n\nOBS Studio is a free and open source cross-platform app with which you can create video records of your desktop screen and also live stream directly. You can use it to conveniently share your gaming, art, entertainment activities with Twitch.tv, YouTube, Hitbox.tv, DailyMotion, Connectcast.tv, CyberGame.tv, CashPlay.tv along with custom streaming servers free of charge! It comes with many in-house features that allow you to produce professional videos e.g. Studio Mode lets you live preview and adjust your scenes and sources before making them available for public viewing; you can choose to set any combo of hotkeys to start/stop streams or recordings, switch between scenes, mute audio sources, e.t.c.\n\nGithub is an online platform built to promote code hosting, version control and collaboration among individuals working on a common project. Projects can be handled from anywhere through the platform. (Hosting and reviewing code, managing projects and building software with other developers around the world) The GitHub platform offers project handling to both open-source and private projects.\n\nFeatures offered in regards to team project handling include; GitHub Flow and GitHub Pages. These functions make it easy for teams with regular deployments to in handling the workflow. GitHub pages, on the other hand, provides a place for showcasing open source projects, displaying resumes, hosting blogs among others.\n\nThis gitlab tutorial for beginners is actually a collection of various tutorials that we have already published & purpose of writing this tutorial is actually to make it easy for readers to get all the tutorial they need regarding Git & Gitlab at one place, sort of like single reference point for Git/Gitlab. Here we are going to list out all the things necessary to make you acquainted with Git & Gitlab. We will also be updating this article to add the new tutorials that we publish regarding Git & Gitlab.\n\nDevelopers are frequently looking for integrated developer environments (IDEs) that meet specific needs or those that offer a broad range of features and supported languages to use on the regular. There are tons of IDEs to choose from, each with a distinct set of functions, features and tools to streamline the workflow. There's an IDE for practically any programming language you want to work with, while some IDEs support practically every language known to man either natively or by extending capabilities with plug-ins or add-ons. There are also many cross-IDE integrations, with tools building, enhancing and stacking for some of the most impressive, yet incredibly flexible, functionality in the development realm.\n\nIn this tutorial, we will explain how to create a new user and grant permissions to that user in MySQL. MySQL is an open source relational database managed system(RDBMS) that enables users and applications to store, organize, and retrieve their data. It has an access control system that consists of permissions that the users can have within tables and databases, we will take a look at some of the options this access control system offers later in this tutorial.\n\nThis article consolidates information from several sources into the format I use to setup MySQL Master/Master Replication. The beauty of Linux and open source is that there are many different ways to do this. Please take a look at my references and use them to accommodate any needs you may have. If you have any questions or run into any issues feel free to drop me a line in the comments\n\n​Codeblocks is an Integrated Development Environment (IDE) for programmers and developers. It comes with predefined tools to develop Qt applications, plugins, console applications, etc. considering one has installed the required tools independently (eg- Qt development tools). Most IDEs come with \"project\" feature and that's the turning point because some of them requires user to create one before proceeding any further, where in some cases programming (in schools and colleges) exercise don't really need tedious task of creating and setting up \"projects\" (More to this later).\n\nRegardless of how experienced a coder you are, any software you develop can't be completely free of bugs. So, identifying bugs and fixing them is one of the most important tasks in the software development cycle. While there are many ways of identifying bugs (testing, self review of code, and more), there are dedicated software - dubbed debuggers - that help you understand exactly where the problem is, so that you can easily fix it.\n\nVER TAMBIÉN DDD QUE ES MÁS PODEROSO\n\n\"A real coder doesn't use an IDE, a real coder uses [insert a text editor name here] with such and such plugins.\" We all heard that somewhere. Yet, as much as one can agree with that statement, an IDE remains quite useful. An IDE is easy to set up and use out of the box. Hence there is no better way to start coding a project from scratch\n\nIn programming, a library is an assortment of pre-compiled pieces of code that can be reused in a program. Libraries simplify life for programmers, in that they provide reusable functions, routines, classes, data structures and so on (written by a another programmer), which they can use in their programs.\n\nFor instance, if you are building an application that needs to perform math operations, you don't have to create a new math function for that, you can simply use existing functions in libraries for that programming language.\n\nExamples of libraries in Linux include libc (the standard C library) or glibc (GNU version of the standard C library), libcurl (multiprotocol file transfer library), libcrypt (library used for encryption, hashing, and encoding in C) and many more.\n\nIf you're working with images on a computer, you're bound to eventually run into corrupted files that ruin your day. I run into this with animation renders (remember, the best practice here is to render to a sequence of image files and not a single video file). However, animation and visual effects are not the only places where you see image corruption. You can just as easily run into this in other fields. Perhaps you're a photographer and you've shot a bunch of brackets HDRI (High Dynamic Range Imaging) tone mapping and something glitches when transferring files from your camera.\n\nFirefox is one of the most used web browser in the world: it's a free and open source software built by the Mozilla foundation, and it's available for all the major operating systems. The browser has all the features that nowadays are considered standard: tabbed browsing, private navigation, a synchronization system and its functionalities can be extended using third party addons written in Javascript. In this tutorial we will see how to create, build and sign a simple web extension.\n\nJust as Internet Protocol address or IP address gives an identification to your device, similarly, the hostname is another parameter through which you can recognize your device. It is a string of human understandable characters. Unlike IP address, hostname of a PC is easy to memorize and recall. For this purpose, one should always know his PC's hostname. In this article, we will tell you how you can find your PC's hostname using Linux Terminal.\n\nPeople often need to copy or share files over the network. Many of us are used to using tools such as rsync or scp to transfer files between machines. In this tutorial, we are going to review another tool that can help you copy files between hosts in a network - Dat Copy (dcp).\n\nDcp does not require SSH to be used or configured in order to copy your files. Furthermore it does not require any configuration to securely copy your files.\n\nConnecting your Linux computer to a network is pretty straightforward, except when it is not. In this article I discuss the main network configuration files for Red Hat-based Linux distributions, and take a look at the two network startup services: the venerable network startup, and the controversial NetworkManager.\n\nLinux easily manages multiple network interface adapters. Laptops typically include both wired and wireless interfaces, and may also support WiMax interfaces for cellular networks. Linux desktop computers also support multiple network interfaces, and you can use your Linux computer as a multi-network client, or as a router for internal networks; such is the case with a couple of my own systems.\n\nFreeIPA is mainly a directory service, where you can store information about your users, and their rights regarding login, become root, or just run a specific command as root on your systems that are joined your FreeIPA domain, and many more. Although this is the main feature of the service, there are optional components that can be very useful, like DNS and PKI - this makes FreeIPA an essential infrastructural part of a Linux-based system. It has a nice web-based GUI, and powerful command line interface.\n\nIn this tutorial, I will show you how to configure an additional domain controller which is one of the key features of SAMBA 4. I will be using the existing Samba 4 server from my previous tutorial as primary domain controller. This setup provides a degree of load balancing and failover for AD services (Ldap schemas and dns ) and configuring it is really easy. We can also use this feature to scale up the environment.\n\nI listen to music all the time while working at my PC (which is much of the day). Sometimes I'm pretty much tethered to the desk for long stretches, and sometimes I wander about the office (aka house) for new ideas or just to change my perspective. When I decide to step away, I like to take my music with me. How do I do that? Sure, I could turn the music up to eleven, but the cats (and my wife) aren't too keen on hearing Devin Townsend Project at near blistering levels. And, sometimes I'm the only one in the mood for classical music.\n\nVPN, or virtual private network, is a secure method of connecting remote internet resources together as if they were under the same LAN. OpenVPN is a popular implementation that works on Linux, Windows, and Mac operating systems and can be utilized to create complex, encrypted networks between physically dispersed servers.\n\nThe OpenVPN Access Server is a solution built on top of traditional OpenVPN that is used as a complete portal for managing connections, users, and interfaces. It provides the underlying VPN instance, a web interface for managing the suite, and a client that can be used within a web browser.\n\nIn this guide, we'll install and configure the OpenVPN Access Server on a CentOS 6.5 VPS instance.\n\nIn this tutorial, LibreSwan will be installed on the Ubuntu Platform. LibreSwan is an open source implementation of the IPsec protocol, it is based on the FreeSwan project and is available as ready to use the package on RedHat based Linux distributions. However, detailed instructions are given in the source code of the project to compile it on other Linux platforms. After the installation process, a gateway to gateway based IPsec VPN will be configured to secure data from sender to receiver peers.\n\nDetails about the IPsec protocol are given in our previous article. However, a brief information about the two parts of the IPsec protocol with respect to LibreSwan is explained below.\n\nMetasploit was created by H. D. Moore in 2003 as a portable network tool using Perl. By 2007, the Metasploit Framework had been completely rewritten in Ruby.\n\nOn October 21, 2009, the Metasploit Project announced that it had been acquired by Rapid7, a security company that provides unified vulnerability management solutions. Metasploit's emerging position as the de facto exploit development framework led to the release of software vulnerability advisories often accompanied by a third party Metasploit exploit module that highlights the exploitability, risk and remediation of that particular bug. Metasploit 3.0 began to include fuzzing tools, used to discover software vulnerabilities, rather than just exploits for known bugs. This avenue can be seen with the integration of the lorcon wireless (802.11) toolset into Metasploit 3.0 in November 2006. Metasploit 4.0 was released in August 2011. In this guide we will look into the most important part of using Metasploit, how to search exploits within it! Yeah, like it or not, if you can't search, then you got nada!\n\nNetworkManager is the default service in Fedora for interfacing with the low level networking in the Kernel. It was created to provide a high-level interface for initializing and configuring networking on a system without shell scripts. Over the past few Fedora releases, the NetworkManager developers have put in a lot of effort to make it even better. This article covers some of the major improvements that have been implemented in NetworkManager over the past few Fedora releases.\n\nThis tutorial shows how to set up a high-availability storage with two storage servers (Debian Jessie) that uses GlusterFS. Each storage server will be a mirror of the other storage server, and files will be replicated automatically across both storage nodes. The client system (Debian 8 as well) will be able to access the storage as if it was a local filesystem. GlusterFS is a clustered file-system capable of scaling to several peta-bytes. It aggregates various storage bricks over Infiniband RDMA or TCP/IP interconnect into one large parallel network file system. Storage bricks can be made of any commodity hardware such as x86_64 servers with SATA-II RAID and Infiniband HBA.\n\nIP addresses (IPv4) are a scarce resource that is shared by different users and devices. Having an IP address conflict means that there are more than one network device or computer that claims the same IP address. IP address conflict may occur when a DHCP server has assigned an IP address to one computer, and the same IP address happens to be statically assigned to another network device by someone.\n\nIP address conflict can also happen when there are more than one DHCP server (typically built in a router) hooked up to the local network, autonomously giving out IP addresses from the same subnet. If you are having flaky network connectivity, and suspect it is due to IP address conflicts, you can use a tool called arp-scan to detect IP address conflicts in Linux.\n\narp-scan sends out ARP packets on local network to collect (IP address, Ethernet MAC address). If there is more than one Ethernet MAC address claiming the same IP address, it means there is an IP conflict.\n\nWhen you created the users account with a default password, you have to force the users to change their password on next login.\n\nThis option is mandatory when you were working in organization because old employees might know the default password and they may or may not try to malpractices.\n\nThis is one of the security complaint so, make sure you have to take care this in the proper way without any fail. Even your team members can do the same.\n\nRsyslog is a free and opensource logging utility that exists by default on CentOS 8 and RHEL 8 systems. It provides an easy and effective way of centralizing logs from client nodes to a single central server. The centralization of logs is beneficial in two ways. First, it simplifies viewing of logs as the Systems administrator can view all the logs of remote servers from a central point without logging into every client system to check the logs. This is greatly beneficial if there are several servers that need to be monitored and secondly, in the event that a remote client suffers a crash, you need not worry about losing the logs because all the logs will be saved on the central rsyslog server. Rsyslog has replaced syslog which only supported UDP protocol. It extends the basic syslog protocol with superior features such as support for both UDP and TCP protocols in transporting logs, augmented filtering abilities, and flexible configuration options. That said, let’s explore how to configure the Rsyslog server in CentOS 8 / RHEL 8 systems.\n\nThe day has come where the security of your data be it on a server, a work desktop, or your personal machine is one of the single most important issues you can take on. Whether you're hoping to secure company information or private email to clients, friends, and/or loved ones, you need to understand how to ensure your data cannot easily be read by the wrong people.\n\nTCP Wrapper is an open source host-based ACL (Access Control List) system, which is used to restrict the TCP network services based on the hostname, IP address, network address, and so on. It decides which host should be allowed to access a specific network service. TCP Wrapper was developed by a Dutch programmer and physicist Wietse Zweitze Venema in 1990 at the Eindhoven University of Technology. He maintained it until 1995, and then released it under BSD License in 2001. In this brief guide, I will explain how to restrict access to Linux servers using TCP Wrappers.\n\nLinux is well known for being a highly secure platform. One of the reasons for said security is the Netfilter system. For those that don't know, Netfilter is a framework, provided by the Linux kernel, that allows for various networking operations, such as packet filtering, network address translations, port translation, and the ability to block packets from reaching specific locations. For most distributions, Netfilter is implemented through the user-space application, iptables. Although many would agree that iptables is the most powerful security tool you can work with, along with that power comes a level of complexity that stumps many an IT administrator.\n\nIn this tutorial, we are going to show you how to set up a firewall with iptables on a Linux VPS running Ubuntu or CentOS as an operating system. Iptables is an administration tool for IPv4 packet filtering and NAT and it is used to set up and manage the tables of IPv4 packet filter rules in the Linux kernel.\n\nProperly configuring and setting up a firewall is one of the most important and crucial things you need to do to secure your server.\n\nThis guide explains a few different ways to find which service is listening on a particular port in Linux. Most of you know the default port of popular services or processes. For example, the default port of Apache is 80, FTP default port is 21 and SSH default port is 22. You can find the port names and numbers in Linux as described in this guide. The default port numbers can also be changed to any custom ports to secure a Linux server. For instance, the following guides describes how to change the defaults port of Apache, FTP and SSH to different port.\n\nIf you have been following the NMAP articles I have written then you may have noticed something important about the scans. NMAP prefers to perform a Ping. A Ping to NMAP is a test to verify that the system to be scanned is really on-line and exists. If NMAP is to scan multiple systems on a subnet, or a whole subnet, then it will first test which systems are available to scan.\n\nDid you knew every time you fill in your username and password on a website and press ENTER, you are sending your password. Well, of course you know that. How else you're going to authenticate yourself to the website?? But, (yes, there's a small BUT here).. when a website allows you to authenticate using HTTP (PlainText), it is very simple to capture that traffic and later analyze that from any machine over LAN (and even Internet). That bring us to this website password hacking guide that works on any site that is using HTTP protocol for authentication. Well, to do it over Internet, you need to be able to sit on a Gateway or central HUB (BGP routers would do - if you go access and the traffic is routed via that).\n\nA server being compromised or hacked for the purpose of this guide is an unauthorized person or bot logging into the server in order to use it for their own, usually negative ends.\n\nDisclaimer: If your server has been compromised by a state organization like the NSA or a serious criminal group then you will not notice any problems and the following techniques will not register their presence.\n\nHowever, the majority of compromised servers are carried out by bots i.e. automated attack programs, in-experienced attackers e.g. \"script kiddies\", or dumb criminals.\n\nThese sorts of attackers will abuse the server for all it's worth whilst they have access to it and take few precautions to hide what they are doing.\n\nThe Pentbox is a safety kit containing various tools for streamlining PenTest conducting a job easily. It is programmed in Ruby and oriented to GNU / Linux, with support for Windows, MacOS and every systems where Ruby is installed. In this small article we will explain how to set up a honeypot in Kali Linux. If you don't know what is a honeypot, \"a honeypot is a computer security mechanism set to detect, deflect, or, in some manner, counteract attempts at unauthorized use of information systems.\"\n\nIn our earlier tutorial, we have learned to install wildfly 10.1.0. in this tutorial, we will learn to create a load-balancing wildfly cluster. We will be using wildfly verison 10.1.0, which is the latest wildfly version at the time of writing this tutorial. Wildfly supports clustering out of the box & we need not install any special services/packages to get wildfly cluster working.\n\nSquirrelmail is one of the most popular Web-based email clients written in PHP. It has built-in pure PHP support for IMAP and SMTP, and it is designed to render all pages in pure HTML 4.0 with no JavaScript required, for maximum compatibility across browsers. Its installation and configuration is pretty simple. Note that if you have a VPS with WHM/cPanel or DirectAdmin, Squirrelmail comes preinstalled and ready to use with these control panels.\n\nIn this tutorial, we will examine the process of installing Zimbra mail server in CentOS Linux environment. Zimbra is my personal favorite when it comes to open-source mail servers as it comes with a number of useful features such as built-in calendar support, email filtering rules, a modern interface for both users and admins, spam and malware scanners, etc. Besides server-side components, Zimbra also boasts of a full-featured web-based email client by which users can access emails, group calendars and document sharing in collaboration mode.\n\nIf you manage an Apache server, you may be noticing a large amount of TIME_WAIT connections all of the time. Don't get me wrong, TIME_WAIT is a good thing.. it basically means that your server has closed the connection, but it's being kept around so any delayed packets matched to the connection can be handled properly. We can reduce them, however.\n\nThere are times when you may need to compare two files to check if they are the same. For instance, if you have two or more servers all running the same Operating System (OS) and on one server a file is causing issues then you can see if they are different. If they are different then it may be as simple as copying the one file from the working server to the failing server.\n\nConfigure System Locale on Debian 9We will show you how to configure system locale on Debian 9. The system locale defines the language and country-specific setting for the programs running on your system and the shell sessions. You can use locales to see the time and date, numbers, currency and other values formatted as per your language or country. Configuring system locale on Debian 9 is a fairly easy task and it should be configured in less than 10 minutes.\n\nIf you are new to this series (and to Linux), take a look at our first installment. In that article, we worked our way through the tree-like structure of the Linux filesystem, or more precisely, the File Hierarchy Standard. I recommend reading through it to make sure you understand what you can and cannot safely touch. Because this time around, I'll show how to get all touchy-feely with your directories.\n\nThe Linux command line may be a bit hard to learn, but it's worth it. Reason being, it's so powerful that you can do almost everything with it that you can otherwise do using UI. At HowtoForge, we have already discussed a plethora of command line tools (that let you do different kind of operations), and here, in this tutorial, we will discuss a utility which you can use to shut your system down.\n\nThe cat command is one of the most widely used command in Linux. The name of the cat command comes from its functionality to concatenate files. It can read and concatenate files, writing their contents to the standard output. If no file is specified or if the input file name is specified as a single hyphen (-) it reads from the standard input.\n\nAt any given time on the command line, you are in a directory. So it speaks for itself how integral directories are to the command line. In Linux, while the rm command lets you delete directories, it's the mkdir command that allows you create them in the first place. In this tutorial, we will discuss the basics of this tool using some easy to understand examples.\n\nIf you are a Linux command line user, and your work involves playing with text files, you should know (if not already) that there are many command line utilities that may be of great help to you in different situations. For example, there exists a tool dubbed 'uniq' that reports or even deletes repeated lines in a file.\n\nIn this article, we will discuss 'uniq' through easy to understand examples. But before we do that, it's worth mentioning that all examples and instructions mentioned in this tutorial have been tested on Ubuntu 16.04LTS.\n\nIf you've been using the command line for a long time, it's easy to take the commands you use every day for granted. But, if you're new to the Linux command line, there are several commands that make your life easier that you may not stumble upon automatically. In this article, I cover the basics of two commands that are essential in anyone's arsenal: sort and uniq.\n\nPretty much regardless of your role, if your regular work involves doing stuff on the command line in Linux, you may find yourself in a situation where-in you'd want to compare two files using a command line utility. There are several command line tools that let you do this, and one among them is the 'cmp' command.\n\nIn this tutorial, we will discuss 'cmp' through easy to understand examples. But before we do that, it's worth mentioning that all examples and instructions mentioned in this tutorial have been tested on Ubuntu 16.04LTS.\n\nWhile working on the command line in Linux, one thing that you'd have probably missed is how the output gets displayed in terminal. I mean, the way it fits the available area. Have you ever found yourself stuck in a situation where-in the requirement was to make sure the output of a command fits a particular width?\n\nSometimes, while working on the command line in Linux, you might want to create a new file. Or, there may be times when the requirement is to change the timestamps of a file. Well, there exists a utility that can you can use in both these scenarios. The tool in question is touch, and in this tutorial, we will understand its basic functionality through easy to understand examples.\n\nIf you are a Linux newbie, and your work involves doing stuff through the command line, then it goes without saying that you must be spending a lot of time on the terminal window. As you'd likely agree, there are some commands that we tend to use very frequently, like ls, cp, and rm. However, there are some others that are comparatively less used. In this tutorial, we will discuss one such, less frequently used command: Exit.\n\nGREP is a command line search utility or tool to filter the input given to it. Grep got its name from ed editor as g/re/p (global / regular expression / print). Grep command can improve a command output by filtering out required information. Grep will become a killer command when we combined it with regular expressions. In this post we will see how to use grep in a basic way and then move on some advanced and rarely used options. In our next couple of posts we will see what grep can do with the help of regular expressions.\n\nThe Linux xargs command may not be a hugely popular command line tool, but this doesn't take away the fact that it's extremely useful, especially when combined with other commands like find and grep. If you are new to xargs, and want to understand its usage, you'll be glad to know that's exactly what we'll be doing here.\n\nDo you ever know that Linux is not just for serious work for admins and professionals, but you can play word games, speak to your Linux terminal or create beautiful ASCII pictures etc.? Yes, Linux is really fun, if you know the correct commands. Let's look at some of these commands that can bring a smile to your face instantly or which can be used at the end of a day-long hectic work to ease the pressure and bring some relief on to you, so that you can leave home in a good mood.\n\nIn this tutorial, we are going to discuss how we can view or modify date & time values in our RHEL/CentOS 7 servers. We are going to discuss 3 commands which we can use to view/modify date & time for our systems. Before we discuss the commands, let's learn in brief about two different types of clocks available i.e. system clocks & Hardware clocks,\n\nWe all are aware about the most popular command called 'useradd' or 'adduser' in Linux. There are times when a Linux System Administrator asked to create user accounts on Linux with some specific properties, limitations or comments.\n\nIn Linux, a 'useradd' command is a low-level utility that is used for adding/creating user accounts in Linux and other -like operating systems. The 'adduser' is much similar to useradd command, because it is just a symbolic link to it.\n\nSometimes, while working on the command line in Linux, you need to know more about a file. For example, you may want information like file's size, inode number, access permissions, time of last access or modification, and more. You'll be glad to know that there exists a command line utility stat that provides all this information in one go.\n\nThe terminal is a very powerful tool, and it's probably the most interesting part in Unix. Among the plethora of useful commands and scripts you can use, some seem less practical, if not completely useless. Here are some Bash commands that are fun, and some of them are useful as well.\n\nYo lo hago con [CTRL]+[Z] para detener el proceso y luego doy fg (foreground) si quiero que vuelva a la vida o bg si quiero que siga funcionando sin verse (background)\n\nLet us you say ran a program. You didn't know it took so long to finish. It keep running several minutes. You don't want to wait that much long. Because, you have some other important programs to run on the queue. Have you ever been in a situation like this? No worries! I just found a simple trick to suspend a process and resume it later. What I am going to do is pause the currently running process, do some other important tasks, and then resume the stopped processes once I completed all processes.\n\nThis can be very useful when you have less RAM or Processor to do multi-task. You can pause the running processes at any time, and resume them later when you're ready, without having to start them all over again. Sounds good? Indeed! This brief tutorial describes how to suspend or pause a running process and resume it later in -like operating systems.\n\nLet's say you're editing a configuration file in the Linux \"vi\" editor, and suddenly need to look up some data in another file? On a regular GUI system, this wouldn't be a problem. You just open the second file, check when you need, and then switch back to the first program. On a command line, it isn't that simple. Executing a process via the CLI blocks further input on any other program. Take this sleep command, for example,:\n\nNowadays, I spend more time in Terminal, trying to accomplish more in CLI than GUI. I learned many BASH tricks over time. And, here is the list of useful of BASH shortcuts that every Linux users should know to get things done faster in their BASH shell. I won't claim that this list is a complete list of BASH shortcuts, but just enough to move around your BASH shell faster than before. Learning how to navigate faster in BASH Shell not only saves some time, but also makes you proud of yourself for learning something worth. Well, let's get started.\n\nLinux depends upon administrative user permission. Without the elevated permission of root, many commands could not be run. For distributions, such as Red Hat, gaining root permissions means changing to the root user with the command su. Other distributions, such as Ubuntu Linux, opt for a different route. That route is sudo. By taking advantage of the sudo system, an administrator gains far more control over who can do what on a system. An added benefit of using the sudo command is that all sudo incidents are logged (Red Hat-based systems log to /var/log/secure whereas Debian-based systems log to /var/log/auth.log).\n\nToday, I came across an useful web service called ExplainShell that helps you to find what each part of a Linux command does. Of course, you can refer man pages or do a quick google search to know about a Linux command. However, ExplainShell breaks down the long and confusing commands and tells you exactly what each part does. All you need to do is just copy and paste a Linux command in ExplainShell website, and it will instantly display what each part of a Linux command means. Each part of the commend is explained on its own in a box layout, and highlighted when you move the mouse cursor over it. ExplainShell actually takes the details of the each command from manpages. Instead of going through the manpage of a command manually, you can use ExplainShell to get the details of any commandline argument faster and easier.\n\nI try to be a peaceful soul, but some things make that difficult, like tiny console fonts. Mark my words, friends, someday your eyes will be decrepit and you won't be able to read those tiny fonts you coded into everything, and then you'll be sorry, and I will laugh.\n\nFortunately, Linux fans, you can change your console fonts. As always, the ever-changing Linux landscape makes this less than straightforward, and font management on Linux is non-existent, so we'll muddle along as best we can. In this article, I'll show what I've found to be the easiest approach.\n\nExecutable and Linkable Format\n\nAn extensive dive into ELF files: for security incident response, development and better understanding\n\nWe often don't realize the craftsmanship of others, as we conceive them as normal. One of these things is the usage of common tools, like ps and ls. Even though the commands might be perceived as simple, under the hood there is more to it: ELF binaries. Let's have an introduction into the world of this common file format for Linux and -based systems.\n\nIdentify processes that make heavy use of the CPU and memory, set the priority of processes renice and kill processes. Traditionally, in any unix 'ps' it is the command to identify the processes with their respective characteristics, qualities and states. This traditional command in GNUs systems supports 3 types of syntax for the parameters, namely: UNIX, BSD and GNU. To simplify this post will use the syntax which allows grouping the various options and require.\n\nWe already knew how to check if a Linux system is physical or virtual machine. Now, it is time to find out if the installed Linux OS is either 32 bit or 64 bit. If your Linux system has GUI, it is really easy then. Just navigate to System Settings -> Details, and there you go, you will know the architecture. In CLI based Linux systems, it is bit different. This guide will explain you how to check if a Linux system is 32 bit or 64 bit. It is not that difficult.\n\nIf you have high hopes of becoming a Linux administrator, there are plenty of tools you'll need to know and know well. Some of those tools are limited to actions taken locally on the machine with which you are working: tools like iptables, make, top, diff, tail, and many more. These tools, isolated to the local machine, are invaluable to your task of managing those Linux servers and desktops. And even though GUI tools are available to help you with those tasks, understanding the command line is tantamount to understanding Linux.\n\nAs we all know, SSH is secure shell protocol which is used to securely communicate with other systems on the network. There are many chances that you want to automate tasks, such as synchronization files between two systems, automatic backup between two or more systems using your own scripts. In such cases, the two systems must be login to each other without having to enter the password manually by the user. In this brief guide, we are going to configure passwordless SSH login in -like systems. That means, we don't need to enter the password when we SSH to other system on the network.\n\nWhen you administer a Linux machine that houses multiple users, there might be times when you need to take more control over those users than the basic user tools offer. This idea comes to the fore especially when you need to manage permissions for certain users. Say, for example, you have a directory that needs to be accessed with read/write permissions by one group of users and only read permissions for another group. With Linux, this is entirely possible. To make this happen, however, you must first understand how to work with users, via groups and access control lists (ACLs).\n\ngcp (Goffi's cp) is an advanced file copier tool, heavily inspired from the traditional cp command utility, but with some additional features. It is completely free and open source software, released under GNU General Public License. One of the issue I have often noticed while using cp command is It doesn't display the copy progress. Say for example, when I am copying a large file, I really don't know how long it is going to take, or what is the currently copied percentage. Other than looking at the blinking cursor icon in the Terminal and the hard drive indicator while copying large files, I have no idea whether copying progress is really going on or not. Here is where gcp comes in handy. Unlike the cp command, gcp offers the following high-level functionalities:\n\nDisplays the copy progress indicator, with estimated time, current file speed etc.\n\ngcp continue copying even when there is an issue. It will just skip the file with problem, and go on and copy the next files.\n\nIt can copy both single or multiple files or folders.\n\ngcp logs all its action. So, we can easily know which files have been successfully copied.\n\nIf you accidentally cancels a copy process, it will keep the record of it. Instead of deleting the contents, it will keep the partially copied content. You can then run the copy process again, and it will copy the rest of the files where you left it.\n\nIf you launch a copy when an other is already running, the files are added to the first queue, this avoid your hard drive to move its read/write head all the time.\n\nYou can save a list of files you copied and copy them again later from that list. It will be very useful when you want to copy the same files to multiple targets.\n\n​Did you know that Android is based on Linux kernel? I bet you didn't. Although many Linux users know it and no matter how hard Google denies it, they still have to accept it that what they modified and used in Android was Linux Kernel. But we are not here to fight on some unsolvable problems. As you now where is Linux, there is Terminal.\n\n​The terminal is most of the times termed as Swiss-Knife of Linux based OS, cause through the power of terminal you can do almost anything on an OS, you can even play games on it, install software and much more cool stuff.\n\nHowever, the power of terminal isn't that powerful in Android. Still, you can do many cool things on android using Linux terminal. Here is a small guide featuring some of the best uses of terminal. Let's go.\n\nHow can I see the content of a log file in real time in Linux? Well there are a lot of utilities out there that can help a user to output the content of a file while the file is changing or continuously updating. Some of the most known and heavily used utility to display a file content in real time in Linux is the tail command (manage files effectively).\n\nLinux and laptop battery management have a complicated past. For years Linux has been notoriously bad at managing battery life. That's partly because such a huge amount of the work that goes into Linux goes into the server space. It's also because it's hard to guess what configuration a user's going to set up. Are you running Plasma on Gentoo and compiling software from scratch? Kiss your battery life goodbye. Do you have Ubuntu with LXQT on your laptop? You stand a good chance of that battery lasting a while.\n\nIt happens to everyone, and usually only when it matters the most. You might be gearing up for a family Christmas video chat, settling in for a movie night on your big screen TV, or getting ready to record a tune that popped into your head and needs freeing. At some point, if you use a computer, sound is going to need to be routed.\n\nI often ran out of memory. This is where Early OOM comes in help. For those wondering, it will kill the largest process in an unresponsive system when it has absolutely no other choices. Early OOM checks the amount of available memory and free swap 10 times a second. If both are below 10%, it will kill the largest process.\n\nThis tutorial explains how to setup and use an SVN repository server on CentOS. Before I start, let me explain what actually SVN represents and what it is used for. SVN is actually an abbreviation of SubVersion which had been created by the Apache software developer. It enables you to create and maintain your own repository and gives fine-grained access rights to a dedicated user.\n\nIt is very effective for controlling the versioning of files, documents or folders. It is very useful for any group or team that intends to start their own software projects.\n\nThe Virtualization Technology enables your processor to act as a number of independent computer systems. This enables several operating systems to be running on the same machine at the same time. Whenever you want to install virtualization applications on your Ubuntu system such as VMware Workstation, VirtualBox etc., you should first verify if your system supports virtualization and if it is enabled. Only then you can run virtual machines using a single processor.\n\nAs a Linux administrator, sometimes, you might be wondering whether you are working on a physical or virtual machine. Most of the time, you will be accessing and managing your servers remotely. You will not always have physical access of your servers, and you may not actually know where is your server located. However, it is possible to check if your Linux system is physical or virtual using couple of Linux utilities, no matter where it is located. This guide explains how to check whether the Linux system you're working on is a physical server or a virtual server.\n\nEvery computer user has been there, some more than once - that moment when you realize that you just deleted the wrong file or bunch of files. The recycle bin is useful for these kind of situations where files you delete are seemingly available in the recycle bin and can be restored later. There are a lot of situations where a deleted file doesn't go to the recycle bin, and this article will discuss how you can recover deleted Windows files with Linux, specifically Ubuntu. The techniques discussed here will work if you dual boot Windows and Linux or if you have a Ubuntu Live CD."
    }
}