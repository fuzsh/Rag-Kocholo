{
    "id": "dbpedia_7277_1",
    "rank": 55,
    "data": {
        "url": "https://brainhub.eu/library/open-source-licenses-to-avoid",
        "read_more_link": "",
        "language": "en",
        "title": "Steps to Prevent the Legal Risk [2023]",
        "top_image": "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/62bafe029f5ec76e35bcdb93_open-source-licenses.jpg",
        "meta_img": "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/62bafe029f5ec76e35bcdb93_open-source-licenses.jpg",
        "images": [
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/64d924cd97d68df767e24616_open.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/64d9251b8df3121f6a429d26_close.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd37169874049646b27_brainhub-logo.svg",
            "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/62dcdc78664b19d7c5523cb1_open-source-licenses-comparison.png",
            "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/6290cc0aec76f45332492207_open-source-licenses-to-avoid-dependencies-1.png",
            "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/62dcdcb30125d6f990c52f8f_open-source-licenses.png",
            "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/6290cc49ec76f476a149543c_open-source-licenses-to-avoid-license-auditor-1.png",
            "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/667b1d323f9e61d8dc40fc90_Projekt%20bez%20nazwy%20(7).jpg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd3716987d8ec646b5d_github-logo.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd37169879f19646b60_linkedin-logo.svg",
            "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/62692989e08e8651c846ce3f_author-olga.jpeg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd3716987d8ec646b5d_github-logo.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd37169879f19646b60_linkedin-logo.svg",
            "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/667b1d323f9e61d8dc40fc90_Projekt%20bez%20nazwy%20(7).jpg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd3716987d8ec646b5d_github-logo.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd37169879f19646b60_linkedin-logo.svg",
            "https://cdn.prod.website-files.com/622fa4d65a5fab0c3465af07/62692989e08e8651c846ce3f_author-olga.jpeg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd3716987d8ec646b5d_github-logo.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd37169879f19646b60_linkedin-logo.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/625aa0ebb22230ed5f05976b_chevron.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/622f3bd37169874049646b27_brainhub-logo.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/64d88a2f5436d9a10d97eb1a_code.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/64e32b87ab7426b07f1a32fd_li-logo.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/64e32b834148b96fd3ade620_x-logo.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/64d88a2f2f7859038ceb10cb_fb.svg",
            "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/64d88a2fb021d1d84c84052b_clutch-icon.svg"
        ],
        "movies": [
            "https://www.youtube.com/embed/ENV0Tyve9bg"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Using OSS licenses wrong can force you to publish your whole product as an open source. Learn which open source licenses to avoid.",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.prod.website-files.com/622f3bd37169876d51646b17/6406ed90c072457dceb844a7_bh-favicon.png",
        "meta_site_name": "",
        "canonical_link": "https://brainhub.eu/library/open-source-licenses-to-avoid",
        "text": "â\n\nThis visualization presents about 1600 dependencies that occur every time you set up a new React app.\n\nEach one of them can have a different license.\n\nTracking them manually is virtually impossible. Not tracking them at all could have legal consequences.\n\nSo how can you ensure license compliance and avoid legal risks painlessly?\n\nGrasp the essence and intent of license types and choose a tool to help you manage them.\n\nWe explain it below. Letâs dive in.\n\nHow do software licenses work?\n\nLetâs start with the fact that every piece of code is licensed. And a license basically means you can use the code if you follow its terms. It defines the responsibilities for those who use and distribute the code.\n\nMost licenses respond to a particular problem and were created because there was a loophole in a system of law.\n\nAnd your code is full of them. The deeper you go, the more licenses appear.\n\nFor example, you install Electron and have to add 87 packages â that means 87 license dependencies. Every single package is likely to have its own dependencies, and therefore, another license you need to comply with.\n\nAs you can see, in most cases, license management canât be done manually and when done incorrectly can create a technical debt.\n\nItâs no different with open source code. Itâs a common misunderstanding that it is free to use, but most often the packages are under a specific license. And, of course, you need to avoid breaching it. Otherwise, license litigation may end up with a very costly court suit, or you may need to release your code under the same license as the package dependency you used.\n\nWhat are open source licenses?\n\nOpen source software (OSS) licenses allow developers to share their code with others for free, as open source. They are common for components or libraries.\n\nBut every open source license has terms and conditions that tell users what they can or cannot do. A user may be required to publish specific license text when distributing the code. Each piece of software online is licensed, and that means you canât just copy-paste it into your code base.\n\nBusiness risks of using open source licenses\n\nThe problem with open source software is that there are many contributors and itâs risky to assume the main license is the only one you need to comply with.\n\nA componentâs license doesnât necessarily apply to each file and even each line of code. By that, any component may be dependent on lots of licenses and you wonât be able to identify it without an in-depth investigation. Plus, each type of license means different obligations.\n\n<span class=\"colorbox1\" fs-test-element=\"box1\"><p><strong>Tip:</strong></p><p>If youâre developing a React app and are looking for help, check our list of top React development companies â itâs safe to say those vendors understand the license issues. And here you can find tips on setting up a software development partnership.</p></span>\n\nWhat are the potential consequences of non-compliance?\n\nWhen someone wants to buy your company or buy your SaaS software, they will look at your license agreement to make sure everything works. After spotting problems during the license audit, the buyer may fall back.\n\nOther potential problems include:\n\nbeing sued for financial liability by the creator of the component,\n\nhaving to rewrite major part of the product,\n\nhaving to publish your software as open source (on the same license you didnât comply with),\n\ngetting penalties and restrictions on selling your software until the compliance is met,\n\nlosing reputation and getting negative press coverage\n\nImagine it happening in a sensitive industry like fintech â thatâs why itâs key to work with reliable development partners that understand both the industry and risk, and know how to mitigate it. (Check out our comparison of the best fintech development vendors, if that sounds like your cup of tea.)\n\nIn general, the later you discover the problematic dependency, the more costly it will be to resolve this issue.\n\nItâs important to have processes and tooling in place to manage all the dependencies and licenses in your code and to be aware of how various types of licenses work.\n\n<span class=\"colorbox1\" fs-test-element=\"box1\"><p>Tip:<p></p>Prevent the business risk of using open-source licenses easily with the License Auditor â a free tool that tracks and validates licenses in your code.</p></span>\n\nMajor types of open source licenses\n\nProprietary licenses â users are provided with operational code and cannot alter the software freely. Itâs illegal to copy, modify, or distribute the software. This is the most restrictive license type.\n\nCopyleft licenses â also referred to as reciprocal licenses or viral licenses. They require you to release any code you make under the same copyleft license terms to be able to distribute and modify the code.\n\nGNU General Public License (GPL) 2.0\n\nGNU General Public License (GPL) 3.0\n\nGNU Affero General Public License 3.0\n\nLesser general public licenses â you need to link an LGPL-licensed library with your own code to be able to release your software under any license.\n\nGNU Lesser General Public License (LGPL) 2.1\n\nGNU Lesser General Public License (LGPL) 3.0\n\nSemi-permissive licenses â these licenses require you to make the code modifications available under the terms of the given license.\n\nArtistic License 2.0\n\nCommon Development and Distribution License\n\nMicrosoft Public License\n\nMozilla Public License (MPL) 1.1\n\nPermissive licenses â these licenses have some requirements for distributing and modifying the software, preserving license notices, copyrights or trademarks. The restrictions are minimal.\n\nApache License 2.0\n\nBSD License 2.0\n\nCode Project Open License 1.02\n\nISC License\n\nMIT License\n\nPublic domain â anyone can use, modify or incorporate code from this software into an application. Companies should be careful about the code quality and security standards.\n\nHigh risk â open source licenses to avoid\n\nGNU General Public License (GPL) 2.0 â to be able to copy, distribute and modify the software, you need to track changes and dates in source files. Any modifications must be made available under GPL-licensed code.\n\nGNU General Public License (GPL) 3.0 â to be able to copy, distribute and modify the software, you need to track changes and dates in source files. Any modifications must be made available under GPL-licensed code.\n\nGNU Affero General Public License 3.0 or later â you can distribute modified versions if you track the changes and the date when you made them. Like with other GNU licenses, derivatives need to be licensed under AGPL.\n\nGNU Lesser General Public License (LGPL) 2.1 â you may copy, distribute and modify the software if you license the modifications under LGPL-2.1. Anything statically linked to the library can only be redistributed under LGPL. Applications that use the library donât have to be.\n\nGNU Lesser General Public License (LGPL) 3.0 â you may copy, distribute and modify the software if you license the modifications under LGPL. Modifications or anything statically linked to the library can only be redistributed under LGPL. Applications that use the library donât have to be.\n\nWhat is the most strict open source license?\n\nGNU General Public License (GPL) and and GNU Affero General Public License (AGPL) are the most restrictive open-source licenses.\n\nWhich open source licenses are bad?\n\nYou need to be careful about a few restrictive licenses, like GPL 3.0 or AGPL. In the worst-case scenario, you may be required to release your software under the same license, royalty-free.\n\nHowever, we shouldn't say these licenses are bad. They cause a legal risk or can make you rewrite the whole product, but only if you don't follow the rules associated with them.\n\nThe key in managing licenses is to understand how they work, follow their rules, and ideally use software that helps to track the licenses in your product, so as not to break the law or cause problems to your product through inattention.\n\nMedium risk licenses\n\nSemi-permissive licenses most often require you to make the code modifications available under the terms of the given license.\n\nArtistic License 2.0 â it allows you to distribute or sell modified versions as long as you maintain access to the original version and publish modifications.\n\nCommon Development and Distribution License â you can distribute binaries under a proprietary license, as long as original and modified source code under CDDL is made available.\n\nMicrosoft Public License â you need to link the license and existing copyrights to use the software freely. This license can be used only with compatible licenses.\n\nMozilla Public License (MPL) 1.1 â you need to include a notice in each source file. This license is incompatible with GPL.\n\nLow risk licenses â permissive licenses\n\nPermissive licenses most often require you to keep the copyright notice in place.\n\nApache License 2.0 â itâs a permissive license that allows you to do what you like with the software, and all you need to do is include required notices.\n\nBSD License 2.0 â you need to include the BSD copyright notice to be able to copy, distribute and modify the code.\n\nCode Project Open License 1.02 â no software can be used for âillegal, immoral or improper purposesâ.\n\nISC License â you need to include the original copyright to be able to use the code freely.\n\nMIT License â thatâs one of the most permissive open source licenses. All you need to do is to make sure that you add a copy of the original MIT license and copyright notice to it.\n\nOpen source license management â tips\n\nWhat is open source license compliance?\n\nOSS compliance is the process when your team observes copyright notices to meet the requirements of the licenses for every component of their software. To comply, you need to know what open source components are in the codebase.\n\nWhat to do when you see that you didnât comply with the license? Most often, you have three options. First one is to simply comply with it (in the case of many licenses it just means you need to add the license file). The second is to eliminate your reliance on this licensed code. And the third is to pay and get an alternate commercial license.\n\nHow to comply?\n\n<blockquote><p>There are 300+ OSS licenses, and growing. However, the good news is that around 20 licenses account for 80% of the OSS commonly used in enterprises. So a black/whitelist of these licenses together with a scanning tool already provides a very good starting point in managing them.</p><p>â Debmalya Biswas, Director, Data Analytics & AI at Wipro</p></blockquote>\n\nIf you didnât pay much attention to licenses before, start by focusing your efforts on spotting the most restrictive licenses.\n\nThen it will be crucial to educate your development team â they need to be aware of the risk and the intentions that stand behind licenses. While preparing your process, itâs a good practice to create a white-list and a black-list of licenses.\n\nSince your code is most likely full of deep-hidden licenses, you may want to start using a software license tracking tool to spot the potential problems automatically.\n\nWhat's the future?\n\n<blockquote><p>License usage seems to be moving to projects shifting to preferring more permissive licenses. However with recent events â like those around Faker (where the author corrupted his own library) and Log4Shell (wide-spread security issue) â I believe we will see either folks going toward more control (like their own corporate OSS licenses, think Amazon and their ElasticSearch fork) or weâll maybe collectively just have a very hard learning experience. Given that most open source is also exploited and under-paid (if paid at all) we might even see changes to the operating models around how OSS is created in the first place.</p><p>â Mikael Vesavuori, Cloud Software Architect and Technical Standards Lead at Polestar</p></blockquote>\n\nSoftware license tracking tool\n\nOur developers created a License Auditor tool to help you track and validate licenses inside your project. It helps teams to comply with open-source licenses by sending notifications about potential problems.\n\nYou can find the License Auditor here on GitHub.\n\nDonât be intimidated by licenses. Be aware\n\n<blockquote><p>Iâve seen the âheadless chicken danceâ when companies either are caught with non-compliance or start thinking about it and go bananas, trying to inventory everything without tooling and go locking down usage by misguided opinion or fear.<p></p>Instead, you should help to create oversight with tools and processes to assist in the work and then to automate that in (developer-facing) toolingâwhere it matters on a day-to-day basis. Also encourage awareness either through training or through exposure, such as having in-house open source projects, something that will help making the license question into a less theoretical issue.</p><p>â Mikael Vesavuori, Cloud Software Architect and Technical Standards Lead at Polestar</p></blockquote>\n\nOpen source license compliance may seem intimidating at first, but ultimately all you need to do is to raise awareness and manage the risk.\n\nStart with understanding the intentions behind licenses, and use a software license tracking tool that sends notifications after noticing problems."
    }
}