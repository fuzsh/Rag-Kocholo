{
    "id": "dbpedia_722_3",
    "rank": 19,
    "data": {
        "url": "https://stephentrinh.medium.com/the-4-elements-of-game-mechanics-fce3166123c2",
        "read_more_link": "",
        "language": "en",
        "title": "The 4 Elements of Game Mechanics",
        "top_image": "https://miro.medium.com/v2/da:true/resize:fit:838/1*GZHbUECpRXw5RMbUCKn9Fg.gif",
        "meta_img": "https://miro.medium.com/v2/da:true/resize:fit:838/1*GZHbUECpRXw5RMbUCKn9Fg.gif",
        "images": [
            "https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png",
            "https://miro.medium.com/v2/resize:fill:88:88/2*FDB8DtS-ZH4ciGvHlPZH6Q.jpeg",
            "https://miro.medium.com/v2/resize:fill:144:144/2*FDB8DtS-ZH4ciGvHlPZH6Q.jpeg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Stephen Trinh",
            "stephentrinh.medium.com"
        ],
        "publish_date": "2020-06-08T17:01:03.354000+00:00",
        "summary": "",
        "meta_description": "As the subtitle states, this is a framework for a technical understanding of game mechanics in systems — not so much a creative one. I’ve been developing it while working on design documents for…",
        "meta_lang": "en",
        "meta_favicon": "https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png",
        "meta_site_name": "Medium",
        "canonical_link": "https://stephentrinh.medium.com/the-4-elements-of-game-mechanics-fce3166123c2",
        "text": "As the subtitle states, this is a framework for a technical understanding of game mechanics in systems — not so much a creative one. I’ve been developing it while working on design documents for various projects, and I feel like it might be useful other designers out there. Its purpose is to help analyze mechanics and give an organized format for breaking down mechanics into their most basic forms. I use it most often when I need to write up comprehensive docs for a game mechanic or system. I also use it to develop new mechanics for an existing system.\n\n4 Elements of Game Mechanics\n\nThere are 4 elements of game mechanics: quantity, spatial, state, and action. The following chart defines each of them and provides some examples of each. After the chart is an application of the framework using 2D Mario games.\n\nTo demonstrate how you might use this framework, let’s say that we’re writing up the documentation for the health system in a 2D Mario game. We can start with the metaphor, as that’s always the most visible aspect:\n\nMario turns big when he eats a mushroom. When Mario is big, if he takes damage, he turns small, and when Mario is small and he takes damage, he dies.\n\nThis might be enough for others to understand, especially if they’ve played a 2D Mario game before, but it poses several questions. How does Mario eat a mushroom? What does it mean for Mario to be big or small? How can Mario take damage? When you need to start examining the underlying mechanics, the framework comes in handy.\n\nWe can break out the mechanics into their elements, beginning with big or small. Mario’s size indicates how many hits he can take before he dies (quantity) — 2 when big, 1 when small. His size also affects how tall he is when he is standing (spatial) — 2 blocks vs 1 block. And because his size adds an additional rule to the player, i.e. they cannot grow any bigger while big, we can consider it to be a state mechanic as well.\n\nEating a mushroom and taking damage are mechanically very similar. First off, they are action mechanics: they change Mario’s state from small to big or big to small to dead. And second, they both require another entity to collide with Mario (spatial). What differentiates gaining health and taking damage depends on what that other spatial entity is. If it’s a mushroom, Mario will become big; if it’s an enemy, Mario will take damage.\n\nUsing the framework to break down the health system in a 2D Mario game gives us this summary:\n\nBig or small are state mechanics that (1) apply to Mario, (2) visually represent Mario’s health points (quantity), and (3) affect how tall Mario is when he is standing (spatial). When Mario collides with another entity (spatial), that entity may change Mario’s health state to big, to small, or to dead (action).\n\nBeing able to convert metaphors into mechanics is an important skill to have when analyzing systems. Mario’s health may appear to be straightforward on its surface, but by using the framework, it becomes clear how Nintendo was able to innovate. It is not purely a quantity-based system, where a number counts up and down. It’s a system that affects Mario’s size which affects whether or not he can run through a 1 block gap, or whether that fireball would’ve instead passed over his head if he were small.\n\nThis breakdown does not cover all aspects of the system. Obviously, it does not examine other power-ups like the flower. However, there is still analysis to be had on what’s here. For example, how is the spatial problem solved where Mario is still colliding with an enemy immediately after taking damage? Does Mario get hit again? Using the 4 elements will help you find answers to these questions.\n\nIn a future blog post, I may explore my other uses for this framework such as how to use it to come up with new mechanics for existing systems. But in the meantime, let me know what you think here or on Twitter."
    }
}