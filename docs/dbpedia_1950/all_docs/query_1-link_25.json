{
    "id": "dbpedia_1950_1",
    "rank": 25,
    "data": {
        "url": "https://www.gamedeveloper.com/business/the-making-of-i-prince-of-persia-the-sands-of-time-i-",
        "read_more_link": "",
        "language": "en",
        "title": "The making of Prince of Persia: The Sands of Time",
        "top_image": "https://www.gamedeveloper.com/build/_assets/gamedeveloper-X2EP7LQ6.ico",
        "meta_img": "https://www.gamedeveloper.com/build/_assets/gamedeveloper-X2EP7LQ6.ico",
        "images": [
            "https://www.gamedeveloper.com/build/_assets/informaLogoWhite-RZAE7EJI.png",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt8d5417b628e6b04b/656f5ed8485fda040aba11a1/Game_Developer_Logo_RGB_1.png?width=476&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blta618a42c7cf23708/66b658a99a0cd33f6bd381a1/alan_wake_2.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/bltd54c05d069c73a01/66b64fbf149e3d9fedba620d/WWTBAM_Key_Art.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/bltd709c2f6ad0896cd/657b3aae1fb1b4040a0e1821/Game_Developer_G_Logo_RGB.png?width=100&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/bltba62518415cda0e2/652fe6ddbc479f8697ef691f/default-cubic.png?width=1280&auto=webp&quality=95&format=jpg&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/bltca7b4db54bbb2163/650ebd4a589a48961a8f3046/TSOT1.JPG/?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt43f52e76a12b2db2/650ebd4fdbf7f57677f6590a/TSOT5.JPG/?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blta2ab7acf28289ae6/650ebd3ccae9f2dbf0910f24/TSOT3.JPG/?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt1abe6c75f21cfa9c/650ebd430224e2d92e4fa9b8/TSOT4.JPG/?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt0b27c322a1464042/650ebd3c2b39194442756b39/TSOT2.JPG/?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/bltd709c2f6ad0896cd/657b3aae1fb1b4040a0e1821/Game_Developer_G_Logo_RGB.png?width=400&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blta618a42c7cf23708/66b658a99a0cd33f6bd381a1/alan_wake_2.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/bltd54c05d069c73a01/66b64fbf149e3d9fedba620d/WWTBAM_Key_Art.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt72e1fd430b2e3c4a/66b3fc62e54f0f66892e0662/Game-Page-Featured_Ara-History-Untold-Inits.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt872dded7267f0d73/66b2270b894beb1889396ae2/No_More_Robots_Header.png?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt3e513253e10961b1/66abc3484ade9cc7897a8c7a/mythmatchfeatured.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt760f05cd2e85a3e4/6663488afc8ab6106bd8c3d3/download_(6).jpeg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt48e6513c62cfa302/65cfc3fc4950cc040a3bbaac/GDBlogs_Header_Center_FINAL.png?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt31bfd9d591864d9b/664660c81d14aca782976fe5/Cacao_Cafe.png?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt467d1583a31b4262/66b531981f1c5d1217feb4e7/the_garden_path_tea.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blteb71b7672da99e51/66b4ce36e4286a26f4ff7f51/controllerzoomfeatured.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/bltf9a303053ad9eb80/66b51578c988313da8a7b1bf/lastgencontrollersfeatured.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blteaee0fc3928f8d10/6669c2adf791f7bc4dfad6fa/Risk_of_Rain_2_Header.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt794bd9f470f3869d/6644c43cd4a9102530fbcd53/ironwoodfeatured1200.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt6600f76ca4cb2b68/6616b18a8b80aa036ae62497/burnoutfeatured.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt006accbcefd0006d/65fb4ba3527c48040769f704/steamsecrets.jpg?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt8d5417b628e6b04b/656f5ed8485fda040aba11a1/Game_Developer_Logo_RGB_1.png?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt1363a10229efc062/656db9e79761ff040a595688/MicrosoftTeams-image_(3).png?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt1bbfb7520e56ef03/65250cc0c5c21b80cfb55335/Game_Developer_Jobs_Logo_white.png?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt431090e6027a0c17/65250c42e4f4b80857d3c9cb/gdc_logo_(1).png?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt789019463bae70bf/6523eb443c9b45aa9da4f4b2/logo_omdia_white.png?width=700&auto=webp&quality=80&disable=upscale",
            "https://eu-images.contentstack.com/v3/assets/blt740a130ae3c5d529/blt7ac431a25be6784c/6474a0a18bdc2b0843a07db3/InformaTechBTYB_240x60.png?width=700&auto=webp&quality=80&disable=upscale"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Game Developer"
        ],
        "publish_date": "2015-11-06T00:00:00+00:00",
        "summary": "",
        "meta_description": "Ubisoft's masterful reboot of the Prince of Persia franchise was released 12 years ago today. Yannis Mallat wrote this postmortem for Game Developer magazine.",
        "meta_lang": "en",
        "meta_favicon": "/build/_assets/gamedeveloper-X2EP7LQ6.ico",
        "meta_site_name": "",
        "canonical_link": "https://www.gamedeveloper.com/business/the-making-of-i-prince-of-persia-the-sands-of-time-i-",
        "text": "This postmortem was written by Ubisoft producer Yannis Mallat for the April 2004 issue of Game Developer Magazine.\n\n*****\n\nPrince of Persia, an original creation by Jordan Mechner, was first released in the U.S. in 1989. The game, which follows the adventures of a young prince’s efforts to save a princess, is regarded by many analysts as the first true action/adventure game. The Prince of Persia franchise has seen two sequels since its conception: Prince of Persia: The Shadow and the Flame (1993) and Prince of Persia: 3D (1999). By 2001, Ubisoft felt the time had come for the return of the prince.\n\nWhen Prince of Persia was first released in 1989, it got the attention of the game industry.\n\nIt became an instant classic and laid the foundation for the action/adventure genre. The settings were strong, the storytelling was compelling, and the animations were groundbreaking. The game established new standards for what the public should and would expect from videogames to come.\n\nBy May 2001, a number of platformers had been released since the launch of the original Prince of Persia. Most of them were inspired by at least some of the elements that made Prince of Persia an important achievement. In Spring 2001, Ubisoft announced it had acquired the Prince of Persia license and gave the Montreal team a mandate to start the conceptual phase of the project.\n\nEarly on we identified the three core areas that made the original game a success. They are 1) captivating animations and character movements, 2) intense fight sequences, and 3) clever and challenging levels and the gameplay built around them. They were the essence of the brand and, if used with the right formula, the universal ingredients for a stellar action/adventure game. We considered them the heart and soul of the project.\n\nSo, there we were, a team of seven, laying down the basis of what would later become Prince of Persia: The Sands of Time. Two game designers worked on defining the main concept, helping to build prototypes in real time with the technical team. One animator created the major moves that essentially brought the prince to life.\n\nWe then integrated two engineers into the process. They started the engine studies and helped the design team conduct gameplay tests. A concept artist was added to the mix to illustrate game design ideas and provide initial art direction (to the extent possible at this stage). He also contributed creative ideas. The final piece of the puzzle was the producer, someone who would also act as a game designer and creative consultant, a role I gladly accepted.\n\nA couple of months later, when we were able to present our first mock ups (AVI files showing how the prince could move and interact with his environment), we asked the original Prince of Persia creator Jordan Mechner to look at what we had done. The result of the first presentation was inspiring. He was duly impressed. He hopped on the train and the core team started chugging along full steam, beginning with the pre-production phase and then switching to the production period.\n\nWhat Went Wrong\n\n1. Late arrival of the artistic director.\n\nWhile the project effectively began in June 2001 with a fasttrack conceptual phase, the art director, Raphael Lacoste, did not join the project until late April 2002. Although it didn’t impair the final art direction, the very late arrival of our artistic director did create a huge challenge in time management for the team of artists.\n\nPrior to his arrival, several prototypes had already been made showing the prince’s movement set, level design ingredients, and some technological breakthroughs, but nothing very impressive. There was almost no art at all. The game’s potential was demonstrated with some very basic level design blocks and monochrome textures.\n\nRaphael’s first task was to define the artistic direction and style of the game and to develop all the necessary tools. Light maps were to be added to the engine at the 11th hour of pre-production, along with many other effects (volumetric fog, filter, glow, and so on). The most difficult challenge for the modelers was to keep a steady production pace for the maps while learning about upcoming and unfinished tools. As a matter of fact, the first final art wasn’t available until the E3 2003 demo.\n\nComing back from the show, the team saw the demo as the standard of quality that should be consistently present throughout the whole game. This seemed impossible, considering just how much we still needed to produce. The demo was approximately 1/30 of the whole game. But the risk management output (including some scope reduction) and the tremendous efforts of our highly motivated team resulted in visual quality that surpassed that of the demo.\n\n2. Fuzzy validation process.\n\nFrom the beginning, we knew that dealing with such a well-known license would present some challenges. We needed a huge pre-production process to help us establish clear goals, which included completing character behavior, macro designs, a compelling storyline, and all tools. A playable proof would then allow us to move forward into production.\n\nThat said, we didn’t think pre-production would last as long as it actually did. When level production began, we had planned for 10 months; it eventually took more than 14, with a good list of tools and fighting behavior still in preproduction. Maintaining the right balance between creation and production was hard, and there was no clear distinction between what was approved and what still needed improvement.\n\nThe prince’s behaviors were often changed, refined, and tweaked, which required major modifications each time. All of this was good for the game’s overall quality, but we had already lost precious production time designing, implementing, and rejecting several complete fight systems (in animation and AI). The result was a chain reaction that put other important deliverables in jeopardy. For instance, we started Farah’s (the princess) AI development later than expected. We didn’t have enough time to really polish the generic AI-supporting level-design scripted events. We had to take care of cooperative gameplay case by case, level by level, situation by situation. All this postponed the start of the real debugging period. We were faced with a mountain of bugs that had to be fixed. But the gold master release date was not going to budge.\n\n3. Complicated enemies.\n\nThe prince’s character was the subject of intense work during pre-production.With more than 780 animations, he was obviously the most significant—and the largest—component of the game. Unfortunately, this left less time and fewer resources to develop those who would allow him to exploit all his abilities: his enemies.\n\nEnemies represent particular level design ingredients. Being extremely dynamic, they need to complement the main character’s combat skills. At the same time, they should also increasingly challenge the players and surprise them with unexpected behaviors in any given situation. We also used specific enemies as tools to teach the player how to fight better—an instrumental aid in the players’ learning process.\n\nDue to the late delivery of final maps, all the enemies’ behaviors had to be developed and coded on placeholder maps (basically a floor), which did not take into account the geometry of the actual maps. Obviously, in this situation, the enemies’ AI came out way too bland, compared to what it should have been. Contextual enemies (such as the Sandbirds, Sandtigers and other mythical creatures) were extremely cost-inefficient to produce. Some of them simply had to be cut, whereas all the bipedal enemies later required a significant debug process.\n\n4. Lack of strong technical level design.\n\nFrom the beginning, our game was all about level design. Each of the prince’s moves drove the microgameplay. Much of what the players would enjoy was rooted in level design. Every aspect of the prince’s behavior or animation had a match in the geometry of a level. The game was very context-sensitive: you need a wall to make a wall-running maneuver; you need a column to slide down it.\n\nWe had to make our technical features behave flawlessly. First of all, the dynamic loading was not ready right from the start of production, so we had nightmares getting everything to fit in memory and adjusting pre-fetch settings. Making all these adjustments was very tricky because we wanted everything loaded in time. To avoid sudden movements or pop-ups, we had to make everything highly interdependent. On top of that, we had to make sure our rewind feature was always working, since this was how objects/enemies were destroyed—through dynamic loading portals and the like. Combine all these with a bunch of eager QA testers and you get a pretty intimidating bug database. Thankfully, the level designers and the programming team were able to squash all of the bugs.\n\nSo, were we starting to see light at the end of the tunnel at this point? Well, not quite. We were forgetting another source of problems. The game wasn’t crashing anymore, but the enemies were forgetting their objectives. This led to broken gameplay, where enemies no longer saw the prince or attacked him. Furthermore, since you couldn’t beat them, you couldn’t complete the level. Even worse, the princess was completely forgetting many of her crucial goals.\n\nSo much could have been done in the earlier stages of development to prevent these problems. If only the maps and gameplay had been delivered in advance, a dedicated technical level designer could have foreseen all these issues and fixed them before alpha. Once again, we were not dealing with the problems in a strategic way; we were putting out fires as they occurred. Meanwhile, we were creating a mountain of bugs to deal with later.\n\n5. Data control.\n\nThe way the engine was built meant the game data was stored in one master file that contained everything for the developers to review: maps, models, AI, and the rest. Everything was centralized in this file except sound and videos. The situation didn’t allow for multiple concurrent data access on the same file, atleast without written permission.\n\nWe soon realized our team had become too large to allow everyone access to the master files at the same time. We inherited a system that was designed with a small team in mind, but it didn’t scale well to an army of 45 in crunch mode. Many problems occurred: data was overwritten; the server crashed; files got corrupt. A lot of time was wasted because people had to wait for their turns to enter their changes on the network.\n\nWe tried to optimize the data control at the very end of the project, by building a “data monkey” solution that would allow simultaneous access through a server while maintaining a single repository for game data. Unfortunately, the attempt to build such a tool came too late and we never had the chance to alter the system. The risks involved were too serious.\n\nOne little thing we did, however, was set up a simple file server to manage the timing of all check-ins. At least the developers could work on something else locally while waiting for project updates, and we could give priority to people trying to make critical changes.\n\nWhat Went Right\n\n1. The will to achieve.\n\nA major element that contributed to the success of the whole project came from the team itself, and we managed to keep the initial motivation and chemistry strong right up to the end. The team was (and still is) a collection of extremely talented people in every field.\n\nThe project started well with a very powerful initial deliverable that helped everyone to clearly see what we were aiming for. At the start, the team was composed of less than 10 core people in complete harmony with one another—a tight-knit family. We were able to maintain the most effective form of communication: honesty. Speaking harshly about things that needed to be discussed was not a problem; we shared a common desire: the success of the project. No ego trip threatened the team’s interest. Integration of newcomers could have disrupted this cohesion, but it didn’t, because we didn’t add large numbers to the team all at once. Instead, we chose to incorporate newcomers one at a time, easing them into the unit gently.\n\nA succession of morale-boosting events helped maintain the highest level of energy and motivation within the team: Sony decided to show the game at its E3 booth, and our own demo of the game at E3 was well received: people turned out in droves as word spread quickly that this was the game to see. Our high motivation level and confidence in the project allowed us to deal with an incredible amount of pressure (time and quality, for starters), accept some difficult realities (scope reduction and so on), and work extremely hard for a very long period. From the E3 demo preparation (late February) to the very end, we worked on average 16 hours per day, peaking at 20 to 48 consecutive hours sometimes. It’s not a good model and we would prefer not to work like this again, but it was essential and the whole team was up for it, with absolutely no complaint.\n\n2. Synchronization between animation and AI.\n\nThe prince, as he appears in the final game, was our very first success and could not have been achieved without a fantastic duo that was paired up at the very beginning. The lead animator and lead AI for the main character worked very closely together. There was no question of a separate animation production on which we would simply map the AI afterwards. Both were conceived together, created together, and generated and implemented together. The two guys actually placed their desks side by side and worked as if they shared one brain. This is apparent in the way animation and control (AI) work seamlessly together in the final version.\n\n3. Risk management.\n\nWhen tough decisions needed to be made, we made them. We reduced the scope of the game at two crucial times: just before Christmas 2002 and right after E3 2003. Fortunately, these decisions were made early enough in the development process.\n\nThe first scope reduction was the hardest to make, because we were still far enough from the gold master date to convince ourselves “everything would be just fine.” Specifically, we were talking about cutting an entire chapter that took place in a slave village featuring exotic gameplay elements. Cutting this specific chapter meant having to tell the story very quickly. We accepted this decision because, in the end, everyone agreed it was the right move; if we had made this decision later, or worse, if we had refused to trim it, we would never have been able to finish the game on time.\n\nWhen we got back from E3, we faced the bitter reality of chaotic production: most maps were not running at all; some were not even close to completion. Thus, the second scope reduction was logistically easier to make, but still hard on the team: it meant cutting some things that we had spent a lot of time working on, stuff that we were proud of. But, here again, if we had made this decision even a week later, we wouldn’t have met our deadlines.\n\nAs I’ve said, this game was all about level design. In Prince of Persia: The Sands of Time, the gameplay was created mainly by the environment. Technically, all the level design distances had to be perfectly adjusted, because the gameplay could not exist with any degree of approximation.\n\nWhen the prince grabs an edge from a vertical-wall rebound, his detection zone should be perfectly in synch with the edge (in terms of spacing). This could have been a very strict limitation in level design creativity, but it wasn’t.\n\nThe editor was built to let level designers play with a 3D view. This allowed for quick corrections, thanks to a trial-and-error approach. Adjusting a column, adding a rope, or removing any level design ingredients were done on the fly and tested immediately by the level designers. The most interesting and crazy level design sequences were created in a very short amount of time. When the map was on the modeling side, it was also extremely useful to check whether the gameplay was altered by the addition of extra art geometry (such as a light torch on a wall where the prince needs to run). The tool helped us quickly devise interesting gameplay ideas during pre-production, then produce art geometry without wasting time compiling everything for a look at how the map was played.\n\n5. Integrated testing.\n\nFinally, we provided development kits to as many testers as possible. At peak time, we had 14 PlayStation 2 development kits for the team, four of which were solely dedicated to QA testers reproducing very rare crash-bugs (with a special debug “strike-team” to take over the machine with a debugger and reverseengineer strange bugs in retail code).\n\nThis started a creative solution to a recurring problem. One day, we realized one of our testers was great at finding A bugs—the rare, nasty ones. She was able to find bugs no one else could. Initially, each developer who was assigned to her bugs got frustrated due to the time commitment in fixing them. Then, we asked her to join the team, equipped her with a development kit, and with her working on the game itself, we got our A bugs curve back to normal. We replicated the model to up to four integrated testers within the team. This dramatically accelerated the pace of finding and fixing bugs, freeing some time for the developers to focus on the fixing side. Eventually, these testers got into the groove of things and spent many long days and nights contributing to our collective masterpiece.\n\n1,001 Nights Later\n\nAnd there we were, at the end of October 2003. After all the crazy events we had experienced in the previous 36 months, the gold master was finally delivered and the CD-ROMs were pressed. We couldn’t believe it. We had made it.\n\nThis team can be very proud of what it achieved. I would gladly work with all of them again in a second (in fact, I am), and we are now ready to welcome newcomers for the next installment of our adventures."
    }
}