{
    "id": "dbpedia_465_2",
    "rank": 10,
    "data": {
        "url": "https://itsfoss.community/t/torvalds-made-the-kernel-for-sysadmins-indirectly/8918",
        "read_more_link": "",
        "language": "en",
        "title": "Torvalds made the kernel for sysadmins indirectly",
        "top_image": "https://itsfoss.community/uploads/default/original/1X/f274f9749e3fd8b4d6fbae1cf90c5c186d2f699c.png",
        "meta_img": "https://itsfoss.community/uploads/default/original/1X/f274f9749e3fd8b4d6fbae1cf90c5c186d2f699c.png",
        "images": [
            "https://itsfoss.community/user_avatar/itsfoss.community/daniel.m.tripp/48/6953_2.png",
            "https://itsfoss.community/images/emoji/twitter/smiley.png?v=10",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/Unix_timeline.en.svg/264px-Unix_timeline.en.svg.png",
            "https://itsfoss.community/user_avatar/itsfoss.community/daniel.m.tripp/48/6953_2.png",
            "https://itsfoss.community/user_avatar/itsfoss.community/daniel.m.tripp/48/6953_2.png",
            "https://docs.freebsd.org/favicon.ico",
            "https://docs.freebsd.org/favicon.ico",
            "https://itsfoss.community/user_avatar/itsfoss.community/daniel.m.tripp/48/6953_2.png",
            "https://itsfoss.community/user_avatar/itsfoss.community/nevj/48/6970_2.png",
            "https://itsfoss.community/user_avatar/itsfoss.community/nevj/48/6970_2.png",
            "https://itsfoss.community/user_avatar/itsfoss.community/daniel.m.tripp/48/6953_2.png",
            "https://itsfoss.community/user_avatar/itsfoss.community/akito/48/565_2.png",
            "https://itsfoss.community/user_avatar/itsfoss.community/daniel.m.tripp/48/6953_2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "linux"
        ],
        "tags": null,
        "authors": [
            "nevj (Neville Jackson)",
            "TerminalDweller (Terminal Dweller)"
        ],
        "publish_date": "2022-05-03T01:43:43+00:00",
        "summary": "",
        "meta_description": "You know how sysadmins are like, right? The coke drinking middle-fingerers going through bunch of terminal commands? Torvalds was also a middle-fingerer, fingering it at C++ instead of clients. He also used terminal comm&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://itsfoss.community/uploads/default/optimized/1X/e0f1bf7bd9a4e0cb57efa3542673c89d2211611b_2_32x32.png",
        "meta_site_name": "It's FOSS Community",
        "canonical_link": "https://itsfoss.community/t/torvalds-made-the-kernel-for-sysadmins-indirectly/8918",
        "text": "Yes you can - you can get Darwin - which is Apple’s take on BSD on the XNU kernel, for x86 and suchlike, but that’s all you get, you don’t get any of Apple’s GUI doohickeys for Mac, iPhone, iPad, iWatch or Apple TV…\n\nWhy you would want to, is beyond me and probably a subject for someone other than me…\n\nKernel[edit]\n\nMain article: XNU\n\nThe kernel of Darwin is XNU, a hybrid kernel which uses OSFMK 7.3[11] (Open Software Foundation Mach Kernel) from the OSF, various elements of FreeBSD (including the process model, network stack, and virtual file system),[12] and an object-oriented device driver API called I/O Kit.[13] The hybrid kernel design provides the flexibility of a microkernel[14][failed verification – see discussion] and the performance of a monolithic kernel.[15]\n\nHardware and software support[edit]\n\nDarwin currently includes support for the 64-bit x86-64 variant of the Intel x86 processors used in Intel-based Macs and the 64-bit ARM processors used in the iPhone 5S and later, the 6th generation iPod Touch, the 5th generation iPad and later, the iPad Air family, the iPad Mini 2 and later, the iPad Pro family, the fourth generation and later Apple TVs, the HomePod family, and Macs with Apple silicon such as the 2020 Apple M1 Macs, as well as the Raspberry Pi 3B.[16][17] An open-source port of the XNU kernel exists that supports Darwin on Intel and AMD x86 platforms not officially supported by Apple, though it does not appear to have been updated since 2009.[18] An open-source port of the XNU kernel also exists for ARM platforms.[19] Older versions supported some or all of 32-bit PowerPC, 64-bit PowerPC, 32-bit x86, and 32-bit ARM.\n\nIt supports the POSIX API by way of its BSD lineage (largely FreeBSD userland) and a large number of programs written for various other UNIX-like systems can be compiled on Darwin with no changes to the source code.\n\nDarwin does not include many of the defining elements of macOS, such as the Carbon and Cocoa APIs or the Quartz Compositor and Aqua user interface, and thus cannot run Mac applications. It does, however, support a number of lesser-known features of macOS, such as mDNSResponder, which is the multicast DNS responder and a core component of the Bonjour networking technology, and launchd, an advanced service management framework.\n\nNote - many years ago, Apple “supported” Linux on some of their PowerPC Macintoshes, MkLinux… I had one (still got it somewhere) - PowerMac 601 AV, 66 Mhz PowerPC cpu (same as in IBM’s pSeries for running AIX on - and I think the later AS400’s too)… Those were considered “old world” PowerPC macs, i.e. they had proprietary “NuBus” instead of PCI - and MkLinux was the only Linux available for these “Old World” PowerPC Macs… I don’t know why they bothered really, it was still an Apple MICROKERNEL (hence “mk”), running GNU binaries (but taken from the Linux world, not the BSD world), so it wasn’t really Linux, it was just GNU on an Apple developed micro kernel… Linux IS the kernel…\n\nHey, that is interesting. Thanks Daniel for the detail .\n\nI agree, cant find a reason to use it. Maybe if one wanted to do something with a hybrid kernel…\n\nDarwin is just another BSD… one might as well use a ‘real’ BSD .\n\nThe only thing that would interest me with Darwin would be it might offer a BSD without ZFS. . I might buy that, but it would probably tie me to some weird Apple filesystem, and I would not buy that either.\n\nThe biggest turnoff in the BSD world, for home PC users is ZFS. It is just a monstrous overkill for no gain with desktops.\n\nApple have had a few friendly flirts with Unix and close relatives. It is a real plus for open software.\n\nConversely - I passionately LOVE ZFS functionality on FreeBSD (I’m also a HUGE fan of it on Solaris, and I used to manage a pair of corporate NAS devices that were Oracle ZFS Appliances [ZFS Filer] - rock solid, and surprisingly good performance on mechanical SATA drives!)… I think it’s (BSD) still some years ahead of Linux in that department… I love ZFS so much, it’s my favourite filesystem… but I wasn’t happy with performance on Linux (using ZFS encryption). But - I’m being unfair, I should give ZFS unencrypted, a decent test on Linux, but it was slower (considerably) than ext4 on LVM on LUKS (2.x) on Linux.\n\nI run FreeNAS as my home NAS solution, on a 10+ year old HP NL40 micro-server - using ZFS.\n\nStarted out with ZFS on this machine, using FreeNAS 9 in late 2011, with 8 GB RAM (non ECC) and 4 x 1TB drives in RAIDZ1+ (= RAID 5), giving me about 3 TB store, and booting off a USB thumb drive (motherboard conveniently has a USB connector for a thumb drive! These things have a built in SAS controller, that multiplexes up to 4 SATA drives in a “cage”.\n\nI’ve slowly incrementally upgraded it - it’s now got 16 GB of ECC RAM, boots off 256 GB internal SATA SSD, 4 x 4 TB HDD’s, giving me ~11 TB (in theory it should be 12, but there’s overhead) … Plan is to incrementally double that - with 4 x 8 TB, I’m in no hurry (still got 2 TB free), so I might wait till 10 or 12 or even 16 TB become options (I’ll probably buy a spare power supply for it too) - unless - one of those drives fails before, then I’ll probably go for 8 TB…\n\ni.e. because its RAIDZ+1 - I can set a drive to “failed” in FreeNAS, power it off (HP NL40 does’t support hotswap) pull the drive out, and insert a new one, and mark it replaced, and it will resilver all my data overnight (ECC RAM makes a huge difference!). That’s how I upgrade my storage, over a series of days, I manually “fail” each drive, replace it with a new one with more storage, and let it re-silver… My current iteration, was updated from 4 x 3 TB drivers (shitty Seagate drives - 2 of whiched failed) to 4 x 4 TB using this method…\n\nZFS is one of my favourite things that Sun Microsystems did (and open sourced) before Oracle bought them - I suspect Larry Ellison only bought Sun so he could sue Google over Java patents…\n\nSo much goodness Sun gave us… ZFS… NFS (note ZFS even has BUILT in support for sharing data via NFS and SMB). Even NIS and NIS+ were okay (better than Microsoft Windows domains!)…"
    }
}