{
    "id": "dbpedia_465_0",
    "rank": 60,
    "data": {
        "url": "https://mvmn.wordpress.com/2019/07/28/vmware-frustrations/",
        "read_more_link": "",
        "language": "en",
        "title": "VMWare frustrations",
        "top_image": "https://mvmn.wordpress.com/wp-content/uploads/2019/07/screen-shot-2019-07-28-at-12.32.26.png",
        "meta_img": "https://mvmn.wordpress.com/wp-content/uploads/2019/07/screen-shot-2019-07-28-at-12.32.26.png",
        "images": [
            "https://mvmn.wordpress.com/wp-content/uploads/2019/07/screen-shot-2019-07-28-at-12.32.26.png?w=599",
            "https://mvmn.wordpress.com/wp-content/uploads/2019/07/screen-shot-2019-07-27-at-16.53.25.png?w=599",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2019-07-28T00:00:00",
        "summary": "",
        "meta_description": "I am a sad customer of VMWare as I have bought VMWare Fusion for macOS and had constant issues running it. I've tried getting support, they told me to uninstall and reinstall VMWare over and over, but this never solved anything. In the end I have found solution myself, but only after I've given up…",
        "meta_lang": "en",
        "meta_favicon": "https://s1.wp.com/i/favicon.ico",
        "meta_site_name": "M.V.M-n.",
        "canonical_link": "https://mvmn.wordpress.com/2019/07/28/vmware-frustrations/",
        "text": "I am a sad customer of VMWare as I have bought VMWare Fusion for macOS and had constant issues running it. I’ve tried getting support, they told me to uninstall and reinstall VMWare over and over, but this never solved anything.\n\nIn the end I have found solution myself, but only after I’ve given up on using VMWare Fusion literally for years.\n\nAt worst VMWare support asked me to provide full remote access to my laptop, which is impossible since I use it for work and it contains information on my clients I am not at liberty to disclose to third-parties. Knowing that I can’t do that they practically found a way not to provide me any support.\n\nAnyhow, for couple of years I had no need to use VMWare Fusion and it was just sitting there, but recently I had a need to using it again and encountered same issues as previously – it had failed to run some “peer process”, most often it was /dev/vmmon\n\nI’ve tried to do uninstall-reinstall once again, but – I’ve found out that I can’t even download the installer from VMWare portal! I can’t download the software that I’ve paid for!\n\nContacting a living human being via support phones or other means turned out to be practically impossible.\n\nIn short, VMWare denied me service that I’ve paid for.\n\nI’ve had enough of this and started searching for the fix myself, and lo and behold – some googling and trial and error allowed me to fix the issue that VMWare support couldn’t fix for years now!\n\nHere are the sources of information that allowed me to understand and fix the issue:\n\n– github.com/osxfuse/osxfuse/issues/358#issuecomment-279086264\n\n– github.com/keybase/kbfs/issues/1360\n\n– communities.vmware.com/thread/598913\n\nIn short, macOS has some sort of devices slots that kernel extensions (kext) may be using, and these are very limited by macOS. Apparently in most recent version of it one has maximum of 10 device slots, and in previous major version it was just 6.\n\nLots of software uses those, and not all of it uses it only when it’s running – biggest offender is VirtualBox that occupies these device slots permanently.\n\nIn order to find out if this is the case there are two ways. First, list non-Apple kernel extensions that you have by running this terminal command:\n\nkextstat | grep -v apple\n\nIf you see many kernel extensions there, especially VirtualBox ones among them – you might be out of device slots. Other software that occupies these slots is TunTap, FortiClient, Paragon NTFS, OS X Fuse, Intel HAXM etc.\n\nSecond, try to run VMWare vmmon kext from terminal by running this command:\n\nsudo kextutil /Applications/VMware\\ Fusion.app/Contents/Library/kexts/vmmon.kext\n\nIf the last line of the output of this command is like Failed to load /Library/StagedExtensions/Applications/VMware Fusion.app/Contents/Library/kexts/vmmon.kext - (libkern/kext) kext (kmod) start/stop routine failed. than you know vmmon kext cannot run, and there is a very high chance that reason for this is lack of free device slots. Combined with output of previous command that will list you other kexts that may occupy device slots you can figure out of that is the case.\n\nIn my case, that was exactly it. All I had to do was remove VirtualBox for now – which apparently freed up device slots for VMWare kexts and allowed it to run just fine.\n\nNeed I say that no reinstalls of VMWare would ever achieve that.\n\nReinstalling VMWare obviously has zero impact on the amount of free device slots for kexts when they’re occupied by other software. Thus everything VMWare support told me to do was completely useless, and they had zero clue as to why the problem might occur, and no words like kext or device slot were ever mentioned by them.\n\nUPD: Here is where the problem seemingly originates.\n\nThere is a support for block and character devices in UNIX systems (and Linux apparently as well, but let’s stick to Darwin/macOS here – just in case, Darwin is the Kernel in macOS).\n\nSupposedly we run out of slots for character devices here – at least that was the problem for OS X Fuse.\n\nHere’s the source code of Kernel functions that allocate character devices:\n\nhttps://github.com/apple/darwin-xnu/blob/master/bsd/kern/bsd_stubs.c\n\nThere is a function that looks for a vacant “slot” in character devices table, and the table size is limited by value of nchrdev, which is defined in platform dependent conf.c files as nchrdev = sizeof(cdevsw) / sizeof(cdevsw[0]);, which should as I understand just produce size of cdevsw structure, since it takes it’s total size in bytes, and divides by size of one entry in bytes. The cdevsw structure is the table of character devices apparently.\n\nThe comment in the code advises to start from index 24 since devices with lower indexes might be taken by system using absolute index instead of a search for free slot. E.g. system expects certain slot to be available, and if you take it before it does – things will break. That’s how I understand this.\n\nFor nchrdev and cdevsw details see\n\nhttps://github.com/apple/darwin-xnu/blob/master/bsd/dev/i386/conf.c\n\nhttps://github.com/apple/darwin-xnu/blob/master/bsd/dev/arm/conf.c\n\netc.\n\nSeems like total structure size is 42 though, but free slots in there are 1, 9 to 11 and 13 to 41. Given that we’re advised to start from slot 24 onwards, seems like there should actually be 18 device slots available to us. Where do extra 8 go I have no idea. Still, 18 isn’t that much as well. Not sure why there is such a small limit at all – looks like all one has to loose is a very little bit of memory for cdevsw table. But I might be wrong of course since this is the first time I see this code."
    }
}