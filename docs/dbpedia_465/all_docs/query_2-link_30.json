{
    "id": "dbpedia_465_2",
    "rank": 30,
    "data": {
        "url": "https://cboard.cprogramming.com/c-programming/176163-macos-c-programming-help.html",
        "read_more_link": "",
        "language": "en",
        "title": "macOS C Programming Help",
        "top_image": "https://cboard.cprogramming.com/attachments/c-programming/15405d1526173053-macos-c-programming-help-diagram_of_mac_os_x_architecture-gif?s=c1c22a3f641d568bc35f8f3a60261762",
        "meta_img": "",
        "images": [
            "https://cboard.cprogramming.com/head/cprog.png",
            "https://cboard.cprogramming.com/images/misc/navbit-home.png",
            "https://cboard.cprogramming.com/images/statusicon/user-offline.png",
            "https://cboard.cprogramming.com/images/icons/icon5.png",
            "https://cboard.cprogramming.com/images/misc/progress.gif",
            "https://cboard.cprogramming.com/images/statusicon/user-offline.png",
            "https://cboard.cprogramming.com/images/misc/progress.gif",
            "https://cboard.cprogramming.com/images/statusicon/user-offline.png",
            "https://cboard.cprogramming.com/images/misc/quote_icon.png",
            "https://cboard.cprogramming.com/images/buttons/viewpost-right.png",
            "https://cboard.cprogramming.com/images/misc/progress.gif",
            "https://cboard.cprogramming.com/images/statusicon/user-offline.png",
            "https://cboard.cprogramming.com/images/misc/progress.gif",
            "https://cboard.cprogramming.com/images/statusicon/user-offline.png",
            "https://cboard.cprogramming.com/attachments/c-programming/15405d1526173053-macos-c-programming-help-diagram_of_mac_os_x_architecture-gif?s=c1c22a3f641d568bc35f8f3a60261762",
            "https://cboard.cprogramming.com/images/misc/progress.gif",
            "https://cboard.cprogramming.com/images/statusicon/user-offline.png",
            "https://cboard.cprogramming.com/images/misc/progress.gif",
            "https://www.feedburner.com/fb/images/pub/feed-icon16x16.png",
            "https://cboard.cprogramming.com/images/misc/11x11progress.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "#include",
            "api",
            "macos",
            "unix",
            "windows"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "I had to switch environments for work and I am feeling like a total fish out of water on macOS between the actual macOS API stuff ('Core Foundati",
        "meta_lang": "en",
        "meta_favicon": "https://cboard.cprogramming.com/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://cboard.cprogramming.com/c-programming/176163-macos-c-programming-help.html?s=c1c22a3f641d568bc35f8f3a60261762",
        "text": "I had to switch environments for work and I am feeling like a total fish out of water on macOS between the actual macOS API stuff (\"Core Foundation\" I believe it's called), and the Unix wrapper stuff, etc...\n\nI need some help. The best way I can describe what I am trying to do is to give a Windows example. On Windows, I'm used to being able to do something like:\n\nCode:\n\n#include <stdio.h> #include <stdlib.h> #include <windows.h> int main(void) { fH = CreateFile(....) HANDLE myMem = HeapAlloc(...) return EXIT_SUCCESS; }\n\nAnd so on...\n\nHowever, I cannot find the <windows.h> equivalent for macOS. I checked their docs and it seems they only support either Swift or \"Objective C\" and I have no knowledge of those languages. However, I am having a hard time believing that I cannot access macOS API calls with just C itself... Is this the case? Is there a C API for these funcs?\n\nAlso note that even the Windows API claims it's \"C++\" but I can do everything from within C by using header files like <windows.h> for example. Can I also do something similar in Mac? If not, can I use an Objective-C Compiler and still build C with it like how I can use a C++ compiler to build C for the most part?\n\nTo make it even more confusing, macOS is based off of Unix and is POSIX and so that also means I can use Unix calls, but I'm finding strange inconsistencies from actual Linux and I imagine those calls are also just wrappers around some macOS API which I'd rather learn and use.\n\nAny guidance in this area would be greatly appreciated because there seems to be a lot less info on it online when compared with Windows.\n\nThank you."
    }
}