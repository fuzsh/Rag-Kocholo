{
    "id": "dbpedia_465_0",
    "rank": 48,
    "data": {
        "url": "https://pikeralpha.wordpress.com/2013/10/05/xnu-cpu-power-management/",
        "read_more_link": "",
        "language": "en",
        "title": "Xnu CPU Power Management",
        "top_image": "https://s0.wp.com/i/blank.jpg",
        "meta_img": "https://s0.wp.com/i/blank.jpg",
        "images": [
            "https://s2.wp.com/wp-content/themes/pub/misty-lake/images/header.jpg",
            "https://1.gravatar.com/avatar/47be753e7fc9162c8ac9694d0bc90e58f1059134565f64156cbebd73a17910fd?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/55ada05589b93712a23ef028db346891588dac9b419996b6a495d797f788beef?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/57a75ca398691e54afe15c26e0ab12b6380d5ebf416ca03bc2216f8482ae453f?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/57a75ca398691e54afe15c26e0ab12b6380d5ebf416ca03bc2216f8482ae453f?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/57a75ca398691e54afe15c26e0ab12b6380d5ebf416ca03bc2216f8482ae453f?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/57a75ca398691e54afe15c26e0ab12b6380d5ebf416ca03bc2216f8482ae453f?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/55ada05589b93712a23ef028db346891588dac9b419996b6a495d797f788beef?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/35f65596705acb0a0f8de5c89935f544b0e14ca907ce28d09376de6953bedbfb?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/55ada05589b93712a23ef028db346891588dac9b419996b6a495d797f788beef?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/57a75ca398691e54afe15c26e0ab12b6380d5ebf416ca03bc2216f8482ae453f?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/57a75ca398691e54afe15c26e0ab12b6380d5ebf416ca03bc2216f8482ae453f?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/57a75ca398691e54afe15c26e0ab12b6380d5ebf416ca03bc2216f8482ae453f?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/55ada05589b93712a23ef028db346891588dac9b419996b6a495d797f788beef?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/55ada05589b93712a23ef028db346891588dac9b419996b6a495d797f788beef?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/55ada05589b93712a23ef028db346891588dac9b419996b6a495d797f788beef?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/55ada05589b93712a23ef028db346891588dac9b419996b6a495d797f788beef?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/826d6d892282ca747edceadda10084b8ac9f876c382400c9b755e30fc127f7ca?s=50&d=identicon&r=G",
            "https://1.gravatar.com/avatar/d0c5966e370138aabecd8b27cacb278938de8c6c90ee8157bff4414e00b97412?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100001703313168/picture?type=large&_md5=a216e4b42a2fb15d71e36ff65bb1b8ac",
            "https://1.gravatar.com/avatar/79738e6a5271e22091ef916f13fa202ca240163acdd7478c42fbc5923f0a5056?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/22a0dddce4bdb5a9f471bdfb18e707c5b909e3070426700319b2ab6b73f2ac04?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/22a0dddce4bdb5a9f471bdfb18e707c5b909e3070426700319b2ab6b73f2ac04?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/22a0dddce4bdb5a9f471bdfb18e707c5b909e3070426700319b2ab6b73f2ac04?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/22a0dddce4bdb5a9f471bdfb18e707c5b909e3070426700319b2ab6b73f2ac04?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large&_md5=4c1511ba69a8bd5a3e7de22255638df8",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/088e5b316073cd7064a0bea87fe2abb7d4164c48baa6c9d90d8d368fdf3a63f2?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large",
            "https://0.gravatar.com/avatar/0fd49e739f2e6c92a97b94d41046aeb4e54728a13a0febc7fa0f8bd0e5fa2795?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/0fd49e739f2e6c92a97b94d41046aeb4e54728a13a0febc7fa0f8bd0e5fa2795?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/0fd49e739f2e6c92a97b94d41046aeb4e54728a13a0febc7fa0f8bd0e5fa2795?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/0fd49e739f2e6c92a97b94d41046aeb4e54728a13a0febc7fa0f8bd0e5fa2795?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/0fd49e739f2e6c92a97b94d41046aeb4e54728a13a0febc7fa0f8bd0e5fa2795?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large&_md5=4c1511ba69a8bd5a3e7de22255638df8",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large",
            "https://graph.facebook.com/100003752105189/picture?type=large",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large&_md5=4c1511ba69a8bd5a3e7de22255638df8",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://graph.facebook.com/100003752105189/picture?type=large",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/088e5b316073cd7064a0bea87fe2abb7d4164c48baa6c9d90d8d368fdf3a63f2?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/6fa0348a4387edbd3a5fa5a1963736f004f545640a3eb92bfff408ad2ed3b631?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/ed9db595d160b16da0cb6d745b62b95326433ba3e0411f84a8728ec917dde08f?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://1.gravatar.com/avatar/dce92efb4faa1cf159a8acd1e4a2635eb71d99548ff3c3364b4359b0214cefbd?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://1.gravatar.com/avatar/dce92efb4faa1cf159a8acd1e4a2635eb71d99548ff3c3364b4359b0214cefbd?s=50&d=identicon&r=G",
            "https://1.gravatar.com/avatar/dce92efb4faa1cf159a8acd1e4a2635eb71d99548ff3c3364b4359b0214cefbd?s=50&d=identicon&r=G",
            "https://2.gravatar.com/avatar/546c74bf28d9d56ac2df78861149d5adccb7bdc5a87a5025684deb3887cb02e8?s=50&d=identicon&r=G",
            "https://1.gravatar.com/avatar/dce92efb4faa1cf159a8acd1e4a2635eb71d99548ff3c3364b4359b0214cefbd?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/cfcba1ce6df115634039f06db73c83a39a85fc37cc64041a54833090b29a040d?s=50&d=identicon&r=G",
            "https://0.gravatar.com/avatar/6fcf15181fab84e3c7c57cd616dce21bb8729d67b667bd140f4a8d06cfdb4ea7?s=48&d=identicon&r=G",
            "https://0.gravatar.com/avatar/6fcf15181fab84e3c7c57cd616dce21bb8729d67b667bd140f4a8d06cfdb4ea7?s=48&d=identicon&r=G",
            "https://1.gravatar.com/avatar/a84bc3a211b2a4a5baa008728cf732516dca4612e42a82b31707e7dfa659b644?s=48&d=identicon&r=G",
            "https://0.gravatar.com/avatar/3f4fc24e4c3238e7f634414ecc5dcdd4fded4dc272e9d763e2b9c9a7d58416c3?s=48&d=identicon&r=G",
            "https://i0.wp.com/lh5.googleusercontent.com/-fy_YEVtxjxY/AAAAAAAAAAI/AAAAAAAAAF8/SY47-KaYNKQ/photo.jpg?resize=48%2C48&ssl=1",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2013-10-05T00:00:00",
        "summary": "",
        "meta_description": "Some time ago I blogged about XCPM aka Xnu CPU Power Management and I have been digging ever since the first Developer Preview of Mavericks, but I never shared what I know about it. And now that OS X 10.9 Mavericks GM (Golden Master) is released to registered developers, I think that we should start…",
        "meta_lang": "en",
        "meta_favicon": "https://s1.wp.com/i/favicon.ico",
        "meta_site_name": "Pike's Universum",
        "canonical_link": "https://pikeralpha.wordpress.com/2013/10/05/xnu-cpu-power-management/",
        "text": "Some time ago I blogged about XCPM aka Xnu CPU Power Management and I have been digging ever since the first Developer Preview of Mavericks, but I never shared what I know about it. And now that OS X 10.9 Mavericks GM (Golden Master) is released to registered developers, I think that we should start sharing everything we know. People who want to know more about XCPM should also come back, from time to time, because this is only a kick-off blog article. Meaning that more updates will be added in the near future.\n\nOk. First of all. XCPM is initialised and controlled through the following functions in the XNU kernel (mach_kernel) – no longer with help of AppleIntelCPUPowerManagment.kext:\n\n_xcpm_idle _xcpm_signal_cpu _xcpm_select_cpu _xcpm_cpu_halt _xcpm_exit_halt _xcpm_exit_halt_to_off _xcpm_interrupt_prewake_applicable _xcpm_monitor_init _xcpm_quiesce _xcpm_apply_mbd _xcpm_restore_mbd _xcpm_fi_init _xcpm_fi_update _xcpm_get_ratio _xcpm_transform_vector _xcpm_resolve_limits _xcpm_get_pkg_max _xcpm_accumulate_pstate_ctrs _xcpm_update_last_pstate_time _xcpm_enable_pstate_ctrs _xcpm_resolve_pstate _xcpm_get_deadline _xcpm_timer _xcpm_urgency _xcpm_dvfs_transfer_load _xcpm_dvfs_clear_transferred_load _xcpm_dvfs_start _xcpm_dvfs_configure _xcpm_dvfs_init_deadlines _xcpm_dvfs_pause _xcpm_dvfs_resume _xcpm_qos_name2id _xcpm_qos_id2name _xcpm_dvfs_calibrate _xcpm_set_max_bus_delay _xcpm_get_max_bus_delay _xcpm_set_max_int_delay _xcpm_get_max_int_delay _xcpm_ubpc_read _xcpm_ubpc_config _xcpm_bootstrap _xcpm_perf_bias_set _xcpm_perf_bias_get _xcpm_init _xcpm_register_dispatch_table _xcpm_init_complete _xcpm_enabled _xcpm_cpu_model_get _xcpm_ioctl_init _xcpm_cpu_control _xcpm_callbacks_register\n\nThere is however still nothing to be found in the currently available/released XNU source code. Unfortunately. There is no osfmk/x86_64/xcpm directory and thus files like: osfmk/x86_64/xcpm/xcpm_idle.c and osfmk/x86_64/xcpm/xcpm_dvfs.c are missing. We just have to wait for the next update.\n\nUpdate:\n\nGreat. Apple released the source code of OS X 10.8.5 (xnu-2050.48.11) and 10.9.0 (xnu-2422.1.72) and now the xcpm directory is there… but that is all there is because the directory is (still) empty!\n\nUpdate-3:\n\nApple released the source code of OS X 10.9.2 (xnu-2422.90.20) but unfortunately for us… the xcpm directory is still empty!\n\nAppleIntelCPUPowerManagement.kext\n\nWe’ve long been using/relying on AppleIntelCPUPowerManagement.kext but that is no longer used for properly configured XCPM. In fact. The kext isn’t even loaded anymore because Apple now sets IOResources property intel_cpupm_matching to 3. Previously this was set to 0 and thus the match in AppleIntelCPUPowerManagment.kext/Contents/Info.plist fails:\n\n<key>IOKitPersonalities</key> <dict> <key>IntelCPUPowerManagement</key> <dict> <key>CFBundleIdentifier</key> <string>com.apple.driver.AppleIntelCPUPowerManagement</string> <key>IOClass</key> <string>AppleIntelCPUPowerManagement</string> <key>IOMatchCategory</key> <string>AppleIntelCPUPowerManagement</string> <key>IOPropertyMatch</key> <dict> <key>intel_cpupm_matching</key> <integer>0</integer> </dict> <key>IOProviderClass</key> <string>IOResources</string> <key>IOResourceMatch</key> <string>IOKit</string> </dict> </dict>\n\nHow do I know that it works like this? Easy. Open pal_routines.h and look for this snippet:\n\n/* Include a PAL-specific header, too, for xnu-internal overrides */ #include <i386/pal_native.h> extern boolean_t virtualized; #define PAL_VIRTUALIZED_PROPERTY_VALUE 4 /* Allow for tricky IOKit property matching */ #define PAL_AICPM_PROPERTY_NAME \"intel_cpupm_matching\" static inline void pal_get_resource_property(const char **property_name, int *property_value) { *property_name = PAL_AICPM_PROPERTY_NAME; *property_value = PAL_AICPM_PROPERTY_VALUE; if (virtualized) *property_value = PAL_VIRTUALIZED_PROPERTY_VALUE; }\n\nIt gets called from the init routine in IOServices.cpp:\n\nbool IOResources::init( OSDictionary * dictionary ) { // Do super init first if ( !super::init() ) return false; // Allow PAL layer to publish a value const char *property_name; int property_value; pal_get_resource_property( &property_name, &property_value ); if( property_name ) { OSNumber *num; const OSSymbol * sym; if( (num = OSNumber::withNumber(property_value, 32)) != 0 ) { if( (sym = OSSymbol::withCString( property_name)) != 0 ) { this->setProperty( sym, num ); sym->release(); } num->release(); } } return true; }\n\nAnd lastly. Look at this snippet from pal_native.h:\n\n#define PAL_AICPM_PROPERTY_VALUE 0\n\nThat sets it to 0. Again. This is still from OS X 10.8 (currently available) source code. Not Mavericks. But you understand what Apple changed. Don’t you 😉\n\nGood news\n\nNow the good news. AppleIntelCPUPowerManagement.kext is no longer used and you may even remove it. So why is this good news for us? Well. I guess that we all remember the days that we had to use NullCPUPowerManagement.kext because Apple writes to MSR 0xE2 in it. A problem located/solved by Sam (RevoGirl) after she figured out how to patch AppleIntelCPUPowerManagement.kext and some time later the BIOS. However. This may no longer be required. I mean. Apple basically solve it for us. Pretty sweet.\n\nWe can now even disabled EIST, Turbo and the Cn states in the (UEFI) BIOS and XCPM will still work. A big change.\n\nplugin-type\n\nLet us go back to Ivy Bridge power management for a sec, which introduced a new property called plugin-type. Apple used a _DSM (Device Specific Method) in one of their ACPI tables to trigger additional plugins to load (X86PlatformPlugin.kext and X86PlatformShim.kext). And we still need to set this property, otherwise the plugins won’t load (matching will fail) and you end up seeing this error in system.log:\n\nACPI_SMC_PlatformPlugin::start – waitForService(resourceMatching(AppleIntelCPUPowerManagement) timed out\n\nWARNING: IOPlatformPluginUtil : getCPUIDInfo: this is an unknown CPU model 0x3c — power management may be incomplete or unsupported\n\nACPI_SMC_PlatformPlugin.kext\n\nNo. We no longer need it. It is no longer required to have ACPI_SMC_PlatformPlugin.kext loaded. This also means that property Supported Features/Stepper CPU won’t be set, but you need to set plugin-type or you will get the above error.\n\nAppleSMBusPCI.kext\n\nNo. We no longer need it. It is no longer required to have AppleSMBusPCI.kext loaded.\n\nAppleSMBusController.kext\n\nYes. We still need it so make sure that it is getting loaded (run kextstat).\n\nAppleSMCPDRC.kext\n\nNo. We no longer need it. It is no longer required to have AppleSMCPDRC.kext loaded.\n\nAppleLPC.kext\n\nYes. We still need it so make sure it is getting loaded (run kextstat). Please note that Apple is using a different device-id (0x9c43) and we/most of us are using 0x8c44 so it will match differently. Or not at all.\n\nAppleSMC.kext\n\nI missed quite a few of SMC keys (see below) but the thing is that it isn’t always complaining about the missing keys, but I am still trying to figure out why this is. And here is the list of SMC keys that it complained about:\n\nF0Ac, len: 2, type: [fpe2], data: 1217 (bytes 13 04) | Base64: EwQ= PC0R, len: 2, type: [sp78], data: (bytes 09 3a) | Base64: CTo= PM0C, len: 2, type: [sp78], data: (bytes 01 0a) | Base64: AQo= PO0R, len: 2, type: [sp78], data: (bytes 08 ad) | Base64: CK0= PZ0F, len: 4, type: [flt ], data: (bytes 66 96 00 41) | Base64: ZpYAQQ== PZ0E, len: 4, type: [flt ], data: (bytes 00 00 e0 41) | Base64: AADgQQ== PZ1F, len: 4, type: [flt ], data: (bytes 00 00 30 3e) | Base64: AAAwPg== PZ1E, len: 4, type: [flt ], data: (bytes 06 67 f6 40) | Base64: Bmf2QA== PSTR, len: 2, type: [sp78], data: (bytes 08 49) | Base64: CEk= PDTR, len: 2, type: [sp78], data: (bytes 0c 92) | Base64: DJI= MSAc, len: 2, type: [ui8 ], data: 0 (bytes 00) | Base64: AA== MSAf, len: 2, type: [fp6a], data: (bytes 00 00) | Base64: AAA= MSAg, len: 2, type: [ui8 ], data: 0 (bytes 00) | Base64: AA== MSAj, len: 2, type: [fp88], data: (bytes 00 00) | Base64: AAA= MSPA, len: 2, type: [fp6a], data: (bytes 00 00) | Base64: AAA= MSHT, len: 1, type: [ui8 ], data: 0 (bytes 00) | Base64: AA== DM0T, len: 2, type: [hex_], data: (bytes 00 00) | Base64: AAA= WOr0, len: 1, type: [si8 ], data: (bytes ff) | Base64: /w== WOw0, len: 1, type: [si8 ], data: (bytes ff) | Base64: /w== SBFL, len: 4, type: [hex_], data: (bytes 00 00 00 00) | Base64: AAAAAA== TCXC, len: 2, type: [sp78], data: (bytes 47 08) | Base64: Rwg= Ts0S, len: 2, type: [sp78], data: (bytes 26 33) | Base64: JjM= TH0F, len: 2, type: [sp78], data: (bytes dd 20) | Base64: 3SA= TB0T, len: 2, type: [sp78], data: (bytes 21 99) | Base64: IZk= B0AC, len: 2, type: [si16], data: (bytes 00 00) | Base64: AAA= B0AV, len: 2, type: [ui16], data: 92 (bytes 21 5c) | Base64: IVw= B0RM, len: 2, type: [ui16], data: 230 (bytes 1c e6) | Base64: HOY= BRSC, len: 2, type: [ui16], data: 100 (bytes 00 64) | Base64: AGQ= B0St, len: 2, type: [hex_], data: (bytes 40 e0) | Base64: QOA= BIMX, len: 2, type: [ui16], data: 255 (bytes 7f ff) | Base64: f/8= MSMD, len: 1, type: [ui8 ], data: 1 (bytes 01) | Base64: AQ== MSMN, len: 1, type: [fp6a], data: (bytes 00 00) | Base64: AAA= ACIC, len: 2, type: [ui16], data: 128 (bytes 0b 80 | Base64: C4A= MSMF, len: 1, type: [ui8 ], data: 3 (bytes 03) | Base64: Aw== DICT, len: 1, type: [flag], data: (bytes 00) | Base64: AA==\n\nThis list may be longer/shorter for you, since it depends on the version of FakeSMC.kext that you are using, and the keys that you already added yourself.\n\nNote: FakeSMC.kext doesn’t report the reads of the above SMC keys. Not at every startup. This may be due caching or the fact that FakeSMC.kext isn’t loading early enough. This is why I would like to suggest to rename FakeSMC.kext to AppleEmulator.kext and changes the source code in such way that it loads properly aka in time for XCPM.\n\nMach Kernel\n\nNow we know that XCPM is baked into the mach_kernel. For both OS X 10.8.5 and OS X 10.9 Mavericks and thus I skimmed through the mach_kernel and found a couple of boot arguments that we can use:\n\n-xcpm\n\n-xcpm_assert (sets machdep.asserts to 1)\n\n-xcpm_assert_trace (sets machdep.asserts_traced to 1)\n\n-xcpm_ignore_fv (ignores the frequency vectors)\n\n-xcpm_ipi\n\nidlehalt\n\ncstates\n\nsysctl\n\nThe command line tool sysctl now also includes the MIB name (Management Information Base) machdep.xcpm:\n\nsysctl machdep.xcpm\n\nAnd running the above command in a terminal window dumped this:\n\nmachdep.xcpm.mode: 1\n\nmachdep.xcpm.asserts_enabled: 0\n\nmachdep.xcpm.asserts_traced: 0\n\nmachdep.xcpm.cpu_wakeup_energy_cost_selector: 0\n\nmachdep.xcpm.disable_quiesce: 0\n\nmachdep.xcpm.mp_match: 0\n\nmachdep.xcpm.disable_idle_self_select: 0\n\nmachdep.xcpm.mp_load_txfr_coeff: 128\n\nmachdep.xcpm.scalability_cpi_threshold: 4\n\nmachdep.xcpm.scalability_cpi_demotion_threshold: 5\n\nmachdep.xcpm.scalability_reeval_interval: 1000\n\nmachdep.xcpm.scalability_eval_ratio_min: 17\n\nmachdep.xcpm.scalability_detection_enabled: 0\n\nmachdep.xcpm.hard_plimit_max_100mhz_ratio: 38\n\nmachdep.xcpm.hard_plimit_min_100mhz_ratio: 8\n\nmachdep.xcpm.soft_plimit_max_100mhz_ratio: 38\n\nmachdep.xcpm.soft_plimit_min_100mhz_ratio: 8\n\nmachdep.xcpm.ratio_changes_hf: 0\n\nmachdep.xcpm.ratio_changes_lf: 0\n\nmachdep.xcpm.ratio_change_limited: 0\n\nmachdep.xcpm.ratio_change_hf_limit: 2\n\nmachdep.xcpm.ratio_change_lf_limit: 1\n\nmachdep.xcpm.ratio_change_ratelimit_ns: 500000\n\nmachdep.xcpm.ratio_changes_total: 33246\n\nmachdep.xcpm.maxbusdelay: 4294967295\n\nmachdep.xcpm.maxintdelay: 0\n\nmachdep.xcpm.mbd_mode: 1\n\nmachdep.xcpm.mbd_applications: 437\n\nmachdep.xcpm.mbd_relaxations: 437\n\nmachdep.xcpm.forced_idle_ratio: 100\n\nmachdep.xcpm.forced_idle_period: 30000000\n\nmachdep.xcpm.deep_idle_log: 0\n\nmachdep.xcpm.qos_txfr: 1\n\nmachdep.xcpm.q_migration_ttd_min: 1000000\n\nmachdep.xcpm.q_migration_ttd_max: 100000000\n\nmachdep.xcpm.preidle_spin_tsc: 0\n\nmachdep.xcpm.qos_ratio_change_limited: 0\n\nmachdep.xcpm.qos_ratio_change_hf_limit: 8\n\nmachdep.xcpm.qos_ratio_change_lf_limit: 1\n\nmachdep.xcpm.qos_ratelimiting_enabled: 1\n\nmachdep.xcpm.quiesce_trace: 0\n\nmachdep.xcpm.deep_idle_count: 0\n\nmachdep.xcpm.deep_idle_last_stats: n/a\n\nmachdep.xcpm.deep_idle_total_stats: n/a\n\nRunning sysctl machdep.xcpm.mode shows us if XCPM is active and sysctl machdep.xcpm.ratio_changes_total shows us the number of ratio changes. Zero means that XCPM is not functioning/operational. In that case you should also check the former MIB as well.\n\nUEFI BIOS Settings\n\nLike I said earlier. We can now disable: EIST, Turbo, and CST settings in our UEFI BIOS and still enjoy using XCPM, simply because the old days are over. That is for hardware with the following product-name:\n\nMacBookAir, iMac, Macmini, MacBook Pro and MacPro\n\nAnd one of the following board-id‘s:\n\nMac-00BE6ED71E35EB86 – iMac13,1\n\nMac-031AEE4D24BFF0B1 – Macmini6,1\n\nMac-031B6874CF7F642A – iMac14,1 (Haswell/FrequencyVectors)\n\nMac-189A3D4F975D5FFC – MacBookPro11,1 (Haswell/FrequencyVectors)\n\nMac-27ADBB7B4CEE8E61 – iMac14,2 (Haswell/FrequencyVectors)\n\nMac-2E6FAB96566FE58C – MacBookAir5,2\n\nMac-35C1E88140C3E6CF – MacBookAir6,1 (Haswell/FrequencyVectors)\n\nMac-3CBD00234E554E41 – MacBookPro11,2 (Haswell/FrequencyVectors)\n\nMac-2BD1B31983FE1663 – MacBookPro11,3 (Haswell/FrequencyVectors)\n\nMac-4B7AC7E43945597E – MacBookPro9,1\n\nMac-66F35F19FE2A0D05 – MacBookAir5,1\n\nMac-6F01561E16C75D06 – MacBookPro9,2\n\nMac-77EB7D7DAF985301 – iMac14,3 (Haswell/FrequencyVectors)\n\nMac-7DF21CB3ED6977E5 – MacBookAir6,2 (Haswell/FrequencyVectors)\n\nMac-7DF2A3B5E5D671ED – Mac??? (2012 model)\n\nMac-AFD8A9D944EA4843 – MacBookPro10,2\n\nMac-C3EC7CD22292981F – MacBookPro10,1\n\nMac-F60DEB81FF30ACF6 – MacPro6,1\n\nMac-F65AE981FFA204ED – Macmini6,2\n\nMac-FC02E91DDD3FA6A4 – iMac13,2\n\nThis also means that the boot argument -xcpm_ignore_fv is only supported/works with certain board-id’s. This boot option will disable all P-States between the lowest (800 MHz) and highest non-Turbo P-State (in my case above 800 MHz and below 3.4 GHz)\n\nNative Power Management\n\nSome folks think to have “native” power management on their Haswell setups, just because their boot loader isn’t loading a DSDT and/or (generated) SSDT with proper data, but most of them are wrong. Sure. AICPUPMI may show something like this:\n\nCPU P-States [ 8 34 35 (36) 37 ]\n\niGPU P-States [ 4 7 8 9 (10) 11 12 14 15 16 17 25 ]\n\nBut all it means is that a limited number of P-States is used. It says absolutely nothing about what is driving it and if low power states (C-States) are even used or not. A next write-up from me will make this clear for everyone. Well. That is my intention.\n\nNote: The above iGPU data shows a 4, but that is wrong since the installed desktop processor can’t scale down to 200 MHz, it is however part of the AGPM data and thus we end up seeing it. A new update of AppleIntelCPUPowerManagementInfo.kext (soon to be released) will take care of it. Yes it can (link).\n\nThis is still a limited amount of information. Stuff that I gathered about XCPM during my use of OS X 10.9 Mavericks, but I am pretty sure that many blog posts and forum threads will show in the near future. And of course. You can count on me being one of the first to push out more updates about XCPM. All I need to do is to make some time for it, but I didn’t want to wait any longer with this information/data but this has to be it for today (it was a lot of work).\n\nUpdate\n\n_xcpm_core_scope_msrs is defined as 0xE2 so it seems like people with a locked (UEFI) BIOS are screwed once again. Maybe someone with a Z77 board with locked UEFI BIOS can verify this for us. And yes indeed. XCPM also supports Ivy Bridge processors.\n\nUpdate-2:\n\nI have setup my hack as a Macmini7,1 MacBookPro11,1 and now I get this:\n\nAICPUPMI:\n\nCPU P-States [ 8 (21) 34 35 36 37 38 ]\n\niGPU P-States [ 7 8 9 10 11 12 13 14 15 16 17 18 19 (23) 24 25 ]\n\nShowing all iGPU P-States, but still a limited number (7) of CPU states. Better than nothing. This with every PM option (EIST/Turbo and C-States) disabled in the UEFI BIOS, but it is still a work in progress.\n\nUpdate-3:\n\nA new error is triggered in OS X 10.9.2 Mavericks (Build 13C32) when you set Name (APLF, Zero) to anything but Zero:\n\nXCPM: P-state table mismatch (error:0x8) X86PlatformShim::sendPStates - pmCPUControl (XCPMIO_SETPSTATETABLE) returned 0x8 X86PlatformShim::start - Failed to send PStates\n\nYou may also see:\n\nX86PlatformShim::start - Failed to send stepper\n\nWhich means that the FrequencyVectors data in, for example, the Mac-F60DEB81FF30ACF6.plist is missing."
    }
}