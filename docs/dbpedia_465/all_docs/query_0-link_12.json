{
    "id": "dbpedia_465_0",
    "rank": 12,
    "data": {
        "url": "https://knight.sc/debugging/2020/02/18/building-xnu.html",
        "read_more_link": "",
        "language": "en",
        "title": "Building XNU 6153.11.26 (almost)",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Scott Knight"
        ],
        "publish_date": "2020-02-18T00:00:00",
        "summary": "",
        "meta_description": "A couple weeks ago Apple finally released the XNU source code for macOS Catalina. It looks like they have now added more of the open source packages needed to build the entire XNU kernel, so it’s time to update my build instructions.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "Scott Knight",
        "canonical_link": "https://knight.sc/debugging/2020/02/18/building-xnu.html",
        "text": "A couple weeks ago Apple finally released the XNU source code for macOS Catalina. It looks like they have now added more of the open source packages needed to build the entire XNU kernel, so it’s time to update my build instructions.\n\nIf you’re interested in looking through what’s new or changed in the latest XNU code, you can look at a diff of the latest source here:\n\nhttps://github.com/knightsc/darwin-xnu/commit/21722f3926534b9dab63b1194b0136ddd6d1fc24\n\nThe first issue that I ran into was compilation issues with dtrace-338.0.1. It looks like Apple is now including a handful of llvm header files as part of dtrace in the include subfolder. One of those files include/llvm-Support/PointerLikeTypeTraits.h still references a file from the llvmCore folder structure. So in order to get the dtrace tools to compile I had to generate the missing DataTypes.h file and update PointerLikeTypeTraits.h to reference it.\n\nWith this dtrace header fix in place the build script will run through and generate all of the depedencies needed to try to compile the kernel. Unfortunately it looks like there are some errors compiling the kernel itself that I’m still looking into.\n\nFor now if you want to follow along at home, here’s a bash script to automate the entire process of building a DEBUG kernel. (Note: It pulls the fixed dtrace header files from gists I’ve created.):"
    }
}