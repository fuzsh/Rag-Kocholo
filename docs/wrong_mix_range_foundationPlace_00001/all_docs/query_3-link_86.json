{
    "id": "wrong_mix_range_foundationPlace_00001_3",
    "rank": 86,
    "data": {
        "url": "https://github.com/terraform-google-modules/terraform-google-org-policy",
        "read_more_link": "",
        "language": "en",
        "title": "policy: Manages Google Cloud organization policies",
        "top_image": "https://opengraph.githubassets.com/5c03c08709268022313bd5434ca5eb011cf80bd48f8fbb1c861b78e01690fb38/terraform-google-modules/terraform-google-org-policy",
        "meta_img": "https://opengraph.githubassets.com/5c03c08709268022313bd5434ca5eb011cf80bd48f8fbb1c861b78e01690fb38/terraform-google-modules/terraform-google-org-policy",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "terraform-google-modules"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Manages Google Cloud organization policies. Contribute to terraform-google-modules/terraform-google-org-policy development by creating an account on GitHub.",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/terraform-google-modules/terraform-google-org-policy",
        "text": "Google Cloud Organization Policy Terraform Module\n\nThis Terraform module makes it easier to manage organization policies for your Google Cloud environment, particularly when you want to have exclusion rules. This module will allow you to set a top-level org policy and then disable it on individual projects or folders easily.\n\nThis module is meant for use with Terraform 0.13+ and tested using Terraform 1.0+. If you find incompatibilities using Terraform >=0.13, please open an issue. If you haven't upgraded and need a Terraform 0.12.x-compatible version of this module, the last released version intended for Terraform 0.12.x is v4.0.0.\n\nMany examples are included in the examples folder, but simple usage is as follows:\n\nmodule \"org-policy\" { source = \"terraform-google-modules/org-policy/google\" version = \"~> 3.0.2\" policy_for = \"organization\" constraint = \"constraints/serviceuser.services\" policy_type = \"list\" organization_id = \"123456789\" enforce = true exclude_folders = [\"folders/folder-1-id\", \"folders/folder-2-id\"] exclude_projects = [\"project3\", \"project4\"] }\n\nTo control module's behavior, change variables' values regarding the following:\n\nconstraint: set this variable with the constraint value in the form constraints/{constraint identifier}. For example, constraints/serviceuser.services\n\npolicy_type: Specify either boolean for boolean policies or list for list policies. (default list)\n\nPolicy Root: set one of the following values to determine where the policy is applied:\n\norganization_id\n\nproject_id\n\nfolder_id\n\npolicy_for: Specify the hierarchy level where the policy is applied. Can be one of the following values.\n\norganization\n\nfolder\n\nproject\n\nexclude_folders: a list of folder IDs to be excluded from this policy. These folders must be lower in the hierarchy than the policy root.\n\nexclude_projects: a list of project IDs to be excluded from this policy. They must be lower in the hierarchy than the policy root.\n\nBoolean policies (with policy_type: \"boolean\") can set the following variables:\n\nenforce: if true or null then the policy is enforced at the root; if false then policy is not enforced at the root. (default null)\n\nList policies (with policy_type: \"list\") can set one of the following variables. Only one may be set.\n\nenforce: if true or null then policy will deny all; if false then policy will allow all (default null)\n\nallow: list of values to include in the policy with ALLOW behavior. Set enforce to null to use it.\n\ndeny: list of values to include in the policy with DENY behavior. Set enforce to null to use it.\n\nList policies with allow or deny values require the length to be set (a workaround for this terraform issue)\n\nallow_list_length\n\ndeny_list_length\n\nName Description Type Default Required allow (Only for list constraints) List of values which should be allowed list(string)\n\n[\n\n\"\"\n\n]\n\nno allow_list_length The number of elements in the allow list number 0 no constraint The constraint to be applied string n/a yes deny (Only for list constraints) List of values which should be denied list(string)\n\n[\n\n\"\"\n\n]\n\nno deny_list_length The number of elements in the deny list number 0 no enforce If boolean constraint, whether the policy is enforced at the root; if list constraint, whether to deny all (true) or allow all bool null no exclude_folders Set of folders to exclude from the policy set(string) [] no exclude_projects Set of projects to exclude from the policy set(string) [] no folder_id The folder id for putting the policy string null no organization_id The organization id for putting the policy string null no policy_for Resource hierarchy node to apply the policy to: can be one of organization, folder, or project. string n/a yes policy_type The constraint type to work with (either 'boolean' or 'list') string \"list\" no project_id The project id for putting the policy string null no\n\nNo outputs.\n\nTerraform plugins\n\nTerraform >= 0.13.0\n\nterraform-provider-google >= v2.5.0\n\nIn order to execute this module, the Service Account you run as must have the Organization Policy Administrator (roles/orgpolicy.PolicyAdmin) role.\n\nBe sure you have the correct Terraform version (0.12.x), you can choose the binary here:\n\nhttps://releases.hashicorp.com/terraform/\n\nTerraform plugins\n\nterraform-provider-google >= v2.5.0\n\nFast install (optional)\n\nFor a fast install, please configure the variables on init_centos.sh or init_debian.sh script and then launch it.\n\nThe script will do:\n\nEnvironment variables setting\n\nInstallation of base packages like wget, curl, unzip, gcloud, etc."
    }
}