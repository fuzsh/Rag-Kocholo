{
    "id": "dbpedia_4195_2",
    "rank": 2,
    "data": {
        "url": "https://github.com/chunkypixel/atari-dev-studio",
        "read_more_link": "",
        "language": "en",
        "title": "studio: Homebrew game creation for the Atari 8",
        "top_image": "https://repository-images.githubusercontent.com/181376987/be167880-fcb3-11e9-85f1-1ddb696fd413",
        "meta_img": "https://repository-images.githubusercontent.com/181376987/be167880-fcb3-11e9-85f1-1ddb696fd413",
        "images": [
            "https://github.com/chunkypixel/atari-dev-studio/raw/master/images/ataridevstudio-emulator.png",
            "https://github.com/chunkypixel/atari-dev-studio/raw/master/images/ataridevstudio-workspace.png",
            "https://github.com/chunkypixel/atari-dev-studio/raw/master/images/ataridevstudio-installation.png",
            "https://github.com/chunkypixel/atari-dev-studio/raw/master/images/ataridevstudio-commandpalette.png",
            "https://github.com/chunkypixel/atari-dev-studio/raw/master/images/ataridevstudio-languageselector.png",
            "https://github.com/chunkypixel/atari-dev-studio/raw/master/images/ataridevstudio-dasmcompiler.png",
            "https://github.com/chunkypixel/atari-dev-studio/raw/master/images/ataridevstudio-statusbar.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Homebrew game creation for the Atari 8-bit consoles (VS Code Extension) - chunkypixel/atari-dev-studio",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/chunkypixel/atari-dev-studio",
        "text": "Welcome to Atari Dev Studio for designing homebrew games for the Atari 8-bit systems (Atari 2600 and 7800). Atari Dev Studio is a one-stop-shop for any programmer and includes a number of built-in features to allow you to design, develop and test games for your favourite system. Get started with batari Basic (2600) or 7800basic (7800) using easy to learn BASIC-like languages or go hard-core with assembly using dasm. During development test your creation using the Stella (2600) or A7800 (7800) emulators right from within Atari Dev Studio.\n\nAtari Dev Studio is an extension for Microsoft's cross-platform IDE Visual Studio Code and will run on the Windows, Linux and macOS platforms. The latest releases of batari Basic, 7800basic, dasm, Stella and A7800 are included so you can begin coding straight after installing the extension.\n\nAtari Dev Studio includes the following features:\n\nDevelop your game on Windows, Linux or macOS\n\nCompile source code for your Atari 2600 or 7800 using batari Basic, 7800basic or dasm\n\nUse scripting (makefile, batch or shell script files) to build your dasm projects [preview]\n\nOptionally launch and test your game using the Stella (2600) or A7800 (7800) emulators\n\nDocument outline support (batari basic, 7800basic, dasm)\n\nPeek/Go to Definition and Reference support (batari basic, 7800basic, dasm)\n\nBuilt-in Sprite Editor (also suitable for tiles and other objects) [preview]\n\nManage your project using the File Explorer or version-control your source code directly with GitHub (and others) using the built-in features of the Visual Studio Code platform.\n\nProvide references to your own specific releases of each language or emulator rather than use the includes ones via the Settings.\n\nAdditional features are planned for the future. At this time the focus is on the core functionality and ensuring full cross-platform support.\n\nVisual Studio Code (VS Code) is a streamlined code editor with support for development operations like debugging, task running, and version control. It aims to provide just the tools a developer needs for a quick code-build-debug cycle and leaves more complex workflows to fuller featured IDEs, such as Visual Studio.\n\nVS Code is a cross-platform application which runs on Windows, Linux and macOS. See requirements for the supported versions.\n\nNote: Linux users on 64-bit systems will be required to install the 32-bit compatibility libraries on your system to ensure everything will run as expected.\n\nNote: macOS users require a 64-bit operating system to fully utilise all features of Atari Dev Studio and will be required to install the SDL libraries on your system to ensure the A7800 emulator will run as expected.\n\nNote: M1 based Mac users will need to install the INTEL CHIP version of VS Code before installing Atari Dev Studio. Also thanks to Scott Lahteine (thinkyhead) the current dev stack should now have compatibility with the M1 chip (ARM64) and includes most of the recent versions of bB, 7800basic, Stella and dasm. See here for further discussion around the potential issues you may encounter.\n\nOnce you have installed VS Code (available here), open the VS Code program and complete the following:\n\nFrom the Activity Bar, click the Extensions button to display the Extensions window.\n\nFrom the Extensions window, type Atari into the Search box and press Enter to display the list of available extensions.\n\nFrom the list of available extensions, locate Atari Dev Studio and click the green Install button.\n\nUpdates are regularly provided and you will be notified via VS Code when one has been made available. Once an update has been installed you will generally be prompted to restart VS Code.\n\nTo display the available extension features press CTRL+SHIFT+P to display the Command Palette. From the Command Palette prompt type ads to short-list the available options:\n\nads: Open the Welcome page\n\nads: Compile source code (Shift+F5)\n\nads: Compile source code and run in emulator (F5)\n\nads: Kill build process\n\nads: Open PlayerPal 2600 Editor\n\nads: Open Atari Background Builder 2600 Editor\n\nWhen you load a file the initial language will be chosen based on the file extension. For example:\n\nbatari Basic (.bas, .bb) [Default for .bas files]\n\n7800basic (.bas, .78b)\n\ndasm (.dasm, .asm, .a, .h)\n\nTo change a language you can click on the Status Bar Language selector and a list will be shown allowing you to choose another language. Optionally in the Settings you will be able to either let the extension choose based on the active language or set a specific language to always compile against.\n\nPrefer using scripts to build your dasm games? If you have chosen to override the dasm compiler (select Make via the Settings) , Atari Dev Studio will scan and detect for makefile, batch (makefile.bat) or shell scripts (makefile.sh) files which are located in your root workspace folder to build your game.\n\nNote: You are totally responsible to ensure your environment is properly configured to allow you to utilise the tools and applications you will be interacting with. No support will be provided for this feature.\n\nApart from using the Command Palette to select compilation, there are a number of short-cut buttons on the Status Bar allowing you to:\n\nDisplay the extension version (might be useful at times)\n\nOpen Welcome page\n\nOpen PlayerPal 2600 Editor\n\nOpen Atari Background Builder 2600 Editor\n\nCompile source code (Shift+F5)\n\nCompile source code and launch [via emulator or cart] (F5)\n\nNote: the short-cut buttons on the Status Bar can be minimised or turned off via the Settings.\n\nThe Sprite Editor has been removed as of v0.10.0 - this is due to various reasons such as lack for proper features to edit 2600 objects as well as other missing functionality. Also the code libraries are dangerously out of date according to Github and not updatable in some cases without serious effort. Recommend using Paint.Net (Windows) or Gimp for now - any other suggestions welcome.\n\nThere are a number of compiler, emulator and editor configuration options available in Atari Dev Studio which can be changed via the Settings (Preferences -> Settings -> Extensions -> Atari Dev Studio).\n\nIt is recommended to change these VSCode settings to the following as they appear to sometimes affect the ability of the internal save functions to automatically save your open documents before continuing with the compilation:\n\nFiles: Auto Save - set to autoDelay (default is off)\n\nFiles: Auto Save Delay - set to 0 (default is 1000)\n\nNOTE: from version 0.97 onwards I have attempted to rectify this issue with an auto-retry function (will retry 5 times).\n\nDuring the development phase of the extension I've added some developer output to assist with any issues that may appear. To view this output, open the VS Code Developer Tools by selecting Help -> Toggle Developer Tools from the menu, and in the debugger window ensure the Console tab is activated. This information may help identify the area where the extension is failing to process as expected.\n\nThere are currently no known feature issues. If you find a problem please raise an issue on GitHub or contact mksmith at the AtariAge community.\n\nThis extension is only available due to the great people of the AtariAge community who have created these tools to help developers build their vision. Special thanks to the following for either allowing the inclusion of their tools or for their ongoing help and encouragement:\n\n7800basic - Mike Saarna (RevEng)\n\nbatari Basic - Fred Quimby (batari) and Mike Saarna (RevEng)\n\ndasm - the many contibutors\n\nStella emulator - Stephen Anthony (stephena)\n\nA7800 emulator - Mike Saarna (RevEng) and Robert Tuccitto (Trebor)\n\nPlayerPal 2600 and Atari Background Builder (kisrael)\n\nScott Lahteine (thinkyhead) for the M1 Mac Compatibility for bB, 7800basic, Stella, dasm (generally or close to the most recent versions)\n\nMats Engstrom (SmallRoomLabs)\n\nThe AtariAge community including Albert, CPUWiz, Random Terrain, Trebor, Synthpopalooza, sramirez2008, Defender_2600, Gemintronic, Karl G, ZeroPage Homebrew, Muddyfunster, TwentySixHundred, Lillapojkenpåön, Andrew Davie, splendidnut, andyjp, sexyUnderwriter, MikeBrownEmplas, Generation2Games, cwieland, slacker\n\nAtari Dev Studio includes the following programming languages:\n\nbatari Basic created by Fred 'batari' Quimby is a BASIC-like language used in the creation of Atari 2600 games. batari Basic is compiled to generate a binary file that can by used on actual Atari 2600 VCS hardware via cartridge (such as a Harmony or UNO cart) or by using an Atari 2600 VCS emulator such as Stella.\n\nbatari Basic is an external project is kindly currently maintained by Mike Saarna (RevEng) and can be downloaded separately here. Further information is about this release is available here at AtariAge.\n\n7800basic is a BASIC-like language for creating Atari 7800 games. It is a compiled language that runs on a computer, and it creates a binary file that can be run with an Atari 7800 emulator, or the binary file may be used to make a cartridge that will operate on a real Atari 7800. 7800basic is derived from batari basic, a BASIC-like language for creating Atari 2600 games. Special thanks to the bB creator, Fred Quimby, and all of the the bB contributors!\n\n7800basic is included as part of this extension with many thanks to Mike Saarna (RevEng). 7800basic is an external project and can be downloaded separately here. Further information about this release is available here at AtariAge.\n\ndasm is a versatile macro assembler with support for several 8-bit microprocessors including MOS 6502 & 6507, Motorola 6803, 68705 & 68HC11, Hitachi HD6303 (extended Motorola 6801), and Fairchild F8. Matthew Dillon started dasm in 1987-1988. Olaf 'Rhialto' Seibert extended dasm in 1995. dasm has also been maintained by Andrew Davie (2003-2008) and Peter Froehlich (2008-2015). The DASM team has taken over maintaining and updating dasm since 2019.\n\ndasm is an external project and can be downloaded separately here.\n\nAtari Dev Studio includes the following emulators for testing purposes:\n\nStella is a multi-platform Atari 2600 VCS emulator released under the GNU General Public License (GPL). Stella was originally developed for Linux by Bradford W. Mott, and is currently maintained by Stephen Anthony. Since its original release several people have joined the development team to port Stella to other operating systems such as AcornOS, AmigaOS, DOS, FreeBSD, IRIX, Linux, OS/2, MacOS, Unix, and Windows. The development team is working hard to perfect the emulator and we hope you enjoy our effort.\n\nStella is included as part of this extension with many thanks to Stephen Anthony. Stella is an external project and can be downloaded separately here. If you enjoy using Stella place consider donating to ensure it's continued development.\n\nA7800 is a fork of the MAME Atari 7800 driver, with several enhancements added:\n\nSupport for emulation of Proline Joysticks, VCS Joysticks, Lightguns, Paddles, Driving Controllers, Keypads, Trak-Balls, Amiga Mice, and ST Mice.\n\nMaria DMA timing has been improved further, with the addition of accurate DMA hole penalties.\n\nSelectable and improved palettes with enhanced screen options.\n\nStreamlined UI including menu options to have an Atari 7800 system focus.\n\nA bug in the existing RIOT emulation has been fixed.\n\nPOKEY sound emulation improvements.\n\nSALLY (CPU) and MARIA (Graphics chip) performance adjustments.\n\nAudio indication of no ROM loaded silenced.\n\nBIOS files no longer required and made optional.\n\nImplementation of XM control registers updated.\n\nGraphical register updates made mid-scanline are now displayed mid-scanline.\n\nBankset bankswitching support added.\n\nPOKEY@800 added for non-banked, supergame, and bankset formats.\n\nMachine targets a7800dev and a7800pdev added, which display DMA usage per-scanline.\n\nMAME compatibility and syntax has been maintained, to allow for the reuse of MAME configuration files and front-ends.\n\nA7800 is included as part of this extension with many thanks to Mike Saarna (RevEng). A7800 is an external project and can be downloaded separately here. Further information about this release is available here at AtariAge.\n\nThe following libraries may be required for Linux users:\n\nTESTED ON UBUNTU 22.04 LTS (12/07/2022)\n\nsudo apt-get install -y libsdl2-2.0-0\n\nsudo apt-get install -y libqt5widgets5"
    }
}