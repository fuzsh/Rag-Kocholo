{
    "id": "dbpedia_2827_3",
    "rank": 98,
    "data": {
        "url": "https://docs.opentripplanner.org/en/v2.4.0/Changelog/",
        "read_more_link": "",
        "language": "en",
        "title": "OpenTripPlanner 2",
        "top_image": "https://docs.opentripplanner.org/en/v2.4.0/assets/images/favicon.png",
        "meta_img": "https://docs.opentripplanner.org/en/v2.4.0/assets/images/favicon.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "../assets/images/favicon.png",
        "meta_site_name": "",
        "canonical_link": "https://docs.opentripplanner.org/v2.4.0/Changelog/",
        "text": "Changelog\n\nThe changelog lists most feature changes between each release. The list is automatically created based on merged pull requests. Search GitHub issues and pull requests for smaller issues.\n\n2.5.0 (under development)\n\n2.4.0 (2023-09-13)\n\nNotable Changes\n\nImproved support for Fares V2 #4917 #5227\n\nImproved error and timeout handling #5047 #5092 #5121 #5114 #5133 #5130 #5192\n\nEnable GTFS GraphQL API by default, remove the word \"legacy\" from its name and documentation #5202\n\nAccess and egress penalty on time and cost #5180\n\nImprove support for GBFS geofencing zones #5201\n\nReduce memory consumption by 5-8% #5223\n\nStop count limit for access/egress routing and new accessEgress configuration object #5214\n\nDetailed changes by Pull Request\n\nGenerate static documentation for GTFS GraphQL API #5069\n\nCreate a valid area even when it has too many vertices #5019\n\nConstant speed street routing #5057\n\nRemove dead build configuration parameter (extraEdgesStopPlatformLink) #5080\n\nConfigure HTTP WebServer Transaction timeouts #5047\n\nImprove Graph updaters shutdown #5092\n\nFix flex timeshift #5063\n\nMerge norway traversal calculator into default #5106\n\nUse correct GTFS sequence number in vehicle position matcher #5090\n\nOSM: Break out of processing a malformed level map #5096\n\nHandle JsonParseException #5121\n\nDo not enforce API processing timeout for parallel routing #5114\n\nRename bikeRental options to vehicleRental #5089\n\nFare sandbox cleanup, remove MultipleFareService #5100\n\nAdd validation of NeTEx timetabled passing times #5081\n\nReturn WALKING_BETTER_THAN_TRANSIT only on a fully walking leg #5091\n\nHandle CoercingParseValueException #5133\n\nRemove broken Jersey tracing configuration #5142\n\nGraceful timeout error handling #5130\n\nLog http request headers - like correlationId #5131\n\nFix vertex removal race condition #5141\n\nComment out replacing DSJ-ID from planned data with ID from realtime-data #5140\n\nRemove San Francisco and vehicle rental fare calculators #5145\n\nRemove batch query from Transmodel API #5147\n\nFix nullable absolute direction in GTFS GraphQL API #5159\n\nFix error in flex validation #5161\n\nCheck service dates instead of service ids for block id transfers #5162\n\nAdd support for mapping NeTEx operating day in operating period #5167\n\nValidate to/from in routing request #5164\n\nChanging default value for earlyStartSec #5165\n\nAdd GTFS stop sequence to GTFS GraphQL API #5153\n\nRemove walk leg in a stay seated transfer #5135\n\nValidate distinct from/to temporary vertices #5181\n\nAdd support for NeTEx taxi mode #5183\n\nFix bike triangle in Transmodel API #5179\n\nBug fixes in stop area relation processing #5166\n\nAllow underscores in GTFS feed IDs #5191\n\nArea vertex linking improvements #5209\n\nAllow multiple FlexibleAreas in a FlexibleStopPlace #4922\n\nPrevent NPE in vehicle position matching #5212\n\nEmpty stop_headsign will fall back to trip_headsign #5205\n\nTreat escalator differently from stairs, add escalator reluctance #5046\n\nFlex build time and memory optimization for large zones #5233\n\nFix pathway traversal time calculation when none is supplied #5242\n\nAdd check for null value of serviceCodesRunning in TripPatternForDateMapper #5239\n\nImprove error handling in TransmodelGraph #5192\n\nFix filtering by submode #5261\n\nAdd leg.headsign to GTFS GraphQL API #5290\n\nReturn client error for invalid Transmodel query JSON format #5277\n\nValidate missing intermediate location in via requests #5253\n\nSupport Fares v2 FareMedium and update spec implementation #5227\n\nImprove walk step narrative for entering/exiting stations and signposted pathways #5285\n\nFix walk board cost comparison and add escalatorReluctance to hash #5310\n\nRemove pathway id from REST API #5303\n\nRemove Winkki street note updater #5305\n\nExtend stop area relation linking to include bus stop and platform nodes #5319\n\nAdd access/egress penalty transmodel api #5268\n\n2.3.0 (2023-04-24)\n\nNotable Changes\n\nThe performance for trip search of large networks (> 100k stops) is improved\n\nRun only a single heuristics request (instead of two) #4537\n\nParse NeTEx fare zones from a FareFrame #4563\n\nInitial implementation of via search #4554\n\nRelaunched documentation theme #4575\n\nAdd carpool and taxi modes #4641\n\nNew filter API #4657\n\nAdaptive street graph island pruning #4688\n\nExperimental support for GBFS geofencing zones #4741\n\nUpdate GBFS support to v2.3 #4809\n\nImprove support for EPIP NeTex profile #4863\n\nUber ride hailing #4979\n\nDetailed changes by Pull Request\n\nRefactoring SIRI StopConditions from TransitAlert to EntitySelector #4196\n\nAdd cost of egress leg to the cost of the last transit leg if transit leg arrives at destination #4547\n\nAdd fallback for missing operator name #4588\n\nAdd performance test for Switzerland #4576\n\nFix interchange generation when identical consecutive stops are filtered #4586\n\nAdd alerts to leg when reading in a leg reference #4595\n\nRemove KML bike parking updater #4602\n\nAdd stationTransferPreference option for GTFS feeds #4599\n\nFix osmDefaults so they are used if something is not set in source #4635\n\nAdd demDefaults #4637\n\nAdd vector tile layer in debug client for AreaStops #4565\n\nPrevent bicycles from using stairs #4614\n\nBugfix for interchanges that start and end from the same stop #4597\n\nAdd option to define gtfsDefaults and move some parameters from root to gtfs config #4624\n\nFix: forBoarding and forAlighting on cancelled calls in transmodel api #4639\n\nMake maxFlexTripDuration configurable #4642\n\nExtract separate conditions for \"and\", \"greater than\", \"less than\" during OSM tag mapping, add Portland tag mapping #4593\n\nBetter fallback in shape geometry processing #4617\n\nFix batch queries in HSL graphql API #4663\n\nAdd filter for minimum bike parking distance #4626\n\nAdd limits for flex access/egress walking #4655\n\nMake Prometheus endpoint take Accept header into account #4674\n\nAdd entrances to parking lots that are unconnected in OSM #4666\n\nInclude crossing=traffic_signals and use it for walking/cycling penalty on crossings #4574\n\nReplace surface=cobblestone:flattened with surface=set as a mixin spec in default OsmTagMapper #4683\n\nRemove NYC fare service #4694\n\nUpgrade dependencies to take new spelling of GTFS Flex's 'drop off' into account #4693\n\nConfiguration of additional HTTP headers for GTFS-RT updaters #4684\n\nAutomatic Java dependency upgrades #4704\n\nGTFS-RT extension to add completely new routes #4667\n\nAdd validation on NeTEx flexible area import #4765\n\nDo not return a leg from a leg reference, if trip does not exist on date #4758\n\nFix direct transfer analyzer #4767\n\nRefactor data import issue reporting #4777\n\nAdd support for deleted trips & including real-time cancellations in trip search #4759\n\nFix TPoint generation for real-time generated patterns #4787\n\nImprove resiliency of the Transmodel API #4806\n\nUse TripPatterns for filtering #4820\n\nRemove all edges from stop vertex in island pruning #4846\n\nFilter functionality for GroupOfLines/GroupOfRoutes in TransmodelAPI #4812\n\nMapping for maxAccessEgressDurationPerMode in Transmodel API #4829\n\nUse headsign from the original pattern in a realtime added pattern if the stop sequence is unchanged #4845\n\nRemove RouteMatcher #4821\n\nImprove boarding location linking on platforms #4852\n\nAlways check allowed modes in VehicleRentalEdge #4810\n\nInclude cancelled stops when including cancelled trips in trip search #4851\n\nUnpreferred vehicle parking tags #4873\n\nIgnore UnrestrictedPublicTransportAreas that do not contain regular stops #4919\n\nValidate missing transit data before building transit graph #4930\n\nUse durations for Raptor search window configuration #4926\n\nAdd graph build issue statistics to metrics endpoint #4869\n\nAdd documentation about system requirements and suggestions #4937\n\nFix initial A* state of car rental #4934\n\nRemove check for (now optional) ENV-variable for GCP Authentication #4966\n\nImproved walking routes when walking starts or ends in an area #4936\n\nRemove unconnected walking areas from graph #4981\n\nFilter out duplicate-like legs in alternative legs #4868\n\nFix timeshifting of Flex ~ Walk ~ Flex paths in Raptor #4952\n\nValidate the number of service links mapped to a JourneyPattern #4963\n\nMake sure the default streetRoutingTimeout is used #4998\n\nValidate service date for SCHEDULED updates #4861\n\nFix quay duplicates overwriting stop index #4964\n\nAllow OTP to start when unexpected enum values are encountered in config #4983\n\nAdd filename to graph report #4984\n\nSupport for second criteria in McRaptor #4996\n\nInitialize RAPTOR stop-to-stop transfers on server startup #4977\n\nFix bugs related to DST and service date #5004\n\nFix validation of running period for NeTEx flexible lines #5007\n\nJSON logging #5023\n\nAdd allowOverloading parameter to GBFS updaters and fix use of it in routing #5024\n\nFix precedence rules for NeTEx flexible line booking information #5021\n\nFix transferCacheRequests when custom streetRoutingTimeout is set #5039\n\n2.2.0 (2022-11-01)\n\nNotable Changes\n\nThe performance for trip search is improved by ~20-30%\n\nSupport for GTFS-RT Vehicle Positions #3981\n\nSupport for NeTex DatedServiceJourneys #3889\n\nCost-based wheelchair-accessible routing #4045\n\nImprove stop linking by taking OSM platform polygons into account #4116\n\nProvide an OCI container image on DockerHub #4168\n\nRe-add block-based interlining #4264\n\nAdd walk safety to street routing #4328\n\nExperimental support for GTFS Fares V2 #4338\n\nDocument JVM configuration options #4492\n\nSupport for HTTPS datasource for Graph Building #4482\n\nMetrics for realtime trip updaters #4471\n\nConfiguration Documentation generated programmatically #4478\n\nDetailed changes by Pull Request\n\nNeTEx mapping for WheelChairBoarding #3945\n\nOTP support for NeTEx GroupOfLines #3928\n\nImplement trip banning #3953\n\nImprove performance of Park+Ride, Bike+Ride and Bike+Transit #3906\n\nRe-add GraphCoherencyCheckerModule #3985\n\nModify TripPattern logic for updating stop-to-stop geometry #3988\n\nRead translations from GTFS and Netex sources for stop names #3808\n\nUpdate to Java 17 and Kryo 5 #3994\n\nRemove optimize=TRANSFERS #4004\n\nEnable GBFS floating vehicles by default #4012\n\nDon't try to repair trips with negative dwell or driving times, drop them instead #4019\n\nAdd support for SKIPPED stop time updates in SCHEDULED update handling #3960\n\nElevation handling improvements #4033\n\nNeTEx mapping of WheelchairBoarding from ServiceJourney to Trip #4043\n\nAdd GBFS form factors to GraphQL API #4062\n\nAdd Geocoder API for debug client searches #4068\n\nConsider Wheelchair boarding/alightning when routing from or to directly to a stop #4046\n\nAdd an implementation for fetching alternative legs #4071\n\nAllow single SIRI-situations to fail without affecting others #4083\n\nFix problem with submode filter #4093\n\nMake maxWheelchairSlope not a hard cut-off, but apply a cost instead #4088\n\nExpose Leg.serviceDate in trip end-point #4096\n\nEnable overriding maxDirectStreetDuration per mode #4104\n\nPreserve language in SIRI/GTFS-RT alert messages #4117\n\nUse board/alight cost only for transits #4079\n\nImprove SIRI realtime performance by reducing stopPattern duplicates #4038\n\nSiri updaters for Azure ServiceBus #4106\n\nFallback to recorded/expected arrival/departure time if other one is missing in SIRI-ET #4055\n\nAllow overriding GBFS system_id with configuration #4147\n\nFix error with transfer-slack and GTFS minTransferTime #4120\n\nUse actual distance for walk distance in StreetEdge #4125\n\nDon't indicate stop has been updated when NO_DATA is defined #3962\n\nImplement nearby searches for car and bicycle parking #4165\n\nDo not link cars to stop vertices in routing #4166\n\nAdd Siri realtime occupancy info #4180\n\nAdd gtfs stop description translations #4158\n\nAdd option to discard min transfer times #4195\n\nUse negative delay from first stop in a GTFS RT update in previous stop times when required #4035\n\nOTP2 no longer crashes on invalid GTFS stop time sequences #4205\n\nCost-based wheelchair accessibility routing for streets #4163\n\nExpose SIRI ET PredictionInaccurate in Transmodel-API #4217\n\nDo not apply walkable area processing to open platform geometries #4225\n\nAdd field 'routingErrors' to GTFS GraphQLAPI #4253\n\nConfigure idempotent upload to Google Cloud Storage #4269\n\nAdd support to unprefer certain routes #4238\n\nFix inconsistent mapping of NeTEx quay publicCode #4282\n\nTake street legs into account when applying the similar legs filter #4280\n\nMake graph time zone configurable #4281\n\nSupport real-time updated wheelchair accessibility for trips #4255\n\nInclude waiting time at beginning and end in TransitGeneralizedCostFilter #4188\n\nAllow filtering out of time-shifted itineraries with same routes and stops #4298\n\nRemove unmaintained custom fare calculators for NYC, Seattle, SF Bay Area, Netherlands #4273\n\nReturn meaningful error if origin and destination are the same #4364\n\nAllow configuring maxAccessEgressDuration, searchWindow, timetableView #4377\n\nAdd custom bike rental data updater (vilkku) as an extension #4381\n\nFlex: when optimizing paths preserve egress transfers #4378\n\nSkip opening hours if no time-zone configured #4372\n\nDigitransit stop vector layer updates #4404\n\nRe-enable copying of submode to trip from route #4407\n\nConfigure each transit feed properties individually #4399\n\nAccount for boarding restrictions when calculating direct transfers #4421\n\nConfigure the import of OSM extracts individually #4419\n\nConfigure the import of elevation data individually #4423\n\nReturn typed errors from realtime updates, prepare for realtime statistics #4424\n\nAdd feature switch for matching ET messages on stops #4347\n\nMake safety defaults customizable for walking and cycling #4438\n\nFix block-based interlining when importing several GTFS feeds #4468\n\nDo not remove patterns with non-running DatedServiceJourneys #4474\n\nDiscard direct walking results if direct mode is flex #4476\n\nImplement free transfers in GTFS Fares V2 #4460\n\nRead and expose time zone in NeTEx/Transmodel API #4480\n\nRemove filtering of flex patterns in NeTEX import #4493\n\nMake walk and bicycle safety defaults adjustable based on speed limits on ways #4484\n\nEnable fuzzyTripMatching in other SIRI-ET updaters #4495\n\nAdd support for importing zip datasets containing large entries #4508\n\nAdd feature toggle for turning off the debug client #4512\n\nAdd 'exact match' specifier for way property sets #4505\n\nRemove unnecessary sourceType attribute from GTFS-RT configuration #4525\n\nDo not allow boarding/alighting at GroupStops in RAPTOR #4534\n\nRead the feed id from the agency when storing agencies #4536\n\n2.1.0 (2022-03-17)\n\nNotable Changes\n\nGBFS 2.2 is supported including \"form factors\" (bike, scooter, car) and floating vehicles (with no fixed station)\n\nConstrained Transfers (Netex interchanges / GTFS transfers.txt)\n\nTransfers for bicycle and wheelchair users distinct from walking paths\n\nSupport for GTFS-Flex v2\n\nSupport for frequency-based trips (GTFS frequencies.txt, does not exist in Netex)\n\nMany 1.5 features not fully implemented in 2.0 have been reintroduced\n\nImproved result quality relative to both 1.5 and 2.0: filtering of itineraries and selection of transfer points between routes\n\nCar and bicycle parking has been combined into vehicle parking (enhanced with real-time details like remaining parking spaces)\n\nNew system for paging of routing results via cursor token\n\nResponse times should be roughly stable since 2.0. Performance much improved over OTP1 for long searches, may be somewhat slower for short searches. Extremely depdendent on data set used, so test on your specific data.\n\nSystem integration tests for ongoing performance measurement\n\nDetailed changes by Pull Request\n\nFix NullPointerException when a RealTime update do not match an existing TripPattern #3284\n\nSupport for versioning the configuration files #3282\n\nPrioritize \"direct\" routes over transfers in group-filters #3309\n\nRemove poor transit results for short trips, when walking is better #3331\n\nGTFS Trips will by default not allow bikes if no explicit value is set #3359.\n\nImprove the dynamic search window calculation. The configuration parameters minTransitTimeCoefficient and minWaitTimeCoefficient replace the old minTripTimeCoefficient parameter. #3366\n\nAllow loops caused by turn restriction in street routes #3399\n\nApply turn restrictions when splitting edges. #3414\n\nAdd separate no-thru handling for bicycles #3410\n\nAdd German way property set #3359\n\nProcess OSM bicycle routes correctly #3359\n\nAvoid turns across traffic on bicycles #3359\n\nRemove request parameter driveOnRight and derive information from way property set #3359\n\nAdd basic support for routing using floating bikes #3370\n\nOptimize which stops are used for transfers, using generalized-cost, wait-time and transfer priority. Partially implements #2788\n\nSupport for stay-seated and guaranteed transfers #3193\n\nFix reading of cached elevation files #3455\n\nAdded BikeRentalWithMostlyWalking filter #3446\n\nImport GTFS-Flex v2 Flexible trips #3453\n\nAdd support for arriving at the destination with rented bicycles #3459\n\nAllow IntersectionTraversalCostModel to be specified in the WayPropertySet #3472\n\nFix for traveling back in time when optimize transfers #3491\n\nTransit reluctance per transit mode #3440\n\nAllow the removal of P+R results consisting only of driving of walking #3515\n\nAllow http headers to be specified for bike rental updaters #3533\n\nPer-mode reluctance parameters are added so that itineraries with multiple modes may have varying reluctances. #3501\n\nAdd maxAreaNodes configuration parameter for changing an area visibility calculation limit (https://github.com/opentripplanner/OpenTripPlanner/issues/3534)\n\nAdd maxAccessEgressDurationSecondsForMode to RoutingRequest #3560\n\nAdd bicycle safety report to report API #3563\n\nOptimize Transfers performance issue #3513\n\nDon't allow bicycle loops in A* #3574\n\nCancel individual stop on StopPattern instead of TripTimes #3575\n\nDo not allow bicycle traversal on ways tagged with mtb:scale #3578\n\nChanges to the StopTimes call #3576\n\nFix bug in optimize transfer service decorating path #3587\n\nRemove non-GBFS bicycle rental updaters #3562\n\nRemove possibility to import vehicle rental stations from OSM, make vehicle rental stations feed scoped #3601\n\nWhen importing Netex, allow bicycles on ferries by default #3596\n\nSafely catch some elevation interpolation exceptions #3412\n\nRoute not found in some conditions with boarding/alighting restrictions #3621\n\nLoad additional data from GBFS and expose it #3610\n\nAllow transfers to use customizable request options #3324\n\nCheck boarding and alighting permissions in TransferGenerator #3641\n\nStoptimes should return tripId on the REST API. #3589\n\nHandle non-symmetric transfers in RAPTOR #3634.\n\nOrder RAPTOR input data so that plans are deterministic #3580\n\nCost on transfer in Raptor #3617\n\nAllow for combined NeTEx and GTFS data sources #3650\n\nGeneralized graph connectivity pruning #3426\n\nStop linking to area/platform edges obeys area boundaries and traverse modes #3201\n\nAdd service day mapping to REST API #3659\n\nGeneralized cost on transfer in Raptor #3629\n\nAdd two new filters for use within grouping filter #3638\n\nCorrect usage of boardSlackForMode / alightSlackForMode #3693\n\nDo not parse pass-through information in GBFS mappers #3709\n\nVehicle rental updates #3632\n\nadd trolleybus & monorail support #3658\n\nDo not create zero length StreetEdges #3716\n\nAdd pickup and dropoff booking info to REST API #3710\n\nUse the whole duration of the filtered transit data for the raptor heuristic search #3664\n\nPerformance improvement for flex access/egress searches #3661\n\nAdd new routing errors for cases where all itineraries were filtered by post-processing #3628\n\nFix combination of flex access and constrained transfer #3726\n\nMerge B+R and P+R functionality into vehicle parking #3480\n\nAdd cost to maximize wait-time and avoid back-travel in optimize transfers #3654\n\nCalculate fares from itineraries not Raptor paths, calculate flex fares #3743\n\nLogging first time instance reports it is ready to use #3733\n\nAllow limiting the used vehicle rentals and parkings #3746\n\nAdd support for car and scooter rental modes #3706\n\nExtra stop priority cost in optimized transfer service #3731\n\nRemove old visibility graph library from walkable area builder #3753\n\nUpdate GtfsRealtime and include severity, effect and cause from GTFS RT #3747\n\nHandle miscellaneous service as BUS instead of crashing build #3755\n\nUpdate all timers to micrometer instances #3744\n\nBugfix: ClassCastException when planning flex routes #3762\n\nAdd mode from parent StopPlace for Quays in Netex mapper #3751\n\nMinor performance improvements #3767\n\nParallelise computing of trip pattern geometries #3766\n\nAdd flex stop to TripTimes, return geometries in GraphQL API #3757\n\nFix checking allowed boarding/alighting for unscheduled flex trips #3782\n\nCalculating number of days to use in StopTimes-request #3742\n\nWalkable area builder improvements #3765\n\nRemove hardcoded alighting/boarding on first/last stop #3784\n\nAdd support for include-file-directive in config files. #3771\n\nRemove build parameter 'useTransfersTxt' #3791\n\nAdd cursor-based paging #3759\n\nData overlay sandbox feature #3760\n\nAdd support for sandboxed realtime vehicle parking updaters #3796\n\nAdd reading and exposing of Netex submodes #3793\n\nFix: Account for wait-time in no-wait Raptor strategy #3798\n\nRead in flex window from Netex feeds #3800\n\nFix NPE when routing on a graph without transit data. #3804\n\nRead leg mode from trip, instead of route #3819\n\nUse API mapping in snapshot tests #3823\n\nStore stop indices in leg and use them to simplify logic in TripTimeShortHelper #3820\n\nInclude all trips in stopTimesForStop #3817\n\nStore all alerts and add support for route_type and direction_id selectors #3780\n\nRemove outdated realtime-update from TimetableSnapshot #3770\n\nContributing Guide #3769\n\nOTP support for NeTEx branding #3829\n\nNot allowed transfers and support for GTFS transfer points #3792\n\nSimple implementation of horizontally moving elevators (Elevator way) #3750\n\nfix: Avoid mixed path separators on Windows in Park API test #3845\n\nFilter out elevator ways that are also implicit areas #3850\n\nDynamically compute additional search days #3824\n\nMode & submode filter for NeTEx Service Journeys #3844\n\nReturn correct heuristic values, when constrained transfers is turned on #3841\n\nAdjust search window dynamically to fit the number of itineraries #3828\n\nImplement minimum transfer time from GTFS transfers.txt #3830\n\nFix number format exception for elevator duration parsing OSM data #3871\n\nInclude generalizedCost in the optimized transfers wait-time cost #3864\n\nExpose maxStopToShapeSnapDistance as build-config.json parameter #3874\n\nImplement in-seat transfers per GTFS draft #3831\n\nAdd stairsTimeFactor to StreetEdge #3832\n\nMake sure we keep the itinerary with the least number of transfers when grouping the itineraries #3833\n\nDon't expect every pattern in a route to have the specified stop with constrained transfers #3868\n\nAdd support for creating constrained transfers from real-time generated patterns #3878\n\nAccount for stay seated transfers when calculating the number of transfers #3888\n\nAdd Hungarian translation #3861\n\nAdd support for \"via\" in NeTEx headsigns #3883\n\nNeTEx mapping to StopTime.timepoint #3898\n\nOptimize RAPTOR trip search by pre-calculating arrival/departure time arrays #3919\n\nMake turn restrictions faster and thread-safe by moving them into StreetEdge #3899\n\nAdd routing using frequency trips #3916\n\nRemove ET realtime override code #3912\n\nAllow traversal of pathways without traversal time, distance or steps #3910\n\n2.0.0 (2020-11-27)\n\nSandbox for experimental features #2745\n\nBugfix for Missing platforms for stops in GTFS import causes a NPE #2804\n\nRemove extra Djikstra implementations\n\nRemove redundant LineStrings in order to save memory #2795\n\nNeTEx import support #2769\n\nNew Transit search algorithm, Raptor, replaces the AStar for all transit searches.\n\nAdded NeTEx notices #2824\n\nMake transfers and access/egress use effectiveWalkDistance to take slopes into account #2857\n\nAdd MultiModalStation and GroupOfStations to OTP model and added these to the NeTEx import #2813\n\nCombined OSM loaders, removing several rarely used ones #2878\n\nNew Java Code Style (part of #2755)\n\nCleanup and rename Graph Builder Annotations, now Data Import Issues #2871\n\nBugfix for graph building crashing on unsupported modes #2899\n\nAdd command line parameter for building partial graphs #2583\n\nRefactor GenericLocation/AStar/RoutingContext to allow multiple start vertices #2887\n\nNew Transit search algorithm, Raptor, replaces the AStar for all transit searches.\n\nUpdate only the relevant parts of the TransitLayer each time an update is applied #2918\n\nAbility to switch off the fare service#2912.\n\nLimit the transit service period#2925.\n\nRemoved unwanted cost added for wait time between access and transit with RangeRaptor #2927\n\nDynamic search parameters, calculate raptor search-window when needed. #2931\n\nSupport for next/previous paging trip search results #2941\n\nFix mismatch in duration for walk legs, resulting in negative wait times #2955\n\nNeTEx import now supports ServiceLinks #2951\n\nAlso check TripPatterns added by realtime when showing stoptimes for stop #2954\n\nCopy geometries from previous TripPattern when realtime updates result in a TripPattern being replaced #2987\n\nSupport for the Norwegian language.\n\nUpdate pathways support to official GTFS specification #2923\n\nSupport for XML (de-)serialization is REMOVED from the REST API #3031\n\nRefactor how to specify access/egress/direct/transit modes in the internal model and the Transmodel API #3011\n\nMake agency id feed scoped #3035\n\nRefactor kiss and ride to a more general car pickup mode #3063\n\nMap NeTEx publicCode to OTP tripShortName and NeTEx private code to OTP internalPlanningCode #3088\n\nAdd MQTT transport for the GTFS-RT trip update updater #3094\n\nAdd FinlandWayPropertySetSource #3096\n\nMap NeTEx publicCode to OTP tripShortName and NeTEx private code to OTP internalPlanningCode #3088\n\nReading and writing files(CONFIG, GRAPH, DEM, OSM, GTFS, NETEX, DATA_IMPORT_ISSUES) is changed. All files, except configuration files, are read from a data source. We support Google Cloud Storage and the local file system data sources for now, but plan to add at least support for AWS S3 #2891\n\nRemove AlertPatcher #3134\n\nUpdate DebugOutput to match new routing phases of OTP2 #3109\n\nFilter transit itineraries with relative high cost #3157\n\nFix issue with colliding TripPattern ids after modifications form real-time updaters #3202\n\nFix: The updater config type is unknown: gtfs-http #3195\n\nFix: Problem building and loading the GTFS file in San Fransisco Bay Area #3195\n\nFix: The BusRouteStreetMatcher and TransitToTaggedStopsModule graph builder modules are not run if the graph is build in two steps, and add progress tracker to BusRouteStreetMatcher. #3195\n\nImprovement: Insert project information like Maven version number into configuration files. #3254\n\nAdded pathway FeedScopedId as the route text to trip plan responses. #3287\n\nPorted over from 1.4 and 1.5\n\nAdd application/x-protobuf to accepted protobuf content-types #2839\n\nMake OTP run on Java 11 #2812\n\nFixes surefire test failure during build #2816\n\nDisable linking from already linked stops #2372\n\nAdd Way Property Set for the UK #2818\n\nRemove Open Traffic prototype code #2698\n\nDocs: improve configuration documentation\n\nUpdate onebusaway-gtfs to latest version from OBA project #2636\n\nRemove the coupling to OneBusAway GTFS within OTP's internal model by creating new classes replacing the external classes #2494\n\nAllow itineraries in response to be sorted by duration #2593\n\nFix reverse optimization bug #2653, #2411\n\nincrease GTFS-realtime feeds size limit from 64MB to 2G #2738\n\nFix XML response serialization #2685\n\nRefactor InterleavedBidirectionalHeuristic #2671\n\nAdd \"Accept\" headers to GTFS-RT HTTP requests #2796\n\nFix minor test failure against BANO geocoder #2798\n\nFix frequency bounds checking #2540\n\nRemove dependency on Conveyal jackson2-geojson\n\nChanged calculation of slope costs #2579\n\nReplace Java built in serialization with faster Kryo #2681\n\nSupport OSM highway=razed tag #2660\n\nAdd bicimad bike rental updater #2503\n\nAdd Smoove citybikes updater #2515\n\nAllow big GTFS-realtime feeds by increasing protobuf size limit to 2G #2739\n\nCannot transfer between stops at exactly the same location #2371\n\nImprove documentation for mode routing parameter #2809\n\nSwitched to single license file, removing all OTP and OBA file license headers\n\n1.3 (2018-08-03)\n\nFix stop linking to only one edge of platform #2472\n\nLog and allow changing number of HTTP handler threads\n\nUpdate Dutch base fare from 89 to 90 cents #2608\n\nAdd Dutch fare service #2571\n\nRevise unit tests to use less memory\n\nRun all graph updater setup methods sequentially #2545\n\nAllow vehicle rental systems with cars (stopgap parameter on bike rental)\n\nBump R5 version to get newer gtfs-lib and FST serialization\n\nMove stopClusterMode parameter from routing config to build config #2558\n\nUpdate encrypted Maven artifact signing key (it expired)\n\nClean up logging\n\nRemove/update deprecated HTTPClient, add missing SSL ciphers #2451\n\nMake maxTransfer options configurable through scripting API #2507\n\nFix scripts when entity IDs contain colons #2474\n\nAdd HTML report for stops more than 20m from linked road #2460\n\nUpdate fares in NycFareServiceImpl #2466\n\nCompact legs NPE fix #2449 #2490\n\nDocs: elevation data configuration, USGS DEM files\n\nDocs: Update list of deployments\n\nDocs: API, list of deployments, usage stats and tutorials\n\nDocs: Update leadership committee listing following Boston Summit\n\nDocs: Update OTP logo (Thanks Kate Chanba!)\n\n1.2 (2017-09-18)\n\nAdd support for consuming GBFS bike-rental availability feeds. #2458\n\nAdd GBFS configuration example\n\nAdd flag for including requested start/end time in maxHours in planner API. #2457\n\nAdd maxTransferDistance graph builder parameter\n\nAdd option for filtering non-pickup stops in TransitIndex stop times functions. #2377\n\nSupport foot/bicycle=discouraged OSM tag. #2415\n\nImprove linking of transit platforms to connecting access ways. #2422 / #2428\n\nFix bug when building graph with parent station transfers. #2404 / #2410\n\nFix bugs in park and ride search. #2424\n\nSupport different stop ID formats in field trip module\n\nUpdate URL in BANO geocoding module. #2438 / #2439\n\nAdd more debug information related to trips matching using GTFS-RT feed. #2432\n\nUpdate default PATH_NOT_FOUND message to new wording developed w/ TriMet. #2355\n\nUpdate Travis build configuration to not attempt GPG operations. #2441\n\nFix javadoc URL in scripting documentation. #2437\n\nAutomatically link to GitHub issues in Changelog. #2426\n\nExpose FeedInfo objects in the Index API #2456\n\nChanges to Puget Sound region fare calculation #2484\n\nFix coordinatates when clustering by parent station #2447\n\nAllow setting OSM Way Properties from build-config.json #2389\n\nOptionally compact (\"reverse-optimize\") results with complete reverse search #2449\n\nAdd updater for urbaninfrastructure city bikes #2448\n\nMiscellaneous documentation updates\n\n1.1 (2017-03-16)\n\nDeploy to Sonatype OSSRH and Maven Central\n\nDocumentation updates including repo links\n\nNew router-config stopClusterMode: clustering by parent station or geography #2364\n\nSpanish and Portuguese UI Translations\n\nIn TimeSurface API, serialize travel times to every point when detail=true\n\nMake OSM highway=corridor pedestrian routable\n\nFix GraphIndex.stopTimesForStop to search on the request day rather than now\n\nUpdate GraphQL to latest version and improve support for complex arguments #2367\n\nAdd support for operationName to the graphql endpoint\n\nFix findClosestStopsByWalking, properly set RoutingContext\n\nFixed major routing problem where dead-end SimpleTransfers blocked walking paths #2414\n\nCreated Github issue template\n\nAvoid negative elevation figures: Compute ellipsoid-geoid offset and optionally apply to elevation calculations #2301\n\nFix VCub bike share updater using new API variable names.\n\nFix spurious different-day warning #2399\n\nShutdown hook to gracefully shut down Grizzly #2384\n\nAdded headsign attribute for stoptimes in GraphQL #2224\n\nAllow Cars on highway=*;bicycle=designated #2374\n\nExpose PruneFloatingIslands parameters in build-config.json\n\nLazy initialization of stop clusters where needed\n\nInclude Agency/Route branding in responses\n\nInclude turn-by-turn walking directions for transfer legs #1707\n\nOutput error when edge lengths are negative, and set them to 1mm\n\nAdd disableAlertFiltering API flag #2351\n\nDo not show arrival times at terminal stops in stop time viewer #2357\n\nIndex API now returns stop information URL, enabling hyperlinks in trip viewer #2352\n\nRemove all unused model classes for index API #1301\n\nApply an interlining fix from 0.10 branch\n\nAllow quoted search phrases in the Lucene search #2279\n\nRe-implement maxHours filter #2332\n\nProperly set wheelchairAccessible on area edges\n\nFixed file URL in test #2339\n\nAdd details field to fares, listing which legs each fare applies to #1699\n\n1.0 (2016-09-09)\n\nFix problem with missing embedded router-configs.\n\nCheck whether trips have been banned when applying in-seat transfers (interlining).\n\nLoad embedded config for existing graphs on disk.\n\nApply max walk distance to transfers, not just initial and final walk.\n\nRemove Conveyal tiles from client (which was getting expensive), add free Carto/MapZen tiles.\n\nFixed headsigns: in itineraries, headsign for a leg used to always be the last stop.\n\nUpdated default map tile sets in the client because Mapquest is no longer gratis.\n\nFix problem with empty list ??? #1873\n\nRewrite of intermediate places handling in GraphPathFinder. Original request is cloned for each intermediate path.\n\nRoutes in GraphQL API Change \"type\" to \"mode\" and add \"type\" as route type to Route for GraphQL\n\nAdd effective end date to alerts (from HSL).\n\nRutebanken Citybike bike share.\n\nCorrect TPEG transport modes TPEG 401 and 402 to be \"subway\".\n\nIgnore exceptions caused by errors in OSM linear rings.\n\nUpdated to version 2.18 of Jersey to fix hanging threads in Grizzly.\n\nRemoved confusing \"Busish\" and \"Trainish\" pseudo-modes.\n\nFareService for Seattle: allow specifying fares in GTFS instead of hard-coding them in Java. Senior/youth fare prices are given in an extra column in fare attributes. Per-trip fares are taken into consideration when calculating fares in this region.\n\nUpdate new linker to link to transitStops if no streets are found.\n\nShow the name supplied in the request for the origin/destination points in the response.\n\nThrow a trivialPath exception if start/end point are on the same edge.\n\nSwitch to only use the new SimpleStreetLinker, even for search start and end points. Completely removed old linker classes. Changes for proper handling of wheelchairs and bicycles at start and end points.\n\nProperly handle null timetableSnapshots when there is no real-time data.\n\n0.20 (2016-06-10)\n\nRe-enabled Enunciate, which works properly with OTP now. This means we have auto-generated API docs.\n\nMake headsign and block ID visible in the Stop Viewer.\n\nNYC fare service: filter out non-NYC agencies.\n\nOptionally log all requests to a file.\n\nMake max distance for in-seat transfers (interlining) configurable. Previously it was hardcoded at 200m.\n\nPolish translation for web client.\n\nIntroduced bikeShareId in trip plans (separate from stopIds).\n\nSupport for ShareBike bike rental system in Oslo, Drammen, Trondheim, Milan, Barcelona and Mexico City among others.\n\nChanged default waitAtBeginningFactor and timeouts.\n\nShow alert in client when itinerary departure date differs from search date.\n\nExposed realtimeState in GraphQL responses.\n\nFixed a routerConfig NullPointerException.\n\nSupport for San Francisco bike share from leoromanovsky.\n\nGraphQL API for most transit data from hannesj.\n\nDisallow shortcuts through multiple StationStopEdges.\n\nAdd support for airplanes (from HSL)\n\nMajor simplification and correction of the longDistance heuristic, removed obsolete runState.options.heuristicWeight.\n\nReturn default OSM level for ways that are not found.\n\nProfile routing: use earliest arrival objective function on-street, properly handle TrivialPathExceptions.\n\nFixed ID matching when applying AlertPatches.\n\nFixed banning of agencies in multi agency feeds.\n\nMore coherent handling of feed IDs as scope for GTFS IDs.\n\nAdded transit service start and end timestamps to BuildInfo.\n\nHandle embeded router configuration for POSTed graphs and zips for building.\n\nSimplified router-config handling.\n\nProperly lazy-initialize profile routing stopClusters. Added stop clusters to the Index API.\n\nCompletely removed the ill-advised path parser system, which was too clever for its own good.\n\nSort itineraries by total travel time rather than in-transit time.\n\nRental bikes: allow loading generic KML.\n\nRemoved the experimental TransportNetwork classes, which shared no code with the rest of OTP and were duplicated in the R5 project. There are still some elements that can be cleaned out when only R5 is used by Conveyal's analysis system. The broker code in OTP is now able to start up R5 workers for Analyst.\n\nUse the Conveyal fork of the OBA GTFS loader, so that we can add our own extensions to GTFS.\n\nUpdated docs to offer Conveyal Maven repo as a place to get prebuilt OTP.\n\n0.19.0 (2016-05-25)\n\n0.18.0 (2015-05-29)\n\nAbility to load elevation from projected GeoTIFF\n\nClarified axis order for unprojected GeoTIFFs\n\nStop viewer and car distance fixed in client\n\nServer-side localization improvements\n\nProper names for intersections\n\nJSON config for loading bikeshare and park and ride lots from OSM\n\nMore ways to fetch isochrones\n\nFixed frequency-based routing in repeated RAPTOR\n\nCalculate graph envelope at build time not runtime\n\nFixed slow excessive HashGrid search\n\nReadthedocs documentation updates\n\n0.17.0 (2015-05-14)\n\nAllow fetching arrivals/departures over a particular time window\n\nCompletely new spatial analysis implementation: repeated RAPTOR search at every minute in a departure time window\n\nMore reproducible spatial analysis results across similar graphs, thanks to more consistent splitting of streets etc.\n\nSigmoidal accessibility metric rolloff (rather than hard-edged cutoff)\n\nCorrection of equirectangular projection used in spatial analysis\n\nImproved, simplified, deterministic linking of stops into the street network\n\n0.16.0 (2015-05-07)\n\nSeveral improvements to OSM tag based traversal permissions\n\nScripting documentation\n\nAccept TIFF files whose names end in .tiff not .tif\n\nStore distances (not times) in Analyst Samples to allow variable walk speed\n\nFixed bug in graph auto-scanning\n\nFixed client-side bug in first and last itinerary buttons\n\nOTP startup scripts no longer use wildcards\n\nTransit, bike rental, and parking linking done in one module\n\nElevation tiles for the US can be fetched from Amazon S3\n\nBumped language level to Java 8 (lambda functions, method references, collection streams)\n\n0.15.0 (2015-04-14)\n\nFare module for Seattle\n\nJSON fare module and OSM street naming configuration\n\nSignificant improvements to speed and result quality of Profile Routing\n\nSupport for added and modified GTFS-RT trips (thanks Jaap Koelewijn of DAT Mobility and Plannerstack)\n\nDetailed edge lists in profile routing responses (for Transitive.js)\n\nSupport for multiple access modes including bike rental in profile routing\n\nFixes to graph reloading via web API\n\nImproved comments in code and documentation of PointSets\n\nPulled MapDB GTFS loader out into a separate repo\n\nWorking artifact version was 0.15.0-SNAPSHOT instead of 1.0.0-SNAPSHOT (anticipating frequent point releases)\n\n0.14.0 (2015-03-28)\n\nJSON configuration of graph building and routers\n\nBegan moving documentation (including this changelog) into the OTP repo and rewriting it page by page. It is built statically from Markdown using mkdocs and published on readthedocs.\n\nStreet edge lists and bike rental station IDs in profile routing results (allows better rendering)\n\nImproved correctness of profile routing\n\nQualified modes including rented bikes work in profile routing\n\nSimplification of qualified mode sets\n\nElevation models are loaded from TIFFs in graph directory\n\nTiles for differences between TimeSurfaces\n\nRestructured relationship between Routers and Graphs\n\nVarious changes enabling use of Analyst features in a cluster computing environment.\n\nRemoved several single-implementation interfaces, factories, services and other superfluous abstractions\n\nVarious client fixes related to the transit index API\n\nRevised nearby stops logic and transfer generation to eliminate useless transfer edges\n\nNew Index API endpoints for geometries, transfers etc.\n\nIsochrone generation fixes\n\nDefault mode of operation is now “long distance mode”\n\nProcess for finding alternative routes is now based on banning trips and retrying, while reusing the heuristic\n\nOptimization objective functions are swappable, and have been simplified and corrected\n\nAll client Javascript librariess are now pulled from a CDN\n\nDutch BAG and French BANO geocoders\n\nBus to street matching improvements\n\nComplete MapDB based GTFS and OSM loader libraries (will become separate projects, not yet connected to OTP graph builder)\n\nAPI documentation generation working again\n\nDisable some time consuming graph building steps by default\n\nFinnish and Swedish translations\n\nSubway-specific JSON configuration options (street to platform time)\n\nRealtime fetch / streaming configurable via JSON\n\nStairs reluctance is much higher when carrying a bike\n\nGraph visualizer routing progress animates when a search is triggered via the web API\n\nAssume WGS84 (spherical distance calculations) everywhere\n\nRemoved custom motor vehicle (which was unmaintained and not documented)\n\nAbility to poll for bike rental locations only once at startup\n\nStoptimes are fetched for a specific service day in index API\n\nBicycle triangle support in profile routing\n\nProper handling of multiple access modes with different speeds in profile routing\n\nCommand line option to output OTP's version\n\n0.13.0 (2014-12-05)\n\nDetect apparent errors in GTFS interlining\n\nLong distance mode: use a pure weight-based state comparison, and use trip-banning retrying logic to get multiple paths. This compromises correctness somewhat but brings search times back within reason for large regional graphs. Also, we create significantly less SimpleTransfers.\n\nProgress on GTFS reading and writing library (not yet used by OTP).\n\nBug fixes for tiny street edges, time zones.\n\nDeployment of artifacts to maven.conveyal.com via S3.\n\nHandle park and ride lots that have roads running through them, but don't share nodes with those roads.\n\n0.12.1 (2014-11-17)\n\nFixed threading problem caused by graph visualization instrumentation #1611\n\nFixed 'unconnected areas' infinite loop #1605\n\n0.12.0 (2014-11-11)\n\nGraph building from zipball of data sent over the wire\n\nOTP-specific GTFS loader library with error checking and recovery\n\nBike and car park and ride improvements\n\nStable hash codes for stop patterns and trips\n\nBicycle safety and wheelchair access tile generators\n\nNewer versions of Grizzly, Jackson, and Enunciate (documentation generation now works)\n\nRedesigned HashGrid spatial index\n\nSignificant reduction in graph size in memory and on disk\n\nImproved internationalization\n\nAbility to pause and step search in graph visualizer\n\nAdditional graph visualizer modes for spotting overbranching\n\nMovement toward 1.0 web services API\n\nKiss and Ride\n\nComplete removal of Spring\n\nComplete removal of Lombok\n\nCORS replaces JSONP\n\nPointset classes for dealing with one-to-many calculations and accessibility calculations\n\nExperimental \"Profile routing\" which enumerates reasonable route combinations over a time range rather than exact itineraries\n\nSingle-module Maven build (complete elimination of submodules)\n\nAlternate Gradle build script\n\nfull internationalization of the map-based web client\n\nbasic Lucene-based built-in geocoder\n\n0.11.0 (2014-03-24)\n\nBuilt-in HTTP server layer, making it possible to distribute OTP as a standalone JAR\n\n\"Long-distance\" mode for large graphs, including bidirectional goal direction heuristic.\n\nSimplified Maven project structure with less submodules\n\nGTFS-RT trip update support, including streaming incremental data, which directly affects route optimization\n\n0.10.0 (2014-03-18)\n\nThis release was made to consolidate all the development that had occurred with a 0.9.x-SNAPSHOT Maven version. The changes were very significant and it was not appropriate to tag them as a minor bugfix release after the 0.9 tag. Though this release was performed at the same time as 0.11.0, it represents a much earlier stage in the development of OTP.\n\n0.7.0 (2012-04-29)\n\nBike rental support (thanks Laurent Grégoire)\n\nRealtime bike rental availability feed support\n\nUpdated to new version of One Bus Away GTFS/CSV, fixing timezone and string interning issues (thanks Brian Ferris)\n\nBugfixes in area routing, OSM loading, nonexistant NED tiles, route short names\n\nDutch and French language updates\n\nCatch negative edge weights due to broken GTFS\n\nSignificant (10-20%) speedup by moving a field into StateData (thanks Laurent Grégoire)\n\n0.6.0 (2012-04-25)\n\narea routing\n\nmore lenient parsing of times\n\nnew directions icon set with SVG sources (thanks Laurent G)\n\n0.5.4 (2012-04-06)\n\ncatch 0 divisors in NED builder, preventing NaN propagation to edge lengths\n\navoid repeated insertion of edges into edge lists, which are now threadsafe edge sets\n\nidentity equality for edges\n\nbounding box check in UnifiedCoverage (speed up NED loading)\n\nDutch API messages\n\nelevation override fix\n\nless verbose graph builder (be sure to check graphbuilder annotation summary)\n\nreplacement streets given names\n\ngeocoder bug fix (thanks Laurent Gregoire)\n\ngit commit IDs included in MavenVersion, allowing clearer OTP/Graph version mismatch warnings\n\nfix problems with immediate reboarding and unexpected edges in itinerary builder\n\nfavicon (thanks Joel Haasnoot)\n\nLegs in API response have TripId (for realtime information)\n\nPolish locale (thanks Łukasz Witkowski)\n\ntransfers.txt can define station paths, entry costs for stations\n\nallow loading a base graph into graphbuilder instead of starting from scratch\n\n0.5.3 (2012-03-23)\n\nGTFS loader now loads feeds one-at-a-time, allowing per-feed configuration\n\nhalf-written graph files are now deleted on graph build error\n\nDST issue OTP-side fixes, tests adjusted to use timezones\n\nupdated French translation\n\nfixed problem with loop ways in OSM\n\ngraph coherency checking\n\nimproved OSM floor number handling\n\nhandle units in ele tags\n\nferry icons (thanks Joel Haasnoot)\n\nmapbox streets tile layer is now the default\n\ncomplete Dutch translation\n\n0.5.2 (2012-03-20)\n\nhop speed/distance checks, duplicate shape point filtering, etc.\n\n0.5.1 (2012-03-16)\n\nmore transit index features\n\ndefault agencyIDs now determined on a per-feed basis\n\nfixed fare overflow problem\n\nfixed bug in loop road turn conversion\n\nadditional graphbuilder warnings and annotations\n\nfixed a batch of bugs found by fixbugs\n\n0.5.0 (2012-03-09)\n\nstop codes, zones, and agency names in planner responses\n\nencapsulation of edge list modifications\n\nexpanded edge and vertex type hierarchy\n\nuse mapquest OSM server by default\n\nTurkish locale (thanks Hasan Tayyar Beşik)\n\nGerman and Italian locales (thanks Gerardo Carrieri)\n\nbookmarkable trip URLs (thanks Matt Conway)\n\nelevator and OSM level support (thanks Matt Conway)\n\nBART/Muni fare service\n\nrelease and javadoc/apidoc publishing automation\n\ngraph versioning based on Maven artifact version\n\nAPI for browsing graph internals\n\nimproved stop linking\n\noptional island removal graphbuilder step\n\nand of course, lots of bugfixes\n\n0.4.4 (2012-02-06)\n\nRelease in anticipation of upcoming merges."
    }
}