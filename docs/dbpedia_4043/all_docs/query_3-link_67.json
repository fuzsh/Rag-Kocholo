{
    "id": "dbpedia_4043_3",
    "rank": 67,
    "data": {
        "url": "https://docs.mapbox.com/data/tilesets/reference/mapbox-streets-v8/",
        "read_more_link": "",
        "language": "en",
        "title": "Mapbox Streets v8 | Tilesets | Mapbox Docs",
        "top_image": "https://static-assets.mapbox.com/branding/social/social-1200x630.v4.png",
        "meta_img": "https://static-assets.mapbox.com/branding/social/social-1200x630.v4.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Reference documentation for the Mapbox Streets v8 vector tileset containing streets, buildings, place names, water, and land data.",
        "meta_lang": "en",
        "meta_favicon": "https://static-assets.mapbox.com/branding/favicon/v2/apple-touch-icon.png?v=gAd4JjrGWl",
        "meta_site_name": "Mapbox",
        "canonical_link": "https://docs.mapbox.com/data/tilesets/reference/mapbox-streets-v8",
        "text": "This tileset reference document includes information to help you use the data in the Mapbox Streets v8 tileset.\n\nOverviewâ\n\nMapbox Streets v8 is a Mapbox-provided vector tileset that includes geometries and metadata for roadways, terrain, administrative boundaries, building footprints, land use classifications, rail stations, points of interest, and more.\n\nFor full examples of using Mapbox Streets vector tiles to create a map style, see the default styles in Mapbox Studio.\n\nMapbox Streets v8 vector tiles are based on a combination of proprietary Mapbox data, Open Data projects such as OpenStreetMap, Microsoft Open Maps and Wikidata, as well as data vendors such as Zenrin in Japan.\n\nThe current supported version of the Mapbox Streets vector tiles receives regular data updates as new information becomes available and existing information is improved.\n\nData qualityâ\n\nBesides the daily efforts of contributors all over the globe, the OpenStreetMap community uses several other methods for identifying errors in the data, including multiple quality-assurance feedback tools and a flagging system that allows users to identify possible mistakes or areas that may need attention from someone with local knowledge.\n\nMapbox also has a dedicated data team that is committed to ensuring the quality of Mapbox maps and to adding and improving features all over the world. We also use an automated quarantine system that detects changes to the map that look like accidental editing mistakes or vandalism and stages them for manual review by our data team.\n\nAttributionâ\n\nWhen you publicly use styles or software that use Mapbox Streets vector tiles, you must display proper attribution.\n\nA list of sources utilized in creating Mapbox Streets is available on the Mapbox website.\n\nMultiple geometry typesâ\n\nMapbox vector tiles support multiple geometry types in the same layer. Mapbox Streets v8 takes advantage of this in some layers.\n\nA geometry in the vector tile can be one of three types:\n\nIn Mapbox Studio, you can select one, two, or all the three types with the Geometry Type toggles in each layer's data selection tab.\n\nIDsâ\n\nEach feature in a vector tile contains an object ID. This ID is not available for styling via Mapbox Studio, but can be used to interact with features at runtime with Mapbox GL JS and other vector tile libraries.\n\nThe ID is derived from a unique ID assigned to each feature by the relevant data vendor or Open Data project.\n\nOften, multiple objects from the same or multiple proprietary sources are combined into a single object in our vector tiles. For example, water polygons are unioned to avoid seams, and road lines are joined to save space. In these cases the ID is either 0 or one of the input IDs chosen at random.\n\nData stabilityâ\n\nAs we make ongoing data updates to reflect changes in the world or integrate new data vendors, we may also add new layers, fields, and values to Mapbox Streets v8 tiles. Our goal is to do this in a way that preserves compatibility with existing v8 styles. Here's what you need to know about how Mapbox Streets v8 may change in the future:\n\nLayers\n\nExisting layers will not be renamed or removed.\n\nNew layers may be added.\n\nFields\n\nExisting fields will not be renamed or removed.\n\nNew fields may be added to any layer.\n\nField values\n\nThe meanings of existing values will not change.\n\nValues of specific features may change to correct errors or reflect real-world changes.\n\nNew values may be added to any field unless otherwise noted in this documentation.\n\nFields that may contain null values are noted in this documentation, and null values will not be introduced to existing layers that do not already have them.\n\nYou should design your styles to account for the possibility of new field values. Be explicit in your filters where possible, and make sure to include appropriate default styles when using expressions.\n\nCommon fieldsâ\n\nThere are several fields that are used across several layers. These fields are detailed below instead of being duplicated for each relevant layer in the Layer reference section.\n\nname text and name_<lang-code> textâ\n\nLabel names are available in many languages. The name_* value is null if no translation data is available for a given feature. When styling label layers, you are responsible for determining an appropriate fallback approach.\n\nIf the name field is null for a particular feature, then all the language-specific name_* fields is also null. This means that name should always be the final fallback value if you want to include it in your set of label languages.\n\nIf the name field contains text to be rendered on multiple lines (horizontally or vertically) the text is separated by zero-width space characters.\n\nFor languages that may have regional variations, the tileset gives no particular preference where place name spellings differ.\n\nname_script textâ\n\nWherever there is a name field, there is also a name_script field that describes the primary script used in that text. This can be helpful for customizing fonts or language fallback conditions. Values include:\n\nThe value is null if name is also null.\n\nsizerank numberâ\n\nThe sizerank field is a value from 0-16 included in label layers where points or lines have been derived from polygons, such as poi_label, natural_label, airport_label. It lets you style and filter based on the size of a feature relative to the current zoom level. The tileset assigns the largest objects sizerank=0 and assigns points sizerank=16.\n\nA single feature has a changing sizerank as you zoom in and the relative size of the feature increases. For example, a park might have a sizerank of 9 at z11, 6 at z12, and 2 at z13.\n\nThe value is never null and is always be within the range 0-16.\n\nfilterrank numberâ\n\nThe filterrank field is a value from 0-5 used to customize label density. It's intended to be used in style layer filters (in the 'Select data' tab in Mapbox Studio). The value is relative to the current zoom level. For example, the same POI might have filterrank=5 at z10 while having filterrank=1 at z14, since zooming in changed the relative importance of the POI.\n\nYou could set filterrank<=1 to only show the most prominent labels, filterrank<=3 to produce moderate density, and filterrank<=5 to see as many labels as possible.\n\nThe value is never null and is always in the range of 0-5.\n\nmaki textâ\n\nSome layers have a maki field designed to make it easier to assign icons using the Maki icon project or other icons that follow the same naming scheme. Each layer uses a different subset of the names, but the full list of values used in Mapbox Streets is compiled here so you can make sure your style has all the icons needed across different layers.\n\nNot all icons from the Maki project are used in Mapbox Streets, and different types of related features can sometimes have the same maki value (for example universities and colleges, or art supply shops and art galleries). Nameless POIs always have a Maki value of marker, the generic default.\n\nThe possible values for the maki field for all layers are listed below. Icon names that were not part of any layer in v7 are marked with ð. No further values will be added in Mapbox Streets v8.\n\nairport_label:\n\nnatural_label:\n\npoi_label:\n\ntransit_stop_label:\n\nmaki_beta textâ\n\nMaki icons that might be supported in future versions of Mapbox Streets are in maki_beta field. Possible values include, but not limited to:\n\npoi_label:\n\nnatural_label:\n\nmotorway_junction:\n\nworldview textâ\n\nMapbox Streets v8 introduces the notion of worldviews to the admin, airport_label, natural_label, and place_label data layers. The vector tiles contain multiple versions of some features, each with a worldview value indicating the intended audience. When the worldview filter is applied, it must include both all and one of the region-specific values. Additionally, for all worldviews except for US worldview, there are classes in respective layers, prefixed with disputed_ which user must select in conjunction with the worldview filter; classes in respective layers in US worldview do not have the disputed_ prefix.\n\nA worldview filter must be applied to style layers that use the admin data layer. It is highly recommended to also use a worldview filter with airport_label, natural_label, and place_label data layers to communicate intent, but if no worldview is applied to those layers, the labels displayed on the map will reflect the US worldview.\n\ndisputed_ class textâ\n\nMany layers have a class field. These classes are often used to filter out or style features based on their purpose or characteristics. The available values for the class field vary by layer and are detailed in the Layer Reference below.\n\nIn layers that have both a class field and a worldview field, the value for the class field can be any value listed in the Layer Reference for that layer or any of those values prefixed with disputed_. When a feature is marked as disputed, it falls under the disputed_{class} class. For example, a disputed bay feature belongs to disputed_bay class instead of bay class.\n\ndisputed textâ\n\nWhile no single map will reflect all global perspectives, acknowledging disputes where they exist is an important aspect of cartography and can lead to more universally usable maps. The dispute value will always be either true or false (never null). Any feature with a disputed_{class} class will also have set disputed to true.\n\nLayer Referenceâ\n\nThe Mapbox Streets v8 tileset contains the following layers. For reference, the current minimum-available zoom level for each layer is mentioned, but note that this is subject to change as we roll out updates and improvements. It also does not apply to all features within a layer - only the most prominent features are available at lower-numbered zoom levels, and more features are available as you zoom in. Labels for physically-large features also have a maximum zoom level based on their size.\n\nadminâ\n\nThis layer contains boundary lines for national and subnational administrative units. The data source & shapes match polygons from the Mapbox Boundaries product.\n\nadmin_level numberâ\n\nThe admin_level field separates different levels of boundaries.\n\ndisputed textâ\n\nWhile no single map will reflect all global perspectives, acknowledging disputes where they exist is an important aspect of cartography and can lead to more universally usable maps. The disputed value will always be either true or false (never null). You should style boundary lines with a disputed value of true using a dashed or otherwise distinct style from non-disputed lines.\n\nmaritime textâ\n\nMapbox Streets v8 includes a minimal set of maritime boundaries. These have a maritime value of true to use for distinct styling or filtering. The value is always either true or false (never null).\n\niso_3166_1 textâ\n\nThe iso_3166_1 field contains the ISO 3166-1 alpha-2 code or codes that apply to a boundary. For subnational boundaries this is a single code of the parent country. For international boundaries between two countries, the value is the codes of both countries in alphabetical order, separated by a dash (-).\n\naerowayâ\n\nThe aeroway layer includes both lines and polygons representing runways, helipads, and more.\n\ntype textâ\n\nThe type field separates different types of aeroways for styling.\n\nref textâ\n\nThe ref field contains runway and taxiway identifiers. The value may be null.\n\nairport_labelâ\n\nThis layer contains point geometries that are one of: airport, airfield, heliport, and rocket.\n\nSee names and name_script for information about names and translations available for label text.\n\nSee sizerank for information about that field.\n\nref textâ\n\nThe ref field contains short identifier codes for many airports. These are pulled from the OpenStreetMap tags iata, ref, icao, or faa (in order of preference). The value may be null.\n\nmaki textâ\n\nThe maki field lets you assign different icons to different types of airports. See the maki part of the Common Fields section for more details.\n\nclass textâ\n\nThe class field identifies airports by their primary type of use.\n\nbuildingâ\n\nLarge buildings appear at zoom level 13, and all buildings are included in zoom level 16 and up.\n\nunderground textâ\n\nThe underground field is true for buildings that are underground (for example, some subway stations). This value is always either true or false (never null).\n\ntype textâ\n\nThe type field lets you style buildings based on their function (for example, stadium) and differentiate building parts from building outlines. How a building feature's type is assigned depends on a few factors:\n\nIf a feature is one of several parts of a building intended primarily for 3D rendering, it will have a value of building:part.\n\nFor full buildings from OpenStreetMap:\n\nThe value will match the building tag from OpenStreetMap (see TagInfo for common values) for all tags except yes.\n\nIf the feature is tagged building=yes, it will have a value of building.\n\nFor full buildings from Zenrin:\n\nThe value will match the textual representation of the Zenrin annotation target code (blcode).\n\nIf the feature has an uncategorized building type in Zenrin, it will have a value of building.\n\nFor full buildings from all other data sources, the value will match the textual representation of a data source owner's building type code.\n\nPossible type values for OpenStreetMap building data:\n\nPossible type values for Zenrin building data:\n\nZenrin textual representations of the Zenrin elcodes like general building/5F-10F are normalized to type building with the height inferred from the textual representation (for example, a height of 15m can be inferred from 5F-10F)\n\nheight numberâ\n\nThe height field contains the height of a building or building part in meters (rounded to the nearest integer). Often this value is derived from the building:levels tag on OpenStreetMap. We estimate 3 meters per level if no exact height is specified. This value may be null where extrude is false.\n\nmin_height numberâ\n\nThe min_height field contains the height in meters from the ground to the bottom of a building part, for cases where the bottom of the part is not on the ground. This allows for proper extrusion rendering of things such as sky bridges and cantilevered building parts. This value may be null where extrude is false.\n\nextrude textâ\n\nThe extrude field indicates whether the object should be included in 3D extrusion renderings. For example a complex building might have various building:part objects mapped with different heights and a building object representing the footprint of the entire building. Only the building:part objects are needed for 3D rendering, so the full footprint outlines have an extrude value of false. The extrude value is always either true or false (never null).\n\nhousenum_labelâ\n\nThis layer contains points used to label the street number parts of specific addresses.\n\nhouse_num textâ\n\nThe house_num field contains house and building numbers. These are commonly integers but may include letters or be only letters, for example \"1600\", \"31B\", \"D\". If an address has no number tag but has a house name or building name, the house_num field is the name instead.\n\nlanduse_overlayâ\n\nThis layer is for landuse and landcover polygons that your style should draw above the #water layer.\n\nclass textâ\n\nThe main field used for styling the landuse_overlay layer is class.\n\ntype textâ\n\nThe type field is pulled from the primary OpenStreetMap tags for that class.\n\nlanduseâ\n\nThis layer includes polygons representing both landuse and landcover.\n\nIt's common for many different types of landuse and landcover to be overlapping, so the polygons in this layer are ordered by the area of their geometries to make sure smaller objects is not be obscured by larger ones. Pay attention to use of transparency when styling â the overlapping shapes can cause muddied or unexpected colors.\n\nclass textâ\n\nThe main field used for styling the landuse layer is class.\n\ntype textâ\n\nThe type field is pulled from the primary OpenStreetMap tags for that class.\n\nmotorway_junctionâ\n\nThis layer contains point geometries for labeling motorway junctions (highway exits). Classes and types match the types in the road layer.\n\nref text, reflen number, and name textâ\n\nThe motorway junction layer has a ref field and a name field for styling labels. The reflen field tells you how long the ref value is in case you want to style this layer with shields. All these fields may be null.\n\nclass text and type textâ\n\nThe class and type fields tell you what kind of road the junction is on. See the #road layer for possible values.\n\nfilterrank numberâ\n\nSee filterrank for information on using this field.\n\nmaki_beta textâ\n\nFuture Maki values. See #maki_beta.\n\nnatural_labelâ\n\nThe natural_label layer contains points and lines for styling natural features such as bodies of water, mountain peaks, valleys, deserts, and so on.\n\nSee names and name_script for information about names and translations available for label text.\n\nSee sizerank and filterrank for information on using those fields to style text size and label density.\n\nclass text and maki textâ\n\nThe natural_label layer is organized into many different classes for styling and filtering. Within each class, several maki values are available for assigning icons to features. See the maki part of the Common Fields section for more details about that field.\n\nSee the additional disputed class.\n\nelevation_m number and elevation_ft numberâ\n\nThe elevation_m and elevation_ft fields hold the feature elevation in meters and feet, respectively. Values are rounded to the nearest whole number and do not include units. Use a text field such as {elevation_ft} feet or {elevation_m}m in Mapbox Studio to display the units. These fields may be null.\n\nplace_labelâ\n\nThis layer contains points for labeling places including countries, states, cities, towns, and neighborhoods.\n\nSee names and name_script for information about names and translations available for label text.\n\nSee filterrank for information on using that field.\n\nclass textâ\n\nThe class field provides a broad distinction between place types and is the main attribute that should be used for styling different place labels. The possible values are:\n\nSee the additional disputed class.\n\ntype textâ\n\nThe type field provides a finer-grain distinction between different kinds of places than class.\n\nUnlike the class field, not all type values are available for each country. New type values may be added in the future. See Data stability.\n\nsymbolrank numberâ\n\nThe symbolrank value is intended to simplify styling of the label size and symbol prominence of place features. It ranges from 1 to 19 and is consistently assigned across zoom levels. For example, a place with a symbolrank of 6 at z7 has the same symbolrank value of 6 as you zoom in and out to any other level.\n\nThe value is never null and is always in the range of 1-19.\n\niso_3166_1 textâ\n\nThe iso_3166_1 field contains the ISO 3166-1 alpha-2 code of the country the place is in. The value may be null, either due to location match errors or for features that are in international waters.\n\niso_3166_2 textâ\n\nThe iso_3166_2 field contains the ISO 3166-2 alpha-2 which uniquely identifies a country's subdivision in a global context. The value may be null, either due to location match errors or for features that are in international waters.\n\ncapital numberâ\n\nThe capital field allows distinct styling of labels or icons for the capitals of countries, regions, or states and provinces. The value of this field may be 2, 3, 4, 5, or 6. National capitals are 2, and 3 through 6 represent capitals of various sub-national administrative entities. These levels come from OpenStreetMap and have different meanings in different countries - see the OpenStreetMap wiki for specific details.\n\nThe value is null for any place that is not a capital.\n\nabbr textâ\n\nThis abbr field is available for type=state and provides the local abbreviation of the state.\n\ntext_anchor textâ\n\nThe text_anchor field can be used as a hint for label placement. Possible values match the Mapbox Style Spec for text anchor. The value may be null.\n\npoi_labelâ\n\nThis layer is used to place icons and labels for various points of interest (POIs).\n\nSee names and name_script for information about names and translations available for label text.\n\nSee sizerank and filterrank for information on using those fields to style text size and label density.\n\nSee maki for more information about using this field for assigning icons.\n\nmaki_modifier textâ\n\nLocalized Maki icons are enabled with the maki_modifier field. The value of maki_modifer corresponds to an ISO country code. If it's present on a feature, you can use it to swap out a default Maki icon with a country-specific one.\n\nFor example, the widely recognized symbol for banks in Japan is different than that for the US. In the poi_label layer, all features that represent banks have a Maki field with value bank. Of those features, the ones located in Japan also have a maki_modifer field with a value of JP. This allows you to specify the bank-JP Maki icon rather than the bank icon when styling your map.\n\nmaki_beta textâ\n\nFuture Maki values. See maki_beta.\n\nclass textâ\n\nThe class field groups points of interest into broad categories for styling purposes. The values are useful for designing icon color schemes, for example.\n\nbrand textâ\n\nThe brand field is one of the standardized brand names listed below. Like maki, the brand string is the base name of a SVG icon image. While maki is for a general noun (for example: bank), the brand field is for a specific noun (for example: juroku-bank). The value for the field is either null or a string.\n\nThe list of possible brand values will expand with future updates. Possible values include, but not limited to:\n\ntype textâ\n\nThe type field contains a more specific classification intended for display (for example, 'Cafe', 'Hotel', or 'Laundry'). These values come from either the original OpenStreetMap tags or Zenrin and are not a limited set.\n\ncategory_en text and category_zh-Hans textâ\n\nThe category_en and category_zh-Hans fields contain translated category descriptions for POIs. These can be used as a fallback or as supplemental information where English or simplified Chinese translations may not exist. These values may be null for OpenStreetMap data and are always null for Zenrin data in Japan.\n\nLanguage coverage may be expanded in a future v8 update.\n\nroadâ\n\nThe roads layer contains lines, points, and polygons needed for drawing features such as roads, railways, paths and their labels.\n\nSee names and name_script for information about names and translations available for label text.\n\nclass textâ\n\nThe main field used for styling the road layer is class.\n\noneway textâ\n\nThe oneway field indicates whether the motor traffic on the road is one-way or not. If the road is one-way, traffic travels in the same direction as the linestring. The value is always either true or false (never null).\n\nstructure textâ\n\nThe structure field describes whether the road segment is a bridge, tunnel, ford, or none of those. No further values will be added in Mapbox Streets v8.\n\nbike_lane textâ\n\nThe bike_lane field indicates if there is a bike lane that is part of the road itself. This is different from separated cycle tracks, which are mapped as their own object in the roads layer, and receive class=path, type=cycleway.\n\nThis value may be null where explicit bike lane details are unknown.\n\niso_3166_1 textâ\n\nThe iso_3166_1 field contains the ISO 3166-1 alpha-2 code of the country the road is in. The value may be null, either due to location match errors or for features that are in international waters.\n\niso_3166_2 textâ\n\nThe ISO 3166-2 code of the state/province/region the road is in. Not all areas are covered by this standard and the value may be null.\n\ntoll textâ\n\nThe toll field is true for toll roads and not present / null for all other roads.\n\nref text and reflen numberâ\n\nBesides the standard name fields, there is also a ref field that holds any reference codes or route numbers a road may have.\n\nThe reflen value indicates how many characters are in the corresponding ref to help choose an appropriate size of shield graphic. The valid range is 2-6 but more detailed ranges for specific shield designs are noted below. Note that ref values with a single character are assigned a reflen value of 2 to reduce the number of required shield graphics.\n\nFrom zoom levels 6 through 10, ref values are attached to separate points rather than lines to optimize symbol placement.\n\nBoth ref and reflen may be null.\n\nshield textâ\n\nThe shield values help to assign highway shield graphics. They should be combined with ref for the text on the shield and reflen to determine the width of shield image needed. The shield-text-color field can be used for styling the shield text.\n\nRoutes that can be symbolized with shields of a common shape and color have generic shared shield values:\n\nOther highways with more specific shield design requirements are captured individually:\n\nThe shield value is null where ref is also null. No further shield values will be added in Mapbox Streets v8.\n\nshield_text_color textâ\n\nUsed to style the text on the highway shield icon.\n\nPossible values:\n\ntype textâ\n\nThe type field is the value of the road's \"primary\" OpenStreetMap tag. For most roads this is the highway tag, but for aerialways it is the aerialway tag, and for golf holes it is the golf tag. See TagInfo for a list of used tag values. Several classes pull in additional detail when it is available from OpenStreetMap.\n\nPossible construction class type values:\n\nPossible track class type values:\n\nPossible service class type values:\n\nFor the path class, the tileset made custom type assignments based on insight from various categorical, physical, and access tags from OpenStreetMap.\n\nPossible ferry class type values:\n\nPossible aerialway class type values:\n\nclass and type mapping for Zenrin data in Japan:\n\nlayer numberâ\n\nThe layer field is used to determine drawing order of overlapping road segments in the tunnel and bridge layers. The value may be any integer number, but 95% of values are -1, 1, or 0, and 99.9999% of values are between -5 and 5.\n\nlen numberâ\n\nThe len field stores the length of the road segment in projected meters, rounded to the nearest whole number. This can be useful for limiting some label styles to longer roads. The value may be null where the geometry is not a line.\n\nlane_count numberâ\n\nThe lane_count field stores the count of lanes present in the road. These values are available only in Japan between zoom 12 and zoom 14. The value may be null.\n\nstructureâ\n\nThis layer includes points, lines and polygons for structures which are not buildings. This includes both natural and human features, like cliffs, walls, piers, gates, steps, and towers.\n\nCliff data is designed such that the left-hand side of the line is the top of the cliff, and the right-hand side is the bottom.\n\nSteps and tower data is only available in Japan.\n\nclass textâ\n\ntype textâ\n\nThe type field contains the original value of the feature's primary tag from OpenStreetMap.\n\ntransit_stop_labelâ\n\nThe transit_stop_label contains points for symbolizing transit stops, stations, and associated features such as entrances.\n\nSee names and name_script for information about names and translations available for label text.\n\nstop_type textâ\n\nmode textâ\n\nmaki textâ\n\nThe maki field lets you assign icons to the rail station based on a few basic station types. See maki in the Common Fields section for more information.\n\nnetwork textâ\n\nThe network field lets you assign more specific icons for rail stations that are part of specific local or regional transit systems. They don't necessarily correspond to a specific network - for example de-u-bahn applies to any U-Bahn network in Germany since these can all use the same icon in a map style. Some stations serve multiple networks. in these cases, multiple network names are joined with a dot in alphabetical order.\n\nIf none of the specific networks below apply to a station, the network value is the same as the maki value (see previous section).\n\nNo further network values will be added in Mapbox Streets v8.\n\nnetwork_beta textâ\n\nnetwork values that might be supported in future versions of Mapbox Streets. Possible values include, but not limited to:\n\nfilterrank textâ\n\nSee filterrank for information on using this field.\n\nwaterâ\n\nThis layer includes all types of bodies of water, including oceans, rivers, lakes, ponds, reservoirs, fountains, and more.\n\nIt is a polygon layer with no differentiating types or classes, and consists of a single merged shape per tile. This allows for seamless stroke and transparency styling, but means there is no way to filter out or highlight specific water bodies or a partial subset of them.\n\nEach zoom level includes a set of water bodies that has been filtered and simplified according to scale. The tileset shows only oceans, seas, and large lakes at the lowest zoom levels, while smaller lakes and ponds appear when zoomed in.\n\nwaterwayâ\n\nThe waterway layer contains classes for rivers, streams, canals, etc. represented as lines. These classes can represent a wide variety of possible widths. Since larger rivers and canals are usually also represented by polygons in the water layer, line styling should be biased toward the smaller end of the scales. The waterway layer should also be under the water layer.\n\nclass text and type textâ\n\nThe waterway layer has two fields for styling, class and type, each with similar values.\n\nChangelog"
    }
}