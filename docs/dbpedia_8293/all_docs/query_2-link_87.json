{
    "id": "dbpedia_8293_2",
    "rank": 87,
    "data": {
        "url": "https://groups.google.com/g/linux.debian.user/c/A8OO8ZqXLg4",
        "read_more_link": "",
        "language": "en",
        "title": "/etc/fstab question (problem)?",
        "top_image": "https://www.gstatic.com/images/branding/product/1x/groups_32dp.png",
        "meta_img": "https://www.gstatic.com/images/branding/product/1x/groups_32dp.png",
        "images": [
            "https://fonts.gstatic.com/s/i/productlogos/groups/v9/web-48dp/logo_groups_color_1x_web_48dp.png",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWl61HlVgg0dEBxi3IFjLCq2D9enAoXILg_jmuLopbpbVtow3Y=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWwxCyS1FvvXSl_DKO-XejSjSIuNLO3jkEogbqxunAnddy3eMl1=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWl61HlVgg0dEBxi3IFjLCq2D9enAoXILg_jmuLopbpbVtow3Y=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWzvrl-KR311we1eVOL_PD49I8-uZB2uEoBEM-PkiHbB_1DAA=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWwxCyS1FvvXSl_DKO-XejSjSIuNLO3jkEogbqxunAnddy3eMl1=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXs5ZJr3TQXJFiPqGp9EKADK68Fn9NgSPQPz_MJmwIUi2ee5Q=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWwxCyS1FvvXSl_DKO-XejSjSIuNLO3jkEogbqxunAnddy3eMl1=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWwxCyS1FvvXSl_DKO-XejSjSIuNLO3jkEogbqxunAnddy3eMl1=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjX5C1DH-8n-mxjZFR_gk-yh8iRq0UExS0AL8Kx9LPi18-_CEQ=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWzvrl-KR311we1eVOL_PD49I8-uZB2uEoBEM-PkiHbB_1DAA=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXatLA6a3-qPzSBtN38S0SL6XOTegYjnKAiz-kFIXaCNKvQpw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjVNKSgZDFkM3nzLz81BL6H52GFPOvNTkJdrWOPkhhP84i7x80DB=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWwxCyS1FvvXSl_DKO-XejSjSIuNLO3jkEogbqxunAnddy3eMl1=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWwxCyS1FvvXSl_DKO-XejSjSIuNLO3jkEogbqxunAnddy3eMl1=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWzvrl-KR311we1eVOL_PD49I8-uZB2uEoBEM-PkiHbB_1DAA=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjX5C1DH-8n-mxjZFR_gk-yh8iRq0UExS0AL8Kx9LPi18-_CEQ=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjVc9VXCYRAZ4J6YOSk_pIfo3v7rYVeEW6EnfwzQ0xssvCVNWw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWwxCyS1FvvXSl_DKO-XejSjSIuNLO3jkEogbqxunAnddy3eMl1=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjWwxCyS1FvvXSl_DKO-XejSjSIuNLO3jkEogbqxunAnddy3eMl1=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjXo1bhuAO7sbgpeknyJQwX4vOMDwmGXBmz4GZWFN8lFehGpmw=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUYdn3pDMmdNFvEB8W4ZuVgMIatGcoXYiDbiJ5V1Y_tH56sgg=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUYdn3pDMmdNFvEB8W4ZuVgMIatGcoXYiDbiJ5V1Y_tH56sgg=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUYdn3pDMmdNFvEB8W4ZuVgMIatGcoXYiDbiJ5V1Y_tH56sgg=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c",
            "https://lh3.googleusercontent.com/a-/ALV-UjUYdn3pDMmdNFvEB8W4ZuVgMIatGcoXYiDbiJ5V1Y_tH56sgg=s40-c",
            "https://lh3.googleusercontent.com/a/default-user=s40-c"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "//www.gstatic.com/images/branding/product/1x/groups_32dp.png",
        "meta_site_name": "",
        "canonical_link": "https://groups.google.com/g/linux.debian.user/c/A8OO8ZqXLg4",
        "text": "Default User\n\nunread,\n\nto\n\nHey, I have a strange situation!\n\nI just realized that my /tmp partition is not being mounted at startup.\n\nInstead, I think the filesystem may be allocating space in another\n\npartition (maybe /root?) for tmp stuff.\n\nI would like to return to the prior setup, where the /tmp partition is\n\nmounted at startup, and is used for the tmp stuff.\n\nCan I do so without trashing my system, and having to reinstall from\n\nscratch.\n\nNote: I have current system bakups using Timeshift, and current data\n\n(/home/[user]) backups using Borgbackup.\n\nAnd I can image the ssd with Clonezilla, or even dd, if I have to. But\n\nI would prefer not to go through the hassle of doing so, if it is not\n\nreally needed.\n\nI am running Debian 11 Stable (Bullseye).\n\nMy computer has a single internal 256 Gb ssd.\n\nI am using Gnome Version 3.38.5 as my desktop environment.\n\nuname -a:\n\nLinux [host name] 6.0.0-0.deb11.6-amd64 #1 SMP PREEMPT_DYNAMIC Debian\n\n6.0.12-1~bpo11+1 (2022-12-19) x86_64 GNU/Linux\n\nmount:\n\nsysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime)\n\nproc on /proc type proc (rw,nosuid,nodev,noexec,relatime)\n\nudev on /dev type devtmpfs\n\n(rw,nosuid,relatime,size=3907040k,nr_inodes=976760,mode=755,inode64)\n\ndevpts on /dev/pts type devpts\n\n(rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000)\n\ntmpfs on /run type tmpfs\n\n(rw,nosuid,nodev,noexec,relatime,size=788500k,mode=755,inode64)\n\n/dev/nvme0n1p2 on / type ext4 (rw,relatime,errors=remount-ro)\n\nsecurityfs on /sys/kernel/security type securityfs\n\n(rw,nosuid,nodev,noexec,relatime)\n\ntmpfs on /dev/shm type tmpfs (rw,nosuid,nodev,inode64)\n\ntmpfs on /run/lock type tmpfs\n\n(rw,nosuid,nodev,noexec,relatime,size=5120k,inode64)\n\ncgroup2 on /sys/fs/cgroup type cgroup2\n\n(rw,nosuid,nodev,noexec,relatime,nsdelegate,memory_recursiveprot)\n\npstore on /sys/fs/pstore type pstore (rw,nosuid,nodev,noexec,relatime)\n\nefivarfs on /sys/firmware/efi/efivars type efivarfs\n\n(rw,nosuid,nodev,noexec,relatime)\n\nbpf on /sys/fs/bpf type bpf (rw,nosuid,nodev,noexec,relatime,mode=700)\n\nsystemd-1 on /proc/sys/fs/binfmt_misc type autofs\n\n(rw,relatime,fd=29,pgrp=1,timeout=0,minproto=5,maxproto=5,direct,pipe_i\n\nno=786)\n\nhugetlbfs on /dev/hugepages type hugetlbfs (rw,relatime,pagesize=2M)\n\nmqueue on /dev/mqueue type mqueue (rw,nosuid,nodev,noexec,relatime)\n\ndebugfs on /sys/kernel/debug type debugfs\n\n(rw,nosuid,nodev,noexec,relatime)\n\ntracefs on /sys/kernel/tracing type tracefs\n\n(rw,nosuid,nodev,noexec,relatime)\n\nconfigfs on /sys/kernel/config type configfs\n\n(rw,nosuid,nodev,noexec,relatime)\n\nfusectl on /sys/fs/fuse/connections type fusectl\n\n(rw,nosuid,nodev,noexec,relatime)\n\n/dev/nvme0n1p3 on /var type ext4 (rw,relatime)\n\n/dev/nvme0n1p6 on /home type ext4 (rw,relatime)\n\n/dev/nvme0n1p1 on /boot/efi type vfat\n\n(rw,relatime,fmask=0077,dmask=0077,codepage=437,iocharset=ascii,shortna\n\nme=mixed,utf8,errors=remount-ro)\n\ntmpfs on /run/user/1000 type tmpfs\n\n(rw,nosuid,nodev,relatime,size=788496k,nr_inodes=197124,mode=700,uid=10\n\n00,gid=1000,inode64)\n\ngvfsd-fuse on /run/user/1000/gvfs type fuse.gvfsd-fuse\n\n(rw,nosuid,nodev,relatime,user_id=1000,group_id=1000)\n\nportal on /run/user/1000/doc type fuse.portal\n\n(rw,nosuid,nodev,relatime,user_id=1000,group_id=1000)\n\nCurrent /etc/fstab:\n\n# <file system> <mount point> <type> <options> <dump> <pass>\n\nUUID=4fdd4399-6267-404a-a292-\n\ncdc7761df3c9 / ext4 errors=remount-ro 0 1\n\nUUID=26EE-0EF5 /boot/efi vfat umask=0077 0 1\n\nUUID=00f0c2db-0490-4354-b949-\n\nf9af11a7f001 /home ext4 defaults 0 2\n\nUUID=8bfeee23-9c09-45b7-a73e-\n\nbd2ff43e207c /var ext4 defaults 0 2\n\nUUID=e2a56ec3-99d4-4b40-9aa4-\n\n24975143cdc7 none swap sw 0 0\n\nOriginal /etc/fstab:\n\n# /etc/fstab: static file system information.\n\n#\n\n# Use 'blkid' to print the universally unique identifier for a\n\n# device; this may be used with UUID= as a more robust way to name\n\ndevices\n\n# that works even if disks are added and removed. See fstab(5).\n\n#\n\n# systemd generates mount units based on this file, see\n\nsystemd.mount(5).\n\n# Please run 'systemctl daemon-reload' after making changes here.\n\n#\n\n# <file system> <mount point> <type> <options> <dump> <pass>\n\n# / was on /dev/nvme0n1p2 during installation\n\nUUID=4fdd4399-6267-404a-a292-cdc7761df3c9 / ext4\n\nerrors=remount-ro 0 1\n\n# /boot/efi was on /dev/nvme0n1p1 during installation\n\nUUID=26EE-0EF5 /boot/efi vfat umask=0077 0 1\n\n# /home was on /dev/nvme0n1p6 during installation\n\nUUID=00f0c2db-0490-4354-b949-f9af11a7f001 /home ext4\n\ndefaults 0 2\n\n# /tmp was on /dev/nvme0n1p5 during installation\n\nUUID=6a105a72-f5d5-441b-b926-1e405151ee84 /tmp ext4\n\ndefaults 0 2\n\n# /var was on /dev/nvme0n1p3 during installation\n\nUUID=8bfeee23-9c09-45b7-a73e-bd2ff43e207c /var ext4\n\ndefaults 0 2\n\n# swap was on /dev/nvme0n1p4 during installation\n\nUUID=e2a56ec3-99d4-4b40-9aa4-24975143cdc7 none swap sw\n\n0 0\n\nls -lahFi /etc/fstab:\n\n522243 -rw-r--r-- 1 root root 368 Apr 3 17:01 /etc/fstab\n\nls -lahFi /etc/fstab.original:\n\n522547 -rw-r--r-- 1 root root 1.3K Mar 11 12:02 /etc/fstab.original\n\nlsblk:\n\nNAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT\n\nnvme0n1 259:0 0 238.5G 0 disk\n\n├─nvme0n1p1 259:1 0 512M 0 part /boot/efi\n\n├─nvme0n1p2 259:2 0 23.3G 0 part /\n\n├─nvme0n1p3 259:3 0 9.3G 0 part /var\n\n├─nvme0n1p4 259:4 0 977M 0 part [SWAP]\n\n├─nvme0n1p5 259:5 0 1.9G 0 part\n\n└─nvme0n1p6 259:6 0 202.6G 0 part /home\n\nblkid:\n\n/dev/nvme0n1p1: UUID=\"26EE-0EF5\" BLOCK_SIZE=\"512\" TYPE=\"vfat\"\n\nPARTUUID=\"c0b4b1bb-bdf3-4066-b75a-f3cf56186e27\"\n\n/dev/nvme0n1p2: UUID=\"4fdd4399-6267-404a-a292-cdc7761df3c9\"\n\nBLOCK_SIZE=\"4096\" TYPE=\"ext4\" PARTUUID=\"706ab20c-ea65-4c25-a632-\n\nb7858550f966\"\n\n/dev/nvme0n1p3: UUID=\"8bfeee23-9c09-45b7-a73e-bd2ff43e207c\"\n\nBLOCK_SIZE=\"4096\" TYPE=\"ext4\" PARTUUID=\"0831f4bf-98fc-4189-a3cb-\n\nfc2781e580fb\"\n\n/dev/nvme0n1p4: UUID=\"e2a56ec3-99d4-4b40-9aa4-24975143cdc7\" TYPE=\"swap\"\n\nPARTUUID=\"b32e1385-6518-4d1d-9181-66d31929c7ab\"\n\n/dev/nvme0n1p5: UUID=\"6a105a72-f5d5-441b-b926-1e405151ee84\"\n\nBLOCK_SIZE=\"4096\" TYPE=\"ext4\" PARTUUID=\"834502f5-08b3-42ad-a322-\n\ncf86732f8155\"\n\n/dev/nvme0n1p6: UUID=\"00f0c2db-0490-4354-b949-f9af11a7f001\"\n\nBLOCK_SIZE=\"4096\" TYPE=\"ext4\" PARTUUID=\"40721dda-02ba-49a1-abfc-\n\nb624fc739d9f\"\n\nWhat to do?\n\nAnd if further information is needed, please let me know, and I will\n\ntry to get it for you.\n\nThanks!\n\n\n\nI did indeed install a kernel from backports, since the sound would not\n\nwork on my computer running any earlier kernel. Otherwise, the system\n\nis an updated Debian Stable 11.6 (Bullseye).\n\n>From Ls -lahFi /boot:\n\ntotal 121M\n\n1305601 drwxr-xr-x 4 root root 4.0K Feb 20 11:51 ./\n\n2 drwxr-xr-x 19 root root 4.0K Feb 19 11:06 ../\n\n1 drwx------ 3 root root 4.0K Dec 31 1969 efi/\n\n1318571 drwxr-xr-x 5 root root 4.0K Apr 17 11:53 grub/\n\n1306753 -rw-r--r-- 1 root root 231K Jan 21 09:35 config-5.10.0-21-\n\namd64\n\n1318578 -rw-r--r-- 1 root root 252K Dec 19 09:14 config-6.0.0-\n\n0.deb11.6-amd64\n\n1318434 -rw-r--r-- 1 root root 45M Feb 19 09:35 initrd.img-5.10.0-21-\n\namd64\n\n1318576 -rw-r--r-- 1 root root 61M Feb 19 11:06 initrd.img-6.0.0-\n\n0.deb11.6-amd64\n\n1306752 -rw-r--r-- 1 root root 83 Jan 21 09:35 System.map-5.10.0-21-\n\namd64\n\n1318577 -rw-r--r-- 1 root root 83 Dec 19 09:14 System.map-6.0.0-\n\n0.deb11.6-amd64\n\n1306754 -rw-r--r-- 1 root root 6.7M Jan 21 09:35 vmlinuz-5.10.0-21-\n\namd64\n\n1318579 -rw-r--r-- 1 root root 7.4M Dec 19 09:14 vmlinuz-6.0.0-\n\n0.deb11.6-amd64\n\nAnd this is from the (current) ls -lahFi /tmp:\n\ntotal 80K\n\n130561 drwxrwxrwt 16 root root 4.0K Apr 18 16:46 ./\n\n2 drwxr-xr-x 19 root root 4.0K Feb 19 11:06 ../\n\n402051 drwxrwxrwt 2 root root 4.0K Apr 18 14:44 .font-\n\nunix/\n\n399211 drwxrwxrwt 2 root root 4.0K Apr 18 14:44 .ICE-\n\nunix/\n\n402078 drwx------ 3 root root 4.0K Apr 18 14:44 systemd-\n\nprivate-9df1dff59a9240c4a708cb146e08a36c-colord.service-51WIZe/\n\n402064 drwx------ 3 root root 4.0K Apr 18 14:44 systemd-\n\nprivate-9df1dff59a9240c4a708cb146e08a36c-ModemManager.service-fdBA5h/\n\n402060 drwx------ 3 root root 4.0K Apr 18 14:44 systemd-\n\nprivate-9df1dff59a9240c4a708cb146e08a36c-switcheroo-control.service-\n\nel9DGh/\n\n402062 drwx------ 3 root root 4.0K Apr 18 14:44 systemd-\n\nprivate-9df1dff59a9240c4a708cb146e08a36c-systemd-logind.service-sIXjpi/\n\n402055 drwx------ 3 root root 4.0K Apr 18 14:44 systemd-\n\nprivate-9df1dff59a9240c4a708cb146e08a36c-systemd-timesyncd.service-\n\nUtAMlf/\n\n402072 drwx------ 3 root root 4.0K Apr 18 14:44 systemd-\n\nprivate-9df1dff59a9240c4a708cb146e08a36c-upower.service-yLsogf/\n\n402052 drwxrwxrwt 2 root root 4.0K Apr 18 14:44 .Test-\n\nunix/\n\n402080 drwx------ 2 [user] [user] 4.0K Apr 18 14:44 tracker-\n\nextract-files.1000/\n\n402071 drwx------ 2 Debian-gdm Debian-gdm 4.0K Apr 18 14:44 tracker-\n\nextract-files.116/\n\n399209 drwxrwxrwt 2 root root 4.0K Apr 18 14:44 .X11-\n\nunix/\n\n402049 drwxrwxrwt 2 root root 4.0K Apr 18 14:44 .XIM-\n\nunix/\n\n136530 srwxrwxrwx 1 root root 0 Apr 18 14:55 dbus-\n\n3cgiNF1x8f=\n\n136016 srwxrwxrwx 1 root root 0 Apr 18 14:55 dbus-\n\n9nSrGDn5m4=\n\n136531 srwxrwxrwx 1 [user] [user] 0 Apr 18 14:44 dbus-\n\nZLiotP4WWe=\n\n136532 -r--r--r-- 1 [user] [user] 11 Apr 18 14:44 .X0-lock\n\n136017 -r--r--r-- 1 Debian-gdm Debian-gdm 11 Apr 18 14:44 .X1024-\n\nlock\n\n136018 -r--r--r-- 1 Debian-gdm Debian-gdm 11 Apr 18 14:44 .X1025-\n\nlock\n\n136533 -r--r--r-- 1 [user] [user] 11 Apr 18 14:44 .X1-lock\n\nAnd . . .\n\ncat /etc/debian_version ; uname -a\n\n11.6\n\nLinux dogen 6.0.0-0.deb11.6-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.0.12-\n\n1~bpo11+1 (2022-12-19) x86_64 GNU/Linux\n\nmount | grep tmp:\n\nudev on /dev type devtmpfs\n\n(rw,nosuid,relatime,size=3907040k,nr_inodes=976760,mode=755,inode64)\n\ntmpfs on /run type tmpfs\n\n(rw,nosuid,nodev,noexec,relatime,size=788500k,mode=755,inode64)\n\ntmpfs on /dev/shm type tmpfs (rw,nosuid,nodev,inode64)\n\ntmpfs on /run/lock type tmpfs\n\n(rw,nosuid,nodev,noexec,relatime,size=5120k,inode64)\n\ntmpfs on /run/user/1000 type tmpfs\n\n(rw,nosuid,nodev,relatime,size=788496k,nr_inodes=197124,mode=700,uid=10\n\n00,gid=1000,inode64)\n\nstat -c %d / /tmp\n\n66306\n\n66306\n\n(I am not sure what that means - is that saying that /tmp is mounted\n\nunder / on the / partition?)\n\n(And BTW, the current /etc/fstab must have been written by some\n\nprogram, not manually by me. I would never have edited /etc/fstab to\n\nlook like that!) My best guess is that I may have done a system restore\n\nusing Timeshift on 2023-04-03, to back out of some unremembered\n\nproblem, and the current /etc/fstab results from that.\n\nI COULD just continue as is with the current setup, but I would REALLY\n\nprefer not to!\n\nMaybe I should just start by using Clonezilla to do a full image of the\n\ndrive. Actual data of course, not the entire 256 Gb!\n\nMore later . . .\n\nDavid Wright\n\nunread,\n\nto\n\nOn Tue 18 Apr 2023 at 21:12:33 (-0400), Default User wrote:\n\n>\n\n> (Not so) fun fact: Clonezilla always refuses to back up swap\n\n> partitions. I don't know why.\n\nIt's not clear to me how you could restore the entire rest of the\n\nsystem to the state it was in when you made your backup of swap.\n\nSo the backup copy becomes instantly useless except for forensics\n\nor theft, ie scanning for fragments of text, passwords etc.\n\nThat's why I encrypt my swap partitions with a random key.\n\n> Several different approaches to solve the problem have been suggested.\n\n> I think I will wait until tomorrow and ponder the options, before\n\n> performing \"surgery\".\n\nIf you're prepared to reboot, it should be straightforward, but there\n\nis one factor I haven't seen mentioned, and that's to do with cleaning.\n\nIf you add the \"lost line\" back into fstab:\n\nUUID=6a105a72-f5d5-441b-b926-1e405151ee84 /tmp ext4 defaults 0 2\n\nthen when the system starts up, partition 5 will be mounted onto\n\n/tmp in the root filesystem, and then it'll be cleaned of any files\n\nleft over from the last time it was used. It might be a long, long\n\ntime since you used it so there could conceivably be files that you\n\nwant to check out.\n\nSo, I would mount partition 5 on /mnt and look it over. Yes, you've\n\nbacked up the partition, but you might never look at that, whereas\n\nthis is something you can do straightaway.\n\nThat aspect was already mentioned by DbB. But there is one further\n\npoint to make. AIUI, cleaning will be carried out on /tmp after the\n\npartition (5) has been mounted. It wouldn't make sense otherwise.\n\nBut look at your usage of /tmp now—that is, the /tmp in the root\n\npartition. If it contains some large files when you shut down in\n\npreparation to change fstab, then those files, sitting on /, will\n\nnever get cleaned. They'll be hidden by mounting partition 5 on\n\ntop of them, and use disk space for ever.\n\nSo—I would clean /tmp as best you can before you close down, then\n\nboot in single user mode, clean anything still remaining in /tmp,\n\nedit your fstab, and then reboot.\n\n> Finally, after the current situation is resolved, I would still like to\n\n> know what caused the problem in the first place. I would really like to\n\n> not have it happen again!\n\nIt looks as if someone edited the entries with tabs to make it line up\n\nneatly, removed the installers comments, and accidentally removed the\n\n/tmp line too. I don't know of any software that would do that to fstab.\n\nCheers,\n\nDavid.\n\nDefault User\n\nunread,\n\nto\n\n\n\nWell, now I am totally confused.\n\nI had hoped for, and really expected, an easy, obvious, intuitive\n\nsolution. But I guess that may be a distant memory of the good old\n\ndays, before [insert string of four-letter words here] like dbus,\n\nsystemd, and Gnome 3. And when partitions were named /dev/hda5, not\n\n6a105a72-f5d5-441b-b926-1e405151ee84.\n\nSigh.\n\nAnyway, here is where I am at:\n\nI have two Clonezilla backups.\n\n1) a full disk backup.\n\n2) a \"partitions\" backup.\n\nSo, if things really go bad, I can theoretically revert to the setup as\n\nof 2023-04-18, when this thread was started.\n\nI also have a backup of the current /tmp directory (from under the /\n\ndirectory).\n\nAnd I have a backup of the old tmp partition.\n\nBoth of these tmp backups were made using a Debian Stable 11.6\n\nLive/install usb thumb drive, as root user.\n\nAll of these backups are on an external usb hdd.\n\nHere is what was in the (root) tmp directory:\n\n_root_partition/tmp\n\ntotal 32K\n\n88473604 drwxr-xr-t 8 [user] [user] 4.0K Apr 19 14:18 ./\n\n88473602 drwxr-xr-x 3 [user] [user] 4.0K Apr 19 14:18 ../\n\n88473608 drwxr-xr-t 2 [user] [user] 4.0K Apr 19 14:18 .font-unix/\n\n88473606 drwxr-xr-t 2 [user] [user] 4.0K Apr 19 14:18 .ICE-unix/\n\n88473609 drwxr-xr-t 2 [user] [user] 4.0K Apr 19 14:18 .Test-unix/\n\n88473610 drwx------ 2 [user] [user] 4.0K Apr 19 14:18 tracker-extract-\n\nfiles.116/\n\n88473605 drwxr-xr-t 2 [user] [user] 4.0K Apr 19 14:18 .X11-unix/\n\n88473607 drwxr-xr-t 2 [user] [user] 4.0K Apr 19 14:18 .XIM-unix/\n\nAnd here is what was in the old tmp partition:\n\ntotal 48K\n\n88473611 drwxr-xr-t 10 root root 4.0K Apr 19 14:20 ./\n\n88473603 drwxr-xr-x 3 [user] [user] 4.0K Apr 19 14:20 ../\n\n88473618 drwxr-xr-t 2 root root 4.0K Apr 19 14:20 .font-unix/\n\n88473615 drwxr-xr-t 2 root root 4.0K Apr 19 14:20 .ICE-unix/\n\n88473620 drwx------ 2 root root 4.0K Apr 19 14:20 lost+found/\n\n88473619 drwxr-xr-t 2 root root 4.0K Apr 19 14:20 .Test-unix/\n\n88473624 drwx------ 2 root root 4.0K Apr 19 14:20 tracker-\n\nextract-files.1000/\n\n88473623 drwx------ 2 root root 4.0K Apr 19 14:20 tracker-\n\nextract-files.116/\n\n88473621 -r--r--r-- 1 root root 11 Apr 19 14:20 .X1024-lock\n\n88473622 -r--r--r-- 1 root root 11 Apr 19 14:20 .X1025-lock\n\n88473612 drwxr-xr-t 2 root root 4.0K Apr 19 14:20 .X11-unix/\n\n88473617 drwxr-xr-t 2 root root 4.0K Apr 19 14:20 .XIM-unix/\n\nAs far as I can tell, there is nothing crucial in either tmp backup.\n\nBTW, I know nothing about bind or mount --bind. I looked them up\n\nbriefly, and decided that they are too difficult and maybe dangerous to\n\ntry to learn and use under the current circumstances.\n\nSo here is what I am thinking of doing:\n\nWhile running from within the Debian Stable 11.6 Live/install usb thumb\n\ndrive, as root user:\n\n1) On the computer's internal ssd, delete the /tmp directory and its\n\ncontents.\n\n2) On the computer's internal ssd, delete the contents of the old tmp\n\npartition, but not the partition itself.\n\n3) On the computer's internal ssd, replace /etc/fstab with\n\n/etc/fstab.original, renaming it /etc/fstab. I have already made a copy\n\nof the current /etc/fstab as /etc/fstab.as-of-2023-04-19.\n\nThe UUIDs of all partitions on computer's internal ssd seem to be the\n\nsame as in /etc/fstab.original.\n\n(Note: in /etc/fstab.original, it states \"Please run 'systemctl daemon-\n\nreload' after making changes here.\" Since I am doing all this from a\n\nlive usb, I do not think that applies, so I would skip that.)\n\nThen I would shut down, remove the usb thumb drive, and boot into the\n\nDebian system on the computer's internal ssd.\n\nI hope that from then on, the system would mount the old tmp partition\n\non the computer's internal ssd as /tmp, re-populating it automatically,\n\nand use it as such from then on.\n\nDoes that seem reasonable?\n\nOr am I missing something, obvious or not.\n\nDavid Wright\n\nunread,\n\nto\n\nOn Thu 20 Apr 2023 at 22:16:56 (+0700), Max Nikulin wrote:\n\n> On 20/04/2023 19:05, songbird wrote:\n\n> > Default User wrote:\n\n> > > And when partitions were named /dev/hda5, not\n\n> > > 6a105a72-f5d5-441b-b926-1e405151ee84.\n\nWith modern hardware, you'd probably not want to go back to those\n\ndevice names, because the way the buses work, the internal drives\n\ncan be assigned different names according to what's plugged into\n\nthe computer.\n\n> > i use labels on all of my partitions and give them a\n\n> > legible name. those are what i use in my fstab and also\n\n> > in any grub or refind configs.\n\n> >\n\n> > i hate UUIDS. i do understand what they're for and know\n\n> > about them, but i do not need them for the simple stuff i'm\n\n> > doing.\n\n>\n\n> Since Default User is playing with restoring partitions from backup\n\n> and cloning disks lies somewhere nearby, it may happen that 2 disks\n\n> with identical partition labels may be installed simultaneously.\n\n>\n\n> Partition UUIDs are affected as well,\n\nPrecisely, and users with a small collection of disks are far more\n\nlikely to anticipate and rectify a LABEL collision than a UUID one.\n\nHumans prefer working with names and small numbers rather than\n\n128-bit numbers. It takes little effort to devise a satisfactory\n\nnaming scheme.\n\n> but e.g. sgdisk has a dedicated\n\n> option:\n\n> https://www.rodsbooks.com/gdisk/sgdisk.html\n\n> > -G, --randomize-guids\n\n> > Randomize the disk's GUID and all partitions' unique GUIDs (but not\n\n> > their partition type code GUIDs). This function may be used after\n\n> > cloning a disk in order to render all GUIDs once again unique\n\nVery useful for the sysadmin who has a way of keeping track of the\n\nfilesystem and partition UUIDS on each disk; the point being that\n\nUUIDs scale well, particularly when handled by software.\n\nRepurposing a well-known meme¹: UUIDs are for people who treat their\n\ndisks like cattle, LABELs are for those who treat them like pets.\n\nWere I using UUIDs for unlocking and mounting disks at the command\n\nline, or in files like fstab, the giveaway is that I would have to\n\ndepend on the machine to tell me what the UUIDs were, either by\n\ncompletion, or by copy/paste. Seriously, no one ever types a UUID\n\ninto a computer, do they?\n\n> P.S. Some people hate consistent network device naming that was\n\n> introduced to solve the same problem with eth0-like names as the one\n\n> caused widespread of UUID in fstab instead of /dev/hdaX.\n\nThat's not the same problem at all. Network device names aren't, and\n\ndon't need to be, unique across even just two machines. What they need\n\nto be is stable and persistent on each individual machine. Typically,\n\nthe people who dislike them seem to be those who have no necessity for\n\nthem, often because their machines contain but a single device. It\n\nseems simple to configure any device names you like, so I don't really\n\nunderstand why they complain.\n\n¹ originally applied to servers, I believe.\n\nCheers,\n\nDavid.\n\nrhkr...@gmail.com\n\nunread,\n\nto\n\nOn Wednesday, April 19, 2023 05:02:16 PM Default User wrote:\n\n> sudo cp -r <source> <destination> from the live usb.\n\nRecently I've been trying to get in the habit of using cp -aru because those\n\noptions do what I usually want:\n\n* -a preserves dates (and ownership and permissions), and doesn't follow\n\n(copy from) symbolic links\n\n* -r recurses through subdirectories\n\n* -u copies only if the destination file is older than the file to be copied\n\n--\n\nrhk\n\n(sig revised 20230312 -- modified first paragraph, some other irrelevant\n\nwordsmithing)\n\n| No entity has permission to use this email to train an AI.\n\nIf you reply: snip, snip, and snip again; leave attributions; avoid HTML;\n\navoid top posting; and keep it \"on list\". (Oxford comma (and semi-colon)\n\nincluded at no charge.) If you revise the topic, change the Subject: line.\n\nIf you change the topic, start a new thread.\n\nWriting is often meant for others to read and understand (legal documents\n\nexcepted?) -- make it easier for your reader by various means, including\n\nliberal use of whitespace (short paragraphs, separated by whitespace / blank\n\nlines) and minimal use of (obscure?) jargon, abbreviations, acronyms, and\n\nreferences.\n\nIf someone has already responded to a question, decide whether any response\n\nyou add will be helpful or not ...\n\nA picture is worth a thousand words. A video (or \"audio\"): not so much --\n\ndivide by 10 for each minute of video (or audio) or create a transcript and\n\nedit it to 10% of the original.\n\nA speaker who uses ahhs, ums, or such may have a real physical or mental\n\ndisability, or may be showing disrespect for his listeners by not properly\n\npreparing in advance and thinking before speaking. (That speaker might have\n\nbeen \"trained\" to do this by being interrupted often if he pauses.) (Remember\n\nCicero who did not have enough time to write a short missive.)\n\nA radio (or TV) station which broadcasts speakers with high pitched voices (or\n\nvery low pitched / gravelly voices) (which older people might not be able to\n\nhear properly) disrespects its listeners. Likewise if it broadcasts\n\nextraneous or disturbing sounds (like gunfire or crying), or broadcasts\n\nspeakers using their native language (with or without an overdubbed\n\ntranslation).\n\nA person who writes a sig this long probably has issues and disrespects (and\n\noffends) a large number of readers. ;-)\n\n'\n\nMax Nikulin\n\nunread,\n\nto\n\nOn 20/04/2023 04:03, David Christensen wrote:\n\n> * What if root attempts to remove everything under /etc, in anticipation\n\n> of mounting a file system at /etc, when one or more programs have one or\n\n> more open temporary files?\n\nDavid, you were wrote /etc instead of /tmp in several messages, so at\n\ncertain moment I thought that original issue was due to attempt to\n\nreally mount another partition to /etc (e.g. for easier backups). Later\n\nan entry for /tmp was added to fstab on mounted partition, perhaps new\n\nversion of fstab even propagated to initramfs. However after reboot\n\nthere was no an entry for /etc in the /etc/fstab file residing on the\n\nroot partition, so init had no change to mount /etc with another fstab\n\n(with the entry for /etc). It is literally bootstrap problem.\n\nFortunately Default User posted complete fstab, so it was possible to\n\nrule out such hypothesis.\n\nI used initramfs and initrd as synonyms because of file names\n\n/boot/initrd* and update-initramfs command. Even though /tmp entry\n\nshould not be necessary during early init, I believe, it is safer to run\n\n\"update-initrams -u\" just to avoid surprise due to changes in fstab\n\nseveral days or weeks later when kernel update will arrive. It would be\n\nmuch harder to associate boot failure with fstab restored from backup\n\ninstead of \"broken\" kernel package.\n\nI am glad to read that the issue is solved, I see no problem with using\n\nof live image (it is wise to always have it available).\n\nI think, in this case live image (unlike reboot) was not strictly\n\nnecessary and may reduce down time if it is critical. I think, the\n\nfollowing is safe enough (not verified, may contain typos or even errors):\n\n- backup /etc/fstab and current initrd\n\n- have a look into grub.cfg and grub manual to be able to boot using\n\nbackup file\n\n- restore /etc/fstab from backup\n\n- Do not run \"systemctl daemon-reload\", since till shutdown systemd\n\nshould work accordingly to content of old fstab version\n\n- update-initramfs -u\n\n- reboot. It is required after adding /tmp to fstab to make new fstab\n\nactive and after update-initramfs to verify that new fstab does cause\n\nboot issue. Single reboot should be enough, however another one before\n\nupdate-initramfs is possible.\n\n- mount --bind / /mnt\n\n- remove files from /mnt/tmp/ remained from the previous boot. Otherwise\n\nsome large file hidden by mounted /tmp may reduce free space available\n\non the / partition\n\n- umount /mnt\n\n- remove initrd backup\n\nOn 4/21/23 08:12, Max Nikulin wrote:\n\n> On 20/04/2023 04:03, David Christensen wrote:\n\n>> * What if root attempts to remove everything under /etc, in\n\n>> anticipation of mounting a file system at /etc, when one or more\n\n>> programs have one or more open temporary files?\n\n>\n\n> David, you were wrote /etc instead of /tmp in several messages,\n\nI apologize for the errors. :-(\n\nI will strive to do more proofreading before posting.\n\n> I used initramfs and initrd as synonyms because of file names\n\n> /boot/initrd* and update-initramfs command. Even though /tmp entry\n\n> should not be necessary during early init, I believe, it is safer to run\n\n> \"update-initrams -u\" just to avoid surprise due to changes in fstab\n\n> several days or weeks later when kernel update will arrive. It would be\n\n> much harder to associate boot failure with fstab restored from backup\n\n> instead of \"broken\" kernel package.\n\nI am unaware of any single document that would allow us to definitively\n\nanswer the question \"what does initrd.img depend upon?\". If anyone\n\nknows of such, please provide a citation.\n\nI find it strange that we run a tool named \"update-initramfs\" to update\n\na file named \"initrd.img-*\". Should not the tool be named \"update-initrd\"?\n\nI would like to imagine that running update-initramfs(8) is always safe,\n\nbut I seem to be running into a lot of WTF's on Linux and/or Debian again.\n\n> I am glad to read that the issue is solved, I see no problem with using\n\n> of live image (it is wise to always have it available).\n\n>\n\n> I think, in this case live image (unlike reboot) was not strictly\n\n> necessary and may reduce down time if it is critical. I think, the\n\n> following is safe enough (not verified, may contain typos or even errors):\n\n> - backup /etc/fstab and current initrd\n\n> - have a look into grub.cfg and grub manual to be able to boot using\n\n> backup file\n\n> - restore /etc/fstab from backup\n\n> - Do not run \"systemctl daemon-reload\", since till shutdown systemd\n\n> should work accordingly to content of old fstab version\n\n> - update-initramfs -u\n\n> - reboot. It is required after adding /tmp to fstab to make new fstab\n\n> active and after update-initramfs to verify that new fstab does cause\n\n> boot issue. Single reboot should be enough, however another one before\n\n> update-initramfs is possible.\n\n> - mount --bind / /mnt\n\n> - remove files from /mnt/tmp/ remained from the previous boot. Otherwise\n\n> some large file hidden by mounted /tmp may reduce free space available\n\n> on the / partition\n\n> - umount /mnt\n\n> - remove initrd backup\n\nAs for the Linux initial ramdisk, and ignoring system configuration\n\nsettings in memory:\n\n* The Linux initial ramdisk is a cache used by the boot process. If\n\nsystem configuration settings in a file on primary storage are created/\n\nupdated/ deleted, if initrd.img depends upon those settings, and if the\n\ninitrd.img is not updated, then the system configuration settings exist\n\nin two places and those settings are out-of-sync [1,2]. When the system\n\nis rebooted, the resulting system configuration will be a mixture of\n\nsettings from primary storage files and from initrd.img.\n\n* AIUI the BSD's do not have an initial ramdisk. If system\n\nconfiguration settings in a file on primary storage are created/\n\nupdated/ deleted, then the system configuration settings exist in only\n\none place. When the system is rebooted, the resulting system\n\nconfiguration will be unambiguous.\n\nAs for systemd:\n\n* AIUI systemd is a system management database comprised of text and\n\nbinary files. systemd may hook into initrd.img. I assume systemd has a\n\nnon-trivial schema with referential integrity requirements. The text\n\nfiles must have a syntax and the binary files must have a file\n\nstructure. There must be an API to perform operations on all or part of\n\nthe database. My interactions with systemd have been limited to running\n\nsystemd CLI programs. If and when the systemd database and/or\n\ninitrd.img components are damaged and/or out-of-sync such that boot\n\nfails, I have no idea how to fix that.\n\n* AIUI FreeBSD is configured via text files. I can edit them, check\n\nthem into a version control system, run them through shell pipelines,\n\netc.. If and when the system configuration is damaged such that boot\n\nfails, I know how to boot live media, mount filesystems, and work on\n\nthose files.\n\nDavid\n\n[1] https://en.wikipedia.org/wiki/Don't_repeat_yourself\n\n[2] https://www.martinfowler.com/bliki/TwoHardThings.html\n\nMax Nikulin\n\nunread,\n\nto\n\nOn 21/04/2023 00:43, songbird wrote:\n\n> Max Nikulin wrote:\n\n>> On 20/04/2023 19:10, songbird wrote:\n\n>>> one of the worst design decisions i've come across in\n\n>>> the modern era was the lack of git respecting file metadata.\n\n>\n\n> i know what all you've written below but\n\n> it does not apply to what i want or how i use those tools\n\n> and i consider git broken that it caters to broken tools\n\n> and intentionally then has to screw up information which i\n\n> consider both useful and critical to how i do things.\n\nThen I have no idea what you were trying to achieve by your original\n\nmessage.\n\nIt is perfectly valid to warn people that git is not an appropriate tool\n\nwhen file attributes audit is involved. I can understand if somebody is\n\npushing you toward git. At the same time I see nothing bad in tracking\n\nconfig files in git.\n\nIf you are looking for a backup tool that keeps metadata then it is\n\nbetter to ask it explicitly to to get suggestions like rdiff-backup.\n\nIgnorance may be an excuse, but you said it is not the case. For me it\n\nis too much to blame developers with harsh statements concerning design\n\ndecisions just because a tool was created for different tasks.\n\nGit appeared as a tool for linux kernel, a project that relies on make.\n\nFrequent incremental rebuilds are must have for developers. Git has some\n\nweak sides, but there is no point to attack its features. Git is a great\n\nstep forward in comparison to CVS and SVN. Experiments with version\n\ncontrol systems and build tools have not seized, likely we will see\n\nbetter ones.\n\nPrecise tracking of file attributes can cause troubles for VCS. Various\n\nfile systems have different set of attributes, incompatible time\n\nprecision. There is no point to track UIDs at all.\n\nI admit, for reproducible builds that include unprocessed files from\n\nrepository, git behavior is not perfect.\n\nDo not confuse a conscious design choice (even if it is a trade-off) and\n\nwrong selection of a tool that is inappropriate for specific purpose.\n\n>> Some build systems make decisions based on file hashes, not their\n\n>> modification times. It may require a daemon watching file changes to\n\n>> avoid recalculation of all hashes on each build. So such approach is a\n\n>> kind of trade-off.\n\n>\n\n> not a choice i agree with and so i have to work around\n\n> it for my purposes.\n\nFile hash approach is for developers relying on incremental rebuilds and\n\ncaching of build results. It is a way to avoid changing of mtime on\n\ncheckout.\n\nP.S. Old version of git FAQ explains taken mtime approach in the same\n\nway. Build tools relies of modification time comparison:\n\nhttps://archive.kernel.org/oldwiki/git.wiki.kernel.org/index.php/Git_FAQ.html#Why_isn.27t_Git_preserving_modification_time_on_files.3F\n\n(New one is rather brief https://git-scm.com/docs/gitfaq)\n\nDavid Wright\n\nunread,\n\nto\n\nOn Fri 21 Apr 2023 at 15:46:30 (-0700), David Christensen wrote:\n\n> On 4/21/23 08:12, Max Nikulin wrote:\n\n> > On 20/04/2023 04:03, David Christensen wrote:\n\n> > > * What if root attempts to remove everything under /etc, in\n\n> > > anticipation of mounting a file system at /etc, when one or\n\n> > > more programs have one or more open temporary files?\n\nWith one exception, I've not seen root (whichever process that\n\nrefers to) doing anything like that in anticipation of mounting\n\na filesystem, so I wondered where that realisation came from.\n\nThe exception (which I haven't actually observed) is run-init\n\ntearing down the initramfs before the true root is mounted.\n\n> > I used initramfs and initrd as synonyms because of file names\n\n> > /boot/initrd* and update-initramfs command. Even though /tmp entry\n\n> > should not be necessary during early init, I believe, it is safer\n\n> > to run \"update-initrams -u\" just to avoid surprise due to changes\n\n> > in fstab several days or weeks later when kernel update will\n\n> > arrive. It would be much harder to associate boot failure with\n\n> > fstab restored from backup instead of \"broken\" kernel package.\n\nThe OP obviously has a problem with /etc/fstab, in that they reported\n\nmodifications having been made by an unknown agent. An important hint\n\nin determining what might have been responsible is to know the\n\nmodification timestamp of the altered file, and whether any other\n\nfiles were modified within a short period bracketing that time.\n\nThe OP's backup methods might not be up to that task if they're\n\nlosing the metadata, but it's worth checking: the backups might\n\nalso be stored elsewhere, with dates in their names, etc.\n\nAFAICT running update-initramfs has no effect as its /etc/fstab will\n\nremain empty. The booting kernel uses the root filesystem's fstab,\n\nlocated by the root= on the kernel command line. Upgrading the kernel\n\nwill run update-initramfs, but not for any effect on the contained\n\n/etc/fstab.\n\nIn fact, it's difficult to see any advantage in adding entries to\n\nthe /etc/fstab in the initramfs. You would lose one of the important\n\nproperties of the kernel/initrd pair which is that you can run it\n\non a different machine with different root filesystems (selected\n\nby root=…) without having to modify them. (Cast your mind back to days\n\nof yore, when we had to run rdev to modify bytes at a certain kernel\n\noffset to change the root filesystem it would boot.)\n\n> I am unaware of any single document that would allow us to\n\n> definitively answer the question \"what does initrd.img depend upon?\".\n\n> If anyone knows of such, please provide a citation.\n\n/usr/sbin/mkinitramfs and the configuration parameters that it reads\n\nfrom /etc/initramfs/, I guess. (I assume you're not wanting to read\n\nabout how the kernel turns compressed cpio archives into a cached\n\nfilesystem.)\n\n> I find it strange that we run a tool named \"update-initramfs\" to\n\n> update a file named \"initrd.img-*\". Should not the tool be named\n\n> \"update-initrd\"?\n\nNo, the initrd ought to be called initramfs. I think the changeover\n\nfrom ram disk to ram filesystem was during 2.6 kernel versions.\n\nI assume the name just stuck.\n\n> I would like to imagine that running update-initramfs(8) is always\n\n> safe, but I seem to be running into a lot of WTF's on Linux and/or\n\n> Debian again.\n\nIt should always be safe, but be aware that initrds have got quite\n\nlarge nowadays, particularly with MODULES=most, so people with /boot\n\non its own partition have to keep an eye on free space.\n\n> As for the Linux initial ramdisk, and ignoring system configuration\n\n> settings in memory:\n\n>\n\n> * The Linux initial ram[fs] is a cache used by the boot process. If\n\n> system configuration settings in a file on primary storage are\n\n> created/ updated/ deleted, if initrd.img depends upon those settings,\n\n> and if the initrd.img is not updated, then the system configuration\n\n> settings exist in two places and those settings are out-of-sync [1,2].\n\n> When the system is rebooted, the resulting system configuration will\n\n> be a mixture of settings from primary storage files and from\n\n> initrd.img.\n\nThat's why you see update-initramfs being run any time the relevant\n\nparts of the configuration change, avoiding that situation.\n\n> * AIUI the BSD's do not have an initial ramdisk. If system\n\n> configuration settings in a file on primary storage are created/\n\n> updated/ deleted, then the system configuration settings exist in only\n\n> one place. When the system is rebooted, the resulting system\n\n> configuration will be unambiguous.\n\nYes, I remember building custom kernels years ago, where you had to\n\nbuild in all the modules that might ever be necessary to find and\n\nmount the root filesystem. And all that code ran in kernel space.\n\nThe benefit of an initramfs is that you don't need any filesystem\n\ndrivers built into the kernel (you would need one were you to use\n\na ram /disk/), and most of the code, which can be complex and\n\nextensive, runs in user space. Think decryption, RAID, networked\n\nfile systems etc.\n\n> As for systemd:\n\n>\n\n> * AIUI systemd is a system management database comprised of text and\n\n> binary files.\n\nIs that right? I know systemd uses binary files for its logging\n\n(though it can and does write traditional text ones too). But can\n\nyou point out some binary configuration files that systemd uses.\n\n> systemd may hook into initrd.img.\n\nHmm, I got the impression that systemd, /sbin/init, PID1, started just\n\nas run-init finished tearing down all remnants of the initramfs, and\n\nmounted the real root filesystem.\n\nLooking for the string systemd in my own initrd.img, I have the binary:\n\n-rwxr-xr-x 1 678392 Apr 27 2020 main/usr/lib/systemd/systemd-udevd\n\nwhich looks like a slimmed down version of /bin/udevadm. It's\n\ndifficult to imagine initramfs not containing udev. IDK whether\n\nnon-systemd users have their own, special version of udev to avoid\n\nhaving a systemd hook into initrd.img.\n\nThen I see main/usr/lib/modprobe.d/systemd.conf containing two lines:\n\noptions bonding max_bonds=0\n\noptions dummy numdummies=0\n\nwhich is something to do with preventing bonding if/when some kernel\n\nmodule is loaded during the initramfs phase.\n\nLastly, I see main/usr/lib/systemd/network/99-default.link containing:\n\n[Link]\n\nNamePolicy=keep kernel database onboard slot path\n\nMACAddressPolicy=persistent\n\nwhich is the backstop for udev's handling of network interfaces.\n\n> I assume systemd has\n\n> a non-trivial schema with referential integrity requirements. The\n\n> text files must have a syntax and the binary files must have a file\n\n> structure. There must be an API to perform operations on all or part\n\n> of the database.\n\nSorry, which operations on what database?\n\n> My interactions with systemd have been limited to\n\n> running systemd CLI programs. If and when the systemd database and/or\n\n> initrd.img components are damaged and/or out-of-sync such that boot\n\n> fails, I have no idea how to fix that.\n\nSorry, you've lost me; I thought it was the kernel that booted a linux\n\nsystem, not systemd.\n\n> * AIUI FreeBSD is configured via text files. I can edit them, check\n\n> them into a version control system, run them through shell pipelines,\n\n> etc.. If and when the system configuration is damaged such that boot\n\n> fails, I know how to boot live media, mount filesystems, and work on\n\n> those files.\n\nFunny—that's rather like what we sysadmins do on linux, apart from\n\nbeing rather vague when compared with the specific details we are\n\ndissecting here.\n\n> [1] https://en.wikipedia.org/wiki/Don't_repeat_yourself\n\nWhen an ocean liner leaves port, it doesn't use its main engines:\n\ntugs tow it out of the harbour using their engines. The ship's master\n\nwouldn't be able to navigate the liner into the main channel, but a\n\npilot handles that with ease, before disappearing over the side into\n\na pilot boat. Once at sea, the liner needs neither tugs nor pilot.\n\nCheers,\n\nDavid.\n\nDavid Wright\n\nunread,\n\nto\n\nOn Sat 22 Apr 2023 at 18:51:26 (-0700), David Christensen wrote:\n\n> On 4/22/23 08:24, David Wright wrote:\n\n> > On Fri 21 Apr 2023 at 15:46:30 (-0700), David Christensen wrote:\n\n> > > On 4/21/23 08:12, Max Nikulin wrote:\n\n> > > > On 20/04/2023 04:03, David Christensen wrote:\n\n> > > > > * What if root attempts to remove everything under /etc, in\n\n> > > > > anticipation of mounting a file system at /etc, when one or\n\n> > > > > more programs have one or more open temporary files?\n\n> >\n\n> > With one exception, I've not seen root (whichever process that\n\n> > refers to) doing anything like that in anticipation of mounting\n\n> > a filesystem, so I wondered where that realisation came from.\n\n> > The exception (which I haven't actually observed) is run-init\n\n> > tearing down the initramfs before the true root is mounted.\n\n>\n\n>\n\n> You're right; what I wrote makes no sense -- because it is wrong:\n\n>\n\n> On 4/21/23 08:12, Max Nikulin wrote:\n\n> > David, you were wrote /etc instead of /tmp in several messages\n\n>\n\n> On 4/21/23 15:46, David Christensen wrote:\n\n> > I apologize for the errors. :-(\n\nI had seen your correction, but my point wasn't dependent on any\n\nparticular choice of directory, but with mounting filesystems\n\nin general—onto any mountpoint.\n\n> \"Back in the day\", people running Linux had computers with limited\n\n> amounts of storage and memory. I imagine an initial ramdisk seemed\n\n> like an good trade-off/ work-around at that time.\n\n>\n\n> But today, this is my Linux daily driver:\n\n> Total online memory: 32G\n\nThat must be nice. I don't know what it might have cost. I'm afraid\n\nI only use cast-offs. The oldest has ½GB memory.\n\n> # ls -l /boot/initrd.img-5.10.0-21-amd64 /boot/vmlinuz-5.10.0-21-amd64\n\n> -rw-r--r-- 1 root root 47837534 Mar 18 19:23\n\n> /boot/initrd.img-5.10.0-21-amd64\n\n> -rw-r--r-- 1 root root 7019136 Jan 21 06:35 /boot/vmlinuz-5.10.0-21-amd64\n\n> The Linux kernel is ~7 MB and initrd.img is ~48 MB. My daily driver\n\n> is complete overkill.\n\nI think your kernel is probably more like 12.3MB of code. Your initrd\n\nis larger than mine: I'd have to see inside to tell why, but no matter.\n\n> Even my 2007 laptop has 2 GB of memory an a 1 GB boot partition/\n\n> filesystem. Still overkill.\n\nOverkill for what? I don't understand.\n\n> I would gladly accept a 48 MB vmlinuz to be rid of initrd.img and its\n\n> complexities.\n\n>\n\n> The resource hogs today are the apps, not the OS. Give me a KISS OS.\n\nI can't understand why one would want to load all that kernel code\n\njust to not use it. OK, for some reason you find the initrd complex.\n\n(I don't any details about how freeBSD boots up as I haven't used it.)\n\nI know you not interested in how it works or what it's for. I don't\n\nsee any sign that you've had difficulties in setting it up; it's just\n\nthere. It gets generated by the installer, and updated at various\n\ntimes, like kernel upgrades. So what are you here for? To tell us\n\nyou're confused? To debate its name? To campaign for its abolition?\n\nTo throw mud? To say WTF to yourself again?\n\nCheers,\n\nDavid.\n\nDavid Christensen\n\nunread,\n\nto\n\nOn 4/22/23 21:11, David Wright wrote:\n\n> On Sat 22 Apr 2023 at 18:51:26 (-0700), David Christensen wrote:\n\n>> On 4/22/23 08:24, David Wright wrote:\n\n>>> On Fri 21 Apr 2023 at 15:46:30 (-0700), David Christensen wrote:\n\n>>>> On 4/21/23 08:12, Max Nikulin wrote:\n\n>>>>> On 20/04/2023 04:03, David Christensen wrote:\n\n>>>>>> * What if root attempts to remove everything under /etc, in\n\n>>>>>> anticipation of mounting a file system at /etc, when one or\n\n>>>>>> more programs have one or more open temporary files?\n\n>>>\n\n>>> With one exception, I've not seen root (whichever process that\n\n>>> refers to) doing anything like that in anticipation of mounting\n\n>>> a filesystem, so I wondered where that realisation came from.\n\n>>> The exception (which I haven't actually observed) is run-init\n\n>>> tearing down the initramfs before the true root is mounted.\n\n>>\n\n>>\n\n>> You're right; what I wrote makes no sense -- because it is wrong:\n\n>>\n\n>> On 4/21/23 08:12, Max Nikulin wrote:\n\n>>> David, you were wrote /etc instead of /tmp in several messages\n\n>>\n\n>> On 4/21/23 15:46, David Christensen wrote:\n\n>>> I apologize for the errors. :-(\n\n>\n\n> I had seen your correction, but my point wasn't dependent on any\n\n> particular choice of directory, but with mounting filesystems\n\n> in general—onto any mountpoint.\n\nAIUI open(2) returns a file handle that a process uses to access file\n\ncontents. If a second file system is mounted such that it overlays the\n\nfile path while the file is still open, the process can still make\n\nsystem calls using the file descriptor (read(2), write(2), lseek(2),\n\nclose(2)). But if the process makes system calls using the file path\n\n(notably unlink(2)), there are several possibilities:\n\n1. The process may not have authority to access that path.\n\n2. The path may not exist.\n\n3. The process may find an old file, directory, or something at that path.\n\n4. The process may find a new and in-use something at that path which\n\nbelongs to another process.\n\nMy conclusion was that the safest approach would be for the OP to\n\nrestore the fstab(5) entry for /tmp and reboot. This keeps file\n\ndescriptors and file paths consistent -- both during shutdown and during\n\nthe next start-up (including the case where mounting the second file\n\nsystem fails).\n\n>\n\n>> \"Back in the day\", people running Linux had computers with limited\n\n>> amounts of storage and memory. I imagine an initial ramdisk seemed\n\n>> like an good trade-off/ work-around at that time.\n\n>>\n\n>> But today, this is my Linux daily driver:\n\n>\n\n>> Total online memory: 32G\n\n>\n\n> That must be nice. I don't know what it might have cost. I'm afraid\n\n> I only use cast-offs. The oldest has ½GB memory.\n\nhttps://www.ebay.com/itm/393918586141\n\n>\n\n>> # ls -l /boot/initrd.img-5.10.0-21-amd64 /boot/vmlinuz-5.10.0-21-amd64\n\n>> -rw-r--r-- 1 root root 47837534 Mar 18 19:23\n\n>> /boot/initrd.img-5.10.0-21-amd64\n\n>> -rw-r--r-- 1 root root 7019136 Jan 21 06:35 /boot/vmlinuz-5.10.0-21-amd64\n\n>\n\n>> The Linux kernel is ~7 MB and initrd.img is ~48 MB. My daily driver\n\n>> is complete overkill.\n\n>\n\n> I think your kernel is probably more like 12.3MB of code.\n\nWhere do you get 12.3MB?\n\n> Your initrd\n\n> is larger than mine: I'd have to see inside to tell why, but no matter.\n\n>\n\n>> Even my 2007 laptop has 2 GB of memory an a 1 GB boot partition/\n\n>> filesystem. Still overkill.\n\n>\n\n> Overkill for what? I don't understand.\n\n2 GB of memory and 1 GB of boot file system are more than enough to boot\n\nLinux or FreeBSD.\n\n<snip>\n\nDavid\n\nsongbird\n\nunread,\n\nto\n\nDavid Wright wrote:\n\n...\n\n> That must be nice. I don't know what it might have cost. I'm afraid\n\n> I only use cast-offs. The oldest has ½GB memory.\n\ni have some older memory sticks and chips that i will gladly\n\nsend to anyone who has older machines. the only condition i\n\nwould have for the gift is to pass them on to anyone else who\n\nmight need them as i'm not going to \"part out\" the list to one\n\nitem at a time. so you get the whole small pile of sticks/chips.\n\nfirst come, first served. send me an e-mail (to this address)\n\nwith your mailing address.\n\nlet me see what i have (i'm in need of a distraction this\n\nmorning so here's the list as best i can see them - i'm not\n\na PC or memory guru so i don't know exactly what these are\n\nnow as it has been quite some time since i pulled them and\n\naside from what is right on the chips all i can say is that\n\nthey were working when i pulled them):\n\n(pins not as well plated with gold)\n\n2 pcs - IC side markings HYUNDAI KOREA, 8 IC's,\n\n(markings on IC HY5117400A J-70 9629A KOREA)\n\n- 1 other side markings ST-102A HYM532410AM-70 6H82AA\n\n- 2 other side markings ST-103 HYM532410AM-70 6H82AA\n\n- 72 pins if the numbers next to the pins are right\n\n(these ones are heavier and have a nice layer of gold\n\non the pins compared to the ones above i'd say they\n\nare works of art)\n\n2 pcs - IC side markings MADE IN JAPAN, 8 IC's\n\nboth marked QQ18UU 94-VO HB56A13 2BV-7B 9419\n\n- other side marking on both was SAN-TM94VO\n\none marked AD, other marked BB\n\n- 72 pins\n\n2 pcs - came from a COMPAC pc, 8 IC's on one side\n\n(the B might be an 8)\n\nboth marked MTBLSDT864AG-10EC7 PC100-222-620,\n\none says 64MB, SYNCH, 100MHz, CL2 other doesn't\n\nboth have part number sticker and other numbers\n\non them - i'm not putting them on here...\n\n- 84 pins\n\n1 pc - 8 IC's on each side, very thin,\n\nprinted on tag:\n\nMT1GLSTDT464AG-10BC4 9829 DA ST 617054 PC100-323-620\n\nthe printing is very light on the ICs, i can barely see\n\nthem (as best i can make it out)\n\n9828 C USA MT 48LC2M8A1 TG -8B S\n\n- 84 pins\n\n1 pc - 8 IC's total more pins than 84 (i ain't counting them)\n\nINFINEON\n\nprinted on tag:\n\nHYS64D32300HU-5-C C3E53318\n\nAssembled in Malaysia\n\n256MB, DDR, 400, CL3 PC3200U-30330-A0\n\nsongbird"
    }
}