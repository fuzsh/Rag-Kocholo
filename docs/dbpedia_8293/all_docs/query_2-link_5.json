{
    "id": "dbpedia_8293_2",
    "rank": 5,
    "data": {
        "url": "https://www.infoworld.com/article/2302429/taming-clonezilla-free-open-source-disk-imaging-and-backups-2.html",
        "read_more_link": "",
        "language": "en",
        "title": "Taming Clonezilla: Free open source disk imaging and backups",
        "top_image": "https://www.infoworld.com/wp-content/themes/iw-b2b-child-theme/src/static/img/favicon-32x32.png",
        "meta_img": "https://www.infoworld.com/wp-content/themes/iw-b2b-child-theme/src/static/img/favicon-32x32.png",
        "images": [
            "https://www.infoworld.com/wp-content/uploads/2024/08/2817-0-34768700-1723797948-serdaryegulalp2_crop-100796854-orig.jpg?quality=50&strip=all&w=150",
            "https://images.techhive.com/images/idge/imported/article/ifw/2012/02/21/clonezilla-boot-options-100423339-orig.gif?auto=webp&quality=85,70",
            "https://images.techhive.com/images/idge/imported/article/ifw/2012/02/21/clonezilla-copy-options-100423341-orig.gif?auto=webp&quality=85,70",
            "https://images.techhive.com/images/idge/imported/article/ifw/2012/02/21/clonezilla-network-config-100423342-orig.gif?auto=webp&quality=85,70",
            "https://images.techhive.com/images/idge/imported/article/ifw/2012/02/21/clonezilla-expert-options-100423343-orig.gif?auto=webp&quality=85,70",
            "https://images.techhive.com/images/idge/imported/article/ifw/2012/02/21/clonezilla-colors-100423344-orig.gif?auto=webp&quality=85,70",
            "https://images.techhive.com/images/idge/imported/article/ifw/2012/02/21/clonezilla-oops-100423345-orig.gif?auto=webp&quality=85,70",
            "https://www.infoworld.com/wp-content/uploads/2024/08/2817-0-34768700-1723797948-serdaryegulalp2_crop-100796854-orig.jpg?quality=50&strip=all&w=250",
            "https://www.infoworld.com/wp-content/uploads/2024/06/sharon-machlis_150x150px-100780511-orig.gif?w=150",
            "https://www.infoworld.com/wp-content/uploads/2024/08/483088-0-88557000-1723562370-serdaryegulalp2_crop-100796854-orig.jpg?quality=50&strip=all&w=1024",
            "https://www.infoworld.com/wp-content/uploads/2024/08/482983-0-62898900-1723762303-paulkrill_crop-100796855-orig.jpg?quality=50&strip=all&w=484",
            "https://www.infoworld.com/wp-content/uploads/2024/08/2254957-0-32072300-1723831511-shutterstock_2287852415_3db0f1.jpg?quality=50&strip=all&w=444",
            "https://www.infoworld.com/wp-content/uploads/2024/08/3487164-0-83574300-1723798858-shutterstock_1951878751.jpg?quality=50&strip=all&w=413",
            "https://www.infoworld.com/wp-content/uploads/2024/08/3487254-0-51309600-1723797052-shutterstock_1104295547-100963149-orig.jpg?quality=50&strip=all&w=375",
            "https://www.infoworld.com/wp-content/uploads/2024/08/3480797-0-15076600-1723830721-Youtube-Thumbnails_Template-OLD.jpg?quality=50&strip=all&w=444",
            "https://www.infoworld.com/wp-content/uploads/2024/08/3479099-0-77926700-1723830335-Linux-Tips-video-template_9673e7.png?w=444",
            "https://www.infoworld.com/wp-content/uploads/2024/07/Youtube-Thumbnails_Template-OLD-1.png?w=444"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Serdar Yegulalp",
            "Serdar Yegulalp Senior",
            "Sharon Machlis Executive Editor",
            "Data & Analytics"
        ],
        "publish_date": "2012-02-21T09:00:00-05:00",
        "summary": "",
        "meta_description": "Clonezilla is powerful and flexible but hardly straightforward; here's how to harness the popular drive-cloning software",
        "meta_lang": "en",
        "meta_favicon": "https://www.infoworld.com/wp-content/themes/iw-b2b-child-theme/src/static/img/favicon.ico",
        "meta_site_name": "InfoWorld",
        "canonical_link": "https://www.infoworld.com/article/2302429/taming-clonezilla-free-open-source-disk-imaging-and-backups-2.html",
        "text": "Among the many tools out there for cloning drives and performing full-system backups, one came to my attention for being both free (and open source) and powerful: Clonezilla, a product of the Free Software Labs of the National Center for High-Performance Computing in Taiwan.\n\nClonezilla’s power, however, is matched by complexity. You can get a lot out of it, but at the cost of paying close attention to what you’re doing. Here’s a guide to getting just what you need from Clonezilla — without wreaking havoc on your system or being swallowed by the monster.\n\nClonezilla performs two basic kinds of disk-copying operations: disk-to-disk and disk-to-file. Disk-to-disk is exactly what it sounds like — a way to directly copy the contents of one disk or partition to another. Disk-to-file copying allows a disk or partition to be saved to a series of files, which are kept together in a directory located on either a network-attached disk or a locally mounted one (for example, a USB-connected hard drive).\n\nDuring boot, the screen will be flooded with various Linux system messages, most of which you can ignore until “Choose language menu” comes up. After you choose a default language and a keymap (again, the best option for that is usually “Don’t touch keymap”), you’ll be brought to the actual Start Clonezilla menu. From there, select your copying method.\n\nIf you want to back up a disk to a file, choose device-image.\n\nIf you want to clone a disk to another disk, choose device-device.\n\nIf you want to restore a disk from a file, choose device-image. You can also use this option to restore to multiple local disks at once.\n\nThe hard drive alphabet soup Before copying disks with Clonezilla, Windows users should note that the program doesn’t use the standard Windows drive-letter notation for the drives and partitions in your system, but rather the Linux method. The first physical drive is called /dev/sda, the second /dev/sdb, and so on. Partitions are referred to by number: the first and second partitions on the first drive would be /dev/sda1 and /dev/sda2, the partitions on the second drive would be /dev/sdb1 and /dev/sdb2, and so on.\n\nOne way of sorting out the potential confusion over which drives are which is to pay attention to both the size and the manufacturer information that Clonezilla reports back about each drive. This usually provides enough information for most people to differentiate between drives. If you’re still confused, you can use a tool like SIW in Windows to learn which drives have which make, model, and serial information associated with them.\n\nIf you want to avoid any potential for confusion whatsoever, you might consider unplugging every drive in the system not absolutely required for the copy operation before you start Clonezilla.\n\nClone a disk to a file When you clone a disk to a file via device-image, you need to specify a target location for the file. These are your options:\n\nlocal_dev — A local disk such as another hard drive (or partition) or a locally attached external USB drive.\n\nssh_server — A remote SSH server. Note that “remote” doesn’t have to be on the Internet somewhere; it can be another network-attached machine on your own LAN. This is the standard method I’ve adopted for cloning to a file across the network.\n\nsamba_server — A remotely mounted SAMBA (Microsoft Windows Network or Network Neighborhood) server. I don’t recommend this option unless you’re a whiz at getting SAMBA to work in Linux; you can get SSH working with less effort.\n\nnfs_server — An NFS server somewhere on the network. Again, this one’s mainly for pros who already know NFS and are comfortable working with it. If you’re not, this isn’t a good place to start your crash course.\n\nMost people will want to use one of the first two options for the sake of simplicity. A locally attached drive of some kind is easy to work with and quite fast. An SSH-attached server is not as fast, but more flexible. You can put the file on any system running SSH, including Windows.\n\nRemember to shut down freeSSHd when you’re not using Clonezilla, even if you’re only using it on a LAN. The last thing you want is a stranger attempting to connect to freeSSHd when you’re not looking.\n\nNote that you don’t have to attach an external drive before you boot Clonezilla for it to be recognized by Clonezilla. Attaching the drive after Clonezilla boots makes it easier to determine your source drive. Also, if you’re booting Clonezilla from USB media and your computer doesn’t give you precise control over which USB device to boot from (as is the case with mine), it helps to plug only one such device in at boot time anyway.\n\nClone a disk to a disk With device-device cloning, you have two options. With local-to-local, you can copy disks or partitions between locally attached drives, while local-to-remote lets you boot Clonezilla on another machine somewhere on the network, then use that machine as the target for the first machine’s disk image. (If you want to perform one-to-many cloning, where you use one image to build multiple systems, you may want to go with the server edition of Clonezilla.)\n\nOne major annoyance: With local-to-remote cloning, Clonezilla will print some commands on-screen for you to use on the target machine, but doesn’t provide an actual menu option for those same commands. You have to type them in manually.\n\nCopying a whole disk to another whole disk is typically easy enough, especially if the target disk is larger than the source disk. One of the expert options during the restore process is “Try to resize the file system to fit partition size,” but you can also use the Disk Management tool in Windows for FAT and NTFS partitions or the Parted tool in Linux to accomplish the same thing after the fact.\n\nCopying partitions between disks is also usually pretty easy, although two major caveats apply. First, you have to make sure the target disk has enough room for the partition you’re copying. It seems obvious, but it’s an easy mistake to make. Second, copying individual partitions may not produce the results you expect if you’re dealing with an operating system. With many Windows Vista and Windows 7 systems, for instance, simply copying the main system partition won’t give you a bootable computer. You may need to copy the boot loader and the rescue partition as well, which works only if you copy the whole disk. If you perform a full-disk copy operation with Clonezilla on an OS disk, you’ll be prompted to copy the boot loader as well (and you should).\n\nBeginner vs. expert Clonezilla gives you two basic options when performing a cloning operation: beginner and expert. Beginner handles most everything automatically. Pick expert only if you need to do any of the following:\n\nYou want to select which programs Clonezilla uses to perform the cloning process. By default, Clonezilla will automatically detect the file systems being backed up and select the appropriate programs to accomplish this. You need to override this only if you have some arcane partition type that Clonezilla can’t automatically detect for some reason.\n\nYou need to manually set options for handling Windows volumes. Clonezilla can automatically remove page and hibernation files from clone images (since they’re rarely needed), but only in expert mode.\n\nYou want to manually set the compression options. The default compression options are optimized for modern multicore processors, but if you want to force another compression option (or disable compression entirely), you can do that.\n\nYou need to split the image into chunks of a size other than 2GB. By default Clonezilla saves disk images in pieces no larger than 2GB to ensure compatibility with FAT32 volumes.\n\nYou want to set other corner-case options. These include such things as not using DMA for the hard drive (to work around certain disk controller bugs) and forcing Clonezilla to skip over disk errors.\n\nClonezilla has a number of habits that should appeal to experts. When you set up a cloning operation, for instance, Clonezilla saves a copy of the command-line sequence used to trigger the same operation to the /tmp directory and allows you to access it from the console. Command-line actions are also echoed to the display right before the copy operation starts, providing another handy way to make note of them.\n\nThe copy operation Once you answer enough options to begin the actual copy operation, you’ll be bombarded — that’s the best word for it — with a lot of informational text about the choices you’ve made. Fortunately, Clonezilla gives you a convenient way to filter the signal from the noise.\n\nAn estimated time of completion for the copy operation will be shown onscreen as the process unfolds. Keep in mind that, if you’re copying multiple partitions, the time estimate you see will be for only the current partition, not the entire job.\n\nIf for whatever reason you need to go to a command line in Clonezilla while the copy operation is still in process, you don’t have to interrupt the operation to do so. You can press Alt-F2 to switch to another console and work there. Just be careful not to do anything that would trash the cloning operation, like accidentally unmounting the source or target media.\n\nMajor caveats As noted above, Clonezilla’s power comes at a price. You have to pay close attention to what you’re doing, or you could find yourself (or, more precisely, your data) in deep trouble. Apart from the general word of caution, a number of specific caveats deserve to be spelled out.\n\nGoing back a step in the cloning process is nearly impossible. This is my single biggest beef about Clonezilla. If you enter the wrong information at any stage of the process, you usually have no choice but to quit the whole thing and start over. Proceed with caution at every step and don’t hurry, especially when restoring an image.\n\nIt can be difficult to figure out why something failed. A Clonezilla failure will typically be due to a disk error on either side of the copy process; a network failure, if you’re copying across a network; or not enough free space on the target drive. The program suggests the last of those three as a default possibility if the copy process is interrupted since it’s one of the more common reasons for a botched backup operation. But it’s not always the reason, and you will often have to conduct your own troubleshooting to figure out what went wrong.\n\nThe blizzard of messages during the copy operation can be distracting. Rely on the previously described color-coding to avoid being overwhelmed. Most of the stuff Clonezilla prints to the console is for the sake of completeness. The really important stuff will be in yellow, with crucial informational data in green and warnings in red. Everything else can be more or less ignored.\n\nPay double attention to all prompts in yellow. Why? Because everything you agree to in yellow is most likely irreversible. If you’re about to overwrite a drive with an image, take the time to make sure it’s the right drive. A few moments now can save you a lot of grief later.\n\nI’ve used Clonezilla enough to be well aware of its shortcomings, and I still stick with it even when commercial offerings are dangled under my nose. I still hold out hope that one day we’ll be treated to a reworking of the product that removes many of the pitfalls and simplifies its usage. Until then, despite the rough edges, Clonezilla is still as versatile as it gets.\n\nThis article, “Taming Clonezilla: Free open source disk imaging and backups,” originally appeared at InfoWorld.com. Follow the latest developments in open source software and storage at InfoWorld.com. For the latest business technology news, follow InfoWorld.com on Twitter."
    }
}