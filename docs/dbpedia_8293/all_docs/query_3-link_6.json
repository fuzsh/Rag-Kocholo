{
    "id": "dbpedia_8293_3",
    "rank": 6,
    "data": {
        "url": "https://www.redhat.com/sysadmin/perl-scripts",
        "read_more_link": "",
        "language": "en",
        "title": "5 great Perl scripts to keep in your sysadmin toolbox",
        "top_image": "https://www.redhat.com/sysadmin/sites/default/files/styles/google_discover/public/2020-12/ssh-shell-pearl.jpg?itok=a6ex-Pun",
        "meta_img": "https://www.redhat.com/sysadmin/sites/default/files/styles/google_discover/public/2020-12/ssh-shell-pearl.jpg?itok=a6ex-Pun",
        "images": [
            "https://www.redhat.com/sysadmin/themes/custom/sysadmin/logo.svg",
            "https://www.redhat.com/sysadmin/sites/default/files/styles/full/public/2020-12/ssh-shell-pearl.jpg?itok=mlj90UiE",
            "https://www.redhat.com/sysadmin/sites/default/files/styles/card/public/2021-11/Python-programmer_1.jpg?itok=rP3r4klz",
            "https://www.redhat.com/sysadmin/sites/default/files/styles/card/public/2021-09/learn-letters.jpg?itok=loeUpduZ",
            "https://www.redhat.com/sysadmin/sites/default/files/styles/card/public/2022-02/man-music-hobby-career.jpg?itok=4nZHeR4m",
            "https://www.redhat.com/sysadmin/sites/default/files/styles/user_picture_square/public/pictures/2021-06/sethKenlon-headshot.jpg?itok=OyoGyrQS",
            "https://www.redhat.com/sysadmin/sites/default/files/2020-12/ace-magic-trick-formatting-date.jpg",
            "https://www.redhat.com/sysadmin/sites/default/files/2019-12/high-angle-photo-of-robot-2599244.jpg",
            "https://www.redhat.com/sysadmin/sites/default/files/2019-06/ten-10_0.jpeg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "skenlon",
            "Seth Kenlon",
            "www.redhat.com"
        ],
        "publish_date": "2023-01-30T10:01:55+00:00",
        "summary": "",
        "meta_description": "Check out five Perl gems that help you work better, faster.",
        "meta_lang": "en",
        "meta_favicon": "/sysadmin/themes/custom/sysadmin/favicon.ico",
        "meta_site_name": "Enable Sysadmin",
        "canonical_link": "https://www.redhat.com/sysadmin/perl-scripts",
        "text": "Before Python was the ubiquitous multitool of computer programming, Perl was the first choice for hobbyist programmers and lazy sysadmins. Many everyday Linux utilities in use today were written in Perl, so whether you're using Perl as a scripting language or not, you're probably still using Perl programs.\n\n[ Want to test your sysadmin skills? Take a skills assessment today. ]\n\nPerl is easy to overlook because you rarely think about commands in terms of the language they're written in. I sometimes find gems while browsing CPAN (the PyPI of Perl), and here are five of my favorite Perl utilities.\n\nmimetype\n\nA MIME type is a standard way to identify a filesystem entity. On the internet, MIME types help browsers understand what generic icon to assign a file, and they help desktops know what kind of application to use when opening a file.\n\nUnless you use them often, it can be difficult to recall the official MIME type designation for a file type. The Perl script mimetype, in the perl-file-mimeinfo package, provides the quickest and easiest solution:\n\n$ mimetype example.txt example.txt: text/plain $ mimetype html/example.webp html/example.webp: image/webp $ mimetype mydir mydir: inode/directory\n\ninnotop\n\nYou know top, htop, maybe powertop. But if you run databases, then you need to know innotop.\n\nThe innotop command monitors a MySQL or MariaDB database, providing performance and I/O statistics (including memory usage and queries processed per second), replication status, a query list, and much more.\n\nYou can get innotop from the MariaDB package.\n\n[ Get the MariaDB and MySQL cheat sheet. ]\n\ninxi\n\nLinux has plenty of commands to get a profile of your system. There's lsblk for block devices, free for RAM, ip link for network interfaces, and so on. But if you're looking for a unified command to give you just the information you want, you have to try inxi.\n\nThe inxi command gives you the information you expect when you want to get a computer's specs:\n\nCPU: 6-core AMD Ryzen 5 5600X (-MT MCP-) speed/min/max: 2248/2200/4650 MHz Kernel: 5.15.38 x86_64 Up: 9h 32m Mem: 7684.2/32104.6 MiB (23.9%) Storage: 7.28 TiB (48.1% used) Procs: 517 Shell: Bash inxi: 3.3.12\n\nNine times out of 10, that's the information you really mean to get, and inxi provides it in a way that's easy to read and easy to copy and paste.\n\nThat's not all inxi does, though. There are plenty of extra options available in its man page. For instance, I do a lot of audio work when I can, so seeing a complete list of audio devices is nice:\n\n$ inxi --audio Audio: Device-1: NVIDIA GP107GL High Definition Audio driver: snd_hda_intel Device-2: AMD Starship/Matisse HD Audio driver: snd_hda_intel Device-3: Logitech StreamCam type: USB driver: hid-generic,snd-usb-audio,usbhid,uvcvideo Device-4: Cooler Master CH321 type: USB driver: hid-generic,snd-usb-audio,usbhid Device-5: Logitech HD Pro Webcam C920 type: USB driver: snd-usb-audio,uvcvideo Device-6: ZOOM Handy Recorder stereo mix type: USB driver: snd-usb-audio Sound Server-1: ALSA v: k5.15.38 running: yes Sound Server-2: PulseAudio v: 15.0 running: yes\n\nIt's a great tool to have on any system, so download inxi now.\n\n[ Get the guide to installing applications on Linux. ]\n\nparallel\n\nI've written about my love of GNU Parallel before, but it's worth another mention. The parallel command literally means you can do more work, faster, with fewer commands.\n\nAnd it has two separate entry points: You can use it as the recipient of output sent through a Unix pipe or as a standalone command.\n\nAs a piped command, the typical start is the find command:\n\n$ find ~/public_html/images -type f -name \"*jpg\" | \\ parallel convert {} {.}.webp\n\nThis command finds all JPEG images in the public_html/images/ folder and converts them, in parallel, to WEBP (and swaps the extension .jpg for .webp in the process).\n\nThe standalone version of the command looks a little more mysterious if you're not used to it:\n\n$ parallel ffmpeg ~/Audio/file.flac -vn ~/Audio/file.{} ::: ogg m4a opus\n\nThis command uses ffmpeg to convert audio to three different formats.\n\nParallel is a must-have on any system, and it is available from your software repository.\n\n[ Learn how to get more done at the Linux command line with GNU Parallel. ]\n\nexiftool\n\nIt happens all the time. A user uploads a photo containing all kinds of potentially sensitive information in its metadata. Nobody gives it a second thought until somebody thinks to dump the EXIF data on the photo, which provides longitude, latitude, dates, and sometimes even more information about the person who took the picture. You can help protect your users (and yourself) by scrubbing EXIF metadata from photos before those photos are made public. The classic tool for that is the Perl script exiftool.\n\nThis command removes all metadata from all photos in the ~/public_html/images directory:\n\n$ exiftool -overwrite_original \\ -all:all= \\ -r ~/public_html/images/\n\nOf course, exiftool is useful for more than just deleting all metadata. You can write new metadata with it or correct metadata that's wrong. For instance, sometimes the EXIF data on a photo asks the photo viewer to rotate the image. When that's not what you want, you can set the Orientation property. There are eight possible values for orientation:\n\nHorizontal (normal)\n\nMirror horizontal\n\nRotate 180\n\nMirror vertical\n\nMirror horizontal and rotate 270 CW\n\nRotate 90 CW\n\nMirror horizontal and rotate 90 CW\n\nRotate 270 CW\n\nFor example:\n\n$ exiftool -Orientation=1 ~/public_html/image/foo.jpg\n\nThere are lots of potential properties in EXIF, so it can be difficult to know what values are expected. The exiftool project maintains a friendly conversion table for quick reference.\n\nPerl is a gem\n\nYou may not hear as much about Perl as you used to, but that doesn't mean the project's irrelevant. For me, Perl is a great \"Bash++\" language, with many conventions that feel similar to a C-like or shell scripting language than Python does. Even if you don't intend to write Perl scripts yourself, these five scripts are just the beginning of a collection of amazing utilities you should be using on your system. Try them out!"
    }
}