{
    "id": "dbpedia_8293_1",
    "rank": 78,
    "data": {
        "url": "https://www.baeldung.com/linux/system-image-create-restore",
        "read_more_link": "",
        "language": "en",
        "title": "Creating and Restoring a Linux System Image",
        "top_image": "https://www.baeldung.com/wp-content/uploads/sites/2/2022/11/Linux-Featured-Image-10-k.png",
        "meta_img": "https://www.baeldung.com/wp-content/uploads/sites/2/2022/11/Linux-Featured-Image-10-k.png",
        "images": [
            "https://www.baeldung.com/linux/wp-content/themes/baeldung/icon/logo.svg",
            "https://www.baeldung.com/wp-content/themes/baeldung/icon/logo.svg",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/11/linux_sublogo.png",
            "https://secure.gravatar.com/avatar/49d4832d92205a24d4d085e3edb2c75a?s=50&r=g",
            "https://www.baeldung.com/wp-content/uploads/custom_avatars/Eric-Martin-150x150.jpg",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/1_boot_menu.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/2_lang_sel.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/3_select_mode.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/4_select_clone_mode.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/5_select_device.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/6_prepare_partition.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/6_1_source_partition.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/7_fsck.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/8_select_destination.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/9_dir_select.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/9_1_destination_path.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/10_advance_config.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/11_select_disk_or_part.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/11_1_pick_name.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/12_select_src_part.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/13_check_repair.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/14_check_after_create.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/15_encryption.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/16_confirm.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/19_image_created.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/17_restore_image.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/f84042ab-8f9a-4e4f-a391-e9d11cf53de9.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/95e1120e-77b1-443a-990c-dca53427b0f2.png",
            "https://www.baeldung.com/wp-content/uploads/sites/2/2022/06/203df502-aa58-4422-9d3a-8d2fdd19b2be.png",
            "https://www.baeldung.com/linux/wp-content/themes/baeldung/icon/logo.svg",
            "https://www.baeldung.com/linux/wp-content/themes/baeldung/icon/whiteleaf.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Haidar Ali"
        ],
        "publish_date": "2022-06-02T07:22:57+00:00",
        "summary": "",
        "meta_description": "Learn how we can create an image of our Linux machine and restore it later on",
        "meta_lang": "en",
        "meta_favicon": "https://www.baeldung.com/wp-content/themes/baeldung/favicon/linux/apple-touch-icon-57x57.png",
        "meta_site_name": "Baeldung on Linux",
        "canonical_link": "https://www.baeldung.com/linux/system-image-create-restore",
        "text": "1. Overview\n\nCreating an image of a Linux system can be very useful if we want to create a backup of the system in a particular state. For instance, we can configure our Linux server to our heart’s content and then create a reusable image of it. That way, we wouldn’t need to install Linux and configure it from scratch.\n\nIn this tutorial, we’ll discuss how we can create an image of our Linux machine and restore it later on. First, we’ll start with the popular Clonezilla suite to create a complete system image and deploy it. Then, we’ll take a look at the dd utility that comes with most Linux distributions.\n\nFinally, we’ll cover the GNOME Disks utility for the same purpose.\n\n2. Clonezilla\n\nClonezilla is a set of utilities that we can use to create, restore, and deploy images. A manual approach to managing system images is quite tedious. Clonezilla can simplify this process to manage the system images and deploy them to a single or a group of computers.\n\nApart from that, Clonezilla costs nothing because it’s open-source. Not only that, but it also allows us to clone and restore disk images on remote devices as well.\n\nWe can use Clonezilla in two ways: the Live Clonezilla distribution and the command-line tool. The process of creating and restoring the image is the same for both approaches. Therefore, we’ll go with the former.\n\nHowever, before we begin, we should get a grasp of how our partitions are arranged:\n\n$ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTS sda 8:0 0 119.2G 0 disk ├─sda1 8:1 0 1G 0 part / └─sda2 8:2 0 3G 0 part\n\nOur Linux system is installed on the /dev/sda disk — specifically, on the /dev/sda1 partition. Our data partition is /dev/sda2, and that’s where we’ll write the image of /dev/sda1.\n\n2.1. Creating a Bootable Clonezilla Live USB Stick\n\nWe need to grab the ISO or ZIP image of Clonezilla from the official website. Once it’s downloaded, we’ll need to extract the contents of the archive to our USB stick:\n\n$ unzip -d clonezilla-live-12.1-amd64.zip /mnt/pendrive\n\nThat’s it. Now, we have a bootable USB stick containing the Clonezilla Live distribution.\n\n2.2. Booting Into Clonezilla Live\n\nLet’s reboot our system and select our bootable USB stick from the menu. Once Clonezilla is successfully booted, we’ll be presented with a GRUB menu:\n\nLet’s go ahead and select the first option.\n\n2.3. Creating the System Image\n\nAfter Clonezilla has successfully initialized, we’ll select our language of choice:\n\nNow, we’ll use the Clonezilla wizard to automate our image creation process:\n\nIn the next prompt, we’ll need to select the mode. In our case, we’re interested in the device-image and device-device mode:\n\nThe difference between the two is in the output. In the device-image mode, we will create an image out of our Linux system partition and store it as a file in another partition.\n\nOn the other hand, if we want to clone our Linux partition into another partition, then we’ll choose the device-device mode. The device-device mode is useful if we want to clone our Linux system to a new hard drive.\n\nAfter selecting the mode, we’ll need to select the source of where our image will be stored:\n\nIn this case, we want to store the image in another partition on our local hard drive. So, let’s select the local_dev option.\n\nIn the next step, Clonezilla will try to scan the disks attached to our machine — including USB devices. Afterward, it will get ready to prepare a mount point, which is usually /home/partimg:\n\nClonezilla detected the /dev/sda device, which is the primary hard disk on this machine that contains our Linux system. Let’s go ahead and press CTRL+C to go forward:\n\nClonezilla will prompt us whether to run fsck on our destination partition. Let’s skip this step:\n\nNow, Clonezilla will try to mount the partition that we want to store our image on. In this case, it’s /dev/sda2, so let’s go ahead and select it:\n\nWe can select a path in our destination partition. We’ll leave it as-is and select Done:\n\nAfter pressing Return, we’ll be prompted for the wizard configuration mode. We’ll go with the Beginner mode since we don’t need to configure any advanced options:\n\nAfterward, we’ll need to select whether we want to create an image of our entire disk or a specific partition:\n\nWe’ll go with the saveparts option because we only need to create the snapshot of our Linux partition.\n\nThen, we’ll optionally name the image or go with the default name:\n\nMoving forward, we’ll need to pick the partition that we want to create the image from. Clonezilla is smart enough to leave our destination partition out, so we don’t see that as an option:\n\nDuring this step, we might get an error that requires us to unmount the source partition. The reason for that is that the state of our source partition might change during the image creation process. Therefore, it will result in an image that might not work as expected.\n\nAfter picking our source partition, the wizard will prompt us for the check and repair option:\n\nWe’ll simply skip checking the partition and select the option for checking the image after it’s created.\n\nIn the next step, we’ll need to select whether we want to encrypt our image, which we’ll skip:\n\nIn the final step, Clonezilla will prompt us for confirmation:\n\nUpon confirming, Clonezilla will start the image creation process.\n\nOnce the image is created, we’ll be able to see it in our destination partition:\n\n2.4. Restoring the Image\n\nUp to this point, we’ve created the image with the Clonezilla wizard. Similarly, we can also restore the image using the wizard. All we need is to simply boot into the Clonezilla Live USB stick and select the device-image mode.\n\nAfterward, Clonezilla will try to scan the disks and look for any restoration images. We’ll need to select our target partition to restore the image to. However, in the following step, we’ll need to select the restoredisk or restoreparts option:\n\nClonezilla will mount the required partition and restore the image to our disk or partition.\n\n3. Alternative: dd\n\ndd is a low-level byte-by-byte copy utility. It’s a rather dangerous utility if you don’t know much about how it operates.\n\ndd basically creates a complete clone of a partition and even hard disks. We can dump this raw backup to a single file that we can restore later on.\n\n3.1. Image Creation\n\nThe way we’d use dd to create an image of our system is by dumping our entire Linux disk or partition to a file in an external drive. The destination disk should have free space greater than our actual image.\n\nFirst, let’s take a look at the overview of the partitions that we have:\n\nNAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTS sda 8:0 0 119.2G 0 disk ├─sda1 8:1 0 128M 0 part /boot/efi └─sda2 8:2 0 16.1G 0 part / sdb 8:16 1 29.3G 0 disk └─sdb1 8:17 1 29.3G 0 part\n\n/dev/sda is our primary Linux disk, and /dev/sdb is an external drive. Before we create the image, let’s mount and cd into our external drive:\n\n$ mount /dev/sdb1 /mnt\n\nNow, we’ll create an image of the /dev/sda drive and dump it to /mnt/sda.image:\n\n$ dd if=/dev/sda of=./sda.image\n\nDepending on the size of the disk, it’s going to take a while to complete.\n\n3.2. Compression\n\nThe size of the image file will be huge. Fortunately, we can compress the image using a compression program like gzip or bzip2 to achieve a sparse image:\n\n$ sudo bash -c \"dd if=/dev/sda | gzip > ./sda-$(date -I).image.gz\"\n\n$ sudo bash -c \"dd if=/dev/sda | bzip2 --best > ./sda-$(date -I).image.bz2\"\n\nMind that sudo normally doesn’t apply to redirections. For that reason, we’ll need to create a new instance of bash as sudo. Therefore, the redirect operations will be run as root as well.\n\n3.3. Image Restoration\n\nFor an uncompressed disk image, we need to specify the input file as the image and the output to be the partition or disk:\n\n$ dd if=./sda.image of=/dev/sda\n\nFor restoring compressed images, we’ll simply pipe the output of the image to dd:\n\n$ gzip -c ./sda-2022-05-20.image | sudo dd of=/dev/sda\n\n$ bzcat ./sda-2022-05-20.image | sudo dd of=/dev/sda\n\n3.4. Shortcomings of dd\n\nWhile dd is ubiquitous and easy to use, it has its drawbacks when we make images of the partitions and disks. One of the cons of dd is that it’s very dangerous to use. For instance, an incorrect partition number or typing of instead of if can result in overwriting what we’re trying to back up.\n\nOn the other hand, when we restore the partition, the target partition should be the same size as the partition we took the image of. However, we can expand the partition when we restore the backup.\n\nOn the contrary, for an entire disk, we don’t need to worry about the disk size if we’re trying to restore the image of the same disk.\n\n4. Alternative: GNOME Disks\n\nGNOME Disks is a GUI for udisks, a disk management service that comes with the GNOME desktop environment. On other desktop environments, we can simply install gnome-disk-utility from our distribution’s official package repository using a package manager.\n\nOnce we open GNOME Disks, we’ll be presented with a high-level view of our disks:\n\nNow, if we want to create an image of our disk, we can simply choose the Create Disk Image option from the Disks menu:\n\nBefore we can create the image, make sure the partitions of the disks are unmounted.\n\nNext, let’s pick a name for our image and click the Create button to start creating the image:\n\nSimilarly, to restore the image, we can select the Restore Disk Image option from the menu and select our disk image to be restored.\n\n5. Conclusion\n\nIn this article, we saw how straightforward creating images of our Linux system is. We began by booting a live Clonezilla USB stick and created an image of our Linux partition. Then, we also discussed how we could use dd to create an image of our entire disk.\n\nFinally, we covered the GNOME Disks utility as an alternative to the other programs."
    }
}