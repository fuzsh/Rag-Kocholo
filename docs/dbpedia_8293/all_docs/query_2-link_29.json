{
    "id": "dbpedia_8293_2",
    "rank": 29,
    "data": {
        "url": "https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/9.3_release_notes/new-features",
        "read_more_link": "",
        "language": "en",
        "title": "Chapter 4. New features",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.redhat.com/Logo-Red_Hat-Documentation-A-Reverse-RGB.svg",
            "https://docs.redhat.com/Logo-Red_Hat-Documentation-A-Reverse-RGB.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Chapter 4. New features | Red Hat Documentation",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/9.3_release_notes/new-features",
        "text": "download PDF\n\nThis part describes new features and major enhancements introduced in Red Hat Enterprise Linux 9.3.\n\n4.1. Installer and image creation\n\nSupport to both legacy and UEFI boot for AWS EC2 images\n\nPreviously, RHEL image builder created EC2 AMD or Intel 64-bit architecture AMIs images with support only for the legacy boot type. As a consequence, it was not possible to take advantage of certain AWS features requiring UEFI boot, such as secure boot. This enhancement extends the AWS EC2 AMD or Intel 64-bit architecture AMI image to support UEFI boot, in addition to the legacy BIOS boot. As a result, it is now possible to take advantage of AWS features which require booting the image with UEFI.\n\nJira:RHELDOCS-16339\n\nNew boot option inst.wait_for_disks= to add wait time for loading a Kickstart file or the kernel drivers\n\nSometimes, it may take a few seconds to load a Kickstart file or the kernel drivers from the device with the OEMDRV label during the boot process. To adjust the wait time, you can now use the new boot option, inst.wait_for_disks=. Using this option, you can specify how many seconds to wait before the installation. The default time is set to 5 seconds, however, you can use 0 seconds to minimize the delay. For more information about this option, see Storage boot options.\n\nBugzilla:2171811\n\nAbility to select required kernel while installing RHEL on ARM using GUI and TUI\n\nPreviously, you could install RHEL on ARM with kernel-64k page size only by using the Kickstart method. With this update, you can now install RHEL on ARM using the GUI or the TUI and selecting the required kernel version. The option to select the required kernel is available on the Software Selection screen under Kernel Options.\n\nBugzilla:2164819\n\nSupport for VMware VSphere (OVA)\n\nThis update adds support to build VMware VSphere OVA files by using RHEL image builder. The Open Virtual Appliance (OVA) file is a virtual appliance used by the VMware VSphere virtualization application. The OVA file contains files used to describe a virtual machine, such as an OVF descriptor file, one or more virtual machine disk image files (VMDK), optional manifest (MF) and certificate files. By using the VMware VSphere (.ova), you can more easily deploy the image to VMware vSphere by using the vSphere GUI client. You can further customize the resulting VM before you boot the image.\n\nJira:RHELDOCS-16877\n\nNew network Kickstart options to control DNS handling\n\nYou can now control DNS handling using the network Kickstart command with the following new options. Use these new options with the --device option.\n\nThe --ipv4-dns-search and --ipv6-dns-search options allow you to set DNS search domains manually. These options mirror their NetworkManager properties, for example:\n\nnetwork --device ens3 --ipv4-dns-search domain1.example.com,domain2.example.com\n\nThe --ipv4-ignore-auto-dns and --ipv6-ignore-auto-dns options allow you to ignore DNS settings from DHCP. They do not require any arguments.\n\nBugzilla:2065754\n\nMinimal RHEL installation now installs only the s390utils-core package\n\nIn RHEL 8.4 and later, the s390utils-base package is split into an s390utils-core package and an auxiliary s390utils-base package. As a result, setting the RHEL installation to minimal-environment installs only the necessary s390utils-core package and not the auxiliary s390utils-base package. If you want to use the s390utils-base package with a minimal RHEL installation, you must manually install the package after completing the RHEL installation or explicitly install s390utils-base using a Kickstart file.\n\nBugzilla:1932480\n\n4.2. Security\n\nKeylime rebased to version 7.3.0\n\nThe Keylime packages have been updated to upstream version 7.3.0. This version provides various enhancements and bug fixes. Most notably, the allow and exclude lists are combined into the Keylime runtime policy. You can combine the two lists by using the convert_runtime_policy.py script.\n\nIn addition, the update fixes two vulnerabilities with the moderate impact rating: CVE-2023-38200 and CVE-2023-38201.\n\nJira:RHEL-476\n\nPorts for Keylime have stricter rules in SELinux policy\n\nPorts used by Keylime are now labeled as keylime_port_t in the Keylime SELinux policy. The policy now allows TCP connections for ports with this label. This is because the previous Keylime SELinux policy allowed connecting to all undefined ports and also most of the ports used by Keylime were in the undefined group. As a result, this update increases the granularity of the Keylime SELinux policy, and port security can be more strict and better targeted.\n\nJira:RHEL-595\n\nAudit now supports FANOTIFY record fields\n\nThis update of the audit packages introduces support for FANOTIFY Audit record fields. The Audit subsystem now logs additional information in the AUDIT_FANOTIFY record, notably:\n\nfan_type to specify the type of a FANOTIFY event\n\nfan_info to specify additional context information\n\nsub_trust and obj_trust to indicate trust levels for a subject and an object involved in an event\n\nAs a result, you can better understand why the Audit system denied access in certain cases. This can help you write policies for tools such as the fapolicyd framework.\n\nJira:RHELPLAN-161087\n\nfapolicyd now provides rule numbers for troubleshooting\n\nWith this enhancement, new kernel and Audit components allow the fapolicyd service to send the number of the rule that causes a denial to the fanotify API. As a result, you can troubleshoot problems related to fapolicyd more precisely.\n\nJira:RHEL-624\n\ncrypto-policies now provides the NO-ENFORCE-EMS subpolicy for TLS 1.2 connections in FIPS mode\n\nThe system-wide cryptographic policies now contain the NO-ENFORCE-EMS subpolicy. After applying the new subpolicy, the system no longer requires the Extended Master Secret (EMS) extension (RFC 7627) for all TLS 1.2 connections negotiated in FIPS mode. This allows the system to connect to legacy systems without support for EMS or TLS 1.3. Note that this violates the requirements of the FIPS-140-3 standard. You can apply the subpolicy by entering the update-crypto-policies --set FIPS:NO-ENFORCE-EMS command.\n\nBugzilla:2216257\n\nGnuTLS requires EMS with TLS 1.2 in FIPS mode\n\nTo comply with the FIPS-140-3 standard, GnuTLS servers and clients require the Extended Master Secret (EMS) extension (RFC 7627) for all TLS 1.2 connections negotiated in FIPS mode. If your scenario requires preserving compatibility with older servers and clients that do not support EMS and you cannot use TLS 1.3, you can apply the NO-ENFORCE-EMS system-wide cryptographic subpolicy:\n\n# update-crypto-policies --set FIPS:NO-ENFORCE-EMS\n\nWarning\n\nIf you allow TLS 1.2 connections without EMS, your system no longer meets the FIPS-140-3 requirements.\n\nBugzilla:2157953\n\nNSS now enforce EMS in FIPS mode\n\nThe Network Security Services (NSS) libraries now contain the TLS-REQUIRE-EMS policy to require the Extended Master Secret (EMS) extension (RFC 7627) for all TLS 1.2 connections as mandated by the FIPS 140-3 standard. NSS use the new policy when the system-wide cryptographic policies are set to FIPS.\n\nIf your scenario requires interoperating with legacy systems without support for EMS or TLS 1.3, you can apply the NO-ENFORCE-EMS system-wide cryptographic subpolicy. Such a change violates the FIPS-140-3 requirements.\n\nBugzilla:2157950\n\nOpenSSL now supports disabling EMS in FIPS mode\n\nYou can now configure the OpenSSL cryptographic libraries to allow for TLS 1.2 connections without the Extended Master Secret (EMS) extension (RFC 7627) in FIPS mode by editing the /etc/pki/tls/fips_local.cnf file. In a text editor of your choice, add the following section to the configuration file:\n\n[fips_sect] tls1-prf-ems-check = 0 activate = 1\n\nThen, locate the SSL configuration section in the /etc/pki/tls/openssl.cnf file. The default SSL configuration section is crypto_policy. At the end of the SSL configuration section, add the following line:\n\nOptions=RHNoEnforceEMSinFIPS\n\nThe previous configuration changes allow the system in FIPS mode to connect to legacy systems without support for EMS or TLS 1.3.\n\nWarning\n\nYou can stop enforcing EMS for TLS 1.2 in FIPS mode by entering the update-crypto-policies --set FIPS:NO-ENFORCE-EMS command. In both cases, such a configuration change violates the requirements of the FIPS-140-3 standard.\n\nBugzilla:2216256\n\nOpenSSH further enforces SHA-2\n\nAs part of the effort to migrate further from the less secure SHA-1 message digest for cryptographic purposes, the following changes were made in OpenSSH:\n\nAdded a check on sshd startup whether using SHA-1 is configured on the system. If it is not available, OpenSSH does not try to use SHA-1 for operations. This eliminates loading DSS keys when they are present and also enforces advertising rsa-sha2 combinations when they are available.\n\nOn SSH private key conversion, OpenSSH explicitly uses SHA-2 for testing RSA keys.\n\nWhen SHA-1 signatures are unavailable on the server side, sshd uses SHA-2 to confirm host key proof. This might be incompatible with clients on RHEL 8 and earlier versions.\n\nWhen the SHA-1 algorithm is unavailable on the client side, OpenSSH uses SHA-2.\n\nOn the client side, OpenSSH permits SHA-2-based key proofs from the server when SHA-1 was used in key proof request or when the hash algorithm is not specified (assuming default). This is aligned with the already present exception for RSA certificates, and allows connecting by using modern algorithms when supported.\n\nBugzilla:2070163\n\nOpenSSL now contains protections against Bleichenbacher-like attacks\n\nThis release of the OpenSSL TLS toolkit introduces API-level protections against Bleichenbacher-like attacks on the RSA PKCS #1 v1.5 decryption process. The RSA decryption now returns a randomly generated deterministic message instead of an error if it detects an error when checking padding during a PKCS #1 v1.5 decryption. The change provides general protection against vulnerabilities such as CVE-2020-25659 and CVE-2020-25657.\n\nYou can disable this protection by calling the EVP_PKEY_CTX_ctrl_str(ctx, \"rsa_pkcs1_implicit_rejection\". \"0\") function on the RSA decryption context, but this makes your system more vulnerable.\n\nBugzilla:2153471\n\nOpenSSL now supports Brainpool curves configurable through the Groups option\n\nThis update of the OpenSSL TLS toolkit introduces support for Brainpool curves in Elliptic Curve Cryptography (ECC). Additionally, you can control the curves with the system-wide cryptographic policies through the Groups configuration option.\n\nThe following Brainpool curves are enabled in OpenSSL ECC:\n\nbrainpoolP256r1\n\nbrainpoolP256t1\n\nbrainpoolP320r1\n\nbrainpoolP320t1\n\nbrainpoolP384r1\n\nbrainpoolP384t1\n\nbrainpoolP512r1\n\nbrainpoolP512t1\n\nBugzilla:2188180\n\ncrypto-policies now supports OpenSSL ECC Brainpool curves\n\nWith this update of the system-wide cryptographic policies, you can now control the following Brainpool Elliptic Curve Cryptography (ECC) curves in OpenSSL by using the group option:\n\nBRAINPOOL-P256R1\n\nBRAINPOOL-P384R1\n\nBRAINPOOL-P512R1.\n\nFor example, you can enable all supported Brainpool elliptic curves in OpenSSL by creating a subpolicy that contains the following line:\n\ngroup = BRAINPOOL-*+\n\nBugzilla:2193324\n\ncrypto-policies now use the same group order as OpenSSL by default\n\nIn this release, the system-wide cryptographic policies (crypto-policies) control the group order in the OpenSSL Groups configuration option. To preserve the performance in OpenSSL, crypto-policies use the default group order that matches the order of the OpenSSL built-in preferences. As a result, the RHEL cryptographic back ends that support crypto-policies for controlling the group order, such as GnuTLS, now use the same order as OpenSSL.\n\nJira:RHEL-591\n\ncrypto-policies permitted_enctypes no longer break replications in FIPS mode\n\nBefore this update, an IdM server running on RHEL 8 sent an AES-256-HMAC-SHA-1-encrypted service ticket that an IdM replica running RHEL 9 in FIPS mode. Consequently, the default permitted_enctypes krb5 configuration broke a replication between the RHEL 8 IdM server and the RHEL 9 IdM replica in FIPS mode.\n\nThis update of the system-wide cryptographic policies reorders the permitted_enctypes krb5 configuration option values to allow prioritization of more interoperable encryption types by default. As a result, the permitted_enctypes configuration no longer break replications between a RHEL 8 IdM servers and a RHEL 9 IdM replica in FIPS mode.\n\nNote\n\nIf you use Kerberos, verify the order of the values of permitted_enctypes in the /etc/crypto-policies/back-ends/krb5.config file. If your scenario requires a different order, apply a custom cryptographic subpolicy.\n\nBugzilla:2225222\n\npcsc-lite-ccid rebased to 1.5.2\n\nThe pcsc-lite-ccid package has been updated to version 1.5.2. This version provides various bug fixes and enhancements, most notably:\n\nSupport for new readers\n\nFix for Alcor Micro AU9560\n\nBugzilla:2209457\n\nopensc rebased to 0.23\n\nThe opensc packages have been updated to version 0.23. This version provides various bug fixes and enhancements, most notably:\n\nAdded support for encryption and decryption using symmetric keys\n\nAdded support for signing data with a length of more than 512 bytes\n\nDisabled old card driver support by default\n\nRemoved support for old drivers MioCOS and JCOP\n\nJira:RHEL-280\n\nsetools rebased to 4.4.3\n\nThe setools packages have been updated to version 4.4.3. This version provides various bug fixes and enhancements, most notably:\n\nFixed compilation with Cython 3.0.0\n\nImproved man pages\n\nRemoved unused options in sediff, sesearch, and apol\n\nAdded the -r option to seinfoflow command to get flows analysis into the source type\n\nRules with no permissions are automatically rejected as an invalid policy\n\nBugzilla:2231801, Bugzilla:2184140\n\nAdditional services confined in the SELinux policy\n\nThis update adds additional rules to the SELinux policy that confine the following systemd services:\n\nqat\n\nsystemd-pstore\n\nboothd\n\nfdo-manufacturing-server\n\nfdo-rendezvous-server\n\nfdo-client-linuxapp\n\nfdo-owner-onboarding-server\n\nAs a result, these services do not run with the unconfined_service_t SELinux label anymore, and run successfully in SELinux enforcing mode.\n\nBugzilla:2080443 , Bugzilla:2026795, Bugzilla:2181565, Bugzilla:2128833\n\nOpenSCAP rebased to 1.3.8\n\nThe OpenSCAP packages have been rebased to upstream version 1.3.8. This version provides various bug fixes and enhancements, most notably:\n\nFixed systemd probes to not ignore some systemd units\n\nAdded offline capabilities to the shadow OVAL probe\n\nAdded offline capabilities to the sysctl OVAL probe\n\nAdded auristorfs to the list of network filesystems\n\nCreated a workaround for issues with tailoring files produced by the autotailor utility\n\nBugzilla:2217442\n\nSCAP Security Guide rebased to version 0.1.69\n\nThe SCAP Security Guide (SSG) packages have been rebased to upstream version 0.1.69. This version provides various enhancements and bug fixes. Most notably, it introduces three new SCAP profiles for RHEL 9 aligned with the CCN-STIC-610A22 Guide issued by the National Cryptologic Center of Spain in October 2022:\n\nProfile nameProfile IDPolicy version\n\nCCN Red Hat Enterprise Linux 9 - Advanced\n\nxccdf_org.ssgproject.content_profile_ccn_advanced\n\n2022-10\n\nCCN Red Hat Enterprise Linux 9 - Basic\n\nxccdf_org.ssgproject.content_profile_ccn_basic\n\n2022-10\n\nCCN Red Hat Enterprise Linux 9 - Intermediate\n\nxccdf_org.ssgproject.content_profile_ccn_intermediate\n\n2022-10\n\nBugzilla:2221697\n\nANSSI-BP-028 security profiles updated to version 2.0\n\nThe following French National Agency for the Security of Information Systems (ANSSI) BP-028 in the SCAP Security Guide were updated to be aligned with version 2.0:\n\nANSSI-BP-028 Minimal Level\n\nANSSI-BP-028 Intermediary Level\n\nANSSI-BP-028 Enhanced Level\n\nANSSI-BP-028 High Level\n\nBugzilla:2155790\n\npython3-greenlet-devel is now available in CRB\n\nThe python3-greenlet-devel package is now available in the CodeReady Linux Builder (CRB) repository, which you must explicitly enable. See the How to enable and make use of content within CodeReady Linux Builder Knowledgebase article for more information. Note that packages included in the CRB repository are unsupported.\n\nBugzilla:2149497\n\nSSG rule to check the group used by the pam_wheel.so module is simplified\n\nThe CIS Benchmark requires restricting the su command in favor of the sudo command. SCAP Security Guide (SSG) fulfills this requirement with the pam_wheel.so module, which restricts the su command to a specific group. This update improves the rule that checks whether this group exists and has no members. As a result, the rule is more efficient and simplifies the interpretation of the assessment report.\n\nJira:RHEL-1905\n\n4.3. RHEL for Edge\n\nNew FIDO Device Onboarding Servers container images are available\n\nThe following FIDO Device Onboarding Servers container images for onboarding IoT and edge computing devices are now available in the Red Hat Container Catalog:\n\nrhel9/fdo-manufacturing-server container image\n\nrhel9/fdo-owner-onboarding-server container image\n\nrhel9/fdo-rendezvous-server container image\n\nrhel9/fdo-serviceinfo-api-server container image\n\nJira:RHELPLAN-163133\n\nThe minimal-raw image type now supports 64-bit ARM architectures\n\nWith this enhancement, you can create a minimal-raw image type with support for 64-bit ARM architecture, and AMD and Intel 64-bit architectures. The minimal-raw image is pre-packaged, bootable, minimal RPM image, compressed in the xz format. To boot the image, you must decompress it and copy to any bootable device, such as an SD card. To decompress the image, run the following command:\n\n$ xz -d <_uuid-minimal-raw.img_.xz>\n\nJira:RHELPLAN-163665\n\nThe Commit ID is now supported as a value for the --parent argument of composer-cli CLI\n\nYou can now use the image Commit ID as a value for the --parent argument of the composer-cli command line. To get the image Commit ID, download and extract the RHEL for Edge Commit image. You can find the ref name and the commit ID in the extracted .tar file.\n\nJira:RHELDOCS-16386\n\nSupport to build RHEL for Edge .ami images\n\nWith this enhancement, you have support to build .ami images for RHEL for Edge by using on-premise RHEL image builder. During the initial boot, you can customize the blueprint with Ignition to inject the credentials into the image. You can upload the .ami image to AWS and boot an EC2 instance in AWS.\n\nJira:RHELDOCS-16708\n\nSupport to build .vmdk images for RHEL for Edge\n\nWith this enhancement, you have support to build a .vmdk image for RHEL for Edge by using on-premise RHEL image builder. You can customize the blueprint with Ignition to inject the credentials into the image during the initial boot. You can load the image on vSphere and boot the image in a VM vSphere. The image is compatible with ESXi 7.0 U2, ESXi 8.0, and later. The VM is compatible with versions 19 and 20.\n\nJira:RHELDOCS-16709\n\nYou can now log in to an Edge system as the initial user without setting a password\n\nPreviously, logging in as the initial user created during the FDO onboarding process did not work because the system asked for a password that was not set with the useradd command. With this enhancement, the password is now set to optional, and you can log in even if you did not previously set a password by using the useradd command. Note that you can log in with an SSH key without entering a password, and if it fails, you will be prompted to enter a password.\n\nJira:RHELDOCS-17101\n\n4.4. Software management\n\nNew DNF Automatic reboot option for an automatic reboot after an upgrade\n\nWith this enhancement, you can use the DNF Automatic reboot option to set your system to automatically reboot to apply the changes after an upgrade.\n\nThe reboot option supports the following settings:\n\nnever does not reboot the system. This is the current behavior.\n\nwhen-changed triggers a reboot after any upgrade.\n\nwhen-needed triggers a reboot only when rebooting is required to apply changes, for example, when systemd or the kernel is upgraded.\n\nYou can use the reboot_command option to customize the command used to reboot. The default reboot command is shutdown -r.\n\nBugzilla:2124793\n\nThe new --poweroff option allows you to shut down the system after installing updates\n\nWith this enhancement, the new --poweroff option has been added to the reboot command of the dnf system-upgrade plugin. You can use this option to shut down the system after installing updates instead of rebooting.\n\nBugzilla:2157844\n\nNew dnf leaves and show-leaves plug-ins are now available for the DNF API\n\nWith this enhancement, the following new DNF plug-ins are available that list packages installed on your system that are not required as dependencies of other installed packages:\n\ndnf leaves lists all packages.\n\nshow-leaves lists newly installed packages and packages that became unrequired as dependencies of other installed packages after a transaction.\n\nBugzilla:2134638\n\n4.6. Infrastructure services\n\nPostfix now supports SRV lookups\n\nWith this enhancement, you can now use the Postfix DNS service records resolution (SRV) to automatically configure mail clients and balance load of servers. Additionally, you can prevent mail delivery disruptions caused by temporary DNS issues or misconfigured SRV records by using the following SRV-related options in your Postfix configuration:\n\nuse_srv_lookup\n\nYou can enable discovery for the specified service by using DNS SRV records.\n\nallow_srv_lookup_fallback\n\nYou can use a cascading approach to locating a service.\n\nignore_srv_lookup_error\n\nYou can ensure that the service discovery remains functional even if SRV records are not available or encounter errors.\n\nBugzilla:2134789\n\nGeneric LF-to-CRLF driver is available in cups-filters\n\nWith this enhancement, you can now use the Generic LF-to-CRLF driver, which converts LF characters to CR+LF characters for printers accepting files with CR+LF characters. The carriage return (CR) and line feed (LF) are control characters that mark the end of lines. As a result, by using this driver, you can send an LF character terminated file from your application to a printer accepting only CR+LF characters. The Generic LF-to-CRLF driver is a renamed version of the text-only driver from RHEL 7. The new name reflects its actual functionality.\n\nBugzilla:2229784\n\n4.7. Networking\n\nRHEL on ARM now fully supports wifi adapters in RHEL 9.3\n\nWith this enhancement, you can now enable access to wifi adapters for several cards for the arm64 platforms.\n\nFor details on configuring wifi connections, see Managing wifi connections.\n\nBugzilla:2208365\n\nNetworkManager now supports the no-aaaa option in resolv.conf\n\nNetworkManager now supports adding the no-aaaa DNS option in the resolv.conf file. By using the no-aaaa value in the DNS option setting, you can disable IPv6 DNS resolution.\n\nBugzilla:2176137\n\nnmstate now supports mixing static DNS search along with dynamic DNS name servers\n\nThe nmstate framework now supports both static Domain Name System (DNS) search domains and dynamic DNS name servers, which nmstate obtained from Dynamic Host Configuration Protocol (DHCP) or the autoconf mechanism. Previously, static DNS search domains could not co-exist with dynamic DNS name servers because the dynamic configurations were discarded by nmstate. This often led to unnecessary complexity and limitations in network setup and management. This enhancement aims to bring more flexibility in managing DNS configurations. As a result, nmstate attempts to find a network interface to store the DNS configuration in the following order:\n\nThe preferred interface, which currently holds the DNS configuration and is still valid for DNS\n\nAn automatic interface\n\nAn IP enabled interface\n\nNote that this enhancement does not remove the DNS name servers learned from DHCP.\n\nThe following is an example YAML file to apply this feature:\n\n--- dns-resolver: config: search: - example.com - example.org interfaces: - name: eth1 type: ethernet state: up ipv4: enabled: true dhcp: true ipv6: enabled: true dhcp: true autoconf: true\n\nBugzilla:2179916\n\nnmstate now supports the bridge.vlan-default-pvid NetworkManager configuration option\n\nWith this update, you can use the nmstate framework to configure the bridge.vlan-default-pvid NetworkManager configuration option. By using this option, you can set the default port VLAN identifier (PVID) for untagged traffic on a bridge interface that supports VLANs, when you use Linux bridge VLAN filtering. To achieve this result, use the following YAML configuration:\n\ninterfaces: - name: linux-br0 type: linux-bridge state: up bridge: options: vlan-default-pvid: 5 port: - name: eth1 stp-hairpin-mode: false stp-path-cost: 100 stp-priority: 32 vlan: mode: access tag: 100\n\nNote that the default value of bridge.vlan-default-pvid is 1. When set to 0 with VLAN filtering enabled, the untagged traffic is dropped.\n\nBugzilla:2180795\n\nThe NetworkManager service restarts immediately after the dbus service is restarted\n\nPreviously, after restarting dbus for some reason, NetworkManager stopped. This behavior was not optimal and caused a loss of connectivity. Therefore, this enhancement updates NetworkManager to become more robust and to make it restart automatically upon a dbus restart.\n\nBugzilla:2161915\n\nThe nm-cloud-setup utility now supports IMDSv2 configuration\n\nUsers can configure an AWS Red Hat Enterprise Linux EC2 instance with Instance Metadata Service Version 2 (IMDSv2) with the nm-cloud-setup utility. To comply with improved security that restricts unauthorized access to EC2 metadata and new features, integration between AWS and Red Hat services is necessary to provide advanced features. This enhancement enables the nm-cloud-setup utility to fetch and save the IMDSv2 tokens, verify an EC2 environment, and retrieve information about available interfaces and IP configuration by using the secured IMDSv2 tokens.\n\nBugzilla:2151986\n\nNetworkManager notifies when using the deprecated ifcfg format\n\nConnection profiles in ifcfg format are deprecated in RHEL 9 (see NetworkManager connection profiles in ifcfg format are deprecated). With this update, NetworkManager notifies users about the deprecation of this format:\n\nNetworkManager logs the following warning to the systemd journal if it processes a connection profile in ifcfg format in the /etc/sysconfig/network-scripts/ directory:\n\nWarning: the ifcfg-rh plugin is deprecated, please migrate connections to the keyfile format using \"nmcli connection migrate\"\n\nThe nmcli utility reports the following error if you try to modify a property that is not supported in ifcfg format:\n\nError: Failed to modify connection '<name>': failed to update connection: The ifcfg-rh plugin doesn't support setting '<property>'. If you are modifying an existing connection profile saved in ifcfg-rh format, please migrate the connection to keyfile using 'nmcli connection migrate <connection_uuid>' or via the Update2() D-Bus API and try again.\n\nAs a result of these enhancements, NetworkManager now notifies users if they still use or modify connection profiles in the deprecated ifcfg format.\n\nFor further details about migrating profiles from ifcfg to keyfile format, see Migrating NetworkManager profiles from ifcfg to keyfile format.\n\nBugzilla:2190375\n\nNetworkManager now supports the lacp_active option in the bonding configuration\n\nBy using NetworkManager, the lacp_active option in bonding configuration provides fine-grained control over Link Aggregation Control Protocol Data Units (LACPDU) frames. The lacp_active option also adjusts the behavior of LACPDU frames and controls periodic transmission of these frames in the bonding setup. To customize network configurations, you can enable or disable periodic transmission of LACPDU frames by setting lacp_active to ON or OFF.\n\nBugzilla:2069001\n\nNetworkManager now supports configuration of the ns_ip6_target option for bond interfaces\n\nThis enhancement allows setting the arp_interval option by specifying a maximum of 16 IPv6 addresses as monitoring peers in NetworkManager for configuration of the ns_i6_target option for bond interfaces. Previously, it was not possible to specify IPv6 monitoring peers in NetworkManager. With this update, you can configure the ns_ip6_target option in the bond.options parameter by using the nmcli utility. NetworkManager applies this setting to the bond interface by enabling the specification of a maximum of 16 IPv6 addresses. This enhancement equally applies to IPv4 and IPv6 settings.\n\nBugzilla:2069004\n\nNetworkManager now supports both static and DHCP IP configuration on the same network interface\n\nBy using the nmstate utility, you can now assign a static IP address with dhcp: true or autoconf: true value on the DHCP or Ad-Hoc Network Autoconfiguration (autoconf) enabled interface.\n\nWith this enhancement, nmstate supports two properties of IP addresses:\n\nvalid_lft means valid lifetime in seconds\n\npreferred_lft means preferred lifetime in seconds\n\nDefault value of both parameters is forever which means static.\n\nWith above properties, nmstate can ignore DHCP/autoconf based IP addresses to avoid converting dynamic IP addresses to static IP after applying the queried state back. If your scenario requires having disabled DHCP/autoconf settings with dynamic IP addresses, nmstate converts those dynamic IP to static IP addresses.\n\nBugzilla:2177733\n\nnmstate supports MAC address identifiable network interface\n\nThe nmstate utility supports network configuration directly to a network interface with a MAC address instead of an interface name.\n\nThis enhancement introduces two properties to the base interface:\n\nidentifier : identifies name or mac-address on a network. The default value is name.\n\nprofile-name : string\n\nWhen the identifier variable is set to the mac-address value, nmstate uses the interface.mac-address over interface.name to choose a network interface for a specific network state. When storing the network configuration, if the interface.profile-name variable is not assigned, nmstate prefers interface.profile-name over interface.name. If you check the current network state, the interface.profile-name remains hidden if it is equal to interface.name.\n\nBugzilla:2183214\n\nNetworkManager supports defining after how many failed ARP checks the bonding driver marks a port as down\n\nThis enhancement adds the arp_missed_max option to bond connection profiles in NetworkManager. If you use the Address Resolution Protocol (ARP) monitor to check if ports of a bond are up, you can now set arp_missed_max to define after how many failed checks the bonding driver marks the port as down.\n\nBugzilla:2148684\n\nNetworkManager supports specifying link-related properties\n\nThis enhancement adds the following network link properties to NetworkManager connection profiles:\n\nlink.tx-queue-length - The size of the transmit (TX) queue length in number of packets.\n\nlink.gro-max-size - The maximum size in bytes of a Generic Receive Offload (GRO) packet the device accepts.\n\nlink.gso-max-segments - The maximum number of segments of a Generic Segmentation Offload (GSO) packet the device accepts.\n\nlink.gso-max-size - The maximum size in bytes of a GSO packet.\n\nPreviously, you could configure these kernel settings only by using ip commands or by using such commands in NetworkManager dispatcher scripts. With this enhancement, you can now configure these settings directly in connection profiles.\n\nNote that NetworkManager supports these properties only in connection profiles in keyfile format and not in the deprecated ifcfg format.\n\nBugzilla:2158328\n\nThe nmstate API support available for dhcp-send-hostname and dhcp-custom-hostname DHCP options\n\nWith this enhancement, the nmstate utility supports configuration of the following two DHCP options in the connection file:\n\ndhcp-send-hostname: true or false value. If a DHCP request needs the hostname or fully qualified domain name (FQDN) option, the hostname from that option is set. The default is true.\n\ndhcp-custom-hostname: <string>. Use this option to configure the hostname or FQDN option in a DHCP request, value type is string.\n\nFor DHCPv4 network protocols\n\nIf the hostname is FQDN, see the Fully Qualified Domain Name (FQDN), option (81) in RFC 4702.\n\nIf the hostname is not FQDN, see the Host Name, option (12) in RFC 2132.\n\nFor DHCPv6 network protocols\n\nSupports custom string, empty domain name, overrides the hostname for a DHCP request. See the Fully Qualified Domain Name (FQDN), option (29) in RFC 4704.\n\nBugzilla:2187622\n\nNetworkManager rebased to version 1.44.0\n\nThe NetworkManager packages have been upgraded to upstream version 1.44.0, which provides several enhancements and bug fixes over the previous version:\n\nLink-related properties have been added to NetworkManager.\n\nThe arp_missed_max, lacp_active, and ns_ip6_target properties have been added to bond connection profiles.\n\nYou can now set a DHCPv6 prefix delegation hint in the ipv6.dhcp-pd-hint connection property.\n\nEnabling the new rename parameter in the [keyfile] section of the /etc/NetworkManager/NetworkManager.conf file causes NetworkManager to rename a connection profile in /etc/NetworkManager/system-connections/ if you change a profile name (connection.id). If external applications or scripts rely on the file names, do not enable this parameter.\n\nWhen you set a hostname that contains a non-public top-level domain (TLD), NetworkManager now uses this TLD as DNS search domain instead of the full hostname.\n\nNetworkManager now applies DNS options from the [global-dns] section in the /etc/NetworkManager/NetworkManager.conf file.\n\nTo avoid race conditions with other depending services, NetworkManager now acquires the D-Bus name only after populating the D-Bus tree. Note that this can add a delay when NetworkManager starts.\n\nNetworkManager now adds a version-id argument to Update2() D-Bus calls to prevent concurrent profile modifications.F\n\nNetworkManager no longer uses tentative IPv6 addresses to resolve the system hostname from DNS.\n\nTo prevent unexpected behaviors in case of multi-connect profiles, NetworkManager now tracks the number of auto-connect retries left for each device and connection instead of only per connection.\n\nNetworkManager sets VLAN filtering options by using the kernel’s netlink interface instead of the sysfs file system.\n\nThe nm-cloud-setup utility now supports Instance Metadata Service Version 2 (IDMSv2) on Amazon EC2.\n\nUsers can now enable and disable wifi and Wireless Wide Area Networks (WWANs) in the nmtui application.\n\nBond, bridge, and team connections now use the ignore-carrier=no setting in the [main] section of the /etc/NetworkManager/NetworkManager.conf file.\n\nBugzilla:2180966\n\nSCTP rebased to the latest version of the kernel networking tree for RHEL 9\n\nNotable changes in the Stream Control Transmission Protocol (SCTP) networking subsystem include:\n\nVirtual routing and forwarding (VRF) support to segment and isolate SCTP traffic within complex network environments.\n\nNew stream schedulers (fair capacity, and weighted fair queueing) to ensure efficient and equal resource allocation in the network.\n\nBugzilla:2189292\n\nMPTCP rebased to the latest version of the kernel networking tree for RHEL 9\n\nNotable changes in the Multipath TCP (MPTCP) protocol extension include:\n\nSupport for TCP fastopen (TFO) extension, including the client-side support. This feature offers latency, efficiency, and performance improvements for your network.\n\nSupport multiple mixed IPv4/IPv6 subflows to allow for greater flexibility and adaptability in networks where both IP versions are used.\n\nBugzilla:2193330\n\nThe xdp-tools package rebased to version 1.4.0\n\nThe xdp-tools package has been upgraded to version 1.4.0, which provides multiple bug fixes and enhancements. Notable changes include:\n\nThe xdp-bench utility gained support for multi-buffer eXpress Data Path (XDP) and for benchmarking the xdp_load_bytes() helper in the kernel. This feature enables conducting network benchmarking tests with large maximum transmission units (MTUs).\n\nThe locking of the command line utilities of xdp-tools was improved to prevent stale locks if the utility did not exit cleanly.\n\nThe libxdp library contains a new xsk_umem__create_with_fd() API that accepts an extra file descriptor of an already open AF_XDP socket. You can use this function as a substitute for the regular xsk_umem__create() function when a process does not have CAP_NET_RAW privileges.\n\nBugzilla:2218500\n\niproute rebased to version 6.2.0\n\nThe iproute packages have been upgraded to upstream version 6.2.0, which provides several enhancements and bug fixes over the previous version. The most notable changes are:\n\nThe new ip stats command manages and shows interface statistics. By default, the ip stats show command displays statistics for all network devices, including bridges and bonds. You can filter the output by using the dev and group options. For further details, see the ip-stats(8) man page.\n\nThe ss utility now provides the -T (--threads) option to display thread information, which extends the -p (--processes) option. For further details, see the ss(8) man page.\n\nYou can use the new bridge fdb flush command to remove specific forwarding database (fdb) entries which match a supplied option. For further details, see the bridge(8) man page.\n\nJira:RHEL-428\n\nThe kernel supports activating bond ports in a specific order\n\nWith this enhancement, the kernel’s netlink interface supports setting a priority on each port if you configure a bond in active-backup, balance-tlb or balance-alb mode. The priority value uses a 32-bit Integer, and a higher value means a higher priority. As a result, you can now activate the bond ports in a specific order.\n\nTo use this feature, you can configure the priority by setting the bond-port.prio property when you create or modify a NetworkManager port connection profile.\n\nBugzilla:2092194\n\nfirewalld now avoids unnecessary firewall rule flushes\n\nWith the release of the RHBA-2023:7748, advisory the firewalld service was upgraded in a sense that it will not remove all the existing rules from the iptables configuration if both following conditions are met:\n\nfirewalld is using the nftables backend.\n\nThere are no firewall rules created with the --direct option.\n\nThis change aims at reducing unnecessary operations (firewall rules flushes) and improves integration with other software.\n\nJira:RHEL-14694\n\nIntroduction of new nmstate attributes for the VLAN interface\n\nWith this update of the nmstate framework, the following VLAN attributes were introduced:\n\nregistration-protocol: VLAN Registration Protocol. The valid values are gvrp (GARP VLAN Registration Protocol), mvrp (Multiple VLAN Registration Protocol), and none.\n\nreorder-headers: reordering of output packet headers. The valid values are true and false.\n\nloose-binding: loose binding of the interface to the operating state of its primary device. The valid values are true and false.\n\nYour YAML configuration file can look similar to the following example:\n\n--- interfaces: - name: eth1.101 type: vlan state: up vlan: base-iface: eth1 id: 101 registration-protocol: mvrp loose-binding: true reorder-headers: true\n\nJira:RHEL-19142\n\n4.8. Kernel\n\nKernel version in RHEL 9.3\n\nRed Hat Enterprise Linux 9.3 is distributed with the kernel version 5.14.0-362.8.1.\n\nBugzilla:2232554\n\nSupport added for NVIDIA Grace CPUs\n\nRed Hat Enterprise Linux 9.3 adds support for the NVIDIA Grace ARM 64-bit CPU.\n\nJira:RHELDOCS-17055\n\nThe RHEL kernel now supports AutoIBRS\n\nAutomatic Indirect Branch Restricted Speculation (AutoIBRS) is a feature provided by the AMD EPYC 9004 Genoa family of processors and later CPU versions. AutoIBRS is the default mitigation for the Spectre v2 CPU vulnerability, which boosts performance and improves scalability.\n\nBugzilla:1898184\n\nperf rebased to version 6.2\n\nThe perf performance analysis tool has been rebased to version 6.2. Apart from numerous minor bug fixes and updates, the perf list command now displays Performance Monitor Unit (PMU) events that contain human-friendly names and descriptions. In addition, this update adds support for the following processors:\n\nIntel 13th generation of Core processors (Intel Raptor Lake-S)\n\nIntel 14th generation of processors (Intel Meteor Lake)\n\nIntel 5th generation Xeon server processors (Intel Emerald Rapids)\n\nBugzilla:2177180\n\nThe Intel® QAT kernel driver rebased to upstream version 6.2\n\nThe Intel® Quick Assist Technology (QAT) has been rebased to upstream version 6.2. The Intel® QAT includes accelerators optimized for symmetric and asymmetric cryptography, compression performance, and other CPU intensive tasks.\n\nThe rebase includes many bug fixes and enhancements. The most notable enhancement is the support available for following hardware accelerator devices for QAT GEN4:\n\nIntel Quick Assist Technology 401xx devices\n\nIntel Quick Assist Technology 402xx devices\n\nBugzilla:2144528\n\nvTPM functionality is available for Linux containers\n\nThis enhancement introduces virtual Trusted Platform Module (vTPM) for Linux containers and other virtual environments. vTPM is a virtualized version of TPM that provides a dedicated TPM instance to use for a secure running environment. With vTPM proxy drivers, programs interact with an emulated TPM the same way as they interact with physical TPMs.\n\nAs a result, each virtual machine can now have a dedicated vTPM instance that is isolated and encrypted.\n\nBugzilla:2210263\n\ncrash rebased to version 8.0.3\n\ncrash is an interactive utility to analyze a running system and a core dump file created by kdump in case of a kernel crash. The crash utility has been rebased to version 8.0.3 that includes many bug fixes and enhancements. The most notable enhancement is the added IPv6 support.\n\nFor network interfaces that support IPv6, crash prints IPv6 addresses with the net or net -s command.\n\nThe net command displays the list of network devices, names, and the IP address.\n\nThe net -s command displays the following information:\n\nThe open network socket and sock addresses\n\nThe family and the type of sockets and sock addresses\n\nThe source and destination address and ports for INET and INET6 families\n\nBugzilla:2170283\n\nLVM thin-provisioned storage volumes supported as the vmcore dump target\n\nThe kdump mechanism now supports thin-provisioned logical volumes as the vmcore target. To configure LVM thin provisioning, complete the following steps:\n\nCreate an LVM volume group.\n\nvgcreate vg00 /dev/sdb\n\nCreate an LVM thin pool of 10 MB available space.\n\nlvcreate -L 10M -T vg00/thinpool\n\nCreate an LVM thin volume with 300 MB of the file system space.\n\nlvcreate -V 300M -T vg00/thinpool -n thinvol mkfs.ext4 /dev/vg00/thinvol\n\nConfigure the LVM thin pool threshold to automatically extend the space.\n\ncat /etc/lvm/lvm.conf activation { thin_pool_autoextend_threshold = 70 thin_pool_autoextend_percent = 20 monitoring = 1 }\n\nEnable the LVM thin pool monitoring service for the first kernel.\n\nsystemctl enable lvm2-monitor.service systemctl start lvm2-monitor.service\n\nAppend the following lines to the kdump.conf file to set the LVM thin volume as the kdump target.\n\next4 /dev/vg00/thinvol path /\n\nStart the kdump service.\n\nkdumpctl restart\n\nVerify the configuration by triggering a kernel panic and check if the vmcore is saved to /dev/vg00/thinvol.\n\nAs a result, with this enhancement, the kdump mechanism now extends capability to save the vmcore dump files on thin-provisioned storage volumes.\n\nBugzilla:2083475\n\nmakedumpfile rebased to upstream version 1.7.3\n\nThe makedumpfile tool, which makes the crash dump file small by compressing pages or excluding memory pages that are not required, has been rebased to upstream version 1.7.3. The rebase includes many bug fixes and enhancements.\n\nThe most notable change is the added 5-level paging mode for standalone dump (sadump) mechanism on AMD and Intel 64-bit architecture. The 5-level paging mode extends the processor’s linear address width to allow applications access larger amounts of memory. 5-level paging extends the size of virtual addresses from 48 to 57 bits and the physical addresses from 46 to 52 bits.\n\nBugzilla:2173815\n\nRed Hat Enterprise Linux supports ARM’s SystemReady ES and IR tier\n\nRed Hat Enterprise Linux now supports ARM’s SystemReady ES and IR, while previously only the SR tier was supported. In RHEL 9.3, the NVIDIA Orin, NXP i.MX 8M, and NXP i.MX 8M Mini modules have been enabled and are candidates for the RHEL hardware certification. Hardware partners are able to submit certifications by enrolling in the Red Hat hardware certification journey. Customers can use the supported hardware listed in the catalog for an improved experience in production.\n\nBugzilla:2195986\n\nRHEL on ARM now supports Bluetooth\n\nWith this enhancement, you can configure a bluetooth device by using the bluetoothctl tool on the command-line interface.\n\nBugzilla:2187856\n\nRHEL on ARM now fully supports USB-attached cameras in RHEL 9.3\n\nThis enhancement enables the CONFIG_MEDIA_SUPPORT kernel configuration for RHEL on AMD and Intel 64-bit architectures platforms. With that, you can now use USB cameras on AMD and Intel 64-bit architectures systems.\n\nBugzilla:2192722\n\nbpf rebased to version 6.3\n\nThe Berkeley Packet Filter (BPF) facility has been rebased to Linux kernel version 6.3. Notable changes and enhancements include:\n\nBPF trampoline is now available on the 64-bit IBM Z architecture.\n\nA new map type - BPF_MAP_TYPE_USER_RINGBUF - and related helpers have been defined for the communication between the user space and kernel over a BPF-specific ring buffer.\n\nBPF now provides new complex data structures: linked list and rbtree.\n\nBPF trampoline that traces programs now supports struct arguments.\n\nBPF now provides a way to export XDP features supported by a NIC.\n\nHardware metadata are now exposed to XDP programs by using the BPF kernel functions (kfuncs) with initial support for RX hash and timestamp metadata.\n\nBPF now provides a helper that sets source and destination NAT addresses and ports in new conntrack module entries in BPF programs.\n\nBPF can now write directly to the nf_conn:mark connection mark of the netfilter packet filtering framework.\n\nBugzilla:2178930\n\n4.9. Boot loader\n\nNew default behavior of grub2-mkconfig with BLS\n\nIn the Boot Loader Specification (BLS) framework, GRUB generates the boot menu dynamically from BLS snippets at boot, and it is not predefined in the grub.cfg file.\n\nPreviously, the grub2-mkconfig command generated a new grub.cfg file and always overwrote the command-line arguments in all BLS snippets with the value of the GRUB_CMDLINE_LINUX variable found in the /etc/default/grub file.\n\nWith this release, the grub2-mkconfig command no longer overwrites the kernel command line in BLS snippets with GRUB_CMDLINE_LINUX by default. Each kernel in the boot loader menu takes its kernel command line from its BLS snippet. This new default behavior is caused by the GRUB_ENABLE_BLSCFG=true option.\n\nTo regenerate grub.cfg so that kernels ignore BLS snippets and take their command line from GRUB_CMDLINE_LINUX instead, set the GRUB_ENABLE_BLSCFG=false option.\n\nTo update the kernel command line in BLS snippets according to GRUB_CMDLINE_LINUX, add the --update-bls-cmdline option:\n\n# grub2-mkconfig -o /path/to/grub.cfg --update-bls-cmdline\n\nAlso note that you can make changes to BLS snippets for individual kernels using grubby:\n\n# grubby --update-kernel /path/to/kernel --args \"new args\"\n\nJira:RHELDOCS-16752\n\n4.10. File systems and storage\n\nNFS server now implements courteous server code for nfsd\n\nThis update introduces the implementation of courteous server code for nfsd in the RHEL kernel NFS server. With this new feature, the NFS server avoids revoking leases for clients that have lost contact with the server for an extended period, provided that there is no conflicting access while the client is out of contact.\n\nBugzilla:2180124\n\nDAX mount option and reflink are now compatible\n\nWith this update, reflinked files are now generally compatible with DAX mode. The file system DAX mount option -o dax=always is compatible with reflink-enabled file systems. Files that were reflinked can be set to DAX mode using inode flags. For more information see the xfs(5) man page.\n\nBugzilla:2192730\n\nNew encryption types for the RPCSEC GSS Kerberos V5\n\nThe RPCSEC GSS Kerberos V5 mechanism now supports encryption types defined in RFC 6803 (Camellia Encryption for Kerberos 5) and RFC 8009 (AES Encryption with HMAC-SHA2 for Kerberos 5).\n\nThe following encryption types have been added:\n\ncamellia128-cts-cmac\n\ncamellia256-cts-cmac\n\naes128-cts-hmac-sha256-128\n\naes256-cts-hmac-sha384-192\n\nThis allows NFS clients and NFS servers to use stronger encryption types when negotiating GSS contexts.\n\nBugzilla:2178741\n\nfuse3 now allows invalidating a directory entry without triggering umount\n\nWith this update, a new mechanism has been added to fuse3 package, that allows invalidating a directory entry without automatically triggering the umount of any mounts that exists on the entry.\n\nBugzilla:2188182\n\nStratis storage manager is now available\n\nStratis is a local storage manager. It provides managed file systems on top of pools of storage with additional features to the user:\n\nManage snapshots and thin provisioning\n\nAutomatically grow file system sizes as needed\n\nMaintain file systems\n\nPool Level Encryption\n\nTMP2 and NBDE Support\n\nTo administer Stratis storage, use the stratis utility, which communicates with the stratisd background service.\n\nFor more information, see the Stratis documentation: Setting up Stratis file systems.\n\nBugzilla:2041558\n\nImprovements to GFS2 file system configuration and operation\n\nThe following updates have been implemented for GFS2 file systems:\n\nThe mkfs.gfs2 command now supports the new -U option, which makes it possible to specify the file system UUID for the file system you create. If you omit this option, the file system’s UUID is generated randomly.\n\nThe gfs2_jadd command creates journals at a much faster speed than in previous releases.\n\nThe GFS2 man pages have been improved.\n\nBugzilla:2170017\n\ndmpd rebased to version 1.0.2\n\nThe dmpd package has been upgraded to version 1.0.2. Notable changes include:\n\nRewriting the tools in the Rust language for memory safety and for using multiple threads to boost performance.\n\nImproving the thin_check and cache_check tools to save the time of LVM pool activation along with the system startup. The required execution time for these tools is now improved by more than ten times as compared to the previous version.\n\nUpdating thin_dump and thin_restore tools to avoid losing sharing of the metadata btrees for snapshots. Now the restored metadata does not require more space.\n\nAdding new thin_metadata_pack and thin_metadata_unpack tools to compress thin metadata, typically to a tenth of the size. This is better than the generic compressors. With this tool, it is easier to pass damaged metadata around for inspection.\n\nBugzilla:2175198\n\nNew per-device counter is added for SCSI devices\n\nA new per-device counter, iotmo_cnt, is now added for the I/O timeouts in the SCSI updates. In addition to the iorequest_cnt count of I/O requests, the iodone_cnt I/O completions, and the ioerr_cnt I/O errors, the number of request timeouts can be seen. For example:\n\n/sys/devices/pci0000:16/0000:16:02.0/0000:17:00.0/host2/target2:2:0/2:2:0:0/iorequest_cnt /sys/devices/pci0000:16/0000:16:02.0/0000:17:00.0/host2/target2:2:0/2:2:0:0/iodone_cnt /sys/devices/pci0000:16/0000:16:02.0/0000:17:00.0/host2/target2:2:0/2:2:0:0/iotmo_cnt /sys/devices/pci0000:16/0000:16:02.0/0000:17:00.0/host2/target2:2:0/2:2:0:0/ioerr_cnt\n\nBugzilla:2171093\n\nmpathcleanup flushes the multipath devices in device-mapper-multipath\n\nThe mpathcleanup tool works on SCSI-based multipath devices and removes the multipath device along with the SCSI path devices. Some users need to remove multipath devices and their path devices regularly. Previously, there was no tool available to remove multipath devices and a user-defined script was required for this operation.\n\nWith this new tool, users can now easily remove multipath devices and their underlying storage, and there is no need to create any script for this operation.\n\nJira:RHEL-782\n\nnvme-cli rebased to version 2.4\n\nThe nvme-cli package has been upgraded to version 2.4, which provides multiple bug fixes and enhancements. Notable changes include:\n\nSupports TLS over TCP.\n\nFixes incorrect ordering of the systemd auto-connect services to mount file systems using the /etc/fstab file.\n\nFixes printing of the u32 values.\n\nValidates storage tag size correctly.\n\nSupports the nvme effects-log command for fabrics controllers.\n\nBugzilla:2159929\n\n4.11. High availability and clusters\n\nSupport for failover of LVM volume groups with missing physical volumes\n\nThe LVM-activate resource agent now supports two new options that allow volume group failover if the volume group is missing physical volumes:\n\nThe majoritypvs option allows the system ID to be changed on a volume group when a volume group is missing physical volumes, provided that a majority of physical volumes are present.\n\nThe degraded_activation option allows RAID logical volumes in a volume group to be activated when legs are missing, provided that sufficient devices are available for RAID to provide all the data in the logical volume.\n\nBugzilla:2174911\n\nIPaddr2 and IPsrcaddr cluster resource agents now support policy-based routing\n\nThe IPaddr2 and IPsrcaddr cluster resource agents now support policy-based routing,which enables you to configure complex routing scenarios. Policy-based routing requires that you configure the resource agent’s table parameter.\n\nBugzilla:2142518\n\nThe Filesystem resource agent now supports the EFS file system type\n\nThe ocf:heartbeat:Filesystem cluster resource agent now supports the Amazon Elastic File System (EFS). You can now specify fstype=efs when configuring a Filesystem resource.\n\nBugzilla:2142002\n\nNew pcs parsing requires meta keyword when specifying clone meta attributes\n\nTo ensure consistency in the pcs command format, configuring clone meta attributes with the pcs resource clone, pcs resource promotable, and pcs resource create commands without specifying the meta keyword is now deprecated.\n\nPreviously, the meta keyword was ignored in the pcs resource clone and pcs resource promotable commands. In the pcs resource create command, however, the meta attributes specified after the meta keyword when it followed the clone keyword were assigned to the resource rather than to the clone. With this updated parsing algorithm, meta attributes specified after the meta keyword when it follows the clone keyword are assigned to the clone. To maintain compatibility with existing scripts which rely on the older format, you must specify the --future command option to enable this new argument processing when creating a cloned resource with the pcs resource create command.\n\nThe following command now creates a resource with the meta attribute mv=v1 and a clone with the meta attribute mv=v2:\n\npcs resource create dummy1 ocf:pacemaker:Dummy meta m1=v1 clone meta m2=v2 --future\n\nBugzilla:2168155\n\nDisplaying the pcs commands for re-creating configured resource constraints\n\nYou can now display the pcs constraint commands that can be used to re-create configured resource constraints on a different system by using the pcs constraint command with the new --output-format=cmd option. The default output format is plain text, as in previous releases, which you can specify with the --output-format=text option. The plain text format has been changed slightly to make it consistent with the output format of other pcs commands.\n\nBugzilla:2163953\n\nRebase Pacemaker packages to version: 2.1.6\n\nThe Pacemaker packages have been upgraded to upstream version 2.1.6, which provides several enhancements and bug fixes over the previous version.\n\nThe following features have been added:\n\nPreviously, when a Pacemaker Remote connection was lost, Pacemaker would always purge its transient node attributes. This was unnecessary if the connection was quickly recoverable and the remote daemon had not restarted in the meantime. Pacemaker Remote nodes now preserve transient node attributes after a brief, recoverable connection outage.\n\nThe alert_snmp.sh.sample alert agent, which is the sample alert agent provided with Pacemaker, now supports the SNMPv3 protocol and SNMPv2. With this update, you can copy the alert_snmp.sh.sample agent without modification to use SNMPv3 with Pacemaker alerts.\n\nPacemaker alerts and alert recipients now support an enabled meta option. Setting this option to false for an alert disables the alert. Setting this option to true for an alert and false for a particular recipient disables the alert for that recipient. The default value for this option is true. You can use this option to temporarily disable an alert for any reason, such as planned maintenance.\n\nThe following bugs have been fixed:\n\nPacemaker Designated Controller elections no longer finalized until all pending actions are complete and no action results are lost.\n\nThe fence_scsi agent is now able to auto-detect shared lvmlockd devices when the devices attribute is not set.\n\nResource stickiness now properly compares against colocation scores.\n\nThe crm_resource command now allows banning or moving a bundle with only a single active replica.\n\nPreviously, promotable clone instances were assigned in numerical order, with promoted instances first. As a result, if a promoted clone instance needed to start, an unpromoted instance in some cases restarted unexpectedly, because the instance numbers changed. With this fix, roles are considered when assigning instance numbers to nodes and as a result no unnecessary restarts occur.\n\nBugzilla:2189301\n\nEnhancements to the pcs property command\n\nThe pcs property command now supports the following enhancements:\n\nThe pcs property config --output-format= option\n\nSpecify --output-format=cmd to display the pcs property set command created from the current cluster properties configuration. You can use this command to re-create configured cluster properties on a different system.\n\nSpecify --output-format=json to display the configured cluster properties in JSON format.\n\nSpecify output-format=text to display the configured cluster properties in plain text format, which is the default value for this option.\n\nThe pcs property defaults command, which replaces the deprecated pcs property --defaults option\n\nThe pcs property describe command, which describes the meaning of cluster properties\n\nBugzilla:2163914\n\n4.12. Dynamic programming languages, web and database servers\n\nA new environment variable in Python to control parsing of email addresses\n\nTo mitigate CVE-2023-27043, a backward incompatible change to ensure stricter parsing of email addresses was introduced in Python 3.\n\nThe update in RHSA-2024:2024 introduces a new PYTHON_EMAIL_DISABLE_STRICT_ADDR_PARSING environment variable. When you set this variable to true, the previous, less strict parsing behavior is the default for the entire system:\n\nexport PYTHON_EMAIL_DISABLE_STRICT_ADDR_PARSING=true\n\nHowever, individual calls to the affected functions can still enable stricter behavior.\n\nYou can achieve the same result by creating the /etc/python/email.cfg configuration file with the following content:\n\n[email_addr_parsing] PYTHON_EMAIL_DISABLE_STRICT_ADDR_PARSING = true\n\nFor more information, see the Knowledgebase article Mitigation of CVE-2023-27043 introducing stricter parsing of email addresses in Python.\n\nJira:RHELDOCS-17369\n\nA new nodejs:20 module stream is fully supported\n\nA new module stream, nodejs:20, previously available as a Technology Preview, is fully supported with the release of the RHEA-2023:7252 advisory. The nodejs:20 module stream now provides Node.js 20.9, which is a Long Term Support (LTS) version.\n\nNode.js 20 included in RHEL 9.3 provides numerous new features, bug fixes, security fixes, and performance improvements over Node.js 18 available since RHEL 9.1.\n\nNotable changes include:\n\nThe V8 JavaScript engine has been upgraded to version 11.3.\n\nThe npm package manager has been upgraded to version 9.8.0.\n\nNode.js introduces a new experimental Permission Model.\n\nNode.js introduces a new experimental Single Executable Application (SEA) feature.\n\nNode.js provides improvements to the Experimental ECMAScript modules (ESM) loader.\n\nThe native test runner, introduced as an experimental node:test module in Node.js 18, is now considered stable.\n\nNode.js provides various performance improvements.\n\nTo install the nodejs:20 module stream, use:\n\n# dnf module install nodejs:20\n\nIf you want to upgrade from the nodejs:18 stream, see Switching to a later stream.\n\nFor information about the length of support for the nodejs Application Streams, see Red Hat Enterprise Linux Application Streams Life Cycle.\n\nBugzilla:2186717\n\nA new filter argument to the Python tarfile extraction functions\n\nTo mitigate CVE-2007-4559, Python adds a filter argument to the tarfile extraction functions. The argument allows turning tar features off for increased safety (including blocking the CVE-2007-4559 directory traversal attack). If a filter is not specified, the 'data' filter, which is the safest but most limited, is used by default in RHEL. In addition, Python emits a warning when your application has been affected.\n\nFor more information, including instructions to hide the warning, see the Knowledgebase article Mitigation of directory traversal attack in the Python tarfile library (CVE-2007-4559).\n\nJira:RHELDOCS-16405\n\nThe HTTP::Tiny Perl module now verifies TLS certificates by default\n\nThe default value for the verify_SSL option in the HTTP::Tiny Perl module has been changed from 0 to 1 to verify TLS certificates when using HTTPS. This change fixes CVE-2023-31486 for HTTP::Tiny and CVE-2023-31484 for the CPAN Perl module.\n\nTo make support for TLS verification available, this update adds the following dependencies to the perl-HTTP-Tiny package:\n\nperl-IO-Socket-SSL\n\nperl-Mozilla-CA\n\nperl-Net-SSLeay\n\nBugzilla:2228412\n\nhttpd rebased to version 2.4.57\n\nThe Apache HTTP Server has been updated to version 2.4.57, which provides bug fixes, enhancements, and security fixes over version 2.4.53 available since RHEL 9.1.\n\nNotable enhancements include:\n\nThe rotatelogs utility provided with httpd introduces a new -T option to truncate all rotated logfiles except the initial log file.\n\nThe LDAPConnectionPoolTTL directive of the mod_ldap module now accepts negative values to enable reuse of connections of any age. Previously, a negative value was handled as an error.\n\nWorkers from the mod_proxy_hcheck module now correctly time out according to the worker timeout settings.\n\nThe hcmethod parameter of the mod_proxy_hcheck module now provides new GET11, HEAD11, and OPTIONS11 methods for HTTP/1.1 requests.\n\nBugzilla:2184403\n\nA new mod_authnz_fcgi module in httpd\n\nThe Apache HTTP Server now includes the mod_authnz_fcgi module, which enables FastCGI authorizer applications to authenticate users and authorize access to resources.\n\nThe mod_authnz_fcgi module is not loaded by default. To load this module, uncomment the following line in the /etc/httpd/conf.modules.d/00-optional.conf file:\n\nLoadModule authnz_fcgi_module modules/mod_authnz_fcgi.so\n\nBugzilla:2173295\n\nA new ssl_pass_phrase_dialog directive in nginx:1.22\n\nWith this update to the nginx:1.22 module stream, you can use the new ssl_pass_phrase_dialog directive to configure an external program that is called at nginx start for each encrypted private key.\n\nTo use the new directive, add one of the following lines to the /etc/nginx/nginx.conf file:\n\nTo call an external program for each encrypted private key file, enter:\n\nssl_pass_phrase_dialog exec:<path_to_program>;\n\nnginx calls this program with the following two arguments:\n\nThe server name specified in the server_name setting.\n\nOne of the following algorithms: RSA, DSA, EC, DH, or UNK if a cryptographic algorithm cannot be recognized.\n\nIf you want to manually enter a passphrase for each encrypted private key file, enter:\n\nssl_pass_phrase_dialog builtin;\n\nThis is the default behavior if ssl_pass_phrase_dialog is not configured.\n\nNote that the nginx service fails to start if you use this method but have at least one private key protected by a passphrase. In this case, use one of the other methods.\n\nIf you want systemd to prompt for the passphrase for each encrypted private key when you start the nginx service by using the systemctl utility, enter:\n\nssl_pass_phrase_dialog exec:/usr/libexec/nginx-ssl-pass-dialog;\n\nNote that the ssl_pass_phrase_dialog directive in nginx is similar to the SSLPassPhraseDialog directive in the Apache HTTP Server.\n\nBugzilla:2170808\n\nA new rhel9/squid container image\n\nThe rhel9/squid container image is now available in the Red Hat Container Registry. Squid is a high-performance proxy caching server for web clients, supporting FTP, gopher, and HTTP data objects. Unlike traditional caching software, Squid handles all requests in a single, non-blocking, I/O-driven process. Squid keeps metadata and especially hot objects cached in RAM, caches DNS lookups, supports non-blocking DNS lookups, and implements negative caching of failed requests.\n\nTo pull the new container image, run:\n\n# podman pull registry.redhat.io/rhel9/squid\n\nBugzilla:2178953\n\nA new module stream: redis:7\n\nRedis 7, an advanced key-value store, is now available as a new module stream, redis:7.\n\nNotable changes over Redis 6 include:\n\nServer-side scripting in the Redis Functions API\n\nFine-grained access control list (ACL) support\n\nShared publish/subscribe (pub/sub) support for clusters\n\nVarious new commands and command arguments\n\nRedis 7 introduces several backward incompatible changes, for example:\n\nRedis 7 now stores append-only files (AOF) as multiple files in a folder\n\nRedis 7 uses a new version format for Redis Database (RDB) files that is incompatible with earlier versions\n\nFor a complete list of features and incompatible changes, see the upstream release notes.\n\nTo install the redis:7 module stream, use:\n\n# dnf module install redis:7\n\nFor information about the length of support for the redis Application Streams, see Red Hat Enterprise Linux Application Streams Life Cycle.\n\nBugzilla:2129826\n\n4.14. Identity Management\n\nsamba rebased to version 4.18.6\n\nThe samba packages have been upgraded to upstream version 4.18.6, which provides bug fixes and enhancements over the previous version. The most notable changes:\n\nSecurity improvements in previous releases impacted the performance of the Server Message Block (SMB) server for high metadata workloads. This update improves the performance in this scenario.\n\nThe new wbinfo --change-secret-at=<domain_controller> command enforces the change of the trust account password on the specified domain controller.\n\nBy default, Samba stores access control lists (ACLs) in the security.NTACL extended attribute of files. You can now customize the attribute name with the acl_xattr:<security_acl_name> setting in the /etc/samba/smb.conf file. Note that a custom extended attribute name is not a protected location as security.NTACL. Consequently, users with local access to the server can be able to modify the custom attribute’s content and compromise the ACL.\n\nNote that the server message block version 1 (SMB1) protocol has been deprecated since Samba 4.11 and will be removed in a future release.\n\nBack up the database files before starting Samba. When the smbd, nmbd, or winbind services start, Samba automatically updates its tdb database files. Red Hat does not support downgrading tdb database files.\n\nAfter updating Samba, use the testparm utility to verify the /etc/samba/smb.conf file.\n\nBugzilla:2190415\n\nThe ipaclient role now allows configuring user subID ranges on the IdM level\n\nWith this update, the ipaclient ansible-freeipa role provides the ipaclient_subid option, using which you can configure subID ranges on the Identity Management (IdM) level. Without the new option set explicitly to true, the ipaclient role keeps the default behavior and installs the client without subID ranges configured for IdM users.\n\nPreviously, the role configured the sssd authselect profile that in turn customized the /etc/nsswitch.conf file. The subID database did not use IdM and relied only on the local files of /etc/subuid and /etc/subgid.\n\nBugzilla:2175767\n\nMultiple IdM groups and services can now be managed in a single Ansible task\n\nWith this enhancement in ansible-freeipa, you can add, modify, and delete multiple Identity Management (IdM) user groups and services by using a single Ansible task. For that, use the groups and services options of the ipagroup and ipaservice modules.\n\nUsing the groups option available in ipagroup, you can specify multiple group variables that only apply to a particular group. This group is defined by the name variable, which is the only mandatory variable for the groups option.\n\nSimilarly, using the services option available in ipaservice, you can specify multiple service variables that only apply to a particular service. This service is defined by the name variable, which is the only mandatory variable for the services option.\n\nJira:RHELDOCS-16474\n\nansible-freeipa ipaserver role now supports Random Serial Numbers\n\nWith this update, you can use the ipaserver_random_serial_numbers=true option with the ansible-freeipa ipaserver role. This way, you can generate fully random serial numbers for certificates and requests in PKI when installing an Identity Management (IdM) server using Ansible. With RSNv3, you can avoid range management in large IdM installations and prevent common collisions when reinstalling IdM.\n\nImportant\n\nRSNv3 is supported only for new IdM installations. If enabled, it is required to use RSNv3 on all PKI services.\n\nJira:RHELDOCS-16462\n\nipa rebased to version 4.10.2\n\nThe ipa package has been upgraded to version 4.10.2. Notable changes include:\n\nSearching and listing certificates in the IdM CLI and Web UI now offer better performance.\n\nFor more information, see the upstream FreeIPA release notes.\n\nBugzilla:2196426\n\nThe ipaserver_remove_on_server and ipaserver_ignore_topology_disconnect options are now available in the ipaserver role\n\nIf removing a replica from an Identity Management (IdM) topology by using the remove_server_from_domain option of the ipaserver ansible-freeipa role leads to a disconnected topology, you must now specify which part of the domain you want to preserve. Specifically, you must do the following:\n\nSpecify the ipaserver_remove_on_server value to identify which part of the topology you want to preserve.\n\nSet ipaserver_ignore_topology_disconnect to True.\n\nNote that if removing a replica from IdM by using the remove_server_from_domain option preserves a connected topology, neither of these options is required.\n\nBugzilla:2127903\n\nIdM now supports the min_lifetime parameter\n\nWith this enhancement, the min_lifetime parameter has been added to the /etc/gssproxy/*.conf file. The min_lifetime parameter triggers the renewal of a service ticket in case its remaining lifetime is lower than this value.\n\nBy default its value is 15 seconds. For network volume clients such as NFS, to reduce the risk of losing access in case the KDC is momentarily unavailable, set this value to 60 seconds.\n\nBugzilla:2181465\n\nYou can now manage IdM certificates using the ipacert Ansible module\n\nYou can now use the ansible-freeipa ipacert module to request or retrieve SSL certificates for Identity Management (IdM) users, hosts and services. The users, hosts and services can then use these certificates to authenticate to IdM. You can also revoke the certificates, and restore certificates that have been put on hold.\n\nBugzilla:2127907\n\nThe optional_pac_tkt_chksum option helps preserve interoperability between different versions of krb5\n\nYou can now use the optional_pac_tkt_chksum option to preserve the interoperability between RHEL Kerberos Distribution Center (KDC) servers running different versions of the krb5 package. Specifically, you can change their behavior regarding Privilege Attribute Certificate (PAC) ticket signature verification. If you set the optional_pac_tkt_chksum string attribute to true for the Kerberos principal expected to sign a ticket, then the KDC does not reject service for user (S4U) requests containing a ticket that lacks the PAC ticket signature. The principal to sign the ticket is the ticket-granting service (TGS) one or a cross-realm TGS one, depending on the realm of the ticket’s target service.\n\nSince the krb5-1.20 release, MIT Kerberos KDCs have required the presence of ticket signatures in PACs based on the encrypted part of Kerberos tickets so that they could process S4U requests successfully. Previously, this was a problem in gradual upgrade scenarios where certain KDCs used krb5-1.19 or older, while others used krb5-1.20 or newer. KDCs using the newer versions of krb5 for S4U requests rejected service tickets that were provided by KDCs using the older versions of krb5 if a service used them for S4U requests.\n\nFor more information about how this feature is used in Identity Management (IdM), see this pull request.\n\nBugzilla:2178298\n\nIdM now supports resource-based constrained delegation\n\nWith this update, IdM now supports resource-based constrained delegation (RBCD). RBCD allows a granular control of delegation on a resource level and access can be set by the owner of the service to which credentials are delegated.\n\nRBCD can be useful, for example, in an integration between IdM and Active Directory (AD), because AD enforces the use of RBCD when both target and proxy services belong to different forests.\n\nImportant\n\nCurrently, only services in the IdM domain can be configured with RBCD rules. If the target service is part of an AD domain, the permission can only be granted on the AD side. As AD domain controllers cannot resolve IdM service information to create the rule, this is not currently supported.\n\nFor more information on delegation scenarios, see the FreeIPA design page.\n\nBugzilla:2165880\n\nRHEL 9.3 provides 389-ds-base 2.3.4\n\nRHEL 9.3 is distributed with the 389-ds-base package version 2.3.4. Notable bug fixes and enhancements over version 2.3.4 include:\n\nBugzilla:2188627\n\nDirectory Server can now close a client connection if a bind operation fails\n\nPreviously, when a bind operation failed, some applications that ignore the bind return code could load Director Server with further requests.\n\nWith the new nsslapd-close-on-failed-bind configuration attribute under the cn=config entry, the server can close a client connection when the bind operation fails. As a result, the server load can be reduced.\n\nBugzilla:1987471\n\nAutomembership plug-in improvements. It no longer cleans up groups by default\n\nPreviously, the automember rebuild task went through all the automember rules and removed all the memberships, then the task rebuilt the memberships from scratch. Thus, the rebuild task was expensive, especially if other be_txn plugins are enabled.\n\nWith this update, the Automembership plug-in has the following improvements:\n\nOnly one rebuilt task is allowed at a time.\n\nThe Automembership plug-in now does not clean up previous members by default. Use the new CLI option --cleanup to intentionally clean up memberships before rebuilding from scratch:\n\n# dsconf slapd-instance_name plugins automember fixup -f objectclass=posixaccount -s sub --cleanup \"ou=people,dc=example,dc=com\"\n\nImproved logging to show fixup progress.\n\nBugzilla:2149025\n\nNew passwordAdminSkipInfoUpdate: on/off configuration option is now available\n\nYou can add a new passwordAdminSkipInfoUpdate: on/off setting under the cn=config entry to provide a fine grained control over password updates performed by password administrators. When you enable this setting, password updates do not update certain attributes, for example, passwordHistory,passwordExpirationTime,passwordRetryCount, pwdReset, and passwordExpWarned.\n\nBugzilla:2166332\n\nNew slapi_memberof() plug-in function is now available for Directory Server plug-ins and client applications\n\nThe new slapi_memberof() function retrieves distinguished names (DNs) of groups to which the given entry belongs directly or indirectly. Previously, MemberOf, Referential Integrity, and ACL plug-ins implemented their own mechanism to retrieve such groups. With this update, you can use the slapi_memberof() function that introduces a unified mechanism to return group DNs.\n\nBugzilla:2189946\n\nDirectory Server now replaces the virtual attribute nsRole with an indexed attribute for managed and filtered roles\n\nPreviously, LDAP searches that contained the virtual attribute nsRole in the filter were time consuming because that attribute cannot be indexed. With this update, when you perform the ldapsearch with virtual attribute nsRole in the filter, Directory Server replaces the nsRole attribute the following way:\n\nFor managed roles, the nsRole attribute is replaced with the nsRoleDN attribute.\n\nFor filtered roles, the nsRole attribute is replaced with the nsRoleFilter attribute.\n\nAs a result, response time for search with the nsRole attribute improves because the search becomes indexed.\n\nNote that this update does not apply to nested roles.\n\nBugzilla:2189954\n\nNew nsslapd-numlisteners configuration option is now available\n\nThe nsslapd-numlisteners attribute specifies the number of listener threads Directory Server can use to monitor established connections. You can improve the response times when the server experiences a large number of client connection by increasing the attribute value.\n\nBugzilla:1975930\n\nIdM supports the option to control the encryption type used to sign the PAC\n\nBy default, the Kerberos Key Distribution Center (KDC) generates an AES HMAC-SHA2 signature for the Privilege Attribute Certificate (PAC). However, this encryption type is not supported by Active Directory (AD). As a result, AD cross-realm constrained delegation requests are not processed correctly.\n\nWith this enhancement, you can now control the encryption type used to sign the PAC by setting the pac_privsvr_entype attribute on the TGS principal, krbtgt/[realm]@[realm], to the required encryption type for the target realm. In IdM, this string attribute is automatically configured when an AD trust exists.\n\nWARNING: This update is about standalone MIT realms. Do not change the Kerberos Distribution Center (KDC) configuration in RHEL Identity Management.\n\nFor example, for an MIT realm and an AD realm, to ensure cross-realm ticket-granting tickets (TGT) use AD-compatible encryption types, an administrator must configure the cross-realm TGS principal as shown below on the MIT side. This results in cross-realm TGTs using the AES 256 HMAC-SHA1 encryption type and constrained delegation requests being processed correctly.\n\nkadmin.local <<EOF setstr krbtgt/AD@IPA pac_privsvr_enctype aes256-cts-hmac-sha1-96 setstr krbtgt/IPA@AD pac_privsvr_enctype aes256-cts-hmac-sha1-96 EOF\n\nBugzilla:2060421\n\nIdentity Management API is now fully supported\n\nThe Identity Management (IdM) API was available as a Technology Preview in RHEL 9.2 and as of RHEL 9.3, it is fully supported.\n\nUsers can use existing tools and scripts even if the IdM API is enhanced to enable multiple versions of API commands. These enhancements do not change the behavior of a command in an incompatible way. This has the following benefits:\n\nAdministrators can use previous or later versions of IdM on the server than on the managing client.\n\nDevelopers can use a specific version of an IdM call, even if the IdM version changes on the server.\n\nThe communication with the server is possible, regardless if one side uses, for example, a newer version that introduces new options for a feature.\n\nNOTE\n\nWhile IdM API provides a JSON-RPC interface, this type of access is not supported. Red Hat recommends accessing the API with Python instead. Using Python automates important parts such as the metadata retrieval from the server, which allows listing all available commands.\n\nBugzilla:1513934\n\n4.15. Graphics infrastructures\n\nIntel Arc A-Series graphics is now fully supported\n\nThe Intel Arc A-Series graphics (Alchemist or DG2) feature, previously available as a Technology Preview, is now fully supported. Intel Arc A-Series graphics is a GPU that enables hardware acceleration, mostly used in PC gaming.\n\nBugzilla:2101598\n\n4.16. The web console\n\nPodman health check action is now available\n\nYou can select one of the following Podman health check actions when creating a new container:\n\nNo action (default): Take no action.\n\nRestart: Restart the container.\n\nStop: Stop the container.\n\nForce stop: Force stops the container, it does not wait for the container to exit.\n\nJira:RHELDOCS-16247\n\nStratis is now available in the RHEL web console\n\nWith this update, the Red Hat Enterprise Linux web console provides the ability to manage Stratis storage.\n\nTo learn more about Stratis, see Setting up Stratis file systems using the web console.\n\nJira:RHELPLAN-122345\n\n4.17. Red Hat Enterprise Linux system roles\n\nNew RHEL system role for managing systemd units\n\nThe rhel-system-role package now contains the systemd RHEL system role. You can use this role to deploy unit files and manage systemd units on multiple systems. You can automate systemd functionality by providing systemd unit files and templates, and by specifying the state of those units, such as started, stopped, masked and other.\n\nBugzilla:2224384\n\nNew option in the ssh role to disable configuration backups\n\nYou can now prevent old configuration files from being backed up before they are overwritten by setting the new ssh_backup option to false. Previously, backup configuration files were created automatically, which might be unnecessary. The default value of the ssh_backup option is true, which preserves the original behavior.\n\nBugzilla:2216753\n\nkeylime_server RHEL system role\n\nWith the new keylime_server RHEL system role, you can use Ansible Playbooks to configure the verifier and registrar Keylime components on RHEL 9 systems. Keylime is a remote machine attestation tool that uses the trusted platform module (TPM) technology.\n\nBugzilla:2224385\n\nSupport for new ha_cluster system role features\n\nThe ha_cluster system role now supports the following features:\n\nConfiguration of resource and resource operation defaults, including multiple sets of defaults with rules.\n\nLoading and blocking of SBD watchdog kernel modules. This makes installed hardware watchdogs available to the cluster.\n\nAssignment of distinct passwords to the cluster hosts and the quorum device. This allows you to configure a deployment where the same quorum hosts are joined to multiple, separate clusters, and the passwords of the hacluster user on these clusters are different.\n\nFor information about the parameters you configure to implement these features, see Configuring a high-availability cluster by using the ha_cluster RHEL system role.\n\nBugzilla:2185065, Bugzilla:2185067, Bugzilla:2216481\n\nstorage system role supports configuring the stripe size for RAID LVM volumes\n\nWith this update, you can now specify a custom stripe size when creating RAID LVM devices. For better performance, use the custom stripe size for SAP HANA. The recommended stripe size for RAID LVM volumes is 64 KB.\n\nBugzilla:2181656\n\nThe network RHEL system role supports the auto-dns option to control automatic DNS record updates\n\nThis enhancement provides support for defined name servers and search domains. You can now use only the name servers and search domains specified in dns and dns_search properties while disabling automatically configured name servers and search domains such as dns record from DHCP. With this enhancement, you can disable automatically auto dns record by changing the auto-dns settings.\n\nBugzilla:2211194\n\nThe network RHEL system role supports the no-aaaa DNS option\n\nYou can now use the no-aaaa option to configure DNS settings on managed nodes. Previously, there was no option to suppress AAAA queries generated by the stub resolver, including AAAA lookups triggered by NSS-based interfaces such as getaddrinfo; only DNS lookups were affected. With this enhancement, you can now suppress AAAA queries generated by the stub resolver.\n\nBugzilla:2218592\n\nThe ad_integration RHEL system role can now rejoin an AD domain\n\nWith this update, you can now use the ad_integration RHEL system role to rejoin an Active Directory (AD) domain. To do this, set the ad_integration_force_rejoin variable to true. If the realm_list output shows that host is already in an AD domain, it will leave the existing domain before rejoining it.\n\nBugzilla:2211723\n\nThe certificate RHEL system role now allows changing certificate file mode when using certmonger\n\nPreviously, certificates created by the certificate RHEL system role with the certmonger provider used a default file mode. However, in some use-cases you might require a more restrictive mode. With this update, you can now set a different certificate and a key file mode using the mode parameter.\n\nBugzilla:2218204\n\nThe postgresql RHEL system role is now available\n\nThe new postgresql RHEL system role installs, configures, manages, and starts the PostgreSQL server. The role also optimizes the database server settings to improve performance.\n\nThe role supports the currently released and supported versions of PostgreSQL on RHEL 8 and RHEL 9 managed nodes.\n\nFor more information, see Installing and configuring PostgreSQL by using the postgresql RHEL system role.\n\nBugzilla:2151373\n\npodman RHEL system role now supports Quadlets, health checks, and secrets\n\nStarting with Podman 4.6, you can use the podman_quadlet_specs variable in the podman RHEL system role. You can define a Quadlet by specifying a unit file, or in the inventory by a name, a type of unit, and a specification. Types of a unit can be the following: container, kube, network, and volume. Note that Quadlets work only with root containers on RHEL 8. Quadlets work with rootless containers on RHEL 9.\n\nThe health checks are supported only for Quadlet Container types. In the [Container] section, specify the HealthCmd field to define the health check command and HealthOnFailure field to define the action when a container is unhealthy. Possible options are none, kill, restart, and stop.\n\nYou can use the podman_secrets variable to manage secrets. For details, see upstream documentation.\n\nJira:RHELPLAN-154441\n\nImproved performance of the selinux system role with restorecon -T 0\n\nThe selinux system role now uses the -T 0 option with the restorecon command in all applicable cases. This improves the performance of tasks that restore default SELinux security contexts on files.\n\nBugzilla:2179460\n\nThe rhc system role now supports setting a proxy server type\n\nThe newly introduced attribute scheme under the rhc_proxy parameter enables you to configure the proxy server type by using the rhc system role. You can set two values: http, the default and https.\n\nBugzilla:2211748\n\nfirewall RHEL system role supports variables related to ipsets\n\nWith this update of the firewall RHEL system role, you can define, modify, and delete ipsets. Also, you can add and remove those ipsets from firewall zones. Alternatively, you can use those ipsets when defining firewall rich rules.\n\nYou can manage ipsets with the firewall RHEL system role using the following variables:\n\nipset\n\nipset_type\n\nipset_entries\n\nshort\n\ndescription\n\nstate: present or state: absent\n\npermanent: true\n\nThe following are some notable benefits of this enhancement:\n\nYou can reduce the complexity of the rich rules that define rules for many IP addresses.\n\nYou can add or remove IP addresses from sets as needed without modifying multiple rules.\n\nFor more details, see resources in the /usr/share/doc/rhel-system-roles/firewall/ directory.\n\nBugzilla:2229802\n\nRHEL system roles now have new volume options for mount point customization\n\nWith this update, you can now specify mount_user, mount_group, and mount_permissions parameters for your mount directory.\n\nBugzilla:2181657\n\nThe firewall RHEL system role has an option to disable conflicting services, and it no longer fails if firewalld is masked\n\nPreviously, the firewall system role failed when the firewalld service was masked on the role run or in the presence of conflicting services. This update brings two notable enhancements:\n\nThe linux-system-roles.firewall role always attempts to install, unmask, and enable the firewalld service on role run. You can now add a new variable firewall_disable_conflicting_services to your playbook to disable known conflicting services, for example, iptables.service, nftables.service, and ufw.service. The firewall_disable_conflicting_services variable is set to false by default. To disable conflicting services, set the variable to true.\n\nBugzilla:2222761\n\nResetting the firewall RHEL system role configuration now requires minimal downtime\n\nPreviously, when you reset the firewall role configuration by using the previous: replaced variable, the firewalld service restarted. Restarting adds downtime and prolongs the period of an open connection in which firewalld does not block traffic from active connections. With this enhancement, the firewalld service completes the configuration reset by reloading instead of restarting. Reloading minimizes the downtime and reduces the opportunity to bypass firewall rules. As a result, using the previous: replaced variable to reset the firewall role configuration now requires minimal downtime.\n\nBugzilla:2223764\n\n4.18. Virtualization\n\nsevctl is now fully compatible with AMD EPYC Rome and Milan\n\nWith this update, the sevctl utility correctly recognizes the latest AMD EPYC cores, including the AMD EPYC Rome and AMD EPYC Milan series. As a result, you can use sevctl to configure the features of AMD Secure Encrypted Virtualization (SEV) that are available on these CPUs.\n\nNote, however, that advanced SEV functions, such as SEV-ES and SEV-SNP are only provided as Technology Previews in RHEL 9, and therefore unsupported.\n\nBugzilla:2104857\n\nvirtio-vga and virtio-gpu devices now support blob resources\n\nIt is now possible for virtio-vga and virtio-gpu devices to use blob memory resources, which improves their performance in certain scenarios. To attach a blob resource to a virtio graphics device, add a blob=\"on\" option to the corresponding <video> section in the virtual machine’s XML configuration. For example:\n\n<video> <model type=\"virtio\" heads=\"1\" primary=\"yes\" blob=\"on\"/> <address type=\"pci\" domain=\"0x0000\" bus=\"0x00\" slot=\"0x01\" function=\"0x0\"/> </video>\n\nNote, however, that this feature currently does not work on IBM Z hosts.\n\nBugzilla:2032406\n\nVirtualization support for 4th Generation Intel Xeon Scalable processors\n\nWith this update, virtualization on RHEL 9 adds support for the 4th Generation Intel Xeon Scalable processors, formerly known as Sapphire Rapids. As a result, virtual machines hosted on RHEL 9 can now use the SapphireRapids CPU model and utilise new features that the processors provide.\n\nBugzilla:1880531\n\nImproved memory reclaiming for Secure Execution on IBM Z\n\nWhen using a virtual machine (VM) with IBM Secure Execution on IBM Z, you can now set up enhanced memory reclaiming for the VM. If the VM is using 32 GiB or more RAM, this setting improves the performance of rebooting or stopping the VM.\n\nTo set up enhanced memory reclaiming in a VM, add the <async-teardown enabled='yes'/> line to the <features></features> section in its XML configuration.\n\nBugzilla:2168499\n\nNew virtualization features in the RHEL web console\n\nWith this update, the RHEL web console includes new features in the Virtual Machines page. You can now:\n\nSelect the Create and edit button for a virtual machine (VM) based on a cloud image, which allows you to edit all of the VM properties before the VM is installed.\n\nCreate a raw storage volume during virtual machine creation.\n\nSet up a virtual socket (vsock) to enable communication between the host and the VM over a socket.\n\nNote that a virtual socket requires vsock-aware software, such as socat, to enable the communication.\n\nJira:RHELDOCS-16487\n\n4.19. RHEL in cloud environments\n\ncloud-init supports NetworkManager keyfiles\n\nWith this update, the cloud-init utility can use a NetworkManager (NM) keyfile to configure the network of the created cloud instance.\n\nNote that by default, cloud-init still uses the sysconfig method for network setup. To configure cloud-init to use a NM keyfile instead, edit the /etc/cloud/cloud.cfg and set network-manager as the primary network renderer:\n\n# cat /etc/cloud/cloud.cfg network: renderers: ['network-manager', 'eni', 'netplan', 'sysconfig', 'networkd']\n\nBugzilla:2118235\n\ncloud-init now uses VMware datasources by default on ESXi\n\nWhen creating RHEL virtual machines (VMs) on a host that uses the VMware ESXi hypervisor, such as the VMware vSphere cloud platform. This improves the performance and stability of creating an ESXi instance of RHEL by using cloud-init. Note, however, that ESXi is still compatible with Open Virtualization Format (OVF) datasources, and you can use an OVF datasource if a VMware one is not available.\n\nBugzilla:2172341\n\n4.20. Supportability\n\nsos rebased to version 4.6\n\nThe sos utility, for collecting configuration, diagnostic, and troubleshooting data, has been rebased to version 4.6. This update provides the following enhancements:\n\nsos reports now include the contents of both /boot/grub2/custom.cfg and /boot/grub2/user.cfg files that might contain critical information for troubleshooting boot issues. (BZ#2213951)\n\nThe sos plugin for OVN-Kubernetes collects additional logs for the interconnect environment. With this update, sos also collects logs from the ovnkube-controller container when both ovnkube-node and ovnkube-controller containers are merged into one.\n\nIn addition, notable bug fixes include:\n\nsos now correctly gathers cgroup data in the OpenShift Container Platform 4 environment (BZ#2186361).\n\nWhile collecting sos reports with the sudo plugin enabled, sos now removes the bindpw option properly. (BZ#2143272)\n\nThe subscription_manager plugin no longer collects proxy usernames and passwords from the /var/lib/rhsm/ path. (BZ#2177282)\n\nThe virsh plugin no longer collects the SPICE remote-display passwords in virt-manager logs, which prevents sos from disclosing passwords in its reports. (BZ#2184062)\n\nsos now masks usernames and passwords previously displayed in the /var/lib/iscsi/nodes/<IQN>/<PortalIP>/default file.\n\nImportant\n\nThe generated archive might contain data considered sensitive. Thus, you should always review the content before passing it to any third party.\n\n(BZ#2187859)\n\nsos completes the tailed log collection even when the size of the log file is exceeded and when a plugin times out. (BZ#2203141)\n\nWhen entering the sos collect command on a Pacemaker cluster node, sos collects an sos report from the same cluster node. (BZ#2186460)\n\nWhen collecting data from a host in the OpenShift Container Platform 4 environment, sos now uses the sysroot path, which ensures that only the correct data are assembled. (BZ#2075720)\n\nThe sos report --clean command obfuscates all MAC addresses as intended. (BZ#2207562)\n\nDisabling the hpssm plugin no longer raises exceptions. (BZ#2216608)\n\nThe sos clean command follows permissions of sanitized files. (BZ#2218279)\n\nFor details on each release of sos, see upstream release notes.\n\nJira:RHELPLAN-156196\n\n4.21. Containers\n\nPodman supports pulling and pushing images compressed with zstd\n\nYou can pull and push images compressed with the zstd format. The zstd compression is more efficient and faster than gzip. It can reduce the amount of network traffic and storage involved in pulling and pushing the image.\n\nJira:RHELPLAN-154314\n\nQuadlet in Podman is now available\n\nBeginning with Podman v4.6, you can use Quadlet to automatically generate a systemd service file from a container description. The Quadlets might be easier to use than the podman generate systemd command because the description focuses on the relevant container details and without the technical complexity of running containers under systemd.\n\nFor more details, see the Quadlet upstream documentation and the Make systemd better for Podman with Quadlet article.\n\nJira:RHELPLAN-154432\n\nThe Container Tools packages have been updated\n\nThe updated Container Tools RPM meta-package, which contain the Podman, Buildah, Skopeo, crun, and runc tools, are now available. This update applies a series of bug fixes and enhancements over the previous version.\n\nNotable changes in Podman v4.6 include:\n\nThe podman kube play command now supports the --configmap=<path> option to provide Kubernetes YAML file with environment variables used within the containers of the pod.\n\nThe podman kube play command now supports multiple Kubernetes YAML files for the --configmap option.\n\nThe podman kube play command now supports containerPort names and port numbers within liveness probes.\n\nThe podman kube play command now adds the ctrName as an alias to the pod network.\n\nThe podman kube play and podman kube generate commands now support SELinux filetype labels and ulimit annotations.\n\nA new command, podman secret exists, has been added, which verifies if a secret with the given name exists.\n\nThe podman create, podman run, podman pod create, and podman pod clone commands now support a new option, --shm-size-systemd, which allows limiting tmpfs sizes for systemd-specific mounts.\n\nThe podman create and podman run commands now support a new option, --security-opt label=nested, which allows SELinux labeling within a confined container.\n\nPodman now supports auto updates for containers running inside a pod.\n\nPodman can now use an SQLite database as a backend for increased stability. The default remains the BoltDB database. You can select the database by setting the database_backend field in the containers.conf file.\n\nPodman now supports Quadlets to automatically generate a systemd service file from the container description. The description focuses on the relevant container details and hides the technical complexity of running containers under systemd.\n\nFor further information about notable changes, see upstream release notes.\n\nJira:RHELPLAN-154438\n\nPodman now supports a Podmansh login shell\n\nBeginning with Podman v4.6, you can use the Podmansh login shell to manage user access and control. Configure your settings to use the /usr/bin/podmansh command as a login shell instead of a standard shell command, for example, /usr/bin/bash. When a user logs into a system setup, the podmansh command runs the user’s session into a Podman container named podmansh. Containers into which users log in are defined using the Quadlet files, which are created in the /etc/containers/systemd/users/ directory. In these files, set the ContainerName field in the [Container] section to podmansh. The systemd automatically starts podmansh when the user session starts and continues running until all user sessions exit.\n\nFor more information, see Podman v4.6.0 Introduces Podmansh: A Revolutionary Login Shell.\n\nJira:RHELPLAN-163003\n\nClients for sigstore signatures with Fulcio and Rekor are now available\n\nWith Fulcio and Rekor servers, you can now create signatures by using short-term certificates based on an OpenID Connect (OIDC) server authentication, instead of manually managing a private key. Clients for sigstore signatures with Fulcio and Rekor, previously available as a Technology Preview, are now fully supported. This added functionality is the client side support only, and does not include either the Fulcio or Rekor server"
    }
}