{
    "id": "dbpedia_8293_3",
    "rank": 72,
    "data": {
        "url": "https://himashikarunathilake.medium.com/perl-1-5a5f4ec8c251",
        "read_more_link": "",
        "language": "en",
        "title": "by Himashi Karunathilake",
        "top_image": "https://miro.medium.com/v2/resize:fit:1200/1*ZVrGeV1tyMPcsdHHO7P-QQ.png",
        "meta_img": "https://miro.medium.com/v2/resize:fit:1200/1*ZVrGeV1tyMPcsdHHO7P-QQ.png",
        "images": [
            "https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png",
            "https://miro.medium.com/v2/resize:fill:88:88/1*NhXGSzlOjfrziA4sWNO1ew.jpeg",
            "https://miro.medium.com/v2/resize:fill:144:144/1*NhXGSzlOjfrziA4sWNO1ew.jpeg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Himashi Karunathilake",
            "himashikarunathilake.medium.com"
        ],
        "publish_date": "2023-08-09T17:06:13.556000+00:00",
        "summary": "",
        "meta_description": "Perl is a versatile and dynamic scripting language that is known for its expressive syntax and powerful text manipulation capabilities. Perl offers developers a flexible tool for a wide range of…",
        "meta_lang": "en",
        "meta_favicon": "https://miro.medium.com/v2/5d8de952517e8160e40ef9841c781cdc14a5db313057fa3c3de41c6f5b494b19",
        "meta_site_name": "Medium",
        "canonical_link": "https://himashikarunathilake.medium.com/perl-1-5a5f4ec8c251",
        "text": "Introduction\n\nPerl is a versatile and dynamic scripting language that is known for its expressive syntax and powerful text manipulation capabilities. Perl offers developers a flexible tool for a wide range of applications.\n\nFor official website for Perl provides a wealth of resources for anyone willing to learn: The Perl Programming Language — www.perl.org.\n\nIf you want to install Perl in your own PC, you can download it from its website at: Perl Download — www.perl.org.\n\nTo code in Perl, you can download any supported IDE (Visual Studio Code in this case with the Perl extension enabled: Visual Studio Code — Code Editing. Redefined) and save the file with the extension “.pl” (e.g., main.pl).\n\nThe First Program in Perl\n\nAs the first step, as always, let’s try printing the “Hello World!” statement in Perl.\n\nComments in Perl\n\nPerl does not have separate syntaxes for single line and multi-line comments. However, all comments in Perl start with a “#”.\n\n# This is a comment in Perl.\n\nShebang / Hashbang (#!)\n\nA shebang is the character sequence “#!” that appears at the very beginning of a script file. It is a special directive that is primarily used in Unix-like operating systems. When a script with a shebang is executed, the operating system uses the interpreter specified in the shebang to process and execute the script.\n\n#!/usr/bin/perl\n\nPragmas in Perl\n\nPragmas are special directives or instructions that provide additional information to the compiler or interpreter about how the code should be treated or processed. They are not a part of the core language syntax, but Pragmas can influence how the compiler or interpreter behaves during compilation or execution.\n\nuse <pragma> <arguments>;\n\nGiven below are some example Pragmas.\n\nPRAGMA USE\n\nuse strict; Enforce strict rules for variable declaration\n\nand usage.\n\nuse warnings; Enables runtime warnings that alert you to\n\npotential issues in your code.\n\nuse feature 'feature_name'; Enables specific language features introduced\n\nin newer versions of Perl.\n\nuse constant NAME => value; Define constants that are fixed values that\n\ncannot be changed.\n\nuse utf8; Allows you to use Unicode characters in your\n\nprogram.\n\n#!/usr/bin/perl\n\n# The first program in Perl.\n\n# Pragmas\n\nuse strict;\n\nuse warnings;\n\nThe Output Statement in Perl\n\nWhen coding in Perl, it is important to note that each line of code will be followed by a semicolon “;” at its end.\n\n#!/usr/bin/perl\n\n# The first program in Perl.\n\n# Pragmas\n\nuse strict;\n\nuse warnings;\n\nprint \"Hello World!\";\n\nRun the File\n\nTo run the file, open a command prompt and navigate to the file location.\n\nType the following command into the command prompt:\n\nperl main.pl (perl file_name)\n\nDeclaring Variables\n\nA variable can be used to store a value. In Perl, variables can be declared using the keyword “my”. It is important to note that variable names should start with the dollar mark “$”.\n\n#!/usr/bin/perl\n\n# The first program in Perl.\n\n# Pragmas\n\nuse strict;\n\nuse warnings;\n\n# Print a single line\n\nprint \"Hello World!\";\n\n# Print an empty line\n\nprint \"\\n\\n\";\n\n# Declare variables to store a string and a number\n\nmy $name = \"Dwight\";\n\nmy $age = 30;\n\nPrinting Variables\n\nOnce declared, Perl variables can be printed as follows:\n\n#!/usr/bin/perl\n\n# The first program in Perl.\n\n# Pragmas\n\nuse strict;\n\nuse warnings;\n\n# Print a single line\n\nprint \"Hello World!\";\n\n# Print an empty line\n\nprint \"\\n\\n\";\n\n# Declare variables to store a string and a number\n\nmy $name = \"Dwight\";\n\nmy $age = 30;\n\n# Print the variables\n\nprint \"Name of the programmer: $name\\n\";\n\nprint \"Age of the programmer: $age\\n\";\n\n“say” Function\n\nIn Perl, the say function is used to print text followed by a newline character as opposed to the print function which would require you to append a newline character “\\n” at the end of every statement."
    }
}