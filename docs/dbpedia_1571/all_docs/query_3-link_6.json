{
    "id": "dbpedia_1571_3",
    "rank": 6,
    "data": {
        "url": "https://www.tamucc.edu/engineering/research/csreu/projects.php",
        "read_more_link": "",
        "language": "en",
        "title": "Current Projects",
        "top_image": "https://www.tamucc.edu/images/icons/home-social-2.jpg",
        "meta_img": "https://www.tamucc.edu/images/icons/home-social-2.jpg",
        "images": [
            "https://www.tamucc.edu/images/shaka-logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "//www.tamucc.edu/images/icons/apple-touch-icon-57x57.png",
        "meta_site_name": "Texas A&M University-Corpus Christi",
        "canonical_link": "https://www.tamucc.edu/engineering/research/csreu/projects.php",
        "text": "1. Autonomous Searching and Tracking of Shoreline Using UAS\n\nBackground: Despite rapid technological development of UAS technology, a completely autonomous unmanned aerial system is not a reality yet, particularly for civilian or commercial uses. There are many technological hurdles to overcome before autonomous unmanned aerial systems become widespread. Even though some low-level of autonomy has been achieved for UAS, it still requires a human operator to control the flight of an UAS. There are many applications that can benefit from autonomous UAS technology. For example, running surveillance UAS flights around the clock can be too expensive due to the need for human operators. Similarly, flying an UAS in some inaccessible or hostile location can be too inconvenient or dangerous for a human operator. It is possible though to develop in some cases an application-specific, cost-effective solution for autonomous UAS by utilizing existing results already published in literature. Accordingly, in this project, we plan to develop an autonomous UAS to search and track a shoreline. This research will achieve a technological advancement that can help researchers in many fields who collect data from such environment for their study. The system can also be used for autonomous video surveillance.\n\nProblem Description: A shoreline lies along the edge of an ocean that separates land from water. The separation of land from water can be detected from aerial imagery as evident from some existing works that deal with similar situations. However, there exist some additional challenges that need to be addressed in this problem due to the fact that a shoreline is very dynamic, always changing due to waves, currents, winds, and tides. We plan to investigate how to detect a shoreline using a UAS in real time so that the UAS can follow the detected shoreline as a guide to fly itself over the coastline. The research to develop autonomous unmanned aerial systems for shoreline tracking can benefit other fields of research such as environmental science and ecology. In addition, it has many other civilian, governmental, and commercial applications.\n\nStudent Research Activities:\n\nFly UAS to collect aerial imagery of the shoreline along the Gulf Coast nearby campus.\n\nImplement shoreline detection algorithms and test them for effectiveness and accuracy using aerial imagery data.\n\nSimulate the flight path of an UAS using results obtained from the shoreline detection algorithms to determine its feasibility for real-time applications.\n\nSubsequently, the REU participants will develop and integrate the shoreline detection system with the navigation system and test its effectiveness in real-time environments.\n\nStudent Background: Basic computing knowledge and introductory programming skills such Java or C++ is recommended.\n\n2. UAS Digital Mapping for Coastal Geoinformatics\n\nBackground: Coastal management requires accurate and timely information about the state of coastal landforms (e.g., beaches) and how they are evolving. Small-unmanned aircraft systems (UAS) equipped with digital cameras provide a new paradigm for surveying of coastal environments. Compared to traditional field surveying methods or manned aircraft surveys, UAS provides certain advantages: rapid deploy capabilities, temporal flexibility, and hyperspatial image acquisition. When coupled with repeat observations, these data can be used to derive high definition 3D digital terrain models and to characterize spatial-temporal changes of built and natural terrain in coastal zones. This newly captured information can be used to improve management practices, engineering design, and scientific decision making as it relates to coastal resiliency. For example, UAS topography data can be used to improve model calibration and forecasting of coastal hazards such as hurricane impacts or oil spill distribution.\n\nProblem Description: We plan to utilize UAS equipped with multispectral sensors for imaging of coastal landforms within the region: beaches, dunes, wetlands. The acquired image sequences will be processed using structure-from-motion (SfM) photogrammetry to derive 3D measurements (x, y, z point cloud data) for digital modeling of coastal terrain. Accordingly, 3D data processing and spatial analysis will be implemented using geospatial computing techniques and software to characterize coastal landforms and processes captured in the repeat UAS observations. For analyzing patterns in coastal landform evolution, open-source GIS software and spatial modeling approaches, such as space-time cube (STC) representation, will be applied to the time series of hyperspatial UAS point cloud and raster products. Image classification methods using the UAS multispectral imagery will be explored to develop automated approaches for landcover mapping. Finally, through these UAS-based analyses, students will explore coastal problems of immediate relevance and importance to the region, which is an area prone to erosion and coastal hazards.\n\nStudent Research Activities:\n\nDesign and conduct small UAS optical imaging surveys of coastal landforms adhering to resolution and accuracy specifications as well as current regulations.\n\nProcess collected imagery using SfM photogrammetry workflows to derive high fidelity 3D point cloud data and orthomosaic reflectance products.\n\nAssess and improve UAS-SfM data accuracy using real-time-kinematic GPS surveying methods.\n\nPerform 3D point cloud data processing to generate digital elevation models (DEMs) of terrain.\n\nDevelop image processing and classification algorithms using UAS-acquired multispectral imagery for landcover mapping.\n\nPerform GIS-based spatial analysis with the UAS data products including: extracting morphology metrics, characterizing spatial-temporal trends in terrain evolution, assessing landcover change, and deriving geovisualization products in support of coastal decision making.\n\nStudent Background: Basic computing knowledge and introductory programming skills such in C++ or Python or MATLAB is recommended.\n\n3. Mapping Nearshore Seagrasses with Unmanned Surface Vehicle\n\nBackground: Seagrass meadows are important natural resources that act as habitat for numerous marine species, absorb carbon dioxide from the atmosphere, and limit shoreline erosion. Conservation of these seagrasses are of major concern as human and natural activity has destroyed over 70% of seagrasses along the US coastline. Accurate information of the location and extent of meadows is important for coastal management and scientific studies. An airboat has been created for operating in shallow water. By placing the propellers above the boat, there is nothing extending into the water that would damage the seagrasses or get the vehicle stuck. This research is to develop a system to automatically classify underwater images to generate maps of the nearshore environment.\n\nProblem description: Remote control will be used to cover an area to record underwater RGB video, while logging the GPS coordinates. A GoPro will be used for the camera. RGB cameras can operate in extremely shallow water. However, there are a variety of challenges when working with RGB underwater: Light is scattered dramatically with increasing depth, making light-based imaging difficult by obscuring color. Also, the turbidity of the water in many regions makes the imagery cloudy from the occlusions by dense floating particles. Students will explore image processing techniques for resolving some of these issues as well as machine learning techniques for image classification. Numerous machine learning algorithms are available and students will compare the accuracy of various techniques, as well as varying the features extracted from the images. Finally, the classifications will be used with the GPS coordinates to create a raster maps.\n\nStudent Research Activities:\n\nControl USV to collect underwater imagery of shallow water along the Laguna Madre and/or Oso Bay.\n\nImplement image processing for dealing with image noise and other characteristics.\n\nImplement image processing for collecting image features to use for machine learning.\n\nImplement and compare machine learning classification techniques for image classification.\n\nUse classifications to populate a raster map of the imaged region.\n\nStudent Background: Basic computing knowledge and introductory programming skills in C++ or Python is recommended.\n\n4. Multi-Objective UAV Mission Planning Using Nature-inspired Metaheuristic Search Algorithms\n\nBackground: Metaheuristic search algorithms have been successfully used to solve a variety of optimization problem with huge search space. These search algorithms have a high capability to find, produce, or choose a heuristic solution for a diversity of single and multi-function optimization problems. Providing a solution is quite challenge when their exits multiple objectives to achieve. UAV Mission Planning (MP) problem is one of these critical applications. In various military applications, we may use UAV for complex and high-risk missions to avoid human risk and increase efficiency. UAVs need to be sufficiently smart to autonomously follow a safe path to a pre-defined target behind enemy lines, avoid obstacles such as other aircraft or enemy missiles. UAV need to optimize a number of conflicting goals such as minimizing the distance of a path and achieving a high level of safety. In this project, the goal is to develop an optimal trajectory for a UAV mission. This optimal trajectory shall allow the UAV to navigate over bumpy terrain. Nature-inspired metaheuristic search algorithms have been used with high performance to tackle the above described missions.\n\nProblem Description: The aim of this project is to allow students to get a hand experience on Unmanned Aerial Vehicle (UAV) routing and mission planning. To achieve this goal, 1) we plan to explore various metaheuristic search algorithms for function optimization; 2) learn how to program metaheuristic search algorithms using Matlab; 3) design a path planning evaluation function with set of constraints that include minimization of time to goal, total mission accomplishment time, and avoidance of enemy detection systems such as radar; 4) solve the problem of multi-objective optimization using metaheuristic search algorithms (i.e., Genetic Algorithms, Particle Swarm Optimization) to create an optimal mission path. An ultimate goal of this research is to allow students to develop a new routing (i.e., path planning) software for the UAV to accomplish a pre-programmed mission. Students will learn how to develop a graphical user interface for a software system to better utilize the system for various users.\n\nStudent Research Activities: The undergraduate researchers will perform the following tasks:\n\nStudy the fundamental metaheuristic search algorithms and programming software.\n\nSolve function optimization problem with constraints and multi-objective goals.\n\nCreate a work environment for mission planning using Matlab.\n\nLearn how to enhance the evaluation function for obstacles avoidance.\n\nDevelop multiple mission paths as a backup plan for the autonomous UAV system.\n\nStudent Background: Students need to have basic computing knowledge and introductory programming skills in Matlab.\n\n6. Deep Learning-based Stacked Autoencoder and Information Fusion for Drone GPS Spoofing Detection and Recovering\n\nBackground: The unmanned aerial vehicles (UAVs) or drones rely heavily on GPS signals to facilitate navigation. But the civilian (public) GPS signals sent by the satellites are neither authenticated nor encrypted, which opens GPS spoofing attacks with the purpose of hijacking UAVs or interfering with air safety. GPS spoofing is a smart attack that the attacker pretends to be a legitimate satellite signal and hijacks the drones through the navigation system. Early in-time detection and recovering from GPS spoofing leads to the prevention of property damage and life loss.\n\nProblem description: There are two research objectives: the first one is to detect GPS spoofing, and the second one is to recover from GPS spoofing. GPS spoofing is divided into forward spoofing and generated spoofing. Forward spoofing is an attack which adds delay to the real signal, and then replay it. Generated spoofing generates new customized GPS signals to cause an attack. The developed deep learning method can be used to detect both forward spoofing and generated spoofing with high accuracy. We will compare the performance of proposed method with the existing machine learning methods.\n\nRecovering true GPS signals during a spoofing attack – though can be detected – in many situations is not feasible and reliable. Besides, a nulling attack can cancel true GPS signals and an overpowered attack can overwhelm the GPS receiver of a UAV from receiving true GPS signals. In such cases, GPS signals can be considered corrupt or lost and cannot be used reliably for navigation of a UAV to continue its mission. Our research objective in such cases is how to guide the UAV under attack to return to its base. We propose to apply and determine effectiveness of vision-based learning algorithms to solve the problem of returning a UAV.\n\nStudent Research Activities:\n\nInvestigate the existing GPS spoofing attack strategies\n\nExplore the state-of-the-art defense techniques, including both detection and recovering\n\nPropose and design more accurate GPS spoofing detection based on deep learning and information fusion\n\nExam and test the existing recovering techniques, propose more efficient solutions\n\nStudent Background: Basic computing knowledge and introductory programming skills in C++ or Python (Preferred) is recommended.\n\n7. Enhancement of UAS Capabilities for Execution of Cooperative tasks and Advancement of Data Acquisition Practices\n\nBackground: Nowadays, efficient surveying methods for geospatial data acquisition benefit from using data collected by a variety of robotic systems, e.g., unmanned aircraft systems (UASs), unmanned ground vehicles (UGVs), unmanned underwater/surface vehicles (UUVs and USVs), etc. These systems can explore different scenarios utilizing a wide variety of sensors. These systems can perform different tasks and get close to specific locations, hence increasing the quality of the sensors’ readings. A team formed by multiple robots can improve the efficiency of collecting high-quality information in a short period of time. However, if the team is formed by heterogeneous systems (i.e., robotic systems with different characteristics), then the complexity of the overall system increases and requires an efficient means to coordinate the vehicles. When working with a multi-robot system, it is important to address multiple aspects within the data collection problem, such as the distributed autonomous area coverage and the multi-robot task allocation.\n\nProblem Description: The proper coordination of a multi-robot system plays a significant role during the execution of a cooperative task. Moreover, finding an optimal way to perform a task is important in terms of revenue and time. A homogenous multi-robot task allocation strategy uses a spatial queueing model that enables a set of robots to determine a suitable order for performing a set of tasks while reducing the time and energy spent in performing the tasks. However, when working with a team made of heterogeneous systems, there are other parameters that should be taken into consideration, e.g., flocking (fixed formation when navigating multiple destinations), avoiding obstacles, avoiding collisions among team members, battery life, payload capacity, etc. This project will develop novel approaches that will improve coordination techniques among teams of heterogeneous unmanned autonomous systems. We plan to implement the developed coordination strategies in a real-world situation using simulated geospatial information.\n\nStudent Research Activities: The undergraduate researchers will perform the following major tasks:\n\nDesign 3D environments for Gazebo in ROS and the integration of robotic models.\n\nDevelopment of coordination strategies for teams of UAS.\n\nSimulate UAS strategies within the Gazebo-ROS environment.\n\nPerform and conduct UAS indoor experiments using real robots, and VICON system.\n\nDevelop human-machine interface for controlling an UAS team.\n\nEvaluate and validate system integration with both simulated agents and UAS robots.\n\nStudent Background: Students need to have basic computing knowledge and programming skills such as in Python, MATLAB, and UNIX.\n\n8. Exploring Authorization Techniques for Emerging Commercial Drone Fly-Overs\n\nBackground: Currently, several major companies are actively working towards utilizing Unmanned Aerial Systems (UAS), a.k.a., drones, to deliver goods all over the US, both in cities and rural areas. Such an approach seems to be quite promising in terms of efficiency and costs, allowing for companies to deliver packages to customers in a shorter period of time, e.g., the very same day, when compared with existing solutions. While convenient, drones flying unrestrictedly over populated, sensitive physical spaces, e.g., homes, hospitals, museums, festivals, etc., introduces a series of non-trivial problems: first, there are concerns related to the privacy of people in the ground that is not related to drone operations. As an example, drones may be used to take pictures and/or recording video without consent. Second, there are also cyber-security concerns. For instance, drones may be used as platforms for launching cyber-attacks, such as setting up fake communication towers for Man-In-The-Middle attacks in which private communications are intercepted by malicious parties. Finally, there are also concerns related to the safety of human bystanders and physical property. For instance, drones flying over a house may ultimately collide with each other resulting in costly affectations in the ground.\n\nProblem Description: Drones must not be allowed to fly unrestrictedly over sensitive spaces, homes, schools, hospitals, etc. Instead, people in the ground who happen to be relevant to such spaces, e.g., homeowners, school principals, hospital directors, etc., who must be allowed to grant proper authorization before a drone fly-over can be attempted. As an initial step to solve this problem, there is a need to (1) provide a way for drones to uniquely identify themselves, a.k.a., fingerprinting; (2) allow for drones to communicate their current location when attempting a fly-over; and (3) specify what drones are allowed or denied authorization to attempt a fly-over via a well-defined set of rules, a.k.a., authorization policies.\n\nStudent Research Activities: The undergraduate researchers will perform the following major tasks:\n\nCollect, read and analyze recent research literature on restricting drone fly-overs.\n\nInvestigate existing methods for drone identification and fingerprinting.\n\nInvestigate existing bidirectional data communication channels for drones.\n\nInvestigate methodologies in the research literature for specifying and evaluating authorization policies.\n\nImplement a proof-of-concept demo using a commercially-available drone, supporting Application Programming Interfaces (APIs), as well as a self-developed software prototype.\n\nStudent Background: Basic computing knowledge and introductory programming skills in C++, Java or Python is recommended."
    }
}