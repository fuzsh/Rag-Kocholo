{
    "id": "dbpedia_124_3",
    "rank": 84,
    "data": {
        "url": "https://www.okta.com/identity-101/stream-cipher/",
        "read_more_link": "",
        "language": "en",
        "title": "Stream Cipher 101: Definition, Usage & Comparisons",
        "top_image": "https://www.okta.com/sites/default/files/media/image/2022-11/okta-social-share.png",
        "meta_img": "https://www.okta.com/sites/default/files/media/image/2022-11/okta-social-share.png",
        "images": [
            "https://www.okta.com/themes/custom/okta_www_theme/images/logos/logo-lockup-white.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/sites/default/files/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://www.okta.com/identity-101/stream-cipher/",
        "text": "A stream cipher is an encryption technique that works byte by byte to transform plain text into code that's unreadable to anyone without the proper key.\n\nStream ciphers are linear, so the same key both encrypts and decrypts messages. And while cracking them can be difficult, hackers have managed to do it.\n\nFor that reason, experts feel stream ciphers aren't safe for widespread use. Even so, plenty of people still lean on the technology to pass information through the internet.\n\nHow do stream ciphers work?\n\nAll cryptographic methods aim to scramble data to hide it from outsiders. But unlike their counterparts, stream ciphers work on each bit of data in a message rather than chunking the message into groups and encrypting them in blocks.\n\nStream ciphers rely on:\n\nPlaintext. You must have a message you'd like to encode.\n\nKeystreams. A set of random characters replaces those in the plaintext. They could be numbers, letters, or symbols.\n\nCiphertext. This is the encoded message.\n\nGenerating a key is a complicated mathematical process. Even so, most computers can push through each step in seconds.\n\nBits of plaintext enter the stream cipher, and the cipher manipulates each bit with the mathematical formula. The resulting text is completely scrambled, and the recipient can't read it without the proper key.\n\nWith the right key, a recipient can push the ciphertext back through the stream cipher and transform the garbled data back to plaintext.\n\nThere are two main types of stream ciphers, and they each work slightly differently.\n\nSynchronous stream ciphers: A secret key generates keystreams, and they're made independently of both the plaintext and the ciphertext.\n\nSelf-synchronizing stream ciphers: They use a secret key, but they include another form of randomization to make hacking harder.\n\nStream ciphers aren't the only tools at your disposal. You could also use block ciphers. Block ciphers break messages down into pieces, and then each piece moves through an encryption algorithm.\n\nHow are stream ciphers used?\n\nIf you've ever watched a movie about World War II, you've probably seen the power of stream ciphers firsthand. German officials used the technology to send directions to their troops, and it took years for English experts to crack the code.\n\nThe Germans used a complicated machine that looked a bit like a typewriter. A set of 26 lights above the keys made the transformation plain. One light represented a converted letter. They changed the keys regularly, and a push of a button updated the Enigma to tap out notes in the new code.\n\nAn online model lets you tinker with the Enigma (complete with authentic sounds). Tapping out the word \"Welcome\" on that simulation returned the encoded message \"4JOTSXI.\"\n\nThe history is fascinating. But make no mistake. Stream ciphers didn't go out of style when the war ended. In fact, plenty of people use this technology now.\n\nStream ciphers come with plenty of benefits, including:\n\nSpeed. This form of encryption is typically faster than others, including block ciphers.\n\nLow complexity. It's easy to incorporate stream ciphers into modern programs, and developers don't need complex hardware to make it happen.\n\nSerial nature. Some companies deal with messages written in a trickle. With their bit-by-bit processing, stream ciphers allow them to send information when it's ready rather than waiting for everything to be done.\n\nEase of use. Stream ciphers are symmetrical encryption tools, so companies aren't forced to bother with public and private keys. And mathematical concepts that underlie modern stream ciphers allow computers to determine the proper decryption key to use.\n\nBecause stream ciphers are easy to implement, many people and organizations use them. In fact, most web browsers and websites use this technology.\n\nWhen you connect to a protected website, the site sends your computer an SSL certificate. That document is encrypted, and most sites use stream ciphers for that communication.\n\nA deep dive into stream cipher creation\n\nMathematical concepts underlie stream ciphers. These concepts regulate how to replace information within plaintext, and they explain how to transform the garbled note into a readable state once more.\n\nMost stream ciphers rely on something called linear-feedback shift registers (or LFSRs). These are easy to implement, but they're not strong security components. Developers attempt to enhance security by using:\n\nNon-linear combining functions. These systems eliminate the linear nature of the math used, making the code slightly harder to crack.\n\nClock-controlled functions. They incorporate an element of time that changes the output accordingly.\n\nFilters. The developers add another element to the calculations, and they keep that filter strictly secret.\n\nFuture developers may come up with even more methods to enhance the security of stream ciphers and ensure that hackers canâ€™t undo their work.\n\nAre stream ciphers safe from hackers?\n\nAs we learned during WWII, even sophisticated stream ciphers can be cracked with the proper amount of creativity and persistence. No encryption method is 100 percent safe from people determined to get inside.\n\nRead through hacker forums, and you'll learn that most of them consider stream ciphers extremely easy to reverse. Pick at them to learn how they were encoded, and you can use the same tools to reverse the process.\n\nThe best way to ensure security with stream ciphers is to use keys just once. And each key should be unrelated to any other you've used. That way, even if attackers crack one key, the rest of your system's security will remain intact.\n\nPopular stream ciphers\n\nWhen people talk about stream ciphers as a whole, they're often discussing RC4. This is the most popular stream cipher in the world, and it's used widely.\n\nThe RC4 cipher works like this:\n\nPlenty of other options exist. Wikipedia lists 25 different types of stream ciphers of varying costs, speeds, and complexities.\n\nChoosing the right encryption method is just one part of developing a robust security system. You must also protect data with firewalls, proper keyword storage, and employee education.\n\nLet us help. Find out how Okta can work with you to keep your company safe.\n\nReferences\n\nRusty but Intact: Nazi Enigma Cipher Machine Found in the Baltic Sea. (December 2020). Ars Technica.\n\nThe Lorenz SZ40/42 Cipher Attachment. Virtual Lorenz.\n\nIntroduction to Cryptography: One-Time Pads and Stream Ciphers. (February 2020). Medium.\n\nStream Ciphers. Science Direct.\n\nSynchronous Stream Cipher. (2011). Encyclopedia of Cryptography and Security.\n\nSelf-Synchronizing Stream Cipher. (2011). Encyclopedia of Cryptography and Security.\n\nSend Encrypted Messages Like They Did During the War With This Virtual Lorenz Cipher Machine. (May 2017). Wired.\n\nHaving Keys and Binary, How Do I Reverse/Decrypt a Stream Encryption? (2016). Reverse Engineering Stack Exchange."
    }
}