{
    "id": "dbpedia_124_2",
    "rank": 17,
    "data": {
        "url": "https://www.cryptomathic.com/news-events/blog/symmetric-key-encryption-why-where-and-how-its-used-in-banking",
        "read_more_link": "",
        "language": "en",
        "title": "Symmetric Key Encryption - why, where and how it’s used in banking",
        "top_image": "https://www.cryptomathic.com/hubfs/Blog_Images/Banner-Cryptomathic-blog-symmetrical-encryption-banking-cryptomathic-algorithms.jpg",
        "meta_img": "https://www.cryptomathic.com/hubfs/Blog_Images/Banner-Cryptomathic-blog-symmetrical-encryption-banking-cryptomathic-algorithms.jpg",
        "images": [
            "https://www.cryptomathic.com/hubfs/Website%20Update%20(2023)/Logo%202023.svg",
            "https://www.cryptomathic.com/hubfs/Website%20Update%20(2023)/Group.svg",
            "https://www.cryptomathic.com/hubfs/Blog_Images/Banner-Cryptomathic-blog-symmetrical-encryption-banking-cryptomathic-algorithms.jpg",
            "https://no-cache.hubspot.com/cta/default/531679/55375dbb-d0f3-42c5-9a6b-d387715e6c11.png",
            "https://no-cache.hubspot.com/cta/default/531679/4acde633-8fe4-47ed-a65b-c7e5bb5a8e3e.png",
            "https://no-cache.hubspot.com/cta/default/531679/369259a3-90b8-45fe-bdb3-ac88210d6234.png",
            "https://no-cache.hubspot.com/cta/default/531679/38c16b05-2b51-47a0-ac05-becfa5272f61.png",
            "https://www.cryptomathic.com/hubfs/Website%20Update%20(2023)/Logo%202023.svg",
            "https://googleads.g.doubleclick.net/pagead/viewthroughconversion/1069245330/?value=0&guid=ON&script=0"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Peter Smirnoff & Dawn M. Turner (guests)"
        ],
        "publish_date": "2020-01-03T14:29:00+00:00",
        "summary": "",
        "meta_description": "In this article, we will discuss symmetric encryption in banking, benefits and some of the difficulties associated with managing the keys.",
        "meta_lang": "en",
        "meta_favicon": "https://www.cryptomathic.com/hubfs/PLACEHOLDER.jpg",
        "meta_site_name": "",
        "canonical_link": "https://www.cryptomathic.com/news-events/blog/symmetric-key-encryption-why-where-and-how-its-used-in-banking",
        "text": "In today’s cyber-world there is an ever-present risk of unauthorized access to all forms of data. Most at risk is financial and payment system data that can expose the personally identifiable information (PII) or payment card details of customers and clients. Encryption is essential for protecting PII and mitigating the risks that businesses, which process payment transactions, face every minute of every single day.\n\nThis article discusses symmetric encryption in banking, its benefits, and some key management challenges.\n\nWhat is Symmetric Encryption?\n\nSymmetric encryption is a type of encryption key management solution where only one key (a secret key) is used to both encrypt and decrypt electronic data. The entities communicating via symmetric encryption must exchange the key so that it can be used in the decryption process. This encryption method differs from asymmetric encryption where a pair of keys - one public and one private - is used to encrypt and decrypt messages.\n\nBy using symmetric encryption algorithms, data is \"scrambled\" so that it can't be understood by anyone who does not possess the secret key to decrypt it. Once the intended recipient who possesses the key has the message, the algorithm reverses its action so that the message is returned to its original readable form. The secret key that the sender and recipient both use could be a specific password/code or it can be random string of letters or numbers that have been generated by a secure random number generator (RNG). For banking-grade encryption, the symmetric keys must be created using an RNG that is certified according to industry standards, such as FIPS 140-2.\n\nThere are two types of symmetric encryption algorithms:\n\nBlock algorithms. Set lengths of bits are encrypted in blocks of electronic data with the use of a specific secret key. As the data is being encrypted, the system holds the data in its memory as it waits for complete blocks.\n\nStream algorithms. Data is encrypted as it streams instead of being retained in the system’s memory.\n\nSome examples of symmetric encryption algorithms include:\n\nAES (Advanced Encryption Standard)\n\nDES (Data Encryption Standard)\n\nIDEA (International Data Encryption Algorithm)\n\nBlowfish (Drop-in replacement for DES or IDEA)\n\nRC4 (Rivest Cipher 4)\n\nRC5 (Rivest Cipher 5)\n\nRC6 (Rivest Cipher 6)\n\nAES, DES, IDEA, Blowfish, RC5 and RC6 are block ciphers. RC4 is stream cipher.\n\nDES\n\nIn “modern” computing, DES was the first standardized cipher for securing electronic communications, and is used in variations (e.g. 2-key or 3-key 3DES). The original DES is not used anymore as it is considered too “weak”, due to the processing power of modern computers. Even 3DES is not recommended by NIST and PCI DSS 3.2, as well as all 64-bit ciphers. However, 3DES is still widely used in EMV solutions and chip cards because of legacy applications that do not have a crypto-agile infrastructure.\n\nAES\n\nThe most commonly used symmetric algorithm is the Advanced Encryption Standard (AES), which was originally known as Rijndael. This is the standard set by the U.S. National Institute of Standards and Technology in 2001 for the encryption of electronic data announced in U.S. FIPS PUB 197. This standard supersedes DES, which had been in use since 1977. Under NIST, the AES cipher has a block size of 128 bits, but can have three different key lengths as shown with AES-128, AES-192 and AES-256.\n\nWhat is Symmetric Encryption Used For?\n\nWhile symmetric encryption is an older method of encryption, it is faster and more efficient than asymmetric encryption, which takes a toll on networks due to performance issues with data size and heavy CPU use. Due to the better performance and faster speed of symmetric encryption (compared to asymmetric), symmetric cryptography is typically used for bulk encryption / encrypting large amounts of data, e.g. for database encryption. In the case of a database, the secret key might only be available to the database itself to encrypt or decrypt. Industry-standard symmetric encryption is also less vulnerable to advances in quantum computing compared to the current standards for asymmetric algorithms (at the time of writing).\n\nSome examples of where symmetric cryptography is used are:\n\nPayment applications, such as card transactions where PII needs to be protected to prevent identity theft or fraudulent charges\n\nValidations to confirm that the sender of a message is who he claims to be\n\nRandom number generation or hashing\n\nKey management for symmetric encryption - what we need to consider\n\nUnfortunately, symmetric encryption does come with its own drawbacks. Its weakest point is its aspects of key management, including:\n\nKey Exhaustion\n\nSymmetric Encryption suffers from behavior where every use of a key ‘leaks’ some information that can potentially be used by an attacker to reconstruct the key. The defenses against this behavior include using a key hierarchy to ensure that master or key-encryption keys are not over-used and the appropriate rotation of keys that do encrypt volumes of data. To be tractable, both these solutions require competent key management software and strategies as if (for example) a retired encryption key cannot be recovered the data is potentially lost.\n\nAttribution data\n\nUnlike asymmetric (public-key) Certificates, symmetric keys do not have embedded metadata to record information such as expiry date or an Access Control List to indicate the use the key may be put to - to Encrypt but not Decrypt for example.\n\nThe latter issue is somewhat addressed by standards such as ANSI X9-31 where a key can be bound to information prescribing its usage. But for full control over what a key can be used for and when it can be used, an encryption key management solution is required.\n\nKey Management at large scale\n\nWhere only a few keys are involved in a scheme (tens to low hundreds), the management overhead is modest and can be handled through manual, human activity. However, with a large estate, tracking the expiration and arranging rotation of keys quickly becomes impractical.\n\nConsider an EMV payment card deployment: millions of cards multiplied by several keys-per-card requires a dedicated provision and encryption key management solution.\n\nConclusion\n\nMaintaining large-scale symmetric encryption systems is a very challenging task. This is especially true when we want to achieve banking-grade security and auditability when the corporate and/or IT architecture is decentralized / geographically distributed.\n\nIn order to do this properly, it is recommended to use special software to maintain the proper life-cycle for each key created. In instances of massive key enrollment, it is truly impossible to conduct key management manually. We need specialized key management software for it.\n\nQuantum computing is expected to materialize within the next 5-10 years. Already today, NIST advises to replace the widely used 3DES algorithm with algorithms which we consider to be more save, based on today's knowledge.\n\nNot knowing what progress in technology and hence in the evolution malicious decryption-algorithms may be, we strongly advise banks to migrate to a crypto-agile setup. When weaknesses are identified, such a setup will allow for the rapid replacement of algorithms with more secure algorithms. Investment and architectural decisions must be made now in order to avoid major damage in the coming years.\n\nCryptomathic's key management software delivers a comprehensive crypto-agility security solution that allows organizations to prepare for the post-quantum era with ease. Contact us now to learn how this cutting-edge technology can help you protect your critical information today.\n\nReferences and Further Reading\n\nBuyer’s Guide to Choosing a Crypto Key Management System - Part 1: What is a key management system (2018), by Rob Stubbs\n\nBuyer's Guide to Choosing a Crypto Key Management System; Part 2: The Requirement for a Key Management System (2018), by Rob Stubbs\n\nBuyer’s Guide to Choosing a Crypto Key Management System - Part 3: Choosing the Right Key Management System (2018), by Rob Stubbs"
    }
}