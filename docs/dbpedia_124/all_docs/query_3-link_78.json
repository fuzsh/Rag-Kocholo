{
    "id": "dbpedia_124_3",
    "rank": 78,
    "data": {
        "url": "https://www.infosecinstitute.com/resources/cryptography/security-risks-of-outdated-encryption-is-your-data-really-secure/",
        "read_more_link": "",
        "language": "en",
        "title": "Security risks of outdated encryption: Is your data really secure?",
        "top_image": "https://www.infosecinstitute.com/contentassets/c7101b8ec5f54fa5814d8194b703481e/infosec-favicon.png",
        "meta_img": "https://www.infosecinstitute.com/contentassets/c7101b8ec5f54fa5814d8194b703481e/infosec-favicon.png",
        "images": [
            "https://www.infosecinstitute.com/contentassets/c7101b8ec5f54fa5814d8194b703481e/infosec-logo-white.svg",
            "https://www.infosecinstitute.com/contentassets/c7101b8ec5f54fa5814d8194b703481e/infosec-logo-white.svg",
            "https://www.infosecinstitute.com/contentassets/d5d7991013e345aa82af20502c908ce9/trustradius-top-rated-2022.png",
            "https://www.infosecinstitute.com/contentassets/77b2e5533ee04aff88aff1ca98baf6ec/onlinecourseproviders_enterprise_leader-768x997-1.png",
            "https://www.infosecinstitute.com/contentassets/d5c08da2bc8641c2bea46a4bc471faba/csgea-2022-gold-png.png",
            "https://www.infosecinstitute.com/contentassets/09bd65ec0d8141c8b1badb232826dc14/best-of-security-awareness-training.png",
            "https://www.infosecinstitute.com/globalassets/logos/internal/infosec-iq-logo-full-color-left-aligned.png",
            "https://www.infosecinstitute.com/contentassets/42196adafae94fcba5c696e75e439484/is-wb-24-02-how-chatgpt-and-ai-are-changing-cybersecurity-forever_yt-thumbnail.png?width=338&height=304&rmode=Max&bgcolor=transparent",
            "https://www.infosecinstitute.com/contentassets/d5d7991013e345aa82af20502c908ce9/trustradius-top-rated-2022.png",
            "https://www.infosecinstitute.com/contentassets/77b2e5533ee04aff88aff1ca98baf6ec/onlinecourseproviders_enterprise_leader-768x997-1.png",
            "https://www.infosecinstitute.com/contentassets/d5c08da2bc8641c2bea46a4bc471faba/csgea-2022-gold-png.png",
            "https://www.infosecinstitute.com/contentassets/09bd65ec0d8141c8b1badb232826dc14/best-of-security-awareness-training.png",
            "https://www.infosecinstitute.com/contentassets/0c61c4bd6ad74bc69ab04cd2b1c7a33b/susan-morrow.jpg",
            "https://www.infosecinstitute.com/contentassets/d211fe1dd45148cfbfae9dd0f7a2ccec/encryptedkey-skillsblue-gradient-400w-icon.png",
            "https://www.infosecinstitute.com/contentassets/d211fe1dd45148cfbfae9dd0f7a2ccec/encryptedkey-skillsblue-gradient-400w-icon.png",
            "https://www.infosecinstitute.com/contentassets/0c61c4bd6ad74bc69ab04cd2b1c7a33b/susan-morrow.jpg",
            "https://www.infosecinstitute.com/contentassets/2a9497e7cc2a44f89e09d0bfbff93350/encryptedkey-skillsblue-gradient-400w-icon.png",
            "https://www.infosecinstitute.com/contentassets/be26b6439d4243f7b15332900f984a71/infosec-skills_live-boot-camps_rgb-white.png",
            "https://www.infosecinstitute.com/contentassets/4bd28e8b78c94d31a78225e916c77791/hashing-basics_-how-does-hashing-work_-e1672253682360.png?width=338&height=304&rmode=Max&bgcolor=transparent",
            "https://www.infosecinstitute.com/contentassets/f4f8e54ea3b5443089992385fb2fcb20/bianca-gonzalez.jpg",
            "https://www.infosecinstitute.com/siteassets/Theme/Marketing/images/assets/no-image.png?width=338&height=304&rmode=Max&bgcolor=transparent",
            "https://www.infosecinstitute.com/contentassets/c4bb9c185b9c4fb1b4753c47017326db/patrick-mcsweeney.jpg",
            "https://www.infosecinstitute.com/siteassets/Theme/Marketing/images/assets/no-image.png?width=338&height=304&rmode=Max&bgcolor=transparent",
            "https://www.infosecinstitute.com/contentassets/ebf13f27ec33474980f150c309cae0fa/author-howard-poston-2022-07-15-1107-am.png",
            "https://www.infosecinstitute.com/siteassets/Theme/Marketing/images/assets/no-image.png?width=338&height=304&rmode=Max&bgcolor=transparent",
            "https://www.infosecinstitute.com/contentassets/a4310c7d71054c9b979274d4fffafa2c/author-riya-sander.jpg",
            "https://www.infosecinstitute.com/globalassets/logos/internal/infosec-logo-white.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Computer Weekly",
            "Think Digital Partners",
            "regularly writes on identity",
            "security for CSO Online"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Introduction\nThey say that those who fail to learn history are doomed to repeat it. A salient factor in the defeat of Austria by Prussia in the 1866 Austro-P",
        "meta_lang": "en",
        "meta_favicon": "/contentassets/c7101b8ec5f54fa5814d8194b703481e/infosec-favicon.png",
        "meta_site_name": "",
        "canonical_link": "https://www.infosecinstitute.com/resources/cryptography/security-risks-of-outdated-encryption-is-your-data-really-secure/",
        "text": "Introduction\n\nThey say that those who fail to learn history are doomed to repeat it. A salient factor in the defeat of Austria by Prussia in the 1866 Austro-Prussian war was the Prussian army’s standardization of the (then) modern, rapid firing, bolt-action Dreyse needle-gun. In contrast, the Austrian army persisted with the use of outdated (slow-loading) muzzle-loading rifles. And so, Austria was out-gunned, leading to a disastrous battlefield performance. This is an important lesson in not adapting to modern technological improvements and one that is pertinent to encryption applications.\n\nIt’s well-known that encryption algorithms rarely stand the test of time. This is partly because such algorithms are devised against a knowledge of the methods of attack and cryptanalysis that either exist or are envisaged at the time the algorithm is written. And so, as novel methods of attack are uncovered, hardware processing speeds increase and cryptanalysis develops, so too do encryption algorithms fall prey to new vulnerabilities.\n\nLearn Applied Cryptography\n\nBuild your applied cryptography and cryptanalysis skills with 13 courses covering hashing, PKI, SSL/TLS, full disk encryption and more.\n\nThere are many examples of outdated encryption algorithms, now considered dangerously obsolete. Some common examples are discussed here.\n\nTypes of encryption algorithms\n\nAn algorithm is only as good as the testing it goes through in the field. It is often that insecurities inherent in an algorithm only become apparent after many years of use. Let’s look at some examples.\n\nHash algorithms and collision attacks\n\nHashing is an umbrella term that encompasses methods used to encrypt data in a manner that cannot be reversed. Data passed through a hash algorithm produces a fixed size sequence of bytes, which should be unique for any data input. However, hashing is an insecure method.\n\nInvented in 1991 by the famous cryptographer Ron Rivest, the hash algorithm MD5 was considered secure enough for most cryptographic purposes throughout the early ‘90s. Later, however, it was discovered to be totally insecure.\n\nCollision resistance is a measure of the ability of the algorithm to afford a unique output for a given input. If a hash algorithm is vulnerable to collisions, it means that there is a reasonable probability of finding more than one input value that affords the same output value.\n\nIt is clear that should such a hash be used for data verification and digital signatures, i.e., checking that data has not been altered or substituted, an attacker could potentially make a change in that data while still generating a hash that matches that from the original data.\n\nThe algorithm, MD5 (and a more modern hash algorithm, SHA1), have both been shown to be susceptible to collision attacks; indeed, it has been demonstrated that even digital certificates that use a SHA1 hash as part of the signing algorithm may be counterfeited. However, although these hash methods have been deprecated for some while, they still linger in older software and systems. This makes those systems vulnerable.\n\nSimilarly, the simple use of hashes for password storage is now considered obsolete. This is not because of collision, but rather, their inherent speed makes them unsuitable for this purpose; it is possible for an attacker to simply try billions of random data inputs until one is found that produces the target hash. Again, use of hashing for password storage is still in use in 2020, and there are even still many online code examples for password storage based on hashing with MD5.\n\nBest practices and hashing\n\nUsing obsolete hashing methods for digital signature or data verification applications is a good way to make your system vulnerable and an easy thing to upgrade. It’s well worth checking your code libraries and default settings for the use of poor hash methods and password storage methods. For secure password storage, use an appropriate algorithm such as BCRYPT or ARGON2, unless you want to join the ever-growing list of companies who have lost user data due to poor password storage practice.\n\nReversible encryption\n\nThe term “encryption” means reversible encryption, used to protect data at rest and in transit. These applications of encryption are frequently littered with the unexploded ordnance of poor practice and obsolete (or simply bad) algorithms, waiting to explode data upon hackers’ prodding.\n\nThere has never been a period in which easy-to-use and secure encryption algorithms are commonplace, and yet there are so many instances of poor practice. One case in point in securing HTTPS traffic: for some time, the danger of web servers permitting the use of outdated and insecure protocols (TLS 1.0, TLS 1.1, SSLv2, SSLv3) has been known, but there are still many web servers that permit these protocols. One estimate report around 850,00 websites still use TLS 1.0 or 1.1 in March 2020.\n\nThe danger is that these are exploitable, leading to data loss. If you value your customers’ data, you should check your own websites for compliance with the more secure standards of TLS 1.1 and 1.2. You can test your site at, for example, https://www.cdn77.com/tls-test.\n\nEncryption used in desktop and server applications (e.g., to protect files and other sensitive data during storage or transit) may also be obsolete and vulnerable. In some cases, highly embedded obsolete algorithms will be difficult to replace, a matter to ponder when designing any system that utilizes encryption.\n\nOne such example is 3DES, based on the old DES algorithm designed in the 1970s. Although known to be vulnerable since 2016, 3DES is still widely used, being embedded in many payment and other financial systems. This makes replacement problematic. Doubtless, it is only a matter of time before these systems are attacked using such an exploit.\n\nBest practice and reversible encryption\n\nAlgorithms such as 3DES, RC4, 1024-bit RSA have, for some time, been considered vulnerable and using these favors having your, or your clients’, data compromised. Systems using these algorithms should have been replaced with a modern equivalent (AES for symmetric encryption, RSA with a minimum of 2048 bit or ECC for asymmetric encryption) as a priority.\n\nA similar argument applies to the use of esoteric or in-house algorithms. Why risk your data when excellent established algorithms are readily available?\n\nEncryption-by-design\n\nIn designing new software or replacing obsolete code, there is no excuse not to use modern encryption algorithms. Provided, that is, that the encryption is correctly implemented — use of a modern algorithm by itself is no guarantee of success here, as the following example shows.\n\nEncryption is not only used in desktop and server software, but also in applications such as smart cars, smart TVs, cameras and other IoT devices. Unfortunately, there is often a disparity between the skills shown in designing impressive hardware devices and that of producing secure firmware and communications systems used in them.\n\nOne such example is Texas Instruments’ DST80 encryption, which is used in many car electronic key systems. This is a secure system when used as designed by Texas Instruments. However, several car manufacturers decided that, rather than use the recommended full 80-bit key size, they would use 24-bit, which is easily hacked.\n\nConclusion\n\nIf you want to keep winning the war against data theft, ensure that your encryption is up to the task, can be readily updated and (most importantly) is implemented securely. All of this may require some effort, which may not make your product more marketable or add new features but will give peace of mind when it comes to the security of the data it handles.\n\nThanks also to Dr. Stephen Hitchen, Security Architect at Avoco Secure who helped me compile examples and information to write this article.\n\nLearn Applied Cryptography\n\nBuild your applied cryptography and cryptanalysis skills with 13 courses covering hashing, PKI, SSL/TLS, full disk encryption and more.\n\nSources"
    }
}