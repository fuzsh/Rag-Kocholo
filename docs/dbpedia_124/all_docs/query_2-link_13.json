{
    "id": "dbpedia_124_2",
    "rank": 13,
    "data": {
        "url": "https://www.spiceworks.com/tech/tech-general/articles/what-is-computer-architecture/",
        "read_more_link": "",
        "language": "en",
        "title": "Computer Architecture: Components, Types and Examples",
        "top_image": "https://images.spiceworks.com/wp-content/uploads/2023/05/11125927/Shutterstock_1759507619.jpg",
        "meta_img": "https://images.spiceworks.com/wp-content/uploads/2023/05/11125927/Shutterstock_1759507619.jpg",
        "images": [
            "https://images.spiceworks.com/100x100/8a/b9/7cbcb175486b8ec297cb9acb689c/chiradeep.jpg",
            "https://images.spiceworks.com/100x100/8a/b9/7cbcb175486b8ec297cb9acb689c/chiradeep.jpg",
            "https://images.spiceworks.com/800x400/wp-content/uploads/2023/05/11125927/Shutterstock_1759507619.jpg",
            "https://images.spiceworks.com/wp-content/uploads/2023/05/11124456/image-55.png",
            "https://images.spiceworks.com/wp-content/uploads/2023/05/17112912/components-of-computer-architecture.png 1098w, https://images.spiceworks.com/wp-content/uploads/2023/05/17112912/components-of-computer-architecture-300x178.png 300w, https://images.spiceworks.com/wp-content/uploads/2023/05/17112912/components-of-computer-architecture-1024x607.png 1024w, https://images.spiceworks.com/wp-content/uploads/2023/05/17112912/components-of-computer-architecture-768x455.png 768w",
            "https://images.spiceworks.com/wp-content/uploads/2023/05/17112912/components-of-computer-architecture.png",
            "https://images.spiceworks.com/wp-content/uploads/2023/05/17113202/types-of-computer-architecture.png 1098w, https://images.spiceworks.com/wp-content/uploads/2023/05/17113202/types-of-computer-architecture-300x202.png 300w, https://images.spiceworks.com/wp-content/uploads/2023/05/17113202/types-of-computer-architecture-1024x688.png 1024w, https://images.spiceworks.com/wp-content/uploads/2023/05/17113202/types-of-computer-architecture-768x516.png 768w",
            "https://images.spiceworks.com/wp-content/uploads/2023/05/17113202/types-of-computer-architecture.png",
            "https://images.spiceworks.com/100x100/8a/b9/7cbcb175486b8ec297cb9acb689c/chiradeep.jpg",
            "https://images.spiceworks.com/100x100/8a/b9/7cbcb175486b8ec297cb9acb689c/chiradeep.jpg",
            "https://www.spiceworks.com/wp-content/uploads/2022/03/spot-illustration.png",
            "https://www.spiceworks.com/wp-content/uploads/2022/03/spot-illustration.png",
            "https://images.spiceworks.com/wp-content/uploads/2024/08/08100343/illustration-2.jpg",
            "https://images.spiceworks.com/400x200/wp-content/uploads/2024/08/08144415/Google-Chromecast.jpg",
            "https://images.spiceworks.com/400x200/wp-content/uploads/2024/07/18151835/Elon-Musk-X.jpg",
            "https://images.spiceworks.com/400x200/wp-content/uploads/2024/08/06164318/Google-Antitrust.jpg",
            "https://images.spiceworks.com/400x250/wp-content/uploads/2024/08/06133423/Apple-Safari.jpg",
            "https://images.spiceworks.com/400x200/wp-content/uploads/2024/08/05091800/Shutterstock_2400922289.jpg",
            "https://images.spiceworks.com/400x200/wp-content/uploads/2024/08/05154352/Intel-Job-Cuts.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Chiradeep BasuMallick"
        ],
        "publish_date": "2023-05-11T13:00:12+00:00",
        "summary": "",
        "meta_description": "Computer architecture is the set of principles that describe how hardware and software connect to make a computer function.",
        "meta_lang": "en",
        "meta_favicon": "/wp-content/themes/gauge-child/images/favicon.ico",
        "meta_site_name": "Spiceworks Inc",
        "canonical_link": "https://www.spiceworks.com/tech/tech-general/articles/what-is-computer-architecture/",
        "text": "Computer architecture is defined as the end-to-end structure of a computer system that determines how its components interact with each other in helping execute the machine’s purpose (i.e., processing data).\n\nThis article explains the components of computer architecture and its key types and gives a few notable examples.\n\nWhat Is Computer Architecture?\n\nComputer architecture refers to the end-to-end structure of a computer system that determines how its components interact with each other in helping to execute the machine’s purpose (i.e., processing data), often avoiding any reference to the actual technical implementation.\n\nExamples of Computer Architecture: Von Neumann Architecture (a) and Harvard Architecture (b)\n\nSource: ResearchGateOpens a new window\n\nComputers are an integral element of any organization’s infrastructure, from the equipment employees use at the office to the cell phones and wearables they use to work from home. All computers, regardless of their size, are founded on a set of principles describing how hardware and software connect to make them function. This is what constitutes computer architecture.\n\nComputer architecture is the arrangement of the components that comprise a computer system and the engine at the core of the processes that drive its functioning. It specifies the machine interface for which programming languages and associated processors are designed.\n\nComplex instruction set computer (CISC) and reduced instruction set computer (RISC) are the two predominant approaches to the architecture that influence how computer processors function.\n\nCISC processors have one processing unit, auxiliary memory, and a tiny register set containing hundreds of unique commands. These processors execute a task with a single instruction, making a programmer’s work simpler since fewer lines of code are required to complete the operation. This method utilizes less memory but may need more time to execute instructions.\n\nA reassessment led to the creation of high-performance computers based on the RISC architecture. The hardware is designed to be as basic and swift as possible, and sophisticated instructions can be executed with simpler ones.\n\nHow does computer architecture work?\n\nComputer architecture allows a computer to compute, retain, and retrieve information. This data can be digits in a spreadsheet, lines of text in a file, dots of color in an image, sound patterns, or the status of a system such as a flash drive.\n\nPurpose of computer architecture: Everything a system performs, from online surfing to printing, involves the transmission and processing of numbers. A computer’s architecture is merely a mathematical system intended to collect, transmit, and interpret numbers.\n\nData in numbers: The computer stores all data as numerals. When a developer is engrossed in machine learning code and analyzing sophisticated algorithms and data structures, it is easy to forget this.\n\nManipulating data: The computer manages information using numerical operations. It is possible to display an image on a screen by transferring a matrix of digits to the video memory, with every number reflecting a pixel of color.\n\nMultifaceted functions: The components of a computer architecture include both software and hardware. The processor — hardware that executes computer programs — is the primary part of any computer.\n\nBooting up: At the most elementary level of a computer design, programs are executed by the processor whenever the computer is switched on. These programs configure the computer’s proper functioning and initialize the different hardware sub-components to a known state. This software is known as firmware since it is persistently preserved in the computer’s memory.\n\nSupport for temporary storage: Memory is also a vital component of computer architecture, with several types often present in a single system. The memory is used to hold programs (applications) while they are being executed by the processor and the data being processed by the programs.\n\nSupport for permanent storage: There can also be tools for storing data or sending information to the external world as part of the computer system. These provide text inputs through the keyboard, the presentation of knowledge on a monitor, and the transfer of programs and data from or to a disc drive.\n\nUser-facing functionality: Software governs the operation and functioning of a computer. Several software ‘layers’ exist in computer architecture. Typically, a layer would only interface with layers below or above it.\n\nThe working of a computer architecture begins with the bootup process. Once the firmware is loaded, it can initialize the rest of the computer architecture and ensure that it works seamlessly, i.e., helping the user retrieve, consume, and work on different types of data.\n\nSee More: Distributed Computing vs. Grid Computing: 10 Key Comparisons\n\nComponents of Computer Architecture\n\nDepending on the method of categorization, the parts of a computer architecture can be subdivided in several ways. The main components of a computer architecture are the CPU, memory, and peripherals. All these elements are linked by the system bus, which comprises an address bus, a data bus, and a control bus. Within this framework, the computer architecture has eight key components, as described below.\n\nComponents of Computer Architecture\n\n1. Input unit and associated peripherals\n\nThe input unit provides external data sources to the computer system. Therefore, it connects the external environment to the computer. It receives information from input devices, translates it to machine language, and then inserts it within the computer system. The keyboard, mouse, or other input devices are the most often utilized and have corresponding hardware drivers that allow them to work in sync with the rest of the computer architecture.\n\n2. Output unit and associated peripherals\n\nThe output unit delivers the computer process’s results to the user. A majority of the output data comprises music, graphics, or video. A computer architecture’s output devices encompass the display, printing unit, speakers, headphones, etc.\n\nTo play an MP3 file, for instance, the system reads a number array from the disc and into memory. The computer architecture manipulates these numbers to convert compressed audio data to uncompressed audio data and then outputs the resulting set of numbers (uncompressed audio file) to the audio chips. The chip then makes it user-ready through the output unit and associated peripherals.\n\n3. Storage unit/memory\n\nThe storage unit contains numerous computer parts that are employed to store data. It is typically separated into primary storage and secondary storage.\n\nPrimary storage unit\n\nThis component of the computer architecture is also referred to as the main memory, as the CPU has direct access to it. Primary memory is utilized for storing information and instructions during program execution. Random access memory (RAM) and read-only memory (ROM) are the two kinds of memory:\n\nRAM supplies the necessary information straight to the CPU. It is a temporary memory that stores data and instructions intermittently.\n\nROM is a memory type that contains pre-installed instructions, including firmware. This memory’s content is persistent and cannot be modified. ROM is utilized to boot the machine upon initial startup. The computer is now unaware of anything outside the ROM. The chip instructs it on how to set up the computer architecture, conduct a power-on self-test (POST), and finally locate the hard drive so that the operating system can be launched.\n\nSecondary storage unit\n\nSecondary or external storage is inaccessible directly to the CPU. Before the CPU uses secondary storage data, it must be transferred to the main storage. Secondary storage permanently retains vast amounts of data. Examples include hard disk drives (HDDs), solid-state drives (SSDs), compact disks (CDs), etc.\n\nSee More: What Is IT Infrastructure? Definition, Building Blocks, and Management Best Practices\n\n4. Central processing unit (CPU)\n\nThe central processing unit includes registers, an arithmetic logic unit (ALU), and control circuits, which interpret and execute assembly language instructions. The CPU interacts with all the other parts of the computer architecture to make sense of the data and deliver the necessary output.\n\nHere is a brief overview of the CPU’s sub-components:\n\n1. Registers\n\nThese are high-speed and purpose-built temporary memory devices. Rather than being referred to by their address, they are accessed and modified directly by the CPU throughout execution. Essentially, they contain data that the CPU is presently processing. Registers contain information, commands, addresses, and intermediate processing results.\n\n2. Arithmetic logic unit (ALU)\n\nThe arithmetic logic unit includes the electrical circuitry that performs any arithmetic and logical processes on the supplied data. It is used to execute all arithmetic (additions, subtractions, multiplication, division) and logical (<, >, AND, OR, etc.) computations. Registers are used by the ALU to retain the data being processed.\n\n3. Control unit\n\nThe control unit collaborates with the computer’s input and output devices. It instructs the computer to execute stored program instructions via communication with the ALU and registers. The control unit aims to arrange data and instruction processing.\n\nThe microprocessor is the primary component of computer hardware that runs the CPU. Large printed circuit boards (PCBs) are utilized in all electronic systems, including desktops, calculators, and internet of things (IoT) devices. The Intel 40004 was the first microprocessor with all CPU components on a single chip.\n\nIn addition to these four core components, a computer architecture also has supporting elements that make it easier to function, such as:\n\n5. Bootloader\n\nThe firmware contains the bootloader, a specific program executed by the processor that retrieves the operating system from the disc (or non-volatile memory or network interface, as deemed applicable) and loads it into the memory so that the processor can execute it. The bootloader is found on desktop and workstation computers and embedded devices. It is essential for all computer architectures.\n\n6. Operating system (OS)\n\nThe operating system governs the computer’s functionality just above firmware. It manages memory usage and regulates devices such as the keyboard, mouse, display, and disc drives. The OS also provides the user with an interface, allowing them to launch apps and access data on the drive.\n\nTypically, the operating system offers a set of tools for programs, allowing them to access the screen, disc drives, and other elements of the computer’s architecture.\n\n7. Buses\n\nA bus is a tangible collection of signal lines with a linked purpose; a good example is the universal serial bus (USB). Buses enable the flow of electrical impulses between various components of a computer’s design, transferring information from one system to another. The size of a bus is the count of information-transferring signal lines. A bus with a size of 8 bits, for instance, transports 8 data bits in a parallel formation.\n\n8. Interrupts\n\nInterrupts, also known as traps or exceptions in certain processors, are a method for redirecting the processor from the running of the current program so that it can handle an occurrence. Such an event might be a malfunction from a peripheral or just the fact that an I/O device has completed its previous duty and is presently ready for another one. Every time you press a key and click a mouse button, your system will generate an interrupt.\n\nSee More: What Is Network Hardware? Definition, Architecture, Challenges, and Best Practices\n\nTypes of Computer Architecture\n\nIt is possible to set up and configure the above architectural components in numerous ways. This gives rise to the different types of computer architecture. The most notable ones include:\n\nTypes of Computer Architecture\n\n1. Instruction set architecture (ISA)\n\nInstruction set architecture (ISA) is a bridge between the software and hardware of a computer. It functions as a programmer’s viewpoint on a machine. Computers can only comprehend binary language (0 and 1), but humans can comprehend high-level language (if-else, while, conditions, and the like). Consequently, ISA plays a crucial role in user-computer communications by translating high-level language into binary language.\n\nIn addition, ISA outlines the architecture of a computer in terms of the fundamental activities it must support. It’s not involved with implementation-specific computer features. Instruction set architecture dictates that the computer must assist:\n\nArithmetic/logic instructions: These instructions execute various mathematical or logical processing elements solely on a single or maybe more operands (data inputs).\n\nData transfer instructions: These instructions move commands from the memory or into the processor registers, or vice versa.\n\nBranch and jump instructions: These instructions are essential to interrupt the logical sequence of instructions and jump to other destinations.\n\n2. Microarchitecture\n\nMicroarchitecture, unlike ISA, focuses on the implementation of how instructions will be executed at a lower level. This is influenced by the microprocessor’s structural design.\n\nMicroarchitecture is a technique in which the instruction set architecture incorporates a processor. Engineering specialists and hardware scientists execute ISA with various microarchitectures that vary according to the development of new technologies. Therefore, processors may be physically designed to execute a certain instruction set without modifying the ISA.\n\nSimply put, microarchitecture is the purpose-built logical arrangement of the microprocessor’s electrical components and data pathways. It facilitates the optimum execution of instructions.\n\n3. Client-server architecture\n\nMultiple clients (remote processors) may request and get services from a single, centralized server in a client-server system (host computer). Client computers allow users to request services from the server and receive the server’s reply. Servers receive and react to client inquiries.\n\nA server should provide clients with a standardized, transparent interface so that they are unaware of the system’s features (software and hardware components) that are used to provide the service.\n\nClients are often located on desktops or laptops, while servers are typically located somewhere else on the network, on more powerful hardware. This computer architecture is most efficient when the clients and the servers frequently perform pre-specified responsibilities.\n\n4. Single instruction, multiple data (SIMD) architecture\n\nSingle instruction, multiple data (SIMD) computer systems can process multiple data points concurrently. This cleared the path for supercomputers and other devices with incredible performance capabilities. In this form of design, all processors receive an identical command from the control unit yet operate on distinct data packets. The shared memory unit requires numerous modules to interact with all CPUs concurrently.\n\n5. Multicore architecture\n\nMulticore is a framework wherein a single physical processor has the logic of multiple processors. A multicore architecture integrates numerous processing cores onto only one integrated circuit. The goal is to develop a system capable of doing more tasks concurrently, improving overall system performance.\n\nSee More: What Is Middleware? Definition, Architecture, and Best Practices\n\nExamples of Computer Architecture\n\nTwo notable examples of computer architecture have paved the way for recent advancements in computing. These are ‘Von Neumann architecture’ and ‘Harvard architecture.’ Most other architectural designs are proprietary and are therefore not revealed in the public domain beyond a basic abstraction.\n\nHere’s a description of what these two examples of computer architecture are all about.\n\n1. Von Neumann architecture\n\nThe von Neumann architecture, often referred to as the Princeton architecture, is a computer architecture that was established in a 1945 presentation by John von Neumann and his collaborators in the First Draft of a Report on the EDVAC (electronic discrete variable automatic computer). This example of computer architecture proposes five components:\n\nA processor with connected registers\n\nA control unit capable of storing instructions\n\nMemory capable of storing information as well as instructions and communicating via buses\n\nAdditional or external storage\n\nDevice input as well as output mechanisms\n\n2. Harvard architecture\n\nThe Harvard architecture refers to a computer architecture with distinct data and instruction storage and signal pathways. In contrast to the von Neumann architecture, in which program instructions and data use the very same memory and pathways, this design separates the two. In practice, a customized Harvard architecture with two distinct caches is employed (for data and instruction); X86 and Advanced RISC Machine (ARM) systems frequently employ this instruction.\n\nSee More: Top 8 Middleware Software Platforms in 2021\n\nTakeaway\n\nComputer architecture is one of the key concepts that define modern computing. Depending on the architecture, you can build micro-machines such as Raspberry Pi or incredibly powerful systems such as supercomputers. It determines how electrical signals move across the different pathways in a computing system to achieve the most optimal outcome.\n\nImage source: Shutterstock\n\nMORE ON COMPUTING"
    }
}