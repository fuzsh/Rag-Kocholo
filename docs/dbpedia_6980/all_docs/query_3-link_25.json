{
    "id": "dbpedia_6980_3",
    "rank": 25,
    "data": {
        "url": "https://wiki.logos.com/detailed_search_help",
        "read_more_link": "",
        "language": "en",
        "title": "Detailed Search Help",
        "top_image": "https://wiki.logos.com/Themes/LogosWiki/favicon.ico",
        "meta_img": "https://wiki.logos.com/Themes/LogosWiki/favicon.ico",
        "images": [
            "https://files.logoscdn.com/v1/files/46088310/assets/11137548/content.png?signature=F1NlPByB_GD3RC9wniGosxSjotU",
            "https://files.logoscdn.com/v1/files/46088314/assets/11137549/content.png?signature=_QY_2Pz7UmvvmqjR3AL0-PMUek4",
            "https://files.logoscdn.com/v1/files/46088318/assets/11137550/content.png?signature=bROYAsHABhcDKBU4Bj182hhDm0U",
            "https://files.logoscdn.com/v1/files/46088329/assets/11137552/content.png?signature=b42FpGvhodUOcLfrDgPL9vQEP6I",
            "https://files.logoscdn.com/v1/files/46088357/assets/11137556/content.png?signature=eqX9fKDQGoo8yq49Ft2zi_Vwxks",
            "https://files.logoscdn.com/v1/files/46088361/assets/11137557/content.png?signature=6Yy1vWanCiDdEmATbugN0dMaO7o",
            "https://files.logoscdn.com/v1/files/46088384/assets/11137560/content.png?signature=lxjcPleMiNLzj9viaYUU7WOY494",
            "https://files.logoscdn.com/v1/files/46088446/assets/11137570/content.png?signature=sKRubeZs0-UFe2DaNvzU5DEi0xc",
            "https://files.logoscdn.com/v1/files/46088467/assets/11137573/content.png?signature=yh9xdyQdsmaWfRx2_Mn-15D_Maw",
            "https://files.logoscdn.com/v1/files/46088501/assets/11137578/content.png?signature=qDjFGgJF0ldPvTYrN3y8Fpf4vdo",
            "https://files.logoscdn.com/v1/files/46088541/assets/11137582/content.png?signature=uE_iwwB_D3P6Iiysify4nWSqCqU",
            "https://files.logoscdn.com/v1/files/46140910/assets/11148042/content.png?signature=AkmHnCMyFA19B6mXbnV8ihHsINg",
            "https://files.logoscdn.com/v1/files/46140627/assets/11147929/content.png?signature=g9BL_Ii-KUVz4CKh2nS3fXlw8Ak",
            "https://files.logoscdn.com/v1/files/58404637/assets/13074504/content.jpg?signature=qiHs7aBOetAIcbhIFJNM_4Phmm8",
            "https://files.logoscdn.com/v1/files/46141175/assets/11148160/content.png?signature=i5378BOHHdYZKYmwdLVZ6qnLrP0",
            "https://files.logoscdn.com/v1/files/46141398/assets/11148254/content.png?signature=IpYYa2kPddtCMjOkr0zG4lumNXQ",
            "https://files.logoscdn.com/v1/files/46141556/assets/11148324/content.png?signature=HVmuzF7G0UcM8RfW9yYGtSR9a_w",
            "https://files.logoscdn.com/v1/files/46141662/assets/11148368/content.png?signature=pLL1vFweTxvbxD-liiQzU0MLglQ",
            "https://files.logoscdn.com/v1/assets/15043515/optimized?share=hvyERTNJl3L2TsvC"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Guides and instructions on using Logos Bible Software products.",
        "meta_lang": "",
        "meta_favicon": "Themes/LogosWiki/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Search Syntax\n\nSimple Search Syntax\n\nIf you want to search for a single word, just type it in and press ENTER (e.g. love).\n\nIf you type two words, Logos will search for articles (Basic search) or bible verses (Bible search) that contain both of these words (e.g. love neighbor).\n\nWildcards\n\nLogos supports the wildcards * and ?.\n\nA * stands for any number of characters in a word. So s*n would find son, sin, seven, Solomon, seen, spoken, etc. ‘Any number of characters’ can mean zero, so love* would find love, loved, lover, lovely, love’s and lovers.\n\nA ? stands for one character in a word, but it also stands for zero charcaters at the end of a word. So s?n would find “sin”, “son” and “sun”. neighbo?r would only find “neighbour”, and not “neighbor”. But grace? would find “grace”.\n\nNote: a wildcard will not match punctuation nor spaces e.g. Lord?Christ will not match “Lord Christ” but will try to find a match like “LordaChrist”, if it exists!\n\nA wildcard can stand for a whole word, but this makes the search very slow. Proximity Operators are a better method for whole words (so instead of “the * day” you would have the BEFORE 2-2 WORDS day).\n\nPhrases\n\nIf you want to search for a phrase, put quotation marks (”) around the phrase (e.g. “love your neighbor”).\n\nNote: you can use wildcards in a phrase e.g. “love your neighbo?r” will match “love your neighbour”\n\nSearching in Greek and Hebrew\n\nIf you just want to restrict your search to a particular language, you can use a language field. For example german:die, or latin:deo.\n\nIf you need to type characters in a different alphabet (e.g. Greek, Hebrew, or another language), you can do one of the following:\n\nUse transliteration:\n\nThis enables you to use English characters to type Greek, Hebrew and Aramaic words. It is a quick and easy way to search. To use this type g: for Greek, h: for Hebrew, or a: for Aramaic and then the transliterated version of your word. For example, if you wanted to search for ἀγάπη you would type g:agape. If you wanted to search for חסד you would type h:hesed. You’ll be able to choose precisely the word you want from a dropdown menu.\n\nUse Logos’ Greek and Hebrew Keyboards:\n\nThis keyboard can be selected for use in Bible, Basic, or Morph Search. In Tools > Program Settings, you can elect to Show keyboard selector, which places a keyboard icon in the Search box and allows you to switch between keyboards.\n\nUse another Windows keyboard:\n\nYou can install multiple keyboards in Windows, and switch between them with a single keypress (usually LeftAlt+Shift). This allows you to type directly in Greek/Hebrew, though you’ll need to learn which characters on your keyboard produce which Greek/Hebrew characters. The original language keyboards supplied by Faithlife support Coptic and Syriac as well as Greek and Hebrew.\n\nThere are two things to note:\n\nFirst, when searching the Bible for Greek and Hebrew, only the surface text will be searched (not footnotes, nor the interlinear parts). If you want to force the Bible Search to search the interlinear, you have to use the lemma datatype.\n\nSecond, mixing Hebrew (which is right-to-left) with left-to-right languages, in the same sentence or search string can be a problem, as it gets a bit confusing with your cursor moving in unexpected directions! If you get this problem you may find it easier to enter all your left-to right text first, then go back and add the right-to-left text afterwards.\n\nUsing Boolean Operators\n\nLogos supports the boolean operators AND, OR, and ANDNOT (it doesn’t support NOT however). Operators should always be typed in capital letters.\n\nlove AND neighbor searches for articles that contain both or these words. As noted above, AND is assumed if you don’t specify an operator, so this search is the same as love neighbor.\n\nlove OR neighbor searches for articles that contain either of these words.\n\nlove ANDNOT neighbor searches for articles that contain ‘love’, but do not contain ‘neighbor’. You can also use a minus sign as a shortcut: love -neighbor.\n\nAs noted above, you’re trying to find (or not find) search terms in the same article. In a Bible or Morph search, an article is a single verse. In a Basic search, an article is usually the amount of text that comes under a single heading or sub-heading that shows up in the Table of Contents. For most bibles a Basic Search article is a single chapter, whilst it is a single pericope for the others.\n\nProximity Operators\n\nSometimes you may want more control than AND. Logos also offers proximity operators BEFORE, AFTER, WITHIN xx WORDS, and NEAR. They are mostly self-explanatory and are used like this:\n\nChrist BEFORE Jesus – search for articles (Basic search) or bible verses (Bible search) that contain the word ‘Christ’ before the word ‘Jesus’.\n\nJesus AFTER Christ – a different way of expressing the same search.\n\nJesus BEFORE 2 WORDS Christ – search for articles (Basic search) or bible verses (Bible search) that contain the word ‘Jesus’ one or two words before the word ‘Christ’. It will return “Jesus Christ” (one word before) or “Jesus the Christ” (two words before). It would not return “Jesus is the Christ”, because that is three words before.\n\nChrist AFTER 2 WORDS Jesus – a different way of expressing the same search.\n\nJesus BEFORE 3-5 WORDS Christ – search for articles/verses that contain the word Jesus three, four, or five words before the word Christ. It would find “Jesus was the Christ” (3 words before), and “Jesus who is called Christ” (4 words before), but not “Jesus the Christ” (2 words before). If you want a search for words an EXACT number of words before/after another one, you should do something like this: the BEFORE 2-2 WORDS day, which would find “the first day”, “the last day”, etc., but not “the day” or “the very next day”.\n\nJesus WITHIN 5 WORDS love – searches for the word Jesus within five words of the word ‘love’. In this case it doesn’t matter whether ‘Jesus’ comes after ‘love’, or before ‘love’. All that matters is that there are no more than four words between them (so they are therefore within 5 words).\n\nJesus WITHIN 20 CHARS love – searches for the word Jesus within 20 characters of the word ‘love’. AFTER and BEFORE can also be used with CHARS.\n\nJesus NEAR love – NEAR means “within 48 characters” (which is about 10 words). In Basic Search NEAR also searches nearby footnotes (unlike BEFORE, AFTER or WITHIN).\n\nProximity operators use the same article sizes as boolean operators, above.\n\nThe ANDEQUALS and NOTEQUALS Operators\n\n(or EQUALS and NOT EQUALS).\n\nANDEQUALS and NOTEQUALS (its opposite) are especially useful in Interlinear resources. Suppose you want to do a search for all the times the word λόγος was translated as ‘message’. You would perform a Morph Search for lemma:λόγος EQUALS message (don’t worry about the lemma syntax. That’s explained below). On the other hand, perhaps you want to find all this instances where λόγος was translated as something other than ‘message’. You would perform a Morph Search for lemma:λόγος NOT EQUALS message.\n\nThe ANDEQUALS operator is unlike the AND operator because the match has to be in precisely the same location — the same word in the case of an Interlinear — not just somewhere in the same verse.\n\nPlease note: ANDEQUALS and NOTEQUALS do not work in morphological searches if you use the @ sign. If you are searching for lemmas you may not need to use ANDEQUALS, as you can use the lemma field instead e.g. lemma:γλῶσσα@NGSF. For other searches you can use one of three workarounds:\n\nPlace parentheses around the morph part of the search e.g. instead of @NGSF ANDEQUALS tongue, use (@NGSF) ANDEQUALS tongue\n\nUse WITHIN 0 WORDS e.g. @NGSF WITHIN 0 WORDS tongue.\n\nUse the full morph reference e.g. <LogosMorph = NGSF> ANDEQUALS tongue.\n\nThe WITHIN and INTERSECTS Operators\n\nWITHIN will find an item that is fully contained within another item, where item could be text, Words of Christ, a highlight style, etc. For example <Lemma = lbs/el/κύριος> WITHIN <Person Jesus> will find where “Lord” refers to “Jesus”.\n\nIt is useful in cases where ANDEQUALS may fail or be incomplete (in a reverse interlinear) e.g. lemma:ἀγαπάω WITHIN love.\n\nINTERSECTS will find those parts of an item that overlap another item e.g. use <Person Jesus> INTERSECTS <Place Nazareth> to look for “Jesus of Nazareth”.\n\n<Lemma = lbs/el/κύριος> INTERSECTS <Person Jesus> may give more useful results than WITHIN.\n\nNOT modifier\n\nNOT can be used in conjunction with proximity operators (except NOTEQUALS). For example:\n\nJesus NOT WITHIN 20 CHARS love - searches for the word ‘Jesus’ where the word ‘love’ is either not present or is more than 20 characters away.\n\n<Lemma = lbs/el/κύριος> NOT INTERSECTS <Person Jesus> - will find where “Lord” does not refer to “Jesus” i.e. where it refers to “God” or “master”.\n\nUsing parentheses\n\nSometimes you’ll need to use parentheses to specify the order in which Logos carries out your search. Take the search neighbour OR neighbor AND love. You might think that this would search for articles where the word ‘love’ AND either the words ‘neighbour’ or ‘neighbor’. But Logos (like all search engines) processes AND operators before OR operators (just like most calculators process multiplication/division before addition/subtraction). So first it searches for love and neighbor then it takes that result and searches for neighbour OR[result]. You end up with all the articles that contain ‘love’ and neighbor, combined with every article that contains the word ‘neighbour’. Just like in Math, putting parentheses around your search term forces Logos to evaluate that term first.\n\nIn the example above, we really want to search for love AND (neighbor OR neighbour). This means neighbor OR neighbour is evaluated first, then love AND [result].\n\nYou can nest brackets, as deep as you wish, e.g. ((love AND (neighbor OR neighbour)) OR “golden rule”) OR (love AND God)\n\nUsing lists\n\nLists are a very useful feature which provide shortcuts in a number of searches. A list is written like this: (term1, term2, term3, etc.). When Logos encounters a list, it performs the search using just term1. Then it repeats the search using just term2, then with just term3, etc. Once it has finished, it then ORs the results. Here are some examples:\n\n(Jesus, Christ) is equivalent to Jesus OR Christ\n\n(Jesus, Christ) AND love is equivalent to (Jesus AND love) OR (Christ AND love)\n\nmaster NEAR (love, serve) is equivalent to (master NEAR love) OR (master NEAR serve).\n\nLogos evaluates each combination:\n\nmaster NEAR love\n\nmaster NEAR serve\n\nand then OR’s the results.\n\n(“My God”, “My Lord”) is equivalent to “My God” OR “My Lord”, showing that phrases can be used in a list.\n\nPlease note: Some people get confused as they equate the list with the OR command. They are not the same, even though in a very basic search they will perform in the same way. Remember, Logos iterates through lists, then ORs the results.\n\n(This search produce exactly the same results as the one above, which uses “OR”).\n\nSearching for images\n\nUse Media Search to search for images. It has a drop down list from which you can select different types of images e.g. Maps, Charts, Photos, Site Plans. Complete the search by entering a term in the Find box e.g. Jerusalem, together with checking Maps and Photos.\n\nSearching for Bible Verses and other References\n\nIn basic search, Logos supports searching for many different types of references. A reference is a link from one resource to another. So a commentary, for example, would link to Bible verses, but perhaps also to Josephus or TDNT. You can search for these references, and therefore find every resource that linked to John 3:16, or Volume 5 page 42 of TDNT, etc.\n\nNote: Not all links are references. References are a special kind of link, usually to a commonly-used resource with a standard referencing system. They are normally not links to a specific resource, but could (in theory at least) open in a number of different resources depending on what resource you own, and have prioritised. A link to a Strong’s number, for example, might open in one of several Greek lexicons. If a resource could open with a particular datatype, that datatype will be listed in the Indexes section of the Resource Information panel (there is no official list of datatypes, but users have collected a partial list of datatypes).\n\nThe basic syntax is as follows (the example is for bible verses):\n\n<datatype = value> e.g. <bible = John 3:16>\n\nThere are literally hundreds of datatypes, and the main ones are listed below:\n\nBible Verses: <bible = John 3:16> or <bible = John 3:1-20>\n\nStrong’s Numbers: <GreekStrongs = #1345> or <G1345> or <HebrewStrongs = #3124> or <H3124>\n\nLouw-Nida Domains: <LouwNida = 13.21> or <LN = 13.21> or <LN subset 13-15>\n\nOther resources with books with standard reference systems:\n\nApostolic Fathers: <ApostolicFathers = II Clement 11.2> or <af = II Clement 11.2>\n\nJosephus: <JosephusLoeb = Against Apion 1.34–36>\n\nPseudepigrapha: <Pseudepigrapha = Martyrdom and Ascension of Isaiah 3.21–31>\n\nTDNT: <TheologicalDictionaryNT ~ 5:42> or <TDNT ~5:42>\n\nA very important datatype is Lemma. Trying to create a Lemma search from scratch can be slightly tricky as the syntax is a bit more complicated than some of the others. It looks like this: <Lemma = lbs/el/ἀγάπη>. The lbs is the morphology database (Logos Greek Morphology in this case). The el is the language (Greek). You can achieve the same result with a Morph search more easily (in a morph search the syntax is just lemma:ἀγάπη because the language and morphology database are set with a dropdown menu). You can also create a search by manually finding the word in a morphologically tagged Bible, then right-clicking on it, choosing the Lemma from one side and selecting a Search from the other side.\n\nIf you want to find out the syntax for any of the other datatypes, find a hyperlink to that datatype in your library. For example, if you want to find the Philo datatype, find a resource that links to Philo (it doesn’t matter where in Philo it links to). Right-click on that link, make sure the datatype is selected on the left side, then choose a Search on the other side. A Search window will open with the correct syntax. You can then modify the syntax to search for the exact reference you want.\n\nThere is no official list of datatypes, but users have collected a partial list of datatypes.\n\nUsing Operators with References\n\nWith most datatypes, you can also search for ranges, as the bible example above shows. But if you want more control over the range, you can also change the operator (the equals sign). The following operators are available (listed in order, from the most exact at the top to the broadest at the bottom):\n\nOperator Description Example search John 3:16 John 3:16-17 John 3:17-20 John 3:10-20 John 3:16-4:10 = The exact value <bible = Jn 3:16-17> Yes subset Any reference wholly included in the search value <bible subset Jn 3:16-17> Yes Yes superset Any reference that includes the whole search value <bible superset Jn 3:16-17> Yes Yes Yes ~ An intersection with the search value that doesn’t cross chapter boundaries <bible ~ Jn 3:16-17> Yes Yes Yes Yes intersect Any intersection with the search value <bible intersect Jn 3:16-17> Yes Yes Yes Yes Yes\n\nExamples from the above:\n\n<Bible = John 3:16-17>\n\n<John 3:16-17>\n\n<Bible subset John 3:16-17>\n\n<Bible superset John 3:16-17>\n\nNote that the abbreviation <John 3:16-17> is shorthand for <Bible ~ John 3:16-17>.\n\nShorthand methods for bible datatype references:\n\nYou can leave off the “bible” datatype label in reference search patterns, because it is assumed by default: <= Gen 12:1-20> is equivalent to <bible = Gen 12:1-20>, and <~ Gen 12:1-20> is equivalent to <bible ~ Gen 12:1-20>, etc\n\nYou can leave off the operator, and the tilde operator is assumed: <Gen 12:1-20> is the same as <~ Gen 12:1-20>\n\nYou can leave off the angle brackets in most cases too, and Logos will automatically recognize it as a bible reference and not plain text: Gen 12:1-20 is interpreted as <Gen 12:1-20>\n\nTherefore: <bible ~ Gen 12:1-20>, <~Gen 12:1-20>, <Gen 12:1-20>, and Gen 12:1-20 are all the same search.\n\nFields\n\nMost resources in Logos have several Fields, which are used to classify the text e.g. Surface Text is the visible text, or the actual manuscript text. The ESV Bible has the following fields: Surface Text, Footnote Text, Bible Text, Heading Text, Words of Christ. They are listed in the resource’s Information panel, where they are called Search Fields.\n\nYou can restrict your search to a specific field like this: fieldname:value, where fieldname is derived from the above Search Field names. So if we wanted to search for every time Jesus mentioned fish, we would search for words-of-christ:fish or heading:”Book of Remembrance” (which is a pericope in Bibles). You can also use lists in a field search e.g. words-of-christ:(give, receive).\n\nBut Search fields can be easily accessed from the drop-down menu that normally reads All text or All Bible text. And you can search multiple resources using the same fields.\n\nSearch Options\n\nLimiting your search to part of your library\n\nYou can limit your search to one resource, open resources, a series, or a Collection. Just select from the dropdown menu normally labelled All Resources or All Bibles.\n\nLimiting your search to part of a Book\n\nIn Bible and Basic searches you can limit your search to part of a book. To do so, just type a reference range under All Passages. With the Bible datatype (in Bible Search) you can select a built in range like Old Testament, but you can also create your own. Just type in a reference range e.g. Gen-Deut, Isaiah 1-39, Greek GK 2438-2534, TDNT 5.199-250, G1234-1334 and then click Save. In both types of Search, the drop-down will list the available datatypes, but this will not apply to all resources, so you may not see All Passages in a Basic Search.\n\nSome useful information is stored in footnotes and you can utilize a Basic Search to find it (even in Bibles). This search is performed by utilizing the Search Fields within a resource. Click on All Text (or whatever is showing at the time) and select Footnote Text. Alternatively, you can search with footnote:phrase.\n\nNote that Bible Search will not search for footnotes, since they are not part of the Bible Text.\n\nIf you wish to be specific about bible references, you can use Cross Reference (or crossreference:<1 Jn> for example), but they may not all be in footnotes in non-Bible resources.\n\nSome resources use abbreviations for a class of footnotes e.g. sn, tn in the NET Bible. Familiarise yourself with the resource, which will often explain its footnote convention.\n\nUsing recent searches again\n\nIn the Search toolbar is a small drop-down arrow (you will see Search History on hover). If you click that arrow, you’ll get a list of your most recent searches, which can save a lot of re-typing.\n\nMatching Case or All Word Forms\n\nNormally when you’re searching, you won’t want to match case. You probably will want a search for ‘fish’ to find ‘Fish’ and even ‘FISH’. But if you’re searching for ‘God’ or ‘Spirit’, case might matter. If you want to Match case it’s on the Panel menu in a Search tab. Note: It will stay selected, so make sure you turn it off when you’re done!\n\nMatch All Word Forms is also useful. It means you don’t need to use wildcards every time you want to search for different forms of the same word. The drop-down menu on a search tab allows you to turn Match all word forms on. Logos will then use some built in logic to try and search for all forms of the word. So searching for love, with ‘match all word forms’ turned on will return find love, loved, loves, lovely, loving and love’s. Note that the logic isn’t perfect. In this case, lover wouldn’t be found. If you search needs to be precise, think about using lists, below.\n\nChanging the sort order\n\nIn Basic searches, you can change the sort order between Ranked, By Count and By Resource. Ranked displays those articles which Logos believes are most relevant to the search – that is they contain the highest concentration of search hits. So short articles with lots of hits appear at the top, long articles with few hits at the bottom. By Resource simply shows all the articles in the order they appear, grouped by resource, and with the resources displaying in alphabetical order. By Count shows the results by resource except that books with the most hits appear at the top.\n\nBible Search Analysis\n\nSearch analysis is a very powerful feature that allows you to perform an analysis on your search results. It’s probably most useful in Morph searches, but you can use it on Bible searches too. Your search results are presented in a tabular form. You can choose the columns by right clicking anywhere on the column headings. You can change the order of the columns by dragging them. And you can sort the results by clicking on the column headings.\n\nBut the most useful feature is that you can group your search results. In the screenshot below, the search result on the left is grouped by lemma. To do this, simply drag the Lemma column heading to the space above the headings. You’ll see then that all the results are grouped by lemma, in order of the number of hits. You can collapse any of the lemmas by just click on their separator bars.\n\nYou can use sub-groups as well, just by dragging up more fields. The screenshot on the right is grouped by Lemma and then by bible Book."
    }
}