{
    "id": "dbpedia_6980_3",
    "rank": 68,
    "data": {
        "url": "https://dennisspan.com/managing-windows-languages-and-language-packs/",
        "read_more_link": "",
        "language": "en",
        "title": "Managing Windows Languages and Language Packs",
        "top_image": "https://dennisspan.com/wp-content/uploads/2017/01/cropped-Favicon-32x32.png",
        "meta_img": "https://dennisspan.com/wp-content/uploads/2017/01/cropped-Favicon-32x32.png",
        "images": [
            "https://dennisspan.com/wp-content/themes/twentyeleven/images/headers/shore.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Start-Menu-English-versus-Spanish.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Overview-of-a-couple-of-available-languages-on-the-local-system.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Visual-Studio-MSDN-download-language-packs-for-Windows-10-or-Windows-Server-2016.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Individual-source-files-language-packs.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Visual-Studio-MSDN-download-language-packs-for-Windows-10-or-Windows-Server-2016.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Download-Features-on-Demand.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Download-Features-on-Demand-part-one-and-two.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Overview-of-a-couple-of-available-languages-on-the-local-system.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Start-Menu-Settings-2.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Start-Menu-Settings-Time-and-Language-1.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Start-Menu-Settings-Time-and-Language-Region-and-Language.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Language-pack-available-options.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Downloading-language-pack.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Installing-language-pack.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Settings-select-display-language-1.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Group-Policy-Set-Windows-display-language.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Registry-value-for-preferred-Windows-display-language-1.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Group-Policy-Preference-preferred-Windows-display-language.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Group-Policy-Preference-Apply-once-and-do-not-reapply-1.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Windows-Server-2016-Language-Preference-Apps-move-up-and-down.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Regional-and-Language-switch-language.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Internet-Explorer-Options-Languages.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Internet-Explorer-Options-Languages-Language-Preference.jpg",
            "https://dennisspan.com/wp-content/uploads/2018/08/Managing-Windows-Languages-and-Language-Packs-Language-Preference-registry.jpg",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/102d7e63fe95c798092827d8347c2c32?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/102d7e63fe95c798092827d8347c2c32?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/b10862d3ba70698290ae09305ed62855?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/bacad1b8511ed16d94f2cb6a0c073e48?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/752f5156d3d605927fa331155bc91ec5?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/2281b6b3de6c96f453b38ac3f6fd4a25?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/8c90198fd9cb7d9d9c7adbccb89a7bce?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/6947ce415a95550d5297a556ffb400a8?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/348278d56439b3d5ad97070121e56b7f?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/0954528a16adff22a15890d01f569484?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/f41e285ef56adaa06e4bdfcea790678c?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/8e609b39bfd6d6e99878480e9382ab5c?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/465e45b7e52a26f6475054ace67c4337?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/996b2e7a18e84cac282e490ecfdaa224?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/4f10d2d675d8d7a1fe2f4ae98f258497?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/379430ebac53bf1e7e5e7c7fa27ec593?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ff7283a7467b50ab5c3a63fd6846d476?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ee9c7457e93d493498159ea598ad8037?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ac300bcfbb9f7c9beeb9d59cf18155fe?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/28b3c071969528e12e0d866619f1dd6c?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/74be4297ddf71970a4c8a42ddfd01912?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/3e822b3b06b8ca4db4d21e9214f90a30?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ebc73542ab45c8a67b5595da9d5f6a30?s=39&d=mm&r=g",
            "https://secure.gravatar.com/avatar/3e822b3b06b8ca4db4d21e9214f90a30?s=68&d=mm&r=g",
            "https://dennisspan.com/wp-content/uploads/2017/01/cropped-Favicon.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Dennis Span"
        ],
        "publish_date": "2018-08-30T10:30:21+00:00",
        "summary": "",
        "meta_description": "Managing Windows languages and language packs on Windows 10 and Server 2016 can be a bit of a daunting task. This article aims to clarify most issues.",
        "meta_lang": "en",
        "meta_favicon": "https://dennisspan.com/wp-content/uploads/2017/01/cropped-Favicon-32x32.png",
        "meta_site_name": "",
        "canonical_link": "https://dennisspan.com/managing-windows-languages-and-language-packs/",
        "text": "Managing Windows languages and language packs on Windows 10 and Server 2016 can be a bit of a daunting task. This article aims to clarify most issues.\n\nImportant: as of Windows 10 version 1809, Microsoft changed the way to manage the installation of language packs. Please see Patrick van den Born’s article WVD and VDI automation: Change in language pack installation on Windows 10 1809 and higher for more information.\n\nChange Log\n\n01.09.2018: added information on Features on Demand (languages for handwriting, speech, etc.).\n\n27.12.2018: small error correction in the installation directory of language packs (I wrote %SystemDrive% instead of %SystemRoot%). Added clarification that changing the language for Windows Apps, Edge, and Internet Explorer concerns the language displayed within the application and not the language of the application itself.\n\nTable of Contents\n\nAn introduction to language packs\n\nHow to obtain a language pack (for offline deployment)\n\nWindows Server 2016 Language Pack\n\nWindows 10 version 1803 Language Pack\n\nWindows 10 version 1803 Features on Demand\n\nAdding a language pack to Windows\n\nComplete installation script\n\nHow to change the Windows display language\n\nChange the display language manually (Windows Server 2016)\n\nChange the display language manually (Windows 10)\n\nChange the display language using Microsoft Group Policy\n\nChange the display language using a Group Policy Preference item\n\nUsing a logon script\n\nHow to change the display language for Windows Apps and Store, Edge and Internet Explorer\n\nManually (Windows Server 2016)\n\nManually (Windows 10)\n\nGroup Policy Preference\n\nUsing a logon script\n\nHow to prevent users from changing language settings\n\nHow to change the system code page for non-Unicode programs\n\nAn introduction to language packs\n\nA language pack allows you to display Windows in a different language besides English. All windows and menus are displayed in your local language.\n\nThis is not the same as configuring local settings such as keyboard layout, date, time, and number formatting. You can configure these locale settings without changing the Windows language. See also some of my other articles:\n\nConfiguring Regional Settings and Windows locales with Group Policy\n\nConfiguring the time zone and code page with Group Policy\n\nAs far as I can tell, language packs are available for all editions of Windows 10 and Windows Server 2016. To help you reduce the size of your image, language packs in Windows 10 are split into the following language components and Features On Demand:\n\nLanguage (interface) pack\n\nUI Text (this includes language packs, language interface packs, and WinPE language packs which are all available in one download source)\n\nFeatures on Demand (additional language packs)\n\nBasic (spell check, typing)\n\nFonts\n\nHandwriting (for devices with pen inputs)\n\nOptical character recognition\n\nText-to-speech (required for Cortana)\n\nSpeech (required for Cortana)\n\nRetail Demo experience\n\nReference: Language Packs in Windows 10 (microsoft.com)\n\nA language (interface) pack, named UI Text in the above list, changes the display language for the following components:\n\nThe operating system (all text in windows and menus)\n\nWindows apps and Windows Store\n\nInternet Explorer\n\nEdge (applies to Windows 10 only since Windows Server has no Edge)\n\nWinPE (included in the same download source, but has to be used in a WinPE image)\n\nAdditional language packs, the so-called Features on Demand, are available for example for spelling, handwriting and speech recognition (Cortana), and more. These have to be downloaded separately and are available for Windows 10 only. They are NOT included within the source files of a language pack. More details are provided later on in this section.\n\nBesides language packs for the operating system, Microsoft offers language packs for applications such as Microsoft Office. These have to be downloaded separately. The availability of language packs for third-party software depends on the vendor. Acrobat Reader for example supports more than 30 languages. These are not within the scope of this article. In this article, I only deal with language packs and the Features on Demand.\n\nPlease be aware that the list of available languages can differ for individual components. For example, the available language packs for Windows and Office do not have to match. The same goes for third-party software. When planning your language strategy you should count on the fact that you will not find all languages for all products.\n\nBy default, when you add a language in Windows, only the keyboard layout is added. The actual Windows display language (the language (interface) pack) has to be downloaded separately. The same goes for additional language packs for handwriting, speech, and so forth.\n\nTake a look at the following screenshot. For English and German, the Windows display languages are available (English is currently enabled). For French, however, only the keyboard layout is available, not the Windows display language.\n\nNote: the screenshot above was taken from a Windows Server 2016 version 1607 machine. In Windows 10 version 1803, the menu and windows to manage languages look completely different (see the section Change the display language manually (Windows 10) for more information and screenshots).\n\nMicrosoft separates between a language pack (LP) and a language interface pack (LIP). As per Microsoft, a LIP is a “high-quality, localized “skin” for emerging or minority language markets. […] A LIP provides the desktop user with an approximately 80% localized user experience by translating a reduced set of user interface (UI) elements. A LIP […] has a dependency on a base language pack of Windows.\n\nThe difference between an LP and a LIP is “the level of localization in comparison to language pack (LP) packages: LIP packages provide the desktop user with the most frequently accessed user interface and basic user assistance support (help files). In addition, a LIP is installed as a language add-on on top of an existing LP with base language dependency (Catalan LIP can only be installed on top of the Spanish or French LP, Welsh LIP can only be installed on top of the English LP). In addition, once a LIP is installed, switching the user interface between the LIP language and the LP base language is possible for users on all versions of Windows.\n\nAlso, as per Microsoft, Windows Server and Windows 10 language packs are not interchangeable. Windows Server language packs cannot be used on Windows 10, and Windows 10 language packs cannot be used on Windows Server.\n\nIn total, there are 38 language packs available for Windows 10 and Windows Server 2016. In comparison, for Windows Server 2012 R2, only 18 language packs are available.\n\nIn total, there are 72 language interface packs (LIPs) available for Windows 10. LIPs are not supported on Windows Server. So keep this in mind when you have both notebooks/desktops and for example Microsoft Remote Desktop Services or Citrix Virtual Apps and Desktops (previously known as XenApp or XenDesktop) in your organization. You may not be able to install the same languages on all your workers!\n\nA language pack is installed in the directory %SystemRoot%\\System32\\%Language-ID%, so for example C:\\Windows\\System32\\es-ES. The size of a language pack is about 50 MB. In case you want to install all 38 language packs, you increase the size of your image by about 2 GB. Language interface packs only use up around 10 MB of space. Features on Demand are between 5 and 70 MB in size. Most of them are around 10 to 20 MB though.\n\nFor a complete list of available LPs and LIPs for Windows Server 2012 R2, Windows 10, and Windows Server 2016 see the Microsoft article Available Language Packs for Windows.\n\nHow to obtain a language pack\n\nThere are four ways to get a language (interface) pack and the Features on Demand:\n\nFor offline use:\n\nOEMs and system builders with Microsoft Software License Terms can download language packs and LIPs from the Microsoft OEM site or the OEM Partner Center.\n\nIT professionals can download language packs from the Microsoft Volume Licensing Site.\n\nIT professionals can download language packs from Visual Studio Subscriptions (previously MSDN).\n\nManually:\n\nAfter Windows is installed, end users can download and install additional language packs in Settings > Time & language > Region and language > Add a language (under Options).\n\nReference: Where to get language packs and LIPs (microsoft.com)\n\nIT professionals require the offline installation sources to be able to deploy the language packs using the software deployment tool of their choice (e.g. MDT, SCCM, Citrix App Layering). To download the language packs I used my Visual Studio Subscription (MSDN). Select one of the links below for more details:\n\nWindows Server 2016 Language Pack\n\nWindows 10 version 1803 Language Pack\n\nWindows 10 version 1803 Features on Demand\n\nWindows Server 2016 Language Pack\n\nThe download for Windows Server 2016 Language Pack is a single ISO file (about 2,6 GB in size) that contains all 38 languages. On the Microsoft Volume License Site or on the Microsoft Visual Studio Subscription website, search for language pack and you will find all language packs for all supported operating systems.\n\nTo extract the ISO file, use your favorite file archiving tool (e.g. 7-ZIP).\n\nThe ISO file for Windows Server 2016 contains two root folders:\n\nlangpacks\n\nWindows Preinstallation Environment\n\nThe folder langpacks contains the language packs that need to be installed on Windows. The language files in the folder Windows Preinstallation Environment are used to localize your WinPE image. Within the folder langpacks, each language has its own subfolder.\n\nThese subfolders contain the source files we need for the unattended installation (deployment) of the language packs. The file name for each language pack is:\n\nx64fre_Server_%language%_lp.cab\n\nFor example x64fre_Server_de-de_lp.cab\n\nNote: for past operating systems the name of a language pack file was lp.cab. This name is no longer used for Windows 10 and Windows Server 2016, except for the WinPE language packs.\n\nWindows 10 version 1803 Language Pack\n\nThe language pack for Windows 10 is also a single ISO file, but much larger (more than 7 GB) compared to the one for Windows Server 2016. The reason for this is that the download for Windows 10 includes more source files. Besides the 38 language packs (LPs) also included in the ISO file for Windows Server 2016, the Windows 10 ISO file also includes 72 language interface packs (LIPs) and includes both 32-bit and 64-bit source files.\n\nOn the Microsoft Volume License Site or the Microsoft Visual Studio Subscription website, search for language pack and you will find all language packs for all supported operating systems.\n\nTo extract the ISO file, use your favorite file archiving tool (e.g. 7-ZIP).\n\nThe folder structure for the Windows 10 language packs is slightly different compared to the one for Windows Server 2016:\n\narm64\n\nWindows Preinstallation Environment\n\nx64\n\nx86\n\nEach architecture has its own langpacks folder containing both the language packs and language interface packs. The file name for each language pack is:\n\nMicrosoft-Windows-Client-Language-Pack_%architecture%_%language%.cab\n\nFor example Microsoft-Windows-Client-Language-Pack_x64_de-de.cab\n\nThe file name for each language interface pack is:\n\nMicrosoft-Windows-Client-Language-Interface-Pack_%architecture%_%language%.cab\n\nFor example Microsoft-Windows-Client-Language-Interface-Pack_x64_ca-es.cab\n\nNote: for past operating systems the name of a language pack file was lp.cab. This name is no longer used for Windows 10 and Windows Server 2016, except for the WinPE language packs.\n\nWindows 10 version 1803 Features on Demand\n\nThe Features on Demand consists of two ISO files (between 3,5 and 4,5 GB in size). You can download either the 32-bit or 64-bit source files. For each version of Windows 10, the download consists of two parts (one ISO file per part). The languages for handwriting, speech, etc. are included in Part 1.\n\nOn the Microsoft Volume License Site or the Microsoft Visual Studio Subscription website, search for features on demand and you will find the available downloads for all Windows 10 versions.\n\nTo obtain the language files you only need to download Part 1.\n\nTo extract the ISO file, use your favorite file archiving tool (e.g. 7-ZIP).\n\nWithin the folder structure, you find multiple CAB files that represent a Feature on Demand. The name of the CAB files that contain language-specific features starts with Microsoft-Windows-LanguageFeatures. The following categories exist:\n\nMicrosoft-Windows-LanguageFeatures-Basic…..cab\n\nMicrosoft-Windows-LanguageFeatures-Fonts…..cab\n\nMicrosoft-Windows-LanguageFeatures-Handwriting…..cab\n\nMicrosoft-Windows-LanguageFeatures-OCR…..cab\n\nMicrosoft-Windows-LanguageFeatures-Speech…..cab\n\nMicrosoft-Windows-LanguageFeatures-TextToSpeech…..cab\n\nSelect the feature(s) in the language(s) that you require. The next section explains how to install (add) a language pack to the operating system.\n\nAdding a language pack to Windows\n\nThere are a couple of different ways to install a language (interface) pack:\n\nYou can add a language pack to Windows by using the DISM / Add-WindowsPackage tool. Add-WindowsPackage is the PowerShell equivalent of the DISM executable. How to use DISM / Add-WindowsPackage is described in detail in this article. Just keep on reading. I also recommend you check out the following Microsoft articles on this matter:\n\nAdd and Remove Language Packs on a Running Windows Installation\n\nAdd and Remove Language Packs Offline Using DISM\n\nTo deploy a multilingual version of Windows by using Windows Setup (for example, a corporate image Windows DVD or a set of images available on a corporate network), you can add language resources to the installation program. See Add Multilingual Support to a Windows Distribution. For corporate or network-based deployments, you may also need to update the Windows Preinstallation Environment (Windows PE) that users see when they choose how and where to install Windows to their PC. For more information, see WinPE: Mount and Customize.\n\nAfter Windows is installed, end users can download and install additional language packs and LIPs from the Language Control Panel. For more information, see one of the following sections in this article:\n\nChange the display language manually (Windows Server 2016)\n\nChange the display language manually (Windows 10)\n\nReference: Section Add languages to Windows in the article Language Packs (microsoft.com)\n\nMy preferred silent installation method is to use DISM or the PowerShell equivalent Add-WindowsPackage (used in the installation script below).\n\nThe basic DISM command to install a language pack is:\n\ndism.exe /online /add-package /packagepath:”C:\\LP\\de-de\\x64fre_Server_de-de_lp.cab” /quiet /norestart /logpath:”C:\\Logs\\MUI-de-de.log”\n\nAlso Features on Demand can be installed like that. Take for example the German handwriting package:\n\ndism.exe /online /add-package /packagepath:”C:\\LP\\de-de\\Microsoft-Windows-LanguageFeatures-Handwriting-de-de-Package~31bf3856ad364e35~amd64~~.cab” /quiet /norestart /logpath:”C:\\Logs\\MUI-de-de_Handwriting.log”\n\nNote: the parameter /online refers to the currently active Windows machine, as opposed to “slipstreaming” source files in an offline Windows image file (WIM). The term “online” has nothing to do with being online on the Internet.\n\nOn operating systems from Windows 8.1/Windows Server 2012 R2 and newer with PowerShell 5.0 and higher installed, the cmdlet Add-WindowsPackage can be used instead of using DISM.exe:\n\nAdd-WindowsPackage -Online -PackagePath “C:\\LP\\de-de\\x64fre_Server_de-de_lp.cab” -LogPath “C:\\Logs\\MUI-de-de.log” -NoRestart\n\nPlease be aware that both DISM and the PowerShell equivalent Add-WindowsPackage always generate a log file. If you do not specify a custom log file and log file location, the default log path C:\\Windows\\Logs\\DISM is used.\n\nIn the following section, Complete Installation Script, you find a custom PowerShell script to install language packs including logging and error handling.\n\nComplete installation script\n\nThe script below installs the Windows language pack using my installation template, which includes detailed logging and error handling. Also, the functions used in the scripts require my PowerShell Functions Library to be present on the local system. This means that before you can use the script, you need to copy the PowerShell module file DS_PowerShell_Function_Library.psm1 to the local system first.\n\nIn order to use this script, please follow these steps:\n\nCreate an installation directory on the local computer or on a file share (UNC path). For example C:\\Temp\\Microsoft\\Language Pack Spanish.\n\nCreate a subdirectory called Files.\n\nDownload the language pack to the folder Files in the installation directory. Include the subfolder for the language pack. The structure should be Files\\%LanguagePackDir%, for example, Files\\es-es. The CAB file, in this case for the Spanish language, is located in the directory es-es.\n\nDownload and copy the PowerShell module file DS_PowerShell_Function_Library.psm1 to a directory on your local system.\n\nCopy the complete PowerShell script below to a new PS1 file (e.g. Install_Microsoft_Windows_MUI_Spanish.ps1) and add this file to the root of the installation directory (not in the subdirectory Files).\n\nOptional: modify the location of the log directory and log file name in lines 43 and 44.\n\nEnter the correct path to the PowerShell module file in line 60.\n\nModify the file name in line 70. In case you want to use a different directory name instead of Files, change it in line 71.\n\nExecute the PowerShell script as follows:\n\npowershell.exe -executionpolicy bypass -file “C:\\Temp\\Microsoft\\Language Pack Spanish\\Install_Microsoft_Windows_MUI_Spanish.ps1”\n\nIf you want to go one step further and create an SCCM package as well, please follow the step-by-step explanation in the article Deep dive creating SCCM packages for Citrix.\n\nHow to change the Windows display language\n\nThe Windows display language is configured per user, not per machine. There are a couple of methods to change the display language. You can choose one of the following options:\n\nChange the display language manually (Windows Server 2016)\n\nChange the display language manually (Windows 10)\n\nChange the display language using Microsoft Group Policy\n\nChange the display language using a Group Policy Preference item\n\nMost methods apply to both Windows 10 and Windows Server 2016 unless stated otherwise.\n\nChange the display language manually (Windows Server 2016)\n\nNote: in an enterprise environment, I strongly recommend installing the required language packs unattended during the initial installation. This goes for both client and server operating systems.\n\nTo manually change the Windows display language on a machine with Windows Server 2016 version 1607, go to Control Panel \\ Language. In the menu, the entry Add a language adds the keyboard layout for a particular language. Under Options, you can enable the Windows display language if it has been installed.\n\nChange the display language manually (Windows 10)\n\nIn Windows 10 version 1803, changing languages is handled differently. Go to Settings \\ Time & Language.\n\nOn the left side select Region & Language.\n\nIn this window, you can add a language. After adding a language, Windows checks if there is a language pack available for it. In case a language pack is found, you have the option to download and install it. Click the Options button.\n\nSelect the Download button beneath the language options to start the download.\n\nAfter installing the language pack, Windows will automatically install it.\n\nAfter installing the language pack, a new popup box is available where you can select the preferred Windows display language. As mentioned before, this is for the current user only.\n\nAfter changing the Windows display language you have to sign out (and sign in again) for the changes to apply.\n\nChange the display language using Microsoft Group Policy\n\nThe Windows display language for a specific user or group can be forced by enabling the Group Policy setting Restricts the UI language Windows should use for the selected user in the Group Policy User Configuration \\ Policies \\ Administrative Templates \\ Control Panel \\ Regional and Language Options.\n\nIt is important to be aware that this setting prevents a user from selecting a different display language, even if more languages are installed on the local system. In case you want to be less restrictive towards your users, use a Group Policy Preference item instead of a Group Policy item. How to use a Group Policy Preference item is explained in the section below.\n\nChange the display language using a Group Policy Preference item\n\nIn case you want users to be able to change their Windows display language, you cannot use a Group Policy setting. As mentioned in the previous paragraph, configuring a Group Policy setting to define the user’s display language results in the user not being able to change the Windows language. The solution is to use a Group Policy Preference item instead.\n\nThe preferred Windows display language is stored in the registry value PreferredUILanguages in the registry key HKEY_CURRENT_USER\\Control Panel\\Desktop. The value PreferredUILanguagesPending is only used to store the language that will be active at the next logon in case the user changed it manually and did not sign out yet.\n\nChanging the language in this multi-string registry value accomplishes the same result as when changing the language manually using the GUI. Of course, for everything to work the language pack has to already be installed on the local system.\n\nThis solution applies to both Windows 10 and Windows Server 2016 (and higher).\n\nUsing a Group Policy Preference registry item allows an administrator to configure the preferred Windows display language while still allowing a user to change the language manually.\n\nConfiguring the option “run one time” ensures that the preference item is not enforced at the next logon.\n\nApplying the preference item only once ensures that the display language is never overwritten should the user decide to change it.\n\nUsing Item-level Targeting (ILT) you can assign preferred Windows languages to different users based on several criteria (see the section Configuring regional settings using Group Policy in my article Configure Regional Settings and Windows locales with Group Policy for an example of how to use ILT).\n\nUsing a logon script\n\nAs explained in the previous paragraph, the setting to configure the Windows display language is a registry value. Therefore, it is possible to use a logon script to configure this setting.\n\nIn case you use a PowerShell script I invite you to use my PowerShell Function Library. You can configure the registry value using the function DS_SetRegistryValue.\n\nTo prevent a user from having to sign out to apply the language settings, make sure to run your logon script synchronously. This means that your logon script needs to run before the user’s desktop is started (so before the initial explorer.exe process is started). Enable the Group Policy item Run logon scripts synchronously in the Group Policy Computer or User Configuration \\ Policies \\ Administrative Templates \\ System \\ Scripts.\n\nHow to change the display language for Windows Apps and Store, Edge, and Internet Explorer\n\nAs stated in the introduction of this article, the Windows display language is applied to all Windows components including Windows Apps and Store, Edge, and Internet Explorer. However, it is possible to use a different language for the Windows Apps and Store, Edge, and Internet Explorer.\n\nNote: the language setting I am referring to here is the language used inside a Windows App, Edge, or Internet Explorer, not the menu language of the actual application! For example, when the language of Internet Explorer is set to German and you visit Microsoft.com, the content is displayed in German.\n\nThis is possible by changing the order of the languages. You can choose one of the following options:\n\nManually (Windows Server 2016)\n\nManually (Windows 10)\n\nGroup Policy Preference\n\nMost methods apply to both Windows 10 and Windows Server 2016 unless stated otherwise.\n\nManually (Windows Server 2016)\n\nTo manually change the Windows display language for Windows Apps and Store, Edge, and Internet Explorer, on a machine with Windows Server 2016 version 1607 installed, go to Control Panel \\ Language. In the menu, move the preferred language to the top of the list.\n\nManually (Windows 10)\n\nIn Windows 10 version 1803, changing languages is handled differently. Go to Settings \\ Time & Language \\ Region and Language. Use the arrows to move the preferred language for Windows Apps and Store, Edge, and Internet Explorer to the top of the list.\n\nIt is also possible to change the display language for Windows Apps and Store, Edge, and Internet Explorer from within Internet Explorer. Go to Internet Options and on the tab General go to Languages.\n\nIn the window Language Preference, click on the button Set Language Preferences.\n\nThis will lead you to the Region and Language settings page.\n\nNote: those of you who have experience with older operating systems will quickly realize that Microsoft made some significant changes concerning the language configuration in Internet Explorer.\n\nGroup Policy Preference\n\nAs far as I am aware, no Group Policy setting exists to configure the display language for Windows Apps and Store, Edge, and Internet Explorer. But don’t worry; you can use a Group Policy Preference instead.\n\nThe preferred Windows display language for Windows Apps and Store, Edge, and Internet Explorer is stored in the registry value Languages in the registry key HKEY_CURRENT_USER\\Control Panel\\International\\User Profile.\n\nChanging the order of languages in this multi-string registry value accomplishes the same result as when changing the order using the GUI.\n\nThis solution applies to both Windows 10 and Windows Server 2016 (and higher).\n\nSee the section Change the display language using a Group Policy Preference item in this article for more information on how to configure a preference item.\n\nUsing a logon script\n\nAs explained in the previous paragraph, the setting to configure the display language for Windows Apps and Store, Edge, and Internet Explorer is a registry value. Therefore, it is possible to use a logon script to configure this setting.\n\nIn case you use a PowerShell script I invite you to use my PowerShell Function Library. You can configure the registry value using the function DS_SetRegistryValue.\n\nTo prevent a user from having to sign out to apply the language settings, make sure to run your logon script synchronously. This means that your logon script needs to run before the user’s desktop is started (so before the initial explorer.exe process is started). To accomplish this, enable the Group Policy item Run logon scripts synchronously in the Group Policy Computer or User Configuration \\ Policies \\ Administrative Templates \\ System \\ Scripts.\n\nHow to prevent users from changing language settings\n\nBy configuring the Windows display language using a Group Policy, you prevent a user from changing the language, at least until the next Group Policy refresh cycle (this will likely be every 30 to 90 minutes in most organizations).\n\nIn case this is not enough and you want to prevent users from changing language settings in any of the menus, the following policies are available:\n\nUser Configuration \\ Policies \\ Administrative Templates \\ Control Panel \\ Regional and Language Options\n\nSetting: Hide the select language group options\n\nUser Configuration \\ Policies \\ Administrative Templates \\ Windows Components \\ Internet Explorer \\ Internet Control Panel\n\nSetting: Disable the general page\n\nUser Configuration \\ Policies \\ Administrative Templates \\ Windows Components \\ Internet Explorer\n\nSetting: Disable changing language setting\n\nPlease be aware that configuring the above settings does not prevent the user from changing these settings programmatically or by using tools such as regedit.exe. After all, language settings are user-specific settings and by default, users have permission to change their own user-specific settings.\n\nHow to change the system code page for non-Unicode programs\n\nA Windows language (interface) pack does not modify the system-specific code page for non-Unicode programs. Please see the article Configuring the time zone and code page with Group Policy for detailed information on how to change the system’s code page.\n\nConclusion\n\nI honestly thought that writing this article would be simpler and less time-consuming. There are still some smaller open issues I am working on and I will update this article when I am done. In the meantime, I hope the information in this article was of some help to you."
    }
}