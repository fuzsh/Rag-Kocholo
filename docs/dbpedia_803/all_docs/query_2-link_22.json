{
    "id": "dbpedia_803_2",
    "rank": 22,
    "data": {
        "url": "https://www.instructables.com/Automated-Newtons-Cradle-1/",
        "read_more_link": "",
        "language": "en",
        "title": "Automated Newton's Cradle",
        "top_image": "https://content.instructables.com/FRE/3EQ6/IY4Q60BU/FRE3EQ6IY4Q60BU.jpg?auto=webp&frame=1",
        "meta_img": "https://content.instructables.com/FRE/3EQ6/IY4Q60BU/FRE3EQ6IY4Q60BU.jpg?auto=webp&frame=1",
        "images": [
            "https://www.instructables.com/assets/img/instructables-logo-2023.svg",
            "https://www.instructables.com/assets/img/license/by-nc-sa_small.png",
            "https://content.instructables.com/F0T/H8TG/GKS0W1PR/F0TH8TGGKS0W1PR.jpg?auto=webp&crop=1%3A1&frame=1&width=130",
            "https://content.instructables.com/F0T/H8TG/GKS0W1PR/F0TH8TGGKS0W1PR.jpg?auto=webp&crop=1%3A1&frame=1&width=130",
            "https://content.instructables.com/FAT/X5H3/LQ0XCIWS/FATX5H3LQ0XCIWS.jpg?auto=webp&crop=1%3A1&frame=1&width=130",
            "https://content.instructables.com/FAT/X5H3/LQ0XCIWS/FATX5H3LQ0XCIWS.jpg?auto=webp&crop=1%3A1&frame=1&width=130",
            "https://content.instructables.com/FM1/9C3L/L4CQY0A1/FM19C3LL4CQY0A1.png?auto=webp&crop=1%3A1&frame=1&width=130",
            "https://content.instructables.com/FM1/9C3L/L4CQY0A1/FM19C3LL4CQY0A1.png?auto=webp&crop=1%3A1&frame=1&width=130",
            "https://content.instructables.com/FBP/70ZQ/KZSFC4A4/FBP70ZQKZSFC4A4.jpg?auto=webp&crop=1%3A1&frame=1&width=130",
            "https://content.instructables.com/FBP/70ZQ/KZSFC4A4/FBP70ZQKZSFC4A4.jpg?auto=webp&crop=1%3A1&frame=1&width=130",
            "https://content.instructables.com/FU6/K91W/IY4Q5X7S/FU6K91WIY4Q5X7S.jpg?auto=webp&fit=bounds&frame=1&height=1024&width=1024auto=webp&frame=1&height=300",
            "https://content.instructables.com/FQT/TIUW/IY4Q5X84/FQTTIUWIY4Q5X84.jpg?auto=webp&fit=bounds&frame=1&height=1024&width=1024auto=webp&frame=1&height=300",
            "https://content.instructables.com/FKJ/CD4L/IY4Q5X8P/FKJCD4LIY4Q5X8P.jpg?auto=webp&fit=bounds&frame=1&height=1024&width=1024auto=webp&frame=1&height=300",
            "https://content.instructables.com/FN2/3967/IY4Q5X7P/FN23967IY4Q5X7P.jpg?auto=webp&fit=bounds&frame=1&height=1024&width=1024auto=webp&frame=1&height=300",
            "https://content.instructables.com/FF2/4FB0/IY4Q5X7Y/FF24FB0IY4Q5X7Y.jpg?auto=webp&fit=bounds&frame=1&height=1024&width=1024auto=webp&frame=1&height=300",
            "https://content.instructables.com/FEO/J1RT/IY4Q5X9Q/FEOJ1RTIY4Q5X9Q.jpg?auto=webp&fit=bounds&frame=1&height=1024&width=1024auto=webp&frame=1&height=300",
            "https://content.instructables.com/FG3/HWUM/IY4Q6063/FG3HWUMIY4Q6063.jpg?auto=webp&fit=bounds&frame=1&height=1024&width=1024auto=webp&frame=1&height=300",
            "https://content.instructables.com/FGJ/SLHA/M010B82Q/FGJSLHAM010B82Q.png?auto=webp&crop=1.2%3A1&frame=1&width=306",
            "https://content.instructables.com/FGJ/SLHA/M010B82Q/FGJSLHAM010B82Q.png?auto=webp&crop=1.2%3A1&frame=1&width=306",
            "https://content.instructables.com/FKY/4AXX/LZMPWKVN/FKY4AXXLZMPWKVN.jpg?auto=webp&crop=1.2%3A1&frame=1&width=306",
            "https://content.instructables.com/FKY/4AXX/LZMPWKVN/FKY4AXXLZMPWKVN.jpg?auto=webp&crop=1.2%3A1&frame=1&width=306",
            "https://content.instructables.com/F31/503X/LY4F6X7A/F31503XLY4F6X7A.png?auto=webp&crop=1.2%3A1&frame=1&width=306",
            "https://content.instructables.com/F31/503X/LY4F6X7A/F31503XLY4F6X7A.png?auto=webp&crop=1.2%3A1&frame=1&width=306",
            "https://content.instructables.com/FKW/KF0I/LZIFL01X/FKWKF0ILZIFL01X.jpg?auto=webp&crop=1.2%3A1&frame=1&width=306",
            "https://content.instructables.com/FKW/KF0I/LZIFL01X/FKWKF0ILZIFL01X.jpg?auto=webp&crop=1.2%3A1&frame=1&width=306",
            "https://content.instructables.com/F0P/EWRI/LZVJW1CA/F0PEWRILZVJW1CA.jpg?auto=webp&crop=1240%2C600&fit=bounds&frame=1&height=620&width=620",
            "https://content.instructables.com/F0P/EWRI/LZVJW1CA/F0PEWRILZVJW1CA.jpg?auto=webp&crop=1240%2C600&fit=bounds&frame=1&height=620&width=620",
            "https://content.instructables.com/FCA/3VGX/LYHJZS5E/FCA3VGXLYHJZS5E.jpg?auto=webp&crop=1240%2C600&fit=bounds&frame=1&height=620&width=620",
            "https://content.instructables.com/FCA/3VGX/LYHJZS5E/FCA3VGXLYHJZS5E.jpg?auto=webp&crop=1240%2C600&fit=bounds&frame=1&height=620&width=620",
            "https://content.instructables.com/F6K/D4XP/LYEF8Y3Q/F6KD4XPLYEF8Y3Q.jpg?auto=webp&crop=1240%2C600&fit=bounds&frame=1&height=620&width=620",
            "https://content.instructables.com/F6K/D4XP/LYEF8Y3Q/F6KD4XPLYEF8Y3Q.jpg?auto=webp&crop=1240%2C600&fit=bounds&frame=1&height=620&width=620",
            "https://www.instructables.com/assets/img/footer/autodesk-logo-primary-white.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Instructables",
            "More About JimRD »"
        ],
        "publish_date": "2017-01-19T00:00:00",
        "summary": "",
        "meta_description": "Automated Newton's Cradle: This is my third effort to automate a Newton's Cradle, the first using a motor and custom built Newton's Cradle, the second using a custom built robot to pull the ball back and finally this one that uses an Arduino Nano, two servos and a magnet to p…",
        "meta_lang": "en",
        "meta_favicon": "/assets/img/siteassets/favicon.ico",
        "meta_site_name": "Instructables",
        "canonical_link": "https://www.instructables.com/Automated-Newtons-Cradle-1/",
        "text": "This is my third effort to automate a Newton's Cradle, the first using a motor and custom built Newton's Cradle, the second using a custom built robot to pull the ball back and finally this one that uses an Arduino Nano, two servos and a magnet to pull the ball(s) back. This one is definitely the most interesting because it can pull one ball back, or two or three. Pulling multiple balls back also introduces a random element in how the balls will be released and therefore how they will \"bounce\" off one another. Most definitely another useless toy but love to automate these kinds of toys.\n\nAssuming someone else would like to build one, the required parts are:\n\nArduino Uno or Nano\n\n6 volt battery pack to power servos\n\n9 volt to power Arduino\n\ntwo micro servos\n\none magnet\n\nsome wood or fishing pole sections for servo arms\n\none piece of material to separate magnet from balls\n\nhot glue and zip ties\n\nFor the main arm I bolted a section of fishing pole to the servo arm. At the end of the arm I hotglued a magnet and a piece of foam onto the magnet. The foam keeps the magnet away from the steel ball enough that it can let loose if pulled back far enough. Without the padding of the foam, the ball will never let loose of the magnet. You just have to experiment with the padding to see how thick it should be. I then cut a piece of plywood to hold the servo, drilled a couple of holes, mounted it to the frame with zip ties. Then zip tile the main arm servo to the plywood mount and use hot glue to keep it all from moving around.\n\nThe small arm's purpose is to stop the balls from swinging. It is not really necessary but without it the balls will swing and affect how they bounce or you have to wait until they stop swinging before releasing the ball. I just zip tied and hot glued the servo to the frame. I made a ball stopper arm with a couple of pieces of fishing pole glued together.\n\nThat is all the fabrication that needs to be done. The rest is just wiring up the Nano, servos and power.\n\nHere is the simple sketch to run the Nano. myServo is used to be able to slow the servo speed down. This is a very useful subroutine anytime you need to control the speed of a servo.\n\n#include <Servo.h>\n\nServo myservoLeft,myservoRight, myservoCenter,myservoWeight; // create servo object to control a servo\n\nvoid myServo(int newAngle,int angleInc,int incDelay,int servoNum) {\n\nint curAngle;\n\nif (servoNum== 1) { curAngle = myservoLeft.read(); }\n\nif (servoNum== 2) { curAngle = myservoRight.read(); }\n\nif (servoNum== 3) { curAngle = myservoCenter.read(); }\n\nif (servoNum== 4) { curAngle = myservoWeight.read(); }\n\nif (curAngle < newAngle) {\n\nfor(int angle=curAngle;angle < newAngle;angle += angleInc) {\n\nif (servoNum == 1) myservoLeft.write(angle);\n\nif (servoNum == 2) myservoRight.write(angle);\n\nif (servoNum == 3) myservoCenter.write(angle);\n\nif (servoNum == 4) myservoWeight.write(angle);\n\ndelay(incDelay); }\n\n}\n\nelse if (curAngle > newAngle) {\n\nfor(int angle=curAngle;angle > newAngle;angle -= angleInc) {\n\nif (servoNum == 1) myservoLeft.write(angle);\n\nif (servoNum == 2) myservoRight.write(angle);\n\nif (servoNum == 3) myservoCenter.write(angle);\n\nif (servoNum == 4) myservoWeight.write(angle);\n\ndelay(incDelay); }\n\n}\n\n}\n\nvoid singleBall() {\n\nmyServo(30,1,5,1); //open ball stopper\n\ndelay(100);\n\nmyServo(150,1,25,3); // pull ball back\n\ndelay(8000);\n\nmyServo(95,1,5,3); // down to get ball\n\ndelay(100);\n\nmyServo(134,1,10,1); // stop balls swinging\n\ndelay(3000);\n\n}\n\nvoid doubleBall() {\n\nmyServo(30,1,5,1); //open ball stopper\n\ndelay(100);\n\nmyServo(150,1,30,3);\n\ndelay(9000);\n\nmyServo(85,1,5,3);\n\ndelay(1000);\n\nmyServo(129,1,10,1); // stop balls swinging\n\ndelay(3000);\n\n}\n\nvoid setup()\n\n{\n\nSerial.begin(9600);\n\ndelay(100);\n\nmyservoCenter.attach(3); // attaches the servo on pin 9 to the servo object\n\nmyservoCenter.write(90);\n\nmyservoLeft.attach(4); // attaches the servo on pin 9 to the servo object\n\nmyservoLeft.write(90);\n\ndelay(50); // waits for the servo to get there\n\n}\n\nvoid loop() {\n\n//doubleBall();\n\nsingleBall();\n\n//}\n\n// delay(1000);\n\n// exit(0); //pause program - hit reset to continue\n\n}"
    }
}