Oracle today announced plans for Oracle Code Assist, an AI code companion, to help developers boost velocity and enhance code consistency. Powered by large language models (LLMs) running on Oracle Cloud Infrastructure (OCI) and optimized for Java, SQL, and application development on OCI, Oracle Code Assist is planned to provide developers with context-specific suggestions that can be tailored to an organization’s best practices and codebases. Oracle Code Assist will also be designed to be used to update, upgrade, and refactor code written in most modern programming languages.

AI-powered software development has revolutionized how software is conceptualized, created, tested, and managed. With AI-assisted tools, developers can explore new ideas and receive intelligent suggestions for new, upgraded, or refactored code. Moreover, routine tasks can be automated, making AI tools an integral part of every software development life cycle (SDLC) stage. Oracle Code Assist is expected to be a prime example of this, addressing each step in the SDLC by providing code snippets, dependency analysis, error mitigation alternatives, test cases, annotation, summarization, and documentation. Deployed as a development environment plugin for JetBrains IntelliJ IDEA or Microsoft Visual Studio Code, Oracle Code Assist is planned to be specifically trained to provide expert, opinionated feedback to help developers build, optimize, and upgrade applications wherever they are run.

“Developers will be able to use Oracle Code Assist to quickly upgrade entire Java applications to newer versions. This ability to rapidly upgrade Java using a coding assistant significantly increases the ability of enterprises to improve application resilience and performance, incorporate the latest JDK features and bolster their security posture,” said Arnal Dayaratna research vice president, IDC. “Oracle Code Assist can also accelerate database upgrades with respect to the refactoring and testing of complex and often customized PL/SQL code, which can be time-consuming and quite expensive. Given the ubiquity of Java and databases in the enterprise, Oracle Code Assist is likely to achieve widespread adoption by prominent organizations globally.”

Oracle is the steward and main developer of the Java platform and a pioneer in the relational database industry. Oracle Code Assist is trained on a broad repository of software developed over many years of application and software development. By fine-tuning with OCI’s service APIs, coding patterns, and Oracle’s own software development best practices from Java, SQL, OCI, and additional ones like NetSuite’s SuiteScript, Oracle Code Assist is expected to be ideally equipped to serve organizations no matter where their software and applications are deployed.

“Custom applications are the method by which every organization differentiates itself globally, but building, deploying, and maintaining applications is labor and time intensive,” said Aanand Krishnan, vice president, product management, Oracle Cloud Infrastructure. “Organizations leveraging Oracle Code Assist can help developers increase velocity and code consistency to improve the long-term maintenance of applications in a safe, rigorous, and compliant manner.”

Oracle Code Assist is planned to help developers boost velocity with:

Code Generation: Provides code suggestions based on learned context and patterns and generates entire class files, methods, or lines of code. Developers can then accept, modify, or reject the code snippet, reduce the time spent writing boilerplate code, and build applications faster.

Code Annotation: Generates application programming interface (API) documentation or comments to describe code functionality. This helps developers with the application’s lifelong maintenance.

Code Explainability: Provides a plain language summary of the code. This helps developers tasked with reviewing or refactoring existing code and saves time by providing precise and easy-to-understand context.

Faster Code Reviews: Initiates a pull request to merge changes into a repository after writing code reviews and recommends code changes based on performance, quality, efficiency, and styling guidelines. This helps developers deliver higher-quality code.

Test Coverage Generation: Creates unit and functional tests based on the context of the code. This helps developers improve test quality with better test coverage spanning a greater variety of test inputs.

Oracle Code Assist is also expected to help developers enhance code consistency and optimization with:

Tailored Suggestions: Incorporates an organization’s coding frameworks, internal libraries, best practices, and industry-specific standards to generate organization-specific code. This helps developers with code reviews, updates, and integration into existing codebases.

Code Origination Context: Filters the code it generates to ensure it is not sourced from non-permissive licenses. This helps developers address compliance risks.

Automated Language Upgrades: Converts and updates existing code into the current language version using newer libraries. This helps developers improve an application’s performance and quality by leveraging the latest features of the language or framework used.

Code Analysis: Identifies bugs and inefficiencies and produces opinionated code based on an organization’s software development practices. This helps developers deliver more rigorous code that is consistent with their proprietary codebase.

OCI Optimization Suggestions: Incorporates suggestions from OCI service APIs, coding patterns, and best practices to help enable applications to run best on OCI. This helps developers maximize utility and boost the efficiency of applications that run on OCI and use OCI services.

Developers working at Oracle are actively using Oracle Code Assist today to build new Oracle products and services. It is planned to become available to Oracle customers in the future.

Join DevLive: Build with Data and AI on May 9, 2024, at Convene New York City to see Oracle Code Assist in action. Register today for the free event here.

Additional Resources