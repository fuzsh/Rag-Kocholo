{
    "id": "wrong_mix_range_subsidiary_00137_2",
    "rank": 45,
    "data": {
        "url": "https://www.openlogic.com/blog/java-experts-openjdk-vs-oracle-jdk",
        "read_more_link": "",
        "language": "en",
        "title": "OpenJDK vs. Oracle JDK (Oracle Java)",
        "top_image": "https://www.openlogic.com/sites/default/files/styles/social_preview_image/public/image/2021-01/image-blog-openlogic-openjdk-vs-oracle-jdk.png?itok=7s3WBXlH",
        "meta_img": "https://www.openlogic.com/sites/default/files/styles/social_preview_image/public/image/2021-01/image-blog-openlogic-openjdk-vs-oracle-jdk.png?itok=7s3WBXlH",
        "images": [
            "https://www.openlogic.com/sites/default/themes/custom/openlogic/logo.svg?v=1.2",
            "https://www.openlogic.com/sites/default/files/styles/teaser_image/public/image/2024-05/image-ol-centos-eol-2024.jpg?itok=wyY_XXa3",
            "https://www.openlogic.com/sites/default/files/image/2021-01/image-blog-openlogic-openjdk-vs-oracle-jdk.png",
            "https://www.openlogic.com/sites/openlogic/files/image/2019-07/expert1_0.jpg",
            "https://www.openlogic.com/sites/openlogic/files/image/2019-07/expert2_1.png",
            "https://www.openlogic.com/sites/openlogic/files/image/2019-07/expert4_1.jpg",
            "https://www.openlogic.com/sites/openlogic/files/image/2019-07/expert5_0.jpg",
            "https://www.openlogic.com/sites/openlogic/files/image/2020-01/Screen%20Shot%202020-01-16%20at%201.19.50%20PM.jpg",
            "https://www.openlogic.com/sites/default/themes/custom/openlogic/logo.svg?v=1.2"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2020-01-28T08:56:46-06:00",
        "summary": "",
        "meta_description": "OpenJDK vs. Oracle JDK comes down to licensing. Oracle Java, or Oracle JDK, is commercially licensed and OpenJDK is open source. Find out which one is better.",
        "meta_lang": "en",
        "meta_favicon": "/sites/openlogic/themes/custom/openlogic/images/favicons/favicon-16px.ico",
        "meta_site_name": "OpenLogic by Perforce",
        "canonical_link": "https://www.openlogic.com/blog/java-experts-openjdk-vs-oracle-jdk",
        "text": "Should you use the latest OpenJDK or Oracle JDK? Here, we compare OpenJDK vs. Oracle JDK and share the biggest difference between OpenJDK vs. Oracle JDK.\n\nRead along or jump to the section that interests you most:\n\nBack to top\n\nWhat Is Oracle Java (also known as Oracle JDK)?\n\nWhen Oracle acquired Sun Microsystems in 2009, they also acquired the licensing rights to Java, a set of computer software and specifications developed by Sun Microsystems. Java became Oracle Java, also know as Oracle JDK.\n\nInitially, Java licenses were free, but in 2019, Oracle announced that they would start charging for Java SE 8 licenses and users would need to pay for commercial subscriptions to get updates and access to support. That's why many began switching from Oracle JDK to OpenJDK, which is free.\n\nBack to top\n\nWhat Is the Difference Between OpenJDK vs. Oracle JDK?\n\nThe biggest difference between OpenJDK and Oracle JDK is that OpenJDK is open source Java with a GNU General Public License and Oracle JDK requires a commercial license under Oracle Binary Code License Agreement. This results in support and cost differences. In terms of build, OpenJDK and Oracle JDK are identical.\n\nSince January 2019, businesses now need to purchase a commercial license (from Oracle) in order to receive software updates. Further details are available at the Oracle Java SE Support Roadmap page.\n\nBack to top\n\nIs OpenJDK the Same As Oracle JDK?\n\nOpenJDK has the same code as OracleJDK, depending on what provider you're using. The key difference (as stated above) is that OpenJDK is an open source java development kit, whereas Oracle JDK is closed source.\n\nTo help understand the differences between the two, we reached out to Java experts to get their thoughts. Here’s the questions we posed to each expert:\n\nWhat would you recommend to companies with production software running on Java SE 8, who have not yet purchased subscriptions?\n\nWhat are the pros and cons of using OpenJDK vs. Oracle JDK?\n\nBack to top\n\nWhat About OpenJDK vs. Oracle JDK Performance?\n\nOracle JDK performance used to be better than OpenJDK, but that is changing. OpenJDK's performance is continually improving. The OpenJDK builds are becoming more stable with the contributions of the OpenJDK community. And when combined with enterprise support, OpenJDK performance is top-notch.\n\nBack to top\n\nCan I Use OpenJDK For Commercial?\n\nYou can use OpenJDK for commercial software projects. OpenJDK can be a good replacement for Oracle JDK in this respect.\n\nBack to top\n\nForrester Report: Weigh Your Options For Java Support\n\nStuck deciding between OpenJDK and Oracle JDK? Get guidance in this Forrester report.\n\nDownload Forrester Report\n\nBack to top\n\nOpenJDK vs. Oracle JDK: Other Considerations\n\nBelow are expert recommendations for companies with production software running on Java SE 8, who have not yet purchased subscriptions.\n\nConsider the Costs of Your Oracle JDK\n\nJava expert, Dr. Heinz M. Kabutz said, “I would recommend that they move over to OpenJDK 11 as soon as possible. If they have to stay with Java SE 8, then I would evaluate which company offers the best value for the money”.\n\n“Either go or get off the pot. Oracle JDK 8 has received what will likely be the last free update and Java 11 was never free so make a plan before you get backed into a corner. OpenJDK is 99% the same code as Oracle JDK (depending on what provider you're getting it from) so what this really boils down to is support.”\n\nConsider Your Java Support Needs\n\nBrad Wood, architect and developer prompts an important question to consider, “If a CVE comes out tomorrow, how soon do you want to be guaranteed a have a patch available? We just saw this play out a couple weeks ago when providers such as AdoptOpenJDK had builds of OpenJDK 8u202 within days of Oracle's release. That sort of turnaround is fine for most companies and if you want a warm fuzzy feeling of paying someone to promise they get builds to you quickly, there are companies such as Azul charging a lot less for their OpenJDK support than Oracle is”.\n\nImportance of Choosing OpenJDK Now\n\nGiorgos Gaganis, software engineer, speaks of the urgency to migrate: “For companies that are currently evaluating getting subscriptions vs. migrating to newer versions, my recommendation is to also take into account in their analysis the cost of lost opportunity. The more it is postponed, the more difficult it becomes to adopt the latest version. This is important as we are seeing a lot of innovation coming.”\n\nJustin Reock, chief architect, makes his case for migrating: “Begin planning for a move to a GPL variant of Java today. Not just to avoid exorbitant costs from Oracle, but to free yourself from the grip of a software company who is advertising through this change that they can assert real, financial control of your infrastructure. If Oracle is brazening enough to have taken this step now, what might they believe they can get away with later down the road?\n\nA move to OpenJDK or another variant is in most cases an apples-to-apples migration. If you have modernized your SDLC and established process and infrastructure for effective CI/CD, this really shouldn’t look much different to you than a normal release. Regression testing should be performed, but the migration itself takes only a few steps.\n\nMore complex or niche builds may require some code refactor depending on your design principles, but for the most part the runtime environment is similar enough that you won’t notice a difference. A healthy migration strategy should always start with a thorough inventory and risk analysis, and your upgrade roadmap will become clearer after performing that diligence.”\n\nBack to top\n\nFinal Thoughts on Oracle JDK and OpenJDK\n\nOpenJDK is modifiable and you can contribute to and improve it. If Oracle continues to isolate itself from open software communities, OpenJDK could fork into a project similar to Kotlin, and we might even see the bulk of the innovative work move into that project and away from Oracle altogether.\n\nLooking to get started with OpenJDK? OpenLogic by Perforce provides OpenJDK support.\n\nConsult one of our OpenJDK experts. We can help you migrate from Oracle JDK to OpenJDK. And we can support you along your OpenJDK journey, with better support than Oracle and a better ROI.\n\nTalk to a Java Expert\n\nAbout the Experts Interviewed\n\nStephen Colebourne: Creator, Joda projects\n\nStephen Colebourne (@jodastephen) is the creator of Joda projects.\n\nDr. Heinz M. Kabutz from JavaSpecialists.eu\n\nDr. Heinz Kabutz (@heinzkabutz) is a Java expert with JavaSpecialists.eu.\n\nBrad Wood, lead architect and developer advocate\n\nBrad Wood (@bdw429s) is Lead Architect and Developer Advocate at Ortus Solutions, Corp.\n\nGiorgos Gaganis: software engineer, blogger\n\nGiorgos Gaganis (@ggaganis) is a software engineer and blogger who’s based in Greece.\n\nJustin Reock: Chief Architect at OpenLogic\n\nJustin Reock (@jreock) is a free software evangelist and the Chief Architect for OpenLogic. He resides in Asheville, NC.\n\nBack to top"
    }
}