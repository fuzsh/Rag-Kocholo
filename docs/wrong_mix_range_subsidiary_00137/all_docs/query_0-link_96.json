{
    "id": "wrong_mix_range_subsidiary_00137_0",
    "rank": 96,
    "data": {
        "url": "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adqprefa.htm",
        "read_more_link": "",
        "language": "en",
        "title": "Preface",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/prodicon.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/bookicon.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/conticon.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/indxicon.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/larrow.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/rarrow.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81021.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81025.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81025.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81032.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81028.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81022.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81027.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81023.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81024.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81027.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81030.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81031.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81029.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81026.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq81002.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adq026_o.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adqpre17.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adqpre18.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/appdev.816/a76938/adqpre19.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/larrow.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/rarrow.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/oracle.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/prodicon.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/bookicon.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/conticon.gif",
            "https://docs.oracle.com/cd/A83908_02/NT816EE/DOC/dcommon/gifs/indxicon.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "This Guide describes features of application development on the Oracle Server having to do with Oracle Advanced Queuing, Release 8.1.5. Information in this Guide applies to versions of the Oracle Server that run on all platforms, and does not include system-specific information.\n\nThe Preface includes the following sections:\n\nInformation in This Guide\n\nFeature Coverage and Availability\n\nNew Features Introduced with Oracle 8.1\n\nOther Guides\n\nHow This Book Is Organized\n\nYour Comments Are Welcome\n\nInformation in This Guide\n\nOracle Advanced Queueing (Oracle AQ) provides message queuing as an integrated part of the Oracle server. Oracle AQ provides this functionality by integrating the queuing system with the database, thereby creating a message-enabled database. By providing an integrated solution Oracle AQ frees application developers to devote their efforts to their specific business logic rather than having to construct a messaging infrastructure.\n\nThe Oracle8i Application Developer's Guide - Advanced Queuing is intended for programmers developing new applications that use Oracle Advanced Queuing, as well as those who have already implemented this technology and now wish to take advantage of new features.\n\nThe increasing importance of Oracle AQ has led to its being presented as an independent volume within the Oracle Application Developers documentation set.\n\nFeature Coverage and Availability\n\nFor information about the differences between Oracle8 and the Oracle8 Enterprise Edition and the features and options that are available to you, see Getting to Know Oracle8i.\n\nNew Features Introduced with Oracle 8.1\n\nQueue Level Access Control\n\nNon-Persistent Queues\n\nSupport for OPS Environments\n\nRule-based Subscribers for Publish/Subscribe\n\nAsynchronous Notification\n\nSender Identification\n\nListen Capability (Wait on Multiple Queues)\n\nPropagation of Messages with LOBs\n\nEnhanced Propagation Scheduling Capabilities\n\nDequeue Message Header Only With No Payload\n\nSupport for Statistics Views\n\nJava API\n\nSeparate storage of history management information\n\nFor more information about Oracle AQ features, see:\n\nChapter 8, \"A Sample Application Using AQ\"\n\nOther Guides\n\nUse the PL/SQL User's Guide and Reference to learn PL/SQL and to get a complete description of this high-level programming language, which is Oracle Corporation's procedural extension to SQL.\n\nThe Oracle Call Interface (OCI) is described in:\n\nOracle Call Interface Programmer's Guide\n\nYou can use the OCI to build third-generation language (3GL) applications that access the Oracle Server.\n\nOracle Corporation also provides the Pro* series of precompilers, which allow you to embed SQL and PL/SQL in your application programs. If you write 3GL application programs in Ada, C, C++, COBOL, or FORTRAN that incorporate embedded SQL, refer to the corresponding precompiler manual. For example, if you program in C or C++, refer to the Pro*C/C++ Precompiler Programmer's Guide.\n\nFor SQL information, see the Oracle8i SQL Reference and Oracle8i Administrator's Guide. For basic Oracle concepts, see Oracle8i Concepts.\n\nHow This Book Is Organized\n\nThe Application Developer's Guide - Advanced Queuing contains the following chapters and appendices:\n\nChapter 1, \"What is Oracle Advanced Queuing?\"\n\nThis chapter describes the requirements for optimal messaging systems. Although Oracle AQ is a relatively new technology, and not all these goals have been realized, you can get an overview of the design and a clear idea of the intended direction.\n\nChapter 2, \"Basic Components\"\n\nThis chapter describes features already present in Oracle AQ under three headings: General Features, Enqueue Features, and Dequeue Features.\n\nChapter 3, \"AQ Programmatic Environments\"\n\nThis chapter describes the elements you need to work with and issues you will want to take into consideration in preparing your AQ application environment.\n\nChapter 4, \"Managing AQ\"\n\nThis chapter discusses issues related to managing Advanced Queuing such as migrating queue tables (import-export), security, enterprise manager support, protocols, sample dba actions as preparation for working with AQ, and current restrictions.\n\nChapter 5, \"Advanced Topics\"\n\nThis chapter discusses advanced topics.\n\nChapter 6, \"Frequently Asked Questions\"\n\nFrequently asked questions are answered here.\n\nChapter 7, \"Modeling and Design\"\n\nThis chapter covers the fundamentals of Advanced Queueing modeling and design.\n\nChapter 8, \"A Sample Application Using AQ\"\n\nThis chapter considers the features of Oracle Advanced Queuing in the context of a sample application.\n\nChapter 9, \"Administrative Interface\"\n\nThis chapter describes the administrative interface to Oracle Advanced Queuing.\n\nChapter 10, \"Administrative Interface: Views\"\n\nIn this chapter we describe the administrative interface with respect to views in terms of a hybrid of use cases and state diagrams.\n\nChapter 11, \"Operational Interface: Basic Operations\"\n\nIn this chapter we describe the operational interface to Oracle Advanced Queuing in terms of use cases.\n\nChapter 12, \"Creating Applications Using JMS\"\n\nIn this chapter we consider the features of the Oracle JMS interface to AQ in the context of a sample application based on that scenario.\n\nChapter 13, \"JMS Administrative Interface: Basic Operations\"\n\nIn this chapter we describe the administrative interface to Oracle Advanced Queuing in terms of use cases.\n\nChapter 14, \"JMS Operational Interface: Basic Operations (Point-to-Point)\"\n\nIn this chapter we describe point to point operations.\n\nChapter 15, \"JMS Operational Interface: Basic Operations (Publish-Subscribe)\"\n\nIn this chapter we describe publish-subscribe operations.\n\nChapter 16, \"JMS Operational Interface: Basic Operations (Shared Interfaces)\"\n\nIn this chapter we describe shared interface operations.\n\nAppendix A, \"Oracle Advanced Queuing by Example\"\n\nThis appendix provides examples of operations using different programatic environments\n\nAppendix B, \"Oracle JMS Interfaces, Classes and Exceptions\"\n\nThis appendix provideds a list of Oracle JMS interfaces, classes & exceptions.\n\nAppendix C, \"Scripts for Implementing 'BooksOnLine'\"\n\nThis appendix contains scripts used in the \"BooksOnLine\" example.\n\nAppendix D, \"JMS Error Messages\"\n\nA list of error messages is provided here to aid you in troubleshooting problems.\n\nHow to Interpret the Diagrams\n\nThis manual makes use of the Universal Modeling Language (UML) as a way of explaining technology. A full presentation of the UML is beyond the scope of this documentation set, however we do provide a brief description of the subset of UML notation that we use in a chapter devoted to visual modelling in Oracle8i Application Developer's Guide - Fundamentals. What follows here is a selection from that chapter of those elements that are used in this book.\n\nUse Case Diagrams\n\nGraphic Element Description\n\nThis release of the documentation introduces and makes heavy use of the Use Case Diagram. Each primary use case is instigated by an actor ('stickman') that could be a human user, an application, or a sub-program. The actor is connected to the primary use case which is depicted as an oval (bubble) enclosing the use case action.\n\nThe totality of primary use cases is described by means of a Use Case Model Diagram.\n\nPrimary use cases may require other operations to complete them. In this diagram fragment\n\nspecify queue name\n\nis one of the sub-operations, or secondary use cases, needed to complete\n\nENQUEUE a message\n\nThe downward lines from the primary use case lead to the other required operations (not shown).\n\nSecondary use cases that have drop shadows expand' in that they are described by means of their own use case diagrams. There are two reasons for doing this:\n\n(a) it makes it easier to understand the logic of the operation;\n\n(b) it would not have been possible to place all the operations and sub-operations on the same page.\n\nIn this example\n\nspecify message properties,\n\nspecify options\n\nadd payload\n\nare all expanded in separate use case diagrams.\n\nIn the online versions of these diagrams, these are clickable areas that link to the related operation.\n\nThis diagram fragment shows the use case diagram expanded. While the standard diagram has the actor as the initiator), here the use case itself is the point of departure for the sub-operation. In this example, the expanded view of\n\nadd payload\n\nrepresents a constituent operation of\n\nENQUEUE a message\n\nThis convention (a, b, c) shows that there are three different ways of creating a table that contains LOBs.\n\nThis fragment shows one of the uses of a NOTE box, here distinguishing which of the three ways of creating a table containing LOBs is being presented.\n\nGraphic Element Description\n\nThe dotted arrow in the use case diagram indicates dependency. In this example\n\nfree a temporary LOB\n\nrequires that you first\n\ncreate a temporary LOB\n\nPut another way: you should not execute the free operation on a LOB that is not temporary.\n\nWhat you need to remember is that the target of the arrow shows the operation that must be performed first.\n\nUse cases and their sub-operations can be linked in complex relationships. In this example of a callback, you must earlier\n\nREGISTER for notification\n\nin order to later\n\nreceive a notification\n\nGraphic Element\n\nDescription\n\nNot all linked operations are mandatory. While the black dashed-line and arrow indicate that you must perform the targeted operation to complete the use case, actions that are optional are shown by the grey dashed-line and arrow. In this example, executing\n\nwrite append\n\non a LOB requires that you first\n\nSELECT a LOB\n\nAs a facilitating operations, you may choose to\n\nOPEN a LOB and/or get chunk size\n\nHowever, note that if you do OPEN a LOB, you will later have to CLOSE it.\n\nState Diagrams\n\nLinks in Online Versions of this Document\n\nThe online (HTML and PDF) versions of these diagrams include active areas that either have blue perimeters or look like buttons. You can use these links to traverse the following relationships:\n\nTo move between Use Case Model Diagrams which encompass all the possible use cases for a given interface, and the Use Case Diagrams which detail the individual cases.\n\nTo traverse different branches of a Use Case which can be implemented in more that one way. The branching Use Case Diagrams have titles such as \"Three Ways to...\" and buttons marked by \"a\", \"b\", \"c\"...\n\nTo access the Sub-Usecases that are entailed as part of a more primary Use Case while retaining context.\n\nTo view details of the classes that underlie Use Cases accessible in Java.\n\nTo view the class structure in which specific Java classes are located (see Appendix B, \"Oracle JMS Interfaces, Classes and Exceptions\").\n\nThe following examples illustrate these relationships.\n\nGraphic Element\n\nDescription\n\nThis Use Case Diagram combines a number of the elements:\n\nJMS Administrative Interface - this button leads back to the Use Case Model Diagram\n\nAQjmsFactory - this button leads to the Class Diagram in which contains the method by which the this use case is implemented\n\na. Create a Topic Connection Factory with JDBC URL is the \"a\" branch of the use case\n\nb. Create a Topic Connection Factory with JDBC Connection Parameters is the \"b\" branch of the use case\n\nGraphic Element\n\nDescription\n\nThis Class Diagram has links to the individual class diagrams which form its components. This reduced view of the classes shows\n\nwhether classes, interfaces, and exceptions are entailed in the interrelationship by means of the <<>>, stereotype, such as <<interface>>\n\nthe name of the package in which the class is found, such as oracle.jms\n\nthe name of the class, such as AQjmsConnection\n\nGraphic Element\n\nDescription\n\nThe expanded view of the Class Diagram\n\nlinks to the Class Structure diagram via the button Oracle JMS Classes which describes its interrelationships. Although many classes share this button, each class is linked to the part of the structure specific to it.\n\ncontains the names of the attributes (fields) if these exist and are exposed (there are none in this case)\n\nthe name of the methods that comprise the public interface to the class\n\nConventions Used in this Guide\n\nThe following notational and text formatting conventions are used in this guide:\n\n[ ]\n\nSquare brackets indicate that the enclosed item is optional. Do not type the brackets.\n\n{ }\n\nBraces enclose items of which only one is required.\n\n|\n\nA vertical bar separates items within braces, and may also be used to indicate that multiple values are passed to a function parameter.\n\n...\n\nIn code fragments, an ellipsis means that code not relevant to the discussion has been omitted.\n\nfont change\n\nSQL or C code examples are shown in monospaced font.\n\nitalics\n\nItalics are used for OCI parameters, OCI routines names, file names, and data fields.\n\nUPPERCASE\n\nUppercase is used for SQL keywords, like SELECT or UPDATE.\n\nThis guide uses special text formatting to draw the reader's attention to some information. A paragraph that is indented and begins with a bold text label may have special meaning. The following paragraphs describe the different types of information that are flagged this way.\n\nNote: The \"Note\" flag indicates that the reader should pay particular attention to the information to avoid a common problem or increase understanding of a concept.\n\nWarning: An item marked as \"Warning\" indicates something that an OCI programmer must be careful to do or not do in order for an application to work correctly.\n\nSee Also: Text marked \"See Also\" points you to another section of this guide, or to other documentation, for additional information about the topic being discussed.\n\nYour Comments Are Welcome\n\nWe value and appreciate your comment as an Oracle user and reader of our manuals. As we write, revise, and evaluate our documentation, your opinions are the most important feedback we receive.\n\nYou can send comments and suggestions about this manual to the following e-mail address:\n\ninfodev@us.oracle.com\n\nIf you prefer, you can send letters or faxes containing your comments to the following address:"
    }
}