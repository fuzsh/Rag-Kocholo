{
    "id": "dbpedia_8288_1",
    "rank": 31,
    "data": {
        "url": "https://www.geeksforgeeks.org/c-language-introduction/",
        "read_more_link": "",
        "language": "en",
        "title": "C Language Introduction",
        "top_image": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "meta_img": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "images": [
            "https://media.geeksforgeeks.org/gfg-gg-logo.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/wp-content/cdn-uploads/20230630120259/C-Language-Introduction.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20221219163357/Structure-of-C-Program.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20200717172614/authPreLogo.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/new-premium-rbanner-us.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/gfgFooterLogo.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/googleplay.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/appstore.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/suggestChangeIcon.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/createImprovementIcon.png"
        ],
        "movies": [
            "https://www.geeksforgeeks.org/videos/introduction-to-c-language-sample-video-for-c-course/"
        ],
        "keywords": [],
        "meta_keywords": [
            "Data Structures",
            "Algorithms",
            "Python",
            "Java",
            "C",
            "C++",
            "JavaScript",
            "Android Development",
            "SQL",
            "Data Science",
            "Machine Learning",
            "PHP",
            "Web Development",
            "System Design",
            "Tutorial",
            "Technical Blogs",
            "Interview Experience",
            "Interview Preparation",
            "Programming",
            "Competitive Programming",
            "Jobs",
            "Coding Contests",
            "GATE CSE",
            "HTML",
            "CSS",
            "React",
            "NodeJS",
            "Placement",
            "Aptitude",
            "Quiz",
            "Computer Science",
            "Programming Examples",
            "GeeksforGeeks Courses",
            "Puzzles",
            "SSC",
            "Banking",
            "UPSC",
            "Commerce",
            "Finance",
            "CBSE",
            "School",
            "k12",
            "General Knowledge",
            "News",
            "Mathematics",
            "Exams"
        ],
        "tags": null,
        "authors": [
            "GeeksforGeeks"
        ],
        "publish_date": "2014-02-12T11:06:35",
        "summary": "",
        "meta_description": "A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.",
        "meta_lang": "en",
        "meta_favicon": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_favicon.png",
        "meta_site_name": "GeeksforGeeks",
        "canonical_link": "https://www.geeksforgeeks.org/c-language-introduction/",
        "text": "C is a procedural programming language initially developed by Dennis Ritchie in the year 1972 at Bell Laboratories of AT&T Labs. It was mainly developed as a system programming language to write the UNIX operating system.\n\nThe main features of the C language include:\n\nGeneral Purpose and Portable\n\nLow-level Memory Access\n\nFast Speed\n\nClean Syntax\n\nThese features make the C language suitable for system programming like an operating system or compiler development.\n\nWhy Should We Learn C?\n\nMany later languages have borrowed syntax/features directly or indirectly from the C language. Like syntax of Java, PHP, JavaScript, and many other languages are mainly based on the C language. C++ is nearly a superset of C language (Only a few programs may compile in C, but not in C++).\n\nSo, if a person learns C programming first, it will help him to learn any modern programming language as well. As learning C help to understand a lot of the underlying architecture of the operating system. Like pointers, working with memory locations, etc.\n\nGet Started with C Learn C fundamentals and advanced concepts, then solve practical problems right in your browser window with Educative’s interactive skill path Become a C Programmer. Sign up at Educative.io with the code GEEKS10 to save 10% on your subscription.\n\nDifference Between C and C++\n\nC++ was created to add the OOPs concept into C language so they both have very similar syntax but both are a bit different from each other. Following are some main differences between C and C++ Programming language.\n\nC++ supports OOPs paradigm while C only have procedural concept of programming.\n\nC++ have exception handling capablities. In C, we have to resolve manually.\n\nThere are no references in C.\n\nThere are many more differences between C and C++ which are discussed here: Difference between C and C++\n\nBeginning with C Programming\n\nWriting the First Program in C\n\nThe following code is one of the simplest C programs that will help us the basic syntax structure of a C program.\n\nExample:\n\nC\n\n#include<stdio.h> intmain(){ inta=10; printf(\"%d\",a); return0; }\n\nOutput\n\n10\n\nLet us analyze the structure of our program line by line.\n\nStructure of the C program\n\nAfter the above discussion, we can formally assess the structure of a C program. By structure, it is meant that any program can be written in this structure only. Writing a C program in any other structure will hence lead to a Compilation Error. The structure of a C program is as follows:\n\nComponents of a C Program:\n\n1. Header Files Inclusion – Line 1 [#include <stdio.h>]\n\nThe first and foremost component is the inclusion of the Header files in a C program. A header file is a file with extension .h which contains C function declarations and macro definitions to be shared between several source files. All lines that start with # are processed by a preprocessor which is a program invoked by the compiler. In the above example, the preprocessor copies the preprocessed code of stdio.h to our file. The .h files are called header files in C.\n\nSome of the C Header files:\n\nstddef.h – Defines several useful types and macros.\n\nstdint.h – Defines exact width integer types.\n\nstdio.h – Defines core input and output functions\n\nstdlib.h – Defines numeric conversion functions, pseudo-random number generator, and memory allocation\n\nstring.h – Defines string handling functions\n\nmath.h – Defines common mathematical functions.\n\n2. Main Method Declaration – Line 2 [int main()]\n\nThe next part of a C program is to declare the main() function. It is the entry point of a C program and the execution typically begins with the first line of the main(). The empty brackets indicate that the main doesn’t take any parameter (See this for more details). The int that was written before the main indicates the return type of main(). The value returned by the main indicates the status of program termination. See this post for more details on the return type.\n\n3. Body of Main Method – Line 3 to Line 6 [enclosed in {}]\n\nThe body of a function in the C program refers to statements that are a part of that function. It can be anything like manipulations, searching, sorting, printing, etc. A pair of curly brackets define the body of a function. All functions must start and end with curly brackets.\n\n4. Statement – Line 4 [printf(“Hello World”);]\n\nStatements are the instructions given to the compiler. In C, a statement is always terminated by a semicolon (;). In this particular case, we use printf() function to instruct the compiler to display “Hello World” text on the screen.\n\n5. Return Statement – Line 5 [return 0;]\n\nThe last part of any C function is the return statement. The return statement refers to the return values from a function. This return statement and return value depend upon the return type of the function. The return statement in our program returns the value from main(). The returned value may be used by an operating system to know the termination status of your program. The value 0 typically means successful termination.\n\nHow to Execute the Above Program?\n\nIn order to execute the above program, we need to first compile it using a compiler and then we can run the generated executable. There are online IDEs available for free like GeeksforGeeksIDE, that can be used to start development in C without installing a compiler.\n\nWindows: There are many free IDEs available for developing programs in C like Code Blocks and Dev-CPP. IDEs provide us with an environment to develop code, compile it and finally execute it. We strongly recommend Code Blocks.\n\nLinux: GCC compiler comes bundled with Linux which compiles C programs and generates executables for us to run. Code Blocks can also be used with Linux.\n\nmacOS: macOS already has a built-in text editor where you can just simply write the code and save it with a “.c” extension.\n\nApplication of C\n\nOperating systems: C is widely used for developing operating systems such as Unix, Linux, and Windows.\n\nEmbedded systems: C is a popular language for developing embedded systems such as microcontrollers, microprocessors, and other electronic devices.\n\nSystem software: C is used for developing system software such as device drivers, compilers, and assemblers.\n\nNetworking: C is widely used for developing networking applications such as web servers, network protocols, and network drivers.\n\nDatabase systems: C is used for developing database systems such as Oracle, MySQL, and PostgreSQL.\n\nGaming: C is often used for developing computer games due to its ability to handle low-level hardware interactions.\n\nArtificial Intelligence: C is used for developing artificial intelligence and machine learning applications such as neural networks and deep learning algorithms.\n\nScientific applications: C is used for developing scientific applications such as simulation software and numerical analysis tools.\n\nFinancial applications: C is used for developing financial applications such as stock market analysis and trading systems."
    }
}