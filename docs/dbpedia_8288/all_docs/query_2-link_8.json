{
    "id": "dbpedia_8288_2",
    "rank": 8,
    "data": {
        "url": "https://stackoverflow.com/questions/580292/what-languages-are-windows-mac-os-x-and-linux-written-in",
        "read_more_link": "",
        "language": "en",
        "title": "What languages are Windows, Mac OS X and Linux written in?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/BfUwH.jpg?s=64",
            "https://www.gravatar.com/avatar/c521c11562c3540db79eca1cd632bd5e?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/WLsjF.jpg?s=64",
            "https://www.gravatar.com/avatar/1de92a19298b8ac5d097351e59d7cba7?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/77f196f4d3b4b89fc179071f3aa21e1e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/5320abc028fbcd3546d4cd04cc29593c?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/513cee9db480a2a81d030dc2acea191d?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/0aefd148b608dd5bcb8be13cc53e4274?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/94066dfa49c2feb14706cb081848fda7?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/Wm7Xg.png?s=64",
            "https://www.gravatar.com/avatar/9a0fd4ad59f0c4528e606b1a9c392935?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/0ab7f5cd571bff328ca3cb7a612c3c05?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/7b6b2d846944082b5579d55d36221d6f?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/7294b9c2a03c1d58de260b1064c77df3?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/b80dfa1fc20709c61458966364d4ff22?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://stackoverflow.com/posts/580292/ivc/0d79?prg=e5dbf978-4199-48c7-ac46-849d5ab886ae"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2009-02-24T02:54:45",
        "summary": "",
        "meta_description": "I was just wondering who knows what programming languages Windows, Mac OS X and Linux are made up from and what languages are used for each part of the OS (ie: Kernel, plug-in architecture, GUI",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/580292/what-languages-are-windows-mac-os-x-and-linux-written-in",
        "text": "Linux: C. Some parts in assembly.\n\n[...] It's mostly in C, but most people wouldn't call what I write C. It uses every conceivable feature of the 386 I could find, as it was also a project to teach me about the 386. As already mentioned, it uses a MMU, for both paging (not to disk yet) and segmentation. It's the segmentation that makes it REALLY 386 dependent (every task has a 64Mb segment for code & data - max 64 tasks in 4Gb. Anybody who needs more than 64Mb/task - tough cookies). [...] Some of my \"C\"-files (specifically mm.c) are almost as much assembler as C. [...] Unlike minix, I also happen to LIKE interrupts, so interrupts are handled without trying to hide the reason behind them. (Source)\n\nMac OS X: Cocoa mostly in Objective-C. Kernel written in C, some parts in assembly.\n\nMac OS X, at the kernel layer, is mostly an older, free operating system called BSD (specifically, it’s Darwin, a sort of hybrid of BSD, Mach, and a few other things)... almost entirely C, with a bit of assembler thrown in. (Source)\n\nMuch of Cocoa is implemented in Objective-C, an object-oriented language that is compiled to run at incredible speed, yet employes a truly dynamic runtime making it uniquely flexible. Because Objective-C is a superset of C, it is easy to mix C and even C++ into your Cocoa applications. (Source)\n\nWindows: C, C++, C#. Some parts in assembler.\n\nWe use almost entirely C, C++, and C# for Windows. Some areas of code are hand tuned/hand written assembly. (Source)\n\nUnix: C. Some parts in assembly. (Source)\n\nWow!!! 9 years of question but I've just come across a series of internal article on Windows Command Line history and I think some part of it might be relevant Windows side of the question:\n\nFor those who care about such things: Many have asked whether Windows is written in C or C++. The answer is that - despite NT's Object-Based design - like most OS', Windows is almost entirely written in 'C'. Why? C++ introduces a cost in terms of memory footprint, and code execution overhead. Even today, the hidden costs of code written in C++ can be surprising, but back in the late 1990's, when memory cost ~$60/MB (yes … $60 per MEGABYTE!), the hidden memory cost of vtables etc. was significant. In addition, the cost of virtual-method call indirection and object-dereferencing could result in very significant performance & scale penalties for C++ code at that time. While one still needs to be careful, the performance overhead of modern C++ on modern computers is much less of a concern, and is often an acceptable trade-off considering its security, readability, and maintainability benefits ... which is why we're steadily upgrading the Console’s code to modern C++.\n\nI understand that this is an old post but Windows is definitely not written in C++. There is lots of C++ in it but what we technical define as an operating system is not in C++. The Windows API, the Windows kernel (both of these are in essence what an operating system is) are written in C. Years ago I was given some leaked code for both Windows 2000 and Windows XP. The code was not nearly complete enough to compile the kernel or API but we were able to compile individual programs and services. For example, we were able to successfully compile Notepad.exe, mspaint.exe, and the spoolsv.exe service (print spooler). All written in C. I have not looked again but I am sure that leaked code still survives as torrent files out there that may still be available.\n\nThe Linux kernel is mostly written in C (and a bit of assembly language, I'd imagine), but some of the important userspace utilities (programs) are shell scripts written in the Bash scripting language. Beyond that, it's sort of hard to define \"Linux\" since you basically build a Linux system by picking bits and pieces you want and putting them together, and depending on what an individual Linux user wants, you can get pretty much any language involved. (As Paul said, Python and C++ play important roles)\n\nI have read or heard that Mac OS X is written mostly in Objective-C with some of the lower level parts, such as the kernel, and hardware device drivers written in C. I believe that Apple \"eat(s) its own dog food\", meaning that they write Mac OS X using their own Xcode Developer Tools. The GCC(GNU Compiler Collection) compiler-linker is the unix command line tool that xCode used for most of its compiling and/or linking of executables. Among other possible languages, I know GCC compiles source code from the C, Objective-C, C++ and Objective-C++ languages."
    }
}