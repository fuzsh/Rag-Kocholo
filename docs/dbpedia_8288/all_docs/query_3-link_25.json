{
    "id": "dbpedia_8288_3",
    "rank": 25,
    "data": {
        "url": "https://www.zdnet.com/article/how-to-use-chatgpt-to-write-code/",
        "read_more_link": "",
        "language": "en",
        "title": "How to use ChatGPT to write code: What it can and can't do for you",
        "top_image": "https://www.zdnet.com/a/img/resize/c82cdcad4f483a5a8a5dc902f352dcd9388b977d/2024/05/10/cdbd9100-f384-4f2f-bd41-4865d33bc219/gettyimages-825446632.jpg?auto=webp&fit=crop&height=675&width=1200",
        "meta_img": "https://www.zdnet.com/a/img/resize/c82cdcad4f483a5a8a5dc902f352dcd9388b977d/2024/05/10/cdbd9100-f384-4f2f-bd41-4865d33bc219/gettyimages-825446632.jpg?auto=webp&fit=crop&height=675&width=1200",
        "images": [
            "https://www.zdnet.com/a/img/resize/82f5fad827e74b33983e1b52c5eab1af7464d827/2022/08/05/de4475ef-be59-4858-beb8-6f7696c85945/david-gewirtz.jpg?auto=webp&fit=crop&frame=1&height=192&width=192",
            "https://www.zdnet.com/a/img/resize/0e3e8f1a693e199e95b0dd8c69654f7e0472159a/2024/05/10/cdbd9100-f384-4f2f-bd41-4865d33bc219/gettyimages-825446632.jpg?auto=webp&width=1280"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "David Gewirtz"
        ],
        "publish_date": "2024-05-10T13:58:00+00:00",
        "summary": "",
        "meta_description": "Can ChatGPT replace programmers? What programming languages does ChatGPT know? We answer these and your other generative AI coding questions.",
        "meta_lang": "en",
        "meta_favicon": "https://www.zdnet.com/a/fly/bundles/zdnetcore/images/logos/zdnet-logo-yellow.png",
        "meta_site_name": "ZDNET",
        "canonical_link": "https://www.zdnet.com/article/how-to-use-chatgpt-to-write-code/",
        "text": "One of the more intriguing discoveries about ChatGPT is that it can write pretty good code. I first tested this out last year when I asked it to write a WordPress plugin my wife could use on her website. ChatGPT did a fine job, but it was a very simple project.\n\nHow to use ChatGPT to write: Resumes | Excel formulas | Essays | Cover letters\n\nSo, how can you use ChatGPT to write code as part of your daily coding practice? Here's a quick summary:\n\nChatGPT can produce both useful and unusable code. For best results, provide clear and detailed prompts.\n\nChatGPT excels in assisting with specific coding tasks or routines, rather than building complete applications from scratch.\n\nUse ChatGPT to find and choose the right coding libraries for specific purposes, and engage in an interactive discussion to narrow down options.\n\nBe cautious about the ownership of AI-generated code and always verify the code's reliability. Don't blindly trust the generated output.\n\nTreat interactions with ChatGPT as a conversation. Refine your questions based on the AI's responses to get closer to the desired output.\n\nNow, let's explore ChatGPT in considerably more depth.\n\nWhat types of coding can ChatGPT do well?\n\nThere are two important facts about ChatGPT and coding. The first is that the AI can, in fact, write useful code.\n\nThe second is that it can get completely lost, fall down a rabbit hole, chase its own tail, and produce unusable garbage.\n\nAlso: The best free AI courses\n\nI found this out the hard way. After I finished the WordPress plugin, I decided to see how far ChatGPT could go.\n\nI wrote out a very careful prompt for a Mac application, including detailed descriptions of user interface elements, interactions, what would be provided in settings, how they would work, and so on. Then, I fed the prompt to ChatGPT.\n\nChatGPT responded with a flood of text and code. Then, it stopped mid-code. When I asked it to continue, it vomited out even more code and text. I requested continue after continue, and it dumped out more and more code. But... none of it was usable. It didn't identify where the code should go, how to construct the project, and -- when I looked carefully at the code produced -- it left out major operations I requested, leaving in simple text descriptions stating \"program logic goes here\".\n\nAlso: Yikes! Microsoft Copilot failed every single one of my coding tests\n\nAfter a bunch of repeated tests, it became clear to me that if you ask ChatGPT to deliver a complete application, it will fail. A corollary to this observation is that if you know nothing about coding and want ChatGPT to build you something, it will fail.\n\nWhere ChatGPT succeeds -- and does so very well -- is in helping someone who already knows how to code to build specific routines and get specific tasks done. Don't ask for an app that runs on the menu bar. But if you ask ChatGPT for a routine to put a menu on the menu bar, and then paste that into your project, the tool will do quite well.\n\nAlso, keep in mind that while ChatGPT appears to have a tremendous amount of domain-specific knowledge (and it often does), it lacks wisdom. As such, the tool may be able to write code, but it won't be able to write code containing the nuances for very specific or complex problems that require deep experience to understand.\n\nAlso: How to use ChatGPT to create an app\n\nUse ChatGPT to demo techniques, write small algorithms, and produce subroutines. You can even get ChatGPT to help you break down a bigger project into chunks, and then you can ask it to help you code those chunks.\n\nSo, with that in mind, let's look at some specific steps for how ChatGPT can help you write code.\n\nHow to use ChatGPT to write code\n\nI started with a prompt that was designed to elicit information about what libraries would provide the functionality I wanted. A library (for those of you reading along who aren't programmers) is a body of code a programmer can access that does a lot of the heavy lifting for a specific purpose. A big part of modern programming is finding and choosing the right libraries, so this is a good starting point.\n\nIn this case, I'm looking at blocks of code written by other people that will summarize text. Here's my first prompt:\n\nDescribe ten different open source AI libraries (and the languages they work with) that I can use to generate a summary of the main core contents of any web page, ignoring any ads or embedded materials.\n\nThis prompt gave me exactly what I wanted, including a mention of OpenAI's offerings. I think OpenAI would do great here, but for this hypothetical project, I don't want to budget for API fees. So. I'll narrow down the question:\n\nAre any of these free?\n\nChatGPT hedged its bets with its answer. Here's what it said: \"Yes, all ten of these AI libraries are open source and free to use. However, some of them may have usage limits or require payment for access to additional features or resources.\" So, based on that, I clarified my query:\n\nWhich of these libraries have no usage limits and don't require any additional payment or licensing?\n\nNotice how this is very much a conversation. I don't have to re-ask the originating question. I'm just drilling down in the same way I might if I had an expert at hand and was seeking clarification. In this case, ChatGPT gave me eight library choices, but none of them mentioned the PHP language that I was planning to code in. So, here's the next prompt:\n\nOf those 8 libraries, can I use any with PHP?\n\nIt returned three libraries, but I wasn't sure about what each did. So, another question:\n\nWhat's the difference between Sumy, Gensim, and NLTK?\n\nI still wasn't sure, so I clarified my use plan and then asked:\n\nIf I want to create summaries of web page news articles, which library would work better?\n\nThe answer I got was clear and promising: \"Sumy is specifically designed for text summarization, which is the task of creating a summary that captures the most important information from a piece of text.\" So, now it was time to see what was involved in using Sumy with PHP. I asked my last question for this part of the project:\n\nCan you explain how to use Sumy from PHP?\n\nFeel free to play along on your computer and paste these prompts into your instance of ChatGPT. Notice that, in step one, I decided what program module I was going to get help on. Then, in this step, I had a conversation with ChatGPT to decide what library to use and how to integrate it into my project.\n\nAlso: The best AI chatbots\n\nThat may not seem like programming, but I assure you it is. Programming isn't just blasting lines of code onto a page. Programming is figuring out how to integrate all the various resources and systems together, and how to talk to all the various components of your solution. Here, ChatGPT helped me do that integration analysis.\n\nBy the way, I was curious whether Google's Gemini AI (formerly Bard) could help in the same way. Gemini can't actually write code, but it did give some extra insights into the planning aspect of programming over ChatGPT's responses. So, don't hesitate to use multiple tools to triangulate on answers you want. Here's that story: Gemini vs. ChatGPT: Can Gemini help you code? Since I wrote that article, Google added some coding capabilities to Gemini, but they're not all that great. You can read about it here: I tested Google Gemini's new coding skills. It didn't go well. And even more recently, I dug into Gemini Advanced. It's still not passing many tests.\n\nAlso: How I test an AI chatbot's coding ability - and you can too\n\nCoding is next.\n\nThat limitation means you have to do it yourself. As we know, the first draft of a piece of code is rarely the final code. So, even if you were to expect ChatGPT to generate final code, it would really be a starting point, one where you need to take it to completion, integrate it into your bigger project, test it, refine it, debug it, and so on.\n\nAlso: I asked ChatGPT to write a short Star Trek episode. It actually succeeded\n\nBut that doesn't mean the example code is worthless -- far from it. Let's take a look at a prompt I wrote based on the project I described earlier. Here's the first part:\n\nWite a PHP function called summarize_article.\n\nAs input, summarize_article will be passed a URL to an article on a news-related site like ZDNET.com or Reuters.com.\n\nI'm telling ChatGPT the programming language it should use. I'm also telling it the input but, while doing so, providing two sites as samples to help ChatGPT understand the style of article. Honestly, I'm not sure ChatGPT didn't ignore that bit of guidance. Next, I'll tell it how to do the bulk of the work:\n\nInside summarize_article, retrieve the contents of the web page at the URL provided. Using the library Sumy from within PHP and any other libraries necessary, extract the main body of the article, ignoring any ads or embedded materials, and summarize it to approximately 50 words. Make sure the summary consists of complete sentences. You can go above the 50 words to finish the last sentence, if necessary.\n\nThis is very similar to how I'd instruct an employee. I'd want that person to know that they weren't only restricted to Sumy. If they needed another tool, I wanted them to use it.\n\nAlso: How to get a perfect face match using Midjourney AI\n\nI also specified an approximate number of words to create bounds for what I wanted as a summary. A later version of the routine might take that number as a parameter. I then ended by saying what I wanted as a result:\n\nOnce processing is complete, code summarize_article so it returns the summary in plain text.\n\nThe resulting code is pretty simple. ChatGPT did call on another library (Goose) to retrieve the article contents. It then passed that summary to Sumy with a 50-word limit and then returned the result. But once the basics are written, it's a mere matter of programming to go back in and add tweaks, customize what's passed to the two libraries, and delivering the results.\n\nOne interesting point of note. When I originally tried this test in early 2023, ChatGPT created a sample call to the routine it wrote, using a URL from after 2021. At that time, in March 2023, ChatGPT's dataset only went to 2021. Now, the ChatGPT knowledge base extends to the end of December 2023. But my point is that ChatGPT made up a sample link that it couldn't possibly know about:\n\nhttps://www.reuters.com/business/retail-consumer/teslas-musk-says-fremont-california-factory-may-be-sold-chip-shortage-bites-2022-03-18/\n\nI checked that URL against both Reuters' site and the Wayback Machine, and it doesn't exist. Never assume ChatGPT is accurate. Always double-check everything it gives you.\n\nFAQs\n\nDoes ChatGPT replace programmers?\n\nNot now -- or, at least -- not yet. ChatGPT programs at the level of a talented first-year programming student, but it's lazy (like that first-year student). The tool might reduce the need for entry-level programmers, but at its current level, I think it will just make life easier for entry-level programmers (and even programmers with more experience) to write code and look up information. It's definitely a time-saver, but there are few programming projects it can do on its own -- at least now. In 2030? Who knows.\n\nHow do I get coding answers in ChatGPT?\n\nJust ask it. You saw above how I used an interactive discussion dialog to narrow down the answers I wanted. When you're working with ChatGPT, don't expect one question to magically do all your work for you. But use ChatGPT as a helper and resource, and it will give you a lot of very helpful information. Of course, test that information -- because, as John Schulman, a co-founder of OpenAI, says, \"Our biggest concern was around factuality, because the model likes to fabricate things.\"\n\nIs the code generated by ChatGPT guaranteed to be error-free?\n\nHell, no! But you also can't trust the code human programmers write. I certainly don't trust any code I write. Code comes out of the code-making process incredibly flawed. There are always bugs. Before you ship, you need to test, test, and test again. Then, alpha test with a few chosen victims. Then beta test with your wider user community. Even after all that, there will be bugs. Just because an AI is playing at this coding thing doesn't mean it can do bug-free code. Do not trust. Always verify. And you still won't have it fully bug-free. Such is the nature of the universe.\n\nHow detailed should my description of a programming issue be when asking ChatGPT?\n\nDetailed. Look at it this way: the more you leave open for interpretation, the more the AI will go its own way. When I give prompts to ChatGPT to help me while programming, I imagine I'm assigning a programming task to one of my students or someone who works for me. Did I give that person enough details to go off and create a first draft or will that person have to ask me a ton of additional questions? Worse, will that person have so little guidance that they'll go off in entirely the wrong direction? Don't be lazy here. ChatGPT can save you hours or even days programming (it has for me), but only if you give it useful instructions to begin with.\n\nIf I use ChatGPT to write my code, who owns it?\n\nAs it turns out, there's not a lot of case law yet to definitively answer this question. The US, Canada, and the UK require something that's copyrighted to have been created by human hands, so code generated by an AI tool may not be copyrightable. There are also issues of liability based on where the training code came from and how the resulting code is used. ZDNET did a deep dive on this topic, spoke to legal experts, and produced the following three articles. If you're concerned about this issue (and if you're using AI to help with code, you should be), I recommend you give them a read.\n\nWho owns the code? If ChatGPT's AI helps write your app, does it still belong to you?\n\nIf you use AI-generated code, what's your liability exposure?\n\nA thorny question: Who owns code, images, and narratives generated by AI?\n\nWhat programming languages does ChatGPT know?\n\nMost of them. I tested common modern languages, like PHP, Python, Java, Kotlin, Swift, C#, and more. But then I had the tool write code in obscure dark-age languages like COBOL, Fortran, Forth, LISP, ALGOL, RPG (the report program generator, not the role-playing game), and even IBM/360 assembly language.\n\nAs the icing on the cake, I gave it this prompt:\n\nWrite a sequence that displays 'Hello, world' in ascii blinking lights on the front panel of a PDP 8/e\n\nThe PDP 8/e was my very first computer, and ChatGPT actually gave me instructions for toggling in a program using front-panel switches. I was impressed, gleeful, and ever so slightly afraid.\n\nCan ChatGPT help me with data analysis and visualization tasks?\n\nYes, and a lot of it can be done without code. Check out my entire article on this topic: The moment I realized ChatGPT Plus was a game-changer for my business.\n\nI also did a piece on generated charts and tables: How to use ChatGPT to make charts and tables\n\nBut here's where it gets fun. In the article above, I asked ChatGPT Plus \"Make a bar chart of the top five cities in the world by population,\" and it did. But do you want code? Try asking:\n\nMake a bar chart of the top five cities in the world by population in Swift. Pull the population data from online. Be sure to include any necessary libraries.\n\nBy adding \"in Swift,\" you're specifying the programming language. By specifying where the data comes from and forcing ChatGPT Plus to include libraries, it knows to bring in the other resources the program needs. That's why, fundamentally, programming with an AI's help requires you to know things about programming. But if you do, it's cool. Because three sentences can get you a nice chunk of annotated code. Cool, huh?\n\nHow does ChatGPT handle the differences between dialects and implementations of a given programming language?\n\nWe don't have exact details on this issue from OpenAI, but our understanding of how ChatGPT is trained can shed some light on this question. Keep in mind that dialects and implementations of programming languages (and their little quirks) change much more rapidly than the full language itself. This reality makes it harder for ChatGPT (and many programming professionals) to keep up.\n\nAlso: How I used ChatGPT to write a custom JavaScript bookmarklet\n\nAs such, I'd work off these two assumptions:\n\nThe more recent the dialectic change, the less likely ChatGPT knows about it, and\n\nThe more popular a language overall, the more training data it likely has learned from, and therefore the more accurate it will be.\n\nWhat's the bottom line? ChatGPT can be a very helpful tool. Just don't ascribe superpowers to it. Yet."
    }
}