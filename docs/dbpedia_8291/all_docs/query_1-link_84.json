{
    "id": "dbpedia_8291_1",
    "rank": 84,
    "data": {
        "url": "https://unix.stackexchange.com/questions/32182/simple-command-line-http-server",
        "read_more_link": "",
        "language": "en",
        "title": "Simple command line HTTP server",
        "top_image": "https://cdn.sstatic.net/Sites/unix/Img/apple-touch-icon@2.png?v=32fb07f7ce26",
        "meta_img": "https://cdn.sstatic.net/Sites/unix/Img/apple-touch-icon@2.png?v=32fb07f7ce26",
        "images": [
            "https://cdn.sstatic.net/Sites/unix/Img/logo.svg?v=eb6eb2b9e73c",
            "https://i.sstatic.net/oh6VZ.png?s=64",
            "https://www.gravatar.com/avatar/7d9a0b280f089153cbd3eb580b33188e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/f4cc061e17df2ee76951625f69cf0968?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/998aa9f83c1955ae4ed2ee1ef2b830f1?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/Rlyfi.jpg?s=64",
            "https://lh4.googleusercontent.com/-m3W0iEOn-s8/AAAAAAAAAAI/AAAAAAAAAC0/aZHRtKJt73s/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/c4635a06e7bf8c43e70f016441185392?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/33bc53cb5b1c79cc7baaef00099b859a?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/9e069f1c41ba355d356dfe14825d0758?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/67c4f2aed4839e9325dd58097aaa8eca?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/2aabd6a61136b162683167d1b7299237?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/87f8ee1956942944fe845a25cb7b1678?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/6e2040c5437732cdc6b508bd7a479809?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/e66ceae48943526967c5118011e58b63?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/0886accd5a180ff4d084026ba81e74dc?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/d2a3b27ec2b0b16acbf543839354d673?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/IiAVl.jpg?s=64",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/7f7128e0b317bb2cbb9523b7c886c118?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/IiAVl.jpg?s=64",
            "https://www.gravatar.com/avatar/d0edf9d0f312ec47d27046845580ba4f?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/75248d930cd7395804c8a68689048a9c?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/nkmeD.png?s=64",
            "https://i.sstatic.net/Ul6y5.jpg?s=64",
            "https://www.gravatar.com/avatar/ee3fcd43ae2309c4995dc18ae7ca4ae4?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/caff08a5f02adcf8453e7a9b5b634fd9?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/005bb84c8512b9d2e4da0be495be607a?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/e66ceae48943526967c5118011e58b63?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/458baa81702bf54b047957e27daa5673?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/9b6e9b8a8530bded283b2ab3cd5108a0?s=64&d=identicon&r=PG",
            "https://unix.stackexchange.com/posts/32182/ivc/0c39?prg=eb3950ef-afec-4085-835d-ec4d6d55029f"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2012-02-20T10:55:03",
        "summary": "",
        "meta_description": "I have a script which generates a daily report which I want to serve to the so called general public. The problem is I don't want to add to my headaches maintance of a HTTP server (e.g. Apache) wit...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/unix/Img/favicon.ico?v=fb86ccabb921",
        "meta_site_name": "Unix & Linux Stack Exchange",
        "canonical_link": "https://unix.stackexchange.com/questions/32182/simple-command-line-http-server",
        "text": "Try SimpleHTTPServer:\n\npython3 -m http.server 8080\n\nOr, for Python 2\n\npython -m SimpleHTTPServer 8080\n\nTo bind an IP Address, do\n\npython -m SimpleHTTPServer 8080 -b 0.0.0.0\n\nor for Python 3\n\npython3 -m http.server 8080 -b 0.0.0.0\n\nIt will serve whatever's in the CWD (e.g. index.html) at http://0.0.0.0:8000.\n\nSince version 5.4.0 PHP also has a built-in web server:\n\nphp -S localhost:8000\n\nYou can Specify the web server's documents directory with -t, for example:\n\nphp -S localhost:8000 -t /var/lib/www\n\nIf you want to be able to access the server over the network then:\n\nphp -S 0.0.0.0:8000 -t /var/lib/www\n\nNode has a simple, fast, light HTTP server module. To install:\n\nsudo npm install http-server -g\n\n(Assuming you have node and npm already installed.)\n\nTo run it, using the current directory as the website root:\n\nhttp-server\n\nThis creates a server on http://0.0.0.0:8080/.\n\nA simple fix/enhancement to a slightly unfairly (imho) down voted answer might also work. Let's set up the html file first ...\n\necho '<html><head><title>My Test File</title></head><body><h1>OK!</h1></body></html>' > my_file.html\n\n(Thx to Steve Folly for catching my typo in the HTML above. fixed.)\n\nNow you can serve it up with this one-liner:\n\nwhile true; do echo -e \"HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\n\\r\\n\" | cat - my_file.html | nc -l -p 8080; done\n\nThis basic idea lends itself to other tricks that might work for you via other cat or subshell ideas such as:\n\nwhile true; do echo -e \"HTTP/1.1 200 OK\\r\\nContent-Type: text/html\\r\\n\\r\\nI think the date is $(date), Have a good day!\" | nc -l -p 8080; done\n\nTry using SimpleHTTPServer in Python.\n\nmkdir ~/public_html command_to_generate_output > ~/public_html/output.txt (cd ~/public_html; python -c 'import SimpleHTTPServer,BaseHTTPServer; BaseHTTPServer.HTTPServer((\"\", 8080), SimpleHTTPServer.SimpleHTTPRequestHandler).serve_forever()')\n\nThe first two lines are setup for the web server. The last line creates a simple web server, opened on port 8080, which only serves files from ~/public_html. If only one file is in that directory, then only that is exposed: http://localhost:8080/output.txt.\n\nAnother option would be to install lighttpd. Following are suggested steps to install lighttpd on a Unbuntu 12.04 LTS.\n\napt-get update apt-get upgrade --show-upgraded apt-get install lighttpd ifconfig http://[your-ip-address]:80 /etc/lighttpd/lighttpd.conf (Edit to add server.port) server.port = \"8080\"\n\nNote: Documentroot is where all web accessible files will be places. The location is /var/wwww\n\nThe above step will install a basic lighttpd web server. For more information refer the following references\n\nReferences:\n\nlighttpd Web Server on Ubuntu 12.04 (Precise)\n\nLighttpd Description\n\nLighttpd starts but doesn't work. lighttpd.pid Permission Denied\n\nGetting Started - Linode\n\nWeb Server for testing on Linux\n\nTech Tip: Really Simple HTTP Server with Python\n\nWhich Light Weight, Open Source Web Server is Right for You?\n\n6 Excellent Linux/Open Source Web Servers\n\nLighttpd configuration\n\nI used these instructions to install a web server on my CentOS machine without having to use sudo or touch any system files:\n\nFirst install node (see the latest available version of the nodejs package here and change the package filename in the wget):\n\n$ cd ~ $ wget https://nodejs.org/download/release/latest/node-v18.10.0-linux-x64.tar.gz $ tar node-v18.10.0-linux-x64.tar.gz\n\nthen install http-server:\n\n$ export PATH=~/node-v18.10.0-linux-x64/bin:$PATH $ npm install http-server\n\nthen run http-server on port 12321:\n\n$ ~/node-v18.10.0-linux-x64/bin/node_modules/http-server/bin/http-server -p 12321"
    }
}