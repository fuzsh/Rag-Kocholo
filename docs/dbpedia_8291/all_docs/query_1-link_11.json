{
    "id": "dbpedia_8291_1",
    "rank": 11,
    "data": {
        "url": "https://gonzalo123.com/2010/05/23/building-network-services-with-php-and-xinetd/",
        "read_more_link": "",
        "language": "en",
        "title": "Building network services with PHP and xinetd",
        "top_image": "https://secure.gravatar.com/blavatar/c0da5a47b02184a1729b799ee1349610d78f982fa5cfd678cb90cfefc7f6088f?s=200&ts=1724009812",
        "meta_img": "https://secure.gravatar.com/blavatar/c0da5a47b02184a1729b799ee1349610d78f982fa5cfd678cb90cfefc7f6088f?s=200&ts=1724009812",
        "images": [
            "https://0.gravatar.com/avatar/c5bcdeee0f7e214945e0d27310df0ad487e7d1ec10a8d4341dbdcabfac58f2f7?s=60&d=identicon&r=G",
            "https://2.gravatar.com/avatar/b5cc27c7b102eb8d96722b724082c3a768458a527dfed82f68ed8c1fdf5c868a?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c5bcdeee0f7e214945e0d27310df0ad487e7d1ec10a8d4341dbdcabfac58f2f7?s=60&d=identicon&r=G",
            "https://2.gravatar.com/avatar/b5cc27c7b102eb8d96722b724082c3a768458a527dfed82f68ed8c1fdf5c868a?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c3ed913826011f89c66e52d160de5623552c5973bd8e6ac8c69cc643478db792?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c5bcdeee0f7e214945e0d27310df0ad487e7d1ec10a8d4341dbdcabfac58f2f7?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c3ed913826011f89c66e52d160de5623552c5973bd8e6ac8c69cc643478db792?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c5bcdeee0f7e214945e0d27310df0ad487e7d1ec10a8d4341dbdcabfac58f2f7?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c3ed913826011f89c66e52d160de5623552c5973bd8e6ac8c69cc643478db792?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c5bcdeee0f7e214945e0d27310df0ad487e7d1ec10a8d4341dbdcabfac58f2f7?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c3ed913826011f89c66e52d160de5623552c5973bd8e6ac8c69cc643478db792?s=60&d=identicon&r=G",
            "https://2.gravatar.com/avatar/eff2b5cc17ec93fef72ea542b85523961b9f630b9c2bdd878aa085cadddcb719?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c5bcdeee0f7e214945e0d27310df0ad487e7d1ec10a8d4341dbdcabfac58f2f7?s=60&d=identicon&r=G",
            "https://1.gravatar.com/avatar/a12739ca6f959ce82fc12cd6fb0e70ff501f50d8b3e2538cfbc5451a8575f18b?s=60&d=identicon&r=G",
            "https://1.gravatar.com/avatar/a12739ca6f959ce82fc12cd6fb0e70ff501f50d8b3e2538cfbc5451a8575f18b?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c5bcdeee0f7e214945e0d27310df0ad487e7d1ec10a8d4341dbdcabfac58f2f7?s=60&d=identicon&r=G",
            "https://1.gravatar.com/avatar/a12739ca6f959ce82fc12cd6fb0e70ff501f50d8b3e2538cfbc5451a8575f18b?s=60&d=identicon&r=G",
            "https://0.gravatar.com/avatar/c5bcdeee0f7e214945e0d27310df0ad487e7d1ec10a8d4341dbdcabfac58f2f7?s=60&d=identicon&r=G",
            "https://1.gravatar.com/avatar/a12739ca6f959ce82fc12cd6fb0e70ff501f50d8b3e2538cfbc5451a8575f18b?s=60&d=identicon&r=G",
            "https://gonzalo123.files.wordpress.com/2020/09/codigosolido-1.png",
            "https://secure.gravatar.com/blavatar/c0da5a47b02184a1729b799ee1349610d78f982fa5cfd678cb90cfefc7f6088f?s=50&d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png",
            "https://secure.gravatar.com/blavatar/c0da5a47b02184a1729b799ee1349610d78f982fa5cfd678cb90cfefc7f6088f?s=50&d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Gonzalo Ayuso",
            "~ Gonzalo Ayuso"
        ],
        "publish_date": "2010-05-23T00:00:00",
        "summary": "",
        "meta_description": "Not all is web and HTTP. Sometimes we need to create a network service listening to a port. We can create a TCP server in C, Java or even PHP but there's a really helpful daemon in Linux that helps us to do it. This daemon is xinetd. In this article we are going to…",
        "meta_lang": "en",
        "meta_favicon": "https://secure.gravatar.com/blavatar/c0da5a47b02184a1729b799ee1349610d78f982fa5cfd678cb90cfefc7f6088f?s=32",
        "meta_site_name": "Gonzalo Ayuso - Web Architect",
        "canonical_link": "https://gonzalo123.com/2010/05/23/building-network-services-with-php-and-xinetd/",
        "text": "Not all is web and HTTP. Sometimes we need to create a network service listening to a port. We can create a TCP server in C, Java or even PHP but there’s a really helpful daemon in Linux that helps us to do it. This daemon is xinetd. In this article we are going to create a network service with PHP and xinretd.\n\nNow we are going to create our brand new service with xinetd and PHP. Let’s start. First we are going to create a simple network service listening to 60321 port. Our network service will say hello. The PHP script will be very complicated:\n\n// /home/gonzalo/tests/test1.php echo \"HELLO\\n\";\n\nWe want to create a network service on 60321 tcp port so we need to define this port on /etc/services. We put the following line at the end of /etc/services\n\n// /etc/services ... myService 60321/tcp # my hello service\n\nAnd finally we create out xinetd configuration script on the folder /etc/xinet.d/ , called myService (/etc/xinetd.d/myService)\n\n# default: on # description: my test service service myService { socket_type = stream protocol = tcp wait = no user = gonzalo server = /usr/local/bin/php-cli server_args = /home/gonzalo/tests/test1.php log_on_success += DURATION nice = 10 disable = no }\n\nNow we restart xinetd\n\nsudo /etc/init.d/xinetd restart\n\nAnd we have our network service ready:\n\ntelnet localhost 60321 Trying ::1... Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. HELLO Connection closed by foreign host.\n\nEasy. isn’t it? But it may be not really useful. So we are going to change something in our php script to accept input. Here we cannot use POST or GET parameters (that’s not HTTP) so we need to read input from stdin. In PHP (and in other languajes too) that’s pretty straightforward.\n\n$handle = fopen('php://stdin','r'); $input = fgets($handle); fclose($handle); echo \"hello {$input}\";\n\nNow if we run our script from CLI it will ask for input.\n\nSo if we test our network service with a telnet.\n\nAnd we have our network service ready:\n\ntelnet localhost 60321 Trying ::1... Trying 127.0.0.1... Connected to localhost. Escape character is '^]'.\n\nwe type: “gonzalo” and:\n\ngonzalo hello gonzalo Connection closed by foreign host."
    }
}