{
    "id": "dbpedia_8291_3",
    "rank": 52,
    "data": {
        "url": "https://github.com/sous-chefs/xinetd",
        "read_more_link": "",
        "language": "en",
        "title": "chefs/xinetd: Development repository for the xinetd cookbook",
        "top_image": "https://opengraph.githubassets.com/fb1d7f2b0c59042a9e47a03004d9f51d1365924b8ebf421cc201e0337eb4871c/sous-chefs/xinetd",
        "meta_img": "https://opengraph.githubassets.com/fb1d7f2b0c59042a9e47a03004d9f51d1365924b8ebf421cc201e0337eb4871c/sous-chefs/xinetd",
        "images": [
            "https://camo.githubusercontent.com/5ed9257008c8e9bbca8d54825e0febd466d220afcb61f49f07ecee9f267c8dd4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f6261636b6572732f62616467652e737667",
            "https://camo.githubusercontent.com/0edd5e896e5a09c3f12def72e35ac4dd3bbc2ff342a922711da02011858bc1e2/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f72732f62616467652e737667",
            "https://camo.githubusercontent.com/d1c93f53956018f4d6b7bb9dcbbef40788fe9d59f20787062f470bdd45480d12/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d677265656e2e737667",
            "https://camo.githubusercontent.com/052a683709ce59947d3744132e6e014cbadc87962e8c59a470fc893465af29e6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f6261636b6572732e7376673f77696474683d363030266176617461724865696768743d3430",
            "https://camo.githubusercontent.com/96cc3da0f66317ea9515815c3e37557a1f3aef90ea403fcbe4ce7a59376679e4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f302f6176617461722e7376673f6176617461724865696768743d313030",
            "https://camo.githubusercontent.com/2bc31e27286c8112d6c6490ff46656fd583f15a2fd3f48f77fcef37e5872c940/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f312f6176617461722e7376673f6176617461724865696768743d313030",
            "https://camo.githubusercontent.com/96660e06f86b1682a85c714b65479fb365fd5bf939a2974e9c50069eac5b93bd/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f322f6176617461722e7376673f6176617461724865696768743d313030",
            "https://camo.githubusercontent.com/79eedcd8e485e35cda1168df6b759bd6c701c69ba73214f94cf2a06717a7ebdc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f332f6176617461722e7376673f6176617461724865696768743d313030",
            "https://camo.githubusercontent.com/273c88f32fe74b999fe33c55db14dd27930e30272c313147701a8de7b7495fc0/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f342f6176617461722e7376673f6176617461724865696768743d313030",
            "https://camo.githubusercontent.com/737d0c57e4f5a0cbea453fb4d8e41bda06b697bfaa334fd7b330c5ec56c9de32/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f352f6176617461722e7376673f6176617461724865696768743d313030",
            "https://camo.githubusercontent.com/d14ae729dc30fb387c2cafafdcba27a0cb26b8af1c8a107085f120ffedf8452b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f362f6176617461722e7376673f6176617461724865696768743d313030",
            "https://camo.githubusercontent.com/e5fa0d8e72c3e35cea500fd94aecd3b5696d7233fb02cc49151bf43d5d3f3719/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f372f6176617461722e7376673f6176617461724865696768743d313030",
            "https://camo.githubusercontent.com/f85185f045fc78c4bd24f5c8d272cbc9c67d5cbf32da7abd65b95f2331aa323e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f382f6176617461722e7376673f6176617461724865696768743d313030",
            "https://camo.githubusercontent.com/369bc468d81aac49f1eef20bf3f777d1a1fb17662ad42a3f302735f285eed980/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f75732d63686566732f73706f6e736f722f392f6176617461722e7376673f6176617461724865696768743d313030",
            "https://github.githubassets.com/assets/open_collective-0a706523753d.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "sous-chefs"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Development repository for the xinetd cookbook. Contribute to sous-chefs/xinetd development by creating an account on GitHub.",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/sous-chefs/xinetd",
        "text": "This cookbook installs and configures the xinetd internet service daemon. It also provides an LWRP for managing xinetd services.\n\nThis cookbook is maintained by the Sous Chefs. The Sous Chefs are a community of Chef cookbook maintainers working together to maintain important cookbooks. If youâ€™d like to know more please visit sous-chefs.org or come chat with us on the Chef Community Slack in #sous-chefs.\n\nThis cookbook has been tested on Centos and Ubuntu.\n\nChef 15.3+\n\nThe xinetd_service resource allows you to define and enable xinetd services. For example:\n\nAll options supported in xinetd 2.3.14 are currently supported by this provider.\n\nNote that no type checking is done for attribute values. Values are rendered directly into the xinetd configuration file for that service. Array's are coerced to space separated strings while true and false are converted to \"yes\" and \"no\", respectively.\n\nThe xinetd_service provider will attempt to relaod the xinetd service. Including this cookbooks default recipe before using it will ensure that such a service exists.\n\nThe default recipe uses the following attributes to render the default xinetd.conf configuration block. See xinetd.conf(5) for their meanings. Boolean values are translated to \"yes\" and \"no\" before being rendered and Array's are coerced to space separated strings. Currently, the default attribute values are taken from the example configuration in the xinetd source repository.\n\ndefault['xinetd']['defaults']['log_type']\n\ndefault['xinetd']['defaults']['bind']\n\ndefault['xinetd']['defaults']['per_source']\n\ndefault['xinetd']['defaults']['umask']\n\ndefault['xinetd']['defaults']['log_on_success']\n\ndefault['xinetd']['defaults']['log_on_failure']\n\ndefault['xinetd']['defaults']['v6only']\n\ndefault['xinetd']['defaults']['only_from']\n\ndefault['xinetd']['defaults']['no_access']\n\ndefault['xinetd']['defaults']['passenv']\n\ndefault['xinetd']['defaults']['instances']\n\ndefault['xinetd']['defaults']['disabled']\n\ndefault['xinetd']['defaults']['enabled']\n\ndefault['xinetd']['defaults']['banner']\n\ndefault['xinetd']['defaults']['banner_success']\n\ndefault['xinetd']['defaults']['banner_fail']\n\ndefault['xinetd']['defaults']['groups']\n\ndefault['xinetd']['defaults']['cps']\n\ndefault['xinetd']['defaults']['max_load']\n\nThe builtin_services recipe uses the following attributes to determine which of the builtin xinetd services to configure and enable. All are true by default.\n\ndefault['xinetd']['builtin_services']['chargen-stream']['enabled']\n\ndefault['xinetd']['builtin_services']['chargen-dgram']['enabled']\n\ndefault['xinetd']['builtin_services']['daytime-stream']['enabled']\n\ndefault['xinetd']['builtin_services']['daytime-dgram']['enabled']\n\ndefault['xinetd']['builtin_services']['discard-stream']['enabled']\n\ndefault['xinetd']['builtin_services']['discard-dgram']['enabled']\n\ndefault['xinetd']['builtin_services']['echo-stream']['enabled']\n\ndefault['xinetd']['builtin_services']['echo-dgram']['enabled']\n\ndefault['xinetd']['builtin_services']['time-stream']['enabled']\n\ndefault['xinetd']['builtin_services']['time-dgram']['enabled']\n\ndefault['xinetd']['builtin_services']['tcpmux-server']['enabled']\n\nInstalls the xinetd package, renders a basic configuration file, and starts the xinetd service.\n\nThis recipe configures stream and datagram services that xinetd implements internally:\n\necho\n\ntime\n\ndaytime\n\nchargen\n\ndiscard\n\ntcpmux-server\n\nBy default this recipes configures all services. Individual services can be disabled by using the appropriate attributes (see above.)\n\nAuthor:: Steven Danna\n\nThis project exists thanks to all the people who contribute.\n\nThank you to all our backers!\n\nSponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website."
    }
}