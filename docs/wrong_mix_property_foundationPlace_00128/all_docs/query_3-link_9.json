{
    "id": "wrong_mix_property_foundationPlace_00128_3",
    "rank": 9,
    "data": {
        "url": "https://documentation.nokia.com/sr/23-10-1/books/services-overview/service-entities.html",
        "read_more_link": "",
        "language": "en",
        "title": "Service entities",
        "top_image": "https://documentation.nokia.com/sr/23-10-1/favicon-32x32.ico",
        "meta_img": "https://documentation.nokia.com/sr/23-10-1/favicon-32x32.ico",
        "images": [
            "https://documentation.nokia.com/sr/23-10-1/nokia_logo.svg",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/ossg001.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/ossg002.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/ossg003.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/al_0586_qinq_ports_grahics_fid_1670_1.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/al_0587_qinq_ports_grahics_fid_1670_2.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/al_0915_vlan_tag_handling_fids_2065_2070.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/ossg004.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/ossg106_class_based_forwarding.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/sw0628.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/sw0629.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/sw0630.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/al_014_1(2).png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/al_0144_mpls-sdp_binding_loopback.png",
            "https://documentation.nokia.com/sr/23-10-1/books/services-overview/graphics/al_0145_mpls-sdp_binding_loopback.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "The basic logical entities in the service model used to construct a service are: Customers SAPs Service distribution points (for distributed services only) Figure 1 . Service entities In this section, ...",
        "meta_lang": "en",
        "meta_favicon": "../../favicon-32x32.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "SAPs and MPLS SDP bindings within Ethernet services, Epipe, and VPLS can be placed into a loopback mode, which allows packets to be looped back toward the source of the traffic. The feature is specific to the entity on which the loopback is configured and is non-disruptive to other SAPs and SDP bindings on the same port or LAG.\n\nEpipe, PBB Epipe, VPLS, and I-VPLS service constructs support both ingress and egress loopbacks on Ethernet SAPs or MPLS SDP bindings.\n\nNote: Do not enable this functionality in the core PBB context because there is no ISID awareness. If this feature is enabled in the core PBB context all traffic that arrives on the B-SAP or B-MPLS binding is looped back into the PBB context, without regard for ISID or customer specific MAC headers.\n\nAn ingress loopback configured on the entity has the following effects on traffic forwarding on the entity:\n\nTraffic arriving on the entity is looped back to the same entity, via the fabric.\n\nTraffic attempting to egress that entity from another SAP or SDP binding within the service is blocked.\n\nEssentially an ingress loopback function isolates the SAP or MPLS SDP binding from the rest of the service. Ingress loopback packet processing uses a simple Epipe service example to show the various touch points for a packet that is processed by an ingress loopback as it moves through the network element.\n\nAn egress loopback configured on the entity has the following effects on the traffic forwarding on the entity:\n\nTraffic arriving on any service SAP or SDP binding that is forwarded to an egress loopback is looped back into the service.\n\nTraffic attempting to gain access to the service from that entity (ingress the network element from the entity) is dropped.\n\nIn the case of the egress loopback, the SAP or MPLS SDP binding is not isolated from the rest of the service it remains part of the service and reflects traffic back into the service.\n\nNote: Extreme care must be used when considering the application of an egress loopback in a VPLS or I-VPLS service. Because a VPLS service relies on MAC based forwarding, any packet that arrives at an egress loopback is reflected back into the service, which uses MAC based forwarding to apply the correct forwarding decision. In a live multipoint service with active endpoints this could have a major negative impact on the service and the clients connected to this service. Even if the forwarding database is primed, any arriving broadcast, unknown or multicast traffic arrives on the egress loopback and is reflected back into the service causing (at the very least) duplication of this type of traffic in the service.\n\nEgress loopback packet processing uses a simple Epipe service to illustrate the various touch points for a packet that is processed by an egress loopback as it moves through the network element. Egress processing does not perform queuing functions on the egress; only functions of the forwarding plane like remarking are performed.\n\nThe operational state of the SAP or MPLS SDP binding does not change as a result of the loopback function. This means a SAP or MPLS SDP binding that is operationally up does not change state strictly because the loopback started or stopped. Of course control protocols that are attempting to gain access via the entity that is not allowing packets to enter the service eventually time out.\n\nExercise caution when considering the use of control protocols in a service with enabled loopbacks. The operator must understand that control protocol interruptions can significantly impact the state of the SAP. When SAPs are dynamically created using a protocol or a protocol is required to maintain the operational state of the SAP, interrupting the control protocol causes the SAP to fail. Other SAPs linking their state to a failed SAP react to that failure as well. This loopback function is per Ethernet SAP or MPLS SDP binding. That is, all traffic that is extracted and sent to the CPM before the loopback process is looped back in the direction it was received, or in the case of VPLS, back into the service. All service based control protocols that are included with this service should be removed to ensure the loopback process is handling the packets and not some other function on the node that can extract the control protocol but never respond because the service is blocked. However, there may be instances where it is essential to continue running control protocols for the service during a loopback. For example, Down MEPs on an Ethernet SAP could continue to process ETH-CFM packets if the loopback is on the mate Ethernet SAP and was configured as an egress loopback.\n\nBy default, no MAC swap functions are performed. Options are available to support various MAC swap functions. MAC-Swap configuration and options lists the actions and functions based on the configured mac-swap and associated options.\n\nTable 5. MAC-Swap configuration and options Configuration Reflection with inbound DA Action Options Unicast (learned) Unicast (unknown) Broadcast Multicast\n\nOnly the outer Layer 2 header can be manipulated.\n\nIn order for the loopback function to operate, the service must be operationally up, and the SAP, port, or LAG must be administratively up. In the case of a LAG, the LAG must have member ports that are administratively up. If any of these conditions are not met, the loopback function fails.\n\nA SAP that is configured for egress loopback is not required to be operationally up, and the cabling does not need to be connected to the port. However, all necessary hardware must be installed in the network element for the ingress packets to be routed to the egress. Ghost ports do not support loopback operations.\n\nAn Epipe service enters an operationally down state when one of the SAPs is non-operational. The service state remains or is returned to an operational state if the following command is configured under the non-operational SAP.\n\nconfigure service epipe sap ignore-oper-down\n\nA VPLS service remains operational as long as one SAP in the service is operational. However, if the SAP is a VPLS is configured over a LAG, the SAP is removed from the forwarding table if it has a non-operational state, and, consequently, packets never reach the egress. Use the following command under the VPLS SAP over a LAG to allow the LAG SAP to be reached even with a non-operational SAP.\n\nconfigure service vpls sap process-cpm-traffic-on-sap-down\n\nIf the service state is not operational or the egress SAP is not reachable via the forwarding plane, the traffic never arrives on the SAP to be looped.\n\nMPLS SDP bindings must be operationally up or the loopback function fails.\n\nUse the commands in the tools context to configure this functionality. In this specific case, the loopback tools supporting this functionality may be configured through CLI or through SNMP. However, these commands are never resident in the configuration. This means the loopback survives high availability events that cause one CPM to change from standby to active, as well as ISSU function or IOM resets (hard or soft). However the loopback function does not survive a complete node reboot.\n\nIn the case on SNMP, it is possible to configure a static MAC address for the MAC swap function without actually invoking the MAC swap. This is not possible through the CLI.\n\nThis function requires a minimum of IOM/IMM.\n\nThis feature and functions that use mirroring are mutually exclusive.\n\nActive loopback mode shows of sap 1/1/10:2.2 in service ID 2 (an Epipe) in an active loopback mode with a MAC swap for all broadcast and multicast destined packets.\n\nThe following example show output of the active loopback mode based on Active loopback mode.\n\nActive loopback mode configuration\n\nshow service id 2 base\n\n=============================================================================== Service Basic Information =============================================================================== Service Id : 2 Vpn Id : 0 Service Type : Epipe Name : (Not Specified) Description : (Not Specified) Customer Id : 1 Creation Origin : manual Last Status Change: 07/08/2013 09:57:02 Last Mgmt Change : 07/08/2013 09:56:49 Admin State : Up Oper State : Up MTU : 1514 Vc Switching : False SAP Count : 2 SDP Bind Count : 0 Per Svc Hashing : Disabled Force QTag Fwd : Disabled ------------------------------------------------------------------------------- Service Access & Destination Points ------------------------------------------------------------------------------- Identifier Type AdmMTU OprMTU Adm Opr ------------------------------------------------------------------------------- sap:1/1/2:2.2 qinq 1522 1522 Up Up sap:1/1/10:2.2 qinq 1522 1522 Up Up =============================================================================== tools perform service id 2 loopback eth sap 1/1/10:2.2 start ingress mac-swap mac 00:00:00:00:00:88 00:00:00:00:00:88\n\ntools dump service loopback\n\n=============================================================================== Service Ethernet Loopback Points =============================================================================== Identifier Svc ID Type Swap Swap Oper Unicast Mlt/Br ------------------------------------------------------------------------------- SAP 1/1/10:2.2 qinq 2 ingr SA<->DA static up ------------------------------------------------------------------------------- No. of Service ethernet loopback points: 1 ===============================================================================\n\ntools dump service id 2 loopback sap 1/1/10:2.2\n\n=============================================================================== Service ID 2 SAP 1/1/10:2.2 Loopback =============================================================================== Identifier (SAP) : 1/1/10:2.2 qinq Service ID : 2 Type : Ingress MAC Swap Unicast : SA<->DA Multicast/Broadcast : Static Static MAC : 00:00:00:00:00:88 SAP Oper State : Up ------------------------------------------------------------------------------- Sap Statistics ------------------------------------------------------------------------------- Last Cleared Time : N/A Packets Octets CPM Ingress : 491790 46721290 Forwarding Engine Stats Dropped : 0 0 Off. HiPrio : 0 0 Off. LowPrio : 0 0 Off. Uncolor : 0 0 Off. Managed : 0 0 Queueing Stats(Ingress QoS Policy 1) Dro. HiPrio : 0 0 Dro. LowPrio : 0 0 For. InProf : 0 0 For. OutProf : 0 0 Queueing Stats(Egress QoS Policy 1) Dro. InProf : 0 0 Dro. OutProf : 0 0 For. InProf : 0 0 For. OutProf : 0 0 ------------------------------------------------------------------------------- ===============================================================================\n\nUse a stop command to stop a loopback.\n\ntools perform service id 2 loopback eth sap 1/1/10:2.2 stop\n\nETH-CFM MEPs support the processing of ETH-CFM PDUs without interrupting the flow of service data. ETH-CFM processing identifies, processes, and responds to the appropriate ETH-CFM PDUs directed at the target MEP using domain-level logic comparison, equal to and lower. This behavior lends itself well to the testing of connectivity, performance monitoring, and path information. The pinpoint ETH-CFM processing logic also lends itself well to service activation testing streams encapsulated in ETH-LBM frames.\n\nThe lbm-svc-act-responder command option allocates additional resources to the associated MEP to process high-speed service activation streams encapsulated in ETH-LBM frames. When a MEP is created with this option, it streamlines the processing of the inbound ETH-LBM frame. This is accomplished by performing basic ETH-CFM header parsing, replacing the inbound ETH-LBM operational code (03) with the outbound ETH-LBR operational code (02), swapping source and destination MAC addresses, and reflecting any Data TLVs and other data contained in the PDU without validation. A MEP configured with the lbm-svc-act-responder command option operates in promiscuous ETH-LBM mode.\n\nPromiscuous ETH-LBM mode bypasses some checks and extended functions typically performed by a MEP. In this mode, the MEP does not validate the Layer 2 destination MAC address of the arriving ETH-LBM frame to ensure that it matches the MEP. ETH-LB system statistics and per-MEP statistics, as well as ETH-LB specific counters, are not incremented. CFM debugging is not available for these ETH-LB packets.\n\nOnly ETH-LBM PDUs at the same domain level as the MEP that is configured with the lbm-svc-act-responder command option access the additional resources required to accommodate high-speed service activation processing. Normal processing of ETH-CFM packets occurs for all other ETH-CFM PDUs that arrive on the MEP with the same domain level. The MEP also processes and terminates the lower levels as per normal processing. To ensure correct handling of the service activation stream encapsulated in the ETH-LBM PDU, the level of all ETH-LBM packets in the stream must equal that of the target MEP with the lbm-svc-act-responder command option.\n\nThe ETH-CFM level of the high-speed ETH-LBM stream must match the level of a MEP configured with the lbm-svc-act-responder command option. It must not target any lower ETH-CFM level that the MEP terminates. When the service activation test is complete, the MEP can be returned to standard processing by removing this command. If there is available bandwidth, the MEP responds to other ETH-CFM PDUs, such as ETH-DMM marker packets, using standard processing.\n\nThis mode of operation is supported for Up and Down MEPs in Epipe and VPLS services as well as for base router interfaces. This functionality requires a minimum of FP3 hardware.\n\nThere is interaction between the lbm-svc-act-responder command and the tools perform service id loopback eth command. Nokia recommends that either the lbm-svc-act-responder or the tools perform service id loopback eth command be used at any time within a service. If both commands must be configured, and the target reflection point is the MAC Swap Loopback function, the inbound stream of data must not include ETH-CFM traffic that is equal to or lower than the domain level of any configured MEP which would otherwise extract and process the ETH-CFM message.\n\nIf the reflection target is a MEP configured with the lbm-svc-act-responder command, the mode (ingress or egress) of the SAP or SDP specified with the tools command and the MEP direction (up or down) must match when the functions are enabled on the same reflection point. The domain level of the inbound ETH-LBM must be the same as that of the MEP configured with lbm-svc-act-responder. At no time should the two functions be conflicting with each other along the path of the stream. Such a conflict can lead to unpredictable and possibly destabilizing situations."
    }
}