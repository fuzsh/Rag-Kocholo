{
    "id": "dbpedia_120_0",
    "rank": 57,
    "data": {
        "url": "https://bookdown.org/compfinezbook/introcompfinr/GWN-Monte-Carlo-Simulation.html",
        "read_more_link": "",
        "language": "en",
        "title": "Introduction to Computational Finance and Financial Econometrics with R",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModelMsftRetC-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModelMsft4panel-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModelSimRet-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModelSimRet4panel-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModelSimRW-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModelMsftPrices-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModelSimRetMultiple-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModelSimPricesMultiple-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModel3returns-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModel3returnsScatter-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModel3returnsMC-1.png",
            "https://bookdown.org/compfinezbook/introcompfinr/06-CERModel_files/figure-html/figCerModel3returnsMCscatter-1.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Eric Zivot"
        ],
        "publish_date": "2021-06-11T00:00:00",
        "summary": "",
        "meta_description": "Add description",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "6.2 Monte Carlo Simulation of the GWN Model\n\nA simple technique that can be used to understand the probabilistic behavior of a model involves using computer simulation methods to create pseudo data from the model. The process of creating such pseudo data is called Monte Carlo simulation. Monte Carlo simulation of a model can be used as a first step reality check of the model. If simulated data from the model do not look like the data that the model is supposed to describe, then serious doubt is cast on the model. However, if simulated data look reasonably close to the actual data then the first step reality check is passed. Ideally, one should consider many simulated samples from the model because it is possible for a given simulated sample to look strange simply because of an unusual set of random numbers.\n\nMonte Carlo simulations can be used to reveal properties of a model that are hard to derive analytically.\n\nMonte Carlo simulation can also be used to create “what if?” type scenarios for a model. Different scenarios typically correspond with different model parameter values.\n\nFinally, Monte Carlo simulation can be used to study properties of statistics computed from the pseudo data from the model. For example, Monte Carlo simulation can be used to illustrate the concepts of estimator bias and confidence interval coverage probabilities (see Chapter 9).\n\nTo illustrate the use of Monte Carlo simulation, consider creating pseudo return data from the GWN model (6.1) for a single asset. The steps to create a Monte Carlo simulation from the GWN model are:\n\nMonte Carlo Steps: Single Asset\n\nFix values for the GWN model parameters \\(\\mu\\) and \\(\\sigma\\).\n\nDetermine the number of simulated values, \\(T\\), to create.\n\nUse a computer random number generator to simulate \\(T\\) \\(iid\\) values of \\(\\varepsilon_{t}\\) from a \\(N(0,\\sigma^{2})\\) distribution. Denote these simulated values as \\(\\tilde{\\varepsilon}_{1},\\ldots,\\tilde{\\varepsilon}_{T}\\).\n\nCreate the simulated return data \\(\\tilde{R}_{t}=\\mu+\\tilde{\\varepsilon}_{t}\\) for \\(t=1,\\ldots,T\\).\n\nTo motivate plausible values for \\(\\mu\\) and \\(\\sigma\\) in the simulation, Figure 6.1 shows the monthly continuously compounded (cc) returns on Microsoft stock over the period January 1998 through May 2012. The data is the same as that used in Chapter 5 and is constructed from the IntroCompFinR \"xts\" object msftDailyPrices as follows:\n\n## [1] 0.004125523 0.100212624\n\nThe parameter \\(\\mu=E[R_{t}]\\) in the GWN model is the expected monthly return, and \\(\\sigma\\) represents the typical size of a deviation about \\(\\mu\\). In Figure 6.1, the returns seem to fluctuate up and down about a central value near 0 and the typical size of a return deviation about 0 is roughly 0.10, or 10% (see dashed lines in Figure 6.1). The sample mean turns out to be \\(\\hat{\\mu}=0.004\\) (0.4%) and the sample standard deviation is \\(\\hat{\\sigma}=0.100\\) (10%). Figure 6.2 shows three distribution summaries (histogram, boxplot and normal qq-plot) and the SACF computed from the sample returns. The returns look to have slightly fatter tails than the normal distribution and show little evidence of linear time dependence (autocorrelation).\n\n\\(\\blacksquare\\)\n\nTo mimic the monthly return data on Microsoft in the Monte Carlo simulation, the values \\(\\mu=0.004\\) and \\(\\sigma=0.10\\) are used as the model’s true parameters and \\(T=172\\) is the number of simulated values (sample size of actual data). Let \\(\\{\\tilde{\\varepsilon}_{1},\\ldots,\\tilde{\\varepsilon}_{172}\\}\\) denote the \\(172\\) simulated values of the random news variable \\(\\varepsilon_{t}\\sim\\mathrm{GWN}(0,(0.10)^{2})\\). The simulated returns are then computed using: \\[\\begin{equation} \\tilde{R}_{t}=0.004+\\tilde{\\varepsilon}_{t},~t=1,\\ldots,172\\tag{6.8} \\end{equation}\\] To create the simulated returns from (6.8) use:\n\nThe simulated returns \\(\\{\\tilde{R}_{t}\\}_{t=1}^{172}\\) (with the same time index as the Microsoft returns) are shown in Figure 6.3. The simulated return data fluctuate randomly about \\(\\mu=0.004\\), and the typical size of the fluctuation is approximately equal to \\(\\sigma=0.10\\). The simulated return data look somewhat like the actual monthly return data for Microsoft. The main difference is that the return volatility for Microsoft appears to have decreased in the latter part of the sample whereas the simulated data has constant volatility over the entire sample. Figure 6.4 shows the distribution summaries (histogram, boxplot and normal qq-plot) and the SACF for the simulated returns. The simulated returns are normally distributed and show thinner tails than the actual returns. The simulated returns also show no evidence of linear time dependence (autocorrelation).\n\n\\(\\blacksquare\\)\n\nThe RW model for log-price based on the GWN model (6.8) calibrated to Microsoft log prices is: \\[ p_{t}=2.592+0.004\\cdot t+\\sum_{j=1}^{t}\\varepsilon_{j},\\varepsilon_{j}\\sim\\mathrm{GWN}(0,(0.10)^{2}). \\] where \\(p_{0}=2.586=\\ln(13.27)\\) is the log of Microsoft Price at the end of January 1998. Given \\(p_{t}\\), the price level is determined using \\(P_{t} = e^{p_{t}}\\). A Monte Carlo simulation of this RW model with drift can be created in R using:\n\nFigure 6.5 shows the simulated log prices and prices. The top panel shows the simulated log price, \\(\\tilde{p}_{t}\\), and the bottom panel shows the simulated price levels \\(\\tilde{P}_{t}=e^{\\tilde{p}_{t}}\\) For comparison, Figure 6.6 shows the actual log prices and price levels for Microsoft stock. Notice the similar behavior of the simulated random walk data and the actual data.\n\n\\(\\blacksquare\\)\n\nThe previous examples show one Monte Carlo simulation from the GWN model for cc returns. The simulated returns were compared to the actual returns to do the first stage reality check. Here, the simulated returns looked similar to actual returns so the GWN model passed the first stage reality check. However, keep in mind that the simulated returns represent only one random draw of size \\(T\\) from the GWN model for cc returns. It is possible that you can, by chance, get a strange set of simulated returns which would lead you to reject the first stage reality check even if the GWN model is a good model for actual returns. To guard against this possibility, you should always create many Monte Carlo simulations from the proposed model and use the typical behavior from the simulations to do the first step reality check.\n\nTo create ten simulated samples of size \\(T=132\\) from the GWN model for Microsoft cc returns use:\n\nThe ten simulations are shown in Figure 6.7.\n\nEach panel shows an alternative reality for returns over the period February 1998 through May 2012. Each one of these alternative realities is equally likely to happen, and the typical behavior of the simulated returns is similar to actual returns."
    }
}