{
    "id": "dbpedia_120_1",
    "rank": 67,
    "data": {
        "url": "https://www.vosesoftware.com/Articles/Monte-Carlo-simulation-explained.php",
        "read_more_link": "",
        "language": "en",
        "title": "How Does Monte Carlo Simulation Work?",
        "top_image": "https://www.vosesoftware.com/assets/img/logos/voselogodeepblue.svg",
        "meta_img": "https://www.vosesoftware.com/assets/img/logos/voselogodeepblue.svg",
        "images": [
            "https://www.facebook.com/tr?id=660785431337678&ev=PageView&noscript=1",
            "https://www.vosesoftware.com/assets/img/logos/logo_condensed_dark.png",
            "https://riskwiki.vosesoftware.com/images/imagec11.gif",
            "https://www.vosesoftware.com/assets/img/logos/modelriskwhite.png",
            "https://www.vosesoftware.com/assets/img/products/Spreadsheet model before adding uncertainty.png",
            "https://www.vosesoftware.com/assets/img/products/Spreadsheet model with uncertainty added using ModelRisk.png",
            "https://www.vosesoftware.com/assets/img/products/A triangular distribution.png",
            "https://riskwiki.vosesoftware.com/images/imagex7.gif",
            "https://riskwiki.vosesoftware.com/images/imagex8.gif",
            "https://www.vosesoftware.com/includes/images/site/logosmall.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "project risk analysis",
            "spreadsheet risk analysis",
            "monte-carlo simulation",
            "integrated risk management",
            "quantitative risk analysis"
        ],
        "tags": null,
        "authors": [
            "Vose Software"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Monte Carlo simulation is an essential tool for evaluating risk. Find out how it works and helps solve risk-based decision problems",
        "meta_lang": "en",
        "meta_favicon": "../includes/images/favicon/apple-icon-57x57.png",
        "meta_site_name": "",
        "canonical_link": "https://www.vosesoftware.com/Articles/Monte-Carlo-simulation-explained.php",
        "text": "What is Monte Carlo simulation?\n\nMonte Carlo simulation (also known as the Monte Carlo Method) is a computer simulation technique that constructs probability distributions of the possible outcomes of the decisions you might choose to make. Creating the probability distributions of the outcomes allows the decision-maker to quantitatively assess the level of risk that comes with taking a particular decision and, as a result, select the decision that provides the best balance of benefit against risk.\n\nA typical result of a Monte Carlo simulation is a histogram of the simulated outcomes, like the following:\n\nThe horizontal axis shows the possible amount of profit a venture may make, and the vertical axis states how likely those values are. In this example, the histogram shows that the most likely profit is a little under zero, with a possible loss of up to $1M or so, but a potential gain of $5-6M, or even higher (though with a very small probability).\n\nHow does a Monte Carlo simulation work?\n\nTo perform a Monte Carlo simulation, you must first have a mathematical model, like a spreadsheet. The model will have one of more results of interest (called outputs) - like profit, NPV, cashflow, cost, sales volume, etc. The model will depend on a number of quantitative assumptions (called inputs) - like market size, macroeconomic factors, production capacity, etc. Then for given values of these inputs, the model determines the value of the outputs through a series of equations.\n\nThe greatest weakness of such models is that we are almost always unsure what the value of the inputs will be and, as a result, we are unsure of the outputs.\n\nBefore Monte Carlo simulation, decision-makers would explore how uncertain the outputs (like profit) were by running different 'what-if' scenarios. In a typical what-if scenario, one would enter values for each input that would reduce the output result and note the drop in the output, then enter input values that would increase the output and again note the change in the output. This would give a feel for how uncertain the output value was. For example, the following model performs three what-if scenarios, summing a set of costs, where the three scenarios explore what the total cost (the output) might be if each individual cost item (the inputs) were all very low, all at values considered likely, or all at high values:\n\nThis kind of analysis shows the decision-maker that the total cost will lie somewhere between $297.5k and $348.4k, and projects a most likely cost of $312.1.\n\nAlthough simple, these 'What-if' analyses are largely useless because of three key issues:\n\nThey do not take account of the probability of a scenario. For example, if we could say that there was a 1% chance that each of the cost items was in the range of the minimum estimate then, assuming these costs were independent of each other, the chances of all lying around their minimum value would be 1% x 1% x ... x 1%, i..e 0.019 = 1 in a billion billion, a probability so small as to be meaningless.\n\nThey don't consider the variety of values that an input can take, just two or three possible values; and\n\nThey don't take account of the combinations of values that could constitute a scenario. For example, in the model above some costs could be towards their minima, others towards their maxima, and others around the best guess. With just these nine variables and three values per variable, one can construct 39, nearly 20,000 different combinations!\n\nMonte Carlo simulation replaces the values for uncertain variables within the model with functions that generate random samples from probability distributions that represent the uncertainty. For example, the following model is written in ModelRisk:\n\nThe Cell F5 contains the ModelRisk function VoseTriangle(Minimum, MostLikely, Maximum) where the input parameters come from the sheet. The function randomly generates a sample, here $128.1k, where the probability of each possible value being generated is defined by the shape of the distribution used. In this case, the Triangle(120, 125, 140) looks like this:\n\nThe horizontal axis represents the possible value of the variable (the land purchase cost) and the vertical axis represents the probability of each value occurring. The Triangle distribution interprets the three input values with straight lines to form a triangular shape, hence its name. There are many different distribution types used in risk analysis. The most common are: Triangle, PERT, binomial, Poisson, Normal, Lognormal and Uniform distributions. However, depending on the subject of the model (e.g. stock prices, system reliability, epidemiology) the set of distributions used will be very different. ModelRisk includes essentially all probability distributions used in risk analysis.\n\nIn a Monte Carlo simulation model, values that are uncertain are replaced by functions generating random samples from distributions chosen by the modeller. Then a simulation is run on that model, which amounts to recalculating the model many times, each time using different random values for all the uncertain variables and storing the resultant values for each output of the model. At the end of the simulation run, the values for each output can be analysed in various ways - graphs like the histogram above, and others, give pictorial representations of the shape and range of the uncertainty for each output. The output data can also be analysed statistically to provide information like the probability of the output falling above (or below) some specific target value."
    }
}