{
    "id": "dbpedia_7395_1",
    "rank": 92,
    "data": {
        "url": "https://docs.openstack.org/horizon/11.0.1/_modules/horizon/forms/views.html",
        "read_more_link": "",
        "language": "en",
        "title": "horizon.forms.views â€” horizon 11.0.1 documentation",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "# Copyright 2012 Nebula, Inc. # # Licensed under the Apache License, Version 2.0 (the \"License\"); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import json import os from django.conf import settings from django import http from django.utils.translation import ugettext_lazy as _ from horizon import exceptions from horizon import views ADD_TO_FIELD_HEADER = \"HTTP_X_HORIZON_ADD_TO_FIELD\"\n\n[docs]class ModalBackdropMixin(object): \"\"\"This mixin class is to be used for together with ModalFormView and WorkflowView classes to augment them with modal_backdrop context data. .. attribute: modal_backdrop (optional) The appearance and behavior of backdrop under the modal element. Possible options are: * 'true' - show backdrop element outside the modal, close the modal after clicking on backdrop (the default one); * 'false' - do not show backdrop element, do not close the modal after clicking outside of it; * 'static' - show backdrop element outside the modal, do not close the modal after clicking on backdrop. \"\"\" modal_backdrop = 'static' def __init__(self, *args, **kwargs): super(ModalBackdropMixin, self).__init__(*args, **kwargs) config = getattr(settings, 'HORIZON_CONFIG', {}) if 'modal_backdrop' in config: self.modal_backdrop = config['modal_backdrop'] def get_context_data(self, **kwargs): context = super(ModalBackdropMixin, self).get_context_data(**kwargs) context['modal_backdrop'] = self.modal_backdrop return context\n\nclass ModalFormMixin(ModalBackdropMixin): def get_template_names(self): if self.request.is_ajax(): if not hasattr(self, \"ajax_template_name\"): # Transform standard template name to ajax name (leading \"_\") bits = list(os.path.split(self.template_name)) bits[1] = \"\".join((\"_\", bits[1])) self.ajax_template_name = os.path.join(*bits) template = self.ajax_template_name else: template = self.template_name return template def get_context_data(self, **kwargs): context = super(ModalFormMixin, self).get_context_data(**kwargs) if self.request.is_ajax(): context['hide'] = True if ADD_TO_FIELD_HEADER in self.request.META: context['add_to_field'] = self.request.META[ADD_TO_FIELD_HEADER] return context"
    }
}