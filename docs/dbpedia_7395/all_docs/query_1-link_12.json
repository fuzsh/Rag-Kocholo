{
    "id": "dbpedia_7395_1",
    "rank": 12,
    "data": {
        "url": "https://en.wikipedia.org/wiki/List_of_file_systems",
        "read_more_link": "",
        "language": "en",
        "title": "List of file systems",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2004-06-28T08:04:18+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/List_of_file_systems",
        "text": "The following lists identify, characterize, and link to more thorough information on file systems. Many older operating systems support only their one \"native\" file system, which does not bear any name apart from the name of the operating system itself.\n\nDisk file systems are usually block-oriented. Files in a block-oriented file system are sequences of blocks, often featuring fully random-access read, write, and modify operations.\n\nADFS – Acorn's Advanced Disc filing system, successor to DFS.\n\nAdvFS – Advanced File System, designed by Digital Equipment Corporation for their Digital UNIX (now Tru64 UNIX) operating system.\n\nAPFS – Apple File System is a next-generation file system for Apple products.\n\nAthFS – AtheOS File System, a 64-bit journaled filesystem now used by Syllable. Also called AFS.\n\nBFS – the Boot File System used on System V release 4.0 and UnixWare.\n\nBFS – the Be File System used on BeOS, occasionally misnamed as BeFS. Open source implementation called OpenBFS is used by the Haiku operating system.\n\nByte File System (BFS) - file system used by z/VM for Unix applications\n\nBtrfs – is a copy-on-write file system for Linux announced by Oracle in 2007 and published under the GNU General Public License (GPL).\n\nCFS – The Cluster File System from Veritas, a Symantec company. It is the parallel access version of VxFS.\n\nCP/M file system — Native filesystem used in the CP/M (Control Program for Microcomputers) operating system which was first released in 1974.\n\nDFS – Acorn's Disc filing system.\n\nDOS 3.x – Original floppy operating system and file system developed for the Apple II.\n\nExtent File System (EFS) – an older block filing system under IRIX.\n\next – Extended file system, designed for Linux systems.\n\next2 – Second extended file system, designed for Linux systems.\n\next3 – A journaled form of ext2.\n\next4 – A follow-up for ext3 and also a journaled filesystem with support for extents.\n\next3cow – A versioning file system form of ext3.\n\nFAT – File Allocation Table, initially used on DOS and Microsoft Windows and now widely used for portable USB storage and some other devices; FAT12, FAT16 and FAT32 for 12-, 16- and 32-bit table depths.\n\nVFAT – Optional layer on Microsoft Windows FAT system to allow long (up to 255 character) filenames instead of only the 8.3 filenames allowed in the plain FAT filesystem.\n\nFATX – A modified version of Microsoft Windows FAT system that is used on the original Xbox console.\n\nFFS (Amiga) – Fast File System, used on Amiga systems. This FS has evolved over time. Now counts FFS1, FFS Intl, FFS DCache, FFS2.\n\nFFS – Fast File System, used on *BSD systems\n\nFossil – Plan 9 from Bell Labs snapshot archival file system.\n\nFiles-11 – OpenVMS file system; also used on some PDP-11 systems; supports record-oriented files\n\nFlex machine file system\n\nHAMMER — clustered DragonFly BSD filesystem, production-ready since DragonFly 2.2 (2009)[1][2]\n\nHAMMER2 — recommended as the default root filesystem in DragonFly since 5.2 release in 2018[3][4][5]\n\nHFS – Hierarchical File System in IBM's MVS from MVS/ESA OpenEdition through z/OS V2R4; not to be confused with Apple's HFS. IBM stated that z/OS users should migrate from HFS to zFS, and in z/OS V2R5 dropped support for HFS.\n\nHFS – Hierarchical File System, in use until HFS+ was introduced on Mac OS 8.1. Also known as Mac OS Standard format. Successor to Macintosh File System (MFS) & predecessor to HFS+; not to be confused with IBM's HFS provided with z/OS\n\nHFS+ – Updated version of Apple's HFS, Hierarchical File System, supported on Mac OS 8.1 & above, including macOS. Supports file system journaling, enabling recovery of data after a system crash. Also referred to as 'Mac OS Extended format or HFS Plus\n\nHPFS – High Performance File System, used on OS/2\n\nHTFS – High Throughput Filesystem, used on SCO OpenServer\n\nISO 9660 – Used on CD-ROM and DVD-ROM discs (Rock Ridge and Joliet are extensions to this)\n\nJFS – IBM Journaling file system, provided in Linux, OS/2, and AIX. Supports extents.\n\nLFS – 4.4BSD implementation of a log-structured file system\n\nMFS – Macintosh File System, used on early Classic Mac OS systems. Succeeded by Hierarchical File System (HFS).\n\nNext3 – A form of ext3 with snapshots support.[6]\n\nMFS – TiVo's Media File System, a proprietary fault tolerant format used on TiVo hard drives for real time recording from live TV.\n\nMinix file system – Used on Minix systems\n\nNILFS – Linux implementation of a log-structured file system\n\nNTFS – (New Technology File System) Used on Microsoft's Windows NT-based operating systems\n\nNeXT - NeXTstation and NeXTcube file system\n\nNetWare File System – The original NetWare 2.x–5.x file system, used optionally by later versions.\n\nNSS – Novell Storage Services. This is a new 64-bit journaling file system using a balanced tree algorithm. Used in NetWare versions 5.0-up and recently ported to Linux.\n\nOneFS – One File System. This is a fully journaled, distributed file system used by Isilon. OneFS uses FlexProtect and Reed–Solomon encodings to support up to four simultaneous disk failures.\n\nOFS – Old File System, on Amiga. Good for floppies, but fairly useless on hard drives.\n\nOS-9 file system\n\nPFS – and PFS2, PFS3, etc. Technically interesting file system available for the Amiga, performs very well under a lot of circumstances.\n\nProDOS – Operating system and file system successor to DOS 3.x, for use on Apple II series computers, including the IIgs\n\nQnx4fs – File system that is used in QNX version 4 and 6.\n\nReFS (Resilient File System) – File system by Microsoft with a particular focus on data resilience in server environments.\n\nReiserFS – File system that uses journaling\n\nReiser4 – File system that uses journaling, newest version of ReiserFS\n\nReliance – Datalight's transactional file system for high reliability applications\n\nReliance Nitro – Tree-based transactional, copy-on-write file system developed for high-performance embedded systems, from Datalight (Acquired by Tuxera in 2019)[7]\n\nRFS – Native filesystem for RTEMS[8]\n\nSkyFS – Developed for SkyOS to replace BFS as the operating system's main file system. It is based on BFS, but contains many new features.\n\nSFS – Smart File System, journaling file system available for the Amiga platforms.\n\nSoup (Apple) – the \"file system\" for Apple Newton Platform, structured as a shallow database\n\nTux3 – An experimental versioning file system intended as a replacement for ext3\n\nUDF – Packet-based file system for WORM/RW media such as CD-RW and DVD, now supports hard drives and flash memory as well.\n\nUFS – Unix File System, used on Solaris and older BSD systems\n\nUFS2 – Unix File System, used on newer BSD systems\n\nVxFS Veritas file system, first commercial journaling file system[citation needed]; HP-UX, Solaris, Linux, AIX, UnixWare\n\nVTOC (Volume Table Of Contents) - Data structure on IBM mainframe direct-access storage devices (DASD) such as disk drives that provides a way of locating the data sets that reside on the DASD volume.\n\nXFS – Used on SGI IRIX and Linux systems\n\nzFS – z/OS File System; not to be confused with other file systems named zFS or ZFS.\n\nzFS - an IBM research project to develop a distributed, decentralized file system; not to be confused with other file systems named zFS or ZFS.\n\nZFS – a combined file system and logical volume manager designed by Sun Microsystems\n\nThese file systems have built-in checksumming and either mirroring or parity for extra redundancy on one or several block devices:\n\nBcachefs – Full data and metadata checksumming,[9][10] bcache is the bottom half of the filesystem. Included in Linux kernel since 6.7[11][12]\n\nBtrfs – A file system based on B-Trees, initially designed at Oracle Corporation.\n\nHAMMER and HAMMER2 – DragonFly BSD's primary filesystems, created by Matt Dillon.[1][2][4][5]\n\nNOVA – The \"non-volatile memory accelerated\" file system for persistent main memory.\n\nReFS (Resilient File System) – A file system by Microsoft with built-in resiliency features.\n\nReliance – A transactional file system with CRCs, created by Datalight.\n\nReliance Nitro – A tree-based transactional, copy-on-write file system with CRCs, developed for high performance and reliability in embedded systems, from Datalight (Acquired by Tuxera in 2019).[7]\n\nZFS – Has checksums for all data; important metadata is always redundant, additional redundancy levels are user-configurable; copy-on-write and transactional writing ensure metadata consistency; corrupted data can be automatically repaired if a redundant copy is available. Created by Sun Microsystems for use on Solaris 10 and OpenSolaris, ported to FreeBSD 7.0, NetBSD (as of August 2009), Linux and to FUSE (not to be confused with the two zFSes from IBM)\n\nMain article: Flash file system\n\nSolid state media, such as flash memory, are similar to disks in their interfaces, but have different problems. At low level, they require special handling such as wear leveling and different error detection and correction algorithms. Typically a device such as a solid-state drive handles such operations internally and therefore a regular file system can be used. However, for certain specialized installations (embedded systems, industrial applications) a file system optimized for plain flash memory is advantageous.\n\nAPFS – Apple File System is a next-generation file system for Apple products.\n\nCHFS – a NetBSD filesystem for embedded systems optimised for raw flash media.\n\nexFAT – Microsoft proprietary system intended for flash cards (see also XCFiles, an exFAT implementation for Wind River VxWorks and other embedded operating systems).\n\nExtremeFFS – internal filesystem for SSDs.\n\nF2FS – Flash-Friendly File System. An open source Linux file system introduced by Samsung in 2012.[13]\n\nFFS2 (presumably preceded by FFS1), one of the earliest flash file systems. Developed and patented by Microsoft in the early 1990s.[14]\n\nJFFS – original log structured Linux file system for NOR flash media.\n\nJFFS2 – successor of JFFS, for NAND and NOR flash.\n\nLSFS – a Log-structured file system with writable snapshots and inline data deduplication created by StarWind Software. Uses DRAM and flash to cache spinning disks.\n\nLogFS – intended to replace JFFS2, better scalability. No longer under active development.[15]\n\nNILFS – a log-structured file system for Linux with continuous snapshots.\n\nNon-Volatile File System – the system for flash memory introduced by Palm, Inc.\n\nNOVA – the \"non-volatile memory accelerated\" file system for persistent main memory.\n\nOneFS – a filesystem utilized by Isilon. It supports selective placement of meta-data directly onto flash SSD.\n\nReliance Velocity - a proprietary flash file system by Tuxera with high resilience (fail-safe technology) and built-in data integrity. This file system is best suited for embedded applications requiring heavy data workloads over long-term operations. Reliance Velocity can used for all block based media like eMMC, UFS, eSD, SD card, CF card, and SSD. It is compatible for Linux, Android and QNX with portability to other embedded operating systems.\n\nReliance Edge - a proprietary file system by Tuxera for resource-constrained embedded systems. It has built-in data integrity with copy-on-write transactional technology and deterministic operations. This file system can be used for block based media and is configurable for Small POSIX, Full POSIX and can be ported to many RTOS environments. Tuxera has a certified version of this file system called Reliance Assure. The source code of Reliance Assure is complaint to MISRA C and developed following the ASPICE framework.\n\nSegger Microcontroller Systems emFile – filesystem for deeply embedded applications which supports both NAND and NOR flash. Wear leveling, fast read and write, and very low RAM usage.\n\nSPIFFS – SPI Flash File System, a wear-leveling filesystem intended for small NOR flash devices.\n\nTFAT – a transactional version of the FAT filesystem.\n\nTrueFFS – internal file system for SSDs, implementing error correction, bad block re-mapping and wear-leveling.\n\nUBIFS – successor of JFFS2, optimized to utilize NAND and NOR flash.\n\nWrite Anywhere File Layout (WAFL) – an internal file system utilized by NetApp within their DataONTAP OS, originally optimized to use non-volatile DRAM. WAFL uses RAID-DP to protect against multiple disk failures and NVRAM for transaction log replays.\n\nYAFFS – a log-structured file system designed for NAND flash, but also used with NOR flash.\n\nLittleFS – a little fail-safe filesystem designed for microcontrollers.\n\nJesFS – Jo's embedded serial FileSystem.[16] A very small footprint and robust filesystem, designed for very small microcontroller (16/32 bit). Open Source and licensed under GPL v3.\n\nIn record-oriented file systems files are stored as a collection of records. They are typically associated with mainframe and minicomputer operating systems. Programs read and write whole records, rather than bytes or arbitrary byte ranges, and can seek to a record boundary but not within records. The more sophisticated record-oriented file systems have more in common with simple databases than with other file systems.\n\nCMS file system – The native file system of the Conversational Monitor System component of VM/370\n\nFiles-11 – early versions were record-oriented; support for \"streams\" was added later\n\nMichigan Terminal System (MTS) – provides \"line files\" where record lengths and line numbers are associated as metadata with each record in the file, lines can be added, replaced, updated with the same or different length records, and deleted anywhere in the file without the need to read and rewrite the entire file.[17]\n\nOS4000 for GEC's OS4000 operating system, on the GEC 4000 series minicomputers\n\nA FAT12 and FAT16 (and FAT32) extension to support database-like file types random file, direct file, keyed file and sequential file in Digital Research FlexOS, IBM 4680 OS and Toshiba 4690 OS.[18] The record size is stored on a file-by-file basis in special entries in the directory table.[19]\n\nSequential access methods for IBM's z/OS and z/VSE mainframe operating systems: Basic Sequential Access Method (BSAM), Basic Partitioned Access Method (BPAM) and Queued Sequential Access Method (QSAM); see Access methods and Data set (IBM mainframe) for more examples\n\nPick Operating System – A record-oriented filesystem and database that uses hash-coding to store data.\n\nShared File System (SFS) for IBM's VM\n\nVirtual Storage Access Method (VSAM) – for IBM's z/OS and z/VSE mainframe operating systems\n\nShared-disk file systems (also called shared-storage file systems, SAN file system, Clustered file system or even cluster file systems) are primarily used in a storage area network where all nodes directly access the block storage where the file system is located. This makes it possible for nodes to fail without affecting access to the file system from the other nodes. Shared-disk file systems are normally used in a high-availability cluster together with storage on hardware RAID. Shared-disk file systems normally do not scale over 64 or 128 nodes.\n\nShared-disk file systems may be symmetric where metadata is distributed among the nodes or asymmetric with centralized metadata servers.\n\nCXFS (Clustered XFS) from Silicon Graphics (SGI). Available for Linux, Mac, Windows, Solaris, AIX and IRIX. Asymmetric.\n\nDell Fluid File System (formerly ExaFS) proprietary software sold by Dell. Shared-disk system sold as an appliance providing distributed file systems to clients. Running on Intel based hardware serving NFS v2/v3, SMB/CIFS and AFP to Windows, macOS, Linux and other UNIX clients.\n\nBlue Whale Clustered file system (BWFS) from Zhongke Blue Whale. Asymmetric. Available for Microsoft Windows, Linux, and macOS.\n\nSAN File System (SFS) from DataPlow. Available for Windows, Linux, Solaris, and macOS. Symmetric and Asymmetric.\n\nEMC Celerra HighRoad from EMC. Available for Linux, AIX, HP-UX, IRIX, Solaris and Windows. Asymmetric.[citation needed]\n\nFiles-11 on VMSclusters, released by DEC in 1983, now from HP. Symmetric.\n\nGFS2 (Global File System) from Red Hat. Available for Linux under GPL. Symmetric (GDLM) or Asymmetric (GULM).\n\nIBM General Parallel File System (GPFS) Windows, Linux, AIX . Parallel\n\nNasan Clustered File System from DataPlow. Available for Linux and Solaris. Asymmetric.\n\nOracle ACFS from Oracle Corporation. Available for Linux (Red Hat Enterprise Linux 5 and Oracle Enterprise Linux 5 only). Symmetric.\n\nOCFS2 (Oracle Cluster File System) from Oracle Corporation. Available for Linux under GPL. Symmetric.\n\nQFS from Sun Microsystems. Available for Linux (client only) and Solaris (metadata server and client). Asymmetric.\n\nScoutFS from Versity. Available for Linux under the GPL. Symmetric.\n\nStorNext File System from Quantum. Asymmetric. Available for AIX, HP-UX, IRIX, Linux, macOS, Solaris and Windows. Interoperable with Xsan. Formerly known as CVFS.\n\nVeritas Storage Foundation from Symantec. Available for AIX, HP-UX, Linux and Solaris. Asymmetric.\n\nXsan from Apple Inc. Available for macOS. Asymmetric. Interoperable with StorNext File System.\n\nVMFS from VMware/EMC Corporation. Available for VMware ESX Server. Symmetric.\n\nDistributed file systems are also called network file systems. Many implementations have been made, they are location dependent and they have access control lists (ACLs), unless otherwise stated below.\n\n9P, the Plan 9 from Bell Labs and Inferno distributed file system protocol. One implementation is v9fs. No ACLs.\n\nAmazon S3\n\nAndrew File System (AFS) is scalable and location independent, has a heavy client cache and uses Kerberos for authentication. Implementations include the original from IBM (earlier Transarc), Arla and OpenAFS.\n\nAvere Systems has AvereOS that creates a NAS protocol file system in object storage.\n\nDCE Distributed File System (DCE/DFS) from IBM (earlier Transarc) is similar to AFS and focus on full POSIX file system semantics and high availability. Available for AIX and Solaris under a proprietary software license.\n\nFile Access Listener (FAL) is an implementation of the Data Access Protocol (DAP) which is part of the DECnet suite of network protocols created by Digital Equipment Corporation.\n\nMagma, developed by Tx0.\n\nMapR FS is a distributed high-performance file system that exhibits file, table and messaging APIs.\n\nMicrosoft Office Groove shared workspace, used for DoHyki\n\nNetWare Core Protocol (NCP) from Novell is used in networks based on NetWare.\n\nNetwork File System (NFS) originally from Sun Microsystems is the standard in UNIX-based networks. NFS may use Kerberos authentication and a client cache.\n\nOS4000 Linked-OS provides distributed filesystem across OS4000 systems.\n\nSelf-certifying File System (SFS), a global network file system designed to securely allow access to file systems across separate administrative domains.\n\nServer Message Block (SMB) originally from IBM (but the most common version is modified heavily by Microsoft) is the standard in Windows-based networks. SMB is also known as Common Internet File System (CIFS). SMB may use Kerberos authentication.\n\nDistributed fault-tolerant replication of data between nodes (between servers or servers/clients) for high availability and offline (disconnected) operation.\n\nCoda from Carnegie Mellon University focuses on bandwidth-adaptive operation (including disconnected operation) using a client-side cache for mobile computing. It is a descendant of AFS-2. It is available for Linux under the GPL.\n\nDistributed File System (Dfs) from Microsoft focuses on location transparency and high availability. Available for Windows under a proprietary software license.\n\nHAMMER and HAMMER2 – DragonFly BSD's filesystems for clustered storage, created by Matt Dillon.[1][5]\n\nInterMezzo from Cluster File Systems uses synchronization over HTTP. Available for Linux under GPL but no longer in development since the developers are working on Lustre.\n\nLizardFS a networking, distributed file system based on MooseFS[20]\n\nMoose File System (MooseFS) is a networking, distributed file system. It spreads data over several physical locations (servers), which are visible to a user as one resource. Works on Linux, FreeBSD, NetBSD, OpenSolaris and macOS. Master server and chunkservers can also run on Solaris and Windows with Cygwin.\n\nScality is a distributed fault-tolerant filesystem.\n\nTahoe-LAFS is an open source secure, decentralized, fault-tolerant filesystem utilizing encryption as the basis for a least-authority replicated design.\n\nA FAT12 and FAT16 (and FAT32) extension to support automatic file distribution across nodes with extra attributes like local, mirror on update, mirror on close, compound on update, compound on close in IBM 4680 OS and Toshiba 4690 OS. The distribution attributes are stored on a file-by-file basis in special entries in the directory table.[21][22]\n\nOpenHarmony Distributed File System (HMDFS) used for Huawei's HarmonyOS with HarmonyOS NEXT base and OpenHarmony-based operating systems, alongside openEuler server OS that is a cross-device file access where devices can read and edit files on transparently when the two devices are connected to the same network with Access token manager. Multiple embedded devices connected to the network can automatically synchronise file data with the edge server.[23]\n\nDistributed parallel file systems stripe data over multiple servers for high performance. They are normally used in high-performance computing (HPC).\n\nSome of the distributed parallel file systems use an object storage device (OSD) (in Lustre called OST) for chunks of data together with centralized metadata servers.\n\nBeeGFS is a hardware-independent parallel file system that features distributed metadata and striping of files across multiple targets, such as NVMe devices or logical volumes.\n\nLustre is an open-source high-performance distributed parallel file system for Linux, used on many of the largest computers in the world.\n\nParallel Virtual File System (PVFS, PVFS2, OrangeFS). Developed to store virtual system images, with a focus on non-shared writing optimizations. Available for Linux under GPL.\n\nDistributed file systems, which also are parallel and fault tolerant, stripe and replicate data over multiple servers for high performance and to maintain data integrity. Even if a server fails no data is lost. The file systems are used in both high-performance computing (HPC) and high-availability clusters.\n\nAll file systems listed here focus on high availability, scalability and high performance unless otherwise stated below.\n\nName By License OS Description Alluxio UC Berkeley, Alluxio Apache License cross-platform An open-source virtual distributed file system (VDFS). BeeGFS (formerly FhGFS) Fraunhofer Society GNU GPL v2 for client, other components are proprietary Linux A free to use file system with optional professional support, designed for easy usage and high performance, used on some of the fastest computer clusters in the world. BeeGFS allows replication of storage volumes with automatic failover and self-healing. CephFS Inktank Storage, a company acquired by Red Hat GNU LGPL Linux kernel, FreeBSD via FUSE[24] A massively scalable object store. CephFS was merged into the Linux kernel in 2010. Ceph's foundation is the reliable autonomic distributed object store (RADOS), which provides object storage via programmatic interface and S3 or Swift REST APIs, block storage to QEMU/KVM/Linux hosts, and POSIX filesystem storage which can be mounted by Linux kernel and FUSE clients. Chiron FS GNU GPL v3 It's a FUSE-based, transparent replication file system, layering on an existing file system and implementing at the file system level what RAID 1 does at the device level. A notably convenient consequence is the possibility of picking single target directories, without the need of replicating entire partitions. (The project has no visible activity after 2008, a status request in Oct. 2009 in the chironfs-forum is unanswered.) CloudStore Kosmix Apache License Google File System workalike. Replaced by Quantcast File System (QFS) dCache DESY and others proprietary (Free for non-commercial usage)[25] A write once filesystem, accessible via various protocols. General Parallel File System (GPFS) IBM Proprietary AIX, Linux and Windows A POSIX-compliant, high-performance, parallel filesystem. Support synchronous replication between attached block storage, and asynchronous replication to remote filesystems. Also support erasure coding on dual homed SAS attached storage, and distributed over multiple storage nodes. Gfarm file system NPO Tsukuba OSS Technical Support Center X11 License Linux, macOS, FreeBSD, NetBSD and Solaris Uses PostgreSQL for metadata and FUSE for mounting. GlusterFS Gluster, a company acquired by Red Hat GNU GPL v3 Linux, NetBSD, FreeBSD, OpenSolaris A general purpose distributed file system for scalable storage. It aggregates various storage bricks over Infiniband RDMA or TCP/IP interconnect into one large parallel network file system. GlusterFS is the main component in Red Hat Storage Server. Google File System (GFS) Google internal software Focus on fault tolerance, high throughput and scalability. Hadoop Distributed File System Apache Software Foundation Apache License Cross-platform Open source GoogleFS clone. IBRIX Fusion IBRIX Proprietary JuiceFS Juicedata Apache License cross-platform An open-source POSIX-compliant file system built on top of Redis and object storage (e.g. Amazon S3), designed and optimized for cloud native environment. LizardFS Skytechnology GNU GPL v3 cross-platform An open source, highly available POSIX-compliant file system that supports Windows clients. Lustre originally developed by Cluster File Systems and currently supported by OpenSFS GNU GPL v2 & LGPL Linux A POSIX-compliant, high-performance filesystem used on a majority of systems in the Top-500 list of HPC systems. Lustre has high availability via storage failover. MapR FS MapR Proprietary Linux Highly scalable, POSIX compliant, fault tolerant, read/write filesystem with a distributed, fault tolerant metadata service. It provides an HDFS and NFS interface to clients as well as a noSQL table interface and Apache Kafka compatible messaging system. MooseFS Core Technology GNU GPL v2 and proprietary[26] cross-platform (Linux, NetBSD, FreeBSD, macOS, OpenSolaris) A fault tolerant, highly available and high performance scale-out network distributed file system. It spreads data over several physical commodity x86 servers, which are visible to the user as one namespace. For standard file operations MooseFS acts like any other Unix-like file systems. ObjectiveFS Objective Security Corporation Proprietary Linux, macOS POSIX-compliant shared distributed filesystem. Uses object store as a backend. Runs on AWS S3, GCS and object store devices. OneFS distributed file system Isilon Proprietary[27] FreeBSD BSD-based OS on dedicated Intel based hardware, serving NFS v3 and SMB/CIFS to Windows, macOS, Linux and other UNIX clients under a proprietary software. OIO-FS OpenIO Proprietary Linux OIO-FS provides file-oriented access to OpenIO SDS object storage backend. It is based on FUSE technology and presents a POSIX file system to users. This access can be used locally, or over a network using NFS or SMB.[28] PanFS Panasas Proprietary Linux, macOS, FreeBSD A POSIX-compliant, high-performance, parallel filesystem used by HPC clusters. It uses erasure coding and snapshots for data protection, is based upon a scale-out object store, and is focused on transparent failure recovery and ease of use. Quobyte DCFS Quobyte Proprietary Linux, macOS, FreeBSD A fault-tolerant, parallel POSIX file system, with block (VMs) and object (S3) interfaces, and advanced enterprise features like multi-tenancy, strong authentication, encryption. Split-brain safe fault-tolerance is achieved through Paxos-based leader election and erasure coding. RozoFS Rozo Systems GNU GPL v2 Linux A POSIX DFS focused on fault-tolerance and high-performance, based on the Mojette erasure code to reduce significantly the amount of redundancy (compared to plain replication). Scality Scality ring Proprietary Linux A POSIX file system[citation needed] focused on high availability and performance. Also provides S3/REST/NFS interfaces. Tahoe-LAFS Tahoe-LAFS Software Foundation GNU GPL v2+ and other[29] Windows, Linux, macOS A secure, decentralized, fault-tolerant, peer-to-peer distributed data store and distributed file system. XtreemFS Contrail E.U. project, the German MoSGrid project and the German project \"First We Take Berlin\" BSD 3-Clause[30] Linux, Solaris, macOS, Windows A cross-platform file system for wide area networks. It replicates the data for fault tolerance and caches metadata and data to improve performance over high-latency links. SSL and X.509 certificates support makes XtreemFS usable over public networks. It also supports striping for usage in a cluster.\n\nIn development:\n\nzFS from IBM (not to be confused with ZFS from Sun Microsystems or the zFS file system provided with IBM's z/OS operating system) focus on cooperative cache and distributed transactions and uses object storage devices. Under development and not freely available.\n\nHAMMER/ANVIL by Matt Dillon\n\nPNFS (Parallel NFS) – Clients available for Linux and OpenSolaris and back-ends from NetApp, Panasas, EMC Highroad and IBM GPFS\n\nCoherent Remote File System (CRFS) – requires Btrfs\n\nParallel Optimized Host Message Exchange Layered File System (POHMELFS) and Distributed STorage (DST). POSIX compliant, added to Linux kernel 2.6.30\n\nSome of these may be called cooperative storage cloud.\n\nIBM Cloud Object Storage uses Cauchy Reed–Solomon information dispersal algorithms to separate data into unrecognizable slices and distribute them, via secure Internet connections, to multiple storage locations.\n\nScality is a distributed filesystem using the Chord peer-to-peer protocol.\n\nIPFS InterPlanetary File System is p2p, worldwide distributed content-addressable, file-system.\n\naufs an enhanced version of UnionFS stackable unification file system\n\nAXFS (small footprint compressed read-only, with XIP)\n\nBarracuda WebDAV plug-in. Secure Network File Server for embedded devices.\n\nBoot File System is used on UnixWare to store files necessary for its boot process.\n\ncdfs (reading and writing of CDs)\n\nCompact Disc File System (reading and writing of CDs; experimental)\n\ncfs (caching)\n\nCramfs (small footprint compressed read-only)\n\nDavfs2 (WebDAV)\n\nFreenet – Decentralized, censorship-resistant\n\nFTPFS (FTP access)\n\nGmailFS (Google Mail File System)\n\nGridFS – GridFS is a specification for storing and retrieving files that exceed the BSON-document size limit of 16 MB for MongoDB.\n\nlnfs (long names)\n\nLTFS (Linear Tape File System for LTO and Enterprise tape)\n\nMVFS – MultiVersion File System, proprietary, used by IBM DevOps Code ClearCase.\n\nNexfs Combines Block, File, Object and Cloud storage into a single pool of auto-tiering POSIX compatible storage.\n\nOverlayFS – A union mount filesystem implementation for Linux. Used mainly by Docker for its image layers.\n\nromfs\n\nSquashFS (compressed read-only)\n\nUMSDOS, UVFAT – FAT file systems extended to store permissions and metadata (and in the case of UVFAT, VFAT long file names), used for Linux\n\nUnionFS – stackable unification file system, which can appear to merge the contents of several directories (branches), while keeping their physical content separate\n\nVenti – Plan 9 de-duplicated storage used by Fossil.\n\ndevfs – a virtual file system in Unix-like operating systems for managing device nodes on-the-fly\n\nprocfs – a pseudo-file system, used to access kernel information about processes\n\ntmpfs – in-memory temporary file system (on Unix-like platforms)\n\nsysfs – a virtual file system in Linux holding information about buses, devices, firmware, filesystems, etc.\n\ndebugfs – a virtual file system in Linux for accessing and controlling kernel debugging\n\nconfigfs – a writable file system used to configure various kernel components of Linux\n\nsysctlfs – allow accessing sysctl nodes via a file system; available on NetBSD via PUFFS,[31] FreeBSD kernel via a 3rd-party module,[32][33][34] and Linux as a part of Linux procfs.[35]\n\nkernfs – a file system found on some BSD systems (notably NetBSD) that provides access to some kernel state variables; similar to sysctlfs, Linux procfs and Linux sysfs.\n\nwikifs – a server application for Plan 9's virtual, wiki, file system\n\nSee also: Rubberhose (file system)\n\neCryptfs – a stacked cryptographic file system in the Linux kernel since 2.6.19\n\nEncFS, GPL Encrypted file system in user-space\n\nEFS – an encrypted file system for Microsoft Windows systems and AIX. An extension of NTFS\n\nZFS, with encryption support.\n\nThese are not really file systems; they allow access to file systems from an operating system standpoint.\n\nFUSE (file system in userspace, like LUFS but better maintained)\n\nLUFS (Linux userland file system – seems to be abandoned in favour of FUSE)\n\nPUFFS (Userspace filesystem for NetBSD, including a compatibility layer called librefuse for porting existing FUSE-based applications)\n\nSecure Shell File System (SSHFS) – locally mount a remote directory on a server using only a secure shell login.\n\nVFS Virtual Filesystem\n\nShared resource\n\nComparison of file systems\n\nFiling Open Service Interface Definition\n\nComputer data storage"
    }
}