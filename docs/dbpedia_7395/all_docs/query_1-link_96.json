{
    "id": "dbpedia_7395_1",
    "rank": 96,
    "data": {
        "url": "https://central.sonatype.com/artifact/io.gitee.gaof1026/knight-cloud-dependencies/1.0.2.1",
        "read_more_link": "",
        "language": "en",
        "title": "Maven Central: io.gitee.gaof1026:knight",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://central.sonatype.com/maven-central-logo.svg",
            "https://central.sonatype.com/_next/static/media/sonatype-logo-with-hexagon-dark-mode.ea4b4b74.png",
            "https://central.sonatype.com/SON_logo_white_.svg",
            "https://central.sonatype.com/maven-central-logo.svg",
            "https://central.sonatype.com/_next/static/media/sonatype-logo-with-hexagon-dark-mode.ea4b4b74.png",
            "https://central.sonatype.com/sonatype-developer-logo.svg",
            "https://central.sonatype.com/SON_logo_white_.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Discover knight-cloud-dependencies in the io.gitee.gaof1026 namespace. Explore metadata, contributors, the Maven POM file, and more.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "Maven Central",
        "canonical_link": "https://central.sonatype.com/artifact/io.gitee.gaof1026/knight-cloud-dependencies/1.0.2.1",
        "text": "Maven POM File\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> <!-- ~ Copyright (c) 2020-2030 FENG <gaof1026@gitee.com> ~ ~ KNIGHT Cloud Licensed under the Apache License, Version 2.0 (the \"License\"); ~ you may not use this file except in compliance with the License. ~ You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 ~ ~ Unless required by applicable law or agreed to in writing, software ~ distributed under the License is distributed on an \"AS IS\" BASIS, ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ~ See the License for the specific language governing permissions and ~ limitations under the License. --> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <modelVersion>4.0.0</modelVersion> <parent> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-parent</artifactId> <version>3.2.4</version> <relativePath/> </parent> <groupId>io.gitee.gaof1026</groupId> <artifactId>knight-cloud-dependencies</artifactId> <version>1.0.2.1</version> <packaging>pom</packaging> <name>knight-cloud-dependencies</name> <url>${projectUrl}</url> <description>knight-cloud-dependencies</description> <scm> <connection>${projectUrl}</connection> <developerConnection>${projectUrl}</developerConnection> <url>${projectUrl}</url> </scm> <licenses> <license> <name>The Apache Software License, Version 2.0</name> <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url> <distribution>repo,manual</distribution> </license> </licenses> <developers> <developer> <name>gaof</name> <email>414416521@qq.com</email> <url>https://gitee.com/gaof1026</url> </developer> </developers> <!-- <distributionManagement>--> <!-- <repository>--> <!-- <id>central</id>--> <!-- <name>central-releases</name>--> <!-- <url>https://s01.oss.sonatype.org/</url>--> <!-- </repository>--> <!-- </distributionManagement> >--> <properties> <java.version>21</java.version> <resource.delimiter>@</resource.delimiter> <maven.compiler.source>${java.version}</maven.compiler.source> <maven.compiler.target>${java.version}</maven.compiler.target> <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <!--knight version--> <revision>1.0.2.1</revision> <spring-cloud-version>2023.0.0</spring-cloud-version> <spring-cloud-alibaba-version>2023.0.0.0-RC1</spring-cloud-alibaba-version> <spring-boot-dependencies.version>3.2.4</spring-boot-dependencies.version> <!--spring--> <spring-boot-starter>2.6.13</spring-boot-starter> <!--db--> <dy.datasource.boot.version>3.5.1</dy.datasource.boot.version> <dy.datasource.boot3.version>4.2.0</dy.datasource.boot3.version> <mybatis.plus.boot.version>3.5.6</mybatis.plus.boot.version> <mybatis.plus.boot3.version>3.5.6</mybatis.plus.boot3.version> <mybatis.plus.join.version>1.2.4</mybatis.plus.join.version> <mysql.connector.version>8.0.28</mysql.connector.version> <mybatis.plus.ext.boot3.version>3.5.6-EXT650</mybatis.plus.ext.boot3.version> <mybatis.plus.ext.boot.version>3.5.5-EXT621</mybatis.plus.ext.boot.version> <!--protobuf maven environment--> <mapstruct.version>1.5.5.Final</mapstruct.version> <protobuf.version>3.5.0</protobuf.version> <protobuf.grpc.version>1.49.2</protobuf.grpc.version> <!--小众第三方库--> <jasypt.version>3.0.4</jasypt.version> <mapstruct.version>1.5.5.Final</mapstruct.version> <hutool.version>5.8.25</hutool.version> <druid.boot.version>1.2.8</druid.boot.version> <druid.boot3.version>1.2.22</druid.boot3.version> <jackson.version>2.16.0</jackson.version> <x.file.storage.version>2.1.0</x.file.storage.version> <minio.version>8.5.7</minio.version> <jaxb.api.version>2.3.1</jaxb.api.version> <knife4j.version>2.0.8</knife4j.version> <knife4j-boo3-version>4.4.0</knife4j-boo3-version> <!-- devops --> <docker.baseImage>java:21</docker.baseImage> <docker.img.version>latest</docker.img.version> <docker.volumes>/home</docker.volumes> <docker-maven-plugin.version>1.4.13</docker-maven-plugin.version> <docker.java.security.egd>-Djava.security.egd=file:/dev/./urandom</docker.java.security.egd> <docker.java.opts>-Xms256m -Xmx256m</docker.java.opts> <!--插件--> <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version> <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version> <maven-release-plugin.version>3.0.1</maven-release-plugin.version> <maven-source-plugin.version>3.3.0</maven-source-plugin.version> <maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version> <maven-gpg-plugin.version>1.5</maven-gpg-plugin.version> <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version> <central-publishing-maven-plugin.version>0.4.0</central-publishing-maven-plugin.version> <projectUrl>https://gitee.com/gaof1026/q0hgotb5s6</projectUrl> </properties> <dependencyManagement> <dependencies> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-alibaba-dependencies</artifactId> <version>${spring-cloud-alibaba-version}</version> <type>pom</type> <scope>import</scope> </dependency> <!--spring cloud --> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-dependencies</artifactId> <version>${spring-cloud-version}</version> <type>pom</type> <scope>import</scope> </dependency> <!--Imports--> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-dependencies</artifactId> <version>${spring-boot-dependencies.version}</version> <type>pom</type> <scope>import</scope> </dependency> <dependency> <groupId>com.github.xiaoymin</groupId> <artifactId>knife4j-dependencies</artifactId> <version>4.5.0</version> <type>pom</type> <scope>import</scope> </dependency> <dependency> <groupId>io.gitee.gaof1026</groupId> <artifactId>knight-rds</artifactId> <version>${revision}</version> </dependency> <dependency> <groupId>io.gitee.gaof1026</groupId> <artifactId>knight-common</artifactId> <version>${revision}</version> </dependency> <dependency> <groupId>io.gitee.gaof1026</groupId> <artifactId>knight-proto</artifactId> <version>${revision}</version> </dependency> <!--protoBuf--> <dependency> <groupId>com.google.protobuf</groupId> <artifactId>protobuf-java-util</artifactId> <version>3.24.3</version> <exclusions> <exclusion> <groupId>com.google.code.gson</groupId> <artifactId>gson</artifactId> </exclusion> </exclusions> </dependency> <dependency> <groupId>com.google.protobuf</groupId> <artifactId>protobuf-java</artifactId> <version>3.24.3</version> </dependency> <dependency> <groupId>com.google.protobuf</groupId> <artifactId>protobuf-gradle-plugin</artifactId> <version>0.8.19</version> </dependency> <dependency> <groupId>com.google.code.gson</groupId> <artifactId>gson</artifactId> <version>2.8.9</version> </dependency> <dependency> <groupId>com.google.guava</groupId> <artifactId>guava</artifactId> <version>32.0.1-jre</version> <scope>compile</scope> </dependency> <dependency> <groupId>org.mapstruct</groupId> <artifactId>mapstruct</artifactId> <version>${mapstruct.version}</version> </dependency> <dependency> <groupId>cn.hutool</groupId> <artifactId>hutool-all</artifactId> <version>${hutool.version}</version> </dependency> <!--database dependency--> <dependency> <groupId>com.tangzc</groupId> <artifactId>mybatis-plus-ext-spring-boot3-starter</artifactId> <version>${mybatis.plus.ext.boot3.version}</version> <exclusions> <exclusion> <artifactId>mybatis-spring</artifactId> <groupId>org.mybatis</groupId> </exclusion> </exclusions> </dependency> <dependency> <groupId>org.mybatis</groupId> <artifactId>mybatis-spring</artifactId> <version>3.0.3</version> </dependency> <dependency> <groupId>com.tangzc</groupId> <artifactId>mybatis-plus-ext-spring-boot-starter</artifactId> <version>${mybatis.plus.ext.boot.version}</version> </dependency> <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-boot-starter</artifactId> <version>${mybatis.plus.boot.version}</version> </dependency> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>${mysql.connector.version}</version> <optional>true</optional> </dependency> <dependency> <groupId>com.baomidou</groupId> <artifactId>dynamic-datasource-spring-boot-starter</artifactId> <version>${dy.datasource.boot.version}</version> </dependency> <dependency> <groupId>com.baomidou</groupId> <artifactId>dynamic-datasource-spring-boot3-starter</artifactId> <version>${dy.datasource.boot3.version}</version> </dependency> <dependency> <groupId>com.baomidou</groupId> <artifactId>mybatis-plus-spring-boot3-starter</artifactId> <version>${mybatis.plus.boot3.version}</version> </dependency> <dependency> <groupId>com.github.yulichang</groupId> <artifactId>mybatis-plus-join</artifactId> <version>${mybatis.plus.join.version}</version> </dependency> <dependency> <groupId>com.alibaba</groupId> <artifactId>druid-spring-boot-starter</artifactId> <version>${druid.boot.version}</version> </dependency> <dependency> <groupId>com.alibaba</groupId> <artifactId>druid-spring-boot-3-starter</artifactId> <version>${druid.boot3.version}</version> </dependency> <dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId> <version>${jackson.version}</version> </dependency> <dependency> <groupId>com.alibaba</groupId> <artifactId>fastjson</artifactId> <version>2.0.40</version> </dependency> <!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp --> <dependency> <groupId>com.squareup.okhttp3</groupId> <artifactId>okhttp</artifactId> <version>4.10.0</version> </dependency> <!--jwt token--> <dependency> <groupId>io.jsonwebtoken</groupId> <artifactId>jjwt</artifactId> <version>0.9.1</version> <exclusions> <exclusion> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-databind</artifactId> </exclusion> </exclusions> </dependency> <dependency> <groupId>com.alibaba</groupId> <artifactId>easyexcel-core</artifactId> <version>3.3.2</version> </dependency> <dependency> <groupId>org.dromara.x-file-storage</groupId> <artifactId>x-file-storage-spring</artifactId> <version>${x.file.storage.version}</version> </dependency> <dependency> <groupId>io.minio</groupId> <artifactId>minio</artifactId> <version>${minio.version}</version> </dependency> <dependency> <groupId>javax.xml.bind</groupId> <artifactId>jaxb-api</artifactId> <version>${jaxb.api.version}</version> </dependency> </dependencies> </dependencyManagement> <!-- <build>--> <!-- <pluginManagement>--> <!-- <plugins>--> <!-- &lt;!&ndash; maven-compiler &ndash;&gt;--> <!-- <plugin>--> <!-- <groupId>org.apache.maven.plugins</groupId>--> <!-- <artifactId>maven-compiler-plugin</artifactId>--> <!-- <version>${maven-compiler-plugin.version}</version>--> <!-- <configuration>--> <!-- <source>${java.version}</source>--> <!-- <target>${java.version}</target>--> <!-- <encoding>${project.build.sourceEncoding}</encoding>--> <!-- <skip>true</skip>--> <!-- <annotationProcessorPaths>--> <!-- &lt;!&ndash; other annotation processors &ndash;&gt;--> <!-- <path>--> <!-- <groupId>org.projectlombok</groupId>--> <!-- <artifactId>lombok</artifactId>--> <!-- <version>${lombok.version}</version>--> <!-- </path>--> <!-- <path>--> <!-- <groupId>org.mapstruct</groupId>--> <!-- <artifactId>mapstruct-processor</artifactId>--> <!-- <version>${mapstruct.version}</version>--> <!-- </path>--> <!-- </annotationProcessorPaths>--> <!-- </configuration>--> <!-- </plugin>--> <!-- <plugin>--> <!-- <groupId>org.apache.maven.plugins</groupId>--> <!-- <artifactId>maven-source-plugin</artifactId>--> <!-- <version>3.2.1</version>--> <!-- <configuration>--> <!-- <attach>true</attach>--> <!-- </configuration>--> <!-- <executions>--> <!-- <execution>--> <!-- <phase>package</phase>--> <!-- <goals>--> <!-- <goal>jar-no-fork</goal>--> <!-- </goals>--> <!-- </execution>--> <!-- </executions>--> <!-- </plugin>--> <!-- &lt;!&ndash; docker plugin&ndash;&gt;--> <!-- <plugin>--> <!-- <groupId>com.spotify</groupId>--> <!-- <artifactId>docker-maven-plugin</artifactId>--> <!-- <version>1.0.2.1</version>--> <!-- <executions>--> <!-- <execution>--> <!-- <id>default</id>--> <!-- <goals>--> <!-- <goal>build</goal>--> <!-- </goals>--> <!-- </execution>--> <!-- </executions>--> <!-- <configuration>--> <!-- <baseImage>${docker.baseImage}</baseImage>--> <!-- &lt;!&ndash;打包docker镜像的docker服务器&ndash;&gt;--> <!-- &lt;!&ndash;<dockerHost>http://192.168.30.89:2375</dockerHost>&ndash;&gt;--> <!-- &lt;!&ndash;镜像名称及版本[ip:port/name:tag]&ndash;&gt;--> <!-- <imageName>${project.artifactId}</imageName>--> <!-- &lt;!&ndash;配置挂载目录&ndash;&gt;--> <!-- <volumes>${docker.volumes}</volumes>--> <!-- &lt;!&ndash;配置执行命令--> <!-- <env>--> <!-- <JAVA_OPTS>${docker.java.opts}</JAVA_OPTS>--> <!-- </env>&ndash;&gt;--> <!-- <entryPoint>[\"sh\",\"-c\",\"java -jar /${project.build.finalName}.jar\"]--> <!-- </entryPoint>--> <!-- &lt;!&ndash; optionally overwrite tags every time image is built with docker:build &ndash;&gt;--> <!-- <forceTags>true</forceTags>--> <!-- &lt;!&ndash;配置镜像tag，这里指定了两个tag(最新的版本号和latest)&ndash;&gt;--> <!-- <imageTags>--> <!-- <imageTag>${docker.img.version}</imageTag>--> <!-- </imageTags>--> <!-- <resources>--> <!-- <resource>--> <!-- <targetPath>/</targetPath>--> <!-- <directory>${project.build.directory}--> <!-- </directory>--> <!-- <include>${project.build.finalName}.jar</include>--> <!-- </resource>--> <!-- </resources>--> <!-- <serverId>docker</serverId>--> <!-- </configuration>--> <!-- </plugin>--> <!-- </plugins>--> <!-- </pluginManagement>--> <!-- </build>--> <repositories> <repository> <id>aliyunmeven</id> <url>http://maven.aliyun.com/nexus/content/groups/public/</url> <releases> <enabled>true</enabled> </releases> <snapshots> <enabled>false</enabled> </snapshots> </repository> <repository> <id>aliyun</id> <url>https://maven.aliyun.com/repository/public</url> <snapshots> <enabled>false</enabled> </snapshots> </repository> <repository> <id>activiti-repos2</id> <name>Activiti Repository 2</name> <url>https://app.camunda.com/nexus/content/groups/public</url> <snapshots> <enabled>false</enabled> </snapshots> </repository> <repository> <id>central-repos</id> <name>Central Repository</name> <url>http://repo.maven.apache.org/maven2</url> <snapshots> <enabled>false</enabled> </snapshots> </repository> </repositories> <pluginRepositories> <pluginRepository> <id>aliyun-plugin</id> <url>https://maven.aliyun.com/repository/public</url> <releases> <enabled>true</enabled> </releases> <snapshots> <enabled>false</enabled> </snapshots> </pluginRepository> </pluginRepositories> <build> <pluginManagement> <plugins> <!-- 生成MD5校验文件 --> <plugin> <groupId>net.ju-n.maven.plugins</groupId> <artifactId>checksum-maven-plugin</artifactId> <version>1.4</version> <executions> <execution> <id>checksum-maven-plugin-files</id> <phase>package</phase> <goals> <goal>files</goal> </goals> </execution> </executions> <configuration> <fileSets> <fileSet> <directory>${project.build.directory}</directory> <includes> <include>*.jar</include> <include>*.pom</include> </includes> </fileSet> </fileSets> <algorithms> <algorithm>SHA-1</algorithm> <algorithm>MD5</algorithm> </algorithms> </configuration> </plugin> <!-- 编译插件 --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> <version>${maven-compiler-plugin.version}</version> <configuration> <parameters>true</parameters> <source>${java.version}</source> <target>${java.version}</target> </configuration> </plugin> <!-- 发布插件 --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-deploy-plugin</artifactId> <version>${maven-deploy-plugin.version}</version> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> <version>${maven-source-plugin.version}</version> <executions> <execution> <id>attach-sources</id> <goals> <goal>jar-no-fork</goal> </goals> </execution> </executions> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> <version>${maven-javadoc-plugin.version}</version> <configuration> <charset>UTF-8</charset><!-- utf-8读取文件 --> <encoding>UTF-8</encoding><!-- utf-8进行编码代码 --> <docencoding>UTF-8</docencoding><!-- utf-8进行编码文档 --> </configuration> <executions> <execution> <id>attach-javadocs</id> <goals> <goal>jar</goal> </goals> </execution> </executions> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-gpg-plugin</artifactId> <version>${maven-gpg-plugin.version}</version> <configuration> <keyname>gaof</keyname> <executable>C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe</executable> </configuration> <executions> <execution> <id>sign-artifacts</id> <phase>verify</phase> <goals> <goal>sign</goal> </goals> </execution> </executions> </plugin> <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>versions-maven-plugin</artifactId> <version>${versions-maven-plugin.version}</version> <configuration> <generateBackupPoms>false</generateBackupPoms> </configuration> </plugin> <plugin> <groupId>org.sonatype.central</groupId> <artifactId>central-publishing-maven-plugin</artifactId> <version>${central-publishing-maven-plugin.version}</version> <extensions>true</extensions> <configuration> <publishingServerId>central</publishingServerId> <tokenAuth>true</tokenAuth> <!-- <autoPublish>true</autoPublish>--> </configuration> </plugin> </plugins> </pluginManagement> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-deploy-plugin</artifactId> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-gpg-plugin</artifactId> </plugin> <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>versions-maven-plugin</artifactId> </plugin> <plugin> <groupId>org.sonatype.central</groupId> <artifactId>central-publishing-maven-plugin</artifactId> </plugin> </plugins> </build> </project>"
    }
}