{
    "id": "dbpedia_7395_2",
    "rank": 61,
    "data": {
        "url": "https://www.advancedinstaller.com/feats-list.html",
        "read_more_link": "",
        "language": "en",
        "title": "Advanced Installer",
        "top_image": "https://www.advancedinstaller.com/img/all/advanced-installer-og.png",
        "meta_img": "https://www.advancedinstaller.com/img/all/advanced-installer-og.png",
        "images": [
            "https://www.advancedinstaller.com/svg/common/iconNavLogo.svg",
            "https://cdn.advancedinstaller.com/svg/features/iconArchitect.svg",
            "https://cdn.advancedinstaller.com/svg/features/iconEnterprise.svg",
            "https://cdn.advancedinstaller.com/svg/features/iconProfessional.svg",
            "https://cdn.advancedinstaller.com/svg/features/iconFreeware.svg",
            "https://cdn.advancedinstaller.com/svg/features/iconTopTen.svg",
            "https://cdn.advancedinstaller.com/svg/features/iconExclusive.svg",
            "https://cdn.advancedinstaller.com/svg/features/iconGreatestNew.svg",
            "https://cdn.advancedinstaller.com/svg/features/iconTopClassic.svg",
            "https://www.advancedinstaller.com/svg/webinar-announcement-banner/bannerFloatingIcons.svg",
            "https://www.advancedinstaller.com/img/all/msft-2line-black-logo.png",
            "https://www.advancedinstaller.com/img/all/msft-1line-black-logo.png",
            "https://www.advancedinstaller.com/img/all/msft-1line-black-logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Feature Matrix for Advanced Installer Editions",
        "meta_lang": "en",
        "meta_favicon": "/favicons/apple-icon-57x57.png",
        "meta_site_name": "",
        "canonical_link": "https://www.advancedinstaller.com/feats-list.html",
        "text": "Basic Features\n\nInstaller and Uninstaller\n\nCreate packages that completely install and register, respectively uninstall and unregister, your application .\n\nAlways valid MSI 2.0/3.x/4.x/5.0 packages\n\nEach written and unwritten Windows Installer rule, recommendation and best practice is carefully followed.\n\nWizard for Simple Project creation\n\nUse the provided wizard to create complete Windows Installer MSI installs in mere minutes.\n\nAdd/Remove (Control Panel) customization\n\nCustomize your application's information listed in the \"Add/Remove Programs\" page of the Control Panel.\n\nPer-user and per-machine installs\n\nSelect which type of installation better suits your needs: per-user or per-machine if the user is Administrator.\n\nLimit to Basic UI\n\nFor unassisted or automated installs: display only a progress dialog and the eventual error message boxes.\n\nProject files in XML format\n\nThey can be easily checked into a version control system and shared between multiple developers.\n\nTemplate projects\n\nCreate templates based on your current project and ready-to-use for your future projects.\n\nProject Solutions\n\nSimplify the process of working with multiple projects by having them into a solution and managing them all from one single place.\n\nContext sensitive help and tutorials\n\nIllustrated, integrated help and tutorials are provided for a simple and user-friendly learning of the application.\n\n64-bit packages\n\nCreate packages that run and install on 32-bit processors or on the latest 64-bit CPUs from Intel and AMD.\n\nOptionally force rebooting\n\nPrompt the user for a reboot even after a successful install, supporting sensitive components that require it.\n\nFormatted fields\n\nUse variables and parameters almost anywhere in your installs. They will be resolved at build or run time.\n\nVisual formatted editing\n\nEdit controls for Formatted and Condition fields offer reference auto-completion, highlight, errors and resolved value hints.\n\nRun and log MSIs\n\nLaunch your MSI package while printing the full Windows Installer log. Syntax highlighting and log summary. From Windows Vista to Windows 11, create perfect installations that target the operating system's features and security model. Use the Advanced Installer Visual Studio extension to easily access your installer directly from your IDE.\n\nBuild cache\n\nEnjoy faster development and quicker installer build times with by caching and reusing unchanged archives. Create and configure your projects using PowerShell commands.\n\nCommand line mode execution\n\nBuild your release packages in a completely automated script, like Make, Ant or NAnt.Installer Analytics (subscription required) Get essential KPIs for you application, and see how to improve your retention and user experience. Know your audience by getting information about active users, language preferences, platform specs, uninstall reasons and impact of updates. Detect issues such as blockers, errors, stability and missing prerequisites before they impact your user base. Use Custom Properties functionality to track any property that you declare within your setup package such as the package version or edition that each of your users has installed, or any control which has a property attached to it.Application Resources\n\nFiles and folders\n\nInstall and uninstall files, create and remove folders. Visually define your distribution tree.\n\nCreate shortcuts\n\nShortcuts to your files, external files, commands, URLs. Placed anywhere: Desktop, Start Programs menu, etc.\n\nWindows 11/10/8 support for shortcuts\n\nEnable Windows 11/10/8 behavior like: \"Pin to Taskbar\", \"Prevent auto Pin to Start\", \"Disable Pin to Start\" and \"Run as administrator\".\n\nRegistry keys and entries\n\nInstall and uninstall; create or import them from your Registry or REG files straight into your MSI package.\n\nEnvironment variables\n\nUser or system environment variables to be created, appended or prepended to existing ones upon install.\n\nFont registration\n\nRegister fonts into the OS, specify registration names for non-TrueType fonts.\n\nAuto register files\n\nAuto registration, for files that support it (such as DLLs and OCXs), can be scheduled at install time. Create self-contained MSI packages, by including and configuring the required merge modules. Customize how application tiles look in the Start Menu and Start Screen.Handling Versions\n\nUpgrading older installs automatically\n\nOlder versions of your product found on the user's machine can be removed before installing the newer one.\n\nPrevent installs of older over newer versions\n\nAdvanced Installer will not let the user install older packages over newer ones.\n\nSide-by-side installs\n\nCreate packages (for different versions of your application) that can be installed simultaneously and run side by side.Installer Conditions\n\nPrevent installing on unsupported OS's\n\nEasily specify which Operating Systems are supported, preventing the installation on the other ones.\n\nMSI launch conditions\n\nConditions that have to be met (applications, frameworks, files, versions, etc.) in order for your package to run. Quickly and easily edit Windows Installer conditions. Comes with auto completion, property values detection, predefined examples, multiple level undo, etc.Import Quickly convert your existing Microsoft Visual Studio Setup projects to Advanced Installer. Quickly upgrade your existing Visual Studio 2010 InstallShield LE installer projects to Advanced Installer. Create installation packages by importing WISE projects. Leverage existing installer projects while accessing the numerous Advanced Installer features and capabilities. Import third party MSI installers and MSM merge modules into your own Advanced Installer Projects. Jump-start your installer by importing your existing VS project. Auto-detect names, files and dependencies. Import applications developed in Visual Basic 6.0 to get a head start on creating their installer. Create installers for applications developed with RAD Studio. Develop installers for Real Studio applications. Switch to Windows Installer easier than ever before. Move to MSI setups without wasting the effort already spent. Switch your NSIS projects to Windows Installer. Enjoy Advanced Installer's ease of use and wealth of features.Delivery Options\n\nSingle, self-contained MSI installs\n\nCreate a single MSI package that contains bundled everything required to install your application.\n\nUnpacked installations\n\nThe files stay unbundled next to the MSI file, suited for regular installs or to run directly from (CD, DVD) source. Your application resources can be archived into CAB files, compressed (for size) or uncompressed (for speed).\n\nSmart Cabbing\n\nAutomatically checks that files with the same source are included only once in the generated CAB file.\n\nOnline installs\n\nThe MSI packages can be launched from an URL, either directly by the user or by the EXE bootstrapper (in Pro edition).Professional Features Use the intuitive GUI to enable the optional Windows Features your application requires. Digitally sign generated or included files - authenticate your products and MSIs for improved customer credibility. Device Guard and Azure Key Vault integration. The easiest way to implement ISO 19770-2 standard compliance in your software products.\n\nCommand line mode editing\n\nChange the project without bringing up the UI - at command line or in batch scripts. Run PowerShell scripts by using the dedicated editor, predefined prerequisites, launch conditions, and much more.\n\nMulti-volume installs\n\nSplit large installs onto several disks, with customizable size and number of archives and volumes. Reduce the size of your install packages using some of the best compression algorithms in the industry.\n\nLarge file support\n\nInclude in your project files larger than 2GB and pack them using multi-core-aware LZMA compression.\n\nInstaller encryption\n\nProtect your installers using AES encryption. A password will be automatically requested before installing your package. Ask the user for a serial code during install. Validate it online, through bundled algorithm or your custom DLL.\n\nWizard for Professional Project creation\n\nUse the provided wizard to create professional Windows Installer MSI installs in mere minutes.\n\nFriendly Wizards\n\nEasy to use, intuitive wizards are ready to assist you during your install creation. Get more done in less time. Document every intricate detail of your projects in order to improve your installer team collaboration.\n\nEXE/DLL dependency detector\n\nQuickly and easily find out and include in your installation the libraries that your EXE and DLL files depend on.\n\nFast installation\n\nAutomatically optimize your packages for the fastest possible installation.\n\nSingle Package Authoring\n\nCreate a single MSI package able to install both per-user and per-machine with a selection dialog for the user.\n\nMixed 32/64-bit installers\n\nPowerful wizard helps author single, unified installers that run as 32-bit on 32-bit and as 64-bit on 64-bit platforms.\n\nControl Panel Applets\n\nInstall applets in Control Panel to configure and customize your system-level services and applications. Easily create dedicated installers for Visual Studio 2017 extensions and add-ins (in Ent. edition). Easily create dedicated installers for Microsoft Office add-ins directly from a Visual Studio Project or from a disk location.\n\nAdobe Products Add-In installers\n\nCreate dedicated add-in installers for most often used Adobe products.Builds Build multiple installers from a single project creating packages customized for various deployment scenarios. Create APPX bundles for multiple architectures and platform types. Customize your installer build process with pre- and post-build events: copy or move files, run commands. At-a-glance reports outlining essential information about your installer. Run ICE validation suites as a final step in the build process, messages being appended to the Build Log. Suggest and apply fixes for package validation errors resulted from running ICE validation suites. Run WACK validations as a final step in the build process for MSI, AppX and MSIX packages, messages being appended to the Build Log and inside an HTML report. Build MSIX packages from your existing projects. Get you desktop application in the Windows Store with just a few clicks.\n\nMSIX Sparse Packages\n\nProvide your non-UWP desktop app with deeper integration into the OS features using Sparse packages.Professional Application Resources Specify installation folders to be synchronized with folders on your disk, with include and exclude patterns.\n\nPath Variables\n\nAbility to use custom, per-machine configurable Variables in project paths.\n\nCompute file hashes\n\nTurn this feature on to eliminate unnecessary file copying during a repair process.\n\nFile associations and mime types\n\nAssociate files having certain extensions with your application for open, edit, view, print or other operations.\n\nVista Default Programs\n\nTake advantage of the Windows Vista's new support for registering applications to handle file types.\n\nAdvertised shortcuts\n\nAdvertised shortcuts trigger installation of features on demand or application check and repair when launched.\n\nINI files and entries\n\nImport full INI files. Easily create and edit, update or change INI entries.\n\nSearch for applications and resources\n\nSearch for components, files, folders, registry and INI entries during the install process.\n\nTest-run searches\n\nInvaluable tool allowing you to test Windows Installer searches on the spot, seeing the results immediately.\n\nPermissions\n\nSet permissions to define in detail the allowed user access to files, folders, registry keys and entries.\n\nResource removal on install\n\nRemove files, registry keys and values during both install and uninstall stages.\n\nFile install actions\n\nMove, copy or duplicate any file during install. Reserve additional space for install costing.\n\nUninstall cleanup\n\nNow it's easy to make sure your application doesn't leave anything on your user's system after uninstall.\n\nPersistent user data\n\nPersist user-modified settings and configurations through upgrades and repairs of your application.\n\nTemporary installation files\n\nInclude additional files that must be present at install time, without being installed themselves.Resource Registration\n\nExtract registration information\n\nThe registration data can be extracted from files that can auto-register, and installed directly in the Registry. Install and register services. Control (start, stop, etc.) them both on install and uninstall.\n\nODBC drivers, data sources and translators\n\nInstall and easily set the attributes on ODBC drivers, data sources and translators.\n\nCOM, COM+ and DCOM\n\nFully specify COM, COM+ and DCOM components for registration at install time.\n\nCOM Interfaces\n\nCreate COM Interfaces using Advanced Installer GUI.\n\nCOM+ import\n\nImport complete COM+ installation MSIs into existing Advanced Installer projects..NET Framework\n\n.NET and Win32 assemblies\n\nInstall .NET and Win32 assemblies in Global Assembly Cache (GAC) or privately, side-by-side on Windows XP.\n\n.NET / COM interoperability\n\nLet Advanced Installer extract registration information and register your .NET assemblies for COM interoperability.\n\nPrecompile .NET assemblies\n\nImprove .NET applications performance and startup time by precompiling them to native images on install.\n\nAssembly attributes\n\nAdvanced Installer automatically scans and detects .NET assembly attributes freeing you from this task.\n\n.NET project template\n\nUse the provided template and wizard to create installers for .NET framework applications in mere minutes.\n\n.NET prerequisite\n\nCheck if the right .NET framework is present on the target machine and, if necessary, download and install it. Write Custom Actions using the .NET framework, taking advantage of InstallerClass.Custom Actions Extend your installer's capabilities by executing JS, VBScript, an EXE, or a function in a DLL during install.\n\nNested Install custom actions\n\nLaunch an embedded MSI file from your installation in order to install, repair or remove another product.\n\nMulti-file Custom Actions\n\nProvide resources in separate files. Call normal, third-party multi-file programs as custom actions.\n\nPredefined actions library\n\nPredefined Custom Actions, ready to be used and easy to customize: play audio file, detect/stop processes and services, etc.\n\nStandard DLL call\n\nPredefined Custom Action allows you to call any function in any standard DLL.Package Organization Organize your Windows Installer package in features and sub-features. Create, set attributes and install conditions.\n\nGroup components in features\n\nGroup installation components into features, share them or set their attributes and install conditions.\n\nBuild one CAB per feature\n\nSave bandwidth by ensuring that for online installs only features actually installed will be downloaded.\n\nIsolated components\n\nEnsure the components you need are next to your application and will not be overwritten by other software.\n\nQualified/Published components\n\nAnother level of indirection in your components supports pluggable components and replaceable implementations.EXE bootstrapper Bootstrap your MSI or MSIX(AppX) package into an EXE file with a custom icon, file description and version.\n\nMD5 signatures\n\nSetups can use MD5 for checking self and downloaded files (prerequisites or updates) integrity. Create setups that can automatically search for, download and install prerequisite applications. Full CLI support from Enterprise.\n\nInstall/update Windows Installer\n\nSet it as prerequisite and your setup will be able to download and update it on the target machine.\n\nLatest version check\n\nOn launch, check online for a newer version of this installer, and if available, download and install it instead. The Bootstrapper UI has Enhanced UI rendering engine with MSI Dialog table, making the EXE and MSI dialogs indistinguishable.\n\nBootstrapper for Desktop Bridge apps\n\nOn launch, we check on which OS the package is running and install an MSIX(AppX) package, for Windows 11, or an MSI for older systems.User Interface\n\nChange banners and images\n\nCustomize the way dialogs look during the installation process by changing the background banner images. You have over 75 built-in custom themes to effortlessly give your application a professional (and gorgeous!) look.\n\nAdditional Dialogs\n\nSelect one of the available pre-built dialogs to appear in front of the user during the installation.\n\nBackground image slide shows\n\nSchedule image slide shows during the install of your application. Advertise your brand and products, show off their abilities.Localization Currently localizations in 31 languages for MSIs, EXE bootstrapper and all helper utilities are already included. Translating additional languages is as easy as editing an XML file generated as a dictionary of untranslated strings. Generate a single MSI or EXE file with all the desired languages. Automatically match the end-user's default language. Allow your users to select any installation language from the languages included in your installer. Localize your Universal Windows Platform package and distribute it worldwide through the Microsoft Store.Windows Store Package your applications for next generation deployment in Windows 8/8.1/10 and beyond with AppX. Import and edit existing Windows Store App packages using the friendly Advanced Installer GUI. Create CABinet packages that can be used to install applications on Windows CE / Mobile platforms. Full support to build, debug and customize MSIX(AppX) packages for your Win32/.NET applications, through Desktop Bridge. Create UWP and WSA packages from your existing projects. Migrate to the MSIX package standard by using the built-in support for the Package Support Framework.Internet Information Services (IIS) Configure and deploy Web Sites, create Front Page Server Extensions, Web Application Mappings, etc.\n\nImport Web Applications\n\nQuickly configure web sites, virtual directories and application pools by importing directly from your working configurations.\n\nVirtual Directories\n\nConfigure and deploy Virtual Directories, associate a Web Application, open FTP access, etc.\n\nConfigure IIS server\n\nConfigure the IIS server, register ISAPI filters, backup the metabase, open the Management Console, FastCgi Applications.\n\nApplication Pools\n\nAssign specific configuration settings to a worker process (or processes) that services a group of applications.\n\nIIS 5.1 to 10\n\nFull support for IIS 5.1, 6, 7, 8, 8.5 and 10 running on Microsoft Windows XP all the way to Windows 11 and 2012 R2 Server OSs.\n\nUser Accounts integration\n\nConfigure anonymous access for IIS or authentication fully integrated with the User Accounts functionality.\n\nHTTPS/SSL configuration\n\nConfigure HTTPS/SSL parameters for websites: bindings, digital certificates and options. Dedicated wizard. Register your ASP.NET (including .NET 4.5) web application with IIS 7/8 or with IIS 5/6. In addition to the dedicated UI features, custom properties help you modify the majority of IIS 7 or above attributes/collections.For Java Installer Features Package both console applications (within a terminal window) and GUI applications (that have a graphical user interface). Quickly and easily create, package, install and run Win32 services written in Java.\n\nMultiple Java applications per package\n\nInstall several Java applications (each with its own settings and native launcher) with the same package.\n\n100% native code, no JVM overhead\n\nInstallers contain only native code and technologies, for the smallest footprint and the tightest platform integration.\n\nWizard for Java Project creation\n\nUse the wizard to create complete Windows and Mac OS X installers for your Java application in mere minutes. Point Advanced Installer to your Eclipse project and it will instantaneously create your installer and launchers. Powerful wizard employed to help you create installation packages by importing IntelliJ IDEA workspaces. Coupled with LZMA compression, can reduce the size of code archives to as low as 20% of the initial size.\n\nFlexible ClassPath, Library and System paths\n\nInclude JAR files, folders, Windows Installer properties and environment variables in your application's paths.\n\nEdit JVM parameters\n\nEasy to use GUI to edit runtime options, system properties, VM command line and other parameters.\n\nPowerful memory sizing options\n\nSpecify JVM initial and maximum heap and stack sizes, fixed or in bounded physical memory percentages.\n\nJRockit JRE\n\nBundle or run your Java applications using the JRockit Java Runtime Environment.\n\nJRE bundling\n\nCreate packages that include a private JRE for your application or a bundled one to install on the computer. Check if the right JVM is present on the target machine and, if necessary, download and install it.Java Native Launcher\n\nJRE/JDK detection and selection\n\nPowerful and customizable way to find the installed JVMs and to select the one fitted to run your application.\n\nYour process name instead of java/javaw\n\nSet your own process name to appear in the task manager and the Windows XP task bar groups.\n\nCustom application/EXE icon\n\nInclude a professional native Windows ICO icon in your executable, with multiple resolutions and color depths.\n\nFile version and name for executable\n\nEmbed the version information and name into the generated executable file of your Java application.\n\nInstant-on native splash screen\n\nA custom splash screen displayed as soon as the EXE file is launched, without having to wait for the JRE to load.\n\nJava 6 native splash screen\n\nUse the standard Java 6 native splash screen API if available, or fall back on the one provided otherwise.\n\nUser friendly error handling\n\nErrors are treated internally, or if not possible, presented to the user well explained and with solution suggestions.\n\nSingle application instance\n\nOptionally enforce a system-wide unique instance of your product, redirecting secondary launches to this instance.\n\nStdout and stderr redirection\n\nRedirect the standard streams to files so the user can check for errors and exceptions even for GUI applications.\n\nNative 64-bit launcher\n\nA native 64-bit Java launcher version allows you to load your application into a discovered (or bundled) 64-bit JRE.\n\nEmbed JAR in EXE\n\nProtect your application code and simplify deployment by running your JAR directly from the native launcher, without an extraction.Mac OS X Packages\n\nMac OS X standalone bundles\n\nCreate standard, standalone, native application bundles for your Java products to be installed on Mac OS X computers.\n\nJava applications for Mac OS X\n\nBuild standalone Java applications ready to be signed and published on the App Store.\n\nTranslate Windows settings to Mac OS X\n\nEvery installer setting with an equivalent on Mac OS X will be used directly like it is used in the Windows package.\n\nPlatform-specific Mac OS X settings\n\nSettings that are specific to Mac OS X can be specified separately for the best platform integration.\n\nMinimum Mac OS X version\n\nSpecify the minimum version of Mac OS X required to run your application.\n\nNative Mac OS X icon\n\nSpecify a ICNS file to be used to graphically identify your application on Mac OS X.\n\nMac OS X splash screen\n\nDisplay a specified splash screen when launching your application on Mac OS X.\n\nMac OS X localization\n\nThe Mac OS X packages are also easily localizable, with a number of built-in languages already included.\n\nMac OS X file associations and mime types\n\nDefine document types and associate them with your application.Enterprise Features Search in XML files and return the values of elements, attributes or text nodes. Insert, replace or remove elements and attributes in XML files. Patch XML config files, register in XML frameworks.\n\nUpdate TXT files\n\nInsert, replace or remove any string in any file type installed by your package or already present on the target machine. The licensing module offers ready to use trial and registration (with maintenance plans) functionality for your application.\n\nInstall Drivers\n\nSpecify drivers for install using the Windows Driver Install Frameworks (DIFx), version 2.1.\n\nConvert EXE installers to MSIs\n\nPowerful wizard will convert any EXE setup into an MSI ready for network deployment through Active Directory.\n\nUser Accounts and Groups\n\nAllow your installers to create user accounts and groups on the user's computer.\n\nTask scheduler\n\nCreate and fully configure tasks to be run by the native Windows Scheduler service.\n\nScheduled Updates\n\nThe Updater integrated with the Task Scheduler allows you to run updates from the Windows Scheduler service. Quickly enable your product to automatically start from CDs and DVDs. Powerful, customizable, Windows 7-Ready launcher.\n\nFolder sharing\n\nEasily share folders on install, setting the sharing permissions for secured access. Add your application to the exception list during installation, and remove it during uninstallation. Easily and fully integrate your games in Windows Vista's Games Explorer, specifying ratings, genres, art and more.\n\nMedia Center registration\n\nRegister your games in Windows Media Center and allow your users to run them directly from there.\n\nWindows 7 Libraries\n\nEasily create or add to existing Libraries like “Documents”, “Pictures” or “Music” on Windows 7.\n\nEmbedded Chainers\n\nEmbed multiple MSIs in a unified setup package and install them chained in a single, atomic transaction. Save the prerequisites you defined and reuse them in other projects. Allow the installation of multiple instances of your product on the same computer. Capture user input during an install or the differences between two MSI databases into a Windows Installer transform.\n\nCustom Tables editor\n\nVisually define new tables and columns, insert rows in your MSIs. Add and edit additional data for your custom actions. Visually edit your MSIs and MSMs at database table and row level, customizing your installers to the tiniest detail.\n\nMSI and MST Diff\n\nHighlight MST content or MSI differences within the Table Editor. Optimize your work by reverting changes on the fly. Avoid damaging your local machine when testing the installation by running it in a provisioned virtual machine.Installer Continuous Integration Build Advanced Installer projects using Azure DevOps. Dedicated build runner for Advanced Installer. Dedicated Bamboo tasks for Advanced Installer.Automatic Updater\n\nVisual Updates Editor\n\nEdit your updates configurations visually in dedicated projects and build in multiple locales.\n\nHTTP authentication, HTTPS\n\nDownloading over HTTPS is supported, as well as HTTP authentication which prompts for a user and password.\n\nServer-side license check\n\nServer-side license check is supported, as another way to hinder piracy. Prompt your users with a notification and keep them up to date with the latest version of your application.Dialog Editor Control every detail of the UI of your MSI packages. Add, change or remove controls, dialogs, texts and more.\n\nFull Billboard Editor\n\nSpice up your installs, advertise your application's features (in text and images) during setup.\n\nDialog Repository\n\nSave time and work by reusing the dialogs and dialog templates you create in other projects.\n\nWizard for Control Event creation\n\nHandy wizard to assist you when accomplishing the more difficult tasks of Windows Installer UI.\n\nPrint Control\n\nWith just a couple of clicks, add a fully functional Print... button to your License or Readme dialogs.\n\nBrowse for File\n\nAdd a predefined Custom Action allowing your users to select a file (license, DB, etc.) during your installer's UI.\n\nListBox & ComboBox controls\n\nPredefined Custom Actions for populating, deleting and extracting data from ListBox and ComboBox controls.\n\nCollect user info\n\nPredefined Custom Action for collecting user information during install and POST-ing it to your web server.\n\nUI Testing\n\nTest your installer's User Interface as you create it, without building the full package every time.Enhanced User Interface External UI implementation improving the way your installers look and feel. UAC compliant.\n\nWindows 11/10/8/7/Vista controls\n\nOn Windows Vista or higher, use true color icons as large as 256x256 pixels and Command Link controls.\n\nHTML Host control\n\nCreate HTML UIs in your installer, scripting with JavaScript. Included Windows Installer - JavaScript full two-way bridge.\n\nAdditional controls\n\nFeature Selection Tree with checkboxes, checklist, native OS Browse for Folder dialog, hyperlink, enforced EULA lecture.\n\nGlobal Progress\n\nDeterministic, installation-global progress tracking events. Correctly estimate installer completion and avoid user confusion.Patches With Advanced Installer you can quickly and easily create patches for your applications.\n\nRemovable Patches\n\nAdvanced Installer generates patches that can be uninstalled separately on Windows Installer 3.0 or higher.\n\nPatch Sequencing\n\nGuarantees your patches are always applied in the order you want (Windows Installer 3.0 or higher).\n\nWizard for MSP Project creation\n\nUse the provided wizard to create Windows Installer Patches in mere minutes.\n\nPatch EXE bootstrapper\n\nPack your patches in EXE files for simpler deployment. Specify custom icons, file descriptions and versions.Merge Modules Package the independent components you use in your applications as stand-alone MSM files.\n\nWizard for MSM Project creation\n\nUse the provided wizard to create Windows Installer MSM Merge Modules in mere minutes.\n\nConfigurable Parameters\n\nAllow your users to customize the Merge Modules you provide. Specify what can be changed and how.Server & Web Apps Publish Web Applications to Microsoft Azure and IIS from installers using Microsoft Web Deploy.\n\nTomcat Web Applications\n\nSimple-to-build installers to easily and quickly deploy your web applications into Apache Tomcat. Included wizard will painlessly create standard MSI installers to deploy SharePoint 2016 solutions. Advanced Installer simplifies how you install roles on the server and lets you install multiple roles at the same time. Help your users easily pick target Web Sites, Virtual Directories and Application Pools by showing a list with what's available.\n\nMicrosoft Silverlight Applications\n\nUse the dedicated UI to manage deployment solutions for Microsoft Silverlight OoB (out of browser) applications.Databases During install, configure servers and deploy SQL scripts for Microsoft, Oracle, Postgre and MySQL databases.\n\nSQL Queries\n\nInterrogate SQL databases and use the retrieved information during the installation. Upload reports, datasets or data sources to an instance of Microsoft SQL Server Reporting Services.\n\nTransaction Support\n\nFull transaction support for running SQL Scripts on transaction-capable DBMSs.\n\nSandbox Test\n\nTest SQL Queries and Connections in an isolated environment on your development machine. Automatically discover and list Microsoft SQL Servers available on the network at install time. List all databases the user with the associated credentials is allowed to connect to.Architect Features Create transforms or quickly edit existing MSI packages directly from the Advanced Installer GUI. Detects possible installation conflicts between a selected MSI and other MSIs from the repository. Extended and update your MSIX packages. Decouple your main application package from its updates, speed up Windows 11 updates. Get an instant view of your package content and customize anything from Advanced Installer’s friendly user interface.Repackage Painlessly capture and repackage existing installations into MSI packages. The repackager has UI automation and its own CLI.\n\nVMware Repackager\n\nChoose between performing the capture either on your development machine or on a VMware virtual machine.\n\nHyper-V Repackager\n\nChoose between performing the capture either on your development machine or on a Hyper-V virtual machine.\n\nDocker Repackager\n\nNative integration for Docker containers. Repackage applications that support silent installation switche and convert them to MSI or MSIX.\n\nRepackaging in Remote Machines\n\nChoose to complete a repackaging session into a remote machine.\n\nSmart Repackager\n\nDetect and preserve high-level constructs like services, drivers, file associations, environment variables and assemblies in scan results.\n\n64-bit Repackager\n\nCapture and repackage installations on 64-bit systems, detecting 64-bit specific components and behaviors.\n\nDesktop App Converter\n\nCapture installations of Win32/.NET desktop applications, with full UI or silent, and convert them to MSIX(AppX) format.\n\nCustomize them using our dedicated GUI. Verify what resources were added, modified or removed in the repackaged installation by comparing the results with the original installation. Record repackager settings, take notes and capture screenshots of the installation. Migrate your project customizations from an older version of your repackaged application when repackaging a newer version.Application Virtualization Full support for Microsoft's Application Virtualization technology. Effortlessly build App-V 4.x or App-V 5.x packages for your software. Create installation packages by importing existing App-V packages. Convert App-V 4.x applications to App-V 5.x. Open App-V 5.x packages with Advanced Installer, edit and save the changes from our friendly GUI, no sequencing. Use the TweakAppV.exe command line interface tool as a scripting alternative to the graphical interface editor.\n\nVMware ThinApp\n\nFull support for VMware's ThinApp technology. Easily create a virtualized version of your application from your installer.\n\nVMware ThinApp Import\n\nCreate installation packages by importing ThinApp project folders.Mobile Device Management Save time by using the integrated deployment to System Center Configuration Manager. CLI is included.\n\nDeploy App-V packages with SCCM\n\nComfortably manage virtual and physical applications deployment through SCCM and more. Deploy your applications to Microsoft Intune by using our wizard or CLI."
    }
}