{
    "id": "dbpedia_7395_2",
    "rank": 52,
    "data": {
        "url": "https://ormbunkar.se/aliview/",
        "read_more_link": "",
        "language": "en",
        "title": "Alignment Viewer and Editor",
        "top_image": "https://ormbunkar.se/aliview/alignment_ico_64x64.png",
        "meta_img": "https://ormbunkar.se/aliview/alignment_ico_64x64.png",
        "images": [
            "https://ormbunkar.se/aliview/images/uu_logo_100.png",
            "https://ormbunkar.se/aliview/images/screenshot_mac_400v2.png",
            "https://ormbunkar.se/aliview/images/tutorial/2.1.large.png",
            "https://ormbunkar.se/aliview/images/tutorial/3.color-seaview.png",
            "https://ormbunkar.se/aliview/images/tutorial/3.5.clustalx.color.png",
            "https://ormbunkar.se/aliview/images/tutorial/4.translated.png",
            "https://ormbunkar.se/aliview/images/tutorial/4.1.translated.1pos.png",
            "https://ormbunkar.se/aliview/images/tutorial/5.non.consensus.png",
            "https://ormbunkar.se/aliview/images/tutorial/5.2.trace.png",
            "https://ormbunkar.se/aliview/images/tutorial/5.1.consensus.png",
            "https://ormbunkar.se/aliview/images/tutorial/6.realign.png",
            "https://ormbunkar.se/aliview/images/tutorial/6.1.realign.block.png",
            "https://ormbunkar.se/aliview/images/tutorial/6.2.realign.sequence.png",
            "https://ormbunkar.se/aliview/images/tutorial/6.3.realign.translated.png",
            "https://ormbunkar.se/aliview/images/tutorial/7.1.manual.edit.png",
            "https://ormbunkar.se/aliview/images/tutorial/7.2.reorder.delete.png",
            "https://ormbunkar.se/aliview/images/tutorial/7.3.merge.png",
            "https://ormbunkar.se/aliview/images/tutorial/8.3.dragdrop.png",
            "https://ormbunkar.se/aliview/images/tutorial/8.primer.png",
            "https://ormbunkar.se/aliview/images/tutorial/8.1.external.png",
            "https://ormbunkar.se/aliview/images/tutorial/8.2.aligner.config.png",
            "https://ormbunkar.se/aliview/images/find_primer_result_win.png",
            "https://ormbunkar.se/aliview/images/find_primer_detail_win.png",
            "https://ormbunkar.se/aliview/images/general_settings.png",
            "https://ormbunkar.se/aliview/images/primersettings.jpg",
            "https://ormbunkar.se/aliview/images/align_all_settings.png",
            "https://ormbunkar.se/aliview/images/align_add_settings.png",
            "https://ormbunkar.se/aliview/images/external_program_settings.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "alignment_ico_64x64.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "About\n\nAliView is yet another alignment viewer and editor, but this is probably one of the fastest and most intuitive to use, not so bloated and hopefully to your liking.\n\nThe general idea when designing this program has always been usability and speed, all new functions are optimized so they do not affect the general performance and capability to work swiftly with large alignments. The speed in rendering even makes it possible to work with large alignments on older hardware.\n\nA need to easily sort, view, remove, edit and merge sequences from large transcriptome datasets initiated the design of the program.\n\nIt is of course also working very well with smaller datasets:)\n\nThe program is developed at the department of Systematic Biology, Uppsala University, so there is probably a predominance in functionality supporting those working with phylogenies.\n\nCitation: Larsson, A. (2014). AliView: a fast and lightweight alignment viewer and editor for large data sets. Bioinformatics30(22): 3276-3278. http://dx.doi.org/10.1093/bioinformatics/btu531\n\nThe program is released under the Open Source Software License 'GNU General Public License, version 3.0 (GPLv3)'\n\nSource code is available at GitHub: https://github.com/AliView/AliView\n\nDownload the latest stable version: 1.28 (24/Nov/2021) (Mac OS X, Windows, Linux)\n\nFeature list:\n\n- fast and light-weight\n\n- simple navigation, mouse-wheel zoom out unlimited to see whole alignment, and zoom in on place of interest\n\n- various visual cues to highlight consensus characters or characters deviating from the consensus or characters deviating from a selected \"trace\"-sequence\n\n- edit sequences/alignment (manually), insert, delete, change, move, rename (with keyboard or mouse)\n\n- align, add and align automatically with MUSCLE (included) or MAFFT, or any other aligner of your choice\n\n- define aligner program presets (different parameters, different software)\n\n- align new sequences to existing or realign all\n\n- realign a selected block\n\n- realign nucleotides as translated amino-acids\n\n- delete vertical gaps\n\n- undo/redo\n\n- find degenerate primers in conserved regions in an alignment of mixed species\n\n- open and save in FASTA-, NEXUS-, PHYLIP, CLUSTAL or MSF-format (unlimited file sizes)\n\n- print (current view)\n\n- export whole alignment as an image file (png-format)\n\n- copy selection (as fasta-sequences or just characters)\n\n- paste sequences (both as sequences in clipboard or filenames in clipboard)\n\n- add more sequences from file\n\n- merge two sequences - and calculate consensus if the overlap is not perfect\n\n- translate (view) nucleotide sequences as amino-acid sequences\n\n- save translated alignment\n\n- read and preserve Codonpos, Charset and Excludes (Nexus-specification)\n\n- change Codonpos for selected regions (Nexus-specification)\n\n- drag-drop/remove of sequences/files\n\n- move sequences to top/bottom with key-stroke\n\n- a very simple to use \"external interface\" that lets you invoke your other favorite programs (you could for example automatically have the alignment sent to FastTree and then automatically opened in FigTree)\n\n- search function that finds patterns across gaps and follows IUPAC codes\n\n- search multiple sequence names at once (stored in clipboard)\n\n- reverse complement/reverse/complement sequences or whole alignment\n\n- different color schemes including ClustalX\n\n- sort sequences by name\n\n- sort sequences by residue in selected column\n\nIllustrated feature-list:\n\nUnlimited mouse wheel zoom in/out to see whole alignment\n\nSpeedy handling of large alignments\n\nReads unlimited size FASTA, PHYLIP, NEXUS, CLUSTAL and MSF files\n\nAlternative Color schemes (SeaView)\n\nClustalX consensus color scheme\n\nView nucleotides colored as translated Amino Acids\n\nView nucleotides colored as translated Amino Acids (1-position)\n\nHighlight characters deviating from Consensus\n\nHighlight characters deviating from selected \"Trace\" sequence\n\nHighlight characters belonging to Consensus\n\nMUSCLE or other alignment program to realign sequences\n\nRealign selected block with muscle or other aligner program\n\nRealign single sequence with MUSCLE or other aligner program\n\nNucleotides realigned as translated AminoAcids and then retranslated to nucleotides\n\nManual Alignment with Keyboard or Mouse\n\nDelete sequences, reorder, move to top, move to bottom\n\nMerge sequences (overlapping or not - create consensus if overlapping)\n\nDrag and drop file/sequences, if you hold Shift when dropping\n\nthen you add to current alignment, otherwise open new\n\nFind degenerate primers in selected blocks\n\nConfigure external programs\n\nAdd and configure other alignment programs to use e.g. MAFFT\n\nInstall instructions and Downloads:\n\nVersion history here (version_history.txt)\n\nSome demo datasets can be found here\n\nMac OS X (all versions)Â download here\n\nThe program is distributed as an Application (AliView-app.zip), that only needs to be dropped in your App-folder (sometimes you need to unpack it manually)\n\nOBS! On Mavericks or Sierra you might get an error message âThis application is damaged and can't be opened. You should move it to the Trash.â - The file is actually not damaged, it is just a bad error message. There is a settings in the âGatekeeperâ that you need to change to be able to download software from other places than the App-store.\n\nHow to solve (on Mavericks): http://answers.uchicago.edu/page.php?id=25481\n\nHow to solve (on Sierra): https://www.tekrevue.com/tip/gatekeeper-macos-sierra\n\nWindows (all versions)Â download here\n\nDownload and run AliView-Setup.exe\n\n- the setup program will default installation to directory \"C:\\Program Files (x86)\\AliView\"\n\nAlternatively you can download the program AliView.exe or aliview.jar from sub-directory /without_installer_version/\n\nNOTE: some virus scanners might block the installation and need to be temporarily disabled.\n\nLinux (all versions)Â download here\n\nThe simplest install is to download the file: aliview.install.run\n\n(this is a executable archive that will copy the files to the /usr/bin/ and /usr/share/aliview/, and will also install a \".desktop\" link to the start-menu on compatible systems.)\n\n- after downloading you will likely need to change the execution rights of the install file:\n\nchmod +x aliview.install.run\n\n- install by issuing command:\n\nsudo ./aliview.install.run\n\n(most likely you need to sudo the installation, if you don't have super user rights to the system see below)\n\n- start the program with command:\n\naliview (this is a sh-script that will execute java -jar aliview.jar)\n\nLinux (alternative installation - as non super user)\n\n1. Download the archive aliview.tgz and extract it into a directory of your choice.\n\n2. Run program from this directory by issuing command ./aliview in the terminal\n\n(this is a sh-script that will execute command java -jar aliview.jar)\n\nNOTE: If you are running Linux, consider upgrading to Java 8, there is a significant improvement in drawing speed since it is using Linux built in XRender.\n\nInstallation is very simple (1 minute) - Java 8 installation instructions for Ubuntu/Debian/OpenSuse/RedHat\n\nReport a bug or feature request:\n\nTwo ways:\n\n1. Report issue at AliView GitHub Issues tracker: https://github.com/AliView/AliView/issues/\n\nor\n\n2. Send email to: anders.larsson [at] icm.uu.se\n\nAnders Larsson,\n\nNBIS, Department of Cell and Molecular Biology\n\nUppsala University\n\nSweden\n\nemail: anders.larsson [at] icm.uu.se\n\nCitation:\n\nLarsson, A. (2014). AliView: a fast and lightweight alignment viewer and editor for large data sets. Bioinformatics30(22): 3276-3278. http://dx.doi.org/10.1093/bioinformatics/btu531\n\nHelp section:\n\nContents:\n\nFile menu\n\nEdit menu\n\nSelection menu\n\nView menu\n\nAlign menu\n\nTools menu\n\nPrimer submenu\n\nLarge files indexed\n\nMemory settings\n\nGeneral setting (Preferences window)\n\nFind primer setting (Preferences window)\n\nAlign All Commands - Edit alignment program\n\nAlign Add Commands - Edit alignment program\n\nExternal Commands - Add and edit programs called by AliView\n\nDrag and drop tips\n\nFile menu:\n\nOpen File: AliView will open files in Fasta, Fastq, Nexus, Phylip, Clustal and MSF format.\n\nSave as Nexus simplified names: Unorthodox characters (- \\?./|\\,&) in Sequence names are replaced by \"_\"\n\nSave as Codonpos Nexus (nucleotide dataset only): All pos-1 nucleotides are saved as one charset in the beginning of the alignment, thereafter all pos-2 nucleotides as one charset, then all pos-3 and finally all non-coding (0-pos).\n\nPrint: Apart from printing to paper, it is often possible in the settings to \"print to file\", this way you can get post script (ps) files of the alignment.\n\nExport alignment as image: This will save the entire alignment as a .png image file\n\nSave selection as Fasta: Only the selected sequences, or selected parts of sequences will be included in the .fasta file - a very simple way of pruning away things from your alignment.\n\nSave Translated alignment as Amino acids (nucleotide dataset only): Program will translate nucleotides into AminoAcids (taking into account user specified edits in codon positions when translating)\n\nStart debug: Prints more messages\n\nShow message log: Displays program messages and errors in a message window\n\nEdit:\n\nWhen opening very large files and they are indexed, then the editing capabilities are very limited - but if you need to edit it might be possible if you increase the Memory resources for AliViev see here.\n\nUndo/Redo: AliView has undo/redo functionality (except when large indexed files are read from file). Depending on the Memory settings, the number of possible undo/redo steps changes.\n\nCopy selection as Fasta: The selected sequences/characters are copied into clipboard as a Fasta sequences (including both name and sequence).\n\nCopy selection as characters: The selected sequences/characters are copied into clipboard as characters only - Not including the names of the sequences where the characters come from.\n\nPaste (fasta sequences): Sequence(s) will be pasted at top of alignment if clipboard contains either File containing fasta sequences or text in fasta format, e.g.:\n\n>Name_of_seq\n\nTTGGGCATG\n\nAdd sequences from file: Add sequence(s) from a file to be pasted at top of alignment (FASTA,PHYLIP, NEXUS, CLUSTAL or MSF file format).\n\nEdit mode: It is not possible to edit alignment by accident unless you activate \"Edit Mode\".\n\nClear selected bases: Changes selected nucleotides/AminoAcids into GAP.\n\nDelete selected Removes selected sequences/nucleotides/AminoAcids from alignment.\n\nDelete selected bases: Removes selected nucleotides/AminoAcids from sequences/alignment.\n\nDelete vertical gaps: If there are column(s) in the alignment only containing GAPs these positions are removed.\n\nDelete all gaps in all sequences: Degap the whole alignment.\n\nTrim sequences/alignment: If there are column(s) in the beginning or at the end of the alignment containing GAPs only, then these positions are removed.\n\nExcludes (Nexus specification) can be useful if you have an alignment with sections that you don't want to remove permanently - but sometimes when you make an analysis. Then you can save the alignment with the \"Excluded\" sections removed and use that alignment for the analysis.\n\nDelete excluded bases: Removes sections of the alignment that are marked as \"Excluded\" (Nexus specification). See also above.\n\nReplace terminal GAPs into missing char (?)\n\nReplace missing char (?) into GAP (-)\n\nFind Finds in name or nucleotides/aminoacids - searches across gaps and obeys IUPAC codes.\n\nFind sequence names from clipboard Finds and selects sequence(s) matching names that are stored in the clipboard as a list.\n\nExample list in clipboard:\n\nWoodsia\n\nAthyrium\n\nDryopteris\n\nMerge two selected sequences: If there is a non-identical overlap AliView will create a consensus sequence.\n\nReverse complement clipboard: Will reverse complement characters/fasta sequences that are stored in clipboard.\n\nSelection:\n\nSelect all\n\nDe-select\n\nExpand selection Right\n\nExpand selection Left\n\nExpand selection Down\n\nExpand selection Up\n\nMove selected sequences up\n\nMove selected sequences down\n\nMove selected sequences to top\n\nMove selected sequences to bottom\n\nAdd selection to Excludes: Marks sections of the alignment as \"Excludes\" (Nexus specification). See also above under Excludes (this is saved in the NEXUS Excludes block).\n\nRemove selection from Excludes: Removes selected sections of the alignment from \"Excludes\" (if they are included already). See also above under Excludes (Nexus specification).\n\nSelect charset: If the alignment file has charsets defined you can select one.\n\nSet selection as coding: In a nucleotide alignment you can specify the coding regions, pick the start position of the selection and then further bases will be marked as codon position 1,2,3,1,2,3... and so forth. (this is saved in the NEXUS Codonpos block)\n\nSet selection as Non-coding: Set bases as non-coding (this is saved in the NEXUS Codonpos block)\n\nView:\n\nDecrease Font Size\n\nDecrease Font Size\n\nHighlight consensus characters Characters in a column that belong to majority rule consensus are highlighted by removing background colors on deviating characters.\n\nPrimer:\n\nFind primer in current selection:\n\nNote - You can change the essential parameters when searching for primers in the Find primer settings\n\n1. Select a block in the Alignment where you want to find a primer.\n\n2. Select the menu \"Find primer in current selection\"\n\n3. AliView will now open a window with all possible primers in the selected region (min length and max length of the primer is specified in \"Find primer settings\") as an ordered list sorted by the number of degenerate positions, self-binding values and melting temperature (TM).\n\n4. If you click on a specific primer another window will open with all primer details - and the primer position will also be highlighted in the alignment.\n\nExternal commands:\n\nEdit external commands: You can have AliView call other programs with the current alignment as a parameter see here for examples how to design a command\n\nHelp menu\n\nHelp AliView will open this document from this menu.....\n\nLoad more sequences from file\n\nIf you have opened a large file and all sequences were not indexed at once, this menu will show up and you can select other parts of the file to index. You can also change the number of sequences to index at once in the Program preferences, General settings\n\nMemory settings\n\nIf you want AliView to read larger alignments in memory and not from file (this allows for more editing capabilities), then you can change the maximum memory settings for the program.\n\nThe amount of memory needed for a file to be read into memory is about 2 x file size.\n\nMac OS X\n\nGo to Applications in Finder -->Left click AliView --> Show Package Content --> Contents --> Then open the file \"Info.Plist\" in a text-editor and change the parameter: <string>-Xmx512m -Xms128m</string> to something different (for example 2GB=2048M):\n\n<string>-Xmx2048m -Xms128m</string>\n\nLinux\n\n/usr/bin/aliview\n\nopen this file in text-editor and change the parameter -Xmx1024M (default setting = 1024M memory)\n\nWindows\n\nIn the installation folder of AliView (default: \"c:\\Program Files\\AliView\\\") open the file \"AliView.l4j.ini\" in a text editor and change the setting: -Xmx1024m to something you prefer (for example 2GB=2048M) -Xmx2048m\n\nGeneral settings\n\nReverse horizontal mouse-wheel (touchpad) movement\n\nReverse vertical mouse-wheel (touchpad) movement\n\n(if the direction if movement is driving you crazy - adjust it here).\n\nHorizontal scroll speed\n\nVertical scroll speed\n\n(on some systems the movement is to fast/slow) â you can adjust it here.\n\nOverride default program font size\n\n(on some computers with extreme resolution it might be hard to read text with default settings - OBS! If you are having these problems on Windows, then you should consider installing Java 9, dpi-scaling works on Windows with Java 9)\n\nWhen working with large files being read straight from disk:\n\nNumber of sequences to index at a time in very large files\n\n(you can change the number of sequences being indexed at once â the rest of the sequences in the file are available by selecting the menu-alternative âLoad more sequencesâ (this menu is only showing up when the file is parted into âpagesâ). More sequences are being indexed as they are being viewed.\n\nNumber of sequences to count when calculating ClustalX consensus on large files\n\n(it would take very long time to calculate consensus considering every position in a large file)\n\nFind Primer settings\n\nProgram to use for \"Align all\" commands\n\nIn the Program field you enter the program you want to execute when using the alignment functions in AliView.\n\nThere are default settings for MUSCLE and MAFFT included in AliView and they look different for different operating systems (Windows / Linux / Mac OSX).\n\nBelow are commented examples for Mac OS X, Linux and Windows\n\nNote 1:It is essential that file names that contains spaces or unorthodox characters are specified within quotation marks \"\n\nOn Windows for example: \"c:\\Program Files\\mafft-win\\mafft.bat\"\n\nOn Mac OS X for example: \"FigTree 1.4.0.App\"\n\nNote 2: When calling MAFFT on Windows computers you are actually starting the program cmd.exe and instead including MAFFT program path as a parameter (compare for example with the muscle.exe program and command).\n\nProgram to use when adding and aligning in new sequences (\"Align add\" commands)\n\nFor an explanation on how to fill in the fields see above \"Program to use for \"Align all\" commands\" and below are also commented examples for Mac OS X, Linux and Windows\n\nSome commented examples of Aligner Program commands:\n\nNOTE: It is essential that file names that contains spaces are specified within quotation marks \"\n\nMAC OS X\n\nAlign ALL command examples MUSCLE command (default) Comment /home/the-user/.AliView/binaries/muscle3.8.425_i86linux64\n\n-in CURRENT_ALIGNMENT_FASTA -out TEMP_OUT_FILE The alignment program (MUSCLE) is run with parameter -in -out\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will reload the output file from alignment program TEMP_OUT_FILE MAFFT example Comment /usr/local/bin/mafft\n\n--localpair --reorder --maxiterate 1000 --out TEMP_OUT_FILE CURRENT_ALIGNMENT_FASTA\n\nNOTE that MAFFT is not installed with AliView, and has to be installed separately\n\nIn this example the program (MAFFT) is run with parameter --localpair --reorder --maxiterate 1000 --out\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will automatic reload the output file from alignment program TEMP_OUT_FILE Align ADD command examples MUSCLE command (default) Comment /home/the-user/.AliView/binaries/muscle3.8.425_i86linux64\n\n-profile -in1 CURRENT_ALIGNMENT_FASTA -in2 SECOND_SEQUENCES -out TEMP_OUT_FILE The alignment program (MUSCLE) is run with parameter -profile -in1 -in2 -out\n\nThis is the MUSCLE way of adding sequences to an existing alignment.\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text SECOND_SEQUENCES with a temporary file in which AliView saves the new sequences.\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will reload the output file from alignment program TEMP_OUT_FILE MAFFT example Comment /usr/local/bin/mafft\n\n--add SECOND_SEQUENCES --out TEMP_OUT_FILE CURRENT_ALIGNMENT_FASTA\n\nNOTE that MAFFT is not installed with AliView, and has to be installed separately\n\nIn this example the program (MAFFT) is run with parameter --add --out\n\nAliView will replace the text SECOND_SEQUENCES with a temporary file in which AliView saves the new sequences.\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will automatic reload the output file from alignment program TEMP_OUT_FILE\n\nWINDOWS\n\nAlign ALL command examples MUSCLE command (default) Comment C:\\Users\\anders\\.AliView\\binaries\\muscle3.8.425_win32.exe\n\n-in CURRENT_ALIGNMENT -out TEMP_OUT_FILE The alignment program (MUSCLE) is run with parameter -in -out\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will reload the output file from alignment program TEMP_OUT_FILE MAFFT example Comment cmd.exe\n\n/C \"C:\\Program Files\\mafft-win\\mafft.bat\" --localpair --reorder --maxiterate 1000 --out TEMP_OUT_FILE CURRENT_ALIGNMENT NOTE that MAFFT is not installed with AliView, and has to be installed separately\n\nIn this example the program (MAFFT) is run with parameter --localpair --reorder --maxiterate 1000 --out\n\nNOTE2 The program mafft.bat is actually called by program cmd.exe with parameter /C\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will automatic reload the output file from alignment program TEMP_OUT_FILE Align ADD command examples MUSCLE command (default) Comment C:\\Users\\anders\\.AliView\\binaries\\muscle3.8.425_win32.exe\n\n-profile -in1 CURRENT_ALIGNMENT_FASTA -in2 SECOND_SEQUENCES -out TEMP_OUT_FILE The alignment program (MUSCLE) is run with parameter -profile -in1 -in2 -out\n\nThis is the MUSCLE way of adding sequences to an existing alignment.\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text SECOND_SEQUENCES with a temporary file in which AliView saves the new sequences.\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will reload the output file from alignment program TEMP_OUT_FILE MAFFT example Comment cmd.exe\n\n/C \"C:\\Program Files\\mafft-win\\mafft.bat\" --add SECOND_SEQUENCES --out TEMP_OUT_FILE CURRENT_ALIGNMENT_FASTA NOTE that MAFFT is not installed with AliView, and has to be installed separately\n\nNOTE2 The program mafft.bat is actually called by program cmd.exe with parameter /C\n\nIn this example the program (MAFFT) is run with parameter --add --out\n\nAliView will replace the text SECOND_SEQUENCES with a temporary file in which AliView saves the new sequences.\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will automatic reload the output file from alignment program TEMP_OUT_FILE\n\nLINUX\n\nAlign ALL command examples MUSCLE command (default) Comment /home/the-user/.AliView/binaries/muscle3.8.425_i86linux64\n\n-in CURRENT_ALIGNMENT_FASTA -out TEMP_OUT_FILE The alignment program (MUSCLE) is run with parameter -in -out\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will reload the output file from alignment program TEMP_OUT_FILE MAFFT example Comment /usr/local/bin/mafft\n\n--localpair --reorder --maxiterate 1000 --out TEMP_OUT_FILE CURRENT_ALIGNMENT_FASTA\n\nNOTE that MAFFT is not installed with AliView, and has to be installed separately\n\nIn this example the program (MAFFT) is run with parameter --localpair --reorder --maxiterate 1000 --out\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will automatic reload the output file from alignment program TEMP_OUT_FILE Align ADD command examples MUSCLE command (default) Comment /home/the-user/.AliView/binaries/muscle3.8.425_i86linux64\n\n-profile -in1 CURRENT_ALIGNMENT_FASTA -in2 SECOND_SEQUENCES -out TEMP_OUT_FILE The alignment program (MUSCLE) is run with parameter -profile -in1 -in2 -out\n\nThis is the MUSCLE way of adding sequences to an existing alignment.\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text SECOND_SEQUENCES with a temporary file in which AliView saves the new sequences.\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will reload the output file from alignment program TEMP_OUT_FILE MAFFT example Comment /usr/local/bin/mafft\n\n--add SECOND_SEQUENCES --out TEMP_OUT_FILE CURRENT_ALIGNMENT_FASTA\n\nNOTE that MAFFT is not installed with AliView, and has to be installed separately\n\nIn this example the program (MAFFT) is run with parameter --add --out\n\nAliView will replace the text SECOND_SEQUENCES with a temporary file in which AliView saves the new sequences.\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nWhen the alignment program is done - AliView will automatic reload the output file from alignment program TEMP_OUT_FILE\n\nExternal commands - Send the alignment to other programs\n\nYou can send the active alignment from AliView as a command parameter to other programs and create a simple pipeline of commands executed from a Menu-button in AliView.\n\nEach line is executed as a separate command waiting for the previous to have finished. An an example of this would be a simple combination of commands that take the current alignment and run it in FastTree to create a Maximum Likelihood Tree and finally open the resulting tree in FigTree.\n\nSpecial Parameters:\n\nCURRENT_ALIGNMENT_FASTA = The current alignment as a fasta file\n\nCURRENT_ALIGNMENT_PHYLIP = The current alignment as a phylip file\n\nTEMP_OUT_FILE = An empty temporary file created by AliView in the temp-directory of the computer\n\nALIVIEW_OPEN file-name = Open a new window with file name as parameter\n\nSome examples of external commands with comments:\n\nNOTE: It is essential that file names that contains spaces or unorthodox characters are specified within quotation marks \"\n\nMAC OS X Command Comment /usr/local/bin/FastTree -nt -gtr -out TEMP_OUT_FILE CURRENT_ALIGNMENT_FASTA\n\nopen -a \"FigTree v1.4.0.app\" TEMP_OUT_FILE NOTE that FigTree application name is surrounded with quotation marks since the name contains a space.\n\nNOTE that FigTree application is started with MacOS X command open -a\n\nThe program FastTree is run with parameters -nt -gtr -out [tree-file-out] [input_alignment]\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nWhen FastTree.exe is finished creating the tree, it will have saved the result into the file TEMP_OUT_FILE\n\nFigTree v1.4.0 is run when FastTree is finished and as parameter to the program is the tree in the file TEMP_OUT_FILE\n\nWINDOWS Command Comment \"C:\\Program Files\\FastTree\\FastTree.exe\" -nt -gtr -out TEMP_OUT_FILE CURRENT_ALIGNMENT_FASTA\n\n\"C:\\Program Files\\FigTree\\FigTree v1.4.0.exe\" TEMP_OUT_FILE NOTE that FastTree.exe and FigTree.exe application names are surrounded with quotation marks \" since the file path and name contains a space.\n\nThe program FastTree.exe is run with parameters -nt -gtr -out [tree-file-out] [input_alignment]\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nWhen FastTree.exe is finished creating the tree, it will have saved the result into the file TEMP_OUT_FILE\n\nFigTree v1.4.0.exe is run when FastTree.exe is finished and as parameter to the program is the tree in the file TEMP_OUT_FILE\n\nLINUX Command Comment /usr/bin/FastTree -nt -gtr -out TEMP_OUT_FILE CURRENT_ALIGNMENT_FASTA\n\n\"/path/with a space/FigTree\" TEMP_OUT_FILE NOTE that the file name should be enclosed in quotation marks if there is space in the path.\n\nThe program FastTree is run with parameters -nt -gtr -out [tree-file-out] [input_alignment]\n\nAliView will replace the text TEMP_OUT_FILE with a temporary file name created in the temp-directory on the computer\n\nAliView will replace the text CURRENT_ALIGNMENT_FASTA with a temporary file in which AliView saves the current alignment\n\nWhen FastTree.exe is finished creating the tree, it will have saved the result into the file TEMP_OUT_FILE\n\nFigTree v1.4.0 is run when FastTree is finished and as parameter to the program is the tree in the file TEMP_OUT_FILE\n\nDrag and Drop\n\nIf you drop a file in the program window it will open a new window with the alignment\n\nNote: If you drop a sequence while pressing the \"Shift\"-button - the sequences in the file will be added to the currently loaded alignment.\n\nJava 8 JRE Install (Linux)\n\nThis is tested on Ubuntu/Debian/OpenSuse (RedHat - just download and install rpm-package)\n\n(These installation instructions are compiled and simplified fom this excellent tutorial):\n\nhttp://install-things.com/2014/03/24/how-to-install-oracle-java-8-on-ubuntu-12-04-linux/\n\n1. Download jre tar.gz-version:\n\nhttp://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html\n\n2. Unpack\n\nsudo tar zxvf jre-8*.tar.gz\n\n3. Move whole unpacked dir:\n\nsudo mv jre1.8.* /usr/lib/jvm/\n\n4. Tell your system where new java is located:\n\nsudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jre1.8.*/bin/java 1\n\n5. Tell your system to use new version:\n\nsudo update-alternatives --set java /usr/lib/jvm/jre1.8.*/bin/java\n\nJava 9 JRE Install (Linux)\n\nThis is tested on Ubuntu/Debian/OpenSuse (RedHat - just download and install rpm-package)\n\n# 1. Download jre tar.gz-version:\n\nhttp://www.oracle.com/technetwork/java/javase/downloads/jre9-downloads-3848532.html\n\n# 2. Unpack\n\nsudo tar zxvf jre-9.*.tar.gz\n\n# 3. Make sure jvm-dir exists:\n\nsudo mkdir -p /usr/lib/jvm/\n\n# 4. Move whole unpacked dir:\n\nsudo mv jre-9.* /usr/lib/jvm/\n\n# 5. Tell your system where new java is located:\n\nsudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jre-9.*/bin/java 1"
    }
}