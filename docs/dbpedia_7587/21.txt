chapter

What do types mean?: from intrinsic to extrinsic semantics

Pages 309 - 327

Published: Publication History

Abstract

A definition of a typed language is said to be "intrinsic" if it assigns meanings to typings rather than arbitrary phrases, so that ill-typed phrases are meaningless. In contrast, a definition is said to be "extrinsic" if all phrases have meanings that are independent of their typings, while typings represent properties of these meanings.For a simply typed lambda calculus, extended with integers, recursion, and conditional expressions, we give an intrinsic denotational semantics and a denotational semantics of the underlying untyped language. We then establish a logical relations theorem between these two semantics, and show that the logical relations can be "bracketed" by retractions between the domains of the two semantics. From these results, we derive an extrinsic semantics that uses partial equivalence relations.

References

[1]

{1} John C. Reynolds. Theories of Programming Languages. Cambridge University Press, Cambridge, England, 1998.

[2]

{2} Daniel Leivant. Typing and computational properties of lambda expressions. Theoretical Computer Science, 44(1):51-68, 1986.

[3]

{3} Gordon D. Plotkin. Lambda-definability and logical relations. Memorandum SAIRM-4, University of Edinburgh, Edinburgh, Scotland, October 1973.

[4]

{4} Dana S. Scott. Data types as lattices. SIAM Journal on Computing, 5(3):522-587, September 1976.

[5]

{5} David M. R. Park. The Y-combinator in Scott's lambda-calculus models. Symposium on Theory of Programming, University of Warwick, unpublished; cited in {6}, 1970.

[6]

{6} Christopher P. Wadsworth. The relation between computational and denotational properties for Scott's D∞-models of the lambda-calculus. SIAM Journal on Computing, 5(3):488-521, September 1976.

[7]

{7} David B. MacQueen and Ravi Sethi. A semantic model of types for applicative languages. In Conference Record of the 1982 ACM Symposium on LISP and Functional Programming, pages 243-252, New York, 1982. ACM.

[8]

{8} David B. MacQueen, Gordon D. Plotkin, and Ravi Sethi. An ideal model for recursive polymorphic types. Information and Control, 71(1-2):95-130, October-November 1986.

[9]

{9} Dana S. Scott. Lambda calculus: Some models, some philosophy. In Jon Barwise, H. Jerome Keisler, and Kenneth Kunen, editors, The Kleene Symposium, volume 101 of Studies in Logic and the Foundations of Mathematics, pages 223-265, Amsterdam, 1980. North-Holland.

[10]

{10} Andrej Bauer, Lars Birkedal, and Dana S. Scott. Equilogical spaces. To appear in Theoretical Computer Science, 2002.

[11]

{11} Anne Sjerp Troelstra, editor. Metamathematical Investigation of Intuitionistic Arithmetic and Analysis, volume 344 of Lecture Notes in Mathematics. Springer-Verlag, Berlin, 1973.

[12]

{12} Anne Sjerp Troelstra. Realizability. In Samuel R. Buss, editor, Handbook of Proof Theory, volume 137 of Studies in Logic and the Foundations of Mathematics, pages 407-473. Elsevier, Amsterdam, 1998.

[13]

{13} Georg Kreisel. Interpretation of analysis by means of constructive functionals of finite types. In Arend Heyting, editor, Constructivity in Mathematics, pages 101-128. North-Holland, Amsterdam, 1959.

[14]

{14} S. C. Kleene. Countable functionals. In Arend Heyting, editor, Constructivity in Mathematics, pages 81-100. North-Holland, Amsterdam, 1959.

[15]

{15} Roberto M. Amadio and Pierre-Louis Curien. Domains and Lambda-Calculi, volume 46 of Cambridge Tracts in Theoretical Computer Science. Cambridge University Press, Cambridge, England, 1998.

[16]

{16} John C. Reynolds. The meaning of types -- from intrinsic to extrinsic semantics. Research Series RS-00-32, BRICS, DAIMI, Department of Computer Science, University of Aarhus, December 2000.

[17]

{17} John C. Reynolds. An intrinsic semantics of intersection types (abstract of invited lecture). In Proceedings of the Workshop on Intersection Types and Related Systems, 2000. The slides for this lecture are available at ftp://ftp.cs.cmu.edu/user/jcr/intertype.ps.gz.

Cited By

View all

Fridlender DGadea APagano MRodríguez LBiorthogonality for a Lazy languageProceedings of the 29th Symposium on the Implementation and Application of Functional Programming Languages10.1145/3205368.3205374(1-9)

Castagna GNguyen KXu ZIm HLenglet SPadovani LPolymorphic functions with set-theoretic typesACM SIGPLAN Notices10.1145/2578855.253584049:1(5-17)

Castagna GNguyen KXu ZIm HLenglet SPadovani LJagannathan SSewell PPolymorphic functions with set-theoretic typesProceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages10.1145/2535838.2535840(5-17)

Show More Cited By

Index Terms

What do types mean?: from intrinsic to extrinsic semantics

Software and its engineering

Software notations and tools

Formal language definitions

Semantics

Theory of computation

Logic

Semantics and reasoning

Program constructs

Type structures

Program reasoning

Program semantics

Recommendations

Propositions as [Types]

Image factorizations in regular categories are stable under pullbacks, so they model a natural modal operator in dependent type theory. This unary type constructor [A] has turned up previously in a syntactic form as a way of erasing computational ...

Judgmental subtyping systems with intersection types and modal types

We study how to extend modal type systems based on intuitionistic modal logic S4 or S5 with a subtyping system based on intersection types. In the presence of four type constructors $${\!}\!\rightarrow \!{\!},\,{\!}\wedge {\!},\,\square {}$$ , , , and $$\Diamond {}$$ , the traditional approach using a binary subtyping relation does ...

Type checking and inference for polymorphic and existential types

CATS '09: Proceedings of the Fifteenth Australasian Symposium on Computing: The Australasian Theory - Volume 94

This paper proves undecidability of type checking and type inference problems in some variants of typed lambda calculi with polymorphic and existential types. First, type inference in the domain-free polymorphic lambda calculus is proved to be ...

Information & Contributors

Information

Published In

419 pages

ISBN:0387953493

Editors:

Annabelle McIver

Department of Computing, Macquarie University, Sydney, 2109 Australia

,

Carroll Morgan

Department of Computer Science and Engineering, The University of New South Wales, Sydney, 2052 Australia

Publisher

Springer-Verlag

Berlin, Heidelberg

Publication History

Published: 01 January 2003

Qualifiers

Chapter

Contributors

Other Metrics

Bibliometrics & Citations

Bibliometrics

Article Metrics

5

Total Citations

View Citations

0

Total Downloads

Downloads (Last 12 months)0

Downloads (Last 6 weeks)0

Other Metrics

Citations

Cited By

View all

Fridlender DGadea APagano MRodríguez LBiorthogonality for a Lazy languageProceedings of the 29th Symposium on the Implementation and Application of Functional Programming Languages10.1145/3205368.3205374(1-9)

Castagna GNguyen KXu ZIm HLenglet SPadovani LPolymorphic functions with set-theoretic typesACM SIGPLAN Notices10.1145/2578855.253584049:1(5-17)

Castagna GNguyen KXu ZIm HLenglet SPadovani LJagannathan SSewell PPolymorphic functions with set-theoretic typesProceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages10.1145/2535838.2535840(5-17)

Berger UHou TTyped vs. Untyped RealizabilityElectronic Notes in Theoretical Computer Science (ENTCS)10.1016/j.entcs.2012.08.005286(57-71)

Schwinghammer JA typed semantics of higher-order store and subtypingProceedings of the 9th Italian conference on Theoretical Computer Science10.1007/11560586_31(390-405)

View Options

View options

Get Access

Login options

Check if you have access through your login credentials or your institution to get full access on this article.

Sign in

Full Access

Media

Figures

Other

Tables

Share

Share

Share this Publication link

Copied!

Copying failed.

Share on social media

Affiliations

John C. Reynolds

Computer Science Department, School of Computer Science, Carnegie Mellon University, Pittsburgh, Pennsylvania

Request permissions Authors Info & Affiliations