{
    "id": "dbpedia_122_3",
    "rank": 93,
    "data": {
        "url": "https://devopscube.com/slimtoolkit-to-shrink-docker-images/",
        "read_more_link": "",
        "language": "en",
        "title": "How to Use SlimToolkit to Shrink Docker Images (Step-by-Step Guide)",
        "top_image": "https://devopscube.com/wp-content/uploads/2024/04/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-CKA-course.png",
        "meta_img": "https://devopscube.com/wp-content/uploads/2024/04/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-CKA-course.png",
        "images": [
            "https://devopscube.com/wp-content/uploads/2022/05/dcube-logo-ops.png",
            "https://devopscube.com/wp-content/uploads/2022/05/dcube-logo-ops.png",
            "https://devopscube.com/wp-content/uploads/2022/05/dcube-logo-ops.png",
            "https://devopscube.com/wp-content/uploads/2022/05/dcube-logo-ops.png",
            "https://devopscube.com/wp-content/uploads/2024/04/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-CKA-course-1160x628.png",
            "https://devopscube.com/wp-content/uploads/2024/04/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-CKA-course-1160x628.png",
            "https://devopscube.com/wp-content/uploads/2024/04/slimtoolkit-1.gif",
            "https://devopscube.com/wp-content/uploads/2024/04/slimtoolkit-1.gif",
            "https://devopscube.com/wp-content/uploads/2024/04/image-108.png",
            "https://devopscube.com/wp-content/uploads/2024/04/image-110.png",
            "https://devopscube.com/wp-content/uploads/2024/04/image-163.png 622w, https://devopscube.com/wp-content/uploads/2024/04/image-163-300x106.png 300w, https://devopscube.com/wp-content/uploads/2024/04/image-163-380x134.png 380w, https://devopscube.com/wp-content/uploads/2024/04/image-163-600x211.png 600w",
            "https://devopscube.com/wp-content/uploads/2024/04/image-163.png",
            "https://devopscube.com/wp-content/uploads/2024/04/image-165.png 650w, https://devopscube.com/wp-content/uploads/2024/04/image-165-300x116.png 300w, https://devopscube.com/wp-content/uploads/2024/04/image-165-380x147.png 380w, https://devopscube.com/wp-content/uploads/2024/04/image-165-600x232.png 600w",
            "https://devopscube.com/wp-content/uploads/2024/04/image-165.png",
            "https://devopscube.com/wp-content/uploads/2024/04/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-CKA-course.png",
            "https://devopscube.com/wp-content/uploads/2024/04/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-CKA-course.png",
            "https://devopscube.com/wp-content/uploads/2023/02/download-1-150x150.jpeg",
            "https://devopscube.com/wp-content/uploads/2023/02/download-1-150x150.jpeg",
            "https://devopscube.com/wp-content/uploads/2016/02/file-sharing-560x336.jpg 560w, https://devopscube.com/wp-content/uploads/2016/02/file-sharing-300x180.jpg 300w, https://devopscube.com/wp-content/uploads/2016/02/file-sharing-290x175.jpg 290w",
            "https://devopscube.com/wp-content/uploads/2016/02/file-sharing-560x336.jpg",
            "https://devopscube.com/wp-content/uploads/2017/07/graph-line-trend-analytics-magnifying-glass-ss-1920-560x336.jpg 560w, https://devopscube.com/wp-content/uploads/2017/07/graph-line-trend-analytics-magnifying-glass-ss-1920-300x180.jpg 300w",
            "https://devopscube.com/wp-content/uploads/2017/07/graph-line-trend-analytics-magnifying-glass-ss-1920-560x336.jpg",
            "https://devopscube.com/wp-content/uploads/2024/02/Copy-of-Copy-of-Copy-of-Copy-of-eks-secondary-network-560x336.png 560w, https://devopscube.com/wp-content/uploads/2024/02/Copy-of-Copy-of-Copy-of-Copy-of-eks-secondary-network-300x180.png 300w, https://devopscube.com/wp-content/uploads/2024/02/Copy-of-Copy-of-Copy-of-Copy-of-eks-secondary-network-600x360.png 600w, https://devopscube.com/wp-content/uploads/2024/02/Copy-of-Copy-of-Copy-of-Copy-of-eks-secondary-network-1120x672.png 1120w",
            "https://devopscube.com/wp-content/uploads/2024/02/Copy-of-Copy-of-Copy-of-Copy-of-eks-secondary-network-560x336.png",
            "https://devopscube.com/wp-content/uploads/2023/10/aws-client-VPN-setup-560x336.png 560w, https://devopscube.com/wp-content/uploads/2023/10/aws-client-VPN-setup-300x180.png 300w, https://devopscube.com/wp-content/uploads/2023/10/aws-client-VPN-setup-600x360.png 600w, https://devopscube.com/wp-content/uploads/2023/10/aws-client-VPN-setup-1120x672.png 1120w",
            "https://devopscube.com/wp-content/uploads/2023/10/aws-client-VPN-setup-560x336.png",
            "https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-o-560x336.png 560w, https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-o-300x180.png 300w, https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-o-600x360.png 600w, https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-o-1120x672.png 1120w",
            "https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-of-Copy-o-560x336.png",
            "https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-eks-seconda-560x336.png 560w, https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-eks-seconda-300x180.png 300w, https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-eks-seconda-600x360.png 600w, https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-eks-seconda-1120x672.png 1120w",
            "https://devopscube.com/wp-content/uploads/2024/03/Copy-of-Copy-of-Copy-of-eks-seconda-560x336.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Aswin Vijayan",
            "James Warner",
            "Arun Lal",
            "Bibin Wilson"
        ],
        "publish_date": "2024-04-26T11:59:45+00:00",
        "summary": "",
        "meta_description": "In this blog, we are going to learn about a tool called Slimtoolkit and how to to use it effectively to shrink Docker image size.",
        "meta_lang": "en",
        "meta_favicon": "https://devopscube.com/wp-content/uploads/2016/07/cropped-devopscube-twitter-dp-32x32.png",
        "meta_site_name": "DevopsCube",
        "canonical_link": "https://devopscube.com/slimtoolkit-to-shrink-docker-images/",
        "text": "In this blog, we are going to learn about a tool called Slimtoolkit and how to use it effectively to shrink Docker image size.\n\nDo you have Docker images that are large in size, which take up a lot of storage space and time to upload or download?\n\nWe can put an end to large images by reducing their size using the slim tool, but you may ask: won’t the slimming process cause any problems for the application or related files inside the image?\n\nThe answer is no. Mostly, the slim process reduces the image size without affecting any important files. We can also specify the directories or files that need to be excluded during the slim process as a precaution.\n\nWhat is SlimToolkit?\n\nSlimToolkit is a tool that helps to optimize Docker images by removing unnecessary layers and files.\n\nSlimToolkit does this by analyzing the Docker image and identifying the unwanted layers and files that will not affect the image’s ability to run properly even if they are not included in the image.\n\nThe SlimToolkit can reduce the image size by up to 30%, and the image size may be reduced even more for applications run on compiled languages such as C, C++, Java, etc.\n\nSlimToolkit can be used on Docker images for different use cases such as:\n\nReduces the size of Docker images to improve deployment time and transfer speeds of images.\n\nMakes Docker images more secure by removing unwanted files and dependencies.\n\nImproves the performance of Docker images by removing unused binaries and libraries.\n\nHow Does the SlimToolkit Work?\n\nThe below diagram gives you an overview of how the SlimToolkit works.\n\nLet me explain how the SlimToolkit works.\n\nYou can see in the above image the size of the image is 500MB before the slim process, then the slim process starts with the slim build command.\n\nFirst, the tool analyses the Docker image to find the unnecessary layers and files in the image.\n\nIt ignores the files and directories specified in the ignore.txt file.\n\nOnce it finds the unnecessary files and layers it removes them and creates a new optimized image.\n\nAlong with the new image, it also reports the slim process in a JSON file named slim.report.json\n\nNote: The SlimToolkit does not modify the Docker image, instead it creates a new optimized Docker image.\n\nSlim Installation\n\nTo install Slim on Linux and Mac, follow the below steps.\n\nFirst, download the zip package based on the platform you need to install Slim.\n\nOnce you have downloaded the packages, run the below commands based on your platform\n\nFor Mac\n\nunzip ds.zip mv dist_mac/slim /usr/local/bin/ mv dist_mac/slim-sensor /usr/local/bin\n\nFor Linux\n\ntar -xvf ds.tar.gz mv dist_linux/slim /usr/local/bin/ mv dist_linux/slim-sensor /usr/local/bin/\n\nUsing Slim To Reduce Image Size\n\nLet’s look at slim commands and how to use them to reduce Docker image size using a practical example.\n\nThe Slim command syntax is given below\n\nslim [command] [flags] [image-name:tag]\n\nAn example of how the Slim command can be used is given below. The below command is to optimize the Docker image and reduce the image size.\n\nslim build <image-name:tag>\n\nYou can use the flag --http-probe=false to disable sending API calls to the exposed port, by default the http-probe is enabled.\n\nFor example, if your application port is port 80 it sends API calls to port 80 to check if it can be accessed.\n\nIn most cases during the slim process, it is not possible to send API calls to check if the port is accessible and it causes the slim process to take more time or cause errors.\n\nIf you want to slim the Docker image to a specific name run the below command\n\nslim build --target <image-name:tag> --tag <new-image-name:tag>\n\nYou can also specify the files and directories you want to exclude during the slim process.\n\nPractical Example 1: Slimming Python Flask Application.\n\nAs a first example, I am going to slim a Docker image with a Python Flask Application.\n\nYou can use the below Flask Application Docker image for testing\n\ndocker pull techiescamp/flask-application:1.0.0\n\nFirst, create a ignore.txt file with the file name or directory path that should not be removed during the slim process.\n\n/app /usr/local/bin/flask\n\nIn my text file, I have specified the path where I have the application code and files needed to run the Flask application . Now, run the below command to slim the Docker image with the text file.\n\nslim build --preserve-path-file ignore.txt --target <image-name:tag> --tag <new-image-name:tag>\n\nThis command will slim the Docker images without affecting the file or file path mentioned in the text file.\n\nThe size comparison of before and after using the Slim command is given below.\n\nThe below image shows the actual size of the Python Flask Application Docker image.\n\nThe size of the Python Flask Application Docker image after using the Slim command is given below.\n\nYou can see the size difference between the two Docker images before and after using the Slim command.\n\nAlso, you can see, that the slim process doesn’t modify the Docker image instead it creates a new optimized image.\n\nPractical Example 2: Slimming Java Application\n\nIn this example, I am going to slim a Java based Docker image\n\nYou can use the below Java Application Docker image for testing\n\ndocker pull techiescamp/pet-clinic-app:1.0.0\n\nLike the first example, create an ignore.txt file with the file name or directory path that shouldn’t be removed during slim process\n\n/app /usr/bin/java\n\nNow, run the below command to slim the Docker image with the text file.\n\nslim build --preserve-path-file ignore.txt --target <image-name:tag> --tag <new-image-name:tag>\n\nThe below image shows the actual size of the pet-clinic Java Application Docker image.\n\nThe size of the Pet-clinic Java Application Docker image after using the Slim command is given below.\n\nYou can see the size difference between the two Docker images before and after using the Slim command.\n\nOther Useful Slim Commands\n\nThe SlimToolkit provides a number of commands that help you to optimize your Docker images. Some of the commands are listed below:\n\nxray: With the help of this command you can analyze the Docker image and see what’s inside your Docker image.\n\nlint: This command helps you to check for any errors in Dockerfiles, so you can avoid the errors that occur during the image build process because of errors in Dockerfile.\n\nbuild: This is the most important command that optimizes the Docker image with only the required dependencies and files for the applications and thus reduces the image size.\n\ndebug: This command helps you debug a running container that was created from a slimmed Docker image.\n\nprofile: This command collects information about the Docker image and gives a report in JSON format, that you can use to analyze its size and performance.\n\nmerge: If you want to merge two images into a single image, use the merge command.\n\nDisadvantage of Using SlimToolkit\n\nBelow are some disadvantages you should keep in mind while using SlimToolkit.\n\nThe time taken for the slim process is based on the image size. The larger the image size the more time it takes to slim the image.\n\nIt may remove necessary files for an application, which makes the application not runnable. You need to carefully add the ignore list to avoid necessary files being removed.\n\nIt may also remove necessary utilities, binaries, and files along with unnecessary files to reduce the size of the image. For example,\n\nIt removes bash utility. So after the slim process you can not run commands inside the optimized image.\n\nAlso, utilities like Terraform and Ansible will be removed from the image if it’s installed in the image and not added to the ignore list.\n\nConclusion\n\nIn the guide, you have learned about Docker image SlimToolkit, how it works, how to install it, and how to use the Slim commands.\n\nI believe this guide gives you good information about SlimToolkit.\n\nYou can refer to this Slim GitHub repo for further information about SlimToolkit.\n\nNow I would like to hear from you.\n\nHow do you optimize Docker image sizes in your projects? Do you use any utilities in your CI pipeline to ensure no bloated images goes to production?\n\nDrop a comment with the strategies you use for docker image optmizations."
    }
}