{
    "id": "dbpedia_122_2",
    "rank": 38,
    "data": {
        "url": "https://docs.libretro.com/guides/roms-playlists-thumbnails/",
        "read_more_link": "",
        "language": "en",
        "title": "Playlists and Thumbnails",
        "top_image": "https://docs.libretro.com/image/branding/invader.png",
        "meta_img": "https://docs.libretro.com/image/branding/invader.png",
        "images": [
            "https://docs.libretro.com/image/branding/invader.png",
            "https://docs.libretro.com/image/branding/invader.png",
            "http://www.lakka.tv/doc/images/thumbnails.png",
            "https://docs.libretro.com/image/retroarch/playlists/playlist-folder-with-lpl-files-and-relevant-settings.png",
            "https://docs.libretro.com/image/retroarch/playlists/playlists-in-ui-1a-in-custom-playlist.png",
            "https://docs.libretro.com/image/retroarch/playlists/playlists-in-ui-1a2-in-custom-playlist-entry-with-thumbnail.png",
            "https://docs.libretro.com/image/retroarch/playlists/playlists-in-ui-1a3-in-custom-playlist-entry-with-thumbnail.png",
            "https://docs.libretro.com/image/retroarch/playlists/playlists-in-ui-2-in-other-custom-playlist.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "This is RetroArch's document page, modification or development information outside of this repo may be incorrect.",
        "meta_lang": "en",
        "meta_favicon": "../../image/branding/invader.png",
        "meta_site_name": "",
        "canonical_link": "https://docs.libretro.com/guides/roms-playlists-thumbnails/",
        "text": "ROMs, Playlists, and Thumbnails¶\n\nStoring games and other content¶\n\nGame ROMs are the source media of the games that can be played using RetroArch cores, they can be actual dumps of read-only memory, but also tape/floppy/compact disc images or some other format. The ROM files may be placed anywhere in the file system where RetroArch has access - note that some platforms (notably Android) are not able to browse the full storage. It is practical if the file browser start directory is configured to the directory where ROMs are stored.\n\nMany users sort their ROMs into subfolders named after the system which the ROMs belong to, which results in a folder arrangement such as:\n\nThis arrangement is not required and you are free to organize your ROMs as you prefer.\n\nAlso, as a general guideline, content from disc-based systems (Compact Disc images, etc.) should not be zipped for RetroArch use.\n\nWorking with Playlists¶\n\nPlaylists are the lists of games and other content that can be generated automatically by the RetroArch playlist scanner, generated by a third-party playlist utility or script, or edited by hand in a text editor.\n\nRetroArch Playlist Scanner¶\n\nRetroArch incorporates a ROM scanning system to automatically produce playlists. Each ROM that is scanned by the playlist generator is checked against a database of ROMs that are known to be good copies.\n\nIn order for content to be correctly scanned, you must:\n\nHave a compatible core already downloaded and installed (note: Scan Without Core Match setting removes this requirement)\n\nUpdate Core Info Files via Online Updater\n\nUpdate Databases via Online Updater\n\nRestart RetroArch if any of the above was just done\n\nFor a normal scan, the content must match existing databases from the libretro-database README. If those conditions are met but content is still not being added automatically to a playlist, consider submitting an issue report on github.\n\nThere is an option to do manual scan, which does not require a database, and just needs the file names to match. Results from the manual scan will be playable (as long as the respective core supports them), but may lack thumbnails and do not appear in the Explore menu.\n\nDesignating which core to use¶\n\nRetroArch will attempt to detect and use the correct core for use with the ROMs that are used as part of a playlist. Under some circumstances, it may be useful to manually set a particular core for one of its playlists. This can be accomplished within the Playlists submenu in the RetroArch settings.\n\nThe Explore menu¶\n\nRetroArch provides an Explore menu which can be used for browsing all content that were added to playlists using any database attribute - release year, genre, etc.\n\nThumbnails¶\n\nRetroArch can display three types of thumbnails (small still pictures) for games in playlists:\n\nIn-game snapshots\n\nTitle screen snapshots\n\nBoxart\n\nMost menu drivers support displaying two pictures when browsing the playlist. Displayed thumbnail types can be configured system-wide and also per playlist.\n\nAll menu drivers can display fullscreen thumbnails when pressing Start, and Y button (left) can be used to cycle between available pictures.\n\nThumbnails can be retrieved multiple ways:\n\nPlaylist thumbnail downloader (recommended): under Online Updater menu, all available thumbnails can be downloaded for a playlist. RetroArch will connect to http://thumbnails.libretro.com.\n\nIndividual thumbnail downloader: there is a Download Thumbnails option for each entry in playlists. For RetroArch version 1.17.0 or later, you may hit download up to 3 times to try the flexible matches.\n\nOn-demand thumbnail downloader: if the respective option is enabled, RetroArch will try to download each thumbnail as the playlist is browsed. For RetroArch versions 1.17.0 or later, you may try flicking back and forth between entries up to 3 times to try the flexible matches. By default, on-demand thumbnail downloader does not try to fetch thumbnails based on ROM name, enable Settings / Playlist / Use filenames for thumbnail matching options for that.\n\nThumbnail packs are no longer available, use one of the above methods, or see Custom thumbnails section below.\n\nPlaylist File Format Details¶\n\nEach playlist is a plain text file with an extension of .lpl. RetroArch 1.7.5 and later uses a JSON playlist format, although the backwards compatibility remains for the deprecated \"6-Line\" playlist format.\n\nNote: The paths in playlist files need to use the correct 'slash' character for the user's platform. Linux, OS X, and Android systems including Lakka and LudOS require forward slashes /, while Windows and DOS systems require backslashes \\.\n\nJSON Playlist Format¶\n\nThe following example is a single-entry MAME 2003-Plus playlist for Alien Arena -- the silent version of this game is available through the RetroArch Content Downloader found in the Online Updater menu.\n\nThe romset with the label Alien Arena is located at path being C:\\retroarch\\downloads\\alienar.zip; note that the backslashes are doubled in JSON-formatted playlist entries so that the value of the path entry is C:\\\\retroarch\\\\downloads\\\\alienar.zip.\n\nThe ROM's corresponding db_name is MAME 2003-Plus.lpl which tells the menu driver which ROM database to use for looking up the game's metadata, thumbnails and game-system-specific icon-type. Menu drivers which implement playlist icons will use it to display it next to the ROM's name.\n\nMAME 2003-Plus.lpl¶\n\n6-Line Playlist Format (Deprecated)¶\n\nWarning\n\nThis playlist format is deprecated and may not always be supported by RetroArch in the future. New playlists should be created in the JSON format.\n\nEach entry in a playlist must be composed of 6 lines:\n\nMAME 2003-Plus.lpl¶\n\nThe path to the ROM. This can either be an 'absolute' path or a path relative to the current working directory.\n\nThe display name (you can use any name here)\n\nThe path to the core, this libretro core will be used to launch the ROM. You can use the word DETECT in place of the core path here. Once this is done you can set the core to be used for this playlist via the RetroArch GUI.\n\nThe displayname of the core, not really useful, we keep it there because the history list is also using this format\n\nCRC or Serial number for database and other matching purposes. You can omit the CRC or Serial for a manually created playlist entry by using the word DETECT here instead, although it may limit your ability to use Netplay for this playlist entry.\n\nThe name of the system playlist to which this ROM is associated for looking up database metadata and thumbnails.\n\nCreating custom playlists (cross-platform, cross-folders)¶\n\nThe standard playlists in RetroArch are usually platform-specific, i.e. Nintendo - Game Boy.lpl or Sony - PlayStation.lpl.\n\nMaybe you want to create custom playlists not limited within game-platforms or ROM-folders, e.g. \"Multiplayer Racing Games\" or \"Medieval Themed Games\".\n\ncontent_favorites.lpl and content_history.lpl are examples of default playlists which have this cross-platform behavior. So study them as an example first.\n\nTo create a custom playlist¶\n\nCopy/merge content from platform-playlists files into a fresh playlist file inside <RetroArchRoot>/playlists/ entitled My Sorting Prefix - My Playlist Name.lpl.\n\nBe sure that the ROM entries follow the syntax as described in section: JSON Playlist Format.\n\nThe db_name attribute entry must be the ROM's corresponding Exact Game Platform Playlists Name.lpl (e.g. Nintendo - Game Boy.lpl) in order to be associated with the correct metadata and thumbnails.\n\nCustomize how/where your playlists are shown¶\n\nName your playlist in the scheme My Sorting Prefix - My Playlist Name.lpl or just My Playlist Name.lpl.\n\nTo tweak how playlists are displayed (with or without prefix) and how they are sorted (by prefix or by main name):\n\nGo to: Settings > Playlists\n\nSet options Truncate Playlist Names and Sort Playlists After Name Truncation to your liking.\n\nHow to set up custom playlists (Screenshots)¶\n\nThird-Party Applications¶\n\nSince playlists are managed in text-only JSON format, there are a few third-party applications to help manage your playlists.\n\nRetroArch Playlist Editor (Source)\n\nRetroArch Playlist Buddy (Source)\n\nCustom thumbnails¶\n\nUsers who wish to use their own thumbnails can do so by naming PNG image files according to the RetroArch naming convention.\n\nThumbnail paths and filenames¶\n\nThumbnails should be stored in subfolders within the configured RetroArch thumbnails directory within a subfolder named exactly the same as the playlist, except without .lpl at the end. Example: If your playlist is named Atari - 2600.lpl, then your Atari 2600 root thumbnail folder should be called thumbnails/Atari - 2600/.\n\nWithin this root thumbnail folder called Atari - 2600, you should then create subfolders named Named_Boxarts, Named_Snaps, or Named_Titles for boxart/cover art, in-game snapshots, and title screens, respectively.\n\nThe thumbnail filename should exactly match the game's title as listed in the playlist with an important exception. The following characters in playlist titles must be replaced with _ in the corresponding thumbnail filename: &*/:`<>?\\|\n\nExample: If your content is named Q*bert's Qubes (USA) in the playlist, then its thumbnails should be named Q_bert's Qubes (USA).png and stored at these paths:\n\nFor RetroArch versions 1.17.0 or later, flexible naming is applied, up to 3 options are tried for each playlist entry, in the following order:\n\n- ROM file name with .png extension: Q-Bert's Qubes (1983)(Parker Bros)[b].png\n\n- Database entry / playlist label with .png extension, as explained above: Q_Bert's Qubes (USA).png\n\n- Short name: same as previous, but only up to first round bracket: Q_Bert's Qubes.png"
    }
}