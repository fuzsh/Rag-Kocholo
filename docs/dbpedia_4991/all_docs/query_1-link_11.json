{
    "id": "dbpedia_4991_1",
    "rank": 11,
    "data": {
        "url": "https://www.gsmarena.com/mobile_chipset_guide-review-1561p3.php",
        "read_more_link": "",
        "language": "en",
        "title": "Our mobile chipset guide: The 2017 edition",
        "top_image": "https://fdn.gsmarena.com/imgroot/reviews/17/chipset-guide/-728x314/gsmarena_002.jpg",
        "meta_img": "https://fdn.gsmarena.com/imgroot/reviews/17/chipset-guide/-728x314/gsmarena_002.jpg",
        "images": [
            "https://fdn.gsmarena.com/vv/assets12/i/logo-fallback.gif",
            "https://fdn.gsmarena.com/imgroot/reviews/17/chipset-guide/inline/-728/gsmarena_007.jpg",
            "https://fdn.gsmarena.com/imgroot/reviews/17/chipset-guide/inline/-728/gsmarena_008.jpg",
            "https://fdn.gsmarena.com/imgroot/reviews/17/chipset-guide/inline/-728/gsmarena_009.jpg",
            "https://fdn.gsmarena.com/imgroot/reviews/24/google-pixel-9-pro-xl/-347x151/gsmarena_001.jpg",
            "https://fdn.gsmarena.com/imgroot/reviews/24/oneplus-pad-2/-347x151/thumb.jpg",
            "https://fdn.gsmarena.com/imgroot/reviews/24/nothing-cmf-phone-1/-347x151/gsmarena_001.jpg",
            "https://st.arenaev.com/news/24/08/ariel-electric-featherweight-off-roader/-344x215/arenaev_001.jpg",
            "https://st.arenaev.com/i/logo/arenaevcolor-neg.svg",
            "https://fdn2.gsmarena.com/w/css/logo-gsmarena-com.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "As we already mentioned, ARM has been the dominant force in the mobile chipset realm for quite some time now. ARM's design is the basis of mostly all CPUs...",
        "meta_lang": "en",
        "meta_favicon": "https://fdn.gsmarena.com/imgroot/static/favicon.ico",
        "meta_site_name": "GSMArena.com",
        "canonical_link": "https://www.gsmarena.com/mobile_chipset_guide-review-1561p3.php",
        "text": "The cerebral cortex of a CPU\n\nAs we already mentioned, ARM has been the dominant force in the mobile chipset realm for quite some time now. ARM's design is the basis of mostly all CPUs used out there. Even custom solutions, like Apple's \"A\" lineup or Qualcomm's Kryo core, are typically based on ARM reference designs for what they call the 'Cortex' cores.\n\nAs you can imagine, Cortex reference designs don't just come about randomly, but rather to meet a very precise set of requirements in an often specific use case. ARM has developed many architectures, spanning all the way from ARMv1 to ARMv8-A and many different types of cores, based on each architecture. Some of them are qualified as microcontrollers, like the Cortex-M line or real-time processors - the Cortex-R. The ones we are interested in are only the application processors, designated by the Cortex-A moniker. They come in a 32-bit or 64-bit variants and either implement the ARMv7-A or the ARMv8-A architecture.\n\nARM currently has a convenient three-tier sorting system to try and keep things in order. Most cores are, indeed, designed from the get-go as optimized for power or efficiency. Of course, it is always a complex balance, and while some cores never really jump between AMRs defined levels, there are others that do. The point here being that no part of ARM's current organization is set in stone and some things tend to shift in time.\n\nFor instance, the Cortex-A7 was considered good enough to power a full CPU experience by itself in a quad-core configuration inside the Snapdragon 400. Later, it was bumped down to a supporting role, typically alongside the high-performance Cortex-A15 in models like the Exynos 5 Octa, or the Kirin 920.\n\nImage credit: arm.com\n\nThings get even \"fuzzier\" when you move up to what ARM has designated the \"High Efficiency\" middle tier. Just like the Cortex-A7, the Cortex-A9 was good enough on its own, like in the quad-core Kirin 910T, or even the dual-core Exynos 4210. Yet, it was never implemented in a supporting role, not even later on. Instead, it was quietly phased out in time, as it became obsolete on a design level.\n\nOne might imagine that this would be the typical course of events for most processors. However, the Cortex-A53 has managed to break the pattern persistently and has been in circulation for quite some time now, with no real signs of going away. It is one of the most widely used units out there, and it has proved both its versatility and scalability, playing many roles throughout its life cycle.\n\nYou can spot Cortex-A53 powering a quad-core setup by itself, like in the Snapdragon 410 or MT6732. It is also the building block of choice for many octa-core dual-cluster setups. Sometimes both clusters rely on it but at a different clock rate, like in the Kirin 650. It also fits in well as the low-end part of more recent setups and plays well with the likes of the Cortex-A57, Cortex-A72, and Cortex-A73. Its usefulness extends even further, as it is the unit of choice in true octa-core setups, like the MT6795 (Helio X10).\n\nAs a successor to the Cortex-A5 and Cortex-A7, the Cortex-A53 is also the latest generation of super power-efficient cores, and it’s the only 64-bit one among them, which aids in its overwhelming usage numbers.\n\nImage credit: arm.com\n\nIn contrast, the performance-oriented branch of the processor cores has seen much more volatile development. The Cortex-A9 enjoyed a long life but was then succeeded by the A15 and A17. All of these 32-bit models are now obsolete and have given way to the Cortex A57, A72 and, most recently, A73. When used in clusters, these cores are always paired with the Cortex-A53, which we mentioned above.\n\nLast, but not least, there are third-party core designers that simply license ARM's Cortex designs to base their custom creations on. There are a few noteworthy and popular examples of this on the mobile scene, and this approach has paid off consistently. Probably the best-known example is Apple's custom cores. Samsung also dipped its toe into the making custom chipsets with the Mongoose M1 cores inside the Exynos 8 Octa 8890. It proved to be a solid endeavor, based on the ARMv8-A instruction set and performing on par with the Cortex-A73, which as you already know, are ARM’s top cores at the moment.\n\nBut Qualcomm tends to stand out from the crowd with its custom core implementations. The Krait was probably the best example of this even if it’s already in the past. Based on the ARMv7-A, the design proved good enough to scale through four iterations. Most managed to outshine current competition by operating successfully at higher clock speeds. The Krait 450 still marks a record for highest clock speed ARM core in a mass-marketed handset, at a whopping 2.7 GHz.\n\nThe spiritual successor to Krait came in the shape of the custom Kryo cores, which were introduced with the Snapdragon 820. Following the controversial Snapdragon 810 chipset, which relied on Cortex-A57 cores for performance tasks, the Kryo cores were paramount in returning Qualcomm back on the map as the producer of the fastest performing mass-market chipset on the market. The ARMv8-A core is currently dominating the single-core performance scene by a hefty margin.\n\nThe design process for most new chipsets starts by determining their general purpose. Whether they will be optimized for higher performance, with less regard towards power efficiency. Or, made to run on as little juice as possible and then optimized from there. This is an important architectural distinction to make, since in many of the aforementioned multi-core chipsets, properly matching clusters of performance and efficiency cores is of the utmost importance. There are hardware compatibility concerns to take care of in this selection process as well since certain resources will be dynamically shared between cores during operation.\n\nImage credit: arm.com\n\nConcrete performance numbers on a per core basis might be out of the question, but there is still a very convenient segmentation to be observed. For instance, even though Cortex-A53 cores have come a long way and currently exist in implementations ranging from 1.2 GHz, all the way up to 2.1 GHz, they still get outperformed by Cortex-A57 units or A72 ones, which are simply designed to do so.\n\nTo illustrate our point, we have compiled the following chart to give you a rough performance level estimation per core. To ensure the best and most accurate average numbers per clock speed, we've only relied on our own database of benchmark scores when making this chart. This leaves us with a limited number of samples, but the pattern still shines through nicely and stays in line with ARM's current three-tier system."
    }
}