{
    "id": "dbpedia_4552_0",
    "rank": 48,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Rockbox",
        "read_more_link": "",
        "language": "en",
        "title": "Wikipedia",
        "top_image": "https://upload.wikimedia.org/wikipedia/commons/0/07/Rockbox_screen.png",
        "meta_img": "https://upload.wikimedia.org/wikipedia/commons/0/07/Rockbox_screen.png",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/Rockbox_Logo.svg/200px-Rockbox_Logo.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/0/07/Rockbox_screen.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/45/Wps-brushedmetalh300wps.png/200px-Wps-brushedmetalh300wps.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/IPod_Nano_1G_4GB_On_Rockbox_%26_iPod_Classic_4G_20GB_Do_Not_Disconnect.jpg/220px-IPod_Nano_1G_4GB_On_Rockbox_%26_iPod_Classic_4G_20GB_Do_Not_Disconnect.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Free_and_open-source_software_logo_%282009%29.svg/28px-Free_and_open-source_software_logo_%282009%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/30px-Commons-logo.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2005-01-25T01:21:48+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Rockbox",
        "text": "Firmware replacement for various devices\n\nFor the Runâ€“D.M.C. song, see Rock Box.\n\nOperating system\n\nRockboxDeveloperThe Rockbox ProjectWritten inC, assembly languageSource modelOpen sourceInitial releaseJune 2, 2002; 22 years ago ( )Latest release3.15 / November 15, 2019; 4 years ago ( )[1]Latest previewDailyRepositoryMarketing targetFirmware replacement for digital audio playersPlatformsDigital audio players, variousDefault\n\nuser interfaceGUILicenseGNU GPLv2 or laterOfficial websitewww .rockbox .org\n\nRockbox is a free and open-source software replacement for the OEM firmware in various forms of digital audio players (DAPs) with an original kernel.[2][3] It offers an alternative to the player's operating system, in many cases without removing the original firmware, which provides a plug-in architecture for adding various enhancements and functions. Enhancements include personal digital assistant (PDA) functions, applications, utilities, and games. Rockbox can also retrofit video playback functions on players first released in mid-2000. Rockbox includes a voice-driven user-interface suitable for operation by visually impaired users.[4][5]\n\nRockbox runs on a wide variety of devices with very different hardware abilities: from early Archos players with 1-bit character cell-based displays, to modern players with high resolution color displays, digital optical audio hardware and advanced recording abilities.\n\nHistory\n\n[edit]\n\nThe Rockbox project began in late 2001 and was first implemented on the early Archos series of hard-disk based MP3 players/recorders (including the flash-only model Ondio), because of owner frustration with severe limitations in the manufacturer-supplied user interface and device operations. These devices have relatively weak main central processing units (CPU), and instead offload music playback to dedicated hardware MP3 decoding chips (MAS).[6] Rockbox was unable to significantly alter playback abilities. Instead, it offered a greatly improved user interface and added plug-in functions absent in the factory firmware. Rockbox can be permanently flashed into flash memory on the Archos devices, making it a firmware replacement.\n\nVersions of Rockbox have since been produced for more sophisticated devices. These perform audio decoding in software,[7] allowing Rockbox to potentially support many more music formats than the original firmware, and adding the extensibility and increased functions already present in the Archos ports. Rockbox is run from the hard drive or flash memory after being started with a custom boot loader, so to upgrade Rockbox, users need only copy the files onto the player's drive and restart the device. Reflashing is only needed when changing the boot loader, and on some platforms is not needed at all.\n\nThe first of these ports, beginning in late 2004, was for the ColdFire-powered devices manufactured by iriver, focusing on the H1xx series of hard drive players (H110/H120/H140). About one year later, a port for the H3xx series became functional, offering similar functions.[6] In late 2005, work began on a port of Rockbox to Apple's iPod portable players based on CPUs from ARM Ltd. incorporated into systems on a chip sold by PortalPlayer. Throughout 2006, Rockbox ports were made available for a variety of iPod models. Beginning in 2007, ports became available for a large number of additional ARM based targets, including players from Sandisk, Toshiba, Olympus and Philips in addition to newer Apple and iRiver players based on a variety of ARM7, ARM9 and ARM11 series processors. During this time, extensive work was conducted optimizing open source audio decoders for each of the ARM series processors. In 2008, porting began to processors based on the MIPS architecture. In 2010, work began on supporting \"hosted\" architectures where Rockbox runs as an application inside of more complex operating system.\n\nAs of 2012 all Rockbox ports have been accomplished by reverse engineering with little or no manufacturer assistance. As free software, many Rockbox developers and supporters hope to eventually see official manufacturer support for new ports, or at least unofficial assistance in porting Rockbox to new devices. Only a few companies have expressed interest in Rockbox, and none have officially contributed code to the project or included it with their hardware. The Sansa e200v1 port is the first to be started at the request of the hardware manufacturer, who gave the Rockbox team samples of their devices.\n\nRockbox is continuously developed, with new Git builds being released after every source change, and stable releases every 4 months for targets deemed sufficiently mature.[8] Additionally builds are often available to developers of unsupported targets, which, while somewhat functional, are typically not ready for general users due to incomplete features or poor stability.[9]\n\nAs of 2021, there have been no new ports released.\n\nFuture\n\n[edit]\n\nRockbox is targeted primarily at digital audio players, rather than the much more powerful general-purpose devices (such as smartphones and tablet computers) that have been increasing in popularity since 2010. Some authorities expect the former class of devices to become obsolete in the next few years[when?].[10]\n\nDaniel Stenberg, a founder of the Rockbox project, envisions the project evolving away from a standalone Rockbox operating system to Rockbox as a media player application that runs under mobile operating systems, such as Android, iOS, Sailfish OS or Tizen:\n\nIn a chat after my Rockbox talk at Fosdem 2010, two other core Rockbox developers (Zagor and gevaerts) seemed to agree to the general view that a Rockbox future involves it running as an application. Out of the existing systems mentioned above, I'd prefer to start this work focused on Android. It has the widest company backing combined with open source, and it's also the most used open phone OS. I don't think there's anything that will prevent us from working on all those platforms, as the back-bone should be able to remain the same and portable code we already have and use. Heck, it could then also become more of a regular app for common desktops, too.[11]\n\nA project to port Rockbox to run as an application under a full-fledged operating system was accepted for Google's 2010 Summer of Code[12] and completed.[13] Currently, Rockbox runs on Android based players, but integration into Android and conversion to work with touch based devices is ongoing.[14] Subsequently, an anonymous Chinese developer unofficially ported Rockbox to Palm's WebOS.[15]\n\nCustomization\n\n[edit]\n\nSubject to the limitations of each particular platform, the appearance of Rockbox can be customised in various ways. Fonts and foreground and background colours can be added and selected, while a simple markup language can be used to create themes for the menu and playback screens.[16] These themes can include backgrounds and other images (such as icons), plus various formats for file names, ID3 tags, album art, file progress, and time and system information.\n\nRockbox has essentially been a file-tree based player, to which folders could be dragged and dropped and then navigated by folder structure. However, more recent versions have included a complementary database feature which allows the player to compile information from the files' ID3 tags.[17] The user can then navigate the files regardless of file structure.\n\nFeatures\n\n[edit]\n\nTarget status\n\n[edit]\n\nRockbox has many features additional to those supported by the original operating firmware, but in many cases there are limitations. On platforms classified as \"stable\" and supported, the device can be used as a digital music player, but even on some such platforms Rockbox does not support charging or USB; the player must be dual-booted into the original firmware to be charged or to transfer files. Some platforms are classified as \"unstable\", but supported; those deemed \"unusable\" are not supported, and their use is not recommended. Some porting projects are in a pre-development hunting and gathering stage, with no code written.[18]\n\nCodecs\n\n[edit]\n\nRockbox on software decoding platforms (non-Archos) supports playback of twelve lossy codecs (depending on how one counts), five lossless, two uncompressed and twelve miscellaneous formats.[19] This makes a conservative total of 30 supported audio formats, although a few of them do not operate in realtime on all platforms. Extensive work has gone into optimizing each codec, with FLAC, Ogg Vorbis, WMA, APE, TTA, MPC, Wavpack, ATRAC3, Cook and WMA Pro among the fastest known integer implementations for those formats.[20]\n\nLossy formats\n\n[edit]\n\nMPEG audio layers I-III (MP3/MP2/MP1)\n\nOgg Vorbis\n\nMPEG-4 AAC(-LC/HE/HEv2 profiles) (in MP4 or RM containers)\n\nMusepack\n\nAC3 (raw or RM container)\n\nWMA Standard\n\nWMA Professional\n\nSpeex\n\nCook\n\nATRAC3\n\nThe lossy portion of WavPack hybrid files\n\nOpus\n\nLossless formats\n\n[edit]\n\nFLAC\n\nALAC\n\nWavPack\n\nShorten\n\nMonkey's Audio\n\nTTA\n\nUncompressed formats\n\n[edit]\n\nWAV\n\nAIFF\n\nTogether they include over a dozen different PCM and ADPCM formats.\n\nMiscellaneous formats\n\n[edit]\n\nIn addition, there are playback of game audio types ADX, SID, NSF, SAP, SPC, AY, GBS, HES, KSS, SGC, VGM, and VGZ. The MOD tracker format, and the Yamaha SMAF are also now supported.[21]\n\nSome profiles in Monkey's Audio are not real time on all targets due to very high CPU needs. Also, Rockbox will not play files with a digital rights management (DRM) scheme.\n\nRockbox features\n\n[edit]\n\nBeside the ability of playing and recording audio files, Rockbox offers many playback enhancements that other firmware packages may not have implemented yet. Listed below are a handful of these features.\n\nGapless playback[22]\n\nCrossfading[23]\n\nReplayGain[24]\n\n10 band fully parametric equalizer[24]\n\nVariable speed decoding with pitch correction[25]\n\nCrossfeed[24]\n\nOTF (\"on the fly\") playlists\n\nTrue random shuffle (fresh randomly shuffled list every time)\n\nCustom UI themes[26]\n\nDynamic Playlists (queue files to play next, or in other parts of a dynamic playlist)\n\nStereo voice/MIC & FM radio recording to WAV/AIFF/WavPack (lossless) and MP3[27][28] (limited model/device/target support)\n\nRemote control (supporting devices)\n\nDigital S/PDIF input/output (supporting devices)\n\nLast.fm support (even on players lacking RTC)\n\nCue sheet support\n\nAlbum art[29]\n\nSleep timer\n\nPlug-ins\n\n[edit]\n\nRockbox developers can create plug-ins, which provide the user with other enhancements that may not be available on various firmware modules.\n\nAvailable plug-ins include:\n\nJPEG viewer (16 bit color/129 shade greyscale)[30]\n\nRockboy Game Boy emulator (port of Gnuboy)[31]\n\nZXBox ZX Spectrum emulator (port of Spectemu)[32]\n\nDoom (port of the PrBoom engine)\n\nDuke Nukem 3D, Quake, and Wolfenstein 3D running atop a version of the Simple DirectMedia Layer runtime\n\nXWorld, a clone of Another World[33]\n\nWAV to MP3 and Wavpack encoder\n\nMPEG video player[34]\n\nPictureFlow, an album art viewer similar to Apple's Cover Flow\n\nVarious games including 2048, Sudoku, Solitaire, Chess, Minesweeper, Pong and many others (see https://www.rockbox.org/wiki/PluginIndex for an official list of plug-ins)\n\nMusical Instrument Digital Interface (MIDI) player, real-time on some targets.\n\nMikMod, used to play multiple module file formats[35]\n\nArchitecture\n\n[edit]\n\nRockbox uses a simple kernel,[36] with a flat memory model and single process, letting it run on platforms without a memory management unit. Thin threads run cooperatively, returning control to a scheduler that prioritizes the audio thread; the only form of preemption is through interrupts. The operating system and plug-ins are written in C, with assembly used for code that is device- and platform-specific, and performance sensitive. The simple and lightweight architecture allows Rockbox to run on a variety of targets, with memory ranging from 1 to 64 MB, and CPU speeds ranging 12 to 532 MHz. Rockbox also provides support for multicore and asymmetric multiprocessor systems based on ARM, ColdFire, MIPS and SH. Several codecs can be parallelized across 2 CPU cores for increased power efficiency, and the HWCODEC interface allows for dedicated audio decoder DSPs.\n\nRockbox Utility\n\n[edit]\n\nThe Rockbox Utility is a free computer application, available for Linux, Mac OS X, and Microsoft Windows, built using Digia Qt platform, that is used to install and manage Rockbox on DAPs. Rockbox Utility provides automatic installation of Rockbox, as well as themes and voice files, directly onto a DAP with minimal user interaction. Rockbox Utility is updated frequently as support for new devices is added.\n\nSee also\n\n[edit]\n\nFree and open-source software portal\n\niPodLinux\n\nReferences\n\n[edit]"
    }
}