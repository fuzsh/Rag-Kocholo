{
    "id": "dbpedia_2757_1",
    "rank": 91,
    "data": {
        "url": "https://community.tmpdir.org/t/lockheed-martin-skunkworks/309",
        "read_more_link": "",
        "language": "en",
        "title": "Lockheed Martin Skunkworks",
        "top_image": "https://community.tmpdir.org/uploads/default/original/1X/6aa51b9d1dfe1987184efd08af971c0bd5079c1d.png",
        "meta_img": "https://community.tmpdir.org/uploads/default/original/1X/6aa51b9d1dfe1987184efd08af971c0bd5079c1d.png",
        "images": [
            "https://community.tmpdir.org/user_avatar/community.tmpdir.org/cbrake/48/3_2.png",
            "https://community.tmpdir.org/user_avatar/community.tmpdir.org/cbrake/48/3_2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "book"
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2021-09-15T19:06:26+00:00",
        "summary": "",
        "meta_description": "Commenting on aggressive timelines for complicated projects, an engineer recently mentioned that Kelly Johnson is his engineering hero. Johnson lead the design of aircraft such as the F80 Shooting Star (first jet fighter&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://community.tmpdir.org/uploads/default/optimized/1X/6aa51b9d1dfe1987184efd08af971c0bd5079c1d_2_32x32.png",
        "meta_site_name": "TMPDIR",
        "canonical_link": "https://community.tmpdir.org/t/lockheed-martin-skunkworks/309",
        "text": "I enjoyed reading the book Skunk Works years ago. I think it illustrates some of the timeless principles of effective engineering culture. As one book reviewer put it:\n\n(1) Eliminate bureaucracy\n\n(2) Prefer having a small with high average talent to a larger less talented team\n\n(3) Make sure different functions are physically next to each and communicate incessantly\n\n(4) Shield the team from external pressure\n\n(5) Challenge the team with “impossible” problems that get talented people excited.\n\nThese are all things that can help a small talented team far outperform a larger team with a much bigger budget.\n\nI think you see some of the same dynamics at Bell Labs.\n\nI likewise have good memories of working with good colocated teams focused on hard problems. Now, as a consultant, my attention is more scattered.\n\nI think we see some of the same Skunkworks/Bell Labs dynamics in some OSS projects. But, I’ve rarely been able to replicate the OSS culture in company/customer teams – not exactly sure why, but probably comes down to the people involved – they are often motivated, interested, open, generous, collaborative, humble (in their own way), etc. But, I keep trying …\n\nI’ve worked with some engineers who are remarkably efficient, simply solving problems at a very rapid pace. Many of these engineers are extremely focused on exactly the problem at hand, sometimes this causes problems in the future. But it’s how they work and often a business places very high value on short term results, so these types of engineers are valuable in the right context.\n\nI’ve also worked with perfectionists who never complete anything. Sometimes OSS is like this, refusing to merge changes unless everything is perfect.\n\nAnd I’ve worked with engineers who fear that if someone else can do what they do that then they’ll be laid off. Sometimes this is a completely justified consideration as they’ve observed it happen to past peers.\n\nTo get the OSS-like development culture, you have to find a sensible balance between my first two points and not be afraid to work with others who can do what you do (and often are significantly better at it than you are). This can be daunting and scary. But good engineers have impostor syndrome and admit it all while striving to become better.\n\nGood points and I think you hit right chord on one of the reasons. This is a finite game mindset and tries to integrate vertically, which could end up increasing cost of maintaining that S/W overtime and management might look to replace it completely or redo it to avoid these higher costs. So you end us losing as a developer. Opensource and OSS mindset infact does few unique things which perhaps aren’t notices. Engineers would work on a OpenSource code and if they contribute the contributions will earn them credits that will last beyond their current job. So even if you were to be laid off, it will help you find new job. You can build relationships with other like minded engineers and enlarge your technical community presence.\n\nI guess we should start teaching these points more to the teams and inform them about the infinite nature of opensource game, in the end if you last in the game, you are winner, there are no explicit winners and losers in here."
    }
}