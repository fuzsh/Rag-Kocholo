{
    "id": "dbpedia_3206_3",
    "rank": 4,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Proprietary_software",
        "read_more_link": "",
        "language": "en",
        "title": "Proprietary software",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/Ohhh%2C_Shockwave_%28117804940%29.jpg/220px-Ohhh%2C_Shockwave_%28117804940%29.jpg",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2001-12-29T14:32:32+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Proprietary_software",
        "text": "Software released under a license restricting rights\n\n\"Non-free software\" redirects here. Not to be confused with Commercial software or Business software.\n\nProprietary software is software that grants its creator, publisher, or other rightsholder or rightsholder partner a legal monopoly by modern copyright and intellectual property law to exclude the recipient from freely sharing the software or modifying it, and—in some cases, as is the case with some patent-encumbered and EULA-bound software—from making use of the software on their own, thereby restricting their freedoms.[1]\n\nProprietary software is a subset of non-free software, a term defined in contrast to free and open-source software; non-commercial licenses such as CC BY-NC are not deemed proprietary, but are non-free. Proprietary software may either be closed-source software or source-available software.[1][2]\n\nTypes\n\n[edit]\n\nFree/Open Licenses Non-free Licenses Public domain & equivalents Permissive license Copyleft (protective license) Noncommercial license Proprietary license Trade secret Software PD, CC0 BSD, MIT, Apache GPL, AGPL JRL, AFPL proprietary software, no public license private, internal software Other creative works PD, CC0 CC BY CC BY-SA CC BY-NC Copyright, no public license unpublished\n\nOrigin\n\n[edit]\n\nUntil the late 1960s, computers—especially large and expensive mainframe computers, machines in specially air-conditioned computer rooms—were usually leased to customers rather than sold.[3][4] Service and all software available were usually supplied by manufacturers without separate charge until 1969. Computer vendors usually provided the source code for installed software to customers.[citation needed] Customers who developed software often made it available to the public without charge.[5] Closed source means computer programs whose source code is not published except to licensees. It is available to be modified only by the organization that developed it and those licensed to use the software.\n\nIn 1969, IBM, which had antitrust lawsuits pending against it, led an industry change by starting to charge separately for mainframe software[6][7] and services, by unbundling hardware and software.[8]\n\nBill Gates' \"Open Letter to Hobbyists\" in 1976 decried computer hobbyists' rampant copyright infringement of software, particularly Microsoft's Altair BASIC interpreter, and asserted that their unauthorized use hindered his ability to produce quality software. But the legal status of software copyright, especially for object code, was not clear until the 1983 appeals court ruling in Apple Computer, Inc. v. Franklin Computer Corp.[9][10][11]\n\nAccording to Brewster Kahle the legal characteristic of software changed also due to the U.S. Copyright Act of 1976.[12]\n\nStarting in February 1983 IBM adopted an \"object-code-only\" model for a growing list of their software and stopped shipping much of the source code,[13][14] even to licensees.\n\nIn 1983, binary software became copyrightable in the United States as well by the Apple vs. Franklin law decision,[15] before which only source code was copyrightable.[16] Additionally, the growing availability of millions of computers based on the same microprocessor architecture created for the first time an unfragmented and big enough market for binary distributed software.[16]\n\nLicenses\n\n[edit]\n\nThis section is an excerpt from Software license § Proprietary software licenses.\n\nThe tendency to license proprietary software, rather than sell it, dates from the time period before the existence, then the scope of software copyright protection was clear. These licenses have continued in use after software copyright was recognized in the courts, and are considered to grant the company extra protection compared to copyright law. According to United States federal law, a company can restrict the parties to which it sells but it cannot prevent a buyer from reselling the product. Software licensing agreements usually prohibit resale, enabling the company to maximize revenue.\n\nTraditionally, software was distributed in the form of binary object code that could not be understood or modified by the user, but could be downloaded and run. The user bought a perpetual license to use a particular version of the software. Software as service (SaaS) vendors—who have the majority market share in application software as of 2023 —rarely offer perpetual licenses. SaaS licenses are usually temporary and charged on a pay-per-usage or subscription basis, although other revenue models such as freemium are also used. For customers, the advantages of temporary licenses include reduced upfront cost, increased flexibility, and lower overall cost compared to a perpetual license. In some cases, the steep one-time cost demanded by sellers of traditional software were out of the reach of smaller businesses, but pay-per-use SaaS models makes the software affordable.\n\nMixed-source software\n\n[edit]\n\nSoftware distributions considered as proprietary may in fact incorporate a \"mixed source\" model including both free and non-free software in the same distribution.[26] Most if not all so-called proprietary UNIX distributions are mixed source software, bundling open-source components like BIND, Sendmail, X Window System, DHCP, and others along with a purely proprietary kernel and system utilities.[27][28]\n\nMulti-licensing\n\n[edit]\n\nSome free software packages are also simultaneously available under proprietary terms. Examples include MySQL, Sendmail and ssh. The original copyright holders for a work of free software, even copyleft free software, can use dual-licensing to allow themselves or others to redistribute proprietary versions. Non-copyleft free software (i.e. software distributed under a permissive free software license or released to the public domain) allows anyone to make proprietary redistributions.[29][30] Free software that depends on proprietary software is considered \"trapped\" by the Free Software Foundation. This includes software written only for Microsoft Windows,[31] or software that could only run on Java, before it became free software.[32]\n\nLegal basis\n\n[edit]\n\nMost of the software is covered by copyright which, along with contract law, patents, and trade secrets, provides legal basis for its owner to establish exclusive rights.[33]\n\nA software vendor delineates the specific terms of use in an end-user license agreement (EULA). The user may agree to this contract in writing, interactively on screen (clickwrap), or by opening the box containing the software (shrink wrap licensing). License agreements are usually not negotiable.[34] Software patents grant exclusive rights to algorithms, software features, or other patentable subject matter, with coverage varying by jurisdiction. Vendors sometimes grant patent rights to the user in the license agreement.[35] The source code for a piece of proprietary software is routinely handled as a trade secret.[36] Software can be made available with fewer restrictions on licensing or source-code access; software that satisfies certain conditions of freedom and openness is known as \"free\" or \"open-source.\"[37]\n\nLimitations\n\n[edit]\n\nSince license agreements do not override applicable copyright law or contract law, provisions in conflict with applicable law are not enforceable.[38] Some software is specifically licensed and not sold, in order to avoid limitations of copyright such as the first-sale doctrine.[39]\n\nExclusive rights\n\n[edit]\n\nThe owner of proprietary software exercises certain exclusive rights over the software. The owner can restrict the use, inspection of source code, modification of source code, and redistribution.\n\nUse of the software\n\n[edit]\n\nVendors typically limit the number of computers on which software can be used, and prohibit the user from installing the software on extra computers.[citation needed] Restricted use is sometimes enforced through a technical measure, such as product activation, a product key or serial number, a hardware key, or copy protection.\n\nVendors may also distribute versions that remove particular features, or versions which allow only certain fields of endeavor, such as non-commercial, educational, or non-profit use.\n\nUse restrictions vary by license:\n\nWindows Vista Starter is restricted to running a maximum of three concurrent applications.\n\nThe retail edition of Microsoft Office Home and Student 2007 is limited to non-commercial use on up to three devices in one household.\n\nWindows XP can be installed on one computer, and limits the number of network file sharing connections to 10.[40] The Home Edition disables features present in Windows XP Professional.\n\nTraditionally, Adobe licenses are limited to one user, but allow the user to install a second copy on a home computer or laptop.[41] This is no longer true with the switching to Creative Cloud.\n\niWork '09, Apple's productivity suite, is available in a five-user family pack, for use on up to five computers in a household.[42]\n\nInspection and modification of source code\n\n[edit]\n\nSee also: Open-source software and Crippleware\n\nVendors typically distribute proprietary software in compiled form, usually the machine language understood by the computer's central processing unit. They typically retain the source code, or human-readable version of the software, often written in a higher level programming language.[43] This scheme is often referred to as closed source.[44]\n\nWhile most proprietary software is distributed without the source code, some vendors distribute the source code or otherwise make it available to customers. For example, users who have purchased a license for the Internet forum software vBulletin can modify the source for their own site but cannot redistribute it. This is true for many web applications, which must be in source code form when being run by a web server. The source code is covered by a non-disclosure agreement or a license that allows, for example, study and modification, but not redistribution.[45] The text-based email client Pine and certain implementations of Secure Shell are distributed with proprietary licenses that make the source code available.[citation needed]Some licenses for proprietary software allow distributing changes to the source code, but only to others licensed for the product, and some[46] of those modifications are eventually picked up by the vendor.\n\nSome governments fear that proprietary software may include defects or malicious features which would compromise sensitive information. In 2003 Microsoft established a Government Security Program (GSP) to allow governments to view source code and Microsoft security documentation, of which the Chinese government was an early participant.[47][48] The program is part of Microsoft's broader Shared Source Initiative which provides source code access for some products. The Reference Source License (Ms-RSL) and Limited Public License (Ms-LPL) are proprietary software licenses where the source code is made available.\n\nGovernments have also been accused of adding such malware to software themselves. According to documents released by Edward Snowden, the NSA has used covert partnerships with software companies to make commercial encryption software exploitable to eavesdropping, or to insert backdoors.[49][50]\n\nSoftware vendors sometimes use obfuscated code to impede users who would reverse engineer the software.[51] This is particularly common with certain programming languages.[citation needed] For example, the bytecode for programs written in Java can be easily decompiled to somewhat usable code,[citation needed] and the source code for programs written in scripting languages such as PHP or JavaScript is available at run time.[52]\n\nRedistribution\n\n[edit]\n\nFurther information: Shareware\n\nSee also: Freely redistributable software\n\nProprietary software vendors can prohibit the users from sharing the software with others. Another unique license is required for another party to use the software.\n\nIn the case of proprietary software with source code available, the vendor may also prohibit customers from distributing their modifications to the source code.\n\nShareware is closed-source software whose owner encourages redistribution at no cost, but which the user sometimes must pay to use after a trial period. The fee usually allows use by a single user or computer. In some cases, software features are restricted during or after the trial period, a practice sometimes called crippleware.\n\nInteroperability with software and hardware\n\n[edit]\n\nFurther information: Interoperability § Software\n\nProprietary file formats and protocols\n\n[edit]\n\nFurther information: Proprietary format and Proprietary protocol\n\nProprietary software often[citation needed] stores some of its data in file formats that are incompatible with other software, and may also communicate using protocols which are incompatible. Such formats and protocols may be restricted as trade secrets or subject to patents.[citation needed]\n\nProprietary APIs\n\n[edit]\n\nA proprietary application programming interface (API) is a software library interface \"specific to one device or, more likely to a number of devices within a particular manufacturer's product range.\"[53] The motivation for using a proprietary API can be vendor lock-in or because standard APIs do not support the device's functionality.[53]\n\nThe European Commission, in its March 24, 2004, decision on Microsoft's business practices,[54] quotes, in paragraph 463, Microsoft general manager for C++ development Aaron Contorer as stating in a February 21, 1997, internal Microsoft memo drafted for Bill Gates:\n\nThe Windows API is so broad, so deep, and so functional that most ISVs would be crazy not to use it. And it is so deeply embedded in the source code of many Windows apps that there is a huge switching cost to using a different operating system instead.\n\nEarly versions of the iPhone SDK were covered by a non-disclosure agreement. The agreement forbade independent developers from discussing the content of the interfaces. Apple discontinued the NDA in October 2008.[55]\n\nVendor lock-in\n\n[edit]\n\nFurther information: Vendor lock-in\n\nAny dependency on the future versions and upgrades for a proprietary software package can create vendor lock-in, entrenching a monopoly position.[56]\n\nSoftware limited to certain hardware configurations\n\n[edit]\n\nProprietary software may also have licensing terms that limit the usage of that software to a specific set of hardware. Apple has such a licensing model for macOS, an operating system which is limited to Apple hardware, both by licensing and various design decisions. This licensing model has been affirmed by the United States Court of Appeals for the Ninth Circuit.[57]\n\nAbandonment by proprietors\n\n[edit]\n\nMain article: Abandonware\n\nProprietary software which is no longer marketed, supported or sold by its owner is called abandonware, the digital form of orphaned works. If the proprietor of a software package should cease to exist, or decide to cease or limit production or support for a proprietary software package, recipients and users of the package may have no recourse if problems are found with the software. Proprietors can fail to improve and support software because of business problems.[58] Support for older or existing versions of a software package may be ended to force users to upgrade and pay for newer versions[59](planned obsolescence). Sometimes another vendor or a software's community themselves can provide support for the software, or the users can migrate to either competing systems with longer support life cycles or to FOSS-based systems.[60]\n\nSome proprietary software is released by their owner at end-of-life as open-source or source available software, often to prevent the software from becoming unsupported and unavailable abandonware.[61][62][63] 3D Realms and id Software are famous for the practice of releasing closed source software into the open source.[further explanation needed] Some of those kinds are free-of-charge downloads (freeware), some are still commercially sold (e.g. Arx Fatalis).[further explanation needed] More examples of formerly closed-source software in the List of commercial software with available source code and List of commercial video games with available source code.\n\nPricing and economics\n\n[edit]\n\nSee also: Commercial software\n\nProprietary software is not synonymous with commercial software,[64][65] although the two terms are sometimes used synonymously in articles about free software.[66][67] Proprietary software can be distributed at no cost or for a fee, and free software can be distributed at no cost or for a fee.[68] The difference is that whether proprietary software can be distributed, and what the fee would be, is at the proprietor's discretion. With free software, anyone who has a copy can decide whether, and how much, to charge for a copy or related services.[69]\n\nProprietary software that comes for no cost is called freeware.\n\nProponents of commercial proprietary software argue that requiring users to pay for software as a product increases funding or time available for the research and development of software. For example, Microsoft says that per-copy fees maximize the profitability of software development.[70]\n\nProprietary software generally creates greater commercial activity over free software, especially in regard to market revenues.[71] Proprietary software is often sold with a license that gives the end user right to use the software.\n\nSee also\n\n[edit]"
    }
}