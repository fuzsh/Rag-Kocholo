{
    "id": "dbpedia_6302_2",
    "rank": 86,
    "data": {
        "url": "https://devforum.roblox.com/t/best-way-to-protect-remoteevents-against-exploiters/1314739",
        "read_more_link": "",
        "language": "en",
        "title": "Best way to protect RemoteEvents against exploiters?",
        "top_image": "https://devforum-uploads.s3.dualstack.us-east-2.amazonaws.com/uploads/original/5X/7/1/0/e/710ebeb5021c9798aaaf2a8a65dcea4b4c311caa.jpeg",
        "meta_img": "https://devforum-uploads.s3.dualstack.us-east-2.amazonaws.com/uploads/original/5X/7/1/0/e/710ebeb5021c9798aaaf2a8a65dcea4b4c311caa.jpeg",
        "images": [
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/autterfly/40/4072489_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/autterfly/40/4072489_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/necrozatus/40/2833804_2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "HawDevelopment (HawDevelopment)",
            "Vyntrick (Vyntrick)",
            "Abcreator (Abcreator)",
            "Necrozatus (Necrozatus)",
            "EmilyBendsSpace (EmilyBendsSpace)",
            "TomYoGaming (TomYoGaming)",
            "MeCrunchAstroX (Crunch)",
            "BullfrogBait (BullfrogBait)",
            "Kizurex (Kizurex)"
        ],
        "publish_date": "2021-06-26T22:40:59+00:00",
        "summary": "",
        "meta_description": "The title says it all. \nRecently i’ve been into learning game security and how to prevent exploiters from hacking in your games. \nAnd one of my biggest questions is how can we fully (or maybe?) “protect” RemoteEvents fro&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://devforum-uploads.s3.dualstack.us-east-2.amazonaws.com/uploads/optimized/5X/b/3/d/0/b3d0a9f2fe866b16e020240b5703a04757781377_2_32x32.png",
        "meta_site_name": "Developer Forum | Roblox",
        "canonical_link": "https://devforum.roblox.com/t/best-way-to-protect-remoteevents-against-exploiters/1314739",
        "text": "Filtering Enabled & Exploits\n\nA good way to get started is to echo what you always hear: under no circumstances should you trust the client with authority over your server game logic. When implementing your RemoteEvent and RemoteFunction code remember to think as the attacker. Your code should be built around thinking, “if I had absolute control of my client, what could I send over this bridge to break everything?” Design should be based around asking the server “can I”, and not telling it “I can”.\n\nThink Offensive\n\nA simple example is a store; ask the server, “can I buy this sword?”, and don’t tell it, “I can buy this sword.” The server should be the one checking everything from currency to experience points to levels, since it has the final say in what’s really happening. You should always be ready for someone on the other side of the bridge to outsmart you, and make absolutely certain the code you wrote is well tested for cases like someone throwing a NaN at you or expecting an object and getting a table that looks like an object.\n\nA really common pitfall is the attempt to “secure” your remotes, or “validate” your data, and anything that is done client side. As a pro-tip: anything coming from your client will not be secure. It doesn’t matter how clever your system looks, or how much time it took you, you’re not the one in control of your client. If it makes you sleep better at night, the extra headache is okay, but you should not be relying on it to ever really work.\n\nThink Defensive\n\nSome exploits don’t actually rely on remote exploitation, but instead in simple things like Roblox’s rules of replicating properties. You might encounter these exploits in the form of flying, super jumps, or speed hacking. The issue stems from the fact that players have physics ownership over their characters for smoothness and fast feedback, but in turn this gives them the ability to move them anywhere. You can mitigate these on the server, or add basic checks on the client, but be sure to remember you can never actually rely on the client.\n\nStop Thinking\n\nLastly are maybe some of the peskier exploit types which are just plain local enhancements. These are usually undetectable via conventional means, if at all. You might see these in the form of aim-bots, auto-hotkey style scripts, and general automation of game-play."
    }
}