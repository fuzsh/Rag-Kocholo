{
    "id": "correct_foundationPlace_00064_3",
    "rank": 50,
    "data": {
        "url": "https://isis.apache.org/versions/1.16.1/guides/dg/dg.html",
        "read_more_link": "",
        "language": "en",
        "title": "Developers' Guide",
        "top_image": "https://isis.apache.org/versions/1.16.1/images/isis-favicon.png",
        "meta_img": "https://isis.apache.org/versions/1.16.1/images/isis-favicon.png",
        "images": [
            "https://isis.apache.org/versions/1.16.1/images/isis-logo-48x48.png",
            "https://isis.apache.org/versions/1.16.1/images/PDF-50.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/010-installing/010-welcome-page.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/010-installing/020-choose-location.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/010-installing/030-installation-options.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/010-installing/040-start-menu-folder.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/010-installing/050-completing.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/010-installing/060-import-settings-or-not.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/010-installing/070-set-ui-theme.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/020-create-new-project/010-new-project-create.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/020-create-new-project/020-java-project-setup-jdk.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/020-create-new-project/030-java-project-select-jdk.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/020-create-new-project/050-name-and-location.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/020-create-new-project/060-create-dir.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/030-import-settings/040-file-templates.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/030-import-settings/010-settings-import-jar.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/030-import-settings/050-live-templates.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/040-other-settings-compiler/010-build-automatically.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/040-other-settings-compiler/020-annotation-processor.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/042-other-settings-maven/010-maven-installation.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/042-other-settings-maven/020-maven-configuration.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/044-other-settings-misc/010-auto-import.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/100-maven-module-mgmt/010-maven-modules-view.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/100-maven-module-mgmt/020-adding-another-module.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/100-maven-module-mgmt/030-other-module-added.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/100-maven-module-mgmt/040-ignoring-modules.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/100-maven-module-mgmt/050-ignoring-modules-2.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/100-maven-module-mgmt/060-ignored-modules.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/110-running-the-app/010-run-configuration.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/110-running-the-app/020-datanucleus-enhancer-goal.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/110-running-the-app/030-running-unit-tests.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/110-running-the-app/040-running-unit-tests-run-configuration.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/110-running-the-app/050-running-integration-tests-run-configuration.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/400-running-integtests/run-debug-configuration-single-module.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/050-some-plugins/020-some-plugins-confirmation.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/050-some-plugins/maven-helper/010-dependency-tab.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/050-some-plugins/maven-helper/020-dependency-as-tree.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/050-some-plugins/maven-helper/030-maven-run-goal.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/050-some-plugins/maven-helper/040-maven-quick-run.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/060-troubleshooting/010-duplicate-classes.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/070-advanced/002-compiler-exclude.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/070-advanced/004-gradle-output.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/070-advanced/005-gradle-output.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/070-advanced/006-livereload-js.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/070-advanced/010-dcevm-list-of-found-jdk-installations.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/070-advanced/020-dcevm-once-installed.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/070-advanced/030-dcevm-intellij-project-structure.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/intellij-idea/070-advanced/040-dcevm-run-configuration.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/2017-oxygen/010-lombok-locate-jar.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/2017-oxygen/020-lombok-install-into-eclipse.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/2017-oxygen/030-datanucleus-install-new-software.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/2017-oxygen/040-datanucleus-specify-repository.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/2017-oxygen/050-datanucleus-select-plugin.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/2017-oxygen/060-enable-annotation-processor.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/eclipse-100-project-support.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/eclipse-110-project-support.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/eclipse-010-windows-preferences.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/eclipse-120-console.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/eclipse-025-project-properties.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/eclipse-210-enhancer-fails-duplicates.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/eclipse-200-enhancer-fails-duplicates.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/eclipse/eclipse-220-enhancer-fails-duplicates.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/building-isis/setting-up-git.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/contributing/git-workflow.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/contributing/github-forking.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/contributing/github-cloning.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/asciidoctor/plantuml-demo.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/asciidoctor/ditaa-demo.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/asciidoctor/graphviz-demo.png",
            "https://isis.apache.org/versions/1.16.1/guides/dg/images/layouts/estatio-Lease.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "../../images/isis-favicon.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "2.1.2. Importing Maven Modules\n\nLetâs load in some actual code! We do this by importing the Maven modules.\n\nFirst up, open up the Maven tool window (View > Tool Windows > Maven Projects). You can then use the 'plus' button to add Maven modules. In the screenshot you can see weâve loaded in Apache Isis core; the modules are listed in the Maven Projects window and corresponding (IntelliJ) modules are shown in the Projects window:\n\nFigure 21. IntelliJ Maven Module Management - Importing Maven modules\n\nWe can then import another module (from some other directory). For example, here we are importing the Isis Addons' todoapp example:\n\nFigure 22. IntelliJ Maven Module Management - Importing another Module\n\nYou should then see the new Maven module loaded in the Projects window and also the Maven Projects window:\n\nFigure 23. IntelliJ Maven Module Management -\n\nIf any dependencies are already loaded in the project, then IntelliJ will automatically update the CLASSPATH to resolve to locally held modules (rather from .m2/repository folder). So, for example (assuming that the <version> is correct, of course), the Isis todoapp will have local dependencies on the Apache Isis core.\n\nYou can press F4 (or use File > Project Structure) to see the resolved classpath for any of the modules loaded into the project.\n\nIf you want to focus on one set of code (eg the Isis todoapp but not Apache Isis core) then you could remove the module; but better is to ignore those modules. This will remove them from the Projects window but keep them available in the Maven Projects window for when you next want to work on them:\n\nFigure 24. IntelliJ Maven Module Management - Ignoring Modules\n\nConfirm that itâs ok to ignore these modules:\n\nFigure 25. IntelliJ Maven Module Management - Ignoring Modules (ctd)\n\nAll being well you should see that the Projects window now only contains the code you are working on. Its classpath dependencies will be adjusted (eg to resolve to Apache Isis core from .m2/repository):\n\nFigure 26. IntelliJ Maven Module Management - Updated Projects Window\n\nWhen running an Apache Isis application, itâs necessary to setup the development environment so that the Java bytecode can be enhanced by the DataNucleus enhancer. If working in Eclipse, then JDO enhancement is most easily done by installing the DataNucleus' Eclipse plugin. This hooks the bytecode enhancement of your domain objects into Eclipseâs normal incremental compilation.\n\nDataNucleus is the reference implementation of the JDO (Java data objects) spec, and Apache Isis integrates with DataNucleus as its persistence layer. Datanucleus is a very powerful library, allowing domain entities to be mapped not only to relational database tables, but also to NoSQL stores such as Neo4J, MongoDB and Apache Cassandra.\n\nWhat this means is that the enhancerâââavailable as both a Maven plugin and as an Eclipse pluginâââmust, one way or another, be integrated into your development environment.\n\nSometimes you just need to see what is going on. There are various ways in which logging can be enabled, here are the ones we tend to use.\n\nThe standard approach is to use fixture scripts. These can be run in on start-up typically by being specified in the AppManifest, see for example the SimpleApp archetype.\n\n4.1.1. Installation\n\nThe easiest place to get hold of command-line git is probably the github download page.\n\nOn Windows, this also installs the rather good mSysGit Unix shell. We recommend that you enable git for both the mSysgit and the Windows command prompt:\n\nOnce git is installed, the two main command line tools to note are:\n\ngit command line tool\n\ngitk for viewing the commit history\n\nIf using Windows, note that github also have a dedicated Windows client. With a little hacking around, it can also be made to work with non-github repositories.\n\nIf using Mac, you might also want to check out Atlassianâs Sourcetree.\n\nCloning the Apache Isis repo\n\nFirst, clone the Apache Isis repo:\n\ngit clone https://github.com/apache/isis.git\n\nConfiguring Git\n\nNext up is to configure your user name and password; see also Apacheâs git docs:\n\ngit config user.name \"<i>My Name Here</i>\" git config user.email <i>myusername@apache.org</i>\n\nNext, configure the core.autocrlf so that line endings are normalized to LF (Unix style) in the rep; again see Apacheâs git page:\n\non Windows, use:\n\ngit config core.autocrlf true\n\non Mac/Linux, use:\n\ngit config core.autocrlf input\n\nThe Windows setting means that files are converted back to CRLF on checkout; the Mac/Linux setting means that the file is left as LF on checkout.\n\nWe also recommend setting core.safecrlf, which aims to ensure that any line ending conversion is repeatable. Do this on all platforms:\n\ngit config core.safecrlf true\n\nNote that these settings are supplemented in the repo by the .gitattributes file and that explicitly specifies line handling treatment for most of the common file types that we have.\n\nNext, we recommend you setup this a refspec so that you can distinguish remote tags from local ones. To do that, locate the [remote \"origin\"] section in your .git/config and add the third entry shown below:\n\n[remote \"origin\"] url = ... whatever ... fetch = ... whatever ... fetch = +refs/tags/*:refs/tags/origin/*\n\nThis will ensure that a git fetch or git pull places any remote tags under origin/xxx. For example, the`isis-1.0.0`tag on the origin will appear under`origin/isis-1.0.0.\n\nIf you donât use git outside of Apache, you can add the --global flag so that the above settings apply for all repos managed by git on your PC.\n\nThereafter you can speed up the build by adding the -o (offline flag). To save more time still, we also recommend that you build in parallel. (Per this blog post), you could also experiment with a number of JDK parameters that weâve found also speed up Maven:\n\nFor the most part, though, you may want to rely on an IDE such as Eclipse to build the codebase for you. Both Eclipse and Idea (12.0+) support incremental background compilation.\n\nWhen using Eclipse, a Maven profile is configured such that Eclipse compiles to target-ide directory rather than the usual target directory. You can therefore switch between Eclipse and Maven command line without one interfering with the other.\n\nAs you might imagine, only committers are permitted to push changes to the github repo. As a contributor, we recommend that you fork the apache/isis github repo, and then use your fork as a way of publishing your patches for the Apache Isis committers to apply.\n\nIf youâve created your own fork, then you need to add the upstream remote to the github.com/apache/isis. This remote is traditionally called upstream. You should then arrange for your master branch to track the upstream/master remote branch:\n\nAlthough with git your commits are always performed on your local repo, those commit messages become public when the patch is applied by an Apache Isis committer. You should take time to write a meaningful commit message that helps explain what the patch refers to; if you donât then thereâs a chance that your patch may be rejected and not applied. No-one likes hard work to go to waste!\n\nHere -10 is the last 10 commits you have done. You need to change that integer according to the commits you need to apply into the patch.\n\nThe first thing to do is to make sure your local clone is up-to-date. We do this by retrieving new commits from upstream repo and then merging them as a fast-forward into your local branch.\n\nIrrespective of whether you are using a github fork, the upstream for your local master branch will be tracking the appropriate remoteâs master branch. So n either case, the same commands work:\n\nAlternatively, you can combine the git fetch and git merge and just use git pull: <pre> git checkout master git pull âff-only </pre>\n\nIf the merge or pull fails, it means that you must have made commits and there have been changes meanwhile on the remote masterâs branch. You can use `gitk --all to confirm. If this fails, see our git cookbook page for a procedure to retrospectively sort out this situation.\n\n6.5.4. Rebasing with master\n\nBefore you can share your change, you should rebase (in other words replay) your changes on top of the master branch.\n\nThe first thing to do is to pull down any changes made in upstream remoteâs master since you started your topic branch:\n\nThese are the same commands that you would have run before you created your topic branch. If you use gitk --all, thereâs a good chance that new commits have come in.\n\nNext, we reintegrate our topic branch by rebasing onto master: <pre> git checkout ISIS-123-blobs git rebase master </pre>\n\nThis takes all of the commits in your branch, and applies them on top of the new master branch. When your change is eventually integrated back in, it will result in a nice clear linear history on the public repo.\n\nIf the rebase fails because of a conflict, then youâll be dumped into REBASE mode. Edit the file that has the conflict, and make the appropriate edits. Once done:\n\nOnce the rebase has completed, re-run your tests to confirm that everything is still good.\n\n6.5.5. Raising a pull request\n\nIf you have your own fork, you can now simply push the changes youâve made locally to your fork:\n\nThis will create a corresponding branch in the remote github repo. If you use gitk --all, youâll also see a remotes/origin/ISIS-123-blobs branch.\n\nThen, use github to raise a pull request. Pull requests sent to the Apache GitHub repositories will forward a pull request e-mail to the dev mailing list. Youâll probably want to sign up to the dev mailing list first before issuing your first pull request (though that isnât mandatory).\n\nThe process to raise the pull request, broadly speaking:\n\nOpen a web browser to your github fork of isis\n\nSelect your topic branch (pushed in the previous step) so that the pull request references the topic branch.\n\nClick the Pull Request button.\n\nCheck that the Apache Isis mailing list email came through.\n\nThe git add command adds the changes to the file(s) to the git index (aka staging area). If you were to make subsequent changes to the file these would not be committed.\n\nNote that this sequence of commands is identical to modifying an existing file. However, it isnât possible to combine the two steps using git commit -am; the git add is always needed when adding new files to the repo.\n\nIf at any time the git pull from your upstream fails, it most likely means that you must have made commits on the master branch. You can use gitk --all to confirm; at some point in time both master and origin\\master will have a common ancestor.\n\nOne of our committers, Alexander Krasnukhin, has put together some git scripts to help his workflow. Using one of these, git prefix, you can just commit with proper message without bothering about prefix and add prefix only in the end before the final push.\n\nWe recommend that you adopt a convention for your directories. For example, open source repositories (such as Apache Isis itself or the Incode Platform) reside in github.com, while your own proprietary code might reside in some other service, eg bitbucket. For example:\n\nThe CI/documentation platform also supports the \"Improve this doc\" button, allowing any document to be edited via the TFS portal; very useful for small fixes. To make this work, it relies upon the following naming conventions:"
    }
}