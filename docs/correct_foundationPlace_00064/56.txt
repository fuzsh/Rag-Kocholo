After an influential developer in the open source PHP project, Nikita Popov, decided to move on, it prompted the formation of a new foundation to run the project: The PHP Foundation. This begs a couple of questions. First, why is PHP still such a critical part of the web, when other programming languages and frameworks are seemingly more suited to the modern web? Second, what are the motivations behind the companies that have formed this new foundation?

Richard MacManus

Richard is senior editor at The New Stack and writes a weekly column about web and application development trends. Previously he founded ReadWriteWeb in 2003 and built it into one of the world’s most influential technology news and analysis sites. Follow him on Twitter @ricmac.

Last week, the company JetBrains announced on its blog the creation of The PHP Foundation. JetBrains is a company based in the Czech Republic that provides tools for software developers — including an IDE (integrated development environment) for PHP called PhpStorm. So its motivation is clear: it wants to ensure PhpStorm will continue to be relevant. As for The PHP Foundation, JetBrains wrote that the goal is to be “a non-profit organization whose mission is to ensure the long life and prosperity of the PHP language.”

Among the newly announced partners for the new foundation is Automattic, the company behind WordPress. Despite moving somewhat toward JavaScript technologies over the past several years — in particular, with its modular Gutenberg editor — WordPress is still very reliant on PHP. If you happen to run a WordPress blog, you can see that the entire admin interface is made up of PHP pages (wp-admin/edit.php, etc).

Why Is PHP Still So Popular?

Last month, I wrote a column looking into why jQuery, a JavaScript library that debuted way back in 2006, is still incredibly popular. 76% of the top 1 million websites use jQuery in some way, according to BuiltWith (it’s actually decreased a couple of percentage points since that column was published). According to the same source, PHP is currently used by 36% of the top 1 million websites — and that figure has been sliding down since around the middle of last year. Although interestingly, PHP is more widely used among the top 10,000 websites — 49% of those sites use it.

While PHP looks like it might be tailing off in popularity slightly, at least when it starts getting into the long tail of websites, the technology will stick around for many years to come. The reason for its enduring appeal is similar to that of jQuery — both are core technologies in the WordPress platform.

PHP is also widely used by other large platforms, notably Facebook. Mark Zuckerberg used PHP to code up the original Facebook website, but nowadays the company uses a variant of PHP called Hack.

The Twists and Turns in PHP over 26 Years

Also like jQuery, PHP is a convenient, easy-to-use tool for web developers to reach for. That has always been the case, going back to 1995 when an independent developer from Canada named Rasmus Lerdorf released the first version of Personal Home Page Tools (PHP Tools). At that time, PHP Tools was a small toolset for creating server-side, database-connected web apps. It wasn’t a programming language, although Lerdorf did add a scripting language to his toolset later that year.

Indeed, Lerdorf had essentially set out to create what today we call a framework — think React or Vue, minus the modern-day complexity. PHP Tools gained traction in those early years primarily because it was a useful set of templates and code snippets for web developers to reuse. It also integrated nicely into HTML and was easy to connect to databases (MySQL also debuted in 1995, so PHP soon became closely associated with it).

As Lerdorf himself has noted many times over the years, what he created back in 1995 and continued to work on in 1996 was a vastly different system to the PHP of today. Indeed, PHP evolved markedly after 1996 and many other influential developers helped shape its future — notably Zeev Suraski and Andi Gutmans for PHP 3, which was developed over 1997 and launched in June 1998. PHP 3 was “the first version that closely resembles PHP as it exists today,” according to an in-depth infographic of the first 25 years of PHP by JetBrains.

Ironically, Lerdorf has always said he dislikes programming and claims that he’s “not a real programmer.” But that has to be taken with a grain of salt — how many “real programmers” ever develop anything as substantial as PHP? JetBrains seemed to acknowledge this in the infographic, when it said that PHP began turning into a programming language in 1996, thanks to Lerdorf adding “built-in support for DBM, mSQL, and Postgres95 databases, cookies, user-defined function support, and much more.”

In successful web innovations or companies, the inventor or founder often continues to provide the raison d’etre of the technology long after they’ve left. I think this is the case with Lerdorf. He’s still the guiding spirit behind PHP, even though he’s not one of the lead developers anymore. “We can’t lose track of what we’re doing here, and why we’re programming,” he said at a 2019 PHP conference (quoted by David Cassel). “We’re programming to solve a problem. And hopefully, it’s a problem that actually matters.” Amen to that.

I should add that Lerdorf was mentioned in the JetBrains post announcing The PHP Foundation post, as being involved in the initial “temporary administration.” A promising sign.

Keep on Keeping on

I mention all this history of PHP because some web technologies just seem to have the knack of sticking around — they become part of the web furniture, so to speak. In the case of jQuery, it hasn’t changed that much over the years. It still does the job it set out to do and it remains a convenient JavaScript library for developers to reach for.

Other web technologies constantly evolve with the times — and PHP is one of those. But no matter how far it has strayed from the original version in 1995, the DNA remains the same. PHP was always meant to be a convenient, easy-to-use framework for web developers. Whether it’s a framework (which, by the way, is how BuiltWith classifies it) or a programming language, it doesn’t really matter. PHP is deeply embedded in WordPress, Facebook and many other web platforms and sites — so it’s here to stay.

Unlike jQuery, PHP continues to evolve. It keeps up with the times, and The PHP Foundation will hopefully mean that will be the case for many years to come.