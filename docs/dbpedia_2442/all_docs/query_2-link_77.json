{
    "id": "dbpedia_2442_2",
    "rank": 77,
    "data": {
        "url": "http://hire.stevebennett.me/",
        "read_more_link": "",
        "language": "en",
        "title": "Steve Bennett",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://hire.stevebennett.me/img/portfolio/thumbs/safety-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/vda-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/wwr-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/gawler-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/gke-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/nplh-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/dta-search-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/alt-earth-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/sports-facilities-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/find-my-school-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/risky-roads-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/cherre-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/ziggurat-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/water-sensitive-projects-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/what-the-proj-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/oc-dashboard-thumb2.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/which-geocoder-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/schoolscape-thumb2.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/spatial-data-package-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/mapbox2tangram-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/parking-map-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/melb-data-tour.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/ocd-platform-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/larry-donovan.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/csv-geo-au-thumb2.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/ocd-toolkit.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/saltymill-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/opentransportdata.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/ocd-standards-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/open-trees-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/hipster-melbourne-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/ems-tours-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/opencouncildata-map.png",
            "http://hire.stevebennett.me/img/portfolio/yaml-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/open-knowledge-melbourne.jpeg",
            "http://hire.stevebennett.me/img/portfolio/thumbs/cycletour-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/research-maps-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/git-arrows31.png",
            "http://hire.stevebennett.me/img/portfolio/thumbs/wikitext-grammar-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/safety.png",
            "http://hire.stevebennett.me/img/portfolio/vda.png",
            "http://hire.stevebennett.me/img/portfolio/wwr.png",
            "http://hire.stevebennett.me/img/portfolio/gawler.png",
            "http://hire.stevebennett.me/img/portfolio/gke.png",
            "http://hire.stevebennett.me/img/portfolio/nplh.png",
            "http://hire.stevebennett.me/img/portfolio/dta-search.png",
            "http://hire.stevebennett.me/img/portfolio/alt-earth.png",
            "http://hire.stevebennett.me/img/portfolio/sports-facilities.png",
            "http://hire.stevebennett.me/img/portfolio/find-my-school.png",
            "http://hire.stevebennett.me/img/portfolio/risky-roads.png",
            "http://hire.stevebennett.me/img/portfolio/cherre.png",
            "http://hire.stevebennett.me/img/portfolio/ziggurat.png",
            "http://hire.stevebennett.me/img/portfolio/water-sensitive-projects.png",
            "http://hire.stevebennett.me/img/portfolio/what-the-proj.png",
            "http://hire.stevebennett.me/img/portfolio/oc-dashboard.gif",
            "http://hire.stevebennett.me/img/portfolio/which-geocoder.png",
            "http://hire.stevebennett.me/img/portfolio/schoolscape.png",
            "http://hire.stevebennett.me/img/portfolio/spatial-data-package.png",
            "http://hire.stevebennett.me/img/portfolio/mapbox2tangram.png",
            "http://hire.stevebennett.me/img/portfolio/parking-map.png",
            "http://hire.stevebennett.me/img/portfolio/melb-data-tour.png",
            "http://hire.stevebennett.me/img/portfolio/ocd-platform.png",
            "http://hire.stevebennett.me/img/portfolio/larry-donovan.png",
            "http://hire.stevebennett.me/img/portfolio/csv-geo-au-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/ocd-toolkit.png",
            "http://hire.stevebennett.me/img/portfolio/saltymill.png",
            "http://hire.stevebennett.me/img/portfolio/opentransportdata.png",
            "http://hire.stevebennett.me/img/portfolio/ocd-standards.png",
            "http://hire.stevebennett.me/img/portfolio/open-trees.png",
            "http://hire.stevebennett.me/img/portfolio/hipster-melbourne.png",
            "http://hire.stevebennett.me/img/portfolio/ems-tours.png",
            "http://hire.stevebennett.me/img/portfolio/opencouncildata-map.png",
            "http://hire.stevebennett.me/img/portfolio/yaml-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/open-knowledge-melbourne.jpeg",
            "http://hire.stevebennett.me/img/portfolio/cycletour-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/research-maps-thumb.png",
            "http://hire.stevebennett.me/img/portfolio/git-rant.png",
            "http://hire.stevebennett.me/img/portfolio/wikitext-grammar.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Steve Bennett is an expert on open data, web mapping and open tech.",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "http://hire.stevebennett.me/",
        "text": "This is a simple site that displays the locations of local branches of the Good Karma Effect. The data is managed in a Google Sheet, which is a nice, simple way of allowing the data custodian to make regular updates without requiring my intervention each time.\n\nThere is a little bit of custom logic so the user can enter an address, which is geocoded, and then the closest location is highlighted and zoomed to.\n\nLinks:\n\nLive site\n\nSource code\n\nThis is a prototype of a designed to allow sports planners to better understand the current locations of sports facilities in relation to local populations. In addition to classic filtering and search features, a couple of features are somewhat unique:\n\nA “nearest alternative facilitiess” layer highlights other nearby facilities of the same type, drawing a distance-marked arrow to them.\n\nThe number of people living within 400m walk or 20m drive can be requested, accessed from a third-party service.\n\nStatistics on the number of facilities and facilities per capita for each local government area, and comparison to the state average.\n\nMy role was to lead the mapping component, mentor other team members on GIS basics, manage the back-end data processing, and share in the web development work in a quick development timeframe.\n\nThis is a static website to present the results of a survey in which motorists were asked to identify dangerous roads across WA. The user can filter “spots” by council, electorate, suburb and so on. They can also download all the points within a given boundary as a CSV file.\n\nTo simplify long-term hosting, I built it without any server component. It is a simple static HTML/JavaScript site, with vector tiles hosted on Maptiler.com. To achieve the boundary filtering, I pre-processed the data, using vector tiles to calculate the boundaries for each point. I also pre-generated all the CSV files that could be downloaded, rather than computing them on the fly.\n\nLive website: http://riskyroadsarchive.crowdspot.com.au/\n\nZiggurat Calculator is a proof of concept of a tool for property developers, commissioned by FrontierSI. Users can draw a precinct on the map to select a number of adjoining properties. The maximum developable floor area is then computed and visualised, by applying a series of council-defined setbacks. Then, the maximum floor area that could be achieved by joining the properties together is computed and overlaid.\n\nThe property dataset is loaded as a static Geobuf file, less than 4MB for all the property boundaries in the City of Maroondah area. I use Turf to apply the setbacks and compute the total area, and Mapbox-GL-JS for the data visualisation.\n\nLive site: stevage.github.io/ziggurat\n\nBuilt for a collaborative research centre, this site allows users to explore green infrastructure and water treatment projects planned and developed around the city of Kunshan in China. It combines a map with several layers, plus “glossy brochure”-style information in a side panel.\n\nOne of the challenges of the project was developing a way to collaborate with the team, who had low familiarity with geospatial tools. We used uMap as the shared geospatial platform, and Google Drive with a fixed directory structure for sharing site content.\n\nLive website (pre-launch): https://stevage.github.io/green-map\n\nSometimes you come across some geospatial data that is in an unknown projection. There is no readily available tool which helps solve this problem.\n\nThis quick website provides one solution. You enter the (X, Y) coordinates of one of your points, and the (lon, lat) of your best guess as to where the point should project be. (Presumably you know something about the location of the data!) What the Proj then tries every projection it knows to see which is closest.\n\nSource code on Github\n\nPlay with it in online: https://stevage.github.io/WhatTheProj/\n\ngetlon.lat is a tool for choosing between the dozens of different geocoding APIs on the market, and their many different pricing plans. I developed it in the process of researching plans, while working at Our Community. Reading the fine print, there are many restrictions on geocoding services which aren’t immediately obvious. These include:\n\nNot being able to store geocodes, either at all, or beyond 30 days.\n\nNot being able to display geocodes on map tiles from competitors.\n\nNot being able to display geocodes using any other service at all.\n\nNot being able to display the actual latitude and longitudes.\n\nNot being able to combine geocodes with other forms of data.\n\nNot being able to use the service in a commercial context.\n\nAnd many others.\n\nTechnically, the site is not very complicated. The complication arises from developing a generic formula for calculating the expected monthly fee, given all the many different variables, in a way that is roughly fair to every provider. For instance, if a provider has no explicit mounthly cap on geocodes, but only allows 1 geocode per second, is it really true to describe that as 2.6 million geocodes per month? It would be extremely difficult in practice for any user to actually get anywhere near that.\n\nLive site: getlon.lat\n\nThis project, ultimately for the Victoria Department of Education, helps school planners allocate resources, by visualising the best available information. That includes where school-aged children live, the proportion of them that attend government schools, the existing school infrastructure, and how much (if any) spare capacity there is.\n\nThe data is made more complex by the number of dimensions along which data can be analysed:\n\nYear (2018 to 2037)\n\nYear level (Prep to Year 12)\n\nTwo different scenarios which contain different assumptions for future projections.\n\nMany different geographic boundary types, such as Statistical Areas (1,2,3,4), Local Government Areas, Suburbs, and department-specific reporting areas.\n\nI built the front end using VueJS and Mapbox-GL-JS. It’s essentially a static site, using pre-baked vector tiles jam-packed with as many data attributes as possible. A fully automated pipeline of NodeJS scripts uses Tippecanoe to generate these vector tiles, combining data provided as Shapefiles and CSV.\n\nCity of Melbourne’s real-time parking data was released for the first time as open data in last 2017, the first local government (not counting ACT) to do so. To help potential users of the data make sense of it, I built an embeddable interactive map which visualises where the on-street spaces are, their current status (occupied or not), and their time restrictions. I also prepared some of the SQL queries, which are pretty complex.\n\nParking data is more complicated than you think: first, the relationship between physical infrastructure such as bays, spaces, signs, ticket machines, sensors. Next, restrictions are expressed for a variable number of time blocks covering different sections of each day, on different sets of days of the week - up to 6 different non-overlapping restrictions. Those restrictions include complications like loading zones, different time lengths for people with disabled permits, clearways, and so forth. And finally, there is the actual current status: occupied, non-occupied - and a couple of other statuses, such as out of use, and sensor apparently offline.\n\nIt’s also challenging to convey two independent variables (status and restriction) for each point. We chose to use the interior of each circle to convey status, while the outer halo conveys the relevant restriction. Switching on the “disabled permit” checkbox alters the colour scheme. For instance, “disabled only” spots go from being grey to bright magenta, as now they are desirable.\n\nSee it here: On-street parking data.\n\nSource code on Github\n\nThe Open Council Data Aggregator was a prototype platform that solves the problem of scale for local government data. Using the growing number of open datasets published by local governments that follow the Open Council Data Standards, it produces a simple endpoint where a given dataset (such as garbage collection zones) can be queried, without concern for where each council originally published that dataset.\n\nThe idea was originally workshopped through an REA (realestate.com.au) internal hackathon, then I redeveloped it from scratch while working at the City of Melbourne. How it works:\n\nEach “topic” (such as Public Toilets) is defined by a tiny set of parameters, such as its name and keywords to search for.\n\nThe aggregator searches a number of known locations for council open data presences, looking for these topics.\n\nAll the matching datasets are downloaded, converted to GeoJSON, and aggregated into a single topic GeoJSON.\n\nThat file is uploaded to Mapbox for display, and also to IBM Cloudant for querying.\n\nOther Cloudant queries allow asnwering questions like “How many councils support this topic”.\n\nA front end, built using Google’s “Material Design Lite”, lets developers see the current state of each topic, and lets data publishers see whether their data meets the standard.\n\nBack end (Github): github.com/OpenCouncilData/Aggregator\n\nFront end (Github): github.com/opencouncildata/Platform\n\nLive site: opencouncildata.github.io/Platform/ (Partially non-functional due to Cloudant retiring their free plan)\n\nSaltyMill is a fairly complex SaltStack recipe that deploys a number of map-related components that can be very fiddly to set up and integrate manually. Given a fresh Linux box (usually on OpenStack), with sufficient memory and disk space, the complete stack it sets up:\n\nCan automatically download an OpenStreetMap extract for a given area.\n\nLoads that into PostGIS.\n\nAlso fetches other data, such as OSM coastlines, and DEM terrain data.\n\nProvides TileMill, allowing users to create styled tile maps from all that data.\n\nUses the Open Source Routing Machine to provide a routing service on that data.\n\nProvides an OSRM-Web front end, so people on the web can plan a route, using the customised tiles and data.\n\nI built SaltyMill to solve two problems:\n\nmanaging the complex cycletour.org stack (and wanting to be able to rebuild it if necessary)\n\ncreating TileMill servers on demand for mapping workshops I was teaching under the researchmaps.net program.\n\nA nice side-effect was that it was very easy to set up custom cycletour.org spin-offs for different areas overseas: Iceland, Scotland and Norway.\n\nIt worked fairly well, although I never felt that I got that much value out of using SaltStack. Using a series of Bash scripts and my own custom logic in Python or NodeJS would probably have been simpler, and required less time simply dealing with the specifics of Salt.\n\nhttps://github.com/stevage/saltymill\n\nThe joke that went too far, this silly idea was cooked up by good friend Maia Sauren, who thought it would be a good community-building exercise for Open Knowledge Melbourne. She led the team of snark content creators, someone else did the original design and I put it together. I’ve since rebuilt most of it several times, to provide it with a suitably hipster cartography.\n\nThe article on page 3 of The Age gave it far more credit than it deserved, not to mention this ABC Radio Melbourne piece. It still gets quite a lot of traffic. Perhaps due to the accidental hipster SEO text."
    }
}