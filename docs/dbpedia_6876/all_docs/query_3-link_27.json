{
    "id": "dbpedia_6876_3",
    "rank": 27,
    "data": {
        "url": "https://github.com/warren-bank/Android-WebCast",
        "read_more_link": "",
        "language": "en",
        "title": "WebCast: Android app to extract video (file/stream) URLs from websites and watch them elsewhere (internal/external video player, Google Chromecast, ExoAirPlayer).",
        "top_image": "https://opengraph.githubassets.com/a8bc99266015de78a688d207fa6989e77934b59595c92d36e5e3939132f9f916/warren-bank/Android-WebCast",
        "meta_img": "https://opengraph.githubassets.com/a8bc99266015de78a688d207fa6989e77934b59595c92d36e5e3939132f9f916/warren-bank/Android-WebCast",
        "images": [
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/01-BrowserActivity-blank.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/02-BrowserActivity-leftdrawer-bookmarks.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/03-BrowserActivity-rightdrawer-videos.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/04-BrowserActivity-menu.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/05-SettingsActivity-preferences.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/06-SettingsActivity-videoplayer.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/07-BrowserActivity-leftdrawer-open-bookmark.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/08-BrowserActivity-ABCNews.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/09-BrowserActivity-ABCNews-rightdrawer-videos.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/10-BrowserActivity-ABCNews-rightdrawer-open-video.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/11-VideoActivity-internalvideoplayer-ABCNews.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/12-VideoActivity-internalvideoplayer-ABCNews-landscape-fullscreen.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/13-VideoActivity-internalvideoplayer-ABCNews-chromecast-devicelist.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/14-VideoActivity-internalvideoplayer-ABCNews-chromecast-connected-casting.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/15-Android-System-MediaRouter.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/16-BrowserActivity-externalvideoplayer-implicit-intent-chooser.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/17-ExoAirPlayerSenderActivity-landscape-zoom.png",
            "https://github.com/warren-bank/Android-WebCast/raw/05-webcast-filename-media3/screenshots/18-ExoAirPlayerSenderActivity.png",
            "https://github.com/warren-bank/crx-webcast-reloaded/raw/gh-pages/chrome_extension/2-release/popup/img/chromecast.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "warren-bank"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Android app to extract video (file/stream) URLs from websites and watch them elsewhere (internal/external video player, Google Chromecast, ExoAirPlayer). - warren-bank/Android-WebCast",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/warren-bank/Android-WebCast",
        "text": "Android app to extract video (file/stream) URLs from websites and watch them elsewhere (internal/external video player, Google Chromecast, ExoAirPlayer).\n\nScreenshots..\n\nBrowserActivity is shown when the app is started, and includes:\n\na very basic web browser\n\naddress bar\n\nWebView\n\nactionbar icons:\n\nbookmark toggle\n\nadd/remove current website URL to/from list of persistently saved Bookmarks\n\nactionbar menu items:\n\nBookmarks\n\nopen drawer on left: Bookmarks\n\nVideos\n\nopen drawer on right: Videos\n\nSettings\n\nopen SettingsActivity\n\nExit\n\nclose all UI and exit the app\n\ndrawer on left: Bookmarks\n\ncontains a persistent list of:\n\nwebsite URLs that have been saved via the bookmark toggle icon\n\nvideo URLs that have been saved via the Videos drawer\n\nclick a list item to:\n\nopen website URL in WebView\n\nwatch video URL\n\nSettingsActivity determines the particular action to be performed\n\nlong click a list item to:\n\nrename\n\ndelete\n\ndrawer on right: Videos\n\ncontains a transient list of video URLs that have been found on the web page that is currently loaded in the WebView\n\nthis list is cleared each time the WebView navigates to a new web page\n\nclick a list item to:\n\nadd video URL to list of persistently saved Bookmarks\n\nwatch video URL\n\nSettingsActivity determines the particular action to be performed\n\nlong click a list item to:\n\ndelete\n\nSettingsActivity is started from the actionbar menu in BrowserActivity, and includes:\n\nVideo Player to select whether to watch videos using..\n\ninternal w/ Chromecast sender\n\nstart VideoActivity\n\nexternal\n\nstart Activity chooser w/ an implicit Intent\n\naction\n\nandroid.intent.action.VIEW\n\ndata\n\nvideo URL\n\ntype\n\nmime-type for format of video\n\nextras\n\nreferUrl\n\n(String) referer URL\n\nused by ExoAirPlayer\n\nExoAirPlayer sender\n\nstart ExoAirPlayerSenderActivity\n\nHLS-Proxy configuration\n\nstart Activity chooser w/ an implicit Intent\n\naction\n\nandroid.intent.action.VIEW\n\ndata\n\nhttp://webcast-reloaded.surge.sh/proxy.html#/watch/${base64_video}/referer/${base64_referer}\n\ntype\n\n\"text/html\"\n\nstart HlsProxyConfigurationActivity\n\nonly when there is no Activity having a matching Intent filter\n\nwhich should never happen, since any standard web browser should offer to handle this Intent\n\nVideoActivity is started when a video URL is watched using the internal video player, and includes:\n\nExoPlayer\n\ndisplays an icon in lower right corner of video controls toolbar to toggle fullscreen mode on/off\n\nChromecast sender\n\ndisplays an actionbar cast icon when at least one Google Chromecast is detected on LAN\n\nwhen connected to a Chromecast\n\nvideo URLs are communicated to the receiver app running in the Chromecast\n\nthe Chromecast receiver app loads the video URL in an embedded HTML5 video player\n\ntransfer of video data occurs directly between the Chromecast and the server that hosts the video URL\n\ntransfer would not be effected by any of the following events:\n\nVideoActivity stopped\n\nBrowserActivity stopped\n\nWebCast app exited\n\nAndroid device powered off\n\nlist of video URLs\n\nclick a list item to:\n\nplay video URL\n\nif connected to a Chromecast:\n\non Chromecast\n\notherwise:\n\non Android, in ExoPlayer\n\nall HTTP requests include the referer url\n\nExoAirPlayerSenderActivity is started when a video URL is watched using the ExoAirPlayer sender, and includes:\n\nWebView that loads a single web page\n\nURL of the web page depends on version of Android\n\nAndroid 5.0 and newer\n\nversion using ES6+ modern javascript\n\nAndroid 4.x and older\n\nversion using ES5 compliant javascript\n\nURL hash contains:\n\n#/watch/${base64_video}/referer/${base64_referer}\n\nweb page reads data from URL hash and pre-populates fields:\n\nvideo url\n\nreferer url\n\nweb page reads data from cookies and pre-populates fields:\n\nhost\n\nport\n\nhttps\n\nprovides a basic UI to control any ExoAirPlayer receiver app that is reachable through the network\n\nHlsProxyConfigurationActivity is started when a video URL is watched using HLS-Proxy configuration on a device without any available web browser, and includes:\n\nWebView that loads an ES5 compliant web page\n\nURL hash contains:\n\n#/watch/${base64_video}/referer/${base64_referer}\n\nweb page reads data from URL hash and pre-populates fields:\n\nvideo url\n\nreferer url\n\nweb page reads data from cookies and pre-populates fields:\n\nhost\n\nport\n\nhttps\n\nclicking the Load Player button performs the following tasks:\n\nconfigures a new video URL that redirects the HLS manifest through HLS-Proxy\n\nredirects WebView to another ES5 compliant web page that provides optional endpoint destinations for the proxied HLS manifest\n\nES6 web page for ExoAirPlayer sender\n\nES5 web page for Chromecast sender\n\nin WebView on Android 4.x and older:\n\nvideo player functionality does not work\n\nin WebView on Android 5.0 and newer:\n\nvideo player functionality works\n\nChromecast sender functionality does not work\n\nImportant Caveats\n\nsome video URLs may play in WebCast and ExoAirPlayer, but cannot play on Chromecast or other external video players\n\nthis can occur when a video URL is hosted by a server that uses the Referer HTTP request header to restrict access, which is a common strategy\n\nWebCast and ExoAirPlayer have the functionality to configure the value of this header for each unique video URL\n\nChromecast receiver apps cannot change the value of this header because they are restrained by standard browser security policies\n\nthe specs for XHR and fetch forbid changing certain HTTP request headers, including Referer\n\nthe WebCast Chromecast receiver app\n\nattempts to change the value of this header\n\nreveals in the remote debugger console that this attempt raises the warning:\n\nRefused to set unsafe header \"referer\"\n\nother external video players would need to:\n\nread the referUrl extra in the starting Intent\n\nconfigure its HTTP client library to change the value of this header\n\nHLS-Proxy provides a convenient general-purpose workaround\n\nsetup for integration with WebCast:\n\ninstall HLS-Proxy\n\nnpm install --global \"@warren-bank/hls-proxy\"\n\ninstall WebMonkey\n\napp to open HLS-Proxy configuration\n\nin WebMonkey\n\ninstall WebCast-Reloaded userscript\n\nadds enhanced functionality to the ES5 compliant web page that provides HLS-Proxy configuration\n\nenables a button labeled: Start App\n\nwhen clicked:\n\nstart Activity chooser w/ an implicit Intent\n\naction\n\nandroid.intent.action.VIEW\n\ndata\n\nproxied HLS manifest URL\n\ntype\n\n\"application/x-mpegurl\"\n\nin WebCast\n\nSettings > Video Player > HLS-Proxy configuration\n\nusage:\n\nrun HLS-Proxy\n\nhlsd --port 8080 --req-insecure --useragent \"Chrome/90\"\n\nin WebCast\n\nnavigate internal WebView to a page having the desired HLS video stream\n\nopen the Videos drawer (on right)\n\nclick on the URL for the desired HLS video stream\n\nclick: Watch\n\nan Activity chooser will start\n\nWebMonkey will be included in the list of apps that contain a matching Activity\n\nclick: WebMonkey\n\nin WebMonkey\n\nconfigure the location of your running instance of HLS-Proxy:\n\nhost\n\nport\n\nhttps\n\nclick: Start App\n\nan Activity chooser will start\n\nWebCast will be included in the list of apps that contain a matching Activity\n\nclick: WebCast Video Player\n\nin WebCast\n\nclick the Chromecast sender icon to cast the proxied HLS video stream to a Chromecast device\n\nthe Android System WebView component is wholly responsible for the web browser experience\n\nthis component has a complicated history\n\nwithout going into detail:\n\non versions of Android < 5.0\n\nthe WebView component is baked into the firmware\n\ncannot be updated\n\ndoes a poor job loading modern webpages, as the javascript language (ES6+) and html spec (HTML5) have changed significantly\n\non versions of Android >= 5.0\n\nthe WebView component is a standalone application\n\ncan be updated\n\non versions of Android >= 7.0\n\nthe WebView component is superseded by a component of the Google Chrome web browser, when it is installed and enabled\n\ncan be updated\n\nOrganization of Git Repo\n\nstale branches\n\n01-foundation\n\ncollection of small apps to develop and test experimental features\n\n02-webcast-httpclient\n\nused an external HTTP client library: Apache HttpClient\n\nused the Content-Type response header to detect video files\n\n03-webcast-okhttp\n\nused an external HTTP client library: okhttp\n\nused the Content-Type response header to detect video files\n\n04-webcast-filename\n\nuses WebView to download all HTTP requests\n\nuses regular expressions to detect file extensions associated with video formats in URL requests\n\nactive branches\n\n05-webcast-filename-media3\n\nuses WebView to download all HTTP requests\n\nuses regular expressions to detect file extensions associated with video formats in URL requests\n\nbuilds upon the 04-webcast-filename branch, and migrates from ExoPlayer to AndroidX Media3\n\n00-chromecast-receiver-app\n\nWebCast Chromecast receiver app\n\ngh-pages\n\nWebCast Chromecast receiver app\n\nthe HEAD of this branch should always reference/alias the HEAD of the 00-chromecast-receiver-app branch\n\nhosted by GitHub Pages\n\nHighlights of Source Code\n\nidentification of video URLs in outbound HTTP requests\n\nBrowserWebViewClient\n\nregex to detect video files\n\nsame methodology as implemented by a web browser extension\n\n\"WebCast-Reloaded\" Chromium extension\n\nregex to detect video files\n\ncopyright: Warren Bank\n\nlicense: GPL-2.0"
    }
}