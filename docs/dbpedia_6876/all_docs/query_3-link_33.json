{
    "id": "dbpedia_6876_3",
    "rank": 33,
    "data": {
        "url": "https://github.com/warren-bank/crx-webcast-reloaded",
        "read_more_link": "",
        "language": "en",
        "title": "reloaded: Cast web videos to Google Chromecast from any Chromium",
        "top_image": "https://opengraph.githubassets.com/cb8177cdb216a446fd607ddc1aec6207132df88ac3f820f1b6f295246284d0a1/warren-bank/crx-webcast-reloaded",
        "meta_img": "https://opengraph.githubassets.com/cb8177cdb216a446fd607ddc1aec6207132df88ac3f820f1b6f295246284d0a1/warren-bank/crx-webcast-reloaded",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "warren-bank"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Cast web videos to Google Chromecast from any Chromium-based desktop browser. - warren-bank/crx-webcast-reloaded",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/warren-bank/crx-webcast-reloaded",
        "text": "WebCast is a really nice enhancement to Chromium-based desktop web browsers\n\nIts purpose is to identify video files as they are loaded into a webpage, and provide a mechanism by which to cast their links\n\nwhen a link is \"cast\", Chromecast uses its embedded HTML5 browser to play the video\n\nthe device which was used to \"cast\" the link doesn't proxy the stream\n\nThe tool consists of two parts:\n\nan external website\n\nan AngularJS SPA (single page app)\n\nthe default route allows a user to enter the URL to a video file\n\nanother route can be passed a base64 encoded URL to a video file\n\nafter a URL is received, the following page elements are rendered:\n\nan HTML5 video player\n\na Chromecast button, which uses Google APIs to scan for Chromecasts on the LAN and display a list of devices that could be used to play the video file\n\na Chromium extension\n\nit hooks into the HTTP API to listen for requested URLs that end with a supported file extension\n\neach URL that matches is made available to \"cast\"\n\nclicking on any such video will open a new browser tab to WebCast's \"external website\" component\n\nit's provided with the base64 encoded URL of the video file\n\nWebCast hasn't been updated since:\n\nversion 0.2.1\n\nJune 2, 2014\n\nIt tests for the following file extensions:\n\n.mp4\n\n.mov\n\nPurpose for Fork:\n\nkeep a backup of the \"external website\"\n\ndetect more types of video formats:\n\n.3gp\n\n.avi\n\n.m1v\n\n.m4v\n\n.mkv\n\n.mov\n\n.mp4\n\n.mp4v\n\n.mpeg\n\n.mpg\n\n.mpg2\n\n.mpv\n\n.ogm\n\n.ogv\n\n.webm\n\n.xvid\n\n.m3u8\n\nHLS: HTTP Live Streaming\n\n.mpd\n\nMPEG-DASH\n\n.ism, .ismv, .ismc, .ism/Manifest\n\nMicrosoft Smooth Streaming\n\nAdditional Notes:\n\nnot all of the videos detected ( see above ) will work in Chromecast\n\nthe preference is to find too many video links, rather than too few\n\nthe \"external website\":\n\ncan be used without any Chromium extension\n\nthe URL to cast would need to be manually entered into a form field\n\ncan be loaded into the Chromium desktop web browser from the local filesystem\n\nex: file:///C:/path/to/external_website/index.html#/watch/:base64-encoded-URL\n\nex: file:///C:/path/to/external_website/index.html#/watch/:base64-encoded-URL/subtitle/:base64-encoded-URL\n\nno server is required\n\nhosted:\n\noriginal WebCast player\n\nGitHub Pages (HTTPS)\n\nmain entry-point\n\nmirror of WebCast player\n\nVisualOn HTML5 Player\n\nTHEOplayer HTML5 Video Player\n\nClappr HTML5 Video Player - stable release\n\nClappr HTML5 Video Player - stable release w/ experimental support for using external subtitles on Chromecast\n\nClappr HTML5 Video Player - latest release\n\nVideo.js HTML5 Video Player - stable release\n\nVideo.js HTML5 Video Player - latest release\n\nredirect entry-point for HLS-Proxy\n\nmirror: surge.sh CDN (HTTP)\n\nmain entry-point\n\nmirror of WebCast player\n\nVisualOn HTML5 Player\n\nTHEOplayer HTML5 Video Player\n\nClappr HTML5 Video Player - stable release\n\nClappr HTML5 Video Player - stable release w/ experimental support for using external subtitles on Chromecast\n\nClappr HTML5 Video Player - latest release\n\nVideo.js HTML5 Video Player - stable release\n\nVideo.js HTML5 Video Player - latest release\n\nredirect entry-point for HLS-Proxy\n\nmirror: raw.githack.com CDN (HTTP)\n\nmain entry-point\n\nmirror of WebCast player\n\nVisualOn HTML5 Player\n\nTHEOplayer HTML5 Video Player\n\nClappr HTML5 Video Player - stable release\n\nClappr HTML5 Video Player - stable release w/ experimental support for using external subtitles on Chromecast\n\nClappr HTML5 Video Player - latest release\n\nVideo.js HTML5 Video Player - stable release\n\nVideo.js HTML5 Video Player - latest release\n\nredirect entry-point for HLS-Proxy\n\nPossible To-Dos:\n\nadd an option to the Chromium extension that allows the user to change the URL of the \"external website\"\n\nchange the methodology used by the Chromium extension to detect matching video files\n\ninspect the HTTP response \"Content-Type\" header\n\nLinks to Related Apps for Android:\n\nWebCast for Android\n\nminimal app\n\napk size is around 3.5 MB\n\nonly does what it says it will do\n\nopen source, no ads, no data collection, no communication with any 3rd-party server\n\nuses the same methodology to detect video formats (as the WebCast-Reloaded Chromium extension)\n\nnot perfect, but works pretty darn good\n\nEZ Web Video Cast\n\na minimal app that doesn't have ads and works great\n\ncopyright:\n\nWebCast\n\nTHEOplayer HTML5 Video Player\n\nVisualOn HTML5 Player\n\nWarren Bank\n\nlicense:\n\nGPL-2.0\n\nonly applies to changes made to code in the original WebCast extension"
    }
}