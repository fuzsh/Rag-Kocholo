{
    "id": "dbpedia_4770_1",
    "rank": 52,
    "data": {
        "url": "https://foldoc.org/ALGOL%2B60",
        "read_more_link": "",
        "language": "en",
        "title": "ALGOL 60 from FOLDOC",
        "top_image": "https://foldoc.org/im/favicon-32x32.png",
        "meta_img": "https://foldoc.org/im/favicon-32x32.png",
        "images": [
            "https://foldoc.org/foldoc.gif",
            "https://foldoc.org/orangerss.gif",
            "https://foldoc.org/https/pixel.quantserve.com/pixel/p-48Rosdvs3EiOc.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/im/apple-touch-icon.png",
        "meta_site_name": "",
        "canonical_link": "https://foldoc.org/ALGOL+60",
        "text": "ALGOL 60\n\n<language>\n\nALGOrithmic Language 1960.\n\nA portable language for scientific computations. ALGOL 60 was small and elegant. It was block-structured, nested, recursive and free form. It was also the first language to be described in BNF. There were three lexical representations: hardware, reference, and publication. The only structured data types were arrays, but they were permitted to have lower bounds and could be dynamic. It also had conditional expressions; it introduced :=; if-then-else; very general \"for\" loops; switch declaration (an array of statement labels generalising Fortran's computed goto). Parameters were call-by-name and call-by-value. It had static local \"own\" variables. It lacked user-defined types, character manipulation and standard I/O. See also EULER, ALGOL 58, ALGOL 68, Foogol. [\"Report on the Algorithmic Language ALGOL 60\", Peter Naur ed., CACM 3(5):299-314, May 1960].\n\nNearby terms:\n\nALGOL ♦ ALGOL 58 ♦ ALGOL 60 ♦ ALGOL 60 Modified ♦ ALGOL 60 Revised ♦ ALGOL 68"
    }
}