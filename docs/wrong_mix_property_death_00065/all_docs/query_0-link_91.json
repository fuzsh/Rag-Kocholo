{
    "id": "wrong_mix_property_death_00065_0",
    "rank": 91,
    "data": {
        "url": "https://blog.wolfram.com/2016/11/14/celebrating-gottfried-leibniz-on-the-300th-anniversary-of-his-death/",
        "read_more_link": "",
        "language": "en",
        "title": "Celebrating Gottfried Leibniz on the 300th Anniversary of His Death—Wolfram Blog",
        "top_image": "https://www.wolfram.com/share.png",
        "meta_img": "https://www.wolfram.com/share.png",
        "images": [
            "https://blog.wolfram.com/common/framework/img/spikey.en.png",
            "https://blog.wolfram.com/common/framework/img/wolfram.en.png",
            "https://blog.wolfram.com/common/framework/img/slogan.en.png",
            "https://blog.wolfram.com/wp-content/themes/wolfram2020/images/blog-logo.svg",
            "https://content.wolfram.com/sites/39/2016/11/Leibniz-lead-image-smaller.png",
            "https://content.wolfram.com/sites/39/2016/11/Leibnizs-calculator-and-diagram.png",
            "https://content.wolfram.com/sites/39/2024/07/blog-chemestry-update-tile.png",
            "https://content.wolfram.com/sites/39/2024/05/bl053024img16a.png",
            "https://content.wolfram.com/sites/39/2024/04/bioDigest-tile-1.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "wolfram research inc",
            "mathematica",
            "wri",
            "math mathematical typesetting notation",
            "mathsource",
            "mathlink",
            "technical engineering mathematics finance financial education science scientific graphics software",
            "notebook",
            "stephen wolfram",
            "technical publishing",
            "technical computing",
            "programming language",
            "symbolic computation",
            "computer algebra"
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2016-11-14T00:00:00",
        "summary": "",
        "meta_description": "Read about how Leibniz’s visions of the future are embodied in Wolfram technologies, from early computing to language philosophy to invention of binary.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://blog.wolfram.com/2016/11/14/celebrating-gottfried-leibniz-on-the-300th-anniversary-of-his-death/",
        "text": "Today is the 300th anniversary of the death of Gottfried Leibniz, a man whose work has had a deep influence on what we do here at Wolfram Research. He was born July 1, 1646, in Leipzig, and died November 14, 1716, in Hanover, which was, at the time, part of the Holy Roman Empire. I associate his name most strongly with my time learning calculus, which he invented in parallel with Isaac Newton. But Leibniz was a polymath, and his ideas and influence were much broader than that. He invented binary numbers, the integral sign and an early form of mechanical calculator.\n\nIn his book Idea Makers, Stephen Wolfram devotes a chapter to Leibniz. Wolfram visited the Leibniz archive in Hanover and wrote about it:\n\nLeafing through his yellowed (but still robust enough for me to touch) pages of notes, I felt a certain connection—as I tried to imagine what he was thinking when he wrote them, and tried to relate what I saw in them to what we now know after three more centuries…. [A]s I’ve learned more, and gotten a better feeling for Leibniz as a person, I’ve realized that underneath much of what he did was a core intellectual direction that is curiously close to the modern computational one that I, for example, have followed.\n\nLeibniz was an early visionary of computing, and built his own calculator, which Wolfram photographed when he visited the archive.\n\nIn a recent talk about AI ethics, Wolfram talked more about how Leibniz’s visions of the future are embodied in current Wolfram technologies:\n\nLeibniz—who died 300 years ago next month—was always talking about making a universal language to, as we would say now, express [mathematics] in a computable way. He was a few centuries too early, but I think now we’re finally in a position to do this…. With the Wolfram Language we’ve managed to express a lot of kinds of things in the world—like the ones people ask Siri about. And I think we’re now within sight of what Leibniz wanted: to have a general symbolic discourse language that represents everything involved in human affairs….\n\nIf we look back even to Leibniz’s time, we can see all sorts of modern concepts that hadn’t formed yet. And when we look inside a modern machine learning or theorem proving system, it’s humbling to see how many concepts it effectively forms—that we haven’t yet absorbed in our culture.\n\nThe Wolfram Language is a form of philosophical language, what Leibniz called a lingua generalis, a universal language to be used for calculation. What would Leibniz have made of the tools we have today? How will these tools transform our world? In his essay on Leibniz, Wolfram mulls this over:\n\nIn Leibniz’s whole life, he basically saw less than a handful of computers, and all they did was basic arithmetic. Today there are billions of computers in the world, and they do all sorts of things. But in the future there will surely be far far more computers (made easier to create by the Principle of Computational Equivalence). And no doubt we’ll get to the point where basically everything we make will explicitly be made of computers at every level. And the result is that absolutely everything will be programmable, down to atoms. Of course, biology has in a sense already achieved a restricted version of this. But we will be able to do it completely and everywhere.\n\nLeibniz was also a major figure in philosophy, best known for his contention that we live in the “best of all possible worlds,” and his development in his book Monadology of the concept of the monad: an elementary particle of metaphysics that has properties resulting in what we observe in the physical world.\n\nWolfram speculates that the concept of the monad may have motivated Leibniz’s invention of binary:\n\nWith binary, Leibniz was in a sense seeking the simplest possible underlying structure. And no doubt he was doing something similar when he talked about what he called “monads”. I have to say that I’ve never really understood monads. And usually when I think I almost have, there’s some mention of souls that just throws me completely off.\n\nStill, I’ve always found it tantalizing that Leibniz seemed to conclude that the “best of all possible worlds” is the one “having the greatest variety of phenomena from the smallest number of principles”. And indeed, in the prehistory of my work on A New Kind of Science, when I first started formulating and studying one-dimensional cellular automata in 1981, I considered naming them “polymones”—but at the last minute got cold feet when I got confused again about monads.\n\nDespite being the daughter of a physicist and having heard about elementary particles since infancy, I am a bit boggled by the concept of the monad. As I contemplate Leibniz’s strange bridge between metaphysics and such things as electrons or the mathematical definition of a point, I am reminded of lines from Candide, a book Voltaire wrote satirizing the notion that we live in the best of all possible worlds:\n\n“But for what purpose was the earth formed?” asked Candide.\n\n“To drive us mad,” replied Martin.\n\nYet knowledge is increasingly digitized in the twenty-first century, a process that relies on that binary language Leibniz invented. I think perhaps that if monads as such did not exist in Leibniz’s time, it may have become necessary to invent them."
    }
}