{
    "id": "dbpedia_993_0",
    "rank": 67,
    "data": {
        "url": "https://stackoverflow.com/questions/34099489/printing-out-178-character-string-in-270-characters-of-brainfck",
        "read_more_link": "",
        "language": "en",
        "title": "Printing out 178-character string in 270 characters of brainf*ck",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://www.gravatar.com/avatar/c3ecc86d5cfdd5636d0c9498b71881af?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://lh5.googleusercontent.com/-AYhjTWVrGTc/AAAAAAAAAAI/AAAAAAAAAN0/u_1BqARfLDg/photo.jpg?sz=64",
            "https://stackoverflow.com/posts/34099489/ivc/613d?prg=b80b7d7f-cf10-416c-96b3-e7a59a5b382f"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "A A"
        ],
        "publish_date": "2015-12-04T23:59:21",
        "summary": "",
        "meta_description": "I’m trying to print out a 178-character string in brainfuck. This wouldn’t be a problem except I’m limited to using 270 characters of brainfuck. I was thinking of hashing the 178-character string u...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/34099489/printing-out-178-character-string-in-270-characters-of-brainfck",
        "text": "It's most probably impossible. Brainfuck isn't magic. The current record for shortest code to print the 13-char string \"Hello, World!\" is an entire 78 bytes.:\n\n--<-<<+[+[<+>--->->->-<<<]>]<<--.<++++++.<<-..<<.<+.>>.>>.<<<.+++.>>.>>-.<<<+.\n\nI suggest you read the post, but a TL;DR for you is that the tape is first initialized with a recurrence relation, then poke around the tape to print the appropriate characters.\n\n78 bytes for thirteen characters. On a relatively simple string. That's 6 bytes for each character. Using the same metric as a rough guide (and this result is an underestimate), your string would take 1068 characters--at a minimum. Given that, however, the tape initialization occurs only once, and this can be surprisingly small, you may (may) be able to get it down to the high 900 or 800s. Your string also happens to be more complex and differ very widely in ASCII values, something even a recurrence relation is unlikely to solve. I however have no example that small."
    }
}