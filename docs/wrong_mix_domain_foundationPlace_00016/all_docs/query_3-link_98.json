{
    "id": "wrong_mix_domain_foundationPlace_00016_3",
    "rank": 98,
    "data": {
        "url": "https://dapr.io/",
        "read_more_link": "",
        "language": "en",
        "title": "Distributed Application Runtime",
        "top_image": "https://dapr.io/images/favicon.png",
        "meta_img": "https://dapr.io/images/favicon.png",
        "images": [
            "https://dapr.io/images/dapr.svg",
            "https://dapr.io/images/dapr_hero.png",
            "https://dapr.io/images/casestudy/case-study-derivco.png",
            "https://dapr.io/images/casestudy/case-study-tempestive.png",
            "https://dapr.io/images/casestudy/case-study-hdfc.png",
            "https://dapr.io/images/casestudy/case-study-defacto.png",
            "https://dapr.io/images/casestudy/case-study-atbay.png",
            "https://dapr.io/images/casestudy/case-study-bosch.png",
            "https://dapr.io/images/1_automate.gif",
            "https://dapr.io/images/2_best_practices.gif",
            "https://dapr.io/images/3_integrate.gif",
            "https://dapr.io/images/4_adopt.gif",
            "https://dapr.io/images/adoptedby/ibm.png",
            "https://dapr.io/images/adoptedby/pwc.png",
            "https://dapr.io/images/adoptedby/intel.png",
            "https://dapr.io/images/adoptedby/microsoft.png",
            "https://dapr.io/images/adoptedby/alibaba.png",
            "https://dapr.io/images/adoptedby/zeiss.png",
            "https://dapr.io/images/adoptedby/nasa.png",
            "https://dapr.io/images/adoptedby/hdfcbank.png",
            "https://dapr.io/images/adoptedby/cisco.png",
            "https://dapr.io/images/adoptedby/rakuten.png",
            "https://dapr.io/images/adoptedby/lufthansa.png",
            "https://dapr.io/images/adoptedby/zscaler.png",
            "https://dapr.io/images/adoptedby/bosch.png",
            "https://dapr.io/images/adoptedby/fujitsu.png",
            "https://dapr.io/images/adoptedby/grafana.png",
            "https://dapr.io/images/adoptedby/defacto.png",
            "https://dapr.io/images/adoptedby/atbay.png",
            "https://dapr.io/images/adoptedby/man-group.png",
            "https://dapr.io/images/adoptedby/wortell.png",
            "https://dapr.io/images/adoptedby/composabl.png",
            "https://dapr.io/images/adoptedby/derivco.png",
            "https://dapr.io/images/adoptedby/tempestive.png",
            "https://dapr.io/images/cncf-color.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "dapr",
            "microservices",
            "distributed applications",
            "runtime",
            "kubernetes"
        ],
        "tags": null,
        "authors": [
            "Dapr Maintainers"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "APIs for building secure and reliable microservices",
        "meta_lang": "en",
        "meta_favicon": "https://dapr.io/images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://dapr.io/",
        "text": "Best practices to build secure and resilient applications\n\nDapr includes built-in security features that are \"on by default\". Developers and ops can set application-centric policies on APIs, services, and components to limit access without getting into low level networking concerns. Communication is automatically encrypted in-transit with mTLS.\n\nDapr also provides resiliency policies to protect against failures due to any number of issues, including hardware failures, unexpected throughput, or application lifecycle events, such as scaling out and application restarts. Dapr provides specific capabilities that detect failures and enable configurable retries, back-offs, circuit breakers and timeouts.\n\nYour browser does not support the video tag.\n\nService invocation\n\nService invocation enables applications to communicate with each other through well-known endpoints in the form of http or gRPC messages. Dapr provides an endpoint that acts as a combination of a reverse proxy with built-in service discovery, while leveraging built-in distributed tracing and error handling.\n\n> Read more about Service invocation\n\nPublish subscribe\n\nPub/Sub is a loosely coupled messaging pattern where senders (or publishers) publish messages to a topic, to which subscribers subscribe. Dapr supports the pub/sub pattern between applications.\n\n> Read more about Publish subscribe\n\nState management\n\nApplication state is anything an application wants to preserve beyond a single session. Dapr provides a key/value-based state and query APIs with pluggable state stores for persistence.\n\n> Read more about State management\n\nActors\n\nAn actor is an isolated, independent unit of compute and state with single-threaded execution. Dapr provides an actor implementation based on the virtual actor pattern which provides a single-threaded programming model and where actors are garbage collected when not in use.\n\n> Read more about Actors\n\nWorkflow\n\nThe Workflow API enables you to define long running, persistent processes or data flows that span multiple microservices using Dapr workflows or workflow components. The Workflow API can be combined with other Dapr API building blocks.\n\n> Read more about Workflow\n\nSecrets\n\nDapr provides a secrets API and integrates with secret stores such as public cloud stores, local stores and Kubernetes to store the secrets. Services can call the secrets API to retrieve secrets, for example to get a connection string to a database.\n\n> Read more about Secrets\n\nExternal configuration\n\nThe Configuration API enables you to retrieve and subscribe to application configuration items for supported configuration stores. This enables an application to retrieve specific configuration information, for example, at start up or when configuration changes are made in the store.\n\n> Read more about External configuration\n\nBindings\n\nA binding provides a bi-directional connection to an external cloud/on-premise service or system. Dapr allows you to invoke the external service through the Dapr binding API, and it allows your application to be triggered by events sent by the connected service.\n\n> Read more about Bindings\n\nDistributed lock\n\nThe distributed lock API enables you to take a lock on a resource so that multiple instances of an application can access the resource without conflicts and provide consistency guarantees.\n\n> Read more about Distributed lock\n\nCryptography\n\nWith the cryptography API, you can leverage cryptography in a safe and consistent way. Dapr exposes APIs that allow you to perform operations, such as encrypting and decrypting messages, within key vaults or the Dapr sidecar, without exposing cryptographic keys to your application.\n\n> Read more about Cryptography"
    }
}