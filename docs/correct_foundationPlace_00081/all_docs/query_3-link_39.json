{
    "id": "correct_foundationPlace_00081_3",
    "rank": 39,
    "data": {
        "url": "https://live-villanova-catalog.cleancatalog.io/computing-sciences",
        "read_more_link": "",
        "language": "en",
        "title": "Villanova University",
        "top_image": "https://live-villanova-catalog.cleancatalog.io/sites/default/files/favicon_0.ico",
        "meta_img": "https://live-villanova-catalog.cleancatalog.io/sites/default/files/favicon_0.ico",
        "images": [
            "https://live-villanova-catalog.cleancatalog.io/themes/custom/villanova/images/logo.png",
            "https://live-villanova-catalog.cleancatalog.io/themes/custom/villanova/images/logo-footer.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Chair: Daniel Joyce, Ph.D. Office Location: Mendel Science Center Rm. 161 Telephone: (610) 519-7307 Website About The Department of Computing Sciences seeks to provide outstanding education, to advance scholarship, and to engage in activities that benefit society as a whole, in accordance to the University mission. The Department aims to equip students with a solid foundation in computing theory, and to prepare them for lifelong independent learning and innovative thinking in a constantly changing discipline. Its faculty members strive to maintain professional currency, and to involve students and colleagues in their research investigations. These endeavors support the University mission to transmit, pursue, and discover knowledge in an atmosphere of collegiality in the university community. Supported by a liberal arts education, the Department seeks to develop the total person, sensitive to social and ethical concerns affected by the computing discipline, and committed to addressing the needs of a diverse and interconnected modern society.",
        "meta_lang": "en",
        "meta_favicon": "/sites/default/files/favicon_0.ico",
        "meta_site_name": "",
        "canonical_link": "https://live-villanova-catalog.cleancatalog.io/computing-sciences",
        "text": "Computing Sciences\n\nDegrees and Certificates\n\nComputer Science Major\n\nComputer Science Minor\n\nCybersecurity Minor\n\nChair: Daniel Joyce, Ph.D.\n\nOffice Location: Mendel Science Center Rm. 161\n\nTelephone: (610) 519-7307\n\nWebsite\n\nAbout\n\nThe Department of Computing Sciences seeks to provide outstanding education, to advance scholarship, and to engage in activities that benefit society as a whole, in accordance to the University mission. The Department aims to equip students with a solid foundation in computing theory, and to prepare them for lifelong independent learning and innovative thinking in a constantly changing discipline. Its faculty members strive to maintain professional currency, and to involve students and colleagues in their research investigations. These endeavors support the University mission to transmit, pursue, and discover knowledge in an atmosphere of collegiality in the university community. Supported by a liberal arts education, the Department seeks to develop the total person, sensitive to social and ethical concerns affected by the computing discipline, and committed to addressing the needs of a diverse and interconnected modern society.\n\nClasses\n\nCSC 1000 : The Practice of Computing\n\nAnatomy of a computing system including tiny systems such as cell phones; resource management - memory, processes, file structure; network analysis - network topology, performance, privacy, security; application scripting - concepts & practices of programming.\n\nCredits\n\nCredits 3\n\nCSC 1010 : Programming for All\n\nProgramming fundamentals using the Python programming language: data, variables, selection, loops, arrays, input/output, basic graphics and functions. Object-oriented design: encapsulation, objects, classes and methods.\n\nCredits\n\nCredits 3\n\nCSC 1020 : Computing and the Web\n\nInformation representation and manipulation; file systems and directories; compatibility and data exchange; security and privacy; elements of computer architectures and operating systems; computer networks, the Internet, and the World Wide Web; web site design principles and creation; PC-based examples and illustrations.\n\nCredits\n\nCredits 3\n\nCSC 1030 : Prob Solv with Computers\n\nUsing the microcomputer as a problem solving tool; system use; general purpose language programming; spreadsheet analysis and modeling; retrieving information from the Internet; strengths and weaknesses of computer based problem solutions.\n\nCredits\n\nCredits 3\n\nCSC 1035 : Databases for Many Majors\n\nNo background in computing necessary. Design and implementation of your own database as a group project. Cooperative learning techniques to demystify key concepts: the relational model, normalization, the Entity-Relationship model and SQL.\n\nCredits\n\nCredits 3\n\nCSC 1040 : Computing with Images\n\nComputing systems as tools for designing and publishing graphically rich material in many forms; image processing techniques and systems; image style and related tools; digital image processing theory; computational complexity; multimedia presentations.\n\nCredits\n\nCredits 3\n\nCSC 1043 : Laptop Instrument\n\nMusic structure and theory; programming structures, algorithms and language to create music on your laptop; component of Living in the KnowlEdge Society project (NSF) connecting computing with other disciplines.\n\nCredits\n\nCredits 3\n\nCSC 1045 : 3D Modeling and Animation\n\nComputer-assisted animation & its programming dialects; cartoon creation from story-boarding to product delivery; algorithms - efficiency, correctness, understanding via animation.\n\nCredits\n\nCredits 3\n\nCSC 1051 : Algorithms & Data Struc I\n\nObject-oriented design: objects, classes, methods, encapsulation; programming fundamentals: data, variables, selection, loops, arrays, input/output; exceptions. EXCLUSION: This course may not be taken by students who have already taken and passed ECE 1620.\n\nCredits\n\nCredits 4\n\nCSC 1052 : Algorithms & Data Struc II\n\nObject-oriented design: inheritance, interfaces, polymorphism; problem analysis; recursion; abstract data types; dynamically linked structures; data structures: stacks, queues, lists, collections, trees, maps, priority queues, library collections framework.\n\nCredits\n\nCredits 4\n\nPrerequisites\n\nCSC 1051 :C or CSC 2014 :C\n\nCSC 1300 : Discrete Structures\n\nMathematical structures that support computer science: sets, matrices, trees, graphs, logic and proof, mathematical induction, relations, functions, sequences, summations, and elementary combinatorics.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1600 : Operating Systems\n\nSystem software design and implementation; process and resource management; concurrency, scheduling, and deadlock; memory management; file systems and security.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 2400 :D- or ECE 2042 :D-\n\nCSC 1700 : Analysis of Algorithms\n\nEfficiency classifications and mathematical analysis of recursive and nonrecursive algorithms; design techniques: brute force, greedy, divide-and-conquer, dynamic programming, backtracking, branch-and-bound, space and time tradeoffs; NP-completeness; approximation algorithms; computational problems: sorting, searching, string processing, graphs, arithmetic, linear algebra.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\n(CSC 1300 or MAT 2600) and (CSC 1052 or ECE 2620 or ECE 2160)\n\nCSC 1800 : Organ of Prog Languages\n\nHigh level language features: data types, control structures; formal lexical and syntactical analysis; operational semantics; language translation.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\n(CSC 1300 or MAT 2600) and (CSC 1052 or ECE 2620 or ECE 2160)\n\nCSC 1930 : Explorations in Computing\n\nEmerging technologies & their applications; computing in support of investigations & applications in the humanities & social sciences.\n\nCredits\n\nCredits 3\n\nCSC 1990 : Enrichment Sem in Computing\n\nSkills for success in computing: research questions and methodologies, oral and written presentation techniques, argumentation and critical thinking, time and project management strategies, study skills.\n\nCredits\n\nCredits 1\n\nCSC 2000 : Digital Divide,Theory&Praxis\n\nStudents will research the effects of the digital divide and implement a program that addresses the needs of underserved high school students preparing for their transition to college.\n\nCredits\n\nCredits 1\n\nPrerequisites\n\nCSC 1990\n\nCSC 2014 : Java Bootcamp\n\nFast-paced coverage of object-oriented programming using Java and the Java API, including packages for creating graphics and applets; Java syntax and control structures; arrays; designing objects, classes, and methods; graphical user interfaces; input streams, exception handling and threads.\n\nCredits\n\nCredits 1\n\nPrerequisites\n\nCSC 1010 or ECE 1620 or MIS 2020\n\nCSC 2020 : Web Devel & Tech I\n\nDesign of web content, utilization of web tools, configuration of supporting technologies. Emphasis on client-side services: HTML, style sheets, Javascript, DHTML.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1020\n\nCSC 2025 : Web Devel & Tech II\n\nDesign of web content, configuration of supporting web technologies. Emphasis on server-side services: databases and forms, XML, AJAX, cookies, security CGI.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 2020\n\nCSC 2053 : Platform Based Computing\n\nPython APIs, internet programming and security, mobile app programming, a team project.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1052 or ECE 2620 or (ECE 2160 and ECE 2161)\n\nCSC 2300 : Statistics for Computing\n\nProbability, counting, discrete and continuous distributions, descriptive and inferential statistics, experimentation, reading of scientific papers -- all taught from the point of view of computer science. Some programming may be required.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1051 and CSC 1300\n\nCSC 2400 : Computer Systems I\n\nArchitecture of computer systems: representation of data; processor, memory and I/O organization. Assembly language programming. C programming language constructs and their relationship to the underlying architecture. Basics of operating systems: interrupts, concurrency, process scheduling, security, networking.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1052 and (CSC 1300 or MAT 2600)\n\nCSC 2405 : Computer Systems II\n\nProcesses, threads and concurrent programming. Scheduling and dispatching. Linking and relocation. Memory management. Virtual memory. System-level I/O Device management. File systems. Security and protection in depth. Real-time and embedded systems. System performance evaluation. Scripting.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 2400\n\nCSC 2500 : Survey of Information Science\n\nBrief introductions to several areas in which problems in information use are important. Examples are business, law, biology, medicine, electronic commerce, and libraries.\n\nCredits\n\nCredits 3\n\nCSC 2993 : Internship in Computing\n\nInternship in computer science involving computer system development, maintenance, or evaluation in an environment which supports sound software engineering techniques. Restricted to second semester sophomore with junior standing and above.\n\nCredits\n\nCredits 3\n\nCSC 3010 : Overview of Cybersecurity\n\nExploration of the basic concepts and terminology in cybersecurity for students from a variety of technical or non-technical backgrounds; major sub-disciplines of cybersecurity; impact of cybersecurity on business, ethical, and technical levels; data protection concepts, privacy, and intellectual property; data protection techniques, encryption, and authentication; security in wired and wireless networks, operating systems, applications, databases, and the cloud; ethical hacking and vulnerability management; lab exercises and case studies to introduce technical concepts; prepares students to study cybersecurity in-depth in future coursework; course is the introductory required course for a minor in cybersecurity.\n\nCredits\n\nCredits 3\n\nCSC 3070 : Emerging Technology Trends\n\nInvestigate new technologies and current applications. Explore when and how to apply new technologies with sensitivity to feasibility, financial viability, and overall effectiveness. Culminates in team-driven exploitation of a new technology.\n\nCredits\n\nCredits 3\n\nCSC 3080 : Info Security & Protection\n\nExplores the criticality of protecting information's availability, accuracy, authenticity, confidentiality, and integrity. Analysis of topics to include redundancy, backup and recovery, business continuity, security technologies, and controls such as audit, change management and testing.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 2400 or ECE 2042\n\nCSC 3150 : Game Development\n\nTheory of game development, game programming, artificial intelligence, state machines, 2D/3D assets, visual communication, game mechanics, navigation meshes, path planning.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1052 or ECE 2620 or (ECE 2160 and ECE 2161)\n\nCSC 3300 : Linear Algebra for Computing\n\nFields, vectors and vector spaces, linear transformations, matrices and matrix algebra, eigenvalues and eigenvectors; Structures and computations in Python for these mathematical objects; Computational applications selected from data science, machine learning, computer vision, graphics, image processing, graph algorithms, quantum computing, information retrieval and web search.\n\nCredits\n\nCredits 4\n\nPrerequisites\n\nCSC 1300\n\nCSC 3400 : Information Retrieval\n\nTheory and practice of location, organization, and rendering of meaningful content from largely unorganized sources.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1052 :D- and CSC 1300 :D-\n\nCSC 4170 : Theory of Computation\n\nFinite automata and regular expressions; push down automata and context-free grammars; Turing machines; Church's thesis; computability; NP-completeness.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1700 :Y :D-\n\nCSC 4181 : Compiler Construction\n\nLexical and syntactical analysis; code generation; error recovery; recursive descent compilation; handling of run-time environment.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 2400 or ECE 2042\n\nCSC 4200 : Linear Algebra for Computing\n\nFields, vectors, matrices. Structures and computations in a high-level language for these mathematical objects. Computational applications including image morphing, page ranking, compression, search in images, graph manipulation.\n\nCredits\n\nCredits 4\n\nPrerequisites\n\nCSC 1300\n\nCSC 4300 : Computer Graphics\n\nHardware and software in computer graphics; graphics programming language; input/output device handling; modeling in 3D space; development of interactive software.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1052 :D- and MAT 2400\n\nCSC 4380 : Info Visualization\n\nThe presentation of information; visual cognition, scientific visualization, illustration presentation, color theory, motion dynamics, image processing.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1052 or ECE 2620 or ECE 2160\n\nCSC 4450 : Digital Forensics\n\nIn-depth study of digital evidence presentation, digital forensic techniques, and data analysis. Password cracking, encryption/decryption, volatile data extraction and network forensics of advanced forensic tools, legal and ethical issues related to forensics and security management techniques.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 2400 or ECE 2042\n\nCSC 4480 : Principles of Database Systems\n\nConcepts and technology of database management systems and data modeling with an emphasis on the relational model; database querying and normalization; physical data organization. A group project to design and implement a database is a key aspect of this course.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\n(CSC 1051 or ECE 1620 or ECE 1260) and (CSC 1300 or MAT 2600)\n\nCorequisites\n\nCSC 4490 : Data Warehousing & Mining\n\nTools and techniques, theory and practice for storage and effective use of massive data sets.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 4480 and (CSC 2300 or MAT 4310 or STAT 4310)\n\nCSC 4500 : Artificial Intelligence\n\nHistory of AI, what it is and isn't; the nature of intelligence and the question of its computer implementation; search algorithms; knowledge representation; automated deduction; machine perception techniques; machine learning; planning; problem solving.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1051 or ECE 1620 or (ECE 1260 and ECE 1261)\n\nCSC 4505 : Applied Machine Learning\n\nIntroduction to machine learning through Python based projects; machine learning tools; supervised and unsupervised learning algorithms and modeling accuracy, bias, and overfitting issues.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\n(CSC 1052 or ECE 2620) and (CSC 1300 or MAT 2600) and (CSC 2300 or MAT 4310 or STAT 4310) and MAT 2400\n\nCSC 4510 : Machine Learn&Theory&Evolution\n\nThe mathematical theory behind the design of software by detecting and extrapolating pattern; neural systems that adapt to new circumstances; decision tree induction; genetic algorithms and genetic programming; research foundations.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1700 and (CSC 2300 or MAT 4310 or STAT 4310) and MAT 2400\n\nCSC 4550 : Computing for Data Science\n\nThe computing parts of the interdisciplinary subject, Data Science. Topics include: data cleaning, data wrangling, visualization, time series, machine learning fundamentals. Program libraries that support managing datasets. Students will complete a major project.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\n(CSC 1300 or MAT 2600) and (CSC 1052 or ECE 2620 or ECE 2160)\n\nCSC 4598 : Machine Translation\n\nComputer systems that translate human language transformations, such as readability and sentiment analysis, spam filtering, plagiarism detection, and other natural language processing techniques; typically includes collaboration with a non-Computer Science course on team-based student projects.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1052 or ECE 2620 or (ECE 2160 and ECE 2161)\n\nCSC 4630 : Software Dev and Systems\n\nOperating system structures; system calls; system libraries; interprocess communication; user-interface programming environments; software utilities; software portability.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\n(CSC 1600 or CSC 2405 or ECE 2044) and CSC 2053\n\nCSC 4700 : Software Engineering\n\nManagement and production of software systems; the software life cycle; software design techniques and methodologies; participation in a team software development project.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 1052 or ECE 2620 or (ECE 2160 and ECE 2161)\n\nCSC 4710 : Info Syst Project Management\n\nPrinciples and techniques of information systems project management; qualitative and quantitative essentials to include project integration, scope, schedule, cost, quality, human resources, communications, and risk. Practical experience managing a project with complex technology issues.\n\nCredits\n\nCredits 3\n\nCSC 4730 : Human Computer Interaction\n\nDesign of the user/system interface; measurement of human-computer interaction; models of the user and user communities; design criteria for the interface; user interface management systems (UIMS); test and evaluation strategies and tools.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\n(CSC 1052 or ECE 2620 or ECE 2160)\n\nCSC 4790 : Senior Projects\n\nCapstone course centered around a semester long sofware development or research project; project planning; requirements elicitation and specification; teamwork; oral presentations required of all students.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 4700 :D-\n\nCSC 4797 : Information Systems Capstone\n\nA cumulative experience to complete a student's portfolio of expertise in information systems and technology. Student driven project emphasizing system integration, design and communication skills. Prerequisites: Information Systems majors or FIT certificate candidates only.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 4710 :D- and CSC 4700 :D- or DIT 2165 :D- and CSC 2500 :D- and DIT 2175 :D-\n\nCSC 4800 : Web Application Development\n\nTheory and design of web-based applications: stylesheets, applets, HTML, CGI programming, web server design, website design, security, multimedia representations, encryption, compression.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 2053 :D-\n\nCSC 4810 : Mobile App Development\n\nTheory and practice of designing apps for mobile devices; interface design, platform-specific and platform-independent programming, sensor-based computing, cloud data management, security, and privacy; entrepreneurial practices for app development: ideation, business planning, and commercialization.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 2053\n\nCSC 4900 : Networks and Security\n\nOrganization of computer networks; TCP/IP protocols; switching and routing methods; IP addressing and forwarding; TCP flow and congestion control; client-server communication; cryptography: secret-key, public key, digital signatures; security attacks and defenses: authentication and authorization, denial of service, firewalls, VPNs.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 2405\n\nCSC 5920 : Logic\n\nBoolean connectives and propositional logic; quantifiers and first-order logic; natural deduction, resolution and other methods of human or computer reasoning; set theory; induction; formal arithmetic.\n\nCredits\n\nCredits 3\n\nCSC 5930 : Topics Computer Science\n\nLecture presentation of selected topics in computer science. May be repeated for credit if topics are different. Prerequisites may be imposed depending on the topics.\n\nCredits\n\nCredits 3\n\nCSC 5993 : Independent Study\n\nReading, research and/or projects in a selected area of computer science under the direction of a member of the staff. May be repeated for credit.\n\nCredits\n\nCredits 3\n\nCSC 8410 : Operating Systems Concepts\n\nPrinciples and techniques required for creating and understanding operating systems, including the areas of: system services, concurrent programming, process and resource control; deadlock detection, recovery, and prevention; memory management; file systems; and protection and security.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 8400 :Y :C\n\nCSC 8490 : Database Systems\n\nModern database systems, including relational and NoSQL systems. Emphasize practical knowledge while covering the essential theory design; query lanquages; security; transactions. Focus on both theory and practice.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 8500 : Formal Grammars\n\nMachines; nondeterminism; simulation; finite machines and regular languages; grammars; stack, counter, and tape machines; computability.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\n(CSC 8301 :C and CSC 8310 :C)\n\nCSC 8720 : Sys Admin Concepts\n\nUNIX login process. Standard root, device and user directories and files. File system construction and management. Dist status and partitions. Monitoring system performance. Networking and communication.\n\nCredits\n\nCredits 3\n\nPrerequisites\n\nCSC 8700 :C\n\nMSE 2400 : CSC:Evol Lrng Cmp Robtcs Agnts\n\nThis course explores how software designers and artificial intelligence researchers draw inspiration from biology and learning theory to design programs and robotic agents that learn and adapt to changes in their environment. No prior programming experience is required.\n\nCredits\n\nCredits 4"
    }
}