{
    "id": "dbpedia_5009_1",
    "rank": 5,
    "data": {
        "url": "https://answers.ros.org/question/56685/is-there-any-way-to-get-qt-creator-to-show-all-of-a-projects-subdirectories/",
        "read_more_link": "",
        "language": "en",
        "title": "Is there any way to get QT Creator to show all of a project’s subdirectories?",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://answers.ros.org/m/ros/media/images/logoros.png?v=28",
            "https://answers.ros.org/m/default/media/images/nophoto.png?v=27",
            "https://answers.ros.org/m/default/media/images/nophoto.png?v=27",
            "https://answers.ros.org/m/default/media/images/nophoto.png?v=27",
            "https://answers.ros.org/m/default/media/images/nophoto.png?v=27",
            "https://answers.ros.org/m/default/media/images/nophoto.png?v=27",
            "https://www.gravatar.com/avatar/239e6bcc732cc6d5a4f528d7f0c88ca2?s=32&d=identicon&r=PG",
            "https://answers.ros.org/m/default/media/images/flags/es.gif?v=28",
            "https://www.gravatar.com/avatar/fe03d755f814eff93ac7f5decbe7a3c7?s=16&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/239e6bcc732cc6d5a4f528d7f0c88ca2?s=16&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/09dc13debcb0879b6eb2017dbce5a433?s=16&d=identicon&r=PG",
            "https://answers.ros.org/m/default/media/images/cc-by-sa.png?v=28"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "",
            "ROS",
            "forum",
            "community"
        ],
        "tags": null,
        "authors": [
            "Pablo Iñigo Blasco"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "I am using rosbuild/CMake for my QT application with QT Creator. My project directory is divided into src, includes, msg, ui, and resources folders and the only folders that show up in QT Creator are resources, src, and ui. Is there any way to get all of the folders to show up, or at least the includes folder to show up? Here is my CMakeLists.txt: ############################################################################## # Rosbuild2 ############################################################################## if(ROSBUILD) include(rosbuild.cmake OPTIONAL) return() endif() ############################################################################## # CMake ############################################################################## cmake_minimum_required(VERSION 2.4.6) ############################################################################## # Ros Initialisation ############################################################################## include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake) rosbuild_init() #set the default path for built executables to the \"bin\" directory set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin) #set the default path for built libraries to the \"lib\" directory set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib) rosbuild_genmsg() # Set the build type. Options are: # Coverage : w/ debug symbols, w/o optimization, w/ code-coverage # Debug : w/ debug symbols, w/o optimization # Release : w/o debug symbols, w/ optimization # RelWithDebInfo : w/ debug symbols, w/ optimization # MinSizeRel : w/o debug symbols, w/ optimization, stripped binaries #set(ROS_BUILD_TYPE Debug) ############################################################################## # Qt Environment ############################################################################## rosbuild_include(qt_build qt-ros) rosbuild_prepare_qt4(QtCore QtGui QtWebkit QtNetwork) # Add the appropriate components to the component list here ############################################################################## # Sections ############################################################################## file(GLOB QT_FORMS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ui/*.ui) file(GLOB QT_RESOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} resources/*.qrc) file(GLOB_RECURSE QT_MOC RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} FOLLOW_SYMLINKS include/Google_Maps_CMAKE/*.hpp) QT4_ADD_RESOURCES(QT_RESOURCES_CPP ${QT_RESOURCES}) QT4_WRAP_UI(QT_FORMS_HPP ${QT_FORMS}) QT4_WRAP_CPP(QT_MOC_HPP ${QT_MOC}) ############################################################################## # Sources ############################################################################## file(GLOB_RECURSE QT_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} FOLLOW_SYMLINKS src/*.cpp) ############################################################################## # Binaries ############################################################################## rosbuild_add_executable(Google_Maps_CMAKE ${QT_SOURCES} ${QT_RESOURCES_CPP} ${QT_FORMS_HPP} ${QT_MOC_HPP}) target_link_libraries(Google_Maps_CMAKE ${QT_LIBRARIES})",
        "meta_lang": "",
        "meta_favicon": "/m/ros/media/images/ros_favicon.gif?v=28",
        "meta_site_name": "",
        "canonical_link": "https://answers.ros.org/question/56685/is-there-any-way-to-get-qt-creator-to-show-all-of-a-projects-subdirectories/",
        "text": "I am using rosbuild/CMake for my QT application with QT Creator. My project directory is divided into src, includes, msg, ui, and resources folders and the only folders that show up in QT Creator are resources, src, and ui. Is there any way to get all of the folders to show up, or at least the includes folder to show up? Here is my CMakeLists.txt:\n\n############################################################################## # Rosbuild2 ############################################################################## if(ROSBUILD) include(rosbuild.cmake OPTIONAL) return() endif() ############################################################################## # CMake ############################################################################## cmake_minimum_required(VERSION 2.4.6) ############################################################################## # Ros Initialisation ############################################################################## include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake) rosbuild_init() #set the default path for built executables to the \"bin\" directory set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin) #set the default path for built libraries to the \"lib\" directory set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib) rosbuild_genmsg() # Set the build type. Options are: # Coverage : w/ debug symbols, w/o optimization, w/ code-coverage # Debug : w/ debug symbols, w/o optimization # Release : w/o debug symbols, w/ optimization # RelWithDebInfo : w/ debug symbols, w/ optimization # MinSizeRel : w/o debug symbols, w/ optimization, stripped binaries #set(ROS_BUILD_TYPE Debug) ############################################################################## # Qt Environment ############################################################################## rosbuild_include(qt_build qt-ros) rosbuild_prepare_qt4(QtCore QtGui QtWebkit QtNetwork) # Add the appropriate components to the component list here ############################################################################## # Sections ############################################################################## file(GLOB QT_FORMS RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ui/*.ui) file(GLOB QT_RESOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} resources/*.qrc) file(GLOB_RECURSE QT_MOC RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} FOLLOW_SYMLINKS include/Google_Maps_CMAKE/*.hpp) QT4_ADD_RESOURCES(QT_RESOURCES_CPP ${QT_RESOURCES}) QT4_WRAP_UI(QT_FORMS_HPP ${QT_FORMS}) QT4_WRAP_CPP(QT_MOC_HPP ${QT_MOC}) ############################################################################## # Sources ############################################################################## file(GLOB_RECURSE QT_SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} FOLLOW_SYMLINKS src/*.cpp) ############################################################################## # Binaries ############################################################################## rosbuild_add_executable(Google_Maps_CMAKE ${QT_SOURCES} ${QT_RESOURCES_CPP} ${QT_FORMS_HPP} ${QT_MOC_HPP}) target_link_libraries(Google_Maps_CMAKE ${QT_LIBRARIES})\n\nTo make the include files from the project show up in QtCreator, you can just add them as sources for your executable (in your example, add ${QT_MOC} to the rosbuild_add_executable line, or create a new GLOB collecting all the projects header files). This won't mess up the build process, I do that quite often.\n\nHowever, I do not know whether there is a way to add system headers or other file types to the QtCreator project view.\n\nIf your concern are the header files I recommend you to use this simple pattern:\n\nFILE(GLOB_RECURSE HEADER_FILES include *.h)\n\nadd_executable(executable_name mysourcefile.cpp ${HEADER_FILES} )\n\nIt is also possible to create a different target (this may be better) to avoid adding the new files to the executable target.\n\nFILE(GLOB_RECURSE HeadFiles \"include/*.h\")\n\nadd_custom_target(headers SOURCES ${HeadFiles})\n\nIt is possible to do this with other files, like msg files, config files, launch files, etc.\n\nThe only issue here, is that you are introducing some code in CMake that has no too much sense and it is only useful for qtcreator (while the CMake philosophy is making the development independent to any IDE)"
    }
}