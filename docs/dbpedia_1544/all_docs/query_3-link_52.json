{
    "id": "dbpedia_1544_3",
    "rank": 52,
    "data": {
        "url": "https://learn.microsoft.com/en-us/azure/architecture/databases/architecture/profisee-master-data-management-purview",
        "read_more_link": "",
        "language": "en",
        "title": "Databases architecture design - Azure Reference Architectures",
        "top_image": "https://learn.microsoft.com/en-us/media/open-graph-image.png",
        "meta_img": "https://learn.microsoft.com/en-us/media/open-graph-image.png",
        "images": [
            "https://learn.microsoft.com/en-us/azure/architecture/databases/_images/data-service-classifications.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Learn about the different Azure database solutions described in Azure Architecture Center.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://learn.microsoft.com/en-us/azure/architecture/databases/",
        "text": "This article provides an overview of the Azure database solutions described in Azure Architecture Center.\n\nApacheÂ®, Apache CassandraÂ®, and the Hadoop logo are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries. No endorsement by The Apache Software Foundation is implied by the use of these marks.\n\nAzure Database solutions include traditional relational database management systems (RDBMS and OLTP), big data and analytics workloads (including OLAP), and NoSQL workloads.\n\nRDBMS workloads include online transaction processing (OLTP) and online analytical processing (OLAP). Data from multiple sources in the organization can be consolidated into a data warehouse. You can use an extract, transform, load (ETL) or extract, load, transform (ELT) process to move and transform the source data. For more information on RDBMS Databases, see Explore Relational Databases in Azure.\n\nA big data architecture is designed to handle the ingestion, processing, and analysis of large or complex data. Big data solutions typically involve a large amount of relational and nonrelational data, which traditional RDBMS systems aren't well suited to store. These typically involve solutions such as Data Lakes, Delta Lakes, and lakehouses. See more information in Analytics Architecture Design.\n\nNoSQL databases are interchangeably referred to as nonrelational, NoSQL DBs, or non-SQL to highlight the fact that they can handle huge volumes of rapidly changing, unstructured data. They don't store data in tables, rows, and columns, like (SQL) databases. For more information on No SQL DBs Databases, see NoSQL Data and What are NoSQL Databases?.\n\nThis article provides resources to learn about Azure databases. It outlines paths to implement the architectures that meet your needs and best practices to keep in mind as you design your solutions.\n\nThere are many architectures for you to draw from to address your database needs. We also provide solution ideas for you to build on, which include links to all the components you need.\n\nLearn about databases on Azure\n\nAs you start thinking about possible architectures for your solution, it's vital that you choose the correct data store. If you're new to databases on Azure, the best place to start is Microsoft Learn. This free online platform provides videos and tutorials for hands-on learning. Microsoft Learn offers learning paths that are based on your job role, such as developer or data analyst.\n\nYou can start with a general description of the different databases in Azure and their use. You can also browse Azure data modules and Choose a data storage approach in Azure. These articles help you understand your choices in Azure data solutions and learn why some solutions are recommended in specific scenarios.\n\nHere are some Learn modules you might find useful:\n\nDesign your migration to Azure\n\nDeploy Azure SQL Database\n\nExplore Azure database and analytics services\n\nSecure your Azure SQL Database\n\nAzure Cosmos DB\n\nAzure Database for PostgreSQL\n\nAzure Database for MySQL\n\nSQL Server on Azure VMs\n\nPath to production\n\nTo find options helpful for dealing with relational data, consider these resources:\n\nTo learn about resources for gathering data from multiple sources and how to and apply data transformations within the data pipelines, see Analytics in Azure.\n\nTo learn about OLAP, which organizes large business databases and supports complex analysis, see Online analytical processing.\n\nTo learn about OLTP systems record business interactions as they occur, see Online transaction processing.\n\nA nonrelational database doesn't use the tabular schema of rows and columns. For more information, see Nonrelational data and NoSQL.\n\nTo learn about data lakes, which hold a large amount of data in its native, raw format, see Data lakes.\n\nA big data architecture can handle ingestion, processing, and analysis of data that is too large or too complex for traditional database systems. For more information, see Big data architectures and Analytics.\n\nA hybrid cloud is an IT environment that combines public cloud and on-premises datacenters. For more information, see Extend on-premises data solutions to the cloud or consider Azure Arc combined with Azure databases.\n\nAzure Cosmos DB is a fully managed NoSQL database service for modern app development. For more information, see Azure Cosmos DB resource model.\n\nTo learn about the options for transferring data to and from Azure, see Transfer data to and from Azure.\n\nBest practices\n\nReview these best practices when designing your solutions.\n\nBest practices Description Data management patterns Data management is the key element of cloud applications. It influences most quality attributes. Transactional Outbox pattern with Azure Cosmos DB Learn how to use the Transactional Outbox pattern for reliable messaging and guaranteed delivery of events. Distribute your data globally with Azure Cosmos DB To achieve low latency and high availability, some applications need to be deployed in datacenters that are close to their users. Security in Azure Cosmos DB Security best practices help prevent, detect, and respond to database breaches. Continuous backup with point-in-time restore in Azure Cosmos DB Learn about Azure Cosmos DB point-in-time restore feature. Achieve high availability with Azure Cosmos DB Azure Cosmos DB provides multiple features and configuration options to achieve high availability. High availability for Azure SQL Database and SQL Managed Instance The database shouldn't be a single point of failure in your architecture.\n\nTechnology choices\n\nThere are many options for technologies to use with Azure Databases. These articles help you choose the best technologies for your needs.\n\nChoose a Data Store\n\nChoose an analytical data store in Azure\n\nChoose a data analytics technology in Azure\n\nChoose a batch processing technology in Azure\n\nChoose a big data storage technology in Azure\n\nChoose a data pipeline orchestration technology in Azure\n\nChoose a search data store in Azure\n\nChoose a stream processing technology in Azure\n\nStay current with databases\n\nRefer to Azure updates to keep current with Azure Databases technology.\n\nRelated resources\n\nAdatum Corporation scenario for data management and analytics in Azure\n\nLamna Healthcare scenario for data management and analytics in Azure\n\nOptimize administration of SQL Server instances\n\nRelecloud scenario for data management and analytics in Azure\n\nExample solutions\n\nThese solution ideas are some of the example approaches that you can adapt to your needs.\n\nEnterprise data warehouse\n\nServerless apps using Azure Cosmos DB\n\nSimilar database products\n\nIf you're familiar with Amazon Web Services (AWS) or Google Cloud, refer to the following comparisons:"
    }
}