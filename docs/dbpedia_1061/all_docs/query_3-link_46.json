{
    "id": "dbpedia_1061_3",
    "rank": 46,
    "data": {
        "url": "https://github.com/liblouis/liblouis/blob/master/NEWS",
        "read_more_link": "",
        "language": "en",
        "title": "liblouis/NEWS at master · liblouis/liblouis",
        "top_image": "https://opengraph.githubassets.com/864cc82fcc55927fce0db947d31fce6e769911567b83752247774eea10a041db/liblouis/liblouis",
        "meta_img": "https://opengraph.githubassets.com/864cc82fcc55927fce0db947d31fce6e769911567b83752247774eea10a041db/liblouis/liblouis",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Open-source braille translator and back-translator. - liblouis/NEWS at master · liblouis/liblouis",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/liblouis/liblouis/blob/master/NEWS",
        "text": "liblouis NEWS – history of user-visible changes. -*- org -*-\n\nNoteworthy changes in release 3.30.0 (2024-06-03)\n\nWe are very excited to present this release, as a lot of enthusiasm and energy have gone into it. A host of of new contributors have improved liblouis and added support for new languages. We now have support for many ancient languages, like Akkadian, Ugaritic, Biblical Hebrew and Syriac. This release also supports Yiddish. And the Dutch tables got a very innovative upgrade.\n\nI’d like to thank all the very dedicated contributors for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nThere is a new uncontracted braille table for Yiddish, created by Abby Howell and Matthew Shifrin, a teacher and student of Yiddish at the Boston Worker’s Circle.\n\nA group of incredibly dedicated people has been working on support for ancient languages, namely Matt Yeater and Paul Geoghegan with the help of Sarah Blake LaRose, Eric Harvey, Leonard de Ruijter and Abby Howell. The languages that are supported so far are:\n\nBiblical Hebrew\n\nAkkadian according to Borger system\n\nAkkadian braille according to U.S. system\n\nSyriac\n\nUgaritic\n\nA table to provide support for the languages represented in the Cuneiform / Akkadian Writing systems\n\nBug fixes\n\nFix a bug in the Python bindings that occurs on bigendian architectures, thanks to Daniel Garcia.\n\nFix a memory problem when handling parameters in lou_translate, thanks to benehalo.\n\nBraille table improvements\n\nMinor improvements to the Danish tables thanks to Bue Vester-Andersen:\n\nFixed a missing contraction for “gjorde”.\n\nImprovements to Hungarian (added more exceptions) thanks to Attila Hammer.\n\nCorrections to the Malay Table thanks to lbk2907.\n\nMajor improvements to Serbian backtranslation thanks to Aleksandar Sredojevic:\n\nBacktranslation now works to both Cyrillic and Latin script.\n\nFix the metadata for the Cantonese (Hong Kong) table thanks to André Polykanine.\n\nImprovements to backtranslation of Spanish grade 2 thanks to Iván Argote Pérez with the help of Abby Howell.\n\nMajor upgrade to the Dutch tables thanks to Bert Frees. These tables use virtual dots in an innovative way to help sighted readers better understand the generated braille. They also use a new technique using m4 macros to simplify writing tables that use many repetitive opcodes.\n\nOther changes\n\nThe metadata now has support for unicode-range, i.e. whether the characters used in a table all fall inside the 0-U+FFFF Unicode range (ucs2), or whether some characters are in the > U+10000-U+10FFFF range (ucs4), thanks to Bert Frees.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nNone\n\nNew, renamed or removed tables\n\nsr-Cyrl.ctb\n\nyi.utb\n\nhbo.utb\n\nakk.utb\n\nakk-borger.utb\n\nsyc.utb\n\nuga.utb\n\ncuneiform-transliterated.utb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.29.0 (2024-03-04)\n\nA lot of hard work by Andrey, Anthony, Attila, Bert, Bue and James went into this release. We have many improvements for UEB, better support for Belarusian and Ukrainian literary braille, a major upgrade for Turkish and miscellaneous enhancements for Kannada, Danish, Dutch, Esperanto and Malay. There is also a brand new table for classical Greek for Spanish braille readers.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nThere is a new uncontracted braille for Lao thanks to Aikeo Koomanivong, disability service center in Lao PDR DSC.\n\nThere is a new uncontracted braille table to read classical Greek characters according to the technical document B12-1 by the Spanish Braille Commission, thanks to Iván Novegil.\n\nBug fixes\n\nNone\n\nBraille table improvements\n\nFixed issues with Kannada table kannada.cti thanks to Jake Kyle.\n\nImprovements to the Belarusian and Ukrainian literary braille tables thanks to Andrey Yakuboy:\n\nAdded support for back translation to the Belarusian and Ukrainian literary Braille tables (bel.utb and uk.utb respectively).\n\nChanged the dot patterns for parentheses in the Ukrainian braille table from 126-345 to 2356.\n\nAdded new tables for Belarusian and Ukrainian braille with indication of capital letters (bel-detailed.utb and uk-detailed.utb respectively).\n\nMinor improvements to the Danish tables thanks to Bue Vester-Andersen:\n\nFixed definition of dollar sign ($)\n\nFixed rules for applying section sign (§)\n\nFixed contraction of some words\n\nUpdates to UEB Contracted thanks to Anthony Tibbs:\n\nFinal letter groupsigns will not be used immediately following capital indicators (e.g. when the first letter of the groupsign is capitalized, or the groupsign follows a capitalized passage) per UEB Rule 10.8.2\n\nUpdates to UEB thanks to James Bowden:\n\nBack translating braille dot 3 now results in the ordinary apostrophe U+0027 rather than U+2019\n\nDot 5, used for “spaced digits” is only applied if a no-break space U+00a0 is used in the input. It fixes an issue with British postcodes which should be treated as two separate items. It also means that if someone wants spaced digits, numbers have to be joined together with no-break spaces deliberately.\n\nDo not collapse Unicode braille in Dutch, thanks to Davy Kager.\n\nImprovements to Hungarian (added more exceptions) thanks to Attila Hammer.\n\nAdded support for back-translation to the Esperanto table, thanks to Bue Vester-Andersen.\n\nMajor upgrade to the Turkish tables thanks to Oğuz UĞUR with lots of help from Attila Hammer.\n\nadd support for accented characters\n\nadd punctuation symbols from the Turkish Braille Writing Guideline\n\nfix some contractions\n\nCorrections to the Malay Table thanks to lbk2907.\n\nOther changes\n\nDuplicate emphasis classes are no longer warnings thanks to Christian Egli. There are cases where emphasis redefinition is legitimate. They are simply logged now.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nNone\n\nNew, renamed or removed tables\n\nbel-detailed.utb\n\nuk-detailed.utb\n\nlo-g1.utb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.28.0 (2023-12-04)\n\nThis release manages to bring as many new features, table improvements and bug fixes as we haven’t seen in a long time. There are a number of major bug fixes that Bert worked on that fix bugs and inconsistencies. On the table side there is a new table for Filipino contracted braille, James has tirelessly been working on UEB improvements and (as usual) Attila worked on the Hungarian tables.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nlou_translate has a new option to specify the table to use with a query. See the updated documentation on how to make use of this new feature.\n\nBug fixes\n\nFix a bug when matching context rules that begin with uppercase letters. Thanks to Anthony Tibbs for the very detailed bug report and thanks to Bert for the actual fix.\n\nFix a memory corruption error in the code for the swap opcodes. Thanks to the OSS-fuzz project for reporting and to Christian Egli for fixing it.\n\nChange how emphasis phrases are determined. Also allow non-whole words at the start and end of a phrase. This fixes a problem in the UEB handling. Thanks to Ken Perry from APH for reporting and to Bert Frees for fixing it.\n\nCharacter definition and base rules are now always considered in the order in which they are defined in the table. In other words the topmost rule always wins. This fixes a number of problems and inconsistencies. Thanks to Bert Frees for the fix.\n\nFix the problem of inconsistent precedence of character definition rules reported by Rimas Kudelis.\n\nFix a problem with compbrlAtCursor and compbrlLeftCursor that was reported by Daniel Mayr\n\nBraille table improvements\n\nImprovements to UEB\n\nfixes to many words starting with letters “BE-“.\n\nFix back translation of dots 26 - when standing alone; should be the word enough.\n\nFix assignment for the right double arrow and added left, up, and down double arrows.\n\nFix typos in a couple of rules.\n\nFix words beginning “CONS-” and “DISHD-” when written uppercase, all above thanks to James Bowden.\n\nEnsure letter indicators are added to letters A-J following numbers in a capitalized passage, thanks to Anthony Tibbs.\n\nImprovements to Hungarian (added more exceptions) thanks to Attila Hammer.\n\nNew table for Filipino contracted braille, thanks to Allan Mesoga and Dang Hoai Phúc.\n\nOther changes\n\nThe manywarnigs module from gnulib is no longer used. It caused massive slowdowns when compiling with gcc.\n\nAdd the name of the concerned table when logging warnings thanks to Bert Frees for the patch and to Attila Hammer for the PR.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nThe order of how character definition and base rules are considered has changed. All included tables were adapted, but if you maintain your own tables you might want to look at the change to see what you need to do.\n\nInvisible changes\n\nNew, renamed or removed tables\n\nfil-g2.ctb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.27.0 (2023-09-12)\n\nThis release contains support for two more languages, namely Thai and Romanian uncontracted braille. There is also the usual assortment of incremental improvements to Bengali, Danish, Hungarian, Swedish, Urdu and US English. To top it off, some great new contributors did some code cleanups and bug fixes.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nAdded support for Thai braille thanks to Chatupol Nootatong, Dr. Wiraman Niyomphol and Itsawat Banlawanich from Thai braille fund and Foundation for the Blind in Thailand.\n\nAdded a new Romanian 6 dot table, thanks to BAUM Engineering.\n\nBraille table improvements\n\nUpdate to Urdu, removing old rule where dots 256 was used for Urdu letters TEH ALEF. Thanks to Jake Kyle.\n\nAdded the dari character to Bengali thanks to Attila Hammer.\n\nImprovements to Hungarian (added more exceptions) thanks to Attila Hammer.\n\nImprovements to Hungarian to support users if typing physical braille display, thanks to Attila Hammer.\n\nFixed the translation of Unicode ellipses in US English grade 1 and 2 tables thanks to Anthony Tibbs.\n\nAdded some more symbols to the Nemeth character definitions thanks to Norbert Markus and Attila Hammer.\n\nFixed a bug in Danish when back-translating a word contraction followed by “!”, thanks to Bue Vester-Andersen.\n\nImproved handling of numbers and fixed a couple of whole-word contraction errors in Swedish braille thanks to Insyn Scandinavia AB.\n\nAdded the possibility to retain the virtual dots on Dutch braille, so that it should be possible to distinguish between identical dot patterns that originate from different input. Thanks to Bert Frees.\n\nOther changes\n\nRemoved some code smell thanks to Aaron Cannon.\n\nDuplicate emphasis class definitions now cause a warning, thanks to Attila Hammer.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nThe line continuation feature was removed, as it was no longer needed and caused problems (e.g. issue 239). The tables that depended on it were updated. Thanks to Aaron Cannon.\n\nInvalid attribute names now cause a table compilation error instead of just a warning. Thanks to Attila Hammer.\n\nNew, renamed or removed tables\n\nNone\n\nNone\n\nNone\n\nNoteworthy changes in release 3.26.0 (2023-06-05)\n\nThis release contains one new feature, namely the possibility to mark a test as an expected failure just for back- or forward translation. On top of that we have updates for Danish, Hungarian, Norwegian and Nemeth Braille plus the usual assortment of code cleanups and bug fixes.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nThe YAML syntax to define tests has been improved so that expected failures can now contain a direction attribute. In other words you can now specify whether you expect a test to fail for both directions or just for forward or backward translation. For more details consult the updated documentation on how to write YAML tests. Thanks to Christian Egli.\n\nBug fixes\n\nFix an out-of-bound write in brl_checks.c thanks to Bert Frees for the fix and to Han Zheng for the report.\n\nClear the display table cache on lou_free thanks to Bert Frees for the fix and to David Korczynski for the report.\n\nBraille table improvements\n\nImprovements to Hungarian (added more exceptions) thanks to Attila Hammer.\n\nChanged the Danish grade 2 tables in accordance with updates from the Danish Braille committee, thanks to thanks to Bue Vester-Andersen.\n\nAdded support for more symbols in the Nemeth braille tables thanks to Norbert Markus.\n\nImprovements to Norwegian braille thanks to Lars Bjørndal\n\nPut noback before acute sign to enable input at sign (email addresses).\n\nAdded more noback prefixes.\n\nCorrected leftwards arrow and added definition for left right arrow.\n\nChanged bullet point from 2356 to 36-36. According to the Norwegian braille standard, this is the preferred unordered list item prefix.\n\nOther changes\n\nClarify the README for Python thanks to Rob Beezer.\n\nProperly remove support for Python2 in the Python bindings again thanks to Rob Beezer.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nNone\n\nNew, renamed or removed tables\n\nNone\n\nNone\n\nNone\n\nNoteworthy changes in release 3.25.0 (2023-03-06)\n\nWe dedicate this release to the memory of John Boyer, the original author of liblouis. Sadly he passed away recently. We owe him a tremendous amount of gratitude. Without him liblouis would not exist.\n\nA lot of work has gone into this release. We have quite a few security related fixes. Then there are updates to Dutch, Norwegian, Slovenian and Vietnamese. Attila, who never seems to get tired, updated the Hungarian tables and did some general cleanups in the tables.\n\nAlso due to some mishap our domain expired and we could not re-acquire it. So we had to change our domain to liblouis.io.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nBug fixes\n\nFixed several buffer overflow errors in lou_setDataPath, lou_logFile and resolveSubtable thanks to Marsman1996.\n\nBraille table improvements\n\nFix a deprecation warning in Bulgarian 6 dots thanks to Attila Hammer.\n\nFix two broken space replacement rules for ZERO WIDTH SPACE and WORD JOINER thanks to Attila Hammer and Norbert Markus.\n\nFixes to Hungarian Braille exceptions and hyphenation thanks to Attila Hammer. This results in a much improved back-translation of capitalized words.\n\nSupport for both 8 and 6 dot math symbols in Hungarian thanks to Norbert Markus.\n\nUpdate Dutch 8-dot computer braille table to the 2022 standard thanks to Leonard de Ruijter and the Dutch Braille Authority.\n\nThere are updates to the Norwegian braille standard. Most notably URLs and email addresses are no longer surrounded by braille patterns unless present in the original document. Thanks to Lars Bjørndal.\n\nAdd some missing character definitions to Slovenian computer braille, thanks to Jožef Gregorc.\n\nCorrections and additions to Vietnamese thanks to Dang Hoai Phúc. Includes a new computer braille table.\n\nOther changes\n\nChange the domain name from liblouis.org to liblouis.io thanks to Christian Egli.\n\nSimplify the Danish test to contain fewer files thanks to Bue Vester-Andersen and Bert Frees.\n\nAdd the tests and the examples of the Python bindings to the distribution tarball. Thanks to Rob Beezer for spotting this oversight.\n\nDeprecation notice\n\nThe lou_setDataPath and lou_getDataPath functions have been deprecated. Please migrate to one of the other ways to set the table search path:\n\nThe recommended and most straightforward way to set the search path is to set the LOUIS_TABLEPATH environment variable.\n\nYou can also set a custom table resolver function through lou_registerTableResolver.\n\nIf you use the metadata based query API and haven’t set the LOUIS_TABLEPATH environment variable, you can use the lou_indexTables function to tell Liblouis which files (not directories) to search.\n\nFinally, there is the fallback solution of using absolute file paths.\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nNone\n\nNew, renamed or removed tables\n\nvi-cb8.utb (replaces vi.ctb)\n\nNone\n\nvi.ctb (replaced by vi-cb8.utb)\n\nNoteworthy changes in release 3.24.0 (2022-12-05)\n\nThis release contains major updates to Hungarian, UEB, and Chinese bopomofo braille. Danish has been completely reworked and there is now support for the Danish braille standard 2022. There are also some new tables so that liblouis can now generate Georgian computer braille, Swahili (Kenya) and Chichewa (Malawi). Aside from that there is the usual assortment of code cleanups and bug fixes.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nBraille table improvements\n\nNew grade 1, 1.2, 1.3, 1.4, 1.5 and 2 tables for Swahili (Kenya) and grade 1 table for Chichewa (Malawi) thanks to Jake Kyle, Dipendra Manocha and Martin Kieti.\n\nImprovements to Hungarian thanks to Attila Hammer.\n\nUpdate braille patterns of some Chinese characters and phrases in the Chinese bopomofo braille table thanks to Bo-Cheng Jhan.\n\nAdd experimental Georgian computer braille table thanks to Harris Mowbray and Mariam Mikiashvili.\n\nUpdated the Danish tables to the new 2022 Danish braille standard thanks to Bue Vester-Andersen.\n\nLimited contraction level (grade 2l or 1.5) is no longer part of the Danish braille standard 2022.\n\nThere is no longer any need for “literary” tables. In Danish braille, capital letters are now always indicated, and steps have been taken in the standard to ensure better back-translation.\n\nAs requested by The Danish Braille Committee, the tables for the 1993 standard will be kept as an option for at least a year. All the 1993 tables have been renamed to include “_1993” in the filename, so the new tables will be used as default.\n\nImprovements to UEB thanks to James Bowden.\n\nAdd new sign for German sharp S (ICEB July 2022)\n\nFix a couple of acronyms which require grade 1 indicator (LLB, LLP)\n\nFix placement of numeral sign in letters comma digits\n\nReview rules for “under” and “there” contractions\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nNew, renamed or removed tables\n\nsw-ke-g1-2.ctb\n\nsw-ke-g1-3.ctb\n\nsw-ke-g1-4.ctb\n\nsw-ke-g1-5.ctb\n\nsw-ke-g1.utb\n\nsw-ke-g2.ctb\n\nka.utb\n\nny-mw.utb\n\nThe following files now all refer to the corresponding tables for Danish braille 2022:\n\nda-dk-g08.ctb\n\nda-dk-g16.ctb\n\nda-dk-g18.ctb\n\nda-dk-g26.ctb\n\nda-dk-g28.ctb\n\nda-dk-octobraille.dis\n\nThe old Danish tables for the now deprecated 1993 standard have been renamed to include “1993” in the filename:\n\nda-dk-g08.ctb -> da-dk-g08_1993.ctb\n\nda-dk-g16.ctb -> da-dk-g16_1993.ctb\n\nda-dk-g16-lit.ctb -> da-dk-g16-lit_1993.ctb\n\nda-dk-g18.ctb -> da-dk-g18_1993.ctb\n\nda-dk-g26.ctb -> da-dk-g26_1993.ctb\n\nda-dk-g26-lit.ctb -> da-dk-g26-lit_1993.ctb\n\nda-dk-g26l.ctb -> da-dk-g26l_1993.ctb\n\nda-dk-g26l-lit.ctb -> da-dk-g26l-lit_1993.ctb\n\nda-dk-g28.ctb -> da-dk-g28_1993.ctb\n\nda-dk-g28l.ctb -> da-dk-g28l_1993.ctb\n\nda-dk-octobraille.dis -> da-dk-octobraille_1993.dis\n\nNone\n\nNoteworthy changes in release 3.23.0 (2022-09-05)\n\nThis release contains significant updates to many existing braille tables (Chinese bopomofo, Hungarian, Japanese, Russian, Swedish, UEB grade 2 Ukrainian). On top of that it also contains new tables for Chinese Common Braille Scheme, Kinyarwanda and Luganda thanks to Cary-Rowen and Jake Kyle. Behind the scenes Samuel Thibault has been working tirelessly to fix memory related bugs.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nNone\n\nBug fixes\n\nFix a problem in the parsing of faulty unbalanced context expressions. Thanks to Samuel Thibault.\n\nFix a buffer overflow problem when output.length is larger than input.length. Thanks to Samuel Thibault.\n\nFix an endless loop in the handling of computer braille. Thanks to Bert Frees.\n\nBraille table improvements\n\nRemove computer braille from Japanese Kantenji as it is not part of the standard. Thanks to Kensaku Yoza.\n\nBring Swedish tables up to date with the latest standard published by Punktskriftsnämnden (the Swedish Braille Authority) in 2009. The table for uncontracted braille was replaced and new tables for (partially and fully) contracted braille have been added. Thanks to David Renström from Insyn Scandinavia AB.\n\nImprovements to Hungarian (added more exceptions) and migration to the nonumsign opcode thanks to Attila Hammer.\n\nFixed a bug in the Ukrainian table that led to wrong translation of some uppercase letters. Thanks to Andrey Yakuboy and Bert Frees.\n\nAugment the UEB grade 2 tables to resolve an ambiguity between lower groupsigns and punctuation at the beginning of words by placing a letter sign at the front of punctuation. This resolves an ambiguity between, for example, “discount” and “.count”. Thanks to Krzysztof Drewniak.\n\nAdd a new table for Chinese Common Braille Scheme which is a type of braille used for spelling Mandarin Chinese. It is a variant of the Chinese Current Braille System but has more perfect marking rules and produces less ambiguity than the latter. For more information see the comments in zhcn-cbs.ctb. Thanks to Cary-Rowen and Frank.\n\nUpdates to the Chinese bopomofo braille table thanks to Bo-Cheng Jhan:\n\nUpdate braille patterns of some Chinese characters and phrases\n\nAdd braille patterns for various Greek symbols\n\nAdd “Math rules” section and the mixed number rule\n\nAdd braille patterns for ☐ (⣏⣀⣹), ☑ (⣏⣿⣹), and ☒ (⣏⣭⣹)\n\nNew table for Kinyarwanda braille thanks to Jake Kyle from Compass Braille.\n\nNew table for Luganda braille thanks to Jake Kyle from Compass Braille.\n\nImprovements to the Russian contracted braille table thanks to Andrey Yakuboy:\n\nNow prefixes “из” and “без” are correctly contracted before hard sign (ъ).\n\nFixed a contraction for word “кое-где”, now it is contracted according to rules.\n\nOther minor fixes and improvements.\n\nOther changes\n\nNone\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nNone\n\nNew, renamed or removed tables\n\nzhcn-cbs.ctb\n\nlg-ug-g1.utb\n\nrw-rw-g1.utb\n\nsv-g0.utb\n\nsv-g1.ctb\n\nsv-g2.ctb\n\nNone\n\nSe-Se-g1.utb\n\nNoteworthy changes in release 3.22.0 (2022-06-06)\n\nThis is a major release. On the Braille tables side there is a new table for German grade 2 with capitalization and there are updates to the Dutch, German Hungarian, Punjabi, Russian, UK Braille Computer Notation and Slovak tables. Christian added a new opcode to indicate the end of a number where the number doesn’t end at a space character. Last but not least Samuel, Martin and Han have put a lot of work into checking for and fixing memory problems.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nAdd a new opcode nonumsign that helps with indicating the end of a number when it doesn’t occur at the end at the end of a word such as ‘123abc’ for example. For more details see the documentation. Thanks to Christian Egli.\n\nBug fixes\n\nPrevent a memory overflow in compilePassOpcode thanks to Martin Gieseking. This was reported in CVE-2022-26981 and should now be fixed.\n\nPrevent processing of characters beyond the string end in parseChars thanks to Martin Gieseking.\n\nPrevent an invalid memory writes in compileRule. Thanks to Han Zheng for reporting it and to Christian Egli for fixing it.\n\nBraille table improvements\n\nImprovements to German braille:\n\nImprove handling of single letters in grade 2 thanks to Mischa Künzle.\n\nImprove handling of emphasis thanks to Bert Frees.\n\nAdd a table for grade 2 with capitalization thanks to Christian Egli.\n\nFix a problem with Ñ in Dutch braille thanks to Paul Rambags\n\nUpdated Slovak Braille table to be inline with the 2021 Slovak braille usage guidelines.\n\nFixed a problem with the ‘+’ symbol in UK Braille Computer Notation thanks to Mario Arias.\n\nMajor improvements to the Hungarian braille tables thanks to Attila Hammer.\n\nMake Punjabi table to behave the same as Duxbury in forward translation and more reliably than Duxbury in back translation. Thanks to Jake Kyle.\n\nImprovements to the Russian and other Cyrillic tables thanks to Andrey Yakuboy:\n\nNow all Russian based tables return braille Unicode braille by default when forward translating, no need to include ru-unicode.dis manually.\n\nFrench letters (æ, ë and ï) have been added to the Russian literary braille table.\n\nOther changes\n\nIntegrate sanitizer tests in the CI pipeline and fix a large number of memory problems (leaks, overflow and undefined behavior) thanks to Samuel Thibault.\n\nRemoved the “experimental” label from the functions lou_indexTables, lou_findTable, lou_findTables, lou_getTableInfo and lou_listTables (the meta data query API).\n\nFix a build problem when using Clang 11 on macOS thanks to Robert Scott.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nNew, renamed or removed tables\n\nde-g2-detailed.ctb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.21.0 (2022-03-07)\n\nThis release sees major updates for Hungarian and German. The Swiss Library for the Blind, Visually Impaired and Print Disabled has agreed to upstream their tables and Attila Hammer has adapted Hungarian to the latest standard. A bug in numeric mode was fixed which should it make more useful for languages other than UEB. Finally there are fixes for Norwegian and Danish.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nNew table for German 6-dot computer braille thanks to the Swiss Library for the Blind, Visually Impaired and Print Disabled\n\nBug fixes\n\nWhen numeric mode was enabled, i.e. when a table contains any of the numericmodechars, midnumericmodechars or numericnocontchars opcodes, contraction was automatically disabled. This is required for UEB but not necessarily so for other braille systems (as mentioned in issue 615). This has now been changed so that contraction is only disabled if the nocontractsign has been defined. Thanks to Christian Egli.\n\nBraille table improvements\n\nFixed emphasis, section sign and dash between numbers in Danish tables thanks to Bue Vester-Andersen.\n\nCorrect latin small letter sharp s in Norwegian thanks to Lars Bjørndal and Dawn Renouf Bjørneby.\n\nMajor improvements to German Braille thanks to the Swiss Library for the Blind, Visually Impaired and Print Disabled\n\nImprovements to emphasis handling in German tables and greatly extended test coverage.\n\nAll the improvements from the tables formerly known as bidi tables were merged in the main tables and are now used by both tables. The bidi tables have been renamed to “detailed”. Essentially the detailed tables provide capitalized Braille which helps with the back-translation.\n\nUpstream all improvements from the sbs-braille-tables.\n\nImprovements to the Hungarian tables thanks to Attila Hammer.\n\nImproved back-translation, notably of words containing special consonants like “szsz” or “ssz”.\n\nExtended the Hungarian grade 1 “braille input” (back-translation aided by special extra dot patterns).\n\nImplemented latest update to the Hungarian braille standard (for example the characters “\" and “|” were changed).\n\nOther changes\n\nMake autogen.sh work on MacOS, thanks to Ken Perry\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nInvisible changes\n\nNew, renamed or removed tables\n\nde-comp6.utb\n\nde-g0-bidi.utb -> de-g0-detailed.utb\n\nde-g1-bidi.ctb -> de-g1-detailed.ctb\n\nNone\n\nNoteworthy changes in release 3.20.0 (2021-12-06)\n\nThis is a major release. Not only in terms of table additions and updates but also in the way the tables are written. Bert has replaced the uplow opcode with a more generalized base opcode. This clears up the path for a more generalized handling of emphasis and uppercase characters. In the course of this simplification some bugs with computer braille were discovered and fixed.\n\nOn the Braille tables side there is a brand new table for braille kanji and there are major updates to the Polish, Chinese, Russian literary and the UEB tables.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nThere is an experimental new feature that allows a table writer to write table macros. This feature is disabled by default. Macros are a helpful tool for refactoring, however as it stands the feature is not mature and might disappear in future releases.\n\nAdd a new opcode base that associates a character with another already defined character. Think of it as a generalized form of uplow. A typical use of this opcode is for defining a pair of letters, a lowercase and the corresponding uppercase.\n\nBug fixes\n\nFix a problem with the dot 7 capitalization indicator in computer braille thanks to Bert Frees.\n\nBraille table improvements\n\nNew table for Kantenji (or “braille kanji”, a Japanese braille system) thanks to Kensaku Y.\n\nImprovements to Polish literary braille table thanks to Łukasz Golonka.\n\nuse correct representation of indexes for squared, cubed etc.\n\nuse correct representation for fractions\n\nchange symbol used for underscore from dots 46 to 6\n\nadd U+2212 minus symbol (also to computer braille table)\n\nUpdates to the Chinese bopomofo braille table thanks to Bo-Cheng Jhan.\n\nComplete translation of CJK Radicals Supplement\n\nChange the default braille pattern of ‘蛤’ to ⠗⠜⠂\n\nCorrect the default braille pattern of many Chinese characters\n\nAdd various Chinese phrases involving exceptions of braille patterns\n\nAdd a math symbol ‘◊’ (⠫⠓)\n\nImprovements to the Russian literary (uncontracted and contracted) braille thanks to Andrey Yakuboy.\n\nIf the dot sign (‘.’) is after digits at the beginning of a string, the braille dot 6 isn’t inserted between the last digit and the dot. This is necessary for items’ numbers of numbered lists.\n\nBack translation for French letters has been disabled because of conflicts with punctuations.\n\nBack translation for Latin (mostly English and German) letters has been improved.\n\nThe definition of the 7/8 fraction (U+215E) has been fixed.\n\nPlacement of spaces around math symbols has been improved according to the Russian braille rules.\n\nThe apostrophe sign (“’”) and the right tick sign (u+2019) are displayed correctly if they’re in the end of a word (English, for example).\n\nNew contractions have been added and minor bugs have been fixed in the Russian contracted braille table.\n\nNew display table (ru-brf.dis) has been added. It adds support of Braille ASCII for Russian and other Cyrillic tables. Thanks to Andrey Yakuboy.\n\nImprovements to UEB thanks to James Bowden.\n\nFixed placement of numeric indicator in letters dot numbers.\n\nAdded more mathematical symbols.\n\nAdded the four new allowed shortform extension words.\n\nImprovements to words starting with “dis(h)” and “cross(h)”.\n\nImplement alphabet change indicator in Dutch braille thanks to Bert Frees.\n\nOther changes\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nThe uplow opcode has been removed and replaced with the more general base opcode.\n\nInvisible changes\n\nNew, renamed or removed tables\n\nru-brf.dis\n\nja-kantenji.utb\n\nlatinUppercaseComp6.uti\n\nNone\n\nru-ru.dis\n\ncs-letterDef8Dots.uti\n\nru-chardefs.cti\n\nnl-g0.uti\n\nnl-BE-g0.utb\n\nNoteworthy changes in release 3.19.0 (2021-09-06)\n\nFor this release Bert Frees has been hard at work to clean up the code base. He fixed a few bugs one of which was causing memory corruption. Others have contributed corrections to braille tables or even provided new tables. For example there are now tables for Tshivenda and for Russian contracted braille.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nBug fixes\n\nFix a bug in the uplow opcode thanks to Bert Frees.\n\nFix a possible crash due to memory corruption thanks to Bert Frees.\n\nBraille table improvements\n\nThe Norwegian 6 dots braille tables now correctly handles signs like section sign (‘§’ and ‘§§’), as well as numbersign (‘#’) before numbers. In addition the letters a with acute, o with tilde, n with long right leg and thorn are redefined. Phrases with capitals only are know handled correctly. All thanks to Lars Bjørndal.\n\nFix a problem with ‘ç’ in Northern Kurdish thank to Imam Kahraman and Christian Egli.\n\nAdd support for back translation in Russian literary braille thanks to Andrey Yakuboy.\n\nIn Russian literary braille, if the letters ‘Ё’ and ‘Й’ consist of two code points, they are displayed correctly.\n\nAdd new Russian contracted (grade 1) table thanks to Andrey Yakuboy and Ekaterina Anisimova.\n\nUpdate to Urdu, mostly to cater for spelling variations found in source text. Thanks to Jake Kyle.\n\nNew contracted braille table for Tshivenda created by Christo de Klerk at the request and under the auspices of the South African Braille Authority.\n\nFix in Arabic computer braille table thanks to Ikrami Ahmad:\n\nback-translate 256 to Latin full stop\n\nFix translation of URLs and file paths in Polish grade 1 table, thanks to Łukasz Golonka.\n\nOther changes\n\nFix the build script for Microsoft nmake thanks to Leonard de Ruijter.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nMajor refactoring of compileTranslationTable.c thanks to Bert Frees. Thanks to these changes a few bugs were found and fixed in the code and a few tables.\n\nNew, renamed or removed tables\n\nru-ru-g1.ctb\n\nve-za-g1.utb\n\nve-za-g2.ctb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.18.0 (2021-06-07)\n\nThis release brings support for many new languages: There is support for six new languages from South Africa, Northern Kurdish, Kazakh, Tatar, Yakut, Bulgarian literary braille and finally Khmer, Burmese and Vietnamese. Aside from that there are also major improvements to Afrikaans, Russian literary braille, Uzbek and Hebrew Computer Braille.\n\nI’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nBug fixes\n\nDon’t silently ignore the last line of a table when it doesn’t end with a new line character. Thanks to Bert Frees.\n\nBraille table improvements\n\nNew contracted braille table for the isiXhosa and isiZulu languages created by Christo de Klerk and Laurent Cadet de Fontenay at the request and under the auspices of the South African Braille Authority.\n\nNew contracted braille table for the Sesotho, Setswana and Sepedi languages created by Christo de Klerk at the request and under the auspices of the South African Braille Authority.\n\nNew braille table for Northern Kurdish thanks to Imam Kahraman.\n\nFix a problem with ‘]’ in Finnish 8 dot braille thanks to Christian Egli. The real problem was an unintended continuation line.\n\nMajor update to the grade 2 Afrikaans table. It now implements the new Afrikaans rules adopted and implemented recently by the South African Braille Authority. The rule changes simplify and rationalize the rules, especially those based on pronunciation. 571 of the list of 25912 test words were impacted by the changes and all have been corrected.\n\nImprovements to the Russian literary braille tables thanks to Andrey Yakuboy and Bert Frees:\n\nFixed a bug in ru-litbrl-detailed.utb that was causing a capital sign to be missing for Cyrillic uppercase letters after Latin letters.\n\nFixed a bug in ru-litbrl-detailed.utb that was causing a number sign to be missing in some cases.\n\nAdded more accented letters\n\nNew tables for Kazakh uncontracted, Tatar uncontracted and Yakut uncontracted braille thanks to Andrey Yakuboy.\n\nAdded more apostrophe symbols to English Computer Braille Code table thanks to BAUM Engineering.\n\nSmall fix to Italian computer braille thanks to Simone Dal Maso\n\nNew table for Bulgarian literary braille thanks to Румяна Каменска.\n\nFixes to Uzbek grade 1 thanks to BAUM Engineering.\n\ncapital sign for Roman numbers\n\nsigns (math, parentheses and other)\n\nsh and ch inside a word\n\ng and o with different accent marks\n\nMajor overhaul of the 8 dot Hebrew Computer Braille table thanks to Adi Kushnir\n\nFixed Hebrew input to properly work. It did not work at all before.\n\nAdded Russian support\n\nAdded special European characters\n\nFixed Arabic support.\n\nFixed some symbols to comply with the Israeli standard for computer Braille.\n\nChanged display name from Israeli Multilingual to just indicate Hebrew.\n\nNew tables for Khmer, Burmese (contracted and uncontracted) and Vietnamese (uncontracted, partially and fully contracted, as well as a variant for Southern Vietnam) thanks to Dang Hoai Phúc.\n\nOther changes\n\nBrilliant simplification of the table parser internals thanks to Bert Frees\n\nNew, renamed or removed tables\n\nkk.utb\n\nsah.utb\n\ntt.utb\n\nxh-za-g1.utb\n\nxh-za-g2.ctb\n\nzu-za-g1.utb\n\nzu-za-g2.ctb\n\nnso-za-g1.utb\n\nnso-za-g2.ctb\n\nsot-za-g2.ctb\n\ntsn-za-g2.ctb\n\nbg.utb\n\nkmr.tbl\n\nvi-vn-g0.utb\n\nvi-vn-g1.ctb\n\nvi-vn-g2.ctb\n\nvi-saigon-g1.ctb\n\nmy-g1.utb\n\nmy-g2.ctb\n\nkm-g1.utb\n\nNone\n\nhe.ctb -> superseded by he-IL-comp8.utb\n\nvi-g1.ctb -> superceded by vi-vn-g1.ctb\n\nNoteworthy changes in release 3.17.0 (2021-03-08)\n\nThis release stands in the tradition of small incremental improvements that make it another fine and solid release. Andrey Yakuboy put in a lot of work to improve Russian literary and computer braille. He also provided a new table for Belarusian uncontracted and computer braille. Aside from that there are numerous improvements in Braille tables such as French, Polish and Urdu. The documentation has been improved as has the table meta marking the tables whether they are geared towards forward or backwards translation. I’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nBraille table improvements\n\nThe backtranslation of æ in French 6 dot braille has been fixed thanks to André-Abush Clause.\n\nThe definition of the vertical line symbol (|) in the Russian computer braille table was corrected thanks to Andrey Yakuboy.\n\nImprovements to the Russian literary braille thanks to Andrey Yakuboy:\n\nLetters which are used in Old-Russian texts were added.\n\nArrows, integrals and other symbols were added.\n\nthe horizontal bar symbol (u+2015) was added and marked as a dash-symbol.\n\nNow accent marks are put before a letter according to the Russian braille rules.\n\nMany bugs with processing space-symbols were fixed.\n\nImprovements to processing dialogs and direct speech.\n\nImprovements to processing letters of different alphabets.\n\nNew tables for Belarusian uncontracted and computer braille thanks to Andrey Yakuboy.\n\nVarious fixes to Polish tables thanks to Łukasz Golonka:\n\nAdd em dash to both computer and literary Polish tables\n\nRemove some definitions which made it impossible to back translate quoted strings from the Grade 1 table\n\nFix back translation of capital M and add tests for back translation of all Latin capital letters for Grade 1 table\n\nUpdate to Urdu thanks to Jake Kyle:\n\nRevised definitions of SUPERSCRIPT ALEF and ARABIC LIGATURE ALLAH ISOLATED FORM.\n\nChanged contractions of ٹھ, ان, اِن, بے, بی, اَور and اور.\n\nDots 3-3 used for repeated words instead of 6-6.\n\nOther changes\n\nFixed some valgrind issues thanks to André-Abush Clause.\n\nImprove the documentation of caps opcodes thanks to Bue Vester-Andersen.\n\nAdd meta data to all tables indicating whether a table is geared towards forward or backwards translation or both. Again thanks to Bue Vester-Andersen.\n\nNew, renamed or removed tables\n\nbel.utb\n\nbel-comp.utb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.16.1 (2020-12-01)\n\nIn the frenzy to ship the 3.16.0 release a little mishap slipped in. The test suite contains an error and consequently doesn’t pass. It was promptly discovered and fixed by Samuel Thibault. So we present to you the real, hopefully fixed 3.16 release. Let’s name it 3.16.1.\n\nNoteworthy changes in release 3.16.0 (2020-11-30)\n\nThis release is mostly the work of Bert Frees. He has put in a lot of work and pushed some major improvements with regards to how emphasis is handled (and how this is documented). He fixed a crash when reading URLs using computer braille. He also worked with many contributors to get their improvements in. So we have better support for UEB, Dutch, Urdu, Malayalam, Arabic, Bashkir, Uzbek, Russian computer braille and for EBAE. I’d like to thank everybody for helping to bring liblouis forward.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nA new opcode noemphchars was added. This gives you more control over the placement and scope of various emphasis indicators. Thanks to Bert Frees.\n\nBug fixes\n\nFix an endless loop when using compbrlAtCursor thanks to Bert Frees\n\nBraille table improvements\n\nImprovements to US EBAE conformance with BANA emphasis guidelines thanks to Benetech.org\n\nFixed a problem with apostrophe in Malayalam thanks to Jake Kyle\n\nImprovements to contraction use in UEB thanks to James Bowden. In particular the checkmark (U+2713) is added, the emdash (U+2014) is fixed, the right single quote used as apostrophe between letters is fixed and finally some more accented letters have been added.\n\nImprovements to Urdu Braille and Malayalam thanks to Jake Kyle\n\nAdd characters for Bashkir and Uzbek languages to the Russian computer braille table. Thanks to Andrey Yakuboy.\n\nNew table for Bashkir uncontracted braille thanks to Rustam Churagulov and Gabidullin Yunir.\n\nUpdated < and > symbols in the Arabic tables thanks to Ikrami Ahmad.\n\nImprovements to Dutch thanks to Bert Frees.\n\nEvery word part in a capitalized compound word counts in the length of a passage.\n\nbegcapsphrase is allowed to start in a word preceded by punctuation.\n\nImproved translation of ligatures in UEB thanks to Bert Frees.\n\nMultiple improvements to the Russian literary braille thanks to Andrey Yakuboy and Bert Frees:\n\nMany new symbols (punctuation, bullets, math symbols, etc) have been added.\n\nThe table now includes the international phonetic alphabet table.\n\nPunctuation after digits and fractions is now marked with dot 6 to avoid ambiguities.\n\nOther changes to conform better with Russian braille rules.\n\nA new table that indicates capital letters was added. This is the new recommended Russian table for braille display users.\n\nRemoved the old ru-ru-g1.utb in favor of ru-litbrl.ctb and ru-litbrl-detailed.utb.\n\nOther changes\n\nSupport for Python 2 has been removed. The python bindings now only support Python 3. The deprecation notice was announced in Release 3.13 and the removal is finally done now.\n\nImprovements to the placement of emphasis and capital indicators.\n\nThe documentation for the emphasis opcodes has been further improved thanks to Bert Frees.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nemphmodechars can and must now be set per emphasis class.\n\nInvisible changes\n\nThe emphasis and capitalization handling code has seen major streamlining, simplification and tidying thanks to Bert Frees.\n\nNew, renamed or removed tables\n\nba.utb\n\nru-litbrl-detailed.utb\n\nen-us-emphasis.uti\n\nNone\n\nru-ru-g1.utb\n\nNoteworthy changes in release 3.15.0 (2020-08-31)\n\nThis release contains updates to the Afrikaans, Malayalam, Malay, Israeli, classical English and Portuguese tables. It also contains a new table for Coptic thanks to first-time contributor Ibraam Nasif. Behind the scenes there have been major changes to the cross-compilation tool-chain that will finally allow us to ship pre-built windows binaries that contain lou_checkyaml.exe.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nNone\n\nBug fixes\n\nNone\n\nBraille table improvements\n\nNew computer braille table for the Coptic language thanks to Ibraam Nasif from Coptic Bishopric of Youth\n\nImprovements to Afrikaans thanks to Christo de Klerk\n\nFixed correct handling of the ŉ character (0x149)\n\nPrevent contraction of\n\n“self” in “selfoon”, “selfone”,\n\n“ui” in words and names like “quisling”, “quidproquo”, “quiëtis”, “Quinten”, “Quintus”,\n\n“er” in words like “konstituering”.\n\nImproved table for Malayalam grade 1 thanks to Jake Kyle.\n\nFixed rules for Candrakkala character at the end of a word.\n\nFixed rules for letters ര മ ങ in certain contexts.\n\nImproved back-translation.\n\nImprovements to grade 2 Malay braille thanks to Herbert Koh.\n\nImprovements to Israeli 6-dot thanks to BAUM Engineering.\n\nFixed number sign for Arabic digits.\n\nFixed Hebrew letters with dagesh.\n\nAdded bullets to the classical English tables, thanks to Bue Vester-Andersen\n\nImproved Portuguese grade 1 thanks to Bue Vester-Andersen.\n\nFixed forward translation of &, <, >, `, ¶ and ‘.\n\nImproved back-translation. The table is now tagged as going both forward and backward.\n\nAdded missing square root sign.\n\nOther changes\n\nNone\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nMajor rework of the cross-compilation tool-chain. There are now Docker images that should allow for local builds of binaries for 32 and 64 bit. These include the libyaml library so the binaries contain lou_checkyaml.exe. This will allow table creators to test their changes locally under windows.\n\nNew, renamed or removed tables\n\ncop-eg-comp8.utb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.14.0 (2020-06-02)\n\nThis release contains major updates to Arabic, Dutch 8-dot computer braille, German, Russian computer braille, Ukrainian computer braille and Uzbek. Also there are new tables for Israeli multi-language Hebrew/Arabic/English braille and Malay. Aside from that there have been many code cleanups and bug fixes.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nAdd new test mode in lou_checkyaml for testing display tables. Thanks to Bert Frees.\n\nBug fixes\n\nWork around a bug that causes an endless loop in French uncontracted braille thanks to André-Abush Clause.\n\nBraille table improvements\n\nUpdates to the Russian computer braille table thanks to Andrey Yakuboy:\n\nFixed diacritics, Greek letters and Hebrew.\n\nAdded new Cyrillic letters.\n\nFixed several minor bugs.\n\nNew table for Uzbek braille thanks to BAUM Engineering.\n\nNew table for Ukrainian computer braille thanks to Andrey Yakuboy and Oleh Shpai.\n\nImprovements to Arabic thanks to Ikrami Ahmad and Mada, Qatar Assistive Technology Center.\n\nAdded a lot of new symbols (algebra, geometry, Greek, etc.) to the grade 1 table.\n\nChanged some symbols for less conflicts with grade 2.\n\nImplemented letter sign / grade 1 indicator to cancel numbers and inhibit contractions when in grade 2.\n\nUpdated 8-dot computer braille table for better (easier to memorize) presentation of basic math symbols and punctuation marks.\n\nImproved back-translation.\n\nImprovement to German thanks to Bue Vester-Andersen.\n\nRemoved superfluous letter sign before certain lesser-used accented letters.\n\nFinal version of Dutch 8-dot computer braille table thanks to Leonard de Ruijter.\n\nNew Israeli multi-language Hebrew/Arabic/English tables for both uncontracted and computer braille. Thanks to BAUM Engineering and Erez Kugler from TSR Gaash.\n\nNew table for grade 2 Malay braille (Malaysia) thanks to Herbert Koh.\n\nOther changes\n\nYou can now use up to 256 noletsign characters in a table, thanks to Christian Egli.\n\nMajor improvements to the documentation for the Standing Alone Sequences and their related opcodes such as seqdelimiter and also clarifications regarding the begcaps and endcaps opcodes thanks to Bue Vester-Andersen.\n\nDeprecation notice\n\nThe class opcode has been deprecated in favor of attribute, which has been enhanced to do everything class can do.\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nNew, renamed or removed tables\n\nuz-g1.utb\n\nar-ar-g1-core.uti\n\nar-ar-math.uti\n\nhe-IL.utb\n\nhe-IL-comp8.utb\n\nNone\n\nda-dk.dis\n\nThis table has long been superseded by da-dk-octobraille.dis.\n\nda-lt.ctb\n\nThis table was a step on the way to defining a Danish 8 dot standard. The table was referring to an old Danish Braille note-taker from the 80s and 90s, which is not used any more.\n\nfi1.ctb and fi2.ctb\n\nThese tables are obsolete. Use fi-fi-8dot.ctb instead.\n\nNoteworthy changes in release 3.13.0 (2020-03-02)\n\nA tremendous amount of work by lots of different people has gone into this release. Bert Frees for example added new opcodes, fixed long standing bugs (with emphasis and capitalization), made the documentation more clear and helped table contributors bringing in their improvements. Bue Vester-Andersen added major improvements to Danish and German braille. This release also contains much improved tables for Afrikaans, Russian computer braille, Urdu and Chinese.\n\nOn a personal note I’d like to say that this is the 20th release of liblouis shipped by the current release team Bert Frees and Christian Egli. I hope we can continue to do so.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nThe nocross opcode has been made into a prefix opcode, which means that it can now be used in combination not just with the always opcode but also with other translation opcodes such as begword, e.g. nocross begword sh 146 for example. The old usage of the opcode no longer works, see Backwards incompatible changes.\n\nAdded a new opcode rependword, needed to implement Malay braille. Thanks to Bert Frees.\n\nEmphasis and capitals can now be marked correctly in more cases. Thanks to Bert Frees.\n\nWhen begemphword (begcapsword) is defined but not endemphword (endcapsword), use emphletter (capsletter) to mark every character in an emphasized (capitalized) part that ends in the middle of a word.\n\nWhen begemphword (begcapsword) and begemph (begcaps) are both not defined, use emphletter (capsletter) to mark every emphasized (uppercase) letter.\n\ncapsnocont has no influence anymore on whether capsletter is used for every uppercase letter or not, see <a href=”Backwards incompatible changes”>Backwards incompatible changes.\n\nBug fixes\n\nFix a crash on sparc64 thanks to Samuel Thibault.\n\nFixed a bug where the inputPos array was not monotonically increasing. This is a problem for language bindings that try to do hyphenation based on this information. Thanks to Bert Frees.\n\nA couple of small Coverity fixes thanks to David King.\n\nFix an infinite loop involving multipass rules and backtranslation thanks to Bert Frees and Bue Vester-Andersen.\n\nFix several problems in the Python bindings thanks to Leonard de Ruijter, Łukasz Golonka and André-Abush Clause:\n\nEnsure that the mbcs encoding is always used to encode file path on Windows, especially when ‘Unicode UTF-8’ feature is enabled.\n\ngetTypeformForEmphClass was passed a decoded string on Python 3 instead of an encoded one.\n\nThe same applies to compileString. We encoded the input string, but never used that encoded one when passing it to liblouis.\n\nbegemphword (begcapsword) and endemphword (endcapsword) are now used for single letters within a word when emphletter (capsletter) is not defined.\n\nFor backward translation the returned input length is now equal to the initial input length (as it is for forward translation) thanks to Bert Frees.\n\nBraille table improvements\n\nImprovements to Afrikaans thanks to Christo de Klerk\n\nFixed back translation of some lower words.\n\nFixed several contraction errors where contractions are based on pronunciation or occur where compound words join.\n\nEliminated grade 1 indicator where a single letter follows a single apostrophe to indicate an abbreviated word, e.g. ‘k for ek.\n\nCorrected the use of the grade 1 indicator in grade 2 with signs which would conflict with contractions, such as the trademark sign that would conflict with the contraction of tussen.\n\nFixed the back translation conflict between the UEB circle shape indicator and words containing $= being the contraction for “alge”.\n\nImprovements to Russian computer braille table thanks to Andrey Yakuboy.\n\nThe table is now based on the Unicode character set. A lot of new characters were added that aren’t in KOI8-R, including Greek, Hebrew, accented letters and so on.\n\nFor special characters we now follow the definitions from other software (JAWS, TSS, DBT) instead of following the American standard.\n\nImprovements to Urdu Braille thanks to Jake Kyle\n\nChanged definition of \\x0624 (Waw with hamza above) from dots 1256 to dots 3-2456 following advice from proof reader.\n\nAdded 2 character versions of letter plus diactric (previously only the one character versions defined):\n\nUpdates to the Danish Tables thanks to Bue Vester-Andersen:\n\nFixed back-translation for some JAWS Braille drivers, which deliver Unicode characters to Liblouis as input from a Braille keyboard.\n\nEnsured proper use of letsign in connection with accented letters.\n\nRe-arranged and strengthened tests to include all Unicode characters defined in the tables.\n\nUpdates to the Chinese bopomofo braille table thanks to Bo-Cheng Jhan, Coscell Kao and Victor Cai.\n\nNew experimental German tables for grade 0 (Basisschrift) and grade 1 (Vollschrift) that are more suitable for back-translation, thanks to Bue Vester-Andersen.\n\nAll capital letters are marked.\n\nAccented letters are translated using de-accents-detailed.cti to make the translation as detailed as possible.\n\nApostrophes and single quotation marks are translated the same.\n\nOther changes\n\nThe documentation for the emphasis opcodes has been reworked and is now much more clear and accurate thanks to Bert Frees.\n\nDeprecation notice\n\nPython 2 is no longer maintained since the beginning of this year. The current liblouis Python bindings work with both Python 2 and 3. However the support for Python 2 will be dropped in the next release (3.14) at the beginning of June 2020. If you have code that uses the liblouis Python bindings with Python 2 then please refer to the official porting guide for help with migrating it.\n\nBackwards incompatible changes\n\nSince the nocross opcode has been made into a prefix opcode, it must now be used in combination with another opcode. For example nocross sh 146 must now be written as nocross always sh 146.\n\nThe capsnocont opcode can not be used anymore to control whether capsletter is inserted for every uppercase letter. This now depends on whether begcaps and begcapsword are defined.\n\nInvisible changes\n\nNew, renamed or removed tables\n\nde-g0-bidi-core.uti\n\nde-g0-bidi.utb\n\nde-g1-bidi-core.cti\n\nde-g1-bidi.ctb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.12.0 (2019-12-02)\n\nThis release contains major updates to the UEB, Afrikaans, Chinese, Danish and Polish tables. Aside from that there have been many code cleanups, such as the elimination of many global vars and bug fixes such as an endless loop or a crash in lou_translate.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nNone\n\nBug fixes\n\nFix a memory leak when several tables are specified and some of them that can’t be resolved. Thanks to André-Abush Clause.\n\nFix an endless loop with multipass rules where endReplace is smaller or equal to startMatch. Thanks to Bert Frees and Bue Vester-Andersen.\n\nBraille table improvements\n\nPunctuation corrections in Ethiopic Braille thanks to Dr. Tamru E. Belay.\n\nFixes to the Norwegian 8dot braille table in regards to 4 Sami characters, capital and small letters S and Z with caron. Thanks to Oddvar Øyan and Lars Bjørndal.\n\nImprovements to Afrikaans contracted braille thanks to Christo de Klerk\n\nOver 50 cases have been corrected where braille rules were not correctly applied in words, mainly in those cases where contractions depend on pronunciation; for example, ui or ie must not be contracted in requiem.\n\nCorrected contraction errors caused by start or end of input not properly taken into account.\n\nWords are no longer contracted into lower word contractions when they are adjacent to lower punctuation, for example: “hier.\n\nWords are now contracted into their lower contractions when they are adjacent to upper punctuation, for example: (hier.\n\nNew draft table for Dutch 8-dot computer braille thanks to Leonard de Ruijter.\n\nUpdates to the Chinese bopomofo braille table thanks to Bo-Cheng Jhan, Coscell Kao, 特種兵, 黃偉豪, and Victor Cai.\n\nFixes to Polish grade 1, thanks to Łukasz Golonka\n\nRemoves some unneeded midnum symbols from the Polish Grade 1.\n\nFixes some symbols which weren’t defined according to the specification.\n\nMakes it possible to type dot from a braille keyboard.\n\nAdds Greek letters and some commonly used math operators to both the Grade 1 and the computer braille table.\n\nFix several conflicts in fr-bfu-comp68.cti with regards to the IPA Unicode range. These had been especially noticed when compbrlAtCursor mode flag was used. Thanks to André-Abush Clause.\n\nMajor Improvements to contraction use in UEB thanks to James Bowden.\n\nUpdates to the Danish Tables thanks to Bue Vester-Andersen:\n\nAdded miscelaneous Unicode characters to 8 dots grade 1 and 2 (accented letters, punctuation, arrows and some math signs). Most of these characters have not been defined in the Danish Braille standard. This implementation is purely experimental, and the characters may be changed later.\n\nUpdated the 6 dots tables with more Unicode characters (no arrows or math signs).\n\nCorrected a bug in 8 dots grade 2, which resulted in the “var” contraction not always being properly applied.\n\nOther changes\n\nMake sure the log callback uses the same calling convention as all the other exported functions. Thanks to Leonard de Ruijter.\n\nFix a problem with Non-ASCII characters in file paths in the Python bindings, thanks to André-Abush Clause.\n\nEliminate some of the globals variables thanks to Bert Frees.\n\nThe display and the translation are now separated at least internally, thanks to Bert Frees. As a reminder, there are two phases to a braille conversion:\n\ntranslation\n\nliblouis uses the rules in the translation table to convert characters to dots\n\ndisplay\n\ndisplay the dots as characters. Usually liblouis uses the characters defined in display rules (in display tables) but as a fallback it uses mappings defined in the translation table, e.g. letter rules.\n\nNo longer install lou_compare, a tool that is used to run regression tests for UEB. As it is only run during testing it will no longer be installed by default on a users machine.\n\nRemove a hidden feature of lou_translate that would cause it to crash if passed an invalid file name. Thanks to Christian Egli.\n\nRaise an error if a dot pattern can not be displayed instead of silently ignoring it thanks to Bert Frees.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nNew, renamed or removed tables\n\nnl-comp8.utb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.11.0 (2019-09-02)\n\nA tremendous amount of work by Dave Mielke and Bert Frees has gone into this release. They have improved liblouis for use on note taker devices, for backwards translation and a number of languages. Many other contributors (listed below) have also helped in fixing bugs and improving braille tables, such as Dutch, Mongolian, Polish, Ancient Greek, Danish, Irish, Chinese, and American Braille Computer Code.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nEnable always rules with a single character and a single braille cell for back-translation. Thanks to Bue Vester-Andersen.\n\nImplement noUndefined mode for forward translation, thanks to Dave Mielke.\n\nUse fallback braille representations (NABCC) for rendering undefined characters in hexadecimal notation, thanks to Dave Mielke.\n\nAlways render undefined characters, also ASCII characters, in hexadecimal notation.\n\nAdd a new metadata field index-name for selecting a table from a list fast and efficiently. It has the most important information first and no redundant information. It should look nice when sorted. This in contrast to the existing display-name field which is for describing a table accurately and should sound good. Thanks to Dave Mielke and Bert Frees.\n\nBug fixes\n\nDon’t let a caps passage end on a word with no letters. Thanks to Bert Frees.\n\nHandle word resets in the last word of an caps or emphasis passage if the end indicator was placed before the word. Thanks to Bert Frees.\n\nNever convert to lowercase if capsletter is not defined. Thanks to Bert Frees.\n\nFix position mapping for back-translation when noUndefined mode is active. Thanks to Dave Mielke.\n\nFix bug where a translation would hang on words that match both a nocont and a repeated rule. Thanks to Dave Mielke.\n\nFix bug where the effect of capsnocont would leak to the next word if that word starts with a capital. Thanks to Bue Vester-Andersen.\n\nBraille table improvements\n\nFix an issue with ordinal numbers inside caps passages in Dutch braille. Thanks to Bert Frees.\n\nImproved back-translation for Mongolian thanks to Angaragerdene.\n\nFixes to Polish grade 1 and Polish computer braille thanks to Łukasz Golonka.\n\nImprovements to Ancient Greek braille, which has been renamed “Greek international braille”. A version with composed accents is made available as a .uti table. Thanks to Dave Mielke and Μαρια Γεωργακαράκου (Maria Georgakarakou).\n\nVarious improvements to modern Greek thanks to Dave Mielke.\n\nImprovements and fixes to Spanish contracted braille. Details in #741. Thanks to Juan Pablo Bello.\n\nImprovements and fixes to the Danish tables. Thanks to Bue Vester-Andersen.\n\nAdd a display table to match Word CX which is used in Norway and Sweden, and maybe also in other countries thanks to Lars Bjørndal.\n\nFix handling of colon within number in Dutch braille, thanks to Jake Kyle.\n\nFix translation of bullet and dot operators in Dutch braille, thanks to Paul Rambags\n\nAdded North American Braille Computer Code table (en-nabcc.utb) which is the counterpart of the text_nabcc.dis display table. Thanks to Dave Mielke.\n\nAdd support for the International Phonetic Alphabet (IPA) to the Chinese bopomofo braille table, thanks to Hurt Huang and Sponge Jhan. Various improvements, including dot patterns and test cases, to the Chinese bopomofo braille table, thanks to Sponge Jhan.\n\nUnified English Braille no longer displays a single underscore when multiple underscores are in the text, thanks to André-Abush Clause.\n\nUpdate to Afrikaans uncontracted braille and new table for contracted braille. Thanks to Christo de Klerk and Greg Kearney.\n\nUpdate Irish braille (contracted and uncontracted) to the May 2019 version of the specification, thanks to Ronan McGuirk\n\nOther changes\n\nThe python wrapper now encodes and decodes strings to/from UTF-16 and UTF-32 using the surrogatepass error handler. This ensures that single UTF-16 surrogate characters are processed correctly by the wrapper and don’t raise an encoding/decoding error. Thanks to Leonard de Ruijter.\n\nMetadata keys and values are now case insensitive, thanks to Dave Mielke.\n\nRemove unicodedefs.cti. It was obsolete and never meant to be included by any tables. Instead use the online references as mentioned in the documentation now. See also #696.\n\nlou_checkyaml test reporting has been improved, thanks to Bert Frees. For example it now has a --verbose option so that printing of expected failures can be enabled.\n\nHyphenation tables have been removed from tables except those needed for nocross rules, thanks to Bert Frees.\n\nThe idea is that the caller (for example odt2braille or liblouisutdml) should be able to decide for themselves which hyphenation table to use. The case in which a table contains nocross rules is an exception. In this case the hyphenation patterns are a real part of the table. Because it is not recommended to append an own hyphenation table in this case, a #-has-nocross metadata field was added to indicate that a table contains nocross rules.\n\nlou_hyphenate can now handle more than just words (sequences of letters), e.g compound words, thanks to Bert Frees.\n\nDeprecation notice\n\nThe noUndefinedDots mode has been renamed to noUndefined. For backwards compatibility noUndefinedDots is still available in the header file and in the Python bindings, as an alias for noUndefined.\n\nBackwards incompatible changes\n\nNone\n\nInvisible changes\n\nInternally separate more clearly the display and translation phases.\n\nNew, renamed or removed tables\n\ngrc-international-common.uti\n\ngrc-international-composed.uti\n\ngrc-international-decomposed.uti\n\nen-nabcc.utb\n\ngr-bb.ctb -> grc-international-en.utb\n\nunicodedefs.cti\n\nfi-fi.ctb\n\nNoteworthy changes in release 3.10.0 (2019-06-03)\n\nThis release comes across as quiet, containing just the usual assortment of braille table improvements, cleanups, bug fixes and the classic buffer overflow patches. But beware, a lot has happened behind the scenes. Bert and Davy have been adding a new opcode to handle special emphasis situations. A number of annoying restrictions with regards to names, such as class names have been removed thank to Bert. And lastly also thanks to Bert it is now possible to define inline display tables in your YAML tests.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nAdd a new opcode emphmodechars. Thanks to Bert Frees and Davy Kager.\n\nBug fixes\n\nRemove memoization in checkAttr. It wasn’t implemented correctly, caused some weird bugs and probably didn’t do much for performance. Thanks to Bert Frees.\n\nFix multiple buffer overflows in compilePassOpcode. Thanks to Cheng Wen for the report and to Christian Egli for the fix.\n\nFix a build problem when building without libyaml thanks to Bert Frees.\n\nBraille table improvements\n\nAdded modified letters to UEB thanks to Mike Gray.\n\nComplete overhaul of the U.S. six-dot computer braille tables to align with the CBC standard thanks to Timothy Wynn. There is now a sub-table for EBAE (en-us-compbrl.uti) and a stand-alone table (en-us-comp6.ctb).\n\nConforms to the CBC standard from BANA for character definitions that differ from the 8-dot ASCII braille (11 punctuation marks).\n\nAdded rules for braille indicators, emphasis indicators, and isolated lower-cell signs to the stand-alone table.\n\nUncontracted and contracted EBAE tables no longer use dot 7 when in computer braille mode.\n\nen-us-compbrl.ctb was deleted because it was identical to en-us-comp6.ctb.\n\nUpdate Bopomofo-based Chinese Braille thanks to Sponge Jhan\n\nCorrect various dot patterns of Chinese characters.\n\nAdd more known pattern exceptions of Chinese characters.\n\nApply word opcode to 倔 and 据.\n\nChange dot pattern of ＆ to 456-12346.\n\nde-de-comp8.ctb now has definitions for musical Unicode characters thanks to Daniel Mayr\n\nEmphasis improvements in Unified French 6 dots Braille thanks to Ludovic Oger.\n\nImprovements to Unified English braille, Grade 2 thanks to James Datray from Freedom Scientific.\n\nNumerous back-translation fixes to Grade 2 of UK English and Unified English Braille thanks to Anthony Tibbs.\n\nUpdates to Dutch Braille thanks to Bert Frees\n\nHyphen cancels the effect of emphasis indicator\n\nLeft/right curly brackets\n\nWrite currency symbols in full if they come after the number\n\nOther changes\n\nRemove various restrictions on which characters and braille cells can be used in translation rules, thanks to Bert Frees.\n\nRemove some code duplication in pattern.c thanks to Bert Frees\n\nIt is now also possible to define inline tables when a display table has been defined thanks to Bert Frees\n\nNightly snapshots of liblouis are now also built for win64 thanks to Bert Frees\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nNew, renamed or removed tables\n\nen-us-compbrl.uti\n\nchardefs.cti -> en-chardefs.cti\n\nen-us-compbrl.ctb\n\nNoteworthy changes in release 3.9.0 (2019-03-04)\n\nThis release has seen a tremendous amount of work by Bert Frees. He was instrumental in pushing the improvements for Latvian, Norwegian and Slovenian. But most prominently he pushed the big change for space and control character handling through the door. These characters are now no longer hard coded in liblouis. This should solve a few long standing issues. Other than that there is the usual assortment of code improvements and cleanups.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nNone\n\nBug fixes\n\nFix a problem in the callback registration in the Python bindings thanks to Leonard de Ruijter.\n\nFixed memory leaks created by block scope compound literals thanks to Martin Gieseking.\n\nThe hard coded rules dealing with white space have been replaced with a normal table that is included in all tables. This fixes a number of bugs to do with space and control characters. This (big) change has been brewing for a couple of releases and has finally landed. Thanks to Christian Egli and Bert Frees.\n\nBraille table improvements\n\nMajor extension of the German 8 dot computer braille table thanks to Ali-Riza Ciftcioglu. For example the Euro sign or quote characters are finally defined.\n\nFix a few issues with Hungarian grade1 and grade2 Braille thanks to Attila Hammer.\n\nVarious improvements to Norwegian thanks to Lars Bjørndal, Jostein Austvik Jacobsen, Ammar Usama and Bert Frees.\n\nUpdates to Bopomofo-based Chinese Braille thanks to Sponge Jhan: Improved Braille representation of Chinese characters, and rewritten Kana rules using multipass statements.\n\nImplement the new Slovenian Braille standard thanks to Robert Merič and Bert Frees.\n\nUpdates to Latvian Grade 1 Braille thanks to Artis Raugulis and Bert Frees.\n\nFixes to English, U.S. Grade 2 (ABAE) thanks to jdatray.\n\nOther changes\n\nDon’t search for tables in /usr/local/share/liblouis/tables (or the Windows equivalent) if LOUIS_TABLEPATH is set.\n\nThe log levels in liblouis.h are no longer exposed as LOG_FOO but instead are now prefixed. So LOG_WARN becomes LOU_LOG_WARN for example to issue a warning from a C program using liblouis. The actual values remain the same, so the ABI remains stable.\n\nDeprecation notice\n\nThe locale opcode was never implemented and was just silently ignored. It is now removed from the tables and a warning will be issued if it is found in a table.\n\nBackwards incompatible changes\n\nNew, renamed or removed tables\n\nNone\n\nspaces.ctb -> spaces.uti\n\nNone\n\nNoteworthy changes in release 3.8.0 (2018-12-03)\n\nThe major focus of this release is on braille table updates. There are major updates to German, Arabic, Chinese, Turkish, Dutch, Czech, Latvian, Spanish and Ethiopic. Some of these new tables have only been possible because Bert Frees fixed some nasty long standing bugs behind the scene. Also there is the usual assortment of code improvements and cleanups.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nNone\n\nBug fixes\n\nFix support more than 4 classes thanks to Bert Frees.\n\nFix capitalization of words that match nocont rules thanks to Bert Frees.\n\nBraille table improvements\n\nDefined the undefined character for the Czech tables thanks to Jan Hegr.\n\nImprovements to Unified English braille thanks to Mike Gray\n\nUpdated the Dutch table to the new 2017.1 braille standard thanks to Davy Kager.\n\nImprovements to the Polish grade 1 table, to make back-translations of diacritics working\n\nFixes to Latvian braille table thanks to Gatis Grintals and Artis Raugulis.\n\nImprovements to traditional Mainland Chinese braille and two-cell Chinese Braille thanks to Sunian Loomee.\n\nUpdate Bopomofo-based Chinese Braille to version 2018-11 thanks to Bo-Cheng Jhan\n\nCorrect the default braille pattern of many Chinese characters\n\nAdd various Chinese phrases involving exceptions of braille patterns\n\nModify dot patterns of dashes for readability reasons\n\nAdded a table for Turkish grade 2 thanks to Uğur Gürbüz and Simon Aittamaa\n\nMajor upgrade to the German tables. They have been upgraded to Das System der deutschen Brailleschrift (2018). They are much smaller now as they are based on lou_maketable. As they now work for any locale (be it Switzerland or Germany) they have been merged into one set of tables for the different grades. Thanks to Christian Waldvogel.\n\nNew table for Arabic contracted braille thanks to Ikrami Ahmad.\n\nNew table for Arabic computer braille thanks to Ikrami Ahmad.\n\nImprovements to Arabic uncontracted braille thanks to Ikrami Ahmad.\n\nImprovements to Ethiopic thanks to Tamru E. Belay.\n\nNew table for Spanish contracted braille thanks to Juan Pablo Bello.\n\nOther changes\n\nUpdated the lou_allround and lou_trace test tools to include all the mode flags described in the documentation of the lou_translateString() function, thanks to Bue Vester-Andersen\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nThe pass1Only flag has been deprecated for a while and is now removed from the code, thanks to Bue Vester-Andersen.\n\nNew, renamed or removed tables\n\ntr-g2.ctb\n\nar-ar-g2.ctb\n\nar-ar-comp8.utb\n\nes-g2.ctb\n\nde-de-accents.cti -> de-accents.cti\n\nde-de-g0.utb -> de-g0.utb\n\nde-de-g1.ctb -> de-g1.ctb\n\nde-de-g2.ctb -> de-g2.ctb\n\nde-ch-g0.utb -> de-g0.utb\n\nde-ch-g1.ctb -> de-g1.ctb\n\nde-ch-g2.ctb -> de-g2.ctb\n\nar-fa.utb\n\nEs-Es-g1.utb\n\nNoteworthy changes in release 3.7.0 (2018-09-03)\n\nThis release implements major improvements for back-translation thanks to concerted efforts by Bue Vester-Andersen, Bert Frees, Timothy Lee and others. In particular the input/output positions are now correct also for back-translation. There are new and improved Chinese Braille tables and some long awaited improvements to UEB. The release also has some code cleanups and documentation improvements.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nAdded a new opcode midendnumericmodechars. Characters defined with this opcode can appear in the middle or at the end of a number without canceling numeric mode. Thanks to Bue Vester-Andersen.\n\nBug fixes\n\nFix another stack-based buffer overflow in input parsing reported by Henri Salo thanks to Christian Egli.\n\nFix input/output positions for back-translation. Thanks to excellent bug reports and patches by Timothy Lee, Bert Frees heroically sat down and reworked the handling of the input/output positions for back-translation. This solves numerous issues with backward translation.\n\nThe returned inlen and outlen now always match thanks to the above work on input/output positions by Bert Frees.\n\nMajor improvements in the back-translation of capitalized words (capsword) in conjunction with punctuation and numbers. Thanks to Bue Vester-Andersen\n\nFixed a problem in the back-translation of numbers in conjunction with punctuation and letters. Thanks to Rimas Kudelis and Bue Vester-Andersen\n\nFix a buffer overflow in matchCurrentInput. Thanks to Hongxu Chen for reporting and to Christian Egli for fixing it.\n\nBraille table improvements\n\nDanish grade 2 tables: Reduced hyphenation to only the hyphens necessary for correct Braille translation. Replaced the longer rules with hyphenation for better cursor positioning. Corrected some words. Thanks to Bue Vester-Andersen.\n\nNew Chinese Mandarin Braille Codes (Grade 1) and (Grade 2) thanks to Sunian Loomee. The first one is for Chinese Common Braille, commonly known as the old Braille where a Chinese character is composed of three Braille Symbols, consonants, vowels and tones. The second table is for Chinese double spelling Braille, commonly known as the new Braille where Chinese character is composed of two Braille Symbols, consonants and vowels, ( the tones are included in vowels ).\n\nMajor update to the Urdu tables thanks to Jake Kyle.\n\nBack-translation of numbers in Latvian, Polish, Portuguese, Serbian, and Swedish has been fixed thanks to Bue Vester-Andersen.\n\nImprovements to UEB such as handling of BLT, BLVD and LLC, number sign placement, final-letter groupsign usage and final-letter back-translation thanks to Mike Gray.\n\nSignificant changes to Bopomofo-based Chinese Braille. Among other things there is now complete the support of CJK Unified Ideographs Extension A and some symbols were added for Nemeth. Thanks to Sponge Jhan and 黃偉豪. With this change we can now properly handle duoyinzi, Chinese words that have more than one pronunciation. The granularity of the cursor movement can now reflect positions of all Chinese characters.\n\nOther changes\n\nAdded documentation of opcodes which were previously introduced as part of the UEB work. Thanks to Bue Vester-Andersen.\n\nTest suite improvements: In addition to checking the translation the tests now also check if the provided inlen is the same as the returned inlen and retry the test with a larger output buffer.\n\nFix a problem in the Makefiles that prevented liblouis from being built with automake 1.16. This is fixed now thanks to a patch from Samuel Thibault.\n\nRemoval of the code for the scripting language for multipass opcodes. This code was originally introduced in 2012 but never documented. Consequently it was never used. Meanwhile the original code for multipass opcodes was much improved. So there is no more need for this (duplicate) code and we are removing it.\n\nThe nightly snapshots of pre-built windows binaries are now built with UCS4 enabled.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nNone\n\nNew, renamed or removed tables\n\nzhcn-g1.ctb\n\nzhcn-g2.ctb\n\nNone\n\nTables that are only useful in the context of liblouisutdml were moved there\n\nmarburg.ctb\n\nmarburg_edit.ctb\n\nnemeth.ctb\n\nnemeth_edit.ctb\n\nukmaths.ctb\n\nukmaths_edit.ctb\n\nwiskunde-translation.cti\n\nwiskunde.ctb\n\nNoteworthy changes in release 3.6.0 (2018-06-04)\n\nThis release contains the usual assortment of braille table improvements, cleanups and bug fixes. The most prominent change is the refactoring of the call APIs by Bert Frees that makes the code much more manageable and solid and will help us in the future to evolve the library.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nAdd metadata fields name and display-name to tables thanks to Bert Frees. The name contains a description of the table in the native language. display-name contains an English description.\n\nYAML test enhancements\n\nYou can now test both forward and backwards translation with in the same YAML file and for the same set of tables tests thanks to Bue Vester-Andersen. See the documentation for the bothDirections testmode.\n\nAdd maxOutputLength option in YAML tests.\n\nBug fixes\n\nFix a bunch of buffer overflow errors in table parsing thanks to Samuel Thibault and Christian Egli (CVE-2018-11410 and CVE-2018-11440).\n\nFix input-output mapping of context rules thanks to Bert Frees.\n\nFix back tracking with all caps words thanks to Bert Frees.\n\nFix context rules with lookback thanks to Bert Frees.\n\nFix a memory leak in default table resolver thanks to Timothy Lee.\n\nFix an array out of bounds error which caused a crash on i386 thanks to Samuel Thibault.\n\nFix numerous stack-based buffer overflow in table parsing reported by Henri Salo and Edward-L thanks to Christian Egli (CVE-2018-11577, CVE-2018-11683, CVE-2018-11684 and CVE-2018-11685).\n\nBraille table improvements\n\nFix some forward- and back-translation errors in Unified French Grade 2 thanks to André-Abush Clause.\n\nUpdates to the Simplified-Chinese Braille Translation Table thanks to Roshanson\n\nAdded many polygraphs to distinguish different meanings of a word\n\nLetter identifiers have been modified. In China’s school for the blind, when many visually impaired students learn, the lowercase letters often do not have to mark the identifiers deliberately. So in this version, we this item has been deleted.\n\nFixed a bug in the braille code that revises the space and 0\n\nUpdates to Bopomofo-based Chinese Braille Table thanks to Bo-Cheng Jhan\n\nRedefine some Chinese words and phrases\n\nAdd various Nemeth symbols such as arrows and parenthesis\n\nComplete the support of CJK Compatibility block\n\nFix the support of various parentheses, brackets, and braces\n\nMinor fixes (kana rules, punctuation marks, Greek alphabets)\n\nNew 8 dot computer braille table for Czech thanks to Jan Hegr.\n\nFixes to Czech 6 dot table thanks to Jan Hegr\n\nFixed curly brackets representation\n\nFixed number sign representation\n\nAdded copyright sign\n\nMinor fixes to Hebrew thanks to Erez Kugler.\n\nOther changes\n\nRefactoring thanks to Bert Frees\n\nSimplify the emphasis class handling by combining all related vars in a struct EmphasisClass\n\nSimplify input/output buffer handling\n\nCombine emphasisBuffer and transnoteBuffer\n\nGroup match related vars in a struct PassRuleMatch\n\nRemove dead code\n\nFixed many warnings thanks to Christian Egli\n\nDeprecation notice\n\nThe mode parameter in lou_dotsToChar never had any effect and is now deprecated.\n\nIn 2012 a new way to specify the test and action part in context and multipass opcodes was introduced. It was never documented and has no known usage in the wild. However it opens up the attack surface to the table parsing code. Therefore it is deprecated and will be removed in the next release.\n\nBackwards incompatible changes\n\nNone\n\nNew, renamed or removed tables\n\ncs-comp8.utb\n\nNone\n\nCz-Cz-g1.utb\n\nNoteworthy changes in release 3.5.0 (2018-03-05)\n\nThis release has a number of Braille table improvements, cleanups and meta data enhancements. The most prominent new feature however is probably the much improved test coverage. This has helped in tracing and fixing a number of long standing bugs.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nThe same name can now be used in more than one class rule. The effect is that both set of characters become part of that one class.\n\nBug fixes\n\nFix a regression in inputPositions thanks to Bert Frees\n\nTreat characters within the range compbrlStart and compbrlEnd as a special case. This fixes many if not most of the problems with cursor position and the compbrlAtCursor mode. Thanks to Dave Mielke.\n\nFix swapdd opcode thanks to Bert Frees\n\nFix negation of attribute matcher in multipass expressions thanks to Bert Frees\n\nBraille table improvements\n\nAdd a display table that maps braille dots to brl/brf character set. For an in depth explanation see the corresponding github issue. Thanks to Rimas Kudelis\n\nMajor Improvements to Unified French Grade 2 thanks to André-Abush Clause\n\nFix braille number input for Greek Braille thanks to Dave Mielke\n\nAdd a fix for “phad” according to UEB Rule 10.7.3 thanks to Anthony Tibbs\n\nUpdates to the Urdu tables thanks to Jake Kyle from Compass Braille\n\nUpdates to the Chinese braille table (zh-tw.ctb) thanks to Bo-Cheng Jhan\n\nIPA.utb now contains a more complete list of phonetic symbols, including some that might conflict with other tables. For this reason it is not suitable for inclusion in other tables. A separate table IPA-unicode-range.uti has been added for this purpose. Thanks to Ludovic Oger.\n\nThe Mongolian table has been improved and there is now also support for grade 2 thanks to Tsengel Maidar.\n\nMinor updates to the Danish tables thanks to Bue Vester-Andersen\n\nFix back translation of numbers in Dutch, Finnish and Canadian French, thanks to Leonard de Ruijter.\n\nNew table for Ukrainian thanks to Sergiy Moskalets.\n\nOther changes\n\nImproved documentation\n\nExtend the documentation on multipass opcodes. Thanks to Dave Mielke and Christian Egli.\n\nRemove the deprecation note of the ‘=’ dots operand. While there are still problems with back-translation we will not remove support for it. See also the discussion in the github issue.\n\nImproved meta data information in tables\n\nThe meta data in the tables such as locale, contraction grade, etc has been improved and is now also used when testing from a YAML test. Thanks to Bert Frees.\n\nMajor overhaul of the YAML test suite\n\nSupport for proper testing of cursor positions\n\nDue to problems in the cursor position computation the YAML test suite was improved to support proper testing of cursor position also in combination with input, output position and modes. In essence all of the liblouis API is now supported and can be tested via the YAML tests. Thanks to Christian Egli.\n\nSupport for table selection via meta data query\n\nThe tables to be tested can now be specified via a meta data query in addition to specifying them by filename. See the documentation for more details. Internally the YAML tests have been split up into tests that test the braille translation for a particular locale (now located in tests/braille_specs) and tests that check a specific feature of liblouis. Thanks to Bert Frees.\n\nDeprecation notice\n\nNone\n\nBackwards incompatible changes\n\nThe translation mode comp8Dots has been removed as it was never really implemented anyway\n\nSupport for the pass1Only flag has now been removed. Thanks to Bue Vester-Andersen.\n\nThe old UEB tables UEBC-g1.ctb and UEBC-g2.ctb have been removed as the have been superseded by en-ueb-g1.ctb and en-ueb-g2.ctb.\n\nThe french tables fr-2007.ctb, fr-fr-g1.utb, fr-fr-g2.ctb, fr-ca-g1.utb and fr-ca-g2.ctb have been removed. Use fr-bfu-comp6.utb for 6 dots literary, fr-bfu-comp8.utb for 8 dots computer and fr-bfu-g2.ctb for contracted braille instead.\n\nNew, renamed or removed tables\n\nIPA-unicode-range.uti\n\nmn-MN-g2.ctb\n\nuk.utb\n\nmn-MN.utb -> mn-MN-g1.utb\n\nfr-2007.ctb\n\nfr-ca-g1.utb\n\nFr-Ca-g2.ctb\n\nfr-fr-g1.utb\n\nFr-Fr-g2.ctb\n\nUEBC-g1.ctb\n\nUEBC-g2.ctb\n\nNoteworthy changes in release 3.4.0 (2017-12-04)\n\nThis release brings together a lot of work by lots of different people. Probably the most prominent fix is the work on output positions by Bue and Bert. NVDA should benefit from this. Then there are new and massively improved tables like the Lithuanian 6-dot table by Rimas or the improved back-translation for French by Michel and André-Abush to name just a few. There are too many contributors to name them here, thanks to them all.\n\nFor a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nAdd support for inputPos and outputPos checking in lou_checkyaml thanks to Bue Vester-Andersen. See the manual for details and examples.\n\nBug fixes\n\noutput positions (outputPos) are now calculated based on input positions (inputPos) thanks to Bert Frees. This avoids a whole class of bugs that previously plagued the output positions. This fix also obviates the need for the pass1Only flag. See below for the deprecation notice.\n\nBraille table improvements\n\nAddition of Nemeth and Kangxi radical characters and other improvements to Chinese braille (zh-tw.ctb) thanks to Bo-Cheng Jhan and 黃偉豪.\n\nImprovements to the Spanish chardefs table thanks to Luis Lorente Barajas and Simon Aittamaa.\n\nFixed a lowercase ó in Spanish first reported for NVDA thanks to Sukil Etxenike.\n\nNew Norwegian 6-dot display braille table for Braillo embossers thanks to Lars Bjørndal\n\nAdded a bunch of whitespace-like codepoints as spaces thanks to Rimas Kudelis\n\nAdded Lithuanian 6-dot table thanks to Rimas Kudelis.\n\nAddition of more characters to the French tables thanks to Samuel Thibault\n\nImprovements to the Hungarian tables thanks to Attila Hammer\n\nImprovements to the Mongolian tables thanks to Tsengel Maidar\n\nFix some math signs in Czech Braille (cs-chardefs.cti). Thanks to Christian Herden of ViewPlus for reporting this.\n\nUpdates to the SEB British Braille Tables thanks to Paul Wood\n\nMassive improvements to French back-translation thanks to Michel Such and André-Abush Clause\n\nOther changes\n\nImproved documentation\n\nBue Vester-Andersen added some notes about back-translation and documented all possible values of the mode parameter. Also the description of decpoint and litdigit was improved.\n\nThe match opcode is now documented thanks to Mike Gray and Christian Egli.\n\nlou_maketable\n\nNumerous bug fixes and performance enhancements thanks to Bert Frees\n\nCode refactoring\n\nMany global variables have been removed thanks to Bert Frees\n\nCode formatting\n\nThanks to clang-format There is now a uniform coding style over the whole code base\n\nFix broken NMakefile\n\nThanks to Davy Kager building with nmake should work again\n\nDeprecation notice\n\nThe pass1Only flag has been deprecated. Its use should be avoided, and it will be completely removed from the code in the next version of Liblouis. When using the pass1Only flag in this release you will get a warning.\n\nBackwards incompatible changes\n\nNone\n\nNew, renamed or removed tables\n\nno-no-braillo-047-01.dis\n\nlt-6dot.utb\n\nNone\n\nNone\n\nNoteworthy changes in release 3.3.0 (2017-09-04)\n\nThis release brings a slew of Braille table improvements, fixes a number of security related bugs and introduces a new tool to generate liblouis Braille tables based on a corpus of know good Braille translations. For a detailed list of all the changes refer to the list of closed issues.\n\nNew features\n\nmaketable tool\n\nA new tool lou_maketable enables the creation of tables based on a corpus of known good Braille translations. This has huge potential to simplify table maintenance for tables that have so far been dominated by large exception lists. Thanks to Bert Frees.\n\nMeta data query API\n\nA new API and a corresponding command line tool to query table meta data thanks to Bert Frees\n\nBug fixes\n\nBack translation\n\nUEB grade 2\n\nFix back-translation of whole word contractions followed by other contractions thanks to James Teh.\n\nFix back-translation for contractions followed by punctuation thanks to James Teh.\n\nFix a number of CVEs (illegal address access, buffer overflow and use-after-free or in terms of CVEs: CVE-2017-13738, CVE-2017-13739, CVE-2017-13740, CVE-2017-13741, CVE-2017-13742 and CVE-2017-13744) thanks to Mike Gorse.\n\nFix CVE-2017-13743 thanks to Christian Egli.\n\nBraille table improvements\n\nNew table for Croatian grade 1 Braille thanks to Zlatko Sobočan.\n\nFixes and tests for Slovak Braille thanks to Simon Aittamaa\n\nNumerous fixes in the character definitions of the Spanish tables thanks to Simon Aittamaa\n\nUnified French 6 dots and 8 dots improvements for back-translation thanks to Michel Such\n\nUpdates to the Chinese braille table thanks to Coscell Kao\n\nUpdates to Nemeth character definitions thanks to Attila Hammer\n\nThe Hungarian tables now conform to the new 2017 standard thanks to Attila Hammer\n\nBackwards incompatible changes\n\nThe constant otherTrans has been removed in both the C API and the corresponding Python bindings.\n\nThe constants ucBrl, noUndefinedDots and partialTrans have different values now in both the C API and the corresponding Python bindings.\n\nNew, renamed or removed tables\n\nhr-g1.ctb\n\nhr.ctb -> hr-comp8.utb\n\nNoteworthy changes in release 3.2.0 (2017-06-06)\n\nAside from the usual improvements to Braille tables this release focuses on improving the internal infrastructure. Numerous bugs have been fixed, the CI infrastructure also checks mingw builds now and MSVC compatibility has been massively improved. For a detailed list of all the changes refer to the list of closed issues.\n\nBug fixes\n\nFix capsnocont opcode. Also mark capital letters with capsletter symbol when capsnocont is defined but no begcapsword indicator is defined. Thanks to Bue Vester-Andersen.\n\nFix the syllable opcode. It had been broken under some circumstances since 3.0. Thanks to Bert Frees and Christian Egli.\n\nOther changes\n\nFix building of Python bindings when cross-compiling. Thanks to Chris Brannon\n\nlou_checkyaml is now only installed if libyaml is available. Thanks to Christian Egli\n\nMajor internal changes to improve MSVC compatibility. Thanks to Davy Kager\n\nEnhance documentation on usage of display tables in particular in conjunction with Unicode dot patterns. Thanks to Bert Frees\n\nBraille table improvements\n\nImprovements to the Swedish 8-dots table (se-se.ctb) thanks to Kevin Derome\n\nImprovements to the Simplified-Chinese Braille table thanks to Roshanson\n\nFixes for the International Phonetic Alphabet Braille table thanks to Ludovic Oger\n\nAdded more Unicode symbols (fractions and not equal) to the UEB tables. Thanks to Paul Wood and James Bowden.\n\nFixes to UEB grade 2 (en-ueb-g2.ctb) thanks to Mike Gray.\n\nVastly improved Danish tables thanks to Bue Vester-Andersen.\n\nNew literary tables for 6 dots, mainly for embossing (no back-translation).\n\nImproved back-translation in 6 dots tables, all grades.\n\nNew support for many Unicode characters in all 6 dots tables.\n\nStrengthened internal tests to prevent breaking of tables due to changes in the code.\n\nFixed 8 dots tables which were broken in the previous version.\n\nNew Braille tables for Sinhala script thanks to Ashoka Bandula Weerawardhana.\n\nNew Hungarian grade 2 Braille table thanks to Attila Hammer.\n\nImprovements to UEB in particular to symbols specified mostly on the Appendix 3 (Symbols List) from the Rules of Unified English Braille Second Edition 2013 document thanks to Victor Montalvão.\n\nImprovements to Persian 8 dot computer Braille table thanks to Mohammadreza Rashad.\n\nBackwards incompatible changes\n\nThe old Greek table gr-gr-g1.utb is gone. Use el.ctb instead\n\nThe doctests are gone. They have been superseded by the YAML tests.\n\nThe internal API which was previously in louis.h has been made internal, i.e. the file is renamed to internal.h and the function names are prepended with underscores (‘_’).\n\nNew, renamed or removed tables\n\nsin.cti\n\nsin.utb\n\nhu-hu-g2.ctb (new)\n\nda-dk-6miscChars.cti (new)\n\nda-dk-g16-lit.ctb (new)\n\nda-dk-g26-lit.ctb (new)\n\nda-dk-g26l-lit.ctb (new)\n\ngr-gr-g1.utb (removed and replaced by el.ctb)\n\nda-chardefs6.cti\n\nda-dk-common6.uti\n\nda-dk-g26-patches.cti\n\nda-dk-g2core.cti\n\nda-dk-nocaps.uti\n\nNoteworthy changes in release 3.1.0 (2017-03-06)\n\nAn influx of new contributors have made sure that liblouis continues to improve. Back translation has seen major improvements, there are some additional modes to help screen readers, for many tables meta data has been added, the Python bindings are more robust, Windows support has been improved, the YAML test suite has been generalized and as usual new and improved braille tables have been included. On the licensing front we managed to get almost all tables re-licensed to LGPLv2.1+.\n\nNew features\n\nMeta data\n\nMost of the translation tables now contain meta data. This makes them discoverable. Programs can use the lou_findTable function to find a table based on a query.\n\nnoUndefinedDots mode\n\nAdd a noUndefinedDots mode to disable the output of dot numbers when back-translating undefined patterns. Thanks to James Teh.\n\nWhen back translating input from a braille keyboard cell by cell, it is desirable to output characters as soon as they are produced. Similarly, when back translating contracted braille, it is desirable to provide a “guess” to the user of the characters they typed. To achieve this, liblouis needs to have the ability to produce no text when indicators (which don’t produce a character by themselves) are not followed by another cell. This works already for indicators liblouis knows about such as capital sign, number sign, etc., but it does not work for indicators which are not (and cannot be) specifically defined as indicators. For example, in UEB, dots 4 5 6 alone produces the text “\\456/”. Setting the noUndefinedDots mode suppresses this dot number output.\n\npartialTrans mode\n\nAdd a partialTrans mode to specify that back-translation input should be treated as an incomplete word. Thanks to James Teh.\n\nIf this mode is set, rules that apply only for complete words or at the end of a word will not take effect. This is intended to be used when translating input typed on a braille keyboard to provide a rough idea to the user of the characters they are typing before the word is complete.\n\nYAML test framework\n\nThe YAML framework has been extended and is much more useful now. You can test multiple tables within one YAML file, you can define test tables directly inline and you can test multiple tables using the same test data. Refer to the documentation for the details.\n\nIf really not wanted the YAML tests can be disabled by specifying configure --without-yaml.\n\nBug fixes\n\nFixes implicit declaration of ‘pattern_check’ thanks to Reiner Dolp\n\nFix a stackoverflow crash on applications with smaller stack size. Thanks to Victor Montalvão.\n\nFix the \\v escape sequence. Thanks to Davy Kager.\n\nThe Python bindings now give a helpful error if liblouis has been compiled with a different character size than Python. Thanks to Matt Wenn.\n\nMassive bug fixes in multipass rules. Dave Mielke has done a tremendous job improving the multipass machinery also in the context of back-translation. Where needed nofor/noback has been added to the multipass rules.\n\nOther changes\n\nImprovements to the Emacs mode for editing liblouis tables thanks to Christian Egli\n\nDocumenting lou_charSize thanks to Reiner Dolp\n\nSupport for relative table paths in the tests. This will make sure you always know which table a test actually uses.\n\nInfrastructure to build windows binaries in a Docker container, thanks to Bert Frees\n\nBraille table improvements\n\nUEB improvements, thanks to Mike Gray\n\nFixed apostrophe and back translation\n\nAdded rules for Unicode apostrophe handling\n\nImprovements to UEB and Nemeth math\n\nComplete overhaul of Lithuanian 8-dots table, thanks to Rimas Kudelis\n\nNew Urdu 6 Dot Grade 1 and 2 Braille tables thanks to Jake Kyle\n\nImprovements to Italian 8 dots computer braille, thanks to Simone Dal Maso.\n\nNew table unicode-braille.utb that helps to back translate braille input to Unicode braille output, thanks to Leonard de Ruijter.\n\nImprovements to the Chinese braille table thanks to Coscell Kao.\n\nNew Turkish braille table for grade 1 that should replace the old tr.ctb table, thanks to Arend Arends.\n\nNew Persian grade 1 table and 8-dots computer table thanks to Mohammadreza Rashad.\n\nNew table for the International Phonetic Alphabet thanks to Ludovic Oger\n\nFixes for the French 6 and 8 dots tables thanks to Michel Such. Some errors have been fixed and many Unicode characters have been added.\n\nAdd an extended 8-dot computer braille table for U.S. English thanks to Davy Kager. The table is tailored for use on Windows (CP-1252) and uses dot patterns from Windows screen readers, but should be useful on other platforms too.\n\nNew Greek table that is better than the existing Greek Grade 1 Braille Table (gr-gr-g1.utb) thanks to Dave Mielke.\n\nImproved number back-translations on fr-fr-g1 and vi-g1 tables thanks to Victor Montalvao.\n\nNew Chinese Braille table for use in the mainland of China thanks to Kaifang Bao of RejoinTech.\n\nThe Black Circle character is commonly used for displaying password characters. The absence of its definition leads to users not being able to know how many characters were typed in such fields. This has been improved for many tables thanks to Victor Montalvao.\n\nLicense changes\n\nDocArch has agreed to re-license their tables, so we have 8 more tables under the LGPLv2.1+.\n\nBackwards incompatible changes\n\nThe naming in the YAML test framework has changed slightly from `tables:` to `table:`.\n\nNoteworthy changes in release 3.0.0 (2016-07-14)\n\nThis is the biggest release of liblouis in years. The major news are that we now have proper support for UEB and secondly that liblouis is now licensed under LGPLv2.1+.\n\nIn order to support UEB the internals of liblouis have seen a major rewrite. New Opcodes have been added to support the requirements for proper UEB for example for emphasis handling or to handle proper translation of numbers. Changes to the opcodes are described in the documentation. Some of these changes are not backwards compatible. All tables that come with liblouis have been migrated. If you have private tables look at the section on upgrading from previous versions in the wiki.\n\nThis release also changes the C API. "
    }
}