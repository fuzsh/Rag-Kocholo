{
    "id": "dbpedia_2774_3",
    "rank": 9,
    "data": {
        "url": "https://shmuplations.com/valis/",
        "read_more_link": "",
        "language": "en",
        "title": "Masayasu Yamamoto – 2007 Developer Interview",
        "top_image": "https://shmuplations.com/wp-content/uploads/2022/01/valis00.jpg",
        "meta_img": "https://shmuplations.com/wp-content/uploads/2022/01/valis00.jpg",
        "images": [
            "https://shmuplations.com/wp-content/uploads/2022/01/valis00.jpg",
            "https://shmuplations.com/shmupicon.png",
            "https://shmuplations.com/wp-content/uploads/2022/01/valis00n.jpg",
            "https://shmuplations.com/wp-content/uploads/2022/01/valis03.jpg",
            "https://shmuplations.com/wp-content/uploads/2022/01/valis04.jpg",
            "https://shmuplations.com/wp-content/uploads/2022/01/valis01a.jpg",
            "https://shmuplations.com/wp-content/uploads/2022/01/valis05.jpg",
            "https://shmuplations.com/wp-content/uploads/2021/11/footer-test2.gif"
        ],
        "movies": [
            "https://www.youtube.com/embed/U7ztWc06ZvI?feature=oembed",
            "https://www.youtube.com/embed/_-3G4m_ZfVE?feature=oembed"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "shmuplations"
        ],
        "publish_date": "2022-01-17T11:33:23+00:00",
        "summary": "",
        "meta_description": "This interview with Nihon Telnet programmer Masayasu Yamamoto covers his work with the Valis series and other Japanese computer games from the 80s and 90s.",
        "meta_lang": "en",
        "meta_favicon": "https://shmuplations.com/wp-content/uploads/2021/10/siteicon.jpg",
        "meta_site_name": "shmuplations.com - 80s/90s/00s japanese gamedev interviews",
        "canonical_link": "https://shmuplations.com/valis/",
        "text": "—How did you get interested in video games?\n\nYamamoto: I think playing Missile Command at my local candy store, when I was in 5th or 6th grade, was my first exposure. I also loved stuff like Rally X and Sasuke vs Commander. My school forbid us from going to game centers, so I couldn't go there even though I really wanted to.\n\n—How did you end up mastering computer programming, then?\n\nYamamoto: My older brother had a small computer called a single-board microcontroller, and a Sharp pocket computer, and he wrote programs on them. I started out by trying to imitate what he was doing. Later, I borrowed a PC-8001 from a high school friend, and started out by studying BASIC. I gradually realized the limitations of BASIC, though, so I learned assembly too.\n\nThere was a magazine called PiO back then, and they printed a compiler that would take things written in BASIC and convert them to something closely approximating machine code. Using this compiler taught me a lot: \"Ah, I see, so that's how you would code that in assembler…\", and by and by my programming knowledge began to accumulate.\n\n—What was the first project you worked on at Nihon Telnet?\n\nYamamoto: I programmed the X1 version of American Truck, mostly the parts related to sound. I sequenced the music the composer had written, and added sound FX that I made myself.\n\n—Was it rough to suddenly start working on a computer you didn't own at home?\n\nYamamoto: I did have an X1 Turbo at home, so I knew some things about the system. But I was surprised to find out that the X1 Turbo I used at home had completely different features from the standard, early X1 models we were using at Nihon Telnet. Various things that were easy to do on my turbo model, couldn't be done on those early model X1s, so I was somewhat bewildered in the beginning.\n\nThere had actually been another programmer working on American Truck, and he was even younger—a second year high school student. But during the day he had to go to school, and Nihon Telnet didn't want to leave his desk empty all day, which is how I got assigned to the job.\n\n—So this game was made by two high school students?! Amazing! It's hard to imagine something like that happening today.\n\nYamamoto: Even though it was supposed to be a \"part-time\" job, after awhile the work started piling up and we got super busy, and my time for my classes shrunk accordingly. After awhile I'd skipped class so much, that one day the school finally called me and they were furious. (laughs)\n\n—Did you still keep working there?\n\nYamamoto: Yeah. The next game I worked on was Albatross, a golf game for the PC-8801 mkII SR that I ported to the Sharp X1. For this one I did all the programming myself, so I consider it my de-facto debut as a programmer.\n\n—In Albatross, you can access a sound menu via a secret command. Whose idea was that?\n\nYamamoto: I believe that was Akishino Masahiro's idea. He was the director and programmer of Albatross. Akishino was an individual with a strong spirit of \"service\" to the fans, and he always loved putting secret easter eggs like that in his games. Some versions of Albatross didn't have that secret command, though, so ultimately it came down to the whim of the individual programmer whether a particular port would have it or not.\n\nBy the way, this is a small digression, but a funny story about Albatross… Nihon Telnet later created an expansion course set for Albatross, and the packaging cover had advertised \"With FM Sound!\" The early versions of Albatross, however, had been created for computers that didn't have native FM sound capability, and our sales managers were having a small panic attack over this bit of misadvertising.\n\nI happened to catch wind of all this, and I had an idea: the expansion course disk couldn't be played on its own, so I suggested that we make it so if you inserted that disk alone, a message would appear \"This expansion cannot be played by itself. Please purchase the full-version of Albatross.\" And in the background, we'd have FM music playing (which were actually just normal tunes that used sampled recordings of the FM sounds). The sales staff were so relieved and happy. \"You saved us from false advertising! Thank you!!!\"\n\n—Were you paid an hourly wage while you were a part-timer?\n\nYamamoto: No, not at first. I was only paid after I'd completed and delivered to them a finished program. But after Albatross and American Truck, they acknowledged my work was good and started paying me a monthly wage.\n\n—When did you transfer from part-time to full-time at Nihon Telnet?\n\nYamamoto: To be honest, I don't remember exactly when it was. I wasn't in college very long before I quit and dedicated myself fully to working, but then my health broke down and I was hospitalized for awhile. When I was finally discharged, I went back to Nihon Telnet and they welcomed me back with a nice surprise: \"Congratulations Yamamoto, you're now the development team leader.\" It was all very sudden, I was shocked. (laughs) To be suddenly promoted to a full-time employee was surprising enough, but now that I was in a managerial position my salary shot way up too.\n\n—You were team leader at 19? That's pretty impressive! But we can't talk about Nihon Telnet without discussing that most famous of computer games, Valis. How did you originally get involved in the Valis development?\n\nYamamoto: At the time I had been planning to make a game called Final Zone, but due a staff shortage they asked me to switch to this other project. I did all the programming for the X1 and X1 Turbo versions of Valis.\n\nAt the start of the development, the first thing I did was to calculate the number of tiles/screens needed for each stage. I reckoned that using 32x32 sprites I'd need 1024 tiles for each stage map, and I started creating my data under that assumption, but this was a crazy huge size. When you tried to look at the whole thing on your computer screen, naturally you'd only be able to see one small, detailed section at a time. I remember telling the sales staff who was standing behind me, \"We should be able to scroll these 1024-tile sized maps\", and as soon as they heard that, it was like catnip: \"Yes, yes! Let's do that!\" You see, back then, no matter the genre, the sales team always wanted to use the size of the program and the character sprites as crass selling points and advertising.\n\n—Who did the original planning for Valis?\n\nYamamoto: The truth is, before the main character Yuko had been designed, they'd already started working on a side-scrolling action game. Then someone had the idea that a costumed heroine would make a good vehicle for showcasing the action… I think that was programmer Osamu Ikegame's idea. I believe it came from this popular TV show he liked then called Sukeban Deka.\n\nLater, Ikegame quit Nihon Telnet, but using the action game he had been developing as a basis, Akishino Masahiro and Hiroki Hayashi added a bunch of their own story and character ideas, and Valis was the result. Hayashi created the designs for Yuko and her rival Reiko.\n\n—How long was the development?\n\nYamamoto: About half a year. The company as a whole put a lot of effort into Valis, and the PC-8801, X1, and MSX versions were all released simultaneously.\n\n—And no sooner was Valis released than it became a huge hit.\n\nYamamoto: Yes, thanks to all that hard work it sold very well. I recall that it was listed as one of the top 3 best-selling games in the following year's rankings, and it received a lot of critical praise from players. The company even took us all to Hawaii over the New Year as a reward. (laughs)\n\n—What do you think the secret of Valis' success was?\n\nYamamoto: In those days, personal computers for home use still weren't very common, so there was this mindset at Nihon Telnet: \"how can our software get people interested, and let them know all the cool things that are possible with a computer?\" And Valis was the game where we started having this proselytizing mentality.\n\nAlso, a lot of developers back then had this notion that the content and gameplay was all that mattered. Their games didn't pay much heed to story or sound—they were light on the \"entertainment\" value in that sense. Valis was one of the first games to change that, and for other companies, maybe Nihon Falcom was a forerunner with games like Romancia.\n\n—At the time, there'd never been a game with so many rich illustrations and cut-scenes like Valis.\n\nYamamoto: Oh, that reminds me… in those days there were lots of PC users who would mistakenly insert the wrong floppy disk when swapping disks. For the X1 Valis, we created some special graphics to let the user know they'd put the wrong disk in. I know that's a little detail, but I think it shows the level of care we put into Valis.\n\n—Being so popular, I imagine you got to work right away on Valis II?\n\nYamamoto: No, unfortunately after Valis a bunch of people quit, and we were understaffed for awhile. So there was about a two and a half year blank period between Valis and Valis II. By the time we finally got started on the development, Nihon Telnet had shifted their business focus and were now trying to establish themselves in the laserdisc market, so we developed the PC version and PC-Engine CD versions in tandem. They were made by different development lines, though, and they ended up being somewhat different.\n\nWe hired a bunch of animators for Valis II. People from the anime industry were starting to become very interested in the game industry then. As such, we prevailed upon them to employ the exact same production standards and methods for Valis II that they would use for an anime series.\n\n—You also participated in the development of Valis III.\n\nYamamoto: Yes. About 2/3 of the Megadrive version was created by me. It was the PC Engine version that sold better, though.\n\n—You've worked as a programmer on a huge variety of different games. I understand you also programmed the very unusual Hanseimei Senki Androgynous?\n\nYamamoto: Yeah. The MSX2 hardware could do smooth vertical scrolling, so we had an idea to make a game that would scroll downwards, and the result of that planning was Androgynous.\n\nBesides the scrolling, we wanted to show off all the new hardware features of the MSX2 for the users, and of course, there was the central imprimatur, that the game itself be good. With all those ambitions we really went to town on Androgynous, particularly on the graphics and animation. With the PC-8801 version, unfortunately, the hardware wasn't up to the task and the scrolling was rough, the character animation was jerky, and as a result it became incredibly difficult.\n\nBy the way, originally the character sprite in Androgynous was supposed to be flesh/skin colored, but we were worried the game would receive an 18+ rating if it looked like a real human, so we changed him to that red and blue coloring. In the first loop he's a male, but when you beat the game his life gives out and the second loop he's transformed into a female character. The person who did the planning for Androgynous also designed the action-RPG XZR, and, well, let's just say he liked weird stories and ideas like that…\n\n—I don't think it was a game, but I wanted to ask about the Telnet MUSIC-BOX... what kind of software was that?\n\nYamamoto: It collected all the Nihon Telnet game music together for users to listen to, like a CD. It was made as a kind of stop-gap, basically to create something with the manpower and resources we had on-hand now, and I programmed the entire thing in about a month. The PC-8801 couldn't playback the X68000 sound data as-is, so I asked Masahiro Kajihara to re-sequence it all.\n\nI also remember working on Meizu-Kun at the same time. It was a single-screen puzzle game, and the production time for this one was very short (and stressful) too. It turned out to be a good game though. For the PC-8801 mkII SR we included a map editor feature, and we had a little contest for users to submit their own maps. We later used their ideas in a commercial release, for the FM-Towns version.\n\n—Switching over to RPGs, I understand that you worked on Death Bringer.\n\nYamamoto: I did. I programmed the X68000 version almost entirely myself. The X68000 hardware can display a large number of colors, but it doesn't have the best functionality for re-drawing the screen, so the processor struggled greatly in places where the whole screen had to be switched at once. It sold very well, but by that same token I received a lot of complaints about those shortcomings…\n\n—Did you also program Megami Tensei?\n\nYamamoto: I created the X1 and X1 Turbo versions, but the Famicom version, which came out the same year, ended up becoming much more famous. The gameplay system was totally different from the Famicom version, and I wasn't involved in any further ports for that series.\n\n—From action games to puzzles and RPGs, you've worked in a wide variety of genres. I think shooting games are the one exception?\n\nYamamoto: I created the sound driver for the PC-88 VA version of R-Type, actually. This computer used the same NEC V-30 cpu as the arcade R-Type, but in practice, differences in the graphics processor, among other things, made for a very difficult job.\n\n—I never knew that! They always used screenshots of R-Type to advertise the PC-88VA computers. But it was Nihon Telnet, not NEC, who made it.\n\nYamamoto: One of the higher-ups at Nihon Telnet then was on close terms with NEC, which is why that work was given to us, I think.\n\n—What kind of work did you do after leaving Nihon Telnet?\n\nYamamoto: I joined Climax, where I worked as the main programmer on Feda: The Emblem of Justice, and I created the sound drivers for Ladystalker. I also did my first PlayStation programming while I was at Climax, for the racing game Runabout.\n\nAfter that I moved over to Matrix, where I was the main programmer on Torneko no Daibouken 2 and Tamago de Puzzle. I also did part of the programming on Torneko no Daibouken 3. I wrote the routines relating to attacking the enemies in the dungeon, and the items they drop.\n\nYamamoto: Fuurai no Shiren DS, and both the GBA and DS versions of Pokemon Fushigin no Dungeon. I did all the programming on those games.\n\n—To wrap things up, as someone who has developed so many games over the course of his career, please give some advice to aspiring youths who would like to work in the game industry.\n\nYamamoto: Regardless of what kind of games a company makes, the work is always done as a team, with your fellow human beings. No matter how good of a programmer you are, it's all for naught if you can't communicate well with others. It goes without saying, but you need basic social skills for this work.\n\nBefore you even think about game design... in my personal view, a boring person cannot create an interesting game. I want aspiring game developers to keep that in mind, that cultivating yourself as a human being is more important than studying programming. No one's going to have fun with a game made by someone who isn't themselves fun and interesting! To put it in a simpler, more positive way: interesting people make interesting games. If you want to find success in creating games, first become someone worthy of people's interest.\n\n—If you have any technical advice for aspiring programmers, please share that as well.\n\nYamamoto: In terms of programming, I guess my advice is this: don't make things more complicated than they need to be. For example, if you're programming a routine to display something on-screen, and you know a simple way to do it… don't purposely try and use a bunch of fancy calculations to achieve the exact same thing you could do in an easier way. I'd like to see programmers with the discernment to know when something can be implemented simply. This isn't something they really teach you in school, and I feel it's very easy to develop a blindspot here. I don't think fancy mathematical knowledge is all that important to be a programmer. I'd rather have someone with the skills to write simple math that never fails, above someone who can write very complicated equations.\n\nI sometimes have the occasion to see planning documents from students at game design schools, but to be honest, I often feel there's something missing. I realize they've put a lot of personal effort into it, and it may be meaningful to them, but the market is somewhat saturated today, and even developers with 4-5 years of experience have trouble finding work. You'll be competing with them. So you can't hope to win against them without something more.\n\nTo that end, I think when you're at an interview, or taking a test, and trying to show your personal appeal, you should think outside the box and come up with ideas that can't be so easily imitated, something a little weird and creative—something that shows your uniqueness. It may be better to overshoot the target, in terms of weirdness, in order to make an impact and impression."
    }
}