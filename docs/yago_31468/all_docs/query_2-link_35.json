{
    "id": "yago_31468_2",
    "rank": 35,
    "data": {
        "url": "https://stackoverflow.com/questions/130475/why-is-lisp-used-for-ai",
        "read_more_link": "",
        "language": "en",
        "title": "Why is Lisp used for AI?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://www.gravatar.com/avatar/7a2e26de39b2eb2449adafcb96bd6b50?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/52feb5a1f3175e3706444ca360fb1271?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/OXXbv.jpg?s=64",
            "https://www.gravatar.com/avatar/bf9668c1ebea8ecea9f1ac4474236b5e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/b0cd96e85f7e75a113e37f0fec7b39fb?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/a14dd2401344528466e51d0f0d356a34?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/c7fb64856eda5af7f46b4996ab8fd37b?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/5e4103707f37d83ebd26d960c70948c2?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/V6eq2.jpg?s=64",
            "https://i.sstatic.net/FfhA9.jpg?s=64",
            "https://www.gravatar.com/avatar/01822efaf66e4b81d6f947cba7e0613a?s=64&d=identicon&r=PG",
            "https://stackoverflow.com/posts/130475/ivc/0ddf?prg=650a1072-2652-4d5e-ad5b-ebf672995940"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Cristián Romo"
        ],
        "publish_date": "2008-09-24T23:00:17",
        "summary": "",
        "meta_description": "I've been learning Lisp to expand my horizons because I have heard that it is used in AI programming. After doing some exploring, I have yet to find AI examples or anything in the language that would",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/130475/why-is-lisp-used-for-ai",
        "text": "Lisp WAS used in AI until the end of the 1980s. In the 80s, though, Common Lisp was oversold to the business world as the \"AI language\"; the backlash forced most AI programmers to C++ for a few years. These days, prototypes usually are written in a younger dynamic language (Perl, Python, Ruby, etc) and implementations of successful research is usually in C or C++ (sometimes Java).\n\nIf you're curious about the 70's...well, I wasn't there. But I think Lisp was successful in AI research for three reasons (in order of importance):\n\nLisp is an excellent prototyping tool. It was the best for a very long time. Lisp is still great at tackling a problem you don't know how to solve yet. That description characterises AI perfectly.\n\nLisp supports symbolic programming well. Old AI was also symbolic. It was also unique in this regard for a long time.\n\nLisp is very powerful. The code/data distinction is weaker so it feels more extensible than other languages because your functions and macros look like the built-in stuff.\n\nI do not have Peter Norvig's old AI book, but it is supposed to be a good way to learn to program AI algorithms in Lisp.\n\nDisclaimer: I am a grad student in computational linguistics. I know the subfield of natural language processing a lot better than the other fields. Maybe Lisp is used more in other subfields.\n\nLisp is used for AI because it supports the implementation of software that computes with symbols very well. Symbols, symbolic expressions and computing with those is at the core of Lisp.\n\nTypical AI areas for computing with symbols were/are: computer algebra, theorem proving, planning systems, diagnosis, rewrite systems, knowledge representation and reasoning, logic languages, machine translation, expert systems, and more.\n\nIt is then no surprise that many famous AI applications in these domains were written in Lisp:\n\nMacsyma as the first large computer algebra system.\n\nACL2 as a widely used theorem prover, for example used by AMD.\n\nDART as the logistics planner used during the first Gulf war by the US military. This Lisp application alone is said to have paid back for all US investments in AI research at that time.\n\nSPIKE, the planning and scheduling application for the Hubble Space Telescope. Also used by several other large telescopes.\n\nCYC, one of the largest software systems written. Representation and reasoning in the domain of human common sense knowledge.\n\nMETAL, one of the first commercially used natural language translation systems.\n\nAmerican Express' Authorizer's Assistant, which checks credit card transactions.\n\nThere are thousands of applications in these areas that are written in Lisp. Very common for those is that they need special capabilities in the area of symbolic processing. One implements special languages that have special interpreters/compilers in these domains on top of Lisp. Lisp allows one to create representations for symbolic data and programs and can implement all kinds of machinery to manipulate these expressions (math formulas, logic formulas, plans, ...).\n\n(Note that lots of other general purpose programming languages are used in AI, too. I have tried to answer why especially Lisp is used in AI.)\n\nOne possible answer is that AI is a collection of very hard problems, and Lisp is a good language for solving hard problems, not just AI.\n\nAs to why that is: macros, generic functions, and rich introspection allow for concise code and easy introduction of domain abstractions — it's a language that you can make more powerful. For a lot of problems that's unnecessary, and it comes with its own costs, but for other problems that power is needed to make any headway.\n\nI think it's wrong to think about this in terms of AI only. Things like the AI-winter and commercial effects on common lisp are distracting if you're asking why it was used for AI, not why it's not often used now ...\n\nAnyway, I think it's because most of the AI code was essentially research code. Lisp is a great language for exploratory programming, for implementing difficult algorithms, for self-modifying and often modified code. In other words, for research code.\n\nI use lisp today for some of my research code (mathematics, signal processing) because it's more flexible and powerful than most languages while still generating more efficient code than most languages. I can typically get performance within a factor of +/- 2 of say c++ speed, but I can implement things much faster, and deal with complexity that would take me far more time than I have if I used c++, java, c#.\n\nThat's wandering off topic though. I think AI code was primarily written in common lisp for a while because it is a powerful approach to research code. It still is; but as `AI' algorithms became better understood and explored, parts of them were much easier to teach and use, so they showed up in flavor-of-the-year languages in undergrad courses. From there, it becomes an issue of what people already know, what libraries are available, and what works well for large groups.\n\nI think you're right: Lisp was a handy tool for hacking things up. This is because it didn't distinguish much between program and data. This allowed hackers to manipulate functions very easily, just like data.\n\nBut lisp is quite difficult for humans to read, with its braces and non-distinction between data and program. Today, I won't use lisp for any production AI code (or perhaps even prototyping) but would much prefer python for scripting.\n\nAnother thing to consider is the existing libraries/tools in/related to the language. I am not in a position to compare lisp libraries with python libraries, but I guess libraries and open source matter a lot more now than before.\n\nThis answer was inspired by the following comparison between lisp and python: http://amitp.blogspot.com/2007/04/lisp-vs-python-syntax.html"
    }
}