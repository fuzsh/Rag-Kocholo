{
    "id": "yago_31468_3",
    "rank": 88,
    "data": {
        "url": "https://en.wikiquote.org/wiki/John_McCarthy_(computer_scientist)",
        "read_more_link": "",
        "language": "en",
        "title": "John McCarthy (computer scientist)",
        "top_image": "https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/John_McCarthy_Stanford.jpg/1200px-John_McCarthy_Stanford.jpg",
        "meta_img": "https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/John_McCarthy_Stanford.jpg/1200px-John_McCarthy_Stanford.jpg",
        "images": [
            "https://upload.wikimedia.org/wikipedia/commons/thumb/4/49/John_McCarthy_Stanford.jpg/220px-John_McCarthy_Stanford.jpg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Wikipedia-logo-v2.svg/50px-Wikipedia-logo-v2.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikiquote.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikiquote.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2009-03-13T18:21:41+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/favicon/wikiquote.ico",
        "meta_site_name": "",
        "canonical_link": "https://en.wikiquote.org/wiki/John_McCarthy_(computer_scientist)",
        "text": "John McCarthy (September 4, 1927 – October 24, 2011) was an American computer scientist and cognitive scientist who received the Turing Award in 1971 for his major contributions to the field of Artificial Intelligence (AI). He was responsible for the coining of the term \"Artificial Intelligence\" in his 1955 proposal for the 1956 Dartmouth Conference and was the inventor of the Lisp programming language.\n\nQuotes\n\n[edit]\n\n1960s\n\n[edit]\n\nIn 1936 the notion of a computable function was clarified by Turing, and he showed the existence of universal computers that, with an appropriate program, could compute anything computed by any other computer. [...] In some subconscious sense even the sales departments of computer manufacturers are aware of this, and they do not advertise magic instructions that cannot be simulated on competitors machines, but only that their machines are faster, cheaper, have more memory, or are easier to program.\n\n\"Towards a Mathematical Science of Computation\", Information Processing 1962: Proceedings of IFIP Congress 62, ed. Cicely M. Popplewell (Amsterdam, 1963), pp. 21–28\n\nIntelligence has two parts, which we shall call the epistemological and the heuristic. The epistemological part is the representation of the world in such a form that the solution of problems follows from the facts expressed in the representation. The heuristic part is the mechanism that on the basis of the information solves the problem and decides what to do.\n\n[...]\n\nThe right way to think about the general problems of metaphysics and epistemology is not to attempt to clear one's own mind of all knowledge and start with 'Cogito ergo sum' and build up from there. Instead, we propose to use all of our knowledge to construct a computer program that knows. The correctness of our philosophical system will be tested by numerous comparisons between the beliefs of the program and our own observations and knowledge.\n\nJohn McCarthy and Patrick J. Hayes. \"Some Philosophical Problems from the Standpoint of Artificial Intelligence\", Sect. 2.1, Machine Intelligence 4, ed. Donald Michie (Elsevier, 1969), p. 463 ff., ISBN 0444197443\n\n1970s\n\n[edit]\n\n[This] is or should be our main scientific activity — studying the structure of information and the structure of problem solving processes independently of applications and independently of its realization in animals or humans.\n\nJohn McCarthy (1974), quoted in: Joscha Bach (2009) Principles of Synthetic Intelligence PSI, p. 233\n\nLISP is now the second oldest programming language in present widespread use (after FORTRAN)... Its core occupies some kind of local optimum in the space of programming languages given that static friction discourages purely notational changes. Recursive use of conditional expressions, representation of symbolic information externally by lists and internally by list structure, and representation of program in the same way will probably have a very long life.\n\nJohn McCarthy (1979) \"History of Lisp,\" as quoted in: Avron Barr, Edward Feigenbaum. The Handbook of artificial intelligence, Volume 2. Addison-Wesley, 1986. p. 5\n\nOne can even conjecture that Lisp owes its survival specifically to the fact that its programs are lists, which everyone, including me, has regarded as a disadvantage.\n\nJohn McCarthy, \"History of Lisp,\" 12 February 1979; republished at www-formal.stanford.edu.\n\nMachines as simple as thermostats can be said to have beliefs, and having beliefs seems to be a characteristic of most machines capable of problem solving performance. However, the machines mankind has so far found it useful to construct rarely have beliefs about beliefs, although such beliefs will be needed by computer programs that reason about what knowledge they lack and where to get it. Mental qualities peculiar to human-like motivational structures , such as love and hate, will not be required for intelligent behavior, but we could probably program computers to exhibit them if we wanted to, because our common sense notions about them translate readily into certain program and data structures. Still other mental qualities, e.g. humor and appreciation of beauty, seem much harder to model.\n\n\"Ascribing Mental Qualities to Machines\" (1979) Sect. 1: Introduction. Reprinted in Formalizing Common Sense: Papers By John McCarthy, 1990, ISBN 0893915351\n\nWhen we program a computer to make choices intelligently after determining its options, examining their consequences, and deciding which is most favorable or most moral or whatever, we must program it to take an attitude towards its freedom of choice essentially isomorphic to that which a human must take to his own.\n\n\"Ascribing Mental Qualities to Machines\" (1979) Sect. 5.5: Free Will. Reprinted in Formalizing Common Sense: Papers By John McCarthy, 1990, ISBN 0893915351\n\n1980s\n\n[edit]\n\nWhen there's a will to fail, obstacles can be found.\n\nJohn McCarthy (1983), quoted in The Sayings of John McCarthy, at www-formal.stanford.edu, March 1, 2007. Also quoted in Keith Cary Curtis (1996) After the Software Wars. p. 167\n\nIt's difficult to be rigorous about whether a machine really 'knows', 'thinks', etc., because we're hard put to define these things. We understand human mental processes only slightly better than a fish understands swimming.\n\n\"The Little Thoughts of Thinking Machines\", Psychology Today, December 1983, pp. 46–49. Reprinted in Formalizing Common Sense: Papers By John McCarthy, 1990, ISBN 0893915351\n\nProgram designers have a tendency to think of the users as idiots who need to be controlled. They should rather think of their program as a servant, whose master, the user, should be able to control it. If designers and programmers think about the apparent mental qualities that their programs will have, they'll create programs that are easier and pleasanter — more humane — to deal with.\n\n\"The Little Thoughts of Thinking Machines\", Psychology Today, December 1983, pp. 46–49. Reprinted in Formalizing Common Sense: Papers By John McCarthy, 1990, ISBN 0893915351\n\nWhenever we write an axiom, a critic can say that the axiom is true only in a certain context. With a little ingenuity the critic can usually devise a more general context in which the precise form of the axiom doesn't hold. [...] There simply isn't a most general context.\n\n\"Generality in Artificial Intelligence\" (1971–1987), ACM Turing Award Lectures: The First Twenty Years, ACM Press, 1987, ISBN 0201077949\n\n1990s\n\n[edit]\n\nHe who refuses to do arithmetic is doomed to talk nonsense.\n\nPROGRESS AND ITS SUSTAINABILITY (1995 – )\n\nWikipedia has an article about:\n\nJohn McCarthy's Home Page at stanford.edu\n\nQuotes at John McCarthy's new website maintained by Project JMC."
    }
}