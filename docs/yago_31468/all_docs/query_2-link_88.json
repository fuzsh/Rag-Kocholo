{
    "id": "yago_31468_2",
    "rank": 88,
    "data": {
        "url": "http://lisp.plasticki.com/",
        "read_more_link": "",
        "language": "en",
        "title": "Lisp in Small Parts",
        "top_image": "http://lisp.plasticki.com/pictures/36/favicon.ico",
        "meta_img": "http://lisp.plasticki.com/pictures/36/favicon.ico",
        "images": [
            "http://lisp.plasticki.com/pictures/36/logo.gif",
            "http://lisp.plasticki.com/pictures/36/cc-0-pd.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "/pictures/36/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Introduction\n\nThis is a series of short Lisp tutorials I recently wrote to help my teenage daughter and son learn Lisp.\n\nIn my view Lisp is an ideal language to learn as a first computer language for several reasons:\n\nIt's interactive: you can type Lisp commands at the Listener and see the results instantly.\n\nIt's an elegant language, without the arbitrary constructs present in many other languages.\n\nIt's a fast and powerful language that can be used to write real production programs.\n\nThe tutorials are aimed at someone with no previous experience of programming, and they are designed to take the reader to the stage where they can start writing their own programs to solve practical, interesting applications.\n\nOne of the most daunting aspects of learning a new programming language is the vocabulary, so one of my aims was to design tutorials that could be used with a minimal core set of 38 Common Lisp procedures, rather than provide a comprehensive tour of all the Common Lisp procedures and features.\n\nThese procedures, together with six LispWorks user-interface procedures, are sufficient to construct all the applications in the second half of the tutorials. For reference a full list of the core set of procedures is given in the Index of Procedures.\n\nRunning the Tutorials\n\nThe tutorials should run with any version of Common Lisp, but they were developed with LispWorks and this is the version I recommend. A free evaluation version of LispWorks is available called LispWorks Personal Edition; you can download it here:\n\nLispWorks Personal Edition\n\nAll the Lisp programs on this site are provided under a CC0 1.0 licence; in other words you can pretty much do what you want with them.\n\nComments\n\nExperienced Lisp programmers may say that there are built-in Lisp procedures that will achieve far more succinctly and efficiently what I have achieved in some of the example programs here.\n\nMy defence is that the point of these tutorials is not to teach Common Lisp in its entirety, but to help the reader understand the general principles of programming in Lisp. I believe that it is daunting for a beginner to be confronted with a catalogue of Lisp procedures to learn by rote. It is far more important to understand how to approach a problem, and break it down into simpler problems with the help of recursion."
    }
}