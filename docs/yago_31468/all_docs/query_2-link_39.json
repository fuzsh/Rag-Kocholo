{
    "id": "yago_31468_2",
    "rank": 39,
    "data": {
        "url": "http://www.intelligency.org/ai_lisp.php",
        "read_more_link": "",
        "language": "en",
        "title": "AI with LISP",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://static.addtoany.com/buttons/share_save_256_24.png",
            "http://static.addtoany.com/buttons/share_save_256_24.png",
            "http://www.intelligency.org/images/logo.png",
            "http://www.intelligency.org/images/big_data.jpg"
        ],
        "movies": [
            "https://www.youtube.com/embed/kxEDXdiAou0",
            "https://www.youtube.com/embed/ymSq4wHrqyU"
        ],
        "keywords": [],
        "meta_keywords": [
            "AI with LISP",
            "tools",
            "videos",
            "practice",
            "jobs",
            "training",
            "coding"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "LISP is a great tool in the field of Artificial Intelligence. It has several advantages which make it perfect for many tasks including general AI, machine learning, natural language and text processing, and neural networks.",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Lisp is used for AI because it supports the implementation of software that computes with symbols very well. Symbols, symbolic expressions and computing with those is at the core of Lisp. Common Lisp (CL) is a dialect of the Lisp programming language. Common Lisp is great for symbolic AI. However, many recent machine learning libraries are coded in more mainstream languages, for example TensorFlow is coded in C++ & Python. Deep learning libraries are mostly coded in C++ or Python or C (and sometimes using OpenCL or Cuda for GPU computing parts).\n\nLISP Advantages\n\nCommon Lisp is great for symbolic artificial intelligence because:\n\nSeveral symbolic AI systems like Eurisko or CyC have been developed in CL (actually, in some DSL built above CL).\n\nNotice that the programming language might not be very important. In the Artificial General Intelligence research topic, some people work on the idea of a AI system which would generate all its own code (so are designing it with a bootstrapping approach). Then, the code which is generated by such a system can even be generated in low level programming languages like C.\n\nAI is a wide field that goes beyond machine learning, deep learning, neural networks, etc. In some of these fields, the programming language does not matter at all (except for speed issues), so LISP would certainly not be a topic there.\n\nIn search or AI planning, for instance, standard languages like C++ and Java are often the first choice, because they are fast (in particular C++) and because many software projects like planning systems are open source, so using a standard language is important (or at least wise in case one appreciates feedback or extensions). Here is a list of the best-known planners: Fast-Downward, FF, VHPOP, SHOP and SHOP2, PANDA.\n\nSystems using LISP\n\nCommon Lisp is great for symbolic artificial intelligence because:\n\nThere are thousands of applications in these areas that are written in Lisp. Very common for those is that they need special capabilities in the area of symbolic processing. One implements special languages that have special interpreters/compilers in these domains on top of Lisp. Lisp allows one to create representations for symbolic data and programs and can implement all kinds of machinery to manipulate these expressions (math formulas, logic formulas, plans, ...).\n\nOne of Lisp’s main virtues, is that it enables a programmer to create new linguistic abstractions with ease. So there should be not surprise in the fact that Lisp has influenced many popular programming languages; two of them very close to the AI/Data Science/ML community (besides from Lisp itself) — , which are R and Julia.\n\nR was originally written as a very simple Lisp interpreter using as reference a chapter of a very popular introductory textbook on computer science, and a really good but surprisingly unknown book on Programming Languages. Lisp held an enormous influence in the development and conception of the first R implementation as documented by Ross Ihaka (the creator of R) many times.\n\nLisp is not a perfect language, it has many flaws (lots of dialects, lack of well-known libraries, weird syntax that does not contribute to attract people in, dynamic typing, etc.), but it was a well-suited tool for the problems AI pioneers were trying to tackle at those days, just the same way C/C++, or Fortran are a perfect choice to implement the underpins of a Deep Learning system (TensorFlow is implemented both in C++ and Python). There’s not a single Swiss army knife programming language, we do need to pick a language that suits the most the particular task we’re approaching.\n\nLISP AI Jobs\n\nThese are some positions which can help you have an idea what recruiters are looking for in terms of experience, coding language, education, certificate ... etc.\n\nLISP AI Videos\n\nThese are some videos related to LISP and artificial intelligence. Enjoy!\n\nLISP Code Practice\n\nWould you like to practice your coding skills? Here are some great resources:"
    }
}