{
    "id": "dbpedia_989_2",
    "rank": 5,
    "data": {
        "url": "https://www.cadasio.com/post/8-bit-sprites-to-webgl-how-computer-graphics-have-changed-the-world",
        "read_more_link": "",
        "language": "en",
        "title": "8 Bit Sprites to WebGL: How Computer Graphics Have Changed the World",
        "top_image": "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882ee319a83bea33454180_retro-computers-1200.webp",
        "meta_img": "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882ee319a83bea33454180_retro-computers-1200.webp",
        "images": [
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/6303e4666b41768d5088f817_icon-dropdown-arrow-small-dark.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/630754bfa98aa356f8868172_cadasio-logo-horizontal.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/6303e4666b41768d5088f817_icon-dropdown-arrow-small-dark.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/6303e4666b41768d5088f817_icon-dropdown-arrow-small-dark.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/6303e4666b4176c69b88f874_icon-menu.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/6303e4666b41768bda88f8a2_Icon%20Arrow%20Left%20Dark.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/6303e4666b417602ce88f8a3_Icon%20Caret%20Right%20Dark.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882ef89978b2afdce35bfd_retro-computers-1920.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882c16e4ef837251934ad7_asteroids.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882c2d86e34d3ea723c3bb_cobra.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882cae68306a3046242e03_commodore-64.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882cc37ad23fd8992e7d3e_amiga-workbench.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882d02acb57ccc43daa389_doom.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882d8bf530aef27368e302_original-www.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882de2a985ecc423bdad03_car-game.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882e21c2377ab9d5a649f2_car-showcase.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/64882e9c86e34d3ea726ea1b_helmet-configurator.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176ea6388f805/65254ec1e5943ceb0a929a69_internet-library-online-education-concept-1200.webp",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/630755d1b572783ec95f12e2_cadasio-logo-white.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/663d10e8f7e1095c6f941b6d_x-white-square.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/6303e4666b41761a4588f833_icon-LinkedIn-white.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/630fa9d91a901b75538f96f0_vimeo-white.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/663d10e453474f19496d0998_facebook-white-square.svg",
            "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/6303e4666b41767b3888f873_loader.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "A brief look at how computer graphics have changed over the years",
        "meta_lang": "",
        "meta_favicon": "https://cdn.prod.website-files.com/6303e4666b4176f6c088f7a1/630f230aae0a0b8db82fbd92_cadasio%20logo%20no%20text-32.png",
        "meta_site_name": "",
        "canonical_link": "https://www.cadasio.com/post/8-bit-sprites-to-webgl-how-computer-graphics-have-changed-the-world",
        "text": "As Neal Stephenson, the cyberpunk sci-fi author, so insightfully observed in his non-fiction work âIn the Beginning... Was the Command Lineâ this preference for a programmable computer, one that would neatly fit into the corner of every living room, gave rise to an army of young coders. And that, dear reader, included us.\n\nThe Spectrum, the Vic20, Commodore 64, the quintessentially British BBC micro. So many 8 bit home computers with so many incompatible operating systems and vaguely similar versions of the programming language BASIC, it was a fascinating time to be alive.\n\nThe indisputable thing that made them marketable, that made people want to buy them, was that you could plug them into a normal television and they would play the same games that were previously the exclusive domain of the slot arcades. Most importantly, the games were graphical. But unlike the Atari and Nintendo console machines, you could code your own games, cool visual tools and demos.\n\nThose early days of home computing features in Cadasioâs DNA. Many an hour was spent by our youthful selves, hacking about with code copied from one of the ubiquitous computing magazines of the day. Given the graphical nature of Cadasio, we thought it would be interesting to look at how we got from 8 bit 2D games to 3D fully interactive web based apps and how the pursuit of entertainment delivered some really useful things.\n\nBefore we start, I know what some of you are thinking: what about CAD? Obviously Cadasio, as our name implies, is all about turning CAD data into a whole range of useful things. But the main drivers for consumer adoption of 3D graphical tools were the desire for affordable games consoles and the need for home PCs. CAD systems for engineering have always been expensive, due to the need for raw power and complex software. While CAD technology has been a driver for innovation in many industries, we feel that home computers and games pushed a lot further into the consumerâs purview.\n\nSprites, Bitmaps and Vectors\n\nIn the beginning there were essentially two different ways of making computer graphics. Sprites/Bitmaps and Vectors.\n\nVector graphics represented images as a series of mathematical equations, allowing for smooth lines and curves. The most notable example of vector graphics during this time was Atari's arcade game \"Asteroids,\" which featured wireframe graphics. The game was widely cloned and arrived on all the 8 bit home computer systems in one form or another during the early 80s. Â\n\nThere are many decent Javascript versions available to play today.\n\nBut later, British developer David Braben released the classic space combat/trading game Elite which also used vector graphics. Initially a big hit on the BBC Micro, Elite went on to be released on a total of thirteen different platforms. It inspired a whole generation of developers who went on to make games like Grand Theft Auto and Eve Online.\n\nThe introduction of sprite graphics revolutionised the gaming industry in the early 1980s. Sprites were small, movable objects that could be individually controlled and overlaid onto a background. This technique allowed for more detailed and animated graphics. Systems like the Spectrum ZX81 and Commodore 64 popularised the use of sprites in gaming. Games like Jet Set Willy and Manic Miner are great examples of sprite based games.\n\nAs computing power increased, bitmapped graphics started to gain prominence. Instead of representing images mathematically like vector graphics, bitmapped graphics stored images as a grid of pixels. This approach allowed for more complex and detailed visual representations.\n\nDue to the limitations of the early 8 bit machines, resolutions were low so everything seemed a bit blocky and the amount of colours a machine could display were limited. Which made for some interesting art direction. People forget the creativity that was needed to make great graphics with such limitations. Hereâs Sylvester Stalone in all his 80s 8 bit, limited palette glory:\n\nIncidentally, Ocean Software (featured in the above image) was a hugely successful British games developer, based in Liverpool that produced some of the most memorable titles of the 80s and eventually became part of the Bandai Namco Entertainment multinational corporation.\n\nTo 16 bit and Beyondâ¦\n\nThereâs only so much you can do with 8 bits and only so useful such home computers can be. There was a limited selection of software like home accountancy applications for the main platforms, but the focus was always games. As such, the market for home computers in the 1980s was limited to young people into games and enthusiasts. But technology always finds a way and as the 1990s approached things got a lot better; 16 bit machines arrived.\n\nAtari launched the Atari ST in June 1985, hot on their heels, in July of that year, was Commodore with the launch of the first version of the Amiga.\n\nMeanwhile, IBM agreed with Microsoft that MS-DOS would be able to work on non-IBM made but compatible PCs. This opened up the market to makers of IBM PC clones (Viglin, Tandy, Amstrad etc) and these machines, previously the reserve of the business world, became accessible to home users. But perhaps as important: Apple was becoming a highly recognisable brand and they were the leading champion of the graphical user interface - few of us now remember a time before the GUI. More on this later.\n\nBut how significant were these chip architecture advances for graphics and what changes did they herald?\n\nFirst, letâs look at the technology changes.\n\nIncreased Memory: One significant advantage of 16-bit computers was their expanded memory capacity. With 16 bits, these machines could address larger amounts of memory, allowing for more extensive graphical data storage. This extra memory allowed for higher-resolution graphics, larger colour palettes, and more detailed images compared to the limited memory of 8-bit machines.\n\nEnhanced Colour Depth: 16-bit computers supported a wider range of colours compared to their 8-bit counterparts. 16-bit systems could display thousands or even millions of colours. The increased colour depth facilitated more realistic and visually appealing graphics, enabling smoother gradients, more accurate colour representation, and improved overall visual fidelity.\n\nImproved Graphics Modes: 16-bit computers introduced advanced graphics modes that offered higher resolutions and more flexible display options. For example, the VGA (Video Graphics Array) standard introduced by IBM in the late 1980s allowed for resolutions up to 640x480 pixels with 256 colours. This was a significant leap from the lower resolutions and limited colour capabilities of most 8-bit machines, which typically operated at resolutions around 320x200 pixels.\n\nApart from video game visual improvements there was one huge step change to home computing which the new architecture enabled: the graphical user interface (GUI).\n\nThe windows, icons, mouse and pointer (WIMP) user interface had been around since Rank Xerox Labs developed it back in the 1970s, but until home computers got more powerful they were only controllable with a command line. Apple had been quick to adopt this easy to use interface, but also, the Atari ST and Amiga were bundled with early forms of WIMP enabled operating systems.\n\nGoing from this:\n\nTo this:\n\nThis was a huge change, the graphical user interface opened up the home computer market to people who had previously never considered owning one. The command line was scary, the GUI was cool and easy to use. While Apple Macs were the gold standard for this new approach, they remained expensive, but the proliferation of IBM PC clones created a competitive market place and Microsoft knew it had to step up its GUI. game.\n\nMS-DOS was Microsoftâs operating system, all the games and applications ran on top of that. Microsoft Windows was first released and also ran on top of MS-DOS. MS-DOS was primarily a command line interface based operating system, which required some specialist knowledge to get the most of it. With Windows tasks that would take a complicated string of commands could be executed with a click, drag and a drop. But Microsoft wasnât too committed to the GUI at first. Windows 1 was released in 1985 and is generally regarded as a bit of a flop. Windows 2 was a bit better, but it wasnât until Windows 3.1 did Microsoft start taking the WIMP thing seriously. By now weâre in the early 90s and Microsoft was a bit behind the curve.\n\nHardware Accelerated\n\n32 bit computers arrived, Windows 95 came along and it felt like Microsoft finally had their GUI under control. Apple was still making, as they continue to do, beautiful but expensive products. The proliferation of home computers narrowed down to IBM compatible with Windows or Apple Mac. The Amiga and Atari ST had their swan song and, Â once again, gracefully passed into the realm of âenthusiastâ. All the while something behind the scenes, Â more connected, more distributed and profoundly world changing was happeningâ¦\n\nBut before we move onto that rather obvious change, what was happening to the hardware making the graphics go pop? By the mid 90s consoles and PC games were moving away from the bitmap type games into the 3D worlds that we are familiar with today, where the bitmaps were textures applied to vector type environments.\n\nWhile there were other 3D games that came before it, Doom by id Software was the first 3D game that got serious traction on the PC. It had a great single player game, which was easy to learn, but required real skill to master AND co-op and player versus player multiplayer modes. Still loved today, itâs been ported to so many different platforms - including some weird ones like electronic pregnancy test kits. It was quite literally a game changer. Looking at these shifts in consumer desire, hardware manufacturers spotted an opportunity to make hardware specifically to enhance 3D games and applications.\n\nThe first big player in this domain was 3DFX with their Voodoo range of âgraphics cardsâ. Although much loved, they didnât last long - filing for bankruptcy in 2002. But they started something that had some unlikely side effects. Graphical Processing Units (GPUs) are designed specifically to draw millions of polygons per second, useful in 3D games, whereas the central processing unit (CPU) of your computer is a generalist and must be able to handle the sorts of calculations needed in a range of activities. This means that GPUs are very good at a certain type of calculation and it just so happens that these calculations are useful for a couple of other things too.\n\nFirstly in cryptocurrency, calculations are used to âmineâ currencies like Bitcoin and Ethereum. Miners use computational power to solve complex mathematical problems, which allows them to secure the network and earn rewards in the form of newly minted cryptocurrency. It just so happens that GPUs are much better at this task than CPUs. As a result a couple of years ago it was difficult to find any decent graphics card as cryptominers were buying them all as soon as they hit the stores. This drove the prices of GPUs through the roof, and they still havenât recovered, even though mining crypto isnât as lucrative as it once was.\n\nSecondly, the recent boom in AI has been powered largely by the advances in GPUs. Due to their highly parallel chip architecture with a large number of cores compared to CPUs, combined with their effectiveness at matrix operations, such as matrix multiplications and convolutions - used intensely in neural networks - GPUs are a relatively cheap way to build things like object recognition systems. For more detail on this you can read our previous article on the subject.\n\nAll this started with the market pull for better 3D graphics in games. But it was another pull that eventually led to the technology that enabled us to build Cadasio.\n\nAnd then there was the web browserâ¦\n\nYou can still visit the world's first website if you like.\n\nNot a stunner is it? But we donât need to tell you what it led to. In the 1980s we had a lot of different home computers with incompatible operating systems, meaning that games and apps had to be redeveloped for each system. Over time, market forces and savvy business decisions rationalised these down to essentially two consumer platforms PC and Mac. But then came along the internet and the web browser and this created a kind of meta-platform. A space in which all manner of things could happen and it didnât really matter what computer, or later on, which mobile phone it was running on.\n\nJust like the creation of the GUI opened up the home computer market to non-technical people, the web browser allowed us all to look for and view content on an endless range of subject matter and it quickly became part of our daily lives. But there is only so much you can do with text and hyperlinks. Even when images and eventually video was added, web browsers didnât really get more functional than a shopping cart form.\n\nJavaScript and CSS added basic graphical elements, but Macromedia (subsequently Adobe) Flash was the first real push into highly functional visual experiences. It was, for a period of time, huge. Flash games, Flash financial trading systems, entire websites were built out of Flash. People made some really cool stuff with it. Flash was essentially a plug in that worked in your web browser that was tied into your operating system - so it wasnât truly independent of the platform. But something happened that killed it pretty much overnight. In 2007 Apple launched the iPhone and decided not to include Flash in the handsets version of their web browser Safari. This was almost inconceivable as Flash was so ubiquitous in websites at the time it meant that anyone with the new iPhone couldnât use a lot of the sites properly. But it turned out the iPhone was just so awesome it didnât matter.\n\nBy 2010 Apple had essentially declared war on Flash and that was enough to put an end to it.\n\nBut something had been brewing at the research labs of the Mozilla Foundation that would not only go on to replace Flash, but be better and supported by all web popular browsers: WebGL.\n\nWebGL - web graphics library - is a JavaScript API for manipulating graphics in all compatible web browsers. All modern web browsers worth their salt support it. Itâs actually based on a much older graphics library, OpenGL, which has been around since the early 90s and serves as a set of functions and commands that allow developers to interact with a systemâs GPU without having to worry about the specifics of each GPU type or platform itâs plugged into.\n\nTo make the creation of graphically based websites even easier to do, the very talented developer Ricardo Cabello (better known as Mr Doob) created a JavaScript library and API, called three.js. Â This makes it a lot simpler to create animations and lighting etc. Anyway, we donât need to get bogged down in what happens under the hood, letâs focus on what it does.\n\nOf course, there are many games. Our favourite web based way to unwind is the procedurally generated slowroads.io. You can drive a car or a bus or a motorbike, through winter, spring, summer or autumn landscapes - or even on Mars. Forever. It will just keep randomly creating landscapes. Itâs very relaxing.\n\nBut the world has adopted WebGL for so much more. We built Cadasio in three.js - it was the obvious choice for us. With inbuilt functions for setting up animations, creating scenes with lighting and camera types.\n\nAll car manufacturers use 3D models that are interactive, configurable and always beautiful to try and sell their products. Here is the latest offering from Volkswagen.\n\nConsumer products such as clothing and equipment can also be configured using WebGL. Need a new motorbike helmet?\n\nThese are great examples of product demonstrators and configurators, but you donât need to be a developer to make them - for more straightforward product demos and instructional content, you can use Cadasio for this type of thing too.\n\nWe could go on, there is so much awesome stuff out there built in three.js and WebGL. But before we go on to summarise, a quick shout out to Bruno Simon a fellow three.js developer (seriously, check out his portfolio site) and educator who has created an excellent, straightforward three.js course that our non-technical members are undertaking so they get up to speed with how Cadasio works. Theyâre really enjoying it. So if youâre interested in learning three.js, check out his course.\n\nIn summaryâ¦\n\nHopefully youâve enjoyed this journey that traces the origins of home computer graphics, how they ignited an appetite for more beautiful and realistic games, how this in turn pushed the hardware manufacturers to provide developers with more and more tools. These advances were repurposed to give users easier ways to interact with their computers. The advent of the internet created a need to merge graphics technology into platform-independent but graphically beautiful web based user experiences. After the death of Flash (the first attempt) this delivered the WebGL technology. WebGL meant it was possible to build games and tools that worked in a 3D world of limitless possibilities. One of those possibilities is Cadasio. We love making Cadasio and weâre looking forward to seeing how it will grow and what it will become. We hope youâre with us all the way.\n\nâ"
    }
}