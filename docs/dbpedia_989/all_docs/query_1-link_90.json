{
    "id": "dbpedia_989_1",
    "rank": 90,
    "data": {
        "url": "https://www.cgspectrum.com/blog/skills-you-need-as-a-game-designer-troy-dunniway",
        "read_more_link": "",
        "language": "en",
        "title": "What Skills Do You Need as a Game Designer?",
        "top_image": "https://www.cgspectrum.com/hubfs/skills-game-designers-need-troy-dunniway-feat.jpg",
        "meta_img": "https://www.cgspectrum.com/hubfs/skills-game-designers-need-troy-dunniway-feat.jpg",
        "images": [
            "https://www.cgspectrum.com/hs-fs/hubfs/skills-game-designers-need-troy-dunniway-mob.webp?width=375&height=592&name=skills-game-designers-need-troy-dunniway-mob.webp",
            "https://www.cgspectrum.com/hubfs/Shoshanah-Wall-headshot.jpg",
            "https://www.cgspectrum.com/hs-fs/hubfs/noor-vullinghs-treasure-chest-800px.webp?width=800&name=noor-vullinghs-treasure-chest-800px.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/nicolas-najm-bloodtsained-wireframe-level-design.jpeg?width=800&name=nicolas-najm-bloodtsained-wireframe-level-design.jpeg",
            "https://www.cgspectrum.com/hs-fs/hubfs/student-work-vincent-velarde-AI-behavior.webp?width=1917&name=student-work-vincent-velarde-AI-behavior.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/League-of-Legends-season-12.webp?width=800&name=League-of-Legends-season-12.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/age-of-empires3-civil-war-battle-scene.webp?width=800&name=age-of-empires3-civil-war-battle-scene.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/marc-carratala_virtual-production.webp?width=684&name=marc-carratala_virtual-production.webp",
            "https://www.cgspectrum.com/hubfs/Shoshanah-Wall-headshot.jpg",
            "https://www.cgspectrum.com/hubfs/Horizon-Zero-Dawn-1200x630.webp",
            "https://www.cgspectrum.com/hubfs/nadia-stefyn.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/Horizon-Zero-Dawn-1200x630.webp?width=280&name=Horizon-Zero-Dawn-1200x630.webp",
            "https://www.cgspectrum.com/hubfs/nadia-stefyn.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/Fortnite-1200x630.jpg?width=280&name=Fortnite-1200x630.jpg",
            "https://www.cgspectrum.com/hubfs/nadia-stefyn.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/what-is-the-game-design-process.jpg?width=280&name=what-is-the-game-design-process.jpg",
            "https://www.cgspectrum.com/hubfs/nadia-rao.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/watch-dogs-blog-Feat-Image.webp?width=280&name=watch-dogs-blog-Feat-Image.webp",
            "https://www.cgspectrum.com/hubfs/nadia-stefyn.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/australian-vfx-game-studios.webp?width=280&name=australian-vfx-game-studios.webp",
            "https://www.cgspectrum.com/hubfs/nick-fredin.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/borderlands-game-art-carl-shedd-feat.jpg?width=280&name=borderlands-game-art-carl-shedd-feat.jpg",
            "https://www.cgspectrum.com/hubfs/nadia-stefyn.webp",
            "https://www.cgspectrum.com/hs-fs/hubfs/how-to-become-a-game-artist-feat.jpg?width=280&name=how-to-become-a-game-artist-feat.jpg",
            "https://www.cgspectrum.com/hubfs/Shoshanah-Wall-headshot.jpg",
            "https://www.cgspectrum.com/hs-fs/hubfs/aaa-vs-indie-game-dev-studios-feat.jpg?width=280&name=aaa-vs-indie-game-dev-studios-feat.jpg",
            "https://www.cgspectrum.com/hubfs/Shoshanah-Wall-headshot.jpg",
            "https://www.cgspectrum.com/hs-fs/hubfs/gametester-socialshare.jpg?width=280&name=gametester-socialshare.jpg",
            "https://www.cgspectrum.com/hubfs/Shoshanah-Wall-headshot.jpg",
            "https://www.cgspectrum.com/hs-fs/hubfs/Far-Cry-Primal.webp?width=280&name=Far-Cry-Primal.webp",
            "https://www.cgspectrum.com/hubfs/nadia-rao.webp"
        ],
        "movies": [
            "https://www.youtube.com/embed/ZEoyoXUoIX8",
            "https://player.vimeo.com/video/639242183?h=ca67b3be9c&badge=0&autopause=0&player_id=0&app_id=58479/embed",
            "https://www.youtube.com/embed/DZNnS4dGWD8"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Shoshanah Wall"
        ],
        "publish_date": "2022-10-05T00:56:28+00:00",
        "summary": "",
        "meta_description": "Troy Dunniway (Microsoft, EA, Ubisoft, Samsung) dives into some of the technical, artistic & soft skills needed to become a successful video game designer.",
        "meta_lang": "en",
        "meta_favicon": "https://www.cgspectrum.com/hubfs/CG_Favicon-2.png",
        "meta_site_name": "",
        "canonical_link": "https://www.cgspectrum.com/blog/skills-you-need-as-a-game-designer-troy-dunniway",
        "text": "What skills do you need as a game designer? Video game industry veteran and CG Spectrum’s Department Head of Game Design, Troy Dunniway (Microsoft, EA, Ubisoft, Insomniac, Disney, Samsung), answers this commonly asked question by exploring some of the technical, artistic, and soft skills needed to become a successful game designer in the video game industry.\n\nThis article is filled with industry insights and anecdotes—an essential read for aspiring game designers.\n\nWhat skills does a game designer need?\n\nHaving artistic skills and technical aptitude can tremendously help you succeed as a designer. If you have previous skills in art or engineering, it is great if you continue to expand your knowledge and skills in these areas. However, you will still need to learn the core skills of being a game designer and then figure out how to apply your existing skills to your design role as part of a game development team.\n\nAs a game designer, you will need to:\n\nUnderstand what makes a game “fun” and how to create a great user experience.\n\nUnderstand how to break things down into systems.\n\nHave great soft skills and the ability to communicate effectively and work within a team.\n\nKnow how to understand and use data to get qualitative information to affect your designs.\n\nHave basic-to-advanced drawing skills to communicate ideas visually.\n\nHave a basic understanding of 3D art, modeling, texturing, rigging, animation, and other areas of 3D art creation, use, and conversion.\n\nHave a good understanding of technical implementation within games, scripting languages, syntax, and other basic programming concepts.\n\nPossess a great understanding of game levels, level layouts, drawing maps, architecture, and other design areas related to game level design.\n\nHave basic-to-advanced knowledge of Interface design and UI/UX in games.\n\nHave basic-to-advanced storytelling and writing skills for writing game stories and quests.\n\nKnow how to use a game engine to build games.\n\nKnow how to use basic programs for writing documents, spreadsheets, making presentations, flowcharting, image editing and creation, etc.\n\n...and a whole lot more! You will learn the basics of all of these and more when you take our Game Design Course at CG Spectrum.\n\nIn more detail, below, we cover the following:\n\nArtistic skills\n\nFocusing on “fun”\n\nTechnical skills\n\nCross-lateral knowledge\n\nProblem-solving skills\n\nAdaptivity skills\n\nGame engine proficiency\n\nTroy explains the role of a game designer\n\nArtistic skills in game design\n\nAs a game designer, it is great to have the skills to create art, but it’s not required. Relevant art skills can cover a wide variety of things, from art direction, illustration and sketching, UI/UX creation, 3D modeling, animation, and a number of other areas.\n\nGreat art skills will usually make your job as a game designer better—you can use them to either communicate visually, express your ideas, create your own art in-game, or even just know how to modify art that just needs to be tweaked to work properly in a game.\n\nOn some teams, the level artists (or game artists) will essentially create a bunch of assets (think of them like lego bricks) which a designer can plop into a level as they are creating it. However, while this used to be easy, the density of assets from much faster devices has increased exponentially in the last few years, which now allows levels to have tremendously more things in them. For example, in 1990, a level took up 64KB. Now, it’s around 100GB.\n\nGame art by CGS alum, Noor Vullinghs\n\nMany games (especially at bigger AAA studios) are always pushing the visual boundaries of what the latest PCs and gaming consoles can draw on-screen, and levels today can look much more realistic and have a lot more detail in them. Whereas before, maybe a level designer might just need to place down a single building in a location, now that same building could be surrounded by props, foliage, and hundreds or thousands of small little objects to make it feel more integrated and realistic.\n\nPlacing game assets now takes an artistic eye, and this has disrupted many teams' pipelines. Now, after a designer finishes placing assets, a level artist may need to come in and polish the level visually.\n\nThis doesn’t require you as a designer to know how to model, texture, animate, or create art from scratch, but this might require some sense of how to assemble and place assets in a way to make them feel either more realistic or visually pleasing. Lighting, composition, effects, and atmosphere are also critical to good level design and are related to art skills and areas to learn about as a level designer, which is a specialization of a game designer.\n\nSo, if you are thinking of becoming a level designer, you should consider learning and practicing the skills you would need on how to assemble levels that are great looking as well as fun.\n\nAs a game designer, at a minimum, you should be familiar with some 2D art tools like Adobe Photoshop and Illustrator in order to create basic mockups, UI/UX mockups and flows, level drawings, flowcharts, and other simple illustrations to communicate visually.\n\nLevel design by CG Spectrum Mentor Nicholas Najm for the game Bloodstained: Ritual of the Night\n\nRegardless of what your current art skills are, at some point, it is highly recommended to try and either learn some basic art skills or practice and improve your existing skills.\n\nIf you are just getting started as a game designer, however, PLEASE focus on finding the fun first and do not overwhelm yourself initially with learning how to be a game designer and an artist.\n\nFocusing on \"fun\" in game design\n\nWhen developing CG Spectrum’s game design courses, we made the conscious decision to try and focus learning on fundamental foundational concepts related to HOW to make a game FUN. As a game designer, you first and foremost need to be a master of HOW to make a game or level FUN, interesting, compelling, and something a player would want to play.\n\nIf you are just getting started, you need to focus on how to find and design the fun over learning how to create art from scratch, how to program in C, or do any of the other thousand jobs that are needed to make a great game.\n\nWhack-A-Zombie game by CGS alum, Jeff Giron\n\nStay focused and realize that game design requires you to be a lifelong learner. You cannot learn it all this year, and maybe not in a lifetime. Focus on finding the fun, get an overview of how the other teams and jobs work, and avoid taking on too much.\n\nTechnical skills in game design\n\nIt is almost impossible to be successful as a game designer without some level of technical knowledge and skills. You do NOT need to be a game programmer to be a successful game designer, but you need to understand the concepts. Knowing them can be beneficial to a game designer, but it is NOT required.\n\nAs game designers, we mostly work with scripting things in a game and using a LOT of math. Common game scripting languages are Python, Lua & C#, but many others exist. A scripting language is a simplified programming language.\n\nIf you are new to scripting, I highly recommend learning Unreal Blueprints as a starting point, as it’s very powerful and easier to learn.\n\nThey are usually much easier to learn and often are visually represented. This means you are working with “boxes” and lines to connect them, where each represents some kind of technical ability or function. This can be much easier than trying to learn how to write out a language in words and having to worry about complex syntax.\n\nGame Design Course alum Vincent Velarde used Unreal Blueprints for his FPS combat game\n\nIt is also often important to understand the concepts behind how programming works, especially object-orientated programming. This is used extensively in more emergent game design and programming, where things relate to each other and affect each other in indirect ways.\n\nIf you're going to script, you have to basically understand how to program. You need to comprehend data types and logic. You need to understand what branches and loops are. You're going to have to deal with things like arrays. And quite often, timing and understanding how a computer deals with time will be critical.\n\nGame designers usually also need to know how to use spreadsheets and databases, write formulas, and things like SQL queries. Most games have a LOT of statistics in them, especially RPGs and strategy games. These games need to be balanced, and many aspects of their stats need to be worked out—the game economies, weapons, characters, units, and many other components all have a massive amount of information in them to keep balanced over time.\n\nMany of these also have temporary and permanent effectors like a buff which can change stats over time. Some games (like League of Legends) are so impossible to balance that the design team has embraced constantly rebalancing and changing the balance to force players to adapt. Understanding math and numbers here is a critical skill.\n\nLeague of Legends is up to season 12 (Image: Riot Games)\n\nAnother important skill important to game designers, which is also somewhat technical in nature, is analytical thinking. Programmers are often exceptional at breaking down problems and breaking them into systems.\n\nAs game designers, our ideas will often need to be implemented by a programmer, and the more that we can design and define our ideas in a way that they can be properly implemented, the better things will be for everyone.\n\nThis skill set is especially important for game system designers.\n\nEven something as simple as writing dialog can be incredibly complicated and requires scripting and technical abilities, such as the implementation of branching dialogs, making them interactive, setting up the triggers, and so on.\n\n[featured]\n\nIf you are not technical at all, stumble with math and science and have trouble with technical subjects, you might find yourself struggling as a game designer. You might need to find a more artistic area or another area within game design to try and work while building your core technical skills.\n\nCross-lateral knowledge as a game designer\n\nAs you may know or are quickly learning, being a game designer is incredibly difficult. To be a successful game designer, you need to know a lot about a lot. Game design itself has a tremendous amount to know for each type of game you want to make, both in the skills of game design itself, as well as the tools/engine to use, and often the subject matter related to the game.\n\nFor example, if you are doing a game based on modern military or a historical subject, you might have to do tons of reading, movie watching, and research to understand what to use in your game. If you are making a sci-fi or fantasy game, you might need to know what else is similar out there and what your competitors are doing, and explore some of it for inspiration as well.\n\nA licensed game might require you to become an expert in their brand and everything related to it that you would need to use or respect within the game. Many games will require you to learn about something before or during their design.\n\nWhen studying and learning about games, I also believe there is a LOT to learn from most/all games.\n\nMany designers make the mistake of only playing and studying one or two genres or platforms of games and become extreme experts in one area. But there is a lot to learn from many genres of games or platforms.\n\nBeyond game learning all of the ins and outs of game design itself, it can be VERY useful to have some basic-to-advanced knowledge of the many other areas in game development as well as some less obvious things like:\n\nScheduling/production\n\nLeadership\n\nPresenting/communication\n\nAudio production and voiceover\n\nWriting/storytelling\n\nPsychology\n\nSales and marketing\n\nUser acquisition\n\nBusiness development\n\nLegal issues and contracts\n\nOn top of all that, most countries and markets also have different needs and things they like, so if foreign markets are important to you, you also need to understand those markets and how to make a game that appeals to everyone. This is especially true if trying to make games that would sell well in, say, USA and China, which are often VERY different. Often you might even need to make two slightly different games.\n\nSo, as you can see, the concept of cross-lateral learning (i.e., learning many different things) or sometimes thought of as being a “jack of all trades,” can be an important skill for a game designer. So, get ready to learn and keep learning!\n\nProblem-solving skills in game design\n\nMaking games is incredibly hard at many levels, and if you cannot solve complex problems in design, technology, the game engine, or a million other areas, you will be in constant struggles and frustrations.\n\nLearning how to solve your own problems is vital. This could be by Googling something, figuring out who to ask, finding online tutorials or resources, or seeking advice from your peers. You cannot expect someone to hold your hand every step of the way.\n\nBeing self-sufficient is a critical skill because making and designing games is incredibly hard, and you will face a wide assortment of challenges, technical issues, or other problems you will need help solving.\n\nRemember that, in the end, it’s all about the user experience. We often try to do things in what we think is the “right way” or the most “optimal way” (maybe has higher performance, for example) when in the end, we just need a solution that is FUN.\n\nFor example, I helped out on an American civil war game where around 10,000 soldiers on each side would line up in massive formations to shoot at each other. They were tracking 20,000 bullets with real physics and collision detection, and the game was always running 1-2 fps (it should have been a min of 60 fps). The console CPU couldn’t handle all of the real simulations of the combat.\n\nBattle scene from historical strategy game Age of Empires 3, which Troy worked on as a game designer\n\nI had our engineer change to a random dice roll, based on the stats of each army, so that we would just determine in each volley how many would die or get injured and randomly pick which guys died. The change took our engineer around 1 hour to implement, and suddenly, the game was running at 150+ fps! When playing the game, a user couldn’t tell the difference.\n\nRemember that at CG Spectrum, you have an industry-expert mentor, game design teaching assistants, and an amazing online community full of students and industry pros and other resources to help you, but you still will often need to look outside for help.\n\nCan you think about and approach problems in a different way?\n\nAdaptivity skills in game design\n\nAnother form of problem-solving is to design around the problem. MANY game designers (even most seasoned veterans) think that to make something fun or different, they need something new or unique. But knowing how to reuse or adapt things in new and innovative ways and make the most out of what you have is critical to your success as a designer.\n\nCan you design something differently, take a different approach, use a different technique to accomplish a goal, reuse something that is working or use it in another way to get around what is broken?\n\nThe more self-reliant you are, the better value you will be to your team. Look for creative ways to solve problems and learn how to approach problems from different angles.\n\nEvery day when making games as a project lead, I am constantly bombarded with requests (from designers and others) for new features and new content. I am constantly trying to show team members how to maximize what they have, how to combine and recombine things in new ways, and how to tweak existing stuff more quickly and easily than it would be to create something new.\n\nFor example, in an MMORPG, I needed a lot more enemies, so I took the base models of most enemies and duplicated each of them, added a color tint to the model, scaled them, renamed them, and changed their stats. This was all work I could do quickly and by myself, and I suddenly had five times more enemies to use with hardly any work.\n\nCGS alum Marcus Colello's project. With the help of his mentor, Shaun Stephenson, they figured out how to attach a localized rain particle effect to the character blueprint, so it followed the character around without needing to overdraw particles across the entire environment (which would make the scene too heavy).\n\nYou can also do creative things by combining character mechanics with level features, like even just subtle changes to how fast an enemy is, how much armor it has, the weapon it uses, and such can dramatically change the situation. Then, if you combine it with different room/level layouts or features, each situation can present a different “puzzle” of sorts that players need to adapt their play to and make interesting choices.\n\nSo, as you gain more experience, you will have a better idea of what is hard and what is easy to do and how to adapt your ideas to work with what is possible.\n\nGame engine proficiency\n\nAt CG Spectrum, we teach you HOW to use Unreal Engine and provide our own Unreal Framework to actually implement a real game. We do have a series of tutorial documents and videos related to using Unreal, but they do NOT cover the basics, and we expect you to have some intro-level skills at a minimum.\n\nWe do provide a list of basic-to-advanced tutorials we recommend you go through before starting your game design course with us. These include links to a series of tutorials from Epic Games Unreal Online Learning platform, YouTube, and some other third-party content providers which we recommend using (most are free). There’s also a great article, 80 Level Ratings: Best YouTube Channels With Unreal Engine Tutorials, which has some good recommendations.\n\nOutside of the game design course, CG Spectrum offers additional game development programs which teach different aspects or areas of using Unreal Engine (game programming, virtual production, game art, etc.). If you are interested in learning Unreal Engine better, you might also look into taking one of our other expert-led courses.\n\nScene created in Unreal Engine by Real-time 3D and Virtual Production Course grad Marc Carratala\n\nWe are constantly expanding our own Unreal tutorials, and as an Unreal Academic Partner and Unreal Authorized Training Center, we are working closely with Epic Games to develop additional, more focused tutorials and courses on how to use Unreal Engine in game, film, and realtime productions.\n\nFor more game design insights and advice from Troy, check out Decision-making in game design: 9 critical factors to consider.\n\nGain the skills you need to become a game designer at CGS and CGSI!\n\nIf this article has been helpful, and you're ready to start your journey as a game designer with expert career training and personalized mentorship from industry professionals, then hit the button below to apply. We offer both shorter game design courses as well as accredited game design degrees and diplomas.\n\nSee you in class!"
    }
}