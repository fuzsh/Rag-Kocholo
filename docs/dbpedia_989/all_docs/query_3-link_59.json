{
    "id": "dbpedia_989_3",
    "rank": 59,
    "data": {
        "url": "https://code.tutsplus.com/an-introduction-to-spritesheet-animation--gamedev-13099t",
        "read_more_link": "",
        "language": "en",
        "title": "An Introduction to Spritesheet Animation",
        "top_image": "https://cms-assets.tutsplus.com/uploads/users/30/posts/18204/preview_image/kandi-preview-400px.png",
        "meta_img": "https://cms-assets.tutsplus.com/uploads/users/30/posts/18204/preview_image/kandi-preview-400px.png",
        "images": [
            "https://static.tutsplus.com/packs/static/images/envato-tutsplus-dark-da1bf6c5a7fd83433e94.png",
            "https://static.tutsplus.com/packs/static/images/envato-tutsplus-dark-da1bf6c5a7fd83433e94.png",
            "https://static.tutsplus.com/packs/static/images/envato-tutsplus-dark-da1bf6c5a7fd83433e94.png",
            "https://static.tutsplus.com/packs/static/images/home-67b42eb75817c9594bed.svg",
            "https://www.gravatar.com/avatar/43111ebfc98a0b559c4a1dc31b6e39f6?s=200&d=https%3A%2F%2Fassets.tutsplus.com%2Fimages%2Fhub%2Favatar_default.png&r=PG",
            "https://i.ytimg.com/vi/RfKyIlye1xU/maxresdefault.jpg",
            "https://cdn.tutsplus.com/cdn-cgi/image/width=733/gamedev/uploads/2013/11/Muybridge_race_horse_sheet.gif",
            "https://cdn.tutsplus.com/cdn-cgi/image/width=630/gamedev/uploads/2013/11/Muybridge_race_horse_sheet.gif",
            "https://cdn.tutsplus.com/cdn-cgi/image/width=360/gamedev/uploads/2013/11/Muybridge_race_horse_sheet.gif",
            "https://cdn.tutsplus.com/gamedev/uploads/2013/11/Muybridge_race_horse_animated.gif",
            "https://cdn.tutsplus.com/gamedev/uploads/2013/11/sprite.png",
            "https://cdn.tutsplus.com/cdn-cgi/image/width=500/gamedev/uploads/2013/11/spritesheet.png",
            "https://cdn.tutsplus.com/cdn-cgi/image/width=500/gamedev/uploads/2013/11/spritesheet.png",
            "https://cdn.tutsplus.com/cdn-cgi/image/width=360/gamedev/uploads/2013/11/spritesheet.png",
            "https://cdn.tutsplus.com/cdn-cgi/image/width=500/gamedev/uploads/2013/11/spritesheet_numbered.png",
            "https://cdn.tutsplus.com/cdn-cgi/image/width=500/gamedev/uploads/2013/11/spritesheet_numbered.png",
            "https://cdn.tutsplus.com/cdn-cgi/image/width=360/gamedev/uploads/2013/11/spritesheet_numbered.png",
            "https://www.gravatar.com/avatar/43111ebfc98a0b559c4a1dc31b6e39f6?s=200&d=https%3A%2F%2Fassets.tutsplus.com%2Fimages%2Fhub%2Favatar_default.png&r=PG",
            "https://static.tutsplus.com/packs/static/images/thumbs-up-e80969147d3487ef9dc5.svg",
            "https://static.tutsplus.com/packs/static/images/thumbs-up-highlight-13174f0b8cbe2b523c3b.svg",
            "https://static.tutsplus.com/packs/static/images/thumbs-down-401ae0d4ead12668516b.svg",
            "https://static.tutsplus.com/packs/static/images/thumbs-down-highlight-1022d39c6062c9267b1d.svg",
            "https://static.tutsplus.com/packs/static/images/market/code/wordpressplugin-ff7db8af535919c26f94.png",
            "https://static.tutsplus.com/packs/static/images/market/code/php_script-5bf7d147ae985669a293.png",
            "https://static.tutsplus.com/packs/static/images/market/code/javascript-523cd3104150162085a3.png",
            "https://static.tutsplus.com/packs/static/images/market/code/mobile-ba7205b80c0a3d32fab1.png",
            "https://static.tutsplus.com/packs/static/images/ecosystem/Elements-9c6156923682e0ca754a.png",
            "https://static.tutsplus.com/packs/static/images/ecosystem/Market-b1c3dbb6b2a34956edf4.png",
            "https://static.tutsplus.com/packs/static/images/ecosystem/Placeit-2bfac81aff196db3c276.png",
            "https://static.tutsplus.com/packs/static/images/ecosystem/Community-4973bc700aa03754d91c.png",
            "https://static.tutsplus.com/packs/static/images/tuts_logo-73b941f1418b55c886ac.svg",
            "https://static.tutsplus.com/packs/static/images/bcorp-bfc565be3a93741fc88c.svg",
            "https://static.tutsplus.com/packs/static/images/social_youtube-2fdd89edede4b116d099.svg",
            "https://static.tutsplus.com/packs/static/images/social_instagram-f01c9d7dc71f1ea86182.svg",
            "https://static.tutsplus.com/packs/static/images/social_tiktok-57b06ff17a284d8a1744.svg",
            "https://static.tutsplus.com/packs/static/images/social_facebook-f35494f677e855ad50dd.svg",
            "https://static.tutsplus.com/packs/static/images/social_twitter-98772a5169f3f29dd437.svg",
            "https://static.tutsplus.com/packs/static/images/social_pinterest-c768bee1968ceb51ae43.svg",
            "https://www.facebook.com/tr?id=912712196247539&ev=PageView&noscript=1",
            "https://googleads.g.doubleclick.net/pagead/viewthroughconversion/943617023/?value=0&guid=ON&script=0"
        ],
        "movies": [
            "https://tutsplus.github.io/kandi-runner/",
            "https://tutsplus.github.io/jsfiddle-demos/an_introduction_to_spritesheet_animation_example_1/index.html",
            "https://tutsplus.github.io/jsfiddle-demos/an_introduction_to_spritesheet_animation_example_2/index.html",
            "https://tutsplus.github.io/kandi-runner/"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Steven Lambert"
        ],
        "publish_date": "2013-11-26T04:30:04+00:00",
        "summary": "",
        "meta_description": "Spritesheets have been used in games for a long time. Classic games such as Legend of Zelda: A Link to the Past and even modern games like Cut the Rope have used them. In this article, we'll talk...",
        "meta_lang": "en",
        "meta_favicon": "https://static.tutsplus.com/packs/static/images/favicon-f8d459d2fa865233f59c.ico",
        "meta_site_name": "Code Envato Tuts+",
        "canonical_link": "https://code.tutsplus.com/an-introduction-to-spritesheet-animation--gamedev-13099t",
        "text": "Spritesheets have been used in games for a long time. Classic games such as Legend of Zelda: A Link to the Past and even modern games like Cut the Rope have used them. In this article, we'll talk about what spritesheet animation is and how to code it, and we'll also demonstrate how they can be used in a small game. I'll be using JavaScript for the code, but you should be able to follow along in any language.\n\nBefore we can begin talking about how to code a spritesheet animation, we should first define a few terms: animation, sprite, and spritesheet.\n\nAnimation\n\nBack in 1872, Eadweard Muybridge was commissioned to prove whether a horse lifted all four legs off the ground at once when it ran. To do so, he set up a series of cameras along a track and took pictures in quick succession as a horse ran by. This process allowed him to capture 16 pictures of the horse's run. In one of the pictures, the horse did indeed have all four legs off the ground.\n\nMuybridge later repeated the experiment and placed each photo onto a device that could project the photos in rapid succession to give the illusion of the horse running, creating the first movie projector.\n\nThe process of changing images in quick succession to give the illusion of movement is called animation.\n\nSprite\n\nA sprite is a single graphic image that is incorporated into a larger scene so that it appears to be part of the scene.\n\nSprites are a popular way to create large, complex scenes as you can manipulate each sprite separately from the rest of the scene. This allows for greater control over how the scene is rendered, as well as over how the players can interact with the scene.\n\nIt is not uncommon for games to have tens to hundreds of sprites. Loading each of these as an individual image would consume a lot of memory and processing power. To help manage sprites and avoid using so many images, many games use spritesheets.\n\nIf you're looking for pre-made, creative graphics, discover Game Sprites and Sheets that may be just the right fit for your needs.\n\nSpritesheet\n\nWhen you put many sprites into a single image, you get a spritesheet.\n\nSpritesheets are used to speed up the process of displaying images to the screen; It is much faster to fetch one image and display only a part of that image than it is to fetch many images and display them.\n\nSpritesheet animation is nothing more than taking a spritesheet and changing which sprite is rendered in quick succession to give the illusion of movement, much like a film projector displaying a movie.\n\nParts of a Spritesheet\n\nSpritesheets are made up of two parts: frames and cycles\n\nA frame is a single image (or sprite) from the spritesheet. Going back to the Muybridge's horse example, each picture of the horse in the image would be a frame.\n\nWhen the frames are put in an order that creates a continuous movement, it creates a cycle.\n\nPutting the photos of the horse in the order that they were taken produces a \"run\" cycle since the horse is running (as opposed to a \"walk\" or \"idle\" cycle).\n\nCoding Spritesheet Animations\n\nThere are three parts to coding a spritesheet animation:\n\nCreating the image\n\nUpdating the image to each frame of the animation\n\nDrawing the frame to the screen\n\nCreating the Image\n\nWe'll start by creating the function (or class) that will handle our spritesheet animation. This function will create the image and set its path so that we can use it to draw.\n\nSince different spritesheets can have different frame sizes, we'll need to pass the frame width and height so that we can accurately calculate how many frames are in a row and column of the image. We'll use this information later to draw the animation to the screen.\n\nIt is important that each frame of the spritesheet is the same width and height; otherwise, drawing the animation to the screen is very difficult.\n\nUpdating the Image\n\nTo update the spritesheet animation, all we have to do is change which frame we will draw. Below is the spritesheet divided into each of its frames and numbered.\n\nAt every frame of the game, we'll update the spritesheet. However, we don't want the animation to switch to the next frame every frame, so we need to tell our spritesheet how many frames to wait before transitioning.\n\nIt is important to note that not every spritesheet has a sprite in every available frame (such as the image of Muybridge's \"The Horse in Motion\"). If we were to try to animate our spritesheet with an empty frame, there would be a blip in the animation every time the blank frame is drawn to the screen.\n\nTo compensate for this, we will also tell the spritesheet what the last frame number is, so that we don't animate empty frames.\n\nBy using the modulo operator (%) for the currentFrame, we can create a continuous loop—every time the endFrame is reached, the currentFrame will revert back to 0, thus looping the animation.\n\nThe modulo operator for the counter prevents integer overflow.\n\nDrawing the Image\n\nDrawing an image from a spritesheet works in exactly the same way as drawing an image from a tile map.\n\nWe calculate the row of the image we want to draw by taking the modulo of the current frame and the number of frames per row. We calculate the column by dividing the current frame by the number of frames per row.\n\nUsing this row and column, we can then calculate the coordinates of the frame to draw by multiplying them by frameWidth and frameHeight, respectively:\n\nWith the spritesheet function in place, we can now use it to create a spritesheet animation:\n\nMultiple Cycles in One Spritesheet\n\nThe above code will work for any spritesheet containing one cycle. However, it is not uncommon for a spritesheet to hold multiple cycles, meaning that there will be multiple animations in a single spritesheet.\n\nWe will need to change how our spritesheet works in order to handle multiple animations from a single spritesheet.\n\nCreating the Image\n\nSince the image remains the same between animations, we will divide our spritesheet into two functions: one for the image and one for each animation from the spritesheet.\n\nA spritesheet will hold the information about the image and the frame sizes.\n\nUpdating and Drawing the Image\n\nAn animation will be in charge of updating and drawing the spritesheet.\n\nSince the spritesheet contains more frames than any single animation will need, we'll need to know which frame number to start and end the animation. Using this information, we'll create an array of frame numbers so that we can use currentFrame to access the correct frame number.\n\nPutting the Spritesheet to Use\n\nWith the animation ready to handle any spritesheet, we can use it to make a simple Canabalt-style infinite runner:\n\nYou can find the full source code for this in our GitHub repo. What's your high score?\n\nExtra Resources"
    }
}