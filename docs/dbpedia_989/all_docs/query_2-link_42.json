{
    "id": "dbpedia_989_2",
    "rank": 42,
    "data": {
        "url": "http://rbwhitaker.wikidot.com/monogame-introduction-to-2d-graphics",
        "read_more_link": "",
        "language": "en",
        "title": "RB Whitaker's Wiki",
        "top_image": "http://rbwhitaker.wikidot.com/local--favicon/favicon.gif",
        "meta_img": "http://rbwhitaker.wikidot.com/local--favicon/favicon.gif",
        "images": [
            "http://c.statcounter.com/3213187/0/68dbc96b/1/",
            "http://rbwhitaker.wdfiles.com/local--files/nav:side/WikidotBookAd.png",
            "http://rbwhitaker.wdfiles.com/local--files/nav:side/RealmFactoryAd.png",
            "http://rbwhitaker.wdfiles.com/local--files/monogame-introduction-to-2d-graphics/2DCoordinateSystem.png",
            "http://rbwhitaker.wdfiles.com/local--files/tutorial-icons/Troubleshooting.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/local--favicon/favicon.gif",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Overview\n\nIn the next few tutorials, we will be taking a look at 2D graphics. 2D graphics are an important element of game programming. In addition to the fact that we can make games that are completely 2D, knowing how to do 2D graphics can add a great deal to 3D games with very little effort. 2D graphics are used for splash screens, menus, and HUDs (Heads-up Displays), among other things. In future tutorials, we will take a look at how to actually do 2D graphics. This tutorial will look at how to get started with 2D.\n\nThe 2D World\n\nThe 2D coordinate system we use in video games is relatively straightforward. Everything is measured in pixels from the top left corner. Nearly all of the drawing commands that we do will be expressed in these coordinates. This sounds good in theory, but there's a catch: not all screen sizes are the same. We'll have to address this problem in our games, but that's a topic for another tutorial.\n\nThe 2D coordinate system's origin is in the top left corner of the screen. The x-axis starts at 0 there and goes right. The y-axis starts there as well and goes down. The fact that the y-axis goes down is notable. If you've done much math before, you're probably way more comfortable with the y-axis going upwards instead. Indeed, many algorithms that you might find on the Internet for doing this or that might even assume an upwards y-axis.\n\nThese differences in coordinate systems can be accounted for as long as we're aware of them. Just remember that 2D drawing in a video game always has the y-axis going down from the top, not up from the bottom.\n\nSprites\n\nNo, this section is not about ghosts, and it is not about elves. And it is also not about lemon-lime flavored beverages either. In computer graphics, a sprite is a two-dimensional image. Nearly everything we do while we are doing 2D graphics will be a sprite since most of our work will involve drawing 2D images on the screen in the spots we want them.\n\nOf course, the definition of sprites isnâ€™t just limited to 2D drawing. Sprites even come up in a 3D world. They are often used to achieve fancy effects, like explosions (point sprites), fire, and smoke. They can also be used in simple ways to get detailed images of objects without having to create a complicated 3D model (billboarding and cross-billboarding). For example, we could use a picture (sprite) of a missile rather than creating (and spending all of that energy rendering) a detailed 3D model. For the time being, we will be looking at sprites in a 2D world, and later on, we can come back and discuss how to use sprites in a 3D game."
    }
}