{
    "id": "dbpedia_989_2",
    "rank": 51,
    "data": {
        "url": "https://cs20.ca/VisualProgrammingEnv/FirstProgram.html",
        "read_more_link": "",
        "language": "en",
        "title": "1. Introduction to Scratch (Broadcasts) — Computer Science 20 Saskatchewan",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://cs20.ca/_images/scratch_create.png",
            "https://cs20.ca/_images/scratch_areas.png",
            "https://cs20.ca/_images/scratch_add_new_sprite_from_library.png",
            "https://cs20.ca/_images/scratch_initial_characters.png",
            "https://cs20.ca/_images/scratch_say_block.png",
            "https://cs20.ca/_images/scratch_blocks_connected.png",
            "https://cs20.ca/_images/scratch_deleting_a_block.gif",
            "https://cs20.ca/_images/scratch_goTo_1.png",
            "https://cs20.ca/_images/scratch_goTo_2.png",
            "https://cs20.ca/_images/scratch_coordinate_plane.png",
            "https://cs20.ca/_images/scratch_goTo_andGlide.png",
            "https://cs20.ca/_images/scratch_when_i_receive.png",
            "https://cs20.ca/_images/scratch_conversation_complete.png",
            "https://cs20.ca/_images/scratch_broadcast_check_1.png",
            "https://cs20.ca/_images/scratch_broadcast_check_2.png",
            "https://cs20.ca/_images/scratch_broadcast_check_3.png",
            "https://i.creativecommons.org/l/by-sa/4.0/80x15.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "/runestone/static/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "1.2. Your First Computer Program!¶\n\nThere are many different visual programming environments, but the one we will use is called Scratch. Your first task is to create an account on the Scratch website, so that the programs you write can be saved and accessed later. Go do that now!\n\nIf you’d prefer to watch a video describing how to create your first Scratch program, the following video demonstrates the same ideas as what I’ve described in text below.\n\nNow that you have an account, let’s make your first computer program of the semester! Click the Create button on the top of the Scratch website to create a new project.\n\nIn the project view, the screen is divided into a number of panes, including the stage (where you will see your project run), sprite list (shows which sprites are part of your project, and allows you to select them), block palette (where all the blocks you can drag-and-drop onto your scripts), and the scripts area (where you will combine blocks of code to create programs for your sprites to run). One of the most important things for you to keep in mind is that you can’t break the environment, so feel free to explore as much as you want!\n\nFor our first program, let’s create a simple conversation between two sprites. To do this, you’ll need to add a second sprite to the project. You do this in a number of ways, each of which have an icon at the top of the sprite list pane. You can hover over each of the images with your mouse to discover what they represent. For now, use the “Choose Sprite from Library” icon to add an additional sprite to the stage.\n\nFor this example, I included the Giga sprite, so my stage looks like this:\n\nNote\n\nOnce you have more than one sprite in the sprite list pane, you will be able to see that the scripts area pane shows the script for the currently selected sprite. To be sure you understand this, drag a block from the block palette onto the scripts area. Now select a different sprite in the sprite list by clicking on it. Notice how the blocks in the scripts area change when you select a different sprite.\n\nNow that you have two sprites in the sprite list pane, let’s get them to have a simple conversation. Select the Looks tab in the block palette, then drag a say “Hello” for 2 secs block to the scripts area. A quick way to see the result of this block is by double clicking it. Try it now! Note that the small image of the cat is intended to show which sprite is selected in the Sprite List when dragging the block from the Block Palette to the Scripts Area.\n\nOf course, we don’t want to have to double click the block to make the conversation happen, so we need to have an event trigger the say block. Select the Events tab in the block palette, then drag a when flag clicked block into the scripts area. Now, drag the say “Hello” for 2 secs block until it snaps onto the when flag clicked block. At this point, you should be able to make your sprite say Hello when you click the flag above the stage.\n\nBefore we move on with the conversation, we should know how to delete things. If you have a block in your Scripts Area that you no longer want, simply drag it back to the Block Palette and release the mouse.\n\nTo get our conversation going, drag one sprite to the left side of the stage, and the other to the right side of the stage. Now, let’s set their starting locations. Hook up the character on the left side of the stage to a block, as follows:\n\nThe character on the right side of the stage should have the a script similar to this:\n\nNote\n\nNotice that Scratch uses the Cartesian plane (the xy grid system you learned in math class), and that the origin is directly in the centre of the stage, as shown below:"
    }
}