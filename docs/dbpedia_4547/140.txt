Labour control imperatives in the digital game industry

The game industry is an important vector for organizational study. Statistics about global game profits – expected to reach US$180.1 billion in 2021 (GamingScan, 2020) – are seductive. As part of the lure of the creative economy, the video game industry is globally sought-after and highly subsidized by regional governments. It stands at the intersection of technology, art and entertainment, is an example of project-based work in the creative industries (Hodgson and Briand, 2013; Thompson et al., 2016) and is engaged in innovation vis-a-vis technological, monetization and organizational forms. Developments within the creative industries hold implications for organizational theory and practice across cognate industries because they ‘exemplify forms of labour contracting, management control and firm organization that have broken free of sector constraints and entered more mainstream organizations as a viable way of putting the firm together’ (McKinlay and Smith, 2009: 41).

A growing body of literature contributes to mapping the political economy of the digital game industry (e.g. de Peuter, 2012; Dyer-Witheford and de Peuter, 2009; Kerr, 2017; Nieborg, 2015). Though the industry has undergone numerous transformations, the core of the global value chain remains rooted in an asymmetrical power imbalance between development studios and game publishers (Teipen, 2015). Publishers hold monopoly positions in the value chain because they control access to funding and markets and typically hold the intellectual property rights. This is particularly true of those who hold dual roles as hardware manufacturers who control access to the game platform.

In this ecosystem, development studios rely on capital to fund their game projects, are beholden to publishers through the provision of said capital and are pitted against each other in its acquisition. The funding arrangement is laid out in a contract which stipulates the scope, budget and schedule of the project and to which the development team is held accountable (de Peuter, 2012). Such arrangement puts strong pressure on studios as they are incentivized to underestimate costs and timelines to secure a project and are then forced to deliver (Thompson et al., 2016). Though further elaboration is not possible in this article, this competition for visibility and funding and the ‘iron triangle’ constraints of time, budget and scope (Hodgson and Briand, 2013) are true even for teams within large studios with dual developer–publisher roles and small developers who self-publish and pitch to state-based granting agencies for seed funding (Marklund et al., 2019).

As a result, making games is marked by uncertainty. Each project is a new creative and technological puzzle with few transferable software requirements across games (Wang and Nordmark, 2015). The industry is also highly competitive and the market increasingly saturated. According to Whitson (2013: 123), only one in 25 console games will be profitable, and the top 20 games bring in 80% of industry revenues. To make matters worse, the affordances of digital downloads and streaming – which are having profound impact in the television and music industries – have also disrupted the value chain of the game industry (Nieborg and Poell, 2018). Independent developers can now access consumers directly through platform intermediaries (e.g. iOS App Store, Google Play). This has created a market for ‘casual’ games that are cheaper to make (Juul, 2010). However, the competition for funding has merely been shifted to a competition for discoverability; most games sink rapidly into oblivion (Clement, 2021).

In the post-Fordist view of creative knowledge work, project management is often uncritically heralded as a post-bureaucratic organizational form able to manage such financial and creative risks (Cicmil and Hodgson, 2006). Projects have a defined beginning and end, with a lifecycle consisting of phases. In game development, these phases are called conception, pre-production, production and post-production, and resources are allocated on-demand in each phase (Kerr, 2017). Project management claims to offer a range of means to organize and manage a discontinuous process, and flexible, fluid roles that can quickly adapt to changes in the planning while also maintaining control over the work of expert labour (Hodgson and Briand, 2013). In Braverman’s terms, where it is not possible to gain complete control over the ‘execution’ of work, project management promises a monopoly over ‘conception and planning’ (Thompson, 1983).

The tools of conventional project management have infiltrated creative industries despite the inherent difficulty in planning and controlling an innovative and creative enterprise. Yet, even with modifications to introduce more agility into conventional planning doctrine (Koskela and Howell, 2002), the execution of the project rarely reflects the plan. Despite the overarching and linear lifecycle structure, there is a significant amount of iteration in game development (Marklund et al., 2019) and creative work more broadly. Indeed, it is the inherent contradiction in the claims of project management to deliver both controllability and adventure (Sahlin-Anderson and Söderholm, 2002) that can result in failures and negative work outcomes for project workers.

Practical project management is then a constant balancing act between time and quality (Stinchcombe and Heimer, 1985), which most often results in a downward pressure on workers to put in unpaid hours to achieve both quality and scheduling goals (Legault and Ouellet, 2012; Lindgren and Packendorff, 2007). Digital game studios rely on intense working time regimes where the inherent insecurity of unique endeavours (Marklund et al., 2019) is cushioned by the project manager’s ability to, often implicitly, elicit more effort from the team. Projects are stimulating for the project worker, but also sources of stress, loneliness, disrupted family lives and superficial workplace relations (Packendorff, 2002) because the inherent failures of project management lead to intense work (Legault and Weststar, 2017; Lindgren and Packendorff, 2006; O’Riain, 2000).

From the perspective of LPT, the political economy of the digital game industry and the resulting macro-organizational project management constraints have a profound impact at the point of production. In attempts to reduce uncertainty, tasks are fragmented and rationalized and supervision is increased. In the game industry, Izushi and Aoyama (2006: 1846) note that ‘production processes have shifted from one-person craftsmanship to an intricate division of labour’ while Hodgson and Briand (2013: 309) find that developers are subject to ‘regular interventions from management and [. . .] an emphatically hierarchical division of decision-making’. Highly interdependent work (Hoegl and Weinkauf, 2005; O’Donnell, 2009; O’Riain, 2000) reduces the individual autonomy of any given worker. A delay can have cascading negative effects across the interconnected tasks and full team commitment to keep pace is required. At stake is the employability of project workers who rely on a strong portfolio and reputation (Jones, 1996; Legault and Ouellet, 2012). As a result, the project is reified (Hodgson and Cicmil, 2007) and its success is imperative for organizations and individuals. This, coupled with their short temporality, produces powerful neo-normative control mechanisms that create intense work environments (Fleming and Sturdy, 2009; Peticca-Harris et al., 2015).

As noted by Thompson (2010), worker empowerment comes with a price in the wage-effort bargain as employers are compelled to seek a more intensive utilization of workers’ labour power. Even as workers may be undertaking creative and knowledge-intensive tasks, they may experience more demanding work (Burchell et al., 2002; Heery and Salmon, 2000), greater surveillance and performance targets, a decline in task autonomy (Felstead et al., 2004) and a requirement to perform emotional and aesthetic labour (Bolton, 2004; Brook, 2013). As outlined above, while the work of game development is creative, iterative and flexible, and relies on an innovative combination of inputs from a team of highly skilled specialists, the need to minimize risks has resulted in a downward pressure to fragment and rationalize the work, subject it to increased demands for efficiency, accountability and performativity, and contain it within high time and budgetary pressures. How will servitization impact this environment?

The rise of servitization

One of the emergent solutions to the accumulation crisis faced by the game industry is to transition to a service model. Known as ‘servitization’ (Vandermerwe and Rada, 1988), this strategy is driven by financial, competitive and customer engagement motives (Gebauer et al., 2011; Oliva and Kallenberg, 2003). The service model implies a shift in the nature of customer interaction from short-term transaction to long-term relationship; as well as a pursuit of efficiency and effectiveness of the end user’s activities as they relate to the product (Baines et al., 2009). Lamberti (2013) presents servitization as a continuum of customer centricity and suggests that most firms fall short of the ideal of co-creation. Therefore, its enactment typically only involves tacking on a range of ‘after sale’ services such as maintenance, repair and insurance to the organization’s core products, despite the consensus that servitization requires new methods, processes and skills, in addition to a strong service culture (Barnett et al., 2013). As a result, firms can experience what Gebauer et al. (2005) have termed a ‘service paradox’ – where the costs of delivering new value-added offerings exceed the higher-margin revenues of those services.

Preoccupied with realizing the presumed gains of full-fledged customer centricity, some scholars suggest that digitization can help firms transition more fully to a servitization model since this allows for the development of ‘functionally incomplete’ products which can be ‘re-programmed’ in dialogue with customers (see Green et al., 2017: 47). Green et al. (2017: 47) go so far as to suggest that digitization can change firms from a ‘low tolerance for variety to ones with a high tolerance without sacrificing scale economy benefits for the firm’ since ‘customers are now able to develop further co-capabilities and reduce their reliance on the firms’ human resource’ to achieve variety. Taken together, this conceptual work implies that servitization is resource-intensive for the firm, but research remains limited to a simple financial cost-benefit evaluation. Research on the micro-foundations of servitization and analysis that extends beyond the level of the firm and beyond a manufacturer-centric viewpoint remains scant (Lenka et al., 2018; Lightfoot et al., 2013). Indeed, Raddats et al. (2019: 214) note that ‘despite their being some recognition of inherent risks in the complex process of delivering advanced services and solutions, existing literature provides little empirical evidence about the nature of the risks involved’. Our application of LPT to a study of GaaS helps to close that gap.

LPT has been applied to the service sector through studies of ‘interactive services’ in which the primary job task is directly serving customers. However, the introduction of services within a production firm does not place it in the service sector. Servitization does not imply divesting from product offerings and the construct has a set of required dimensions (Lamberti, 2013) that separate it from the interactive services of the service sector proper. The impact of customer centricity on workers within this different and emergent service environment is unclear. To bridge the gap, we consider how LPT literature from the service sector might apply.

Warhurst et al. (2008) critique the ‘turn to service’ in organizational literature because its focus on the customer completely hides the work that remains – the effort done at the point of production and the workers involved. They suggest that ‘the presence of the consumer does not obviate the requirements for control of the employee but may influence the concrete practices through which control is affected’ (Warhurst et al., 2008: 99). This critique seems germane to the servitization literature and the above-noted suggestion that customer co-creation can add product and service variety without impacting the human resources of a firm (Green et al., 2017). Indeed, due to the nature of work in interactive services, Warhurst et al. (2008) argue that there is a greater need to manage the work to reduce labour indeterminacy and achieve an intensification of what labour power can be harnessed. As seen in studies of customer service environments, this is often achieved through scripts and protocols which dictate the parameters of service interactions and normative controls which extract and commodify the emotional, affective and tacit labour inherent to service work.

Fuller and Smith (1991) coin the term ‘management by customer’ to denote the use of customer feedback systems as a primary measure of worker performance. They argue that this unobtrusive management form gives employers direct performance data while ‘tending to obscure the real locus of power over production’ (1991: 14). This argument has recently been applied to understand how feedback, rankings and rating systems mediated by digital platforms impact the labour process of the service-based gig economy (Gandini, 2019; Veen et al., 2020). However, it is not known whether the customer centricity implied through servitization triggers managerial controls similar to interactive service work, nor really how servitization even manifests in a cultural production industry such as game development. We contribute to the nascent research on the labour process of servitization through an examination of a large North American game studio amid a transition to the GaaS model.

Work intensification

The fundamental difference of GaaS is that instead of being shipped, the game goes ‘live’ and becomes continuously available to players. Future changes or additions will be made in real time without the game going off-line:

The nature of the game itself changes, which changes the way we structure our jobs. It’s keeping in mind that the game isn’t just being released on a fixed date and the release is just a stepping-stone until the next release. (Respondent 5 – GaaP)

Therefore, the post-production phase in GaaS proved to be a new resource-intensive phase rather than a wind down. This brought new job demands. The requirement to maintain the game while simultaneously producing new content at frequent intervals reflected an immense technological challenge. As well, each new component risked crashing the entire game:

The game needs to stay alive and we need to make sure that all the systems we create allow for the updates, that we can build onto it and that it won’t stop. We need to create systems that can accept updates and expansions [. . .] It’s huge since you work in a technological environment where there are certain uncertainties when launching the game. (Respondent 14 – GaaP)

As the above excerpt implies, the long-projected lifecycle and the technical intricacy of building onto an existing software structure also affected the conception and pre-production phases. Developers spoke of the need to balance a fully planned vision with the need for flexibility in the face of changing requirements over the life of the game. As well, GaaS respondents explained that they now received real-time customer feedback in the form of gameplay metrics that tracked in-game behaviours. Responding to these data to maximize player experience translated into new and highly visible task imperatives to be addressed in the short-term.

GaaS therefore presented a paradox for respondents: it required a mindset that embraced adaptability, flexibility and receptivity, but also required long-term contingency planning. When simultaneously maintaining a game and building it, new tensions around task prioritization and the implications of short-term and long-term actions arose:

Everything is harder to change since there are no good moments to do it. Usually in conception and pre-production, that’s where things are put into place and where things need to be modified [. . .] I have a hard time incorporating this because [the team is] all in a rush, they are doing three to four things at once. (Respondent 4 – GaaS)

The monetization strategy required that players remain engaged with the game and organizational brand; therefore, customer feedback was prioritized. The team had to fix identified problems quickly without service interruption, creating new problems or crashing the game. Simultaneously, the team had to envision the next content to sustain player interest and increase monetization capacity while often also building the technical tools to allow this. On top of just fulfilling their duties, GaaS teams had to create new processes and tools to make the work possible.

While GaaS respondents rarely reported the need to work extensive or prolonged overtime like their GaaP counterparts, they did mention the relentless pace and intensity of the average day:

Sure, there’s a pace you can keep, but we can’t actually gauge our energy, move up and down depending on how we feel and replenish our energy. No, we’re asked to marathon at a high speed and never, never, never stop. (Respondent 8 – GaaS)

With smaller, but more frequent deadlines and the new imperative to respond quickly to player feedback, GaaS developers had less predictability and control over their daily tasks; they reported a continual state of crisis. In addition, at the first launch of a live game respondents told us that the core team was likely crunching to reach the release date, but that they also had to be available at full capacity for post-launch. The post-production ‘rest and recovery’ opportunity available to many developers in GaaP was lacking in this new mode:

Last week [. . .] as I am walking down the hall, I see cadavers every 2 meters. I see it on people’s face, they are tired [. . .] When I did [GaaP game titles], I was crunching but I knew there was an end date. (Respondent 9 – GaaS)

The GaaS model seemed to increase the requirement to be constantly available to the project – physically and mentally. However, it also commodified the emotional or affective labour of developers in a new way. Under the GaaP model, developers performed commitment to the project and their team – creating a successful and well-received game was a source of professional pride and a requirement for future employability. However, GaaP developers are never directly accountable to the players once a game has shipped. GaaS moves game developers closer to the front line of service work and requires them to perform a heightened obligation to the players:

The level of implication, motivation you have with the product [. . .] I feel it requires everyone to be twice as involved [. . .] We were all super involved in the past, and now okay we’re more involved, and we care more [. . .] Purely on the physical level [. . .] it’s harder on people. Also, on an emotional, mental level – this concept of caring so much about something for some people is hard. (Respondent 6 – GaaS)

Many also spoke about the new skills that were required. Structurally, we saw this manifested in formalized job roles and job titles such as ‘Live Producer’ or ‘Monetization Manager’, but it also appeared in the informal rise in importance of roles such as community management and data analytics. Developers had to learn how to see problems from the player perspective, new strategies to prioritize work tasks and how to manage competing perspectives, as well as new technical and design skills to sustain innovation. These experiences were most often recounted with enthusiasm, but learning was constrained by the work intensification.

Some of our respondents communicated an ideal narrative where the indefinite timeline of GaaS allows the team to make whatever they want, and to always be able to change course. However, others saw through to the reality of their situation. They felt boxed-in by small fire-fighting tasks driven by daily gameplay data and felt that the pace of GaaS could not accommodate many of the creative elements taken for granted as core development craft (O’Donnell, 2009).

Reduced task autonomy and creative control

The customer centricity of servitization appeared to reduce autonomy through a new constraint on creative control and increased task interdependency. Respondents indicated that player feedback drove decision-making and dictated the priority for each day’s work. The requirement to be responsive to the players and iterate the game according to observed player activity reduced the development team’s creative control. Public commitments to players about upcoming content added further constraints. A GaaP respondent contrasted his experience and struggled to conceive how one would balance the constraints of GaaS:

[On a traditional game], if there is still too much work, you have checkpoints where you can decide to cut stuff. We need to finish this so this means we can’t do this and that . . . When a game exists, to fix one thing you need to fix three things or you already committed to shipping three things and have a fire to extinguish. How do you manage all these things at once? (Respondent 12 – GaaP)

Respondents also said that GaaS impacted autonomy (and job demands) indirectly through increased team interdependency. Owing to the higher risk of disrupting the project, each team member had to be more sensitive to the impact of their work on that of others and on the overall game. These challenges were observed by GaaP respondents and experienced by those in GaaS:

It can be stressful, because you need to update, you need to talk with a lot of people, sometimes you need to get a lot of approvals, and [. . .] well it’s a big company, you have people coming and going and that’s I think maybe one of the downsides of games as a service. (Respondent 2 – GaaS)

The quick turnaround placed extra pressure on the workflow as delays create bottlenecks. The existing structures constrained the work process of individuals and the work overall. Though the need to innovate was pervasive and implicit, there were also elements that limited creative exploration and, in some cases, disincentivized localized or decentralized decision-making:

When something is live, any change becomes a lot more complex because it impacts things that people are already tweaking, so if you break something the consequences are much, much worse. Everything is complex because it needs interactions between many departments. (Respondent 13 – GaaS)

Our respondents reported that the GaaS environment required a greater degree of internal communication through more nimble structural liaison roles that were not present in the incumbent structure. One respondent wished for greater control separate from the existing processes:

The structure and processes are too heavy for live since we have the reflex to make these for [traditional] games. Then you notice that you lose a title update because I spent too much time. I would have liked to have my own sandbox to do the changes ourselves without external processes. (Respondent 3 – GaaS)

As a result, creativity and task autonomy in this new setting was imperative but riskier and harder. GaaS respondents were fearful of the consequences of mistakes and devoted attention to the tasks that would most efficiently and effectively address customer need. They felt that there was a greater risk to game failure because the studio has planned for a long-term revenue stream. Also, players could be virulent in their displeasure and the whole development team was now on the front line of customer service. There were insufficient organizational systems in place to shield them from negative feedback or resources to help them cope. Developers were newly exposed to the need to perform emotional and affective labour. Overall, there was limited autonomy over one’s own work time and team members were often drawn into the crises of others (Perlow, 1999).