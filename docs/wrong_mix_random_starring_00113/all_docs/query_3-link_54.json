{
    "id": "wrong_mix_random_starring_00113_3",
    "rank": 54,
    "data": {
        "url": "http://web.mit.edu/ghudson/dev/nokrb/third/db/docs/ref/intro/products.html",
        "read_more_link": "",
        "language": "en",
        "title": "Berkeley DB Reference Guide: Introduction",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://web.mit.edu/ghudson/dev/nokrb/third/db/docs/images/prev.gif",
            "http://web.mit.edu/ghudson/dev/nokrb/third/db/docs/images/ref.gif",
            "http://web.mit.edu/ghudson/dev/nokrb/third/db/docs/images/next.gif",
            "http://web.mit.edu/ghudson/dev/nokrb/third/db/docs/images/prev.gif",
            "http://web.mit.edu/ghudson/dev/nokrb/third/db/docs/images/ref.gif",
            "http://web.mit.edu/ghudson/dev/nokrb/third/db/docs/images/next.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "embedded",
            "database",
            "programmatic",
            "toolkit",
            "b+tree",
            "btree",
            "hash",
            "hashing",
            "transaction",
            "transactions",
            "locking",
            "logging",
            "access method",
            "access methods",
            "java",
            "C",
            "C++"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Berkeley DB: An embedded database programmatic toolkit.",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Berkeley DB Reference Guide:\n\nIntroduction\n\nSleepycat Software Berkeley DB Products\n\nSleepycat Software licenses three different products that use the Berkeley DB technology. Each product offers a distinct level of database support. It is not possible to mix-and-match products, that is, each application or group of applications must use the same Berkeley DB product.\n\nAll three products are included in the single Open Source distribution of Berkeley DB from Sleepycat Software, and building that distribution automatically builds all three products. Each product adds services, and new interfaces, to the product that precedes it in the list. As a result, developers can download Berkeley DB and build an application that does only single-user, read-only database access, and later add support for more users and more complex database access patterns.\n\nUsers who distribute Berkeley DB must ensure that they are licensed for the Berkeley DB interfaces they use. Information on licensing is available directly from Sleepycat Software.\n\nBerkeley DB Data Store\n\nThe Berkeley DB Data Store product is an embeddable, high-performance data store. It supports multiple concurrent threads of control to read information managed by Berkeley DB. When updates are required, only a single process may be using the database. That process may be multi-threaded, but only one thread of control should be allowed to update the database at any time. The Berkeley DB Data Store does no locking, and so provides no guarantees of correct behavior if more than one thread of control is updating the database at a time.\n\nThe Berkeley DB Data Store product includes the db_create interface, the DB handle methods, and the methods returned by DB->cursor.\n\nThe Berkeley DB Data Store is intended for use in single-user or read-only applications that can guarantee that no more than one thread of control will ever update the database at any time.\n\nBerkeley DB Concurrent Data Store\n\nThe Berkeley DB Concurrent Data Store product adds multiple-reader, single writer capabilities to the Berkeley DB Data Store product, supporting applications that need concurrent updates and do not want to implement their own locking protocols. The additional interfaces included with the Berkeley DB Concurrent Data Store product are db_env_create, the DBENV->open method (using the DB_INIT_CDB flag), and the DBENV->close method.\n\nBerkeley DB Concurrent Data Store is intended for applications that require occasional write access to a database that is largely used for reading.\n\nBerkeley DB Transactional Data Store\n\nThe Berkeley DB Transactional Data Store product adds full transactional support and recoverability to the Berkeley DB Data Store product. This product includes all of the interfaces in the Berkeley DB library.\n\nBerkeley DB Transactional Data Store is intended for applications that require industrial-strength database services, including good performance under high-concurrency workloads with a mixture of readers and writers, the ability to commit or roll back multiple changes to the database at a single instant, and the guarantee that even in the event of a catastrophic system or hardware failure, any committed database changes will be preserved."
    }
}