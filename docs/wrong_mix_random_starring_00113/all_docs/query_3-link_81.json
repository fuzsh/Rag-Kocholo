{
    "id": "wrong_mix_random_starring_00113_3",
    "rank": 81,
    "data": {
        "url": "http://swsoft.nsu.ru/doc/db4.3-doc/java/com/sleepycat/db/LogStats.html",
        "read_more_link": "",
        "language": "en",
        "title": "LogStats (Sleepycat Software, Inc.",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://swsoft.nsu.ru/doc/db4.3-doc/java/resources/inherit.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "com.sleepycat.db.LogStats class"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Method Summary int getCurFile()\n\nThe current log file number. int getCurOffset()\n\nThe byte offset in the current log file. int getDiskFile()\n\nThe log file number of the last record known to be on disk. int getDiskOffset()\n\nThe byte offset of the last record known to be on disk. int getLgBSize()\n\nThe in-memory log record cache size. int getLgSize()\n\nThe current log file size. int getMagic()\n\nThe magic number that identifies a file as a log file. int getMaxCommitperflush()\n\nThe maximum number of commits contained in a single log flush. int getMinCommitperflush()\n\nThe minimum number of commits contained in a single log flush that contained a commit. int getMode()\n\nThe mode of any created log files. int getRegionNowait()\n\nThe number of times that a thread of control was able to obtain the region lock without waiting. int getRegionWait()\n\nThe number of times that a thread of control was forced to wait before obtaining the region lock. int getRegSize()\n\nThe size of the region. int getSCount()\n\nThe number of times the log has been flushed to disk. int getVersion()\n\nThe version of the log file type. int getWBytes()\n\nThe number of bytes over and above st_w_mbytes written to this log. int getWcBytes()\n\nThe number of bytes over and above LogStats.getWcMbytes written to this log since the last checkpoint. int getWcMbytes()\n\nThe number of megabytes written to this log since the last checkpoint. int getWCount()\n\nThe number of times the log has been written to disk."
    }
}