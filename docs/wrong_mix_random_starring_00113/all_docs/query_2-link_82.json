{
    "id": "wrong_mix_random_starring_00113_2",
    "rank": 82,
    "data": {
        "url": "https://edoras.sdsu.edu/doc/BerkeleyDB/java/com/sleepycat/bdb/collection/StoredCollections.html",
        "read_more_link": "",
        "language": "en",
        "title": "StoredCollections (Sleepycat Software, Inc.",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "com.sleepycat.bdb.collection.StoredCollections",
            "StoredCollections class"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Berkeley DB\n\nversion 4.2.52\n\ncom.sleepycat.bdb.collection\n\nClass StoredCollections\n\njava.lang.Object | +--com.sleepycat.bdb.collection.StoredCollections\n\npublic class StoredCollections\n\nextends Object\n\nThis class consists exclusively of static methods that operate on or return stored collections. It contains methods for changing certain properties of a collection. Because collection properties are immutable, these methods always return a new collection reference. This allows stored collections to be used safely by multiple threads. Note that creating the new collection reference is not expensive and creates only two new objects.\n\nWhen a collection is created with a particular property, all collections and iterators derieved from that collection will inherit the property. For example, if a dirty-read Map is created then calls to subMap(), values(), entrySet(), and keySet() will create dirty-read collections also.\n\nDirty-Read Methods names beginning with dirtyRead create a new dirty-read container from a given stored container. When dirty-read is enabled, data will be read that has been modified by another transaction but not committed. Using dirty-read can improve concurrency since reading will not wait for other transactions to complete. For a non-transactional container (when StoredContainer.isTransactional() returns false), dirty-read has no effect. If StoredContainer.isDirtyReadAllowed() returns false, dirty-read also has no effect. If dirty-ready is enabled (and allowed) for a container, StoredContainer.isDirtyReadEnabled() will return true. Dirty-read is disabled by default for a container.\n\nAuto-Commit Methods names beginning with autoCommit create a new auto-commit container from a given stored container. If auto-commit is enabled for a container (or for its DbEnv), a transaction will be started and committed automatically for each write operation when no transaction is already active. Auto-commit only applies to container methods. It does not apply to iterator methods and these always require an active transaction. For a non-transactional container (where StoredContainer.isTransactional() returns false) auto-commit has no effect. If auto-commit is enabled for a transactional container or its environment, StoredContainer.isAutoCommit() will return true. Auto-commit is disabled by default for a container but may be enabled for an entire environment using DbEnv.setFlags(int, boolean).\n\nMethod Summary static Collection autoCommitCollection(Collection storedCollection)\n\nCreates a auto-commit collection from a given stored collection. static List autoCommitList(List storedList)\n\nCreates a auto-commit list from a given stored list. static Map autoCommitMap(Map storedMap)\n\nCreates a auto-commit map from a given stored map. static Set autoCommitSet(Set storedSet)\n\nCreates a auto-commit set from a given stored set. static SortedMap autoCommitSortedMap(SortedMap storedSortedMap)\n\nCreates a auto-commit sorted map from a given stored sorted map. static SortedSet autoCommitSortedSet(SortedSet storedSortedSet)\n\nCreates a auto-commit sorted set from a given stored sorted set. static Collection dirtyReadCollection(Collection storedCollection)\n\nCreates a dirty-read collection from a given stored collection. static List dirtyReadList(List storedList)\n\nCreates a dirty-read list from a given stored list. static Map dirtyReadMap(Map storedMap)\n\nCreates a dirty-read map from a given stored map. static Set dirtyReadSet(Set storedSet)\n\nCreates a dirty-read set from a given stored set. static SortedMap dirtyReadSortedMap(SortedMap storedSortedMap)\n\nCreates a dirty-read sorted map from a given stored sorted map. static SortedSet dirtyReadSortedSet(SortedSet storedSortedSet)\n\nCreates a dirty-read sorted set from a given stored sorted set. static Iterator iterator(Iterator storedIterator)\n\nClones a stored iterator preserving its current position.\n\nMethods inherited from class java.lang.Object equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait\n\nMethod Detail\n\ndirtyReadCollection\n\npublic static Collection dirtyReadCollection(Collection storedCollection)\n\nCreates a dirty-read collection from a given stored collection.\n\nParameters:storedCollection - the base collection. Returns:\n\nthe dirty-read collection.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\ndirtyReadList\n\npublic static List dirtyReadList(List storedList)\n\nCreates a dirty-read list from a given stored list.\n\nParameters:storedList - the base list. Returns:\n\nthe dirty-read list.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\ndirtyReadMap\n\npublic static Map dirtyReadMap(Map storedMap)\n\nCreates a dirty-read map from a given stored map.\n\nParameters:storedMap - the base map. Returns:\n\nthe dirty-read map.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\ndirtyReadSet\n\npublic static Set dirtyReadSet(Set storedSet)\n\nCreates a dirty-read set from a given stored set.\n\nParameters:storedSet - the base set. Returns:\n\nthe dirty-read set.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\ndirtyReadSortedMap\n\npublic static SortedMap dirtyReadSortedMap(SortedMap storedSortedMap)\n\nCreates a dirty-read sorted map from a given stored sorted map.\n\nParameters:storedSortedMap - the base map. Returns:\n\nthe dirty-read map.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\ndirtyReadSortedSet\n\npublic static SortedSet dirtyReadSortedSet(SortedSet storedSortedSet)\n\nCreates a dirty-read sorted set from a given stored sorted set.\n\nParameters:storedSortedSet - the base set. Returns:\n\nthe dirty-read set.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\nautoCommitCollection\n\npublic static Collection autoCommitCollection(Collection storedCollection)\n\nCreates a auto-commit collection from a given stored collection.\n\nParameters:storedCollection - the base collection. Returns:\n\nthe auto-commit collection.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\nautoCommitList\n\npublic static List autoCommitList(List storedList)\n\nCreates a auto-commit list from a given stored list.\n\nParameters:storedList - the base list. Returns:\n\nthe auto-commit list.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\nautoCommitMap\n\npublic static Map autoCommitMap(Map storedMap)\n\nCreates a auto-commit map from a given stored map.\n\nParameters:storedMap - the base map. Returns:\n\nthe auto-commit map.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\nautoCommitSet\n\npublic static Set autoCommitSet(Set storedSet)\n\nCreates a auto-commit set from a given stored set.\n\nParameters:storedSet - the base set. Returns:\n\nthe auto-commit set.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\nautoCommitSortedMap\n\npublic static SortedMap autoCommitSortedMap(SortedMap storedSortedMap)\n\nCreates a auto-commit sorted map from a given stored sorted map.\n\nParameters:storedSortedMap - the base map. Returns:\n\nthe auto-commit map.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\nautoCommitSortedSet\n\npublic static SortedSet autoCommitSortedSet(SortedSet storedSortedSet)\n\nCreates a auto-commit sorted set from a given stored sorted set.\n\nParameters:storedSortedSet - the base set. Returns:\n\nthe auto-commit set.\n\nThrows: ClassCastException - if the given container is not a StoredContainer.\n\niterator\n\npublic static Iterator iterator(Iterator storedIterator)\n\nClones a stored iterator preserving its current position.\n\nParameters:storedIterator - an iterator to clone. Returns:\n\na new StoredIterator having the same position as the given iterator.\n\nThrows: ClassCastException - if the given iterator is not a StoredIterator.\n\nBerkeley DB\n\nversion 4.2.52"
    }
}