{
    "id": "wrong_mix_random_starring_00113_3",
    "rank": 65,
    "data": {
        "url": "https://opensource.apple.com/source/BerkeleyDB/BerkeleyDB-15/db/docs/java/com/sleepycat/bdb/bind/tuple/TupleTupleKeyExtractor.html",
        "read_more_link": "",
        "language": "en",
        "title": "TupleTupleKeyExtractor (Sleepycat Software, Inc.",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "com.sleepycat.bdb.bind.tuple.TupleTupleKeyExtractor",
            "TupleTupleKeyExtractor class"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Berkeley DB\n\nversion 4.2.52\n\ncom.sleepycat.bdb.bind.tuple\n\nClass TupleTupleKeyExtractor\n\njava.lang.Object | +--com.sleepycat.bdb.bind.tuple.TupleTupleKeyExtractor\n\nAll Implemented Interfaces:\n\nKeyExtractor\n\nDirect Known Subclasses:\n\nTupleTupleMarshalledKeyExtractor\n\npublic abstract class TupleTupleKeyExtractor\n\nextends Object\n\nimplements KeyExtractor\n\nAn abstract key extractor that uses a tuple key and a tuple value. This class takes care of converting the key and value data to/from TupleInput and TupleOutput objects. Its two abstract methods must be implemented by a concrete subclass to extract and clear the index key using these objects.\n\nextractIndexKey(TupleInput,TupleInput,TupleOutput)\n\nclearIndexKey(TupleInput,TupleOutput)\n\nConstructor Summary TupleTupleKeyExtractor(TupleFormat primaryKeyFormat, TupleFormat valueFormat, TupleFormat indexKeyFormat)\n\nCreates a tuple-tuple key extractor.\n\nMethod Summary void clearIndexKey(DataBuffer valueData)\n\nClears the index key in a value buffer. abstract void clearIndexKey(TupleInput valueInput, TupleOutput valueOutput)\n\nClears the index key in the tuple value data. void extractIndexKey(DataBuffer primaryKeyData, DataBuffer valueData, DataBuffer indexKeyData)\n\nExtracts the index key data from primary key and value buffers. abstract void extractIndexKey(TupleInput primaryKeyInput, TupleInput valueInput, TupleOutput indexKeyOutput)\n\nExtracts the index key data from primary key tuple and value tuple data. DataFormat getIndexKeyFormat()\n\nReturns the format of the index key data. DataFormat getPrimaryKeyFormat()\n\nReturns the format of the primary key data or null if the index key data is not derived from the primary key data. DataFormat getValueFormat()\n\nReturns the format of the value data or null if the index key data is not derived from the value data.\n\nMethods inherited from class java.lang.Object equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait\n\nConstructor Detail\n\nTupleTupleKeyExtractor\n\npublic TupleTupleKeyExtractor(TupleFormat primaryKeyFormat, TupleFormat valueFormat, TupleFormat indexKeyFormat)\n\nCreates a tuple-tuple key extractor.\n\nParameters:primaryKeyFormat - is the primary key format, or null if no primary key data is used to construct the index key.valueFormat - is the value format, or null if no value data is used to construct the index key.indexKeyFormat - is the index key format.\n\nMethod Detail\n\ngetPrimaryKeyFormat\n\npublic DataFormat getPrimaryKeyFormat()\n\nDescription copied from interface: KeyExtractor\n\nReturns the format of the primary key data or null if the index key data is not derived from the primary key data. If this method returns null, then null will be passed for the primaryKeyData parameter of KeyExtractor.extractIndexKey(com.sleepycat.bdb.bind.DataBuffer, com.sleepycat.bdb.bind.DataBuffer, com.sleepycat.bdb.bind.DataBuffer).\n\nSpecified by:getPrimaryKeyFormat in interface KeyExtractor\n\nReturns:\n\nthe format of the primary key data or null.\n\ngetValueFormat\n\npublic DataFormat getValueFormat()\n\nDescription copied from interface: KeyExtractor\n\nReturns the format of the value data or null if the index key data is not derived from the value data. If this method returns null, then null will be passed for the valueData parameter of KeyExtractor.extractIndexKey(com.sleepycat.bdb.bind.DataBuffer, com.sleepycat.bdb.bind.DataBuffer, com.sleepycat.bdb.bind.DataBuffer).\n\nSpecified by:getValueFormat in interface KeyExtractor\n\nReturns:\n\nthe format of the value data or null.\n\ngetIndexKeyFormat\n\npublic DataFormat getIndexKeyFormat()\n\nDescription copied from interface: KeyExtractor\n\nReturns the format of the index key data.\n\nSpecified by:getIndexKeyFormat in interface KeyExtractor\n\nReturns:\n\nthe format of the index key data.\n\nextractIndexKey\n\npublic void extractIndexKey(DataBuffer primaryKeyData, DataBuffer valueData, DataBuffer indexKeyData) throws IOException\n\nDescription copied from interface: KeyExtractor\n\nExtracts the index key data from primary key and value buffers. The index key is extracted when saving the data record identified by the primary key and value buffers, in order to add or remove an index entry in the database for that data record.\n\nSpecified by:extractIndexKey in interface KeyExtractor\n\nParameters:primaryKeyData - is the source primary key data, or null if no primary key data is used to construct the index key, in which case KeyExtractor.getPrimaryKeyFormat() should also return null.valueData - is the source value data, or null if no value data is used to construct the index key, in which case KeyExtractor.getValueFormat() should also return null.indexKeyData - is the destination index key buffer. For index keys which are optionally present, the buffer's length should be set to zero to indicate that the key is not present or null. IOException\n\nclearIndexKey\n\npublic void clearIndexKey(DataBuffer valueData) throws IOException\n\nDescription copied from interface: KeyExtractor\n\nClears the index key in a value buffer. The index key is cleared when the index is for a foreign key identifying a record that has been deleted. This method is called only if the ForeignKeyIndex is configured with ForeignKeyIndex.ON_DELETE_CLEAR. It is never called for index keys that are derived from primary key data, since in this case ForeignKeyIndex.ON_DELETE_CLEAR is not allowed.\n\nSpecified by:clearIndexKey in interface KeyExtractor\n\nParameters:valueData - is the source and destination value data. On entry this contains the index key to be cleared. It should be changed by this method such that KeyExtractor.extractIndexKey(com.sleepycat.bdb.bind.DataBuffer, com.sleepycat.bdb.bind.DataBuffer, com.sleepycat.bdb.bind.DataBuffer) will extract a null key (set the buffer length to zero). Other data in the buffer should remain unchanged. IOException\n\nextractIndexKey\n\npublic abstract void extractIndexKey(TupleInput primaryKeyInput, TupleInput valueInput, TupleOutput indexKeyOutput) throws IOException\n\nExtracts the index key data from primary key tuple and value tuple data.\n\nParameters:primaryKeyInput - is the TupleInput for the primary key data, or null if no primary key data is used to construct the index key.valueInput - is the TupleInput for the value data, or null if no value data is used to construct the index key.indexKeyOutput - is the destination index key tuple. For index keys which are optionally present, no tuple data should be output to indicate that the key is not present or null. IOException\n\nclearIndexKey\n\npublic abstract void clearIndexKey(TupleInput valueInput, TupleOutput valueOutput) throws IOException\n\nClears the index key in the tuple value data. The valueInput should be read and then written to the valueOutput, clearing the index key in the\n\nParameters:valueInput - is the TupleInput for the value data.valueOutput - is the destination TupleOutput. IOException\n\nBerkeley DB\n\nversion 4.2.52"
    }
}