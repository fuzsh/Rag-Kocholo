{
    "id": "wrong_mix_random_starring_00113_3",
    "rank": 72,
    "data": {
        "url": "http://uw714doc.sco.com/en/db/java/com/sleepycat/db/JoinConfig.html",
        "read_more_link": "",
        "language": "en",
        "title": "JoinConfig (Sleepycat Software, Inc.",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://uw714doc.sco.com/en/db/java/resources/inherit.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "com.sleepycat.db.JoinConfig class"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Specifies whether automatic sorting of the input cursors is disabled.\n\nJoined values are retrieved by doing a sequential iteration over the first cursor in the cursor array, and a nested iteration over each following cursor in the order they are specified in the array. This requires database traversals to search for the current datum in all the cursors after the first. For this reason, the best join performance normally results from sorting the cursors from the one that refers to the least number of data items to the one that refers to the most. Unless this method is called with true, Database.join does this sort on behalf of its caller.\n\nIf the data are structured so that cursors with many data items also share many common elements, higher performance will result from listing those cursors before cursors with fewer data items; that is, a sort order other than the default. Calling this method permits applications to perform join optimization prior to calling Database.join."
    }
}