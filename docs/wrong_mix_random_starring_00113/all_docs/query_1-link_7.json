{
    "id": "wrong_mix_random_starring_00113_1",
    "rank": 7,
    "data": {
        "url": "https://www.ucalgary.ca/utils/htdig/src/htdig-3.1.6/db/docs/build/java.html",
        "read_more_link": "",
        "language": "en",
        "title": "Berkeley DB: Configuring and Building the Java API",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Java Compatibility\n\nJava Installation\n\nBuilding Java\n\nBuilding a shared library version of Berkeley DB\n\nBuilding libdb_java\n\nGeneral Usage Notes\n\nJava Compatibility\n\nJava DB has been tested with the Sun Microsystems JDK 1.1 on Windows/NT and SunOS 5.5, and it should work with any JDK 1.1 compatible environment. The most important thing to understand is whether the target Java environment supports the JNI (Java Native Interface) which we use, rather than some other way for DLLs to interface to java. The JNI is new to JDK 1.1, but more likely to be implementable across many platforms.\n\nJava Installation\n\nWe expect that you've already installed the Java JDK or equivalent on your system. Since you are reading this, you also already have a copy of the Berkeley DB package. For the sake of discussion, we'll assume it's in a directory called db-VERSION, e.g., you extracted Berkeley DB version 2.3.12 and you did not change the top-level directory name. The files related to Java are in two subdirectories of db-VERSION: java, the java source files, and libdb_java, the C++ files that provide the \"glue\" between java and Berkeley DB. The directory tree looks like this:\n\ndb-VERSION / \\ java libdb_java | | src ... | com | sleepycat / \\ db examples | | ... ...\n\nThis naming conforms to the emerging standard for naming java packages. When the java code is built, it is placed into a classes subdirectory that is parallel to the src subdirectory.\n\nBuilding Java\n\nBoth db-VERSION/java and db-VERSION/libdb_java have Makefiles:\n\nMakefile.win32 Makefile.unix\n\nThe java directory can be built using your make command and the appropriate Makefile. If you've never built java code before, there are two things you will need to do before issuing the make command.\n\nFirst, make sure the java compiler (usually javac) is in your path. If you installed the sun JDK distribution in /usr/java , then the java tools are in the directory /usr/java/bin.\n\nMake sure your classpath is set correctly. Set your environment variable CLASSPATH to contain at least the standard class library (perhaps in /usr/java/lib/classes.zip) and add the Berkeley DB classes in as well. Using the UNIX csh, this might be:\n\nsetenv CLASSPATH \"/usr/java/lib/classes.zip:/db-VERSION/java/classes\"\n\nOn Windows/95, your autoexec.bat would need to have something like:\n\nset CLASSPATH=\"c:/java/lib/classes.zip;c:/db-VERSION/java/classes\"\n\nNote the use of semicolons on Windows. On Windows/NT, you'll set this variable in the control panel.\n\nNow you can run make to build the java directory, e.g.:\n\ncd db-VERSION/java make -f Makefile.unix\n\nBuilding a shared library version of Berkeley DB\n\nSee Building a Shared Library Version of Berkeley DB for more information.\n\nYou MUST build Berkeley DB as a shared library before you proceed beyond this step.\n\nBuilding libdb_java\n\nBefore building libdb_java, make sure you have a shared library version of Berkeley DB (see above).\n\nOn UNIX:\n\nNB: The libdb_java/Makefile.unix Makefile is written to expect that the system compiler is named \"gcc\" and is the GNU C compiler. In addition, it uses compiler-specific options when building. If you are using a different compiler than gcc, you'll need to modify Makefile.unix to work with it.\n\nFirst, edit the line at the beginning of libdb_java/Makefile.unix:\n\nJAVAINSDIR= /usr/java1.1/\n\nChange JAVAINSDIR to be the top level directory of your java JDK tree. This is the level above the bin and include directories. Then issue a make command in the libdb_java directory:\n\n% cd db-VERSION/libdb_java % make -f Makefile.unix\n\nOn Win/:\n\nIssue the nmake command in the libdb_java directory:\n\nC:\\db_distribution\\libdb_java> nmake /f Makefile.win32\n\nGeneral Usage Notes\n\nFor your application to use Db successfully, you must set your CLASSPATH environment variable to include db-VERSION/java/classes as well as the classes in your java distribution. See the section above on \"BUILDING JAVA\" for further information.\n\nOn Windows, you will want to set your PATH variable to include:\n\ndb-VERSION/libdb_java;db-VERSION/build_win32/debug\n\nOn UNIX, you will want to set LD_LIBRARY_PATH to include:\n\ndb-VERSION/libdb_java;db-VERSION/build_unix\n\nThese are the locations of your shared libraries. If you get a:\n\njava.lang.UnsatisfiedLinkError\n\nexception when you run, chances are you do not have the PATH set up correctly.\n\nOr, of course, you may copy the built dynamic libraries (libdb and java_db) to a directory already in your path.\n\nTo ensure that everything is running correctly, you may want to try a simple test from the example programs in:\n\ndb-VERSION/java/src/com/sleepycat/examples\n\n(which should have been built in the \"BUILDING JAVA\" section above):\n\n% java com.sleepycat.examples.AccessExample\n\nThis example program will prompt for text input lines which are then stored with their reversed text in a simple Btree named \"db.access\" in your current directly. Try giving it two lines of text and then end-of-file. Before it exits, you should see the reversed text. If you run it again, lines will be there from your previous run. This is an excellent check to make sure the fundamental things are working right.\n\nNOTE: when you run some of the other examples on Solaris, you may get an \"rmutex\" libc error message. This is a known bug in Solaris 2.5, and it is fixed by Sun patch 103187-25. See the Sleepycat Software Release FAQ web page (www.sleepycat.com) for further information on this problem."
    }
}