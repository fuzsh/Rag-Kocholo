{
    "id": "dbpedia_4771_0",
    "rank": 52,
    "data": {
        "url": "https://www.scriptol.com/programming/chronology.php",
        "read_more_link": "",
        "language": "en",
        "title": "The list of programming languages by dates",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.scriptol.com/scriptol.png",
            "https://www.scriptol.com/images/dict.png"
        ],
        "movies": [
            "https://www.facebook.com/plugins/like.php?href=https%3A%2F%2Fwww.scriptol.com%2Fprogramming%2Fchronology.php&send=false&layout=button_count&width=54&show_faces=true&action=like&colorscheme=light&font&height=21"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Unless it is specified, the date is for the first working implementation.\n\nMore details about the languages in the History of language. Any comment is welcomed.\n\n1948\n\nPlankalkül. First high-level language. The date is that of the first public description.\n\n1949\n\nShort Code.\n\n1951\n\nA-0 (starting work for Math-Matic).\n\n1952\n\nAutocode.\n\n1955\n\nFLOW-MATIC. By Grace Hopper, first language with words.\n\n1956\n\nIPL.\n\n1957\n\nFortran.\n\nMath-Matic.\n\n1958\n\nFortran II.\n\nLisp, work begins by John Mc Carthy at MIT..\n\nALGOL 58 also called IAL (International Algorithmic Language). Original specification by a comitee of European and American computer scientists.\n\nIAL.\n\nUNCOL. First intermediate language for a virtual machine.\n\n1959\n\nLisp 1.5.\n\nCOBOL, work begins.\n\n1960\n\nALGOL 60. Revision of ALGOL 58, and first implementation.\n\nAPL, work begins.\n\nCOBOL defined.\n\nFirst JIT functions used for Lisp.\n\n1962\n\nAPL implemented.\n\nFortran IV appears.\n\nSNOBOL, work begins.\n\nSimula.\n\n1963\n\nALGOL 60 is revised.\n\nCPL. Universities of Cambridge and of London. Extended version of Algol 60. Predecessor of BCPL.\n\nPL/1, work begins.\n\nJoss.\n\n1964\n\nApl-360 is implemented.\n\nBasic.\n\nPL/1.\n\nCOWSEL. Renamed POP-1 in 1966, sort of Lisp without parenthesis.\n\nMATHLAB. Became popular since MATHLAB 68.\n\n1965\n\nSnobol 3.\n\n1966\n\nBcpl .\n\nFortran 66.\n\nLisp 2.\n\nLogo, work begins.\n\nISWIM.\n\n1967\n\nSnobol 4.\n\nSimula 67. First language with objets. They interact by calling methods of other object, a design taken by C++ and many other language. First also to implement coroutines.\n\nMumps.\n\n1968\n\nALGOL 68.\n\nAltran (a fortran variant).\n\nCOBOL officially defined by ANSI.\n\nPascal - work begins.\n\nLogo implemented.\n\nRefal. Goal-oriented pattern-matching, simpler than Prolog (1970).\n\nQED: The scripting language of the editor uses regular expressions and one of first JIT interpreters, designed by Ken Thompson.\n\n1969\n\nPL/I Implementation.\n\nB. Précurseur de C et C++.\n\nPlanner.\n\n1970\n\nProlog - work begins.\n\nSmalltalk - work begins. Fully object oriented, they communicate by sending messages, a design taken by Objective-C.\n\nPascal.\n\nMUMPS designed.\n\nPOP-2. Seems to be the first functional language, applying lambda calculus.\n\n1971\n\nPL-11.\n\n1972\n\nDescription of Plankalkül published.\n\nC.\n\nProlog implemented.\n\nIntercal.\n\nSASL. Purely functional, based on ISWIM.\n\n1973\n\nComal.\n\nForth. First stack-based language, a principle applied to the Java virtual machine.\n\nML. Influenced most functional languages including Haskell, Erlang and OCaml.\n\nGolux. Hayes described a procedural and logic language but did not implement it.\n\n1974\n\nCOBOL, second ANSI specification.\n\n1975\n\nTiny Basic, runs on a microcomputer.\n\nBasic, from Bill Gates and Paul Allen implemented on Altair, an 8080-based microcomputer by Mits.\n\nScheme. Sort of Lisp.\n\nMATLAB.\n\nCLU. Invented iterator and generator with the yield keyword.\n\n1976\n\nDSL, Design System Language, ancestor of PostScript.\n\n1977\n\nAWK. For text processing.\n\nForth.\n\nMumps - ANSI standard. Later renamed M.\n\nAda, work begins.\n\nFIG-Forth, implementation of Forth.\n\nUCSD Pascal, on PDP-11 and Z80-based computers.\n\nModula, work begins.\n\nIDL.\n\nBourne Shell.\n\nIcon. Goal-oriented.\n\n1978\n\nFortran 77 ansi standard defined.\n\n1979\n\nRexx.\n\nIcon implemented.\n\n1980\n\nSmalltalk-80.\n\nModula-2.\n\nC++.\n\n1981\n\nCommon LISP work begins.\n\nFifth Generation Computer System project based upon Prolog in Japan.\n\n1982\n\nISO Pascal.\n\nObjective C.\n\n1983\n\nAda implemented.\n\nC compilers for microcomputers by Microsoft and also Digital.\n\nC++ implemented.\n\nTurbo Pascal (advertised in Byte, great success).\n\n1984\n\nApl 2.\n\nClipper.\n\n1985\n\nForth used to control a submersible that locates the wreck of the Titanic.\n\nOberon started.\n\nSnobol 4 for microcomputers.\n\nPostscript delivered on a printer.\n\nAMPL. For modeling.\n\nCaml.\n\nMiranda. Functional, strongly inspired Haskell.\n\n1986\n\nSmalltalk/V for microcomputers.\n\nTurbo Prolog.\n\nActor.\n\nEiffel.\n\nErlang by Joe Armstrong.\n\nC++ achieved.\n\n1987\n\nHypertalk.\n\nPerl.\n\nSQL 87.\n\n1988\n\nOberon implemented.\n\nTcl.\n\n1989\n\nANSI C specification published.\n\nC++ 2.0 defined with multiple inheritance.\n\nModula 3.\n\nMiranda.\n\n1990\n\nC++ 2.1 , defined with templates and exception-handling.\n\nFortran 90 adds case statements and derived types.\n\nJ language.\n\nHaskell.\n\n1991\n\nPython.\n\nVisual Basic.\n\n1992\n\nDylan.\n\nDisco.\n\n1993\n\nAppleScript.\n\nSelf. Inspired by Smalltalk, uses a JIT interpreter before Java was invented.\n\nLua.\n\n1994\n\nJava. Preliminary version.\n\n1995\n\nJava, first public release with the HotJava browser on May 23.\n\nAda 95 - ISO revision includes OOP added support for real-time systems.\n\nJavaScript.\n\nPHP.\n\nDelphi, version of Pascal.\n\nRuby.\n\nMercury.\n\n1996\n\nNetRexx.\n\nOCalm.\n\n1997\n\nECMAScript (Standard for JavaScript).\n\nRebol .\n\n1998\n\nErlang open source.\n\n1999\n\nStandard C99.\n\nStandard ECMAScript 1.5.\n\nMoto.\n\n2000\n\nC Scharp (C#).\n\nD. A version of C++ with dynamic arrays and garbage collector.\n\n2001\n\nAspect J.\n\nScriptol.\n\nSuperX++.\n\n2003\n\nFactor.\n\n2004\n\nPHP 5.\n\nScala.\n\nBoo, derived from Python.\n\nActionScript.\n\n2005\n\nScriptol Interpreter.\n\nJavaFX Script.\n\nF#.\n\n2006\n\nObjective Modula 2.\n\nRust. System language as C.\n\nCyclone.\n\nHaxe.\n\n2007\n\nClojure.\n\nNu.\n\nScratch (MIT).\n\n2008\n\nEGL (IBM). Compiled into other high level languages. Evolution of a tool created in 1981.\n\nObjective J.\n\n2009\n\nAgena.\n\nCrack. Scripting language by Google, with a C++ syntax.\n\nGo. System and server language by Google, replaces both C, C++ or Python.\n\nNoop.\n\nCoffeeScript.\n\n2010\n\nAni. All statements run concurrently in this language.\n\nFabric.\n\nGosu.\n\nJulia. Mathematical language compatible with C throught LLVM. Open sourced in 2012.\n\nNim. Python-like compiled.\n\n2011\n\nDart. A JavaScript replacement by Google.\n\nDRAKON. Graphical language of specifications but with a universal use.\n\nXtend. A successor to Java by the Eclipse Foundation.\n\nC++11. New version of C++.\n\nPure. Functional language.\n\nDeca. System programming.\n\nClay. Generic programming.\n\nRed. Rebol-like.\n\nRust. Concurrent system language, alternative to C, by Mozilla. First compiler in 2012, used by the Servo rendering engine.\n\nXtend. A Java pre-compiler by the Eclipse Foundation.\n\nSquirrel. Object oriented scripting language.\n\n2012\n\nBlocky. Visual language by Google.\n\nHalide. Graphic language by the MIT.\n\nTypeScript. By Microsoft, alternative to Dart but compiled into JavaScript.\n\nCeylon. By Red Hat. Similar to Dart or TypeScript but compiles into Java bytecode.\n\nElixir. A clean version of Erlang.\n\nLLJS. Low Level JavaScript is intermediate between C and JavaScript and compiles in JavaScript.\n\nKotlin. By JetBrain, for the JVM.\n\nQuorum. OOL with a clean syntax for the JVM.\n\nElm. Functional and reactive. JS frontend.\n\n2013\n\nAsm.js. Not a language in itself, but a subset of JavaScript with an AOT compiler. This is especially a new way to make applications.\n\nBODOL. Functional, Lisp-like language.\n\nWolfram. Interface to Mathematica, for knowledge processing and symbolic computation.\n\n2014\n\nDotty. By one of authors of Scala, and derived from Scala.\n\nHack. By Facebook, a version of PHP statically typed.\n\nJeeves. By Jean Yang. A language adapted to protect user privacy. Implemented like extensions to Scala and Python.\n\nSwift. By Apple to remplace Objective-C on MacOS or iOS.\n\nWyvern by Carnegie Mellon University, for high-assurance apps.\n\nAvail. Amost natural language.\n\nLoci. C++ less the complexity, compatibility through the LLVM code.\n\n2015\n\nCrystal. Compiled language with the syntax of Ruby.\n\n2016\n\nSimit. MIT, created to replace Matlab, syntax of Julia but compile to C++.\n\nZig. A parody language from Mozilla which imitates Rust.\n\n2017\n\nWebAssembly. W3C, intermediate language running in the browser.\n\nHobbes. Morgan Stanley Bank. To be used standalone of as a pattern-matching extension to C++.\n\n2019\n\nBosque. By Microsoft. Another C-like designed to be simple while introducing new designs in programming.\n\nToit. Language close to Python but faster, for the IoT (Internet of Things), and more specifically the ESP32 microcontroller. From the developers of V8 and Dart.\n\nJanet. Lisp-like.\n\n2022\n\nMarkovJunior. A program is a combinations of rewrite rules and inferences, which are performed via constraint propagation.\n\nFor the alphabetical order, see the complete list."
    }
}