{
    "id": "dbpedia_4771_0",
    "rank": 62,
    "data": {
        "url": "https://www.computer.org/publications/tech-news/insider-membership-news/timeline-of-programming-languages/",
        "read_more_link": "",
        "language": "en",
        "title": "Coding From 1849 to 2022: a Guide to The Timeline of Programming Languages",
        "top_image": "https://ieeecs-media.computer.org/wp-media/2022/06/08164630/Programing-Languages-Timeline.jpg",
        "meta_img": "https://ieeecs-media.computer.org/wp-media/2022/06/08164630/Programing-Languages-Timeline.jpg",
        "images": [
            "https://ieeecs-media.computer.org/wp-media/2022/05/03192605/ieee-logo.png",
            "https://ieeecs-media.computer.org/wp-media/2018/04/02183615/IEEE-CS_LogoTM-orange.png",
            "https://ieeecs-media.computer.org/wp-media/2021/12/16190445/IEEE-CS_LogoTM-orange-177x54.png",
            "https://ieeecs-media.computer.org/wp-media/2021/12/16190445/IEEE-CS_LogoTM-orange-128x39.png",
            "https://ieeecs-media.computer.org/wp-media/2022/06/08164630/Programing-Languages-Timeline.jpg",
            "https://ieeecs-media.computer.org/wp-media/2022/06/08175353/Timeline-of-Programming-Languages-2-200x300.png",
            "https://ieeecs-media.computer.org/wp-media/2022/06/08175442/Timeline-of-Programming-Languages-3-300x171.png",
            "https://ieeecs-media.computer.org/wp-media/2022/06/08175551/Timeline-of-Programming-Languages-4-300x196.png",
            "https://ieeecs-media.computer.org/wp-media/2022/06/08175618/Timeline-of-Programming-Languages-5-300x141.png",
            "https://ieeecs-media.computer.org/wp-media/2022/06/08175841/severine-hierso-1-150x150.jpg",
            "https://www.computer.org/wp-content/uploads/2024/08/240_F_210211160_Q9SzGgbT68Lq6WgjIbNW6KrCDmzrb3xs.jpg",
            "https://www.computer.org/wp-content/uploads/2024/08/infrastructure.jpeg",
            "https://www.computer.org/wp-content/uploads/2024/08/Redshift.jpeg",
            "https://www.computer.org/wp-content/uploads/2024/08/UCR.jpeg",
            "https://ieeecs-media.computer.org/wp-media/2019/07/03175412/vote250x250.jpg",
            "https://ieeecs-media.computer.org/wp-media/2024/08/30164441/Indigenous-Knowledge.jpeg",
            "https://ieeecs-media.computer.org/wp-media/2024/08/30164458/navigating-ai-career.jpeg",
            "https://ieeecs-media.computer.org/wp-media/2024/07/08155311/Driving-Female-STEM-Engagement.jpg",
            "https://ieeecs-media.computer.org/wp-media/2022/04/28195553/IEEE-CS_Logo-177x61-2x-orange-white.png",
            "https://ieeecs-media.computer.org/wp-media/2024/06/20073247/Icon_Facebook.png",
            "https://ieeecs-media.computer.org/wp-media/2024/06/20073300/Icon_Twitter.png",
            "https://ieeecs-media.computer.org/wp-media/2024/06/20073254/Icon_LinkedIn.png",
            "https://ieeecs-media.computer.org/wp-media/2024/06/20073249/Icon_Instagram.png",
            "https://ieeecs-media.computer.org/wp-media/2024/06/20073245/Icon_YouTube.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Joshua Roller"
        ],
        "publish_date": "2022-06-10T13:00:12+00:00",
        "summary": "",
        "meta_description": "Dive into the computing realm of past and modern programming languages and the great minds who created them.",
        "meta_lang": "en",
        "meta_favicon": "https://ieeecs-media.computer.org/wp-media/2018/04/27230619/cropped-cs-favicon-512x512-32x32.png",
        "meta_site_name": "IEEE Computer Society",
        "canonical_link": "https://www.computer.org/publications/tech-news/insider-membership-news/timeline-of-programming-languages/",
        "text": "Coding and programming languages are the building blocks of our modern digital world. But although the most significant developments in this field have happened within living memory, the history of coding and the timeline of programming languages is longer than you might think.\n\nIt starts with surprising and remarkable people, long before the birth of other types of commonplace technology like cars and telephones. It even predates modern medical treatments we take for granted, such as insulin and antibiotics. In fact, coding dates back to the 1840s.\n\nLet’s take a closer look at the history of coding and the timeline of programming languages.\n\nWant More Tech News? Subscribe to ComputingEdge Newsletter Today!\n\nOrigins\n\n1843 Ada Lovelace\n\nAda Lovelace was a British aristocrat; unusually for a woman of her time, she was educated in mathematics and science. However, her contribution to the development of coding and computer languages is not that she invented a device that was the breakthrough of Charles Babbage in the 1820s with his Difference Machine. Instead, Lovelace created the very first machine algorithm in 1843.\n\nShe realized that Babbage’s machine could do more than just calculate; it could be used as a general-purpose machine. Lovelace made the leap that numbers could represent other things, and the idea of programming languages was born. Lovelace’s groundbreaking work was the first step in being able to design a language capable of giving computers instructions.\n\nThe 20th Century\n\n1936 Alan Turing\n\nToday, Alan Turing is famous for his work on cracking Nazi Germany’s Enigma code machine in 1939. But in 1936, Turing published a paper regarded as the founding piece on computer science. Turing came up with the concept of a universal machine. A machine that could follow instructions. He eventually turned this groundbreaking idea into a plan for a computer powered by electricity that could run programs.\n\n1940s Konrad Zuse\n\nKonrad Zuse created what is considered the first programming language for computers in the early 1940s. It was called Plankalkul, and it could store codes, enabling engineers to carry out routine, repetitive tasks far more efficiently and quickly.\n\n1949 Assembly Language and Shortcode\n\nThe next big development was Assembly language, a computer programming language that simplified the instructions to make a computer function. Also, in 1949 came Shortcode, used by\n\nWilliam Schmitt with the BINAC and UNIVAC computers.\n\n1952 Autocode\n\nIn 1952 Autocode was developed for the Mark 1 computer at the University of Manchester. It was the first language that could be translated into machine code.\n\n1957 Fortran\n\nJohn Backus created FORmula TRANslation or FORTRAN back in 1957. Incredibly, this programming language from the 1950s is still used today in supercomputers and scientific and mathematical computations.\n\n1958 ALGOL and LISP\n\nAn algorithmic language created by American and European scientists, ALGOL became the point of origin for world-renowned programming languages such as Pascal, Java, C, and C++.\n\nIn the same year, John McCarthy invented the List processor or LISP. Intended for AI, companies like Boeing and Genworks are still using it.\n\n1959 COBOL\n\nCOBOL was developed by a team led by Dr. Grace Murray Hopper; COBOL stands for Common Business Oriented Language. It was designed for credit card transaction processors, traffic signals, and phone calls, and today is used in banking and gaming. Today’s virtual PBX system and other modern solutions to communication rest on the shoulders of programming languages like COBOL.\n\n1964 BASIC\n\nStudents developed BASIC at Dartmouth College. It stands for Beginners All-Purpose Symbolic Instruction Code. BASIC was then further developed and marketed as a product by Bill Gates.\n\n1970 PASCAL\n\nNiklaus Wirth developed this programming language and named it after Blaise Pascal, the French mathematician. So easy to learn, it was used by Apple early on in its history.\n\n1972 Smalltalk, C, and SQL\n\nAlan Kay, Adele Goldberg, and Dan Ingalls developed Smalltalk at the Xerox Palo Alto Research Centre. It was designed to modify code. Its principles are present in today’s Java, Python, and Ruby and are used by companies like CrowdStrike and Logitech.\n\nC was also developed in 1972 by Dennis Ritchie at the Bell Telephone Laboratories. It was designed to be used with the Unix operating system. Based on its forerunner B, languages like C#, Java, JavaScript, Perl, PHP, and Python are all derived from C.\n\nIn what could be called a vintage year for coding and programming languages, Raymond Boyce and Donald Chamberlain developed SQL (Structured Query Language) the same year. It was first called SEQUEL, and it was used for viewing and altering information in databases.\n\nThese three languages represent a significant leap forward in programming, which has impacted some of the largest tech companies in existence today. Our whole way of using the digital world, from social media to how a business’s lead referral program functions, owes a debt to these developments.\n\n1980s ADA\n\nNamed after Ada Lovelace, the computing pioneer, ADA was designed by Jean Ichbiah’s team at CUU Honeywell Bull. Ada is a high-level programming language, extended from other popular programming languages such as Pascal. ADA is used for air-traffic control in various European countries and space programs.\n\n1983 C++, Objective C\n\nBjarne Stroustrup modified the C language at Bell Labs. The result was C++, which had some augmentations such as classes, templates, and virtual functions. C++ is now used in MS Office, Adobe Photoshop, and various types of high-performance software.\n\nBrad Cox and Tom Love then developed Objective-C, the programming language used for Apple’s operating systems.\n\n1987 Perl\n\nLarry Wall developed PERL as a general-purpose, high-level language. He designed it for text editing, but today its primary use is in database applications, data processing, graphic programming, and system administration.\n\n1990 Haskell\n\nNamed after the American mathematician Haskell Brooks Curry. Haskell is a primarily mathematical programming language. Used in various industries that need to make complicated calculations, crunch numbers, and keep records.\n\n1991 Python and Visual Basic\n\nThe iconic British comedy act Monty Python inspired Python’s name. Guido Van Rossum developed this general-purpose, high-level language. Today Python is one of the most popular programming languages worldwide. Giants like Google and Spotify use it.\n\nVisual Basic allows a user to drag and drop sections of code via a user interface (GUI). Parts of Visual Basic are used in applications like Word and Excel.\n\n1993 Ruby\n\nYukihiro Matsumoto created Ruby as a high-level programming language. Used for web applications development, today it’s used by Groupon.\n\n1995 Java, JavaScript, PHP\n\nCreated by James Gosling in 1995, Java is one of the world’s most famous and popular programming languages. It’s a general-purpose, high-level language used in cell phones and parking machines.\n\nJavaScript was created by Brendan Eich. Used for web development, PDF documents, and desktop widgets, it’s on almost every major website. Some famous examples are Adobe, Gmail, and Mozilla Firefox.\n\nPHP was known as ‘Personal Home Page’ but now stands for ‘Hypertext Preprocessor.’ It was developed by Rasmus Lerdorf. It’s used for building and maintaining web pages and server-side development. Huge companies like Facebook, Wikipedia, and WordPress use PHP.\n\nThe 21st Century\n\n2000 C#\n\nMicrosoft developed C# in an attempt to combine elements of Visual Basic and C. It’s now used in all the company’s products.\n\n2003 Scala and Groovy\n\nIn 2003 Martin Odersky created Scala. Its ability to work with Java gives it an advantage over Android development. Scala is used by social media and entertainment giants like Twitter, Linkedin, Twitter, and Netflix.\n\nGroovy is an easy-to-learn language developed by James Strachan and Bob McWhirter. Starbucks, Craftbase, and Transferwise all use Groovy.\n\n2009 Go (Google)\n\nLarge software systems face various challenges, and Google developed Go to resolve them.\n\nGo is popular with big tech companies, such as Uber, Dropbox, and of course, Google. If you need to find out what is vishing? In part, you can thank Go for finding the answer.\n\n2014 Swift\n\nApple developed Swift to replace C, C++, and Objective-C. The idea was that Swift would be easier and more versatile than these languages. Swift can be used for cloud applications, mobile, and desktop. Language platform Duolingo used it recently to launch a new app. Making apps that customers love using isn’t easy; these days, many companies use a mobile app flowchart.\n\nImage Source\n\nToday and Tomorrow\n\nSince the early days of 19th-century pioneers and 20th-century groundbreakers, the world of computing has expanded into cloud computing, a dizzying array of apps, new technology, and devices.\n\nSome programming languages like COBOL and Fortran are still used today, while others have been through various incarnations or fallen out of use.\n\nCoding and computer languages will continue to develop and evolve, but just as Ada Lovelace probably couldn’t have imagined precisely what her ideas would mean for the centuries to come, who can say exactly what the next 180 years will hold.\n\nAbout the Writer\n\nSeverine Hierso is EMEA Senior Product Marketing Manager for RingCentral Office, the leader in cloud communications solutions such as an international phone number, and is passionate about creating value, differentiation, and messaging, ensuring a better experience for customers and partners."
    }
}