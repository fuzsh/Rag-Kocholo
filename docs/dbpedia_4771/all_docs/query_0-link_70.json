{
    "id": "dbpedia_4771_0",
    "rank": 70,
    "data": {
        "url": "http://dinocajic.blogspot.com/2017/02/programming-language-concepts-test.html",
        "read_more_link": "",
        "language": "en",
        "title": "Programming Language Concepts Test Questions",
        "top_image": "http://dinocajic.blogspot.com/favicon.ico",
        "meta_img": "http://dinocajic.blogspot.com/favicon.ico",
        "images": [
            "http://www.blogger.com/img/blogger_logo_round_35.png",
            "http://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgN8wGpALmDwXvCDvwBlgXgTDCDnggmqlhLgJDWC7_6IXeCASK7oXkZ7mVVUkrD41QJmqOzIBNetgpAIuc1O7h6Pm2BxDLJeQ-VUQKLgTDalq4vZHqMC733dTumunsxVg/s45-c/c9184c706194ea7a9d2ed37b2f527c51.jpg",
            "http://www.blogger.com/img/blogger_logo_round_35.png",
            "http://www.blogger.com/img/blogger_logo_round_35.png",
            "http://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj1nVAP-QtfxcO0vyERMjRBobn4G7TzH2WgfJLm14ilvhlfj_ql2BdRJQo3FPFp5IBBcsm5Ch0MyzKMRlsrRa3fBwN1vkhbgRMDVctf9soPlyGo_sUnQtiVpomnyw_lmbc/s45-c/LBM+Logo+%282%29+%281%29.jpg",
            "http://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi0h8VWUTpTLWKKOQ4hF6P61WOSz5Oh_jSlnhPTiDjplMhZwL4n9oEdhCfYTPBTRtPhKgkk_ZBCKE7qxIwLwCPOSgHVKjTMFuj08EMfp88LAucuYWZzZkqEI0LVwuM-IkI/s45-c/84ff7b7d7d6f97c8532a38bae01780a1.jpg",
            "http://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiTP_pXgaygt2X51y2TAS1XqJXis7iDz65_AsL-dVRoiW9URN1QIb83V1aFn_GA2b25UIqPghlXBhenaV9R_PLhOnfQSFCcadVIjLkTZ6C1L85ukR3HaNUaREdRf1AnzUw/s45-c/Call+high+Mark+logo.png",
            "http://www.blogger.com/img/blogger_logo_round_35.png",
            "http://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjrmrz6AOvYVnPB6gIhRoNtXKEhHrTCPoqmMeCpONw32XVatt2hvUjGvYGpAUKDc8PSi6GBoe49GOOXQx90AO86V-HhCXIldb1FYBuryTHQtn6ehhlGKFdfbozI6L0FEyY/s45-c/Bright+Career+Solutions.jpg",
            "http://www.blogger.com/img/blogger_logo_round_35.png",
            "https://lh3.googleusercontent.com/blogger_img_proxy/AEn0k_sNmFNFsSa2ipuoFFmZlfaW0YKc8yX5ng16PS5wzFu22GbaeW2rpqkvq8eW4ltBAtNA8Zit4EJSsnUL3ss1kUmzlEEgNvN9FO6Ktrz0gbZM7WPdXNSej7AmzVf0oeAw75J5iOT3RwSGMzqtsRHigHSS7WBgw95jXuO3OjoUTstdWhHrLMKT1DUNnyBs9wtFmJi-xdIWu1pz6MhPtzx4hIWC3VKlOyFjTlREioQhGuA2wTpLt8MbLrBoYoh-oDJS2js0NfPXKAO4yVCB2jLHILcAtFZ1eO8dbvV39mCTzPHII1Gfaenau9umRi-_wku5c0WYyhheo47R1ccdnQdNfPNh78ndURm0Gq8_xdQ5qzXMXXVRgXNBvBpB0aJvTZ9Q"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Visit profile"
        ],
        "publish_date": "2017-02-22T16:04:00-08:00",
        "summary": "",
        "meta_description": "One of the easiest methods that I use to learn new topics is by creating notes on the subject and then by turning those notes into questions...",
        "meta_lang": "",
        "meta_favicon": "http://dinocajic.blogspot.com/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "http://dinocajic.blogspot.com/2017/02/programming-language-concepts-test.html",
        "text": "Programming Language Concepts Test Questions/Answers\n\nOne of the easiest methods that I use to learn new topics is by creating notes on the subject and then by turning those notes into questions and answers. Remembering answers to questions just seems more natural. I was able to memorize 323 questions and answers in a matter of a couple of days. I wanted to start doing this for some topics that I find pretty interesting. To begin, here are some questions and answers to Programming Language Concepts (PLC). I'm reading your mind right now and the answer is yes, there will be more.\n\n1. Name 3 reasons for studying PLC.\n\n- Better understanding of current programming languages\n\n- Advancement of computing\n\n- Increased capability to express ideas\n\n- Increased capability to learn new programming language.\n\n- Better understanding of which programming language to choose.\n\n2. Name the 5 programming domains and languages best suited for each.\n\n- Scientific (Fortran, ALGOL 60)\n\n- Business (COBOL)\n\n- AI (Lisp, Scheme, Prolog)\n\n- Web (PHP, Java, JavaScript)\n\n- Gaming (C, C++)\n\n3. What are the 4 criteria for evaluating programming languages?\n\n- Readability\n\n- Writability\n\n- Reliability\n\n- Cost\n\n4. In Reliability, what is meant by overall simplicity?\n\n- A simple language has a relatively small number of basic constructs\n\n5. What is feature multiplicity?\n\n- Having more than one way to accomplish the same task. i.e. count++ or count = count + 1\n\n6. Define orthogonality.\n\n- Small set of primitive constructs can be combined to build the language’s data and control structures.\n\n7. What’s orthogonality closely related to?\n\n- Simplicity\n\n8. True or False? Too much simplicity can be a problem.\n\n- True\n\n9. True or False? Too much orthogonality can cause problems?\n\n- True\n\n10. Give an example of data type problem.\n\n- C89 didn’t have boolean type so x = 1 is ambiguous and can mean either x = integer 1 or x = true\n\n11. Fill in the word Semantics (________) should follow directly from __________ (form)\n\n- meaning\n\n- Syntax\n\n12. Why is simplicity and orthogonality a problem in writability?\n\n- A large number of features can lead to misuse of some features and disuse of superior features\n\n13. When does orthogonality help writability?\n\n- When the features are not overly orthogonal\n\n14. When is a language expressive?\n\n- A language is expressive if it has features that make it easier to perform common tasks.\n\n15. Reliability…what is type checking?\n\n- Checks type errors either during compilation or run-time\n\n16. When is type checking preferred?\n\n- During compilation since run-time checking is expensive\n\n17. What is exception handling?\n\n- Interception of errors during run-time and taking care of those errors.\n\n18. What is aliasing?\n\n- Having two or more names assigned to same memory location.\n\n19. How does readability and writability influence reliability?\n\n- If a language is hard to read, it’s hard to debug. If it’s written unnaturally, it’s more likely to contain bugs.\n\n20. Name a few costs to consider when evaluating a programming language.\n\n- Cost of training programmers\n\n- Cost of compilation\n\n- Cost of execution\n\n- Cost of implementation\n\n21. What is optimization and why is considered a factor in cost?\n\n- Optimization is an attempt to save time or space. Optimization increases compilation time.\n\n22. What are the most important contributors to language cost?\n\n- Reliability, Maintenance and Program Development\n\n23. Name some other criteria for evaluating programming languages.\n\n- Generality\n\n- Portability\n\n- Well-Definedness.\n\n24. Most popular languages have been designed around what architecture?\n\n- Von Neumann architecture\n\n25. What is the name of languages that are based on the von Neumann architecture?\n\n- Imperative languages\n\n26. What are imperative languages based on?\n\n- Von Neumann architecture.\n\n27. What do the variable names represent in an imperative language?\n\n- Memory cells\n\n28. What do assignment statements represent in an imperative language?\n\n- The movement of data from memory to CPU and back again.\n\n29. Name the programming design methodologies.\n\n- Top-down design or Stepwise refinement\n\n- Data abstraction\n\n- Object-oriented design\n\n30. Which language helped popularize object-oriented programming?\n\n- Smalltalk\n\n31. Name the four categories that programming languages are put into.\n\n- Imperative, Functional, Logic and Object-Oriented\n\n32. Describe a functional programming language.\n\n- Ability to define and call functions.\n\n33. Describe a logic language.\n\n- Contains a set of facts and rules.\n\n34. Object-oriented languages are often extensions of _______ _______.\n\n- Imperative languages\n\n35. True or False? Markup languages are programming languages?\n\n- False\n\n36. Name some language trade offs\n\n- Reliability vs. Cost of execution\n\n- Writability vs. Readability\n\n- Writability vs. Reliability\n\n37. Name one implementation method for a programming language.\n\n- Compilation\n\n38. What is compilation?\n\n- Process where source code is translated to machine language by compiler\n\n39. What is an advantage of compilation?\n\n- Fast program execution\n\n40. What are the phases of a compiler?\n\n- Lexical analyzer, Syntax Analyzer, Intermediate Code Generator, Optimizer, Code generator\n\n41. What does the lexical analyzer do?\n\n- Discards comments and gathers characters into lexemes.\n\n42. What does the syntax analyzer do?\n\n- Checks for syntax errors and creates parse trees from lexemes.\n\n43. What does the intermediate code generator do?\n\n- Checks for semantic errors and translates the program into an intermediate language similar to assembly.\n\n44. What does an optimizer do?\n\n- Attempts to make program smaller and faster.\n\n45. What does the code generator do?\n\n- Translates intermediate code into machine language.\n\n46. True or false? All phases of a compiler use a symbol table.\n\n- True\n\n47. What is a purpose of a linker?\n\n- To combine code from different modules into a single program\n\n- To include code for calls of library routines\n\n- Include code for communication with OS\n\n48. What is the output of a linker?\n\n- An executable image\n\n49. What is pure interpretation?\n\n- Execution of a program by an interpreter without having source code being translated to lower form.\n\n50. What is an advantage for interpretation?\n\n- Good for debugging\n\n51. What are some disadvantages of interpretation?\n\n- Slow execution\n\n- Requires more space during execution\n\n52. Describe the hybrid implementation system.\n\n- Source code is generated into intermediate code and is sent to an interpreter.\n\n53. What type of intermediate code is produced by the Java Compiler?\n\n- Byte code\n\n54. What is Java’s interpreter called?\n\n- Java Virtual Machine (JVM)\n\n55. What type of compilation do Java interpreters perform?\n\n- Just-In-Time compilation\n\n56. What is Just-In-Time compilation?\n\n- The translation of byte code into machine code at execution\n\n57. Which programming languages rely on a preprocessor?\n\n- C and C++\n\n58. What does a preprocessor do?\n\n- Takes embedded commands from the source code and removes them prior to compilation.\n\n- For example, #include “myLib.h” is copied to source code\n\n59. What is a programming environment?\n\n- A collection of tools to develop software.\n\n60. What is an IDE?\n\n- Environment that provides a set of integrated tools to access through a UI.\n\n61. Who developed Plankalkul?\n\n- Konrad Zuse\n\n62. What was Plankalkul good for?\n\n- Good for expressing computations.\n\n63. What does Plankalkul mean?\n\n- Program Calculus\n\n64. True or False? Plankalkul was never implemented.\n\n- True\n\n65. What is the simplest data structure in Plankalkul?\n\n- Single bit\n\n66. What types can be derived from the single bit in Plankalkul?\n\n- Floating point and Integer\n\n67. Fill in the blank. In Plankalkul, floating-point used ______ ___________ notation and hidden bit\n\n- Twos-complement\n\n68. True or False? In Plankalkul, the if statement has an optional else statement.\n\n- False\n\n69. Does Plankalkul have a goto statement?\n\n- No\n\n70. Fill in the blank. Plankalkul has a for statement similar to the one in ________.\n\n- Pascal\n\n71. Did Plankalkul include assertions?\n\n- Yes\n\n72. What are assertions?\n\n- Mathematical expressions showing the current relationships between program variables.\n\n73. What are some problems of machine code?\n\n- Hard to read\n\n- Absolute addressing makes modification tedious.\n\n74. Name two Pseudocode languages.\n\n- Short Code and Speedcode\n\n75. Who developed Short Code?\n\n- John Mauchly\n\n76. True or False? Short code consisted of coded versions of mathematical expressions.\n\n- True\n\n77. How were variable’s named in Short Code?\n\n- With byte-pair codes.\n\n78. Was Short Code compiled or interpreted?\n\n- Interpreted\n\n79. What was another name for interpretation during the time of Short Code?\n\n- Automatic Programming\n\n80. Who developed Speedcode?\n\n- John Backus for IBM 701\n\n81. The 701 was extended into a virtual _____ _____ ________.\n\n- Three point calculator\n\n82. True or false? Speedcode was much more efficient than Machine Code?\n\n- True\n\n83. Who developed the UNIVAC compiling system?\n\n- Grace Hopper\n\n84. What were the names of the compiling systems that Grace Hopper developed?\n\n- A-0, A-1 and A-2\n\n85. What did the compiling systems do that Grace Hopper developed?\n\n- Expanded pseudocodes into machine code.\n\n86. Who developed Fortran?\n\n- John Backus for the IBM 704\n\n87. What was the primary goal of the Fortran compiler?\n\n- Speed of generated code\n\n88. True or false? The Fortran compiler was almost half as efficient as the what could be done by hand.\n\n- True\n\n89. Fill in the blank. ________ was the first widely accepted compiled high-level language\n\n- Fortran\n\n90. True or False. Fortran I had I/O formatting.\n\n- True\n\n91. How many characters could be in a variable name in Fortran I?\n\n- Up to 6\n\n92. True or False? Fortran I had user-defined subroutines.\n\n- True\n\n93. True or False? Fortran I had an if/else statement.\n\n- False, only an if statement\n\n94. How did programmers declare a variable as an integer in Fortrain I? How about Floating Point?\n\n- By having the name start with I, J, K, L, M or N, variables were implicitly integer. All others were floating point\n\n95. What feature was added in Fortran II?\n\n- Independent compilation of subroutines\n\n96. True or False? Fortran III was the most successful Fortran version.\n\n- False. Fortran was never widely distributed.\n\n97. What was the first standardized Fortran version? Which year?\n\n- Fortran IV in 1966.\n\n98. Which features did Fortran IV add?\n\n- Explicit type declaration of variables\n\n- Ability to pass subprograms as parameters to other subprograms\n\n- A logical IF construct\n\n99. When did Fortran receive an ELSE to its IF statement?\n\n- Fortran 77\n\n100. When did Fortran start supporting lower case letters?\n\n- Fortran 90\n\n101. Name other features implemented in Fortran 90.\n\n- Recursion\n\n- Dynamic arrays, pointers and multiple selection statement\n\n102. What did the Fortran 90 standardization include?\n\n- A list of features to be removed\n\n103. When did Fortran receive Object-Oriented capabilities?\n\n- Fortran 2003\n\n104. Name a feature added in Fortran 2008\n\n- Better support for concurrent programming\n\n105. Who developed Lisp?\n\n- John McCarthy\n\n106. What type of language is Lisp?\n\n- Functional programming language\n\n107. True or False? Lisp is purely functional.\n\n- True\n\n108. What are the two data structures in Lisp?\n\n- Atom and List\n\n109. What is a List?\n\n- A series of elements enclosed in parentheses (A B C D)\n\n110. Elements in a List can be ________ or ________ _________.\n\n- Atoms or other lists\n\n111. How is computation done in Lisp?\n\n- By applying functions to arguments\n\n112. True or False? Both assignment statements and variables are necessary in Lisp.\n\n- False. Neither\n\n113. What does Lisp use for Iteration?\n\n- Recursion\n\n114. True or False? Both program code and data are written in list form in Lisp.\n\n- True\n\n115. Describe the program code in List (A B C D) in Lisp.\n\n- Function A followed by three parameters B, C, D\n\n116. Name a couple of descendants of Lisp.\n\n- Scheme, Common Lisp, MetaLanguage, Miranda, Haskell, F#\n\n117. Name a functional language developed by Microsoft.\n\n- F#\n\n118. Who developed ALGOL 58?\n\n- Fritz Bauer\n\n119. What did the assignment statement look like in ALGOL 58?\n\n- variable := expression\n\n120. True or False? ALGOL 58 was close to mathematical notation?\n\n- True\n\n121. True or False? ALGOL 58 formalized the concept of data-types?\n\n- True\n\n122. True or False? ALGOL 58 contained compound statements?\n\n- True\n\n123. How many array dimensions were allowed in ALGOL 58?\n\n- Any number\n\n124. What was the lower bound of arrays in ALGOL 58?\n\n- It was anything the programmer specified\n\n125. True or False? Selection statements could be nested.\n\n- True\n\n126. What does BNF stand for?\n\n- Backus-Naur Form\n\n127. What is BNF is for?\n\n- Describing programming language syntax.\n\n128. Name a few features introduced in ALGOL 60.\n\n- Recursive procedures\n\n- Stack-dynamic arrays\n\n- Block structure\n\n- Parameters passed to subprograms as value or name\n\n129. Who wrote the description for ALGOL 60 and which form did he use?\n\n- Peter Naur. He used BNF.\n\n130. Name 3 firsts for ALGOL 60\n\n- It was the first language designed by an international group\n\n- It was the first language designed to be machine independent\n\n- It was the first language whose syntax was formally described\n\n131. Which language was used as the only acceptable means of communicating algorithms?\n\n- ALGOL 60\n\n132. List a few reasons why ALGOL 60 was never widely accepted.\n\n- Too flexible\n\n- Lack of I/O statements\n\n- BNF seemed strange and complex\n\n- Lack of support from IBM\n\n133. Who made FLOW-MATIC and for which programming domain?\n\n- Grace Hopper for Business application\n\n134. Who developed COBOL?\n\n- Developed by Tierney and friends <- too many names lol\n\n135. Where was the idea of COBOL developed?\n\n- The Pentagon\n\n136. Name a few things COBOL was trying to achieve.\n\n- Use English as much as possible\n\n- Should not be restricted by implementation\n\n- Easy to use\n\n137. What are the two sections that COBOL code is separated into?\n\n- Data Description and Executable operations\n\n138. Which language has been used more than any other programming language?\n\n- COBOL\n\n139. What was the first programming language mandated by DoD?\n\n- COBOL\n\n140. Fill in the blank. _____ was the first high-level language with construct for macros\n\n- COBOL\n\n141. How many characters could COBOL have in its variable names?\n\n- Up to 30\n\n142. What other character was allowed in COBOL variable names?\n\n- Dashes\n\n143. Who developed BASIC?\n\n- John Kemeny and Thomas Kurtz\n\n144. Why was BASIC popular?\n\n- It was used in weaker Microcomputers.\n\n145. Why did BASIC start to lose its popularity?\n\n- Because Microcomputers became more powerful\n\n146. Who was the primary target audience of BASIC?\n\n- Beginners; non-science students\n\n147. What was the first widely used language to allow program development via terminals connected to computers?\n\n- BASIC\n\n148. True or False? BASIC valued computer time more than user time.\n\n- False\n\n149. What was the first large-scale attempt to design a language that could be used for a broad spectrum of application areas?\n\n- PL/I\n\n150. What was PL/I attempting to achieve?\n\n- Combine Business and Scientific domains into one.\n\n151. What was a disadvantage of PL/I?\n\n- Had too many features and some features were not well designed.\n\n152. What did both APL and SNOBOL have?\n\n- Dynamic typing and Dynamic Storage Allocation\n\n153. What is dynamic typing?\n\n- Variable acquires a type when value is assigned\n\n154. What is dynamic storage allocation?\n\n- Storage allocated to variable when value is assigned\n\n155. Who developed APL?\n\n- Kenneth Iverson\n\n156. Why was APL developed?\n\n- To describe computer architecture\n\n157. What is APL famous for?\n\n- Large collection of operators such as unit operations on arrays.\n\n158. True or False? APL is easy to read.\n\n- False\n\n159. Who designed SNOBOL?\n\n- Farber, Griswold and Polensky at Bell Labratories\n\n160. What is SNOBOL famous for?\n\n- Text-processing. Has powerful operations for string pattern matching\n\n161. SNOBOL is used for writing _____ ______.\n\n- Text editors\n\n162. What was SIMULA I designed for?\n\n- Simulation\n\n163. Who developed SIMULA I?\n\n- Kristen Nygaard and Ole-Jahn Dah\n\n164. Which language was the first to support data-abstraction?\n\n- SIMULA 67\n\n165. Why was data-abstraction created in SIMULA 67?\n\n- To support coroutines\n\n166. What were the primitive data types in ALGOL 68?\n\n- Boolean, Character, Integer, Real and Complex\n\n167. What did ALGOL 68 introduce?\n\n- Implicit heap-dynamic arrays (flex arrays) where array length is not specified\n\n168. All modern languages owe some of their design to _____ or ______.\n\n- ALGOL 60 or ALGOL 68\n\n169. Who developed Pascal?\n\n- Niklaus Wirth\n\n170. True or False? Pascal became the most widely used introductory language.\n\n- True\n\n171. True or False? Pascal is safe when compared to Fortran or C.\n\n- True\n\n172. Who developed C?\n\n- Dennis Ritchie\n\n173. Why was C originally developed?\n\n- For systems programming\n\n174. What is a reason for C’s popularity?\n\n- UNIX is written in C\n\n175. True or False? C has type-checking\n\n- False\n\n176. What programming language category does Prolog fall under?\n\n- Logic\n\n177. Who developed Prolog?\n\n- Robert Kowalski\n\n178. Prolog consisted of two types of statements: ______ and ______.\n\n- facts and rules\n\n179. Prolog uses ________ to attempt to determine the truth of the statement.\n\n- resolution\n\n180. What was the most expensive and extensive design effort ever undertaken for a programming language?\n\n- Ada\n\n181. Who developed Ada?\n\n- Jean Ichbiah\n\n182. Why was Ada created?\n\n- DoD contest. DoD wanted a programming language for embedded systems.\n\n183. Where did Ada get its name from?\n\n- Augusta Ada Byron\n\n184. Who is considered to be the first programmer?\n\n- Augusta Ada Byron\n\n185. What were the major contributions of Ada?\n\n- Packages\n\n- Exception Handling\n\n- Generic packages and subprograms\n\n- Tasks\n\n186. Why was Ada criticized?\n\n- Too large and complex\n\n187. Is Ada still required by the DoD for its military software systems?\n\n- No\n\n188. What features became available in Ada 95?\n\n- Protected objects\n\n- Extended type that supports inheritance and polymorphism\n\n189. What type of interface does Ada 2005 have?\n\n- Similar to Java\n\n190. What was the first language to fully support OOP?\n\n- Smalltalk\n\n191. Who developed Smalltalk?\n\n- Alan Kay\n\n192. What platform was Smalltalk to be used on?\n\n- Dynabook (similar to large iPad)\n\n193. How is all computing done in Smalltalk?\n\n- By sending a message to an object to invoke one of its methods and the method replies by returning an object.\n\n194. True or False? Classes in Smalltalk belong to a single class hierarchy?\n\n- True\n\n195. Who developed C++?\n\n- Bjarne Stroustrup at Bell Laboratories\n\n196. True or False? C++ allows for procedural and OOP programming?\n\n- True\n\n197. True or False? C++ inherited most of C’s insecurities.\n\n- True\n\n198. True or False? You can link C++ code with C code.\n\n- True\n\n199. Name a couple of features present in C++.\n\n- Parameter type checking\n\n- Classes\n\n- Public/private access control of inherited components\n\n- Constructors and Destructors\n\n200. True or False? C++ allows multiple inheritance.\n\n- True\n\n201. Who developed Objective-C?\n\n- Brand Cox and Tom Love\n\n202. True or False? Objective-C was used to write MAC OS X.\n\n- True\n\n203. True or False? Objective-C is a strict superset of C\n\n- True\n\n204. True or False? Objective-C is a hybrid language with imperative and object-oriented features.\n\n- True\n\n205. Who developed Java?\n\n- James Gosling\n\n206. What is Java useful for?\n\n- Web programming especially with Java applets.\n\n207. Does Java support concurrency?\n\n- Yes. They’re called threads.\n\n208. How are objects in heap deallocated in Java?\n\n- Automatically via garbage collection.\n\n209. What does garbage collection help avoid?\n\n- Memory leaks\n\n210. True or False? Java is faster than C.\n\n- False since C is compiled and Java is a hybrid-implementation language\n\n211. Name a few reasons for Java’s fast implementation.\n\n- Applets, Simpler and safer than C++, Compiler is free and easy to obtain\n\n212. True or False? Java has generics.\n\n- True\n\n213. Who developed Perl?\n\n- Larry Wall\n\n214. In Perl, variables are _______ declared.\n\n- Implicitly\n\n215. What are the first characters in Perl’s variable types: scalar, array, hash\n\n- S – Scalar\n\n- @ - Array\n\n- % - Hash names\n\n216. True or false? Arrays have dynamic length in Perl.\n\n- True\n\n217. What are associative arrays called?\n\n- Hashes\n\n218. What are hashes?\n\n- Hash tables in which keys are stored\n\n219. True or False? Perl was initially a UNIX utility for processing text files.\n\n- True\n\n220. Who developed JavaScript?\n\n- Brendan Eich\n\n221. True or False? JavaScript is standardized.\n\n- True\n\n222. What is JavaScript standardized name?\n\n- ECMAScript\n\n223. What is Microsoft’s version of JavaScript called?\n\n- Jscript\n\n224. Where is JavaScript’s interpreter located?\n\n- Web browser\n\n225. What is JavaScript used for?\n\n- Form validation and dynamic modification of HTML documents\n\n226. True or False? JavaScript supports inheritance.\n\n- False\n\n227. Who developed PHP?\n\n- Rasmus Lerdorf\n\n228. Where is PHP interpreted?\n\n- Web Server\n\n229. True or False? PHP supports OOP.\n\n- True\n\n230. Who developed Python?\n\n- Guido van Rossum\n\n231. True or False? Python is interpreted.\n\n- True\n\n232. Is Python dynamically typed?\n\n- Yes\n\n233. Is Python Object Oriented?\n\n- Yes\n\n234. What are Python’s data structures?\n\n- Tuples, Lists and Dictionaries\n\n235. Does Python have garbage collection?\n\n- Yes\n\n236. Does Python support exception handling?\n\n- Yes\n\n237. Does Python support concurrency?\n\n- Yes\n\n238. Does Python support network programming?\n\n- Yes\n\n239. What was the first programming language designed in Japan to have widespread use in the US?\n\n- Ruby\n\n240. Who developed Ruby?\n\n- Yukihiro Matsumoto\n\n241. True or False? Ruby is object oriented.\n\n- True\n\n242. True or False? In Ruby, classes and objects are dynamic.\n\n- True\n\n243. How is scope specified in Ruby?\n\n- In name. Local variables begin with letter. Instance variables begin with @. Global with $.\n\n244. Lua supports ________ and _________ programming.\n\n- Imperative and functional\n\n245. Does Lua support OOP?\n\n- No\n\n246. What is Lua’s data structure?\n\n- Table (an associative array)\n\n247. True or False? Lua is a hybrid language.\n\n- True\n\n248. Why was C# developed for?\n\n- Component based software development\n\n249. Who created C#?\n\n- Anders Hejlsberg\n\n250. What is the type delegate used for in C#?\n\n- Implementing event handlers and callbacks\n\n251. True or False? C# allows for auto-boxing and auto-unboxing.\n\n- True\n\n252. True or False? C# has a foreach statement.\n\n- True\n\n253. What is a markup programming hybrid language?\n\n- A markup language in which some of the elements can specify programming actions.\n\n254. What is syntax?\n\n- The form of a language\n\n255. What is \"semantics\"?\n\n- The meaning of the expressions\n\n256. True or False? Describing syntax is easier than describing semantics.\n\n- True\n\n257. The strings of a language are called ________.\n\n- Sentences\n\n258. _______ are the lowest level syntactic units\n\n- Lexemes\n\n259. A _________ of a language is a category of its lexemes\n\n- Token\n\n260. Languages can be formally defined in two distinct ways: by ______ and by _______.\n\n- recognition and generation\n\n261. The syntax part of a compiler is a _________ for the language.\n\n- recognizer\n\n262. What can regular grammars describe?\n\n- appearance of tokens of programming languages\n\n263. What can context-free grammars describe?\n\n- the syntax of a whole programing language\n\n264. What is a metalanguage?\n\n- A language used to describe another language.\n\n265. True or False? BNF is a metalanguage for programming languages.\n\n- True\n\n266. Each rule in BNF has a Left Hand Side (LHS), or ________, and a Right Hand Side (RHS), or _________.\n\n- nonterminal and terminal\n\n267. What is grammar?\n\n- Collection of rules\n\n268. In BNF, multiple rules can be separated by ______.\n\n- Vertical bar |\n\n269. A rule is ______ if LHS appears on its RHS.\n\n- recursive\n\n270. A sentence of a language appears with a special nonterminal symbol called ____ ______.\n\n- start symbol\n\n271. What is a derivation?\n\n- Sequence of rule applications where each successive string is derived from the previous string by replacing one of the nonterminals with one of the nonterminals definitions.\n\n272. Each string in a derivation, including the start symbol, is called a _______ ________.\n\n- sentential form\n\n273. True or false? A derivation continues until the sentential form contains no nonterminals.\n\n- True\n\n274. A _____ ________ is one in which the replaced nonterminal is always the leftmost nonterminal.\n\n- leftmost derivation\n\n275. How can derivation be represented graphically?\n\n- In a parse tree\n\n276. What do nodes and leaves represent in a parse tree?\n\n- Nodes: nonterminals\n\n- Leaves: terminals\n\n277. A grammar that generates a sentence for which there are two or more distinct parse trees is said to be _________.\n\n- ambiguous\n\n278. Every derivation with an unambiguous grammar has a ______ parse tree.\n\n- unique\n\n279. What a BNF rule has its LHS also appearing at the beginning of its RHS, the rule is said to be ___ __.\n\n- Left recursive\n\n280. Left recursion corresponds to ______ _________.\n\n- left associativity\n\n281. What does a left-associative parse tree look like?\n\n- Lowest branch appears on the left hand side\n\n282. What is the rule for if constructs in most languages?\n\n- That the else clause is matched with the nearest previous unmatched if\n\n283. What are the three extensions present in EBNF?\n\n- Square brackets, Curly braces, Parentheses\n\n284. A right superscript to the right of the brace indicates what?\n\n- the upper limit to the number of times the enclosed part can be repeated\n\n285. What is used instead of an arrow in EBNF?\n\n- A colon\n\n286. True or False? Vertical bars are used to separate alternative RHSs.\n\n- False. Place alt. RHS on new line. No vertical bars\n\n287. What does attribute grammar describe?\n\n- More of a structure of a programming language than is possible in context-free grammar\n\n288. What are static semantics?\n\n- Rules can be checked at compile time\n\n289. True or false? Attribute grammar can describe both syntax and semantics?\n\n- True\n\n290. What are attributes?\n\n- Properties that can have values assigned to them\n\n291. What are synthesized attributes used for?\n\n- Used to pass semantic information up a parse tree.\n\n292. What are inherited attributes used for?\n\n- Used to pass semantic information down and across a tree\n\n293. If all of the attribute values in a parse tree are said to be computed, the tree is said to be ___ ___.\n\n- fully attributed\n\n294. What are intrinsic attributes?\n\n- Synthesized attributes of leaf nodes whose values are determined outside of the parse tree.\n\n295. What is an actual_type?\n\n- a synthesized attribute that stores the actual type of a variable or expression.\n\n296. What is an expected_type?\n\n- Inherited attribute associated with nonterminal <expr> that stores the expected type of expression.\n\n297. True or False? There is a universally accepted notation for describing dynamic semantics.\n\n- False\n\n298. What are operational semantics?\n\n- An attempt to describe the meaning of a statement by specifying the effects of running it on a machine.\n\n299. Is operational semantics based on mathematics?\n\n- No\n\n300. ________ _________ is based on recursive function theory.\n\n- Denotational semantics\n\n301. What is the most rigorous and most widely known formal method for describing the meaning of programs?\n\n- Denotational semantics\n\n302. In denotational semantics, each mapping function has a ____ and a ____.\n\n- domain and range\n\n303. In denotational semantics, the _____ _____ specifies which syntactic structures are to be mapped.\n\n- Syntactic domain\n\n304. In denotational semantics, the range is called the _________ _________.\n\n- Semantic domain\n\n305. The _______ in denotational semantics consists of the values of the program’s variables.\n\n- state\n\n306. Show how a state can be represented in denotational semantics.\n\n- s = {<i1, v1>, <i2, v2>, …} where i = variable name and v = value\n\n307. In denotational semantics, any name that’s not initialized with a value has the special value ___.\n\n- undef\n\n308. What does VARMP(i, s) produce?\n\n- v\n\n309. In denotational semantics, most constructs, such as expressions are mapped to ___ not states.\n\n- values\n\n310. What semantics have been used in programing language standards?\n\n- Denotational semantics\n\n311. What are axiomatic semantics?\n\n- Most abstract technique for specifying semantics based on mathematical logic\n\n312. What are axiomatic semantics used for?\n\n- Proving the correctness of programs\n\n313. What is an assertion?\n\n- A logical expression that specifies constraints on program variables.\n\n314. What is a precondition?\n\n- An assertion that describes necessary constraints before the execution of a statement\n\n315. What is a postcondition?\n\n- An assertion that describes new constraints on program variables after statement execution\n\n316. How are pre and post conditions represented?\n\n- In curly braces\n\n317. What is the weakest precondition?\n\n- Least restrictive precondition\n\n318. What is the inference rule?\n\n- method of inferring the truth of one logical statement based on the truth of other logical statements.\n\n319. What is the general form of the inference rule?\n\n- S1, S2, ......, Sx\n\n------------------------\n\nS\n\n320. What is an axiom?\n\n- logical statement that is assumed to be true\n\n321. What is the notation for specifying the axiomatic semantics of a statement form?\n\n- {P} S {Q}\n\n322. What does the rule of consequence state?\n\n- Postcondition can always be weakened and a precondition can always be strengthened.\n\n323. What do you need to find in order to compute the weakest precondition for a logical while loop?\n\n- Loop invariant"
    }
}