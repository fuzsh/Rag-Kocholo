{
    "id": "dbpedia_4771_3",
    "rank": 58,
    "data": {
        "url": "http://fandy2016.blogspot.com/2013/03/concepts-of-programming-languages_4.html",
        "read_more_link": "",
        "language": "en",
        "title": "Welcome to my Blog: Concepts of Programming Languages",
        "top_image": "http://fandy2016.blogspot.com/favicon.ico",
        "meta_img": "http://fandy2016.blogspot.com/favicon.ico",
        "images": [
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "http://www.blogger.com/img/blogger_logo_round_35.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "View my complete profile"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Concepts of Programming Languages ---- Chapter 2  Evolution of the Major Programming languages Name : Fandy Limardi NIM : 1601210713 Lectu...",
        "meta_lang": "en",
        "meta_favicon": "http://fandy2016.blogspot.com/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "http://fandy2016.blogspot.com/2013/03/concepts-of-programming-languages_4.html",
        "text": "Concepts of Programming Languages ---- Chapter 2 Evolution of the Major Programming languages\n\nName : Fandy Limardi\n\nNIM : 1601210713\n\nLecture : Tri Djoko Wahjono, Ir., M.Sc. (D0206)\n\nAssignment : Concept of programming languages ---- chapter 2 Evolution of the Major Programming languages\n\nChapter 2\n\nReview Questions\n\n1.In what year was Plankalkul designed? In what year was that design published?\n\nAnswer : In 1945, Plankalkul was designed. In 1972, that design published.\n\n2.Mention an interesting feature of Zuse’s programs.\n\nAnswer : An interesting feature of Zuse’s programs is the inclusion of mathematical expressions showing the current relationships between program variables.\n\n3.What does Plankalkul mean?\n\nAnswer : Plankalkul means high level non-von Neumann programming language or program calculus designed by Konrad Zuse.\n\n4.Speedcoding was invented to overcome two significant shortcomings of the computer hardware of the early 1950s. What were they?\n\nAnswer : Non-connotative names, absolute addressing. (Floating-point arithmetic, automatic incrementing of address register)\n\n5.What is the number of bits in a single word of the UNIVAC I’s memory? How are the bits grouped?\n\nAnswer : The number of bits in a single word of the UNIVAC I’s memory is 72 bits, grouped as 12 six-bit bytes.\n\n6.What hardware capability that first appeared in the IBM 704 computer strongly affected the evolution of programming languages? Explain why.\n\nAnswer : The inclusion of floating-point hardware capability that first appeared in the IBM 704 computer strongly affected the evolution of programming languages because at that time ,the lack of floating-point hardware in the available computers. All floating –point operations had to be simulated in software, a very time-consuming process.\n\n7.Who developed the Speedcoding system for the IBM 701?\n\nAnswer : John Backus developed the Speedcoding system for the IBM 701.\n\n8.Who developed Short Code? Why is Short Code called automatic programming?\n\nAnswer : John Mauchly developed short code. Short Code called automatic programming because it was not translated to machine code, it was implemented with a pure interpreter. It clearly simplified the programming process.\n\n9.Under what environmental consideration was Fortran developed? Which is the first version of Fortran?\n\nAnswer :\n\nThe environmental consideration in which Fortran was developed was as follows :\n\n1.Computers had small memories and were slow and relatively unreliable\n\n2.The primary use of computers was for scientific computations\n\n3.There were no existing efficient and effective ways to program computers\n\n4.Because of the high cost of computers compared to the cost of programmers.\n\nthe first version of Fortran is Fortran I .\n\n10.What was the most significant feature added to Fortran I to get Fortran II?\n\nAnswer : the most significant feature added to Fortran I to get Fortran II was being the independent compilation of subroutines.\n\n11.What control flow statements were added to Fortran IV to get Fortran 77?\n\nAnswer : control flow statements were added to Fortran IV to get Fortran 77 are character string handling, logical loop control statements , and an If with an optional Else clause.\n\n12.Which version of Fortran was the first to have any sort of dynamic variables?\n\nAnswer : Fortran 90\n\n13.Which version of Fortran was the first to have character string handling?\n\nAnswer : Fortran 77\n\n14.Why were linguists interested in artificial intelligence in the late 1950s?\n\nAnswer : Linguists were concerned with natural language processing.\n\n15.In what way are Scheme and Common LISP opposites of each other?\n\nAnswer : Common LISP allows for static scoping and dynamic scoping Scheme only uses static scoping.\n\n16.What dialect of LISP is used for introductory programming courses at some universities?\n\nAnswer : Scheme\n\n17.What two professional organizations together designed ALGOL 60?\n\nAnswer : ACM and GAMM\n\n18.What were modifications to ALGOL 58 to produce ALGOL 60?\n\nAnswer :\n\n1.The concept of block structure was introduced\n\n2.Two different means of passing parameters to subprograms were allowed\n\n3.Procedures were allowed to be recursive\n\n4.Stack-dynamic arrays were allowed\n\n19.What language was designed to describe the syntax of ALGOL 60?\n\nAnswer : BNF (Backus-Naur form)\n\n20.On what language was COBOL based?\n\nAnswer : Flow-Matic\n\n21.In what year did the COBOL design process begin?\n\nAnswer : 1959\n\n22.What data structure that appeared in COBOL originated with Plankalkul?\n\nAnswer : Hierarchical data structures (records)\n\n23.What organization was most responsible for the early success of COBOL (in terms of extent of use)?\n\nAnswer : Department of Defense (DoD)\n\n24.Why was BASIC an important language in the early 1980s?\n\nAnswer : Its smaller dialects could be implemented on computers with very small memories\n\n25.PL/I was designed to replace what two languages?\n\nAnswer : COBOL and Fortran\n\n26.For what new line of computers was PL/I designed?\n\nAnswer : the IBM system/360 line of computers\n\n27.What features of SIMULA 67 are now important parts of some object-oriented languages?\n\nAnswer : Data abstraction\n\n28.What innovation of data structuring was introduced in ALGOL 68 but is often credited to Pascal?\n\nAnswer : User-defined data types\n\n29.What design criterion was used extensively in ALGOL 68?\n\nAnswer : Orthogonality\n\n30.What language introduced the case statement?\n\nAnswer : ALGOL-W\n\n31.What operators in C were modeled on similar operators in ALGOL 68?\n\nAnswer : for and switch statements, in its assigning operators, and in its treatment of pointers\n\n32.What are two characteristics of C that make it less safe than Pascal?\n\nAnswer : Lack of complete type checking and flexibility\n\n33.What are the two kinds of statements that populate a Prolog database?\n\nAnswer : Facts and rules\n\n34.What is the primary application area for which Ada was designed?\n\nAnswer : Embedded systems\n\n35.What three concepts are the basis for object-oriented programming\n\nAnswer : Classes, objects and methods\n\nProblem Set\n\n1.What features of Fortran IV do you think would have had the greatest influence on Java if the Java designers had been familiar with Fortran?\n\nAnswer : I think features of Fortran IV would have had the greatest influence on Java if the Java designers had been familiar with Fortran are explicit type declarations for variables, a logical If construct, and the capability of passing subprograms as parameters to other subprograms.\n\n2.Write a short history of the Fortran 0, Fortran I, Fortran II, and Fortran IV systems.\n\nAnswer :\n\nFortran 0 (1955) : It would provide the efficiency of hand coded programs and the ease of programming of the interpretive pseudo code systems.\n\nFortran I (1956) : It included input/output formatting, variable names of up to six characters. User defined subroutines, the If selection statement , and the Do loop statement.\n\nFortran II (1958) : It fixed many of the bugs in the Fortran I compilation system and added some significant features to the language , the most important being the independent compilation of subroutines.\n\nFortran IV (1962) : its most additions were explicit type declarations for variables, a logical If construct, and the capability of passing subprograms as parameters to other subprograms.\n\n3.As a research project, compare the features of C with those of the BASIC\n\nAnswer : Features of C are input/output, looping, selection, pointers, file processing, arrays, struct and so on. Features of BASIC are there was no way for executing program to get input data from the user. Programs were typed in, compiled and run. BASIC had only 14 different statement types and a single data type (floating point).\n\n4.Which of the three original goals of the Fortran design committee, in my opinion, was most difficult to achieve at that time?\n\nAnswer : in my opinion, the primary use of computers for scientific computations (algebraic translation system) was most difficult to achieve at that time\n\n5.Make an educated guess as to the most common syntax error in C programs\n\nAnswer :\n\n1. Semicolon missing.\n\n2 Forget declared variables.\n\n3. Function with not the same data type parameters in main\n\n4..Forget parentheses.\n\n6.Describe in detail the two most important reasons, in your opinion, why speedcoding did not become a very widely used language?\n\nAnswer : because there is a limitations of such systems, consider that the remaining usable memory after loading interpreter was only 700 words and that the add instruction took 4.2 milliseconds to execute. Speedcoding included the novel facility of automatically incrementing address registers. This facility did not appear in hardware until UNIVAC 1107 computers of 1962.\n\n7.Why, in your opinion, did Fortran allow names that began with I,J,K,L,M, and N as implicitly interger type?\n\nAnswer : Fortran allowed names that began with I,J,K,L,M, and N as implicitly interger type because the choice of the letters for this convention was based on the fact that at that time scientist and engineers used letters as variable subscripts, usually i, j, and k. In a gesture of generosity, Fortran’s designers threw in three additional letters.\n\n8.Outline the major developments in ALGOL 60.\n\nAnswer :\n\n-The concept of block structure was introduced\n\n-Two different means of passing parameters to subprograms were allowed\n\n-Procedures were allowed to be recursive\n\n-Stack-dynamic arrays were allowed\n\n9.Was IBM’s assumption, on which it based its decision to develop PL/I, correct, given the history of computers and language developments since 1964\n\nAnswer : IBM incorrect in its view of the future of the uses of computers, at least as far as languages are concerned. Commercial applications are nearly all done in languages that are specifically designed for them. On the other hand, the IBM design of the 360 line of computers was a great success. it dominates the area of computers between supercomputers and minicomputers. Furthermore, 360 series computers and their descendants have been widely used for both scientific and commercial applications in large part, in Fortran and COBOL.\n\n10.What is the primary reason why C became more widely used than Fortran?\n\nAnswer : the primary reason why C became more widely used than Fortran is its lack of complete type checking such as functions could be written for which parameters were not type checked. Those who like C appreciate the flexibility. Then, a compiler for it was part of the widely used UNIX operating system. This inclusion in UNIX provided an essentially free and quite good compiler that was available to programmers on many different kinds of computers.\n\n11.What are the arguments both for and against the idea of a typeless language?\n\nAnswer : The argument for typeless languages is their great flexibility for the programmer. Some storage location can be used to store any type value for very low-level languages and systems programming. The drawback that type checking is impossible, so it is the programmer's responsibility to insure that expressions and assignments are correct.\n\n12.Languages continually evolve. What sort of restriction do you think are appropriate for the changes in programming languages? Compare your answer with the evolution of Fortran.\n\nAnswer : The danger is that the process of revision. It will add new features, so that the language grows more complex. Compounding the problem is the reluctance, because of existing software, to remove obsolete features.\n\n13.In recent years data structures have evolved within scripting languages to replace traditional arrays. Explain the chronological sequence of these developments.\n\nAnswer : As in scheme, Lua’s functions are first-class values. Lua support closures. These capabilities allow it to be used for functional programming. Lua has only single data structures, although in Lua’s case, it is the table. Lua’s tables extend PHP’s associate arrays. References to table elements can take the form of references to traditional arrays, associative arrays, or records. Luas uses garbage collection for its objects. It uses dynamic typing. Lua is a small and simple language, having only 21 reserved words. Much of its extensibility derives from its table data structure. Lua can conveniently be used as a scripting language extension to other languages. Lua is translated to an intermediate code and interpreted.\n\n14.Explain two reasons why pure interpretation is an acceptable implementation method for several recent scripting languages\n\nAnswer : pure interpretation is an acceptable implementation method for several recent scripting languages is when the amount of computation is small, the processing time will be negligible. The second one is when the amount of computation is small and it is done in interactive environment, where the processor is often idle because of the slow speed of human interactions.\n\n15.Give a brief general description of the Java servlet"
    }
}