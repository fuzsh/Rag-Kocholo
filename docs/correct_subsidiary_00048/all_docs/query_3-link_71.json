{
    "id": "correct_subsidiary_00048_3",
    "rank": 71,
    "data": {
        "url": "https://github.com/opencv/opencv/wiki/ChangeLog",
        "read_more_link": "",
        "language": "en",
        "title": "ChangeLog",
        "top_image": "https://opengraph.githubassets.com/12d06171079195dcc9e4c9259adbd45710040ebd45fb935b0408ec7b5c47d07a/opencv/opencv",
        "meta_img": "https://opengraph.githubassets.com/12d06171079195dcc9e4c9259adbd45710040ebd45fb935b0408ec7b5c47d07a/opencv/opencv",
        "images": [
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/opencv_qr-code_small.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/opencv_qr-code_small.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/opencv_qr-code_small.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/rtfm.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/rtfm.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/riscv.png",
            "https://github.com/opencv/opencv/wiki/images/rtfm.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/gsoc2020.jpg",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/tengline_lite_perf.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/tengine_speed_upd.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/speed.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/new_hough_circles.jpg",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/speed.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/speed.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/speed.jpg",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/speed.jpg",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/cxx11.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/vulkan.png",
            "https://github.com/opencv/opencv/wiki/images/gapi.png",
            "https://github.com/opencv/opencv/wiki/images/speed.jpg",
            "https://github.com/opencv/opencv/wiki/images/qrcode.png",
            "https://github.com/opencv/opencv/wiki/images/kinfu.png",
            "https://github.com/opencv/opencv/wiki/images/optflow2.jpg",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/rtfm.png",
            "https://github.com/opencv/opencv/wiki/images/win10.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/OpenCL.jpg",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/cxx.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/opencv_ny.jpg",
            "https://github.com/opencv/opencv/wiki/images/gsoc.png",
            "https://github.com/opencv/opencv/wiki/images/GSoC2017_bgfg.jpg",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/faster_rcnn.jpg",
            "https://github.com/opencv/opencv/wiki/images/OpenCL.jpg",
            "https://github.com/opencv/opencv/wiki/images/speed.jpg",
            "https://github.com/opencv/opencv/wiki/images/rtfm.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/gsoc.png",
            "https://github.com/opencv/opencv/wiki/images/JS.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/speed.jpg",
            "https://github.com/opencv/opencv/wiki/images/imediasdk.png",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/Intel_IPP_logo.png",
            "https://github.com/opencv/opencv/wiki/images/speed.jpg",
            "https://github.com/opencv/opencv/wiki/images/cxx11.png",
            "https://github.com/opencv/opencv/wiki/images/imediasdk.png",
            "https://github.com/opencv/opencv/wiki/images/gsoc2016.jpg",
            "https://github.com/opencv/opencv/wiki/images/thank_you.jpg",
            "https://github.com/opencv/opencv/wiki/images/dnn.png",
            "https://github.com/opencv/opencv/wiki/images/platforms.png",
            "https://github.com/opencv/opencv/wiki/images/intel.png",
            "https://github.com/opencv/opencv/wiki/images/nvidia.png",
            "https://github.com/opencv/opencv/wiki/images/openvx.png",
            "https://github.com/opencv/opencv/wiki/images/hal.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/gsoc2015.jpg",
            "https://github.com/opencv/opencv/wiki/images/thank_you.jpg",
            "https://github.com/opencv/opencv/wiki/images/100px-Apple_iOS_icon.png",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/win10.png",
            "https://github.com/opencv/opencv/wiki/images/elcapitan.png",
            "https://github.com/opencv/opencv/wiki/images/Intel_IPP_logo.png",
            "https://github.com/opencv/opencv/wiki/images/OpenCL.jpg",
            "https://github.com/opencv/opencv/wiki/images/hal.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/bug.png",
            "https://github.com/opencv/opencv/wiki/images/threads.jpg",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/daisy.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/compatibility.jpg",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/winrt_opencv.jpg",
            "https://github.com/opencv/opencv/wiki/images/mjpeg.jpg",
            "https://github.com/opencv/opencv/wiki/images/hal.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/opencl2.png",
            "https://github.com/opencv/opencv/wiki/images/neon.png",
            "https://github.com/opencv/opencv/wiki/images/java_logo.svg.png",
            "https://github.com/opencv/opencv/wiki/images/Intel_IPP_logo.png",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/opencl2.png",
            "https://github.com/opencv/opencv/wiki/images/Intel_IPP_logo.png",
            "https://github.com/opencv/opencv/wiki/images/contrib.jpg",
            "https://github.com/opencv/opencv/wiki/images/buildbot.png",
            "https://github.com/opencv/opencv/wiki/images/gsoc2013.jpg",
            "https://github.com/opencv/opencv/wiki/images/gsoc2014.jpg",
            "https://github.com/opencv/opencv/wiki/images/thank_you.jpg",
            "https://github.com/opencv/opencv/wiki/images/attention.png",
            "https://github.com/opencv/opencv/wiki/images/opencl2.png",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/viz.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/bug.png",
            "https://github.com/opencv/opencv/wiki/images/opencl2.png",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/winrt_opencv.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/bug.png",
            "https://github.com/opencv/opencv/wiki/images/opencl2.png",
            "https://github.com/opencv/opencv/wiki/images/CUDA.jpg",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/winrt_opencv.jpg",
            "https://github.com/opencv/opencv/wiki/images/github2.png",
            "https://github.com/opencv/opencv/wiki/images/bug.png",
            "https://github.com/opencv/opencv/wiki/images/winrt_opencv.jpg",
            "https://github.com/opencv/opencv/wiki/images/CUDA.jpg",
            "https://github.com/opencv/opencv/wiki/images/qt.png",
            "https://github.com/opencv/opencv/wiki/images/OpenCL.jpg",
            "https://github.com/opencv/opencv/wiki/images/threads.jpg",
            "https://github.com/opencv/opencv/wiki/images/100px-Apple_iOS_icon.png",
            "https://github.com/opencv/opencv/wiki/images/bug.png",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/winrt_opencv.jpg",
            "https://github.com/opencv/opencv/wiki/images/superres.jpg",
            "https://github.com/opencv/opencv/wiki/images/clahe.jpg",
            "https://github.com/opencv/opencv/wiki/images/OpenCL.jpg",
            "https://github.com/opencv/opencv/wiki/images/visual_studio_image_watch.png",
            "https://github.com/opencv/opencv/wiki/images/github.jpg",
            "https://github.com/opencv/opencv/wiki/images/bug.png",
            "https://github.com/opencv/opencv/wiki/images/java_logo.svg.png",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/CUDA.jpg",
            "https://github.com/opencv/opencv/wiki/images/OpenCL.jpg",
            "https://github.com/opencv/opencv/wiki/images/update.jpg",
            "https://github.com/opencv/opencv/wiki/images/threads.jpg",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/ios6.jpg",
            "https://github.com/opencv/opencv/wiki/images/python.png",
            "https://github.com/opencv/opencv/wiki/images/profile.jpg",
            "https://github.com/opencv/opencv/wiki/images/denoising.jpg",
            "https://github.com/opencv/opencv/wiki/images/optflow.jpg",
            "https://github.com/opencv/opencv/wiki/images/CUDA.jpg",
            "https://github.com/opencv/opencv/wiki/images/OpenCL.jpg",
            "https://github.com/opencv/opencv/wiki/images/bug.png",
            "https://github.com/opencv/opencv/wiki/images/github.jpg",
            "https://github.com/opencv/opencv/wiki/images/update.jpg",
            "https://github.com/opencv/opencv/wiki/images/android_ocv_small.png",
            "https://github.com/opencv/opencv/wiki/images/freak.jpg",
            "https://github.com/opencv/opencv/wiki/images/eigenfaces_opencv.png",
            "https://github.com/opencv/opencv/wiki/images/100px-Apple_iOS_icon.png",
            "https://github.com/opencv/opencv/wiki/images/bug.png",
            "https://github.com/opencv/opencv/wiki/images/logo.png",
            "https://github.com/opencv/opencv/wiki/images/cuda.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Open Source Computer Vision Library. Contribute to opencv/opencv development by creating an account on GitHub.",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/opencv/opencv/wiki/ChangeLog",
        "text": "June, 2024\n\nSummer's update for OpenCV 4.x has been released. The release also includes OpenCV Model Zoo.\n\nCore Module:\n\nAdded CV_FP16 data type for cv::Mat #24892, #24918. Deprecated convertFp16 function, added FP16 support to cv::Mat::convertTo and analogs.\n\nFixed undefined behaviour in some cases related to FP16 arithmetic #25598\n\nExtended HAL API for minMaxIdx #25563, LUT #25554, meanStdDev #25483, moments 25490, normHamming #25491. HAL entries for transpose #25342, some arithmetic functions #25574, #25506\n\nPersistence: output reals as human-friendly expression. #25351\n\nAdded cgroups v2 support to parallel framework #25285\n\nAdded in-place support for cartToPolar and polarToCart #24893\n\nImgproc Module:\n\nAdded relative displacement field option to cv::remap #24621\n\nAdded new findContours implementation #25146, #25680, #25385\n\nRefactored EMD algorithm to get rid of C-API usage #25469\n\nFixed bug in stackBlur with large kernels #25513\n\nExtended HAL for projectPoints #25511, equalizeHist #25565, Otsu threshold #25509. Added new HAL entries for gaussianBlur #25397, remap #25399, bilaterialFilter #25343.\n\nCalib3d Module:\n\nFixed several bugs in hand-eye calibration methods #24897, #25423\n\nFixed several bugs in findHomography implementation #25308, #25665\n\nMultiple improvements in findChessboardCorners implementation: #25365, 25195, 25177, 25182, 25145, 24779, 24710, 24833, 25090\n\nImproved symmetric circles grid pattern detection #25258\n\nFixed possible infinite loop in USAC #24987\n\nChanged approach for initial estimation for focal length in fisheye calibration #25030\n\nAdded solvePnP implementation for Fisheye camera model #25028\n\nDNN module:\n\nSignificantly improved DNN memory consumption #25181, 25163\n\nAdded Net::dumpToPbtxt method to review optimized graph with Netron #25582\n\nAdded support for several TFLite layers: Global_Pool_2D #25613, Transpose #25297, HardSwishInt8 #24985, split, fully connected, SoftMax, Cast #25273.\n\nFixed bugs in several ONNX layers: Slice #25660, Range #25414, Clip #25319, ReduceMean #25120, Einsum #25100, Norm #24808, negative axis support in Concat #24865.\n\nAdded new ONNX layers: Mod #24765, GroupNorm layer #24610.\n\nAdded more DNN layers with OpenVINO #25524, #25291, 25518.\n\nOptimized fastDepthwiseConv #25361 and int8 layers 25230 for RISC-V with RVV extension\n\nOptimized fastDepthwiseConv for RISC-V P Packed SIMD Extension v0.5.2 #24556\n\nOptimized Attention #24476, #25271, #25238, #24613, 25076.\n\nAdded parallel version for scatter and scatterND #24813\n\nAdded broadcasting if a.rank() != b.rank() with CuDNN backend #24834\n\nTuned Winograd algorithm usage for convolutions #24709\n\nAdded Raft model support and tracking sample with it #24913\n\nAdded Vulkan backend for NaryEltwiseLayer in DNN module #24768\n\nImporved modern Yolo detectors support. Added sample and documentation #24898, #24611\n\nAdded CuDNN 9+ support #25412\n\nAdded OpenVINO 2024 support #25199\n\nG-API module:\n\nPorted G-API ONNXRT backend into V2 API #25662\n\nImplement concurrent executor #24845\n\nA quick value-initialization support GMat #25055\n\nFixed support of mean/scale preprocessing in OV backend for non-real types #24704\n\nObjdetect module:\n\nFixed inaccurate Charuco board generation in some cases (.generateImage()) #24873, #25673\n\nFixed Aruco detector thread safety issue #24807, made Aruco detector more deterministic #24829\n\nAdded QR codes Structured Append decoding mode #24548\n\nSeveral bug fixes in QR code detector and decoder #25026\n\nFixed barcode detectAndDecode #25035\n\nPorted remaning Aruco and Charuco documentation and samples to modern API #23018\n\nVideoIO:\n\nFix race condition in InternalFFMpegRegister initialization. #25419\n\nOrbbec Camera supports MacOS，Gemini2 and Gemini2L support Y16 format #24877\n\nAdded V4L2_PIX_FMT_SGRBG8 pixel format support to V4L2 backend #25249\n\nFix incorrect timestamps returned by VideoCapture when CAP_PROP_FORMAT == -1 #24828\n\nPython Bindings:\n\nExperimental NumPy 2.0 support\n\nAdded python bindings for Rect2f and Point3i #24919\n\nSwitched to numeric dtype for MatLike instead of generic #25406\n\nAdded path-like objects support wherever file names are expected #24773\n\nAndroid:\n\nAdded any screen orientation support for JavaCameraView #24827, JavaCamera2View and NativeCameraView #24869 in Android samples. Fixed double preview initialization bug in JavaCamera2View #24869.\n\nRemoved Android AIDL from build scrips and tutorials as it's not needed since 4.9.0 #24843\n\nEnable file system on Emscripten #24949\n\nUpdated Android samples for modern Android studio. Added OpenCV from Maven support. #24473\n\nAdded Kotlin classes to AAR #24884\n\nAdded ARM KleidiCV as HAL for ARM v8 and v9 processors (-DWITH_KLEIDICV=ON CMake option) #25443, #25618, ARM announcement.\n\nPlatforms support:\n\nCUDA 12.4+ support #25658\n\nWayland back-end for Linux #25551, #25510, #25502\n\nNew LAPACK interface support on MacOS and derivatives #24804, #25625\n\nAdded initial version of HAL for RISC-V processors with P-extension (v0.5.2, Andes platforms) #25167\n\nAdded ARM KleidiCV as HAL for ARM v8 and v9 processors (-DWITH_KLEIDICV=ON CMake option) #25443, #25618, ARM announcement.\n\nAdded zlib-ng as alternative to classic zlib (-DWITH_ZLIB_NG=ON CMake option) #24782\n\nOneAPI 2024 support (IPP, TBB)\n\nExperimental Apple VisionOS support\n\nExperimental Windows ARM64 support\n\ncontributors\n\ngit shortlog --no-merges -ns 4.9.0..4.10.0 64 Alexander Smorkalov 28 Maksim Shabunin 22 Kumataro 15 Yuantao Feng 13 Rostislav Vasilikhin 11 Vincent Rabaud 10 Dmitry Kurtaev 9 fengyuentau 6 Letu Ren 6 MaximSmolskiy 6 alexlyulkov 5 Alexander Alekhin 5 Alexander Lyulkov 4 Abduragim Shtanchaev 4 Laurent Berger 4 Maxim Smolskiy 4 Michael Klatis 3 Adrian Kretz 3 Alessandro de Oliveira Faria (A.K.A.CABELO) 3 Alex 3 Alexander Panov 3 Brad Smith 3 Dhanwanth1803 3 Suleyman TURKMEN 3 cudawarped 2 Anatoliy Talamanov 2 Benjamin Buch 2 CNOCycle 2 Dmitry Matveev 2 HAN Liutong 2 Misha Klatis 2 Pierre Chatelier 2 Stefan Dragnev 2 Tomoaki Teshima 2 Vadim Levin 2 Wanli 2 Yusuke Kameda 2 Zhuo Zhang 2 catree 2 eplankin 2 lpanaf 2 unknown 1 Abduragim 1 Ahmed Essam 1 AleksandrPanov 1 Aman-Vishwakarma1729 1 Anastasiya Pronina 1 Aryan 1 CSBVision 1 Carlos Azevedo 1 Cristian Dobre 1 Dan Rosser 1 Danial Javady 1 Daria Mityagina 1 Giorgos Karagounis 1 Gonzalo Matheu 1 Haosonn 1 Ingrid Wang 1 John Slade 1 John Stechschulte 1 Jun 1 JunX 1 Junyan721113 1 Linaname 1 Liutong HAN 1 Lollyrana 1 LuukvandenBent 1 Maksym Ivashechkin 1 Markus Murschitz 1 Matthias Möller 1 MengqingCao 1 NlSEMONO 1 Oleg Pipikin 1 Phil Nelson 1 Rageking8 1 RoboSchmied 1 Ryo H 1 Sean McBride 1 Sergei Shutov 1 Susumu IINO 1 Székely Gábor 1 TolyaTalamanov 1 Tsukasa Sugiura 1 Ujjayant Kadian 1 Vadim Pisarevsky 1 Yannis Guyon 1 Yu SuiXian 1 Yuriy Chernyshov 1 Yuya Unno 1 Zhi-Qiang Zhou 1 _Burnside 1 ache 1 ajithvallabai 1 daiyin 1 ecchen 1 inkredibl 1 jimmylaw21 1 lackhole 1 llh721113 1 lpylpy0514 1 mikhail.shtennikov 1 ryanking13 1 sepperliu 1 shenleban tongying 1 thewoz 1 uday 1 utibenkei 1 xndcn 1 zihaomu 1 zzuliys 1 刘雄康\n\nDecember, 2023\n\nNew Year's update for OpenCV 4.x has been released. The release also includes OpenCV Model Zoo.\n\nCore Module:\n\n#23965 added cv::broadcast\n\n#24163 Fixed several rounding issues on ARM platform\n\n#24420 added detection & dispatching of some modern NEON instructions (NEON_FP16, NEON_BF16)\n\n#23929 added optimization for LoongArch 128-bit vector, detection & dispatching of LoongArch\n\nDNN module patches:\n\nExperimental transformers support\n\n#24476 ONNX Attention layer support\n\n#24037 ONNX Einsum layer support\n\n#23987 OpenVINO backend for INT8 models\n\n#24092 ONNX Gather Elements layer\n\n#24378 ONNX InstanceNorm layer\n\n#24295 better support of ONNX Expand layer with cv::broadcast\n\n#24463 #24577 #24483 Improved DNN graph fusion with shared nodes and commutative operations\n\n#23897 #24694 #24509 New fastGEMM implementation and several layers on top of it\n\n#23654 Winograd fp16 optimizations on ARM\n\nTests and multiple fixes for Yolo family models support\n\nNew layers support and bug fixes in CUDA backend: GEMM, Gelu, Add\n\n#24462 CANN backend: bug fix, support HardSwish, LayerNormalization and InstanceNormalization\n\n#24552 LayerNormalization: support OpenVINO, OpenCL and CUDA backend.\n\nG-API module:\n\nIntel® OpenVINO™ DL inference backend:\n\n#24584 Introduced \"inferenence only\" (\"benchmark\") mode in the OV2.0 backend.\n\n#24658 Fixed model layout setting issue in the OV2.0 backend.\n\n#24615 Fixed/relaxed various asserts in the OV2.0 backend.\n\nMicrosoft® ONNX Runtime DL inference backend:\n\n#24024 Introduced OpenVINO™ execution provider (EP) support for the ONNX RT DL backend.\n\n#24045 #24060 Introduced Microsoft® DirectML execution provider (EP) support for the ONNX RT DL backend.\n\n#24059 Introduced NVIDIA® CUDA® and TensorRT execution provider (EP) support for the ONNX RT DL backend.\n\n#24068 Introduced Apple® CoreML execution provider (EP) support for the ONNX RT DL backend.\n\nCore and image processing functionality:\n\n#24324 #24371 Fluid kernels were rewritten to new universal intrinsics. Thanks for this contribution!\n\nStreaming and video functionality:\n\n#24178 Introduced a QueueSource: an alternative way to manually push input frames to the G-API pipeline in the streaming mode.\n\n#24224 Introduced VAS Object Tracker (OT) for the various video analytics scenarios.\n\nPython bindings:\n\n#24576 Exposed VAS OT in G-API Python bindings.\n\nOther changes and fixes:\n\n#24160 Updated ADE (the G-API's graph library) to the latest version.\n\n#23904 #23109 #24434 Various code clean-ups and warning fixes.\n\nObjdetect module:\n\n#24299 Implemented own QR code decoder as replacement for QUIRC library\n\n#24364 Bug fixes in QR code encoder version estimation\n\n#24355 More accurate Aruco marker corner refinement with dynamic window\n\n#24479 Fixed contour filtering in ArUco\n\n#24598 QR code detection sample for Android\n\nMultiple local bug fixes and documentation update for Aruco makers, Charuco boards and QR codes.\n\nVideo:\n\n#24201 Google Summer of Code: added a new object tracking API TrackerVit for a vision transformer-based VitTrack. This work is done by LIU Pengyu.\n\nVideoIO:\n\n#24363 videoio: Add raw encoded video stream encapsulation to cv::VideoWriter with CAP_FFMPEG\n\n#24243 Fix GStreamer backend with manual pipelines.\n\nCalibration module:\n\nMultiple fixes and improvements chess board calibration rig detector.\n\n#23025 calibrateCamera throws exception, if calibration system is underconstrained.\n\n#24482 Fixed bug in findEssentialMat with USAC\n\n#24527 Fixed out-of-image access in cv::cornerSubPix\n\n#23607 Fixed crash in ap3p\n\n#24035 Fixed stereoRectify image boundaries\n\n#24211 Fixed \"use after free\" issue in essential_solver.cpp\n\nPython Bindings:\n\n#24023, #24022, #23910 Added type stub generation for missed types and manually wrapped types.\n\n#24026 Added read-only flag handling for Numpy arrays.\n\n#24028 Fixed exception handling and bindings for in module.\n\n#23958 Improved error messages in Numpy array type handling.\n\n#24468 Fixed constructors documentation in Python.\n\nAndroid:\n\nNew Android Archive Package (AAR) distrubuted with Maven Central\n\nFinally removed API for OpenCV manager. OpenCVLoader.initLocal() should be used to initialize OpenCV.\n\nNew Android samples: QR code detector, video IO sample. DNN and Face Detector samples refresh.\n\nSwitch to Gradle 7.6.3, modern Android tools.\n\nPlatforms and hardware Support:\n\n#23021 Experimental CUDA support as first class language in CMake\n\n#24136 Added experimental support for Apple VisionOS platform\n\n#24666 Add support Orbbec Gemini2 and Gemini2 XL camera\n\n#24098 Fix fullscreen behavior on macOS\n\nOther:\n\nTBD\n\nOpenCV Summer of Code: semi-automated refactoring across multiple pull requests by HAN Liutong made our CPU-optimized code compatible with SIMD with variable vector length (RISC-V RVV)\n\ncontributors\n\ngit shortlog --no-merges -ns 4.8.1..4.9.0 56 Alexander Smorkalov 31 Dmitry Kurtaev 20 Vincent Rabaud 20 Yuantao Feng 17 Maksim Shabunin 14 Vadim Levin 13 Alexander Alekhin 11 Kumataro 10 Maxim Smolskiy 9 Alex 8 cudawarped 7 Anatoliy Talamanov 7 HAN Liutong 7 Letu Ren 7 alexlyulkov 6 Abduragim Shtanchaev 6 Alexander Lyulkov 6 Liutong HAN 6 Wanli 6 Yuriy Chernyshov 5 Rostislav Vasilikhin 5 Tomoaki Teshima 4 Alexander Panov 3 Avasam 3 Mihir Patil 3 Sean McBride 3 Wang Kai 3 fengyuentau 3 unknown 2 Alexey Smirnov 2 Anastasiya Pronina 2 CSBVision 2 Giles Payne 2 JUBIN CHHEDA 2 Laurent Berger 2 Maksym Ivashechkin 2 Vadim Pisarevsky 2 autoantwort 2 thewoz 1 Alessandro de Oliveira Faria (A.K.A.CABELO) 1 Amir Hassan 1 Aser Atawya 1 Berke 1 Björn Böken 1 CNClareChen 1 COOLIRON2311 1 Chia-Hsiang Tsai 1 Chris Lee 1 Clement Courbet 1 Csaba Kertész 1 DeePingXian 1 Dhanwanth1803 1 Dmitry Matveev 1 Emmanuel Ferdman 1 FlyinTeller 1 Ginkgo 1 Hao Chen 1 Ivashechkin, Maxim (PG/R - Comp Sci & Elec Eng) 1 Jeremy Lyda 1 Kirin Chu 1 Kuan-Wei Chiu 1 Marek Kochanczyk 1 MuZihao 1 Peter Johnson 1 Phil Nelson 1 Philip Allgaier 1 Philipp Schrader 1 SaltFish-T 1 Sam James 1 Samuel Thibault 1 Shubh Raheja 1 Stanley Mwangi 1 Stefan Dragnev 1 Stefan Isak 1 Sérgio M. Basto 1 Yusuke Kameda 1 Zhang Na 1 Zihao Mu 1 alexander-varjo 1 andrewerf 1 ashadrina 1 beanjoy 1 casualwinds 1 chacha21 1 chaebkimm 1 definitelyuncertain 1 eplankin 1 firebladed 1 headshog 1 huafengchun 1 iarspider 1 jason_w 1 jvuillaumier 1 kallaballa 1 laolaolulu 1 lpylpy0514 1 richard28039 1 skycat8 1 zihaomu 1 zixgo 1 zzuliys 1 不鱼儿 1 刘佩其\n\nSeptember, 2023\n\nSecurity release.\n\nChanges:\n\nWebP security update for CVE-2023-4863\n\nDepthwise convolution 5x5 performance regression fix (#23941).\n\nJune, 2023\n\nSummer update for OpenCV 4.x has been released.\n\nDNN module patches:\n\n#23161, #23409 TFLite models support, including int8 quantized models.\n\n#23604 Enabled DNN module build without Protobuf dependency.\n\nImproved layers => supported more models:\n\nONNX: #23047 Layer normalization, #23219 GELU and #23655 QLinearSoftmax.\n\nFixes in CANN backend:\n\n#23319 support ONNX Split, Slice, Clip (Relu6) and Conv with auto_pad.\n\n#23401 support ONNX Sub, PRelu, ConvTranspose.\n\n#23613 Reduce Refactor for robustness and potential follow-up improvements.\n\n#23491 Fixes for Segment Anything Model by Meta.\n\nFixes in nary element wise layer about broadcast:\n\n#23557 Fixes in CPU.\n\n#23528 and #23560 Fixes in CUDA backend.\n\nFurther increased DNN speed on ARM and X86 by improving convolution, covering 1D and 3D cases, supporting convolution+element-wise op fusion.\n\nAdded full FP16 computation branch on ARMv8 platform, 1.5x faster than FP32 #22275(FP16 Winograd is still pending).\n\n#23349 Vulkan backend refactor for better performance and robustness. It runs 4X faster than before.\n\n#22750 Added API blobFromImageParam to build network inputs with pre-processings.\n\n#22957 Modern OpenVINO support.\n\nG-API module:\n\nIntel® OpenVINO™ inference backend:\n\n#23668 #23786 Streamlined preprocessing in OpenVINO Inference Engine (ie) API 1.0 backend. Note: this backend will be deprecated after OpenVINO removes the API 1.0 support in its subsequent releases.\n\n#23796 Aligned OpenVINO IE API 1.0 backend with the latest OpenVINO 2023.0 (as some features were removed there).\n\n#23595 Introduced a brand new OpenVINO API 2.0 backend.\n\n#23799 Implemented the required inference operations for the OpenVINO API 2.0 backend.\n\nMicrosoft® ONNX Runtime inference backend:\n\n#23597 Updated G-API ONNX RT backend to support ONNX RT version 1.14.1. Now it is the minimum version required to build this backend.\n\nPython bindings:\n\n#23597 Exposed varions normalization options for ONNX RT backend in Python bindings.\n\n#23597 Exposed Fluid kernels and kernel package manipulation functions (combine()) in Python.\n\n#23597 Fixed issues in Stateful Python kernel state handling; also fixed various issues in Python tests.\n\n#23843 Fixed issue with opaque kernel output information handling which broke Python custom kernels.\n\nSamples:\n\n#23766 Introduced a new Segmentation demo with desync() to enable slow-running networks in the real-time.\n\n#23211 Updated stats calculation in the G-API-based pipeline modelling tool.\n\nOther changes and fixes:\n\n#22471 Fixed tolerance in Fluid resize tests to avoid issues on ARM.\n\n#21797 Fluid backend: extended Merge3 kernel with more supported data types.\n\n#23448 Fixed standalone mode compilation issues.\n\nObjdetect module:\n\n#23020 FaceDetectorYN upgrade for better performance, accuracy and facial landmarks support.\n\n#23264 New QR code detection algorithm based on ArUco code.\n\n#23666 Bar code detector and decoder moved from Contrib to main repository.\n\n#23758 Introduced common API for all graphical codes like bar codes and QR codes.\n\n#23153 Added flag for legacy pre-4.6.0 ChAruco boards support.\n\nMultiple bug fixes and improvements in QR code detection and decoding pipelines.\n\nMultiple bug fixes and improvements in ArUco based pipelines.\n\nCalibration module:\n\n#23078 USAC framework improvements.\n\n#23025 Fixed stddev estimation in camera calibration pipelines.\n\n#23305 Fixed incorrect pixel grid generation in icvGetRectangles that improves accuracy of getOptimalNewCameraMatrix, stereoRectify and some other calibration functions.\n\nCharuco board support in patterns generator, interactive calibration tool and calibration samples.\n\nImage processing module:\n\n#23210, #23388 Various fixes in line segments detector.\n\n#23634 Fixed even input dimensions for INTER_NEAREST_EXACT in resize.\n\n#21959 Optimise local cost computation in IntelligentScissorsMB::buildMap.\n\nKeep inliers for linear remap with BORDER_TRANSPARENT #23754\n\n#22798 Fix distransform to work with large images.\n\nFeatures2d module:\n\n#23124 SIFT accuracy improvements.\n\nCore module:\n\n#13879 Added REDUCE_SUM2 option to cv::reduce.\n\n#22947 Introduced cv::hasNonZero function.\n\n#23443 Update IPP binaries update to version 20230330.\n\nImproved RISC-V RVV vector extensions support.\n\n#23383 Support RVV v0.11 intrinsics available in LLVM 16 and GCC 13\n\n#23246 Support build with T-Head RISC-V toolchain (RVV 0.7.1 and 1.0)\n\nSeveral OpenCL vendor and version handling improvements.\n\nMultimedia:\n\n#23596 Added AVIF support through libavif.\n\n#23237 Orbbec Femto Mega cameras support.\n\n#23172 HEVC/H265 support in VideoWriter with MS Media Foundation backend.\n\n#23692 Fixed FPS computation on some videos for FFmpeg backend.\n\n#23300 Added support for VideoCapture CAP_PROP_AUTO_WB and CV_CAP_PROP_WHITE_BALANCE_BLUE_U for DShow backend.\n\n#23460, #23469 Fixes OBS Virtual Camera capture.\n\n#23433 CV_32S encoding support with tiff.\n\n#3486, #3453 More strict decoder checks and dynamic resolution support in cudacodec module (opencv_contrib).\n\n#3485 Added basic VideoCapture properties support to cudacodec module (opencv_conrib).\n\nPython Bindings:\n\n#20370 Python typing stubs.\n\n#23350 Fix reference counting errors in registerNewType.\n\n#23399, #23436, #23138 Fixed ChAruco and diamond boards detector bindings.\n\n#23371 Added bindings to allow GpuMat and Stream objects to be initialized from memory initialized in other libraries\n\n#23691 np.float16 support.\n\nPython bindings for RotatedRect, CV_MAKETYPE, CV_8UC(n).\n\nJavaScript bindings:\n\n#23344 Added possibility for disabling inlining wasm in opencv.js\n\nExtended JS bindings for Aruco, Charuco, QR codes and bar codes.\n\nPlatforms:\n\n#21736 Android: don't require deprecated tools.\n\n#23768 iOS: Fixed framework build issues with CMake 3.25.1+.\n\nOther:\n\nSeveral critical issue fixes in wechat_qrcode module (opencv_contrib)\n\nopencv (112 contributors)\n\ngit shortlog --no-merges -ns 4.7.0..4.8.0 32 Alexander Smorkalov 18 Dmitry Kurtaev 14 zihaomu 13 Maksim Shabunin 12 Alexander Alekhin 11 Yuantao Feng 10 Vadim Levin 8 Alex 8 Anatoliy Talamanov 7 Abduragim Shtanchaev 7 unknown 6 TolyaTalamanov 6 Vladimir Ponomarev 6 Zihao Mu 6 cudawarped 5 Sean McBride 5 wanli 4 Christine Poerschke 3 Alexander Panov 3 Dmitry Matveev 3 Giles Payne 3 Kumataro 3 Pierre Chatelier 3 Rostislav Vasilikhin 3 Wang Kai 3 fengyuentau 3 keith siilats 3 vovka643 2 Anna Khakimova 2 Anna Petrovicheva 2 CSBVision 2 Corentin Noël 2 Genci Berisha 2 Labib Asari 2 Laurent Berger 2 Stefan Becker 2 Tomoaki Teshima 2 TuNanTang 2 Vadim Pisarevsky 2 Vincent Rabaud 2 Yannis Guyon 2 gottagofaster236 2 smeng9 1 Abduragim 1 Akshat Chauhan 1 Alessandro de Oliveira Faria (A.K.A. CABELO) 1 Alexander Duda 1 Alexey Shtern 1 Avasam 1 Bhavit Patel 1 Christian Henkel 1 Christoph Rackwitz 1 Damiano Falcioni 1 Duong Dac 1 Fabrizio Di Vittorio 1 Funatomi Takuya 1 Gabriel Nascarella 1 Gaotianhong 1 HAN Liutong 1 Ibai Gorordo 1 Ihsan Soydemir 1 Jaakko Rantala 1 Jesus Noland 1 Jindřich Šaršon 1 Lilit Grigoryan 1 Lilo Huang 1 Lukas Weber 1 Maksym Ivashechkin 1 Matthias Möller 1 Maxim Smolskiy 1 Milan van Wouden 1 Olivier Hotel 1 Onuralp Sezer 1 Paul Kim (김형준) 1 Peter Rekdal Khan-Sunde 1 Prasanth R 1 Rahul Noronha 1 Raj Kachhadiya 1 Sajjad Ali 1 Sergey Petrenko 1 Simon Lynen 1 SoY Szala 1 Spike 1 Tinson Lai 1 Ulvi YELEN 1 Vaclav Vavra 1 WU Jia 1 Wwupup 1 Xxfore 1 Yang Chao 1 Zero-nnkn 1 Zero2key 1 Zhi-Qiang Zhou 1 Zwyx 1 anders-nylander 1 anderskiaer 1 captain-n3m0 1 dizcza 1 eplankin 1 hzcyf 1 inayd 1 ippei.i 1 kallaballa 1 lamm45 1 n0099 1 souch 1 tantei3 1 thewoz 1 tingbo.liao 1 tkram01 1 triple Mu 1 whuaegeansea\n\nopencv_contrib (18 contributors)\n\ngit shortlog --no-merges -ns 4.7.0..4.8.0 8 cudawarped 7 Alexander Smorkalov 4 Maksim Shabunin 3 Mariya Sinitsina 2 Nano 2 Tomoaki Teshima 2 vovka643 1 747 1 Alex 1 Dmitry Kurtaev 1 Kumataro 1 Mat&I 1 Maxim Milashchenko 1 Rostislav Vasilikhin 1 Sergei Shutov 1 SpaceIm 1 smeng9 1 unknown\n\nJune, 2023\n\nOpenCV 3.4.20 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.8.0. OpenCV 3.4.20 is last official release in 3.4 branch.\n\nDecember, 2022\n\nNew Year's update for OpenCV 4.x has been released.\n\nDNN module patches:\n\nImproved layers / supported more models:\n\nScatter and ScatterND #22529, Tile #22809\n\nFixes in Slice (support negative step #22898)\n\nSupport some reduce layers of ONNX #21601\n\nSupport for Tile layer #22809\n\nAdded CANN backend support #22634. Link to the manual: https://github.com/opencv/opencv/wiki/Huawei-CANN-Backend.\n\nAdded bacthed NMS for multi-class object detection #22857\n\nAccelerating convolution, especially for ARM CPU. #21910 and #22905\n\nWinograd's convolution optimization\n\nNanotrack v2 tracker based on neural networks.\n\nG-API module:\n\nG-API framework:\n\nSlightly refactored G-API executor class hierarchy for the future extensibility: #22451;\n\nOpenCL backend:\n\nIntroduced zero-copy path from oneVPL surfaces to OpenCL/GPU memory buffers in the OpenCL backend: #22559;\n\nIntel® OpenVINO™ inference backend:\n\nEnabled asynchronous infer requests in the OpenVINO NN backend: #22588.\n\nMedia integration:\n\nAdded tests and samples for oneVPL VAAPI (Linux) backend: #22212;\n\nFixed various issues with oneVPL build on Windows and Linux: #22393, #22456, #22462;\n\nPython bindings:\n\nExposed Stateful Kernels in Python: #22037;\n\nExposed ONNX Runtime NN backend in Python: #22017;\n\nExposed all core and imgproc G-API operations in Python: #22494, #22735;\n\nSamples:\n\nVarious updates to the G-API Pipeline Modelling tool: #22518, #22583;\n\nOther changes and fixes:\n\nUpdated ADE (the core internal graph library) to version 0.1.2a: #22432;\n\nFixed various build warnings: #22935, and issues: #22712;\n\nObjdetect module:\n\nArUco markers and April tags support including ChAruco and diamond boards detection and calibration #22986.\n\nQR code detection and decoding quality imrovement 22695, 22659. Alignment markers support 22891.\n\nBenchmark for QR codes: link.\n\nCore module:\n\nNew universal intrinsics backend for scalable vector instructions. The first scalable implementation for RISC-V RVV 1.0 #22179.\n\nN-dimensional flip #22898\n\nCUDA 12.0 support.\n\nImgproc module:\n\nAdd StackBlur for imgproc #20379\n\nVarious performance optimizations\n\nMultimedia:\n\nFFmpeg 5.x support.\n\nHardware accelerated video codecs support on NVIDIA platforms with modern Video Codec SDK (NVCUVID and NVENCODEAPI).\n\nCV_16UC1 read/write video support with FFmpeg.\n\nOrientation meta support on Mac with native media API.\n\nNew iterator-based API for multi-page image formats.\n\nlibSPNG support for PNG format.\n\nSIMD acceleration for self-built libJPEG-Turbo\n\nH264/H265 support on Android. Multiple fixes for video decoder, endcoder and camera memory layout.\n\nAnd many other contributions!\n\nopencv (109 contributors)\n\ngit shortlog --no-merges -ns 4.6.0..4.7.0 54 Alexander Alekhin 34 Zihao Mu 22 TolyaTalamanov 21 Alexander Smorkalov 18 Andrey Senyaev 16 HAN Liutong 14 fengyuentau 11 cudawarped 10 Vincent Rabaud 9 catree 8 zoom 7 AleksandrPanov 7 Maksim Shabunin 7 SergeyIvanov87 7 ocpalo 6 zihaomu 5 Tomoaki Teshima 4 @lizhiyu3 4 Biswapriyo Nath 4 Christine Poerschke 4 Dan Mašek 4 Dmitry Matveev 4 Giles Payne 4 Markus Heck 4 Stefan Spiss 4 Vadim Levin 4 Yuantao Feng 4 rogday 3 Anatoliy Talamanov 3 Berke 3 Dan 3 Dmitry Kurtaev 3 Matej Jeglic 3 Pavel Rojtberg 3 Rong Mantle Bao 3 Sergei Shutov 3 Smirnov Egor 3 Suleyman TURKMEN 2 Alex 2 Alexander Panov 2 Amir Hassan 2 Ed J 2 Eran Geva 2 Juha Reunanen 2 Kumataro 2 Rostislav Vasilikhin 2 Sean McBride 2 Stefan Dragnev 2 dan 2 fwcd 2 hzc 2 hzcyf 2 kallaballa 2 lamm45 2 xiong-jie-y 1 AlejandroSilvestri 1 Alessandro de Oliveira Faria (A.K.A. CABELO) 1 Alexey Smirnov 1 Andrew Chinery 1 CSBVision 1 ClayXrex 1 Daisuke Mizobuchi 1 David Geldreich 1 Dmtiry Matveev 1 Egor Smirnov 1 Hao Chen 1 Harvey 1 Harvey Huang 1 Hashem Zavvari 1 Henrik Dobbe Flemmen 1 Hyunggi Chang 1 Jochen Sprickerhof 1 Joel Winarske 1 JopKnoppers 1 Kian Eliasi 1 Kôtaro Mukai 1 Long Nguyen 1 Lucas Yang 1 Lukas Weber 1 MENG Yu 1 Marco Feuerstein 1 Mateusz Tabaka 1 Maxim Milashchenko 1 Michael Gruner 1 Michael Klatis 1 Parthiban Marimuthu 1 Petr Glotov 1 Philipp Hutterer 1 Povilas Kanapickas 1 Ramiro Silveyra d'Avila 1 Tomasz Ożański 1 Vadim Pisarevsky 1 Voron 1 Wanli 1 Yulv-git 1 Zhuo Zhang 1 alessandro faria 1 anton 1 augustinmanecy 1 gbowser3@gmail.com 1 heavyrain-lzy 1 lgx 1 robin 1 scorpiozj 1 scottchou007 1 su77ungr 1 wxsheng 1 xiang.zhang 1 赵楚洋\n\nopencv_contrib (31 contributors)\n\ngit shortlog --no-merges -ns 4.6.0..4.7.0 44 AleksandrPanov 17 James Bowley 15 Sergei Shutov 5 Alexander Alekhin 5 Your Name 4 Yannis Guyon 4 sitong lian 3 Alexander Smorkalov 3 Andrey Senyaev 2 Aleksandr Panov 2 Biswapriyo Nath 2 Kevin Christensen 2 Suleyman TURKMEN 2 Vincent Rabaud 2 fengyuentau 1 Augustin Manecy 1 Benjamin Buch 1 David Geldreich 1 Gary Allen 1 Giles Payne 1 Iago Suárez 1 Jochen Sprickerhof 1 Kishor 1 Kumataro 1 Mathijs de Groot 1 Pavel Procopiuc 1 Ping Wu 1 Tomoaki Teshima 1 Zhanbo Huang 1 huangqinjin 1 jmackay2\n\nDecember, 2022\n\nOpenCV 3.4.19 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.7.0.\n\nLong-lived OpenCV 3.x release series is here since 2015. We are going to reduce support of 3.x branch in the future to move forward to OpenCV 5.0.\n\nJune, 2022\n\nThe summer update for OpenCV 4.x has been released.\n\nCredits:\n\nOpenCV China team for the new hardware for CI Build Farm.\n\n@alalek, @asenyaev, @fengyuentau for great work on OpenCV CI migration to Github Actions\n\nHighlights of this release:\n\nOpenCV project infrastructure migrating on GitHub Actions workflows for CI and release purposes\n\nAdded support for GCC 12, Clang 15\n\nAdded support for FFmpeg 5.0\n\nDNN module patches:\n\nImproved layers / activations / supported more models:\n\nLSTM (+CUDA), resize (+ONNX13), Sign, Shrink, Reciprocal, depth2space, space2depth\n\nfixes in Reduce, Slice, Expand\n\nDisabled floating-point denormals processing #21521\n\nChanged layer names in ONNX importer to support \"output\" entities properly\n\nAdded TIM-VX NPU backend support: https://github.com/opencv/opencv/wiki/TIM-VX-Backend-For-Running-OpenCV-On-NPU\n\nAdded Softmax parameter to ClassificationModel\n\nAdded audio speech recognition sample (C++) #21458\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nadded initial support for OpenVINO 2022.1 release\n\nremoved support of legacy API (dropped since 2020.3)\n\nG-API module:\n\nG-API framework:\n\nIntroduced a Grayscale image format support for cv::MediaFrame: #21511;\n\nEnabeled .reshape() support in the CPU backend: #21669;\n\nFixed possible hang in streaming execution mode with constant inputs: #21567;\n\nIntroduced proper error/exception propagation in the asynchronous streaming execution mode: #21660;\n\nFixed new stream event handling: #21731.\n\nFluid backend:\n\nFixed horizontal pass in the Resize kernel, fixed Valgrind issues: #21144;\n\nExtended Resize kernel with F32 version: #21678, added AVX: #21728.\n\nEnabled dynamic dispatch for Split4 kernel: #21520;\n\nEnabled dynamic dispatch for Merge3 kernel: #21529;\n\nAdded a SIMD version for DivC kernel: #21474;\n\nAdded a SIMD version for DivRC kernel: #21530;\n\nEnabled dynamic dispatch for Add kernel: #21686;\n\nEnabled dynamic dispatch for Sub kernel: #21746;\n\nAdded a SIMD version for ConvertTo kernel: #21777;\n\nFixed kernel matrix size for Sobel kernel: #21613.\n\nOpenCL backend:\n\nIntel® OpenVINO™ inference backend:\n\nFixed NV12 format support for remote memory when OpenVINO™ remote context is used: #21424.\n\nImplemented correct error handling in the backend: #21579.\n\nFixed ngraph warnings #21362.\n\nOpenCV AI Kit backend:\n\nIntroduced a new backend to program OpenCV AI Kit boards via G-API. Currently the backend is in experimental state, but allows to build Camera+NN pipeline and supports heterogeneity (mixing with host-side code): #20785, #21504.\n\nMedia integration:\n\nEnabled GPU inference with oneVPL and DirectX11 on Windows in Intel® OpenVINO™ inference backend: #21232, #21618, #21658, #21687, #21688. Now GPU textures decoded by oneVPL decoder can be preprocessed and inferred on GPU with no extra host processing.\n\nEnabled oneVPL support on Linux: #21883.\n\nExtended GStreamer pipeline source with Grayscale image format support: #21560.\n\nPython bindings:\n\nExposed GStreamer pipeline source in Python bindings: #20832.\n\nFixed Python bindings for CudaBufferPool, cudacodec and cudastereo modules in OpenCV Contrib.\n\nSamples:\n\nIntroduced a pipeline modelling tool for cascaded model benchmarking: #21477, #21636, #21719. The tool supports a declarative YAML-based config to describe pipelines with simulated pre-/post-processing. The tool collects and reports latency and throughput information for the modelled pipeline.\n\nOther changes and fixes:\n\nMoved GKernelPackage into cv:: namespace by default, its cv::gapi:: alias remain for compatibility: #21318;\n\nMoved Resize kernel from core to imgproc kernel packages for CPU, OpenCL, and Fluid backends: #21157. Also moved tests appropriately: #21475;\n\nAvoided sporadic test failures in DivC: #21626;\n\nFixed 1D Mat handling in the framework: #21782;\n\nReduced the number of G-API generated accuracy tests: #21909.\n\nAnd many other contributions, including:\n\nSupport downloading 3rdparty resources from Gitcode & Gitlab-style mirrors #21531\n\nAdded NEON support in builds for Windows on ARM #21630\n\nAdd n-dimensional transpose to core #21703\n\n(opencv_contrib) Add Connected Components Labeling in CUDA #3153\n\nopencv (92 contributors)\n\ngit shortlog --no-merges -ns 4.5.5..4.6.0 58 Alexander Alekhin 19 Andrey Senyaev 11 Suleyman TURKMEN 10 Anna Khakimova 10 Maksim Shabunin 9 rogday 8 Anatoliy Talamanov 7 Vadim Levin 7 Vincent Rabaud 6 Aleksei Trutnev 6 Sergey Ivanov 4 Victor 4 Yuantao Feng 4 Zihao Mu 3 Dmitry Budnikov 3 Kataev Victor 3 Kumataro 3 Pierre Chatelier 3 Trutnev Aleksei 3 berak 3 cudawarped 3 fengyuentau 2 Alexander Smorkalov 2 Alexey Smirnov 2 Christine Poerschke 2 HAN Liutong 2 Harvey 2 Lukas-Alexander Weber 2 OpenCV Developers 2 Smirnov Egor 2 Stefano Allegretti 2 Tsukasa Sugiura 2 Yulv-git 2 Yuriy Chernyshov 2 lamm45 2 luz paz 2 pkubaj 1 Alexander Conner 1 Alexander Panov 1 Anastasiya(Asya) Pronina 1 Artem Saratovtsev 1 Chen Jun 1 Christoph Rackwitz 1 David Fan 1 Ed Martin 1 Egor Smirnov 1 Giles Payne 1 Greg Fiumara 1 Guillaume Gigaud 1 Ilya Churaev 1 Ilya Lavrenov 1 Jan Polák 1 Jeremy Ephron 1 Joe Howse 1 Joona Heikkilä 1 Juan López Rubio 1 Julian Szigethy 1 KaurkerDevourer 1 LaurentBerger 1 Lukas Yoder 1 Manolis Lourakis 1 Martin Tůma 1 Maxim Pashchenkov 1 Namgoo Lee 1 Oguzhan Guclu 1 Pavel Rojtberg 1 Phil Ruffwind 1 Qingnan Duan 1 Ruslan Garnov 1 Sean McBride 1 Sergey 1 Sinitsina Maria 1 Stefan Brüns 1 Stefan Dragnev 1 Tatsuro Shibamura 1 Yash Singhal 1 Yusuke Kameda 1 Zach Lowry 1 Zhuo Zhang 1 dbudnikov 1 eplankin 1 h6197627 1 hellodoge 1 huangziqing 1 luzpaz 1 masa-iwm 1 mohawk2 1 shengwenxue 1 sivanov-work 1 xiong-jie-y 1 xiongzhen 1 zihaomu\n\nopencv_contrib (23 contributors)\n\ngit shortlog --no-merges -ns 4.5.5..4.6.0 11 cudawarped 6 Alexander Panov 5 Suleyman TURKMEN 4 Andrey Senyaev 3 AleksandrPanov 3 Alexander Alekhin 2 Pavel Rojtberg 2 Vincent Rabaud 1 Aditya Mehrotra 1 Aleksandr Panov 1 Alexander Smorkalov 1 Dan 1 Dan Oprea 1 Matti Jukola 1 Mitul Vekariya 1 Namgoo Lee 1 Ninh Huynh 1 Pranay Pandit 1 Simon Traub 1 Stefano Allegretti 1 huangziqing 1 leatherwang 1 مهدي شينون (Mehdi Chinoune)\n\nJune, 2022\n\nOpenCV 3.4.18 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.6.0.\n\nLong-lived OpenCV 3.x release series is here since 2015. We are going to reduce support of 3.x branch in the future to move forward to OpenCV 5.0.\n\nDecember, 2021\n\nNew Year's update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\nAudio support as part of VideoCapture API: MSMF #19721 + GStreamer #21264\n\nUpdated SOVERSION handling rules: #21178\n\nDNN module patches:\n\nAdded tests to cover ONNX conformance test suite: #21088\n\nImproved layers / activations / supported more models\n\nUpgraded builtin protobuf from 3.5.2 to 3.19.1\n\nMore optimizations for RISC-V platform\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nadded support for OpenVINO 2021.4.2 LTS release\n\nG-API module:\n\nG-API framework:\n\nFixed issue with accessing 1D data from cv::RMat: #21103;\n\nRestricted passing the G-API types to graph inputs/outputs for execution: #21041;\n\nVarious fixes in G-API Doxygen reference: #20924;\n\nRenamed various internal structures for consistency #20836 #21040;\n\nFluid backend:\n\nIntroduced a better vectorized version of Resize: #20664.\n\nAdded vectorized version of Multiply kernel: #21024;\n\nAdded vectorized version of Divide kernel: #20914;\n\nAdded vectorized version of AddC kernel: #21119;\n\nAdded vectorized version of SubC kernel: #21158;\n\nAdded vectorized version of MulC kernel: #21177;\n\nAdded vectorized version of SubRC kernel: #21231;\n\nEnabled SIMD dispatching for AbsDiffC: #21204;\n\nOpenCL backend:\n\nFixed sporadic test failures in Multiply kernel running on GPU: #21205;\n\nIntel® OpenVINO™ inference backend:\n\nExtended ie::Params to support static batch size as input to inference: #20856;\n\nEnabled 2D input tensor support in IE backend: #20925;\n\nFixed various issues with imported (pre-compiled) networks: #20918;\n\nMedia integration:\n\nIntroduced a GStreamer-based pipeline source for G-API: #20709;\n\nCompleted the integration of Intel® oneVPL as a pipeline source for G-API #20773 with device selection #20738, asynchronous execution #20901, intial demux support #21022, and GPU-side memory allocation via DirectX 11 #21049.\n\nSamples:\n\nReplaced custom kernels with now-standard G-API operations in several samples #21106;\n\nMoved API snippets from G-API samples to a dedicated place #20857;\n\nOther changes and fixes:\n\nFixed various static analysis issues for OpenVINO 2021.4 release: #21083 and #21212;\n\nFixed various build warnings introduced after OpenVINO update: #20937;\n\nContinued clean-up in the G-API test suite on GTest macros #20922 and test data #20995;\n\nAdded custom accuracy comparison functions to Fluid performance tests: #21150.\n\nAnd many other contributions:\n\nAdded QRcode encoder: #17889\n\nGSoC - OpenCV.js: Accelerate OpenCV.js DNN via WebNN: #20406\n\nAdd conventional Bayer naming: #20970\n\n(opencv_contrib) Add Radon transform function to ximgproc: #3090\n\n(opencv_contrib) New superpixel algorithm (F-DBSCAN): #3093\n\nCreated Stitching Tool: #21020\n\nImprove CCL with new algorithms and tests: #21275\n\n(opencv_contrib) Update ArUco tutorial: #3126\n\nopencv (77 contributors)\n\ngit shortlog --no-merges -ns 4.5.4..4.5.5 80 Alexander Alekhin 14 Smirnov Egor 8 Anna Khakimova 8 Sergey Ivanov 6 Maksim Shabunin 6 Trutnev Aleksei 6 Vincent Rabaud 6 rogday 5 Christian Clauss 3 APrigarina 3 Anatoliy Talamanov 3 Harvey 3 Maxim Pashchenkov 3 MaximMilashchenko 2 AleksandrPanov 2 Andrey Senyaev 2 Gruhuang 2 HAN Liutong 2 Orest Chura 2 Sinitsina Maria 2 UncleLLD 2 Zhuo Zhang 2 alessandro faria 2 nickjackolson 1 ABHINAV JHA 1 Anastasiya Pronina 1 Anastasiya(Asya) Pronina 1 Andrew Ryrie 1 Chengrui Wang 1 Fabrice Fontaine 1 Hanxi Guo 1 Ihsan Soydemir 1 Jonathan Dönszelmann 1 Jong Sin Kim 1 Julie Bareeva 1 Lukas Weber 1 Lukas-Alexander Weber 1 Maxim Milashchenko 1 Michael Davis 1 Michel Promonet 1 Nicholas Ho 1 Nikolaos Pappas 1 Noah Stier 1 OrestChura 1 Patrick Whalen 1 Piotr Kubaj 1 Polina Smolnikova 1 Qiushi Zheng 1 Rostislav Vasilikhin 1 Ruan 1 SegaraRai 1 Sergiu Deitsch 1 ShuangLiu1992 1 Simon Wilson 1 Souriya Trinh 1 Stanislaw Halik 1 Stefano Allegretti 1 Suleyman TURKMEN 1 Supernovae 1 Tejas M R 1 Wehzie 1 ZaKiiiiiiiii 1 atrutnev 1 berak 1 catree 1 cpengu 1 cqn2219076254 1 cudawarped 1 dwardor 1 eplankin 1 icestraw 1 jcong 1 shengyu 1 tv3141 1 utibenkei 1 yuki takehara 1 zcx\n\nopencv_contrib (25 contributors)\n\ngit shortlog --no-merges -ns 4.5.4..4.5.5 6 Alexander Smorkalov 4 Suleyman TURKMEN 2 Kumataro 2 Pavel Rojtberg 2 Sergiu Deitsch 1 Alberto Luaces 1 Aleksandr Panov 1 AleksandrPanov 1 Alexander Alekhin 1 Julie Bareeva 1 Noah Stier 1 Onuralp SEZER 1 Pranay 1 Qingnan Duan 1 Rostislav Vasilikhin 1 Saurabh Khanduja 1 Sérgio M. Basto 1 ToFam 1 Tomoaki Teshima 1 TracelessLe 1 Vincent Rabaud 1 Your Name 1 cudawarped 1 scloke 1 クロポ\n\nDecember, 2021\n\nOpenCV 3.4.17 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.5.5.\n\nLong-lived OpenCV 3.x release series is here since 2015. We are going to reduce support of 3.x branch in the future to move forward to OpenCV 5.0.\n\nOctober, 2021\n\nThe fall update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\nGSoC 2021 is over. 11 projects are successful, and most of the results are already merged into OpenCV tree and available in 4.5.4 (in the main repository or in opencv_contrib). Here is the list of merged functionality:\n\n8-bit quantization in DNN Module: #20228 + onnx importer #20535\n\nImproved OpenCV bindings for Julia: opencv_contib#3009\n\nSpeech recognition sample: #20291\n\nOptimizing OpenCV DNN for RISC-V: #20287 + #20521\n\nTutorial for Universal Intrinsics and parallel_for_ for efficient cross-platform algorithm implementation: #20361\n\nDNN module patches:\n\nImproved layers / activations / supported more models:\n\nGRU, CumSum, Max, Min, ExpandDims\n\nFixed convolution with asymmetric padding\n\nFixed Unsqueeze (ONNX opset 13)\n\nFixed several memory access issues in OpenCL kernels\n\nImplement CTC prefix beam search decode for TextRecognitionModel: #20524\n\nAdded SoftNMS implementation: #20813\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nadded support for OpenVINO 2021.4.1 LTS release\n\nadded support for models with non-FP32 outputs or for outputs with 1D layout\n\nG-API module:\n\nG-API framework:\n\nIntroduced generic visitor(s) for the G-API's own implementation of variant<> data structure: #20039.\n\nIntroduced a full-featured graph reshape support for the heterogeneous graphs: #20705.\n\nFixed cv::RMat handling in the regular execution mode: #20593.\n\nFixed cv::RMat and introduced cv::MediaFrame handling with the desync() operation: #20747.\n\nOpenVINO™ Toolkit backend:\n\nIntroduced FP16 data type support in the OpenVINO™ inference backend: #20490.\n\nFixed issues with incorrect precision and preprocessing options set for imported binary network blobs: #20528;\n\nFixed issue with possible extra external resources being held during the inference execution, causing hangs at some platforms (e.g. with GStreamer memory in): #20791.\n\nPython bindings:\n\nExtended OpenVINO™ inference backend parameters in Python with methods to configure constant input layers and the number of asynchronous infer requests: #20508;\n\nAligned the compileStreaming() behavior in Python with the C++ version: #20555;\n\nSerialization:\n\nCovered serialization-related methods with Doxygen documentation: #20163;\n\nAdded serialization support for graph constant data: #20372;\n\nAdded serialization support for the cv::MediaFrame data structure: #20329;\n\nMedia integration:\n\nMerged the first bits of the upcoming oneVPL integration for accelerated Media on Windows;\n\nSamples and demos:\n\nAdded various graph-level optimizations to the MTCNN demo: #20383, #20474;\n\nExtended the Semantic Segmentation demo with new type of networks (unet-camvid-onnx-0001): #20476;\n\nFixed various issues in the Python port of the gaze estimation demo: #20510.\n\nOther changes and fixes:\n\nFixed various issues with ONNX RT inference tests: #20359.\n\nExtended Render fixture with more parameters: #20771.\n\nAnd many other contributions:\n\nAdd DNN-based face detection and face recognition into modules/objdetect: #20422\n\nRestore LineSegmentDetector (LSD) implementation\n\nPython: cv.Mat wrapper over numpy.ndarray is introduced to handle issues with passing of 3D arrays into C++ algorithms: #19091\n\nPython: support OpenCV extension with pure Python modules: #20611\n\nDebugging: Add gdb pretty printer for cv::Mat: #20547\n\nAdd Quicklook for Mat on iOS and macOS: #20457\n\nAdd generation of new type of radon checkerboard: #20735\n\nopencv (76 contributors)\n\ngit shortlog --no-merges -ns 4.5.3..4.5.4 53 Alexander Alekhin 10 Smirnov Egor 9 Anatoliy Talamanov 8 rogday 7 Sergey Ivanov 6 AleksandrPanov 6 Suleyman TURKMEN 5 Alexander Panov 5 Dale Phurrough 5 Giles Payne 5 SamFC10 4 Julia Bareeva 4 Vadim Levin 3 Dmitry Budnikov 3 HAN Liutong 2 Alexander Smorkalov 2 Alexey Smirnov 2 Francesco Petrogalli 2 Iyad Ahmed 2 Jonas Vautherin 2 Maxim Pashchenkov 2 Stanislaw Halik 2 Vincent Rabaud 2 WJJ1995 2 YashasSamaga 2 Zhuo Zhang 2 Zihao Mu 2 berak 2 thezane 1 Abhinav Sharma 1 Amir Tulegenov 1 Cavendish-Koo 1 César Gouveia 1 Daniel Playfair Cal 1 Dmitriy Fishman 1 Duong Dac 1 Hamdi Sahloul 1 Ilya Lavrenov 1 JIANG Yichen 1 Jannik Bamberger 1 Jebastin Nadar 1 Lukas-Alexander Weber 1 Mahendra Kumar 1 Nicholas Ho 1 Nicolai Behmann 1 Oliver Kuckertz 1 Pablo Romero 1 Parsa 1 Rohit Sutradhar 1 Roland Meertens 1 Ruben Gonzalez 1 Ruslan Garnov 1 Saikat Nanda 1 Saša Bajtl 1 Scott Noyes 1 Shivanshu Tyagi 1 Shreyas Taware 1 Smirnov Alexey 1 Tomoaki Teshima 1 Tsukasa Sugiura 1 Xerxes Battiwalla 1 Xiaoxiao Tian 1 Xinguang Bian 1 Yaniv Hollander 1 Yuantao Feng 1 Zhang Yin 1 ZhangYin 1 easonycwang 1 fortemSteve 1 keroiber 1 kikaxa 1 mikael 1 shengyu 1 utibenkei 1 xhawk18 1 zyp\n\nopencv_contrib (16 contributors)\n\ngit shortlog --no-merges -ns 4.5.3..4.5.4 4 Suleyman TURKMEN 2 Alexander Alekhin 2 Archit Rungta 2 Yoshiaki Sato 2 cudawarped 1 Andreas Franek 1 Artem Saratovtsev 1 Gokberk Gul 1 Paul Jurczak 1 Pavel Rojtberg 1 Shahnawaz Ahmed 1 Stephen McDowell 1 Tomoaki Teshima 1 Vadim Levin 1 WN90 1 kuloPo\n\nOctober, 2021\n\nOpenCV 3.4.16 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.5.4.\n\nLong-lived OpenCV 3.x release series is here since 2015. We are going to reduce support of 3.x branch in the future to move forward to OpenCV 5.0.\n\nJuly, 2021\n\nSummer update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\nhighgui: added support for UI backends. Special OpenCV builds allow to select UI backend and/or load it dynamically through plugins.\n\nvideoio: supported UMat/OpenCL hardware-accelerated video decoding/encoding through FFmpeg backend.\n\nvideo: DaSiamRPN tracker is implemented as OpenCV algorithm.\n\nDNN module:\n\nImproved layers / activations / supported more models:\n\noptimized: MatMul support in CUDA backend (#20138)\n\nfixed: BatchNorm reinitialization (#20283)\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nadded support for OpenVINO 2021.4 LTS release\n\nenabled OpenCL kernels cache in IE clDNN plugin (#20006)\n\nG-API module:\n\nPython support:\n\nIntroduced a new Python Operation API: now G-API can be extended with new graph operations in Python directly: #19982;\n\nExtended Python bindings with more G-API confuration options: specifying arbitrary number of NN models for the pipeline (#20157), graph compile arguments (#20196).\n\nExposed more G-API operations in Python bindings: parseSSD, parseYolo, copy, timestamp, seq_id (#20271).\n\nInference support:\n\nAdded FP16 data type handling in the OpenVINO™ inference backend;\n\nIntroduced inference with remote context in the OpenVINO™ inference backend (#20156), also extended cv::MediaFrame data structure to carry extra information about remote memory when possible (20151);\n\nOperations:\n\nAdded Transpose operation (#20107);\n\nFixed a possible ambiguous overload problem in parseSSD operation.\n\nDemos:\n\nIntroduced a MTCNN object detection demo. This demo highlights how to combine Deep Learning with a non-trivial user-defined pre- and post-processing in G-API: #19923;\n\nOther changes:\n\nAdded a new graph compile option to specify the internal queue capacity in the Streaming mode -- this option may be used to fine-tune the execution behavior from a throughput-oriented (default) to a latency oriented mode: #20119;\n\nAdded ITT instrumentation in the Streaming executor -- now different parts of the pipeline execution can be highlited in the Intel® VTune™ Profiler.\n\nFixed issue with passing empty data inputs to the graph: #20184.\n\nDocumentation:\n\nExtended the Doxygen reference with new structures/method description for Generic inference (#20169), OpenVINO™ inference parameters (#20112), Stereo, cv::MediaFrame (#20238), and other API parts.\n\nDocumentation:\n\nUpdated documentation to address plugin support modes / build options: #20194\n\nAnd many other great contributions from OpenCV community:\n\nsamples: added PaddlePaddle classification model conversion case: #19976\n\ncore: fix dynamic loading of clBLAS and clFFT: #20203\n\nimgproc: improved implementation of rotatedRectangleIntersection: #19842\n\n(opencv_contrib) 1D Barcode support: #2757\n\nopencv (76 contributors)\n\ngit shortlog --no-merges -ns 4.5.2..4.5.3 46 Alexander Alekhin 10 Giles Payne 9 Anatoliy Talamanov 7 Smirnov Egor 6 Maxim Pashchenkov 5 Dmitry Budnikov 5 Maksim Shabunin 5 berak 4 Danny 4 Ian Maquignaz 4 Tiago De Gaspari 2 APrigarina 2 Alexander Smorkalov 2 Alexey Smirnov 2 Anna Prigarina 2 Dale Phurrough 2 Developer-Ecosystem-Engineering 2 Francesco Petrogalli 2 Joe Howse 2 Kai Stüdemann 2 SamFC10 2 Sergey Ivanov 2 Suleyman TURKMEN 2 Vincent Rabaud 2 danielenricocahall 2 rogday 1 103yiran 1 Aaron Greig 1 Aleksandr Voron 1 Alex Kalmuk 1 Anastasiya Pronina 1 Andreas Franek 1 Andrei Costinescu 1 Antonio Rojas 1 CSBVision 1 Christoph Rackwitz 1 David Geldreich 1 Dmitry Matveev 1 Florian Berchtold 1 Guillaume Jacob 1 HAN Liutong 1 Harald Scheirich 1 HattrickGenerator 1 Ilya Lavrenov 1 Jake Staahl 1 Jason 1 JoeHowse 1 Jonathan Deakin 1 Lukas-Alexander Weber 1 Maksym Ivashechkin 1 Mary Strodl 1 Mikhail Nikolskii 1 Nathan Hartman 1 Nikolay Polyarniy 1 Paul Jurczak 1 Pinaev Danil 1 Quella Zhang (Beyondsoft Corporation) 1 Rafael H Tibães 1 Stefano Allegretti 1 Vladimir 1 Xinguang Bian 1 YashasSamaga 1 Zhuo Zhang 1 catree 1 changh95 1 damonyu1989 1 deniz.aksayli 1 hyrodium 1 jiangjiajun 1 jogo- 1 kikaxa 1 micha137 1 mitruska 1 thezane 1 xzvno 1 yo1990\n\nopencv_contrib (20 contributors)\n\ngit shortlog --no-merges -ns 4.5.2..4.5.3 4 Alexander Alekhin 3 Suleyman TURKMEN 2 DumDereDum 2 Ivar Clemens 2 Pavel Rojtberg 2 Smirnov Egor 2 Vincent Rabaud 2 berak 1 Aleksandr Patsekin 1 Archit Rungta 1 Artem Saratovtsev 1 David Forrest 1 Frank Dana 1 Junhao Liang 1 Killer_Quinn 1 TT 1 channings 1 pathbreak 1 scloke 1 shimat\n\nJuly, 2021\n\nOpenCV 3.4.15 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.5.3.\n\nLong-lived OpenCV 3.x release series is here since 2015. We are going to reduce support of 3.x branch in the future to move forward to OpenCV 5.0.\n\nApril, 2021\n\nSpring update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\ncore: added support for parallel backends. Special OpenCV builds allow to select parallel backend and/or load it dynamically through plugins\n\nimgproc: added IntelligentScissors implementation (JS demo). The feature is integrated into CVAT annotation tool and you can try it online on https://cvat.org\n\nvideoio: improved hardware-accelerated video decoding/encoding tasks. Wiki page\n\nDNN module:\n\nImproved debugging of TensorFlow parsing errors: #19220\n\nImproved layers / activations / supported more models:\n\noptimized: NMS processing, DetectionOutput\n\nfixed: Div with constant, MatMul, Reshape (TensorFlow behaviour)\n\nadded support: Mish ONNX subgraph, NormalizeL2 (ONNX), LeakyReLU (TensorFlow), TanH (Darknet), SAM (Darknet), Exp\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nadded support for OpenVINO 2021.3 release\n\nG-API module:\n\nPython support:\n\nIntroduced a new Python backend - now G-API can run custom kernels written in Python as part of the pipeline: #19351;\n\nExtended Inference support in the G-API Python bindings: #19318;\n\nAdded more graph data types support in the G-API Python bindings: #19319;\n\nInference support:\n\nIntroduced dynamic input / CNN reshape functionality in the OpenVINO inference backend #18240;\n\nIntroduced asynchronous execution support in the OpenVINO inference backend, now inference can run in multiple requests in parallel to increase stream density/throughput: #19487, #19425;\n\nExtended supported data types with INT64/INT32 in ONNX inference backend and with INT32 in the OpenVINO inference backend #19792;\n\nIntroduced cv::GFrame / cv::MediaFrame and constant support in the ONNX backend: #19070;\n\nMedia support:\n\nIntroduced cv::GFrame / cv::MediaFrame support in the drawing/rendering interface: #19516;\n\nIntroduced multi-stream input support in Streaming mode and frame synchronization policies to support cases like Stereo: #19731;\n\nAdded Y and UV operations to access NV12 data of cv::GFrame at the graph level; conversions are done on-the-fly if the media format is different: #19325;\n\nOperations and kernels:\n\nAdded performance tests for new operations (MorphologyEx, BoundingRect, FitLine, FindContours, KMeans, Kalman, BackgroundSubtractor);\n\nFixed RMat input support in the PlaidML backend: #19782;\n\nAdded ARM NEON optimizations for Fluid AbsDiffC, AddWeighted, and bitwise operations: #18466, #19233;\n\nOther various static analysis and warning fixes;\n\nDocumentation:\n\n[GSoC] Added TF and PyTorch classification conversion cases: #17604\n\n[GSoC] Added TF and PyTorch segmentation conversion cases: #17801\n\n[GSoC] Added TF and PyTorch detection model conversion cases: #18237\n\nUpdated documentation to address Wide Universal Intrinsics (WUI) SIMD API: #18952\n\nAnd many other great contributions from OpenCV community:\n\ncore: add cuda::Stream constructor with cuda stream flags: #19286\n\nhighgui: expose VSYNC window property for OpenGL on Win32: #19408\n\nhighgui: pollKey() implementation for w32 backend: #19411\n\nimgcodecs: Added Exif parsing for PNG: #19439\n\nimgcodecs: OpenEXR compression options: #19540\n\nimgproc: connectedComponents optimizations: (Spaghetti Labeling): #19631\n\nvideoio: Android NDK camera support #19597\n\n(opencv_contrib) WeChat QRCode module open source: #2821\n\n(opencv_contrib) Implemented cv::cuda::inRange(): #2803\n\n(opencv_contrib) Added algorithms from Edge Drawing Library: #2313\n\n(opencv_contrib) Added Python bindings for Viz module: #2882\n\nopencv (92 contributors)\n\ngit shortlog --no-merges -ns 4.5.1..4.5.2 97 Alexander Alekhin 14 Anatoliy Talamanov 13 Maksim Shabunin 9 Dale Phurrough 8 Liubov Batanina 7 Alexander Smorkalov 7 Anastasia M 7 Maxim Pashchenkov 6 Orest Chura 5 Anastasia Murzova 4 LaurentBerger 4 Rachel A 4 Tomoaki Teshima 4 Zhuo Zhang 3 Christoph Rackwitz 3 Giles Payne 3 OrestChura 3 Qoo 3 Ruslan Garnov 3 SamFC10 3 Vitaly Tuzov 2 APrigarina 2 Aaron Greig 2 Amir Tulegenov 2 Anastasiya Pronina 2 Anna Khakimova 2 Dan Ben Yosef 2 Dan Ben-Yosef 2 Dmitry Budnikov 2 Francesco Petrogalli 2 Ilya Lavrenov 2 Liangqian 2 Mikhail Nikolskii 2 Sayed Adel 2 Suleyman TURKMEN 2 Vadim Levin 2 WeiChungChang 2 YashasSamaga 1 Alexander Reynolds 1 Alexey Smirnov 1 Andrey Golubev 1 Anton Potapov 1 Aryansh Omray 1 Cuntian Liu 1 Daniel Playfair Cal 1 Federico Bolelli 1 Federico Martinez 1 Grégoire Piffault 1 Ian Maquignaz 1 Igor Murzov 1 Ilya Churaev 1 Ixarias 1 Jebastin Nadar 1 Jonathan Deakin 1 Justin Chu 1 Kun Liang 1 Larry Wei 1 Liangda-w 1 Lukas-Alexander Weber 1 Mark Harfouche 1 Matt Alvarado 1 MaximMilashchenko 1 Mieszko Boczkowski 1 Mradul Agrawal 1 Namgoo Lee 1 Nicola Landolfi 1 Olivier Le Doeuff 1 Pavel Rojtberg 1 Polina Smolnikova 1 Ruan 1 Sergei Slashchinin 1 Sergey Krivohatskiy 1 Sergey Slashchinin 1 Smirnov Alexey 1 Stefan Dragnev 1 Tsukasa Sugiura 1 Vincent Rabaud 1 Xinguang Bian 1 Your Name 1 ZhM 1 Ziachnix 1 aDanPin 1 amir.tulegenov 1 cyy 1 eplankin 1 krush11 1 kyshel 1 lionkun 1 mznw 1 notmatthancock 1 shioko 1 the-sparrow\n\nopencv_contrib (30 contributors)\n\ngit shortlog --no-merges -ns 4.5.1..4.5.2 8 Tomoaki Teshima 7 dddzg 5 Pavel Rojtberg 4 Alexander Alekhin 2 DumDereDum 2 LaurentBerger 2 Vadim Pisarevsky 1 Aaron Miller 1 Atlas42 1 Dimitrios Psychogyios 1 Jan-Kristian Herring 1 Kévin Andrieux 1 MrKepzie 1 Namgoo Lee 1 Roman Golovanov 1 Rostislav Vasilikhin 1 Stefan Brechtken 1 Suleyman TURKMEN 1 Sun Aries 1 Tobias Senst 1 Ubuntu 1 Vishal Chiluka 1 Yahui Wang 1 aaarthurliu 1 amir.tulegenov 1 arsaratovtsev 1 batters21 1 berak 1 chester 1 dzyGIT\n\nApril, 2021\n\nOpenCV 3.4.14 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.5.2.\n\nDecember, 2020\n\nNew Year's update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\nOpenCV repository reached over 50k stars on GitHub: Thank you to all for your contribution in this great project!\n\nContinued merging of GSoC 2020 results:\n\nDevelop OpenCV.js DNN modules for promising web use cases together with their tutorials (#18064)\n\nOpenCV.js: WASM SIMD optimization 2.0 (#18068)\n\nHigh Level API and Samples for Scene Text Detection and Recognition (#17570). The samples use the algorithms and the separately downloaded pre-trained models introduced in the following papers:\n\n\"Real-time Scene Text Detection with Differentiable Binarization\". Liao, Minghui and Wan, Zhaoyi and Yao, Cong and Chen, Kai and Bai, Xiang. Proc. AAAI, 2020.\n\n\"An end-to-end trainable neural network for image-based sequence recognition and its application to scene text recognition\". Shi, Baoguang and Bai, Xiang and Yao, Cong. IEEE transactions on pattern analysis and machine intelligence, 2016.\n\nSIFT: SIMD optimization of GaussianBlur 16U (#18983)\n\nDNN module:\n\nImproved layers / activations / supported more models:\n\noptimized: 1D convolution, 1D pool\n\nfixed: Resize, ReduceMean, Gather with multiple outputs, importing of Faster RCNN ONNX model\n\nadded support: INT32 ONNX tensors\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nadded support for OpenVINO 2021.2 release\n\nadded preview support for HDDL\n\nFixes and optimizations in DNN CUDA backend (thanks to @YashasSamaga): PRs\n\nG-API module:\n\nG-API Framework:\n\nIntroduced serialization for cv::RMat, including serialization for user-defined memory adapters (#18584);\n\nIntroduced desync, a new Operation for in-graph asynchronous execution - to allow different parts of the graph run with a different latency (#18673);\n\nIntroduced a notion of \"in-graph metadata\" (#18793), now various media-related information can be accessed in graph directly (currently only limited to timestamps and frame IDs);\n\nIntroduced a new generic task-based executor, based on Threading Building Blocks (TBB) (#17851);\n\nExtended infer<>() API to accept a new cv::GFrame data structure to allow handling of various media formats without changes in the graph structure (#19002);\n\nMade copy() an intrinsic where real copy may not happen (optimized out) based on graph structure, extended it to support cv::GFrame (#19009), (#19112);\n\nVarious fixes, including addressig static analysis, documentation, and test issues;\n\nG-API Operations:\n\nIntroduced new operations morphologyEx (#18652), boundingRect (#18510), fitLine (#18790), kmeans (#18857), Background Subtractor (#18674), Kalman filter (#18869);\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nExtended cv::gapi::ie::Params<> to import CNN networks (e.g. pre-compiled ones) instead of passing .XML and .BIN files (#18542); also enabled configuring Inference Engine plugins via this structure (#18701);\n\nAdded a new overload to infer<>() to run inference over a single region of interest (#18673);\n\nAdded support for cv::MediaFrame input data type (projected from cv::GFrame) and handling for NV12 input image format (#19002);\n\nMicrosoft® ONNX Runtime backend:\n\nIntroduced a new inference backend, powered by Microsoft ONNX Runtime (#18716), follow this instruction to enable ONNX Runtime support in G-API;\n\nPython bindings:\n\nExposed G-API's Inference (#18491) and Streaming (#18493) APIs in the OpenCV Python bindings;\n\nAdded initial Python support for cv::GArray data structure (#18762);\n\nSignificant progress on RISC-V port.\n\nmuch more complete RISC-V backend of universal intrinsics has been contributed by Yin Zhang from ISCAS. It is based on the latest RVV (RISC-V vector extension) 0.9.\n\nDocumentation:\n\nUpdated structure of tutorials\n\nRevised installation tutorials content\n\nAnd many other great contributions from OpenCV community:\n\nobjdetect: Detection and decoding of curved QR-codes: #18003\n\ncalib3d: Added SQPnP algorithm to SolvePnP: #18371\n\nstitching: add warpPointBackward to warpers: #18607\n\nstitching: support similarity masks: #18624\n\nstitching: add WAVE_CORRECT_AUTO: #18646\n\n(opencv_contrib) Color Calibration Algorithm Implementation Revised: #2671\n\n(opencv_contrib) Tbmr features (purely topological adaptation on MSER): #2713\n\n(opencv_contrib) Added Python wrapping and documentation for alphamat module: #2729\n\nvideo: added definition of Tracking API with ported GOTURN and MIL trackers from opencv_contrib: 18838\n\n(opencv_contrib) Add libSGM into cudastereo: #2772\n\n(opencv_contrib) Add BEBLID local feature descriptor: #2774\n\nopencv (88 contributors)\n\ngit shortlog --no-merges -ns 4.5.0..4.5.1 87 Alexander Alekhin 10 Anatoliy Talamanov 8 Ruslan Garnov 6 Dmitry Matveev 6 Maksim Shabunin 6 Orest Chura 5 Jonathan Cole 5 Sergei Slashchinin 4 Anna Khakimova 4 Anton Potapov 4 Giles Payne 4 Igor Murzov 4 Maxim Pashchenkov 4 Vincent Rabaud 3 Alexander Smorkalov 3 Anastasia Murzova 3 Dale Phurrough 3 Ian Maquignaz 3 Liubov Batanina 2 Aitik Gupta 2 Anastasiya Pronina 2 Chris Ballinger 2 OrestChura 2 Quentin Chateau 2 Roman Kazantsev 2 Sergey Slashchinin 2 Steffen Urban 2 Welton Rodrigo Torres Nascimento 2 catree 2 mtfrctl 1 APrigarina 1 Alexey Smirnov 1 Andreas Franek 1 Anton Veselskyi 1 AsyaPronina 1 Christos Malliaridis 1 Clement Courbet 1 Daniel Cauchi 1 Daniel Motilla 1 Dmitry Budnikov 1 Felix Gorschlüter 1 Francesco Petrogalli 1 Gabriel Nascarella Hishida 1 Hollow Man 1 Jack·Boos·Yu 1 Jaime Rivera 1 Jiri Kucera 1 Joe 1 Jojo R 1 Jose Quaresma 1 Julien 1 Justin Frank 1 Kong Liangqian 1 Krushnal Patel 1 Kun Liang 1 Mark Shachkov 1 Martin Štefaňák 1 Michael Gruner 1 Mikkel Green 1 Nathan Godwin 1 Nikolai 1 Omar Alzaibaq 1 Or Avital 1 Pavel Grunt 1 Pavel Rojtberg 1 Randall Britten 1 Rob Timpe 1 Suleyman TURKMEN 1 Vadim Levin 1 Vadim Pisarevsky 1 Wenqing Zhang 1 YashasSamaga 1 Yiming Li 1 Yosshi999 1 ZhangYin 1 Zhangyin 1 Zhiming-Zeng 1 Zhiyuan Chen 1 ann 1 arodrigu 1 berak 1 chargerKong 1 joshdoe 1 junxnone 1 lizz 1 masa-iwm 1 maxint 1 shioko\n\nopencv_contrib (23 contributors)\n\ngit shortlog --no-merges -ns 4.5.0..4.5.1 12 Alexander Alekhin 3 DumDereDum 2 Akash Sharma 1 Enrico Ronconi 1 EricFlorin 1 Iago Suárez 1 Igor Murzov 1 Kong Liangqian 1 Kumataro 1 Matthias Berberich 1 Paul Jurczak 1 Rob Timpe 1 Shingo Otsuka 1 Steffen Urban 1 TT 1 Vincent Rabaud 1 Yuriy Obukh 1 Zhiju Cen 1 crownedone 1 cudawarped 1 riskiest 1 sunitanyk 1 unknown\n\nDecember, 2020\n\nOpenCV 3.4.13 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.5.1.\n\nOctober, 2020\n\nThe fall update of OpenCV has been released!\n\nHighlights of this release:\n\nOpenCV licence has been changed to Apache 2: OE-32 - Change OpenCV License to Apache 2. Starting from OpenCV 4.5.0, all the future OpenCV 4.x and OpenCV 5.x releases will be distributed under Apache 2 license. OpenCV 3.x will keep using BSD.\n\nGSoC 2020 is over. It was one of the most productive GSoC \"seasons\"! All the projects are successful, and most of the results are already merged into OpenCV tree and available in 4.5.0 (in the main repository or in opencv_contrib). Here is the list of merged functionality:\n\nBetter SIFT in the main repository\n\nImprovement of Random Sample Consensus in OpenCV #17683\n\nReal-time Single Object Tracking using Deep Learning: #17647\n\nRevise/improve Text and Digit Recognition Samples: #17675\n\nOptimize OpenCV for RISC-V: #17922\n\n(opencv_contrib): OpenCV bindings for Julia Programming Language (tutorial)\n\n(opencv_contrib): Implement Macbeth Chart detector and AprilTag3: #2532\n\n(opencv_contrib): Depth Fusion for large scale environments #2566\n\nAnd here is the picture:\n\nOpenJPEG replaces Jasper in distributed Windows packages: #18194\n\nAdded support for OpenCL multiple contexts\n\nDNN module:\n\nImproved layers / activations / supported more models:\n\nONNX: ReduceSum, Gather, improved Reshape\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nadded support for OpenVINO 2021.1 release\n\nFixes and optimizations in DNN CUDA backend (thanks to @YashasSamaga): PRs\n\nOur partner, OpenAI Lab, have further improved performance of OpenCV DNN on ARM using their new \"Tengine lite\", lighter-weight reimplementation of Tengine in C. Here is the comparative performance table (showing inference time in milliseconds for batch_size=1 on different topologies and different ARM architectures; tested on EAIDK-610):\n\nG-API module:\n\nAdded Python bindings for the general G-API (#17493), inference and streaming support are currently in progress.\n\nIntroduced serialization API, currently limited. A graph can be serialized to a byte stream (std::vector) and then reconstructed back to a cv::GComputation object.\n\nOpenVINO NN backend has been moved to the latest OpenVINO \"Core\" APIs.\n\nNow it is easier to declare a graph with a dynamic number of inputs or outputs (GIn() / GOut() support operator+=).\n\nAdded \"mask\", extended \"convertTo\" with 16S, also added performance tests on Core kernels for the Fluid backend.\n\nAdded standard NN post-processing operations like parseYolo and parseSSD to turn NN results into a structured graph-based data format (e.g. GArray<Rect>).\n\nAdded value initialization for GArray<T> so now one can write:\n\ncv::GArray<int> arr = std::vector<int> { 1, 2, 3 };\n\nto associate a cv::GArray<> with a value at graph construction stage.\n\ncv::GMat bitwise operators are extended with a cv::GScalar operand.\n\nIntroduced a new graph data type cv::GFrame and its data storage type cv::MediaFrame to start handling media-oriented formats (like NV12 or YUV images with external memory) in the graph.\n\nAnd many other great contributions from OpenCV community:\n\nflann module fixes / improvements by @pemmanuelviel: PRs\n\nAdd Robot-World/Hand-Eye calibration function: #18203\n\nImproved build scripts to support for Apple Silicon by Giles Payne: #18094\n\nopencv (68 contributors)\n\ngit shortlog --no-merges -ns 4.4.0..4.5.0 47 Alexander Alekhin 10 Liubov Batanina 9 Giles Payne 9 Maksim Shabunin 9 Tomoaki Teshima 8 Anatoliy Talamanov 8 Ilya Churaev 7 Orest Chura 7 Pierre-Emmanuel Viel 6 Vadim Levin 5 Namgoo Lee 5 YashasSamaga 4 Alexey Smirnov 4 Dmitry Matveev 4 Maksym Ivashechkin 4 Suleyman TURKMEN 4 Vadim Pisarevsky 4 Yosshi999 4 catree 4 kadi soheib 4 pemmanuelviel 3 Aitik Gupta 3 Ruslan Garnov 3 danielenricocahall 2 Alessandro de Oliveira Faria (A.K.A.CABELO) 2 Alexander Smorkalov 2 Anastasiya(Asya) Pronina 2 Anna Petrovicheva 2 Danny 2 Dustin Rodrigues 2 Maksim Doronin 2 Maxim Pashchenkov 2 Sergei Slashchinin 2 Yashas Samaga B L 1 Alexey Lapshin 1 AsyaPronina 1 Christoph Gringmuth 1 Dervon 1 Dmitry Kurtaev 1 Elizarov Ilya 1 Florian Jung 1 Gabriel 1 Gary Bradski 1 Gil Shotan 1 Ian Maquignaz 1 Julien 1 Mario Emmenlauer 1 Nathan Godwin 1 NesQl 1 Odianosen Ejale 1 Pavel Rojtberg 1 Peter Rekdal Sunde 1 Rafael Sadowski 1 Shubham Dhumal 1 Shubham Singh 1 Sinitsina 1 Takehiro Kajihara 1 Yikun Jiang 1 Zhangyin 1 Zihao Mu 1 dmici 1 extrowerk 1 jinyup100 1 lpea 1 nhlsm 1 or-toledano 1 zhaoyue-zephyrus 1 zhuqiang00099\n\nopencv_contrib (21 contributors)\n\ngit shortlog --no-merges -ns 4.4.0..4.5.0 4 Namgoo Lee 4 Pavel Rojtberg 4 Pierre-Emmanuel Viel 3 Archit Rungta 3 DumDereDum 3 Tomoaki Teshima 2 Dustin Rodrigues 2 Vadim Pisarevsky 2 pemmanuelviel 1 Ajit Pant 1 Alexander Alekhin 1 Elizarov Ilya 1 Gary Bradski 1 Giles Payne 1 Kumataro 1 Mary Chris Go 1 Nikita Shulga 1 arsaratovtsev 1 berak 1 cyy 1 dtmoodie\n\nOctober, 2020\n\nOpenCV 3.4.12 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.5.0.\n\nJuly, 2020\n\nSummer update for OpenCV 4.x has been released ☀️\n\nHighlights of this release:\n\nSIFT (Scale-Invariant Feature Transform) algorithm has been moved to the main repository (patent on SIFT is expired)\n\nDNN module:\n\nImproved layers / activations / supported more models:\n\nState-of-art Yolo v4 Detector: #17148. Disabled per-layer NMS for [yolo] layers (Yolo v3 and Yolo v4) as incorrect - use cv::dnn::NMSBoxes over all the detections.\n\nONNX: Add support for Resnet_backbone (Torchvision) #16887\n\nEfficientDet models support: #17384\n\nNew samples / demos:\n\nadd text recognition sample: C++ / Python\n\nFlowNet2 optical flow: #16575\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nadded support for OpenVINO 2020.3 LTS / 2020.4 releases\n\nsupport of NN Builder API is planned for removal in the next release\n\nMany fixes and optimizations in CUDA backend (thanks to @YashasSamaga): PRs\n\nG-API module:\n\nIntroduced a new API for stateful kernels in OpenCV backend: GAPI_OCV_KERNEL_ST. Stateful kernels preserve their state among the individual graph executions (in the standard more) or among the video frames of the stream (in the streaming mode).\n\nIntroduced more video-oriented operations in G-API: goodFeaturesToTrack, buildOpticalFlowPyramid, calcOpicalFlowPyrLK.\n\nAdded few more image processing kernels: Laplacian and bilateral filters.\n\nFixed a potential crash in G-API's OpenCL backend.\n\nAnd many other great contributions from OpenCV community, including, but not limited to:\n\nObj-C / Swift bindings: #17165\n\n(opencv_contrib) Julia bindings as part of ongoing GSoC project: #2547\n\n(opencv_contrib) BIMEF: A Bio-Inspired Multi-Exposure Fusion Framework for Low-light Image Enhancement: #2448\n\nEnable Otsu thresholding for CV_16UC1 images: #16640\n\nAdd Stroke Width Transform algorithm for Text Detection: #2464\n\nPlanned migration on Apache 2 license for next releases OE-32 #17491\n\nopencv (105 contributors)\n\ngit shortlog --no-merges -ns 4.3.0..4.4.0 78 Alexander Alekhin 19 Dmitry Kurtaev 19 Liubov Batanina 19 Maksim Shabunin 19 Tomoaki Teshima 15 YashasSamaga 11 Pierre-Emmanuel Viel 9 Anton Potapov 8 Alexander Smorkalov 8 Dmitry Matveev 8 Giles Payne 8 Ilya Lavrenov 6 Vadim Pisarevsky 5 Daniel Mallia 5 Ruslan Garnov 4 Woody Chow 4 Yosshi999 4 cyy 3 Boubacar 3 Dmitry Budnikov 3 Ganesh Kathiresan 3 Maxim Pashchenkov 3 Paul Jurczak 3 Vadim Levin 3 Yashas Samaga B L 3 pemmanuelviel 2 AshihsKrShrivastava 2 Chris Ballinger 2 Ilya Churaev 2 Jan Lebert 2 Michal W. Tarnowski 2 Namgoo Lee 2 Nesterov Alexander 2 Orest Chura 2 OrestChura 2 Philippe FOUBERT 2 Pinaev Danil 2 Suleyman TURKMEN 2 jsxyhelu 1 Adam Fowles 1 Alanli 1 Aleksandr Pertovskiy 1 Alex Cohn 1 Alex Studer 1 Anastasiya 1 Anatoliy Talamanov 1 AsyaPronina 1 Bao \"Mantle\" Rong 1 Ben 1 Ben Li 1 Christoph 1 Conrad Poelman 1 Egor Pugin 1 Fernando Martin 1 GFleishman 1 Gourav Roy 1 Hannes Achleitner 1 Heritier Kinke 1 HowardsPlayPen 1 Jan Tojnar 1 Jason Martin 1 Jessica Wong 1 Josh Bradley 1 Ken Shirriff 1 Martin Nowak 1 Mehdi Zakaria Benadel 1 Meng Wang 1 NesQl 1 Nicolas Roduit 1 Nikita Shulga 1 Ningxin Hu 1 Pierre Chatelier 1 Polina Smolnikova 1 QIU Xiaochen 1 R-penguins 1 Rasmus 1 Rasmus Diederichsen 1 Rui Hou 1 Satya Mallick 1 Sauhaarda Chowdhuri 1 Smirnov Alexey 1 Vahid Nikoofard 1 Vitaly Tuzov 1 Xiping Yan 1 YourButterfly 1 Yuriy Obukh 1 ab-dragon 1 albert-github 1 ashishiva3@gmail.com 1 berak 1 dev-tronifier 1 dmallia17 1 hn-88 1 jackson0223 1 jasonKercher 1 jshiwam 1 jumostedu 1 mehlukas 1 okamotoR 1 shijiayuan 1 shimat 1 spectralio 1 tpoisonooo 1 tweenietomatoes 1 woody.chow\n\nopencv_contrib (27 contributors)\n\ngit shortlog --no-merges -ns 4.3.0..4.4.0 9 Tomoaki Teshima 6 Alexander Alekhin 6 Pavel Rojtberg 3 Paul Jurczak 2 Amy Tabb 2 Archit Rungta 2 Daniel Mallia 2 Namgoo Lee 2 Vishal Chiluka 2 catree 2 shimat 1 Ajit Pant 1 Akash Sharma 1 Devansh Batra 1 Jan Sellner 1 John Forrest 1 K Yasaswi Sri Chandra Gandhi 1 MaKaNu 1 Maksim Shabunin 1 Oded Green 1 QIU Xiaochen 1 Vadim Pisarevsky 1 Xavier Weber 1 archit120 1 berak 1 nosajthenitram 1 unknown\n\nJuly, 2020\n\nOpenCV 3.4.11 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.4.0.\n\nApril, 2020\n\nSpring update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\nDNN module:\n\nImproved layers / activations / supported more models:\n\nONNX: LSTM, Broadcasting, Algebra over constants, Slice with multiple inputs\n\nDarkNet: grouped convolutions, sigmoid, swish, scale_channels\n\nMobileNet-SSD v3: #16760\n\nNew samples / demos:\n\nClothes parts segmentation and CP-VTON\n\nDaSiamRPN tracker\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nadded support for custom layers through nGraph OpenVINO API: #16628\n\nnGraph OpenVINO API is used by default: #16746\n\nMany fixes and optimizations in CUDA backend (thanks to @YashasSamaga): PRs\n\nOPEN AI LAB team submitted the patch that accelerates OpenCV DNN on ARM using their Tengine library:\n\nHere are the installation instructions\n\nG-API module:\n\nIntroduced a new graph-level data type GOpaque<T>. This type can be used to pass arbitrary user data types between G-API nodes in the graph (supported for CPU/OpenCV backend only).\n\nIntroduced a way to declare G-API CPU (OpenCV) kernels in-place (example);\n\nAdded a new sample \"Privacy masking camera\", combining Deep Learning with traditional Image Processing (link)\n\nAdded more operations in the default library: WarpAffine, WarpPerspective, NV12toGray.\n\nPerformance improvements:\n\nIPP-ICV library with CPU optimizations has been updated to version 2020.0.0 Gold\n\nSIMD intrinsics: integral, resize, (opencv_contrib) RLOF implementation #2476\n\nAnd many other great contributions from OpenCV community:\n\n(opencv_contrib) Computer Vision based Alpha Matting (GSoC 2019) #2306\n\ncalib3d: findChessboardCornersSB improvements: #16625\n\ncalib3d: updated documentation for RT matrices: #16860\n\ncore: improved getNumberOfCPUs(): #16268\n\nimgproc: new algorithm HOUGH_GRADIENT_ALT is added to HoughCircles() function #16561. It has much better recall and precision\n\nimgcodecs: added initial support for OpenJPEG library (version 2+): #16494\n\nhighgui(Qt): added Copy to clipboard: #16677\n\ndnn: TensorFlow, Darknet and ONNX importers improvements by @ashishkrshrivastava: PRs\n\n(opencv_contrib) added rapid module for silhouette based 3D object tracking: #2356\n\n(opencv_contrib) SIFT detector is enabled by default due patents expiration (without requirement of NONFREE build option)\n\nhelp materials: OpenCV Cheat Sheet in Python: #4875\n\nChanges that can potentially break compatibility:\n\nimage filtering functions throws exception on empty input (voting results)\n\nopencv (90 contributors)\n\ngit shortlog --no-merges -ns 4.2.0..4.3.0 107 Alexander Alekhin 34 Liubov Batanina 22 Dmitry Kurtaev 13 Maksim Shabunin 11 YashasSamaga 8 Vadim Pisarevsky 7 Alexander Smorkalov 6 Anton Potapov 6 ashishiva3@gmail.com 5 Anatoliy Talamanov 5 Hannes Achleitner 5 Maxim Pashchenkov 4 Gourav Roy 4 Vadim Levin 4 Yashas Samaga B L 3 Alexander Duda 3 Chip Kerchner 3 Collin Brake 3 Ganesh Kathiresan 3 Julien 3 Peter Würtz 3 Sayed Adel 2 Andrey Golubev 2 Brian Wignall 2 Dizhenin Vlad 2 Dmitry Matveev 2 Ilya Lavrenov 2 Moritz Fischer-Gundlach 2 NesQl 2 Pavel Rojtberg 2 Polina Smolnikova 2 Rajkiran Natarajan 2 StefanBruens 2 berak 2 catree 2 cyy 2 hannesa2 1 Aditya Kumar 1 Alexey Smirnov 1 Andrei-Florin BENCSIK 1 Andrew Bruce 1 Arnaud Brejeon 1 Augusto Fraga Giachero 1 Christoph Schmidt-Hieber 1 Eduard Trulls 1 Elizarov Ilya 1 Gagandeep Singh 1 Ianaré Sévi 1 Igor Murzov 1 Ivan Galanin 1 Jan Solanti 1 Janusz Lisiecki 1 Jed 1 Julien Maille 1 Karl Liu 1 Khem Raj 1 Manoj Gupta 1 Miguel Pari Soto 1 MoonChasing 1 Muhammad Taha 1 Niklas Hambüchen 1 Nuzhny007 1 Omar Hassan 1 Paul E. Murphy 1 Pierre Letessier 1 Pratik Raj 1 RAJKIRAN NATARAJAN 1 Samuel Thibault 1 Smirnov Alexey 1 Suleyman TURKMEN 1 Talamanov, Anatoliy 1 Tomoaki Teshima 1 Yuhel Tanaka 1 Yuriy Obukh 1 Zach Lowry 1 ankit6979 1 atinfinity 1 baka-gori 1 cudawarped 1 firebladed 1 gapry 1 h6197627 1 ihsan314 1 iteal 1 jshiwam 1 keeper121 1 midjji 1 olramde 1 rayonnant14 1 sajarindider\n\nopencv_contrib (25 contributors)\n\ngit shortlog --no-merges -ns 4.2.0..4.3.0 7 Alexander Alekhin 4 Pavel Rojtberg 2 Alexander Smorkalov 2 Ayush Garg 2 catree 1 David Geldreich 1 Gagandeep Singh 1 Igor Murzov 1 Kunal Tyagi 1 Lim 1 Maksim Shabunin 1 Miloš Komarčević 1 RAJKIRAN NATARAJAN 1 Rostislav Vasilikhin 1 Tobias Senst 1 Vishal Chiluka 1 Xavier Weber 1 akashsharma02 1 atinfinity 1 berak 1 cudawarped 1 jshiwam 1 raanyild 1 shimat 1 sunitanyk\n\nApril, 2020\n\nOpenCV 3.4.10 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.3.0.\n\nDecember, 2019\n\nNew Year's update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\nDNN module:\n\nIntegrated GSoC project with CUDA backend: #14827\n\nIntel® Inference Engine backend ( OpenVINO™ ):\n\nsupport for nGraph OpenVINO API (preview / experimental): #15537\n\nG-API module:\n\nEnabled in-graph inference: #15090. Now G-API can express more complex hybrid CV/DL algorithms;\n\nIntel® Inference Engine backend is the only available now, support for DNN module will be added in the future releases.\n\nExtended execution model with streaming support: #15216. Decoding, image processing, inference, and post-processing are now pipelined efficiently when processing a video stream with G-API.\n\nAdded tutorials covering these new features: Face analytics pipeline and a sample Face beautification algorithm.\n\nPerformance improvements:\n\nSIMD intrinsics: StereoBM/StereoSGBM algorithms, resize, integral, flip, accumulate with mask, HOG, demosaic, moments\n\nMuti-threading: pyrDown\n\nAnd many other great patches from OpenCV community:\n\nVideoCapture: video stream extraction (demuxing) through FFmpeg backend.\n\nVideoCapture: waitAny() API for camera input multiplexing (Video4Linux through poll() calls).\n\n(opencv_contrib) new algorithm Rapid Frequency Selective Reconstruction (FSR): #2296 + tutorial.\n\n(opencv_contrib) RIC method for sparse match interpolation: #2367.\n\n(opencv_contrib) LOGOS features matching strategy: #2383.\n\nChanges that can potentially break compatibility:\n\nDisabled constructors for legacy C API structures.\n\nImplementation of Thread Local Storage (TLS) has been improved to release data from terminated threads. API has been changed.\n\nDon't define unsafe CV_XADD implementation by default.\n\nPython conversion rules of passed arguments will be updated in next releases: #15915.\n\nopencv (80 contributors)\n\ngit shortlog --no-merges -ns 4.1.2..4.2.0 77 Alexander Alekhin 12 Dmitry Kurtaev 7 Dmitry Matveev 7 Maksim Shabunin 5 Chip Kerchner 5 Yashas Samaga B L 5 atalaman 4 Anna Khakimova 4 Steve Nicholson 4 Vitaly Tuzov 4 YashasSamaga 4 cudawarped 3 Igor Murzov 3 Liubov Batanina 3 Lubov Batanina 3 Oleg Alexandrov 3 TH3CHARLie 2 Brian Wignall 2 ChipKerchner 2 Everton Constantino 2 Nikita Shulga 2 Orest Chura 2 OrestChura 2 Paul Murphy 2 Pinaev Danil 2 RAJKIRAN NATARAJAN 2 Ruslan Garnov 2 Sajarin 2 Sebastián Gurin 2 Vadim Levin 2 berak 2 shimat 1 Adam Gyarmati 1 Adam Rankin 1 Alexander Smorkalov 1 André Lippok 1 Anton Potapov 1 CJ Smith 1 Christoph Bachhuber 1 Ciprian Alexandru Pitis 1 Collin Brake 1 Diego 1 Dimitri Gerin 1 Dizhenin Vlad 1 Dmitry Budnikov 1 Fei Wu 1 Gael Colas 1 Giles Payne 1 JamesNewton 1 Lorenzo Lucignano 1 Manjunath Bhat 1 Maxim Pashchenkov 1 Natsu 1 Paul E. Murphy 1 Pavel Grunt 1 Pádraig Brady 1 Rajkiran Natarajan 1 SSE4 1 Sebastien Wybo 1 Sebastián Gurín 1 Talamanov, Anatoliy 1 Tatsuro Shibamura 1 Xuanda Yang 1 Yashas 1 antalzsiroscandid 1 anton-potapov 1 catree 1 clunietp 1 collin 1 collinbrake 1 czgdp1807 1 float13 1 jasjuang 1 jeffeDurand 1 mcellis33 1 nick black 1 sajarindider 1 thebhatman 1 ysy 1 yuriyluxriot\n\nopencv_contrib (26 contributors)\n\ngit shortlog --no-merges -ns 4.1.2..4.2.0 10 Alexander Alekhin 7 Pavel Rojtberg 4 cudawarped 3 Suleyman TURKMEN 2 Brian Wignall 2 Gagandeep Singh 2 Lizeth Huertas 2 Pavel Grunt 2 catree 2 czgdp1807 1 Adam Rankin 1 Apoorv Goel 1 Deni 1 Gael Colas 1 Josh Chien 1 LE GARREC Vincent 1 Nikita Shulga 1 RAJKIRAN NATARAJAN 1 Steve Nicholson 1 Tobias Senst 1 ab-dragon 1 anna 1 huangqinjin 1 jeffeDurand 1 kokerf 1 si40wiga\n\nDecember, 2019\n\nOpenCV 3.4.9 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.2.0.\n\nOctober, 2019\n\nFall update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\nDNN module:\n\nIntel® Inference Engine backend (OpenVINO™):\n\n2019R3 has been supported\n\nSupport modern IE Core API\n\nNew approach for custom layers management. Now all the OpenCV layers fallbacks are implemented as IE custom layers which helps to improve efficiency due less graph partitioning.\n\nHigh-level API which introduces dnn::Model class and set of task-specific classes such dnn::ClassificationModel, dnn::DetectionModel, dnn::SegmentationModel. It supports automatic pre- and post-processing for deep learning networks.\n\nPerformance improvements and platforms support:\n\nMSA SIMD implementation has been contributed for MIPS platforms: https://github.com/opencv/opencv/pull/15422\n\nOpenCV.js optimization (threading and SIMD as part of GSoC project): https://github.com/opencv/opencv/pull/15371\n\nMore optimizations using SIMD intrinsics: dotProd, FAST corners, HOG, LK pyramid (VSX), norm, warpPerspective, etc\n\nFixed detection of Cascade Lake CPUs\n\nAnd many other great patches from OpenCV community:\n\nGUI: support topmost window mode (Win32/COCOA): https://github.com/opencv/opencv/pull/14872\n\nJava: fix Mat.toString() for higher dimensions: https://github.com/opencv/opencv/pull/15181\n\nImplementation of colormap \"Turbo\" https://github.com/opencv/opencv/pull/15388\n\nQR-Code detection accuracy improvement: https://github.com/opencv/opencv/pull/15356\n\nGSoC: Add learning-based super-resolution module: https://github.com/opencv/opencv_contrib/pull/2229 and https://github.com/opencv/opencv_contrib/pull/2231\n\nDetection accuracy improvement of the white marker aruco corners: https://github.com/opencv/opencv_contrib/pull/2236\n\nAdded pattern generator tool for aruco: https://github.com/opencv/opencv_contrib/pull/2250\n\nand special thanks to @sturkmen72 for improving and cleaning up code of samples/tutorials\n\nBreaking changes:\n\nfixed values thresholding accuracy in calcHist()\n\nopencv (74 contributors)\n\ngit shortlog --no-merges -ns 4.1.1..4.1.2 55 Alexander Alekhin 18 Dmitry Kurtaev 16 Maksim Shabunin 8 Vitaly Tuzov 7 Paul E. Murphy 6 Andrey Golubev 6 Lubov Batanina 5 Suleyman TURKMEN 4 AsyaPronina 4 luz.paz 3 Anton Potapov 3 Chip Kerchner 3 ChipKerchner 3 Sebastián Gurin 3 smirnov-alexey 2 Braedy Kuzma 2 Dmitry Budnikov 2 Hugo Lindström 2 John Smith 2 Marcin Tolysz 2 Talamanov, Anatoliy 2 TheGoddessInari 2 Tomoaki Teshima 2 Victor Romero 2 Zyrin 2 atinfinity 2 dab0bby 2 ilbalance 1 APrigarina 1 Alexey Smirnov 1 Andrew Ryrie 1 Brandon 1 Daniel Kapusi 1 David Carlier 1 Diego 1 Dmitry Matveev 1 Douwe Gelling 1 Elms 1 Everton Constantino 1 Evgeny Latkin 1 Giles Payne 1 Ilya Lavrenov 1 Jaime 1 Jake Howard 1 Kazuma Furuhashi 1 LaurentBerger 1 Mark Harfouche 1 Martti Laine 1 Matt Bennett 1 Matthias Gehre 1 OrestChura 1 Philippe FOUBERT 1 Pinaev Danil 1 Prakhar Varshney 1 Rosen Penev 1 Sayed Adel 1 Sean McBride 1 Sebastián Gurín 1 Thang Tran 1 Vishal Chiluka 1 Wenzhao Xiang 1 Wise86 1 andrey-golubev 1 ann 1 berak 1 collin 1 craterkamath 1 dcouwenh 1 fishjam 1 huihut 1 mipsopen-fwu 1 takacsd 1 xitong 1 yaohai [姚海]\n\nopencv_contrib (24 contributors)\n\ngit shortlog --no-merges -ns 4.1.1..4.1.2 4 Alexander Alekhin 2 Maksim Shabunin 2 Marcin Tolysz 2 Tomoaki Teshima 1 Daniel Canelhas 1 Fanny Monori 1 Geert Willems 1 Graham Reeves 1 Josh Chien 1 Moeed 1 Nicolas Abril 1 Nuzhny007 1 Paul Debus 1 Rajkiran Natarajan 1 SSE4 1 Suleyman TURKMEN 1 Tobias Senst 1 Vishal Bhaskar Chiluka 1 Xavier Weber 1 adilfaqah 1 berak 1 clunietp 1 kqwyf 1 lizeth huertas\n\nOctober, 2019\n\nOpenCV 3.4.8 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.1.2.\n\nJuly, 2019\n\nSummer update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\nDNN module:\n\n3D convolution networks initial support. There are Convolution, BatchNorm, Pooling, Eltwise layers implemented. Deconvolution3D layer is supported with DNN_BACKEND_INFERENCE_ENGINE only for now. Check Action recognition sample.\n\nIntel Inference Engine backend:\n\n2018R5 release is now minimal supported version\n\nAsynchornous inference support. Use cv::dnn::Net::forwardAsync which returns std::future<Mat> instance. Check updated object detection samples for details: C++, Python\n\nOpenCV face detection network efficiency on a single Intel Neural Compute Stick 2:\n\nsync x3 asynchronous forwards 26.43 FPS 53.2 FPS (x2.01)\n\ndetails: https://github.com/opencv/opencv/pull/14516\n\nDeep learning networks visualization diagrams using dot files (cv::dnn::Net::dumpToFile).\n\nA lot of improvements for ONNX and TenforFlow importers.\n\nPerformance improvements:\n\nAVX512 SIMD backend for wide universal intrinsics (w.u.i.)\n\nMore optimizations using wide universal intrinsics\n\nAndroid support:\n\nAdded CameraActivity utility class to automate Camera permission handling on Android\n\nChanged default C++ runtime: c++_static -> c++_shared\n\nUnified code for frame size selection between JavaCamera2View / JavaCameraView\n\nAnd many other great patches from OpenCV community:\n\nAdded IPPE method for planar pose estimation in solvePnP ( https://github.com/opencv/opencv/pull/14362 )\n\nAdded solvePnPRefineLM and solvePnPRefineVVS ( https://github.com/opencv/opencv/pull/14431 )\n\nLogging revamp ( https://github.com/opencv/opencv/pull/13909 by @kinchungwong )\n\nopencv_contrib: Tracking-by-Matching approach\n\nopencv_contrib: added AR samples into ovis module\n\nBreaking changes:\n\nsolveP3P, solvePnP and solvePnPGeneric return result in double precision unless the parameters are not empty\n\nopencv (82 contributors)\n\ngit shortlog --no-merges -ns 4.1.0..4.1.1 129 Alexander Alekhin 32 Dmitry Kurtaev 19 Maksim Shabunin 14 Vitaly Tuzov 11 Lubov Batanina 11 Ruslan Garnov 8 Andrey Golubev 7 atalaman 6 Ahmed Ashour 5 Anton Potapov 5 Rostislav Vasilikhin 5 Thang Tran 4 Liubov Batanina 4 catree 3 Alexey Smirnov 3 LaurentBerger 3 SchultzC 3 Stefan Brüns 3 Tomoaki Teshima 3 arnaudbrejeon 3 mehlukas 2 Chip Kerchner 2 David Carlier 2 Diego 2 Giles Payne 2 Hugo Lindström 2 Jan Starzynski 2 Pavel Rojtberg 2 Sayed Adel 2 Suleyman TURKMEN 2 gal0is 2 utibenkei 1 Adam Rankin 1 Alexander Nesterov 1 Alexey Nikolaev 1 Allan Rodriguez 1 Apoorv Goel 1 AsyaPronina 1 Cameron Martin 1 Chip Kerchner Chip.Kerchner@ibm.com 1 Dal Rupnik 1 Daniel Ingram 1 Fady Essam 1 Feng Chen 1 Guillaume Jacob 1 James Bowley 1 Joe Howse 1 Kang 1 Kang Yifei 1 Kohei Yoshida 1 Lukas Mehl 1 Madhav 1 Manolis Stamatogiannakis 1 Manthan Keim 1 Nick Yang 1 Nuzhny007 1 Rafa Gomez-Jordana 1 Ryan Wong 1 Sergiu Deitsch 1 Sheel-Patel 1 StefanBruens 1 Ted Steiner 1 Tomasz Gorochowik 1 Vishal Chiluka 1 Yashas Samaga B L 1 anton-potapov 1 armenpoghosov 1 bommo1 1 dianlujitao 1 jxu 1 kiwixz 1 kupferb 1 lain 1 masa-iwm 1 michal-kowalczyk 1 ostarling 1 rasmus25 1 seungju 1 take1014 1 tribta 1 vdgussem 1 wenzhao\n\nopencv_contrib (25 contributors)\n\ngit shortlog --no-merges -ns 4.1.0..4.1.1 6 Alexander Alekhin 4 Pavel Rojtberg 3 dnandha 2 Ahmed Ashour 2 LaurentBerger 2 Leonid Beynenson 2 Rostislav Vasilikhin 2 Tomoaki Teshima 1 Andrew 1 James Bowley 1 Krutika Bapat 1 Lizeth Huertas 1 RAJKIRAN NATARAJAN 1 Suleyman TURKMEN 1 Tobias Senst 1 Vishal Chiluka 1 aj28faty 1 berak 1 bitsun 1 catree 1 clunietp 1 lichun 1 mehlukas 1 sebastian 1 tegusi\n\nJuly, 2019\n\nOpenCV 3.4.7 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.1.1.\n\nApril, 2019\n\nSpring update for OpenCV 4.x has been released.\n\nHighlights of this release:\n\nDNN module:\n\nReduced peak memory consumption for some models by up to 30%.\n\nUpdated and improved integration with Intel Inference Engine:\n\nInference Engine 2018R3 is now the oldest supported version.\n\nMyriad X (Intel® Neural Compute Stick 2) is now supported and tested.\n\nImplemented automatic reshaping (for the input images of different resolutions) of networks represented in IE IR format.\n\nExtended OpenCV DNN samples to support various models from OpenVINO Open Model Zoo\n\nNew networks from TensorFlow Object Detection API: Faster-RCNNs, SSDs and Mask-RCNN with dilated convolutions, FPN SSD\n\nPerformance improvements:\n\nMore optimization using AVX2 instruction set.\n\nAutomatic runtime dispatching is available for large set of functions from core and imgproc modules.\n\nAndroid support:\n\nVideoCapture C++ interface supports Android Media NDK (21+) video I/O file capture back-end\n\nIntegrated many great patches from OpenCV community:\n\nMatplotlib Perceptually Uniform Sequential colormaps\n\nAdd keypoints matching visualization for real-time pose estimation tutorial\n\nAdd Hand-Eye calibration methods\n\nJava: improved support for multidimensional arrays (Mat)\n\nDynamically loaded videoio backends (FFmpeg, GStreamer)\n\nopencv_contrib: Robust local optical flow (RLOF) implementations\n\nopencv_contrib: Implementation of Quasi Dense Stereo algorithm\n\nopencv_contrib: New module: Image Quality Analysis (IQA) API\n\nopencv_contrib: BRISQUE No Reference Image Quality Assessment (IQA) API\n\nopencv (77 contributors)\n\ngit shortlog --no-merges -ns 4.0.1..4.1.0 118 Alexander Alekhin 32 Dmitry Kurtaev 16 Vitaly Tuzov 13 Maksim Shabunin 11 Namgoo Lee 9 Rostislav Vasilikhin 7 Quentin Chateau 6 Sayed Adel 6 smirnov-alexey 5 Alexander Nesterov 5 Alexey Smirnov 5 LaurentBerger 4 Giles Payne 4 Pavel Rojtberg 3 Andrey Golubev 3 Brad Kelly 3 Liubov Batanina 3 Ruslan Garnov 3 berak 3 catree 2 Christoph Rackwitz 2 Kohei Yoshida 2 Lee Jaehwan 2 Pedro Ferreira da Costa 2 Stefan Dragnev 2 Suleyman TURKMEN 2 Wu Zhiwen 2 klemens 2 npochhi 2 zuoshaobo 1 103yiran 1 AKAMath 1 Adrian Renner 1 AnastasiaaSenina 1 Arnaud Brejeon 1 Augusto Fraga Giachero 1 Ayush Pandey 1 BALACHANDAR S 1 Bharat123Rox 1 CUI Hao (Lab) 1 Christopher N. Hesse 1 David Carlier 1 Easton Liu 1 ExpandingDev 1 George Wilson 1 Gregor Mittag 1 Hannah McLaughlin 1 Jaewoo Song 1 Jim Zhou 1 JoeHowse 1 Josh Veitch-Michaelis 1 Juha Reunanen 1 Kangning Song 1 Lindsay Roberts 1 Lubov Batanina 1 Lucas Towers 1 Matthew K. Gumbel 1 Nicolae Rosia 1 Oleh 1 Otto Seiskari 1 Pierre Chatelier 1 RAJKIRAN NATARAJAN 1 Rajkiran Natarajan 1 Ramez Rafla 1 Raphael Graf 1 Richard Veale 1 Scott Ramsby 1 Thang Tran 1 Thomas Peters 1 WuZhiwen 1 atinfinity 1 cftang 1 iPanda 1 mehlukas 1 rpici 1 winice 1 x3lif\n\nopencv_contrib (22 contributors)\n\ngit shortlog --no-merges -ns 4.0.1..4.1.0 8 Namgoo Lee 4 Pavel Rojtberg 3 Alexander Alekhin 3 clunietp 2 Hamdi Sahloul 2 Maksim Shabunin 2 Raphael Graf 1 Charles Taylor 1 Dimitrios Psychogyios 1 Dmitry Kurtaev 1 JoeHowse 1 Julian Seuffert 1 Richard Veale 1 Sreejith S 1 Ted Steiner 1 Tomoaki Teshima 1 berak 1 iindovina 1 kushashwa ravi shrimali 1 shimat 1 tsenst 1 utkarshg6\n\nApril, 2019\n\nOpenCV 3.4.6 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.1.0.\n\nDecember, 2018\n\nNew Year's update for OpenCV 4.0 has been released.\n\nopencv (38 contributors)\n\ngit shortlog --no-merges -ns 4.0.0..4.0.1 44 Alexander Alekhin 16 Dmitry Kurtaev 12 Vitaly Tuzov 10 Maksim Shabunin 7 Evgeny Latkin 5 Dmitry Budnikov 3 Ruslan Garnov 2 1over 2 Adrian Kashivskyy 2 LaurentBerger 2 Quentin Chateau 2 Rostislav Vasilikhin 2 Sayed Adel 2 Tomoaki Teshima 2 vishwesh5 1 Alexander Nesterov 1 Bram 1 Dan Mašek 1 Dmitry Matveev 1 Etienne Brateau 1 Kartik Mohta 1 Madan Ram 1 Matthias Winkelmann 1 Namgoo Lee 1 Pavel Rojtberg 1 Peter J. Stieber 1 Rijubrata Bhaumik 1 Sean McBride 1 Sergiu Deitsch 1 Thad House 1 Tsukasa Sugiura 1 Vasiliy Sorokin 1 Wu Zhiwen 1 WuZhiwen 1 berak 1 huangqinjin 1 okriof 1 pascal\n\nopencv_contrib (10 contributors)\n\ngit shortlog --no-merges -ns 4.0.0..4.0.1 3 Pavel Rojtberg 2 huangqinjin 1 Alexander Alekhin 1 LinkeyLeo 1 Suleyman TURKMEN 1 YTY 1 Yuriy Obukh 1 indianocean10000 1 vishwesh5 1 塚本信男\n\nDecember, 2018\n\nOpenCV 3.4.5 has been released. Bug fixes, optimizations and other enhancements are propagated into OpenCV 4.0.1.\n\n4.0.0-alpha: September, 2018\n\n4.0.0-beta: October, 2018\n\n4.0.0 final: November, 2018\n\nWe are glad to announce OpenCV 4.0 release.\n\nHere is what's new:\n\nA lot of C API from OpenCV 1.x has been removed. The affected modules are objdetect, photo, video, videoio, imgcodecs, calib3d.\n\nPersistence (storing and loading structured data to/from XML, YAML or JSON) in the core module has been completely reimplemented in C++ and lost the C API as well. For now base64 support is not complete (only loading base64-encoded XML and YAML is supported, encoding is not supported at all). Also, the random access of sequences stored in a FileNode is now a slow O(N) operation vs. fast O(1) in the previous implementation; use cv::FileNodeIterator for much faster sequential access. On the positive side, the loaded FileStorage's take 3-6x less memory than in the previous implementation.\n\nOpenCV is now C++11 library and requires C++11-compliant compiler. Note that OpenCV 3.x can also be built as C++11 library by passing -DENABLE_CXX11=ON flag to CMake. Now this is the only option so the flag is not needed and is not available anymore.\n\nThanks to the extended C++11 standard library, we could get rid of hand-crafted cv::String and cv::Ptr. Now cv::String == std::string and cv::Ptr is a thin wrapper on top of std::shared_ptr. Also, on Linux/BSD for cv::parallel_for_ we now use std::thread's instead of pthreads.\n\nDNN improvements\n\nAdded support for Mask-RCNN model. Follow a guide and use a python sample.\n\nIntegrated ONNX parser. We now support many popular classification networks. YOLO object detection network in partially supported as well (ONNX version of YOLO lacks some final layers that actually give you the list of rectangles). Thanks to Lubov Batanina for her first-time contribution to OpenCV!\n\nFurther improved performance of DNN module when it's built with Intel DLDT support by utilizing more layers from DLDT. By the way, DLDT has been recently released as open-source. See the guide how to build and use OpenCV with DLDT support.\n\nAPI changes: by default, blobFromImage methods family do not swap red and blue channels and do not crop the input image. Beware that this API change has also been propagated to OpenCV 3.4 branch.\n\nExperimental Vulkan backend has been added for the platforms where OpenCL is not available: https://github.com/opencv/opencv/pull/12703. Thanks to Zhiwen Wu and Juan J. Zhao for the contribution!\n\nAdded shortcuts for the most popular deep learning networks supported by OpenCV. You may specify an alias name of model to skip pre-processing parameters and even paths to models! In example, instead of\n\npython object_detection.py --model opencv_face_detector.caffemodel --config opencv_face_detector.prototxt --mean 104 177 123 --width 300 --height 300\n\nyou can type just\n\npython object_detection.py opencv_fd\n\nFixed OpenCL acceleration on AMD and NVIDIA GPUs. Now you may enable DNN_TARGET_OPENCL for your model without extra environment variables. Please note that DNN_TARGET_OPENCL_FP16 is tested on Intel GPUs only, so it still requires additional flags.\n\nCompletely new module opencv_gapi has been added. It is the engine for very efficient image processing, based on lazy evaluation and on-fly construction of the processing graph (hence the name Graph API or G-API). See Graph API (G-API) for details.\n\nPerformance improvements\n\nA few hundreds of basic kernels in OpenCV have been rewritten using so-called \"wide universal intrinsics\". Those intrinsics map to SSE2, SSE4, AVX2, NEON or VSX intrinsics, depending on the target platform and the compile flags. It should translate to noticeably better performance, even for some already optimized functions. For example, if you configure and compile OpenCV with CPU_BASELINE=AVX2 CMake flag, you can get extra 15-30% speed improvement for certain image processing operations. By OpenCV 4.0 gold we plan to translate many more kernels to such intrinsics and also employ our dynamic dispatching mechanism, so that on x64 platform AVX2-optimized kernels are always built-in and could be selected on-fly if the actual hardware supports such instructions (without having to change CPU_BASELINE). Big thanks to Sayed Adel for VSX backend and the initial (but rather complete!) AVX2 backend of the wide universal intrinsics! Big thanks to Vitaly Tuzov for conversion of many functions in OpenCV to wide universal intrinsics.\n\nSupport for IPP 2019 has beed added with IPPICV component upgrade.\n\nQR code detector and decoder have been added to opencv/objdetect module together with live sample. Currently, the decoder is built on top of QUirc library (which snapshot we put into opencv). Thanks to our intern Alexander Nesterov for this important contribution!\n\nThe popular Kinect Fusion algorithm has been implemented, optimized for CPU and GPU (OpenCL), and integrated into opencv_contrib/rgbd module. To make the live sample work, we updated our Kinect 2 support in opencv/videoio module. In 4.0 beta the code has been accelerated for iGPU, which resulted in 3x performance boost in the high-resolution case (512x512x512 integration volume). Thanks to Rostislav Vasilikhin for the excellent work!\n\nVery efficient and yet high-quality DIS dense optical flow algorithm has been moved from opencv_contrib to opencv, video module. See the example. Thanks to Alexander Bokov, our GSoC student, who implemented this algorithm, and Peng Li, who optimized it for GPU.\n\nAt the same time, slower TV L1 optical flow algorithm has been moved from opencv to opencv_contrib.\n\nopencv (155 contributors)\n\ngit shortlog --no-merges -ns 964a4d75b44a3c4c2425b9ed8c4c25c4e6db79ca..4.0.0 387 Alexander Alekhin 99 Dmitry Kurtaev 45 Hamdi Sahloul 44 Maksim Shabunin 35 Vitaly Tuzov 26 berak 25 Tomoaki Teshima 25 Vadim Pisarevsky 23 catree 19 Suleyman TURKMEN 15 Sayed Adel 11 Alexander Nesterov 11 Pavel Rojtberg 10 Rostislav Vasilikhin 9 Dmitry Matveev 8 Kuang Fangjun 7 Li Peng 6 Wu Zhiwen 6 take1014 5 cyy 5 yuki takehara 4 Evgeny Latkin 4 LaurentBerger 4 cclauss 3 Apoorv Goel 3 Karpushin Vladislav 3 Lubov Batanina 3 Michał Janiszewski 3 Namgoo Lee 3 Ruslan Garnov 3 Wenfeng CAI 3 k-shinotsuka 3 shengyu 3 tompollok 2 Adam Radomski 2 Alexander Duda 2 Alexander Enaldiev 2 Andrew Mroczkowski 2 Antonio Borondo 2 AsyaPronina 2 Dmitry Budnikov 2 George Mironov 2 Jiri Horner 2 Mansoo Kim 2 Mark Harfouche 2 Pavel Vlasov 2 Peter Rekdal Sunde 2 Sean McBride 2 Vlad Karpushin 2 Vladislav Sovrasov 2 fegorsch 2 gkaneto 2 luz.paz 2 pasbi 1 Adam Rankin 1 Alessandro de Oliveira Faria (A.K.A.CABELO) 1 Alexey Nikolaev 1 Ali Yasin Eser 1 Anush Elangovan 1 Apoorv 1 Arnaud Brejeon 1 Bahram Dahi 1 CJ Smith 1 CYTing1998 1 Christopher Gundler 1 Colin Smith 1 Damien Picard 1 David 1 Diego Barrios Romero 1 Emanuele Ruffaldi 1 Fangjun Kuang 1 Florian Echtler 1 Forrest Reiling 1 Gaetano Checinski 1 Georgy Mironov 1 HarshDolhare 1 Henry 1 Hiro Kobayashi 1 Ilari Venäläinen 1 Ivan Pozdeev 1 Jakub Golinowski 1 Jean Carass 1 Kaartic Sivaraam 1 Khem Raj 1 Kyle D. Patterson 1 Latkin, Yevgeny I 1 Li, Peng 1 Loic Devulder 1 Loic Petit 1 Lucas Teixeira 1 Marat K 1 Marco A. Gutierrez 1 Matt Bennett 1 Maxim Smirnov 1 Menghui Xie 1 Michael Firman 1 Nesterov Alexander 1 Nobuo Tsukamoto 1 Patrick Cox 1 Paul Jurczak 1 Paul Shin 1 Paul92 1 Peter Jozsa 1 Peter Leitzen 1 Peter Whidden 1 Philipp Hasper 1 Pierre Jeambrun 1 Reid Kleckner 1 Ryan Wong 1 Sacha 1 Sam Radhakrishnan 1 Sancho McCann 1 Sergey Nuzhny 1 Simon Que 1 Spark Echo 1 Takuho NAKANO 1 Teng Yiliang 1 Todor Tomov 1 Triplesalt 1 Vlad Kraevskiy 1 WuZhiwen 1 Zhenqing Hu 1 abhi-jha 1 amatyuko 1 asciian 1 branka-plateiq 1 cDc 1 cabelo 1 chacha21 1 drkoller 1 exoson 1 gineshidalgo99 1 gnthibault 1 huangqinjin 1 ilovezfs 1 jasjuang 1 jsxyhelu 1 kamino410 1 logic1988 1 lqy123000 1 matech96 1 maver1 1 miaow1988 1 rockzhan 1 root 1 soonbro 1 ssnover95 1 tellowkrinkle 1 unknown 1 vishwesh5 1 wanghanmin 1 woody.chow 1 yom 1 zarelaky 1 zuoshaobo\n\nopencv_contrib (43 contributors)\n\ngit shortlog --no-merges -ns aaf8fffcfbe1b80f9653b21d2095bc9037d418be..4.0.0 49 Alexander Alekhin 18 Hamdi Sahloul 16 Pavel Rojtberg 8 LaurentBerger 8 Tomoaki Teshima 6 berak 5 Maksim Shabunin 5 Vadim Pisarevsky 4 Rostislav Vasilikhin 4 Suleyman TURKMEN 3 Jukka Komulainen 3 soyer 3 tompollok 2 Lubos 2 Vitaly Tuzov 2 catree 1 Anton Shutikhin 1 Antonio Borondo 1 Colin 1 Dietrich Büsching 1 Jan Beich 1 Jeff Bail 1 Jiri Horner 1 Khem Raj 1 Kushashwa Ravi Shrimali 1 Li-Chi Huang 1 Mohammad Haghighat 1 Sayed Adel 1 SongChiYoung 1 Unknown 1 Varvrar 1 Vladislav Sovrasov 1 YTY 1 bini 1 d.bouron 1 dianlujitao 1 fegorsch 1 gdemarcq 1 gmedan 1 kartoffelsalat 1 simonreich 1 trobro 1 yarglawaldeg\n\nNovember, 2018\n\nOpenCV 3.4.4 has been released. This is a mantenance release. New features are landed in OpenCV 4.0.\n\nAugust, 2018\n\nOpenCV 3.4.3 has been released, with further extended dnn module, documentation improvements, some other new functionality and bug fixes.\n\nopencv (35 contributors)\n\n$ git shortlog --no-merges -ns 3.4.2..3.4.3 68 Alexander Alekhin 24 Dmitry Kurtaev 21 Maksim Shabunin 10 berak 5 Kuang Fangjun 4 Alexander Nesterov 4 catree 3 Sayed Adel 3 Suleyman TURKMEN 3 Vadim Pisarevsky 2 Li Peng 2 Tomoaki Teshima 2 Vitaly Tuzov 2 luz.paz 1 Bahram Dahi 1 Colin Smith 1 Hamdi Sahloul 1 Hiro Kobayashi 1 Kaartic Sivaraam 1 Karpushin Vladislav 1 Lucas Teixeira 1 Maxim Smirnov 1 Paul92 1 Pierre Jeambrun 1 Rostislav Vasilikhin 1 Sacha 1 Teng Yiliang 1 Triplesalt 1 amatyuko 1 asciian 1 logic1988 1 miaow1988 1 tompollok 1 yom 1 zarelaky\n\nopencv_contrib (13 contributors)\n\n$ git shortlog --no-merges -ns 3.4.2..3.4.3 8 Alexander Alekhin 3 Pavel Rojtberg 1 Anton Shutikhin 1 Hamdi Sahloul 1 Jan Beich 1 LaurentBerger 1 Li-Chi Huang 1 Maksim Shabunin 1 berak 1 bini 1 dianlujitao 1 gdemarcq 1 trobro\n\nJuly, 2018\n\nOpenCV 3.4.2 has been released, with further extended dnn module, documentation improvements, some other new functionality and bug fixes.\n\nOpenCV 3.4.x development is switched from \"master\" to \"3.4\" branch. \"master\" branch is used for development of upcoming OpenCV 4.x releases.\n\nBugfixes / optimizations / small improvemets should go into \"3.4\" branch. We will merge changes from \"3.4\" into \"master\" regularly (weekly/bi-weekly).\n\nDNN improvements\n\nAdded a new computational target DNN_TARGET_OPENCL_FP16 for half-precision floating point arithmetic of deep learning networks using OpenCL. Just use net.setPreferableTarget(DNN_TARGET_OPENCL_FP16).\n\nExtended support of Intel's Inference Engine backend to run models on GPU (OpenCL F"
    }
}