{
    "id": "dbpedia_8578_2",
    "rank": 64,
    "data": {
        "url": "http://lin-ear-th-inking.blogspot.com/2023/03/simplifying-polygonal-coverages-with-jts.html",
        "read_more_link": "",
        "language": "en",
        "title": "Lin.ear th.inking: Simplifying Polygonal Coverages with JTS",
        "top_image": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjHT0wtC-afVp5cPu64bAiazfSz9e_16FOYXpt2rP7MD90vUHPdN3qwmtscwauElFw9AOXVP9KftN6WRKS6lrkCeuE-AyAy40PEF9uf-oHt04fycLVE-K19eS-H6yOX4w6D3qESjVBLnRuYbsCA6J9olg8iVGsu3woHhQ1QKADN26JebtDaycEjQUEo/w1200-h630-p-k-no-nu/poly-cov-simp-france-orig.png",
        "meta_img": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjHT0wtC-afVp5cPu64bAiazfSz9e_16FOYXpt2rP7MD90vUHPdN3qwmtscwauElFw9AOXVP9KftN6WRKS6lrkCeuE-AyAy40PEF9uf-oHt04fycLVE-K19eS-H6yOX4w6D3qESjVBLnRuYbsCA6J9olg8iVGsu3woHhQ1QKADN26JebtDaycEjQUEo/w1200-h630-p-k-no-nu/poly-cov-simp-france-orig.png",
        "images": [
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjHT0wtC-afVp5cPu64bAiazfSz9e_16FOYXpt2rP7MD90vUHPdN3qwmtscwauElFw9AOXVP9KftN6WRKS6lrkCeuE-AyAy40PEF9uf-oHt04fycLVE-K19eS-H6yOX4w6D3qESjVBLnRuYbsCA6J9olg8iVGsu3woHhQ1QKADN26JebtDaycEjQUEo/w400-h265/poly-cov-simp-france-orig.png",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYz0YcqnVxh4Q83eSwU5p6lyLxhB1lcUCKDOuXCyV6LFxdJbU04ILLjFzN-FY7FCU_403o7azXMkQmAaZgvPQ1COqtVXzhGoPM39bcnzLwJ4HmQd99jSLJfRY360Wt6NxwRyeMASbLgX8a4MkShlKRQItWARNvwy4RToXLPMTLMJ-NAmNViW7aGFIT/w400-h270/poly-cov-simp-fra-0p01.png",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOUXPqNhh5loOWlVQSXjBFGd3xiVDhZFUYCCnwepVmthfx-tOBf6rh0jkMPoBpnIWA_2Cj5CDf-uwBLGkUfDV4DLCzKn2OeAmJGPKbuGVgMKTMWretq6RHJq0fZUN5hpbqvYZSuglwSjCnTeivrqgS6qA-GOI7h-TFYZQRCRpTNw99oYGJax21siao/w400-h315/poly-cov-simp-fra-closeup.png",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgmx1iDR1pv44rG5YZ5IeoJhKDX-gSOqK9953_US9MutrV6iG75Sri8eCt1rqpfgEmo41JpCZbihNHjWvhmrcvUDtcPO1omSKX8eCF_gKEYIa5zHbYrp3HhnUKos3CrV4ndIF1KAghcDB0HX9D9YmVB8C58nznBXweFacBIa5RlPVZlYhWcOgRhxzV7/w400-h263/polyy-cov-simp-fra-0p1.png",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjsQE1oWQSmDZY1aGzCJDUSuDNL4lfzs94c2Ef0J-U7rTUqve57fY78D3DpWbZfcofgy02xl0yFhOCmHhfgPy4kYUe3GASXfvVxjBTXADjTYRh_y-Pejod0i35gOjoS8m_I7UW0RfGiLSm1baObypa5lSbxuPlsUnkwuyt10RWpXkFpfiumDfxVhtkk/w400-h278/poly-cov-simp-fra-0p5.png",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjnqpfWN3ZVVKFo8aP_BOBVGNtCDJuT3ncNeorcouwnNwQ7WFoK62un74ALMh-5OYdqYiafKIW1DxVja0LAgAU1Ga08JGjd_PD4XLEyBkreDP4bwPsBG4lLL-n30E5ZZTCRvQ2dUskCbM-_r1Ae43IEUfhyyHrAw0tBeg5I484S8_0ek-9RQDQ7jdhg/w400-h265/poly-cov-simp-inner-france.png",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "http://www.blogger.com/img/blogger_logo_round_35.png",
            "https://resources.blogblog.com/img/icon_delete13.gif",
            "http://www.blogger.com/img/blogger_logo_round_35.png",
            "https://resources.blogblog.com/img/icon_delete13.gif",
            "http://www.blogger.com/img/blogger_logo_round_35.png",
            "https://resources.blogblog.com/img/icon_delete13.gif",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgWp2Q_-RyV0nv5mthgxzsoogVrLcr3X74exGMOxopNrPzJ4VPliS-IN0J3Ad8QNeB6veXmiVW7yRFRefUeM0YXXsa7W2F7BP-Z42NGP8R-9RGOn7ab2ltWb7gs8bpGot4Klifg1DOdu1U/s1600/martin_davis_small.jpg",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhSmFeaYPuQLXCc98HVc_NxM0EVZnHsmZm_XMqjnXrVojopYJHuaR29nJO83f_hPNEZlhFI86XRTaWvjBUDO0DDHX1uNQ2sv6LSuYnyiPXi0-NqFP4K8WQ5MH1vPWmL4WT1pBIT5smlZmk/w72-h72-p-k-no-nu/cascadedUnion.png",
            "https://lh3.googleusercontent.com/blogger_img_proxy/AEn0k_tnGYjVn7RmhdIP-IRFlqd0zYs6mU3pvm4pFvD9W9JHN8UQGyutnL__MkH0YfxqtqkWhcuseY9zTvPbtt8WtbUEioGl3khpjsoiyV1afvmlSRaHJTnxkxw9dkr9iQYTbfm61Q=w72-h72-p-k-no-nu",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhcP5TOZySOotC15jt5E7yG4ZJrxEQK14lgNqPF9DcqYgnLnxFHydTkHO9RoIzitO0ftsCYMtYGq_Rc4otQFzb-cD-_E7L-gNPhAXRqd9qhVD2hOQHxsSfQ0Q66nK7JbMIrRYkRNLGWAYw/w72-h72-p-k-no-nu/bigpoly_noimprove.png",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgMMXmeVsTTInsYKjWalulH-n97pp4_9xhf7OeRfX8Fe94v85qluxTTYuWL0RRwwuH4wm93x929W9Sh2snLy_xnGavzapfP3wFgFmtIyS6V7DO4wUF2IOicwGOmUOEhxjAWSL0gSTCNIWo/w72-h72-p-k-no-nu/GTFS_data_model_diagram.PNG",
            "https://blogger.googleusercontent.com/img/a/AVvXsEhTsfTJAsSKAscvZpIr8bVlodUAyTswzjzdCpat2TswDnV6AYdkYDly3T934T8SHlfaBowVpNwlgyY2jMNCMwc_FTiNrJQFvH2JnXWBClRDeuLqYwb4zZKpCrNugxVQBAwK_E2Q27jLtVOn1O9asYOYja8feDScJVC8nv8vzcJkhQlNsSkD7jYQ0Kg3=w72-h72-p-k-no-nu",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhu5W1Qcc-r3e4KCczmkHv6hIDp3ppYKx50dgFKmjq7pP_DYpePFtUB7IVGhJZS_XsPSrAwNF2m8JjpvpvDJmnk3x-vvFYGwosExDD7xCv7WIVvxBDsisziKJePCkBVcFoHiFKSoQNKUNY/w72-h72-p-k-no-nu/gdos-pinch.png",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiS5c8lcxsTJld5MG692-JtaTChUkfbaHnncI0WMUgnhuKtjCIXt50wDlb86TZ6dCAJFFBsaSFe66laHUfBrGC_FRDxwfmanKnPvxTERfbxajbmqvIk2u7xwXTmckSCMe7jKOKPTP1y7TU/w72-h72-p-k-no-nu/interiorpoint-ebc-va.png",
            "https://lh3.googleusercontent.com/blogger_img_proxy/AEn0k_v8sJm0QGBEeljri27v6_zjvJ30Sv6pZEIskOakohppsYjKmo3IWalUShemAIEAZeNa6Hui3cuhWXoqDkh7nqfVipxnKsXd=s16-w16-h16",
            "https://lh3.googleusercontent.com/blogger_img_proxy/AEn0k_vEIhI--j78yW6bl4Rin3h85p3jZX0woKB3fWcuhU8WtTON2nENJrAd4wjO4BHKIw5tiQfU1YU6p4tOOOlwaNo7aoAaDCJV4xRwclMQbvbxtWG3=s16-w16-h16",
            "https://lh3.googleusercontent.com/blogger_img_proxy/AEn0k_uM5kHgRIlyDXGL3sOJcGUJ3Wcg5VL0FfycnuHOXWJsOg2sCG8SdGNacqm5F6nE9547FJx3yznmRTYTt5FZWTpMT6uwAucWXvXsZaIN-xuLkQ=s16-w16-h16",
            "https://lh3.googleusercontent.com/blogger_img_proxy/AEn0k_snWTdaukjOptEw7BhZSUcIxXz06o5i3C7jfHsjt-2LmXmNKWlCwfCVm4BfiVLfA-kpWYRb6P2PLFZjNCntRaoawtUmv-zOfZ6hac8EiVMLPwvyzA=s16-w16-h16",
            "https://lh3.googleusercontent.com/blogger_img_proxy/AEn0k_snWTdaukjOptEw7BhZSUcIxXz06o5i3C7jfHsjt-2LmXmNKWlCwfCVm4BfiVLfA-kpWYRb6P2PLFZjNCntRaoawtUmv-zOfZ6hac8EiVMLPwvyzA=s16-w16-h16",
            "https://lh3.googleusercontent.com/blogger_img_proxy/AEn0k_t1yrH-TGu086qowswxMcuJKt_b7uedPrcptF9OLKrTmY8RWsu7ZKK3qFQjEDkFl92OZo1z578bF2yUuDj4TQruXIC2XLxlxa5Ar3I=s16-w16-h16"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Dr JTS",
            "View my complete profile"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "A new capability for the JTS Topology Suite is operations to process Simple Polygonal Coverages .Â  A Simple Polygon Coverage  is a set of ed...",
        "meta_lang": "",
        "meta_favicon": "http://lin-ear-th-inking.blogspot.com/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "http://lin-ear-th-inking.blogspot.com/2023/03/simplifying-polygonal-coverages-with-jts.html",
        "text": "A new capability for the JTS Topology Suite is operations to process Simple Polygonal Coverages. A Simple Polygon Coverage is a set of edge-matched, non-overlapping polygonal geometries (which may be non-contiguous, and have holes). Typically this is used to model an area in which every point has a value from some domain. A classic example of a polygonal coverage is a set of administrative boundaries, such as those available from GADM or Natural Earth.\n\nThe first coverage operations provided are:\n\nCoverage Validation, to check if a set of polygons forms a topologically-valid coverage\n\nCoverage Union, which takes advantage of coverage topology to provide a very fast union operation\n\nAnother operation on polygonal coverages is simplification. Simplifying a coverage reduces the number of vertices it contains, while preserving the coverage topology. Preserving topology means that the simplified polygons still form a valid coverage, and that polygons which had a common edge in the input coverage (i.e. which were adjacent) still share an edge in the simplified result. Reducing dataset size via simplification can provide more efficient storage and download, and faster visualization at smaller scales.\n\nFrance coverage simplified with tolerance 0.01 (7,918 vertices)\n\nThe decrease in resolution is hardly noticeable at this scale\n\nCloseup of simplified coverage (tolerance = 0.01)\n\nSimplification is perhaps the most requested algorithm for polygonal coverages (for example, see GIS StackExchange questions here, here and here.) My colleague Paul Ramsey sometimes calls it the \"killer app\" for polygonal coverages. Earlier this century there was no easily-available software implementing this capability. Users often had to resort to the complex approach of extracting the linework from the dataset, dissolving it, simplifying the lines (with a tool which would not cause further overlaps), re-polygonizing, and re-attaching feature attribution to the result geometries.\n\nMore recently tooling has emerged to provide this functionality. Simplification is the raison-d'etre of the widely-used and cited MapShaper tool. GRASS has the v.generalize module. And good old OpenJUMP added Simplify Polygon Coverage a while back.\n\nJTS has provided the TopologyPreservingSimplifier algorithm for many years, but this only operates on Polygons and MultiPolygons, not on polygonal coverages. (Attempting to use it on polygonal coverages can introduce gaps and overlaps, resulting in complaints like this.) But coverage simplification has been lacking in JTS/GEOS - until now.\n\nJTS Coverage Simplification\n\nRecent work on Polygon Hulls provided ideas for an implementation of coverage simplification. The CoverageSimplifier class uses an area-based simplification approach similar to the well-known Visvalingam-Whyatt algorithm. This provides good results for simplifying areal features (as opposed to linear ones). It's possible to use a Douglas-Peucker based approach as well, so this may be a future option.\n\nThe degree of simplification is determined by a tolerance value. The value is equivalent roughly to the maximum distance a simplified edge can change (technically speaking, it is the square root of the area tolerance for the Visvalingam-Whyatt algorithm).\n\nThe algorithm progressively simplifies all coverage edges, while ensuring that no edges cross another edge, or touch at endpoints. This provides the maximum amount of simplification (up to the tolerance) while still maintaining the coverage topology.\n\nThe coverage of course should be valid according to the JTS CoverageValidator class. Invalid coverages can still be simplified, but only edges with valid topology will have it maintained.\n\nFrance coverage simplified with tolerance = 0.1 ( 1,928 vertices)\n\nFrance coverage simplified with tolerance = 0.5 ( 1,527 vertices)\n\nThe coverage topology (adjacency relationship) is always preserved.\n\nInner Simplification\n\nThe implementation also provides the interesting option of Inner Simplification. This mode simplifies only inner, shared edges, leaving the outer boundary edges unchanged. This allows portions of a coverage to be simplified, by ensuring that the simplified polygons will fit exactly into the original coverage. (This GIS-SE question is an example of how this can be used.)\n\nInner Simplification of France coverage\n\nIt would also be possible to provide Outer Simplification, where only outer edges are simplified. It's not clear what the use case would be for this - if you have ideas, leave a comment!\n\nGEOS and PostGIS\n\nAs usual, this algorithm will be ported to GEOS, from where it will be available to downstream projects such as PostGIS and Shapely."
    }
}