{
    "id": "dbpedia_8578_1",
    "rank": 85,
    "data": {
        "url": "https://www.slideserve.com/flavian/jts-topology-suite",
        "read_more_link": "",
        "language": "en",
        "title": "JTS Topology Suite An API for Processing Linear Geometry PowerPoint Presentation",
        "top_image": "https://cdn0.slideserve.com/1180226/slide1-n.jpg",
        "meta_img": "https://cdn0.slideserve.com/1180226/slide1-n.jpg",
        "images": [
            "https://www.slideserve.com/img/logo.svg",
            "https://cdn0.slideserve.com/1180226/slide1-n.jpg",
            "https://www.slideserve.com/photo/34721.jpeg",
            "https://www.slideserve.com/img/output_cBjjdt.gif",
            "https://cdn0.slideserve.com/601452/intriguing-relationship-between-topology-and-geometry-dt.jpg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg",
            "https://www.slideserve.com/img/preload-bg.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2013-03-11T00:00:00",
        "summary": "",
        "meta_description": "JTS Topology Suite An API for Processing Linear Geometry . Martin Davis, Senior Technical Architect mbdavis@vividsolutions.com. JTS Topology Suite. Core API for processing Geometry Full implementation of OpenGIS Consortium Simple Features for SQL specification Open Source, 100% Java Slideshow...",
        "meta_lang": "en",
        "meta_favicon": "https://www.slideserve.com/img/favicon.ico",
        "meta_site_name": "SlideServe",
        "canonical_link": "https://www.slideserve.com/flavian/jts-topology-suite",
        "text": "JTS Topology Suite • Core API for processing Geometry • Full implementation of OpenGIS Consortium Simple Features for SQL specification • Open Source, 100% Java • Design Features: • Fast, production quality • Robust • Explicit precision model • All basic geometry operations • History • JTS 1.0 released Feb 2002 • JTS 1.4 released Nov 2003 JTS Topology Suite\n\nExplicit Precision Model • JTS provides ability to specify Precision Model of coordinates • Floating - Double & Single Precision (IEEE-754) • Fixed - specified # of decimal places • Ensures constructive geometryoperations are closed over the specified coordinate space Floating Fixed POLYGON ((3 2, 1 2, 1 3, 3 2.333333333333333, 3 2)) POLYGON ((3 2, 1 2, 1 3, 3 2)) JTS Topology Suite\n\nSpatial Predicates • Computes the spatial relationship of 2 Geometries • JTS implements the full Dimensionally Extended 9-Intersection Model (DE-9IM) • Computes dimension of intersection of Interior, Boundary, Exterior • General function: Relate( pattern ) • Named predicates: Equals, Disjoint, Intersects, Touches, Crosses, Within, Contains, Overlaps JTS Topology Suite\n\nOther Constructive Methods • Convex Hull • Standard Computational Geometry algorithm • Centroid & InteriorPoint • Centroid is center of mass (not necessarily in interior) • Interior point always in interior, as close to centre as possible • all Geometry types supported JTS Topology Suite\n\nFuture Work • Fully robust Overlay Operations • Improve performance • e.g. line noding, distance computation • Optimize repeated method calls on single Geometry • e.g. “find all geometries which intersect this geometry” • Improve internal structure • Geometry simplification / generalization methods • Douglas-Peucker line simplification, etc • Generalized Distance methods • Hausdorff distance, Frechet distance, etc • User-defined Geometry representation • Allows easier adaptation to other Geometry APIs, database structures • Affine Transform • Linear Referencing operations • Improved/Extended Spatial Indexes • Updatable Quadtree, R-tree, Visitor pattern, performance… • Coverage datatype JTS Topology Suite"
    }
}