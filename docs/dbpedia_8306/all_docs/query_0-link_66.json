{
    "id": "dbpedia_8306_0",
    "rank": 66,
    "data": {
        "url": "https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/9.0_release_notes/new-features",
        "read_more_link": "",
        "language": "en",
        "title": "Chapter 4. New features",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.redhat.com/Logo-Red_Hat-Documentation-A-Reverse-RGB.svg",
            "https://docs.redhat.com/Logo-Red_Hat-Documentation-A-Reverse-RGB.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Chapter 4. New features | Red Hat Documentation",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html/9.0_release_notes/new-features",
        "text": "download PDF\n\nThis part describes new features and major enhancements introduced in Red Hat Enterprise Linux 9.0.\n\n4.1. Installer and image creation\n\nAnaconda supports rhsm for machine provisioning through Kickstart installations for Satellite\n\nPreviously, machine provisioning depended on a custom %post script for Kickstart installation on Red Hat Satellite. This %post script imported the custom Satellite self-signed certificate, registered the machine, attached a subscription, and installed packages residing in repositories.\n\nWith RHEL 9, Satellite support has been added to the rhsm command for machine provisioning. You can now use rhsm for all provisioning tasks such as registering the system, attaching RHEL subscriptions, and installing from a Satellite instance.\n\n(BZ#1951709)\n\nRHEL supports localhost as a static hostname\n\nStarting with RHEL 9, setting localhost as a static hostname in /etc/hostname is valid. In this case, NetworkManager does not try to obtain a transient hostname through DHCP or reverse DNS lookup.\n\n(BZ#2190045)\n\nLicensing, system, and user setting configuration screens have been disabled post standard installation\n\nPreviously, RHEL users were configuring Licensing, System (Subscription manager), and User Settings prior to the gnome-initial-setup and login screens. With this update, the initial setup screens have been disabled by default to improve user experience.\n\nIf you must run the initial setup for user creation or license display, install the following packages based on the requirements.\n\nInstall initial setup packages.\n\n# dnf install initial-setup initial-setup-gui\n\nEnable initial setup while next reboot of the system.\n\n# systemctl enable initial-setup\n\nReboot the system to view initial setup.\n\nFor Kickstart installations, add initial-setup-gui to the packages section and enable the initial-setup service.\n\nfirstboot --enable %packages @^graphical-server-environment initial-setup-gui %end\n\n(BZ#1878583)\n\nAnaconda activates network automatically for interactive installations\n\nPreviously, when performing an interactive installation without having the network activated by Kickstart or boot options, users had to activate the network manually in the network spoke. With this update, Anaconda activates the network automatically, without requiring users to visit the network spoke and activate it manually.\n\nNote\n\nThis update does not change the installation experience for Kickstart installations and installations using the ip= boot option.\n\n(BZ#1978264)\n\nImage Builder now supports filesystem configuration\n\nWith this enhancement, you can specify custom filesystem configuration in your blueprints and you can create images with the desired disk layout. As a result, by having non-default layouts, you can benefit from security benchmarks, consistency with existing setups, performance, and protection against out-of-disk errors.\n\nTo customize the filesystem configuration in your blueprint, set the following customization:\n\n[[customizations.filesystem]] mountpoint = \"MOUNTPOINT\" size = MINIMUM-PARTITION-SIZE\n\nNote\n\nAfter you add a file system customization to your blueprint, the file system is converted to a LVM partition.\n\n(BZ#2011448)\n\nNew options to Lock root account and Allow root SSH login with password\n\nThe following new options have been added on the root password configuration screen in the RHEL graphical installation:\n\nLock root account: Use this option to lock the root access to the machine.\n\nAllow root SSH login with password: Use this option to enable password-based SSH root logins.\n\nTo enable password-based SSH root logins, add the following line to the Kickstart file before you start the installation process.\n\n%post echo \"PermitRootLogin yes\" > /etc/ssh/sshd_config.d/01-permitrootlogin.conf %end\n\n(BZ#1940653)\n\nImage Builder now supports creating bootable installer images\n\nWith this enhancement, you can use Image Builder to create bootable ISO images that consist of a tarball file, which contains a root file system. As a result, you can use the bootable ISO image to install the tarball file system to a bare metal system.\n\n(BZ#2019318)\n\n4.2. RHEL for Edge\n\nRHEL for Edge now supports Greenboot built-in health checks by default\n\nWith this update, RHEL for Edge Greenboot now includes built-in health checks with watchdog feature to ensure that the hardware does not hang or freeze while rebooting. With that, you can benefit from the following features:\n\nIt makes it simple for watchdogs hardware users to adopt the built-in health checks\n\nA set of default health checks that provide value for built-in OS components\n\nThe watchdog is now present as default presets, which makes it easy to enable or disable this feature\n\nAbility to create custom health checks based on the already available health checks.\n\n(BZ#2083036)\n\nRHEL 9 provides rpm-ostree v2022.2\n\nRHEL 9 is distributed with the rpm-ostree version v2022.2, which provides multiple bug fixes and enhancements. Notable changes include:\n\nKernel arguments can now be updated in an idempotent way, by using the new --append-if-missing and --delete-if-present kargs flags.\n\nThe Count Me feature from DNF is now fully disabled by default in all repo queries and will only be triggered by the corresponding rpm-ostree-countme.timer and rpm-ostree-countme.service units. See countme.\n\nThe post-processing logic can now process the user.ima IMA extended attribute. When an xattr extended attribute is found, the system automatically translates it to security.ima in the final OSTree package content.\n\nThe treefile file has a new repo-packages field. You can use it to pin a set of packages to a specific repository.\n\n(BZ#1961324)\n\nRHEL 9 provides OSTree v2021.2\n\nRHEL 9 is distributed with the OSTree package version v2021.2, which provides multiple bug fixes and enhancements. Notable changes include:\n\nNew APIs for writing files, used in the new ostree-rs-ext project, to improve imports from tarballs.\n\nThe rofiles-fuse command now handles xattrs extended attributes. Note: The rofiles-fuse is considered deprecated, see #2281.\n\nImprovements to the introspection API and testing.\n\n(BZ#1961254)\n\nThe rpm-ostree rebase tool supports upgrade from RHEL 8 to RHEL 9\n\nWith this enhancement, you can upgrade your RHEL 8 system to RHEL 9 using the rpm-ostree rebase tool. It fully supports the default package set of RHEL for Edge upgrades between the most recent updates of RHEL 8 to the most recent updates of RHEL 9.\n\n(BZ#2082306)\n\n4.3. Subscription management\n\nMerged system purpose commands under subscription-manager syspurpose\n\nPreviously, there were two different commands to set system purpose attributes; syspurpose and subscription-manager. To unify all the system purpose attributes under one module, all the addons, role, service-level, and usage commands from subscription-manager have been moved to the new submodule, subscription-manager syspurpose.\n\nExisting subscription-manager commands outside the new submodule are deprecated. The separate package (python3-syspurpose) that provides the syspurpose command line tool has been removed in RHEL 9.\n\nThis update provides a consistent way to view, set, and update all system purpose attributes using a single command of subscription-manager; this replaces all the existing system purpose commands with their equivalent versions available as a new subcommand. For example, subscription-manager role --set SystemRole becomes subscription-manager syspurpose role --set SystemRole and so on.\n\nFor complete information about the new commands, options, and other attributes, see the SYSPURPOSE OPTIONS section in the subscription-manager man page.\n\n(BZ#1898563)\n\n4.4. Software management\n\nRHEL 9 provides RPM 4.16\n\nRHEL 9 is distributed with RPM version 4.16. Notable bug fixes and enhancements over version 4.14 include:\n\nNew SPEC features, most notably:\n\nFast macro-based dependency generators\n\nThe %generate_buildrequires section that allows for generating dynamic build dependencies\n\nMeta (unordered) dependencies\n\nIncreased parallelism in package builds\n\nNative version comparison in expressions\n\nCaret version operator, opposite of tilde\n\n%elif, %elifos and %elifarch statements\n\nOptional automatic patch and source numbering\n\n%autopatch now accepts patch ranges\n\n%patchlist and %sourcelist sections\n\nEnforced UTF-8 validation of header data at build-time\n\nThe rpm database is now based on the sqlite library. Read-only support for BerkeleyDB databases has been retained for migration and query purposes.\n\nA new rpm-plugin-audit plug-in for issuing audit log events on transactions, previously built into RPM itself\n\n(JIRA:RHELPLAN-80734)\n\nNew RPM plugin notifies fapolicyd about changes during RPM transactions\n\nThis update of the rpm packages introduces a new RPM plugin that integrates the fapolicyd framework with the RPM database. The plugin notifies fapolicyd about installed and changed files during an RPM transaction. As a result, fapolicyd now supports integrity checking.\n\nNote that the RPM plugin replaces the DNF plugin because its functionality is not limited to DNF transactions but covers also changes by RPM.\n\n(BZ#1942549)\n\nRPM now supports the EdDSA public key algorithm\n\nWith this enhancement, the rpm command supports signing keys using the EdDSA public key algorithm. As a result, signing keys generated using EdDSA can now be used for signing and verifying packages.\n\nNote that, however signing keys using EdDSA are now supported, RSA continues to be the default public key algorithm in GnuPG.\n\n(BZ#1962234)\n\nRPM now supports the Zstandard (zstd) compression algorithm\n\nWith this enhancement, the default RPM compression algorithm has switched to Zstandard (zstd). As a result, users can benefit from faster package installations, which can be especially noticeable during large transactions.\n\n(JIRA:RHELPLAN-117903)\n\nNew DNF options exclude_from_weak_autodetect and exclude_from_weak\n\nWith this enhancement, the default DNF behavior does not install unwanted weak dependencies. To modify this behavior, use the following new options:\n\nexclude_from_weak_autodetect\n\nIf enabled, the exclude_from_weak_autodetect option autodetects unmet weak dependencies (Recommends: or Supplements:) of packages installed on your system. As a result, providers of these weak dependencies are not installed as weak dependencies, but, if pulled in, they are installed as regular dependencies. The default value is true.\n\nexclude_from_weak\n\nIf enabled, the exclude_from_weak option prevents installing packages as weak dependencies (Recommends: or Supplements:). You can specify packages either by a package name or a glob, and separate them by a comma. The default value is [].\n\n(BZ#2005305)\n\nRHEL 9 provides libmodulemd 2.13.0\n\nRHEL 9 is distributed with the libmodulemd package version 2.13.0. Notable bug fixes and enhancements over version 2.9.4 include:\n\nAdded support for delisting demodularized packages from a module.\n\nAdded support for validating modulemd-packager-v3 documents with a new --type option of the modulemd-validator tool.\n\nFortified parsing integers.\n\nFixed various modulemd-validator issues.\n\n(BZ#1984403)\n\n4.6. Infrastructure services\n\ns-nail replaces mailx\n\nThe s-nail mail processing system has replaced the mailx utility. The s-nail utility is compatible with mailx and adds numerous new features. The mailx package is no longer maintained in the upstream.\n\n(BZ#1940863)\n\nTuneD 2.18 is available\n\nRHEL 9 is distributed with TuneD version 2.18. Notable changes over version 2.16 include:\n\nThe net plugin: added support for txqueuelen tuning.\n\nThe disk plugin: added support for NVMe disk tuning.\n\ntuned-gui bug fixes.\n\n(BZ#2003838)\n\nRHEL 9 provides mod_security_crs 3.3\n\nRHEL 9 is distributed with the mod_security_crs package version 3.3. Notable bug fixes and enhancements include:\n\nIntroduced libinjection.\n\nBlocked backup files ending with ~ in filenames.\n\nAdded new LDAP injection and HTTP splitting rules.\n\nAdded .swp to restricted extensions.\n\nAdded Common Attack Pattern Enumeration and Classification (CAPEC) tags for attack classification.\n\nAdded support to detect Nuclei , WFuzz, and ffuf vulnerability scanners.\n\nImproved variable to lowercase (modsec3 behavior fix)\n\nAdded support to detect Unix RCE bypass techniques through uninitialized variables, string concatenations, and globbing patterns.\n\nRemoved outdated rule tags: WASCTC, OWASP_TOP_10, OWASP_AppSensor/RE1, and OWASP_CRS/FOO/BAR. OWASP_CRS and attack-type are still included in the mod_security_crs package.\n\nThe format of crs-setup.conf variable tx.allowed_request_content_type has been changed to be in line with the other variables. In case the variable is overridden, please see the example in crs-setup.conf file for the new separator.\n\n(BZ#1947962)\n\nRHEL 9 provides chrony 4.1\n\nRHEL 9 is distributed with chrony version 4.1. Notable bug fixes and enhancements over version 3.5 include:\n\nSupport for Network Time Security (NTS) authentication has been added. For more information, see Overview of Network Time Security (NTS) in chrony.\n\nBy default, the Authenticated Network Time Protocol (NTP) sources are trusted over non-authenticated NTP sources. To restore the original behavior, add the autselectmode ignore argument in the chrony.conf file.\n\nSupport for authentication with RIPEMD keys - RMD128, RMD160, RMD256, RMD320 - is no longer available.\n\nSupport for long non-standard MACs in NTPv4 packets is no longer available. If you are using chrony 2.x, non-MD5/SHA1 keys, you need to configure chrony with the version 3 option.\n\nIn addition, the following differs from the RHEL 8 version of chrony:\n\nThe seccomp filter is enabled by default (-F 2 is set in /etc/sysconfig/chronyd). The seccomp filter conflicts with the mailonchange directive. If you have the mailonchange directive in /etc/chrony.conf, remove the -F 2 setting from /etc/sysconfig/chronyd.\n\n(BZ#1961131)\n\n4.7. Security\n\nSystem-wide crypto-policies are now more secure\n\nWith this update, the system-wide cryptographic policies have been adjusted to provide up-to-date secure defaults:\n\nDisabled TLS 1.0, TLS 1.1, DTLS 1.0, RC4, Camellia, DSA, 3DES, and FFDHE-1024 in all policies.\n\nIncreased minimum RSA key size and minimum Diffie-Hellman parameter size in LEGACY.\n\nDisabled TLS and SSH algorithms using SHA-1, with an exception of SHA-1 usage in Hash-based Message Authentication Codes (HMACs).\n\nIf your scenario requires enabling some of the disabled algorithms and ciphers, use custom policies or subpolicies.\n\n(BZ#1937651)\n\nRHEL 9 provides OpenSSL 3.0.1\n\nRHEL 9 provides openssl packages in upstream version 3.0.1, which includes many improvements and bug fixes over the previous version. The most notable changes include:\n\nAdded the new Provider concept. Providers are collections of algorithms, and you can choose different providers for different applications.\n\nIntroduced the new versioning scheme in the following format: <major>.<minor>.<patch>.\n\nAdded support for the Certificate Management Protocol (CMP, RFC 4210), the Certificate Request Message Format (CRMF), and HTTP transfer (RFC 6712).\n\nIntroduced an HTTP(S) client that supports GET and POST, redirection, plain and ASN.1-encoded contents, proxies, and timeouts.\n\nAdded new Key Derivation Function API (EVP_KDF) and Message Authentication Code API (EVP_MAC).\n\nAdded support for Linux Kernel TLS (KTLS) through compiling with the enable-ktls configuration option.\n\nAdded CAdES-BES signature verification support.\n\nAdded CAdES-BES signature scheme and attributes support (RFC 5126) to CMS API.\n\nAdded support for new algorithms, for example:\n\nKDF algorithms \"SINGLE STEP\" and \"SSH\".\n\nMAC algorithms \"GMAC\" and \"KMAC\".\n\nKEM algorithm \"RSASVE\".\n\nCipher algorithm \"AES-SIV\"\n\nAdded AuthEnvelopedData content type structure (RFC 5083) using AES_GCM.\n\nThe default algorithms for PKCS #12 creation with the PKCS12_create() function changed to more modern PBKDF2 and AES-based algorithms.\n\nAdded a new generic trace API.\n\n(BZ#1990814)\n\nOpenSSL now includes providers\n\nThe OpenSSL toolkit in version 3.0.1, which is included in RHEL 9, added the concept of providers. Providers are collections of algorithms, and you can choose different providers for different applications. OpenSSL currently includes the following providers: base, default, fips, legacy, and null.\n\nBy default, OpenSSL loads and activates the default provider, which includes commonly used algorithms such as RSA, DSA, DH, CAMELLIA, SHA-1, and SHA-2.\n\nWhen the FIPS flag is set in the kernel, OpenSSL automatically loads the FIPS provider and uses only FIPS-approved algorithms. As a result, you do not have to manually switch OpenSSL to FIPS mode.\n\nTo change to a different provider on the system level, edit the openssl.cnf configuration file. For example, if your scenario requires using the legacy provider, uncomment the corresponding section.\n\nWarning\n\nExplicitly activating a provider overrides the implicit activation of the default provider and may make the system remotely inaccessible, for example by the OpenSSH suite.\n\nFor information on the algorithms included in each provider, see the relevant man pages. For example, the OSSL_PROVIDER-legacy(7) man page for the legacy provider.\n\n(BZ#2010291)\n\nOpenSSL random bit generator now supports CPACF\n\nThis release of the openssl packages introduces support for the CP Assist for Cryptographic Functions (CPACF) in the OpenSSL NIST SP800-90A-compliant AES-based deterministic random bit generator (DRBG).\n\n(BZ#1871147)\n\nopenssl-spkac can now create SPKAC files signed with SHA-1 and SHA-256\n\nThe openssl-spkac utility can now create Netscape signed public key and challenge (SPKAC) files signed with hashes different than MD5. You can now create and verify also SPKAC files signed with SHA-1 and SHA-256 hashes.\n\n(BZ#1970388)\n\nRHEL 9 provides openCryptoki 3.17.0\n\nRHEL 9 is distributed with openCryptoki version 3.17.0. Notable bug fixes and enhancements over version 3.16.0 include:\n\nThe p11sak utility adds a new function for listing keys.\n\nopenCryptoki now supports:\n\nOpenSSL 3.0.\n\nEvent notifications.\n\nSoftware fallbacks in ICA tokens.\n\nThe WebSphere Application Server no longer fails to start when the hardware crypto adapter is enabled.\n\nRHEL 9 includes OpenSSL with additional patches, which are specific to RHEL. If the system is in Federal Information Processing Standards (FIPS) mode, OpenSSL automatically loads the FIPS provider and base provider and forces the applications to use the FIPS provider. Therefore, the behavior of openCryptoki on RHEL 9 differs from the upstream:\n\nTokens that rely on OpenSSL’s implementation of the crypto operations (soft tokens and ICA tokens software fallbacks) now support only FIPS-approved mechanisms, even though unapproved mechanisms are still listed as available.\n\nopenCryptoki supports two different token data formats: the old data format, which uses non-FIPS-approved algorithms (such as DES and SHA1), and the new data format, which uses FIPS-approved algorithms only.\n\nThe old data format no longer works because the FIPS provider allows the use of only FIPS-approved algorithms.\n\nImportant\n\nTo make openCryptoki work on RHEL 9, migrate the tokens to use the new data format before enabling FIPS mode on the system. This is necessary because the old data format is still the default in openCryptoki 3.17. Existing openCryptoki installations that use the old token data format will no longer function when the system is changed to FIPS-enabled.\n\nYou can migrate the tokens to the new data format by using the pkcstok_migrate utility, which is provided with openCryptoki. Note that pkcstok_migrate uses non-FIPS-approved algorithms during the migration. Therefore, use this tool before enabling FIPS mode on the system. For additional information, see Migrating to FIPS compliance - pkcstok_migrate utility.\n\n(BZ#1869533)\n\nGnuTLS provided in version 3.7.3\n\nIn RHEL 9, the gnutls packages are provided in upstream version 3.7.3. This provides many improvements and bug fixes over previous versions, most notably:\n\nIntroduced API for FIPS 140-3 explicit indicators.\n\nHardened defaults for exporting PKCS#12 files.\n\nFixed timing of the early data (zero round trip data, 0-RTT) exchange.\n\nThe certutil tool no longer inherits the Certificate Revocation List (CRL) distribution point from the certificate authority (CA) when signing a certificate signing request (CSR).\n\n(BZ#2033220)\n\nRHEL 9 provides NSS 3.71\n\nRHEL 9 is distributed with the Network Security Services (NSS) libraries version 3.71. Notable changes include:\n\nSupport for the legacy DBM database format has been completely removed. NSS support only the SQLite database format in RHEL 9.\n\nThe PKCS #12 encryption ciphers now use the AES-128-CBC with PBKDF2 and SHA-256 algorithms instead of PBE-SHA1-RC2-40 and PBE-SHA1-2DES.\n\n(BZ#2008320)\n\nNSS no longer support RSA keys shorter than 1023 bits\n\nThe update of the Network Security Services (NSS) libraries changes the minimum key size for all RSA operations from 128 to 1023 bits. This means that NSS no longer perform the following functions:\n\nGenerate RSA keys shorter than 1023 bits.\n\nSign or verify RSA signatures with RSA keys shorter than 1023 bits.\n\nEncrypt or decrypt values with RSA key shorter than 1023 bits.\n\n(BZ#2099438)\n\nMinimal RSA key bit length option in OpenSSH\n\nAccidentally using short RSA keys might make the system more vulnerable to attacks. With this update, you can set RSA key minimal bit lengths for OpenSSH servers and clients. To define the minimal RSA key length, use the new RSAMinSize option in the /etc/ssh/sshd_config file for OpenSSH servers, and in the /etc/ssh/ssh_config file for OpenSSH clients.\n\n(BZ#2119694)\n\nOpenSSH distributed in 8.7p1\n\nRHEL 9 includes OpenSSH in version 8.7p1. This version provides many enhancements and bug fixes over OpenSSH version 8.0p1, which is distributed in RHEL 8.5, most notably:\n\nNew Features\n\nSupport for transfers using the SFTP protocol as a replacement for the previously used SCP/RCP protocol. SFTP offers more predictable filename handling and does not require expansion of glob(3) patterns by the shell on the remote side.\n\nSFTP support is enabled by default. If SFTP is unavailable or incompatible in your scenario, you can use the -O flag to force use of the original SCP/RCP protocol.\n\nThe LogVerbose configuration directive that allows forcing maximum debug logging by file/function/line pattern lists.\n\nClient address-based rate-limiting with the new sshd_config PerSourceMaxStartups, and PerSourceNetBlockSize directives. This provides finer control than the global MaxStartups limit.\n\nThe HostbasedAcceptedAlgorithms keyword now filters based on the signature algorithm instead of filtering by key type.\n\nThe Include sshd_config keyword in the sshd daemon that allows including additional configuration files by using glob patterns.\n\nSupport for Universal 2nd Factor (U2F) hardware authenticators specified by the FIDO Alliance. U2F/FIDO are open standards for inexpensive two-factor authentication hardware that are widely used for website authentication. In OpenSSH, FIDO devices are supported by new public key types ecdsa-sk and ed25519-sk and by the corresponding certificate types.\n\nSupport for FIDO keys that require a PIN for each use. You can generate these keys by using ssh-keygen with the new verify-required option. When a PIN-required key is used, the user will be prompted for a PIN to complete the signature operation.\n\nThe authorized_keys file now supports a new verify-required option. This option requires FIDO signatures to assert token verification of the user’s presence before making the signature. The FIDO protocol supports multiple methods for user verification, OpenSSH currently supports only PIN verification.\n\nAdded support for verifying FIDO webauthn signatures. webauthn is a standard for using FIDO keys in web browsers. These signatures are a slightly different format to plain FIDO signatures and therefore require explicit support.\n\nBug fixes\n\nClarified semantics of the ClientAliveCountMax=0 keyword. Now, it entirely disables connection killing instead of the previous behavior of instantly killing the connection after the first liveness test regardless of its success.\n\nSecurity\n\nFixed an exploitable integer overflow bug in the private key parsing code for the XMSS key type. This key type is still experimental and support for it is not compiled by default. No user-facing autoconf option exists in portable OpenSSH to enable it.\n\nAdded protection for private keys at rest in RAM against speculation and memory side-channel attacks like Spectre, Meltdown and Rambleed. This release encrypts private keys when they are not in use with a symmetric key that is derived from a relatively large “prekey” consisting of random data (currently 16 KB).\n\n(BZ#1952957)\n\nLocale forwarding disabled by default in OpenSSH\n\nUsing the C.UTF-8 locale in small images, such as containers and virtual machines, reduces size and improves performance over using the traditional en_US.UTF-8 locale.\n\nMost distributions send locale environment variables by default and accept them on the server side. However, this meant that logging in through SSH from clients that used locales other than C or C.UTF-8 to servers that did not have the glibc-langpack-en or glibc-all-langpacks package installed resulted in degraded user experience. Specifically, output in the UTF-8 format was broken and some tools did not work or sent frequent warning messages.\n\nWith this update, locale forwarding is switched off by default in OpenSSH. This keeps the locale viable even if clients connect to servers with minimal installations that support only a small set of locales.\n\n(BZ#2002734)\n\nOpenSSH supports U2F/FIDO security keys\n\nPreviously, the OpenSSH keys stored in hardware were only supported through the PKCS #11 standard, which limited the use of other security keys in SSH. Support for U2F/FIDO security keys was developed upstream and is now implemented in RHEL 9. This results in an improved usability of security keys within SSH independent of the PKCS #11 interface.\n\n(BZ#1821501)\n\nLibreswan provided in version 4.6\n\nIn RHEL 9, Libreswan is provided in upstream version 4.6. This version provides many bug fixes and enhancements, most notably improvements on labeled IPsec used with Internet Key Exchange version 2 (IKEv2).\n\n(BZ#2017355)\n\nLibreswan does not accept IKEv1 packages by default\n\nBecause the Internet Key Exchange v2 (IKEv2) protocol is now widely deployed, Libreswan no longer supports IKEv1 packets by default. IKEv2 provides a more secure environment and more resilience against attacks. If your scenario requires the use of IKEv1, you can enable it by adding the ikev1-policy=accept option to the /etc/ipsec.conf configuration file.\n\n(BZ#2039877)\n\nRHEL 9 provides stunnel 5.62\n\nRHEL 9 is distributed with the stunnel package version 5.62. Notable bug fixes and enhancements include:\n\nOn systems in FIPS mode, stunnel now always uses FIPS mode.\n\nThe NO_TLSv1.1, NO_TLSv1.2, and NO_TLSv1.3 options have been renamed to NO_TLSv1_1, NO_TLSv1_2, and NO_TLSv1_3 respectively.\n\nThe new service-level sessionResume option enables and disables session resumption.\n\nLDAP is now supported in stunnel clients using the protocol option.\n\nA Bash-completion script is now available.\n\n(BZ#2039299)\n\nRHEL 9 provides nettle 3.7.3\n\nRHEL 9 provides the nettle package 3.7.3 version with multiple bug fixes and enhancements. Notable changes are the following:\n\nSupports new algorithms and modes, for example, Ed448, SHAKE256, AES-XTS, SIV-CMAC.\n\nAdds architecture-specific optimizations for existing algorithms.\n\n(BZ#1986712)\n\nRHEL 9 provides p11-kit 0.24\n\nRHEL 9 provides p11-kit package with 0.24 version. This version provides multiple bug fixes and enhancements. Notably, the subdirectory for storing distrusted Certificate Authorities has been renamed to blocklist.\n\n(BZ#1966680)\n\ncyrus-sasl now uses GDBM instead of Berkeley DB\n\nThe cyrus-sasl package is now built without the libdb dependency, and the sasldb plugin uses the GDBM database format instead of Berkeley DB. To migrate your existing Simple Authentication and Security Layer (SASL) databases stored in the old Berkeley DB format, use the cyrusbdb2current tool with the following syntax:\n\ncyrusbdb2current <sasldb_path> <new_path>\n\n(BZ#1947971)\n\nSELinux policy in RHEL 9 is up-to-date with the current kernel\n\nThe SELinux policy includes new permissions, classes, and capabilities that are also part of the kernel. Therefore, SELinux can utilize the full potential provided by the kernel. Specifically, SELinux has better granularity for granting permissions, which has subsequent security benefits. This also enables running systems with the MLS SELinux policy because the MLS policy would prevent some systems from starting if the system contained permissions unknown to the policy.\n\n(BZ#1941810, BZ#1954145)\n\nDefault SELinux policy disallows commands with text relocation libraries\n\nThe selinuxuser_execmod boolean is now off by default to improve the security footprint of installed systems. As a result, SELinux users cannot enter commands using libraries that require text relocation, unless the library files have the textrel_shlib_t label.\n\n(BZ#2055822)\n\nOpenSCAP is provided in version 1.3.6\n\nRHEL 9 includes OpenSCAP in version 1.3.6, which provides bug fixes and improvements, most notably:\n\nYou can provide local copies of remote SCAP source data stream components instead of downloading them during the scan by using the --local-files option\n\nOpenSCAP accepts multiple --rule arguments to select multiple rules on the command line.\n\nYou can skip evaluation of some rules using the --skip-rule option.\n\nYou can restrict memory consumed by OpenSCAP probes by using the OSCAP_PROBE_MEMORY_USAGE_RATIO environment variable.\n\nOpenSCAP now supports the OSBuild Blueprint as a remediation type.\n\n(BZ#2041782)\n\nOSCAP Anaconda Add-on now supports a new add-on name\n\nWith this enhancement, you can use the new com_redhat_oscap add-on name as opposed to the legacy org_fedora_oscap add-on name in the Kickstart file for the OSCAP Anaconda Add-on plugin. For example, the Kickstart section can be structured as follows:\n\n%addon com_redhat_oscap content-type = scap-security-guide %end\n\nOSCAP Anaconda Add-on is currently compatibile with the legacy add-on name, but support for the legacy add-on name will be removed in a future major RHEL version.\n\n(BZ#1893753)\n\nCVE OVAL feeds now compressed\n\nWith this update, Red Hat provides CVE OVAL feeds in a compressed form. They are no longer available as XML files, but are in the bzip2 format instead. The location of the feeds for RHEL9 has also been updated to reflect this change. Note that third-party SCAP scanners might have problems with scanning rules that use a compressed feed because referencing compressed content is not standardized.\n\n(BZ#2028435)\n\nSCAP Security Guide provided in version 0.1.60\n\nRHEL 9 includes the scap-security-guide packages in version 0.1.60. This version provides bug fixes and enhancements, most notably:\n\nThe rules hardening the PAM stack now use authselect as the configuration tool.\n\nSCAP Security Guide now provides a delta tailoring file for the STIG profile. This tailoring file defines a profile that represents the differences between DISA’s automated STIG and SSG automated content.\n\n(BZ#2014561)\n\nSCAP Security Guide profiles supported in RHEL 9.0\n\nWith the SCAP Security Guide compliance profiles included in RHEL 9.0, you can harden the system to the recommendations from the issuing organizations. As a result, you can configure and automate compliance of your RHEL 9 systems according to your required hardening level by using the associated remediations and SCAP profiles.\n\nProfile nameProfile IDPolicy version\n\nWarning\n\nAutomatic remediation might render the system non-functional. Run the remediation in a test environment first.\n\n(BZ#2045341, BZ#2045349, BZ#2045361, BZ#2045368, BZ#2045374, BZ#2045381, BZ#2045386, BZ#2045393, BZ#2045403)\n\nRHEL 9 provides fapolicyd 1.1\n\nRHEL 9 is distributed with the fapolicyd package version 1.1. Most notable enhancements include the following:\n\nThe /etc/fapolicyd/rules.d/ directory for files containing allow and deny execution rules replaces the /etc/fapolicyd/fapolicyd.rules file. The fagenrules script now merges all component rule files in this directory to the /etc/fapolicyd/compiled.rules file. See the new fagenrules(8) man page for more details.\n\nIn addition to the /etc/fapolicyd/fapolicyd.trust file for marking files outside of the RPM database as trusted, you can now use the new /etc/fapolicyd/trust.d directory, which supports separating a list of trusted files into more files. You can also add an entry for a file by using the fapolicyd-cli -f subcommand with the --trust-file directive to these files. See the fapolicyd-cli(1) and fapolicyd.trust(13) man pages for more information.\n\nThe fapolicyd trust database now supports white spaces in file names.\n\nfapolicyd now stores the correct path to an executable file when it adds the file to the trust database.\n\n(BZ#2032408)\n\nRsyslog includes the mmfields module for higher-performance operations and CEF\n\nRsyslog now includes the rsyslog-mmfields subpackage which provides the mmfields module. This is an alternative to using the property replacer field extraction, but in contrast to the property replacer, all fields are extracted at once and stored inside the structured data part. As a result, you can use mmfields particularly for processing field-based log formats, for example Common Event Format (CEF), and if you need a large number of fields or reuse specific fields. In these cases, mmfields has better performance than existing Rsyslog features.\n\n(BZ#2027971)\n\nlogrotate included in a separate rsyslog-logrotate package\n\nThe logrotate config was separated from the main rsyslog package into the new rsyslog-logrotate package. This is useful in certain minimal environments, for example where log rotation is not needed, to prevent installing unnecessary dependencies.\n\n(BZ#1992155)\n\nsudo supports Python plugins\n\nWith the sudo program version 1.9, which is included in RHEL 9, you can write sudo plugins in Python. This makes it easier to enhance sudo to more precisely suit specific scenarios.\n\nFor additional information, see the sudo_plugin_python(8) man page.\n\n(BZ#1981278)\n\nlibseccomp provided in version 2.5.2\n\nRHEL 9.0 provides the libseccomp packages in upstream version 2.5.2. This version provides many bug fixes and enhancements over previous versions, most notably:\n\nUpdated the syscall table for Linux to version v5.14-rc7.\n\nAdded the get_notify_fd() function to the Python bindings to get the notification file descriptor.\n\nConsolidated multiplexed syscall handling for all architectures into one location.\n\nAdded multiplexed syscall support to the PowerPC (PPC) and MIPS architectures.\n\nChanged the meaning of the SECCOMP_IOCTL_NOTIF_ID_VALID operation within the kernel.\n\nChanged the libseccomp file descriptor notification logic to support the kernel’s previous and new usage of SECCOMP_IOCTL_NOTIF_ID_VALID.\n\nFixed a bug where seccomp_load() could only be called once.\n\nChanged the notification fd handling to only request a notification fd if the filter has a _NOTIFY action.\n\nAdded documentation about SCMP_ACT_NOTIFY to the seccomp_add_rule(3) manpage.\n\nClarified the maintainers’ GPG keys.\n\n(BZ#2019887)\n\nClevis now supports SHA-256\n\nWith this enhancement, the Clevis framework supports the SHA-256 algorithm as the default hash for JSON Web Key (JWK) thumbprints as recommended by RFC 7638. Because the older thumbprints (SHA-1) are still supported, you can still decrypt the previously encrypted data.\n\n(BZ#1956760)\n\n4.8. Networking\n\nThe diag modules are now available in the kernel\n\nThe diag modules are now included with the kernel image. With this update, the diag modules no longer need to be dynamically loaded when the ss command is used. This allows better debugging of networking issues regardless of the customer policy on kernel modules. Modules included in the kernel:\n\nCONFIG_INET_DIAG CONFIG_INET_RAW_DIAG CONFIG_INET_TCP_DIAG CONFIG_INET_UDP_DIAG CONFIG_INET_MPTCP_DIAG CONFIG_NETLINK_DIAG CONFIG_PACKET_DIAG CONFIG_UNIX_DIAG\n\n(BZ#1948340)\n\nNew core and IPv4-related networking sysctl kernel parameters\n\nThe RHEL 9.0 kernel provides the following new core and IPv4 networking sysctl parameters compared to previous RHEL versions:\n\nnet.core.devconf_inherit_init_net\n\nnet.core.gro_normal_batch\n\nnet.core.high_order_alloc_disable\n\nnet.core.netdev_unregister_timeout_secs\n\nnet.ipv4.fib_multipath_hash_fields\n\nnet.ipv4.fib_notify_on_flag_change\n\nnet.ipv4.fib_sync_mem\n\nnet.ipv4.icmp_echo_enable_probe\n\nnet.ipv4.ip_autobind_reuse\n\nnet.ipv4.nexthop_compat_mode\n\nnet.ipv4.raw_l3mdev_accept\n\nnet.ipv4.tcp_comp_sack_slack_ns\n\nnet.ipv4.tcp_migrate_req\n\nnet.ipv4.tcp_mtu_probe_floor\n\nnet.ipv4.tcp_no_ssthresh_metrics_save\n\nnet.ipv4.tcp_reflect_tos\n\nFor details about these parameters, install the kernel-doc package and see the following files:\n\n/usr/share/doc/kernel-doc-<version>/Documentation/admin-guide/sysctl/net.rst\n\n/usr/share/doc/kernel-doc-<version>/Documentation/networking/ip-sysctl.rst\n\n(BZ#2068532)\n\nChanged behavior in firewalld when transmitting packets between zones\n\nIn zone-based firewalls, packets enter only one zone. Implicit packet transmission is the concept violation and can allow traffic or services unexpectedly. In Red Hat Enterprise Linux 9 the firewalld service no longer allows implicit packet transmission between two different zones.\n\nFor more information about this change, see Changed behavior in firewalld when transmitting packets between zones Knowledge Article.\n\n(BZ#2029211)\n\nIntra-zone forwarding has been enabled by default\n\nThe firewalld intra-zone forwarding feature allows forwarding traffic between interfaces or sources within a firewalld zone. Starting with RHEL 9.0, this feature has been enabled by default. Use the --add-forward option of the firewall-cmd utility to enable intra-zone forwarding for a particular zone. The firewall-cmd --list-all command displays whether intra-zone forwarding is enabled or disabled for a zone:\n\n# firewall-cmd --list-all public (active) ... forward: no\n\n(BZ#2089193)\n\nMaking Nmstate more inclusive\n\nRed Hat is committed to using conscious language. Therefore the slave term in the nmstate API has been replaced by the term port.\n\n(BZ#1969941)\n\nNetworkManager supports interface names set in the rd.znet_ifname kernel option on IBM Z\n\nWith this enhancement, on the IBM Z platform, NetworkManager now interprets the rd.znet and rd.znet_ifname kernel command-line options when installing or booting Red Hat Enterprise Linux from the network. As a result, it is possible to specify a name of a network interface identified by the subchannels instead of the default one.\n\n(BZ#1980387)\n\nThe hostapd package has been added to RHEL 9.0\n\nWith this release, RHEL provides the hostapd package. However, Red Hat supports hostapd only to set up a RHEL host as an 802.1X authenticator in Ethernet networks. Other scenarios, such as Wi-Fi access points or authenticators in Wi-Fi networks, are not supported.\n\nFor details about configuring RHEL as an 802.1X authenticator with a FreeRADIUS back end, see Setting up an 802.1x network authentication service for LAN clients using hostapd with FreeRADIUS backend.\n\n(BZ#2019830)\n\nModemManager provided in version 1.18.2\n\nRHEL 9.0 provides the ModemManager packages in upstream version 1.18.2. This version includes bug fixes and enhancements over the previous version, most notably:\n\nImproved capabilities and modes handling for devices with 5G capabilities\n\nAdditional devices support\n\n(BZ#1996716)\n\nNetworkManager allows to change queue_id of bond port\n\nNetworkManager ports in a bond now supports the queue_id parameter. Assuming eth1 is a port of bond interface, you can enable queue_id for a bond port with:\n\n# nmcli connection modify eth1 bond-port.queue-id 1 # nmcli connection up eth1\n\nAny network interface that needs to use this option should configure it with multiple calls until proper priorities are set for all interfaces. For more information, see /usr/share/docs/kernel-doc-_<version>/Documentation/networking/bonding.rst file that is provided by the kernel-doc package.\n\n(BZ#1949127)\n\nSupport for the configuration of blackhole, prohibit and unreachable route types with latest NetworkManager\n\nKernel supports several route types besides the common unicast, broadcast and local route types. In addition, users can now configure blackhole, prohibit and unreachable static route types in the connection profile of the NetworkManager. The NetworkManager will add a profile when the profile is activated.\n\n(BZ#2060013)\n\nRoCE Express Adapters now use an improved interface naming scheme\n\nWith this enhancement, RDMA over Converged Ethernet (RoCE) Express adapters use the predictable interface naming scheme and the Peripheral Communication Interface on z-system (zPCI) connector. In this naming scheme, RHEL uses user identifier (UID) or function identifier (FID) to generate unique names. In case that no unique UID is available, RHEL uses FID to set the naming scheme.\n\n(BZ#2091653)\n\n4.9. Kernel\n\nKernel version in RHEL 9.0\n\nRed Hat Enterprise Linux 9.0 is distributed with the kernel version 5.14.0-70.\n\n(BZ#2077836)\n\nRed Hat, by default, enables eBPF in all RHEL versions for privileged users only\n\nExtended Berkeley Packet Filter (eBPF) is a complex technology which allows users to execute custom code inside the Linux kernel. Due to its nature, the eBPF code needs to pass through the verifier and other security mechanisms. There were Common Vulnerabilities and Exposures (CVE) instances, where bugs in this code could be misused for unauthorized operations. To mitigate this risk, Red Hat by default enabled eBPF in all RHEL versions for privileged users only. It is possible to enable eBPF for unprivileged users by using the kernel.command-line parameter unprivileged_bpf_disabled=0.\n\nHowever, note that\n\nApplying unprivileged_bpf_disabled=0 disqualifies your kernel from Red Hat support and opens your system to security risks.\n\nRed Hat urges you to treat processes with the CAP_BPF capability as if the capability was equal to CAP_SYS_ADMIN.\n\nSetting unprivileged_bpf_disabled=0 will not be sufficient to execute many BPF programs by unprivileged users as loading of most BPF program types requires additional capabilities (typically CAP_SYS_ADMIN or CAP_PERFMON).\n\nFor information on how to apply kernel command-line parameters, see Configuring kernel command-line parameters.\n\n(BZ#2091643)\n\nRed Hat protects kernel symbols only for minor releases\n\nRed Hat guarantees that a kernel module will continue to load in all future updates within an Extended Update Support (EUS) release, only if you compile the kernel module using protected kernel symbols. There is no kernel Application Binary Interface (ABI) guarantee between minor releases of RHEL 9.\n\n(BZ#2059183)\n\nRHEL 9 Beta kernels signed with trusted SecureBoot certificates\n\nPreviously, RHEL Beta releases required users to enroll a separate Beta public key using the Machine Owner Key (MOK) facility. Starting with RHEL 9 Beta, kernels are signed with trusted SecureBoot certificates, hence users no longer need to enroll a separate Beta public key to use the beta versions on systems having UEFI Secure Boot enabled.\n\n(BZ#2002499)\n\ncgroup-v2 enabled by default in RHEL 9\n\nThe control groups version 2 (cgroup-v2) feature implements a single hierarchy model that simplifies the management of control groups. Also, it ensures that a process can only be a member of a single control group at a time. Deep integration with systemd improves the end-user experience when configuring resource control on a RHEL system.\n\nDevelopment of new features is mostly done for cgroup-v2, which has some features that are missing in cgroup-v1. Similarly, cgroup-v1 contains some legacy features that are missing in cgroup-v2. Also, the control interfaces are different. Therefore, third party software with direct dependency on cgroup-v1 may not run properly in the cgroup-v2 environment.\n\nTo use cgroup-v1, you need to add the following parameters to the kernel command-line:\n\nsystemd.unified_cgroup_hierarchy=0 systemd.legacy_systemd_cgroup_controller\n\nNote\n\nBoth cgroup-v1 and cgroup-v2 are fully enabled in the kernel. There is no default control group version from the kernel point of view, and is decided by systemd to mount at startup.\n\n(BZ#1953515)\n\nKernel changes potentially affecting third party kernel modules\n\nLinux distributions with a kernel version prior to 5.9 supported exporting GPL functions as non-GPL functions. As a result, users could link proprietary functions to GPL kernel functions through the shim mechanism. With this release, the RHEL kernel incorporates upstream changes that enhance the ability of RHEL to enforce GPL by rebuffing shim.\n\nImportant\n\nPartners and independent software vendors (ISVs) should test their kernel modules with an early version of RHEL 9 to ensure their compliance with GPL.\n\n(BZ#1960556)\n\nThe 64-bit ARM architecture has a 4 KB page size in RHEL 9\n\nRed Hat has selected a 4 KB page size of physical memory for the 64-bit ARM architecture in Red Hat Enterprise Linux 9. This size pairs well with the workloads and memory amounts present on the majority of ARM-based systems. To employ large page sizes efficiently, use the huge pages option to address a greater amount of memory or workloads with large data sets.\n\nFor more information about huge pages see Monitoring and Managing System Status and Performance.\n\n(BZ#1978382)\n\nThe strace utility now correctly displays SELinux context mismatches\n\nAn existing --secontext option of strace has been extended with the mismatch parameter. This parameter enables to print the expected context along with the actual one upon mismatch only. The output is separated by double exclamation marks (!!), first the actual context, then the expected one. In the examples below, the full,mismatch parameters print the expected full context along with the actual one because the user part of the contexts mismatches. However, when using a solitary mismatch, it only checks the type part of the context. The expected context is not printed because the type part of the contexts matches.\n\n[...] $ strace --secontext=full,mismatch -e statx stat /home/user/file statx(AT_FDCWD, \"/home/user/file\" [system_u:object_r:user_home_t:s0!!unconfined_u:object_r:user_home_t:s0], ... $ strace --secontext=mismatch -e statx stat /home/user/file statx(AT_FDCWD, \"/home/user/file\" [user_home_t:s0], ...\n\nSELinux context mismatches often cause access control issues associated with SELinux. The mismatches printed in the system call traces can significantly expedite the checks of SELinux context correctness. The system call traces can also explain specific kernel behavior with respect to access control checks.\n\n(BZ#2038965)\n\nperf-top now can sort by a certain column\n\nWith this update to the perf-top system profiling tool, you can sort samples by an arbitrary event column. Previously, the events were sorted by the first column in case multiple events in a group were sampled. To sort the samples, use the --group-sort-idx command-line option and press a number key to sort the table by the matching data column. Note that column numbering starts from 0.\n\n(BZ#1851933)\n\nNew package: jigawatts\n\nCheckpoint/Restore In Userspace (CRIU) is a Linux utility that allows checkpointing and restoring of processes. The jigawatts package contains a Java library, which aims to improve the usability of CRIU mechanisms from Java applications.\n\n(BZ#1972029)\n\nThe trace-cmd reset command has new behavior\n\nPreviously, the trace-cmd reset command resetted the tracing_on configuration to 0. The new behavior of trace-cmd reset is to reset tracing_on to its default value 1.\n\n(BZ#1933980)\n\nExtended Berkeley Packet Filter is supported in RHEL 9\n\nThe Extended Berkeley Packet Filter (eBPF) is an in-kernel virtual machine that allows code execution in the kernel space, in the restricted sandbox environment with access to a limited set of functions. The virtual machine executes a special assembly-like code.\n\nThe eBPF bytecode first loads to the kernel. Then the bytecode is verified and translated to the native machine code with just-in-time compilation. Finally, the virtual machine executes the code.\n\nRed Hat ships numerous components that utilize the eBPF virtual machine. In RHEL 9, these components include:\n\nThe BPF Compiler Collection (BCC) package, which provides tools for I/O analysis, networking, and monitoring of Linux operating systems using eBPF.\n\nThe BCC library, which allows the development of tools similar to those provided in the BCC tools package.\n\nThe bpftrace tracing language.\n\nThe libbpf package, which is crucial for bpf development and bpf-related applications like bpftrace.\n\nThe XDP and AF_XDP API parts of the libbpf library are not supported and may be removed in a future release.\n\nThe eBPF for Traffic Control (tc) feature, which enables programmable packet processing inside the kernel network data path.\n\nThe eXpress Data Path (XDP) feature, which provides access to the received packets before the kernel networking stack processes them. Red Hat supports XDP only if it is used through the libxdp library.\n\nThe xdp-tools package, which contains user-space support utilities for the XDP feature and is supported on the AMD64 and Intel64 CPU architectures. The xdp-tools package includes:\n\nThe libxdp library.\n\nThe xdp-loader utility for loading XDP programs.\n\nThe xdp-filter example program for packet filtering.\n\nThe xdpdump utility for capturing packets from a network interface with XDP enabled. The xdpdump utility is currently supported only on AMD64 and Intel64 CPU architectures. It is available for other architectures as Technology Preview.\n\nThe AF_XDP socket for connecting the eXpress Data Path (XDP) path to user-space.\n\n(BZ#2070506)\n\nRHEL 9 provides the crash utility version 8.0.0\n\nRHEL 9 is distributed with the crash utility version 8.0.0. The bug fixes and and notable enhancements include:\n\nAdds the new offset parameter in the add-symbol-file command. This support helps to set the kaslr_offset to gdb.\n\nUpgrades the gdb-7.6 to gdb-10.2.\n\n(BZ#1896647)\n\nmakedumpfile now supports an improved zstd compression capability\n\nWith this enhancement, the makedumpfile now includes the Zstandard (zstd) compression capability, which provides high compression ratios. This improvement helps specifically on large memory systems.\n\nThe zstd compression capability now has a good balance between the vmcore dump size and the compression time consumption as compared to prior compression ratios. As a result, the improved compression mechanism now creates a smaller vmcore file with an acceptable good compression time.\n\nNote that a good compression ratio also depends on how the system is being used and the data type stored in RAM.\n\n(BZ#1988894)\n\nnumatop enabled on Intel Xeon scalable server processors\n\nnumatop is a tool that tracks and analyzes the behavior of the processes and threads running on NUMA systems and displays metrics which can identify NUMA-related performance bottlenecks.\n\nnumatop uses Intel performance counter sampling technologies and associates the performance data with Linux system runtime information, to provide analysis in production systems.\n\n(BZ#1874125)\n\nkexec_file_load has been added as the default option for RHEL 9\n\nThis update adds the kexec_file_load system call for the 64-bit ARM architecture. It provides an in-kernel kexec loader for kdump. Previously, the kernel prevented the loading of unsigned kernel images when the secure boot option was enabled. The kdump mechanism would first try to detect whether secure boot is enabled and then choose the boot interface to run. Consequently, an unsigned kernel failed to load with secure boot enabled and kexec_file_load() specified.\n\nThis update fixes the problem and an unsigned kernel works correctly in the described scenario.\n\n(BZ#1895232)\n\nmakedumpfile now includes improved options to get an estimated vmcore size\n\nWith this implementation, the makedumpfile utility now includes the following options which help to print an estimate for the dump size for the currently running kernel:\n\n--dry-run performs all operations specified by the other options but does not write the output file.\n\n--show-stats prints the report messages. This is an alternative to enabling bit 4 in the level provided to --message-level option.\n\nThe following example shows the --dry-run and --show-stats usage:\n\n$ makedumpfile --dry-run --show-stats -l --message-level 7 -d 31 /proc/kcore dump.dummy\n\nNote that the dump file size may vary depending on the system state at the time of panic and the estimate provided by the options may differ from the actual state.\n\n(BZ#1958452)\n\nThe kexec-tools package now supports the default crashkernel memory reservation values for RHEL 9\n\nThe kexec-tools package now maintains the default crashkernel memory reservation values. The kdump service uses the default value to reserve the crashkernel memory for each kernel. This implementation also improves memory allocation for kdump when a system has less than 4GB of available memory.\n\nTo query the default crashkernel value:\n\n$ kdumpctl get-default-crashkernel\n\nIf the memory reserved by the default crashkernel value is not sufficient on your system, increase the crashkernel parameter.\n\nNote that the crashkernel=auto option in the boot command line is no longer supported in RHEL 9 and later releases.\n\nFor more information, see the /usr/share/doc/kexec-tools/crashkernel-howto.txt file.\n\n(BZ#2034490)\n\nCore scheduling is supported in RHEL 9\n\nWith the core scheduling functionality users can prevent tasks that should not trust each other from sharing the same CPU core. Likewise, users can define groups of tasks that can share a CPU core.\n\nThese groups can be specified:\n\nTo improve security by mitigating some cross-Symmetric Multithreading (SMT) attacks\n\nTo isolate tasks that need a whole core. For example for tasks in real-time environments, or for tasks that rely on specific processor features such as Single Instruction, Multiple Data (SIMD) processing\n\nFor more information, see Core Scheduling.\n\n(JIRA:RHELPLAN-100497)\n\nPerformance improved on 64-bit ARM architecture using non-strict iommu mode as default\n\nWith this upgrade, the 64-bit ARM architecture defaults to using the lazy direct memory access (DMA) domain for system memory management unit (SMMU). While bringing a significant performance gain, it can introduce a window between an address unmap and a Translation Lookaside Buffer (TLB) flush on SMMU. On previous versions, the 64-bit ARM architecture configured the strict DMA domains as default, which caused the performance to drop due to the 4KB page size.\n\nIf you need to use the strict DMA domain mode, specify the iommu.strict=1 mode using the kernel command-line. Note that using strict DMA domains can cause performance drops on 64-bit ARM architectures.\n\n(BZ#2050415)\n\nThe kernel-rt source tree has been updated to RHEL 9.0 tree\n\nThe kernel-rt sources have been updated to use the latest Red Hat Enterprise Linux kernel source tree. The real-time patch set has also been updated to the latest upstream version, v5.15-rt19. These updates provide a number of bug fixes and enhancements.\n\n(BZ#2002474)\n\nSupport for CPU hotplug in the hv_24x7 and hv_gpci PMUs\n\nWith this update, PMU counters correctly react to the hot-plugging of a CPU. As a result, if a hv_gpci event counter is running on a CPU that gets disabled, the counting redirects to another CPU.\n\n(BZ#1844416)\n\nMetrics for POWERPC hv_24x7 nest events are now available\n\nMetrics for POWERPC hv_24x7 nest events are now available for perf. By aggregating multiple events, these metrics provide a better understanding of the values obtained from perf counters and how effectively the CPU is able to process the workload.\n\n(BZ#1780258)\n\nThe IRDMA driver has been introduced in RHEL 9\n\nThe IRDMA driver enables RDMA functionality on RDMA-capable Intel® network devices. Devices supported by this driver are:\n\nIntel® Ethernet Controller E810\n\nIntel® Ethernet Network Adapter X722\n\nRHEL 9 delivers updated Intel® Ethernet Protocol Driver for RDMA (IRDMA) for the X722 Internet Wide-area RDMA Protocol (iWARP) device. RHEL 9 also introduces a new E810 device that supports iWARP and RDMA over Converged Ethernet (RoCEv2). The IRDMA module replaces the legacy i40iw module for X722 and extends the Application Binary Interface (ABI) defined for i40iw. The change is backward compatible with legacy X722 RDMA-Core provider (libi40iw).\n\nThe X722 device supports only iWARP and a more limited set of configuration parameters.\n\nThe E810 device supports the following set of RDMA and congestion management features:\n\niWARP and RoCEv2 RDMA transports\n\nPriority Flow Control (PFC)\n\nExplicit Congestion Notification (ECN)\n\n(BZ#1874195)\n\nA new parameter for the kernel bonding module: lacp_active\n\nRHEL 9 introduces the lacp_active parameter for the bonding kernel module. This parameter specifies whether to send Link Aggregation Control Protocol Data Unit (LACPDU) frames at specified intervals. The options are as follows:\n\non (default) - enables to send the LACPDU frames along with the configured lacp_rate parameter\n\noff - the LACPDU frames act as \"speak when spoken to\"\n\nNote that the LACPDU state frames are still sent when you initialize or unbind port.\n\n(BZ#1951951)\n\n4.10. Boot loader\n\nBoot loader configuration files are unified across CPU architectures\n\nConfiguration files for the GRUB boot loader are now stored in the /boot/grub2/ directory on all supported CPU architectures. The /boot/efi/EFI/redhat/grub.cfg file, which GRUB previously used as the main configuration file on UEFI systems, now simply loads the /boot/grub2/grub.cfg file.\n\nThis change simplifies the layout of the GRUB configuration file, improves user experience, and provides the following notable benefits:\n\nYou can boot the same installation with either EFI or legacy BIOS.\n\nYou can use the same documentation and commands for all architectures.\n\nGRUB configuration tools are more robust, because they no longer rely on symbolic links and they do not have to handle platform-specific cases.\n\nThe usage of the GRUB configuration files is aligned with images generated by CoreOS Assembler (COSA) and OSBuild.\n\nThe usage of the GRUB configuration files is aligned with other Linux distributions.\n\n(JIRA:RHELPLAN-101246)\n\n4.11. File systems and storage\n\nOptions in Samba utilities have been renamed and removed for a consistent user experience\n\nThe Samba utilities have been improved to provide a consistent command-line interface. These improvements include renamed and removed options. Therefore, to avoid problems after the update, review your scripts that use Samba utilities, and update them, if necessary.\n\nSamba 4.15 introduces the following changes to the Samba utilities:\n\nPreviously, Samba command-line utilities silently ignored unknown options. To prevent unexpected behavior, the utilities now consistently reject unknown options.\n\nSeveral command-line options now have a corresponding smb.conf variable to control their default value. See the man pages of the utilities to identify if a command-line option has an smb.conf variable name.\n\nBy default, Samba utilities now log to standard error (stderr). Use the --debug-stdout option to change this behavior.\n\nThe --client-protection=off|sign|encrypt option has been added to the common parser.\n\nThe following options have been renamed in all utilities:\n\n--kerberos to --use-kerberos=required|desired|off\n\n--krb5-ccache to --use-krb5-ccache=CCACHE\n\n--scope to --netbios-scope=SCOPE\n\n--use-ccache to --use-winbind-ccache\n\nThe following options have been removed from all utilities:\n\n-e and --encrypt\n\n-C removed from --use-winbind-ccache\n\n-i removed from --netbios-scope\n\n-S and --signing\n\nTo avoid duplicate options, certain options have been removed or renamed from the following utilities:\n\nndrdump: -l is no longer available for --load-dso\n\nnet: -l is no longer available for --long\n\nsharesec: -V is no longer available for --viewsddl\n\nsmbcquotas: --user has been renamed to --quota-user\n\nnmbd: --log-stdout has been renamed to --debug-stdout\n\nsmbd: --log-stdout has been renamed to --debug-stdout\n\nwinbindd: --log-stdout has been renamed to --debug-stdout\n\n(BZ#2065646)\n\nChanges in the NFS client and server in RHEL 9\n\nRHEL 9.0 NFS server and client no longer support the insecure GSS Kerberos 5 encryption type des-cbc-crc.\n\nNFS client no longer supports mounting filesystems using UDP transports.\n\n(BZ#1952863)\n\nGFS2 file systems are now created with format version 1802\n\nGFS2 file systems in RHEL 9 are created with format version 1802. This enables the following features:\n\nExtended attributes in the trusted namespace (\"trusted.* xattrs\") are recognized by gfs2 and gfs2-utils.\n\nThe rgrplvb option is active by default. This allows gfs2 to attach updated resource group data to DLM lock requests, so the node acquiring the lock does not need to update the resource group information from disk. This improves performance in some cases.\n\nFile systems created with the new format version will not be able to be mounted under earlier RHEL versions and older versions of the fsck.gfs2 utility will not be able to check them.\n\nUsers can create a file system with the older format version by running the mkfs.gfs2 command with the option -o format=1801.\n\nUsers can upgrade the format version of an older file system running tunegfs2 -r 1802 device on an unmounted file system. Downgrading the format version is not supported.\n\n(BZ#1616432)\n\nRHEL 9 provides nvml package version 1.10.1\n\nRHEL 9.0 updates the nvml package to version 1.10.1. This update adds features and fixes a potential data corruption bug on power loss.\n\n(BZ#1874208)\n\nSupport for exFAT file system has been added\n\nRHEL 9.0 supports Extensible File Allocation Table (exFAT) file system. You can now mount, format, and generally use this file system, which is usually used by default on flash memory.\n\n(BZ#1943423)\n\nrpcctl command now displays SunRPC connection information\n\nWith this update, you can use the rpcctl command to display information collected in the SunRPC sysfs files about the system’s SunRPC objects. You can show, remove, and set objects in the SunRPC network layer through the sysfs file system.\n\n(BZ#2059245)\n\nLimiting the set of the devices for LVM\n\nBy default, LVM in RHEL 9 uses only the devices that you explicitly select. Use the new commands lvmdevices and vgimportdevices to select specific devices. Using the pvcreate, vgcreate, and vgextend commands indirectly selects new devices for lvm, if they have not already been selected. LVM ignores devices that are attached to the system until you select them by using one of these commands. The lvm command saves the list of the selected devices in the devices file /etc/lvm/devices/system.devices. The lvm.conf filter or any other command-line configuration filter does not function when you enable the new devices file feature. If you remove or disable the devices file, LVM applies the filter to all attached devices. For detailed information about this feature, see the lvmdevices(8) man page.\n\n(BZ#1749513)\n\nNVMe/TCP host with nvme_tcp.ko is now fully supported\n\nNonvolatile Memory Express (NVMe) storage over TCP/IP networks (NVMe/TCP) with the nvme_tcp.ko kernel module is now fully supported. The NVMe/TCP target with the nvmet_tcp.ko module is available with an Unmaintained status in RHEL 9.0.\n\n(BZ#2054441)\n\nmultipathd now supports detecting FPIN-Li events\n\nWhen you add a new value fpin for the marginal_pathgroups config option, you enable multipathd to monitor the Link Integrity Fabric Performance Impact Notification (PFIN-Li) events and move paths with link integrity issues to a marginal pathgroup. With the fpin value set, multipathd overrides its existing marginal path detection methods and relies on the Fibre Channel fabric to identify link integrity issues.\n\nWith this enhancement, the multipathd method becomes more robust in detecting marginal paths on Fibre Channel fabrics that can issue PFIN-Li events.\n\n(BZ#2053642)\n\n4.12. High availability and clusters\n\nThe resource-stickiness resource meta-attribute now defaults to 1 instead of 0 for newly-created clusters\n\nPreviously, the default value for the resource-stickiness resource meta-attribute had a default value of 0 for newly-created clusters. This meta-attribute now defaults to 1.\n\nWith a stickiness of 0, a cluster may move resources as needed to balance resources across nodes. This may result in resources moving when unrelated resources start or stop. With a positive stickiness, resources have a preference to stay where they are, and move only if other circumstances outweigh the stickiness. This may result in newly-added nodes not getting any resources assigned to them without administrator intervention. Both approaches have potentially unexpected behavior, but most users prefer having some stickiness. The default value for this meta-attribute has been changed to 1 to reflect this preference.\n\nOnly newly-created clusters are affected by this change, so the behavior does not change for existing clusters. Users who prefer the old behavior for their cluster can delete the resource-stickiness entry from resource defaults.\n\n(BZ#1850145)\n\nNew LVM volume group flag to control autoactivation\n\nLVM volume groups now support a setautoactivation flag which controls whether logical volumes that you create from a volume group will be automatically activated on startup. When creating a volume group that will be managed by Pacemaker in a cluster, set this flag to n with the vgcreate --setautoactivation n command for the volume group to prevent possible data corruption. If you have an existing volume group used in a Pacemaker cluster, set the flag with vgchange --setautoactivation n.\n\n(BZ#1899214)\n\nNew pcs resource status display commands\n\nThe pcs resource status and the pcs stonith status commands now support the following options:\n\nYou can display the status of resources configured on a specific node with the pcs resource status node=node_id command and the pcs stonith status node=node_id command. You can use these commands to display the status of resources on both cluster and remote nodes.\n\nYou can display the status of a single resource with the pcs resource status resource_id and the pcs stonith status resource_id commands.\n\nYou can display the status of all resources with a specified tag with the pcs resource status tag_id and the pcs stonith status tag_id commands.\n\n(BZ#1290830, BZ#1285269)\n\nNew reduced output display option for pcs resource safe-disable command\n\nThe pcs resource safe-disable and pcs resource disable --safe commands print a lengthy simulation result after an error report. You can now specify the --brief option for those commands to print errors only. The error report now always contains resource IDs of affected resources.\n\n(BZ#1909901)\n\nNew pcs command to update SCSI fencing device without causing restart of all other resources\n\nUpdating a SCSI fencing device with the pcs stonith update command causes a restart of all resources running on the same node where the stonith resource was running. The new pcs stonith update-scsi-devices command allows you to update SCSI devices without causing a restart of other cluster resources.\n\n(BZ#1872378)\n\nAbility to configure watchdog-only SBD for fencing on subset of cluster nodes\n\nPreviously, to use a watchdog-only SBD configuration, all nodes in the cluster had to use SBD. That prevented using SBD in a cluster where some nodes support it but other nodes (often remote nodes) required some other form of fencing. Users can now configure a watchdog-only SBD setup using the new fence_watchdog agent, which allows cluster configurations where only some nodes use watchdog-only SBD for fencing and other nodes use other fencing types. A cluster may only have a single such device, and it must be named watchdog.\n\n(BZ#1443666)\n\nDetailed Pacemaker status display for internal errors\n\nIf Pacemaker can not execute a resource or fence agent for some reason, for example the agent is not installed or there has been an internal timeout, the Pacemaker status displays now show a detailed exit reason for the internal error.\n\n(BZ#1470834)\n\nThe pcmk_delay_base parameter may now take different values for different nodes\n\nWhen configuring a fence device, you now can specify different values for different nodes with the pcmk_delay_base parameter. This allows a single fence device to be used in a two-node cluster, with a different delay for each node. This helps prevent a situation where each node attempts to fence the other node at the same time. To specify different values for different nodes, you map the host names to the delay value for that node using a similar syntax to pcmk_host_map. For example, node1:0;node2:10s would use no delay when fencing node1 and a 10-second delay when fencing node2.\n\n(BZ#1082146)\n\nSupport for special characters inside pcmk_host_map values\n\nThe pcmk_host_map property now supports special characters inside pcmk_host_map values using a backslash (\\) in front of the value. For example, you can specify pcmk_host_map=\"node3:plug\\ 1\" to include a space in the host alias.\n\n(BZ#1376538)\n\nNew fencing agent for OpenShift\n\nThe fence_kubevirt fencing agent is now available for use with RHEL High Availability on Red Hat OpenShift Virtualization. For information on the fence_kubevirt agent, see the fence_kubevirt(8) man page.\n\n(BZ#1977588)\n\nLocal mode version of pcs cluster setup command is now fully supported\n\nBy default, the pcs cluster setup command automatically synchronizes all configuration files to the cluster nodes. The pcs cluster setup command now fully supports the --corosync-conf option. Specifying this option switches the command to local mode. In this mode, the pcs command-line interface creates a corosync.conf file and saves it to a specified file on the local node only, without communicating with any other node. This allows you to create a corosync.conf file in a script and handle that file by means of the script.\n\n(BZ#2008558)\n\nAutomatic removal of location constraint following resource move\n\nWhen you execute the pcs resource move command, this adds a constraint to the resource to prevent it from running on the node on which it is currently running. By default, the location constraint that the command creates is automatically removed once the resource has been moved. This does not necessarily move the resources back to the original node; where the resources can run at that point depends on how you have configured your resources initially. If you would like to move a resource and leave the resulting constraint in place, use the pcs resource move-with-contraint command.\n\n(BZ#2008575)\n\npcs suppport for OCF Resource Agent API 1.1 standard\n\nThe pcs command-line interface now supports OCF 1.1 resource and STONITH agents. As part of the implementation of this support, any agent’s metadata must comply with the OCF schema, whether the agent is an OCF 1.0 or OCF 1.1 agent. If an agent’s metadata does not comply with the OCF schema, pcs considers the agent invalid and will not create or update a resource of the agent unless the --force option is specified. The pcsd Web UI and pcs commands for listing agents now omit agents with invalid metadata from the listing.\n\n(BZ#2018969)\n\npcs now accepts Promoted and Unpromoted as role names\n\nThe pcs command-line interface now accepts Promoted and Unpromoted anywhere roles are specified in Pacemaker configuration. These role names are the functional equivalent of the Master and Slave Pacemaker roles in previous RHEL releases, and these are the role names that are visible in configuration displays and help pages.\n\n(BZ#2009455)\n\nUpdated version of pcsd Web UI\n\nThe pcsd Web UI, the graphical user interface to create and configure Pacemaker/Corosync clusters, has been updated. The updated Web UI provides an improved user experience and a standardized interface that is built with the PatternFly framework used in other Red Hat web applications.\n\n(BZ#1996067)\n\n4.13. Dynamic programming languages, web and database servers\n\nPython in RHEL 9\n\nPython 3.9 is the default Python implementation in RHEL 9. Python 3.9 is distributed in a non-modular python3 RPM package in the BaseOS repository and usually installed by default. Python 3.9 will be supported for the whole life cycle of RHEL 9.\n\nAdditional versions of Python 3 will be distributed as RPM packages with a shorter life cycle through the AppStream repository and will be installable in parallel.\n\nThe python command (/usr/bin/python), as well as other Python-related commands such as pip, are available in the unversioned form and point to the default Python 3.9 version.\n\nPython 2 is not distributed with RHEL 9.\n\nFor more information about Python in RHEL 9, see Introduction to Python.\n\n(BZ#1941595, JIRA:RHELPLAN-80598)\n\nNode.js 16 available in RHEL 9\n\nRHEL 9 provides a Long Term Support (LTS) version 16 of Node.js, a software development platform for building fast and scalable network applications in the JavaScript programming language.\n\nNotable changes in Node.js 16 over Node.js 14 include:\n\nThe V8 engine has been upgraded to version 9.4.\n\nThe npm package manager has been upgraded to version 8.3.1.\n\nA new Timers Promises API provides an alternative set of timer functions that return Promise objects.\n\nNode.js is now compatible with OpenSSL 3.0.\n\nNode.js now provides a new experimental Web Streams API and an experimental ECMAScript modules (ESM) loader hooks API.\n\nNode.js 16 is the initial version of this Application Stream, which you can install easily as an RPM package. Node.js 16 has a shorter life cycle than RHEL 9. For details, see the Red Hat Enterprise Linux Application Streams Life Cycle document. Additional Node.js versions will be provided as modules also with a shorter life cycle in future minor releases of RHEL 9.\n\n(BZ#1953491)\n\nRHEL 9 provides Ruby 3.0\n\nRHEL 9 is distributed with Ruby 3.0.3, which provides a number of performance improvements, bug and security fixes, and new features over Ruby 2.7.\n\nNotable enhancements include:\n\nConcurrency and parallelism features:\n\nRactor, an Actor-model abstraction that provides thread-safe parallel execution, is provided as an experimental feature.\n\nFiber Scheduler has been introduced as an experimental feature. Fiber Scheduler intercepts blocking operations, which enables light-weight concurrency without changing existing code.\n\nStatic analysis features:\n\nThe RBS language has been introduced which describes the structure of Ruby programs. The rbs gem has been added to parse type definitions written in RBS.\n\nThe TypeProf utility has been introduced which is a type analysis tool for Ruby code.\n\nPattern matching with the case/in expression is no longer experimental.\n\nOne-line pattern matching, which is an experimental feature, has been redesigned.\n\nFind pattern has been added as an experimental feature.\n\nThe following performance improvements have been implemented:\n\nPasting long code to the Interactive Ruby Shell (IRB) is now significantly faster.\n\nThe measure command has been added to IRB for time measurement.\n\nOther notable changes include:\n\nKeyword arguments are now separated from other arguments.\n\nThe default directory for user-installed gems is now $HOME/.local/share/gem/ unless the $HOME/.gem/ directory is already present.\n\nRuby 3.0 is the initial version of this Application Stream which you can install easily as an RPM package. Additional Ruby versions will be provided as modules with a shorter life cycle in future minor releases of RHEL 9.\n\n(JIRA:RHELPLAN-80758)\n\nRHEL 9 introduces Perl 5.32\n\nRHEL 9 includes Perl 5.32, which provides a number of bug fixes and enhancements over version 5.30.\n\nNotable enhancement include:\n\nPerl now supports Unicode version 13.0.\n\nThe qr quote-like operator has been enhanced.\n\nThe POSIX::mblen(), mbtowc, and wctomb functions now work on shift state locales and are thread-safe on C99 and above compilers when executed on a platform that has locale thread-safety; the length parameters are now optional.\n\nThe new experimental isa infix operator tests whether a given object is an instance of a given class or a class derived from it.\n\nAlpha assertions are no longer experimental.\n\nScript runs are no longer experimental.\n\nFeature checks are now faster.\n\nPerl can now dump compiled patterns before optimization.\n\nPerl 5.32 is the initial version of this Application Stream, which you can install easily as an RPM package. Additional Perl versions will be provided as modules with a shorter life cycle in future minor releases of RHEL 9.\n\n(JIRA:RHELPLAN-80759)\n\nRHEL 9 includes PHP 8.0\n\nRHEL 9 is distributed with PHP 8.0, which provides a number of bug fixes and enhancements over version 7.4.\n\nNotable enhancements include:\n\nNew named arguments are order-independent and self-documented, and enable you to specify only required parameters.\n\nNew attributes enable you to use structured metadata with PHP’s native syntax.\n\nNew union types enable you to use native union type declarations that are validated at runtime instead of PHPDoc annotations for a combination of types.\n\nInternal functions now more consistently raise an Error exception instead of warnings if parameter validation fails.\n\nNew Just-In-Time compilation engines significantly improve application performance.\n\nThe Xdebug debugging and productivity extension for PHP has been updated to version 3. This version introduces major changes in functionality and configuration compared to Xdebug 2.\n\nPHP 8.0 is the initial version of this Application Stream, which you can install easily as an RPM package. Additional PHP versions will be provided as modules with a shorter life cycle in future minor releases of RHEL 9.\n\nFor more information, see Using the PHP scripting language.\n\n(BZ#1949319)\n\nRHEL 9 provides Git 2.31 and Git LFS 2.13\n\nRHEL 9 is distributed with Git 2.31 which provides a number of enhancements and performance improvements over version 2.27 available in RHEL 8. Notable changes include:\n\nThe git status command now reports the status of sparse checkout.\n\nYou can now use the --add-file option with the git archive command to include untracked files in a snapshot from a tree-ish identifier.\n\nYou can use the clone.defaultremotename configuration variable to customize a nickname of the source remote repository.\n\nYou can configure the maximum length of output file names created by the git format-patch command. Previously, the length limit was 64 bytes.\n\nSupport for the deprecated PCRE1 library has been removed.\n\nAdditionally, the Git Large File Storage (LFS) extension version 2.13 is now available. Enhancements over version 2.11 distributed in RHEL 8 include:\n\nGit LFS now supports SHA-256 repositories.\n\nGit LFS now supports the socks5h protocol.\n\nA new --worktree option is available for the git lfs install and git lfs uninstall commands.\n\nA new --above parameter is available for the git lfs migrate import command.\n\n(BZ#1956345, BZ#1952517)\n\nSubversion 1.14 in RHEL 9\n\nRHEL 9 is distributed with Subversion 1.14. Subversion 1.14 is the initial version of this Application Stream, which you can install easily as an RPM package. Additional Subversion versions will be provided as modules with a shorter life cycle in future minor releases of RHEL 9.\n\n(JIRA:RHELPLAN-82578)\n\nNotable changes in the Apache HTTP Server\n\nRHEL 9.0 provides version 2.4.51 of the Apache HTTP Server. Notable changes over version 2.4.37 include:\n\nApache HTTP Server Control Interface (apachectl):\n\nThe systemctl pager is now disabled for apachectl status output.\n\nThe apachectl command now fails instead of giving a warning if you pass additional arguments.\n\nThe apachectl graceful-stop command now returns immediately.\n\nThe apachectl configtest command now executes the httpd -t command without changing the SELinux context.\n\nThe apachectl(8) man page in RHEL now fully documents differences from upstream apachectl.\n\nApache eXtenSion tool (apxs):\n\nThe /usr/bin/apxs command no longer uses or exposes compiler optimisation flags as applied when building the httpd package. You can now use the /usr/lib64/httpd/build/vendor-apxs command to apply the same compiler flags as used to build httpd. To use the vendor-apxs command, you must install the redhat-rpm-config package first.\n\nApache modules:\n\nThe mod_lua module is now provided in a separate package.\n\nA new mod_jk connector for the Apache HTTP Server is a module that utilizes the Apache JServ Protocol (AJP) to connect web servers with Apache Tomcat and other backends.\n\nA new mod_proxy_cluster module provides an httpd-based load balancer that uses a communication channel to forward requests from the load balancer to one of a set of application server nodes. The application server nodes use this connection to transmit server-side load balance factors and lifecycle events back to the load balancer through a custom set of HTTP methods called the Mod-Cluster Management Protocol (MCMP). This additional feedback channel allows mod_proxy_cluster to offer a level of intelligence and granularity not found in other load-balancing solutions. This module requires the ModCluster client to be installed on the backend server to successfully communicate.\n\nConfiguration syntax changes:\n\nIn the deprecated Allow directive provided by the mod_access_compat module, a comment (the # character) now triggers a syntax error instead of being silently ignored.\n\nOther changes:\n\nKernel thread IDs are now used directly in error log messages, making them both accurate and more concise.\n\nMany minor enhancements and bug fixes.\n\nA number of new interfaces are available to module authors.\n\nThere are no backwards-incompatible changes to the httpd module API since RHEL 8.\n\nApache HTTP Server 2.4 is the initial version of this Application Stream, which you can install easily as an RPM package.\n\nFor more information, see Setting up the Apache HTTP web server.\n\n(JIRA:RHELPLAN-68364, BZ#1931976, JIRA:RHELPLAN-80725)\n\nnginx 1.20 available in RHEL 9\n\nRHEL 9 includes the nginx 1.20 web and proxy server. This release provides a number of bug fixes, security fixes, new features and enhancements over version 1.18.\n\nNew features:\n\nnginx now supports client SSL certificate validation with Online Certificate Status Protocol (OCSP).\n\nnginx now supports cache clearing based on the minimum amount of free space. This support is implemented as the min_free parameter of the proxy_cache_path directive.\n\nA new ngx_stream_set_module module has been added, which enables you to set a value for a variable.\n\nA new nginx-mod-devel package has been added, which provides all necessary files, including RPM macros and nginx source code, for building external dynamic modules for nginx.\n\nEnhanced directives:\n\nMultiple new directives are now available, such as ssl_conf_command and ssl_reject_handshake.\n\nThe proxy_cookie_flags directive now supports variables.\n\nImproved support for HTTP/2:\n\nThe ngx_http_v2 module now includes the lingering_close, lingering_time, lingering_timeout directives.\n\nHandling connections in HTTP/2 has been aligned with HTTP/1.x. From nginx 1.20, use the keepalive_timeout and keepalive_requests directives instead of the removed http2_recv_timeout, http2_idle_timeout, and http2_max_requests directives.\n\nnginx 1.20 is the initial version of this Application Stream, which you can install easily as an RPM package. Additional nginx versions will be provided as modules with a shorter life cycle in future minor releases of RHEL 9.\n\nFor more information, see Setting up and configuring NGINX.\n\n(BZ#1953639, BZ#1991720)\n\nVarnish Cache 6.6 in RHEL 9\n\nRHEL 9 includes Varnish Cache 6.6, a high-performance HTTP reverse proxy.\n\nNotable changes since version 6.0 include:\n\nImproved performance of log-processing tools, such as varnishlog\n\nImproved accuracy of statistics\n\nA number of optimizations in cache lookups\n\nVarious configuration changes\n\nNumerous enhancements and bugs fixes\n\nVarnish Cache 6 is the initial version of this Application Stream, which you can install easily as an RPM package.\n\n(BZ#1984185)\n\nRHEL 9 introduces Squid 5\n\nRHEL 9 is distributed with Squid 5.2, a high-performance proxy caching server for web clients, supporting FTP, Gopher, and HTTP data objects. This release provides a number of bug fixes, security fixes, new features, and enhancements over version 4.\n\nNew features:\n\nSquid improves responsibility by using the Happy Eyeballs (HE) algorithm.\n\nSquid now uses a received IP address as soon request forwarding requires it instead of waiting for all of the potential forwarding destinations to be fully resolved.\n\nNew directives are now available: happy_eyeballs_connect_gap, happy_eyeballs_connect_limit, and happy_eyeballs_connect_timeout directives.\n\nThe dns_v4_first directive has been removed.\n\nSquid now uses the CDN-Loop header as a source for loop detection in Content Delivery Networks (CDN).\n\nSquid introduces peering support for SSL bumping.\n\nA new Internet Content Adaptation Protocol (ICAP) trailers feature is available, which enables ICAP agents to reliably send message metadata after the message body.\n\nChanges to configuration options:\n\nThe mark_client_packet configuration option has replaced clientside_mark.\n\nThe shared_transient_entries_limit configuration option has replaced collapsed_forwarding_shared_entries_limit.\n\nSquid 5 is the initial version of this Application Stream, which you can install easily as an RPM package.\n\nFor more information, see Configuring the Squid caching proxy server.\n\n(BZ#1990517)\n\nMariaDB 10.5 in RHEL 9\n\nRHEL 9 provides MariaDB 10.5. MariaDB 10.5 is the initial version of this Application Stream, which you can install easily as an RPM package. Additional MariaDB versions will be provided as modules with a shorter life cycle in future minor releases of RHEL 9.\n\nFor more information, see Using MariaDB.\n\n(BZ#1971248)\n\nRHEL 9 includes MySQL 8.0\n\nRHEL 9 is distributed with MySQL 8.0. MySQL 8.0 is the initial version of this Application Stream, which you can install easily as an RPM package. MySQL 8.0 has a shorter life cycle than RHEL 9. For details, see the Red Hat Enterprise Linux Application Streams Life Cycle document.\n\nFor information about usage, see Using MySQL.\n\n(JIRA:RHELPLAN-78673)\n\nRHEL 9 provides PostgreSQL 13\n\nPostgreSQL 13 is available with RHEL 9. PostgreSQL 13 is the initial version of this Application Stream, which you can install easily as an RPM package. Additional PostgreSQL versions will be provided as modules with a shorter life cycle in future minor releases of RHEL 9.\n\nFor more information, see Using PostgreSQL.\n\n(JIRA:RHELPLAN-78675)\n\nRedis 6.2 in RHEL 9\n\nRHEL 9 is distributed with Redis 6.2, which provides a number of bug and security fixes and enhancements over version 6.0 available in RHEL 8.\n\nNotably, Redis server configuration files are now located in a dedicated directory: /etc/redis/redis.conf and /etc/redis/sentinel.conf. In the RHEL 8 version, the location of these files was /etc/redis.conf and /etc/redis-sentinel.conf respectively.\n\nRedis 6 is the initial version of this Application Stream, which you can install easily as an RPM package.\n\n(BZ#1959756)\n\nNew package: perl-Module-Signature\n\nRHEL 9 introduces the perl-Module-Signature Perl module. With this new module, you can enable signature checking for cpan to mitigate CVE-2020-16156. For more information, see How to mitigate CVE-2020-16154 in perl-App-cpanminus and CVE-2020-16156 in perl-CPAN.\n\n(BZ#2039361)\n\n4.15. Identity Management\n\nDirectory Server no longer uses a global changelog\n\nWith this enhancement, the Directory Server changelog has been integrated into the main database. Previously, Directory Server used a global changelog. However, this could cause issues if the directory used multiple databases. As a result, each suffix has now its own changelog in the same directory as the regular database files.\n\n(BZ#1805717)\n\nansible-freeipa is now available in the AppStream repository with all dependencies\n\nPreviously in RHEL 8, before installing the ansible-freeipa package, you first had to enable the Ansible repository and install the ansible package. In RHEL 8.6 and RHEL 9, you can install ansible-freeipa without any preliminary steps. Installing ansible-freeipa automatically installs the ansible-core package, a more basic version of ansible, as a dependency. Both ansible-freeipa and ansible-core are available in the rhel-9-for-x86_64-appstream-rpms repository.\n\nansible-freeipa in RHEL 8.6 and RHEL 9 contains all the modules that it contained in RHEL 8.\n\n(JIRA:RHELPLAN-100359)\n\nIdM now supports the automountlocation, automountmap, and automountkey Ansible modules\n\nWith this update, the ansible-freeipa package contains the ipaautomountlocation, ipaautomountmap, and ipaautomountkey modules. You can use these modules to configure directories to be mounted automatically for IdM users logged in to IdM clients in an IdM location. Note that currently, only direct maps are supported.\n\n(JIRA:RHELPLAN-79161)\n\nThe support for managing subID ranges is available in the shadow-utils\n\nPreviously, shadow-utils configured the subID ranges automatically from the /etc/subuid and /etc/subgid files. With this update, the configuration of subID ranges is available in the /etc/nsswitch.conf file by setting a value in the subid field. For more information, see man subuid and man subgid. Also, with this update, an SSSD implementation of the shadow-utils plugin is available, which provides the subID ranges from the IPA server. To use this functionality, add the subid: sss value to the /etc/nsswitch.conf file. This solution might be useful in the containerized environment to facilitate rootless containers.\n\nNote that in case the /etc/nsswitch.conf file is configured by the authselect tool, you must follow the procedures described in the authselect documentation. When it is not the case, you can modify the /etc/nsswitch.conf file manually.\n\n(BZ#1859252)\n\nSupport for managing subID ranges is available in IdM\n\nWith this update, you can manage ID subranges for users in Identity Management. You can use the ipa CLI tool or IdM WebUI interface to assign automatically configured subID ranges to a user, which might be useful in a containerized environment.\n\n(BZ#1952028)\n\nIdentity Management installation packages have been demodularized\n\nPreviously in RHEL 8, IdM packages were distributed as modules, which required you to enable a stream and install the profile that corresponds to your desired installation. IdM installation packages have been demodularized in RHEL 9, so you can use the following dnf commands to install IdM server packages:\n\nFor a server without integrated DNS services:\n\n# dnf install ipa-server\n\nFor a server with integrated DNS services:\n\n# dnf install ipa-server ipa-server-dns\n\n(BZ#2080875)\n\nAn alternative to the traditional RHEL ansible-freeipa repository: Ansible Automation Hub\n\nWith this update, you can download ansible-freeipa modules from the Ansible Automation Hub (AAH) instead of downloading them from the standard RHEL repository. By using AAH, you can benefit from the faster updates of the ansible-freeipa modules available in this repository.\n\nIn AAH, ansible-freeipa roles and modules are distributed in the collection format. Note that you need an Ansible Automation Platform (AAP) subscription to access the content on the AAH portal. You also need ansible version 2.9 or later.\n\nThe redhat.rhel_idm collection has the same content as the traditional ansible-freeipa package. However, the collection format uses a fully qualified collection name (FQCN) that consists of a namespace and the collection name. For example, the redhat.rhel_idm.ipadnsconfig module corresponds to the ipadnsconfig module in ansible-freeipa provided by a RHEL repository. The combination of a namespace and a collection name ensures that the objects are unique and can be shared without any conflicts.\n\n(JIRA:RHELPLAN-103147)\n\nansible-freeipa modules can now be executed remotely on IdM clients\n\nPreviously, ansible-freeipa modules could only be executed on IdM servers. This required your Ansible administrator to have SSH access to your IdM server, causing a potential security threat. With this update, you can execute ansible-freeipa modules remotely on systems that are IdM clients. As a result, you can manage IdM configuration and entities in a more secure way.\n\nTo execute ansible-freeipa modules on an IdM client, choose one of the following options:\n\nSet the hosts variable of the playbook to an IdM client host.\n\nAdd the ipa_context: client line to the playbook task that uses the ansible-freeipa module.\n\nYou can set the ipa_context variable to client on an IdM server, too. However, the server context usually provides better performance. If ipa_context is not set, ansible-freeipa checks if it is running on a server or a client, and sets the context accordingly. Note that executing an ansible-freeipa module with context set to server on an IdM client host raises an error of missing libraries.\n\n(JIRA:RHELPLAN-103146)\n\nThe ipadnsconfig module now requires action: member to exclude a global forwarder\n\nWith this update, excluding global forwarders in Identity Management (IdM) by using the ansible-freeipa ipadnsconfig module requires using the action: member option in addition to the state: absent option. If you only use state: absent in your playbook without also using action: member, the playbook fails. Consequently, to remove all global forwarders, you must specify all of them individually in the playbook. In contrast, the state: present option does not require action: member.\n\n(BZ#2046325)\n\nAutomatic private groups for AD users support centralized configuring\n\nYou can now centrally define how compatible versions of SSSD on IdM clients manage private groups for users from trusted Active Directory domains. With this enhancement, you can now explicitly set the value for SSSD’s auto_private_groups option for an ID range that handles AD users.\n\nWhen the auto_private_groups option is not explicitly set, it uses a default value:\n\nFor an ipa-ad-trust-posix ID range, the default value is false. SSSD always uses the uidNumber and gidNumber of the AD entry. A group with the gidNumber must exist in AD.\n\nFor an ipa-ad-trust ID range, the default value is true. SSSD maps the uidNumber from the entry SID, the gidNumber is always set to the same value, and a private group is always mapped.\n\nYou can also set auto_private_groups to a third setting: hybrid. With this setting, SSSD maps a private group if the user entry has a GID equal to the UID but there is no group with this GID. If the UID and GID are different, a group with this GID number must exist.\n\nThis feature is useful for administrators that want to stop maintaining separate group objects for the user private groups, but also want to retain the existing user private groups.\n\n(BZ#1957736)\n\nCustomizable logging settings for BIND\n\nWith this enhancement, you can now configure logging settings for the BIND DNS server component of an Identity Management server in the /etc/named/ipa-logging-ext.conf configuration file.\n\n(BZ#1966101)\n\nAutodiscovery of IdM servers when retrieving an IdM keytab\n\nWith this enhancement, you no longer need to specify an IdM server host name when retrieving a Kerberos keytab with the ipa-getkeytab command. If you do not specify a server host name, DNS discovery is used to find an IdM server. If no servers are found, the command falls back to the host value specified in the /etc/ipa/default.conf configuration file.\n\n(BZ#1988383)\n\nRHEL 9 provides Samba 4.15.5\n\nRHEL 9 is distributed with Samba 4.15.5, which provides bug fixes and enhancements over version 4.14:\n\nOptions in Samba utilities have been renamed and removed for a consistent user experience\n\nServer multi-channel support is now enabled by default.\n\nThe SMB2_22, SMB2_24, and SMB3_10 dialects, which were only used by Windows technical previews, have been removed.\n\nBack up the database files before starting Samba. When the smbd, nmbd, or winbind services start, Samba automatically updates its tdb database files. Note that Red Hat does not support downgrading tdb database files.\n\nAfter updating Samba, verify the /etc/samba/smb.conf file using the testparm utility.\n\nFor further information about notable changes, read the upstream release notes before updating.\n\n(BZ#2013578)\n\nTracking client requests using the log analyzer tool\n\nThe System Security Services Daemon (SSSD) now includes a log parsing tool which tracks requests from start to finish across log files from multiple SSSD components.\n\nThe log analyzer tool allows you to more easily review SSSD debug logs to help you to troubleshoot any issues in SSSD. For example, you can extract and print SSSD logs pertaining only to certain client requests across SSSD processes. To run the analyzer tool, use the sssctl analyze command.\n\n(JIRA:RHELPLAN-97899)\n\nSSSD now logs backtraces by default\n\nWith this enhancement, SSSD now stores detailed debug logs in an in-memory buffer and appends them to log files when a failure occurs. By default, the following error levels trigger a backtrace:\n\nLevel 0: fatal failures\n\nLevel 1: critical failures\n\nLevel 2: serious failures\n\nYou can modify this behavior for each SSSD process by setting the debug_level option in the corresponding section of the sssd.conf configuration file:\n\nIf you set the debugging level to 0, only level 0 events trigger a backtrace.\n\nIf you set the debugging level to 1, levels 0 and 1 trigger a backtrace.\n\nIf you set the debugging level to 2 or higher, events at level 0 through 2 trigger a backtrace.\n\nYou can disable this feature per SSSD process by setting the debug_backtrace_enabled option to false in the corresponding section of sssd.conf:\n\n[sssd] debug_backtrace_enabled = true debug_level=0 ... [nss] debug_backtrace_enabled = false ... [domain/idm.example.com] debug_backtrace_enabled = true debug_level=2 ... ...\n\n(BZ#1949149)\n\nSSSD default SSH hashing value is now consistent with the OpenSSH setting\n\nThe default value of ssh_hash_known_hosts has been changed to false. It is now consistent with the OpenSSH setting, which does not hash host names by default.\n\nHowever, if you need to continue to hash host names, add ssh_hash_known_hosts = True to the [ssh] section of the /etc/sssd/sssd.conf configuration file.\n\n(BZ#2014249)\n\nDirectory Server 12.0 is based on upstream version 2.0.14\n\nDirectory Server 12.0 is based on upstream version 2.0.14 which provides a number of bug fixes and enhancements over the previous version. For a complete list of notable changes, read the upstream release notes before updating:\n\n(BZ#2024693)\n\nDirectory Server now stores memory-mapped files of databases on a tmpfs file system\n\nIn Directory Server, the nsslapd-db-home-directory parameter defines the location of memory-mapped files of databases. This enhancement changes the default value of the parameter from /var/lib/dirsrv/slapd-instance_name/db/ to /dev/shm/. As a result, with the internal databases stored on a tmpfs file system, the performance of Directory Server increases.\n\n(BZ#2088414)\n\nFreeRADIUS support is now redesigned\n\nIn RHEL 9, the existing FreeRADIUS offering is now streamlined and aligned more closely with the strategic direction of Identity Management (IdM). In order to provide the best support for IdM customers, Red Hat is strengthening support for these external authentication modules with FreeRADIUS:\n\nAuthentication based on krb5 and LDAP\n\nPython 3 authentication\n\nThe following mo"
    }
}