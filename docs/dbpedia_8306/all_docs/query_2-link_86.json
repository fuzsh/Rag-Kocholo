{
    "id": "dbpedia_8306_2",
    "rank": 86,
    "data": {
        "url": "https://docs.gitlab.com/ee/user/project/repository/code_suggestions/supported_extensions.html",
        "read_more_link": "",
        "language": "en",
        "title": "Supported extensions and languages",
        "top_image": "https://docs.gitlab.com/favicon.ico?v=2",
        "meta_img": "https://docs.gitlab.com/favicon.ico?v=2",
        "images": [
            "https://docs.gitlab.com/assets/images/gitlab-logo-header.svg",
            "https://docs.gitlab.com/assets/images/gitlab-logo.svg",
            "https://docs.gitlab.com/assets/images/by-sa.svg",
            "https://dc.ads.linkedin.com/collect/?pid=30694&fmt=gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Code Suggestions supports multiple editors and languages.",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico?v=2",
        "meta_site_name": "",
        "canonical_link": "https://docs.gitlab.com/ee/user/project/repository/code_suggestions/supported_extensions.html",
        "text": "Supported editor extensions\n\nSupported languages\n\nManage languages for Code Suggestions\n\nAdd support for more languages\n\nUse open tabs as context\n\nEnable open tabs as context\n\nView multiple code suggestions\n\nSupported extensions and languages\n\nTier: Premium with GitLab Duo Pro or Ultimate with GitLab Duo Pro or Enterprise Offering: GitLab.com, Self-managed, GitLab Dedicated\n\nCode Suggestions is available in the following editor extensions and for the following languages.\n\nSupported editor extensions\n\nTo use Code Suggestions, use one of these editor extensions:\n\nIDE Extension Visual Studio Code (VS Code) GitLab Workflow for VS Code GitLab Web IDE (VS Code in the Cloud) No configuration required. Microsoft Visual Studio (2022 for Windows) Visual Studio GitLab extension JetBrains IDEs GitLab Duo Plugin for JetBrains Neovim gitlab.vim plugin\n\nA GitLab Language Server is used in VS Code, Visual Studio, and Neovim. The Language Server supports faster iteration across more platforms. You can also configure it to support Code Suggestions in IDEs where GitLab doesn’t provide official support.\n\nYou can express interest in other IDE extension support in this issue.\n\nSupported languages\n\nCode Suggestions is aware of common popular programming languages, concepts, and infrastructure-as-code interfaces, like Kubernetes Resource Model (KRM), Google Cloud CLI, and Terraform.\n\nCode Suggestions supports these languages:\n\nLanguage Web IDE VS Code JetBrains IDEs Visual Studio 2022 for Windows Neovim C Yes Yes No Yes Yes C++ Yes Yes Yes Yes Yes C# Yes Yes Yes Yes Yes CSS Yes No No No No Go Yes Yes Yes Yes Yes Google SQL Yes Yes Yes Yes Yes HAML Yes Yes Yes Yes Yes HTML Yes No No No No Java Yes Yes Yes Yes Yes JavaScript Yes Yes Yes Yes Yes Kotlin No Yes\n\n(Requires third-party extension providing Kotlin support) Yes Yes Yes Markdown Yes No No No No PHP Yes Yes Yes Yes Yes Python Yes Yes Yes Yes Yes Ruby Yes Yes Yes Yes Yes Rust Yes Yes Yes Yes Yes Scala No Yes\n\n(Requires third-party extension providing Scala support) Yes Yes Yes Shell scripts (bash only) Yes No Yes Yes Yes Svelte Yes Yes Yes Yes Yes Swift Yes Yes Yes Yes Yes TypeScript Yes Yes Yes Yes Yes Terraform No Yes\n\n(Requires third-party extension providing Terraform support) Yes No Yes\n\n(Requires third-party extension providing the terraform file type) Vue Yes Yes Yes Yes Yes\n\nnote\n\nSome languages are not supported in all JetBrains IDEs, or might require additional plugin support. Refer to the JetBrains documentation for specifics on your IDE.\n\nLocally, you can add more languages. For languages not listed in the table, Code Suggestions might not function as expected.\n\nManage languages for Code Suggestions\n\nHistory\n\nIntroduced in GitLab Workflow for VS Code 4.21.0\n\nYou can customize your coding experience in VS Code by enabling or disabling Code Suggestions for specific supported languages. You can do this by editing your settings.json file directly, or from the VS Code user interface:\n\nIn VS Code, open the extension settings for GitLab Workflow:\n\nOn the top bar, go to Code > Settings > Extensions.\n\nSearch for GitLab Workflow in the list, and select Manage ( ).\n\nSelect Extension Settings.\n\nIn your User settings, find the section titled AI Assisted Code Suggestions: Enabled Supported Languages.\n\nYou will see a list of all supported languages with checkboxes next to each language.\n\nTo enable Code Suggestions for a language, ensure its checkbox is checked.\n\nTo disable Code Suggestions for a language, uncheck its checkbox.\n\nYour changes are automatically saved and will take effect immediately.\n\nWhen you disable Code Suggestions for a language, the Duo icon changes to show that suggestions are disabled for this language. On hover, it shows Code Suggestions are disabled for this language.\n\nAdd support for more languages\n\nIf your desired language doesn’t have Code Suggestions available by default, you can add support for your language locally.\n\nVisual Studio Code\n\nPrerequisites:\n\nYou have installed and enabled the GitLab Workflow extension for VS Code.\n\nYou have completed the VS Code extension setup instructions, and authorized the extension to access your GitLab account.\n\nTo do this:\n\nFind your desired language in the list of language identifiers. You need the Identifier for your languages in a later step.\n\nIn VS Code, open the extension settings for GitLab Workflow:\n\nOn the top bar, go to Code > Settings > Extensions.\n\nSearch for GitLab Workflow in the list, and select Manage ( ).\n\nSelect Extension Settings.\n\nIn your User settings, find GitLab › Ai Assisted Code Suggestions: Additional Languages and select Add Item.\n\nIn Item, add the identifier for each language you want to support. Identifiers should be lowercase, like html or powershell. Don’t add leading periods from file suffixes to each identifier.\n\nSelect OK.\n\nJetBrains IDEs\n\nPrerequisites:\n\nYou have installed and enabled the GitLab plugin for JetBrains IDEs.\n\nYou have completed the Jetbrains extension setup instructions, and authorized the extension to access your GitLab account.\n\nTo do this:\n\nFind your desired language in the list of language identifiers. You need the Identifier for your languages in a later step.\n\nIn your IDE, on the top bar, select your IDE name, then select Settings.\n\nOn the left sidebar, select Tools > GitLab Duo.\n\nUnder Code Suggestions Enabled Languages > Additional languages, add the identifier for each language you want to support. Identifiers should be in lower case, like html. Separate multiple identifiers with commas, like html,powershell,latex, and don’t add leading periods to each identifier.\n\nSelect OK.\n\nUse open tabs as context\n\nHistory\n\nIntroduced in GitLab 17.2.\n\nTo enhance the accuracy and relevance of GitLab Duo Code Suggestions, enable the use of open tabs as context in your IDE settings. This feature uses the contents of files most recently opened or changed in your IDE to provide more tailored code suggestions, within certain truncation limits. This extra context gives you:\n\nMore accurate and relevant code suggestions\n\nBetter alignment with your project’s standards and practices\n\nImproved context for new file creation\n\nOpen tabs as context supports these languages:\n\nCode Completion: All configured languages.\n\nCode Generation: Go, Java, JavaScript, Kotlin, Python, Ruby, Rust, TypeScript (.ts and .tsx files), Vue, and YAML.\n\nEnable open tabs as context\n\nPrerequisites:\n\nRequires GitLab 17.1 or later.\n\nFor GitLab self-managed instances, enable the code_suggestions_contextand the advanced_context_resolver feature flags.\n\nGitLab Duo Code Suggestions enabled for your project\n\nFor Visual Studio Code, requires the GitLab Workflow extension, version 4.14.2 or later.\n\nVisual Studio Code\n\nInstall the GitLab Workflow extension from the Visual Studio Marketplace.\n\nConfigure the extension following the setup instructions.\n\nEnable the feature by toggling the gitlab.aiAssistedCodeSuggestions.enabledSupportedLanguages setting.\n\nJetBrains IDEs\n\nFor installation instructions for JetBrains IDEs, see the GitLab JetBrains Plugin documentation.\n\nWhen you’re ready to start coding:\n\nOpen relevant files, including configuration files, to provide better context.\n\nClose any files you don’t want to be used as context.\n\nView multiple code suggestions\n\nHistory\n\nIntroduced in GitLab 17.1.\n\nFor a code completion suggestion in VS Code, multiple suggestion options might be available. To view all available suggestions:\n\nHover over the code completion suggestion.\n\nScroll through the alternatives. Either:\n\nUse keyboard shortcuts:\n\nOn a Mac, press Option + ] to view the next suggestion, and Option + [ to view the previous suggestions.\n\nOn Windows, press Alt + ] to view the next suggestion, and Alt + [ to view the previous suggestions.\n\nOn the dialog that’s displayed, select the right or left arrow to see next or previous options.\n\nPress Tab to apply the suggestion you prefer."
    }
}