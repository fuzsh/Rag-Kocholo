{
    "id": "dbpedia_3727_3",
    "rank": 6,
    "data": {
        "url": "https://arxiv.org/html/2406.00814v1",
        "read_more_link": "",
        "language": "en",
        "title": "Expected Possession Value of Control and Duel Actions for Soccer Player’s Skills Estimation",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Andrei Shelopugin\n\nIndependent Researcher\n\nshelopuginandrey@gmail.com\n\nAbstract\n\nEstimation of football players’ skills is one of the key tasks in sports analytics. This paper introduces multiple extensions to a widely used model, expected possession value (EPV), to address some key challenges such as selection problem. First, we assign greater weights to events occurring immediately prior to the shot rather than those preceding them (decay effect). Second, our model incorporates possession risk more accurately by considering the decay effect and effective playing time. Third, we integrate the assessment of individual player ability to win aerial and ground duels. Using the extended EPV model, we predict this metric for various football players for the upcoming season, particularly taking into account the strength of their opponents.\n\nKeywords soccer analytics, evaluation metrics, rating systems, glicko, performance prediction, epv\n\n1 Introduction\n\nEstimating players’ skills is a key challenge for football managers, scouts, and analysts. While video analysis can offer insights [1], conducting it for all players in the market is impractical. Analysts must therefore use filtering mechanisms to narrow down the selection pool. This can involve basic profile data like age, position, and nationality. Alternatively, leveraging statistics or metrics correlated with actual player performance offers a more effective approach. By using these metrics, analysts can make more informed decisions in player selection.\n\nCurrently, accurately assessing the skill levels of players based on historical data has become a complex task. Soccer, being a complicated game, presents various challenges in this regard, one of which is the fact that out of the 22 players on the field, only one possesses the ball at any given time. In recent years, sports analytics, including soccer analytics, has made significant advancements in the understanding how to effectively estimate players’ abilities, particularly in terms of ball possession skills.\n\nIn the past, player analysis predominantly relied on basic statistics such as goals scored, successful passes, and fouls committed. However, there has been a shift towards utilizing advanced metrics, which provide a more comprehensive and nuanced evaluation of player performance.\n\nThe challenge with these metrics lies in their reliance on historical data, limiting their use in predicting future performance. While they may work well in \"closed\" leagues like the NBA, where teams share similar strengths, soccer’s diverse leagues present a more complex scenario. This complicates player selection, as managers must understand how players will adapt to new clubs or leagues. Analysts need to assess the resistance levels of different leagues and the stylistic characteristics of new clubs for optimal player hiring decisions.\n\nIn this paper, we modify the expected possession value model. Using this model, we calculate a reward, accumulated by each player during the season, that characterizes a footballer’s ability to play with the ball and predict the values of this reward for the next season.\n\n2 Related Work\n\nJ. Hollinger introduced the Player Efficiency Rating (P⁢E⁢R𝑃𝐸𝑅PERitalic_P italic_E italic_R)[2] as a metric for evaluating NBA players, utilizing basic statistics. He introduced the concept of the value of possession and suggested a formula that rewards and punishes players for successful and unsuccessful actions.\n\nPollard, Ensum, and Taylor developed the expected goals model (xG) based on logistic regression, which predicts the likelihood of a shot resulting in a goal[3]. Pollard and Reep[4] suggested estimating possessions in risk-reward terms by assigning a value of xG to shots taken during a possession and a value of -x⁢G𝑥𝐺xGitalic_x italic_G to shots taken by the opponent team in the subsequent possession.\n\nSpearman [5] introduced the term off-ball scoring opportunities (OBSO) which represents the posterior probability of scoring with the next on-ball event at a particular location based on tracking data. Spearman et al. proposed the idea of pitch control, based on a physical model that predicts that a pass will be accurate[6]. Power et al. developed a pass model to analyze decision-making in risk-reward contexts[7].\n\nSingh introduced the Expected Threat metric based on a Markov chain approach[8]. Cervone, D., D’Amour, A., Bornn, L., and Goldsberry suggested the expected possession value model (EPV) for basketball tracking data, taking into account individual player skills[9], [10]. Fernandez et al. apply EPV for soccer data[11].\n\nGarnier and Gregoir utilized deep reinforcement learning techniques and introduced a metric called Expected Discounted Goal (EDG)[12]. Liu et al.[13] approached the estimation of EPV as a reinforcement learning (RL) task. They developed the Goal Impact Metric (GIM) as a result of their RL-based solution.\n\nDinsdale and Gallagher[14] predicted values of several player metrics for the first 1,000 minutes of a player at a new club, or the next 1,000 minutes if a player remains at their current club, taking into account Elo[15] ratings of clubs and leagues.\n\n3 Proposed Approach for EPV\n\n3.1 Background\n\nThis section introduces our customized version of the Expected Possession Value (EPV) model. The model has been built using events data, which includes actions such as passes, shots, dribbles, etc. Each event is described by relevant details, including coordinates, time, and other information. This paper employs the following notation to formalize the problem:\n\n•\n\ni𝑖iitalic_i - index of event,\n\n•\n\ncisubscript𝑐𝑖c_{i}italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT - control action,\n\n•\n\ndisubscript𝑑𝑖d_{i}italic_d start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT - duel action,\n\n•\n\ntisubscript𝑡𝑖t_{i}italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT - effective playing time of event i𝑖iitalic_i,\n\n•\n\nsisubscript𝑠𝑖s_{i}italic_s start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT - index of possession of event i𝑖iitalic_i,\n\n•\n\nx⁢Gi𝑥subscript𝐺𝑖xG_{i}italic_x italic_G start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT - x⁢G𝑥𝐺xGitalic_x italic_G of event i𝑖iitalic_i, if the event is a shot,\n\n•\n\nP⁢V⁢(ei)𝑃𝑉subscript𝑒𝑖PV(e_{i})italic_P italic_V ( italic_e start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) - possession value of event i𝑖iitalic_i,\n\n•\n\nE⁢P⁢V⁢(ei)𝐸𝑃𝑉subscript𝑒𝑖EPV(e_{i})italic_E italic_P italic_V ( italic_e start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) - expected possession value of event i𝑖iitalic_i (prediction of EPV model).\n\nBy control actions we consider the actions such as a pass, a shot, a dribble, a carry (ball control), a free kick, a goal kick, a penalty, a corner kick, a throw in. The idea behind this definition is that it is clear which player possesses the ball during these actions.\n\nAerial and ground duels are considered symmetrical duels. Dribble is not a symmetrical duel.\n\nWe define possession as a series of control actions by the same team uninterrupted by the opponent. In theory, team may touch the ball during the opponent’s possession, like intercepting the ball, but if it doesn’t lead to their control action, the opponent’s possession continues. A goalkeeper’s save, leading to a corner or offensive rebound, does not interrupt the opponent’s possession. Therefore, one possession could include several shots.\n\nEffective playing time is the total amount of time that the ball is in play during the match. Most football metrics are normalized based on dirty playing time. The duration of pauses during VAR reviews, substitutions, and set-piece situations should be excluded. Therefore, we will recalculate our metrics based on effective playing time, considering only the actual time of active gameplay. Furthermore, when we use terms like playing time, minutes, seconds, etc., we are referring to effective playing time.\n\n3.2 Possession Value of Control Actions\n\nWe define our model’s target variable as the possession value. We then refer to the model’s prediction as the expected possession value (EPV). Traditionally, there are two approaches to defining the EPV model’s target. The first assigns a value of 1 to each event within a possession if it results in a goal, and 0 otherwise. However, we avoid this approach due to the limited number of goals, which could cause overfitting.\n\nThe alternative approach involves assigning each event within a possession the cumulative sum of x⁢G𝑥𝐺xGitalic_x italic_G from future shots during that possession.\n\nP⁢V⁢(ci)=(1−∏j=1∞(1−x⁢Gj⁢[tj≥ti]⁢[si=sj]))𝑃𝑉subscript𝑐𝑖1superscriptsubscriptproduct𝑗11𝑥subscript𝐺𝑗delimited-[]subscript𝑡𝑗subscript𝑡𝑖delimited-[]subscript𝑠𝑖subscript𝑠𝑗PV(c_{i})=(1-\\prod_{j=1}^{\\infty}(1-xG_{j}[t_{j}\\geq t_{i}][s_{i}=s_{j}]))italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) = ( 1 - ∏ start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT ∞ end_POSTSUPERSCRIPT ( 1 - italic_x italic_G start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT [ italic_t start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ≥ italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ] [ italic_s start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT = italic_s start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ] ) ) (1)\n\nWe would like to highlight a couple of key points. Firstly, this formula is correct only to control actions, as exclusively in these cases can we definitively determine which player has possession. Secondly, we consider only the x⁢G𝑥𝐺xGitalic_x italic_G of shots that occur after a specific event because the reward is determined by future events rather than past ones. Thirdly, we take into account the possibility of a subsequent goal occurring because the initial shot did not result in a goal. For that reason, the term (1−x⁢Gj)1𝑥subscript𝐺𝑗(1-xG_{j})( 1 - italic_x italic_G start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ) is included in equation (1). A description of our xG model can be found in the fourth chapter.\n\n3.3 Decay Effect\n\nFormula (1) has a significant drawback. It assigns the same possession value (P⁢V𝑃𝑉PVitalic_P italic_V) to all events preceding the corresponding shots, implying equal importance for each action. This assumption is invalid. Thus, we introduce a decay effect where actions leading to shots carry more weight. Hence, we modify the formula as follows:\n\nPV(ci)=(1−∏j=1∞(1−γ(tj−ti)xGj[tj≥ti][si=sj])PV(c_{i})=(1-\\prod_{j=1}^{\\infty}(1-\\gamma^{(t_{j}-t_{i})}xG_{j}[t_{j}\\geq t_{% i}][s_{i}=s_{j}])italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) = ( 1 - ∏ start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT ∞ end_POSTSUPERSCRIPT ( 1 - italic_γ start_POSTSUPERSCRIPT ( italic_t start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) end_POSTSUPERSCRIPT italic_x italic_G start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT [ italic_t start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ≥ italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ] [ italic_s start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT = italic_s start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ] ) (2)\n\nThe discount factor was proposed by Samuelson[16] and has found widespread use in economics and reinforcement learning, prioritizing receiving rewards sooner. However, in our context, the interpretation of the discount factor differs. We don’t encourage earlier shots. Instead, we suggest that if an action doesn’t lead to a shot soon, it may not significantly advance the attacking phase. We use a discount factor of 0.95. This value is a hyperparameter that can be adjusted based on preferences. Analysts favoring a vertical attacking style might use a lower gamma value like 0.9, while those preferring a tiki-taka style might choose a higher value like 0.99.\n\nAnother point to highlight is that the formula operates correctly due to our consideration of effective playing time. For example, if a player draws a penalty, he receives a substantial reward since the penalty kick occurs immediately after. This ensures rewards accurately reflect the timing and impact of events in the game.\n\nThe concept of employing a discount factor in soccer is not entirely new. For example, in [12], the discounted expected number of goals that a team will score (or concede) was used as a target value for an RL algorithm. However, this target value lacks precision without taking into account the x⁢G𝑥𝐺xGitalic_x italic_G and effective time concepts.\n\n3.4 Possession Risk\n\nSome E⁢P⁢V𝐸𝑃𝑉EPVitalic_E italic_P italic_V models incorporate possession risk[4]. An accurate forward pass not only increases the team’s scoring chances but also reduces the threat near their own goal. These models consider the difference between the team’s P⁢V𝑃𝑉PVitalic_P italic_V and the opponent’s P⁢V𝑃𝑉PVitalic_P italic_V in the subsequent possession, rather than just the team’s possession value.\n\nThe penalty for possession risk in this approach has a significant drawback. For instance, consider a player who completes a pass, but the team loses possession 10 seconds later, leading to the opponent earning a penalty kick 20 seconds after that. In this approach, the player’s pass would be assigned a target value of -0.75 (the x⁢G𝑥𝐺xGitalic_x italic_G value of the penalty kick), which is counterintuitive due to the elapsed time. To address this, we incorporate the decay effect from (2). Using the decay factor, the value is −0.9530∗0.75superscript0.95300.75-0.95^{30}*0.75- 0.95 start_POSTSUPERSCRIPT 30 end_POSTSUPERSCRIPT ∗ 0.75 = -0.16, showing the player’s action was less influential in the penalty.\n\nAnother issue with the original approach to assessing possession risk is that it only considers two possessions. However, a team might lose possession, quickly regain it, and score on the third possession. By incorporating the decay effect, we can account for a larger number of possessions.\n\nThus, we arrive at the following formula for the P⁢V𝑃𝑉PVitalic_P italic_V, which will be used as the target value for our EPV model for control actions:\n\nP⁢V⁢(ci)𝑃𝑉subscript𝑐𝑖\\displaystyle PV(c_{i})italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) =∑sj∈team(1−∏j=1∞(1−γ(tj−ti)⁢x⁢Gj⁢[tj≥ti]))absentsubscriptsubscript𝑠𝑗team1superscriptsubscriptproduct𝑗11superscript𝛾subscript𝑡𝑗subscript𝑡𝑖𝑥subscript𝐺𝑗delimited-[]subscript𝑡𝑗subscript𝑡𝑖\\displaystyle=\\sum_{s_{j}\\in\\text{team}}\\left(1-\\prod_{j=1}^{\\infty}(1-\\gamma^% {(t_{j}-t_{i})}xG_{j}[t_{j}\\geq t_{i}])\\right)= ∑ start_POSTSUBSCRIPT italic_s start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ∈ team end_POSTSUBSCRIPT ( 1 - ∏ start_POSTSUBSCRIPT italic_j = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT ∞ end_POSTSUPERSCRIPT ( 1 - italic_γ start_POSTSUPERSCRIPT ( italic_t start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) end_POSTSUPERSCRIPT italic_x italic_G start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT [ italic_t start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ≥ italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ] ) ) (3) −∑sj∈opponent(1−∏i=1∞(1−γ(tj−ti)⁢x⁢Gj⁢[tj≥ti]))subscriptsubscript𝑠𝑗opponent1superscriptsubscriptproduct𝑖11superscript𝛾subscript𝑡𝑗subscript𝑡𝑖𝑥subscript𝐺𝑗delimited-[]subscript𝑡𝑗subscript𝑡𝑖\\displaystyle\\quad-\\sum_{s_{j}\\in\\text{opponent}}\\left(1-\\prod_{i=1}^{\\infty}(% 1-\\gamma^{(t_{j}-t_{i})}xG_{j}[t_{j}\\geq t_{i}])\\right)- ∑ start_POSTSUBSCRIPT italic_s start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ∈ opponent end_POSTSUBSCRIPT ( 1 - ∏ start_POSTSUBSCRIPT italic_i = 1 end_POSTSUBSCRIPT start_POSTSUPERSCRIPT ∞ end_POSTSUPERSCRIPT ( 1 - italic_γ start_POSTSUPERSCRIPT ( italic_t start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT - italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) end_POSTSUPERSCRIPT italic_x italic_G start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT [ italic_t start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ≥ italic_t start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ] ) )\n\n3.5 Possession Value of Symmetrical Duels\n\nWe also calculate EPV for symmetrical duels. To address the challenge of assigning possession for duel events, we assign the possession value of the first control action following the duel to that duel. If there is a series of symmetrical duels, all are recursively assigned the same possession value.\n\nP⁢V⁢(di)={P⁢V⁢(ei+1)if ⁢si=si+1−P⁢V⁢(ei+1)if ⁢si≠si+1𝑃𝑉subscript𝑑𝑖cases𝑃𝑉subscript𝑒𝑖1if subscript𝑠𝑖subscript𝑠𝑖1𝑃𝑉subscript𝑒𝑖1if subscript𝑠𝑖subscript𝑠𝑖1PV(d_{i})=\\begin{cases}PV(e_{i+1})&\\text{if }s_{i}=s_{i+1}\\\\ -PV(e_{i+1})&\\text{if }s_{i}\\neq s_{i+1}\\\\ \\end{cases}italic_P italic_V ( italic_d start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) = { start_ROW start_CELL italic_P italic_V ( italic_e start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT ) end_CELL start_CELL if italic_s start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT = italic_s start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT end_CELL end_ROW start_ROW start_CELL - italic_P italic_V ( italic_e start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT ) end_CELL start_CELL if italic_s start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ≠ italic_s start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT end_CELL end_ROW (4)\n\n3.6 Reward Metrics\n\nBefore building the EPV model, we define our research goal. Our objective is to implement a metric that measures a player/team’s ability to \"improve\" possession. We highlight five possible outcomes of a player’s actions:\n\n1.\n\nThe action leads to a control action by the same team.\n\n2.\n\nThe action leads to a control action by the opponent team.\n\n3.\n\nThe goal was scored.\n\n4.\n\nThe action was the last in the half.\n\n5.\n\nThe action leads to a symmetrical duel.\n\nIn the first scenario, if a control action or symmetrical duel maintains possession, the player receives a reward equal to the difference between the E⁢P⁢V𝐸𝑃𝑉EPVitalic_E italic_P italic_V values of neighboring events. In the second scenario, if a control action or duel results in a turnover, the next (i+1𝑖1i+1italic_i + 1) event is by the opposing team. Thus, the player is penalized twice: once for the turnover and once for providing a goal opportunity to the opponent.\n\nIf possession ends with a goal, the player receives a reward of (1−E⁢P⁢V⁢(ci)−E⁢P⁢V⁢(ci+1)1𝐸𝑃𝑉subscript𝑐𝑖𝐸𝑃𝑉subscript𝑐𝑖11-EPV(c_{i})-EPV(c_{i+1})1 - italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) - italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT )), where ci+1subscript𝑐𝑖1c_{i+1}italic_c start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT denotes a pass from the center circle after a goal. In the fourth scenario, we assign a reward value of zero to neither reward nor punish the player.\n\nThe fifth scenario is the most challenging. For example, a pass into an aerial duel initially gets a negative reward for creating a 50/50 situation. However, we must consider the potential mismatch between players involved. We address this by using an improved approach to estimate symmetrical duel skills [17]. By adding the probability of winning a duel as a feature in the EPV model, we can more accurately evaluate the reward. If the teammate has a high probability of winning the duel, the passing player receives a greater reward. However, when calculating the reward for players in symmetrical duels, we won’t consider the probability of winning the duel. Instead, we compare the actual outcome with the \"average\" outcome to avoid penalizing a player for superior skills by inflating the EPV.\n\nDifferent feature sets describe control actions and symmetrical duels. Hence, we built three types of models: one for control actions, one for symmetrical duels for the \"average\" player, and one for symmetrical duels with player duel skill estimation. These are denoted as E⁢P⁢V𝐸𝑃𝑉EPVitalic_E italic_P italic_V, E⁢P⁢Vd⁢u⁢e⁢la⁢v⁢g𝐸𝑃superscriptsubscript𝑉𝑑𝑢𝑒𝑙𝑎𝑣𝑔EPV_{duel}^{avg}italic_E italic_P italic_V start_POSTSUBSCRIPT italic_d italic_u italic_e italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_a italic_v italic_g end_POSTSUPERSCRIPT, and E⁢P⁢Vd⁢u⁢e⁢li⁢n⁢d𝐸𝑃superscriptsubscript𝑉𝑑𝑢𝑒𝑙𝑖𝑛𝑑EPV_{duel}^{ind}italic_E italic_P italic_V start_POSTSUBSCRIPT italic_d italic_u italic_e italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_i italic_n italic_d end_POSTSUPERSCRIPT, respectively. Thus, we’ve designed this r⁢e⁢w⁢a⁢r⁢d𝑟𝑒𝑤𝑎𝑟𝑑rewarditalic_r italic_e italic_w italic_a italic_r italic_d formula to evaluate players’ control actions and symmetrical duels.\n\nIf i𝑖iitalic_i is a control action:\n\nΔ⁢E⁢P⁢V⁢(ci)={E⁢P⁢V⁢(ci+1)−E⁢P⁢V⁢(ci),if scenario 1−E⁢P⁢V⁢(ci+1)−E⁢P⁢V⁢(ci),if scenario 21−E⁢P⁢V⁢(ci)−E⁢P⁢V⁢(ci+1),if scenario 30,if scenario 4E⁢P⁢Vd⁢u⁢e⁢li⁢n⁢d⁢(di+1)−E⁢P⁢V⁢(ci),if scenario 5Δ𝐸𝑃𝑉subscript𝑐𝑖cases𝐸𝑃𝑉subscript𝑐𝑖1𝐸𝑃𝑉subscript𝑐𝑖if scenario 1𝐸𝑃𝑉subscript𝑐𝑖1𝐸𝑃𝑉subscript𝑐𝑖if scenario 21𝐸𝑃𝑉subscript𝑐𝑖𝐸𝑃𝑉subscript𝑐𝑖1if scenario 30if scenario 4𝐸𝑃superscriptsubscript𝑉𝑑𝑢𝑒𝑙𝑖𝑛𝑑subscript𝑑𝑖1𝐸𝑃𝑉subscript𝑐𝑖if scenario 5\\Delta EPV(c_{i})=\\begin{cases}EPV(c_{i+1})-EPV(c_{i}),&\\text{if scenario 1}\\\\ -EPV(c_{i+1})-EPV(c_{i}),&\\text{if scenario 2}\\\\ 1-EPV(c_{i})-EPV(c_{i+1}),&\\text{if scenario 3}\\\\ 0,&\\text{if scenario 4}\\\\ EPV_{duel}^{ind}(d_{i+1})-EPV(c_{i}),&\\text{if scenario 5}\\\\ \\end{cases}roman_Δ italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) = { start_ROW start_CELL italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT ) - italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) , end_CELL start_CELL if scenario 1 end_CELL end_ROW start_ROW start_CELL - italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT ) - italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) , end_CELL start_CELL if scenario 2 end_CELL end_ROW start_ROW start_CELL 1 - italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) - italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT ) , end_CELL start_CELL if scenario 3 end_CELL end_ROW start_ROW start_CELL 0 , end_CELL start_CELL if scenario 4 end_CELL end_ROW start_ROW start_CELL italic_E italic_P italic_V start_POSTSUBSCRIPT italic_d italic_u italic_e italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_i italic_n italic_d end_POSTSUPERSCRIPT ( italic_d start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT ) - italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) , end_CELL start_CELL if scenario 5 end_CELL end_ROW (5)\n\nIf i𝑖iitalic_i is a symmetrical duel:\n\nΔ⁢E⁢P⁢V⁢(di)={E⁢P⁢V⁢(ci+1)−E⁢P⁢Vd⁢u⁢e⁢la⁢v⁢g⁢(di),if scenario 1−E⁢P⁢V⁢(ci+1)−E⁢P⁢Vd⁢u⁢e⁢la⁢v⁢g⁢(di),if scenario 20,if scenario 4E⁢P⁢Vd⁢u⁢e⁢li⁢n⁢d⁢(di+1)−E⁢P⁢Vd⁢u⁢e⁢la⁢v⁢g⁢(di),if scenario 5Δ𝐸𝑃𝑉subscript𝑑𝑖cases𝐸𝑃𝑉subscript𝑐𝑖1𝐸𝑃superscriptsubscript𝑉𝑑𝑢𝑒𝑙𝑎𝑣𝑔subscript𝑑𝑖if scenario 1𝐸𝑃𝑉subscript𝑐𝑖1𝐸𝑃superscriptsubscript𝑉𝑑𝑢𝑒𝑙𝑎𝑣𝑔subscript𝑑𝑖if scenario 20if scenario 4𝐸𝑃superscriptsubscript𝑉𝑑𝑢𝑒𝑙𝑖𝑛𝑑subscript𝑑𝑖1𝐸𝑃superscriptsubscript𝑉𝑑𝑢𝑒𝑙𝑎𝑣𝑔subscript𝑑𝑖if scenario 5\\Delta EPV(d_{i})=\\begin{cases}EPV(c_{i+1})-EPV_{duel}^{avg}(d_{i}),&\\text{if % scenario 1}\\\\ -EPV(c_{i+1})-EPV_{duel}^{avg}(d_{i}),&\\text{if scenario 2}\\\\ 0,&\\text{if scenario 4}\\\\ EPV_{duel}^{ind}(d_{i+1})-EPV_{duel}^{avg}(d_{i}),&\\text{if scenario 5}\\\\ \\end{cases}roman_Δ italic_E italic_P italic_V ( italic_d start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) = { start_ROW start_CELL italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT ) - italic_E italic_P italic_V start_POSTSUBSCRIPT italic_d italic_u italic_e italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_a italic_v italic_g end_POSTSUPERSCRIPT ( italic_d start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) , end_CELL start_CELL if scenario 1 end_CELL end_ROW start_ROW start_CELL - italic_E italic_P italic_V ( italic_c start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT ) - italic_E italic_P italic_V start_POSTSUBSCRIPT italic_d italic_u italic_e italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_a italic_v italic_g end_POSTSUPERSCRIPT ( italic_d start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) , end_CELL start_CELL if scenario 2 end_CELL end_ROW start_ROW start_CELL 0 , end_CELL start_CELL if scenario 4 end_CELL end_ROW start_ROW start_CELL italic_E italic_P italic_V start_POSTSUBSCRIPT italic_d italic_u italic_e italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_i italic_n italic_d end_POSTSUPERSCRIPT ( italic_d start_POSTSUBSCRIPT italic_i + 1 end_POSTSUBSCRIPT ) - italic_E italic_P italic_V start_POSTSUBSCRIPT italic_d italic_u italic_e italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_a italic_v italic_g end_POSTSUPERSCRIPT ( italic_d start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) , end_CELL start_CELL if scenario 5 end_CELL end_ROW (6)\n\nRegarding our target function, it’s crucial to understand that pass accuracy doesn’t directly affect rewards. For instance, an inaccurate cross leading to a defender’s handball still results in a penalty kick attempt. This underscores the use of the concept of possession in our approach. Additionally, our analysis excludes certain events like interceptions. Hence, when calculating rewards, we omit these actions. For instance, a sequence like \"pass-interception-shot\" is interpreted as \"pass-shot\" in our analysis.\n\n4 EPV Implementation\n\n4.1 Expected Goals\n\nSoccer’s low-scoring nature, averaging 2.6 goals per game, poses challenges in assessing player performance. The emergence of x⁢G𝑥𝐺xGitalic_x italic_G as a measure of scoring opportunities addresses this challenge, representing the probability of a shot resulting in a goal, solely based on game situation, not individual player skills. Our goal is to develop a model that evaluates scoring opportunities for the average player.\n\nWe create two distinct models: one for set-piece shots and another for open-play shots. Factors such as shot coordinates, distance, angle from the goal, and set-piece type (penalty, free-kick, corner) were considered. For open-play shots, attributes like body part used and preceding actions (e.g., aerial duel, pass) were included, along with spatial details. Separate model was built for set-pieces, as x⁢G𝑥𝐺xGitalic_x italic_G should be independent of previous events.\n\nCertain features like current game score, championship, and player’s team were omitted due to their correlation with player skill. Another challenge is the dataset revealed a non-uniform distribution of shots, with top players having more scoring opportunities. To tackle this, we implemented a custom loss function, choosing a log-loss function as the basic loss function for each shot. We divided the loss function value for each shot by its appearance count in the training set, reducing the focus on overrepresented players.\n\nc⁢u⁢s⁢t⁢o⁢m⁢l⁢o⁢g⁢l⁢o⁢s⁢si=1|playeri∈D|⁢[yi⁢log⁡(pi)+(1−yi)⁢log⁡(1−pi)]customlogloss_{i}=\\frac{1}{|player_{i}\\in D|}[y_{i}\\log(p_{i})+(1-y_{i})\\log(1% -p_{i})]italic_c italic_u italic_s italic_t italic_o italic_m italic_l italic_o italic_g italic_l italic_o italic_s italic_s start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT = divide start_ARG 1 end_ARG start_ARG | italic_p italic_l italic_a italic_y italic_e italic_r start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ∈ italic_D | end_ARG [ italic_y start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT roman_log ( italic_p start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) + ( 1 - italic_y start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) roman_log ( 1 - italic_p start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) ] (7)\n\nWe trained the LightGBM [18] and CatBoost [19] frameworks, with LightGBM showing superior accuracy. We implemented equation (7) as an objective parameter in this framework.\n\n4.2 Symmetrical Duels\n\nHere, we present an improved version of our approach [17]. However, we focus only on symmetrical duels.\n\nAnalysts often use win percentage as a measure of player duel skill, but this overlooks opponent strength. Players may have high win rates against weaker opponents. Additionally, coaches often match players of similar strength, especially in set-pieces, leading to win rates converging to fifty percent as strong players face strong opponents and weak players face weak ones.\n\nAnother approach suggested by Garry Gelade [20] uses the Bradley-Terry model [21] to calculate player ratings for duels. This approach is superior as it considers opponent strength and enables modeling of future situations. The metric is transferable across leagues, allowing comparisons between players in diverse competitions.\n\nGelade’s method has limitations. It assumes that players have equal chances to win duels without considering external factors, which isn’t always accurate. For example, in aerial duels, defending players have an advantage as they face the opponent’s goal during the defensive phase. Another limitation is that the Bradley-Terry model is not state-of-the-art. Therefore, we opted to use a modified version of Glicko-2 [22].\n\nIntroduce a definition of a duel winner. In both cases (aerial and ground duels), we will adhere to the following logic:\n\n1.\n\nIf a player suffered a foul, he is considered the winner.\n\n2.\n\nA player who makes the first touch on the ball is considered the winner.\n\n3.\n\nIf no one touches the ball, we will consider the player whose team gains possession after the duel as the winner.\n\nWe must consider that duels aren’t fully symmetrical. Outcomes depend not only on players’ skills but also on external factors, such as the location of the duel or the type of pass leading to it.\n\nThe original Glicko-2 version updates rating in this way:\n\nμ′=μ+ϕ2′⁢g⁢(ϕj)⁢(sj−E⁢(μ,μj,ϕj))\\mu^{{}^{\\prime}}=\\mu+\\phi^{{}^{\\prime}2}g(\\phi_{j})(s_{j}-E(\\mu,\\mu_{j},\\phi_% {j}))italic_μ start_POSTSUPERSCRIPT start_FLOATSUPERSCRIPT ′ end_FLOATSUPERSCRIPT end_POSTSUPERSCRIPT = italic_μ + italic_ϕ start_POSTSUPERSCRIPT start_FLOATSUPERSCRIPT ′ end_FLOATSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_g ( italic_ϕ start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ) ( italic_s start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT - italic_E ( italic_μ , italic_μ start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT , italic_ϕ start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ) ) (8)\n\nWe have modified it for a defender:\n\nμ′=μ+ϕ2′⁢g⁢(ϕj)⁢(sj−E⁢(μ+a,μj,ϕj))\\mu^{{}^{\\prime}}=\\mu+\\phi^{{}^{\\prime}2}g(\\phi_{j})(s_{j}-E(\\mu+a,\\mu_{j},% \\phi_{j}))italic_μ start_POSTSUPERSCRIPT start_FLOATSUPERSCRIPT ′ end_FLOATSUPERSCRIPT end_POSTSUPERSCRIPT = italic_μ + italic_ϕ start_POSTSUPERSCRIPT start_FLOATSUPERSCRIPT ′ end_FLOATSUPERSCRIPT 2 end_POSTSUPERSCRIPT italic_g ( italic_ϕ start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ) ( italic_s start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT - italic_E ( italic_μ + italic_a , italic_μ start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT , italic_ϕ start_POSTSUBSCRIPT italic_j end_POSTSUBSCRIPT ) ) (9)\n\nWe determine advantage as follows: using a model predicting duel outcomes based on contextual features like duel and pass coordinates, pass type (e.g., corner, free kick), and number of opponents. We exclude player skill-related features, aiming to create an \"average\" model describing duel difficulty.\n\nWe encounter a data leak due to two factors. Firstly, the defending team holds an advantage in aerial duels. Secondly, central defenders typically excel in aerial duels compared to other positions, but they occur more frequently in defensive roles, leading to underestimated ratings. To address this, we categorize player positions into six groups: central defenders, full-backs, midfielders, central forwards, wingers, and goalkeepers. We train model by filtering aerial duels where players involved occupy the same position category. We apply the same logic as described in formula (7).\n\nTherefore, we train a LightGBM model to calculate the probability of winning a duel. Based on this probability, we calculate the average advantage (a𝑎aitalic_a from (9)) for a Glicko-2-based model. This allows us to determine individual aerial and ground duel ratings for each player, considering the duel context. The ratings are presented in Tables 4 and 5.\n\n4.3 Expected Possession Value\n\nWe built the EPV model in a similar way to the x⁢G𝑥𝐺xGitalic_x italic_G model, utilizing spatial characteristics of the action and the preceding one. Six separate models were trained:\n\n1. For control actions in open-player situations.\n\n2. For set pieces, as they should depend only on the current action.\n\n3-4. Aerial and ground average EPV models, E⁢P⁢Vd⁢u⁢e⁢la⁢v⁢g𝐸𝑃superscriptsubscript𝑉𝑑𝑢𝑒𝑙𝑎𝑣𝑔EPV_{duel}^{avg}italic_E italic_P italic_V start_POSTSUBSCRIPT italic_d italic_u italic_e italic_l end_POSTSUBSCRIPT start_POSTSUPERSCRIPT italic_a italic_v italic_g end_POSTSUPERSCRIPT. These models describe the context of the duel while ignoring the player’s skill in aerial duels. We used the predictions of the LightGBM model from chapter 4.2 as a feature to describe the context of the duel. These models help calculate the reward (6), which allows to estimate players’ abilities to \"improve\" possession in situations where the player participates in a duel.\n\n5-6. In contrast to the previous point, here we want to describe the aerial or ground duel situation considering player skills. It helps calculate pass reward more accurately, as seen in scenario 5 of formulas (5), (6). We used the following features: the probability to win the duel (taking into account player ratings), the player’s rating, the opponent’s rating, as well as the spatial features of the duel and the pass leading to the duel.\n\nAnalogously to equation (7), we implemented a custom mean squared error:\n\nc⁢u⁢s⁢t⁢o⁢m⁢M⁢S⁢Ei=1|playeri∈D|⁢(yi−y^i)2customMSE_{i}=\\frac{1}{|player_{i}\\in D|}(y_{i}-\\hat{y}_{i})^{2}italic_c italic_u italic_s italic_t italic_o italic_m italic_M italic_S italic_E start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT = divide start_ARG 1 end_ARG start_ARG | italic_p italic_l italic_a italic_y italic_e italic_r start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ∈ italic_D | end_ARG ( italic_y start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT - over^ start_ARG italic_y end_ARG start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) start_POSTSUPERSCRIPT 2 end_POSTSUPERSCRIPT (10)\n\n5 Metrics Prediction for the Upcoming Season\n\n5.1 Season Pass Carry Reward\n\nWe introduce the metric Pass Carry Reward (P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R) as a measure of how a player enhances possession through passes or carries over the season. For the term carry, we encompass all events where a player controls the ball, including dribbles, carries, or simply maintaining possession without significant movement. By summing all Δ⁢E⁢P⁢V⁢(ei)Δ𝐸𝑃𝑉subscript𝑒𝑖\\Delta EPV(e_{i})roman_Δ italic_E italic_P italic_V ( italic_e start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT ) values throughout the season, we can derive a season reward, designated as P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R, focusing solely on pass and carry events. To assess a player’s season performance accurately, it’s crucial to normalize this reward based on the player’s effective playing time, specifically their effective time per 60 minutes of play.\n\nP⁢C⁢R⁢(p⁢l⁢a⁢y⁢e⁢r)=60×∑Δ⁢E⁢P⁢V⁢(ei|p⁢l⁢a⁢y⁢e⁢r,ei=p⁢a⁢s⁢s∨ei=c⁢a⁢r⁢r⁢y)∑minutes𝑃𝐶𝑅𝑝𝑙𝑎𝑦𝑒𝑟60Δ𝐸𝑃𝑉conditionalsubscript𝑒𝑖𝑝𝑙𝑎𝑦𝑒𝑟subscript𝑒𝑖𝑝𝑎𝑠𝑠subscript𝑒𝑖𝑐𝑎𝑟𝑟𝑦minutes\\displaystyle PCR(player)=\\frac{60\\times\\sum\\Delta EPV(e_{i}|player,e_{i}=pass% \\lor e_{i}=carry)}{\\sum\\text{minutes}}italic_P italic_C italic_R ( italic_p italic_l italic_a italic_y italic_e italic_r ) = divide start_ARG 60 × ∑ roman_Δ italic_E italic_P italic_V ( italic_e start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT | italic_p italic_l italic_a italic_y italic_e italic_r , italic_e start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT = italic_p italic_a italic_s italic_s ∨ italic_e start_POSTSUBSCRIPT italic_i end_POSTSUBSCRIPT = italic_c italic_a italic_r italic_r italic_y ) end_ARG start_ARG ∑ minutes end_ARG (11)\n\nThe idea behind this paper is straightforward: to predict players’ P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R for the upcoming season. However, there are certain limitations and restrictions that we need to address and discuss.\n\n5.2 Training Set\n\nFirst and foremost, it is important to define the group of players for whom we will train our model. Our decision is to focus only on players who have accumulated at least 100 minutes in both the current season and the next season. This criterion is implemented to ensure the stability of P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R predictions, as values of P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R for players with limited playing time tend to be less reliable. The potential drawbacks of dropping data based on this criterion will be discussed in the subsequent subsection.\n\n5.3 Features\n\nThe calculated features, approximately 600 in total, can be categorized into several groups:\n\nPlayer-specific features. These include attributes such as age, height, position, and other characteristics that describe the individual player.\n\nPerformance features. This group encompasses metrics like P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R, x⁢G𝑥𝐺xGitalic_x italic_G, goals, played minutes, and other raw statistics from the previous seasons. Additionally, average values of these metrics over the past three or five seasons are also considered.\n\nContribution to team success. These statistics capture the player’s impact on the team’s overall performance. For instance, features like the player’s share of the team’s total x⁢G𝑥𝐺xGitalic_x italic_G when they were on the field are included. These features are crucial as they provide insights into a player’s effectiveness, especially when playing for a weaker team where their absolute metrics may be lower.\n\nLeague style features. This category includes metrics that describe the prevalent playing style in the league. For example, the average P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R of the league in the previous season is considered. These features help address challenges such as the influence of league-specific playing styles on P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R. For a player in a league that prioritizes attacking play, it may be easier to achieve higher P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R values.\n\nTeam and league strength features. These features account for factors such as team and league strength, particularly in the context of player transfers. They provide information regarding a player’s transfer, such as moving from a strong team to a weaker one, and help contextualize the player’s performance accordingly. A detailed discussion regarding this last group of features will be presented in the subsequent subsection.\n\n5.4 Ratings of Clubs and Leagues\n\nTo address the issue of player transfers and the potential impact on P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R prediction, it is important to consider the information associated with changes in clubs or leagues. One approach could involve introducing a categorical feature that indicates the transfer from one league to another, such as \"player transfers from Denmark Superliga to France Ligue 1\". However, this approach may encounter challenges related to the curse of dimensionality, as there may not be a significant number of transfers between specific leagues. Additionally, it is worth noting that the strengths of leagues can vary over time.\n\nTo overcome these challenges, we propose utilizing a modified Glicko-2 rating system [23]. This model calculates ratings for teams based on match outcomes, allowing for the estimation of team strength. The strength of a league is defined as the average rating of a specified number of teams, with the exact number being adjustable to account for variations across leagues.\n\nWith this modified rating system, we can calculate various features, such as the rating of the player’s old team, the rating of the player’s new team, and the difference in ratings between the player’s old league and the new league. These features provide valuable information related to the player’s transition and enable us to account for changes in team and league strength. Additionally, we calculate the average rating of team opponents, as two players can demonstrate similar metrics; however, the level of opponents can differ.\n\nIt is important to note that we utilized the actual club/league ratings at the start of the season. This approach allows the model to incorporate up-to-date information about the strength of the clubs/leagues, considering that their levels may change over time. Moreover, we must adhere to the natural constraint that we cannot use the future ratings of the clubs/leagues.\n\n5.5 Probability to Stay in the Data\n\nAs mentioned earlier, our training set includes only instances where players have played at least 100 minutes in the next season. This limitation poses a challenge as it is not possible to know in advance how many minutes a player will play in the next season. To address this issue, we build an auxiliary model.\n\nWe predict whether a football player will play at least 100 minutes in the next season. A player may have less than 100 minutes for various reasons: retirement from professional football, injury, underperformance resulting in exclusion from matches by the coach, or transfer to a team or league not presented in the dataset, indicating the transfer to a less competitive league.\n\nWe train the model using the same features as those employed in the previous model, excluding the features related to the ratings of a new team or league. In addition, we incorporated data on players’ contract durations at the beginning of the season, leveraging information sourced from the FIFA video game series[24].\n\n5.6 Presence-only Data Problem\n\nAnother challenge in training our model is the non-random nature of real-world transfers. Football club managers make informed decisions when acquiring players, leading to two key scenarios. When a player moves from a weaker club to a stronger one, it suggests the new club sees potential or talent in the player. When a player moves from a strong club to a weaker one, it suggests a decline in performance. These scenarios introduce bias in our predictions. We use features like the \"rating of the new team\" to inform the model about transfers, but the outcomes remain uncertain. Consequently, predictions can be overly optimistic in the first scenario and overly pessimistic in the second, reflecting the uncertainties and biases inherent in real-world transfers.\n\nΔ⁢r⁢a⁢t⁢i⁢n⁢g⁢s=(r⁢a⁢t⁢i⁢n⁢g⁢(l⁢e⁢a⁢g⁢u⁢en⁢e⁢w)−r⁢a⁢t⁢i⁢n⁢g⁢(l⁢e⁢a⁢g⁢u⁢eo⁢l⁢d))1500Δ𝑟𝑎𝑡𝑖𝑛𝑔𝑠𝑟𝑎𝑡𝑖𝑛𝑔𝑙𝑒𝑎𝑔𝑢subscript𝑒𝑛𝑒𝑤𝑟𝑎𝑡𝑖𝑛𝑔𝑙𝑒𝑎𝑔𝑢subscript𝑒𝑜𝑙𝑑1500\\displaystyle\\Delta ratings=\\frac{(rating(league_{new})-rating(league_{old}))}% {1500}roman_Δ italic_r italic_a italic_t italic_i italic_n italic_g italic_s = divide start_ARG ( italic_r italic_a italic_t italic_i italic_n italic_g ( italic_l italic_e italic_a italic_g italic_u italic_e start_POSTSUBSCRIPT italic_n italic_e italic_w end_POSTSUBSCRIPT ) - italic_r italic_a italic_t italic_i italic_n italic_g ( italic_l italic_e italic_a italic_g italic_u italic_e start_POSTSUBSCRIPT italic_o italic_l italic_d end_POSTSUBSCRIPT ) ) end_ARG start_ARG 1500 end_ARG (12)\n\nP⁢C⁢Ra⁢d⁢j=P⁢C⁢R∗0.8(Δ⁢r⁢a⁢t⁢i⁢n⁢g⁢s+p⁢l)𝑃𝐶subscript𝑅𝑎𝑑𝑗𝑃𝐶𝑅superscript0.8Δ𝑟𝑎𝑡𝑖𝑛𝑔𝑠𝑝𝑙\\displaystyle PCR_{adj}=PCR*0.8^{(\\Delta ratings+pl)}italic_P italic_C italic_R start_POSTSUBSCRIPT italic_a italic_d italic_j end_POSTSUBSCRIPT = italic_P italic_C italic_R ∗ 0.8 start_POSTSUPERSCRIPT ( roman_Δ italic_r italic_a italic_t italic_i italic_n italic_g italic_s + italic_p italic_l ) end_POSTSUPERSCRIPT (13)\n\n6 Results\n\nAs a baseline, we calculate the root mean squared error (R⁢M⁢S⁢E𝑅𝑀𝑆𝐸RMSEitalic_R italic_M italic_S italic_E) and mean absolute error (M⁢A⁢E𝑀𝐴𝐸MAEitalic_M italic_A italic_E) between the P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R from the previous season and the next season (refer to Table 1). This imitates a selection process based on historical data without applying machine learning. We separate the data into several groups based on the following binary rules: whether the player is in the same team/league as in the previous season or not, and whether the player played more than 1000 minutes in the previous season or not. We remember that we are trying to solve a selection problem; therefore, we assume that a player may change clubs or even leagues.\n\nBy comparing the RMSE and MAE with the predictions of our model (without adjustment), we can estimate the contribution of our approach (refer to Table 2).\n\nHowever, the above-mentioned evaluation method has its limitations. Our end product is a player ranking based on predicted P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R, and there is no guarantee that the calculated shortlist is accurate. Additionally, there is no mathematical way to prove that E⁢P⁢V𝐸𝑃𝑉EPVitalic_E italic_P italic_V-based metrics truly correlate with player skills. We see two ways to evaluate our shortlists. The first is to ask experts, which may be done in future work. The second way is to assume that the transfer market is enough effective at least at the top level and compare top players from our shortlists with actual transfers to top clubs.\n\nTable 6 presents the top season performances based on the P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R metric among players who played at least 1,000 minutes during the season. The P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R predictions for Manchester City, Barcelona, Milan, and Brighton can be found in Tables 7-10. Brighton was chosen because this club has a reputation for having a strong data analysis department and making transfers based on data. The actual date is June 1, 2024.\n\nThere is also a case study section in the appendix that demonstrates the advantage of using individual duel skills in the E⁢P⁢V𝐸𝑃𝑉EPVitalic_E italic_P italic_V model.\n\n7 Conclusion\n\nWe improve the EPV model by accurately accounting for effective playing time, decay effect, and possession risk. The incorporation of player duel skills allows us to calculate rewards more accurately. Therefore, we partially solve the problem of reward distribution between the passing player and the target player in cases of passes leading to duels. However, the problem still exists in cases of accurate passes, and we do not have a solution based on event data.\n\nThis model can potentially demonstrate higher performance with tracking data due to the consideration of more features. The inclusion of injury data is promising not only for enhancing the predictive capacity of the model that calculates the probability of a player remaining in the dataset but also for improving the prediction of P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R for the next season. Additionally, we need to consider the context of new and old teams more accurately. For instance, we can replace P⁢C⁢R𝑃𝐶𝑅PCRitalic_P italic_C italic_R with a conditional expectation that takes into account the player’s position in the next club. For example, our model lacks accuracy when a center forward starts to play as a winger in a new club. Finally, the presence-only data problem should be tackled with a more elegant approach, which is a subject for further research.\n\n8 Acknowledgments\n\nThe author is thankful to Nikita Kozodoi, Viktoria Lokteva, Nikita Vasyukhin, Iskander Safiulin, Daniil Babaev, and Alexander Sirotkin for their invaluable consultations on machine learning and soccer analytics.\n\nReferences\n\n[1] T. L. Bergkamp, W. G. Frencken, A. S. M. Niessen, R. R. Meijer, and R. J. den Hartigh, “How soccer scouts identify talented players,” European Journal of Sport Science, vol. 22, no. 7, pp. 994–1004, 2022.\n\n[2] J. Hollinger, “Pro basketball forecast,” (No Title), 2005.\n\n[3] R. Pollard, J. Ensum, and S. Taylor, “Estimating the probability of a shot resulting in a goal: The effects of distance, angle and space,” International Journal of Soccer and Science, vol. 2, no. 1, pp. 50–55, 2004.\n\n[4] R. Pollard and C. Reep, “Measuring the effectiveness of playing strategies at soccer,” Journal of the Royal Statistical Society Series D: The Statistician, vol. 46, no. 4, pp. 541–550, 1997.\n\n[5] W. Spearman, “Beyond expected goals,” in Proceedings of the 12th MIT sloan sports analytics conference, 2018, pp. 1–17.\n\n[6] W. Spearman, A. Basye, G. Dick, R. Hotovy, and P. Pop, “Physics-based modeling of pass probabilities in soccer,” in Proceeding of the 11th MIT Sloan Sports Analytics Conference, 2017.\n\n[7] P. Power, H. Ruiz, X. Wei, and P. Lucey, “Not all passes are created equal: Objectively measuring the risk and reward of passes in soccer from tracking data,” in Proceedings of the 23rd ACM SIGKDD international conference on knowledge discovery and data mining, 2017, pp. 1605–1613.\n\n[8] K. Singh, “Introducing expected threat,” https://karun.in/blog/expected-threat.html, 2018, accessed: 2024-05-30.\n\n[9] D. Cervone, A. D’amour, L. Bornn, and K. Goldsberry, “Pointwise: Predicting points and valuing decisions in real time with nba optical tracking data,” in Proceedings of the 8th MIT Sloan Sports Analytics Conference, Boston, MA, USA, vol. 28, no. 3, 2014.\n\n[10] D. Cervone, A. D’Amour, L. Bornn, and K. Goldsberry, “A multiresolution stochastic process model for predicting basketball possession outcomes,” Journal of the American Statistical Association, vol. 111, no. 514, pp. 585–599, 2016.\n\n[11] J. Fernández, L. Bornn, and D. Cervone, “Decomposing the immeasurable sport: A deep learning expected possession value framework for soccer,” in 13th MIT Sloan Sports Analytics Conference, 2019.\n\n[12] P. Garnier and T. Gregoir, “Evaluating soccer player: From live camera to deep reinforcement learning,” arXiv preprint arXiv:2101.05388, 2021.\n\n[13] G. Liu, Y. Luo, O. Schulte, and T. Kharrat, “Deep soccer analytics: learning an action-value function for evaluating soccer players,” Data Mining and Knowledge Discovery, vol. 34, pp. 1531–1559, 2020.\n\n[14] D. Dinsdale and J. Gallagher, “Transfer portal: Accurately forecasting the impact of a player transfer in soccer,” arXiv preprint arXiv:2201.11533, 2022.\n\n[15] A. E. Elo, “The proposed uscf rating system, its development, theory, and applications,” Chess Life, vol. 22, no. 8, pp. 242–247, 1967.\n\n[16] P. A. Samuelson, “A note on the pure theory of consumer’s behaviour,” Economica, vol. 5, no. 17, pp. 61–71, 1938.\n\n[17] A. Shelopugin and A. Sirotkin, “Evaluating of football player 1v1 abilities based on the glicko-2 with modifications,” in 2023 IEEE 28th Pacific Rim International Symposium on Dependable Computing (PRDC). IEEE, 2023, pp. 287–291.\n\n[18] G. Ke, Q. Meng, T. Finley, T. Wang, W. Chen, W. Ma, Q. Ye, and T.-Y. Liu, “Lightgbm: A highly efficient gradient boosting decision tree,” Advances in neural information processing systems, vol. 30, 2017.\n\n[19] L. Prokhorenkova, G. Gusev, A. Vorobev, A. V. Dorogush, and A. Gulin, “Catboost: unbiased boosting with categorical features,” Advances in neural information processing systems, vol. 31, 2018.\n\n[20] G. Gelade, “A new metric for evaluating 1v1 ability.” [Online]. Available: https://www.statsperform.com/resource/a-new-metric-for-evaluating-1v1-ability\n\n[21] R. A. Bradley and M. E. Terry, “Rank analysis of incomplete block designs: I. the method of paired comparisons,” Biometrika, vol. 39, no. 3/4, pp. 324–345, 1952.\n\n[22] M. E. Glickman, “Example of the glicko-2 system,” Boston University, vol. 28, 2012.\n\n[23] A. Shelopugin and A. Sirotkin, “Ratings of european and south american football leagues based on glicko-2 with modifications,” arXiv preprint arXiv:2310.11459, 2023.\n\n[24] S. Leone, “Ea sports fc 24 complete player dataset,” https://www.kaggle.com/datasets/stefanoleone992/ea-sports-fc-24-complete-player-dataset, 2024, accessed: 2024-05-30.\n\n[25] G. Ward, T. Hastie, S. Barry, J. Elith, and J. R. Leathwick, “Presence-only data and the em algorithm,” Biometrics, vol. 65, no. 2, pp. 554–563, 2009.\n\nAppendix\n\nAppendix A A Case Study: Gianluigi Donnarumma Passes to Duels in Seasons 19/20, 20/21\n\nIn this paper, we focus on solving the selection problem. The main idea of the work is to suggest a mechanism to narrow down the selection pool. However, our approach can find applications not only in selection tasks but also in team performance and opposition analysis. Below, we provide an example of such an analysis.\n\nGianluigi Donnarumma was a great goalkeeper in terms of shot-stopping during his career at AC Milan. However, he had some struggles with his passes. Coach Stefano Pioli suggested the following solution: if Donnarumma was under pressure, he would make a long forward pass (usually leading to a duel); otherwise, he would make a short pass to a defender or defensive midfielder.\n\nBy long forward pass, we define a pass with a distance of more than 40 metres and an increment of y-projection of more than 10 metres. The most popular target players for Donnarumma were Zlatan Ibrahimovic (35 aerial duels, 8 ground duels) and Rafael Leao (28 aerial duels, 11 ground duels).\n\nThe traditional EPV approach does not take into account players’ duel skills; however, our approach provides a more detailed analysis. In Table 3, we compare passes to Leao and Ibrahimovic. The column s⁢a⁢v⁢e⁢d𝑠𝑎𝑣𝑒𝑑saveditalic_s italic_a italic_v italic_e italic_d represents the proportion of possessions that were saved after duels. The column a⁢p⁢r⁢i⁢o⁢r⁢i𝑎𝑝𝑟𝑖𝑜𝑟𝑖aprioriitalic_a italic_p italic_r italic_i italic_o italic_r italic_i represents the probability of winning a duel without considering a player’s skills, and the column w⁢i⁢n⁢_⁢d⁢u⁢e⁢l𝑤𝑖𝑛_𝑑𝑢𝑒𝑙win\\_duelitalic_w italic_i italic_n _ italic_d italic_u italic_e italic_l represents the probability of winning a duel while accounting for duel skills. As we can see, Leao and Ibrahimovic were in similar situations in terms of the difficulty of winning duels. However, despite facing slightly stronger opponents (as indicated by o⁢p⁢p⁢_⁢r⁢a⁢t⁢i⁢n⁢g𝑜𝑝𝑝_𝑟𝑎𝑡𝑖𝑛𝑔opp\\_ratingitalic_o italic_p italic_p _ italic_r italic_a italic_t italic_i italic_n italic_g), Zlatan managed to convert these situations into winning scenarios: his average probability of winning was 61.1%, compared to Leao’s 35.8% in aerial duels. As a result, Ibrahimovic’s E⁢P⁢V𝐸𝑃𝑉EPVitalic_E italic_P italic_V (column e⁢p⁢v⁢_⁢i⁢n⁢d⁢_⁢d⁢u⁢e⁢l𝑒𝑝𝑣_𝑖𝑛𝑑_𝑑𝑢𝑒𝑙epv\\_ind\\_duelitalic_e italic_p italic_v _ italic_i italic_n italic_d _ italic_d italic_u italic_e italic_l) values are higher than Leao’s. Take note that the Glicko ratings have a property to update over time; therefore, the column r⁢a⁢t⁢i⁢n⁢g𝑟𝑎𝑡𝑖𝑛𝑔ratingitalic_r italic_a italic_t italic_i italic_n italic_g represents the average ratings of Ibrahimovic and Leao against their opponents after Donnarumma’s passes."
    }
}