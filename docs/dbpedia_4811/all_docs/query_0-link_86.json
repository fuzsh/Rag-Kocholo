{
    "id": "dbpedia_4811_0",
    "rank": 86,
    "data": {
        "url": "https://pressupinc.com/blog/2014/12/bad-software-succeeds/",
        "read_more_link": "",
        "language": "en",
        "title": "Why Bad Software Succeeds",
        "top_image": "https://pressupinc.com/wp-content/uploads/2014/12/window-bsod-crash-bad-software.jpg",
        "meta_img": "https://pressupinc.com/wp-content/uploads/2014/12/window-bsod-crash-bad-software.jpg",
        "images": [
            "https://www.facebook.com/offsite_event.php?id=6009266218901&value=0&currency=USD",
            "https://pressupinc.com/wp-content/themes/pressup2015/images/up-button.png",
            "https://pressupinc.com/wp-content/uploads/2014/12/window-bsod-crash-bad-software-760x290.jpg",
            "https://pressupinc.com/wp-content/uploads/2013/05/wordpress-logo-notext-rgb-300x300.png",
            "https://pressupinc.com/wp-content/uploads/2015/04/playing-ball-in-the-mud-150x150.jpg",
            "https://pressupinc.com/wp-content/uploads/2013/10/8575319625_36fa805722_o-150x150.jpg",
            "https://pressupinc.com/wp-content/uploads/2014/03/php-elephant-atop-laptop-screen-150x150.jpg",
            "https://secure.gravatar.com/avatar/c9f0c0c7378f29a777b9eb5a4a122ca1?s=68&d=mm&r=g",
            "https://secure.gravatar.com/avatar/c408131778bbbdca8c3fd64284042562?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/199345d6d13a05e6f6b8f1c43b4592bf?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/921d9adb0cc23681b6befd328d07bd60?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/e10880bc7ea9c2b057965d1de15a17bf?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/3e8feeba151e89c34cf6728042d5936d?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ad9ef39b44e90771a1765e612ba5aaac?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/85ec7bdad7cedb900a2fbf5f10ddf1fa?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/29830879c1af378eb5312afc32f311cd?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/4ad8e68498b16ded0edb1d6c354dc6ed?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/e18f02978f4f1246b92ec7401479c27f?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/f2823693f3f06e04fc45bc66ebe9bcfc?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/05e50ec15f3511d6c0ec30fa9ed2bb88?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/f78bb8dde52f12c7f7eb5e989f766cb8?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/2cee781af7452c3b57cdfa1a316d3952?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/5443f2bde95206c24b17521413cd64e2?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/be376ab6a562d7456fdd41c3e52194da?s=44&d=mm&r=g",
            "https://secure.gravatar.com/avatar/686399bd630ecc9381e4dfec8720816e?s=44&d=mm&r=g",
            "https://pressupinc.com/wp-content/uploads/2016/02/press_up_email_series-252x300.png",
            "https://pressupinc.com/wp-content/uploads/2015/05/siteground.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "David Hayes",
            "David Hayes →"
        ],
        "publish_date": "2014-12-10T17:51:07+00:00",
        "summary": "",
        "meta_description": "One of the hardest things to accept, as a justice-loving maker of software, is that a perfectly engineered and beautifully designed piece of software can go completely unused. Similarly, a lot of the software on which the world relies a great deal can be terrible — riddled with poor design decisions if not outright and undeniable […]",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "Press Up",
        "canonical_link": "https://pressupinc.com/blog/2014/12/bad-software-succeeds/",
        "text": "One of the hardest things to accept, as a justice-loving maker of software, is that a perfectly engineered and beautifully designed piece of software can go completely unused. Similarly, a lot of the software on which the world relies a great deal can be terrible — riddled with poor design decisions if not outright and undeniable bugs. This seems to be a fundamental frustrating truth about software.\n\nWhat Do We Actually Mean by Bad Software?\n\nOne of the first and most important reasons that bad software succeeds is that we don’t all agree what “bad” means.\n\nOne of the first and most important reasons that bad software succeeds (and good software fails) is that we don’t all agree what “bad” means. Most everyone would agree that software which claims to backup your computer and instead corrupts your data at random and fills volumes more of storage with apparently successful backups which don’t contain your data is “bad.” But there’s a large middle ground between that hypothetical case and most software that we developers call bad.\n\nIs something bad if it works well for its primary users but is a pain to extend, change, or develop against?\n\nIs something bad if it serves its purpose exactly but requires hours upon hours of training to become effective in?\n\nIs something bad if it works reasonably well, is relatively intuitive to learn, but is very very unnecessarily slow in actually performing its intended operations?\n\nWhat if it does the job but is really ugly looking?\n\nOr does the job 95% or the time and then dies fatally and takes the system it’s on down with it the other 5%?\n\nBecause all of those examples are sanely put into the category of “bad software” it’s clear than one of the reasons that bad software does better than you’d expect from the label is that people don’t agree on what makes it bad. If you think a piece of software is bad because its graphical user interface is unsightly, and I think a piece of software is bad when it manifestly fails at its intended function, we’d probably have differing opinions of an old Swing (Java) app that a business relies on.\n\nWhen Bad Software is Good\n\nThis conflict of understanding is at the heart of why bad software succeeds. A business person’s priorities are likely to be different than a developer’s. End users’ priorities are likely different than both the business owner and the developer. What one regards as great another thinks is alright and another likely considers “just plain awful.” That’s the heart of the issue.\n\nMost developers who are first exposed to it understandably hate WordPress. As a development platform it is, at best, a bit unconventional. Its code was largely written a long time ago with some nontrivial number of last decade’s design decisions still going strong. But because the platform’s priorities are on user ease and continuity, it still works on an old shared hosting account running PHP 5.2 (which hasn’t even had security releases for the last few years). And all the old templates and extensions (or themes and plugins in WordPress terms) still run fine on the latest version.\n\nYou can disagree with the WordPress team about their priorities, and you can think that their software is just irredeemably bad, but you can’t really get past the fact that it continues to be used by a large (and seemingly still growing) number of end users who find it easy, comfortable, and powerful.\n\nWhy Bad Software Isn’t Going Anywhere\n\nFundamentally, the primary driver of the proliferation of “bad” software is that there are people with different priorities making decisions that affect the end product of a software development or purchasing process. And typically, those groups aren’t in alignment about what the goals are and what success looks like.\n\nFundamentally, clean, well-tested, well-documented, and instantly-comprehensible code only matters to developers.\n\nThe way out of bad software is deep alignment at all levels and from all stakeholders about what a given piece of software is looking to accomplish, who it will benefit, and what a “good” version of that software will be. When it’s reached that vision, everyone ends up thinking it’s good, not just the most important and powerful stakeholder whose vision is realized.\n\nFundamentally, clean, well-tested, well-documented, and instantly-comprehensible code only matters to developers. To the business it’s about whether or not it provides value and helps in money-making matters. To the administrator, success typically looks like five nines of uptime (99.999%). To the end-user, what matters most is likely to be ease and delight. But each of those stakeholders’ goals can easily shunt aside the others in the inevitable contest of priorities.\n\nMaking good software for all the stakeholders is a political balancing act as much as it’s a matter of software craftsmanship, agile practices, TDD, or anything else. And aligning everyone’s vision and work is just as hard on a software team as it is on any other. Until all stakeholders’ visions are aligned about their goals, priorities, and success conditions, someone will always feel like they’re forced to deal with “bad” software."
    }
}