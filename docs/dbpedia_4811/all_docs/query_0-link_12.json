{
    "id": "dbpedia_4811_0",
    "rank": 12,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Brotli",
        "read_more_link": "",
        "language": "en",
        "title": "Wikipedia",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Brotli-logo.svg/64px-Brotli-logo.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/OOjs_UI_icon_edit-ltr-progressive.svg/10px-OOjs_UI_icon_edit-ltr-progressive.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Symbol_template_class_pink.svg/16px-Symbol_template_class_pink.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Symbol_template_class_pink.svg/16px-Symbol_template_class_pink.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2014-09-11T15:00:46+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Brotli",
        "text": "Open source compression library\n\nThis article is about the compression algorithm. For Brötli, the Swiss-German bread roll it is named after, see Bread roll § Europe.\n\nOriginal author(s)Jyrki Alakuijala, Zoltán SzabadkaDeveloper(s)Jyrki Alakuijala, Eugene Kliuchnikov, Robert Obryk, Zoltán Szabadka, Lode VandevenneInitial release15 October 2013; 10 years ago ( )Stable release\n\n1.1.0[1] / 31 August 2023; 11 months ago ( )\n\nRepositoryWritten inCOperating systemCross-platformPlatformPortableTypeData compressionLicenseMIT LicenseWebsitebrotli .org\n\nBrotli is a lossless data compression algorithm developed by Google. It uses a combination of the general-purpose LZ77 lossless compression algorithm, Huffman coding and 2nd-order context modelling. Brotli is primarily used by web servers and content delivery networks to compress HTTP content, making internet websites load faster. A successor to gzip, it is supported by all major web browsers and has become increasingly popular, as it provides better compression than gzip.[citation needed]\n\nHistory\n\n[edit]\n\nGoogle employees Jyrki Alakuijala and Zoltán Szabadka initially developed Brotli in 2013 to decrease the size of transmissions of WOFF web font.[2] Alakuijala and Szabadka completed the Brotli specification during 2013–2016. The specification was accompanied with a reference implementation developed by two additional authors, Evgenii Kliuchnikov and Lode Vandevenne, who had previously developed Google's zopfli implementation of deflate and gzip compatible compression in 2013.[3]: 1 Unlike zopfli, which was a reimplementation of an existing data format specification, Brotli was a new data format and allowed the authors to improve compression ratios even further.[4]\n\nThe Brotli specification was generalized in September 2015 for HTTP stream compression (content-encoding type \"br\"). This generalized iteration also improved the compression ratio by using a predefined dictionary of frequently used words and phrases. The version of Brotli released in September 2015 by the Google software engineers contained enhancements in generic lossless data compression, with particular emphasis on use for HTTP compression. The encoder was partly rewritten, with the result that the compression ratio improved, both the encoder and the decoder have been sped up, the streaming API was improved, and more compression quality levels have been added. Additionally, the new release shows performance improvements across platforms, with decoding memory reduction.[4]\n\nThe Internet Engineering Task Force approved the Brotli compressed data format specification as an informational request for comment (RFC 7932) in July 2016.[5] The Brotli data format is an integral part of the 2nd iteration of the Web Open Font Format,[5]: 3 which was recognized in a 2021 Technology & Engineering Emmy Award from the National Academy of Television Arts & Sciences for font technology standardization at W3C.[6][7]\n\nBrotli support has been added over the years to web browsers, with 96% of worldwide users using a browser that supports the format, as of July 2022.[8]\n\nIn 2016 Dropbox reimplemented Brotli in Rust to fulfill their requirement to be more secure against a malicious client. In 2018 they implemented the missing feature so one can append to a Brotli compressed file.[9][10][11]\n\nAlgorithm\n\n[edit]\n\nBrotli's new file format allows its authors to improve upon Deflate by several algorithmic and format-level improvements: the use of context models for literals and copy distances, describing copy distances through past distances, use of move-to-front queue in entropy code selection, joint-entropy coding of literal and copy lengths, the use of graph algorithms in block splitting, and a larger backward reference window are example improvements.\n\nUnlike most general-purpose compression algorithms, Brotli uses a predefined dictionary, roughly 120 KiB in size, in addition to the dynamically populated (\"sliding window\") dictionary. The predefined dictionary contains over 13000 common words, phrases and other substrings derived from a large corpus of text and HTML documents.[12][3] Using a predefined dictionary has been shown to increase compression where a file mostly contains commonly used words.[13] However, according to Alakuijala, the predefined dictionary does not distract from Brotli's generality, and is not the main reason for improved compression. Brotli with an all-zero dictionary still performs well on web content due to the algorithmic advances, he claims.[14]\n\nBrotli's sliding window is limited to 16 MiB. This enables decoding on mobile phones with limited resources, but makes Brotli underperform on compression benchmarks having larger files. The constraints of the small window size can be alleviated by using Large Window Brotli, which is not compatible with RFC7932 (Brotli proper).[15]\n\nName\n\n[edit]\n\nWhile Google's zopfli implementation of the deflate compression algorithm is named after Zöpfli, the Swiss German word for a snack-sized braided buttery bread, brotli is named after Brötli, the Swiss German word for a bread roll.[4] Google's own implementation of the Brotli specification was released under the terms of the permissive free software MIT license in 2016. A formal validation of the Brotli specification was independently implemented by Mark Adler,[5]: 126 one of the co-authors of the zlib/gzip compression format and library. Adler's implementation was released under the terms of the similarly permissive Apache License.[16] Other implementations of the specification also exist, including one in the source-to-source Haxe language.\n\nApplications\n\n[edit]\n\nBrotli compression is generally used as an alternative to gzip on the web, as Brotli provides better overall compression.[17] Compared to gzip compression, JavaScript files compressed with Brotli are roughly 15% smaller, HTML files are around 20% smaller, and CSS files are around 16% smaller.[18]\n\nThe reference implementation does ship a command-line program brotli similar to gzip,[19] but use in the Unix-like world as a simple compressor is scarce. Libarchive developers find the raw stream format of .br files difficult to support, as there is no magic number to indicate the file format.[20]\n\nIndustry support\n\n[edit]\n\nBrowsers and other clients\n\n[edit]\n\nMozilla Firefox introduced support for the \"br\" content-encoding method in version 44 (released on 26 January 2016).[21]\n\nGoogle Chrome has supported the \"br\" content-encoding method since version 50 (released on 20 April 2016).[22]\n\nOpera has supported the \"br\" content-encoding method since version 38 (released 8 June 2016).[22]\n\nMicrosoft Edge has supported the \"br\" content-encoding method since version 15 (released on 5 April 2017).[23]\n\nSafari has supported the \"br\" content-encoding method since version 11 (released on 5 October 2017).\n\ncURL has a compile-time option to support the \"br\" content-encoding method using libbrotli as of version 7.57, released on 29 November 2017.[24]\n\n7zip is available extended with Brotli by 7zip-zstd.[25]\n\nPeaZip supports Brotli .BR format for compression and extraction[26]\n\nWeb servers\n\n[edit]\n\nFor Apache HTTP Server, the \"br\" content-encoding method has been supported by the mod_brotli module since version 2.4.26.[27]\n\nMicrosoft IIS has a supported extension since May 2018 that adds support for the \"br\" content-encoding method.[28]\n\nMicrosoft Azure Front Door can dynamically compress content on the edge using Brotli[29] since its launch on April 17, 2019.[30]\n\nnginx has a ngx_brotli module provided by Google since December 2016.\n\nNode.js features a built-in native en- and decoder since version 11.7.0, which can be used to support the \"br\" content-encoding.\n\nAmazon CloudFront can automatically compress cacheable responses at the edge using Brotli, as of September 2020.[31]\n\nLiteSpeed Web Server has included the \"br\" content-encoding method for static files only since version 5.2 in July 2017.\n\nCloudflare CDN offers a brotli option to compress data between its edge node and the user.[32]\n\nNaviServer added support in version 4.99.17b1\n\nCaddy serves statically compressed .br files since version 0.9.4 from December 21st, 2016.\n\nlighttpd mod_deflate supports .br since 1.4.56[33] from November 2020.\n\nReferences\n\n[edit]\n\nNotes\n\n- Finley, Klint (22 September 2015), \"Hooli, I Mean Google, Gives Away Compression Code for Free\", Wired Online, wired.com ."
    }
}