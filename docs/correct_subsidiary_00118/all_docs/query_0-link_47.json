{
    "id": "correct_subsidiary_00118_0",
    "rank": 47,
    "data": {
        "url": "https://dzone.com/articles/filenet-integration-process-with-documentum-benefi",
        "read_more_link": "",
        "language": "en",
        "title": "FileNet Integration Process",
        "top_image": "https://dz2cdn1.dzone.com/storage/article-thumb/16871925-thumb.jpg",
        "meta_img": "https://dz2cdn1.dzone.com/storage/article-thumb/16871925-thumb.jpg",
        "images": [
            "https://dz2cdn1.dzone.com/themes/dz20/images/dz_logo_2021_cropped.png",
            "https://dzone.com/themes/dz20/images/dz-postarticle.svg",
            "https://dzone.com/articles/r.thumbnail",
            "https://dz2cdn1.dzone.com/thumbnail?fid=16808765&w=80"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Content management system",
            "Document",
            "Enterprise content management",
            "integration"
        ],
        "tags": null,
        "authors": [
            "Ravikiran Kandepu"
        ],
        "publish_date": "2023-05-08T00:00:00+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://dz2cdn1.dzone.com/themes/dz20/images/favicon.png",
        "meta_site_name": "dzone.com",
        "canonical_link": "https://dzone.com/articles/filenet-integration-process-with-documentum-benefi",
        "text": "DZone\n\nSoftware Design and Architecture\n\nIntegration\n\nFileNet Integration Process\n\nFileNet Integration Process\n\nIn this article, the reader will learn about the basics of Documentum, integration with FileNet, and its benefits, with a code snippet example to perform the migration.\n\nLike (2)\n\nSave\n\n2.4K Views\n\nJoin the DZone community and get the full member experience.\n\nJoin For Free\n\nFileNet is an enterprise content management (ECM) platform developed by IBM. It provides various tools and services for managing content, processes, and workflows within an organization.\n\nDocumentum product is an enterprise content management (ECM) platform. It provides a wide range of tools and services for managing content and information in organizations. Documentum was originally developed by Documentum, Inc. and was later acquired by EMC Corporation, which was, in turn, acquired by Dell Technologies. Below are some of the benefits of migrating FileNet into Documentum.\n\nImproved user experience: Documentum's user interface is often seen as more modern and user-friendly than FileNet's, which can lead to improved adoption and productivity among users.\n\nSimplified architecture: Documentum's architecture is based on a client-server model, which can simplify deployment and management compared to FileNet's more complex service-oriented architecture.\n\nMore flexible integration: Documentum's API is known for being more flexible and easier to work with than FileNet's, which can make it easier to integrate with other systems and applications.\n\nStrong compliance features: Documentum has a strong reputation for compliance, including support for industry-specific regulations such as FDA 21 CFR Part 11 and SEC Rule 17a-4, which can help organizations ensure regulatory compliance.\n\nLower cost: Depending on the specifics of the migration project, moving from FileNet to Documentum may result in lower licensing and maintenance costs, which can help organizations save money over the long term.\n\nIntegrating FileNet with Documentum is a complex process that requires meticulous planning and execution. Here are the general steps involved in integrating FileNet with Documentum:\n\nThe first step in integrating FileNet with Documentum is to identify the integration requirements, such as the types of content to be incorporated, the frequency of updates, and the security requirements.\n\nThere are different integration approaches available for integrating FileNet with Documentum, such as using APIs, middleware, or third-party integration tools. The choice of integration approach will depend on the requirements and the existing infrastructure.\n\nThe next step is to map the metadata and content from FileNet to Documentum, such as file types, naming conventions, and metadata fields. This requires careful planning to ensure that the content and metadata are properly mapped and synchronized between the systems.\n\nOnce the metadata and content mapping is complete, integration code needs to be developed to transfer content and metadata between FileNet and Documentum. This may involve using APIs or other integration tools to share content and metadata between the systems.\n\nAfter the integration code is developed, it needs to be tested and deployed in a controlled environment to ensure that it works as expected. This may involve testing for content and metadata transfer, security, and performance.\n\nOnce the integration is deployed, it needs to be monitored and maintained to ensure that it continues to work correctly. This may involve monitoring performance, troubleshooting issues, and updating the integration code as needed.\n\nThe integration specifics will depend on the requirements and the existing infrastructure.\n\nAn example code snippet for integrating FileNet with Documentum using APIs. This code assumes that the FileNet Content Engine API and the Documentum Foundation Services (DFS) API are already installed and configured:\n\nSet up the FileNet Connection\n\nJava\n\nString fileNetUrl = \"http://<hostname>:<port>/wsi/FNCEWS40MTOM/\"; String fileNetUsername = \"<username>\"; String fileNetPassword = \"<password>\"; Connection fileNetConnection = Factory.Connection.getConnection(fileNetUrl); Subject fileNetSubject = UserContext.createSubject(fileNetConnection, fileNetUsername, fileNetPassword, null); UserContext.get().pushSubject(fileNetSubject);\n\nSet up the Documentum Connection\n\nJava\n\nString documentumUrl = \"http://<hostname>:<port>/documentum/services/\"; String documentumUsername = \"<username>\"; String documentumPassword = \"<password>\"; Service documentumService = new Service(documentumUrl, \"Documentum\", documentumUsername, documentumPassword);\n\nGet the Content From FileNet\n\nJava\n\nString fileNetDocId = \"<FileNet document ID>\"; Document fileNetDoc = Factory.Document.fetchInstance(fileNetConnection, fileNetDocId, null);\n\nCreate a New Documentum Document\n\nJava\n\nString documentumFolderId = \"<Documentum folder ID>\"; String documentumDocName = fileNetDoc.getProperties().getStringValue(\"DocumentTitle\"); String documentumDocContent = fileNetDoc.getContent();\n\nJava\n\nIDfSession documentumSession = documentumService.getSession(); IDfFolder documentumFolder = (IDfFolder)documentumSession.getObject(new DfId(documentumFolderId)); IDfSysObject documentumDoc = (IDfSysObject)documentumSession.newObject(\"dm_document\"); documentumDoc.setObjectName(documentumDocName); documentumDoc.setContentType(\"pdf\"); documentumDoc.setFile(documentumDocContent); documentumDoc.link(documentumFolder.getObjectId()); documentumDoc.save();\n\nClean up the Connections and Sessions\n\nJava\n\nUserContext.get().popSubject(); documentumSession.disconnect();\n\nThis code snippet shows how to transfer a PDF document from FileNet to Documentum. It sets up the connections to both systems, fetches the document content from FileNet using the Content Engine API, creates a new document in Documentum using the DFS API, and transfers the content from FileNet to Documentum. Finally, it cleans up the connections and sessions.\n\nContent management system Document Enterprise content management Integration\n\nOpinions expressed by DZone contributors are their own.\n\nRelated\n\nHow To Validate Three Common Document Types in Python\n\nAWS CDK: Infrastructure as Abstract Data Types, Part 3\n\nHow To Convert Common Documents to PNG Image Arrays in Java\n\nHow To Compare DOCX Documents in Java"
    }
}