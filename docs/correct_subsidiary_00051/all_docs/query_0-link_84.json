{
    "id": "correct_subsidiary_00051_0",
    "rank": 84,
    "data": {
        "url": "https://www10.edacafe.com/blogs/ed-lee/tag/rapid-prototyping/",
        "read_more_link": "",
        "language": "en",
        "title": "EDACafe: What's PR got to do with it?",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www10.edacafe.com/common/images/openMobileMenu40x40.png",
            "https://www10.edacafe.com/common/images/0/10832/1722162118/s.gif",
            "https://www10.edacafe.com/common/images/superfish/home.gif",
            "https://www10.edacafe.com/blogs/images/EDA_blog_header.gif",
            "https://www10.edacafe.com/common/images/sidebar-left-collapse-40x40.gif",
            "https://i0.wp.com/www10.edacafe.com/blogs/ed-lee/files/2010/08/tom-huang-small-2-150x150.jpg?resize=150%2C150",
            "https://i0.wp.com/www10.edacafe.com/blogs/ed-lee/files/2010/08/michael-chang-small-2-150x150.jpg?resize=150%2C150",
            "https://i0.wp.com/www10.edacafe.com/blogs/ed-lee/files/2010/08/joe-gianelli-small-150x150.jpg?resize=150%2C150",
            "https://www10.edacafe.com/common/images/footer/CAREER.gif",
            "https://www10.edacafe.com/common/images/footer/EDA.gif",
            "https://www10.edacafe.com/common/images/footer/GIS.gif",
            "https://www10.edacafe.com/common/images/footer/MCAD.gif",
            "https://www10.edacafe.com/common/images/footer/SCG.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "https://EDACafe.com/common/EDA/images/favicon.ico",
        "meta_site_name": "What's PR got to do with it?",
        "canonical_link": "https://www10.edacafe.com/blogs/ed-lee/tag/rapid-prototyping/",
        "text": "This is the 2nd part of my interview with Joe Gianelli, VP of Marketing and Business Development of the new start up…..InPA Systems.\n\nLiz: Joe, can you give us a little bit of background on InPA’s founders, Thomas Huang and Michael Chang?\n\nJoe: Both Tom and Michael are longtime EDA entrepreneurs, having founded a number of startups, bringing to InPA a wealth of expertise in logic emulation, rapid prototyping and RTL verification.\n\nTom is probably best known as a co-founder and CTO of PiE Design Systems. He continued on with Quickturn when it acquired PiE. He was also EVP and CTO of Aptix, a rapid prototyping company, and founded several other companies in the emulation and ATE areas.\n\nMichael was a co-founder, CEO and president of Verplex, a formal verification company that was acquired by Cadence. At Cadence he served as VP and GM of the formal verification group. Michael also founded Checklogic, which was acquired by Mentor.\n\nLiz: And how about yourself? What is your background?\n\nJoe: I was involved in the successful launch and acquisition of Taray just before joining InPA. I have spent my entire career in EDA, making the rounds from Synopsys to Epic Design to Meta Software and to Cadence. I was at Synplicity for 10 years, where I was VP of Business Development.\n\nLiz: That’s an impressive combination of experience and expertise that you all bring to the table. Did I notice some high profile names on your advisory board?\n\nJoe: You sure did! Bernie Aronson, from Epic, Synplicity, Kilopass; Michel Courtoy, from Certess; Sean Torsney of Verplex, and Kazuyuki Kawauchi from Fujitsu.\n\nLiz: So what are your initial target markets?\n\nJoe: SoC projects using FPGA prototype systems to verfy and validate their SoC’s.. Right now, we’re focusing on North America and the major Asian markets. We’ll obviously be going into Europe shortly.\n\nLiz: When can we expect to see your first product?\n\nJoe: This really depends on the success of our beta sites, could be as early as late Q4.\n\nLiz: Thank you, Joe, for giving us a little insight (or should I say visibility?) into InPA Systems. I’m sure we’ll be hearing more and more about InPA and Active Debug in the near future.\n\nLiz Massingill interviews InPA’s Joe Gianelli\n\nThis month, a new company announced its entrance into the rapid prototyping space. It goes by the name of InPA Systems. I was lucky enough to be able to grab a few minutes with its VP of Marketing and Business Development, Joe Gianelli, in order to learn a little bit about this new start up, its exciting new technology and how it could impact the future of rapid prototyping.\n\nLiz: InPA….not an obvious name. What does it stand for?\n\nJoe: Yeah, that’s an obvious question. It stands for integrated prototype automation, which are the characteristics of the technology we bring to the market.\n\nSo what InPA Systems is integrating is the RTL simulation and FPGA prototyping environments and automating a critical portion of the “bring up” that verifies that the mapping of the RTL code into the multiple FPGAs correlates to the original RTL code.\n\nLiz: So InPA is in the rapid prototyping area, a segment that’s been around for, what, 20 years? What do you bring to the market that’s new?\n\nJoe: InPA’s mission is to more fully harness the power of today’s FPGA rapid prototyping systems. Our most noteworthy technological capability is bringing debug visibility to users – who used to have to fly blind.\n\nBasically, Tom (Huang) and Michael (Chang) saw the need for a more complete rapid prototype environment that integrated today’s RTL verification and rapid prototype environments with better visibility.\n\nLiz: So technically, how does this work?\n\nJoe: Without getting into a technical schpiel, InPA Systems integrates the RTL code and FPGA prototype environment so that engineers can debug in their RTL code while accessing their captured faulty conditions with full visibility. The automation here is to cross-link the RTL code with the captured faulty condition and to expand full signal visibility around the faulty condition.\n\nWe’re also enabling full system debug. This is when engineers are integrating the software and hardware design components enabling engineers to catch issues easier when integrating both HW/SW in the FPGA prototype environment. The automation here enables full system debug with “active debug” technology to dynamically control HW and to cross-trigger between FPGAs.\n\nAnd finally, we’re automating the full capture of faulty conditions across multiple FPGAs. Today, engineers must capture and debug one FPGA at a time.\n\nLiz: That’s got to be key! Why is it important or noteworthy to integrate and automate this?\n\nJoe: It’s extremely tedious and difficult to isolate a hardware problem when it spans RTL code over multiple FPGAs. Giving the engineer the ability to fully capture the faulty scenario leads to much quicker isolation of the actual problem.\n\nLiz: What does this new technology offer to the user that he or she hasn’t been able to accomplish up until now?\n\nJoe: Right now, engineers probe around in the dark looking for problems in the hardware, one FPGA at a time. We give them the tools to explore various scenarios without having to recompile FPGA place and route…this is a real pain for engineers today. And we give them full visibility around their problem, making it easier to detect and fix.\n\nLiz: What does “active debug” mean?\n\nJoe: It’s allowing the engineer to remain active in the debug process; forcing certain circuit states, capturing data at speed, analyzing the data, and essentially remaining active in the debug process as opposed to probing around in the dark and waiting for another FPGA P&R iteration. What we call Active Debug is a combination of technology and methodology that increases the productivity of engineers who are integrating hardware and software and validating in-system with a rapid prototype .\n\nLiz: So it’s an answer to the old debug visibility problem, right?\n\nJoe: You got it.\n\nLiz: So I have to ask, how is it different from existing debug? Passive debug, is it?\n\nJoe: Yes. As most current systems use the passive debug approach, they only probe the circuit looking for possible problems with limited visibility, which doesn’t allow the user to dynamically create different conditions in the circuit that allow for testing of those conditions while running in the FPGAs.\n\nIn contrast, active debug allows the user to force various conditions in the circuit, capture over multiple FPGAs, analyze in a user friendly simulation environment, while reducing the number of FPGA P&R iterations.\n\nLiz: Why is it important to debug in your “active” mode?\n\nJoe: One of the biggest challenges of the SoC design team is debugging problems when integrating SW and HW together. Today, most SoC design teams are integrating their SW and HW on FPGA prototype systems and using the debug tools from the FPGA vendors which were not architected to debug large SoC designs over many multiple FPGAs. Consequently, engineers are not very productive using these tools as they search in the dark, one FPGA at a time, with limited visibility. Allowing engineers to become more “active” in their debug process moves them closer to isolating the bug much faster. It’s really allowing them to do their jobs much more efficiently.\n\nLiz: I’m trying to hone in on the visibility function InPA brings to designers. What do you mean by “visibility” and how is that different from current prototyping methods again?\n\nJoe: Visibility is really two things. First, it’s allowing engineers to capture their faulty conditions over multiple FPGAs as opposed to one FPGA at a time. This gives them much greater visibility into the potential problem. Secondly, our technology expands all the signals in the captured scenario giving engineers full signal visibility.\n\nPart 2 of this interview will air on September 6."
    }
}