{
    "id": "correct_subsidiary_00102_1",
    "rank": 64,
    "data": {
        "url": "https://patents.google.com/patent/US11042569B2/zh",
        "read_more_link": "",
        "language": "en",
        "title": "US11042569B2 - System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment - Google Patents",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://patentimages.storage.googleapis.com/95/5e/06/6a15c9b7a549e0/US11042569-20210622-D00000.png",
            "https://patentimages.storage.googleapis.com/28/29/73/a05610e48288c8/US11042569-20210622-D00001.png",
            "https://patentimages.storage.googleapis.com/80/3e/c0/6a1d359c2f910f/US11042569-20210622-D00002.png",
            "https://patentimages.storage.googleapis.com/2c/33/6b/7899536916ba31/US11042569-20210622-D00003.png",
            "https://patentimages.storage.googleapis.com/6f/f2/72/ef83f948e14aeb/US11042569-20210622-D00004.png",
            "https://patentimages.storage.googleapis.com/dd/18/6d/70443fba2032f2/US11042569-20210622-D00005.png",
            "https://patentimages.storage.googleapis.com/6b/40/a5/835cc5b01a6e35/US11042569-20210622-D00006.png",
            "https://patentimages.storage.googleapis.com/69/4c/45/6c20315902a719/US11042569-20210622-D00007.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2017-09-29T00:00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://patents.google.com/patent/US11042569B2/zh",
        "text": "System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment Download PDF\n\nInfo\n\nPublication number\n\nUS11042569B2\n\nUS11042569B2 US16/023,812 US201816023812A US11042569B2 US 11042569 B2 US11042569 B2 US 11042569B2 US 201816023812 A US201816023812 A US 201816023812A US 11042569 B2 US11042569 B2 US 11042569B2\n\nAuthority\n\nUS\n\nUnited States\n\nPrior art keywords\n\nnodes\n\nsource data\n\nleaf node\n\ndata\n\nhigher level\n\nPrior art date\n\n2017-09-29\n\nLegal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)\n\nActive, expires 2038-07-08\n\nApplication number\n\nUS16/023,812\n\nOther languages\n\nEnglish (en)\n\nOther versions\n\nUS20190102446A1 (en\n\nInventor\n\nKumar Ramaiyer\n\nCurrent Assignee (The listed assignees may be inaccurate. Google has not performed a legal analysis and makes no representation or warranty as to the accuracy of the list.)\n\nOracle International Corp\n\nOriginal Assignee\n\nOracle International Corp\n\nPriority date (The priority date is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the date listed.)\n\n2017-09-29\n\nFiling date\n\n2018-06-29\n\nPublication date\n\n2021-06-22\n\n2018-06-29 Application filed by Oracle International Corp filed Critical Oracle International Corp\n\n2018-06-29 Priority to US16/023,812 priority Critical patent/US11042569B2/en\n\n2018-07-18 Assigned to ORACLE INTERNATIONAL CORPORATION reassignment ORACLE INTERNATIONAL CORPORATION ASSIGNMENT OF ASSIGNORS INTEREST (SEE DOCUMENT FOR DETAILS). Assignors: RAMAIYER, KUMAR\n\n2018-07-30 Priority to EP18755370.6A priority patent/EP3688607A1/en\n\n2018-07-30 Priority to CN201880007607.9A priority patent/CN110199273B/zh\n\n2018-07-30 Priority to PCT/US2018/044425 priority patent/WO2019067079A1/en\n\n2018-07-30 Priority to JP2019552229A priority patent/JP6827127B2/ja\n\n2019-04-04 Publication of US20190102446A1 publication Critical patent/US20190102446A1/en\n\n2021-06-21 Priority to US17/352,793 priority patent/US11789978B2/en\n\n2021-06-22 Publication of US11042569B2 publication Critical patent/US11042569B2/en\n\n2021-06-22 Application granted granted Critical\n\nStatus Active legal-status Critical Current\n\n2038-07-08 Adjusted expiration legal-status Critical\n\nLinks\n\nUSPTO\n\nUSPTO PatentCenter\n\nUSPTO Assignment\n\nEspacenet\n\nGlobal Dossier\n\nDiscuss\n\nImages\n\nClassifications\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data\n\nG06F16/28—Databases characterised by their database models, e.g. relational or object models\n\nG06F16/283—Multi-dimensional databases or data warehouses, e.g. MOLAP or ROLAP\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data\n\nG06F16/22—Indexing; Data structures therefor; Storage structures\n\nG06F16/2228—Indexing structures\n\nG06F16/2246—Trees, e.g. B+trees\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data\n\nG06F16/22—Indexing; Data structures therefor; Storage structures\n\nG06F16/2228—Indexing structures\n\nG06F16/2264—Multidimensional index structures\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data\n\nG06F16/25—Integrating or interfacing systems involving database management systems\n\nG06F16/254—Extract, transform and load [ETL] procedures, e.g. ETL data flows in data warehouses\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data\n\nG06F16/28—Databases characterised by their database models, e.g. relational or object models\n\nG06F16/282—Hierarchical databases, e.g. IMS, LDAP data stores or Lotus Notes\n\nDefinitions\n\nEmbodiments of the invention are generally related to databases and data warehousing, and are particularly related to a system and method for load, aggregate and batch calculation in one scan in a multidimensional database environment.\n\nMultidimensional database computing environments enable companies to deliver critical business information to the right people when they need it, including the ability to leverage and integrate data from multiple existing data sources, and distribute filtered information to end-user communities in a format that best meets those users' needs. Users can interact with and explore data in real time, and along familiar business dimensions, enabling speed-of-thought analytics. These are some examples of the types of environment in which embodiments of the invention can be used.\n\nsystems and methods can provide for load, aggregate, and batch calculation in one scan in a multidimensional database environment.\n\nAn exemplary method can provide, at a computer that includes one or more microprocessors, a multidimensional database server executing on the computer, wherein the multidimensional database server supports at least one hierarchical structure of data dimensions.\n\nthe method can organize the at least one hierarchical structure of data dimensions into a plurality of levels, each of the plurality of levels comprising a subset of a plurality of nodes.\n\nthe method can load a source data into a leaf node of the plurality of nodes, the leaf node being at a lowest level of the plurality of levels, the leaf node being associated with one or more nodes of a higher level, wherein such association comprises metadata.\n\nthe method can aggregate the source data to the one or more nodes of higher level. Upon aggregating the source data to the one or more nodes of the higher level, the method can associate the aggregations of the source data are associated with the metadata. Upon associating the aggregations of the source data with the metadata, the method can discard the source data loaded into the leaf node.\n\nFIG. 1 illustrates an example of a multidimensional database environment, in accordance with an embodiment.\n\nFIG. 2 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\nFIG. 3 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\nFIG. 4 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\nFIG. 5 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\nFIG. 6 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\nFIG. 7 is a flowchart of a method for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\nMultidimensional database environments can be used to integrate large amounts of data, in some instances from multiple data sources, and distribute filtered information to end-users, in a manner that addresses those users' particular requirements.\n\nFIG. 1 illustrates an example of a multidimensional database environment 100 , in accordance with an embodiment.\n\na multidimensional database environment operating as a database tier, can include one or more multidimensional database server system(s) 102 , each of which can include physical computer resources or components 104 (e.g., microprocessor/CPU, physical memory, network components), an operating system 106 , and one or more multidimensional database server(s) 110 (e.g., Essbase Servers).\n\nmultidimensional database server system(s) 102 each of which can include physical computer resources or components 104 (e.g., microprocessor/CPU, physical memory, network components), an operating system 106 , and one or more multidimensional database server(s) 110 (e.g., Essbase Servers).\n\na middle tier 120 can include one or more service(s), such as, for example, provider services 122 (e.g., Hyperion Provider Services), administration services 124 (e.g., Essbase Administration Services), or studio/integration services 126 (e.g., Essbase Studio/Essbase Integration Services).\n\nprovider services 122 e.g., Hyperion Provider Services\n\nadministration services 124 e.g., Essbase Administration Services\n\nstudio/integration services 126 e.g., Essbase Studio/Essbase Integration Services\n\nthe middle tier can provide access, via ODBC/JDBC 127 , 128 , or other types of interfaces, to a metadata catalog 129 , and/or one or more data source(s) 130 (for example, a relational database), for use with the multidimensional database environment.\n\ndata source(s) 130 for example, a relational database\n\nthe one or more data source(s) can also be accessed, via ODBC/JDBC 132 , or other types of interfaces, by the one or more multidimensional database server(s), for use in providing a multidimensional database.\n\na client tier 140 can include one or more multidimensional database client(s) 142 (e.g., Essbase Server clients), that enable access to a multidimensional database (such as, for example, Smart View, Spreadsheet Add-in, Smart Search, Administration Services, MaxL, XMLA, CAPI or VB API Applications, Oracle Business Intelligence Enterprise Edition Plus, or other types of multidimensional database clients).\n\nthe client tier can also include consoles, for use with services in the middle tier, such as for example an administration services console 144 , or a studio/integration services console 146 .\n\ncommunication between the client, middle, and database tiers can be provided by one or more of TCP/IP, HTTP, or other types of network communication protocols.\n\nthe multidimensional database server can integrate data from the one or more data source(s), to provide a multidimensional database, data structure, or cube(s) 150 , which can then be accessed to provide filtered information to end-users.\n\neach data value in a multidimensional database is stored in one cell of a cube; and a particular data value can be referenced by specifying its coordinates along dimensions of the cube.\n\nthe intersection of a member from one dimension, with a member from each of one or more other dimensions, represents a data value.\n\nFIG. 1 which illustrates a cube 162 that might be used in a sales-oriented business application\n\nthe system can interpret this query as a slice or layer of data values 164 within the database that contains all âSalesâ data values, where âSalesâ intersect with âActualâ and âBudgetâ.\n\nthe query can specify a member on each dimension, for example by specifying âSales, Actual, Januaryâ. Slicing the database in different ways, provides different perspectives of the data; for example, a slice of data values 168 for âFebruaryâ examines all of those data values for which a time/year dimension is fixed for âFebruaryâ.\n\ndevelopment of a multidimensional database begins with the creation of a database outline, which defines structural relationships between members in the database; organizes data in the database; and defines consolidations and mathematical relationships.\n\neach dimension comprises one or more members, which in turn may comprise other members.\n\nthe specification of a dimension instructs the system how to consolidate the values of its individual members.\n\na consolidation is a group of members within a branch of the tree.\n\na dimension represents the highest consolidation level in the database outline.\n\nStandard dimensions may be chosen to represent components of a business plan that relate to departmental functions (e.g., Time, Accounts, Product Line, Market, Division). Attribute dimensions, that are associated with standard dimensions, enable a user to group and analyze members of standard dimensions based on member attributes or characteristics. Members (e.g., Product A, Product B, Product C) are the individual components of a dimension.\n\na multidimensional database uses family (parents, children, siblings; descendants and ancestors); and hierarchical (generations and levels; roots and leaves) terms, to describe the roles and relationships of the members within a database outline.\n\na parent is a member that has a branch below it.\n\nâMarginâ may be a parent for âSalesâ, and âCost of Goods Soldâ (COGS).\n\na child is a member that has a parent above it.\n\nâSalesâ and âCost of Goods Soldâ are children of the parent âMarginâ. Siblings are children of the same immediate parent, within the same generation.\n\ndescendants are members in branches below a parent.\n\nâProfitâ, âInventoryâ, and âRatiosâ may be descendants of Measures; in which case the children of âProfitâ, âInventoryâ, and âRatiosâ are also descendants of Measures.\n\nAncestors are members in branches above a member. In the above example, âMarginâ, âProfitâ, and Measures may be ancestors of âSalesâ.\n\na root is the top member in a branch.\n\nMeasures may be the root for âProfitâ, âInventoryâ, and âRatiosâ; and as such for the children of âProfitâ, âInventoryâ, and âRatiosâ.\n\nLeaf (level 0 ) members have no children. For example, Opening âInventoryâ, Additions, and Ending âInventoryâ may be leaf members.\n\na generation refers to a consolidation level within a dimension.\n\nthe root branch of the tree is considered to be âgeneration 1 â, and generation numbers increase from the root toward a leaf member.\n\nLevel refers to a branch within a dimension; and are numbered in reverse from the numerical ordering used for generations, with level numbers decreasing from a leaf member toward its root.\n\na user can assign a name to a generation or level, and use that name as a shorthand for all members in that generation or level.\n\nData sets within a multidimensional database often share two characteristics: the data is not smoothly and uniformly distributed; and data does not exist for a majority of member combinations.\n\nthe system can recognize two types of standard dimensions: sparse dimensions and dense dimensions.\n\na sparse dimension is one with a relatively low percentage of available data positions filled; while a dense dimension is one in which there is a relatively high probability that one or more cells is occupied in every combination of dimensions.\n\nMany multidimensional databases are inherently sparse, in that they lack data values for the majority of member combinations.\n\nthe multidimensional database uses data blocks and an index to store and access data.\n\nthe system can create a multidimensional array or data block for each unique combination of sparse standard dimension members, wherein each data block represents the dense dimension members for its combination of sparse dimension members.\n\nAn index is created for each data block, wherein the index represents the combinations of sparse standard dimension members, and includes an entry or pointer for each unique combination of sparse standard dimension members for which at least one data value exists.\n\nthe multidimensional database server when the multidimensional database server searches for a data value, it can use the pointers provided by the index, to locate the appropriate data block; and, within that data block, locate the cell containing the data value.\n\nan administration service e.g., Essbase Administration Services\n\nEssbase Administration Services provides a single-point-of-access that enables a user to design, develop, maintain, and manage servers, applications, and databases.\n\na studio e.g., Essbase Studio\n\nEssbase Studio provides a wizard-driven user interface for performing tasks related to data modeling, cube designing, and analytic application construction.\n\na spreadsheet add-in integrates the multidimensional database with a spreadsheet, which provides support for enhanced commands such as Connect, Pivot, Drill-down, and Calculate.\n\nan integration service e.g., Essbase Integration Services\n\nEssbase Integration Services provides a metadata-driven environment for use in integrating between the data stored in a multidimensional database and data stored in relational databases.\n\na provider service (e.g., Hyperion Provider Services) operates as a data-source provider for Java API, Smart View, and XMLA clients.\n\na smart view provides a common interface for, e.g., Hyperion Financial Management, Hyperion Planning, and Hyperion Enterprise Performance Management Workspace data.\n\ndeveloper products enable the rapid creation, management, and deployment of tailored enterprise analytic applications.\n\na lifecycle management (e.g., Hyperion Enterprise Performance Management System Lifecycle Management) provides a means for enabling enterprise performance management products to migrate an application, repository, or individual artifacts across product environments.\n\nonline analytical processing provides an environment that enables users to analyze enterprise data.\n\nfinance departments can use OLAP for applications such as budgeting, activity-based costing, financial performance analysis, and financial modeling, to provide âjust-in-timeâ information.\n\nOLAP systems can organize data in multiple dimensions allows searchers/users of the data set to conduct directed searches that traverse various dimensions to ultimately arrive at the result of interest.\n\nOLAP systems can view data as residing at the intersection of dimensions.\n\nthe data underlying OLAP systems can be organized and stored as a multi-dimensional database which is an instantiation of the cross-product of all of the dimensions. This allows users/searchers to traverse hierarchies of detail along dimensions of interest in an ad hoc manner to get at specific, targeted data. Slowly changing data can be represented as metadata within a current data set.\n\nmetadata can be used to identify in which higher dimensions each leaf-level load is used. At such time, the data from the leaf level is aggregated to each of the higher dimensions where it is to be used. Then, the aggregate values are stored in memory until a completed sum (or other calculation) is completed at the higher levels. At such time, the aggregate values can be discarded from memory.\n\nthe ability of the system to perform a load, aggregate, and batch calculation in one scan is particularly useful in processing very large sets of data, for example in big data environments, where it may not be desirable to load the data for all of the leaf nodes into current memory.\n\na source e.g., Spark cluster\n\na source can have certain values loaded at the leaf level nodes.\n\nData loaded into the leaf node closest to the source can be loaded, then aggregated into the first two dimensions at the next level. This aggregation reduces the loaded data by a factor of 10 to 100 â .\n\nthe aggregated data can be maintained in memory as a partial sum until the computation is completed.\n\nFIG. 2 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\na data structure such as a multidimensional database structure, can comprise a number of node levels, such as a leaf level 201 , level 1 202 , and level 2 203 , where each node level comprises one or more nodes.\n\nthe multidimensional database structure can be associated with a source 210 , such as a data source (e.g., a big data warehouse).\n\nthe multidimensional data structure can be associated with one or more storage(s) (not shown).\n\none storage device can hold the entirety of the data structure.\n\neach level of nodes can be hosted on separate data storages.\n\neach node can be associated with its one data storage(s).\n\nFIG. 2 is intended to represent a system that may have more or fewer levels of nodes. Additionally, while only one data source is depicted, multiple data sets can be incorporated into such a system.\n\nMetadata can be associated with the dimensions (e.g., along links).\n\nThis metadata can indicate node relationships, such as which nodes are dependent upon which other nodes for various calculations (e.g., partial sum values . . . etc.). This is show, for example, in FIG. 2 with dashed lines representing metadata relationships for the calculation that takes place at node a in level 2 203 .\n\nsource data is stored at leaf nodes A and B at the leaf level 201 , this could represent the entire amount of storage available for data structure, leaving the data structure only able to complete, perhaps, one or two intermediate calculations (e.g., aggregations) at level 1 .\n\nintermediate calculations e.g., aggregations\n\nthe data structure would not be able to perform any calculations as it could no longer pull in further source data into other nodes at the leaf level.\n\nFIG. 3 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\na data structure such as a multidimensional database structure, can comprise a number of node levels, such as a leaf level 301 , level 1 302 , and level 2 303 , where each node level can comprise one or more nodes.\n\nthe multidimensional database structure can be associated with a source 310 , such as a data source (e.g., a big data warehouse).\n\nsource data is loaded into leaf nodes (in this case, nodes A and B), and then aggregated up to a higher level, where such data can be kept as a partial sum in nodes at level 1 .\n\nsource data can be loaded into node A. Such source data can then be aggregated up into nodes 1 and 2 at level 1 (based upon the metadata relationships existing between node A and nodes 1 and 2 ), where such aggregations can be maintained as a partial sum values.\n\nthe source data in node A can be discarded (indicated by the greyed out node) in order to ensure space for loading source data into additional nodes at the leaf level.\n\nsource data can be loaded into node B. Such source data can then be aggregated up into nodes 1 and 2 at level 1 (based upon the metadata relationships existing between node B and nodes 1 and 2 âshown by the dashed lines), where such aggregations can be maintained as a partial sum values.\n\nthe source data in node B can be discarded (indicated by the greyed out node) in order to ensure space for loading source data into additional nodes at the leaf level.\n\na completed aggregation calculation can be stored in node 1 and level 1 , as it has received the aggregations from the two nodes on which it depends. Conversely, the aggregation calculation in node 2 at level 1 is not completed as it has not received aggregations from all of the nodes from which it depends, namely nodes C and D in addition to the received aggregations form nodes A and B.\n\nFIG. 4 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\na data structure such as a multidimensional database structure, can comprise a number of node levels, such as a leaf level 401 , level 1 402 , and level 2 403 , where each node level can comprise one or more nodes.\n\nthe multidimensional database structure can be associated with a source 410 , such as a data source (e.g., a big data warehouse).\n\nsource data is loaded into leaf nodes (in this case, nodes C and D), and then aggregated up to a higher level based upon metadata relationships between nodes at the leaf level and nodes at level 1 , where such data can be kept as a partial sum, in those nodes at level 1 .\n\nleaf nodes in this case, nodes C and D\n\nsource data can be loaded into node C.\n\nSuch source data can then be aggregated up into nodes 2 and 3 at level 1 (based upon the metadata relationships existing between node C and nodes 2 and 3 ), where such aggregations can be maintained as a partial sum values.\n\nthe source data in node C can be discarded (indicated by the greyed out node) in order to ensure space for loading source data into additional nodes at the leaf level.\n\nsource data can be loaded into node D.\n\nSuch source data can then be aggregated up into node 2 level 1 (based upon the metadata relationships existing between node D and node 2 ), where such aggregation can be maintained as a partial sum value.\n\nthe source data in node D can be discarded (indicated by the greyed out node) in order to ensure space for loading source data into additional nodes at the leaf level.\n\na completed aggregation calculation can be stored in node 1 and level 1 , since it has received the aggregations from the two nodes on which it depends. Additionally, now that node 2 has all aggregations from nodes A, B, C, and D, the node 2 can complete a partial sum calculation. Meanwhile, the aggregation calculation in node 3 at level 1 is not completed, since it has not received aggregations from all of the nodes from which it depends (i.e., nodes E and F, in addition to node C, from which node 3 is now storing a partial sum value).\n\nFIG. 5 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\na data structure such as a multidimensional database structure, can comprise a number of node levels, such as a leaf level 501 , level 1 502 , and level 2 503 , where each node level can comprise one or more nodes.\n\nthe multidimensional database structure can be associated with a source 510 , such as a data source (e.g., a big data warehouse).\n\nFIG. 5 represents a further iteration of the data structure shown in FIG. 4 , where both nodes 1 and 2 at level 1 502 have complete aggregation and calculation values.\n\nthe aggregated values and partial sums at nodes 1 and 2 at level 1 can be used for aggregation and calculation at node a at level 2 .\n\nthe aggregation calculation at node 1 at level 1 can be discarded.\n\na partial sum value can be placed into memory at node b in level 2 , the partial sum being associated with metadata indicating that the partial sum value originated at node 2 of level 1 .\n\nsuch load, aggregation and discarding of source data at the nodes of the leaf level can continue, while aggregations, partial sums, and calculations are kept at higher node levels, such aggregations, partial sums, and calculations being associated with metadata representing relationships between various nodes at different levels of the data structure.\n\nFIG. 5 only illustrates a 3 level data structure, in accordance with various embodiment, more or fewer levels are contemplated, wherein the aggregations and partial sum values at node levels higher than a leaf node level are associated with corresponding metadata relationships indicative of the source data at a leaf node in the leaf level.\n\nFIG. 6 illustrates a system for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\na multidimensional database environment operating as a database tier, can include one or more multidimensional database server system(s) 602 , each of which can include physical computer resources or components 604 (e.g., microprocessor/CPU, physical memory, network components), an operating system 606 , and one or more multidimensional database server(s) 610 (e.g., Essbase Servers).\n\nmultidimensional database server system(s) 602 each of which can include physical computer resources or components 604 (e.g., microprocessor/CPU, physical memory, network components), an operating system 606 , and one or more multidimensional database server(s) 610 (e.g., Essbase Servers).\n\na middle tier 620 can include one or more service(s), such as, for example, provider services 622 (e.g., Hyperion Provider Services), administration services 624 (e.g., Essbase Administration Services), or studio/integration services 626 (e.g., Essbase Studio/Essbase Integration Services).\n\nprovider services 622 e.g., Hyperion Provider Services\n\nadministration services 624 e.g., Essbase Administration Services\n\nstudio/integration services 626 e.g., Essbase Studio/Essbase Integration Services\n\nthe middle tier can provide access, via ODBC/JDBC 627 , 628 , or other types of interfaces, to a metadata catalog 629 , and/or one or more data source(s) 630 (for example, a relational database), for use with the multidimensional database environment.\n\ndata source(s) 630 for example, a relational database\n\nthe one or more data source(s) can also be accessed, via ODBC/JDBC 632 , or other types of interfaces, by the one or more multidimensional database server(s), for use in providing a multidimensional database.\n\na client tier 640 can include one or more multidimensional database client(s) 642 (e.g., Essbase Server clients), that enable access to a multidimensional database (such as, for example, Smart View, Spreadsheet Add-in, Smart Search, Administration Services, MaxL, XMLA, CAPI or VB API Applications, Oracle Business Intelligence Enterprise Edition Plus, or other types of multidimensional database clients).\n\nthe client tier can also include consoles, for use with services in the middle tier, such as for example an administration services console 644 , or a studio/integration services console 646 .\n\ncommunication between the client, middle, and database tiers can be provided by one or more of TCP/IP, HTTP, or other types of network communication protocols.\n\nthe multidimensional database server can integrate data from the one or more data source(s), to provide a multidimensional database, data structure, or cube(s) 650 , which can then be accessed to provide filtered information to end-users.\n\neach data value in a multidimensional database is stored in one cell of a cube; and a particular data value can be referenced by specifying its coordinates along dimensions of the cube.\n\nthe intersection of a member from one dimension, with a member from each of one or more other dimensions, represents a data value.\n\neach of the nodes at each level can be represented by a cell in a multidimensional database cube, with the relationships between nodes represented by metadata.\n\na data from a data source 630 can be loaded in nodes at the leaf level 661 either via the middle tier 620 , or directly from the data source.\n\nFIG. 7 is a flowchart of a method for load, aggregate, and batch calculation in one scan in a multidimensional database environment, in accordance with an embodiment.\n\nthe method can provide, at a computer that includes one or more microprocessors, a multidimensional database server executing on the computer, wherein the multidimensional database server supports at least one hierarchical structure of data dimensions.\n\nthe method can organize the at least one hierarchical structure of data dimensions into a plurality of levels, each of the plurality of levels comprising a subset of a plurality of nodes.\n\nthe method can load a source data into a leaf node of the plurality of nodes, the leaf node being at a lowest level of the plurality of levels, the leaf node being associated with one or more nodes of a higher level, wherein such association comprises metadata.\n\nthe method can aggregate the source data to the one or more nodes of higher level.\n\nthe method can associate the aggregations of the source data are associated with the metadata.\n\nthe method can discard the source data loaded into the leaf node.\n\nfeatures of the present invention are implemented, in whole or in part, in a computer including a processor, a storage medium such as a memory and a network card for communicating with other computers.\n\nfeatures of the invention are implemented in a distributed computing environment in which one or more clusters of computers is connected by a network such as a Local Area Network (LAN), switch fabric network (e.g. InfiniBand), or Wide Area Network (WAN).\n\nLAN Local Area Network\n\nswitch fabric network e.g. InfiniBand\n\nWAN Wide Area Network\n\nthe distributed computing environment can have all computers at a single location or have clusters of computers at different remote geographic locations connected by a WAN.\n\nfeatures of the present invention are implemented, in whole or in part, in the cloud as part of, or as a service of, a cloud computing system based on shared, elastic resources delivered to users in a self-service, metered manner using Web technologies.\n\na cloud computing system based on shared, elastic resources delivered to users in a self-service, metered manner using Web technologies.\n\nThere are five characteristics of the cloud as defined by the National Institute of Standards and Technology: on-demand self-service; broad network access; resource pooling; rapid elasticity; and measured service. See, e.g. âThe NIST Definition of Cloud Computingâ, Special Publication 800-145 (2011) which is incorporated herein by reference.\n\nCloud deployment models include: Public, Private, and Hybrid.\n\nCloud service models include Software as a Service (SaaS), Platform as a Service (PaaS), Database as a Service (DBaaS), and Infrastructure as a Service (IaaS).\n\nSaaS Software as a Service\n\nPaaS Platform as a Service\n\nDBaaS Database as a Service\n\nIaaS Infrastructure as a Service\n\nthe cloud is the combination of hardware, software, network, and web technologies which delivers shared elastic resources to users in a self-service, metered manner.\n\nthe cloud as used herein, encompasses public cloud, private cloud, and hybrid cloud embodiments, and all cloud deployment models including, but not limited to, cloud SaaS, cloud DBaaS, cloud PaaS, and cloud IaaS.\n\nfeatures of the present invention are implemented using, or with the assistance of hardware, software, firmware, or combinations thereof.\n\nfeatures of the present invention are implemented using a processor configured or programmed to execute one or more functions of the present invention.\n\nthe processor is in some embodiments a single or multi-chip processor, a digital signal processor (DSP), a system on a chip (SOC), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, state machine, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein.\n\nfeatures of the present invention may be implemented by circuitry that is specific to a given function.\n\nthe features may implemented in a processor configured to perform particular functions using instructions stored e.g. on a computer readable storage media.\n\nfeatures of the present invention are incorporated in software and/or firmware for controlling the hardware of a processing and/or networking system, and for enabling a processor and/or network to interact with other systems utilizing the features of the present invention.\n\nsoftware or firmware may include, but is not limited to, application code, device drivers, operating systems, virtual machines, hypervisors, application programming interfaces, programming languages, and execution environments/containers. Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure, as will be apparent to those skilled in the software art.\n\nthe present invention includes a computer program product which is a storage medium or computer-readable medium (media) having instructions stored thereon/in, which instructions can be used to program or otherwise configure a system such as a computer to perform any of the processes or functions of the present invention.\n\nthe storage medium or computer readable medium can include, but is not limited to, any type of disk including floppy disks, optical discs, DVD, CD-ROMs, microdrive, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, DRAMs, VRAMs, flash memory devices, magnetic or optical cards, nanosystems (including molecular memory ICs), or any type of media or device suitable for storing instructions and/or data.\n\nthe storage medium or computer readable medium is a non-transitory storage medium or non-transitory computer readable medium.\n\nLandscapes\n\nEngineering & Computer Science (AREA)\n\nTheoretical Computer Science (AREA)\n\nDatabases & Information Systems (AREA)\n\nData Mining & Analysis (AREA)\n\nPhysics & Mathematics (AREA)\n\nGeneral Engineering & Computer Science (AREA)\n\nGeneral Physics & Mathematics (AREA)\n\nSoftware Systems (AREA)\n\nInformation Retrieval, Db Structures And Fs Structures Therefor (AREA)\n\nUS16/023,812 2017-09-29 2018-06-29 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment Active 2038-07-08 US11042569B2 (en)\n\nPriority Applications (6)\n\nApplication Number Priority Date Filing Date Title US16/023,812 US11042569B2 (en) 2017-09-29 2018-06-29 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment JP2019552229A JP6827127B2 (ja) 2017-09-29 2018-07-30 å¤æ¬¡å ãã¼ã¿ãã¼ã¹ç°å¢ã«ããã¦ï¼åã®ã¹ã­ã£ã³ã§ã­ã¼ããéç´ãããã³ãããè¨ç®ãè¡ãªãããã®ã·ã¹ãã ããã³æ¹æ³ CN201880007607.9A CN110199273B (zh) 2017-09-29 2018-07-30 ç¨äºå¨å¤ç»´æ°æ®åºç¯å¢ä¸­çä¸æ¬¡æ«æä¸­è¿è¡å è½½ãèååæ¹éè®¡ç®çç³»ç»åæ¹æ³ PCT/US2018/044425 WO2019067079A1 (en) 2017-09-29 2018-07-30 SYSTEM AND METHOD FOR LOAD, AGGREGATE AND BATCH CALCULATION IN SINGLE SCAN IN A MULTIDIMENSIONAL DATABASE ENVIRONMENT EP18755370.6A EP3688607A1 (en) 2017-09-29 2018-07-30 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment US17/352,793 US11789978B2 (en) 2017-09-29 2021-06-21 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment\n\nApplications Claiming Priority (2)\n\nApplication Number Priority Date Filing Date Title US201762565519P 2017-09-29 2017-09-29 US16/023,812 US11042569B2 (en) 2017-09-29 2018-06-29 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment\n\nRelated Child Applications (1)\n\nApplication Number Title Priority Date Filing Date US17/352,793 Continuation US11789978B2 (en) 2017-09-29 2021-06-21 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment\n\nPublications (2)\n\nPublication Number Publication Date US20190102446A1 US20190102446A1 (en) 2019-04-04 US11042569B2 true US11042569B2 (en) 2021-06-22\n\nFamily\n\nID=65897996\n\nFamily Applications (2)\n\nApplication Number Title Priority Date Filing Date US16/023,812 Active 2038-07-08 US11042569B2 (en) 2017-09-29 2018-06-29 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment US17/352,793 Active 2038-07-11 US11789978B2 (en) 2017-09-29 2021-06-21 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment\n\nFamily Applications After (1)\n\nApplication Number Title Priority Date Filing Date US17/352,793 Active 2038-07-11 US11789978B2 (en) 2017-09-29 2021-06-21 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment\n\nCountry Status (5)\n\nCountry Link US (2) US11042569B2 (zh) EP (1) EP3688607A1 (zh) JP (1) JP6827127B2 (zh) CN (1) CN110199273B (zh) WO (1) WO2019067079A1 (zh)\n\nCited By (1)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US11789978B2 (en) 2017-09-29 2023-10-17 Oracle International Corporation System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment\n\nFamilies Citing this family (18)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US10467251B2 (en) 2015-10-23 2019-11-05 Oracle International Corporation System and method for automatic dependency analysis for use with a multidimensional database US10318498B2 (en) 2015-10-23 2019-06-11 Oracle International Corporation System and method for parallel support of multidimensional slices with a multidimensional database US10936574B2 (en) 2015-10-23 2021-03-02 Oracle International Corporation System and method for use of lock-less techniques with a multidimensional database US11520760B2 (en) 2015-10-23 2022-12-06 Oracle International Corporation System and method for providing bottom-up aggregation in a multidimensional database environment US10733155B2 (en) 2015-10-23 2020-08-04 Oracle International Corporation System and method for extracting a star schema from tabular data for use in a multidimensional database environment US10838982B2 (en) 2015-10-23 2020-11-17 Oracle International Corporation System and method for aggregating values through risk dimension hierarchies in a multidimensional database environment US10346435B2 (en) 2015-10-23 2019-07-09 Oracle International Corporation System and method for improved performance in a multidimensional database environment US11226987B2 (en) 2015-10-23 2022-01-18 Oracle International Corporation System and method for in-place data writes to reduce fragmentation in a multidimensional database environment US10909134B2 (en) 2017-09-01 2021-02-02 Oracle International Corporation System and method for client-side calculation in a multidimensional database environment US10983972B2 (en) 2017-09-08 2021-04-20 Oracle International Corporation System and method for slowing changing dimension and metadata versioning in a multidimensional database environment US11593402B2 (en) 2017-09-29 2023-02-28 Oracle International Corporation System and method for enabling multiple parents with weights in a multidimensional database environment US11422881B2 (en) 2018-07-19 2022-08-23 Oracle International Corporation System and method for automatic root cause analysis and automatic generation of key metrics in a multidimensional database environment US11188554B2 (en) 2018-07-19 2021-11-30 Oracle International Corporation System and method for real time data aggregation in a virtual cube in a multidimensional database environment US11200223B2 (en) 2018-10-18 2021-12-14 Oracle International Corporation System and method for dependency analysis in a multidimensional database environment USD959477S1 (en) 2019-12-20 2022-08-02 Sap Se Display system or portion thereof with a virtual three-dimensional animated graphical user interface USD959476S1 (en) 2019-12-20 2022-08-02 Sap Se Display system or portion thereof with a virtual three-dimensional animated graphical user interface USD959447S1 (en) 2019-12-20 2022-08-02 Sap Se Display system or portion thereof with a virtual three-dimensional animated graphical user interface US11205296B2 (en) * 2019-12-20 2021-12-21 Sap Se 3D data exploration using interactive cuboids\n\nCitations (56)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US5574952A (en) 1994-05-11 1996-11-12 International Business Machines Corporation Data storage system and method for operating a disk controller including allocating disk space for compressed data JPH09265479A (ja) 1996-03-29 1997-10-07 Hitachi Ltd å¤æ¬¡å ãã¼ã¿å¦çæ¹æ³ JPH10301935A (ja) 1997-04-22 1998-11-13 Mitsubishi Electric Corp ãã¼ã¿å¦çæ¹æ³ US5915129A (en) 1994-06-27 1999-06-22 Microsoft Corporation Method and system for storing uncompressed data in a memory cache that is destined for a compressed file system US6161105A (en) 1994-11-21 2000-12-12 Oracle Corporation Method and apparatus for multidimensional database using binary hyperspatial code US20020029207A1 (en) 2000-02-28 2002-03-07 Hyperroll, Inc. Data aggregation server for managing a multi-dimensional database and database management system having data aggregation server integrated therein US20020194163A1 (en) * 2001-05-30 2002-12-19 Hopeman Albert A. Methods and apparatus for aggregating sparse data US20030005420A1 (en) 2001-06-29 2003-01-02 Somnath Ghosh Alias-free test for dynamic array structures US6574720B1 (en) 1997-05-30 2003-06-03 Oracle International Corporation System for maintaining a buffer pool US6629102B1 (en) 2000-07-28 2003-09-30 International Business Machines Corporation Efficiently updating a key table during outline restructure of a multi-dimensional database US20040054858A1 (en) 2002-09-18 2004-03-18 Oracle Corporation Method and mechanism for on-line data compression and in-place updates US6766325B1 (en) 1999-12-02 2004-07-20 Microsoft Corporation System and method for maintaining data for performing âwhat ifâ analysis US20050071349A1 (en) 2003-08-11 2005-03-31 Jordan Philip Martin Method and apparatus for accessing multidimensional data US20050262108A1 (en) * 2004-05-07 2005-11-24 Interlace Systems, Inc. Methods and apparatus for facilitating analysis of large data sets US20060010159A1 (en) 2004-07-09 2006-01-12 Microsoft Corporation Custom grouping for dimension members JP2006065797A (ja) 2004-08-30 2006-03-09 Canon Inc ãã¼ã¿å¦çæ¹æ³ããã¼ã¿ç®¡çæ¹æ³ãåã³ã³ã³ãã¥ã¼ã¿ãã­ã°ã©ã US20060085742A1 (en) 1999-05-28 2006-04-20 Microstrategy, Incorporated System and method for network user interface OLAP report formatting US20060106769A1 (en) 2004-11-12 2006-05-18 Gibbs Kevin A Method and system for autocompletion for languages having ideographs and phonetic characters US7133876B2 (en) * 2001-06-12 2006-11-07 The University Of Maryland College Park Dwarf cube architecture for reducing storage sizes of multidimensional data US20060271568A1 (en) 2005-05-25 2006-11-30 Experian Marketing Solutions, Inc. Distributed and interactive database architecture for parallel and asynchronous data processing of complex data and for real-time query processing US20070027674A1 (en) 2005-06-20 2007-02-01 Future Route Limited Analytical system for discovery and generation of rules to predict and detect anomalies in data and financial fraud JP2007052754A (ja) 2005-08-18 2007-03-01 Shizuo Nagashima ãã¼ã¿åæéè¨è¡¨ç¤ºå¦çå¶å¾¡è£ ç½® US20070061344A1 (en) 2005-09-09 2007-03-15 Microsoft Corporation Converting structured reports to formulas US20070088691A1 (en) 2005-10-14 2007-04-19 Microsoft Corporation Multidimensional cube functions US20070094668A1 (en) 2005-10-17 2007-04-26 Jacquot Bryan J Method and apparatus for dynamically allocating resources used by software US7392242B1 (en) 2004-02-27 2008-06-24 Hyperion Solutions Corporation Query costing in a multidimensional database US20080288524A1 (en) 2007-05-18 2008-11-20 Microsoft Corporation Filtering of multi attribute data via on-demand indexing US20090030915A1 (en) 2007-07-25 2009-01-29 Cognos Incorporated System and method for determining driving factor in a data cube US20090037499A1 (en) 2007-07-30 2009-02-05 Oracle International Corporation Method and mechanism for implementing dynamic space management for large objects US20090249125A1 (en) 2008-04-01 2009-10-01 Microsoft Corporation Database querying US20090248651A1 (en) 2008-03-31 2009-10-01 Business Objects, S.A. Apparatus and method for maintaining metadata version awareness during set evaluation for olap hierarchies US20090276705A1 (en) 2008-05-05 2009-11-05 Matsushita Electric Industrial Co., Ltd. System architecture and process for assessing multi-perspective multi-context abnormal behavior US20100174879A1 (en) 2009-01-06 2010-07-08 Netapp, Inc. Estimating space in a compressed volume US8156083B2 (en) 2005-12-01 2012-04-10 Oracle International Corporation Database system that provides for history-enabled tables US20120116850A1 (en) * 2010-11-10 2012-05-10 International Business Machines Corporation Causal modeling of multi-dimensional hierachical metric cubes US20120296883A1 (en) 2010-08-30 2012-11-22 Oracle International Corporation Techniques For Automatic Data Placement With Compression And Columnar Storage US20140046920A1 (en) 2012-08-10 2014-02-13 Ca, Inc. System and Method for Analyzing Available Space in Data Blocks US20140052764A1 (en) 2012-08-15 2014-02-20 Amir Meir Michael File Storage System Based on Coordinated Exhaustible and Non-Exhaustible Storage US20140122413A1 (en) 2012-10-29 2014-05-01 Paris Technologies, Inc. Bulk read and write between multi-dimensional data structures US20150186500A1 (en) 2013-12-27 2015-07-02 International Business Machines Corporation Condensing hierarchical data US20160232207A1 (en) 2015-02-05 2016-08-11 Robert Brunel Hierarchy modeling and query US20170116290A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for use of a dynamic flow in a multidimensional database environment US20170116311A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for use of automatic slice merge in a multidimensional database environment US20170116032A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for parallel support of multidimensional slices with a multidimensional database US20170116309A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for automatic dependency analysis for use with a multidimensional database US20170116310A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for improved performance in a multidimensional database environment US20170116215A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for in-place data writes to reduce fragmentation in a multidimensional database environment US20170116312A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for supporting queries having sub-select constructs in a multidimensional database environment US20170116313A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for supporting large queries in a multidimensional database environment US20170308315A1 (en) 2014-09-25 2017-10-26 Hewlett Packard Enerprise Development Lp Storage space allocation US10083195B2 (en) 2014-04-24 2018-09-25 Futurewei Technologies, Inc. System and method for composing a multidimensional index key in data blocks US20190073366A1 (en) 2017-09-01 2019-03-07 Oracle International Corporation System and method for client-side calculation in a multidimensional database environment US20190079959A1 (en) 2017-09-08 2019-03-14 Oracle International Corporation System and method for slowing changing dimension and metadata versioning in a multidimensional database environment US20190102445A1 (en) * 2017-09-29 2019-04-04 Oracle International Corporation System and method for enabling multiple parents with weights in a multidimensional database environment US20190102447A1 (en) * 2017-09-29 2019-04-04 Oracle International Corporation System and method for metadata sandboxing and what-if analysis in a multidimensional database environment US20190102446A1 (en) * 2017-09-29 2019-04-04 Oracle International Corporation System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment\n\nFamily Cites Families (8)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US6542895B1 (en) * 1999-08-30 2003-04-01 International Business Machines Corporation Multi-dimensional restructure performance when adding or removing dimensions and dimensions members US6965903B1 (en) * 2002-05-07 2005-11-15 Oracle International Corporation Techniques for managing hierarchical data with link attributes in a relational database US7702718B2 (en) 2004-03-30 2010-04-20 Cisco Technology, Inc. Providing enterprise information US7490106B2 (en) * 2004-07-09 2009-02-10 Microsoft Corporation Multidimensional database subcubes US7593955B2 (en) * 2004-11-30 2009-09-22 International Business Machines Corporation Generation of aggregatable dimension information within a multidimensional enterprise software system US7792784B2 (en) 2007-05-31 2010-09-07 International Business Machines Corporation Streaming multidimensional data by bypassing multidimensional query processor US9218408B2 (en) * 2010-05-27 2015-12-22 Oracle International Corporation Method for automatically creating a data mart by aggregated data extracted from a business intelligence server US20150163223A1 (en) * 2013-12-09 2015-06-11 International Business Machines Corporation Managing Resources In A Distributed Computing Environment\n\n2018\n\n2018-06-29 US US16/023,812 patent/US11042569B2/en active Active\n\n2018-07-30 WO PCT/US2018/044425 patent/WO2019067079A1/en unknown\n\n2018-07-30 CN CN201880007607.9A patent/CN110199273B/zh active Active\n\n2018-07-30 JP JP2019552229A patent/JP6827127B2/ja active Active\n\n2018-07-30 EP EP18755370.6A patent/EP3688607A1/en active Pending\n\n2021\n\n2021-06-21 US US17/352,793 patent/US11789978B2/en active Active\n\nPatent Citations (65)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US5574952A (en) 1994-05-11 1996-11-12 International Business Machines Corporation Data storage system and method for operating a disk controller including allocating disk space for compressed data US5915129A (en) 1994-06-27 1999-06-22 Microsoft Corporation Method and system for storing uncompressed data in a memory cache that is destined for a compressed file system US6161105A (en) 1994-11-21 2000-12-12 Oracle Corporation Method and apparatus for multidimensional database using binary hyperspatial code JPH09265479A (ja) 1996-03-29 1997-10-07 Hitachi Ltd å¤æ¬¡å ãã¼ã¿å¦çæ¹æ³ US5864857A (en) * 1996-03-29 1999-01-26 Hitachi, Ltd. Method for processing multi-dimensional data JPH10301935A (ja) 1997-04-22 1998-11-13 Mitsubishi Electric Corp ãã¼ã¿å¦çæ¹æ³ US6574720B1 (en) 1997-05-30 2003-06-03 Oracle International Corporation System for maintaining a buffer pool US20060085742A1 (en) 1999-05-28 2006-04-20 Microstrategy, Incorporated System and method for network user interface OLAP report formatting US6766325B1 (en) 1999-12-02 2004-07-20 Microsoft Corporation System and method for maintaining data for performing âwhat ifâ analysis US20020029207A1 (en) 2000-02-28 2002-03-07 Hyperroll, Inc. Data aggregation server for managing a multi-dimensional database and database management system having data aggregation server integrated therein US6629102B1 (en) 2000-07-28 2003-09-30 International Business Machines Corporation Efficiently updating a key table during outline restructure of a multi-dimensional database US20020194163A1 (en) * 2001-05-30 2002-12-19 Hopeman Albert A. Methods and apparatus for aggregating sparse data US7133876B2 (en) * 2001-06-12 2006-11-07 The University Of Maryland College Park Dwarf cube architecture for reducing storage sizes of multidimensional data US20030005420A1 (en) 2001-06-29 2003-01-02 Somnath Ghosh Alias-free test for dynamic array structures US20040054858A1 (en) 2002-09-18 2004-03-18 Oracle Corporation Method and mechanism for on-line data compression and in-place updates US20060212672A1 (en) 2002-09-18 2006-09-21 Sashikanth Chandrasekaran Method and mechanism for on-line data compression and in-place updates US20050071349A1 (en) 2003-08-11 2005-03-31 Jordan Philip Martin Method and apparatus for accessing multidimensional data US7392242B1 (en) 2004-02-27 2008-06-24 Hyperion Solutions Corporation Query costing in a multidimensional database US20050262108A1 (en) * 2004-05-07 2005-11-24 Interlace Systems, Inc. Methods and apparatus for facilitating analysis of large data sets US20060010159A1 (en) 2004-07-09 2006-01-12 Microsoft Corporation Custom grouping for dimension members JP2006065797A (ja) 2004-08-30 2006-03-09 Canon Inc ãã¼ã¿å¦çæ¹æ³ããã¼ã¿ç®¡çæ¹æ³ãåã³ã³ã³ãã¥ã¼ã¿ãã­ã°ã©ã US20060106769A1 (en) 2004-11-12 2006-05-18 Gibbs Kevin A Method and system for autocompletion for languages having ideographs and phonetic characters US20060271568A1 (en) 2005-05-25 2006-11-30 Experian Marketing Solutions, Inc. Distributed and interactive database architecture for parallel and asynchronous data processing of complex data and for real-time query processing US20070027674A1 (en) 2005-06-20 2007-02-01 Future Route Limited Analytical system for discovery and generation of rules to predict and detect anomalies in data and financial fraud JP2007052754A (ja) 2005-08-18 2007-03-01 Shizuo Nagashima ãã¼ã¿åæéè¨è¡¨ç¤ºå¦çå¶å¾¡è£ ç½® US20070061344A1 (en) 2005-09-09 2007-03-15 Microsoft Corporation Converting structured reports to formulas US20070088691A1 (en) 2005-10-14 2007-04-19 Microsoft Corporation Multidimensional cube functions US20070094668A1 (en) 2005-10-17 2007-04-26 Jacquot Bryan J Method and apparatus for dynamically allocating resources used by software US8156083B2 (en) 2005-12-01 2012-04-10 Oracle International Corporation Database system that provides for history-enabled tables US20080288524A1 (en) 2007-05-18 2008-11-20 Microsoft Corporation Filtering of multi attribute data via on-demand indexing US20090030915A1 (en) 2007-07-25 2009-01-29 Cognos Incorporated System and method for determining driving factor in a data cube US20090037499A1 (en) 2007-07-30 2009-02-05 Oracle International Corporation Method and mechanism for implementing dynamic space management for large objects US20090248651A1 (en) 2008-03-31 2009-10-01 Business Objects, S.A. Apparatus and method for maintaining metadata version awareness during set evaluation for olap hierarchies US20090249125A1 (en) 2008-04-01 2009-10-01 Microsoft Corporation Database querying US20090276705A1 (en) 2008-05-05 2009-11-05 Matsushita Electric Industrial Co., Ltd. System architecture and process for assessing multi-perspective multi-context abnormal behavior US20100174879A1 (en) 2009-01-06 2010-07-08 Netapp, Inc. Estimating space in a compressed volume US20120296883A1 (en) 2010-08-30 2012-11-22 Oracle International Corporation Techniques For Automatic Data Placement With Compression And Columnar Storage US20120116850A1 (en) * 2010-11-10 2012-05-10 International Business Machines Corporation Causal modeling of multi-dimensional hierachical metric cubes US10360527B2 (en) * 2010-11-10 2019-07-23 International Business Machines Corporation Casual modeling of multi-dimensional hierarchical metric cubes US20140046920A1 (en) 2012-08-10 2014-02-13 Ca, Inc. System and Method for Analyzing Available Space in Data Blocks US20140052764A1 (en) 2012-08-15 2014-02-20 Amir Meir Michael File Storage System Based on Coordinated Exhaustible and Non-Exhaustible Storage US20140122413A1 (en) 2012-10-29 2014-05-01 Paris Technologies, Inc. Bulk read and write between multi-dimensional data structures US20150186500A1 (en) 2013-12-27 2015-07-02 International Business Machines Corporation Condensing hierarchical data US10083195B2 (en) 2014-04-24 2018-09-25 Futurewei Technologies, Inc. System and method for composing a multidimensional index key in data blocks US20170308315A1 (en) 2014-09-25 2017-10-26 Hewlett Packard Enerprise Development Lp Storage space allocation US20160232207A1 (en) 2015-02-05 2016-08-11 Robert Brunel Hierarchy modeling and query US20170116215A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for in-place data writes to reduce fragmentation in a multidimensional database environment US10318498B2 (en) 2015-10-23 2019-06-11 Oracle International Corporation System and method for parallel support of multidimensional slices with a multidimensional database US20170116309A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for automatic dependency analysis for use with a multidimensional database US20170116312A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for supporting queries having sub-select constructs in a multidimensional database environment US20170116313A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for supporting large queries in a multidimensional database environment US20170116281A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for providing bottom-up aggregation in a multidimensional database environment US20170116032A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for parallel support of multidimensional slices with a multidimensional database US20170116311A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for use of automatic slice merge in a multidimensional database environment US10467251B2 (en) 2015-10-23 2019-11-05 Oracle International Corporation System and method for automatic dependency analysis for use with a multidimensional database US20190286638A1 (en) * 2015-10-23 2019-09-19 Oracle International Corporation System and method for improved performance in a multidimensional database environment US20190258612A1 (en) * 2015-10-23 2019-08-22 Oracle International Corporation System and method for parallel support of multidimensional slices with a multidimensional database US20170116290A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for use of a dynamic flow in a multidimensional database environment US10346435B2 (en) 2015-10-23 2019-07-09 Oracle International Corporation System and method for improved performance in a multidimensional database environment US20170116310A1 (en) 2015-10-23 2017-04-27 Oracle International Corporation System and method for improved performance in a multidimensional database environment US20190073366A1 (en) 2017-09-01 2019-03-07 Oracle International Corporation System and method for client-side calculation in a multidimensional database environment US20190079959A1 (en) 2017-09-08 2019-03-14 Oracle International Corporation System and method for slowing changing dimension and metadata versioning in a multidimensional database environment US20190102446A1 (en) * 2017-09-29 2019-04-04 Oracle International Corporation System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment US20190102447A1 (en) * 2017-09-29 2019-04-04 Oracle International Corporation System and method for metadata sandboxing and what-if analysis in a multidimensional database environment US20190102445A1 (en) * 2017-09-29 2019-04-04 Oracle International Corporation System and method for enabling multiple parents with weights in a multidimensional database environment\n\nNon-Patent Citations (25)\n\n* Cited by examiner, â Cited by third party Title Chen, et al. \"Training Deep Nets with Sublinear Memory Cost\", Cornell University Library, Ithaca, NY, Apr. 21, 2016, 12 pages. Driscoll, James R. et al., \"Making Data Structures Persistent\", Journal of Computer and System Sciences, vol. 38, No. 1, Feb. 1989, Printed in Belgium, Copyright Â© 1989, 39 pages. Dynamic Flow process definition Nov. 26, 2018, google.com, https://www.google.com/search?biw=1920&bih=1076&ei=njv8W_CJD4mizwK_l4gCQ&q=%22dynamic+flow+process%22+definition&oq=%22dynamic+flow+process%22+definition&gs l=psy-ab .3 ... 38876 .39886 .. 40199 ... 0 .0 .. 0. 76.437 .8 ...... 0 .... 1 .. gws-.viz ....... Oi71j0i7i30j0i30j0i8i30. Dynamic Flow process OLAP Nov. 26, 2018, google.com, https://www.google.com/search?biw=1920&bih=1076&ei=njv8W_CJD4mizwK_l4gCQ&q=%22dynamic+flow+process%22+definition&oq=%22dynamic+flow+process%22+definition&gs l=psy-ab .3 ... 38876 .39886 .. 40199 ... 0 .0 .. 0. 76.437 .8 ...... 0 .... 1 .. gws-.viz ....... Oi71j0i7i30j0i30j0i8i30j33i10. EPM Information Development Team, OracleÂ® Essbase Database Administrator's Guide, Release 11.1.2.2.100, Updated Dec. 2013, Copyright Â© 1996, 2013, 1138 pages. EPM Information Development Team, OracleÂ® Essbase Release 11.1.1, Database Administrator's Guide, Copyright Â© 1996, 2008, 1182 pages. EPM Information Development Team, OracleÂ® Essbase, Technical Reference, Release 11.1.2.2.100, Copyright Â© 1996, 2012, 1402 pages. Essbase Information Development Team, OracleÂ® Cloud, Technical Reference for Oracle Analytics CloudâEssbase, E70189-04, Sep. 2017, Copyright Â© 1996, 2017, 1044 pages. Iankovszky, Andra et al., Edgewater Ranzal, Oracle Platinum Consulting Partner, \"The Uncharted Territory Ready to be Discovered: Hybrid Essbase\", Hyperion UKOUG, Jun. 18, 2015, 24 pages. Intellectual Property India, India Patent Office, Examination Report under sections 12 & 13 of the Patents Act, 1970 and the Patents Rules, 2003 dated Apr. 20, 2021 for Indian Application No. 201947023965, 7 pages. Japan Patent Office, Notice of Reasons for Refusal (Translated) dated Sep. 8, 2020 for Japanese Patent Application No. 2019-552229, 6 pages. Larimer, Mike et al., Oracle, OAC Essbase Hybrid Block Storage Option Performance Tuning, White Paper, OracleÂ©, Jun. 11, 2018, 24 pages. Marchal, et al. \"Scheduling tree-shaped task graphs to minimize memory and makespan\", 2013 IEEE 27th International Symposium on Parallel & Distributed Processing, May 20, 2013, pp. 839-850, 12 pages. Notification of Transmittal of the International Search Report and the Written Opinion of the International Searching Authority for PCT Application No. PCT/US2018/044425, dated Oct. 18, 2018, 12 pages. Oracle, OracleÂ® Cloud, Administering Oracle Analytics CloudâEssbase, Copyright Â© 1996, 2017, 703 pages. Oracle, OracleÂ® Cloud, Oracle Cloud Administering Oracle Essbase Cloud, Copyright Â© 1996, 2016, 632 pages. Russakovsky, Alexander; \"Hopping over Big Data: Accelerating Ad-hoc OLAP Queries with Grasshopper Algorithms\" published Feb. 26, 2015, 30 pages. Sethi, Ravi, \"Complete Register Allocation Problems\", Siam Journal on Computing, Society for Industrial and Applied Mathematics, vol. 4, No. 3, Sep. 1, 1975, pp. 226-248, 24 pages. Turrell, Jake, \"Introduction to Essbase Hybrid Aggregation Mode\", Mar. 4, 2015, 12 pages, retreived on Jan. 15, 2020 from: <http://turrellconsulting.com/blog/?s=introduction+to+essbase+hybrid+aggregation+mode&searchsubmit=U>. Vivien, et al., \"Scheduling tree-shaped task graphs to minimize memory and makespan\", CCDSC 2014, Sep. 2014, 64 pages. Xin, et al. \"Star-Cubing: Computing Iceberg Cubes by Top-Down and Bottom-Up Integration\", Proceedings of the 29th International Conference on Very Large Databases, Sep. 9-12, 2003, pp. 476-487, 12 pages.\n\nCited By (1)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US11789978B2 (en) 2017-09-29 2023-10-17 Oracle International Corporation System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment\n\nAlso Published As\n\nPublication number Publication date CN110199273B (zh) 2023-03-10 US11789978B2 (en) 2023-10-17 WO2019067079A1 (en) 2019-04-04 JP2020512641A (ja) 2020-04-23 EP3688607A1 (en) 2020-08-05 CN110199273A (zh) 2019-09-03 US20190102446A1 (en) 2019-04-04 JP6827127B2 (ja) 2021-02-10 US20210311964A1 (en) 2021-10-07\n\nSimilar Documents\n\nPublication Publication Date Title US11789978B2 (en) 2023-10-17 System and method for load, aggregate and batch calculation in one scan in a multidimensional database environment US11704294B2 (en) 2023-07-18 System and method for slowly changing dimension and metadata versioning in a multidimensional database environment US11531662B2 (en) 2022-12-20 System and method for use of a dynamic flow in a multidimensional database environment US20210240735A1 (en) 2021-08-05 System and method for supporting large queries in a multidimensional database environment US11734293B2 (en) 2023-08-22 System and method for client-side calculation in a multidimensional database environment US20190102447A1 (en) 2019-04-04 System and method for metadata sandboxing and what-if analysis in a multidimensional database environment US11797496B2 (en) 2023-10-24 System and method for parallel support of multidimensional slices with a multidimensional database US11593402B2 (en) 2023-02-28 System and method for enabling multiple parents with weights in a multidimensional database environment US10628451B2 (en) 2020-04-21 System and method for supporting queries having sub-select constructs in a multidimensional database environment US20170116311A1 (en) 2017-04-27 System and method for use of automatic slice merge in a multidimensional database environment US11422881B2 (en) 2022-08-23 System and method for automatic root cause analysis and automatic generation of key metrics in a multidimensional database environment US11768825B2 (en) 2023-09-26 System and method for dependency analysis in a multidimensional database environment US11188554B2 (en) 2021-11-30 System and method for real time data aggregation in a virtual cube in a multidimensional database environment\n\nLegal Events\n\nDate Code Title Description 2018-06-29 FEPP Fee payment procedure\n\nFree format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY\n\n2018-07-18 AS Assignment\n\nOwner name: ORACLE INTERNATIONAL CORPORATION, CALIFORNIA\n\nFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RAMAIYER, KUMAR;REEL/FRAME:046389/0960\n\nEffective date: 20180702\n\n2018-07-31 STPP Information on status: patent application and granting procedure in general\n\nFree format text: DOCKETED NEW CASE - READY FOR EXAMINATION\n\n2020-03-17 STPP Information on status: patent application and granting procedure in general\n\nFree format text: NON FINAL ACTION MAILED\n\n2020-07-01 STPP Information on status: patent application and granting procedure in general\n\nFree format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER\n\n2020-09-09 STPP Information on status: patent application and granting procedure in general\n\nFree format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS\n\n2021-02-16 STPP Information on status: patent application and granting procedure in general\n\nFree format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS\n\n2021-05-18 STPP Information on status: patent application and granting procedure in general\n\nFree format text: PUBLICATIONS -- ISSUE FEE PAYMENT RECEIVED\n\n2021-05-19 STPP Information on status: patent application and granting procedure in general\n\nFree format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED\n\nFree format text: AWAITING TC RESP, ISSUE FEE PAYMENT VERIFIED\n\n2021-05-26 STPP Information on status: patent application and granting procedure in general\n\nFree format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED\n\n2021-06-02 STCF Information on status: patent grant\n\nFree format text: PATENTED CASE"
    }
}