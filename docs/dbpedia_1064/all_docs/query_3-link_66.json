{
    "id": "dbpedia_1064_3",
    "rank": 66,
    "data": {
        "url": "https://iceb.org/monbas.html",
        "read_more_link": "",
        "language": "en",
        "title": "International Council on English Braille (ICEB), UEBC Monographs, UEBC",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "UEBC--The Basics\n\nJuly 2002\n\nQ. What's the basic idea behind the Unified English Braille Code?\n\nA. The most important goal is to enable a person who uses braille for literary material to go on to use the same braille code for technical material, simply building new knowledge upon the old without having to stop to learn a new braille code in the process. In other words, just like a user of print, a user of UEBC can proceed seamlessly from one subject area to another, learning only those symbols that are newly encountered in the new subject but not having to learn different braille representations for symbols that are already familiar.\n\nQ. Can you give an example of where this is better than the present system of multiple codes as used in America?\n\nA. The notation for \"four dollars,\" written in literary code, is\n\n4#d\n\nwhereas in Nemeth math code it is written\n\n@s4\n\nand in American computer-notation code it is written\n\n$4\n\nIn UEBC, regardless of the context, it would always be written the same way, namely:\n\n@s#d\n\nQ. Why did you choose to have the digits in the upper portion of the cell, as in literary code? Don't lower numbers work better for math and science?\n\nA. After a lengthy and very careful evaluation of these two systems, and also a third system used commonly in Europe, the design committee concluded that the upper-number system works best overall, even for math in a general sense, despite the merits of the lower-number system in certain limited technical cases. One of the main reasons is that, whereas upper numbers clash with the letters a through j and so give rise to \"indicator clutter\" when such letters immediately follow, the same problem occurs when many common punctuation marks immediately follow lower numbers--and that the latter situation is far more common, even in math books. There are also other important reasons, spelled out in greater detail in a separate monograph in this series. In the end, the committee concluded that Louis Braille, the originator of the braille system as we know it, had made the right decision for a general-purpose code.\n\nQ. Again referring to the \"four dollars\" example, why did you decide upon the \"dot-4 s\" form for the dollar sign?\n\nA. This is one of many instances where symbols were assigned in a \"family\" pattern. The dollar sign is in fact a letter \"S,\" modified with bars in the same way that a yen sign is a modified Y, a euro sign is a modified E, and so on. So this same pattern is followed for all of them--a yen sign is a dot-4 y, a euro sign is a dot-4 e, etc.\n\nQ. Can you give another example of the \"family\" principle?\n\nA. In UEBC, as in any code capable of handling technical notation, it is necessary to have distinct left and right parentheses. The assignments for parentheses, square brackets, curly braces and angle brackets all follow a family pattern:\n\nLeft parenthesis: \"<\n\nRight parenthesis: \">\n\nLeft square bracket: .<\n\nRight square bracket: .>\n\nLeft curly brace: _<\n\nRight curly brace: _>\n\nLeft angle bracket or less-than sign: @<\n\nRight angle bracket or greater-than sign: @>\n\nQ. So there are some changes from current literary braille, then?\n\nA. Yes, but very few. When reading general literature, most current readers will hardly notice the difference. And that also ensures that existing material in today's literary braille will remain readable to users of UEBC in the future.\n\nQ. Is there some reason UEBC should be based upon literary code? Why not start with one of the technical codes?\n\nA. The literary code is the only code that every braille reader already knows. Also, the great majority of existing braille is in literary code, and more of that literature has enduring relevance whereas technical works tend to become obsolete more quickly. Consequently, basing UEBC on the literary code maximizes the preservation of existing skills and materials, as well as the traditional \"look and feel\" of braille.\n\nQ. Can you give me some simple examples? What does \"two plus three equals five\" look like?\n\nA.\n\n#b \"6 #c \"7 #e\n\nOr, if you prefer your math unspaced:\n\n#b\"6#c\"7#e\n\nQ. Where did the signs for plus and equals come from?\n\nA. Both symbols have the \"prefix-root\" pattern typical of UEBC multi-cell signs. In both cases the root was the original choice of Louis Braille, in the lower position no doubt to contrast with the numbers--or letters in other cases--that are the principal elements of the equation. Those same symbols are still commonly used in math braille systems for other languages.\n\nQ. Why add the dot 5 prefix?\n\nA. We want to be sure that the plus sign is not confused with an exclamation mark, nor the equals sign with \"were\".\n\nQ. How can you tell when two cells are to be read as one symbol, rather than two separate symbols?\n\nA. In UEBC, there are precise rules for symbol formation, so that you can always tell where a symbol begins and ends, regardless of context. So, even if you don't happen to know what a symbol means, you know exactly what to look up in a symbol list. There is never any ambiguity as to the interpretation of a symbol; that is a basic principle of UEBC.\n\nQ. Is ambiguity all that important to a human reader? In cases of ambiguity with current codes, can't the meaning usually be figured out from context?\n\nA. If there is adequate context present, and if the reader is already familiar enough with the general subject area to know what makes sense and what does not, it is true that ambiguity can often be resolved. But those conditions do not always apply--and are even less likely to apply in technical notation. And although reader misunderstanding is the main potential problem with ambiguous braille codes, it is not the only problem. Computer programs can also be misled by ambiguity, and wind up processing information incorrectly.\n\nQ. Can you give an example?\n\nA. Let's say you are one of those rare computer users who are really happy with your operating system. Hoping to convince a sighted colleague of its merits, you write a braille paper where you abbreviate \"operating system\" to o, period, s, period in the sentence\n\n,i re,y l my o4s4\n\nYou then use a computer program to translate the paper to print. Later your colleague, unaware of the braille ambiguity, wonders what you mean by (using grade 1 here for clarity):\n\n,i really like my odds4\n\nQ. I don't very often run into such cases.\n\nA. Nuisance-level mistranslations that are traceable to braille ambiguities are actually quite common--although, granted, they usually just appear as strange but obvious \"typos\" in the print and so generally go unmentioned. The point is, they are quite unnecessary. If you are still not convinced that ambiguity is worth addressing, or would like to know more about it, there is a separate monograph in this series, on that subject.\n\nQ. I've heard that UEBC's upper numbers and two-cell signs lead to massive increases in the bulk of braille, as compared with current codes. Is this so?\n\nA. No, it isn't. Some texts come out longer, some shorter, most about the same. Instances of the first effect can easily be exaggerated by selective examples. Of course it is true that a code designed specifically to minimize cell count when writing a certain kind of notation is likely to be more efficient in that sense for just that purpose. But that ignores the fact that there are other important kinds of efficiency--in dot density, reading speed and ease of comprehension, for instance--and also ignores the issue of consistent readability in all kinds of notation.\n\nQ. Can you give some examples of what you mean?\n\nA. First, Consider the algebraic notation for \"eight plus two x equals zero\". In today's American math code (Nemeth code), this would be written\n\n#8+2x .k #0\n\nIn UEBC, it would be written:\n\n#h\"6#bx \"7 #j\n\nSecond, consider a line that might appear in a recipe, listing \"two and two-thirds cups sugar\". In Nemeth code, this would be\n\n#2_?2/3_# cups sug>\n\nIn UEBC, it would be\n\n#b#b/c cups sug>\n\nThird, consider an expression that includes words, such as a formula commonly encountered in the health sciences that says \"LDL-cholesterol equals total-cholesterol minus HDL-cholesterol minus (Triglycerides over 5). In Nemeth code you must use grade 1 for the words, writing\n\n,l,d,l-cholesterol\n\n.k total-cholesterol\n\n-,h,d,l-cholesterol\n\n-?,triglycerides/5#\n\n(and, if the hyphens and minus signs were deemed ambiguous, some further means such as a transcriber's note would be needed to help distinguish them). In UEBC, you would have the option of staying in grade 2 and simply writing:\n\n,,ldl-*ole/]ol \"7 total-*ole/]ol\n\n\"-,,hdl-*ole/]ol\n\n\"-;(,triglyc]ides./#e;)\n\nwithout any worries about ambiguity.\n\nFourth, consider a sentence containing an email or web address, such as \"We found your listing at www dot teachers dot com\". Using current American computer braille code, we would write:\n\n,we f.d yr li/+ at _+www.teachers.com_:4\n\nIn UEBC, you could again elect to use grade 2 throughout, without worry that any aspect of the address would be unclear:\n\n,we f.d yr li/+ at www4t1*]s4com4"
    }
}