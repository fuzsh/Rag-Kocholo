{
    "id": "dbpedia_1569_2",
    "rank": 22,
    "data": {
        "url": "https://www.mathworks.com/help/uav/ug/3d-simulation-for-unmanned-aerial-vehicles.html",
        "read_more_link": "",
        "language": "en",
        "title": "Unreal Engine Simulation for Unmanned Aerial Vehicles",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.mathworks.com/images/responsive/global/pic-header-mathworks-logo.svg",
            "https://www.mathworks.com/images/responsive/global/pic-header-mathworks-logo.svg",
            "https://www.mathworks.com/help/uav/ug/basic_model679418137b78dbb5027748fd361740af.png",
            "https://www.mathworks.com/images/responsive/global/pic-header-mathworks-logo2.svg",
            "https://www.mathworks.com/images/responsive/global/ico-facebook.svg",
            "https://www.mathworks.com/images/responsive/global/ico-x.svg",
            "https://www.mathworks.com/etc.clientlibs/mathworks/clientlibs/customer-ui/templates/common/resources/images/ico-instagram.svg",
            "https://www.mathworks.com/images/responsive/global/ico-youtube.svg",
            "https://www.mathworks.com/images/responsive/global/ico-linkedin.svg",
            "https://www.mathworks.com/images/responsive/global/ico-rss.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Learn how to use unmanned aerial vehicle algorithms in Simulink and visualize their performance in a virtual environment using the Unreal Engine from Epic Games.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://www.mathworks.com/help/uav/ug/3d-simulation-for-unmanned-aerial-vehicles.html",
        "text": "Scenes\n\nTo configure a model to co-simulate with the simulation environment, add a Simulation 3D Scene Configuration block to the model. Using this block, you can choose from a prebuilt scene where you can test and visualize your driving algorithms. The following image is from the US City Block scene.\n\nThe toolbox includes these scenes.\n\nSceneDescriptionUS City Block\n\nCity block with intersections, barriers, and traffic lights\n\nIf you have the UAV Toolbox Interface for Unreal Engine Projects support package, then you can modify these scenes or create new ones. For more details, see Customize Unreal Engine Scenes for UAVs.\n\nVehicles\n\nTo define a virtual vehicle in a scene, add a Simulation 3D UAV Vehicle block to your model. Using this block, you can control the movement of the vehicle by supplying the X, Y, and yaw values that define its position and orientation at each time step. The vehicle automatically moves along the ground.\n\nYou can also specify the color and type of vehicle. The toolbox includes these vehicle types:\n\nSensors\n\nYou can define virtual sensors and attach them at various positions on the vehicles. The toolbox includes these sensor modeling and configuration blocks.\n\nBlockDescriptionSimulation 3D CameraCamera model with lens. Includes parameters for image size, focal length, distortion, and skew.Simulation 3D Fisheye CameraFisheye camera that can be described using the Scaramuzza camera model. Includes parameters for distortion center, image size, and mapping coefficients.Simulation 3D LidarScanning lidar sensor model. Includes parameters for detection range, resolution, and fields of view.\n\nFor more details on choosing a sensor, see Choose a Sensor for Unreal Engine Simulation.\n\nPath Planning and Vehicle Control\n\nYou can use the Unreal Engine simulation environment to visualize the motion of a vehicle in a prebuilt scene. This environment provides you with a way to analyze the performance of path planning and vehicle control algorithms. After designing these algorithms in Simulink, you can use the uavsim3dlib library to visualize vehicle motion in one of the prebuilt scenes.\n\nClosed-Loop Systems\n\nAfter you design and test a perception system within the simulation environment, you can then use it to drive a control system that actually steers a vehicle. In this case, rather than manually set up a trajectory, the UAV uses the perception system to fly itself. By combining perception and control into a closed-loop system in the 3D simulation environment, you can develop and test more complex algorithms, such as automated delivery."
    }
}