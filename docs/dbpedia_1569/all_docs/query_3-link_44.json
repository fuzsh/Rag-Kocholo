{
    "id": "dbpedia_1569_3",
    "rank": 44,
    "data": {
        "url": "http://rtsl-edge.cs.illinois.edu/UAV/tutorial.html",
        "read_more_link": "",
        "language": "en",
        "title": "CPSWeek 2018",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://rtsl-edge.cs.illinois.edu/UAV/img/UAV-EE.jpg",
            "http://rtsl-edge.cs.illinois.edu/UAV/img/people/Marco_Oct2017small.jpg",
            "http://rtsl-edge.cs.illinois.edu/UAV/img/people/Or_Aug2017.bmp",
            "http://rtsl-edge.cs.illinois.edu/UAV/img/people/Mirco.jpg",
            "http://rtsl-edge.cs.illinois.edu/UAV/img/logo-NSF.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Bootstrap",
            "Landing page",
            "Template",
            "Registration",
            "Landing"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Tutorial Abstract\n\nUnmanned Aerial Vehicles (UAVs) are becoming more and more popular as their abilities and applications grow quickly. From camera drones for agricultural observation to delivery systems, the range of possible applications is increasing. Therefore, the flexibility of testing and development tools is essential to rapidly develop prototypes and testing them in different application scenarios. To enable rapid prototyping we present the Unmanned Aerial Vehicle Emulation Environment (UAV-EE) that allows for fast, inexpensive, and flexible development and testing of software and hardware designs. Research groups that want to focus their work on UAV research need to overcome several hurdles to get started. Before blindly starting the development and investing funds in expensive hardware, several questions need to be answered. For example, assume you want to develop a UAV based system that can temporarily increase LTE availability in specific areas (e.g. public events). Which type of aircraft should you pick? A drone can hover in place but a small airplane uses less power to stay in the air. How do you want to control the drone(s), manually or with an autopilot that is optimizing for LTE availability? And most important, how do you test it? A flight test is time consuming and costly, and can be a safety hazard if the software or embedded hardware is flawed. Our Robot Operating System (ROS) based open source UAV Emulation Environment aims to help answer these and more questions arising by providing a modular environment that not only allows flight dynamics simulation but also scenario specific simulations. The proposed open-source environment will have a growing availability of specific simulation modules, which include a power model to estimate electric power consumption of the simulated UAV, a crucial metric for most UAV projects. Furthermore, the interface to the embedded hardware emulates the sensor and actuator interface, which gives the possibility to analyze the embedded hardware and software from a real-time schedulability perspective. In addition to be a cost effective tool, software debugging in a simulated test phase is a lot easier and faster than in the real world. This tutorial aims to introduce the Unmanned Aerial Vehicle Emulation Environment, showing its abilities and potentials for UAV based research and education projects. We will present different test scenarios to show the flexibility of the UAV-EE. The tutorial especially targets newly started UAV projects in research and education to help them bootstrap the development phase. Established projects can also benefit from UAV-EE and we aim to establish a growing community that uses UAV-EE to further improve research efficiency and cooperation. Topics that will be covered in the tutorial will include: • Demonstrate the Unmanned Aerial Vehicle Emulation Environment (UAV-EE) • Present different testing scenarios • Show the flexibility of the design • Illustrate the hardware and software structure of the Emulation Environment • Tutorial on how to migrate existing UAV software to run on UAV-EE"
    }
}