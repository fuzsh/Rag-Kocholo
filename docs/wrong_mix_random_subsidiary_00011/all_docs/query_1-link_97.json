{
    "id": "wrong_mix_random_subsidiary_00011_1",
    "rank": 97,
    "data": {
        "url": "https://techcommunity.microsoft.com/t5/azure-global/migrating-aix-workloads-to-azure-approaches-and-best-practices/ba-p/1085983",
        "read_more_link": "",
        "language": "en",
        "title": "Migrating AIX Workloads to Azure: Approaches and Best Practices",
        "top_image": "https://cdn.techcommunity.microsoft.com/assets/BlogDefault-082321.png",
        "meta_img": "https://cdn.techcommunity.microsoft.com/assets/BlogDefault-082321.png",
        "images": [
            "https://techcommunity.microsoft.com/html/@583B3F561C4171F565A5431E573FCDA4/assets/Content/Images/GlobalHeader/MicrosoftLogo.png",
            "https://techcommunity.microsoft.com/t5/image/serverpage/avatar-name/defaultavatar/avatar-theme/candy/avatar-collection/Microsoft/avatar-display-size/profile/version/2?xdesc=1.0",
            "https://techcommunity.microsoft.com/t5/image/serverpage/avatar-name/defaultavatar/avatar-theme/candy/avatar-collection/Microsoft/avatar-display-size/message/version/2?xdesc=1.0",
            "https://www.facebook.com/tr?id=1770559986549030&ev=PageView&noscript=1"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "techcommunity.microsoft.com",
            "user-id"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Introduction Many customers would like to migrate their AIX (Advanced Interactive eXecutive) workloads to Linux in Azure to take advantage of the benefits",
        "meta_lang": "en",
        "meta_favicon": "https://c.s-microsoft.com/favicon.ico?v2",
        "meta_site_name": "TECHCOMMUNITY.MICROSOFT.COM",
        "canonical_link": "https://techcommunity.microsoft.com/t5/azure-global/migrating-aix-workloads-to-azure-approaches-and-best-practices/ba-p/1085983",
        "text": "Introduction\n\nMany customers would like to migrate their AIX (Advanced Interactive eXecutive) workloads to Linux in Azure to take advantage of the benefits of a Modern Cloud Platform, but wonder how to get started. AIX is a UNIX operating system sold by IBM. Created in 1986, it became one of the leading operating systems for IBM RS/6000, Power Systems, PowerPC, IBM System i, IBM System/370, and even the PS/2 PCs. Many popular software packages were created for AIX, and a substantial installation base still runs mission-critical workloads on AIX to this day.\n\nWith the rise of cloud computing platforms like Azure and the dominance of the x86 CPU platform, Linux has become the leading UNIX-like operating system. Also, Cloud Native Services are based on x86 processor architecture, so the migration path from AIX requires some refactoring.\n\nThe goal of this post is to categorize the different types of applications on AIX and explore the best practices for migrating them to Azure.\n\nAIX vs Linux: What’s the Difference?\n\nAIX and Linux share a common UNIX ancestry and use a similar approach for scripting and programming. However, the differences in syntax and directory structure must be addressed during migration for an application to function properly. By far, the biggest difference is the fact that AIX is based on the RISC processors (that is, IBM Power PC, IBM z-series, Sun SPARC), and most Linux systems are based on the Intel x86 processor.\n\nRISC and x86 processors differ in endianness, a term used to describe how a system stores bytes in computer memory. RISC-based computers are known as big endian systems, because they store the most significant (“big”) value first—that is, in the lowest storage address. Most Linux computers are based on the x86 processor, which are little endian systems, meaning they store the least significant (“little”) value) first.\n\nThis is a fundamental difference but consistent across systems, so when transferring application data from one system to another, you can convert the data.\n\nNote: AIX is based on the UNIX BSD 4.3 kernel, but IBM has added enhancements. For more information, see the IBM Knowledge Center, which lists the major differences between 4.3 BSD and AIX.\n\nApplication tier: Java vs. native applications\n\nTo get started, it helps to review the two primary ways an application can run on AIX (or any UNIX system). The application type, Java-based or native, dictates the approach to migration for each category of software—that is, commercial off-the-shelf (COTS) or custom open source.\n\nAIX Java-based applications\n\nWith the rise in popularity of Java-based platforms such as IBM WebSphere and Apache on AIX, many applications are built on Java. When Java applications are compiled, the result is Java bytecode, a machine-independent representation that runs in a Java virtual machine (JVM). These applications are portable, because the JVM provides a level of application abstraction. An application that runs on AIX in a JVM can be ported with minimal changes to a JVM in another UNIX-like system , such as Linux, or even to Microsoft Windows Server.\n\nThe next thing to consider when migrating is the data. Fortunately, data portability is typically more flexible. You can migrate data from one database platform to another in several ways as described in the next section.\n\nNote: Like Java, other application runtimes create a compiled version that can be migrated to Azure using the same methodology.\n\nNative applications\n\nApplications that do not run in a JVM (or another application virtualization environment) compile to native executables. These types of executables vary based on the CPU platform and run directly within the operating system.\n\nNative AIX applications do not run on the x86 platform. You must recompile them, which implies that you need the source code. If you don’t have access to it, one option, besides rearchitecting, is to run in an emulator on Azure.\n\nDatabase Tier\n\nThe other component of any application is the data tier. Many AIX applications use IBM Db2 as the database, while others use Oracle, IMS DB, Informix, or other databases.\n\nSince Db2 LUW (Linux, UNIX, Windows), Oracle, Informix, and IMS DB run on Linux, the migration path is straightforward. You can install the target database platform on Linux, and then port the data using any of a variety of data migration tools. This option is a good choice when your database includes stored procedures and triggers.\n\nAnother option is to migrate the data to Microsoft SQL Server or Azure SQL Database using the SQL Server Migration Assistant. Even if you cannot migrate your database (typically because of a dependency on the AIX system), some of the data can stay on AIX, and the application tier on Azure can integrate with it.\n\nApplications and workloads on AIX and approaches for migration\n\nLet’s take a look at the categories of applications that run on an AIX system and the different migration approaches for each. For more information, see the Intel a white paper on the subject, Migration from UNIX/RISC and Mainframe to Intel-based Solutions.\n\nCOTS applications\n\nAlso known as packaged solutions, these are applications that are purchased from a software vendor and installed on the AIX system. This category of application typically does not have the source code, because it is proprietary IP owned by the software vendor, as is the case with most PC software. You rely on the software vendor for upgrades, new features, enhancements, and bug fixes.\n\nThere are two approaches for migrating COTS applications:\n\nRecompile. For native applications, you must have the source code to recompile for the x86 platform. Typically, this entails negotiating with the software vendor for the particular version you have installed. Many vendors are open to this approach.\n\nRehost in a Java environment. For Java applications, as mentioned before, it is possible to port the application to a similar Java environment in Azure. When porting from one Java platform to another, a best practice is to keep the environments as similar as possible. For example, if the source system is WebSphere, ensure that the target is WebSphere as well.\n\nOpen source and custom (in-house) applications\n\nAssuming you have the source code for your open source and custom applications, you have more flexibility and options for migrating native applications. For open source and custom Java-based applications, you can use the same approach as with COTS applications.\n\nAzure Spring Cloud\n\nEvery approach we have talked about up to now is based on migrating from AIX to a VM in Azure (typically running Linux). Another option that became available in October 2019 is Azure Spring Cloud. This fully managed service allows you to run Java-based application in a cloud-native Java environment. You can then move beyond a traditional VM deployment to a more flexible and agile microservices architecture.\n\nAIX-to-Linux application mapping\n\nWhen you are migrating applications from AIX to Linux on Azure VMs, it can be very helpful to know if the application you are migrating is already available in a Linux version. Many are.\n\nThe following table is an alphabetical list of all of the AIX solutions listed on the IBM Global Solutions Directory as of this writing, cross-referenced with the Linux solutions. This can be very beneficial in helping you decide the approach to take.\n\nConclusion"
    }
}