{
    "id": "wrong_mix_domainrange_subsidiary_00093_3",
    "rank": 45,
    "data": {
        "url": "https://atlas.ripe.net/docs/data_struct/",
        "read_more_link": "",
        "language": "en",
        "title": "Measurement Result Format",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "RIPE Atlas Docs",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "# Measurement Result Format\n\nRIPE Atlas measurement results can be downloaded in JSON format. This document describes the data structure of these results, which can vary by probe firmware version.\n\n# Notes\n\n# 1.1. Versioning\n\nThe results are returned as an array consisting of elements, each of which is an associative array. The structure of these associative arrays depends on the firmware version used by the probe conducting the measurement. Therefore, it is possible for downloaded results to contain a mix of different result structures.\n\nThe data structure of each result contains the key fw which identifies the firmware version used by the probe that generated that result.\n\nVersion 1 is identified by the value \"1\".\n\nVersion 4400 is identified by a value of between \"4400\" and \"4459\".\n\nVersion 4460 is identified by a value of between \"4460\" and \"4539\".\n\nVersion 4540 is identified by a value of between \"4540\" and \"4569\".\n\nVersion 4570 is identified by a value of between \"4570\" and \"4609\".\n\nVersion 4610 is identified by a value of between \"4610\" and \"4749\".\n\nVersion 4750 is identified by a value of between \"4750\" and \"4999\".\n\nVersion 5000 is currently the most recent version of the datastructure documentation. At the moment any value greather than 5000 conforms to the 5000 documentation. An upper limit to this version will added with the release of a firmware version that changes the datastructures.\n\nSince Version 5000, measurement results contain a separate field, called \"mver\", that specifies the version of the measurement code. This field has the format \"x.y.z\", where the \"x\" field is that major version, which changes when the measurement results are incompatible with the previous version. The \"y\" field is the minor version, and changes when new fields are added, but otherwise old parsers can still parse measurement results. Finally, the \"z\" field specifies that the measurement code changed, but the output format is still the same. This happens when only (minor) bugs are fixed and no new features are added.\n\n# 1.2. Multiple Addresses in a Result\n\nThe result structure may contain several different fields that appear to contain similar information, but which are in fact slightly different.\n\nfrom\n\nThis field is added by the RIPE Atlas backend system and is used in ASN lookup, geo-location, and so on. There are some special cases for IPv6-capable probes in which that this can be an empty string.\n\nsrc\n\nThis field is added by the probe. It comes from a TCP socket, or from UDP connect/getsockname calls.\n\nIf the probe is behind a NAT, src could be a private address, whereas from will always be a public address.\n\nIt is also possible for src and from to differ with IPv6 if there are multiple addresses from RAs and/or static configuration with a different priority.\n\nWith v4 addresses, it is possible for the from field to be filled in at a later time, rather than when the measurement was made. If the probe is unable to connect to the RIPE Atlas backend system, but continues performing measurements and delivers the results at a later time, the backend system will populate the from field for this entire 'disconnected' time with the value at the time of reconnection.\n\n# 1.3. JSON Terminology\n\nResults are returned encoded in JSON (opens new window). JSON has primitive data types such strings, numbers and booleans. And two compount data types, which are called object and array.\n\nA JSON string is very much like a C string: the string is enclosed in double quotes (\") and back slash (\\) is used to introduce special characters. Likewise, a number is very much like a C floating point number. The boolean data types has two values, true and false.\n\nThe object data type is a collection of named fields. An object is a comma separated list enclosed in curly braces (\"{\" and \"}\"). Each element of the list consists of the name of the field encoded as string, a colon (\"ð and the value, which can be an arbitrary JSON data type.\n\nThe array data type is a comma separated list of values encloded in square brackets (\"[\" and \"]\"). JSON allows each value to be of a different type. However, in the data structures described here, arrays have values that are all the same type.\n\n# Version 1\n\nVersion 1 is identified by the value \"1\" for the key fw in the result.\n\n# Version 1 Ping / v6 Ping\n\nResult:\n\n\"addr\" -- IP address of the destination (string)\n\n\"avg\" -- average round-trip time (float)\n\n\"dup\" -- number of duplicate packets (int)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"max\" -- maximum round-trip time (float)\n\n\"min\" -- minimum round-trip time (float)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"name\" -- name of the destination (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"rcvd\" -- number of packets received (int)\n\n\"sent\" -- number of packets sent (int)\n\n\"size\" -- packet size (int)\n\n\"timestamp\" -- Unix timestamp (int)\n\nExample result:\n\n# Version 1 Traceroute / v6 Traceroute\n\nResult:\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"result\" -- output of the traceroute command (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\nExample result:\n\n# Version 4400\n\nVersion 4400 is identified by a value between \"4400\" and \"4459\" for the key fw in the result.\n\n# Version 4400 Ping / v6 Ping\n\nResult:\n\n\"addr\" -- IP address of the destination (string)\n\n\"avg\" -- average round-trip time (float)\n\n\"dup\" -- number of duplicate packets (int)\n\n\"from\" -- IP address of the probe as known by the controller (string)\n\n\"max\" -- maximum round-trip time (float)\n\n\"min\" -- minimum round-trip time (float)\n\n\"mode\" -- \"ICMP4\" or \"ICMP6\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"name\" -- name of the destination (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"rcvd\" -- number of packets received (int)\n\n\"result\" -- variable content, depending on type of response (array)\n\nEach element is an associative array consisting of:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Error\n\n\"error\" -- description of error (string)\n\nCase: Reply\n\n\"rtt\" -- round-trip-time in milliseconds (float)\n\n\"ttl\" -- [optional] time-to-live reply if different from ttl in first reply (int)\n\n\"dup\" -- [optional] signals that the reply is a duplicate (int)\n\n\"sent\" -- number of packets sent (int)\n\n\"size\" -- packet size (int)\n\n\"srcaddr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttl\" -- time-to-live field in the first reply (int)\n\nExample result:\n\n# Version 4400 Traceroute / v6 Traceroute\n\nResult:\n\n\"addr\" -- IP address of the destination (string)\n\n\"endtime\" -- Unix timestamp for end of measurement (int)\n\n\"from\" -- IP address of the probe as know by controller (string)\n\n\"mode\" -- \"ICMP4\" or \"ICMP6\" or \"UDP4\" or \"UDP6\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"name\" -- name of the destination (string)\n\n\"paris-id\" -- variation for the Paris mode of traceroute (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"result\" -- list of hop elements (array)\n\nEach element is an associative array consisting of:\n\n\"hop\" -- hop number (int)\n\n\"error\" -- [optional] when an error occurs trying to send a packet. In that case there will not be a result structure. (string)\n\n\"result\" -- variable content, depending on type of response (array)\n\nEach element is an associative array consisting of:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Reply\n\n\"from\" -- IPv4 or IPv6 source address in reply (string)\n\n\"rtt\" -- round-trip-time of reply (float)\n\n\"size\" -- size of reply (int)\n\n\"ttl\" -- time-to-live in reply (int)\n\n\"icmpext\" -- [optional] information when icmp header is found in reply (object)\n\n\"version\" -- RFC4884 version (int)\n\n\"rfc4884\" -- \"1\" if length indication is present, \"0\" otherwise (int)\n\n\"obj\" -- elements of the object (array)\n\n\"class\" -- RFC4884 class (int)\n\n\"type\" -- RFC4884 type (int)\n\n\"mpls\" -- [optional] MPLS data, RFC4950, shown when class is \"1\" and type is \"1\" (array)\n\n\"exp\" -- for experimental use (int)\n\n\"label\" -- mpls label (int)\n\n\"s\" -- bottom of stack (int)\n\n\"ttl\" -- time to live value (int)\n\n\"size\" -- packet size (int)\n\n\"srcaddr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp for start of measurement (int)\n\nExample result:\n\n# Version 4400 DNS Lookup\n\nResult:\n\n\"address\" -- [optional] IP address of the destination (string)\n\n\"error\" -- [optional] error message (associative array)\n\n\"timeout\" -- query timeout (int)\n\n\"getaddrinfo\" -- error message (string)\n\n\"from\" -- [optional] IP address of the source (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"name\" -- [optional] hostname of the destination (string)\n\n\"pf\" -- [optional] IP version: \"4\" or \"6\" (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"TCP\" or \"UDP\" (string)\n\n\"qbuf\" -- [optional] query payload buffer which was sent to the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"result\" -- [optional] response from the DNS server (associative array)\n\n\"ANCOUNT\" -- answer count, RFC 1035 4.1.1 (int)\n\n\"ARCOUNT\" -- additional record count, RFC 1035, 4.1.1 (int)\n\n\"ID\" -- query ID, RFC 1035 4.1.1 (int)\n\n\"NSCOUNT\" -- name server count (int)\n\n\"QDCOUNT\" -- number of queries (int)\n\n\"abuf\" -- answer payload buffer from the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"answers\" -- first two records from the response decoded by the probe, if they are TXT or SOA; other RR can be decoded from \"abuf\" (array)\n\nEach element is an associative array consisting of:\n\n\"MNAME\" -- domain name, RFC 1035, 3.1.13 (string)\n\n\"NAME\" -- domain name. (string)\n\n\"RDATA\" -- [type TXT] txt value, (string)\n\n\"RDLENGTH\" -- [type TXT] length of RDATA (int). depreciated (4450)\n\n\"RNAME\" -- [if type SOA] mailbox, RFC 1035 3.3.13 (string)\n\n\"SERIAL\" -- [type SOA] zone serial number, RFC 1035 3.3.13 (int)\n\n\"TTL\" -- [type SOA] time to live, RFC 1035 4.1.3 (int)\n\n\"TYPE\" -- RR \"SOA\" or \"TXT\" (string), RFC 1035\n\n\"rt\" -- [optional] response time in milli seconds (float)\n\n\"size\" -- [optional] response size (int)\n\n\"src\" -- [optional] the source IP address added by the probe (string)\n\n\"subid\" -- [optional] sequence number of this result within a group of results, available if the resolution is done by the probe's local resolver\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"timestamp\" -- start time, Unix timestamp (int)\n\nNotes:\n\nIf a hostname was provided, both the hostname (name) and the IP address (address) will be in the response.\n\nIf an IP address was provided, the name field will not be filled, unless the address which was given differs from the probe's resolution of the address. For instance, if \"2001:0DB8:0:0::1\" was provided, and the probe resolves it to \"2001:0DB8::1\", the first value will be returned as the name and the second as the address.\n\nThe address field will always be present, except when there is an error.\n\nExample result:\n\n# Version 4400 HTTP\n\nResult:\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"result\" -- results of query (array)\n\nEach element is an associative array consisting of:\n\n\"addr\" -- target address (string)\n\n\"bsize\" -- size of body in octets (int)\n\n\"dnserr\" -- [optional] DNS resolution failed (string)\n\n\"err\" -- [optional] other failure (string)\n\n\"header\" -- [optional] elements are strings. The last string can be empty to indicate the end of enders or end with \"[...]\" to indicate truncation (array)\n\n\"hsize\" -- header size in octets (int)\n\n\"mode\" -- \"GET4\" or \"GET6\" or \"HEAD4\" or \"HEAD6\" or \"POST4\" or \"POST6\" (string)\n\n\"res\" -- HTTP result code (int)\n\n\"rt\" -- time to execute request excluding DNS (float)\n\n\"srcaddr\" -- source address used by probe (string)\n\n\"subid\" -- [optional] sequence number of this result within a group of results, when the 'all' option is used without the 'combine' option (int)\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"time\" -- [optional] Unix timestamp, when the 'all' option is used with the 'combine' option (int)\n\n\"ver\" -- major, minor version of http server (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"uri\" -- request uri (string)\n\nExample result:\n\n# Version 4400 TLS (SSL) GET Cert\n\nResult:\n\n\"addr\" -- IP address of the destination (string)\n\n\"cert\" -- results of query (array)\n\nEach element of the array is a string containing a base 64 encoded certificate. Newlines are replaced with \"\\n\"\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"name\" -- name of the destination (string)\n\n\"port\" -- port name (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"srcaddr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\nExample result:\n\n# Version 4460\n\nVersion 4460 is identified by a value between \"4460\" and \"4539\" for the key fw in the result.\n\nChanges between 4400 and 4460\n\nThe key \"addr\" in 4400 became \"dst_addr\" in 4460.\n\nThe key \"address\" in 4400 became \"dst_addr\" in 4460.\n\nThe key \"mode\" in 4400 became \"af\" and \"proto\" or \"method\" in 4460.\n\nThe key \"name\" in 4400 became \"dst_name\" in 4460.\n\nThe key \"paris-id\" in 4400 became \"paris_id\" in 4460.\n\nThe key \"pf\" in 4400 became \"af\" in 4460.\n\nThe key \"port\" in 4400 became \"dst_port\" in 4460.\n\nThe key \"srcaddr\" in 4400 became \"src_addr\" in 4460.\n\nThe following fields were added: \"method\" (where applicable), \"ver\" (where not already present but applicable), and \"type\".\n\n# Version 4460 Ping / v6 Ping\n\nView changes since previous version.\n\nResult:\n\n\"addr\" -- IP address of the destination (deprecated) (string)\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"avg\" -- average round-trip time (float)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dup\" -- number of duplicate packets (int)\n\n\"from\" -- IP address of the probe as known by the controller (string)\n\n\"max\" -- maximum round-trip time (float)\n\n\"min\" -- minimum round-trip time (float)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"name\" -- name of the destination (deprecated) (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"ICMP\" (string)\n\n\"rcvd\" -- number of packets received (int)\n\n\"result\" -- variable content, depending on type of response (array)\n\nEach element is an associative array consisting of:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Error\n\n\"error\" -- description of error (string)\n\nCase: Reply\n\n\"rtt\" -- round-trip-time in milliseconds (float)\n\n\"ttl\" -- [optional] time-to-live reply if different from ttl in first reply (int)\n\n\"dup\" -- [optional] signals that the reply is a duplicate (int)\n\n\"sent\" -- number of packets sent (int)\n\n\"size\" -- packet size (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttl\" -- time-to-live field in the first reply (int)\n\n\"type\" -- \"ping\" (string)\n\nExample result:\n\n# Version 4460 Traceroute / v6 Traceroute\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"endtime\" -- Unix timestamp for end of measurement (int)\n\n\"from\" -- IP address of the probe as know by controller (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"paris_id\" -- variation for the Paris mode of traceroute (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"UDP\" or \"ICMP\" (string)\n\n\"result\" -- list of hop elements (array)\n\nEach element is an associative array consisting of:\n\n\"hop\" -- hop number (int)\n\n\"error\" -- [optional] when an error occurs trying to send a packet. In that case there will not be a result structure. (string)\n\n\"result\" -- variable content, depending on type of response (array)\n\nEach element is an associative array consisting of:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Reply\n\n\"from\" -- IPv4 or IPv6 source address in reply (string)\n\n\"err\" -- (optional) error ICMP: \"N\" (network unreachable,), \"H\" (destination unreachable), \"A\" (administratively prohibited), \"P\" (protocol unreachable), \"p\" (port unreachable) (string)\n\n\"rtt\" -- round-trip-time of reply, not present when the response is late (float)\n\n\"size\" -- size of reply (int)\n\n\"ttl\" -- time-to-live in reply (int)\n\n\"ittl\" -- (optional) time-to-live in packet that triggered the error ICMP. Omitted if equal to 1 (int)\n\n\"late\" -- (optional) number of packets a reply is late, in this case rtt is not present (int)\n\n\"icmpext\" -- [optional] information when icmp header is found in reply (object)\n\n\"version\" -- RFC4884 version (int)\n\n\"rfc4884\" -- \"1\" if length indication is present, \"0\" otherwise (int)\n\n\"obj\" -- elements of the object (array)\n\n\"class\" -- RFC4884 class (int)\n\n\"type\" -- RFC4884 type (int)\n\n\"mpls\" -- [optional] MPLS data, RFC4950, shown when class is \"1\" and type is \"1\" (array)\n\n\"exp\" -- for experimental use (int)\n\n\"label\" -- mpls label (int)\n\n\"s\" -- bottom of stack (int)\n\n\"ttl\" -- time to live value (int)\n\n\"size\" -- packet size (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp for start of measurement (int)\n\n\"type\" -- \"traceroute\" (string)\n\nExample result:\n\n# Version 4460 DNS Lookup\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- [optional] IP version: \"4\" or \"6\" (int)\n\n\"dst_addr\" -- [optional] IP address of the destination (string)\n\n\"dst_name\" -- [optional] hostname of the destination (string)\n\n\"error\" -- [optional] error message (associative array)\n\n\"timeout\" -- query timeout (int)\n\n\"getaddrinfo\" -- error message (string)\n\n\"from\" -- [optional] IP address of the source (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"TCP\" or \"UDP\" (string)\n\n\"qbuf\" -- [optional] query payload buffer which was sent to the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"result\" -- [optional] response from the DNS server (associative array)\n\n\"ANCOUNT\" -- answer count, RFC 1035 4.1.1 (int)\n\n\"ARCOUNT\" -- additional record count, RFC 1035, 4.1.1 (int)\n\n\"ID\" -- query ID, RFC 1035 4.1.1 (int)\n\n\"NSCOUNT\" -- name server count (int)\n\n\"QDCOUNT\" -- number of queries (int)\n\n\"abuf\" -- answer payload buffer from the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"answers\" -- first two records from the response decoded by the probe, if they are TXT or SOA; other RR can be decoded from \"abuf\" (array)\n\nEach element is an associative array consisting of:\n\n\"MNAME\" -- domain name, RFC 1035, 3.1.13 (string)\n\n\"NAME\" -- domain name. (string)\n\n\"RDATA\" -- [type TXT] txt value, (string)\n\n\"RNAME\" -- [if type SOA] mailbox, RFC 1035 3.3.13 (string)\n\n\"SERIAL\" -- [type SOA] zone serial number, RFC 1035 3.3.13 (int)\n\n\"TTL\" -- [type SOA] time to live, RFC 1035 4.1.3 (int)\n\n\"TYPE\" -- RR \"SOA\" or \"TXT\" (string), RFC 1035\n\n\"rt\" -- [optional] response time in milli seconds (float)\n\n\"size\" -- [optional] response size (int)\n\n\"src_addr\" -- [optional] the source IP address added by the probe (string). (fw >= 4470)\n\n\"subid\" -- [optional] sequence number of this result within a group of results, available if the resolution is done by the probe's local resolver\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"timestamp\" -- start time, in Unix timestamp (int)\n\n\"type\" -- \"dns\" (string)\n\nNotes:\n\nIf a hostname was provided, both the hostname (dst_name) and the IP address (dst_addr) will be in the response.\n\nIf an IP address was provided, the name field will not be filled, unless the address which was given differs from the probe's resolution of the address. For instance, if \"2001:0DB8:0:0::1\" was provided, and the probe resolves it to \"2001:0DB8::1\", the first value will be returned as the name and the second as the address.\n\nThe dst_addr field will always be present, except when there is an error.\n\nExample result:\n\n# Version 4460 HTTP\n\nView changes since previous version.\n\nResult:\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"result\" -- results of query (array)\n\nEach element is an associative array consisting of:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bsize\" -- size of body in octets (int)\n\n\"dnserr\" -- [optional] DNS resolution failed (string)\n\n\"dst_addr\" -- target address (string)\n\n\"err\" -- [optional] other failure (string)\n\n\"header\" -- [optional] elements are strings. The last string can be empty to indicate the end of enders or end with \"[...]\" to indicate truncation (array)\n\n\"hsize\" -- header size in octets (int)\n\n\"method\" -- \"GET\", \"HEAD\", or \"POST\" (string)\n\n\"res\" -- HTTP result code (int)\n\n\"rt\" -- time to execute request excluding DNS (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"subid\" -- [optional] sequence number of this result within a group of results, when the 'all' option is used without the 'combine' option (int)\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"time\" -- [optional] Unix timestamp, when the 'all' option is used with the 'combine' option (int)\n\n\"ver\" -- major, minor version of http server (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"http\" (string)\n\n\"uri\" -- request uri (string)\n\nExample result:\n\n# Version 4460 TLS (SSL) GET Cert\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"cert\" -- results of query (array)\n\nEach element of the array is a string containing a base 64 encoded certificate. Newlines are replaced with \"\\n\"\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dst_port\" -- port name (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"method\" -- \"SSL\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"sslcert\" (string)\n\n\"ver\" -- (SSL) protocol versioN (string)\n\nExample result:\n\n# Version 4540\n\nVersion 4540 is identified by a value between \"4540\" and \"4569\" for the key fw in the result.\n\nChanges between 4460 and 4540\n\nAdditional key \"lts\" in ping.\n\nAdditional keys \"readtiming\", \"ttc\", \"ttfb\", and \"ttr\" in HTTP.\n\nAdditional keys \"rt\" and \"ttc\" in TLS (SSL) GET Cert.\n\n# Version 4540 Ping / v6 Ping\n\nView changes since previous version.\n\nResult:\n\n\"addr\" -- IP address of the destination (deprecated) (string)\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"avg\" -- average round-trip time (float)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dup\" -- number of duplicate packets (int)\n\n\"from\" -- IP address of the probe as known by the controller (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"max\" -- maximum round-trip time (float)\n\n\"min\" -- minimum round-trip time (float)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"name\" -- name of the destination (deprecated) (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"ICMP\" (string)\n\n\"rcvd\" -- number of packets received (int)\n\n\"result\" -- variable content, depending on type of response (array)\n\nEach element is an associative array consisting of:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Error\n\n\"error\" -- description of error (string)\n\nCase: Reply\n\n\"rtt\" -- round-trip-time in milliseconds (float)\n\n\"ttl\" -- [optional] time-to-live reply if different from ttl in first reply (int)\n\n\"dup\" -- [optional] signals that the reply is a duplicate (int)\n\n\"sent\" -- number of packets sent (int)\n\n\"size\" -- packet size (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttl\" -- time-to-live field in the first reply (int)\n\n\"type\" -- \"ping\" (string)\n\nExample result:\n\n# Version 4540 Traceroute / v6 Traceroute\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"endtime\" -- Unix timestamp for end of measurement (int)\n\n\"from\" -- IP address of the probe as know by controller (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"paris_id\" -- variation for the Paris mode of traceroute (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"UDP\" or \"ICMP\" (string)\n\n\"result\" -- list of hop elements (array)\n\nEach element is an associative array consisting of:\n\n\"hop\" -- hop number (int)\n\n\"error\" -- [optional] when an error occurs trying to send a packet. In that case there will not be a result structure. (string)\n\n\"result\" -- variable content, depending on type of response (array)\n\nEach element is an associative array consisting of:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Reply\n\n\"err\" -- (optional) error ICMP: \"N\" (network unreachable,), \"H\" (destination unreachable), \"A\" (administratively prohibited), \"P\" (protocol unreachable), \"p\" (port unreachable) (string)\n\n\"from\" -- IPv4 or IPv6 source address in reply (string)\n\n\"ittl\" -- (optional) time-to-live in packet that triggered the error ICMP. Omitted if equal to 1 (int)\n\n\"late\" -- (optional) number of packets a reply is late, in this case rtt is not present (int)\n\n\"mtu\" -- (optional) path MTU from a packet too big ICMP (int)\n\n\"rtt\" -- round-trip-time of reply, not present when the response is late (float)\n\n\"size\" -- size of reply (int)\n\n\"ttl\" -- time-to-live in reply (int)\n\n\"icmpext\" -- [optional] information when icmp header is found in reply (object)\n\n\"version\" -- RFC4884 version (int)\n\n\"rfc4884\" -- \"1\" if length indication is present, \"0\" otherwise (int)\n\n\"obj\" -- elements of the object (array)\n\n\"class\" -- RFC4884 class (int)\n\n\"type\" -- RFC4884 type (int)\n\n\"mpls\" -- [optional] MPLS data, RFC4950, shown when class is \"1\" and type is \"1\" (array)\n\n\"exp\" -- for experimental use (int)\n\n\"label\" -- mpls label (int)\n\n\"s\" -- bottom of stack (int)\n\n\"ttl\" -- time to live value (int)\n\n\"size\" -- packet size (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp for start of measurement (int)\n\n\"type\" -- \"traceroute\" (string)\n\nExample result:\n\n# Version 4540 DNS Lookup\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- [optional] IP version: \"4\" or \"6\" (int)\n\n\"dst_addr\" -- [optional] IP address of the destination (string)\n\n\"dst_name\" -- [optional] hostname of the destination (string)\n\n\"error\" -- [optional] error message (associative array)\n\n\"timeout\" -- query timeout (int)\n\n\"getaddrinfo\" -- error message (string)\n\n\"from\" -- [optional] IP address of the source (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"TCP\" or \"UDP\" (string)\n\n\"qbuf\" -- [optional] query payload buffer which was sent to the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"result\" -- [optional] response from the DNS server (associative array)\n\n\"ANCOUNT\" -- answer count, RFC 1035 4.1.1 (int)\n\n\"ARCOUNT\" -- additional record count, RFC 1035, 4.1.1 (int)\n\n\"ID\" -- query ID, RFC 1035 4.1.1 (int)\n\n\"NSCOUNT\" -- name server count (int)\n\n\"QDCOUNT\" -- number of queries (int)\n\n\"abuf\" -- answer payload buffer from the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"answers\" -- first two records from the response decoded by the probe, if they are TXT or SOA; other RR can be decoded from \"abuf\" (array)\n\nEach element is an associative array consisting of:\n\n\"MNAME\" -- domain name, RFC 1035, 3.1.13 (string)\n\n\"NAME\" -- domain name. (string)\n\n\"RDATA\" -- [type TXT] txt value, (string)\n\n\"RNAME\" -- [if type SOA] mailbox, RFC 1035 3.3.13 (string)\n\n\"SERIAL\" -- [type SOA] zone serial number, RFC 1035 3.3.13 (int)\n\n\"TTL\" -- [type SOA] time to live, RFC 1035 4.1.3 (int)\n\n\"TYPE\" -- RR \"SOA\" or \"TXT\" (string), RFC 1035\n\n\"rt\" -- [optional] response time in milli seconds (float)\n\n\"size\" -- [optional] response size (int)\n\n\"src_addr\" -- [optional] the source IP address added by the probe (string).\n\n\"subid\" -- [optional] sequence number of this result within a group of results, available if the resolution is done by the probe's local resolver\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"timestamp\" -- start time, in Unix timestamp (int)\n\n\"type\" -- \"dns\" (string)\n\nNotes:\n\nIf a hostname was provided, both the hostname (dst_name) and the IP address (dst_addr) will be in the response.\n\nIf an IP address was provided, the name field will not be filled, unless the address which was given differs from the probe's resolution of the address. For instance, if \"2001:0DB8:0:0::1\" was provided, and the probe resolves it to \"2001:0DB8::1\", the first value will be returned as the name and the second as the address.\n\nThe dst_addr field will always be present, except when there is an error.\n\nExample result:\n\n# Version 4540 HTTP\n\nView changes since previous version.\n\nResult:\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"result\" -- results of query (array)\n\nEach element is an associative array consisting of:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bsize\" -- size of body in octets (int)\n\n\"dnserr\" -- [optional] DNS resolution failed (string)\n\n\"dst_addr\" -- target address (string)\n\n\"err\" -- [optional] other failure (string)\n\n\"header\" -- [optional] elements are strings. The last string can be empty to indicate the end of enders or end with \"[...]\" to indicate truncation (array)\n\n\"hsize\" -- header size in octets (int)\n\n\"method\" -- \"GET\", \"HEAD\", or \"POST\" (string)\n\n\"readtiming\" -- [optional] timing results for reply data (array)\n\nEach element is an associative array consisting of:\n\n\"t\" -- time since starting to connect when data is received (in milli seconds) (float)\n\n\"o\" -- offset in stream of reply data (int)\n\n\"res\" -- HTTP result code (int)\n\n\"rt\" -- time to execute request excluding DNS (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"subid\" -- [optional] sequence number of this result within a group of results, when the 'all' option is used without the 'combine' option (int)\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"time\" -- [optional] Unix timestamp, when the 'all' option is used with the 'combine' option (int)\n\n\"ttc\" -- [optional] time to connect to the target (in milli seconds) (float)\n\n\"ttfb\" -- [optional] time to first response byte received by measurent code after starting to connect (in milli seconds) (float)\n\n\"ttr\" -- [optional] time to resolve the DNS name (in milli seconds) (float)\n\n\"ver\" -- major, minor version of http server (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"http\" (string)\n\n\"uri\" -- request uri (string)\n\nExample result:\n\n# Version 4540 TLS (SSL) GET Cert\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"cert\" -- results of query (array)\n\nEach element of the array is a string containing a base 64 encoded certificate. Newlines are replaced with \"\\n\"\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dst_port\" -- port name (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"method\" -- \"SSL\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"rt\" -- [optional] response time in milli seconds from starting to connect to receving the certificates (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"ttc\" -- [optional] time in milli seconds that it took to connect (over TCP) to the target (float)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"sslcert\" (string)\n\n\"ver\" -- (SSL) protocol versioN (string)\n\nExample result:\n\n# Version 4570\n\nVersion 4570 is identified by a value between \"4570\" and \"4609\" for the key fw in the result.\n\nChanges between 4540 and 4570\n\nSize field in ping and traceroute made consistent\n\nAddr field is gone\n\n# Version 4570 Ping / v6 Ping\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"avg\" -- average round-trip time (float)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dup\" -- number of duplicate packets (int)\n\n\"from\" -- IP address of the probe as known by the controller (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"max\" -- maximum round-trip time (float)\n\n\"min\" -- minimum round-trip time (float)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"name\" -- name of the destination (deprecated) (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"ICMP\" (string)\n\n\"rcvd\" -- number of packets received (int)\n\n\"result\" -- variable content, depending on type of response (array)\n\nEach element is an associative array consisting of:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Error\n\n\"error\" -- description of error (string)\n\nCase: Reply\n\n\"rtt\" -- round-trip-time in milliseconds (float)\n\n\"src_Addr\" -- [optional] source address if different from the source address in first reply (string)\n\n\"ttl\" -- [optional] time-to-live reply if different from ttl in first reply (int)\n\n\"dup\" -- [optional] signals that the reply is a duplicate (int)\n\n\"sent\" -- number of packets sent (int)\n\n\"size\" -- packet size (data part, not including IP and ICMP header) (int)\n\n\"src_addr\" -- source address used by probe (missing due to a bug)(string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttl\" -- time-to-live field in the first reply (missing due to a bug)(int)\n\n\"type\" -- \"ping\" (string)\n\nExample result:\n\n# Version 4570 Traceroute / v6 Traceroute\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"endtime\" -- Unix timestamp for end of measurement (int)\n\n\"from\" -- IP address of the probe as know by controller (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"paris_id\" -- variation for the Paris mode of traceroute (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"UDP\" or \"ICMP\" (or \"TCP\", fw >= 4600) (string)\n\n\"destination_ip_responded\" -- whether the last hop matches the destination address (boolean)\n\n\"result\" -- list of hop elements (array)\n\nEach element is an associative array consisting of:\n\n\"hop\" -- hop number (int)\n\n\"error\" -- [optional] when an error occurs trying to send a packet. In that case there will not be a result structure. (string)\n\n\"result\" -- variable content, depending on type of response (array)\n\nEach element is an associative array consisting of:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Reply\n\n\"err\" -- (optional) error ICMP: \"N\" (network unreachable,), \"H\" (destination unreachable), \"A\" (administratively prohibited), \"P\" (protocol unreachable), \"p\" (port unreachable) (string)\n\n\"from\" -- IPv4 or IPv6 source address in reply (string)\n\n\"ittl\" -- (optional) time-to-live in packet that triggered the error ICMP. Omitted if equal to 1 (int)\n\n\"late\" -- (optional) number of packets a reply is late, in this case rtt is not present (int)\n\n\"mtu\" -- (optional) path MTU from a packet too big ICMP (int)\n\n\"rtt\" -- round-trip-time of reply, not present when the response is late (float)\n\n\"size\" -- size of reply (int)\n\n\"ttl\" -- time-to-live in reply (int)\n\n\"flags\" -- (optional) TCP flags in the reply packet, for TCP traceroute, concatenated, in the order 'F' (FIN), 'S' (SYN), 'R' (RST), 'P' (PSH), 'A' (ACK), 'U' (URG) (fw >= 4600) (string)\n\n\"icmpext\" -- [optional] information when icmp header is found in reply (object)\n\n\"version\" -- RFC4884 version (int)\n\n\"rfc4884\" -- \"1\" if length indication is present, \"0\" otherwise (int)\n\n\"obj\" -- elements of the object (array)\n\n\"class\" -- RFC4884 class (int)\n\n\"type\" -- RFC4884 type (int)\n\n\"mpls\" -- [optional] MPLS data, RFC4950, shown when class is \"1\" and type is \"1\" (array)\n\n\"exp\" -- for experimental use (int)\n\n\"label\" -- mpls label (int)\n\n\"s\" -- bottom of stack (int)\n\n\"ttl\" -- time to live value (int)\n\n\"size\" -- packet size (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp for start of measurement (int)\n\n\"type\" -- \"traceroute\" (string)\n\nExample result:\n\n# Version 4570 DNS Lookup\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- [optional] IP version: \"4\" or \"6\" (int)\n\n\"dst_addr\" -- [optional] IP address of the destination (string)\n\n\"dst_name\" -- [optional] hostname of the destination (string)\n\n\"error\" -- [optional] error message (associative array)\n\n\"timeout\" -- query timeout (int)\n\n\"getaddrinfo\" -- error message (string)\n\n\"from\" -- [optional] IP address of the source (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"TCP\" or \"UDP\" (string)\n\n\"qbuf\" -- [optional] query payload buffer which was sent to the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"result\" -- [optional] response from the DNS server (associative array)\n\n\"ANCOUNT\" -- answer count, RFC 1035 4.1.1 (int)\n\n\"ARCOUNT\" -- additional record count, RFC 1035, 4.1.1 (int)\n\n\"ID\" -- query ID, RFC 1035 4.1.1 (int)\n\n\"NSCOUNT\" -- name server count (int)\n\n\"QDCOUNT\" -- number of queries (int)\n\n\"abuf\" -- answer payload buffer from the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"answers\" -- first two records from the response decoded by the probe, if they are TXT or SOA; other RR can be decoded from \"abuf\" (array)\n\nEach element is an associative array consisting of:\n\n\"MNAME\" -- domain name, RFC 1035, 3.1.13 (string)\n\n\"NAME\" -- domain name. (string)\n\n\"RDATA\" -- [type TXT] txt value, (string)\n\n\"RNAME\" -- [if type SOA] mailbox, RFC 1035 3.3.13 (string)\n\n\"SERIAL\" -- [type SOA] zone serial number, RFC 1035 3.3.13 (int)\n\n\"TTL\" -- [type SOA] time to live, RFC 1035 4.1.3 (int)\n\n\"TYPE\" -- RR \"SOA\" or \"TXT\" (string), RFC 1035\n\n\"rt\" -- [optional] response time in milli seconds (float)\n\n\"size\" -- [optional] response size (int)\n\n\"src_addr\" -- [optional] the source IP address added by the probe (string).\n\n\"subid\" -- [optional] sequence number of this result within a group of results, available if the resolution is done by the probe's local resolver\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"retry\" -- [optional] retry count (int)\n\n\"timestamp\" -- start time, in Unix timestamp (int)\n\n\"type\" -- \"dns\" (string)\n\nNotes:\n\nIf a hostname was provided, both the hostname (dst_name) and the IP address (dst_addr) will be in the response.\n\nIf an IP address was provided, the name field will not be filled, unless the address which was given differs from the probe's resolution of the address. For instance, if \"2001:0DB8:0:0::1\" was provided, and the probe resolves it to \"2001:0DB8::1\", the first value will be returned as the name and the second as the address.\n\nThe dst_addr field will always be present, except when there is an error.\n\nExample result:\n\n6.4. HTTP View changes since previous version.\n\nResult:\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"result\" -- results of query (array)\n\nEach element is an associative array consisting of:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bsize\" -- size of body in octets (int)\n\n\"dnserr\" -- [optional] DNS resolution failed (string)\n\n\"dst_addr\" -- target address (string)\n\n\"err\" -- [optional] other failure (string)\n\n\"header\" -- [optional] elements are strings. The last string can be empty to indicate the end of enders or end with \"[...]\" to indicate truncation (array)\n\n\"hsize\" -- header size in octets (int)\n\n\"method\" -- \"GET\", \"HEAD\", or \"POST\" (string)\n\n\"readtiming\" -- [optional] timing results for reply data (array)\n\nEach element is an associative array consisting of:\n\n\"t\" -- time since starting to connect when data is received (in milli seconds) (float)\n\n\"o\" -- offset in stream of reply data (int)\n\n\"res\" -- HTTP result code (int)\n\n\"rt\" -- time to execute request excluding DNS (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"subid\" -- [optional] sequence number of this result within a group of results, when the 'all' option is used without the 'combine' option (int)\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"time\" -- [optional] Unix timestamp, when the 'all' option is used with the 'combine' option (int)\n\n\"ttc\" -- [optional] time to connect to the target (in milli seconds) (float)\n\n\"ttfb\" -- [optional] time to first response byte received by measurent code after starting to connect (in milli seconds) (float)\n\n\"ttr\" -- [optional] time to resolve the DNS name (in milli seconds) (float)\n\n\"ver\" -- major, minor version of http server (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"http\" (string)\n\n\"uri\" -- request uri (string)\n\nExample result:\n\n# Version 4570 TLS (SSL) GET Cert\n\nView changes since previous version.\n\nResult:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"cert\" -- results of query (array)\n\nEach element of the array is a string containing a base 64 encoded certificate. Newlines are replaced with \"\\n\"\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dst_port\" -- port name (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"method\" -- \"SSL\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"rt\" -- [optional] response time in milli seconds from starting to connect to receving the certificates (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"ttc\" -- [optional] time in milli seconds that it took to connect (over TCP) to the target (float)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"sslcert\" (string)\n\n\"ver\" -- (SSL) protocol versioN (string)\n\nExample result:\n\n# Version 4610\n\nVersion 4610 is identified by a value between \"4610\" and \"4749\" for the key fw in the result.\n\nChanges between 4570 and 4610\n\nAdditional key \"resultset\" in DNS\n\nfor TCP traceroute, \"flags\" field in the result and \"TCP\" in \"proto\" (actually from fw >= 4600)\n\n# Version 4610 Ping / v6 Ping\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"avg\" -- average round-trip time (float)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dup\" -- number of duplicate packets (int)\n\n\"from\" -- IP address of the probe as known by the controller (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"max\" -- maximum round-trip time (float)\n\n\"min\" -- minimum round-trip time (float)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"name\" -- name of the destination (deprecated) (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"ICMP\" (string)\n\n\"rcvd\" -- number of packets received (int)\n\n\"result\" -- variable content, depending on type of response (array of objects)\n\nobjects have the following fields:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Error\n\n\"error\" -- description of error (string)\n\nCase: Reply\n\n\"rtt\" -- round-trip-time in milliseconds (float)\n\n\"src_Addr\" -- [optional] source address if different from the source address in first reply (string)\n\n\"ttl\" -- [optional] time-to-live reply if different from ttl in first reply (int)\n\n\"dup\" -- [optional] signals that the reply is a duplicate (int)\n\n\"sent\" -- number of packets sent (int)\n\n\"size\" -- packet size (data part, not including IP and ICMP header) (int)\n\n\"src_addr\" -- source address used by probe (missing due to a bug)(string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttl\" -- time-to-live field in the first reply (missing due to a bug)(int)\n\n\"type\" -- \"ping\" (string)\n\nExample result:\n\n# Version 4610 Traceroute / v6 Traceroute\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"endtime\" -- Unix timestamp for end of measurement (int)\n\n\"from\" -- IP address of the probe as know by controller (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (from 4650) (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"paris_id\" -- variation for the Paris mode of traceroute (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"UDP\", \"ICMP\", or \"TCP\" (string)\n\n\"destination_ip_responded\" -- whether the last hop matches the destination address (boolean)\n\n\"result\" -- list of hop elements (array of objects)\n\nobjects have the following fields:\n\n\"hop\" -- hop number (int)\n\n\"error\" -- [optional] when an error occurs trying to send a packet. In that case there will not be a result structure. (string)\n\n\"result\" -- variable content, depending on type of response (array of objects)\n\nobjects have the following fields:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Reply\n\n\"err\" -- (optional) error ICMP: \"N\" (network unreachable,), \"H\" (destination unreachable), \"A\" (administratively prohibited), \"P\" (protocol unreachable), \"p\" (port unreachable) \"h\" (beyond scope, from fw 4650) (string) Unrecognized error codes are represented as integers\n\n\"from\" -- IPv4 or IPv6 source address in reply (string)\n\n\"ittl\" -- (optional) time-to-live in packet that triggered the error ICMP. Omitted if equal to 1 (int)\n\n\"edst\" -- (optional) destination address in the packet that triggered the error ICMP if different from the target of the measurement (string)\n\n\"late\" -- (optional) number of packets a reply is late, in this case rtt is not present (int)\n\n\"mtu\" -- (optional) path MTU from a packet too big ICMP (int)\n\n\"rtt\" -- round-trip-time of reply, not present when the response is late (float)\n\n\"size\" -- size of reply (int)\n\n\"ttl\" -- time-to-live in reply (int)\n\n\"flags\" -- (optional) TCP flags in the reply packet, for TCP traceroute, concatenated, in the order 'F' (FIN), 'S' (SYN), 'R' (RST), 'P' (PSH), 'A' (ACK), 'U' (URG) (string)\n\n\"dstoptsize\" -- (optional) size of destination options header (IPv6) (int)\n\n\"hbhoptsize\" -- (optional) size of hop-by-hop options header (IPv6) (int)\n\n\"icmpext\" -- [optional] information when icmp header is found in reply (object with the following fields:)\n\n\"version\" -- RFC4884 version (int)\n\n\"rfc4884\" -- \"1\" if length indication is present, \"0\" otherwise (int)\n\n\"obj\" -- elements of the object (array of objects)\n\nobjects have the following fields:\n\n\"class\" -- RFC4884 class (int)\n\n\"type\" -- RFC4884 type (int)\n\n\"mpls\" -- [optional] MPLS data, RFC4950, shown when class is \"1\" and type is \"1\" (array of objects)\n\nobjects have the following fields:\n\n\"exp\" -- for experimental use (int)\n\n\"label\" -- mpls label (int)\n\n\"s\" -- bottom of stack (int)\n\n\"ttl\" -- time to live value (int)\n\n\"size\" -- packet size (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp for start of measurement (int)\n\n\"type\" -- \"traceroute\" (string)\n\nExample result:\n\n# Version 4610 DNS Lookup\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- [optional] IP version: \"4\" or \"6\" (int)\n\n\"dst_addr\" -- [optional] IP address of the destination (string)\n\n\"dst_name\" -- [optional] hostname of the destination (string)\n\n\"error\" -- [optional] error message (object with the following fields:)\n\n\"timeout\" -- query timeout (int)\n\n\"getaddrinfo\" -- error message (string)\n\n\"from\" -- [optional] IP address of the source (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (from 4650) (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"TCP\" or \"UDP\" (string)\n\n\"qbuf\" -- [optional] query payload buffer which was sent to the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"result\" -- [optional] response from the DNS server (object with the following fields:)\n\n\"ANCOUNT\" -- answer count, RFC 1035 4.1.1 (int)\n\n\"ARCOUNT\" -- additional record count, RFC 1035, 4.1.1 (int)\n\n\"ID\" -- query ID, RFC 1035 4.1.1 (int)\n\n\"NSCOUNT\" -- name server count (int)\n\n\"QDCOUNT\" -- number of queries (int)\n\n\"abuf\" -- answer payload buffer from the server, UU encoded (string)\n\nSee example code for decoding the value\n\n\"answers\" -- first two records from the response decoded by the probe, if they are TXT or SOA; other RR can be decoded from \"abuf\" (array of objects)\n\nobjects have the following fields:\n\n\"MNAME\" -- domain name, RFC 1035, 3.1.13 (string)\n\n\"NAME\" -- domain name. (string)\n\n\"RDATA\" -- [type TXT] txt value (from 4710, list of strings, before it was a single string)\n\n\"RNAME\" -- [if type SOA] mailbox, RFC 1035 3.3.13 (string)\n\n\"SERIAL\" -- [type SOA] zone serial number, RFC 1035 3.3.13 (int)\n\n\"TTL\" -- [type SOA] time to live, RFC 1035 4.1.3 (int)\n\n\"TYPE\" -- RR \"SOA\" or \"TXT\" (string), RFC 1035\n\n\"rt\" -- [optional] response time in milli seconds (float)\n\n\"size\" -- [optional] response size (int)\n\n\"src_addr\" -- [optional] the source IP address added by the probe (string).\n\n\"subid\" -- [optional] sequence number of this result within a group of results, available if the resolution is done by the probe's local resolver\n\n\"submax\" -- [optional] total number of results within a group (int)\n\nresultset - [optional] an array of objects containing all the fields of a DNS result object, except for the fields: fw, from, msm_id, prb_id, and type. Available for queries sent to each local resolver.\n\n\"retry\" -- [optional] retry count (int)\n\n\"timestamp\" -- start time, in Unix timestamp (int)\n\n\"type\" -- \"dns\" (string)\n\nNotes:\n\nIf a hostname was provided, both the hostname (dst_name) and the IP address (dst_addr) will be in the response.\n\nIf an IP address was provided, the name field will not be filled, unless the address which was given differs from the probe's resolution of the address. For instance, if \"2001:0DB8:0:0::1\" was provided, and the probe resolves it to \"2001:0DB8::1\", the first value will be returned as the name and the second as the address.\n\nThe dst_addr field will always be present, except when there is an error.\n\nExample result:\n\nExample with resultset:\n\n# Version 4610 HTTP\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (from 4650) (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"result\" -- results of query (array of objects)\n\nobjects have the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bsize\" -- size of body in octets (int)\n\n\"dnserr\" -- [optional] DNS resolution failed (string)\n\n\"dst_addr\" -- target address (string)\n\n\"err\" -- [optional] other failure (string)\n\n\"header\" -- [optional] elements are strings. The last string can be empty to indicate the end of enders or end with \"[...]\" to indicate truncation (array)\n\n\"hsize\" -- header size in octets (int)\n\n\"method\" -- \"GET\", \"HEAD\", or \"POST\" (string)\n\n\"readtiming\" -- [optional] timing results for reply data (array of objects)\n\nobjects have the following fields:\n\n\"t\" -- time since starting to connect when data is received (in milli seconds) (float)\n\n\"o\" -- offset in stream of reply data (string) Due to a bug in the code this is currently a string. It will be changed to an integer in a future version.\n\n\"res\" -- HTTP result code (int)\n\n\"rt\" -- time to execute request excluding DNS (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"subid\" -- [optional] sequence number of this result within a group of results, when the 'all' option is used without the 'combine' option (int)\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"time\" -- [optional] Unix timestamp, when the 'all' option is used with the 'combine' option (int)\n\n\"ttc\" -- [optional] time to connect to the target (in milli seconds) (float)\n\n\"ttfb\" -- [optional] time to first response byte received by measurent code after starting to connect (in milli seconds) (float)\n\n\"ttr\" -- [optional] time to resolve the DNS name (in milli seconds) (float)\n\n\"ver\" -- major, minor version of http server (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"http\" (string)\n\n\"uri\" -- request uri (string)\n\nExample result:\n\n# Version 4610 NTP\n\n(first introduced in firmware 4660)\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dst_port\" -- port name (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"li\" -- leap indicator, values \"no\", \"61\", \"59\", or \"unknown\" (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"mode\" -- \"server\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"poll\" -- poll interval in seconds (float)\n\n\"prb_id\" -- source probe ID (int)\n\n\"precision\" -- precision of the server's clock in seconds (float)\n\n\"proto\" -- \"UDP\" (string)\n\n\"ref-id\" -- server's reference clock (string)\n\n\"ref-ts\" -- server's reference timestamp in NTP seconds (float)\n\n\"result\" -- results of query (array of objects)\n\nobjects have the following fields:\n\n\"final-ts\" -- NTP time the response from the server is received (float)\n\n\"offset\" -- clock offset between client and server in seconds (float)\n\n\"origin-ts\" -- NTP time the request was sent (float)\n\n\"receive-ts\" -- NTP time the server received the request (float)\n\n\"rtt\" -- round trip time between client and server in seconds (float)\n\n\"transmit-ts\" -- NTP time the server sent the response (float)\n\n\"root-delay\" -- round-trip delay from server to stratum 0 time source in seconds (float)\n\n\"root-dispersion\" -- total dispersion to stratum 0 time source in seconds (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"stratum\" -- distance in hops from server to primary time source (int)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"ntp\" (string)\n\n\"version\" -- NTP protocol version (int)\n\nExample result:\n\n# Version 4610 TLS (SSL) GET Cert\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"alert\" -- [optional] error sent by server (see RFC 5246, Section 7.2) (from firmware 4720) (object with the following fields:)\n\n\"level\" -- AlertLevel (integer)\n\n\"description\" -- AlertDescription (integer)\n\n\"cert\" -- [optional] results of query, not present if \"alert\" is present (array of strings)\n\nEach string contains a base 64 encoded certificate. Newlines are replaced with \"\\n\"\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dst_port\" -- port name (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (from 4650) (int)\n\n\"method\" -- \"SSL\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"rt\" -- [optional] response time in milli seconds from starting to connect to receving the certificates (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"ttc\" -- [optional] time in milli seconds that it took to connect (over TCP) to the target (float)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"sslcert\" (string)\n\n\"ver\" -- (SSL) protocol version (string)\n\nExample result:\n\n# Version 4750\n\nVersion 4750 is identified by a value between \"4750\" and \"4999\" for the key fw in the result.\n\nChanges between 4610 and 4749\n\n\"Lts\" in all measurements\n\nRDATA field in DNS measuremets is now a list of strings\n\nEscape sequence for DNS measurements is now \\ddd (three decimal digits)\n\n# Version 4750 Ping / v6 Ping\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"avg\" -- average round-trip time (float)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dup\" -- number of duplicate packets (int)\n\n\"from\" -- IP address of the probe as known by the controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"max\" -- maximum round-trip time (float)\n\n\"min\" -- minimum round-trip time (float)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"Ping\" (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"ICMP\" (string)\n\n\"rcvd\" -- number of packets received (int)\n\n\"result\" -- variable content, depending on type of response (array of objects)\n\nobjects have the following fields:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Error\n\n\"error\" -- description of error (string)\n\nCase: Reply\n\n\"rtt\" -- round-trip-time in milliseconds (float)\n\n\"src_Addr\" -- [optional] source address if different from the source address in first reply (string)\n\n\"ttl\" -- [optional] time-to-live reply if different from ttl in first reply (int)\n\n\"dup\" -- [optional] signals that the reply is a duplicate (int)\n\n\"sent\" -- number of packets sent (int)\n\n\"size\" -- packet size (data part, not including IP and ICMP header) (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttl\" -- time-to-live field in the first reply (missing due to a bug)(int)\n\n\"ttr\" -- time to resolve dst_name in milliseconds (from version 4900) (float)\n\n\"type\" -- \"ping\" (string)\n\nExample result:\n\n# Version 4750 Traceroute / v6 Traceroute\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"endtime\" -- Unix timestamp for end of measurement (int)\n\n\"from\" -- IP address of the probe as know by controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"Traceroute\" (string)\n\n\"paris_id\" -- variation for the Paris mode of traceroute (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"UDP\", \"ICMP\", or \"TCP\" (string)\n\n\"destination_ip_responded\" -- whether the last hop matches the destination address (boolean)\n\n\"result\" -- list of hop elements (array of objects)\n\nobjects have the following fields:\n\n\"hop\" -- hop number (int)\n\n\"error\" -- [optional] when an error occurs trying to send a packet. In that case there will not be a result structure. (string)\n\n\"result\" -- variable content, depending on type of response (array of objects)\n\nobjects have the following fields:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Reply\n\n\"err\" -- (optional) error ICMP: \"N\" (network unreachable,), \"H\" (destination unreachable), \"A\" (administratively prohibited), \"P\" (protocol unreachable), \"p\" (port unreachable) \"h\" (string) Unrecognized error codes are represented as integers\n\n\"from\" -- IPv4 or IPv6 source address in reply (string)\n\n\"itos\" -- (optional) type-of-service (IPv6 traffic class) in the packet that triggered the error ICMP. Omitted if zero and the TOS/Traffic Class field is not set in outgoing packets (int) (from version 4940)\n\n\"ittl\" -- (optional) time-to-live in the packet that triggered the error ICMP. Omitted if equal to 1 (int)\n\n\"edst\" -- (optional) destination address in the packet that triggered the error ICMP if different from the target of the measurement (string)\n\n\"late\" -- (optional) number of packets a reply is late, in this case rtt is not present (int)\n\n\"mtu\" -- (optional) path MTU from a packet too big ICMP (int)\n\n\"rtt\" -- round-trip-time of reply, not present when the response is late (float)\n\n\"size\" -- size of reply (int)\n\n\"ttl\" -- time-to-live in reply (int)\n\n\"flags\" -- (optional) TCP flags in the reply packet, for TCP traceroute, concatenated, in the order 'F' (FIN), 'S' (SYN), 'R' (RST), 'P' (PSH), 'A' (ACK), 'U' (URG) (string)\n\n\"dstoptsize\" -- (optional) size of destination options header (IPv6) (int)\n\n\"hbhoptsize\" -- (optional) size of hop-by-hop options header (IPv6) (int)\n\n\"icmpext\" -- [optional] information when icmp header is found in reply (object with the following fields:)\n\n\"version\" -- RFC4884 version (int)\n\n\"rfc4884\" -- \"1\" if length indication is present, \"0\" otherwise (int)\n\n\"obj\" -- elements of the object (array of objects).\n\nobjects have the following fields:\n\n\"class\" -- RFC4884 class (int)\n\n\"type\" -- RFC4884 type (int)\n\n\"mpls\" -- [optional] MPLS data, RFC4950, shown when class is \"1\" and type is \"1\" (array of objects)\n\nobjects have the following fields:\n\n\"exp\" -- for experimental use (int)\n\n\"label\" -- mpls label (int)\n\n\"s\" -- bottom of stack (int)\n\n\"ttl\" -- time to live value (int)\n\n\"size\" -- packet size (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp for start of measurement (int)\n\n\"tos\" -- (optional) type-of-service (IPv6 traffic class) in the reply packet. Omitted if zero and the TOS/Traffic Class field is not set in outgoing packets (int) (from version 4940)\n\n\"ttr\" -- time to resolve dst_name in milliseconds (from version 4900) (float)\n\n\"type\" -- \"traceroute\" (string)\n\nExample result:\n\n# Version 4750 DNS Lookup\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- [optional] IP version: \"4\" or \"6\" (int)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"dst_addr\" -- [optional] IP address of the destination (string)\n\n\"dst_name\" -- [optional] hostname of the destination (string)\n\n\"error\" -- [optional] error message (object with the following fields:)\n\n\"timeout\" -- query timeout (int)\n\n\"getaddrinfo\" -- error message (string)\n\n\"from\" -- [optional] IP address of the source (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"Tdig\" (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"TCP\" or \"UDP\" (string)\n\n\"qbuf\" -- [optional] query payload buffer which was sent to the server, base64 encoded (string)\n\nSee example code for decoding the value\n\n\"result\" -- [optional] response from the DNS server (object with the following fields:)\n\n\"ANCOUNT\" -- answer count, RFC 1035 4.1.1 (int)\n\n\"ARCOUNT\" -- additional record count, RFC 1035, 4.1.1 (int)\n\n\"ID\" -- query ID, RFC 1035 4.1.1 (int)\n\n\"NSCOUNT\" -- name server count (int)\n\n\"QDCOUNT\" -- number of queries (int)\n\n\"abuf\" -- answer payload buffer from the server, base64 encoded (string)\n\nSee example code for decoding the value\n\n\"answers\" -- first two records from the response decoded by the probe, if they are TXT or SOA; other RR can be decoded from \"abuf\" (array of objects)\n\nobjects have the following fields:\n\n\"MNAME\" -- domain name, RFC 1035, 3.1.13 (string)\n\n\"NAME\" -- domain name. (string)\n\n\"RDATA\" -- [type TXT] txt value (list of strings)\n\n\"RNAME\" -- [if type SOA] mailbox, RFC 1035 3.3.13 (string)\n\n\"SERIAL\" -- [type SOA] zone serial number, RFC 1035 3.3.13 (int)\n\n\"TTL\" -- [type SOA] time to live, RFC 1035 4.1.3 (int)\n\n\"TYPE\" -- RR \"SOA\" or \"TXT\" (string), RFC 1035\n\n\"rt\" -- [optional] response time in milli seconds (float)\n\n\"size\" -- [optional] response size (int)\n\nresultset - [optional] an array of objects containing all the fields of a DNS result object, except for the fields: fw, from, msm_id, prb_id, and type. Available for queries sent to each local resolver.\n\n\"retry\" -- [optional] retry count (int)\n\n\"src_addr\" -- [optional] the source IP address added by the probe (string).\n\n\"subid\" -- [optional] sequence number of this result within a group of results, available if the resolution is done by the probe's local resolver (int)\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"timestamp\" -- start time, in Unix timestamp (int)\n\n\"type\" -- \"dns\" (string)\n\nNotes:\n\nIf a hostname was provided, both the hostname (dst_name) and the IP address (dst_addr) will be in the response.\n\nIf an IP address was provided, the name field will not be filled, unless the address which was given differs from the probe's resolution of the address. For instance, if \"2001:0DB8:0:0::1\" was provided, and the probe resolves it to \"2001:0DB8::1\", the first value will be returned as the name and the second as the address.\n\nThe dst_addr field will always be present, except when there is an error.\n\nExample result:\n\nExample with resultset:\n\n# Version 4750 HTTP\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"HTTPGet\" (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"result\" -- results of query (array of objects)\n\nobjects have the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bsize\" -- size of body in octets (int)\n\n\"dnserr\" -- [optional] DNS resolution failed (string)\n\n\"dst_addr\" -- target address (string)\n\n\"err\" -- [optional] other failure (string)\n\n\"header\" -- [optional] elements are strings. The last string can be empty to indicate the end of enders or end with \"[...]\" to indicate truncation (array of strings)\n\n\"hsize\" -- header size in octets (int)\n\n\"method\" -- \"GET\", \"HEAD\", or \"POST\" (string)\n\n\"readtiming\" -- [optional] timing results for reply data (array of objects)\n\nobjects have the following fields:\n\n\"o\" -- offset in stream of reply data (int, was string before 4790)\n\n\"t\" -- time since starting to connect when data is received (in milli seconds) (float)\n\n\"res\" -- HTTP result code (int)\n\n\"rt\" -- time to execute request excluding DNS (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"subid\" -- [optional] sequence number of this result within a group of results, when the 'all' option is used without the 'combine' option (int)\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"time\" -- [optional] Unix timestamp, when the 'all' option is used with the 'combine' option (int)\n\n\"ttc\" -- [optional] time to connect to the target (in milli seconds) (float)\n\n\"ttfb\" -- [optional] time to first response byte received by measurent code after starting to connect (in milli seconds) (float)\n\n\"ttr\" -- [optional] time to resolve the DNS name (in milli seconds) (float)\n\n\"ver\" -- major, minor version of http server (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"http\" (string)\n\n\"uri\" -- request uri (string)\n\nExample result:\n\n# Version 4750 NTP\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dst_port\" -- port name (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"li\" -- leap indicator, values \"no\", \"61\", \"59\", or \"unknown\" (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"mode\" -- \"server\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"Ntp\" (string)\n\n\"poll\" -- poll interval in seconds (float)\n\n\"prb_id\" -- source probe ID (int)\n\n\"precision\" -- precision of the server's clock in seconds (float)\n\n\"proto\" -- \"UDP\" (string)\n\n\"ref-id\" -- server's reference clock (string)\n\n\"ref-ts\" -- server's reference timestamp in NTP seconds (float)\n\n\"result\" -- results of query (array of objects)\n\nobjects have the following fields:\n\n\"final-ts\" -- NTP time the response from the server is received (float)\n\n\"offset\" -- clock offset between client and server in seconds (float)\n\n\"origin-ts\" -- NTP time the request was sent (float)\n\n\"receive-ts\" -- NTP time the server received the request (float)\n\n\"rtt\" -- round trip time between client and server in seconds (float)\n\n\"transmit-ts\" -- NTP time the server sent the response (float)\n\n\"root-delay\" -- round-trip delay from server to stratum 0 time source in seconds (float)\n\n\"root-dispersion\" -- total dispersion to stratum 0 time source in seconds (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"stratum\" -- distance in hops from server to primary time source (int)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttr\" -- time to resolve dst_name in milliseconds (from version 4900) (float)\n\n\"type\" -- \"ntp\" (string)\n\n\"version\" -- NTP protocol version (int)\n\nExample result:\n\n# Version 4750 TLS (SSL) GET Cert\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"alert\" -- [optional] error sent by server (see RFC 5246, Section 7.2), object with the following fields:\n\n\"level\" -- AlertLevel (integer)\n\n\"description\" -- AlertDescription (integer)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"cert\" -- [optional] results of query, not present if \"alert\" is present (array of strings)\n\nEach element of the array is a string containing a base 64 encoded certificate. Newlines are replaced with \"\\n\"\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dst_port\" -- port name (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"method\" -- \"SSL\" or \"TLS\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"SSLCert\" (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"rt\" -- [optional] response time in milli seconds from starting to connect to receving the certificates (float)\n\n\"server_cipher\" -- [optional] cipher selected by server as a hexadecimal number (from version 4900) (string)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"ttc\" -- [optional] time in milli seconds that it took to connect (over TCP) to the target (float)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttr\" -- time to resolve dst_name in milliseconds (from version 4900) (float)\n\n\"type\" -- \"sslcert\" (string)\n\n\"ver\" -- (SSL/TLS) protocol version (string)\n\nExample result:\n\n# Version 4750 Wifi measurement\n\n(first introduced in firmware 4755)\n\nA measurement result is a JSON object with the following fields:\n\n\"bssid_list\" -- array of objects with the following fields:\n\n\"auth\" -- authentication options (string)\n\n\"bssid\" -- MAC address of base station (string)\n\n\"freq\" -- channel frequency in MHz (string)\n\n\"ssid\" -- SSID (string)\n\n\"strength\" -- signal strength (dB)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"error\" -- reason for failure (string)\n\n\"fw\" -- probe's firmware version (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- \"Wifi\" (string)\n\n\"prb_id\" -- probe identifier (int)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"wifi\" (string)\n\n\"wpa_supplicant\" -- object with the following fields:\n\n\"EAP TLS cipher\" -- (string)\n\n\"EAP state\" -- (string)\n\n\"EAP-TTLSv0 Phase2 method\" -- (string)\n\n\"EAP-PEAPv0 Phase2 method\" -- (string)\n\n\"Supplicant PAE state\" -- (string)\n\n\"address\" -- local MAC address (string)\n\n\"bssid\" -- MAC address of base station (string)\n\n\"connect-time\" -- time in seconds spend trying to connect (integer)\n\n\"group_cipher\" -- multicast cipher (string)\n\n\"id\" -- (string)\n\n\"key_mgmt\" -- key management protocol (string)\n\n\"mode\" -- (string)\n\n\"pairwise_cipher\" -- point-to-point cipher (string)\n\n\"selectedMethod\" -- (string)\n\n\"ssid\" -- SSID (string)\n\n\"suppPortStatus\" -- (string)\n\n\"wpa_state\" -- final state (string)\n\nExample result:\n\n# Version 5000\n\nVersion 5000 is identified by a value of \"5000\" or greater for the key fw in the result. The \"mver\" is 2.0.0\n\nChanges between 4750 and 4999\n\nMeasurements have 'bundle' if they are part of a wifi measurement group.\n\nThe 'o' field in readtiming in http results is now an integer instead of a string\n\nA 'ttr' field to record how long name resolution took\n\nSslgetcert reports in 'server_cipher' which cipher was selected by the server\n\nA 'itos' and 'tos' fields to record the type-of-service (IPv6 traffic class) field\n\nWifi measurements are discontinued.\n\nChanges from 5010 (mver 2.2.0)\n\nOptional ttl field in DNS measurements\n\n# Version 5000 Ping / v6 Ping\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"avg\" -- average round-trip time (float)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dup\" -- number of duplicate packets (int)\n\n\"from\" -- IP address of the probe as known by the controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"max\" -- maximum round-trip time (float)\n\n\"min\" -- minimum round-trip time (float)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"Ping\" (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"ICMP\" (string)\n\n\"rcvd\" -- number of packets received (int)\n\n\"result\" -- variable content, depending on type of response (array of objects)\n\nobjects have the following fields:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Error\n\n\"error\" -- description of error (string)\n\nCase: Reply\n\n\"rtt\" -- round-trip-time in milliseconds (float)\n\n\"src_Addr\" -- [optional] source address if different from the source address in first reply (string)\n\n\"ttl\" -- [optional] time-to-live reply if different from ttl in first reply (int)\n\n\"dup\" -- [optional] signals that the reply is a duplicate (int)\n\n\"sent\" -- number of packets sent (int)\n\n\"size\" -- packet size (data part, not including IP and ICMP header) (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttl\" -- time-to-live field in the first reply (missing due to a bug)(int)\n\n\"ttr\" -- time to resolve dst_name in milliseconds (float)\n\n\"type\" -- \"ping\" (string)\n\nExample result:\n\n# Version 5000 Traceroute / v6 Traceroute\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"endtime\" -- Unix timestamp for end of measurement (int)\n\n\"from\" -- IP address of the probe as know by controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"Traceroute\" (string)\n\n\"paris_id\" -- variation for the Paris mode of traceroute (int)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"UDP\", \"ICMP\", or \"TCP\" (string)\n\n\"destination_ip_responded\" -- whether the last hop matches the destination address (boolean)\n\n\"result\" -- list of hop elements (array of objects)\n\nobjects have the following fields:\n\n\"hop\" -- hop number (int)\n\n\"error\" -- [optional] when an error occurs trying to send a packet. In that case there will not be a result structure. (string)\n\n\"result\" -- variable content, depending on type of response (array of objects)\n\nobjects have the following fields:\n\nCase: Timeout\n\n\"x\" -- \"*\" (string)\n\nCase: Reply\n\n\"err\" -- (optional) error ICMP: \"N\" (network unreachable,), \"H\" (destination unreachable), \"A\" (administratively prohibited), \"P\" (protocol unreachable), \"p\" (port unreachable) \"h\" (string) Unrecognized error codes are represented as integers\n\n\"from\" -- IPv4 or IPv6 source address in reply (string)\n\n\"itos\" -- (optional) type-of-service (IPv6 traffic class) in the packet that triggered the error ICMP. Omitted if zero and the TOS/Traffic Class field is not set in outgoing packets (int)\n\n\"ittl\" -- (optional) time-to-live in the packet that triggered the error ICMP. Omitted if equal to 1 (int)\n\n\"edst\" -- (optional) destination address in the packet that triggered the error ICMP if different from the target of the measurement (string)\n\n\"late\" -- (optional) number of packets a reply is late, in this case rtt is not present (int)\n\n\"mtu\" -- (optional) path MTU from a packet too big ICMP (int)\n\n\"rtt\" -- round-trip-time of reply, not present when the response is late (float)\n\n\"size\" -- size of reply (int)\n\n\"ttl\" -- time-to-live in reply (int)\n\n\"flags\" -- (optional) TCP flags in the reply packet, for TCP traceroute, concatenated, in the order 'F' (FIN), 'S' (SYN), 'R' (RST), 'P' (PSH), 'A' (ACK), 'U' (URG) (string)\n\n\"dstoptsize\" -- (optional) size of destination options header (IPv6) (int)\n\n\"hbhoptsize\" -- (optional) size of hop-by-hop options header (IPv6) (int)\n\n\"icmpext\" -- [optional] information when icmp header is found in reply (object with the following fields:)\n\n\"version\" -- RFC4884 version (int)\n\n\"rfc4884\" -- \"1\" if length indication is present, \"0\" otherwise (int)\n\n\"obj\" -- elements of the object (array of objects).\n\nobjects have the following fields:\n\n\"class\" -- RFC4884 class (int)\n\n\"type\" -- RFC4884 type (int)\n\n\"mpls\" -- [optional] MPLS data, RFC4950, shown when class is \"1\" and type is \"1\" (array of objects)\n\nobjects have the following fields:\n\n\"exp\" -- for experimental use (int)\n\n\"label\" -- mpls label (int)\n\n\"s\" -- bottom of stack (int)\n\n\"ttl\" -- time to live value (int)\n\n\"size\" -- packet size (int)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"timestamp\" -- Unix timestamp for start of measurement (int)\n\n\"tos\" -- (optional) type-of-service (IPv6 traffic class) in the reply packet. Omitted if zero and the TOS/Traffic Class field is not set in outgoing packets (int)\n\n\"ttr\" -- time to resolve dst_name in milliseconds (float)\n\n\"type\" -- \"traceroute\" (string)\n\nExample result:\n\n# Version 5000 DNS Lookup\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- [optional] IP version: \"4\" or \"6\" (int)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"dst_addr\" -- [optional] IP address of the destination (string)\n\n\"dst_name\" -- [optional] hostname of the destination (string)\n\n\"error\" -- [optional] error message (object with the following fields:)\n\n\"timeout\" -- query timeout (int)\n\n\"getaddrinfo\" -- error message (string)\n\n\"from\" -- [optional] IP address of the source (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"Tdig\" (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"proto\" -- \"TCP\" or \"UDP\" (string)\n\n\"qbuf\" -- [optional] query payload buffer which was sent to the server, base64 encoded (string)\n\nSee example code for decoding the value\n\n\"result\" -- [optional] response from the DNS server (object with the following fields:)\n\n\"ANCOUNT\" -- answer count, RFC 1035 4.1.1 (int)\n\n\"ARCOUNT\" -- additional record count, RFC 1035, 4.1.1 (int)\n\n\"ID\" -- query ID, RFC 1035 4.1.1 (int)\n\n\"NSCOUNT\" -- name server count (int)\n\n\"QDCOUNT\" -- number of queries (int)\n\n\"abuf\" -- answer payload buffer from the server, base64 encoded (string)\n\nSee example code for decoding the value\n\n\"answers\" -- first two records from the response decoded by the probe, if they are TXT or SOA; other RR can be decoded from \"abuf\" (array of objects)\n\nobjects have the following fields:\n\n\"MNAME\" -- domain name, RFC 1035, 3.1.13 (string)\n\n\"NAME\" -- domain name. (string)\n\n\"RDATA\" -- [type TXT] txt value (list of strings)\n\n\"RNAME\" -- [if type SOA] mailbox, RFC 1035 3.3.13 (string)\n\n\"SERIAL\" -- [type SOA] zone serial number, RFC 1035 3.3.13 (int)\n\n\"TTL\" -- [type SOA] time to live, RFC 1035 4.1.3 (int)\n\n\"TYPE\" -- RR \"SOA\" or \"TXT\" (string), RFC 1035\n\n\"rt\" -- [optional] response time in milli seconds (float)\n\n\"size\" -- [optional] response size (int)\n\n\"ttl\" -- [optional] TTL (hop limit for IPv6) field from UDP reply packet (from 5010) (int)\n\nresultset - [optional] an array of objects containing all the fields of a DNS result object, except for the fields: fw, from, msm_id, prb_id, and type. Available for queries sent to each local resolver.\n\n\"retry\" -- [optional] retry count (int)\n\n\"src_addr\" -- [optional] the source IP address added by the probe (string).\n\n\"subid\" -- [optional] sequence number of this result within a group of results, available if the resolution is done by the probe's local resolver (int)\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"timestamp\" -- start time, in Unix timestamp (int)\n\n\"type\" -- \"dns\" (string)\n\nNotes:\n\nIf a hostname was provided, both the hostname (dst_name) and the IP address (dst_addr) will be in the response.\n\nIf an IP address was provided, the name field will not be filled, unless the address which was given differs from the probe's resolution of the address. For instance, if \"2001:0DB8:0:0::1\" was provided, and the probe resolves it to \"2001:0DB8::1\", the first value will be returned as the name and the second as the address.\n\nThe dst_addr field will always be present, except when there is an error.\n\nExample result:\n\nExample with resultset:\n\n# Version 5000 HTTP\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"HTTPGet\" (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"result\" -- results of query (array of objects)\n\nobjects have the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bsize\" -- size of body in octets (int)\n\n\"dnserr\" -- [optional] DNS resolution failed (string)\n\n\"dst_addr\" -- target address (string)\n\n\"err\" -- [optional] other failure (string)\n\n\"header\" -- [optional] elements are strings. The last string can be empty to indicate the end of enders or end with \"[...]\" to indicate truncation (array of strings)\n\n\"hsize\" -- header size in octets (int)\n\n\"method\" -- \"GET\", \"HEAD\", or \"POST\" (string)\n\n\"readtiming\" -- [optional] timing results for reply data (array of objects)\n\nobjects have the following fields:\n\n\"o\" -- offset in stream of reply data (int)\n\n\"t\" -- time since starting to connect when data is received (in milli seconds) (float)\n\n\"res\" -- HTTP result code (int)\n\n\"rt\" -- time to execute request excluding DNS (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"subid\" -- [optional] sequence number of this result within a group of results, when the 'all' option is used without the 'combine' option (int)\n\n\"submax\" -- [optional] total number of results within a group (int)\n\n\"time\" -- [optional] Unix timestamp, when the 'all' option is used with the 'combine' option (int)\n\n\"ttc\" -- [optional] time to connect to the target (in milli seconds) (float)\n\n\"ttfb\" -- [optional] time to first response byte received by measurent code after starting to connect (in milli seconds) (float)\n\n\"ttr\" -- [optional] time to resolve the DNS name (in milli seconds) (float)\n\n\"ver\" -- major, minor version of http server (string)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"type\" -- \"http\" (string)\n\n\"uri\" -- request uri (string)\n\nExample result:\n\n# Version 5000 NTP\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dst_port\" -- port name (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"li\" -- leap indicator, values \"no\", \"61\", \"59\", or \"unknown\" (string)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"mode\" -- \"server\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"Ntp\" (string)\n\n\"poll\" -- poll interval in seconds (float)\n\n\"prb_id\" -- source probe ID (int)\n\n\"precision\" -- precision of the server's clock in seconds (float)\n\n\"proto\" -- \"UDP\" (string)\n\n\"ref-id\" -- server's reference clock (string)\n\n\"ref-ts\" -- server's reference timestamp in NTP seconds (float)\n\n\"result\" -- results of query (array of objects)\n\nobjects have the following fields:\n\n\"final-ts\" -- NTP time the response from the server is received (float)\n\n\"offset\" -- clock offset between client and server in seconds (float)\n\n\"origin-ts\" -- NTP time the request was sent (float)\n\n\"receive-ts\" -- NTP time the server received the request (float)\n\n\"rtt\" -- round trip time between client and server in seconds (float)\n\n\"transmit-ts\" -- NTP time the server sent the response (float)\n\n\"root-delay\" -- round-trip delay from server to stratum 0 time source in seconds (float)\n\n\"root-dispersion\" -- total dispersion to stratum 0 time source in seconds (float)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"stratum\" -- distance in hops from server to primary time source (int)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttr\" -- time to resolve dst_name in milliseconds (float)\n\n\"type\" -- \"ntp\" (string)\n\n\"version\" -- NTP protocol version (int)\n\nExample result:\n\n# Version 5000 TLS (SSL) GET Cert\n\nView changes since previous version.\n\nA measurement result is a JSON object with the following fields:\n\n\"af\" -- address family, 4 or 6 (integer)\n\n\"alert\" -- [optional] error sent by server (see RFC 5246, Section 7.2), object with the following fields:\n\n\"level\" -- AlertLevel (integer)\n\n\"description\" -- AlertDescription (integer)\n\n\"bundle\" -- [optional] instance ID for a collection of related measurement results (int)\n\n\"cert\" -- [optional] results of query, not present if \"alert\" is present (array of strings)\n\nEach element of the array is a string containing a base 64 encoded certificate. Newlines are replaced with \"\\n\"\n\n\"dst_addr\" -- IP address of the destination (string)\n\n\"dst_name\" -- name of the destination (string)\n\n\"dst_port\" -- port name (string)\n\n\"from\" -- IP address of the probe as known by controller (string)\n\n\"group_id\" -- [optional] If the measurement belongs to a group of measurements, the identifier of the group (int)\n\n\"lts\" -- last time synchronised. How long ago (in seconds) the clock of the probe was found to be in sync with that of a controller. The value -1 is used to indicate that the probe does not know whether it is in sync (int)\n\n\"method\" -- \"SSL\" or \"TLS\" (string)\n\n\"msm_id\" -- measurement identifier (int)\n\n\"msm_name\" -- measurement type \"SSLCert\" (string)\n\n\"prb_id\" -- source probe ID (int)\n\n\"rt\" -- [optional] response time in milli seconds from starting to connect to receving the certificates (float)\n\n\"server_cipher\" -- [optional] cipher selected by server as a hexadecimal number (string)\n\n\"src_addr\" -- source address used by probe (string)\n\n\"ttc\" -- [optional] time in milli seconds that it took to connect (over TCP) to the target (float)\n\n\"timestamp\" -- Unix timestamp (int)\n\n\"ttr\" -- time to resolve dst_name in milliseconds (float)\n\n\"type\" -- \"sslcert\" (string)\n\n\"ver\" -- (SSL/TLS) protocol version (string)"
    }
}