{
    "id": "dbpedia_3164_0",
    "rank": 65,
    "data": {
        "url": "https://www.home-assistant.io/integrations/homekit/",
        "read_more_link": "",
        "language": "en",
        "title": "HomeKit Bridge",
        "top_image": "https://www.home-assistant.io/images/default-social.png",
        "meta_img": "https://www.home-assistant.io/images/default-social.png",
        "images": [
            "https://my.home-assistant.io/badges/config_flow_start.svg",
            "https://www.home-assistant.io/images/screenshots/homekit_pairing_example.png",
            "https://brands.home-assistant.io/_/homekit/logo.png",
            "https://my.home-assistant.io/badges/config_flow_start.svg",
            "https://avatars.githubusercontent.com/bdraco?size=96",
            "https://www.home-assistant.io/images/footer-logo-text.svg",
            "https://www.home-assistant.io/images/frontpage/netlify.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Home Assistant"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Instructions on how to set up the HomeKit Bridge integration in Home Assistant.",
        "meta_lang": "en",
        "meta_favicon": "/images/favicon.ico",
        "meta_site_name": "Home Assistant",
        "canonical_link": "https://www.home-assistant.io/integrations/homekit/",
        "text": "The HomeKit Bridge integration allows you to make your Home Assistant entities available in Apple HomeKit, so they can be controlled from Apple’s Home app and Siri; even if those devices do not natively support HomeKit.\n\nPlease make sure that you have read the considerations listed below to save you some trouble later. However, if you do encounter issues, check out the troubleshooting section.\n\nConfiguration\n\nTo add the HomeKit Bridge integration to your Home Assistant instance, use this My button:\n\nHomeKit Bridge can be auto-discovered by Home Assistant. If an instance was found, it will be shown as Discovered. You can then set it up right away.\n\nManual configuration\n\nIf you want make specific changes to the way entities are published to HomeKit, override the IP address the HomeKit integration uses to communicate with your network or change the IP address the HomeKit uses to advertise itself to the network, then you will need to configure the HomeKit integration using an entry in your configuration.yamlThe configuration.yaml file is the main configuration file for Home Assistant. It lists the integrations to be loaded and their specific configurations. In some cases, the configuration needs to be edited manually directly in the configuration.yaml file. Most integrations can be configured in the UI. [Learn more] file.\n\nThis is an example entry of how that would look:\n\nSetup\n\nTo enable the HomeKit Bridge integration in Home Assistant, add the following to your configuration file:\n\nAfter Home Assistant has started, the entities (depending on the filter) are exposed to HomeKit if they are supported. To add them:\n\nOpen the Home Assistant frontend. A new card will display the pairing QR code and the pin code as seen in the example below. Note: If pin code is not displayed, check “Notifications” (the bell icon) in the lower-left of the Home Assistant UI.\n\nOpen the Apple Home app.\n\nClick Add Accessory, then scan the QR code or select Don't Have a Code or Can't Scan? and choose the Home Assistant Bridge.\n\nConfirm that you are adding an Uncertified Accessory by clicking on Add Anyway.\n\nEnter the PIN code (skip this step if you scanned the QR code).\n\nFollow the setup by clicking on Next and lastly Done in the top right-hand corner.\n\nThe Home Assistant Bridge and the Accessories should now be listed in the Home app.\n\nAfter the setup is completed, you should be able to control your Home Assistant integrations through Apple’s Home and Siri.\n\nMove Home Assistant install\n\nIf you would like to retain your HomeKit pairing when moving to a new Home Assistant device or installation, besides copying the configuration files you also need to copy the .storage/homekit.* file inside your configuration directory. Keep in mind that the folder is usually hidden by default, depending on your operating system.\n\nBefore you copy it, make sure to stop the old and new Home Assistant instances first entirely, otherwise it won’t work.\n\nConsiderations\n\nAccessory ID\n\nCurrently, this integration uses the entity_id to generate a unique accessory id (aid) for HomeKit. The aid is used to identify a device and save all configurations made for it. This, however, means that if you decide to change an entity_id that does not have a unique_id, all configurations for this accessory made in the Home app will be lost.\n\nDevice Limit\n\nThe HomeKit Accessory Protocol Specification only allows a maximum of 150 unique accessories (aid) per bridge. Be mindful of this when configuring the filter(s). If you plan on exceeding the 150 devices limit, it is possible to create multiple bridges. If you need specific configuration for some entities via entity_config be sure to add them to a bridge configured via YAML.\n\nMultiple HomeKit instances\n\nIf you create a HomeKit integration via the UI (i.e., Settings > Devices & services), it must be configured via the UI only. While the UI currently offers limited configuration options, any attempt to configure a HomeKit instance created in the UI via the configuration.yamlThe configuration.yaml file is the main configuration file for Home Assistant. It lists the integrations to be loaded and their specific configurations. In some cases, the configuration needs to be edited manually directly in the configuration.yaml file. Most integrations can be configured in the UI. [Learn more] file will result in another instance of HomeKit running on a different port.\n\nIt is recommended to only edit a HomeKit instance in the UI that was created in the UI, and likewise, only edit a HomeKit instance in YAML that was created in YAML.\n\nAccessory mode\n\nWhen exposing a Camera, Activity based remote (a remote that supports activities), Lock, or Television media player (a media_player with device class tv or receiver) to HomeKit, mode must be set to accessory, and the relevant include filter should be setup to only include a single entity.\n\nTo quickly add all accessory mode entities in the UI:\n\nCreate a new bridge via the UI (i.e., Settings > Devices & services).\n\nSelect media_player, remote, lock, and camera domains.\n\nComplete the flow as normal.\n\nAdditional HomeKit entries for each entity that must operate in accessory mode will be created for each entity that does not already have one.\n\nIf you have already created another HomeKit bridge for the non-accessory mode entities, the new bridge can safely be removed.\n\nPair each bridge or accessory.\n\nTo add a single entity in accessory mode:\n\nCreate a new bridge via the UI (i.e., Settings > Devices & services)\n\nBefore pairing the bridge, access the options for the bridge.\n\nChange the mode to accessory\n\nSelect the entity.\n\nComplete the options flow\n\nPair the accessory.\n\nConfigure Filter\n\nBy default, all entities except categorized entities (config, diagnostic, and system entities) are included. To limit which entities are being exposed to HomeKit, you can use the filter parameter. Keep in mind only supported integrations can be added.\n\nFilters are applied as follows:\n\nNo filter\n\nAll entities included\n\nOnly includes\n\nEntity listed in entities include: include\n\nOtherwise, entity matches domain include: include\n\nOtherwise, entity matches glob include: include\n\nOtherwise: exclude\n\nOnly excludes\n\nEntity listed in exclude: exclude\n\nOtherwise, entity matches domain exclude: exclude\n\nOtherwise, entity matches glob exclude: exclude\n\nOtherwise: include\n\nDomain and/or glob includes (may also have excludes)\n\nEntity listed in entities include: include\n\nOtherwise, entity listed in entities exclude: exclude\n\nOtherwise, entity matches glob include: include\n\nOtherwise, entity matches glob exclude: exclude\n\nOtherwise, entity matches domain include: include\n\nOtherwise: exclude\n\nDomain and/or glob excludes (no domain and/or glob includes)\n\nEntity listed in entities include: include\n\nOtherwise, entity listed in exclude: exclude\n\nOtherwise, entity matches glob exclude: exclude\n\nOtherwise, entity matches domain exclude: exclude\n\nOtherwise: include\n\nNo Domain and/or glob includes or excludes\n\nEntity listed in entities include: include\n\nOtherwise: exclude\n\nThe following characters can be used in entity globs:\n\n* - The asterisk represents zero, one, or multiple characters ? - The question mark represents zero or one character\n\nCategorized entities are not included (config, diagnostic, and system entities) unless they are explicitly matched by include_entity_globs or include_entities or selected in the UI in include mode.\n\nDocker Network Isolation\n\nThe advertise_ip option can be used to run this integration even inside an ephemeral Docker container with network isolation enabled, e.g., not using the host network.\n\nYou may need to set the default network interfaces Home Assistant uses, in its network configuration.\n\nTo use advertise_ip, add the option to your homekit configuration:\n\nRestart your Home Assistant instance. This feature requires running an mDNS forwarder on your Docker host, e.g., avahi-daemon in reflector mode.\n\nFirewall\n\nIf you have a firewall configured on your Home Assistant system, make sure you open the following ports:\n\nUDP: 5353\n\nTCP: 21063 (or the configured/used port in the integration settings).\n\nSupported integrations\n\nThe following integrations are currently supported:\n\nIntegration Type Name Description alarm_control_panel SecuritySystem All security systems. automation / input_boolean / remote / scene / script / vacuum Switch All represented as switches. input_select / select Switch Represented as a power strip with buttons for each option. binary_sensor Sensor Support for co2, door, garage_door, gas, moisture, motion, occupancy, opening, smoke and window device classes. Defaults to the occupancy device class for everything else. camera Camera All camera devices. HomeKit Secure Video is not supported at this time. climate Thermostat All climate devices. cover GarageDoorOpener All covers that support open and close and have garage or gate as their device_class. cover WindowCovering All covers that support set_cover_position. cover Door All covers that support set_cover_position and have door as their device_class. cover WindowCovering All covers that support open_cover and close_cover through value mapping. (open -> >=50; close -> <50) cover WindowCovering All covers that support open_cover, stop_cover and close_cover through value mapping. (open -> >70; close -> <30; stop -> every value in between) device_tracker / person Sensor Support for occupancy device class. fan Fan Support for on / off, direction and oscillating. fan Fan All fans that support speed and speed_list through value mapping: speed_list is assumed to contain values in ascending order. The numeric ranges of HomeKit map to a corresponding entry of speed_list. The first entry of speed_list should be equivalent to off to match HomeKit’s concept of fan speeds. (Example: speed_list = [off, low, high]; off -> <= 33; low -> between 33 and 66; high -> > 66) humidifier HumidifierDehumidifier Humidifier and Dehumidifier devices. light Light Support for on / off, brightness and rgb_color. lock DoorLock Support for lock / unlock. media_player MediaPlayer Represented as a series of switches which control on / off, play / pause, play / stop, or mute depending on supported_features of entity and the mode list specified in entity_config. media_player TelevisionMediaPlayer All media players that have tv as their device_class. Represented as Television and Remote accessories in HomeKit to control on / off, play / pause, select source, or volume increase / decrease, depending on supported_features of entity. Requires iOS 12.2/macOS 10.14.4 or later. media_player ReceiverMediaPlayer All media players that have receiver as their device_class. Represented as Receiver and Remote accessories in HomeKit to control on / off, play / pause, select source, or volume increase / decrease, depending on supported_features of entity. Requires iOS 12.2/macOS 10.14.4 or later. sensor TemperatureSensor All sensors that have °C or °F as their unit_of_measurement and temperature as their device_class. sensor HumiditySensor All sensors that have % as their unit_of_measurement and humidity as their device_class. sensor AirQualitySensor All sensors that have gas/pm10/pm25 as part of their entity_id or gas/pm10/pm25/nitrogen_dioxide/volatile_organic_compounds as their device_class. The VOC mappings use the IAQ guidelines for Europe released by the WHO (World Health Organization). sensor CarbonMonoxideSensor All sensors that have carbon_monoxide as their device_class sensor CarbonDioxideSensor All sensors that have co2 as part of their entity_id or carbon_dioxide as their device_class sensor LightSensor All sensors that have lm or lx as their unit_of_measurement or illuminance as their device_class switch Switch Represented as a switch by default but can be changed by using type within entity_config. water_heater WaterHeater All water_heater devices. device_automation DeviceTriggerAccessory All devices that support triggers. valve Valve All valve devices.\n\nDevice triggers\n\nDevices that support triggers can be added to the bridge by accessing options for the bridge in Settings > Devices & services. To use this feature, Advanced Mode must be enabled in your user profile.\n\nBridged device triggers are represented as a single press button on stateless programmable switches. This allows a HomeKit automation to run when a device trigger fires. Because the Apple Home app currently only shows the number of the button and not the name, users may find it easier to identify the name of the button in the Eve for HomeKit app.\n\niOS Remote Widget\n\nEntities exposed as TelevisionMediaPlayer and ReceiverMediaPlayer are controllable within the Apple Remote widget in Control Center. Play, pause, volume up and volume down should work out of the box depending on the supported_features of the entity. However, if your television can be controlled in other ways outside of the media_player entity, (e.g., performing actions to an IR blaster), it is possible to build an automation to take advantage of these events.\n\nWhen a key is pressed within the Control Center Remote widget, the event homekit_tv_remote_key_pressed will be fired. The key name will be available in the event data in the key_name field. Example:\n\nEvents\n\nThe HomeKit integration emits homekit_state_change events. These events can be used in automations to know when an entity’s state was changed from HomeKit.\n\nTroubleshooting\n\nAll or some devices are intermittently unresponsive\n\nHomeKit relies heavily on your home hub to keep track of Bluetooth devices. Additionally, each home hub has to keep track of every HomeKit accessory that you bridge. If you have many accessories, notably cameras or Bluetooth devices, consider disabling HomeKit on older home hubs.\n\nThe below testing was conducted with Home Assistant 2021.6 (HAP-python 3.5.0) and iOS/tvOS 14.6\n\nThe following home hubs showed strong results when testing with 400 accessories:\n\nHomePod\n\nHomePod Mini\n\nApple TV 4k Gen 2 (best results when using Ethernet instead of Wi-Fi)\n\nThe following home hubs showed strong results when testing with 300 accessories:\n\nApple TV 4k Gen 1 (best results when using ethernet instead of Wi-Fi)\n\nThe following home hubs have been reported to have trouble with a large number of accessories:\n\nApple TV HD\n\nVarious iPad models\n\nResetting when created via YAML\n\nDelete the HomeKit integration in the Devices & services panel.\n\nRestart Home Assistant.\n\nThe configuration will be automatically reimported from YAML.\n\nPair the bridge or accessory.\n\nResetting when created via the Integrations panel\n\nDelete the HomeKit integration in the Integrations panel.\n\nRecreate the HomeKit integration in the Integrations panel.\n\nPair the bridge or accessory.\n\nErrors during pairing\n\nIf you encounter any issues during pairing, make sure to add the following to your configuration.yamlThe configuration.yaml file is the main configuration file for Home Assistant. It lists the integrations to be loaded and their specific configurations. In some cases, the configuration needs to be edited manually directly in the configuration.yaml file. Most integrations can be configured in the UI. [Learn more] to try and identify the issue(s).\n\nFollow the above instructions for resetting.\n\nMinimal Configuration\n\nIf pairing still fails after trying the steps in (Errors during pairing), it may be caused by a specific entity. Try resetting with a minimal configuration like:\n\nPIN doesn’t appear as persistent status\n\nYou might have paired the Home Assistant Bridge already. If not, follow the above instructions for resetting.\n\nHome Assistant Bridge doesn’t appear in the Home App (for pairing)\n\nThis is often setup and network related. Make sure to check the other issues below as well, but things that might work include:\n\nCheck your router configuration\n\nTry with Wi-Fi and LAN\n\nChange the default port\n\nRemember that the iOS device needs to be in the same local network as the Home Assistant device for pairing.\n\nHome Assistant Bridge doesn’t appear in the Home App (for pairing) - Docker\n\nSet network_mode: host in your docker-compose.yaml. If you have further problems this issue might help.\n\nYou can also try to use avahi-daemon in reflector mode together with the option advertise_ip, see above.\n\nHome Assistant Bridge doesn’t appear in the Home App (for pairing) - VirtualBox\n\nConfigure the network mode as networkbridge. Otherwise the Home Assistant Bridge won’t be exposed to the network.\n\nAccessory does not appear in the Home App (for pairing) - Libvirt QEMU/KVM virtual machine with macvtap adapter\n\nPlease see the Zero-configuration networking integration for more details.\n\nPairing hangs - zeroconf error\n\nPairing eventually fails, you might see the error message, NonUniqueNameException, you likely need to enable default_interface: true in the zeroconf integration configuration and set a unique name such as name: MyHASS42.\n\nIf you had previously paired (even unsuccessfully), you may need to delete your .homekit.state file in order to able to successfully pair again. See Errors during pairing.\n\nPairing hangs - only works with debug configuration\n\nPairing works fine when the filter is set to only include demo.demo, but fails with normal configuration. See specific entity doesn’t work\n\nPairing hangs - no error\n\nMake sure that you don’t try to add more than 150 accessories, see device limit. In rare cases, one of your entities doesn’t work with the HomeKit integration. Use the filter to find out which one. Feel free to open a new issue in the home-assistant repository, so we can resolve it.\n\nCheck logs, and search for Starting accessory Home Assistant Bridge on address. Make sure Home Assistant Bridge connected to a correct interface. If it did not, explicitly set homekit.ip_address configuration variable.\n\nIssues during normal use\n\nBridge spontaneously unpairs\n\nMultiple users have reported that iOS 12 and earlier devices will spontaneously remove pairings. Ensure all iOS devices that have administrator access to the Home are running iOS 13 or later. If you cannot update the device to iOS 13, disable Home in the device iCloud settings.\n\nMy entity doesn’t show up\n\nCheck if the domain of your entity is supported. If it is, check your filter settings. Make sure the spelling is correct, especially if you use include_entities.\n\nHomeKit doesn’t work on second Home Assistant instance\n\nTo use the HomeKit integration with multiple different Home Assistant instances on the same local network, you need to set a custom name for at least one of them. config/name\n\nSpecific entity doesn’t work\n\nAlthough we try our best, some entities don’t work with the HomeKit integration yet. The result will be that either pairing fails completely or all Home Assistant accessories will stop working. Use the filter to identify which entity is causing the issue. It’s best to try pairing and step by step including more entities. If it works, unpair and repeat until you find the one that is causing the issues. To help others and the developers, please open a new issue here: core/issues/new\n\nIf you have any iOS 12.x devices signed into your iCloud account, media player entities with device_class: tv or device_class: receiver may trigger this condition. Filtering the entity or signing the iOS 12.x device out of iCloud should resolve the issue after restarting other devices.\n\nAccessories are all listed as not responding\n\nThere were reports where the IGMP settings in a router were causing issues with HomeKit. This resulted in a situation where all of the Home Assistant HomeKit accessories stopped responding a few minutes after Home Assistant (re)started. Double check your router’s IGMP settings if you experience this issue. The default IGMP settings typically work best.\n\nSee specific entity doesn’t work\n\nAccessory not responding - after restart or update\n\nSee resetting accessories and Unpairing and Re-pairing.\n\nThe linked battery sensor isn’t recognized\n\nTry removing the entity from HomeKit and then adding it again. If you are adding this configuration option to an existing entity in HomeKit, any changes you make to this entity’s configuration options won’t appear until the accessory is removed from HomeKit and then re-added. See resetting accessories.\n\nMy media player is not showing up as a television or receiver accessory\n\nMedia Player entities with device_class: tv or device_class: receiver will show up as Television or Receiver accessories on devices running iOS 12.2/macOS 10.14.4 or later. If needed, try removing the entity from HomeKit and then adding it again, especially if the media_player was previously exposed as a series of switches. Any changes, including changed supported features, made to an existing accessory won’t appear until the accessory is removed from HomeKit and then re-added. See resetting accessories.\n\nThe Universal Media Player has an example of how it can be used to wrap existing entities to enable them to be used as a Television accessory in HomeKit.\n\nCan’t control volume of your TV media player?\n\nThe volume and play/pause controls will show up on the Remote app or Control Center. If your TV supports volume control through Home Assistant, you will be able to control the volume using the side volume buttons on the device while having the remote selected on screen.\n\nCamera video is not streaming\n\nEnsure that the ffmpeg integration is configured correctly. Verify that your stream is directly playable with ffplay <stream_source> or VLC Media Player. If you have changed your camera’s entity configuration, you may need to reset the accessory.\n\nCamera streaming is unstable or slow\n\nIf your camera supports native H.264 streams, Home Assistant can avoid converting the video stream, which is an expensive operation. To enable native H.264 streaming when configured via YAML, change the video_codec to copy. To allow native H.264 streaming when setting up HomeKit via the UI, go to Settings > Devices & services in the UI, click Options for your HomeKit Bridge, and check the box for your camera on the Cameras that support native H.264 streams screen.\n\nMultiple camera streams\n\nMultiple streams can be configured with the stream_count configuration option.\n\nCamera audio is not streaming\n\nMake sure support_audio is True in the camera’s entity configuration.\n\nCamera motion notifications\n\nA motion sensor can be linked via the linked_motion_sensor configuration setting to enable motion notifications.\n\nDoorbell button notifications\n\nA doorbell sensor can be linked via the linked_doorbell_sensor configuration setting to enable motion notifications.\n\nHomeKit stalls or devices respond slowly with many cameras\n\nHomeKit camera snapshots tie up the HomeKit connection during snapshots. To avoid this problem, create a separate HomeKit instance in Accessory Mode for each camera.\n\nResetting accessories\n\nYou may use the homekit.reset_accessory action with one or more entity IDs to reset accessories whose configuration may have changed. This can be useful when changing a media player’s device class to tv, linking a battery, or whenever Home Assistant adds support for new HomeKit features to existing entities.\n\nOn earlier versions of Home Assistant, you can reset accessories by removing the entity from HomeKit (via filter) and then re-adding the accessory.\n\nWith either strategy, the accessory will behave as if it’s the first time the accessory has been set up, so you will need to restore the name, group, room, scene, and/or automation settings.\n\nUnpairing and Re-pairing\n\nThe HomeKit integration remembers a public key for each paired device. Occasionally, the public key for a device pairing will be missing because of pairing failures. Suppose one or more devices show the accessory as unavailable. In that case, it may be necessary to unpair and re-pair the device to ensure the integration has the public key for each paired client. The homekit.unpair action will forcefully remove all pairings and allow re-pairing with the accessory. When setting up HomeKit from the UI, this avoids the sometimes time-consuming process of deleting and create a new instance.\n\nThe accessory will behave as if it’s the first time the accessory has been set up, so you will need to restore the name, group, room, scene, and/or automation settings.\n\nAir Quality Sensor Entities\n\nHomeKit provides five values to represent air quality: Excellent, Good, Fair, Inferior, and Poor. For PM2.5 sensor entities in Home Assistant, the raw density value (µg/m3) is used to determine the corresponding value based on the 2024 US AQI standard. The mapping is as follows:"
    }
}