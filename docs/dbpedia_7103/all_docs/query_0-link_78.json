{
    "id": "dbpedia_7103_0",
    "rank": 78,
    "data": {
        "url": "http://www.theenterprisearchitect.eu/blog/2010/04/27/multi-tenancy-and-model-driven-engineering-necessary-assets-of-a-platform-as-a-service/",
        "read_more_link": "",
        "language": "en",
        "title": "tenancy and Model Driven Engineering, necessary assets of a Platform",
        "top_image": "http://www.theenterprisearchitect.eu/blog/wp-content/uploads/2010/04/100427_multi-tenancy_and_mde_necessary_assests_of_a_paas.jpg",
        "meta_img": "http://www.theenterprisearchitect.eu/blog/wp-content/uploads/2010/04/100427_multi-tenancy_and_mde_necessary_assests_of_a_paas.jpg",
        "images": [
            "https://i1.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2010/04/100427_multi-tenancy_and_mde_necessary_assests_of_a_paas.jpg",
            "https://i1.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2010/04/100427_multi-tenancy_and_mde_necessary_assests_of_a_paas.png",
            "https://i2.wp.com/www.theenterprisearchitect.eu/blog/wp-content/themes/themuse-child/images/feed.png",
            "https://i2.wp.com/www.theenterprisearchitect.eu/blog/wp-content/themes/themuse-child/images/twitter.png",
            "http://1.gravatar.com/avatar/47bd85d6d1233749c04d4bac04eac9e1?s=65&d=mm&r=g",
            "http://0.gravatar.com/avatar/6fd472fb2882d3f19e1ead1730d75183?s=65&d=mm&r=g",
            "http://2.gravatar.com/avatar/b5eb65fba187a0625781b251e61a4abb?s=65&d=mm&r=g",
            "http://0.gravatar.com/avatar/6fd472fb2882d3f19e1ead1730d75183?s=65&d=mm&r=g",
            "http://0.gravatar.com/avatar/6fd472fb2882d3f19e1ead1730d75183?s=100&d=mm&r=g",
            "https://i1.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2017/03/rotterdam-skyling-blog.png?resize=58%2C58",
            "https://i1.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2016/02/gartner-hypecycle-paas-2015.png?resize=58%2C58",
            "https://i1.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2015/10/box-open.jpg?resize=58%2C58",
            "https://i0.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2014/12/IMG_5665.jpg?resize=58%2C58",
            "https://i2.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2014/08/view.jpg?resize=58%2C58",
            "https://i1.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2014/07/growth.jpg?resize=58%2C58",
            "https://i0.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2014/06/cg20142.png?resize=58%2C58",
            "https://i0.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2014/04/13744987944_2cee962aec_h.jpg?resize=58%2C58",
            "https://i2.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2014/03/binoculars.jpg?resize=58%2C58",
            "https://i0.wp.com/www.theenterprisearchitect.eu/blog/wp-content/uploads/2014/02/2014-02-OpenStack-and-CloudFoundry.png?resize=58%2C58"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-04-27T00:00:00",
        "summary": "",
        "meta_description": "Back in 2003 Nicholas Carr wrote about the similarity in evolution patterns of information technology and earlier technologies like railroads and electric power. Carr stated that as the availability of \"infrastructural technologies\" increases and their cost decreases, they become commodity inputs. With the current cloud-computing phenomenon IT solutions are applied and composed by organizations, but executed and managed by expert third-party providers. IT is industrializing. I recently wrote about making.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "The Enterprise Architect",
        "canonical_link": "http://www.theenterprisearchitect.eu/blog/2010/04/27/multi-tenancy-and-model-driven-engineering-necessary-assets-of-a-platform-as-a-service/",
        "text": "Back in 2003 Nicholas Carr wrote about the similarity in evolution patterns of information technology and earlier technologies like railroads and electric power. Carr stated that as the availability of \"infrastructural technologies\" increases and their cost decreases, they become commodity inputs. With the current cloud-computing phenomenon IT solutions are applied and composed by organizations, but executed and managed by expert third-party providers. IT is industrializing.\n\nIntroducing the cloud stack\n\nBefore going into the details of Platform-as-a-Service let’s first look at the broader cloud-computing picture. Basically, cloud computing can be defined as a computing capability that provides an abstraction between the computing resource and its underlying technical architecture. Computing resources are delivered on demand and often billed based on usage. We can make a distinction among three different layers of cloud computing:\n\nInfrastructure-as-a-Service (IaaS): typically a platform virtualization environment. Instead of purchasing hardware, datacenter space, and network equipment, clients buy these infrastructures as a fully outsourced service. In principle IaaS is an abstraction layer on top of hardware.\n\nPlatform-as-a-Service (Paas): a computing platform or solution stack provided as a service. It facilitates deployment of applications without the cost and complexity of buying and managing the underlying hardware and software layers.\n\nSoftware-as-a-Service (SaaS): a model of software deployment whereby a provider licenses an application to customers for use as a service. The software is hosted by a service provider.\n\nThe presented layers can be seen as a layered architecture. PaaS is build on top of IaaS. SaaS is build on top of Paas. This layering can be compared to the layered stack of traditional applications: infrastructure, (application) platform, application.\n\nExamples\n\nI want to finish this article with a list of PaaS solutions and the language(s) you can use to develop applications targeting the platform:\n\nForce.com: wizard like languages, process modeler, APEX.\n\nBungee Connect: Bungee Sky, a C-style language.\n\nLongJump: wizard like languages, Java, Javascript.\n\nEngine Yard: Ruby on Rails.\n\nWindows Azure: C#, VB, C++, PHP, Java, Python, Ruby, and higher level services like AppFabric (service bus), SQL Azure, etc.\n\nOrangeScape: Excel like language.\n\nRollbase: specific models (DSLs) for different application aspects (data, logic, UI, permissions, organization, integration).\n\nGoogle App Engine: Python, Java.\n\nVMForce.com: Java (Spring) on Force.com.\n\nMendix: specific models (DSLs) for each application aspect (rich forms, domain model, microflows, business rules, webwervices, internationalization, integration, theming, security, documents, reporting, etc.). Extensible with Java and Javascript.\n\nMost development environments are offline, most solutions do not really emphasize multi-tenancy.\n\nConclusion\n\nMulti-tenancy and Model Driven Engineering are fundamental to a Platform-as-a-Service. I think PaaS solutions with low-level contracts won’t have a long live.\n\nDo you have experiences with PaaS solutions? What do you think about the future of PaaS?"
    }
}