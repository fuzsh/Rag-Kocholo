{
    "id": "correct_subsidiary_00134_3",
    "rank": 93,
    "data": {
        "url": "https://slashdot.org/story/06/07/26/1357210/building-scalable-web-sites",
        "read_more_link": "",
        "language": "en",
        "title": "Building Scalable Web Sites",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://www.gstatic.com/images/icons/gplus-16.png",
            "https://a.fsdn.com/sd/ccpa-optout.png",
            "https://slashdot.org/images/njs.gif?853"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "briandon writes \"It's not a step-by-step guide (and doesn't claim to be one), but Building Scalable Web Sites is the closest thing available to a nuts-and-bolts look at managing the technical aspects of doing a Web-based startup.  There's lots of code inside, but the book isn't built around a single...",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://slashdot.org/story/06/07/26/1357210/building-scalable-web-sites",
        "text": "Your new power browser: Check out Shift, the newest and most powerful and productive web browser available. Unite everything you do on your desktop into one browser window and get more done. Download Shift for free!\n\n×\n\n1486309 story\n\nBuilding Scalable Web Sites\n\nbriandon writes \"It's not a step-by-step guide (and doesn't claim to be one), but Building Scalable Web Sites is the closest thing available to a nuts-and-bolts look at managing the technical aspects of doing a Web-based startup. There's lots of code inside, but the book isn't built around a single, extremely contrived, case study like an online wine store. Instead, most of the chapters follow a general pattern: a topic (like bottlenecks in your application and platform, scaling, or monitoring) is addressed and some rules of thumb that describe the way that the author feels things should be done are set forth and explained, with lots of very specific hints and factoids mixed in along the way. Tools for other languages (in most cases, Perl) are mentioned in passing, nearly all of the code snippets are in PHP. MySQL 4.1 is the basis for most of the database-centered material.\" Read the rest of Brian's review.\n\nHenderson's resume, which can be found on his personal website, indicates that he joined Ludicorp about a year before they shut down GNE, their Web-based roleplaying game, to focus on Flickr (which had originally begun as an ofshoot of the game) and it's his role as web development lead at Ludicorp that led to the inclusion of the \"The Flickr Way\" sub-subtitle that runs diagonally across the upper right corner of the book's front cover.\n\nThe five-page-long first chapter sets the stage for the rest of the book with section headings that are all questions: \"What is a Web application?\", \"How do you build Web applications?\", \"What is architecture?\", and \"How do I get started?\".\n\nChapter two, \"Web Application Architecture\", begins with Henderson drawing an analogy between a web app and a type of multi-tiered dessert known as a trifle - the sponge cake at the bottom of the dish is the database, the next layer up, jell-o, is the business logic, and so on. The black and white image in the text is identical to the color image included in a slide from an eight-hour workshop that the author gave in San Francisco titled \"How We Built Flickr\". Having read the book and some reviews of his workshops and looked at the list of talks on Henderson's site (some with Powerpoint decks for download), it seems likely that a lot of the ideas expressed in the book were developed over an extended period of time through repeated presentations.\n\nNext up are the considerations around development environments, beginning with a 3-point list of guidelines for building small-scale web apps up into big ones: use source control, have a one-step build process (literally, if possible, a single button), and track bugs (as well as non-bug items like features and support requests). Readers get to feast their eyes on a cropped screenshot of Flickr's build control panel (two buttons, \"perform staging\" and \"perform deployment\", to match the last two steps in the release sequence in an HTML form). For small teams, the author is in favor of allowing multiple developers to trigger releases and he suggests several ways of trying to keep that workable. In version control, Subversion gets the nod and, though no bugtracking tool is singled out as the best, FogBugz garners the highest praise (\"extremely effective\") and has the shortest list of \"cons\". The author never comes out and says what the Flickr / Flickr-Yahoo team uses in either area, however.\n\nChapter four is the most readable introduction to internationalization, localization, and Unicode that I've seen up to this point. MySQL's currently incomplete implementation of UTF-8, sarcastically referred to by some as \"UTF-7½\" (Google for it), is mentioned in enough detail that a reader can decide whether or not it's likely to be an issue for their app. The book as a whole is packed with little nuggets of information like that - things you might not have otherwise been even peripherally aware of until they bit you.\n\nInput filtering and strategies for avoiding building cross-site-scripting and SQL injection vulnerabilities into your app are addressed in a chapter on data integrity and security that shows the same attention to detail as the rest of the book. The section on UTF-8 filtering, for example, features a three-way benchmark of UTF-8 validation techniques (using regular expressions, iconv, and ord()) and the merits of each approach are considered.\n\nThe coverage of handling emails programmatically in chapter six is also quite good. Henderson does the basics and then delves into a number of possible pitfalls in considerable detail. The salient aspects of the TNEF (media type application/ms-tnef) format, used by MS Outlook for attachments and metadata, for instance, are explained and pointers are given to open source TNEF parser implementations. I also got a lot out of the section on dealing with email from wireless devices like mobile phones, titled \"Wireless Carriers Hate You\" (there's that dry British wit again).\n\nThe second half of the book (chapters seven through eleven) focuses more on scalability. It's also where you'll find the most material on using MySQL, including but not limited to query profiling and optimization, a discussion of the merits of denormalizing once you begin to reach a certain scale, and a comparison of the different MySQL backends. There's an entire chapter devoted to finding and dealing with bottlenecks - how to determine whether your app is CPU-bound, I/O-bound, or context-switching-bound and what to do about it. The chapter on scaling begins by debunking the \"scaling myth\" (but he actually tackles several misconceptions at once - namely that scalability is synonymous with speed, that scalability is a byproduct of having written your app in Java, etc.) before getting into vertical vs. horizontal scaling (buying more powerful and expensive servers vs. adding more cheap cheap servers), load balancing, and more. Monitoring (both of web stats and your application itself) and APIs (RSS/RDF/Atom feeds, mobile content delivery formats like WAP and XHTML mobile, and REST/XML-RPC, and SOAP Web services) both get chapters of their own.\n\nHenderson's sense of humor is evident throughout the book, but not in the annoying overly cutesey way that made me want to toss \"Extreme Programming Installed\" into the circular filing drawer. In the section on software interface design (where he means the interfaces between the layers of the trifle), for example, there's a \"Web Application Scale of Stupidity\" that places \"sanity\" in the center and OGF (one giant function) and OOP at the extremes. The process of separating web app logic from presentation is broken down into 3 steps: separating logic code from markup, splitting the markup into per-page files, and moving to a templating system. He closes out the chapter with a breakdown of the hosting, hardware, and networking issues involved in serving up web apps.\n\nTechnically, I think that Building Scalable Web Sites is 100%. There were just a few niggling flaws. Two dates given (both on page 155), 1990 for the creation of libxml and 1995 for the design of XML-RPC, are incorrect and I spotted a handful of grammatical mistakes (probably proportionately fewer than in this review) that I've already submitted, along with the date mistakes, as errata through the form linked from the O'Reilly catalog page for the book.\n\nAdditionally, though the cover does say \"The Flickr Way\", you won't find many sentences that begin \"At Flickr, we [...]\". Aside from the \"Rolling Your Own\" section in chapter seven describing some custom middleware and a protocol that they whipped up for moving files around within their system, there aren't a lot of explicit details about the way that Flickr operates in the book. You'll actually get more insider info from Tim O'Reilly's \"Database War Stories\" entry regarding Flickr, which is based on Henderson's answers to questions posed by O'Reilly, than from this book.\n\nIf you'd like to get a feel for Henderson's style, chapter five (\"Data Integrity and Security\") is available as a PDF on the O'Reilly catalog page for the book and Henderson has also put some articles online (all PDFs, not much overlap with the material in BSWS) at his website.\n\nYou can purchase Building Scalable Web Sites : Building, Scaling, and Optimizing the Next Generation of Web Applications from bn.com. Slashdot welcomes readers' book reviews -- to see your own review here, read the book review guidelines, then visit the submission page."
    }
}