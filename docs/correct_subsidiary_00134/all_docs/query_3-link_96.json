{
    "id": "correct_subsidiary_00134_3",
    "rank": 96,
    "data": {
        "url": "https://dokumen.pub/implementing-domain-driven-design-0321834577-9780321834577.html",
        "read_more_link": "",
        "language": "en",
        "title": "Driven Design 0321834577, 9780321834577",
        "top_image": "https://dokumen.pub/img/implementing-domain-driven-design-0321834577-9780321834577.jpg",
        "meta_img": "https://dokumen.pub/img/implementing-domain-driven-design-0321834577-9780321834577.jpg",
        "images": [
            "https://dokumen.pub/dokumenpub/assets/img/dokumenpub_logo.png",
            "https://dokumen.pub/img/200x200/implementing-domain-driven-design-4th-printingnbsped-9780321834577-0321834577.jpg",
            "https://dokumen.pub/img/200x200/vaughn-vernon-implementing-domain-driven-design-978-0321834577.jpg",
            "https://dokumen.pub/img/200x200/akka-in-action-second-edition-meap-v13-9780321125217-0321125215-9780321834577-0321834577.jpg",
            "https://dokumen.pub/img/200x200/implementing-cloud-design-patterns-for-aws-9781782177340-2153775104-1782177345.jpg",
            "https://dokumen.pub/img/200x200/practical-design-patterns-for-java-developers-hone-your-software-design-skills-by-implementing-popular-design-patterns-in-java-9781804614679-180461467x.jpg",
            "https://dokumen.pub/img/200x200/android-user-interface-design-implementing-material-design-for-developers-second-edition-9780134191959-0134191951.jpg",
            "https://dokumen.pub/img/200x200/implementing-cloud-design-patterns-for-aws-solutions-and-design-ideas-for-solving-system-design-problems-2nd-edition-9781789130911-9781789136203-1789130913.jpg",
            "https://dokumen.pub/img/200x200/implementing-quantlib.jpg",
            "https://dokumen.pub/img/200x200/implementing-cloud-design-patterns-for-aws-2nbsped-9781789136203-1789136202.jpg",
            "https://dokumen.pub/img/200x200/implementing-inflation-targeting-institutional-arrangements-target-design-and-communications-1nbsped-9781451909913-9781451865387.jpg",
            "https://dokumen.pub/img/200x200/implementing-domain-driven-design-0321834577-9780321834577.jpg",
            "https://dokumen.pub/dokumenpub/assets/img/dokumenpub_logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Implementing Domain-Driven Design presents a top-down approach to understanding domain-driven design (DDD) in a way that...",
        "meta_lang": "en",
        "meta_favicon": "https://dokumen.pub/dokumenpub/assets/img/apple-icon-57x57.png",
        "meta_site_name": "dokumen.pub",
        "canonical_link": "https://dokumen.pub/implementing-domain-driven-design-0321834577-9780321834577.html",
        "text": "Table of contents :\n\nContents......Page 10\n\nForeword......Page 18\n\nPreface......Page 20\n\nAcknowledgments......Page 30\n\nAbout the Author......Page 34\n\nGuide to This Book......Page 36\n\nChapter 1 Getting Started with DDD......Page 44\n\nCan I DDD?......Page 45\n\nWhy You Should Do DDD......Page 49\n\nHow to Do DDD......Page 63\n\nThe Business Value of Using DDD......Page 68\n\n1. The Organization Gains a Useful Model of Its Domain......Page 69\n\n4. A Better User Experience Is Gained......Page 70\n\n8. New Tools, Both Strategic and Tactical, Are Employed......Page 71\n\nThe Challenges of Applying DDD......Page 72\n\nFiction, with Bucketfuls of Reality......Page 81\n\nWrap-Up......Page 84\n\nBig Picture......Page 86\n\nSubdomains and Bounded Contexts at Work......Page 87\n\nFocus on the Core Domain......Page 93\n\nWhy Strategic Design Is So Incredibly Essential......Page 96\n\nReal-World Domains and Subdomains......Page 99\n\nMaking Sense of Bounded Contexts......Page 105\n\nRoom for More than the Model......Page 109\n\nSize of Bounded Contexts......Page 111\n\nAligning with Technical Components......Page 114\n\nSample Contexts......Page 115\n\nCollaboration Context......Page 116\n\nIdentity and Access Context......Page 123\n\nAgile Project Management Context......Page 125\n\nWrap-Up......Page 127\n\nWhy Context Maps Are So Essential......Page 130\n\nDrawing Context Maps......Page 132\n\nProjects and Organizational Relationships......Page 134\n\nMapping the Three Contexts......Page 138\n\nWrap-Up......Page 154\n\nChapter 4 Architecture......Page 156\n\nInterviewing the Successful CIO......Page 157\n\nLayers......Page 162\n\nDependency Inversion Principle......Page 166\n\nHexagonal or Ports and Adapters......Page 168\n\nService-Oriented......Page 173\n\nREST as an Architectural Style......Page 176\n\nKey Aspects of a RESTful HTTP Server......Page 178\n\nREST and DDD......Page 179\n\nCommand-Query Responsibility Segregation, or CQRS......Page 181\n\nExamining Areas of CQRS......Page 183\n\nDealing with an Eventually Consistent Query Model......Page 189\n\nEvent-Driven Architecture......Page 190\n\nPipes and Filters......Page 192\n\nLong-Running Processes, aka Sagas......Page 196\n\nEvent Sourcing......Page 203\n\nData Fabric and Grid-Based Distributed Computing......Page 206\n\nData Replication......Page 207\n\nEvent-Driven Fabrics and Domain Events......Page 208\n\nContinuous Queries......Page 209\n\nDistributed Processing......Page 210\n\nWrap-Up......Page 211\n\nWhy We Use Entities......Page 214\n\nUnique Identity......Page 216\n\nUser Provides Identity......Page 217\n\nApplication Generates Identity......Page 218\n\nPersistence Mechanism Generates Identity......Page 222\n\nAnother Bounded Context Assigns Identity......Page 225\n\nWhen the Timing of Identity Generation Matters......Page 227\n\nSurrogate Identity......Page 229\n\nIdentity Stability......Page 231\n\nDiscovering Entities and Their Intrinsic Characteristics......Page 234\n\nUncovering Entities and Properties......Page 235\n\nDigging for Essential Behavior......Page 239\n\nRoles and Responsibilities......Page 243\n\nConstruction......Page 248\n\nValidation......Page 251\n\nChange Tracking......Page 259\n\nWrap-Up......Page 260\n\nChapter 6 Value Objects......Page 262\n\nImmutable......Page 264\n\nConceptual Whole......Page 266\n\nReplaceability......Page 269\n\nValue Equality......Page 270\n\nSide-Effect-Free Behavior......Page 271\n\nIntegrate with Minimalism......Page 275\n\nStandard Types Expressed as Values......Page 277\n\nTesting Value Objects......Page 282\n\nImplementation......Page 286\n\nPersisting Value Objects......Page 291\n\nReject Undue Influence of Data Model Leakage......Page 292\n\nORM and Single Value Objects......Page 294\n\nORM and Many Values Serialized into a Single Column......Page 296\n\nORM and Many Values Backed by a Database Entity......Page 298\n\nORM and Many Values Backed by a Join Table......Page 303\n\nORM and Enum-as-State Objects......Page 304\n\nWrap-Up......Page 306\n\nChapter 7 Services......Page 308\n\nWhat a Domain Service Is (but First, What It Is Not)......Page 310\n\nMake Sure You Need a Service......Page 311\n\nModeling a Service in the Domain......Page 315\n\nIs Separated Interface a Necessity?......Page 318\n\nA Calculation Process......Page 320\n\nTransformation Services......Page 323\n\nTesting Services......Page 324\n\nWrap-Up......Page 327\n\nThe When and Why of Domain Events......Page 328\n\nModeling Events......Page 331\n\nWith Aggregate Characteristics......Page 337\n\nIdentity......Page 338\n\nPublishing Events from the Domain Model......Page 339\n\nPublisher......Page 340\n\nSubscribers......Page 343\n\nMessaging Infrastructure Consistency......Page 346\n\nAutonomous Services and Systems......Page 348\n\nLatency Tolerances......Page 349\n\nEvent Store......Page 350\n\nPublishing Notifications as RESTful Resources......Page 355\n\nPublishing Notifications through Messaging Middleware......Page 360\n\nImplementation......Page 361\n\nPublishing the NotificationLog......Page 362\n\nPublishing Message-Based Notifications......Page 367\n\nWrap-Up......Page 374\n\nDesigning with Modules......Page 376\n\nBasic Module Naming Conventions......Page 379\n\nModule Naming Conventions for the Model......Page 380\n\nModules of the Agile Project Management Context......Page 383\n\nModules in Other Layers......Page 386\n\nModule before Bounded Context......Page 387\n\nWrap-Up......Page 388\n\nChapter 10 Aggregates......Page 390\n\nUsing Aggregates in the Scrum Core Domain......Page 391\n\nFirst Attempt: Large-Cluster Aggregate......Page 392\n\nSecond Attempt: Multiple Aggregates......Page 394\n\nRule: Model True Invariants in Consistency Boundaries......Page 396\n\nRule: Design Small Aggregates......Page 398\n\nDon?t Trust Every Use Case......Page 401\n\nRule: Reference Other Aggregates by Identity......Page 402\n\nMaking Aggregates Work Together through Identity References......Page 404\n\nModel Navigation......Page 405\n\nScalability and Distribution......Page 406\n\nRule: Use Eventual Consistency Outside the Boundary......Page 407\n\nAsk Whose Job It Is......Page 409\n\nReason One: User Interface Convenience......Page 410\n\nReason Two: Lack of Technical Mechanisms......Page 411\n\nReason Four: Query Performance......Page 412\n\nRethinking the Design, Again......Page 413\n\nEstimating Aggregate Cost......Page 415\n\nCommon Usage Scenarios......Page 416\n\nMemory Consumption......Page 417\n\nExploring Another Alternative Design......Page 418\n\nImplementing Eventual Consistency......Page 419\n\nIs It the Team Member?s Job?......Page 421\n\nTime for Decisions......Page 422\n\nCreate a Root Entity with Unique Identity......Page 423\n\nUsing Law of Demeter and Tell, Don?t Ask......Page 425\n\nOptimistic Concurrency......Page 428\n\nAvoid Dependency Injection......Page 430\n\nWrap-Up......Page 431\n\nFactories in the Domain Model......Page 432\n\nFactory Method on Aggregate Root......Page 434\n\nCreating CalendarEntry Instances......Page 435\n\nCreating Discussion Instances......Page 438\n\nFactory on Service......Page 440\n\nWrap-Up......Page 443\n\nChapter 12 Repositories......Page 444\n\nCollection-Oriented Repositories......Page 445\n\nHibernate Implementation......Page 450\n\nConsiderations for a TopLink Implementation......Page 459\n\nPersistence-Oriented Repositories......Page 461\n\nCoherence Implementation......Page 463\n\nMongoDB Implementation......Page 468\n\nAdditional Behavior......Page 473\n\nManaging Transactions......Page 475\n\nType Hierarchies......Page 480\n\nRepository versus Data Access Object......Page 483\n\nTesting Repositories......Page 484\n\nTesting with In-Memory Implementations......Page 488\n\nWrap-Up......Page 491\n\nChapter 13 Integrating Bounded Contexts......Page 492\n\nIntegration Basics......Page 493\n\nDistributed Systems Are Fundamentally Different......Page 494\n\nExchanging Information across System Boundaries......Page 495\n\nIntegration Using RESTful Resources......Page 501\n\nImplementing the RESTful Resource......Page 502\n\nImplementing the REST Client Using an Anticorruption Layer......Page 506\n\nStaying Informed about Product Owners and Team Members......Page 512\n\nCan You Handle the Responsibility?......Page 519\n\nLong-Running Processes, and Avoiding Responsibility......Page 524\n\nProcess State Machines and Time-out Trackers......Page 536\n\nDesigning a More Sophisticated Process......Page 546\n\nWhen Messaging or Your System Is Unavailable......Page 550\n\nWrap-Up......Page 551\n\nChapter 14 Application......Page 552\n\nRendering Domain Objects......Page 555\n\nRender Data Transfer Object from Aggregate Instances......Page 556\n\nUse a Mediator to Publish Aggregate Internal State......Page 557\n\nRender Aggregate Instances from a Domain Payload Object......Page 558\n\nState Representations of Aggregate Instances......Page 559\n\nDealing with Multiple, Disparate Clients......Page 560\n\nRendition Adapters and Handling User Edits......Page 561\n\nApplication Services......Page 564\n\nSample Application Service......Page 565\n\nDecoupled Service Output......Page 571\n\nComposing Multiple Bounded Contexts......Page 574\n\nInfrastructure......Page 575\n\nEnterprise Component Containers......Page 577\n\nWrap-Up......Page 580\n\nAppendix A: Aggregates and Event Sourcing: A+ES......Page 582\n\nInside an Application Service......Page 584\n\nCommand Handlers......Page 592\n\nLambda Syntax......Page 596\n\nConcurrency Control......Page 597\n\nPerformance......Page 601\n\nImplementing an Event Store......Page 604\n\nRelational Persistence......Page 608\n\nBLOB Persistence......Page 611\n\nFocused Aggregates......Page 612\n\nRead Model Projections......Page 613\n\nEvents Enrichment......Page 616\n\nEvent Serializers......Page 619\n\nValue Objects......Page 620\n\nContract Generation......Page 623\n\nUnit Testing and Specifications......Page 625\n\nEvent Sourcing in Functional Languages......Page 626\n\nBibliography......Page 628\n\nA......Page 632\n\nB......Page 634\n\nC......Page 635\n\nD......Page 638\n\nE......Page 640\n\nG......Page 642\n\nI......Page 643\n\nM......Page 645\n\nP......Page 647\n\nQ......Page 648\n\nR......Page 649\n\nS......Page 650\n\nT......Page 652\n\nU......Page 653\n\nV......Page 654\n\nZ......Page 655\n\nCitation preview"
    }
}