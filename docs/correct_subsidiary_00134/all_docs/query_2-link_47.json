{
    "id": "correct_subsidiary_00134_2",
    "rank": 47,
    "data": {
        "url": "https://www.oracle.com/technetwork/tutorials/htm-1861240.htm",
        "read_more_link": "",
        "language": "en",
        "title": "Using Transactional Coherence in Enterprise Application",
        "top_image": "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/scenario.gif",
        "meta_img": "",
        "images": [
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/scenario.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t0001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t0002.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t0003.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t0004.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t0005.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t0006.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t0007.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t0008.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t0009.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t1001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t2001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t2002.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t2003.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t2004.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t3001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t3002.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t3003.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t3004.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t3005.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t3006.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t3007.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t3008.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t5001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t5002.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t5003.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t5004.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t6000.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t6001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t6002.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t6003.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7002.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7003.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7004.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7005.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7006.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7007.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7008.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7009.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7010.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7011.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t7012.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t8001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t9001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t9002.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10001.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10003.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10004.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10005.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10006.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10007.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10008.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10009.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/images/t10010.gif",
            "http://www.oracle.com/webfolder/technetwork/tutorials/obe/fmw/coherence/obecoherence36_wls/coherence_tx/library/divider.gif",
            "http://www.oracle.com/webfolder/s/assets/11.1.0/i/ora_info_company.gif",
            "http://www.oracleimg.com/ocom/groups/systemobject/@mktg_admin/@ocom_admin/documents/digitalasset/feed-icon-14x14.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Using Transactional Coherence in Enterprise Applications\n\nPurpose\n\nThis tutorial covers using Coherence caches in the context of a transaction.\n\nTime to Complete\n\nApproximately 1 hour\n\nOverview\n\nCoherence provides a transaction framework. The framework itself is made up of a number of elements, including:\n\nTransactional Caches: Transactional caches are specialized distributed caches that provide transactional guarantees. Transactional caches are required whenever performing a transaction using the Transaction Framework API.\n\nResource Adapter: Coherence includes a J2EE Connector Architecture (J2CA) 1.5?compliant resource adaptor that is used to obtain transaction-aware connections to a Coherence cache. The resource adapter leverages the connection API of the Coherence Transaction Framework and provides transaction guarantees by default. In addition, the resource adapter provides full XA support that allows Coherence to participate in global transactions.\n\nConnection Factories and Code Artifacts: After applications are configured with the Coherence resource adapter, they obtain access to transaction-aware caches via instances of OptimisticNamedCache, which themselves are obtained from a Coherence-specific Connection Factory.\n\nScenario\n\nCoherence supports transactions with EJB, JMS, and so on, as such it is only normal to combine any into a single transaction. In this OBE, you will follow the steps to create and deploy a simple web application which itself accesses a transaction-aware cache, as well as possibly one or more other transaction-aware resources.\n\nSoftware and Hardware Requirements (Optional)\n\nThe following is a list of software required:\n\nOperating System: Coherence supports a variety of operating systems. For this tutorial, WIndows XP professional is used.\n\nJEE Application Server: Oracle Coherence supports a number of application servers. For this tutorial, WebLogic Server 10.3.4 is used.\n\nEclipse Helios with the Oracle Enterprise Pack for Eclipse (OEPE). Note that Eclipse is provided with the WebLogic Server download.\n\nCoherence: Coherence 3.6 is used in this tutorial (also included with the download).\n\nPrerequisites\n\nBefore starting this tutorial, you should:�\n\n.\n\nDownload and install WebLogic Server 10.3.4, including Coherence 3.6 and Eclipse with Oracle Enterprise Pack for Eclipse. You can download WebLogic Server packaged with Coherence 3.6 here.\n\nThere is a tutorial that discusses setting up a development environment for Oracle Coherence and Oracle WebLogic Server (and uses the Eclipse IDE). You should complete that tutorial before this one. (It covers the information needed to install Oracle Coherence and Oracle WebLogic Server as well as the setup of a WebLogic domain that you will need for this tutorial.) You can find it by following this link: Oracle Coherence and Oracle WebLogic Server: Setting Up an Eclipse Development Environment.\n\nAlthough you can install the products in locations of your choice, the following generic labels refer to these locations in the tutorial instructions:\n\n$MIDDLEWARE_HOME: The product installation location for Oracle WebLogic Server (The current installation documentation refers to this as BEA_HOME.)\n\n$WORKSPACE: The location of the Eclipse workspace that you will create\n\n$COHERENCE_HOME: The location of your Oracle Coherence installation\n\n$DOMAIN_HOME:The location of the WebLogic Server domain that you will create\n\n.\n\nRefer to the following documentation:\n\nInstalling Oracle WebLogic Server\n\nInstalling Oracle Coherence\n\nCreate a WebLogic Server Domain to House an Application\n\nApplications require a place to execute. In the following steps, you will create a simple WebLogic domain which can be used from Eclipse to house applications.\n\nUpgrade Eclipse with Oracle Enterprise Pack for Eclipse\n\nEclipse version 3.6.1 (code named Helios) comes prepackaged with the WebLogic Server installation. The prepackaged Eclipse installation includes the Oracle Enterprise Pack for Eclipse, or OEPE. However, those who cannot use the prepackaged version of� Eclipse will need to upgrade to the latest version of OEPE. To install OEPE into an existing version of Eclipse, follow the instructions below. Note that these instructions describe the installation for the Helios version of Eclipse. Support also exists for earlier versions, however, installation may vary. For those using the prepackaged version may skip the upgrade process, or partially follow the steps to verify that the most up-to-date version of OEPE is installed.\n\nTo choose an Eclipse workspace location, perform the following:\n\nTo install or update Oracle Enterprise Pack for Eclipse, perform the following:\n\nNote: You can find more information about Oracle Enterprise Pack for Eclipse here.\n\nCreate an Enterprise Application and All Its Required Projects\n\nEclipse packages Enterprise applications (that is, those that include web applications, EJBs, and so on) into an Enterprise Application Project. Such projects consist of web applications, enterprise java beans, resources, JAR files and other esources.\n\nCreating an Enterprise Application consists of:\n\nCreating an Enterprise Application Project. Enterprise application projects result in the EAR Java EE artifact and are composed of EJB projects, EJB Client projects, and Dynamic Web Application Projects.\n\nEnterprise JavaBeans projects are actually two projects containing the implementation and externally facing interfaces for an EJB. These projects are created via a single wizard and have names based on a root name followed by EJB and EJBClient.\n\nDynamic web application projects are typically web applications and contain artifacts such as JSP, servlets, and similar content.\n\nCreate an Enterprise Application Project and a Runtime Environment\n\n.\n\nStart Eclipse\n\n.\n\nStart by creating an enterprise application project. Select File > New, select Project (or alternatively, press\n\nCtrl + N) and in the pop-up window, select Enterprise Application Project in Java EE category.\n\nClick Next.\n\nNote that you may need to scroll the window to show the Java EE category.\n\n.\n\nEnter a project name to the Project Name field. For this tutorial, the project was named CoherenceTX.� Before clicking the Next button, click the New Runtime button.\n\nNote: If you have previously created a run time, you may simply select it rather than creating a new run time.\n\n.\n\nIn the Define a new server runtime environment dialog box, select Oracle WebLogic Server 11gR1 PatchSet3.\n\nThen click Next.\n\n.\n\nIn the Define a WebLogic Runtime dialog box, enter the fully qualified path to a WebLogic Server instance in the WebLogic home field. For this tutorial, WebLogic was installed in D:\\oracle\\Middleware and the Browse button was used to locate the installed instance. Note that the Java home field will be automatically filled. Leave this field blank.\n\nThen click Next.�\n\n.\n\nIn the Domain Directory field of the Configuration section, enter the fully qualified path of the domain created earlier. For this tutorial, the domain was created in D:\\oracle\\domains\\coh_domain.\n\nThen click Finish.\n\n.\n\nThe EAR Application Project, with completed Target runtime should now resemble:\n\nClick Next.\n\n.\n\nIn the Configure enterprise application settings dialog box, ensure that the Generate application.xml deployment descriptor check box is selected.\n\nClick Finish.\n\nNote: If the Open Associated Perspective dialog box is displayed, suggesting opening a Java EE perspective, click Yes.\n\n.\n\nThe Project Explorer pane of Eclipse will now show an empty Enterprise application which when expanded should resemble:\n\nNote that the application shows a number of errors. This is a result of Enterprise applications being dependent on EJB, Web Applications, and other artifacts.\n\nCreate a Dynamic Web Project\n\n.\n\nStart by creating an enterprise application project. Select File > New, select Project (or alternatively, press Ctrl + N) and in the pop-up window, select Dynamic Web Project in the Web category.\n\n.\n\nEnter a Project name. For this tutorial, the project was named CoherenceWEB.� In the EAR membership section, ensure that the Add project to an EAR check box is selected. Note that the CoherenceTX ear project name should be automatically selected. If there are other EAR projects in the workspace, select the CoherenceTX project.\n\n.\n\nIn the Java dialog box, make no changes and click Next.\n\n.\n\nIn the Web Module dialog box, make no changes and click Finish. Note that the Generate web.xml deployment descriptor check box is selected. Click Finish.\n\nConfiguring an Enterprise Application for Transactional Coherence\n\nCoherence supports transaction using a resource adapter. Using the resource adapter requires that a number of application settings and files be modified. These changes include:\n\nCoherence proper: Coherence must be accessible from application code such as EJBs, Servlets, and in general Java objects. Accessing Coherence means that coherence.jar is in the application classpath, and that a cache configuration file is accessible to Coherence. For this tutorial, you will use what is referred to as application-scoped Coherence.\n\nSupplying a resource adapter: The Coherence resource adapter coherence-transaction.rar must be packaged as part of the Enterprise application. Resource adapters can be installed into a domain as either a shared library or as part of an Enterprise application. This tutorial will include the file as part of an Enterprise application and register it into the application's XML deployment descriptors.\n\nConfiguring application resources: Enterprise JavaBeans, Web Applications, and similar artifacts must be able to access Coherence caches, transactions, and other resources. This tutorial will use several resource references to access caches.\n\nPrepare Enteprise Application\n\nThe Enterprise application must be prepared for use with coherence in three ways:\n\nThe coherence resource adapter must be added to the application as well as registered in the deployment descriptor.\n\nThe coherence.jar file must be added as part of the APP-INF/classes directory, making it accessible to all modules that are part of the application.\n\nThe Coherence cache configuration must be updated; this step is handled separately.\n\n.\n\nDownload the support materials. These materials are a combination of code, XML snippet files, and other convenient resources. These resources can be downloaded here.\n\n.\n\nUnzip the files to a temporary location. For this tutorial, the files were downloaded and expanded to the desktop into the coh_tx_obe_support directory.\n\n.\n\nExpand the CoherenceTx application and find the CoherenceTX\\EarContent folder.\n\n.\n\nFrom the coh_tx_obe_support\\coherence directory, drag the coherence-transaction.rar file to the CoherenceTX\\EarContent directory. When prompted to Copy or Link, choose Copy and click OK. The updated application should resemble:\n\nNote the addition of the Coherence transaction adapter, which must be registered as a connector with the application.\n\n.\n\nNavigate to the CoherenceTX\\EarContent\\META-INF directory and open application.xml.\n\n.\n\nOn the Design tab, select the last module entry. Right-click and select Add After. Then in the new connector, replace the word token with coherence-transaction.rar, the name of the connector RAR file.\n\n.\n\nIn the Source view, the updated application.xml file should now resemble:\n\nSave your changes.\n\n.\n\nLastly, navigate to the CoherenceTX/EarContent/APP-INF/lib directory.\n\n.\n\nFrom the download directory coh_tx_obe_support/coherence, drag coherence.jar to the classes directory.\n\nWhen prompted to Copy or Link, ensure that Copy files is selected and click OK.\n\nThe final result should resemble:\n\nPrepare Coherence Cache Configuration\n\nThe Coherence cache configuration must be prepared by:\n\nAdding the cache configuration file to the Enterprise application\n\nModifying the cache configuration to support transaction-aware caches\n\n.\n\nExpand the CoherenceTX\\EarContent\\APP-INF\\classes folder.\n\n.\n\nFrom the download directory coh_tx_obe_support/coherence, drag coherence-cache-config.xml to the classes directory.\n\nWhen prompted to Copy or Link, ensure that Copy files is selected and click OK.\n\n.\n\nOpen the file and in source view, scroll down to find the <caching-scheme-mapping> section.\n\n.\n\nImmediately after the caching-scheme-mapping element, add a new cache mapping resembling:\n\n�\n\n<cache-mapping>\n\n����� <cache-name>tx-*</cache-name>\n\n����� <scheme-name>example-transactional</scheme-name>\n\n</cache-mapping>\n\nNote that a snippet of pastable XML, resembling this addition, can be found in the coh_tx_obe_support/xml/coherence-cache-config.snippet.txt file.�\n\n.\n\nThe completed addition should resemble, with new code in bold.\n\n�<caching-scheme-mapping>\n\n��� <cache-mapping>\n\n������� <cache-name>tx-*</cache-name>\n\n������� <scheme-name>example-transactional</scheme-name>\n\n��� </cache-mapping>\n\n<cache-mapping>\n\n.\n\nFind the <caching-schemes> section.\n\n.\n\nImmediately after the <caching-schemes> element, add a new scheme resembling:\n\n<transactional-scheme>\n\n����� <scheme-name>example-transactional</scheme-name>\n\n����� <scheme-ref>base-transactional</scheme-ref>\n\n����� <thread-count>10</thread-count>\n\n�</transactional-scheme>\n\n�<transactional-scheme>\n\n����� <scheme-name>base-transactional</scheme-name>\n\n����� <service-name>TransactionalCache</service-name>\n\n����� <request-timeout>30000</request-timeout>\n\n����� <autostart>true</autostart>\n\n</transactional-scheme>\n\nNote that a snippet of pastable XML, resembling this addition, can be found in the coh_tx_obe_support/xml/coherence-cache-config.snippet.txt file.�\n\n.\n\nSave your changes and close the editor.\n\nPrepare Web Application\n\nDepending on the application and how it is structured, the web application may or may not access the Coherence directory. However, it is not uncommon and as such the required configuration is presented here. The tutorial application does in fact reference Coherence.\n\nAdding coherence.jar to the project\n\nImporting supplied test servlet and support class\n\n.\n\nSelect the previously created CoherenceWEB application.\n\n.\n\nRight-click and choose Properties.\n\n.\n\nIn the Properties dialog box, choose Java Build Path and click the Libraries tab.\n\n.\n\nClick Add External JARs and in the JAR selection dialog box, navigate to the d:\\oracle\\Middleware\\coherence3.6\\lib folder, selecting the coherence.jar file.\n\nClick Open\n\n.\n\nThe Java Build Path dialog box will now show the coherence.jar file.\n\nClick OK.\n\n.\n\nFrom the menu, choose File > Import.\n\n.\n\nIn the Import dialog box, expand General and choose File System.\n\nClick Next.\n\n.\n\nUsing the Browse button, select the code folder of the coherence obe support directory.\n\nClick OK.\n\n.\n\nSelect the Tests.java class.\n\n.\n\nUsing the Into folder Browse button, choose CoherenceWEB/src.\n\nClick Finish.\n\n.\n\n� The new class will be added to the CoherenceWEB application.\n\nThe newly added Tests class is a Java servlet and must be registered with the web application.\n\n.\n\nExpand the Deployment Descriptor: CoherenceWeb folder.\n\n.\n\nSelect Servlets, right-click and choose New > Servlet.\n\n.\n\nIn the Create Servlet dialog box, select Use an existing Servlet class or JSP, and then browse to the imported class Tests.\n\nClick Finish.\n\n.\n\nNote that the class generated a default mapping for the servlet using the class name all in lowercase.\n\nAdd Resource References\n\nMost often environment settings in web applications are accessed externally via environment references. Coherence applications are no different and use an environment reference to access to create connections to transaction caches. To add an environment reference, the application must:\n\nDefine the environment reference in web.xml\n\nSpecify the JNDI name of the reference in weblogic.xml\n\n.\n\nNavigate to the CoherenceWEB/WebContent/WEB-INF folder.\n\n.\n\nOpen the web.xml file, click the Source tab and after the <servlet- mapping> element, add a resource reference resembling:\n\n<resource-ref>\n\n��� <res-ref-name>eis/CoherenceTxCF</res-ref-name>\n\n��� <res-type>com.tangosol.coherence.transaction.ConnectionFactory</res-type>\n\n��� <res-auth>Container</res-auth>\n\n</resource-ref>\n\nSave your changes.\n\nFor convenience, a snippet file, named webapp.snippet.web.txt, is provided in the XML directory of the provided source which contains this resource reference.\n\nDeploy and Test\n\nEclipse can package and deploy applications to running instances of application servers. However, when packaging a resource adapter, Eclipse omits any RAR files. As such the next steps package the application via export, and deploy using the WebLogic Server Console.\n\nDefine the environment reference in web.xml\n\nSpecify the JNDI name of the reference in weblogic.xml\n\n.\n\nSelect the CoherenceTX application.\n\n.\n\nRight-click and choose Export > EAR file.\n\n.\n\nMinimize Eclipse.\n\n.\n\nStart WebLogic server using a command similar to:\n\nstart d:\\oracle\\domains\\coh_domain\\startWebLogic.cmd\n\nNote that the start command is purely a convenience.\n\n.\n\nOpen Firefox or a convenient browser and enter the URL: http://localhost;:7001/console\n\n.\n\nLog in to the Weblogic Console using the username and password used when creating the domain.\n\n.\n\nClick the Preferences button.\n\n.\n\nDeselect Automatically Acquire Lock and Activate Changes.\n\nClick Save.\n\n.\n\nIn the Domain Structure pane, click Deployments.\n\n.\n\nIn the Summary of Deployments pane, click Install in the Deployments section.\n\n.\n\nIn path, specify the directory where the Enterprise application was exported and choose the application from the list. If more than one exists, be sure to choose the correct application. For this tutorial, the file name used was CoherenceTX.ear.\n\nClick Next.\n\n.\n\nIn the Install Application Assistant pane, ensure that Install this deployment as an application is selected.\n\nClick Next.\n\n.\n\nIn the Optional Settings pane, make no changes.\n\nClick Finish.\n\n.\n\nIn Change Center, click Activate Changes.\n\n.\n\nIn a different tab, execute the application by entering the URL: http://localhost:7001/CoherenceWEB/tests.\n\n.\n\nExperiment with the provided tests. Compare each test with the code which implements it.\n\nSummary\n\nDuring this tutorial, you explored how to create an Enterprise application with Eclipse and enable that application to use Coherence via a resource adapter.\n\nIn this tutorial, you have learned how to:\n\nCreate a simple WebLogic Domain\n\nRun Eclipse Helios and update OEPE as required\n\nCreate an Enterprise application along with its web application\n\nAdd Coherence to an Enterprise application as a resource adapter\n\nAdd a Coherence cache definition to an application\n\nAdd a resource reference for Coherence to a web application\n\nTest an application which uses Coherence in various transaction scenarios\n\nResources\n\nTo learn more about Coherence , refer to additional OBEs on the OLL web site."
    }
}