{
    "id": "yago_19692_0",
    "rank": 75,
    "data": {
        "url": "https://www.mslinn.com/llm/1000-latex.html",
        "read_more_link": "",
        "language": "en",
        "title": "LaTeX Notes",
        "top_image": "https://www.mslinn.com/assets/images/favicon.png",
        "meta_img": "https://www.mslinn.com/assets/images/favicon.png",
        "images": [
            "https://www.mslinn.com/assets/images/robotCircle400.webp",
            "https://www.mslinn.com/assets/images/clippy.svg",
            "https://www.mslinn.com/assets/images/clippy.svg",
            "https://www.mslinn.com/assets/images/clippy.svg",
            "https://www.mslinn.com/assets/images/clippy.svg",
            "https://www.mslinn.com/images/mike/mikeSquaretrans_207x207.png",
            "https://www.mslinn.com/assets/images/expertIntro/justice_300x300.png",
            "https://www.mslinn.com/assets/images/mike_sax_saturated.png",
            "https://www.mslinn.com/assets/images/robotCircle207x207.png",
            "https://www.mslinn.com/assets/images/blog_word_salad.png",
            "https://www.mslinn.com/blog/jekyll/ruby.png",
            "https://www.mslinn.com/assets/images/jekyll_205x88.png",
            "https://www.mslinn.com/blog/images/git.png",
            "https://www.mslinn.com/assets/images/django_120x120.png",
            "https://www.mslinn.com/assets/images/mainframe.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Mike Slinn"
        ],
        "publish_date": "2024-01-31T00:00:00-05:00",
        "summary": "",
        "meta_description": "LaTeX notes.",
        "meta_lang": "en",
        "meta_favicon": "/assets/images/favicon.png",
        "meta_site_name": "Mike Slinn",
        "canonical_link": "https://www.mslinn.com/llm/1000-latex.html",
        "text": "Most math markup systems have some kind of relationship with TeX and LaTeX. These are my LaTeX notes for the MathLive flavor of LaTeX.\n\nTerms\n\nMany terms can be entered just as they are. However, you can group terms by enclosing them within { curly braces }. For example, x_t and x_{t} both render the t as a subscript: x_t.\n\nYou need to group terms in order to modify them as a unit. For example, x_t-1 renders as x_t-1, which is fine, unless you meant x_{t-1}, which would be written as x_{t-1}.\n\nSymbols\n\nGreek\n\nGreek symbols can be upper and lower case. Each font displays greek and other LaTeX symbols differently, and some fonts do not display them at all. You can specify them several ways; in decreasing order of preference:\n\nLaTeX symbol, e.g. \\alpha (\\alpha), \\Alpha (\\Alpha), \\overline\\alpha} (\\overline\\alpha})\n\nHTML entity name, e.g. &alpha; (α), &Alpha; (Α)\n\nSpecial\n\nTilde (~) is written as \\sim, which displays as \\sim\n\nOperators\n\nAddition and subtraction: 1+2-3 renders as 1+2-3\n\nMultiplication and division: 1*2/3 renders as 1*2/3\n\nExponentiation: x^y renders as x^y\n\nSubscript: x_y renders as x_y. If you need an extra-low subscript, use two underbars: x__{T-1} renders as x__{T-1}.\n\nLog and natural log: \\log_{2}{42} renders as \\log_{2}{42}\n\nNatural log: \\ln(42) renders as \\ln(42)\n\nArrows\n\nMany types of arrows are possible, including annotated arrows:\n\n\\rightarrow (\\rightarrow)\n\n\\longrightarrow{x} (\\longrightarrow{x})\n\nFunctions\n\nThese symbols are like functions in that they require parameters.\n\nFractions\n\nUse \\frac to write a fraction. It accepts two parameters, the numerator and the denominator. For example:\n\ng(x) = \\frac{1}{x} renders as g(x) = \\frac{1}{x}\n\nIntegrals\n\nWrite as \\int^upperBound_lowerBound or \\int_lowerBound^upperBound.\n\nFor example:\n\nF(x) = \\int^a_b \\frac{1}{3}x^3 and F(x) = \\int^b_a \\frac{1}{3}x^3 both render as:\n\nF(x) = \\int^b_a \\frac{1}{3}x^3\n\nParentheses, Brackets, etc.\n\nTo cause LaTeX to display a large left parenthesis write \\left(; for a large right parenthesis, write \\right). Every \\left requires a matching \\right, however the type of parenthese or bracket that follows need not match. This works for all types of parentheses and brackets, including (), [] and {}.\n\nFor example, the following are all legal. They usually automatically adjust their height according to the content that follows.\n\n(...) displays as (...)\n\n\\left(...\\right) displays as \\left(...\\right)\n\n\\left[...\\right] displays as \\left[...\\right]\n\n\\left\\{...\\right\\} displays as \\left\\{...\\right\\}\n\n\\left(...\\right] displays as \\left(...\\right]\n\n\\left\\{...\\right) displays as \\left\\{...\\right)\n\nNote: left and right squiggly braces must be escaped when used with \\left or \\right, as shown above.\n\nYou can also use angled parentheses (<> or \\langle\\rangle) (\\langle\\rangle) and a vertical bar (|). For example:\n\n\\langle...\\rangle displays as \\langle...\\rangle\n\n<...> displays as <...>\n\n\\left\\langle...\\right\\rangle displays as \\left\\langle...\\right\\rangle\n\n\\left<...\\right> displays as \\left<...\\right>\n\n|...| displays as |...|\n\n\\left|...\\right| displays as \\left|...\\right|\n\nIf you do not want a closing parenthesis displayed, use a period (.) after \\right. For example (again, note the squiggly parenthesis must be escaped):\n\n\\left(...\\right. displays as \\left(...\\right.\n\n\\left\\{...\\right. displays as \\left\\{...\\right.\n\n\\left[...\\right. displays as \\left[...\\right.\n\n\\left<...\\right. displays as \\left<...\\right.\n\n\\left\\langle...\\right. displays as \\left\\langle...\\right.\n\n\\left|...\\right. displays as \\left|...\\right.\n\nThe parentheses will usually resize automatically, but you can also manually control the size of round parentheses only with \\big(, \\Big(, \\bigg(, and \\Bigg(. These do not need to be matched. For example:\n\n\\big(...\\big) displays as \\big(...\\big)\n\n\\Big(...\\Big) displays as \\Big(...\\Big)\n\n\\bigg(...\\bigg) displays as \\bigg(...\\bigg)\n\n\\Bigg(...\\Bigg) displays as \\Bigg(...\\Bigg)\n\nFor better spacing, use \\bigl(, \\bigr), \\Bigl(, \\Bigr), \\biggl(, \\biggr), \\Biggr)\n\n\\bigl(...\\bigr) displays as \\bigl(...\\bigr)\n\n\\Bigl(...\\Bigr) displays as \\Big(...\\Bigr)\n\n\\biggl(...\\biggr) displays as \\biggl(...\\biggr)\n\n\\Biggl(...\\Biggr) displays as \\Biggl(...\\Biggr)\n\nThe other types of parentheses do not work with big variants:\n\n\\big{\\big] displays as \\big{\\big]\n\n\\bigl{\\bigr] displays as \\bigl{\\bigr]\n\n\\Big{\\Big] displays as \\Big{\\Big]\n\n\\bigg{\\bigg] displays as \\bigg{\\bigg]\n\n\\Bigg{\\Bigg] displays as \\Bigg{\\Bigg]\n\nComplete documentation is here.\n\nAlignment and Line Breaks\n\nLocations within a series of equations can be horizontally aligned by wrapping them within \\begin{aligned} ... \\end{aligned} and marking the alignment points with an ampersand (&).\n\nTwo backslashes (\\\\) causes a line break. This is useful for a sequence of statements that must be evaluated in order (top to bottom).\n\nRenders as:\n\n\\begin{aligned} x & = 1 + 2 \\\\ longVariableName & = x * 3 \\end{aligned}\n\nYou could also write the ampersands without introducing extra whitespace by using {squiggly parentheses}:\n\nRenders as:\n\n\\begin{aligned} x&{=} 1 + 2 \\\\ longVariableName&{=} x * 3 \\end{aligned}\n\nCSS Classes and Rotated Text\n\nCSS Classes can be applied to portions of an equation by using \\class{className}.\n\nHere is a CSS class called rotate270 that rotates text counterclockwise 90 degrees:\n\nIn the above CSS style, note that the order of the translation operations is significant:\n\nrotate(270deg)\n\ntranslate(0, 130%) # TODO this X,Y displacement vector was fudged for demonstration purposes. Need a more accurate expression.\n\nUse the CSS class to rotate text in front of a large open square bracket like this:\n\nRenders as:\n\n\\displaystyle \\class{rotate270}{\\text{Repeat until t=1}}\\left[\\begin{aligned} \\\\ x&{=} 1 + 2 \\\\ y&{=} x * 3 \\\\ \\end{aligned}\n\nReferences"
    }
}