{
    "id": "yago_19692_2",
    "rank": 14,
    "data": {
        "url": "https://guides.nyu.edu/LaTeX/creating-document",
        "read_more_link": "",
        "language": "en",
        "title": "Getting Started with LaTeX",
        "top_image": "https://d2jv02qf7xgjwx.cloudfront.net/apps/common/favicon/favicon-32x32.png",
        "meta_img": "https://d2jv02qf7xgjwx.cloudfront.net/apps/common/favicon/favicon-32x32.png",
        "images": [
            "https://cdn.library.nyu.edu/images/nyulibraries-logo.svg",
            "https://s3.amazonaws.com/libapps/accounts/109251/images/Screen_Shot_2016-12-23_at_1.25.32_PM.png",
            "https://s3.amazonaws.com/libapps/accounts/109251/images/Screen_Shot_2016-12-23_at_1.24.08_PM.png",
            "https://s3.amazonaws.com/libapps/accounts/109251/images/Screen_Shot_2016-12-23_at_1.50.50_PM.png",
            "https://s3.amazonaws.com/libapps/accounts/109251/images/Screen_Shot_2016-12-23_at_2.19.08_PM.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Matthew Frenkel"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "LaTeX is a typesetting program useful for mathematical and scientific writings or publications.  This guide provides an overview of how to get started with LaTeX, as well as resources and exercise to help new users of the program.",
        "meta_lang": "en",
        "meta_favicon": "//d2jv02qf7xgjwx.cloudfront.net/apps/common/favicon/apple-touch-icon.png",
        "meta_site_name": "",
        "canonical_link": "https://guides.nyu.edu/LaTeX/creating-document",
        "text": "Commands\n\nCommands are a vital structure for creating any kind of document in LaTeX. Commands have many uses such as changing document/text formatting, creating equations, delineating sections of a document, and inputting symbols. To use a command a back slash is placed before the command. For example \\pi is the command to insert the symbol π and \\begin{matrix} is one of the commands needed to input a matrix. Generally commands have the format \\command[optional argument]{required argument}. Multiple arguments can be used with some commands by separating each argument with a comma, for example \\hypersetup{colorlinks=true, linkcolor=blue, urlcolor=blue} sets the font color of certain hyperlinks in a document. Some commands such as \\pi have neither a optional nor required argument. Others such as \\begin{} will only work with a recognized required argument. Some commands can also accept an optional argument which is used to specify what action the command will take, for example \\documentclass[11pt, twocolumn]{article} tells LaTeX that the current project is an article with 11pt font and should be formatted with two columns, leaving out the optional argument, \\documentclass{article}, will cause LaTeX to use the defaults associated with this command Lastly, some commands may have more than one required argument for example \\frac{numerator}{denominator} creates a faction where the first argument is the numerator and the second argument is the denominator. A list of common commands can be seen in the Common Commands section of this page, there are also links to several useful websites with lists of commands in the Resources page.\n\nPackages\n\nPackages are used to supplement the standard features of LaTeX. If you are trying to use a command and find that it is generating an error one of the most common issues is that you have not included the needed package in your document. The command \\usepackage{} with the package name as the argument will tell LaTeX to include a certain package in your document. Packages should be placed in the document preamble (see Document Structure below). If you would like to include multiple packages in your document you can either include the \\usepackage{} command multiple times or use it once and separate each package name with a comma i.e.:\n\n\\usepackage{geometry}\n\n\\usepackage{amsmath}\n\n\\usepackage{graphicx}\n\n\\usepackage{geometry, amsmath, graphicx}\n\nIt is better to list the packages separately if you intend to use an optional argument with any package, otherwise it just comes down to personal preference. Many standard packages come with a MikTex or MacTex download, but you can also install new ones if needed. Some instruction for installing new packages can be found online. See the Common Packages part of this page for a list of some useful packages.\n\nText\n\nWriting text in a LaTeX document is easy. Once you are inside the body of the document, as described in the Document Structure section of this page, all you have to do is start typing. When you compile the code LaTeX will take care of all the text formatting based on any commands and packages used.\n\nMath\n\nIncorporating mathematical symbols and equations is one of the most popular features of LaTeX. There are a number of ways to include math in a LaTeX document, for more information see the Document Structure section of this page.\n\n​Comments\n\nAnything that follows a % in a line of code will be treated as a comment and ignored by compiler. If you want to include a percentage symbol in your text use the command \\% for example of you want to write 100% in LaTeX you would write 100\\%\n\nTo create PDFs with LaTeX the user must generate a .tex file. The .tex file will consist of the code that is compiled by the back end LaTeX software to generate the end result PDF document. With LaTeX installed .tex files can be created in notepad or textedit on Windows or OS X computers respectively, though it is strongly recommenced to generate these files directly in a LaTeX text editor as discussed in the Getting Started: Installation tab.\n\nA LaTeX document consists of two main pieces, the preamble and the body, the bibliography can be considered a third piece depending on how you structure it, but that will be discussed in the BibTex tab of this guide. It is recommended that the user creates a new folder on their computer for each LaTeX document they are working on. When LaTeX compiles a .tex file it generates several files in order to create the PDF having a folder for the each individual document you are working on will help keep all of the files generated organized. Additionally, it possible the user will want to insert images, figures, or other objects into their document (BibTex files for example), it is much simpler to insert items into the document when they are located in the same folder as the .tex file.\n\nPreamble\n\nThe preamble to a LaTeX document is all the information that occurs before the document begins. The preamble starts with the command \\documentclass{} and ends with the command \\begin{document}. Below is an image of a document preamble:\n\nDifferent objects are placed in the preamble between the commands \\documentclass{} and \\begin{document}. The most common of these items is the command \\usepackage{}. A more detailed explanation of what packages are can be found under the LaTeX Structures heading on this page, but briefly a package informs the compiler of certain commands that will be used and certain procedures to take while generating the final document. Any number of packages can be included in the preamble, and one of the most common mistakes made by the new LaTeX user is to include a command in their document without including the proper package in the preamble. Other commands such as \\title, \\author, and \\date are included in the preamble and than may be incorporated within the document. Lastly, new commands can be created in the preamble that will only be used in the current document.\n\nBody\n\nThe body of a LaTeX document is where all of the text, equations, figures, tables, etc... will be placed. The body of the document begins with the command \\begin{document} and ends with the command \\end{document}. A very simple sample code and its output can be seen below. The code contains both the preamble and body of the document.\n\nWriting Math\n\nOne of the most popular features of LaTeX is its ability to easily incorporate and format mathematical equations and symbols. There are two important things to remember to ensure LaTeX handles mathematical formula properly.\n\nFirst is to make sure that you have included all necessary packages. The most common package for using mathematical formulas in a document is \"amsmath\", though this package allows the use of a multitude of mathematical symbols and commands it does not include everything. If you try to compile a document and an error occurs related to a mathematical object you have included you will want to check if there is an additional package you need, for example if you try to include bold lettering in a mathematical equation without the package \"bm\" an error will occur.\n\nSecond is to enter math mode. Math mode lets LaTeX know that something should be formatted as math and not regular text, there are also some symbols and commands that can not be used outside of math mode. The image below shows the same text, f(x) = 2x+5, first not using math mode and second using it. There is a very clear difference between how the equation is formatted inside and outside of math mode.\n\nThere are several different ways to enter math mode. If you would like to write mathematical expression inside a line of text all the mathematical text should be book ended by $. For example writing $x+3$ would tell LaTeX to write x+3 as math. If you want math to appear on its own line it what is called display mode you can use either the command $$ on both sides of the math, or \\[ and \\]. The previous example would look like this: $$x+3$$ or \\[x+3\\]. Finally, some commands will automatically place the user in math mode for example any text appearing between the commands \\begin{equation} and \\end{equation} will be written in math mode. Go to the exercises tab for some questions to let you practice using math mode.\n\nHere is a list of some useful and common commands for LaTeX. Links to more exhaustive lists can be found on the Resources tab of this guide. If you are looking for specific mathematical symbols check the links on the resources tab. If you are interested in more information about a specific command a simple Google search will often provide great results.\n\nPreamble commands:\n\n\\documentclass{}\n\nThe first command in any document. Used to specify what type of document is being made. Some common arguments are article (common for scientific journals), book, IEEEtran (for IEEE transaction format), slides, beamer (for presentations).\n\n\\usepackage{}\n\nThis command imports a package into the LaTeX document. This is important for including any commands that are not standard in LaTeX.\n\n\\title{}\n\nThe intended title of the document should be used as the argument\n\n\\author{}\n\nThe author of the document should be used as the argument, for multiple authors use \\and to separate authors name or use the authblk package. For the authblk package uses the following format where \\affil is used to entire the affiliation of the author and the optional argument denotes the whatever symbol should be used after the author's name:\n\n\\author[1]{1st Author}\n\n\\author[1]{2nd Author}\n\n\\author[1]{3rd Author}\n\n\\author[2]{Nth Author}\n\n\\affil[1]{Institute 1}\n\n\\affil[2]{Institute 2}\n\n\\date{}\n\nThe argument is the date associated with the document. Note that leaving the argument empty will create a blank date in the title, and not including the command will default the title to the date compiled.\n\nBody commands:\n\n\\maketitle\n\nCreates a title based on the \\title, \\author, and \\date provided.\n\n\\tableofcontents, \\listoffigures, \\listoftables\n\nCreates a table of content, list of figures, and/or list of tables.\n\n\\newpage{}\n\nCreates a new page\n\n\\\\\n\nCreates a line break\n\n\\begin{} and \\end{}\n\nWhenever there is a \\begin{} it must be paired with an \\end{} with the same argument at some point later in the document. The \\begin{} command tells LaTeX to entire a certain environment while the \\end{} command concludes that environment. \\begin{document} will start the body of the document (end the preamble) and \\end{document} will end the document. Other common arguments are equation, align, tabular, and figure.\n\n\\section{}\n\nDenotes a new section. The title section should be used as the argument. Sections will be automatically included in the table of contents. Use the commands \\subsection{} and \\subsubsection{} to create sections within sections."
    }
}