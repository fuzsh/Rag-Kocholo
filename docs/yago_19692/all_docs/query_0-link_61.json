{
    "id": "yago_19692_0",
    "rank": 61,
    "data": {
        "url": "https://www.myfonts.com/collections/donald-e-knuth",
        "read_more_link": "",
        "language": "en",
        "title": "Donald E. Knuth",
        "top_image": "https://cdn.shopify.com/s/files/1/0568/7164/9450/files/MyFonts_Logo.png?v=1717746124",
        "meta_img": "https://cdn.shopify.com/s/files/1/0568/7164/9450/files/MyFonts_Logo.png?v=1717746124",
        "images": [
            "https://www.myfonts.com/cdn/shop/t/217/assets/up-arrow.svg?v=171472774783305894441723698897"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "“Science is what we understand well enough to explain to a computer. Art is everything else.” Stanford professor Donald Knuth is the computer scientist’s com...",
        "meta_lang": "en",
        "meta_favicon": "//www.myfonts.com/cdn/shop/files/MyFonts_Favicon_small.png?v=1717748062",
        "meta_site_name": "",
        "canonical_link": "https://http://www.myfonts.com/collections/donald-e-knuth",
        "text": "“Science is what we understand well enough to explain to a computer. Art is everything else.” Stanford professor Donald Knuth is the computer scientist’s computer scientist. Many algorithms used throughout computing today were developed by him, and he has also made important contributions to mathematics. But what might that have to do with typography? Towards the end of the 1970s Knuth took a break from writing his magnum opus, The Art of Computer Programming, due to his increasing dissatisfaction with the quality of the typesetting. He set himself the task of automating high-quality typography, paying particular attention to mathematical texts. There were two results, one which has had a massive success, the other (although an amazing piece of work) never became easy enough to use to be a practical tool. The first of these is the typesetting language TeX, used by science students and academics worldwide. A TeX user can set up rules that work throughout an entire document, much like XML with style sheets. TeX has a composition engine whose handling of hyphenation, justification, avoiding rivers, etc. is only just being rivalled. Mathematics is rarely set better than with TeX. Source code to TeX has always been available, an early example of the open source model. Bug fixes have slowed to such an extent that it is probably the most reliable large piece of software in existence. The second of these is METAFONT, written by Knuth to provide fonts for TeX. Wanting a large number of type designs, all related stylistically, he designed METAFONT such that the font programmer can build in many variations, which a user of the font can vary to get the font needed. The Computer Modern font family supplied with TeX includes romans, sans-serifs, typewriter, and monospace versions; most include variations for different optical sizes. Unfortunately, despite input from type designers such as Hermann Zapf and others, upon whose recommendations Knuth made extensions to the program, few fonts have been made as meta-fonts; the main complaint is that it is very difficult to represent existing fonts as METAFONT programs. Knuth now declares his work in the field of typography is over; his 1999 book, Digital Typography, collates his work on the subject. Nevertheless he is still to be spotted at typography conferences..."
    }
}