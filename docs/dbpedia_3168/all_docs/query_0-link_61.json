{
    "id": "dbpedia_3168_0",
    "rank": 61,
    "data": {
        "url": "https://www.pingdom.com/outages/twitter-outages/",
        "read_more_link": "",
        "language": "en",
        "title": "Why Is Twitter Going Down So Often Recently?",
        "top_image": "https://www.pingdom.com/wp-content/uploads/2023/08/Twitter-image.png",
        "meta_img": "https://www.pingdom.com/wp-content/uploads/2023/08/Twitter-image.png",
        "images": [
            "https://www.pingdom.com/wp-content/uploads/2023/07/SW_Logo_Division_Pingdom_Web_Orange.svg",
            "https://www.pingdom.com/wp-content/uploads/2023/07/SW_Logo_Division_Pingdom_Web_White.svg",
            "https://www.pingdom.com/wp-content/uploads/2023/07/SW_Logo_Flame_Web_White.svg",
            "https://www.pingdom.com/wp-content/uploads/2021/03/PD-SynO-TMS-Test-1-opt-2.png",
            "https://www.pingdom.com/wp-content/uploads/2021/03/PD-RUMO-Outside-in-2.png",
            "https://www.pingdom.com/wp-content/uploads/2021/03/ao-host_details-2.png",
            "https://www.pingdom.com/wp-content/uploads/2021/03/ao-trace-summary-dashboard-2.png",
            "https://www.pingdom.com/wp-content/uploads/2021/03/AO-Logs-2.png",
            "https://www.pingdom.com/wp-content/uploads/2023/08/Twitter-image.png",
            "https://pingdomstg.wpengine.com/wp-content/uploads/2023/07/Error-login-Twitter.jpg",
            "https://pingdomstg.wpengine.com/wp-content/uploads/2023/07/Elon-Musk-Twitter.png",
            "https://pingdomstg.wpengine.com/wp-content/uploads/2023/07/9to5Google-Twitter.png",
            "https://pingdomstg.wpengine.com/wp-content/uploads/2023/07/Twitter-Support.png",
            "https://pingdomstg.wpengine.com/wp-content/uploads/2023/07/NetBlocks-Twitter.png",
            "https://pingdomstg.wpengine.com/wp-content/uploads/2023/07/Elon-Musk-2-Twitter.png",
            "https://www.pingdom.com/wp-content/uploads/2020/10/2010_appman_blog_third-party-monitoring.png",
            "https://www.pingdom.com/wp-content/uploads/2024/03/2402_OM_Blog_Generic_SWO_Q1_1080x1080_reddit.png",
            "https://www.pingdom.com/wp-content/uploads/2021/05/2105_appman_blog_end-user-monitoring.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-08-07T20:07:06+00:00",
        "summary": "",
        "meta_description": "Twitter has experienced a rise in downtime and outages over the last few months. In this post, we are going to learn about the outrages.",
        "meta_lang": "en",
        "meta_favicon": "https://www.pingdom.com/wp-content/uploads/2024/01/cropped-SW_Logo_Stacked_Web_Orange-32x32.png",
        "meta_site_name": "pingdom.com",
        "canonical_link": "https://www.pingdom.com/outages/twitter-outages/",
        "text": "Twitter has been in the news a lot lately. It’s one of the biggest internet companies in the world, so the public notices right away when its servers are down, and its brand reputation, stock price, revenue, and users can be affected. In recent months, users have noticed more Twitter outages and service disruptions than usual.\n\nWhile it’s impossible to avoid outages, looking at why Twitter may be experiencing issues can be a good learning experience for all web development teams. In this post, we’ll cover some of the most recent Twitter outages and help you understand why they occur and how they could have been prevented.\n\nSignificant Twitter outages\n\nFirst, let’s look at some of the most recent and significant Twitter outages.\n\nDecember 28 outage\n\nOn December 28, 2022, Twitter users could not use Twitter for almost five hours. Instead, they saw the following message:\n\nSome users also reported seeing “Rate Limit Exceeded” when they tried to access Twitter during this time, which indicates Twitter’s servers could not handle the number of incoming requests, leading to a complete service disruption. Even users who could access the website reported insanely slow load times and frequent connection issues.\n\nTwitter reported upgrading its back-end server architecture shortly after the outage to optimize speed and performance.\n\nJan 23 outage\n\nOn January 23, Android users reported they could not post a tweet. Also, some Android users reported some tweets weren’t loading for them at all. Users saw the message, “Oops, something went wrong.” It appeared loading and sending tweets wasn’t working as intended on Twitter’s Android app.\n\nFebruary 8 and February 18 outage\n\nA similar problem where tweets wouldn’t load also occurred on February 8. Users reported seeing error messages and were unable to post.\n\nAnother outage occurred roughly ten days later when timelines and replies on Twitter threads started breaking.\n\nMarch 6 outage\n\nOn March 6, 2023, Twitter again went down for a few hours, and users couldn’t use it normally or experienced problems accessing links, images, and videos. Thousands were affected by this outage, and many people in some regions reported the website was slower than usual.\n\nCompared to 2022, when Twitter experienced nine service disruptions for the entire year, the frequency of Twitter outages has increased significantly during the past eight months. According to NetBlocks, an organization devoted to tracking internet outages, Twitter experienced at least four widespread outages in February 2023.\n\nPotential causes of recent Twitter outages\n\nMany of these outages happened because of architecture changes in Twitter’s APIs, configurational changes in its back-end system, and routine server updates. Let’s look at each cause in detail.\n\nInternal configurational changes\n\nThe outage on March 6, 2023, was caused by a configurational change. However, this configurational change was only made in one part of the server, a stand-alone API. So how did a slight misconfiguration lead to an entire service going down? An engineer attempting to fix a separate issue in the system made a configuration change. Since the effect of an internal configurational change in Twitter’s back-end system wasn’t isolated, it escalated to other services, eventually causing an outage for several hours affecting millions of users.\n\nThe effects of internal configurational changes can be isolated by refining the back-end architecture. If your back-end system has a bunch of discrete microservices communicating with each other, a change in one microservice shouldn’t bring another down. Even in a monolith architecture, implementing process separation and proper error handling can help prevent this kind of effect on an internal configurational change.\n\nExternal integrations\n\nAnother possible cause of Twitter outages is external integrations. We know Twitter integrates many third-party APIs and services for some of its features. Third-party integrations allow users to share videos from YouTube Xbox gameplay and send tweets directly to Slack, Discord, and Service Now. But if your system is too tightly coupled with third-party integrations, you are at a higher risk of creating a problem. A bug in a third-party service shouldn’t disrupt your whole server, but it appears this is what happened to Twitter on February 8.\n\nPoorly maintained code\n\nAs you scale to your next million users, your codebase will grow immensely in size and complexity. The scale at which Twitter operates is beyond imagination. Picture this: tweets are constantly fetched, content is dynamically generated for millions of users, threads are loading up with messages, video is streaming worldwide, and more. However, having a perfect codebase to handle this might be impossible, which is where routine refactoring can help.\n\nOver the last few years, Twitter has continuously evolved its architecture, scale, and features. The codebase is mindbogglingly large, which can contribute to the complexity of feature updates and routine maintenance. But not updating or maintaining code leads to errors and unanticipated effects from issues.\n\nRoutinely refactoring the codebase, especially the more complex pieces, is essential. Having the appropriate code quality prevents unknown errors and bugs from surfacing and leading to a total outage and helps you iterate and update your codebase faster.\n\nBrittle APIs\n\nAPIs are the pillar of back-end services in any system. You must properly handle exceptions when developing and designing an API. If an API is too brittle, it can easily break things and cause a service outage. The Twitter outage on March 1, 2023, is reported as resulting from an issue in the timeline API. Due to this issue, the timeline stopped working altogether and caused tweets and replies to break and disappear.\n\nPreventing outages\n\nThe best defense against outages is a strong back-end architecture and system design with robust and reliable APIs forming a stable backbone of a disruption-free system. However, there will always be edge case scenarios, flukes, errors, and bugs you can’t plan or test for and can cause an outage later. You and your development team must be the first to know about those cases. You want to avoid learning about problems from your users or reading about them on a social media site. There are plenty of availability and performance monitoring tools you can easily integrate to help you understand your system better.\n\nPingdom® is one such tool designed to alert you about potential problems. It can also detect potential downtime, which can result later. It can provide actionable insights into your application’s uptime and performance you can use to prevent a potential outage from occurring.\n\nWhy preventing outages matters\n\nThe recent outages experienced by Twitter show the effect outages can have on a large tech company and serve as a warning to developers and engineers. However, the varying causes of Twitter’s recent outages aren’t unusual and are common problems many development engineering teams face daily."
    }
}