{
    "id": "dbpedia_2233_3",
    "rank": 73,
    "data": {
        "url": "http://www.mas.ncl.ac.uk/~ndjw1/teaching/biomod/prac2.html",
        "read_more_link": "",
        "language": "en",
        "title": "Deterministic simulation",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://www.staff.ncl.ac.uk/d.j.wilkinson/djw-text-img.gif",
            "http://www.staff.ncl.ac.uk/d.j.wilkinson/djw-mugshot-small.jpg",
            "http://www.mas.ncl.ac.uk/~ndjw1/smfsb.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "template"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "template",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "If time permits, figure out how to use Maple to solve systems of ODEs both analytically and numerically (Maple is listed under \"Scientific Software\" on the local Windows network). Entering \"using Maple to solve ODEs\" into Google throws up several useful resources. Maple's on-line help is also pretty good once you have the basic idea. To get you started, the following commands solve the single ODE for protein dimerisation/disassociation considered in the kinetics lecture.\n\nwith(DEtools); k_1:=1; k_2:=0.5; c:=1; f:=k_2*(c-P(t)) - 2*k_1*P(t)^2; ode:=diff(P(t),t)=f; ic:=P(0)=c; soln:=dsolve({ode,ic},P(t)); phi:=unapply(rhs(soln),t); psi:=(t)->evalf(Re(phi(t))); plot(psi(t),t=0..5);\n\nAlso note that adding type=numeric as an extra argument to dsolve will give a numeric solution rather than an analytic one, which is useful for intractable systems. Figure out how to use Maple to solve the corresponding bivariate system and check that the solution for [P] matches the one above. Once you know how to solve systems of equations, see how many of the examples we have looked at in the lectures are tractable."
    }
}