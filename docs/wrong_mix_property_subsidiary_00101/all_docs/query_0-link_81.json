{
    "id": "wrong_mix_property_subsidiary_00101_0",
    "rank": 81,
    "data": {
        "url": "https://github.com/imp/dnsmasq/blob/master/dnsmasq.conf.example",
        "read_more_link": "",
        "language": "en",
        "title": "dnsmasq/dnsmasq.conf.example at master Â· imp/dnsmasq",
        "top_image": "https://opengraph.githubassets.com/9f1f914c70bbd17679bbf659ffb2340416a1d514ac3289dae0382c981b27652c/imp/dnsmasq",
        "meta_img": "https://opengraph.githubassets.com/9f1f914c70bbd17679bbf659ffb2340416a1d514ac3289dae0382c981b27652c/imp/dnsmasq",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Mirror of the upstream dnsmasq repository. Contribute to imp/dnsmasq development by creating an account on GitHub.",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/imp/dnsmasq/blob/master/dnsmasq.conf.example",
        "text": "# Configuration file for dnsmasq.\n\n#\n\n# Format is one option per line, legal options are the same\n\n# as the long options legal on the command line. See\n\n# \"/usr/sbin/dnsmasq --help\" or \"man 8 dnsmasq\" for details.\n\n# Listen on this specific port instead of the standard DNS port\n\n# (53). Setting this to zero completely disables DNS function,\n\n# leaving only DHCP and/or TFTP.\n\n#port=5353\n\n# The following two options make you a better netizen, since they\n\n# tell dnsmasq to filter out queries which the public DNS cannot\n\n# answer, and which load the servers (especially the root servers)\n\n# unnecessarily. If you have a dial-on-demand link they also stop\n\n# these requests from bringing up the link unnecessarily.\n\n# Never forward plain names (without a dot or domain part)\n\n#domain-needed\n\n# Never forward addresses in the non-routed address spaces.\n\n#bogus-priv\n\n# Uncomment these to enable DNSSEC validation and caching:\n\n# (Requires dnsmasq to be built with DNSSEC option.)\n\n#conf-file=%%PREFIX%%/share/dnsmasq/trust-anchors.conf\n\n#dnssec\n\n# Replies which are not DNSSEC signed may be legitimate, because the domain\n\n# is unsigned, or may be forgeries. Setting this option tells dnsmasq to\n\n# check that an unsigned reply is OK, by finding a secure proof that a DS\n\n# record somewhere between the root and the domain does not exist.\n\n# The cost of setting this is that even queries in unsigned domains will need\n\n# one or more extra DNS queries to verify.\n\n#dnssec-check-unsigned\n\n# Uncomment this to filter useless windows-originated DNS requests\n\n# which can trigger dial-on-demand links needlessly.\n\n# Note that (amongst other things) this blocks all SRV requests,\n\n# so don't use it if you use eg Kerberos, SIP, XMMP or Google-talk.\n\n# This option only affects forwarding, SRV records originating for\n\n# dnsmasq (via srv-host= lines) are not suppressed by it.\n\n#filterwin2k\n\n# Change this line if you want dns to get its upstream servers from\n\n# somewhere other that /etc/resolv.conf\n\n#resolv-file=\n\n# By default, dnsmasq will send queries to any of the upstream\n\n# servers it knows about and tries to favour servers to are known\n\n# to be up. Uncommenting this forces dnsmasq to try each query\n\n# with each server strictly in the order they appear in\n\n# /etc/resolv.conf\n\n#strict-order\n\n# If you don't want dnsmasq to read /etc/resolv.conf or any other\n\n# file, getting its servers from this file instead (see below), then\n\n# uncomment this.\n\n#no-resolv\n\n# If you don't want dnsmasq to poll /etc/resolv.conf or other resolv\n\n# files for changes and re-read them then uncomment this.\n\n#no-poll\n\n# Add other name servers here, with domain specs if they are for\n\n# non-public domains.\n\n#server=/localnet/192.168.0.1\n\n# Example of routing PTR queries to nameservers: this will send all\n\n# address->name queries for 192.168.3/24 to nameserver 10.1.2.3\n\n#server=/3.168.192.in-addr.arpa/10.1.2.3\n\n# Add local-only domains here, queries in these domains are answered\n\n# from /etc/hosts or DHCP only.\n\n#local=/localnet/\n\n# Add domains which you want to force to an IP address here.\n\n# The example below send any host in double-click.net to a local\n\n# web-server.\n\n#address=/double-click.net/127.0.0.1\n\n# --address (and --server) work with IPv6 addresses too.\n\n#address=/www.thekelleys.org.uk/fe80::20d:60ff:fe36:f83\n\n# Add the IPs of all queries to yahoo.com, google.com, and their\n\n# subdomains to the vpn and search ipsets:\n\n#ipset=/yahoo.com/google.com/vpn,search\n\n# Add the IPs of all queries to yahoo.com, google.com, and their\n\n# subdomains to netfilters sets, which is equivalent to\n\n# 'nft add element ip test vpn { ... }; nft add element ip test search { ... }'\n\n#nftset=/yahoo.com/google.com/ip#test#vpn,ip#test#search\n\n# Use netfilters sets for both IPv4 and IPv6:\n\n# This adds all addresses in *.yahoo.com to vpn4 and vpn6 for IPv4 and IPv6 addresses.\n\n#nftset=/yahoo.com/4#ip#test#vpn4\n\n#nftset=/yahoo.com/6#ip#test#vpn6\n\n# You can control how dnsmasq talks to a server: this forces\n\n# queries to 10.1.2.3 to be routed via eth1\n\n# server=10.1.2.3@eth1\n\n# and this sets the source (ie local) address used to talk to\n\n# 10.1.2.3 to 192.168.1.1 port 55 (there must be an interface with that\n\n# IP on the machine, obviously).\n\n# server=10.1.2.3@192.168.1.1#55\n\n# If you want dnsmasq to change uid and gid to something other\n\n# than the default, edit the following lines.\n\n#user=\n\n#group=\n\n# If you want dnsmasq to listen for DHCP and DNS requests only on\n\n# specified interfaces (and the loopback) give the name of the\n\n# interface (eg eth0) here.\n\n# Repeat the line for more than one interface.\n\n#interface=\n\n# Or you can specify which interface _not_ to listen on\n\n#except-interface=\n\n# Or which to listen on by address (remember to include 127.0.0.1 if\n\n# you use this.)\n\n#listen-address=\n\n# If you want dnsmasq to provide only DNS service on an interface,\n\n# configure it as shown above, and then use the following line to\n\n# disable DHCP and TFTP on it.\n\n#no-dhcp-interface=\n\n# On systems which support it, dnsmasq binds the wildcard address,\n\n# even when it is listening on only some interfaces. It then discards\n\n# requests that it shouldn't reply to. This has the advantage of\n\n# working even when interfaces come and go and change address. If you\n\n# want dnsmasq to really bind only the interfaces it is listening on,\n\n# uncomment this option. About the only time you may need this is when\n\n# running another nameserver on the same machine.\n\n#bind-interfaces\n\n# If you don't want dnsmasq to read /etc/hosts, uncomment the\n\n# following line.\n\n#no-hosts\n\n# or if you want it to read another file, as well as /etc/hosts, use\n\n# this.\n\n#addn-hosts=/etc/banner_add_hosts\n\n# Set this (and domain: see below) if you want to have a domain\n\n# automatically added to simple names in a hosts-file.\n\n#expand-hosts\n\n# Set the domain for dnsmasq. this is optional, but if it is set, it\n\n# does the following things.\n\n# 1) Allows DHCP hosts to have fully qualified domain names, as long\n\n# as the domain part matches this setting.\n\n# 2) Sets the \"domain\" DHCP option thereby potentially setting the\n\n# domain of all systems configured by DHCP\n\n# 3) Provides the domain part for \"expand-hosts\"\n\n#domain=thekelleys.org.uk\n\n# Set a different domain for a particular subnet\n\n#domain=wireless.thekelleys.org.uk,192.168.2.0/24\n\n# Same idea, but range rather then subnet\n\n#domain=reserved.thekelleys.org.uk,192.68.3.100,192.168.3.200\n\n# Uncomment this to enable the integrated DHCP server, you need\n\n# to supply the range of addresses available for lease and optionally\n\n# a lease time. If you have more than one network, you will need to\n\n# repeat this for each network on which you want to supply DHCP\n\n# service.\n\n#dhcp-range=192.168.0.50,192.168.0.150,12h\n\n# This is an example of a DHCP range where the netmask is given. This\n\n# is needed for networks we reach the dnsmasq DHCP server via a relay\n\n# agent. If you don't know what a DHCP relay agent is, you probably\n\n# don't need to worry about this.\n\n#dhcp-range=192.168.0.50,192.168.0.150,255.255.255.0,12h\n\n# This is an example of a DHCP range which sets a tag, so that\n\n# some DHCP options may be set only for this network.\n\n#dhcp-range=set:red,192.168.0.50,192.168.0.150\n\n# Use this DHCP range only when the tag \"green\" is set.\n\n#dhcp-range=tag:green,192.168.0.50,192.168.0.150,12h\n\n# Specify a subnet which can't be used for dynamic address allocation,\n\n# is available for hosts with matching --dhcp-host lines. Note that\n\n# dhcp-host declarations will be ignored unless there is a dhcp-range\n\n# of some type for the subnet in question.\n\n# In this case the netmask is implied (it comes from the network\n\n# configuration on the machine running dnsmasq) it is possible to give\n\n# an explicit netmask instead.\n\n#dhcp-range=192.168.0.0,static\n\n# Enable DHCPv6. Note that the prefix-length does not need to be specified\n\n# and defaults to 64 if missing/\n\n#dhcp-range=1234::2, 1234::500, 64, 12h\n\n# Do Router Advertisements, BUT NOT DHCP for this subnet.\n\n#dhcp-range=1234::, ra-only\n\n# Do Router Advertisements, BUT NOT DHCP for this subnet, also try and\n\n# add names to the DNS for the IPv6 address of SLAAC-configured dual-stack\n\n# hosts. Use the DHCPv4 lease to derive the name, network segment and\n\n# MAC address and assume that the host will also have an\n\n# IPv6 address calculated using the SLAAC algorithm.\n\n#dhcp-range=1234::, ra-names\n\n# Do Router Advertisements, BUT NOT DHCP for this subnet.\n\n# Set the lifetime to 46 hours. (Note: minimum lifetime is 2 hours.)\n\n#dhcp-range=1234::, ra-only, 48h\n\n# Do DHCP and Router Advertisements for this subnet. Set the A bit in the RA\n\n# so that clients can use SLAAC addresses as well as DHCP ones.\n\n#dhcp-range=1234::2, 1234::500, slaac\n\n# Do Router Advertisements and stateless DHCP for this subnet. Clients will\n\n# not get addresses from DHCP, but they will get other configuration information.\n\n# They will use SLAAC for addresses.\n\n#dhcp-range=1234::, ra-stateless\n\n# Do stateless DHCP, SLAAC, and generate DNS names for SLAAC addresses\n\n# from DHCPv4 leases.\n\n#dhcp-range=1234::, ra-stateless, ra-names\n\n# Do router advertisements for all subnets where we're doing DHCPv6\n\n# Unless overridden by ra-stateless, ra-names, et al, the router\n\n# advertisements will have the M and O bits set, so that the clients\n\n# get addresses and configuration from DHCPv6, and the A bit reset, so the\n\n# clients don't use SLAAC addresses.\n\n#enable-ra\n\n# Supply parameters for specified hosts using DHCP. There are lots\n\n# of valid alternatives, so we will give examples of each. Note that\n\n# IP addresses DO NOT have to be in the range given above, they just\n\n# need to be on the same network. The order of the parameters in these\n\n# do not matter, it's permissible to give name, address and MAC in any\n\n# order.\n\n# Always allocate the host with Ethernet address 11:22:33:44:55:66\n\n# The IP address 192.168.0.60\n\n#dhcp-host=11:22:33:44:55:66,192.168.0.60\n\n# Always set the name of the host with hardware address\n\n# 11:22:33:44:55:66 to be \"fred\"\n\n#dhcp-host=11:22:33:44:55:66,fred\n\n# Always give the host with Ethernet address 11:22:33:44:55:66\n\n# the name fred and IP address 192.168.0.60 and lease time 45 minutes\n\n#dhcp-host=11:22:33:44:55:66,fred,192.168.0.60,45m\n\n# Give a host with Ethernet address 11:22:33:44:55:66 or\n\n# 12:34:56:78:90:12 the IP address 192.168.0.60. Dnsmasq will assume\n\n# that these two Ethernet interfaces will never be in use at the same\n\n# time, and give the IP address to the second, even if it is already\n\n# in use by the first. Useful for laptops with wired and wireless\n\n# addresses.\n\n#dhcp-host=11:22:33:44:55:66,12:34:56:78:90:12,192.168.0.60\n\n# Give the machine which says its name is \"bert\" IP address\n\n# 192.168.0.70 and an infinite lease\n\n#dhcp-host=bert,192.168.0.70,infinite\n\n# Always give the host with client identifier 01:02:02:04\n\n# the IP address 192.168.0.60\n\n#dhcp-host=id:01:02:02:04,192.168.0.60\n\n# Always give the InfiniBand interface with hardware address\n\n# 80:00:00:48:fe:80:00:00:00:00:00:00:f4:52:14:03:00:28:05:81 the\n\n# ip address 192.168.0.61. The client id is derived from the prefix\n\n# ff:00:00:00:00:00:02:00:00:02:c9:00 and the last 8 pairs of\n\n# hex digits of the hardware address.\n\n#dhcp-host=id:ff:00:00:00:00:00:02:00:00:02:c9:00:f4:52:14:03:00:28:05:81,192.168.0.61\n\n# Always give the host with client identifier \"marjorie\"\n\n# the IP address 192.168.0.60\n\n#dhcp-host=id:marjorie,192.168.0.60\n\n# Enable the address given for \"judge\" in /etc/hosts\n\n# to be given to a machine presenting the name \"judge\" when\n\n# it asks for a DHCP lease.\n\n#dhcp-host=judge\n\n# Never offer DHCP service to a machine whose Ethernet\n\n# address is 11:22:33:44:55:66\n\n#dhcp-host=11:22:33:44:55:66,ignore\n\n# Ignore any client-id presented by the machine with Ethernet\n\n# address 11:22:33:44:55:66. This is useful to prevent a machine\n\n# being treated differently when running under different OS's or\n\n# between PXE boot and OS boot.\n\n#dhcp-host=11:22:33:44:55:66,id:*\n\n# Send extra options which are tagged as \"red\" to\n\n# the machine with Ethernet address 11:22:33:44:55:66\n\n#dhcp-host=11:22:33:44:55:66,set:red\n\n# Send extra options which are tagged as \"red\" to\n\n# any machine with Ethernet address starting 11:22:33:\n\n#dhcp-host=11:22:33:*:*:*,set:red\n\n# Give a fixed IPv6 address and name to client with\n\n# DUID 00:01:00:01:16:d2:83:fc:92:d4:19:e2:d8:b2\n\n# Note the MAC addresses CANNOT be used to identify DHCPv6 clients.\n\n# Note also that the [] around the IPv6 address are obligatory.\n\n#dhcp-host=id:00:01:00:01:16:d2:83:fc:92:d4:19:e2:d8:b2, fred, [1234::5]\n\n# Ignore any clients which are not specified in dhcp-host lines\n\n# or /etc/ethers. Equivalent to ISC \"deny unknown-clients\".\n\n# This relies on the special \"known\" tag which is set when\n\n# a host is matched.\n\n#dhcp-ignore=tag:!known\n\n# Send extra options which are tagged as \"red\" to any machine whose\n\n# DHCP vendorclass string includes the substring \"Linux\"\n\n#dhcp-vendorclass=set:red,Linux\n\n# Send extra options which are tagged as \"red\" to any machine one\n\n# of whose DHCP userclass strings includes the substring \"accounts\"\n\n#dhcp-userclass=set:red,accounts\n\n# Send extra options which are tagged as \"red\" to any machine whose\n\n# MAC address matches the pattern.\n\n#dhcp-mac=set:red,00:60:8C:*:*:*\n\n# If this line is uncommented, dnsmasq will read /etc/ethers and act\n\n# on the ethernet-address/IP pairs found there just as if they had\n\n# been given as --dhcp-host options. Useful if you keep\n\n# MAC-address/host mappings there for other purposes.\n\n#read-ethers\n\n# Send options to hosts which ask for a DHCP lease.\n\n# See RFC 2132 for details of available options.\n\n# Common options can be given to dnsmasq by name:\n\n# run \"dnsmasq --help dhcp\" to get a list.\n\n# Note that all the common settings, such as netmask and\n\n# broadcast address, DNS server and default route, are given\n\n# sane defaults by dnsmasq. You very likely will not need\n\n# any dhcp-options. If you use Windows clients and Samba, there\n\n# are some options which are recommended, they are detailed at the\n\n# end of this section.\n\n# Override the default route supplied by dnsmasq, which assumes the\n\n# router is the same machine as the one running dnsmasq.\n\n#dhcp-option=3,1.2.3.4\n\n# Do the same thing, but using the option name\n\n#dhcp-option=option:router,1.2.3.4\n\n# Override the default route supplied by dnsmasq and send no default\n\n# route at all. Note that this only works for the options sent by\n\n# default (1, 3, 6, 12, 28) the same line will send a zero-length option\n\n# for all other option numbers.\n\n#dhcp-option=3\n\n# Set the NTP time server addresses to 192.168.0.4 and 10.10.0.5\n\n#dhcp-option=option:ntp-server,192.168.0.4,10.10.0.5\n\n# Send DHCPv6 option. Note [] around IPv6 addresses.\n\n#dhcp-option=option6:dns-server,[1234::77],[1234::88]\n\n# Send DHCPv6 option for namservers as the machine running\n\n# dnsmasq and another.\n\n#dhcp-option=option6:dns-server,[::],[1234::88]\n\n# Ask client to poll for option changes every six hours. (RFC4242)\n\n#dhcp-option=option6:information-refresh-time,6h\n\n# Set option 58 client renewal time (T1). Defaults to half of the\n\n# lease time if not specified. (RFC2132)\n\n#dhcp-option=option:T1,1m\n\n# Set option 59 rebinding time (T2). Defaults to 7/8 of the\n\n# lease time if not specified. (RFC2132)\n\n#dhcp-option=option:T2,2m\n\n# Set the NTP time server address to be the same machine as\n\n# is running dnsmasq\n\n#dhcp-option=42,0.0.0.0\n\n# Set the NIS domain name to \"welly\"\n\n#dhcp-option=40,welly\n\n# Set the default time-to-live to 50\n\n#dhcp-option=23,50\n\n# Set the \"all subnets are local\" flag\n\n#dhcp-option=27,1\n\n# Send the etherboot magic flag and then etherboot options (a string).\n\n#dhcp-option=128,e4:45:74:68:00:00\n\n#dhcp-option=129,NIC=eepro100\n\n# Specify an option which will only be sent to the \"red\" network\n\n# (see dhcp-range for the declaration of the \"red\" network)\n\n# Note that the tag: part must precede the option: part.\n\n#dhcp-option = tag:red, option:ntp-server, 192.168.1.1\n\n# The following DHCP options set up dnsmasq in the same way as is specified\n\n# for the ISC dhcpcd in\n\n# http://www.samba.org/samba/ftp/docs/textdocs/DHCP-Server-Configuration.txt\n\n# adapted for a typical dnsmasq installation where the host running\n\n# dnsmasq is also the host running samba.\n\n# you may want to uncomment some or all of them if you use\n\n# Windows clients and Samba.\n\n#dhcp-option=19,0 # option ip-forwarding off\n\n#dhcp-option=44,0.0.0.0 # set netbios-over-TCP/IP nameserver(s) aka WINS server(s)\n\n#dhcp-option=45,0.0.0.0 # netbios datagram distribution server\n\n#dhcp-option=46,8 # netbios node type\n\n# Send an empty WPAD option. This may be REQUIRED to get windows 7 to behave.\n\n#dhcp-option=252,\"\\n\"\n\n# Send RFC-3397 DNS domain search DHCP option. WARNING: Your DHCP client\n\n# probably doesn't support this......\n\n#dhcp-option=option:domain-search,eng.apple.com,marketing.apple.com\n\n# Send RFC-3442 classless static routes (note the netmask encoding)\n\n#dhcp-option=121,192.168.1.0/24,1.2.3.4,10.0.0.0/8,5.6.7.8\n\n# Send vendor-class specific options encapsulated in DHCP option 43.\n\n# The meaning of the options is defined by the vendor-class so\n\n# options are sent only when the client supplied vendor class\n\n# matches the class given here. (A substring match is OK, so \"MSFT\"\n\n# matches \"MSFT\" and \"MSFT 5.0\"). This example sets the\n\n# mtftp address to 0.0.0.0 for PXEClients.\n\n#dhcp-option=vendor:PXEClient,1,0.0.0.0\n\n# Send microsoft-specific option to tell windows to release the DHCP lease\n\n# when it shuts down. Note the \"i\" flag, to tell dnsmasq to send the\n\n# value as a four-byte integer - that's what microsoft wants. See\n\n# http://technet2.microsoft.com/WindowsServer/en/library/a70f1bb7-d2d4-49f0-96d6-4b7414ecfaae1033.mspx?mfr=true\n\n#dhcp-option=vendor:MSFT,2,1i\n\n# Send the Encapsulated-vendor-class ID needed by some configurations of\n\n# Etherboot to allow is to recognise the DHCP server.\n\n#dhcp-option=vendor:Etherboot,60,\"Etherboot\"\n\n# Send options to PXELinux. Note that we need to send the options even\n\n# though they don't appear in the parameter request list, so we need\n\n# to use dhcp-option-force here.\n\n# See http://syslinux.zytor.com/pxe.php#special for details.\n\n# Magic number - needed before anything else is recognised\n\n#dhcp-option-force=208,f1:00:74:7e\n\n# Configuration file name\n\n#dhcp-option-force=209,configs/common\n\n# Path prefix\n\n#dhcp-option-force=210,/tftpboot/pxelinux/files/\n\n# Reboot time. (Note 'i' to send 32-bit value)\n\n#dhcp-option-force=211,30i\n\n# Set the boot filename for netboot/PXE. You will only need\n\n# this if you want to boot machines over the network and you will need\n\n# a TFTP server; either dnsmasq's built-in TFTP server or an\n\n# external one. (See below for how to enable the TFTP server.)\n\n#dhcp-boot=pxelinux.0\n\n# The same as above, but use custom tftp-server instead machine running dnsmasq\n\n#dhcp-boot=pxelinux,server.name,192.168.1.100\n\n# Boot for iPXE. The idea is to send two different\n\n# filenames, the first loads iPXE, and the second tells iPXE what to\n\n# load. The dhcp-match sets the ipxe tag for requests from iPXE.\n\n#dhcp-boot=undionly.kpxe\n\n#dhcp-match=set:ipxe,175 # iPXE sends a 175 option.\n\n#dhcp-boot=tag:ipxe,http://boot.ipxe.org/demo/boot.php\n\n# Encapsulated options for iPXE. All the options are\n\n# encapsulated within option 175\n\n#dhcp-option=encap:175, 1, 5b # priority code\n\n#dhcp-option=encap:175, 176, 1b # no-proxydhcp\n\n#dhcp-option=encap:175, 177, string # bus-id\n\n#dhcp-option=encap:175, 189, 1b # BIOS drive code\n\n#dhcp-option=encap:175, 190, user # iSCSI username\n\n#dhcp-option=encap:175, 191, pass # iSCSI password\n\n# Test for the architecture of a netboot client. PXE clients are\n\n# supposed to send their architecture as option 93. (See RFC 4578)\n\n#dhcp-match=peecees, option:client-arch, 0 #x86-32\n\n#dhcp-match=itanics, option:client-arch, 2 #IA64\n\n#dhcp-match=hammers, option:client-arch, 6 #x86-64\n\n#dhcp-match=mactels, option:client-arch, 7 #EFI x86-64\n\n# Do real PXE, rather than just booting a single file, this is an\n\n# alternative to dhcp-boot.\n\n#pxe-prompt=\"What system shall I netboot?\"\n\n# or with timeout before first available action is taken:\n\n#pxe-prompt=\"Press F8 for menu.\", 60\n\n# Available boot services. for PXE.\n\n#pxe-service=x86PC, \"Boot from local disk\"\n\n# Loads <tftp-root>/pxelinux.0 from dnsmasq TFTP server.\n\n#pxe-service=x86PC, \"Install Linux\", pxelinux\n\n# Loads <tftp-root>/pxelinux.0 from TFTP server at 1.2.3.4.\n\n# Beware this fails on old PXE ROMS.\n\n#pxe-service=x86PC, \"Install Linux\", pxelinux, 1.2.3.4\n\n# Use bootserver on network, found my multicast or broadcast.\n\n#pxe-service=x86PC, \"Install windows from RIS server\", 1\n\n# Use bootserver at a known IP address.\n\n#pxe-service=x86PC, \"Install windows from RIS server\", 1, 1.2.3.4\n\n# If you have multicast-FTP available,\n\n# information for that can be passed in a similar way using options 1\n\n# to 5. See page 19 of\n\n# http://download.intel.com/design/archives/wfm/downloads/pxespec.pdf\n\n# Enable dnsmasq's built-in TFTP server\n\n#enable-tftp\n\n# Set the root directory for files available via FTP.\n\n#tftp-root=/var/ftpd\n\n# Do not abort if the tftp-root is unavailable\n\n#tftp-no-fail\n\n# Make the TFTP server more secure: with this set, only files owned by\n\n# the user dnsmasq is running as will be send over the net.\n\n#tftp-secure\n\n# This option stops dnsmasq from negotiating a larger blocksize for TFTP\n\n# transfers. It will slow things down, but may rescue some broken TFTP\n\n# clients.\n\n#tftp-no-blocksize\n\n# Set the boot file name only when the \"red\" tag is set.\n\n#dhcp-boot=tag:red,pxelinux.red-net\n\n# An example of dhcp-boot with an external TFTP server: the name and IP\n\n# address of the server are given after the filename.\n\n# Can fail with old PXE ROMS. Overridden by --pxe-service.\n\n#dhcp-boot=/var/ftpd/pxelinux.0,boothost,192.168.0.3\n\n# If there are multiple external tftp servers having a same name\n\n# (using /etc/hosts) then that name can be specified as the\n\n# tftp_servername (the third option to dhcp-boot) and in that\n\n# case dnsmasq resolves this name and returns the resultant IP\n\n# addresses in round robin fashion. This facility can be used to\n\n# load balance the tftp load among a set of servers.\n\n#dhcp-boot=/var/ftpd/pxelinux.0,boothost,tftp_server_name\n\n# Set the limit on DHCP leases, the default is 150\n\n#dhcp-lease-max=150\n\n# The DHCP server needs somewhere on disk to keep its lease database.\n\n# This defaults to a sane location, but if you want to change it, use\n\n# the line below.\n\n#dhcp-leasefile=/var/lib/misc/dnsmasq.leases\n\n# Set the DHCP server to authoritative mode. In this mode it will barge in\n\n# and take over the lease for any client which broadcasts on the network,\n\n# whether it has a record of the lease or not. This avoids long timeouts\n\n# when a machine wakes up on a new network. DO NOT enable this if there's\n\n# the slightest chance that you might end up accidentally configuring a DHCP\n\n# server for your campus/company accidentally. The ISC server uses\n\n# the same option, and this URL provides more information:\n\n# http://www.isc.org/files/auth.html\n\n#dhcp-authoritative\n\n# Set the DHCP server to enable DHCPv4 Rapid Commit Option per RFC 4039.\n\n# In this mode it will respond to a DHCPDISCOVER message including a Rapid Commit\n\n# option with a DHCPACK including a Rapid Commit option and fully committed address\n\n# and configuration information. This must only be enabled if either the server is\n\n# the only server for the subnet, or multiple servers are present and they each\n\n# commit a binding for all clients.\n\n#dhcp-rapid-commit\n\n# Run an executable when a DHCP lease is created or destroyed.\n\n# The arguments sent to the script are \"add\" or \"del\",\n\n# then the MAC address, the IP address and finally the hostname\n\n# if there is one.\n\n#dhcp-script=/bin/echo\n\n# Set the cachesize here.\n\n#cache-size=150\n\n# If you want to disable negative caching, uncomment this.\n\n#no-negcache\n\n# Normally responses which come from /etc/hosts and the DHCP lease\n\n# file have Time-To-Live set as zero, which conventionally means\n\n# do not cache further. If you are happy to trade lower load on the\n\n# server for potentially stale date, you can set a time-to-live (in\n\n# seconds) here.\n\n#local-ttl=\n\n# If you want dnsmasq to detect attempts by Verisign to send queries\n\n# to unregistered .com and .net hosts to its sitefinder service and\n\n# have dnsmasq instead return the correct NXDOMAIN response, uncomment\n\n# this line. You can add similar lines to do the same for other\n\n# registries which have implemented wildcard A records.\n\n#bogus-nxdomain=64.94.110.11\n\n# If you want to fix up DNS results from upstream servers, use the\n\n# alias option. This only works for IPv4.\n\n# This alias makes a result of 1.2.3.4 appear as 5.6.7.8\n\n#alias=1.2.3.4,5.6.7.8\n\n# and this maps 1.2.3.x to 5.6.7.x\n\n#alias=1.2.3.0,5.6.7.0,255.255.255.0\n\n# and this maps 192.168.0.10->192.168.0.40 to 10.0.0.10->10.0.0.40\n\n#alias=192.168.0.10-192.168.0.40,10.0.0.0,255.255.255.0\n\n# Change these lines if you want dnsmasq to serve MX records.\n\n# Return an MX record named \"maildomain.com\" with target\n\n# servermachine.com and preference 50\n\n#mx-host=maildomain.com,servermachine.com,50\n\n# Set the default target for MX records created using the localmx option.\n\n#mx-target=servermachine.com\n\n# Return an MX record pointing to the mx-target for all local\n\n# machines.\n\n#localmx\n\n# Return an MX record pointing to itself for all local machines.\n\n#selfmx\n\n# Change the following lines if you want dnsmasq to serve SRV\n\n# records. These are useful if you want to serve ldap requests for\n\n# Active Directory and other windows-originated DNS requests.\n\n# See RFC 2782.\n\n# You may add multiple srv-host lines.\n\n# The fields are <name>,<target>,<port>,<priority>,<weight>\n\n# If the domain part if missing from the name (so that is just has the\n\n# service and protocol sections) then the domain given by the domain=\n\n# config option is used. (Note that expand-hosts does not need to be\n\n# set for this to work.)\n\n# A SRV record sending LDAP for the example.com domain to\n\n# ldapserver.example.com port 389\n\n#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389\n\n# A SRV record sending LDAP for the example.com domain to\n\n# ldapserver.example.com port 389 (using domain=)\n\n#domain=example.com\n\n#srv-host=_ldap._tcp,ldapserver.example.com,389\n\n# Two SRV records for LDAP, each with different priorities\n\n#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,1\n\n#srv-host=_ldap._tcp.example.com,ldapserver.example.com,389,2\n\n# A SRV record indicating that there is no LDAP server for the domain\n\n# example.com\n\n#srv-host=_ldap._tcp.example.com\n\n# The following line shows how to make dnsmasq serve an arbitrary PTR\n\n# record. This is useful for DNS-SD. (Note that the\n\n# domain-name expansion done for SRV records _does_not\n\n# occur for PTR records.)\n\n#ptr-record=_http._tcp.dns-sd-services,\"New Employee Page._http._tcp.dns-sd-services\"\n\n# Change the following lines to enable dnsmasq to serve TXT records.\n\n# These are used for things like SPF and zeroconf. (Note that the\n\n# domain-name expansion done for SRV records _does_not\n\n# occur for TXT records.)\n\n#Example SPF.\n\n#txt-record=example.com,\"v=spf1 a -all\"\n\n#Example zeroconf\n\n#txt-record=_http._tcp.example.com,name=value,paper=A4\n\n# Provide an alias for a \"local\" DNS name. Note that this _only_ works\n\n# for targets which are names from DHCP or /etc/hosts. Give host\n\n# \"bert\" another name, bertrand\n\n#cname=bertand,bert\n\n# For debugging purposes, log each DNS query as it passes through\n\n# dnsmasq.\n\n#log-queries\n\n# Log lots of extra information about DHCP transactions.\n\n#log-dhcp\n\n# Include another lot of configuration options.\n\n#conf-file=/etc/dnsmasq.more.conf\n\n#conf-dir=/etc/dnsmasq.d\n\n# Include all the files in a directory except those ending in .bak\n\n#conf-dir=/etc/dnsmasq.d,.bak\n\n# Include all files in a directory which end in .conf\n\n#conf-dir=/etc/dnsmasq.d/,*.conf\n\n# If a DHCP client claims that its name is \"wpad\", ignore that.\n\n# This fixes a security hole. see CERT Vulnerability VU#598349\n\n#dhcp-name-match=set:wpad-ignore,wpad"
    }
}