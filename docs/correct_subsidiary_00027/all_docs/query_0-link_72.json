{
    "id": "correct_subsidiary_00027_0",
    "rank": 72,
    "data": {
        "url": "https://cadence123.rssing.com/chan-4781846/all_p32.html",
        "read_more_link": "",
        "language": "en",
        "title": "Cadence Blogs",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://pixel.quantserve.com/pixel/p-KygWsHah2_7Qa.gif",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fv/1.JPG",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fv/2.JPG",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fv/3.JPG",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fv/8.JPG",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fv/4.JPG",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fv/7.JPG",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fv/5.JPG",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fv/6.JPG",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1334115",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/rXZ0hBJDA88",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/Imagination_IPtalks.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1335596",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/0mxmh7gACN8",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1335831",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/RlG_CRymcmQ",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1335866",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/tMKOK_ji4hw",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fullerview/Bridge2.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fullerview/Bridge.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fullerview/Bridge3.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fullerview/Bridge4.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fullerview/Bridge5.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fullerview/Bridge7.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1335643",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/pva6f9BcjCY",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fullerview/Cortex-M0-chip-diagram-LG.png",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1335918",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/PAUGks23-9w",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/QRC4.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/QRC1.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/finfet1.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/QRC2.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1335602",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/jHFXTVYH9pg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image1.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image2.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image3.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image4.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image5.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image6.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image7.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image8.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image9.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image10.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Dual%20Side%20Contact/Image11.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1334981",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/QZVG9Z0kPS0",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336110",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/lEUI5H7CJao",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ip/ip_camera.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ip/media_converter.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ip/BroadRReachCard1.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ip/demo_display.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336108",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/-ijVkcLbIRk",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fullerview/Hogan-automotive-panel-7-15-14.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336181",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/ahlH5tUoCO4",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/Protium3.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/Protium2.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336182",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/OYTBMloSL3Q",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/Sean_Dart.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336202",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/wkcy-izGlgY",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336381",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/UTfP5quomxQ",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/Theater_200X225.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336373",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/ysd8nT0oKZc",
            "https://www.cadence.com/downloads/cdnlive/na/2013/Hemant_Shah.jpeg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336377",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/qfEhavWOxsU",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336375",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/ZWW-twiP3wY",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/pcb/2014/Jerry%20Grzenia/16.6%20-%20Allegro%20Multiple%20Constraint%20Region/Image1.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1334982",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/IUpQM5XOniI",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/HLS1.jpg",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/ii/2012/Richard_Goering/HLS2.jpg",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336565",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/46aOS_hX5yo",
            "https://www.cadence.com/Community/CSSharedFiles/blogs/fv/vManagerServer2.png",
            "https://www.cadence.com/Community/aggbug.aspx?PostID=1336591",
            "https://feeds.feedburner.com/~ff/cadence/community/blogs?d=yIl2AUoC8zA",
            "https://feeds.feedburner.com/~r/cadence/community/blogs/~4/GZe4C7Mal3k",
            "https://4.bp.blogspot.com/-aZzamp_aOzU/UhTjnrtlo1I/AAAAAAAAAVo/KMNDjN9CuVs/s640/Celestial+Blue.jpg",
            "https://3.bp.blogspot.com/-dVnYEK8YqnA/WLdQANWZvYI/AAAAAAAACkM/Vg0KjBHl7OIeTgvKQqI70r6tGg988k2QACPcB/s320/Screen%2BShot%2B2017-03-01%2Bat%2B5.45.44%2BPM.png",
            "https://augustacrime.com/wp-content/uploads/2017/01/imageCRESTONCURRY.jpg",
            "https://1.bp.blogspot.com/-m_gxW9wUrow/YWpAej2ComI/AAAAAAAADwI/lPbemMAKTPcFQMerHxF4zzzDiJkzDqjeACLcBGAsYHQ/w300-h400/WhatsApp%2BImage%2B2021-10-16%2Bat%2B11.00.18%2BAM.jpeg",
            "https://e2e.ti.com//resized-image/__size/1230x0/__key/communityserver-discussions-components-files/6/7608._F764D653_.PNG",
            "https://thepost.s3.amazonaws.com/wp-content/uploads/2014/01/0CA0CAOB-150x150.jpg",
            "https://2.bp.blogspot.com/-0ix3x8DoL8A/WFlZGsEdE1I/AAAAAAAA6KA/h4y8xdgH5FMNJZmtnt4BMZX5XpAzmNvtgCLcB/s1600/fryer66.jpg",
            "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhYlXaAGT5qxGYlcbexesYx_-ff9dQu80qBf1mKyPQ-ZUENH5qAUXqSUAH58_1VU4qAOlrr3ph_2ZsNlwnh5BcJ8Nnco6UVvHhAg-Lhgh6r2HEGLpQiM6YrVYtCmR4h-r0STfhOgbeH1C40Ffk7CcrI4QpS31LK0AtQ_T_LWwiLRg3RWSVKHGUMcIzG1XT2/w320-h320/Very%20small%20kolam%20designs%20for%20flats%201a.png",
            "https://3.bp.blogspot.com/-NP1u31H_hVE/WIJo02ELdQI/AAAAAAAAADY/eCMDy6ZuNoESiAXT9rhyePg9W9gujKiKwCEw/s400/p.txt.jpg",
            "https://4.bp.blogspot.com/-D2ybkIpqREU/Wti4IoCYwLI/AAAAAAAABEg/UTVmhPWy1QcrZg6t-w8mJpp49Ho6MfwfQCLcBGAs/s640/Anasuya%2B3.png",
            "https://2.bp.blogspot.com/-7TLcIsTWCRM/WJdhZJ8T1vI/AAAAAAAANlA/7-XTO95WE1494iVWxC5MIpWXckxuscj3QCLcB/s640/meenakshi%2Bjoshi%2Banchor.jpg",
            "https://i.imgur.com/9HEsRdo.jpg",
            "https://i.pinimg.com/originals/e6/33/6d/e6336d1dad962eae5f8162806efe68ce.png",
            "https://augustacrime.com/wp-content/uploads/2021/05/Jamar-Parker-31-of-Augusta-Cocaine-oxycodone-possession-with-intent-to-distribute-possession-of-controlled-substance.jpg",
            "https://lh5.ggpht.com/-drHHw9Z5ZwY/Tmp1gKWmZ1I/AAAAAAAALFc/8dMBz_U8mJw/s400/dragon_ball_73.gif",
            "https://cdn.comsol.com/wordpress/2013/08/The-operating-principle-of-the-drug-delivery-device.png",
            "https://chrisukorg.files.wordpress.com/2015/02/perry.jpg?w=529&h=511",
            "https://i.imgur.com/yTvNsOQl.jpg",
            "https://busyteacher.org/uploads/posts/2012-11/thumbs/1353086477_make-or-do-collocations-key-0.png",
            "https://3.bp.blogspot.com/-HBHyCcGBgf8/Wn1yke7zLmI/AAAAAAAAEhI/K7xGK0DnW94EUDg4PXG7m9d5uDemlygEgCLcBGAs/s400/class12-bilogy-ncert-solutions-in-hindi-ch3-2.png",
            "https://www.the-sun.com/wp-content/uploads/sites/6/2024/07/NINTCHDBPICT000919687723.jpg?strip=all&w=960",
            "https://nowyouknowph.rappler.com/tachyon/sites/16/2024/07/viber_image_2024-07-26_15-28-03-277.jpg?fit=1024%2C1024",
            "https://www.vbforums.com/attachment.php?attachmentid=192368&d=1721971376",
            "https://i.etsystatic.com/10067510/r/il/de8839/5670313840/il_570xN.5670313840_4flb.jpg",
            "https://i.etsystatic.com/7016493/r/il/366dc6/5478258723/il_570xN.5478258723_9no7.jpg",
            "https://i.etsystatic.com/7803582/r/il/158952/2723294075/il_570xN.2723294075_t1oi.jpg",
            "https://www.the-sun.com/wp-content/uploads/sites/6/2024/07/police-snipers-return-fire-shots-916885116_eefe76.jpg?strip=all&w=960",
            "https://timesofindia.indiatimes.com/photo/112027880.cms",
            "https://www.rappler.com/tachyon/2022/10/walang-pasok-new-orange-01.jpg?fit=449%2C449",
            "https://www.the-sun.com/wp-content/uploads/sites/6/2024/07/lb-winston-breaker-OP.jpg?strip=all&w=960"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "//www.rssing.com/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Implementing User-Defined Register Access Policies with vr_ad and IPXACT\n\nThe register and memory package vr_ad for Specman is used in pretty much every verification environment. In most cases today, the register specification is captured in an IPXACT description and the register e-file can be automatically generated from it.\n\nThe vr_ad package comes with a variety of pre-defined register access policies, which cover the typical register usage.\n\nHowever, many users have the need for special access policies which are not supported by vr_ad by default. Implementing these custom policies can be done in two ways:\n\n1. Define the specific behavior for each register through extensions and customization of the register itself\n\n2. Define a new access policy\n\nTo illustrate the two solutions, we use an example register which holds four fields. One field is reserved, the other three (f0, f1 and f2) have custom access policies:\n\nf0: SELF_CLEAR: Field clears itself after one clock cycle upon WRITE access\n\nf1: WRITE_CLEARS: Field clears itself with the 2nd (or more) write access\n\nf2: READ_CLEARS: Field clears itself with the 2nd (or more) read access\n\nThe next section illustrates the pros and cons of the two implemenations.\n\nDefining the specific behavior for each register through extensions and customization of the register itself\n\nTypically one can give full write-read access to the register field (if no access is given, the conversion script ipxact2vrad.pl treats the field as Write-Read). One can then extend the register for specific behavior using, for instance, the predefined method post_access()\n\nIPXACT description of register reg2:\n\nCorresponding e-code:\n\nIn post_access() we are using the set_field() method to change the value of a specific field\n\nNote:\n\nThe set_field() method itself calls update() which again triggers post_access(). This would result in an endless loop and/or wrong behavior. To overcome this, Cadence enhanced the vr_ad package. The default behavior of set_field() remains, but it can be overridden by a third parameter (perform_post_access with default value TRUE). When set to FALSE, the call to update() will be suppressed. In our case, this is required.\n\nThis enhancement will be available from Incisive 13.10-s020 and 13.20-s006.\n\nWhen using an older version, the user has to implement a locking mechanism to avoid bad behavior. A code snippet is below:\n\nThe extension file has to be imported after the register definitions\n\nDefine a new access policy\n\nThe vr_ad package provides specific hooks to implement user-defined behavior. To define a new access policy, the user has to first create a new enum value for the policy:\n\nThe IPXACT file needs to make use of the vendorExtensions (access_policy attribute) to define the new access policy.\n\nNote: The venderExtensions will not overwrite any access policy specified in the IPXACT, so make sure there is no regular policy specified.\n\nNote: The IPXACT standard supports the definition of user-defined access policies. However, this description is not yet supported by the ipxact2vrad.pl conversion script.\n\nUsing the new access enum values, the corresponding subtype of the vr_ad_reg_field_info struct can be customized to the desired behavior:\n\nThe extension file has to be imported prior to the register definitions.\n\nSummary\n\nThe vr_ad package provides many hooks to implement custom access policies.\n\nWhile the register extension makes the flow independent of the IPXACT file and the vendorExtensions, there could be quite some coding required - The policy has to be implemented for each register subtype.\n\nUsing vendor extensions in the IPXACT description makes the flow more natural and probably requires less code, but relies on vendorExtensions.\n\nHans Zander\n\n↧\n\n↧\n\nIP Talks! Keynote at DAC 2014—Rethinking Image Processing in SoC Design\n\nMany systems on chip (SoCs) have a \"camera block\" or image signal processor (ISP) that takes raw data from an image sensor and manipulates that data. But ISPs are moving away from their traditional role and turning into \"vision subsystems,\" according to Peter McGuinness, director of multimedia technology marketing at semiconductor IP provider Imagination Technologies.\n\nMcGuinness was the keynote speaker at IP Talks!, a three-day program of presentations at the ChipEstimate.com booth at the recent Design Automation Conference (DAC 2014). His half-hour speech was titled \"Visuals to Vision: The Changing Role of the Image Sensor.\" A video is available of this and other IP Talks! presentations (log-in required, quick registration if you don't have one).\n\nPeter McGuinness of Imagination Technologies presents at IP Talks! at DAC 2014\n\nMcGuinness first looked at the traditional role of the ISP. It has a set of familiar functions—it takes raw image data from the sensor, and manipulates it to fix defects in the sensor or in the CMOS process. It then uses both hardware and software to produce a good image. \"That's the classical role of the ISP, but it's changing,\" McGuinness said. \"It's moving away from producing images and becoming a vision subsystem.\" As such, he explained, the image sensor is now a source of data for processing later in the pipeline.\n\nDistributing a workload\n\nAs McGuinness noted, applications for imaging are expanding rapidly—imaging is no longer just a question of producing nice videos or photos. Automotive electronics provides a good example. Here, imaging is (or will be) used to help drivers back up, avoid collisions, stay in their lane, and recognize street signs. Imaging also has new applications in retail sales, where a store may have an unattended kiosk and cameras may be used for facial recognition.\n\nApplications such as these use workloads with a lot of data parallelism. That means you can take a workload and distribute it in the system, making use of GPUs and CPUs as well as ISPs. The result is better performance for a given power envelope. As McGuinness noted, vision software is heterogeneous, and intelligently combining heterogeneous compute resources enables the most differentiation at the lowest cost.\n\nSo what to run where? A CPU is good for non-parallel, serial code that has a lot of branching, McGuinness said. Typically this code will be single-threaded or have a low number of threads. The code needs only small amounts of data but can make critical decisions. A GPU, in contrast, is good for very large data sets with parallel operations. Parallelism occurs not only because of wide-word data sets, but because many operations are related to adjacent pixels.\n\nEnvisioning a \"vision system\"\n\nA typical camera subsystem today will have a separate CMOS image sensor chip. An imaging pipeline will take the raw data and output YUV data that can be sent to an applications processor on the SoC. However, McGuinness observed, about all you can do with that YUV data is operations like autofocus and white balance. \"You've really removed a lot of information,\" he said. \"There is an opportunity to produce information from the raw data that is usable in a vision system.\"\n\nAn \"integrated\" vision system, in contrast, does not wait for YUV data—it takes in raw data from the CMOS sensor. The ISP pipeline performs traditional operations like bi-pixel fixing, tone mapping, and correction for lens distortion. However, functions like focus statistics, white balance statistics, and exposure statistics are not handled in the ISP itself but are sent over to main memory, where they can be picked up by the CPU or the GPU depending on the amount of data involved.\n\nThe ISP is moving on to the chip, but is also changing in other ways. \"The ISP is collaborating with the other compute resources that are on the SoC, and that changes the nature of the game,\" McGuinness said. \"It means you can do customized things in software that you could not do earlier when the imager was on a separate chip and you were just presented with a finished image.\"\n\nEnabling new functionality\n\nMcGuinness identified two \"areas of function\" that were not available in the traditional camera pipeline. One is computational photography, which makes it possible to take a number of different images and interpolate to produce a single, improved image. Another is the use of camera arrays to provide different viewpoints and to manipulate depth of field. \"Essentially, you can create the picture after you've taken the raw image that needs to be processed.\"\n\nMcGuinness briefly described the Imagination Technologies PowerVR Heterogeneous Vision Platform and the Raptor camera ISP that it uses. The platform can include CPUs, GPUs, and video encoders. To reduce power, McGuinness observed, Imagination worked hard to reduce the number of memory transactions by allowing the Raptor ISP to send images directly to the video encoder. This kind of optimization, he said, shows that Imagination is \"really a systems company, not just an IP block company.\"\n\nTo view the video replay of the McGuinness keynote, click here.\n\nTo see a listing of all the available videos from IP Talks! 2014, click here. You will be asked to log in or register. Once logged in, you can also view IP Talks! 2014 video presentations from speakers from ADICSYS, Argon Design, ARM, Cadence, eSilicon, Ferric Semiconductor, GLOBALFOUNDRIES, Methodics, Mixel, Open-Silicon, Sidense, Silab Technologies, Synopsys, and True Circuits.\n\nIn a short video interview following the keynote, Sean O'Kane of ChipEstimate.com TV and McGuinness talked about GPU computing, the cost of wearables, and support for always-on applications.To view that video, click here.\n\nNote: A July 2014 \"Tech Talk\" article at ChipEstimate.com describes Imagination Technologies' PowerVR Rogue GPUs.\n\nRichard Goering\n\nRelated blog posts\n\nDAC 2014 Keynote: Imagination CEO Charts New Opportunities for Semiconductors\n\nDAC 2014: Semiconductor IP Trends Revealed at \"IP Talks!\"\n\nCDNLive: Envisioning the Future of IP-Driven System Design\n\n↧\n\nWhiteboard Wednesdays - Verifying Solid State Drives Incorporating NVM Express\n\nIn this week's Whiteboard Wednesdays, Mukul Dawar explains the NVM Express protocol and considerations to keep in mind when using verification IP to perform functional verification.\n\n↧\n\nEDA Plus Academia: A Perfect Game, Set and Match\n\nExcuse the tennis analogy, but just coming out of Wimbledon! However, EDA and academia have had a long-standing tennis match, if you will, in which there is a \"give and take\" between the EDA world and the many universities around the world. At Cadence, we have an extensive University Program and, through the years, we have worked closely on everything from developing curriculum (using our software, of course) to engaging universities in specific research for us to assisting Ph.D. students with the work on their theses. In fact, the Design Automation Conference (DAC) has had a university arm from the earliest days of the conference. This brings me to the reason for this blog, to congratulate Carnegie Mellon University Ph.D. student Shupeng Sun for receiving the newly established Best Poster Award at the ACM SIGDA Ph.D. Forum at this year's DAC in San Francisco. The poster focused on Sun's radically new statistical analysis methodology that will allow companies to produce better circuits in electronic devices.\n\nThe reason it is of particular interest to me is that the work was a collaborative project between CMU and Cadence. A number of Cadence researchers and developers also have been involved in the project, including engineering directors Hongzhou Liu and Ben Gu, and Kangsheng Luo, a senior member of the technical staff.\n\nAll electronics are made up of thousands or even millions of circuit blocks, each of which can contain thousands of transistors — and if one of these blocks fail, the electronic device will not function properly. As electronics become more complicated, more circuit blocks are needed, increasing the chance for failure.\n\n\"If you only have 10 circuit blocks, it is relatively easy to make all 10 work, but if you have one million circuit blocks, then it is more difficult to make all of them work,\" said ECE Associate Professor Xin Li, Sun's adviser and research colleague.\n\nBefore Sun's novel work, validating a circuit block involved running a computer simulation that produces sample circuit blocks. Each sample can take minutes to hours to simulate, and millions of samples are required for an accurate validation of a new design. This method is very costly because it can take a few weeks or months to run one validation. And if the original design does not work, a second validation must be run — an enormous problem if a circuit designer has a deadline. Because the simulation process is so laborious, most companies opt for a very simple, very inaccurate estimation.\n\nSun developed an algorithm that calculates the failure rate and accounts for variability and uncertainties in the manufacturing process, allowing companies and researchers to run significantly fewer simulations. This new statistical methodology, referred to as Scaled-Sigma Sampling (SSS), requires producing only a few hundred or thousand samples.\n\n\"A few of the world's top semiconductor companies are already evaluating this new algorithm, and we are in the process of integrating it with our commercial product, Virtuoso ADE GXL,\" said Glen Clark, vice president of R&D for Cadence. \"This is a great example of how a university and an EDA company can work together to deliver innovative solutions for the challenging problem of memory circuit yield.\"\n\nWorking collaboratively with universities has been a hallmark of Cadence, and we look forward to many more interesting and fruitful adventures together. I wonder if that is what Federer said to Djokovic when they shook hands across the net? Congrats all around.\n\nSteven Lewis\n\n↧\n\nWhat's Your Summer Engineering Project?\n\nYou're an engineer, which means you're never really not doing or thinking about engineering. It's now summer and the great thing about summer vacation is you can design and build something for fun and adventure.\n\nAt the same time, these summer projects can teach you something about yourself.\n\nThat's what I learned on last summer's engineering project: That engineering not only solves problems, it stretches and strains our personal, physical, and intellectual boundaries.\n\nSo what did we do? We decided one evening, well after the stars blinked into the night sky and the beer bottles were drained, that it would be a fantastic idea--bordering on genius, really--to build a footbridge across a creek at our cabin. Decades after their predecessors were washed away in a cold winter of Biblical rains. In the middle of nowhere.\n\nCast of characters\n\nLee Delano is a civil engineer by profession; a friendly, funny fellow by nature. Lee, being the quintessential engineer, builds things in his spare time, like small airplanes, some of which occasionally take off without him and land with unhappy results.\n\nHe is the U.C. Davis engineering-school roommate of my cousin's husband, Roy Fray, a mechanical engineer who built nuclear power plants back in the day (and not, he is quick to point out, Three Mile Island; if he had helped design it, you never would have heard of it).\n\nAlso involved in the dirty-fingernails aspect of the job were me, my brother Kirk, and Roy's wife, Joan. Moving the financial levers was sister Lina. There were many others, often surprised they were gang-pressed into service, who aided and abetted.\n\nThe challenge\n\nWe had to span about a 45-foot-wide creek, bank to bank. It rages in the winter rains and dries out by August. We had to take into consideration the awful ground for anchor piers (even the Indians called the valley rocky and inhospitable). The heat (100 degrees F and more every day in the summer); our small workforce (usually 3-4 at any given time); our timeframe (get it done before they fixed the Bay Bridge on Labor Day).\n\nRoy was dubious when Lee, who has built many bridges before and just completed a 40-foot truss design for his airplane club, shared his AutoCad draft.\n\nAccording to Lee:\n\n\"Roy was skeptical of the rotational stiffness of this configuration and also asked about the span and abutment locations. We visited a footbridge near the Pescadero Beach in early March: a footbridge made of fiberglass spanning approximately 100 feet. The cross-section of this bridge included a bottom truss which also supported the left and right vertical trusses, a typical cross-section for this type of bridge. Even though this substantial bridge displayed a significant amount of deflection horizontally due to moving live loads at mid-span, we determined that this type of cross-section should be considered.\"\n\nJoan shared photos of some of our old wood bridges and saw comforting similarities. After some tweaks, Lee was back in June with the following:\n\n1. 52-foot span bridge\n\n2. 4'4\" bay spacing of the vertical and horizontal trusses\n\n3. Live loading of 40 lbs/ft^2\n\n4. Change of material from 18 gauge to the thicker 16 gauge\n\n5. Euler formula (member buckling) calculations for the highest stressed compression\n\n6. Estimate of the total length of material required\n\n7. Total weight of the bridge estimated at just over 2,000 lbs. without wood decking; 3,000 lbs. with 2x decking\n\nCalculations completed on June 21, 2013, showed the following calculated Factor of Safety (F.S.):\n\n1. Compression stress: F.S. = 2.4\n\n2. Euler buckling: F.S. = 1.87\n\n3. Screw pull-out force F.S. = 3.0\n\n4. Compression member constraint required at 2% = 364 lbs, F.S. = 2.60\n\n5. Bridge deflection including Live Load and Dead Load = 0.91 inches (DL only = 0.23 in.). A F.S. of 2.0 was determined to be adequate, a camber of 2\" was built into the vertical trusses.\n\nWork begins\n\nAround July 4, I hauled up some 6,000 pounds of material in my truck over a dreadful, washboardy dirt road, and we moved almost everything by foot and hand across the creek to begin construction. We have no electricity. No cell service, and the nearest Home Depot is an hour's drive.\n\nLee and Roy measured and cut the steel members, setting the field afire just once with sparks from the generator-powered saw (who needs fireworks with those guys?). Roy devised a wood platform upon which to erect the bridge, and the members screwed together reasonably quickly.\n\nIn 100-degree weather, we hammered away into the rocky soil to form and pour the two abutments for the bridge. Here, we encountered one of those humbling problems that gave rise to the phrase \"measure twice, cut once\" (in this case, measure twice; pick axe, pry bar, hoe and shovel once). Roy made a final measurement from the finished east-side concrete slab to the wooden form on the west side. We were off by exactly a foot. What the heck?\n\nWork ground to a halt as Roy reviewed the drawings, re-measured and re-measured, sat and stared, shook his head and finally drove five miles to the nearest pay phone to call Lee.\n\nTurns out the looong tape he'd used was an engineer's tape, with exactly 12 inches of extra metal on it. Mystery solved! Except that we had to pull up the stakes and the form and re-dig the western foundation. Sigh. Beer tasted extra delicious that afternoon.\n\nLessons learned\n\nThe project taught us about the peculiar feel of hot metal shavings falling on one's face during drilling; stressed our endurance in the face of heat and schedule pressures; introduced some of us to the wonders of camber (fill in various schoolboy jokes here); impressed upon us the essence of keeping a shovelful of dirt in the air at all times.\n\nFinally just before Labor Day, the 52-foot green bridge was constructed but needed to be moved 100 feet into place across the creek (here's a time-lapse video in 2:47).\n\nWith our eyes on the prize of beating the Bay Bridge construction deadline of Monday night, we devised a system to move it by hand, using a clever Teflon-topped beam system and a come-along to crank the bridge into place. I lobbied to pull it with my truck, but the ever-cautious risk analyst Roy demurred. We built a falseworks to support the 2,000-pound beast - in essence, a second bridge - in a day and then spent two days inching the bridge closer to the creek and then across it into place.\n\nAt 5:30 p.m. on Labor Day, the structure was in place above its foundations. Kirk and I tore the falseworks down in two and a half hours and enjoyed a beer in the gloaming as we stared at what we'd all wrought. We had built a metaphor, it turned out. And we beat the Bay Bridge builders by three hours.\n\nMoral of the story?\n\nLee and Roy called this project \"The Bridge to Innovation,\" an homage to an electronics-industry campaign Kirk and I participated in called the Drive for Innovation, which was in itself a homage to engineering and engineers.\n\nWith the bridge, we all learned first hand what we saw on the Drive to Innovation, which is that teamwork and the human spirit can combine to achieve pretty much anything.\n\nOurs was involved but not particularly complicated as engineering projects go. What's your summer engineering project? I'd love to hear about it!\n\nHere's Kirk's time-lapse video of the construction and movement of the bridge:\n\nBrian Fuller\n\n↧\n\n↧\n\nUpcoming Webinar: SoC Verification Challenges in the IoT Age\n\nWhen it comes to Internet of Things systems, the name of the game is low power and small footprint.\n\nThis is often easier said than done in an environment in which designers must take those two huge issues into consideration while figuring out how to implement and verify low-power mixed-signal blocks into cost-effective SoCs and get to market before their competitors.\n\nARM and Cadence are hosting a webinar July 22 to explore just that: How teams can address Internet of Things (IoT) and (SoC) design and verification challenges in a timely and effective manner.\n\nThe webinar will focus on SoC implementation and verification using an ARM Cortex-M0 processor. The Cortex-M0 is ARM’s smallest 32-bit core, consuming as little as 16µW/MHz (90LP process, minimal configuration) in an area of under 12,000 gates.\n\nThis turns out to be especially useful for engineers migrating from 8- and 16-bit systems who are keeping their eye on efficient code use but want the performance enhancements that come with a 32-bit architecture.\n\nDiya Soubra, CPU Product Manager for Cortex-M3 processors at ARM, and Ian Dennison, Solutions Marketing Senior Group Director for the Custom IC and PCB Groups at Cadence, will guide atttendees through ways to reduce time to market and realize power-performance-area design targets.\n\nClick here to register.\n\nBrian Fuller\n\nRelated stories:\n\n--Webinar: Addressing MCU Mixed-Signal Design Challenges\n\n↧\n\nQuantus QRC Extraction Solution – Massive Parallelism Extracts Accurate Parasitics Quickly\n\nOver the past 14 months Cadence has brought massive parallelism to static timing analysis (Tempus Timing Signoff Solution) and power analysis (Voltus IC Power Integrity Solution). Today (July 14, 2014) Cadence is announcing the Cadence Quantus QRC Extraction Solution, a next-generation parasitic extraction tool that leverages massive parallelism to deliver up to 5X faster turnaround time.\n\nLike its predecessor, Cadence QRC Extraction, Quantus QRC Extraction Solution supports both custom/analog and digital designs. In addition to massive parallelism, the solution provides significant modeling enhancements to support accurate FinFET parasitic extraction, and also includes a new high-performance \"random walk\" field solver. This week Cadence is announcing that TSMC has certified Quantus QRC Extraction Solution for 16nm FinFET.\n\nAccording to Hitendra Divecha, senior product marketing manager at Cadence, massive parallelism allows Quantus QRC Extraction Solution users to scale to an \"unlimited\" number of CPUs and machines to enable the fastest possible design closure. This is particularly important for advanced-node SoC designs, where teams are coping with rapidly increasing design sizes, an explosion in the number of process corners, an increasing number of parasitics, and complex modeling challenges such as double patterning and FinFETs. Accuracy, performance, and capacity are the main three key care-abouts for designers, and Quantus QRC Extraction Solution delivers in each of these areas.\n\nWhat Came Before Quantus QRC Extraction Solution\n\nTo put Quantus QRC Extraction Solution in perspective, it's helpful to review the previous version of the tool, called Cadence QRC Extraction. This tool was a full-chip parasitic extractor that delivered both in-design and signoff extraction. It supported both transistor-level and cell-level extractions, and was closely integrated with both the Cadence Encounter Digital Implementation system and the Cadence Virtuoso custom design platform.\n\nCadence QRC Extraction offered capabilities such as multi-mode/multi-corner extraction, PowerMOS extraction, inductance extraction for both digital and custom/analog flows, RLCK reduction, substrate noise analysis, statistical extraction, and design for manufacturability (DFM) support. It included an integrated, foundry-qualified field solver.\n\nAs the diagram on the left shows, Cadence QRC Extraction didn't only provide a signoff extraction that takes place just prior to tapeout. Using the same engine, it also ran \"in design\" during the IC digital physical design process, where it helped guide layout decisions as they were being made. This helped design teams avoid rework and reduce iterations.\n\nIin Cadence QRC Extraction, three extraction modes used the same QRC engine for digital design. One was Turbo QRC, which ran up to 2-3X faster than signoff. Another was Integrated QRC, which was used for ECOs and incremental extraction. It was faster than signoff and it extracted only changed nets. Finally, Signoff QRC was a full-blown, foundry-qualified signoff extractor that includes a 3D field solver. All of these modes supported multi-corner extraction. Likewise, the new Quantus QRC Extraction Solution offers these three modes and provides both in-design and signoff capabilities.\n\nOn the custom/analog side, Quantus QRC Extraction Solution is tightly integrated into the Virtuoso custom design platform and can be invoked directly from the Virtuoso user interface. The solution supports in-design extraction with the Virtuoso Analog Design Environment (ADE) as well as signoff extraction.\n\nWhat Quantus QRC Extraction Solution Adds\n\nQuantus QRC Extraction Solution offers all the functionality of Cadence QRC Extraction, and it supports the same foundry-certified and qualified \"qrctechfiles.\" Quantus QRC Extraction Solution also has some important new capabilities. Foremost is massive parallelism, which allows the solution to provide 5X faster turnaround times for both single and multi-corner extraction runs. Since timing signoff closure can take up to 40% of the IC design flow, a 5X speedup can give a chip design team a tremendous advantage. Further, the incremental extraction capability available with the Encounter platform and the Tempus Timing Signoff Solution can provide an additional 3X performance improvement.\n\nAccording to Divecha, Quantus QRC Extraction Solution runs 7-8X faster than Cadence QRC Extraction for some design styles. While the earlier product would not provide linear scalability beyond 32 CPUs and above, there is no limit at all for Quantus QRC Extraction Solution, which provides linear scalability for an unlimited number of CPUs. Adding more CPUs for Quantus QRC Extraction Solution yields a close to linear speed increase - for example, going from 16 to 32 CPUs can provide close to 2X the performance, depending on design style.\n\nAccuracy is as important as ever, and Quantus QRC Extraction Solution uses the same high-accuracy modeling engine that is used in QRC Extraction. The result is silicon-proven \"best-in-class\" accuracy, according to Divecha. In addition, there is less than 1% sigma difference between single-corner and multi-corner extractions.\n\nQuantus QRC Extraction Solution also includes Quantus FS, a random walk 3D field solver that is faster than the previous QRCFS solver.\n\nModeling FinFETs\n\nWhile FinFETs promise tremendous speed and/or power advantages at process nodes below 20nm, they place some new demands on extraction tools. For example, because of the 3D structure of a FinFET, new parameters such as Cgs (gate to source capacitance) are required. An explosion in parasitics results in a larger netlist, slowing post-simulation layout performance. Custom/analog designers can no longer wait to see the impact of parasitics post-layout -- they need feedback during the schematic simulation phase. Finally, signoff extraction must be deeply integrated with placement and routing to improve post-route optimization and guarantee convergence in signoff.\n\nWith FinFETs, extraction tools must be aware of fringe 3D capacitances from gates and fins. The thickness of the gate introduces new capacitances. There are many new sources of resistance as well. Tools need to model three different resistance types -- contact resistance, spreading resistance, and extension resistance.\n\nQuantus QRC Extraction Solution provides accurate modeling of FinFET parasitic effects. Additionally, even though FinFET parasitics typically expand netlists, Quantus QRC Extraction Solution produces a netlist that is 2X smaller than those from competing solutions. As a result, simulation runtimes are 2.5X faster than competing solutions.\n\nThe diagram below shows a Cgs design flow in the Virtuoso platform. Instead of waiting until the very end of the design process to run parasitic extraction, engineers can generate a partial layout and run in-design extraction from the Virtuoso ADE front-end tool. In this way, the post-schematic simulation is much more likely to match the post-layout simulation, convergence comes easily, and design iterations can be avoided.\n\nTaken together, Quantus QRC Extraction Solution, Tempus Timing Signoff Solution, and Voltus IC Power Integrity Solution - all Cadence electrical signoff solutions -- are solving tough signoff problems by using massively parallel architectures. As such, they are easing one of the worst bottlenecks in IC design, and they're pointing the way for EDA solutions of the future.\n\nFor further information about Quantus QRC Extraction Solution, visit www.cadence.com/news/quantusqrc.\n\nRichard Goering\n\nRelated Blog Posts\n\nTempus - Parallelized Computation Provides a Breakthrough in Static Timing Analysis\n\nVoltus - Massive Parallelism Speeds Power Integrity Analysis and Signoff Closure\n\nEDPS Workshop - a Review of FinFET Parasitic Extraction Challenges\n\n↧\n\nWhat's Good About Allegro PCB Editor Dual-Side Contact Components? It’s in the 16.6 Release!\n\nThe use of dual-sided contact components when placed on internal layers of the PCB allows connections to be made from either side of the device. One of the benefits of using this emerging technology is the reduction of core vias that may have been used to make connections from the component to either side of the PCB. Symbols targeted for dual-side applications must have the property ‘dual_sided_component’ applied in the Allegro Symbol Editor. The associated padstacks of the symbol must have a ‘begin’ and ‘end’ layer pad defined.\n\nWhen the symbol with the dual-sided property is placed, the ‘begin’ pad defined in the padstack definition is mapped to the inner layer upon which the component is placed. The alternate pad, defined as the ‘end’ pad at the definition level, is mapped to the layer closest to the top of the component based on the component height.\n\nExisting Allegro embedded setup methodologies are fully supported; direct or indirect attach as well as body up/down. Since the stackup is unlikely to be constructed with material thickness that aligns with the component height, it’s likely the indirect attach method is used for this technology.\n\nRead on for more details …\n\nThere are two prerequisites required at the symbol definition level -\n\n1. Add the property ‘dual_sided_component’ to the symbol definition\n\n2. The associative padstack must have a ‘BEGIN’ and ‘END’ pad defined\n\nThe property assignment must be made in the ‘Symbol Editor’, not the ‘PCB Editor’. When in the ‘Symbol Editor’, the property is applied to the ‘drawing’ as shown below:\n\nAs an example, consider changing the embedded layer setup (using the Setup > Embedded layer setup form) for SIGNAL_4 to the values specified below for “Embedded Status” and “Attach Method”:\n\nIn the “Placement Application mode” Options Panel you should see components in the placement list. The letter ‘E’ indicates the component has been assigned the ‘Embedded_Placement’ property and the green background indicates the property value is set to ‘Required’:\n\nWhen you place the components, you’ll note the following -\n\nYou will not be allowed to place these components on the outer layers as a result of the components having the ‘dual_sided_component’ property applied\n\nWhen initially moving any of the resistors from the placement list, they will automatically drop to the embedded layer (SIGNAL_4). There is no RMB action necessary when the component has a ‘required’ property value and there is only one embedded layer identified in the stackup.\n\nThe component pads are suppressed when using ‘Indirect Attach’ method\n\nYou should see 2 indirect symbol vias on SIGNAL_4\n\nDisable the visibility of layer Signal_4, The alternate side of the component is based on its symbol height value. Based on the height of the symbol and thickness of the dielectric, via pads in this case will appear on SIGNAL 3:\n\nInvoke ‘Add Connect’ then adjust option in panel to ‘WL’ (Working Layer):\n\nUse the ‘3-D viewer’ to display your routed design. Enable the visibility of the place-bound shapes for all subclasses (top, bottom, embedded):\n\nPlease share your experiences using this capability.\n\nJerry “GenPart” Grzenia\n\n↧\n\nWhiteboard Wednesdays - See How Customizable Processors Can Help to Offload Your Apps Processor\n\nIn this week's Whiteboard Wednesdays, we take a little different approach and show you a fun and fast way to understand how Cadence® Tensilica® Xtensa® processors work, and how you can easily use them to offload your applications processor. After the video, learn more about Xtensa processors here: http://bit.ly/1xZfYdP\n\n↧\n\n↧\n\nEthernet in Cars - The Next Big Thing for Ethernet\n\nEthernet is coming to cars. Cars now have rear-view cameras and infotainment systems which require video to be transported at a high data rate. Ethernet is the best technology to carry this data.\n\nEthernet celebrated its 40th anniversary in 2013, and has evolved to support many speeds (10Mbps to 100Gbps) and environments. It is low cost, well understood, an open standard with many suppliers, and works well with TCP/IP and other protocol stacks.\n\nIn addition, power can be supplied over Ethernet cables, reducing the amount of wiring needed in a car. Ethernet enables a network of distributed programmable computers, allowing features to be implemented by software in general-purpose electronic control units.\n\nEthernet is implemented with a MAC layer and a PHY layer. For a given data rate, a common MAC connects to a PHY type suitable for the medium being used. Broadcom has developed a specialized automotive Ethernet PHY that can deliver 100Mbps over a single twisted pair cable and meet the harsh EMC automotive environment. Using a single twisted pair saves weight and cost and is an important factor for Ethernet being adopted in cars.\n\nCadence has an Ethernet MAC core with added functionality for automotive applications. In order to demonstrate interoperability with the Broadcom PHY, we put together a nice demonstration for CDNLive in Munich. This consisted of a NIC implemented on a Xilinx KC705 baseboard incorporating the Cadence PCIe and Ethernet IP cores, a daughtercard incorporating the Broadcom PHY, a Linux PC, an IP camera, and a media converter. We had to build the daughtercard ourselves using an FMC connector to connect to the Xilinx baseboard. The media converter made the connection between the regular Ethernet cable used by the IP camera and the single twisted pair from the daughtercard.\n\nIt was a challenge to get the demo working in time for CDNLive, but using this setup we were able to stream live video from the IP camera over the single twisted pair cabling to the Linux PC and view it on the Firefox web browser.\n\nYou can see a video of our demo in operation here: http://www.youtube.com/watch?v=LcXWcNeU-NY\n\nAnd, below, you can see some photos of the components used.\n\nArthur Marris - July 2014\n\n↧\n\nEDA Must Think Beyond ICs in Automotive Electronics Market, Panel Says\n\nAutomotive electronics in general and autonomous vehicles in particular represent enormous potential for the EDA market, but not in the ways you might be thinking. That was the consensus of a panel of experts who spoke at Cadence on July 16.\n\nVenture capitalist Jim Hogan, Frank Schirrmeister, group director, Cadence product marketing, and Ken Potts, Cadence group director for strategic planning, spent a fast-paced hour walking through the rationale for the growth of autonomous vehicles in the coming years—as well as the challenges and opportunities.\n\nBut they cautioned that for EDA companies in general and Cadence specifically to exploit the growth in design, we must think differently about the opportunity.\n\n\"Automotive is going to be great for us but we've got to think beyond ICs,\" Potts said.\n\nDrivers for New Driving\n\nWhat benefits will smarter and autonomous vehicles bring?\n\nSafety: Statistics show that while safety has improved remarkably since 1950, still 1.2 million people are killed and more than 20 million people are injured in car accidents each year in North America. \"More people die from car accidents than anything else,\" Hogan said.\n\nProductivity: Hogan showed a slide with data from the Federal Highway Administration and Morgan Stanley Research that suggested a $422 billion gain in annual productivity if people could work in their autonomous cars.\n\nPollution reduction: More efficient automated driving and optimized routing are likely to cut carbon emissions.\n\nThis sounds like a scenic drive down profitability lane in the coming years, but, as with most things, it's not that easy.\n\n\"There's a huge increase in development challenges, especially in software,\" Hogan, founding partner with Vista Ventures and a Cadence co-founder, said. This requires multiple integration across systems and partners and \"that's going to be tough,\" he added.\n\nHelping the cause is the fact that electronics represents the majority of a car's BOM cost today—and has since it overtook the cost of metal 20 years ago, Hogan said.\n\nIn addition, there's an established but expanding ecosystem for development. Consider all the research labs from Detroit automakers that have sprung up in Silicon Valley in recent years, he added.\n\nAlso helping the cause is the explosion of software complexity. Lines of code are forecast to increase around 10 percent by 2020 for both smart phones and automobiles, yet the code gap is widening between the two. Forecasts suggest the average car will have 35 million lines of code in six years compared with about 25 million for smart phones. That gap will be roughly double what it was in 2010, according to automotive-industry figures Hogan shared.\n\nIn addition, said Hogan:\n\n\"There's a huge productivity issue: They can't create enough lines of code. So we have to figure out automated ways to do that. So we, meaning EDA, understand that sort of thing. We built compilers for a long time. We'll see the sort of EDA tricks we used on semiconductors to build code.\"\n\nSecurity Concerns\n\nOne of the key opportunities for EDA vendors will revolve around safety and security within automotive electronics systems and specifically autonomous vehicles.\n\n\"The first time something visible happens that's tied back to that system, all hell is going to break lose,\" Potts said.\n\nSchirrmeister added:\n\n\"For me, it's the applications which really give enough value to the customer that they're willing to deal with the security aspects. And to the degree the safety and security aspects are solved, they will drive this first.\"\n\nSchirrmeister referenced this month's recall in Japan, involving 175,000 vehicles said to be affected by a software glitch in the engine control unit causing unintended acceleration. These types of issues will be solved from the systems level and represent an enormous opportunity for verification, he added.\n\n\"I agree there need to be (regulations) but 170,000 cars multiplied by whatever cost, that's a budget that will drive these safety aspects,\" he said. Hogan added, \"To the extent automotive guys do this on their own, they're better off.\"\n\nSo the opportunity, potential, and challenges are plain, but approaching the market requires a new way of thinking, panelists agreed. The automotive end market is estimated at $2 trillion, of which semiconductor sales represent $26 billion, with single-digit growth ahead of it, Potts said. EDA's share is even smaller of course: Automakers spend $300 million on all EDA tools to get those products to market, Potts said, adding they spend another $1.7 billion on design-productivity tools.\n\nPotts noted, however:\n\n\"Automotive is interesting not because they spend $26 billion on semiconductors. They—over the space of the last 10 years—have gone from a technology laggard to a technology leader.\"\n\nBut the real opportunity for EDA is embracing a bigger piece of the pie—solving a bigger problem within the automotive electronics market.\n\n\"It's not about verifying ICs anymore; it's about verifying these systems,\" Potts said.\"Who is the only industry that even has a clue to go about doing that? It's us.\"\n\nHogan added:\"Automation, virtualization, integration—all these things EDA does. This is ripe for us to exploit.\"\n\nBrian Fuller\n\nRelated stories:\n\n- Ethernet in Cars—The Next Big Thing for Ethernet\n\n- Google Driverless Car's Sensor, Vision, and Computing Future\n\n↧\n\nProtium FPGA-Based Prototyping Platform – Speeding Bring-Up Times\n\nFPGA-based prototypes provide excellent platforms for pre-silicon software development - but prototype bring-up times are so long and painful that much of the value is lost. Promising to shorten bring-up times by up to 70% versus competing commercial and \"roll your own\" in-house solutions, Cadence today (July 17, 2014) is announcing the Protium platform (shown at right), its second-generation FPGA-based rapid prototyping solution.\n\nCompared to the first-generation Rapid Prototyping Platform (RPP), Protium offers 4X the capacity (up to 100M gates) and 3X the memory. Protium also provides a 5X compile time improvement using Palladium and Xilinx verification and design flows. The new offering can reuse 80% of the existing Palladium environment. Protium runs up to 5MHz in a fully automated regression mode, and tops 100MHz in a \"black boxing\" mode inside a single FPGA.\n\nThis week Cadence is also announcing IEEE 1801 (Unified Power Format, UPF) support for the Palladium XP II verification computing platform. Like the Incisive simulation environment, Palladium XP now supports both UPF and the Common Power Format (CPF). This provides a more consistent verification flow across the Incisive and Palladium platforms, and it complements the Dynamic Power Analysis capability in Palladium.\n\nA Broader Picture\n\nThe Protium and Palladium XP platforms are part of the System Development Suite, which provides a set of connected hardware/software development platforms for virtual prototyping, simulation, emulation, and FPGA-based prototyping. The Protium platform is typically employed after RTL coding is complete. It runs faster than Palladium emulation, but does not have all the debug capabilities of emulation. Users can find bugs quickly with the Protium platform and then run a thorough debug analysis on the Palladium XP platform.\n\nThe Protium platform supports several use models. One is pre-silicon software development. Another is automated throughput regressions that are targeted for the project phase in which RTL starts maturing, fewer hardware bugs are found, and users want to run more verification cycles that do not require all the capabilities of emulation. Besides software development and throughput regressions, the Protium platform is also a suitable solution for system validation - making sure that the hardware/software design executes within its system environment as intended.\n\nThe big problem with FPGA-based prototyping is bring-up time - that is, everything that it takes to compile an ASIC design into multiple placed, routed, and verified FPGAs that fully represent system functionality. \"It is very important to bring up your prototype very quickly, because every week takes time away from when you can really use it,\" said Juergen Jaeger, senior product manager at Cadence. \"Our goal is to shorten the bring-up time for FPGA prototypes from months to weeks.\"\n\nCompatibility with Palladium Platform\n\nThe following diagram shows how the Protium platform works within a Palladium-compatible flow. This flow provides fast prototype bring-up with a golden pre-partition model and a post-partition verification model. Design migration is made easy with identical language coverage, common setup files, identical defaults, reuse of script files, identical clock handling, and SpeedBridge compatibility.\n\n\"For designs that have run in Palladium, we're seeing bring-up times in days. Before it might have been four or five weeks,\" Jaeger said.\n\nProtium offers a number of improvements compared to the previous generation solution. One is a new fast partitioning capability that uses the Palladium partitioner, making design migration between the Palladium and Protium platforms easier. The Protium platform can compile and partition up to 75M gates/hour on a single workstation.\n\nThe Protium platform boosts capacity by using Xilinx Virtex-7 FPGAs. Users can have either two or four FPGAs on a board, and up to two boards per chassis, providing up to eight FPGAs with around 100M gate capacity. I/O connections include two 150-pin daughtercard connectors per FPGA.\n\nOne important Protium feature is automatic, emulation-like clock tree transformation. \"We completely analyze design and convert multi-clock domain designs into single clock domain designs,\" Jaeger explained. \"We are eliminating things like gated clocks, multiplexed clocks, latches, and tri-states, all of which are structures that cannot map directly into FPGAs.\" The Protium platform can also support an unlimited number of design clocks, remove FPGA hold-time violations, and reduce the complexity of clock trees in order to speed placement and routing.\n\nThe Protium platform also uses high-performance LVDS (low voltage differential signaling) pin multiplexing. The compiler automatically determines if a single-ended wire or LVDS (which runs the same signal over two wires) results in faster performance.\n\nChoice of Performance Modes\n\nThe Protium platform offers three performance modes. A fully automatic mode, which provides ASIC memory mapping, partitioning, and FPGA placement and routing, runs 5-10MHz. A manual guidance mode takes partitioning input and runs 20-50MHz. A \"black boxing\" mode uses a single FPGA device and runs over 100MHz.\n\nThe Protium platform supports two approaches for modeling memories. In the automated regression mode, users can plug in an XDRAM card and draw from a large memory model portfolio. This approach offers fully automatic memory compilation. In the manual guidance and black-boxing modes, users take advantage of directly connected bulk memories. Some manual work is required, but the result is higher performance compared to the fully automated approach.\n\nFinally, although the Palladium platform will always have superior debug capabilities compared to any FPGA-based prototyping solution, the Protium platform offers debug features such as real-time signal monitoring, force/release signal, internal memory upload and download, probes (runtime data capture), waveforms across partitions, and a start/stop runtime clock capability.\n\nFurther information about the Protium rapid prototyping platform is available at this landing page.\n\nRichard Goering\n\nRelated Blog Posts\n\nDAC 2012: The Top Seven Reasons for Using FPGA Based Prototyping\n\nCadence System Development Suite - the Story is the Continuum\n\nQ&A: A Closer Look at the Cadence Rapid Prototyping Platform\n\n↧\n\nSean Dart Q&A: Former Forte CEO Discusses Past, Present, and Future of High-Level Synthesis\n\nEarlier this year Cadence acquired Forte Design Systems, a pioneer of high-level synthesis (HLS) and provider of the Cynthesizer SystemC-based synthesis tool. Sean Dart, Forte CEO since 2006, is now senior group director for R&D at the Cadence System-Level Design Group. In this interview he discusses the history of HLS, its worldwide adoption, who's using HLS today and why, distinctive features of Cynthesizer, and the advantages of the Cadence acquisition of Forte.\n\nQ: Sean, let's step back into history for a moment. Forte started in 1998 as C2 Design Automation, and began selling HLS tools soon after that. Was there demand for HLS at that time, or was it a missionary sale?\n\nA: It was a missionary sale. You had to find people who had a vision. We had customers back in those days who certainly had a desire for [HLS]. We found a few of those people, and they bought early on and helped shape the product. But it certainly was not widespread.\n\nWhen we first came into the market, the main competitors we saw were Synopsys and Get2Chip. There was also a small company named Dasys that came out of Carnegie-Mellon. They were doing VHDL and Verilog behavioral synthesis. We ended up buying Dasys and this formed the backbone of our engineering team in Pittsburgh.\n\nQ: Your initial products were based on an open-source C class library. Then, in 2001, Forte began selling Cynthesizer, which was (and is) based on SystemC. What was the importance of the SystemC standard in the development and adoption of HLS?\n\nA: I think it's critical. There are still people on the market using proprietary C subsets, and I think that's kind of narrow-minded. Customers expect to have multiple tools providing solutions, and they want to use tools from different vendors. The only way to have interoperability is to have some standard language behind it.\n\nAlso, from a sheer language point of view, it's really important to model things at the right level of abstraction. You need to do module-level or block-level decomposition in a systematic way. That makes your verification more effective. I think SystemC is definitely superior to non-standard C++-based class libraries.\n\nQ: Many of your early customers were large Japanese consumer electronics companies. Why were they drawn to HLS?\n\nA: We got into Asia very early and we started in Japan on the consumer and semiconductor side. Then we expanded into other parts of Asia and started to develop marketing in the U.S.\n\nThe Japanese customers were willing to discuss the value of behavioral synthesis technology to them. They wanted to jump ahead and they had some geographical pressures. For example, in the consumer space, they wanted to move some of the development to cheaper regions in Asia, but they wanted to keep their key proprietary algorithms in Japan.\n\nI think in general there's a different corporate culture in Japan that perhaps allows companies to push strategic initiatives like [HLS] down into their organizations more efficiently.\n\nQ: Who's using HLS today, and in what geographies?\n\nA: In terms of geography, it's pretty much everywhere now. U.S., China, Korea, Japan, Europe, India, Israel—it's in major design locations around the world. HLS has really broadened out in terms of the application space as well.\n\nAt Forte, we preferred to go after larger companies because there is more bang for the buck. Once you actually get in, it is a lot cheaper to continue selling to an existing customer. There is a paradigm shift and you have to attract people to a different way of thinking.\n\nQ: For what types of applications are companies using HLS?\n\nA: When Forte came into the market, HLS was still very datapath oriented. After a few years we made a lot of changes so that Cynthesizer became much stronger in control-dominated designs. Today designs can be datapath, control, or any mix of the two. That has really changed the game. Customers have moved to such things as DMA controllers, video platforms, bus interfaces, network switches, and camera sensors.\n\nQ: What do your users see as the primary benefit of HLS? Is it time to market, easier verification, or the ability to generate and compare micro-architectures?\n\nA: All of these reasons are there.\n\nThere is always a reason that people buy in the beginning and there is a reason they keep buying, and these reasons may not be the same. Some people have been surprised by the results they've managed to achieve. We often get people who buy for improved time-to-market on the front side of the design cycle, and they get that, but they also realize that their IP reuse is so much higher than it is at RTL. IP reuse is a key reason that people keep coming back.\n\nQ: Today there are several HLS tools on the market. What's distinctive about Cynthesizer?\n\nA: It's a combination of things. Cynthesizer has great QoR [quality of results] and is very focused on the designer. There are very good IP libraries around the product and there are mechanisms for communicating between blocks. Finally, we try to educate people, and we do a lot of work on collateral, training, and documentation.\n\nQ: How does Cynthesizer compare to the Cadence C-to-Silicon Compiler?\n\nA: From a marketing point of view, it is just about heads-on. We practically could have written each other's slides. That's one of the reasons that joining the teams made so much sense.\n\nThere are, however, some different approaches on the technology side. At Forte, we had to integrate with a lot of tools from different vendors. We didn't have our own Verilog simulators. The Cadence group working on C-to-Silicon didn't need to do that—they could focus on just the synthesis tool.\n\nC-to-Silicon has some very unique features. One is an incremental HDL synthesis capability for ECOs, which is a very compelling feature for a lot of customers. Design visualization is also a high-productivity value that C-to-Silicon offers. Cynthesizer, on the other hand, offers unique scheduling and datapath optimization technology, as well as some pipeline implementation details that are very beneficial.\n\nQ: What do you see as the advantages of the Cadence Forte acquisition?\n\nA: From a company point of view, Cadence and Forte spent a lot of time building the same thing and marketing the same thing. Not duplicating that effort, and being able to capture all the dollars and all the business, is definitely a more profitable path forward.\n\nOf course, this really only works if you retain your customer base. We believe that is extremely achievable. Customers are completely engaged and we expect to maintain that. From Forte's point of view, it is great to be in a position where we have access to a significantly wider sales channel and resources within the company.\n\nQ: What product plans does Cadence have following the Forte acquisition?\n\nA: We are heading down the path towards a single product. Until we get there, and we can successfully transition customers to that product, we will continue to actively support the existing products.\n\nQ: What is the future of high-level synthesis?\n\nA: I think it's extremely rosy. The business is growing very well, we're seeing a lot of demand, and the results are very compelling. We regularly see designs implemented in HLS that have smaller area and lower power than hand-coded implementations.\n\nCustomers are starting to use HLS on very large designs. When we began, people were doing 50K gate blocks and 100K gate blocks, and we are now routinely seeing 10M-30M gate projects. People are willing to commit large design projects to the HLS flow. If HLS didn't deliver, these products would fail. There is no back-up plan. Now that we can get that kind of commitment, we believe HLS will grow very quickly and be very successful.\n\nRichard Goering\n\nRelated Blog Posts\n\nHow Cadence Acquisition of Forte Boosts High-Level Synthesis\n\nForte and Cadence at DAC: How to Deploy High-Level Synthesis\n\nDAC 2014: High-Level Synthesis (HLS) Users Share Advantages, Challenges\n\n↧\n\n↧\n\nWhiteboard Wednesdays - Get to Know 802.11a/c Wireless Analog Front End Solution\n\nIn this week's Whiteboard Wednesdays, Priyank Shukla discusses Cadence's wireless analog front end (AFE) solution for 802.11a/c.\n\n↧\n\nDesigner View – Getting the Best Use From Static Low-Power Verification\n\nDo you want assurance that your system-on-chip (SoC) netlists are \"power clean?\" In a recorded presentation on the Cadence web site, Harshat Pant, principal engineer at Broadcom, shows how static low-power verification can provide that assurance, and notes advantages, challenges, and best practices for this important technique.\n\nPant was a speaker at the Cadence DAC Theater at the Design Automation Conference (DAC 2014) in June, where over 40 speakers - mostly customers and partners -- offered informal half-hour presentations. Audio recordings and slides are now available for most of those presentations, including Pant's presentation, at the Cadence DAC microsite.\n\nPant first outlined the low-power implementation flow that Broadcom uses. It's a hierarchical flow based on the Unified Power Format (UPF). He then discussed the UPF to CPF (Common Power Format) translation that's done inside the Cadence Encounter Conformal Low Power static low-power verification tool. Finally, he talked about the advantages of using Encounter Conformal Low Power and the ways in which Broadcom engineers have learned to get the best value out of the tool.\n\nComplex SoCs\n\nAs a supplier for makers of top-tier smartphones, Broadcom is very familiar with complex multi-voltage, multi-power domain SoCs. These SoCs may contain modems, 64-bit applications processors, GPUs, and a number of hard and soft IP blocks. An SoC could have as many as 45 or 50 power islands that switch on and off independently.\n\nIn his presentation, Pant described the \"hierarchical UPF\" power implementation flow used at Broadcom. \"We start with UPF for each block, and then we take each block through the whole implementation flow,\" he said. \"That block becomes a standalone entity, and in the end we combine it with the top-level UPF.\" Broadcom is currently using the Accellera UPF 1.0 standard but is also starting to borrow some constructs from the more recent IEEE 1801 UPF standard. (The latest standard is IEEE 1801-2013 or UPF 2.1).\n\nBroadcom engineers do a UPF to CPF translation inside the Encounter Conformal Low Power tool. Pant noted that Broadcom uses CPF for a number of things, including RTL power-aware dynamic verification, power-aware logic equivalence checking, and low-power static verification. The translation involves a three-step process. These steps include pre-processing the UPF file, performing the translation itself, and post-processing the CPF file.\n\nA Tricky Translation\n\nThe most challenging part of Broadcom's static low-power verification flow is preparing the \"golden CPF\" file, Pant said. Why are pre-processing and post-processing necessary? \"There are some differences between UPF and CPF that cannot be directly translated,\" he said. \"At times it needs some hacks that are not part of the tool.\"\n\nPant provided some examples of cases in which UPF pre-processing is needed. For example, suppose you have a 1.8V PLL with some virtual power supplies inside it. In conventional UPF there is no way to tell the tool what these supplies are related to in the outside world. It's thus necessary to add several lines to UPF code that tell the tool (for example) that the internal virtual supplies are the same as the outside core supplies.\n\nCPF post-processing, Pant said, is the \"biggest pain point right now and the biggest part of our time in the UPF to CPF conversion.\" Part of this step is adding in back biasing information. UPF 1.0 does not have the semantics to define back biasing, so this must be added into the text manually.\n\nUPF 1.0 does not have the semantics to define externally switched domains, so the constructs that define external shutoff conditions have to be added to CPF. Another issue is that the \"full off\" power condition is not exactly the opposite of the \"full on\" condition of UPF 1.0. Designers have to post-process the CPF to change the domain shutoff function to match the inverse of the UPF full-on definition.\n\nPain Relief\n\nOnce the golden CPF is created \"the pain part of it is gone\" and the Encounter Conformal Low Power run is \"straightforward,\" Pant said. \"It's a very comprehensive tool and it catches all known issues of power implementation,\" he noted. \"We are very confident that when we use Conformal Low Power on a power-aware netlist, and the whole report is qualified, that there are no real bugs still pending in the netlist.\"\n\nPant said that Encounter Conformal Low Power easily catches issues like incorrect buffering of control signals of NOR-type isolation cells. The tool can also quickly catch transmission gate issues without a lot of additional setup. The tool offers fast runtimes and good capacity, but it may not be able to read in a full-flat SoC netlist, he said.\n\nThere are several challenges with static low-power verification. First, golden CPF creation is a complex process, and it requires a knowledge of issues and workarounds. UPF 1.0 and CPF are very different, and while IEEE 1801 UPF 2.0 is an improvement, vendor tools have varying levels of support. And iteration over multiple back-end databases remains an issue because the UPF to CPF translation cannot always be scripted.\n\nPant recommended the following \"best practices\" for using static low-power verification:\n\nFull-flat checks are difficult, so break the problem down into checks for the individual place-and-route blocks and then run one full check at the top level with power-aware .lib (Liberty) elements at the bottom level\n\nOne issue that remains is the presence of transmission gates at the inputs of place-and-route blocks. One way to clean this up is to \"hack\" the UPF blocks to have a more SoC-centric view of inputs so Encounter Conformal Low Power can catch any transmission gates.\n\nUse IEEE 1801 constructs like find_objects along with TCL in UPF to reduce the size of the file and to reduce the chances for error\n\nDon't ignore warnings\n\nBe careful with Encounter Conformal Low Power waivers. Given the amount of information that Encounter Conformal Low Power reports, it may be tempting to write generic waivers for various issues. These can prove fatal because further iterations may not test them. Don't add a waiver without completely understanding the problem.\n\nThe IEEE 1801 group is working on UPF/CPF interoperability and, in the long run, towards \"convergence\" into a single standard. This convergence \"is the way forward that will eliminate the complications that arise out of power format conversions,\" Pant said.\n\nTo listen to this presentation and see the slides, click here and scroll down to 5:00 pm Monday June 2. No registration is required.\n\nRichard Goering\n\nRelated Blog Posts\n\nDAC 2014 Cadence Theater - Customers, Partners Outline Challenges and Successes\n\nDAC 2014: 30+ Customer, Partner Presentations Now Available on Cadence.com\n\nVideo: What the Newly Approved IEEE 1801-2013 Low Power Format (UPF 2.1) Includes\n\n↧\n\nBoosting Design Productivity with Team Design and PTC Windchill: Webinar\n\nFor some time now, industry has recognized the need for structured design methodologies that integrate ECAD design with product data management (PDM) systems. We know that creating an electronic product efficiently, on time, and within budget can benefit from this. Yet this integration has not been at the level that engineers could use during the design authoring and implementation process.\n\nWhy? Often the integration was at some predefined milestone - design reviews, schematic complete, or layout complete. Worse, the integration was not at a granular enough level for engineers to benefit from it.\n\nFor years, Cadence has partnered with PTC to tie Allegro Design Workbench functions to PTC's widely adopted PLM software PTC Windchill to enable engineering teams to improve productivity. Until recently, while engineers have been able to work on blocks in a given design in parallel, the process for efficiently checking out, checking in, and tracking changes to those blocks has been manual.\n\n\"It was a tarball approach,\" says Hemant Shah, Product Management Group Director, Cadence (pictured, right). \"Grab this file, this file, and this file and put it all together, tarball it and put it into Windchill. It lacked the granularity and process that engineers need.\"\n\nIt can take hours to upload and download that data tarball, Shah notes.\n\nFor example, some users do schematic design, some do the layout design, and then some do signal integrity analysis. \"Each one of those groups of people couldn't check in and check out pieces of data that were managed in a structured way,\" he said.\n\nThat's now changed, as Cadence has integrated its Team Design cockpit more tightly with PTC Windchill.\n\nSaid Shah:\n\n\"It allows engineers to manage what we call work-in-progress design data and do it at the block level. A hierarchical schematic has multiple blocks and engineers can pull up their blocks, and we provide the capability to check-in, check-out from PTC Windchill from ECAD desktop tools.\"\n\nIn this way, engineers working together can update their blocks independently of each other but provide the visibility to each other as to which version is available and is the latest, he added.\n\nCheck out our informative joint webinar featuring Shah, Mark Caradonna, PTC ECAD Product Manager, and Linda Mazzitelli, PTC Senior Technical Sales Specialist, as they discuss the technology and workflow.\n\nBrian Fuller\n\nRelated stories:\n\n--Watch the webinar\n\n--Allegro Sigrity Makes its Debut at DesignCon 2013\n\n--What's Good About Allegro PCB Editor Design Partitioning? 16.6 Has Several New Enhancements!\n\n↧\n\nDAC 2014 Panel: Chip, Package, and Board Design Must be Reconsidered\n\nSAN FRANCISCO--There were times-simpler times-when electronics designers toiled in distinct walled gardens: chip, package, and board. But today, interdependencies among those three require those walls to be broken down-not the least of which because blazingly fast speeds are causing havoc with signal and power integrity. These are challenges that require an examination of where gaps might be in the methodologies, an honest conversation about codesign. and a reconsideration of how we structure engineering teams.\n\nThat was the take-away from a Cadence-sponsored panel of experts at the 51st Design Automation Conference here. Titled \"High-Speed Cross-Fabric Interface Design: It's not 1's and 0's anymore... it's a noisy world,\" the panel featured:\n\nBrad Brim, senior staff product engineer with Cadence\n\nJenny Jiang, principal engineer of signal integrity and power integrity at Altera\n\nXiaoning Qi, engineering manager, Intel Mobile and Communication Group\n\nUpen Reddy, technical leader, Cisco Enterprise Networking Group\n\nDan Weed, director of design solutions at GLOBALFOUNDRIES\n\nJiang teed up the issues eloquently:\n\n\"The challenge is basically that we have to deal with three things at the same time: signal bandwidth, channel density, and the tradeoff of product performance to cost. We don't want to overdesign our products. Packages and boards are no longer conductors; they act like transmission lines with propagation properties that contribute to distortion. When we connect I/O through the package, it's a totally different story. And when we cascade to the board, it's a different story again.\"\n\nWeed, a longtime industry veteran, added:\n\n\"What worked today may not work tomorrow. We are seeing speeds in excess of 28Gbps and we are now having routine discussions about the need for 56Gbps. In this environment, codesign early and codesign often and partnering early are the keys to success.\"\n\nOver the course of 90 minutes, the panel addressed a broad array of challenges. Here are some of the highlights:\n\nDigital has become analog: How do we deal with this?\n\nBrim said one area where he's seeing that metamorphosis is in high-speed serial interconnect.\n\n\"I used to think 40GHz was a big deal. Today, hi-speed interconnect may start out as zeroes and ones but it certainly doesn't end up that way,\" Brim said.\n\nTo address these challenges, some teams use techniques like pre-emphasis and DFE to correct signals \"but they're never zeroes and ones,\" he said. \"If you don't have all the DSP processing before the signal and after the signal, it's just noise.\"\n\nHe then described power delivery challenges:\n\n\"If you talk about power, now you have power, noise, and jitter. You have noise in your power delivery network and you don't know where it's coming from; then you have additional jitter in your hardware you have to deal with.\"\n\nBrim noted that some teams are \"undeconsidering\" power integrity in high-speed serial with the additional jitter that it causes.\n\n\"It causes signal integrity issues because your signal is always referenced to VSS or ground, and if you've got noise in power delivery network that directly translates into noise in your signals. Vias are an area where there's an extremely strong coupling between signals and power.\"\n\nAdded Weed:\n\n\"We have to take that eye, that wave, that unknown, that gray space between ones and zeroes and convert it back to ones and zeroes to do digital processing that we have to do. That's the goal at the end of the day. All this has to be done with the challenge of time to market and cost and performance tradeoffs and hitting the application space before your competitor does.\"\n\nMethodology evolution\n\nAs teams grapple with complexity, the need for co-design becomes greater, to intelligently and productively deal with technical issues but also to get to market sooner.\n\nSaid Qi:\n\n\"I'm quite passionate about co-design. In today's environment you cannot isolate silicon design, package design, and platform design. So the silicon platform co-design is something people are aware of. We need to look at the platform and how it affects silicon design. On other hand, more importantly, it is electrical validation and debug. SoC and system debug without knowledge about the silicon design cannot be effective. You have to look into the whole thing together in your electrical validation.\"\n\nAcknowledging that he sometimes gets the impression that people think he just wants to sell them three sets of tools, Brim said:\n\n\"If I were to stand up and tell you \"do codesign or you can't get your job done\", that's not right either ... because you have different analysis technologies that work between package, board versus IC-type extractions. So you have to design individual fabrics in different tools, but you have to design across multiple fabrics at the same time.\"\n\nAn audience member asked the panelists to identify gaps in the current methodology. Jiang said the industry needs better metrology and sophisticated 3D extraction tools because some existing methodologies are too time consuming or don't offer sufficient accuracy.\n\nTeamwork\n\nThese challenges also require a reconsideration of design team organization, especially if codesign is the objective.\n\nQi said he used to manage the signal integrity team. \"There was traditionally no PI; just SI,\" he said. \"What I try to emphasize is integrating these.\" And in optimal situations such structures would include at least one engineer who has worked in both PI and SI to help bridge the discipline divide, he added.\n\nLooking forward as speeds increase to 112Gbps, a different way of thinking will need to emerge again, according to Reddy. At that point, he said, the industry may need to look at different signaling schemes, such as the quadrature-amplitude modulation (QAM).\n\n\"I want to see codesign start to include them, and even optical design,\" said Reddy.\n\nBrian Fuller\n\nRelated stories:\n\n-- Multi-Fabric Planning for Smarter Design: Q&A with Kevin Rinebold\n\n↧\n\n↧\n\nWhat's Good About Allegro PCB Editor Multiple Constraint Region Assignments? 16.6 Has It!\n\nJust a short post today.\n\nIn the 16.6 Allegro PCB Editor release, multiple region shapes can now be assigned to a single region constraint object. Using the General Edit Application mode, pre-select multiple region shapes, then use the context-sensitive RMB menu to access the Assign to Region command.\n\nEnsure you are in General Edit Application mode. Consider an example where we will assign the region shapes associated with the components U7 and U8 to a \"BGA\" region constraint object.\n\nWindow-select the two purple region shapes, or hold down the CONTROL key, then select each shape individually. Hover over any one region shape, then RMB—Assign to Region. Select \"BGA\" from the list:\n\nI look forward to your comments!\n\nJerry “GenPart” Grzenia\n\n↧\n\nArchived Webinar – An Introduction to High-Level Synthesis (HLS)\n\nHigh-level synthesis (HLS) is rapidly entering the IC design mainstream - but how much do you know about this emerging technology? A recently archived Cadence webinar sets the record straight about what HLS is (and is not), how it works, who's using it and why, what advantages users are seeing, and what's available from an IP standpoint.\n\nThe webinar was titled \"Tapping into High-Level Synthesis for Improved Time to Market, Quality of Results, and IP Reuse.\" It was presented by David Pursley, senior product manager at Cadence, and was based on a Cadence presentation given at the recent Design Automation Conference.\n\nYou probably know that SystemC-based HLS can greatly accelerate productivity and time to market. That's because it works at a much higher level of abstraction than RTL coding and synthesis. What you may not know is that users are seeing up to 20% better quality of results (power, performance, area) and 5-10X faster verification. And for some, the biggest advantage of all is the ability to quickly retarget and reuse high-level IP blocks while generating a variety of potential micro-architectures.\n\nHLS Reaches Out\n\nPursley started the webinar by noting that the Cadence purchase of Forte Design Systems is the \"biggest news\" for HLS thus far in 2014. The Forte Cynthesizer HLS tool, he said, is known for its strong quality of results for datapath-centric designs, world-class arithmetic IP, and valuable SystemC and IP development tools. The Cadence C-to-Silicon Compiler uniquely offers fine-grained control over quality of results, extensive visualization capabilities, and incremental synthesis ECO support. Between Forte and Cadence, 15 of the top 20 semiconductor companies use HLS, and there have been over 800 IC tapeouts.\n\nPursley noted that HLS has long been known for datapath-centric applications such as video, DSP, and image processing. In recent years, however, HLS has been used for more and more control-centric applications, such as Ethernet controllers, micro-controllers, and memory interface control.\n\nSo what exactly is HLS? \"At a very fundamental level, HLS takes abstract descriptions and adds whatever detail is needed to produce RTL,\" Pursley said. As shown in the diagram below, HLS takes in SystemC and C++ synthesizable behavior models, creates the finite state machines (FSMs) and datapaths, and generates Verilog RTL that you can put into your existing HLS flow. Constraints and directives provide guidance to the HLS tool, and make it possible to quickly generate many different micro-architectures.\n\nAccording to Pursley, benefits of HLS may include:\n\n10X better productivity and IP reuse. The technology separates functionality from implementation, and provides re-targetable high-level IP.\n\n5X faster and better verification. This is due to the use of fast transaction-level modeling (TLM) and a consistent verification platform.\n\n20% better quality of results (QoR) for power, area, and performance.\n\nWait a minute, you may be asking - how can automatically generated RTL code provide better QoR than hand-coded RTL Verilog? Pursley cited two reasons. One is that the HLS tool can do a better job of looking over the entire design to provide the best ways to share resources. Another reason is that you can quickly generate many RTL designs, and pick the best one. Pursley showed a customer example in which the synthesized code had a 0.8X area improvement over the handcrafted code, while taking just 2.9 weeks compared to 6 weeks for handcrafted RTL.\n\nAs shown below, HLS allows the designer to focus on functionality, architecture, and constraints. There is no need to break logic down into clock cycles, manually create the FSM, or provide explicit memory or register management.\n\nPursley cautioned, however, that writing SystemC code is not the same as writing embedded software. The implementation is very different and the cost tradeoffs are different. For example, if you think about an imaging pipeline, it is commonplace for the software to operate on frames of data at any given time. In the hardware world that would be extremely expensive.\n\nBut using HLS is not the same as writing RTL, Pursley observed. In the presentation, he showed how the SystemC language standard provides a high level of abstraction along with the necessary hardware constructs.\n\nThe IP Edge\n\nIn the first generation of design, Pursley said, you may notice a 5-10X turnaround time improvement by using HLS. But the real \"win\" comes after that, when you start re-targeting and reusing high-level IP. Perhaps you need to move to a new technology node, a faster clock speed, an additional power reduction - \"no matter what, you can come back to this [IP] code and generate any one of those variants just by changing the constraints,\" he said.\n\nThe webinar also discussed the benefits of HLS for verification and the ability to reuse testbenches across different levels of abstraction. You start with very high-level TLM models and then substitute pin-level interfaces for the TLM interface. Finally you reuse the same testbench for RTL verification.\n\nPursely provided a quick tour of Cadence synthesizable IP. One of the more popular selections is a line buffer. Here, users develop an algorithm and define a working set, and the IP handles all the implementation details. Cadence also provides IP for external memories and clock domain crossing interfaces.\n\nThe webinar showed how C-to-Silicon Compiler handles ECOs with incremental synthesis. It also showed how HLS supports low-power design techniques such as clock gating and FSM optimization. In a number of instances the webinar cited specific case studies with customers and quantified the benefits they achieved.\n\nTo view the webinar, click here. A Cadence log-in is required - quick and easy registration if you don't have one.\n\nRelated Blog Posts\n\nSean Dart Q&A: Former Forte CEO Discusses Past, Present and Future of High-Level Synthesis\n\nHow Cadence Acquisition of Forte Boosts High-Level Synthesis\n\nDAC 2014: High-Level Synthesis (HLS) Users Share Advantages, Challenges\n\n↧\n\nIncisive Simulation and Verification: Top 10 New Things I Learned While Browsing Cadence Online Support, 2Q 2014\n\nCadence Online Support, http://support.cadence.com, provides access to support resources including an extensive knowledge base, access to software updates for Cadence products, and the ability to interact with Cadence Customer Support.\n\nIn the June release of Cadence Online Support, many new features and functionalities were added to help users filter and narrow their search results, to provide feedback opportunity via Foresee Survey, and to provide additional browser support. Now the site supports all IE 7x-10x, Mozilla Firefox, Google Chrome, and and Safari Browsers.\n\nThe testing for the next release with more new features and enhancements is continuing while I am writing this blog. While I was enjoying all these released new features, as a verification engineer, I also was interested in finding out good knowledge documents that were shared on the site, and if I could easily find them. And indeed, I could easily find many application notes, RAKs, videos, and articles released in last quarter, along with site release updates, that are very helpful.\n\nYou can download your copies from http://support.cadence.com now and check out for yourself. Please note that you will need the Cadence customer credentials to log on to the Cadence Online Support website.\n\n1. Using utrace to Debug SystemVerilog Randomization Problems: The constrained random verification environments can exhibit the following problems:\n\nExpected values are not reached\n\nCertain values are chosen less frequently or more frequently than expected\n\nThe constraint solver calls take too long to finish\n\nThe solver is unable to find a solution for a given constraint set\n\nThe solver is unable to find a solution with certain starting conditions including variables that are not random or handles and arrays that are not initialized\n\nThe solver runs out of memory\n\nThe app note \"Using utrace to Debug SystemVerilog Randomization Problems\" describes the utrace debugger feature of the SystemVerilog constraint solver, which can be used to identify and debug problems in a SystemVerilog-constrained randomization environment.\n\n2. Troubleshooting Article 20257945: \"How to compile multiple libraries with a single invocation of ncvlog/ncvhdl or irun\"\n\nIn many environments, it can be useful to compile HDL source code into more than one library. Often this is done by means of multiple invocations of the ncvlog or ncvhdl binary. Read this article to learn how.\n\n3. SDF Annotation with Minimum, Typical, and Maximum Delays: This short 8-minute video describes how IOPATH and INTERCONNECT delays are annotated, how MIN, TYP, and MAX delays are implemented, and how annotation is analyzed in the waveform.\n\nYou can also find the related Troubleshooting Article 20264486: \"How to annotate maximum delay for one instance and minimum delay for other instance.\"\n\n4.UVM-ML Library Installation and Setup: This video provides a step-by-step walk through of downloading and installing the UVM-ML OA library from the Accellera forum page. This is followed by details on where to find the documentation, and how to run one of the examples delivered with the library.\n\n5. Troubleshooting Article 20257843: \"Understanding SystemVerilog Random Stability\"\n\nRandom stability can be defined as the resistance of random results to code changes. A key requirement of verification is the ability to recreate the exact conditions that found the problem so that the fix can be verified. When random stimulus is used in a test environment, in order to allow debug-fix-debug cycle, it is required that the same random numbers are generated when the same test is run multiple times. This should hold true even when a change (fix) is added to the code in either the DUT or test bench. This concept is called random stability.\n\nThis article describes the concept of and how to achieve random stability in any verification environment involving SystemVerilog constrained randomization.\n\n6. Troubleshooting Article 20266731: \"How to get switching information (ON/OFF) about power domains during simulation?\"\n\nUsers often require switching information about the all or selected power domains in low-power simulation. They want to get the simulation time whenever a power domain is switched ON or OFF. This information is quite useful, while creating complex system-level testcases for power simulations. This article describes couple of ways for achieving this functionality in the tool.\n\n7. All you ever wanted to know about the vManager Server Methodology and Server Setup is now available on Cadence Online Support.\n\nThe server setup section describes the operations that can be done on the servers, while the server methodology section answers questions on the methodology to use the servers.\n\na. vManager Server Methodology: This collateral describes Postgres and vManager server states, operation summary, server statuses, recommended server topology, data storage detail, software install and migration, current remote capabilities, and PG DB maintenance.\n\nb. vManager Server Set-Up: This collateral describes the vManager server setup in a detailed manner to equip users with a better understanding of the setup: environment variables, topology and terminologies, and various operations. It also enables users to collect and debug problems encountered while starting and accessing SQL database.\n\n8. Troubleshooting Article 20250009: \"How to turn off concurrent assertions while leaving the inline assertions on?\"\n\nVerification engineers often require switching information about the all or selected power domains in Low Power Simulation. They want to get the simulation time whenever a power domain is switched ON or OFF. This information is quite useful, while creating complex system-level testcases for power simulations. This article describes a couple of ways for achieving this functionality via Cadence Incisive Enterprise Simulator.\n\n9. Troubleshooting Article 20257827: \"How to reduce time to create vcd for power analysis?\"\n\nConventionally, a directed test is created for power analysis. To activate most of the logic at same time, a switching activity file is extracted in any of following formats: vcd, tcf, saf, fsdb.\n\nThe Cadence Encounter Power System (EPS) reads activity file for power estimation. It is cumbersome to include all scenarios in a single test to attain maximum activity and it takes time to create such test and execute. The SHM to VCD conversion for lengthy test also takes a long time, before power analysis can be started. This article, thus describes how to reduce time to do power analysis for complex and huge SoCs?\n\n10. Troubleshooting Article 20253114: \"Isolation not placed due to driver filtering <D> in CPF-based low-power simulation\"\n\nThis article suggests what are the various reasons of implicit isolation not being inserted due to driver filtering during CPF-based low-power simulation? How to debug and fix? It also points to another wonderful troubleshooting for a warning ncelab: *W,PRTNCON—Isolation Cell not placed on port.\n\nHmmm... let me leave with bonus of two more troubleshooting tips, however, I will just provide title and link, and will not describe them in brief. Please go and figure out for yourself.\n\n11. Troubleshooting Article 20266723: \"Reinvoke fails when run in an LSF environment\"\n\n12. Troubleshooting Article 20267817: \"How to extract a list of probed signals in either an interactive or post-process flow?\"\n\nHappy Learning!\n\nSumeet Aggarwal\n\nNormal 0 false false false EN-US X-NONE HI /* Style Definitions */ table.MsoNormalTable {mso-style-name:\"Table Normal\"; mso-tstyle-rowband-size:0; mso-tstyle-colband-size:0; mso-style-noshow:yes; mso-style-priority:99; mso-style-qformat:yes; mso-style-parent:\"\"; mso-padding-alt:0in 5.4pt 0in 5.4pt; mso-para-margin-top:0in; mso-para-margin-right:0in; mso-para-margin-bottom:10.0pt; mso-para-margin-left:0in; line-height:115%; mso-pagination:widow-orphan; font-size:11.0pt; font-family:\"Calibri\",\"sans-serif\"; mso-ascii-font-family:Calibri; mso-ascii-theme-font:minor-latin; mso-hansi-font-family:Calibri; mso-hansi-theme-font:minor-latin; mso-bidi-language:AR-SA;}\n\n↧"
    }
}