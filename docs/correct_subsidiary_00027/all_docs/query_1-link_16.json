{
    "id": "correct_subsidiary_00027_1",
    "rank": 16,
    "data": {
        "url": "https://www.electronicdesign.com/markets/automation/article/21164600/agnisys-11-myths-about-chip-specifications",
        "read_more_link": "",
        "language": "en",
        "title": "11 Myths About Chip Specifications",
        "top_image": "https://img.electronicdesign.com/files/base/ebm/electronicdesign/image/2021/05/11myths_promo.60a51158af0f5.png?auto=format,compress&fit=fill&fill=blur&w=1200&h=630",
        "meta_img": "https://img.electronicdesign.com/files/base/ebm/electronicdesign/image/2021/05/11myths_promo.60a51158af0f5.png?auto=format,compress&fit=fill&fill=blur&w=1200&h=630",
        "images": [
            "https://img.electronicdesign.com/files/base/ebm/electronicdesign/image/website/logos/1615310258763-electronicdesign-logo-2.png?auto=format,compress&fit=fill&fill=solid&height=35",
            "https://img.electronicdesign.com/files/base/ebm/electronicdesign/image/2021/05/11myths_promo.60a51158af0f5.png?auto=format,compress&fit=crop&q=45&h=139&height=139&w=250&width=250",
            "https://img.electronicdesign.com/files/base/ebm/electronicdesign/image/2021/05/Agnisys_11_Myths_Figure.60a5113ed757b.png?auto=format,compress&fit=max&q=45&h=149&height=149&w=250&width=250",
            "https://informa.blueconic.net/rest/v2/contentStores/0a8c11ea-8a56-4832-89b6-50fe636162b7/items/www.electronicdesign.com%252Ftechnologies%252Findustrial%252Fboards%252Farticle%252F21794590%252Fis-3d-ic-packaging-ready-for-prime-time/image?auto=format,compress&fit=crop&q=45&h=139&height=139&w=250&width=250",
            "https://informa.blueconic.net/rest/v2/contentStores/0a8c11ea-8a56-4832-89b6-50fe636162b7/items/www.electronicdesign.com%252Ftechnologies%252Fembedded%252Fdigital-ics%252Fprocessors%252Farticle%252F21272652%252Felectronic-design-arm-pumps-up-its-neoverse-compute-subsystems/image?auto=format,compress&fit=crop&q=45&h=139&height=139&w=250&width=250",
            "https://informa.blueconic.net/rest/v2/contentStores/0a8c11ea-8a56-4832-89b6-50fe636162b7/items/www.electronicdesign.com%252Ftechnologies%252Fpower%252Farticle%252F21800964%252Fmosfet-design-basics-you-need-to-know-part-2/image?auto=format,compress&fit=crop&q=45&h=139&height=139&w=250&width=250",
            "https://informa.blueconic.net/rest/v2/contentStores/0a8c11ea-8a56-4832-89b6-50fe636162b7/items/www.electronicdesign.com%252Ftechnologies%252Findustrial%252Fdisplays%252Farticle%252F55127671%252Fintrospect-technology-mipi-dsi-2-the-top-choice-for-low-latency-and-high-performance-displays/image?auto=format,compress&fit=crop&q=45&h=139&height=139&w=250&width=250",
            "https://informa.blueconic.net/rest/v2/contentStores/0a8c11ea-8a56-4832-89b6-50fe636162b7/items/www.electronicdesign.com%252Fmarkets%252Fautomotive%252Fvideo%252F55127125%252Felectronic-design-microchips-development-kit-creates-onboard-charging-solution/image?auto=format,compress&fit=crop&q=45&h=139&height=139&w=250&width=250",
            "https://informa.blueconic.net/rest/v2/contentStores/0a8c11ea-8a56-4832-89b6-50fe636162b7/items/www.electronicdesign.com%252Ftechnologies%252Fpower%252Farticle%252F21801074%252Fmosfet-design-basics-you-need-to-know-part-1/image?auto=format,compress&fit=crop&q=45&h=139&height=139&w=250&width=250",
            "https://informa.blueconic.net/rest/v2/contentStores/0a8c11ea-8a56-4832-89b6-50fe636162b7/items/www.electronicdesign.com%252Ftechnologies%252Ftest-measurement%252Farticle%252F55126732%252Felectronic-design-tornadogenesis-identified-with-infrasoundnew-predictions-possible/image?auto=format,compress&fit=crop&q=45&h=139&height=139&w=250&width=250",
            "https://informa.blueconic.net/rest/v2/contentStores/0a8c11ea-8a56-4832-89b6-50fe636162b7/items/www.electronicdesign.com%252Ftechnologies%252Fpower%252Fpower-supply%252Farticle%252F21808839%252F3-ways-to-reduce-power-supply-noise/image?auto=format,compress&fit=crop&q=45&h=139&height=139&w=250&width=250",
            "https://img.electronicdesign.com/files/base/ebm/electronicdesign/image/website/logos/1615310258763-electronicdesign-logo-2.png?auto=format,compress&fit=fill&fill=solid&height=45",
            "https://www.electronicdesign.com/images/corporate_logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Anupam Bakshi"
        ],
        "publish_date": "2021-06-16T00:00:00",
        "summary": "",
        "meta_description": "Creation of a specification for a semiconductor can be time-consuming and costly, especially if the project marches on with continued refinements. Automating the process is the...",
        "meta_lang": "en",
        "meta_favicon": "https://img.electronicdesign.com/files/base/ebm/electronicdesign/image/uploads/1616597411564-favicon.ico",
        "meta_site_name": "Electronic Design",
        "canonical_link": "https://www.electronicdesign.com/markets/automation/article/21164600/agnisys-11-myths-about-chip-specifications",
        "text": "This article is part of the TechXchange: Addressing Chip Verification Challenges\n\nWhat you'll learn:\n\nThe iterations a specification goes through in a given project.\n\nAre chip design and verification specs, and hardware and software specs, separate entities?\n\nAutomation of the specification process.\n\nEvery successful engineering endeavor starts with a solid specification, and chip development is no exception. A semiconductor project generally begins with the marketing requirements for a new product, either the chip itself or a system incorporating the chip. System architects develop a high-level specification for the chip, typically including both aspects of the hardware design and the interfaces used by software to control and communicate with the hardware.\n\nThe specification is refined as the project continues, and many of these refinements result in additions or changes to the specification. Choosing the target silicon technology may have ripple effects back to the hardware specified—for example, if the original memory size can’t be supported. In addition, features may be added in response to competitive products introduced during the development timeline.\n\nFurther specification refinements happen while the hardware and programming teams are creating the design and its associated software. Sometimes the vision of the architects proves impractical or too expensive to implement. Adding clocks, resets, power-management features, and testability support to the design may also require unanticipated specification updates. Engineers often say that change is the only certainty when it comes to chip specifications.\n\nDevelopment teams always want to save resources to lower project costs and shrink the schedule to reduce time to market. This is possible only through higher levels of abstraction and increased automation of the design and verification process. Finding a better way to create and maintain chip specifications is part of such a solution. Taking this next step in chip development requires recognizing and dispelling some common myths.\n\n1. Chip specifications must be written in natural language.\n\nIt’s true that most specifications are written in natural language, probably most commonly in English. It’s also true that no other existing language can specify 100% of a chip’s requirements from both the hardware and software viewpoints.\n\nHowever, many aspects of a chip can be described using more formalized domain-specific languages (DSLs) and formats. These include registers and memories, programming sequences, verification sequences, silicon test sequences, power-management structures, and hierarchical chip assembly. These portions of the specification are inherently unambiguous and more precise than natural language.\n\n2. Chip specifications aren’t executable.\n\nDevelopment teams have long wanted to be able to feed their specifications into some sort of magical electronic-design-automation (EDA) tool that would generate the register-transfer-level (RTL) design as well as the testbench and tests needed to verify it. While some might argue that the RTL descriptions themselves qualify as executable specifications, in practice this implementation is too detailed, and a higher level of abstraction is required.\n\nThough no full-chip solution is available, the DSLs and formats used for specific parts of the specification can be executable given the right tools. It’s possible to generate the RTL design, testbench components, verification tests, programming headers and sequences, files for automated test equipment (ATE), and end-user documentation for these portions of the chip.\n\n3. Natural language isn’t executable.\n\nIt’s true that a complete chip specification isn’t executable, but there’s excellent progress being made in understanding natural language descriptions for certain aspects of the chip. Artificial intelligence (AI) and machine learning (ML) can transform these descriptions into executable form. Two particularly active areas involve generating SystemVerilog Assertions (SVA) from statements of design intent and converting natural language sequence descriptions into SystemVerilog verification tests and C/C++ code for drivers and embedded software.\n\n4. Chip design and verification specifications are separate.\n\nIn the past, this has been the case. The chip-verification team took the design specification and developed a verification plan that iterated all of the design features that had to be verified. With the advent of constrained-random verification, the focus shifted from manual tests to achieving coverage goals.\n\nVerification planning tools can tightly link a list of coverage targets with the design specification, ensuring that all design features are covered in the verification plan. This approach is automated even further when testbench components, including coverage checkers, and verification tests are generated from the executable portions of the chip specification.\n\n5. Chip hardware and software specifications are separate.\n\nThis has also been the case in the past, and it remains true to some extent. Some aspects of the software specification are independent of the underlying hardware. However, a significant portion of the software interacts directly with the hardware, usually through reading and writing registers.\n\nAs noted above, C/C++ driver and embedded code can be generated automatically from executable specifications. Thus, part of the software specification is shared with the hardware specification.\n\n6. Register specifications require obscure languages.\n\nRegisters and memories were some of the first parts of chips to have executable specification formats supporting generation of design and verification code. It’s true that some of the early tools had arcane proprietary languages, but this is no longer the case.\n\nSystemRDL is a widely adopted and supported standard DSL for register and memory definition. The standard IP-XACT format is used to communicate design information, including registers, among different EDA tools.\n\nIn addition, some tools support specification of registers, register files, and memories in an intuitive graphical format. For example, the IDesignSpec family of products from Agnisys provides a specialized editor as well as plug-ins to Microsoft Word and Microsoft Excel.\n\n7. Sequence specifications can’t be executable.\n\nAutomatic generation of verification sequences from executable specifications is widely accepted and adopted. For example, the Agnisys ISequenceSpec tool supports specification using a specialized editor or Word/Excel plug-ins."
    }
}