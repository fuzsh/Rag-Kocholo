{
    "id": "correct_leader_00036_2",
    "rank": 37,
    "data": {
        "url": "https://us.pycon.org/2024/schedule/presentation/45/",
        "read_more_link": "",
        "language": "en",
        "title": "PyCon US 2024",
        "top_image": "https://us.pycon.org/2024/static/images/favicon/android-chrome-192x192.473bdd973d26.png",
        "meta_img": "https://us.pycon.org/2024/static/images/favicon/android-chrome-192x192.473bdd973d26.png",
        "images": [
            "https://us.pycon.org/2024/static/images/close.694712b6c1fe.svg",
            "https://us.pycon.org/2024/static/images/pycon24-wordmark-purple.293b6a59b448.svg",
            "https://us.pycon.org/2024/static/images/linkedin.223fb900a540.svg",
            "https://us.pycon.org/2024/static/images/mastadon.d4b3629888cb.svg",
            "https://us.pycon.org/2024/static/images/x.abed5575d201.svg",
            "https://us.pycon.org/2024/static/images/profile.37f6f0cbf482.svg",
            "https://us.pycon.org/2024/static/images/menu-plus.333790ee813a.svg",
            "https://us.pycon.org/2024/static/images/mobile-menu-icon.3ef118d5e83a.svg",
            "https://us.pycon.org/2024/static/images/internal-page-logo.1eccc28bab7a.svg",
            "https://us.pycon.org/2024/static/images/pycon24-wordmark-black.3623942db8a1.svg",
            "https://us.pycon.org/2024/static/images/linkedin.223fb900a540.svg",
            "https://us.pycon.org/2024/static/images/mastadon.d4b3629888cb.svg",
            "https://us.pycon.org/2024/static/images/x.abed5575d201.svg",
            "https://us.pycon.org/2024/static/images/profile.37f6f0cbf482.svg",
            "https://us.pycon.org/2024/static/images/menu-plus.333790ee813a.svg",
            "https://us.pycon.org/2024/static/images/mobile-menu-icon.3ef118d5e83a.svg",
            "https://us.pycon.org/2024/static/images/pycon24-wordmark-black.3623942db8a1.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/2024/static/images/favicon/favicon.820bd8d7ff72.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "One of the biggest changes in Python 3.12 was PEP 695, which introduced new syntax for generic classes, functions, and type aliases. This was a complicated change, involving a new soft keyword, many new grammar rules, and a few new bytecode instructions. Unexpectedly, the one aspect that led to the most complexity was the way the new syntax interacts with class scopes. Class scopes in Python are weird.\n\nThis talk will outline what motivated PEP 695, how the implementation works, and how it may be improved in the future. It will describe how the new syntax provides a more intuitive way to express generics, and also explore in depth how class scopes work and how we designed the new syntax to work in harmony with existing scoping rules. Finally, we'll talk about ways the syntax may change in the future."
    }
}