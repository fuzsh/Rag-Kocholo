{
    "id": "wrong_mix_domain_subsidiary_00002_3",
    "rank": 21,
    "data": {
        "url": "https://stackoverflow.com/questions/2857376/difference-between-java-se-ee-me",
        "read_more_link": "",
        "language": "en",
        "title": "Difference between Java SE/EE/ME?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/SimhT.jpg?s=64",
            "https://i.sstatic.net/SprKq.jpg?s=64",
            "https://i.sstatic.net/wqgvy.jpg?s=64",
            "https://www.gravatar.com/avatar/c96d0a5727ef776712216db70b1b30f0?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/3fN7W.jpg?s=64",
            "https://www.gravatar.com/avatar/eeec80237213c91e5bab56b77ac5b8ca?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/3b03d21276ae07910a1ab8f22f7bf282?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/34ac8a5f0e4e6068545751b760b7e719?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/SimhT.jpg?s=64",
            "https://i.sstatic.net/ZWEI3.jpg?s=64",
            "https://i.sstatic.net/2PXUu.jpg?s=64",
            "https://i.sstatic.net/q3JFs.jpg?s=64",
            "https://lh4.googleusercontent.com/-rdnCFNv-obk/AAAAAAAAAAI/AAAAAAAAAEA/S2i-2hsoayw/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/29d7c49f6f174710788c79011219bae1?s=64&d=identicon&r=PG",
            "https://graph.facebook.com/995719613823916/picture?type=large",
            "https://www.gravatar.com/avatar/f50a0a88ac9eb69a5abb3fd3db58edf2?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/f9d4663fa7d82a21f3817d54e9db8b34?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/d46242a5213958604b9d260d5bd9cba4?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/ewxrk.jpg?s=64",
            "https://www.gravatar.com/avatar/0e4900638412a1f5a87e35f3a9e5943d?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/6adf4983a5feab2001067740ff94b6db?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://stackoverflow.com/posts/2857376/ivc/e4ad?prg=0d87b7c3-1383-4532-82b2-3c84bc6e21d4"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-05-18T12:53:12",
        "summary": "",
        "meta_description": "Which one should I install when I want to start learning Java? I'm going to start with some basics, so I will write simple programs that create files, directories, edit XML files and so on, nothing...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/2857376/difference-between-java-se-ee-me",
        "text": "Java SE = Standard Edition. This is the core Java programming platform. It contains all of the libraries and APIs that any Java programmer should learn (java.lang, java.io, java.math, java.net, java.util, etc...).\n\nJava EE = Enterprise Edition. From Wikipedia:\n\nThe Java platform (Enterprise Edition) differs from the Java Standard Edition Platform (Java SE) in that it adds libraries which provide functionality to deploy fault-tolerant, distributed, multi-tier Java software, based largely on modular components running on an application server.\n\nIn other words, if your application demands a very large scale, distributed system, then you should consider using Java EE. Built on top of Java SE, it provides libraries for database access (JDBC, JPA), remote method invocation (RMI), messaging (JMS), web services, XML processing, and defines standard APIs for Enterprise JavaBeans, servlets, portlets, Java Server Pages, etc...\n\nJava ME = Micro Edition. This is the platform for developing applications for mobile devices and embedded systems such as set-top boxes. Java ME provides a subset of the functionality of Java SE, but also introduces libraries specific to mobile devices. Because Java ME is based on an earlier version of Java SE, some of the new language features introduced in Java 1.5 (e.g. generics) are not available.\n\nIf you are new to Java, definitely start with Java SE.\n\nAccording to the Oracle's documentation, there are actually four Java platforms:\n\nJava Platform, Standard Edition (Java SE)\n\nJava Platform, Enterprise Edition (Java EE)\n\nJava Platform, Micro Edition (Java ME)\n\nJavaFX\n\nJava SE is for developing desktop applications and it is the foundation for developing in Java language. It consists of development tools, deployment technologies, and other class libraries and toolkits used in Java applications. Java EE is built on top of Java SE, and it is used for developing web applications and large-scale enterprise applications. Java ME is a subset of the Java SE. It provides an API and a small-footprint virtual machine for running Java applications on small devices. JavaFX is a platform for creating rich internet applications using a lightweight user-interface API. It is a recent addition to the family of Java platforms.\n\nStrictly speaking, these platforms are specifications; they are norms, not software. The Java Platform, Standard Edition Development Kit (JDK) is an official implementation of the Java SE specification, provided by Oracle. There are also other implementations, like OpenJDK and IBM's J9.\n\nPeople new to Java download a JDK for their platform and operating system (Oracle's JDK is available for download here.)\n\nAs I come across this question, I found the information provided on the Oracle's tutorial very complete and worth to share:\n\nThe Java Programming Language Platforms\n\nThere are four platforms of the Java programming language:\n\nJava Platform, Standard Edition (Java SE)\n\nJava Platform, Enterprise Edition (Java EE)\n\nJava Platform, Micro Edition (Java ME)\n\nJavaFX\n\nAll Java platforms consist of a Java Virtual Machine (VM) and an application programming interface (API). The Java Virtual Machine is a program, for a particular hardware and software platform, that runs Java technology applications. An API is a collection of software components that you can use to create other software components or applications. Each Java platform provides a virtual machine and an API, and this allows applications written for that platform to run on any compatible system with all the advantages of the Java programming language: platform-independence, power, stability, ease-of-development, and security.\n\nJava SE\n\nWhen most people think of the Java programming language, they think of the Java SE API. Java SE's API provides the core functionality of the Java programming language. It defines everything from the basic types and objects of the Java programming language to high-level classes that are used for networking, security, database access, graphical user interface (GUI) development, and XML parsing.\n\nIn addition to the core API, the Java SE platform consists of a virtual machine, development tools, deployment technologies, and other class libraries and toolkits commonly used in Java technology applications.\n\nJava EE\n\nThe Java EE platform is built on top of the Java SE platform. The Java EE platform provides an API and runtime environment for developing and running large-scale, multi-tiered, scalable, reliable, and secure network applications.\n\nJava ME\n\nThe Java ME platform provides an API and a small-footprint virtual machine for running Java programming language applications on small devices, like mobile phones. The API is a subset of the Java SE API, along with special class libraries useful for small device application development. Java ME applications are often clients of Java EE platform services.\n\nJavaFX\n\nJavaFX is a platform for creating rich internet applications using a lightweight user-interface API. JavaFX applications use hardware-accelerated graphics and media engines to take advantage of higher-performance clients and a modern look-and-feel as well as high-level APIs for connecting to networked data sources. JavaFX applications may be clients of Java EE platform services.\n\nI guess Java SE (Standard Edition) is the one I should install on my Windows 7 desktop\n\nYes, of course. Java SE is the best one to start with. BTW you must learn Java basics. That means you must learn some of the libraries and APIs in Java SE.\n\nDifference between Java Platform Editions:\n\nJava Micro Edition (Java ME):\n\nHighly optimized runtime environment.\n\nTarget consumer products (Pagers, cell phones).\n\nJava ME was formerly known as Java 2 Platform, Micro Edition or J2ME.\n\nJava Standard Edition (Java SE):\n\nJava tools, runtimes, and APIs for developers writing, deploying, and running applets and applications. Java SE was formerly known as Java 2 Platform, Standard Edition or J2SE. (everyone/beginners starting from this)\n\nJava Enterprise Edition(Java EE):\n\nTargets enterprise-class server-side applications. Java EE was formerly known as Java 2 Platform, Enterprise Edition or J2EE.\n\nNow known as Jakarta EE, after donation by Oracle Corp to the Eclipse Foundation.\n\nAnother duplicated question for this question.\n\nLastly, about J.. confusion\n\nJVM (Java Virtual Machine):\n\nJVM is a part of both the JDK and JRE that translates Java byte codes and executes them as native code on the client machine.\n\nJRE (Java Runtime Environment):\n\nIt is the environment provided for the java programs to get executed. It contains a JVM, class libraries, and other supporting files. It does not contain any development tools such as compiler, debugger and so on.\n\nJDK (Java Development Kit):\n\nJDK contains tools needed to develop the java programs (javac, java, javadoc, appletviewer, jdb, javap, rmic,...) and JRE to run the program.\n\nJava SDK (Java Software Development Kit):\n\nSDK comprises a JDK and extra software, such as application servers, debuggers, and documentation.\n\nJava SE:\n\nJava platform, Standard Edition (Java SE) lets you develop and deploy Java applications on desktops and servers (same as SDK).\n\nJ2SE, J2ME, J2EE\n\nAny Java edition from 1.2 to 1.5\n\nRead more about these topics:\n\nDifferences between JDK and Java SDK\n\nJava JDK, SDK, SE?\n\nWhat is the difference between JVM, JDK, JRE & OpenJDK?\n\nDevelopers use different editions of the Java platform to create Java programs that run on desktop computers, web browsers, web servers, mobile information devices (such as feature phones), and embedded devices (such as television set-top boxes).\n\nJava Platform, Standard Edition (Java SE): The Java platform for developing applications, which are stand-alone programs that run on desktops. Java SE is also used to develop applets, which are programs that run in web browsers.\n\nJava Platform, Enterprise Edition (Java EE): The Java platform for developing enterprise-oriented applications and servlets, which are server programs that conform to Java EE’s Servlet API. Java EE is built on top of Java SE.\n\nJava Platform, Micro Edition (Java ME): The Java platform for developing MIDlets, which are programs that run on mobile information devices, and Xlets, which are programs that run on embedded devices."
    }
}