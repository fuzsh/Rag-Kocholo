{
    "id": "yago_31586_3",
    "rank": 69,
    "data": {
        "url": "https://gcc.gnu.org/readings.html",
        "read_more_link": "",
        "language": "en",
        "title": "Links and Selected Readings",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://gcc.gnu.org/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "GCC-specific Literature\n\nAn Introduction to GCC by Brian J. Gough (e-book).\n\nGNU C Compiler Internals (Wikibook), numerous contributors.\n\nCompilation of Functional Programming Languages using GCC -- Tail Calls by Andreas Bauer.\n\nUsing, Maintaining and Enhancing COBOL for the GNU Compiler Collection (GCC) by Joachim Nadler and Tim Josling <tej@melbpc.org.au>.\n\nThe V3 multi-vendor standard C++ ABI is used in GCC releases 3.0 and above.\n\nCompiling and testing complete gcc/glibc cross-toolchains for Linux targets by Dan Kegel.\n\nChip Documentation\n\nThe list below is based on the subdirectory names of the gcc/config directory, which typically matches with the CPU name in the configuration name. In some cases, different (but similar) CPUs are put into one directory; the names in parentheses list such similar CPU names.\n\nAArch64\n\nThe 64-bit execution state of the ARM Architecture, first introduced by the ARMv8-A architecture.\n\nManufacturer: Various, by license from ARM.\n\nARM Documentation\n\nandes (nds32)\n\nManufacturer: Various licenses of Andes Technology Corporation.\n\nCPUs include: AndesCore families N7, N8, SN8, N9, N10, N12 and N13.\n\nAndes Documentation\n\nGDB includes a simulator for all CPUs.\n\narc\n\nManufacturer: Synopsys Inc (as Synopsys DesignWare softcore)\n\nCPUs include: ARC600, ARC700\n\nARC Documentation\n\nARM\n\nManufacturer: Various, by license from ARM.\n\nCPUs include: ARM7TDMI, and the Cortex-A, Cortex-R and Cortex-M series.\n\nARM Documentation\n\nApplication Binary Interface (ABI) for the ARM Architecture\n\nAVR\n\nManufacturer: Atmel\n\nAVR documentation\n\nBlackfin\n\nManufacturer: Analog Devices\n\nBlackfin Documentation\n\nc4x\n\nManufacturer: Texas Instruments\n\nExact chip name: TMS320C4X\n\nC6X\n\nManufacturer: Texas Instruments\n\nExact chip name: TMS320C6X\n\nCR16\n\nManufacturer: National Semiconductor\n\nAcronym stands for: CompactRISC 16-bit\n\nGDB includes a simulator\n\nCRIS\n\nManufacturer: Axis Communications\n\nAcronym stands for: Code Reduced Instruction Set\n\nThe CRIS architecture is used in the ETRAX system-on-a-chip series.\n\nProgrammer's Manual for CRIS v10\n\nC-SKY\n\nManufacturer: C-SKY Microsystems\n\nC-SKY Documentation\n\nEpiphany\n\nManufacturer: Adapteva\n\nManufacturer's website with additional information about the Epiphany architecture.\n\nfr30\n\nManufacturer: Fujitsu\n\nAcronym stands for: Fujitsu RISC\n\nGDB includes a CGEN generated simulator.\n\nh8300\n\nManufacturer: Renesas\n\nExact chip name: H8/300\n\nGDB includes a simulator.\n\nH8/300 Application Binary Interface for GCC.\n\ni386 (i486, i586, i686, i786)\n\nManufacturer: Intel\n\nSome information about optimizing for x86 processors, links to x86 manuals and documentation:\n\nhttps://www.agner.org/optimize/\n\nwww.sandpile.org: Christian Ludloff's technical x86 processor information.\n\ni860\n\nManufacturer: Intel\n\nm32c\n\nManufacturer: Renesas\n\nRenesas M16C Family (R32C/M32C/M16C) Site\n\nGDB includes a simulator.\n\nm32r\n\nManufacturer: Renesas\n\nGDB includes a CGEN generated simulator.\n\nm68hc11 (m68hc12)\n\nManufacturer: Motorola\n\nGDB includes a 68HC11 and a 68HC12 simulator.\n\nm68k\n\nManufacturer: Motorola\n\nmcore\n\nManufacturer: Motorola\n\nGDB includes a simulator.\n\nMeP\n\nManufacturer: Toshiba\n\nSID includes a MeP simulator.\n\nMicroBlaze\n\nManufacturer: AMD\n\nMicroBlaze Soft Processor Design Hub\n\nGDB includes a simulator for an earlier version of the processor.\n\nmips (mipsel, mips64, mips64el)\n\nThe *el variants are little-endian configurations.\n\nMMIX\n\nManufacturer: none. There is a simulator, see links below.\n\nAcronym stands for: Roman numeral for 2009, pronounced [EM-micks]. The number stands for the average of numbers of \"14 actual computers very similar to MMIX\". The name may also be due to a predecessor appropriately named MIX.\n\nMMIX is used in program examples in Donald E. Knuth's The Art of Computer Programming (ISBN 0-201-89683-4).\n\nThe MMIX page has more information about MMIX. Knuth also wrote a book specifically about MMIX (MMIXware, ISBN 3-540-66938-8).\n\nmn10300\n\nManufacturer: Matsushita\n\nAlternate chip name: AM30\n\nGDB includes a simulator.\n\nmsp430\n\nManufacturer: Texas Instruments\n\nGDB includes a simulator.\n\nNios II\n\nManufacturer: Intel (formerly Altera)\n\nNios II Processor Documentation\n\nOpenRISC\n\nManufacturer: Many (community built architecture)\n\nOpenRISC Project\n\nArchitecture Specification\n\npa\n\nManufacturer: HP\n\nPA-RISC is preferred over the older HPPA acronym (Hewlett-Packard Precision Architecture).\n\nparisc.wiki.kernel.org is another good source of PA-RISC documention.\n\npdp11\n\nManufacturer: DEC\n\nSimulators\n\npru\n\nManufacturer: Texas Instruments\n\nPRU Assembly Instruction User Guide.\n\nTI ABI Specification (see chapter 6).\n\nCommunity PRU Documentation\n\nriscv\n\nManufacturer: Many (open ISA standard)\n\nRISC-V Foundation\n\nISA Specifications\n\nrs6000 (powerpc, powerpcle)\n\nManufacturer: IBM, Motorola\n\nOpenPOWER Foundation\n\n64-Bit ELF V2 ABI - OpenPOWER ABI\n\nAIX 7.2 Assembler Language Reference\n\nrx\n\nManufacturer: Renesas\n\nRX610 landing page\n\nsh\n\nManufacturer: Renesas, various licensees.\n\nCPUs include: SH1, SH2, SH2-DSP, SH3, SH3-DSP, SH4, SH4A, SH5 series.\n\nRenesas SuperH Processors\n\nSuperH Instruction Set Summary\n\nGDB includes a simulator.\n\nsparc (sparclite, sparc64)\n\nManufacturer: Sun\n\nAcronym stands for: Scalable Processor ARChitecture\n\ntilegx, tilepro\n\nManufacturer: Mellanox\n\nv850\n\nManufacturer: NEC\n\nvax\n\nManufacturer: DEC\n\nxtensa\n\nManufacturer: Tensilica\n\nz/Architecture (S/390)\n\nManufacturer: IBM\n\nz/Architecture Principles of Operation\n\nESA/390 Principles of Operation\n\nLinux for z Systems ABI\n\nLinux for S/390 ABI\n\nCollected Papers/Sites on Standards, Compilers, Optimization, Etc.\n\nC information\n\nC standards information:\n\nWG14 (C standards committee)\n\nDraft C99 Rationale\n\nC99 Defect Reports\n\nC89 Rationale (HTML)\n\nC89 Technical Corrigendum 1\n\nC89 Technical Corrigendum 2\n\nC89 Defect Reports\n\nSequence point rules in C:\n\nA formal model of sequence points and related issues by Clive Feather\n\nC formalised in HOL, thesis by Michael Norrish\n\nSequence points analysis by Raymond Mak\n\nAnother formalism for sequence points by D. Hugh Redelmeier\n\nC historical information:\n\nThe Development of the C Language, by Dennis M. Ritchie (also in PDF).\n\nC++ information\n\nISO Committee homepage (defects list, etc)\n\nSTLport homepage\n\nTemplate Numeric Toolkit\n\nThe Boost C++ Libraries\n\nInternet sites for C++ users\n\nNathan Myers' locale page\n\nNicolai Josuttis' Standard Library book\n\nFortran information\n\nFortran standards information:\n\nFortran standards committee (includes references to the current draft of the Fortran standard)\n\nFORTRAN 77 Standard\n\nTesting and Validation - Some packages aimed at Fortran compiler validation.\n\nThe g77 testsuite (which is part of GCC).\n\nTest suite of ftnchek, included in its distribution. It contains some illegal code and therefore makes it possible to stress the compiler error handling.\n\nChecking properties of the compiler and the run-time environment by Arjen Markus (source provided).\n\ngdbf95 testsuite.\n\nTests of run-time checking capabilities\n\nPolyhedron tests\n\nOther resources:\n\nMichel Olagnon's Fortran 90 List contains a \"Tests and Benchmarks\" section mentioning commercial testsuites.\n\nComplying with Fortran 90, How does the current crop of Fortran 90 compilers measure up to the standard?, Steven Baker, Dr Dobb's, January 1995. It described the results of several commercial testsuites.\n\nHistorical material - for your enjoyment.\n\nThe writings of Edsger W. Dijkstra (RIP)\n\nAda information\n\nAda standards information:\n\nWG9 (Ada standards committee):\n\nAda Issues\n\nList of Ada standards (Ada Information Clearinghouse):\n\nAnnotated Ada 2005 Reference Manual\n\nAda 2005 Reference Manual\n\nAda 2005 Rationale\n\nAnnotated Ada 95 Reference Manual\n\nAda 95 Reference Manual\n\nAda 95 Rationale\n\nAda 83 Reference Manual\n\nAda 83 Rationale\n\nRelated standards:\n\nAda Semantic Interface Specification (ASIS)\n\nCompiler validation:\n\nAda Conformity Assessment Test Suite (ACATS)\n\nOther resources:\n\nAdaCore Community Site\n\nGNAT: The GNU Ada Compiler\n\nAda Quality & Style Guide\n\nGuide for the use of the Ada Ravenscar Profile in high integrity systems\n\nGo information\n\nGeneral Go information\n\nGo language specification\n\nD information\n\nD language homepage\n\nD language reference\n\nModula 2 information\n\nProgramming in Modula-2 (Edition 2)\n\nProgramming in Modula-2 (Edition 4)\n\nISO Modula-2 standards (base language, OO and generic language extensions)\n\nModula 3 information\n\nhttps://www.modula3.org\n\nMiscellaneous information\n\nWhat Every Computer Scientist Should Know about Floating-Point Arithmetic by David Goldberg, including Doug Priest's supplement (PDF format)\n\nDifferences Among IEEE 754 Implementations by Doug Priest (included in the PostScript-format document above)\n\nIEEE 754r, an ongoing revision to the IEEE 754 floating point standard.\n\nIBM Journal of Research and Development\n\nSystem V PowerPC ABI\n\nDWARF Workgroup\n\nLinks related to many compiler topics\n\ncomp.compilers archive\n\nSteven Muchnick (1997) \"Advanced Compiler Design and Implementation\". 880pp. ISBN: 1-55860-320-4.\n\nRobert Morgan (1998) \"Building an Optimizing Compiler\". 300pp. ISBN: 1-55558-179-X.\n\nThe Open Group has quite a bit on POSIX and friends.\n\nUnicode and Unicode Normalization Forms.\n\nChip Documentation of Obsolete Ports\n\nBelow is the list of ports that GCC used to support."
    }
}