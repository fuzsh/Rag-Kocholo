{
    "id": "dbpedia_8290_0",
    "rank": 15,
    "data": {
        "url": "https://www.geeksforgeeks.org/talk-command-in-linux/",
        "read_more_link": "",
        "language": "en",
        "title": "talk command in linux",
        "top_image": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "meta_img": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "images": [
            "https://media.geeksforgeeks.org/gfg-gg-logo.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220531235048/trying.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220531233735/waiting.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220531234226/ring.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220601001711/localhost.PNG",
            "https://media.geeksforgeeks.org/wp-content/uploads/20220601012847/chat1.PNG",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/new-premium-rbanner-us.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/gfgFooterLogo.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/googleplay.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/appstore.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/suggestChangeIcon.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/createImprovementIcon.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Data Structures",
            "Algorithms",
            "Python",
            "Java",
            "C",
            "C++",
            "JavaScript",
            "Android Development",
            "SQL",
            "Data Science",
            "Machine Learning",
            "PHP",
            "Web Development",
            "System Design",
            "Tutorial",
            "Technical Blogs",
            "Interview Experience",
            "Interview Preparation",
            "Programming",
            "Competitive Programming",
            "Jobs",
            "Coding Contests",
            "GATE CSE",
            "HTML",
            "CSS",
            "React",
            "NodeJS",
            "Placement",
            "Aptitude",
            "Quiz",
            "Computer Science",
            "Programming Examples",
            "GeeksforGeeks Courses",
            "Puzzles",
            "SSC",
            "Banking",
            "UPSC",
            "Commerce",
            "Finance",
            "CBSE",
            "School",
            "k12",
            "General Knowledge",
            "News",
            "Mathematics",
            "Exams"
        ],
        "tags": null,
        "authors": [
            "GeeksforGeeks"
        ],
        "publish_date": "2022-06-24T12:06:36",
        "summary": "",
        "meta_description": "A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.",
        "meta_lang": "en",
        "meta_favicon": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_favicon.png",
        "meta_site_name": "GeeksforGeeks",
        "canonical_link": "https://www.geeksforgeeks.org/talk-command-in-linux/",
        "text": "In Linux, there are commands like write/wall which are used to communicate with other users especially by system administrators to send a short message to all logged-in users. There is one more command talk which is like an instant messenger service that enables two users to chat. In this article, we will discuss this command and the various ways to connect with other users.\n\nSyntax:\n\nUsage: talk user [-x] [ttyname]\n\nuser - user's login name. -x - talk with user who has dot character in username. ttyname - talk with user who has logged in more than once using the terminal name.\n\nInstallation of talk command:\n\nFor Ubuntu/Debian :\n\nsudo apt-get install talk sudo apt-get install talk-server\n\nFor CentOS/Fedora :\n\nsudo yum install talk sudo yum install talk-server\n\nConfiguration:\n\nCreate two files named talk and ntalk under /etc/xinetd.d/ directory.\n\nEdit talk file as below,\n\n# default: off # description: The talk server accepts talk # requests for chatting with users \\ # on other systems. service talk { flags = IPv4 disable = no socket_type = dgram wait = yes user = nobody group = tty server = /usr/sbin/in.talkd }\n\nNext edit ntalk file as below,\n\n# default: off # description: The ntalk server accepts # ntalk connections, for chatting \\ # with users on different systems. service ntalk { flags = IPv4 disable = no socket_type = dgram wait = yes user = nobody group = tty server = /usr/sbin/in.ntalkd }\n\nThen restart xinetd service.\n\nWorking with talk command\n\nWhenever talk command is issued, it will contact the talk-daemon on the other user’s terminal and send the below message to that user,\n\nMessage from TalkDaemon@his_machine... talk: connection requested by your_name@your_machine. talk: respond with: talk your_name@your_machine\n\nNow, other users can respond by typing\n\ntalk your_name@your_machine\n\nThe talk command works by copying lines from one terminal to that of the terminal used by another user. It splits the window into 2 panes (top and bottom) wherein user can type in the top pane and the response would be seen in the bottom pane in another terminal. It can be used to\n\n1) To communicate with users on the same host or on the different host,\n\ntalk <username> => local user talk username@hostname or talk username@ip_address => remote user\n\nTalk daemon first checks if the user has logged in. If not, it will report that the user is not logged on and wait for the user to connect.\n\nOnce the user is logged-in, it will send a message and wait for the response from that user.\n\nIf there is no response, then the daemon will continuously send message to that user.\n\nOnce the destined user connects, the connection will be established and both can chat now.\n\nPressing Ctrl+c will terminate the connection.\n\n2) To talk with the user who has a dot character in username, then have to use the -x argument.\n\ntalk <user_name> -x\n\n3) If the user has logged in more than once, then the terminal name can be used to connect with that user.\n\ntalk <user_name> <tty> => talk root pts/17\n\nIf the user does not want to receive talk requests, then it can be blocked using the mesg command. Thus using the talk command we have understood various ways to connect with another user. For more information, please refer “man talk”."
    }
}