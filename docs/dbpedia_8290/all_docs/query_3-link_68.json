{
    "id": "dbpedia_8290_3",
    "rank": 68,
    "data": {
        "url": "https://www.geeksforgeeks.org/lynis-security-tool-for-audit-and-hardening-linux-systems/",
        "read_more_link": "",
        "language": "en",
        "title": "Security Tool for Audit and Hardening Linux Systems",
        "top_image": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "meta_img": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png",
        "images": [
            "https://media.geeksforgeeks.org/gfg-gg-logo.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130184519/Screenshot858.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130182934/Screenshot866.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130185752/Screenshot865.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130222912/Screenshot891.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130192545/imgonlinecomuatwotooneMkuxSId0tk2.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130193350/imgonlinecomuatwotoonewgYfdduqfn7oP6de.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130195938/imgonlinecomuatwotoonePyyiVeAcXt.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130200601/Screenshot880.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130203424/Screenshot903.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130201709/Screenshot904.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130202330/Screenshot873.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130203226/Screenshot874.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130204309/Screenshot888.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130205129/Screenshot875.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130205229/Screenshot876.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130205406/Screenshot910.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130205421/Screenshot909.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130205544/imgonlinecomuatwotooneeIJbTBmChQy0fz.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130205647/Screenshot906.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130212217/Screenshot881.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130212333/Screenshot902.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130212401/Screenshot900.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130212412/Screenshot901.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130212935/Screenshot884.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130213802/resize1612022824759423464Screenshot886.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130224952/resize1612027167451155063Screenshot892.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130214148/Screenshot893.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130223011/Screenshot911.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130223031/Screenshot914.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130224306/Screenshot867.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130223444/resize1612026205704852964Screenshot894.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210130223505/imgonlinecomuatwotoonenenaeiy3HByw.jpg",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210131212310/Screenshot899.png",
            "https://media.geeksforgeeks.org/wp-content/uploads/20210131224917/Screenshot871.png",
            "https://media.geeksforgeeks.org/auth/profile/lqap43it9jbyk1sp69cf",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/Google-news.svg",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/new-premium-rbanner-us.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/gfgFooterLogo.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/googleplay.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/appstore.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/suggestChangeIcon.png",
            "https://media.geeksforgeeks.org/auth-dashboard-uploads/createImprovementIcon.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Data Structures",
            "Algorithms",
            "Python",
            "Java",
            "C",
            "C++",
            "JavaScript",
            "Android Development",
            "SQL",
            "Data Science",
            "Machine Learning",
            "PHP",
            "Web Development",
            "System Design",
            "Tutorial",
            "Technical Blogs",
            "Interview Experience",
            "Interview Preparation",
            "Programming",
            "Competitive Programming",
            "Jobs",
            "Coding Contests",
            "GATE CSE",
            "HTML",
            "CSS",
            "React",
            "NodeJS",
            "Placement",
            "Aptitude",
            "Quiz",
            "Computer Science",
            "Programming Examples",
            "GeeksforGeeks Courses",
            "Puzzles",
            "SSC",
            "Banking",
            "UPSC",
            "Commerce",
            "Finance",
            "CBSE",
            "School",
            "k12",
            "General Knowledge",
            "News",
            "Mathematics",
            "Exams"
        ],
        "tags": null,
        "authors": [
            "GeeksforGeeks"
        ],
        "publish_date": "2021-02-12T12:00:58",
        "summary": "",
        "meta_description": "A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.",
        "meta_lang": "en",
        "meta_favicon": "https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_favicon.png",
        "meta_site_name": "GeeksforGeeks",
        "canonical_link": "https://www.geeksforgeeks.org/lynis-security-tool-for-audit-and-hardening-linux-systems/",
        "text": "Lynis is an open-source security auditing tool for UNIX derivatives like Linux, Mac OS, BSD, other Unix-based operating systems etc. Performing extensive health scan of systems that support System Hardening and Compliance Testing. An open-source software with GPL License. This tool also scans for general system information, vulnerable software packages, and configuration issues. It is useful for System Administrators, Auditors, Security Professionals.\n\nHow Lynis Tool Works?\n\nLynis scanning is modular and opportunistic, it is used to test components like available system tools and their libraries. The advantage of Lynis tool is there is no additional installations of tools are required so systems are clean. The more components discovered, the more extensive the audit will be. Using this method, Lynis can run with no dependencies.\n\nLynis Tool Installation:\n\nLynis is light-weight and most users install Lynis using a package that would require more time to install. There are various ways to install Lynis,\n\nClone via GitHub\n\nOS Package Install\n\nSource Install\n\nTarball\n\nHomebrew\n\nBSD ports\n\nUNIX Distributions like Debian, Distro, Ubuntu, Mint, Fedora, Suse, OpenSUSE, Arch Linux, Manjaro etc. have Lynis Package by default. With this, it becomes easy for us to install them from the distribution repository using the package manager.\n\nInstall Lynis with Software Package or OS Package:\n\nWhile installing Lynis using software package is installed by default, so we can install it using the following commands on various UNIX Distributions.\n\nInstalling Lynis on Ubuntu/Debian/LinuxMint\n\nsudo apt-get install lynis\n\nInstalling Lynis on RHEL/CentOS\n\n$ sudo yum install lynis\n\nInstalling Lynis on Fedora\n\n$ sudo dnf install lynis\n\nInstalling Lynis on openSUSE\n\n$ sudo zypper install lynis\n\nInstalling Lynis on Arch Linux based system\n\n$ sudo pacman -S lynis\n\nInstalling Lynis on BSD ports\n\n$ cd /usr/ports/lynis/security $ make install\n\nInstall Lynis via Git Clone\n\nClone or download the project files from GitHub(Compilation or installation is required). After Lynis is installed or cloning the repository, the main tools are in a file called lynis. A shell script, which when opened we can read what the tool actually does. Lynis is implemented using shell scripts.\n\n$ git clone https://github.com/CISOfy/lynis $ cd lynis $ ls\n\nHow to Run Lynis:\n\nTo check view all the commands available in Lynis we can execute the following,\n\n$ ./lynis show\n\nWe can now use Lynis to perform security audits on our system. We can view the list of commands to execute with the help of Lynis. Use the following command to list the number of commands to execute,\n\n$ ./lynis show commands\n\nBefore performing an audit make sure you are in the right directory and add “./” before lynis. Lynis is run without pre-configuration, we can run lynis in both privileged and non-privileged mode (pentest). There are tests that require root privileges so these are skipped. Run audit in privileged mode run the command,\n\n$ ./lynis audit system\n\nNote: Adding –quick parameter will enable lynis to run without pauses and will enable us to work on other things simultaneously while it scans.\n\n$ ./lynis audit system --quick\n\nAfter authentication, Lynis will run tests and check through results. Lynis will perform audits and there is a number of tests performed all these are divided into categories. After every audit test results debug information and suggestions are provided for hardening the system. More detailed information is stored in /var/log/lynis/log, while the data report is stored in /var/log/lynis-report.data.\n\nExploring the Reports:\n\nLynis performs in-depth audit and reports the results in the followings ways:\n\nScreen Output: It scans the system and performs many tests. Possible test results include,\n\nOK or WARNING\n\nFOUND or NOT FOUND\n\nWEAK\n\nNONE or DONE\n\nLog File: Results displayed on-screen during the scan and additional details are logged in a log file. Information in a log file\n\nTimes of action/event\n\nReason(s) why a test failed or skipped\n\nOutput of (internal) tests\n\nSuggestions about configuration options\n\nThreat/impact score\n\nRemark: Log file is logged after every scan. To debug or log information relating to previous scans, schedule log rotation before running lynis again.\n\nReport Files: Lynis gathered findings and other data points which are stored in the report file in a default file. The report file is used to compare scans from the past with the current scan. Contents of the report file:\n\nRemarks = #<remark>\n\nSection = [<section name>]\n\nOption/value = <option name> = <value of option>\n\nReport Data contains information about the server and the application which is stored in the log file. Log File is overwritten on each audit.\n\nLynis gives out complete information about the Current System OS, OS version, Hardware running on a Linux machine. Debian Plugins are scanned and generate details on package installations.\n\nDebian Tests are also scanned which gives out more information on system installations. It also displays warnings for Debian plugins and listings of software installations if they have been installed on the system or not. Debian plugin checks for system binaries required by Debian tests.\n\nSystem Boot and Services are scanned and show booting and service issues present in the system.\n\nPrinters and Spools to check results of typical Lynis audit, there are two tests under this category. Check cupsd status and related configuration files. lpd status, qdaemon printer spooler status.\n\nSoftware: firewalls Checking the iptables kernel module, used policies of iptables chains. Also verify software firewalls like CSF, UCF, etc. It checks the configuration of firewalls and local services, it collects data for further analysis.\n\nInsecure Services here inetd is not found, the test is tagged on Lynis as it shouldn’t be performing as part of an audit on your server. Scanning inet daemon status and checks configuration file when it’s disabled.\n\nSSH Support Scanning SSH daemon status and other tweaks of SSH on /etc/ssh/sshd_config for secure login.\n\nSNMP Support Checking SNMP daemon is running, daemon file location, SNMP communications.\n\nDatabases Checking installed databases like MySQL, PostgreSQL, Oracle, DB2 & Redis and related processes, configuration files.\n\nLDAP Services Checking OpenLDAP instance is running or not and its configuration file.\n\nLynis has color-coding:\n\nGreen: which means everything works fine or is disabled\n\nyellow: Skipped, NOT FOUND, might have a suggestion\n\nRed: It shows that the particular test or scan is unsafe or needs more attention.\n\nIn Kernel Scanning run level, CPU support, kernel version, kernel type, /etc/inittab & loaded kernel modules.\n\nMemory and Processes Scan memory information from /proc/meminfo, dead processes & IO processes.\n\nKernel Hardening it has many tunable settings which define kernel functions and some tunables have security context. Distro may not set it by default and examination is required for each scan. the value keeps changing based on security posture. Scan sysctl key pairs with profile to verify the kernel parameters hardening.\n\nUsers, groups and Authentication Scanning admin accounts, UIDs, GIDs, /etc/passwd, sudoers & PAM files, password aging, single-user mode, failed login & umask.\n\nShells Scanning available shells and checking whether it’s vulnerable.\n\nFile System Scans available mount points and check if mounted separately or mounted on / file system. Also checking the mount point flags and added properly. fstab file, swap partition, /proc, /tmp and /tmp sticky bit.\n\nStorage Scanning, if USB storage is disabled, checking USB device authorization. Also, check if firewire storage is disabled.\n\nNFS Scanning NFS information like rpcinfo registered programs, NFS registered versions, NFS registered protocols, and NFS daemon running.\n\nPorts and packages scanning package manager, if it’s found the package manager (rpm, deb, etc) then it will query the list of installed packages and check package vulnerability, package updates. Finally, checks GPG signature for package security.\n\nNetworking Scan IPv6 enabled or not, name server configuration test, search available network interfaces, MAC addresses, network IP addresses, DHCP status.\n\nLogging and files Scan whether syslog daemon is running or not and its configuration files.\n\nBanners and identification Scans copyright banner files, check issue banner file & contents & check issue.net banner file & its contents.\n\nScheduled tasks Scanning cron daemon stats then it will check cronjob/crontab lists.\n\nAccounting Scanning accounting software information and it’s configuration files.\n\nSecurity frameworks Scanning AppArmor, SELinux, grsecurity are enabled. If yes, it will check the daemon status & presence.\n\nFile Integrity Checking file integrity to all the files.\n\nSystem tooling Checking system automation tools, fail2ban, IDS/IPS, etc.\n\nMalware Scanning malware related tools like chkrootkit, Rootkit Hunter, LMD & clamscan.\n\nFile Permissions scanning in this for all kind of file permissions\n\nScanning in phase 2 plugins is a test based on installed plugins and to install a plugin for lynis then add /etc/lynis/plugins directory. After the scanning is finished Warnings and Suggestions details are improvised for us to improve the security of the system and also to rectify any issues that are there in the system.\n\nHere security scan details are displayed, the report includes findings and general information like a number of security tests performed. The location of the log file and report data is also displayed.\n\nLynis gives an option to get detailed information about every suggestion, it is accessed using the show details command followed by test ID number. Here, we made use of one suggestion listed among 50 suggestions,\n\n$ ./lynis show details PHP-2376\n\nLynis Hardening Index is a unique index to Lynis which gives the auditor an idea of how well a system is hardened. The number is an indicator of measures taken.\n\nTo implement security safeguards firstly determine the findings present in the system and apply all the measures or suggestions given after scanning. Hardening Lynis and Unix Systems are essential to get security inline with security policies.\n\nThe alternative to increasing Lynis Hardening Index is determining what tests are too strict for the role of a particular machine. The tests can be disabled in the scan profile, resulting in the test being skipped. Using this, the hardening rating for those particular tests is skipped and a different score.\n\nRun Lynis as Custom Tests\n\nTo scan a particular test we have to list out the Test IDs. If the server doesn’t run web server there is no need to test. Use tests parameter to list a number of tests in lynis.\n\n$ lynis show tests\n\nCheck a particular test using the following command followed by test ID\n\n$ lynis show tests ACCT-9626 $ lynis show tests TOOL-5190\n\nTo know the updated details of the Lynis tool and see if the tool is in the latest version, run update info to get all the details relating to Lynis Tool.\n\n$ ./lynis update info\n\nTo get more Test-IDs we find them inside the default log file /var/log/lynis.log\n\nIf you don’t get the desired result using the above logfile then run lynis with -c (check-all) parameter. To look inside the log file we use cat command and combine with grep then a list of all Test-IDs present in the log file is displayed.\n\n$ cat /var/log/lynis.log | grep KRNL /*Another method can be using command*/ $ ./lynis -c -Q\n\nTo run check uptime of system and checking core dumps configuration tests if you want to add more tests add Test-ID separated by space.\n\n$ ./lynis --tests \"BOOT-5202 KRNL-5820\"\n\nRun Lynis with Categories:\n\nUse –test-from-category parameter if Test-IDs is huge to deal with, Lynis runs Test-IDs that includes inside every category. Run Firewall and Kernel tests using the following command,\n\n$ ./lynis --tests-from-category \"firewalls\"\n\nRun Lynis as Cronjob:\n\nAutomating lynis to run periodically and check for improvements since the previous lynis scan. To perform Cronjob using lynis then run it every month. It is important to create these related paths in script /usr/local/lynis and /var/log/lynis.\n\nTo save the paths in script execute the following command,\n\n# script is saved in text.sh and script is given below. # You can use any editor to save the script, here editor used is Vim. $ vim text.sh #inside vim enter command touch /root/Desktop/file.txt $ chmod u+x text.sh # this command is to execute cronjob monthly or anytime we schedule it to.\n\n$ #!/bin/sh AUDITOR=\"AUROMATED\" DATE=$(date+%Y%m%d) HOST=$(hostname) LOG_DIR=\"/var/log/lynis\" REPORT=\"$LOG_DIR/report-${HOST}.${DATE}\" DATA =\"$LOG_DIR/report-data-${HOST}.${DATE}.txt\" cd /usr/local/lynis ./lynis -c -auditor \"${AUDITOR}\" --cronjob > ${REPORT} mv /var/log/lynis-report.dat ${DATA} #End $ lynis audit system --auditor \"${AUDITOR}\" --cronjob > ${REPORT} # Move or save file to: [-f /ar/log/lynis-report.dat ] then mv /var/log/lynis-report.dat ${DATA} fi\n\nCheck Version of Lynis\n\nThe version of Lynis is basically it’ll display the version number the Tool is in. Checking the version of Lynis tool will help you know if the tool in the latest version or not.\n\n$ ./lynis --version"
    }
}