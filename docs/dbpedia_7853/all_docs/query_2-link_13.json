{
    "id": "dbpedia_7853_2",
    "rank": 13,
    "data": {
        "url": "https://www.techtarget.com/searchenterprisedesktop/definition/patch",
        "read_more_link": "",
        "language": "en",
        "title": "Definition from TechTarget",
        "top_image": "https://cdn.ttgtmedia.com/ITKE/images/logos/TTlogo-379x201.png",
        "meta_img": "https://cdn.ttgtmedia.com/ITKE/images/logos/TTlogo-379x201.png",
        "images": [
            "https://cdn.ttgtmedia.com/rms/onlineimages/5_reasons_to_update_software-h_half_column_mobile.png",
            "https://cdn.ttgtmedia.com/rms/onlineimages/patch_management_process-f_mobile.png",
            "https://cdn.ttgtmedia.com/visuals/digdeeper/1.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineimages/yasar_kinza.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineimages/container_g1275954204_searchsitetablet_520X173.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineImages/posey_brien.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineimages/pharma_g1358852671_searchsitetablet_520X173.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineimages/patrizio_andy.jpg",
            "https://cdn.ttgtmedia.com/visuals/searchManufacturingERP/product_lifecycle/manufacturingerp_article_015_searchsitetablet_520X173.jpg",
            "https://cdn.ttgtmedia.com/rms/onlineImages/fowler_adam.jpg"
        ],
        "movies": [
            "https://www.youtube.com/embed/vIDG-O_17qA?autoplay=0&modestbranding=1&rel=0&widget_referrer=https://www.techtarget.com/searchenterprisedesktop/definition/patch&enablejsapi=1&origin=https://www.techtarget.com"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Cameron Hashemi-Pour",
            "Brien Posey",
            "Kinza Yasar",
            "Andy Patrizio",
            "Adam Fowler"
        ],
        "publish_date": "2024-06-20T12:45:00+00:00",
        "summary": "",
        "meta_description": "Software patches are quick-repair jobs that resolve issues, improve security and add features to applications or devices. Find out why they're important.",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "Enterprise Desktop",
        "canonical_link": "https://www.techtarget.com/searchenterprisedesktop/definition/patch",
        "text": "Prev Next Patch management vs. vulnerability management: Key differences Guide to Linux patch management\n\nX\n\nFree Download What is patch management? Lifecycle, benefits and best practices\n\nThis comprehensive guide explains the entire patch management process and its role in IT administration and security. The hyperlinks direct you to detailed articles on patch management best practices, tools and services.\n\nDefinition\n\nsoftware patch\n\nBy\n\nCameron Hashemi-Pour, Site Editor\n\nBrien Posey\n\nWhat is a software patch?\n\nA software patch or fix is a quick-repair job for a piece of programming designed to resolve functionality issues, improve security or add new features.\n\nThroughout its lifetime, software will run into problems called bugs. A patch is the immediate fix to those problems. IT or end users can often download a patch from the software vendor's website. But the patch isn't necessarily the best fix for the problem, and the product's developers will often incorporate a more complete remediation when they do the next upgrade or full release of the software.\n\nThe creator of the patch usually develops and distributes it as a replacement for, or an insertion in, compiled code -- that is, in a binary file or object module. Larger operating systems (OSes) often provide a special program to help IT manage and track patch installations. The collective effort within an organization to identify, schedule and distribute patches is known as patch management.\n\nTypes of software patches\n\nSoftware patches generally fall into three categories. A single patch can fall into more than one category, however. These software updates include bug fixes, security updates and feature updates:\n\nThis article is part of\n\nWhat is patch management? Lifecycle, benefits and best practices\n\nWhich also includes:\n\nCreating a patch management policy: Step-by-step guide\n\nKey software patch testing best practices\n\n10 enterprise patch management best practices\n\nBug fix patches. These correct problems in the software, help the software run more smoothly and reduce the likelihood of a crash.\n\nSecurity patches. These address known security vulnerabilities, making the software more secure.\n\nFeature patches. These add new functionality to the software. For example, Microsoft, at one time provided feature updates twice a year for the Windows 10 OS.\n\nHow patching works in different devices\n\nSoftware patches are platform dependent. A patch for a PC application wouldn't be suitable for use on a device running Apple iOS. Given the variety of device types in most organizations, it's common to use an automated patch management tool that supports PCs and a variety of mobile OSes.\n\nThis practice is commonly referred to as centralized patch management. An IT asset management tool is used to identify devices that require patches, assess their patching status and then distribute patches to relevant devices. This tool can also create reports so IT departments can keep track of patches over time.\n\nWhy patches are important\n\nBug fix patches resolve functionality issues and are a key part of vulnerability management. Feature updates give the software additional capabilities.\n\nA security patch is particularly important because it addresses known security risks and vulnerabilities. When a vendor releases a security update, it alerts the hacker community that a vulnerability exists in that piece of software. At that point, hackers begin actively looking for ways to exploit the known vulnerability and for unpatched copies of the software to exploit. The sooner an organization installs a security patch, the faster it's protected against the associated vulnerability.\n\nHow to find out what software patches to install\n\nVendors often offer information on software patches and updates for their applications and devices. Devices can have patch updates appear under a settings option that a user can easily access or that includes a pop-up alert. An application might be programmed to automatically install or check for updates, and some vendors give their customers the choice to receive them automatically. Notifications also play a crucial role in reminding users of patches that need to be installed.\n\nIn the case of optional updates, such as enhancements to functionalities and new features, a user can search a vendor's website to find them. Checking a vendor's website ensures an update is retrieved from a trusted source and not an untrusted one, such as an unsolicited email. Verified websites will have detailed information on the update to determine its veracity and also might have other users' feedback to point out any issues.\n\nPatch management best practices\n\nThere are various best practices for patch management. They include the following:\n\nScheduling. Admins should set schedules that ensure new patches are regularly identified and applied quickly.\n\nCollaboration. Different technical teams, such as cybersecurity and software engineering groups, should work in tandem to implement patches and decide which technologies and procedures are used. Every person involved should be delegated clear roles and responsibilities.\n\nDisaster recovery workflows. Update management processes might run into issues in the event of downtime caused by outages or connectivity issues. Disaster recovery workflows are key to knowing what the backup plans are in these instances.\n\nAutomation. Patch management software can be set to do automatic updates, simplifying patch distribution to various apps and devices an organization uses. Automatic deployments of patch updates can be performed weekly or more or less frequently, depending on an organization's needs.\n\nPatch prioritization. When there are many patches required, prioritizing critical updates first reduces the likelihood of cyberattacks such as malware or ransomware or other security breaches.\n\nManagement flexibility. Admins typically want to administer new patches in a timely manner. However, if applying patches interferes with employees' work, admins must be flexible so employees can complete critical tasks first before deploying patches. This, along with many other considerations, should be reflected in their security policies.\n\nTesting patches. Testing must be performed rigorously to ensure patches don't present issues or cause disruptions.\n\nThe difference between manual and automatic updates\n\nThe difference between automatic updates and manual ones revolves around both efficiency and the amount of control or customization that developers have over each. Automatic updates require little thought or effort on the part of developers. However, there's a potential for them to end up proving to be unnecessary or even detrimental if applied incorrectly without supervision. While modern OSes typically offer the capability to automatically apply updates, development teams might choose to perform certain ones manually.\n\nWith a manual update, a person controls the process. They're usually used when there is an overriding reason to have that control. For instance, manual updates are used when feature updates need to be tailored to the way a system is set up and to avoid compatibility issues.\n\nThe downside of a manual patch management process is that the person doing the update has to search for and take the time to perform the update. The automatic approach, on the other hand, is better for security updates to ensure important updates happen quickly enough to prevent vulnerabilities from being exploited.\n\nPatch management policies and patch automation software\n\nMany organizations have patch management policies that stipulate how to evaluate and apply patches. Such policies usually designate the time frame within which IT must apply the patch and how to test the patch to ensure it won't cause problems -- such as compatibility issues -- for the organization.\n\nThere are numerous options for automating patch management. Microsoft, for example, provides a free tool called the Windows Server Update Services (WSUS), which automates patch management for Microsoft software.\n\nWindows Update, a free maintenance and support service, can automatically download and install patches for the Windows OS and other Microsoft software. However, there are some advantages to using WSUS. For instance, WSUS gives administrators control over which patches Windows Update applies. It also saves internet bandwidth, because it downloads each patch once and then distributes it throughout the organization, as opposed to each PC downloading it individually.\n\nWSUS is only capable of managing patches for Microsoft products. Microsoft and various third-party applications offer other patch management options that can automate the patching processes of non-Microsoft software.\n\nIT's role in distributing patches\n\nIT departments must regularly monitor communications from their application and device vendors for patching alerts. IT is responsible for patch testing and distribution. It also performs periodic audits to determine if any devices are missing patches. Some organizations outsource these tasks to a managed service provider.\n\nPatch managers must be aware of how the update process could disrupt business operations. They should prioritize patches, applying the critical ones quickly while strategically scheduling less critical patches.\n\nSoftware platforms generally automate patch management. However, if this automation software stops functioning for some reason, IT would have to step in and fulfill this role. Effective workflows should document these emergency procedures with clear roles for IT departments. Finally, if issues arise with patches, IT must oversee troubleshooting them.\n\nOrganizations looking for new ways to simplify and streamline patch management have many platform options. Explore these platforms in detail.\n\nContinue Reading About software patch\n\nCreating a patch management policy: Step-by-step guide\n\nKey security patch testing best practices\n\nGuide to Linux patch management\n\nA guide to MSP patch management best practices\n\nWSUS alternatives for patch management\n\nRelated Terms\n\nGroup Policy\n\nGroup Policy is a management feature in Microsoft's Active Directory (AD) that enables network and system administrators to ... See complete definition\n\nWhat is a device driver?\n\nA device driver, or driver, is a special kind of software program that controls a specific hardware device attached to a computer. See complete definition\n\nWindows Server Update Services (WSUS)\n\nWindows Server Update Services (WSUS) is a Windows server role that can plan, manage and deploy updates, service packs, patches ... See complete definition\n\nDig Deeper on Windows OS and management\n\nWindows Server Update Services (WSUS)\n\nBy: Kinza Yasar\n\n8 WSUS alternatives for patch management\n\nBy: Brien Posey\n\nAutomated patch management: 9 best practices for success\n\nBy: Andy Patrizio\n\nWUfB vs. WSUS: Which handles Windows updates better?\n\nBy: Adam Fowler"
    }
}