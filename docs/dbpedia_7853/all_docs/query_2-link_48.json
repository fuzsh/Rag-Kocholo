{
    "id": "dbpedia_7853_2",
    "rank": 48,
    "data": {
        "url": "https://www.proofpoint.com/us/threat-reference/patch-management",
        "read_more_link": "",
        "language": "en",
        "title": "What Is Patch Management? - Definition & Practices",
        "top_image": "https://www.proofpoint.com/themes/custom/proofpoint/apps/drupal/favicon.ico",
        "meta_img": "https://www.proofpoint.com/themes/custom/proofpoint/apps/drupal/favicon.ico",
        "images": [
            "https://www.proofpoint.com/sites/default/files/inline-images/SolarWindsPatchManagerDashboard.jpg",
            "https://www.proofpoint.com/sites/default/files/inline-images/ManageEnginePatchManager.jpg",
            "https://www.proofpoint.com/sites/default/files/inline-images/IvantiShavlikPatchManagerDashboard.jpg",
            "https://www.proofpoint.com/sites/default/files/inline-images/GFILandGuardPatchManagementDashboard.jpg",
            "https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950296937/?value=0&guid=ON&script=0"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2021-07-01T05:42:06-07:00",
        "summary": "",
        "meta_description": "Patch management strategies handle the way updates are deployed among a device network for software. Learn how patch management works and best practices to know.",
        "meta_lang": "en",
        "meta_favicon": "/themes/custom/proofpoint/apps/drupal/favicon.ico",
        "meta_site_name": "Proofpoint",
        "canonical_link": "https://www.proofpoint.com/us/threat-reference/patch-management",
        "text": "Patch management is often automated using third-party software, but some human intervention is also necessary to determine the frequency at which updates are deployed, who oversees the process, and what happens when patches must be rolled back. Automation software saves time for IT staff that must review and test patches before they are installed, but the strategies surrounding the way software is deployed still requires human intervention.\n\nThe first step in patch management is scanning devices for outdated software. Devices could be on the local network or cloud-connected and controlled by the organization. The devices scanned must give the scanner permission to access the targeted software to identify if it’s outdated. If any scanner can access the device’s software version, it may be a cybersecurity issue. In some cases, the software itself can poll a central server to determine if the currently installed version is the latest or if an update is available.\n\nIf a device contains outdated software, the next step is to upload the latest update to the target. If the software polls a central server, the software might trigger a download of the latest updates and hotfixes. Patch management must apply the right updates and hotfixes in the correct order. If a user has not run previous updates, patch management ensures that all earlier updates are installed before applying the latest one.\n\nOne patch management strategy is to send files to a central server where the developer’s software can poll for any updates. That would enable users to manually download files instead of allowing the software to update automatically. Some users prefer to manually install files instead of using automation tools, so developers need to give users that option.\n\nFinally, IT staff must have a way to know if patches were successfully installed. A good patch management solution provides reports that can be reviewed by developers or other IT staff to ensure that the installation was successful. This component is crucial for internal IT staff that must keep track of dozens of devices on the network to ensure that they are not vulnerable to crashes and cybersecurity threats.\n\nTo ensure the update process is smooth across all devices, software developers, and the businesses that manage updates should create a strategy. The strategy created depends on the network environment and the type of devices that must be patched. Software developers can release software to the public, but the updates must be handled in a way that allows users to freely update software even if they are behind a few versions. Businesses must create a patch management strategy that ensures all users have the latest updates to protect corporate assets and prevent data loss.\n\nBefore coming up with a strategy, it’s also important to understand the SDLC that controls the way developers release updates. Software developers release updates, but organizations must check for them frequently. Patch management software can do most of the work for the IT staff, but staff must still check reports to ensure updates didn’t fail.\n\nCommon best practices to devise a patch management strategy:"
    }
}