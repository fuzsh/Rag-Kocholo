{
    "id": "dbpedia_121_0",
    "rank": 66,
    "data": {
        "url": "https://sec-api.io/resources/testing-statistical-significance-in-financial-data-with-python",
        "read_more_link": "",
        "language": "en",
        "title": "Testing Statistical Significance in Financial Data with Python",
        "top_image": "https://sec-api.io/favicon.svg",
        "meta_img": "https://sec-api.io/favicon.svg",
        "images": [
            "https://sec-api.io/media/colab-badge.svg",
            "https://sec-api.io/media/download-notebook-badge.svg",
            "https://statistics.sec-api.io/tutorials/f0b88ba210e39ffd97bf0b38162cc237/images/0.png",
            "https://statistics.sec-api.io/tutorials/f0b88ba210e39ffd97bf0b38162cc237/images/1.png",
            "https://statistics.sec-api.io/tutorials/f0b88ba210e39ffd97bf0b38162cc237/images/2.png",
            "https://statistics.sec-api.io/tutorials/f0b88ba210e39ffd97bf0b38162cc237/images/3.png",
            "https://statistics.sec-api.io/tutorials/f0b88ba210e39ffd97bf0b38162cc237/images/4.png",
            "https://statistics.sec-api.io/tutorials/f0b88ba210e39ffd97bf0b38162cc237/images/5.png",
            "https://statistics.sec-api.io/tutorials/f0b88ba210e39ffd97bf0b38162cc237/images/6.png",
            "https://statistics.sec-api.io/tutorials/f0b88ba210e39ffd97bf0b38162cc237/images/7.png",
            "https://statistics.sec-api.io/tutorials/f0b88ba210e39ffd97bf0b38162cc237/images/8.png",
            "https://sec-api.io/favicon.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Learn how to calculate test statistics and p-values, what statistical tests to choose for what type of dataset, and how to perform hypothesis testing on financial data using Python",
        "meta_lang": "en",
        "meta_favicon": "/favicon.svg",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Â Â\n\nStatistical significance tests help determine whether two or more datasets are different and how meaningful their difference is. These tests evaluate whether observed discrepancies, such as a trading strategy outperforming the S&P 500 benchmark or a particular student group achieving higher exam scores than another, can be attributed to genuine effects rather than mere chance. Essentially, the question at the heart of these tests is whether the observed differences are a product of \"luck\" or if they would likely recur under the same experimental or study conditions, thereby indicating consistent variations in the datasets or groups.\n\nApplications of statistical significance tests are wide and varied. Examples include:\n\nEvaluating trading strategies by comparing the returns of different strategies or portfolios against a benchmark or each other.\n\nEvaluating whether an event had a statistically significant impact on stock prices by using event study methodologies combined with significance tests like the t-test.\n\nAssessing whether there are patterns in returns indicating market inefficiencies, using statistical tests like serial correlation tests or runs tests.\n\nInvestigate the relationships between different financial variables, such as interest rates and stock market returns, using correlation and regression analysis.\n\nBacktesting Value at Risk (VaR) models by comparing the predicted maximum losses to actual losses over a period. Significance tests help determine whether discrepancies between predicted and actual losses are statistically significant.\n\nStatistical testing revolves around hypothesis testing, where a claim is evaluated against data. Selecting an appropriate statistical test is depending on the data and hypothesis. Common tests include Student's t-test for comparing means, the chi-square test for categorical data, Kruskal-Wallis for comparing more than two groups, or correlation test to examine the relationships between variables.\n\nA test is used to calculate a test statistic (t-value) from your data. This numerical value represents the degree of difference or association observed in your data. For instance, in a Student's t-test, the t-value measures the difference in means between two groups relative to the variability within those groups. It's important to note that terms like \"t-value,\" \"t-statistic,\" or \"t-stat\" are often used interchangeably.\n\nEach statistical test assumes certain conditions about the data. If these assumptions are not met, the test statistic might be irrelevant, highlighting the importance of choosing the appropriate test for your data and hypothesis.\n\nParametric vs Non-Parametric Tests\n\nStatistical tests are broadly categorized into parametric and non-parametric tests, each suited for different types of data and assumptions about their distribution.\n\nParametric tests are applied when data adhere to specific criteria, such as normally distributed data and equal variance. However, real-world data often deviate from these ideal conditions, limiting the applicability of parametric tests.\n\nParametric tests include:\n\nStudent's t-test: Comparing the means of two independent groups, with variants like the one-sample t-test, independent samples t-test, paired samples t-test.\n\nWelch's t-test: Specifically designed for situations where two groups do not share equal variances or sample sizes, offering a more flexible approach than the standard t-test.\n\nANOVA (Analysis of Variance): Comparing the means across three or more independent groups, with variations such as one-way ANOVA, two-way ANOVA, and repeated measures ANOVA to address different research questions.\n\nPearson correlation: Assesses the linear relationship between two continuous variables, quantifying both the direction and strength of this relationship.\n\nLinear regression: Investigates how a dependent variable changes in relation to one (simple linear regression) or more (multiple linear regression) independent variables.\n\nLogistic regression: Models the probability of a binary outcome based on one or more predictor variables.\n\nNon-parametric tests, or distribution-free tests, do not assume a specific underlying distribution for the data. They are particularly valuable when data do not meet the assumptions required for parametric testing.\n\nNon-parametric tests include:\n\nMann-Whitney U test (also known as the Wilcoxon rank-sum test): Compares the distributions of two independent groups.\n\nWilcoxon signed-rank test: Used for comparing two paired or related samples to assess differences in their median values.\n\nKruskal-Wallis H test: An extension of the Mann-Whitney U test for comparing more than two independent groups, assessing differences in their distributions.\n\nSpearman's rank correlation: Measures the strength and direction of the monotonic relationship between two variables, which can be linear or nonlinear, such as the correlation between the square footage of homes and their prices.\n\nChi-squared test: Determines whether there is a significant association between categorical variables.\n\nChoosing between parametric and non-parametric tests depends on the nature of the data and the specific research question, with non-parametric tests offering an alternative when data do not meet the assumptions of parametric tests.\n\nHow to choose a statistical test\n\nChoosing the appropriate statistical test for your data involves a series of steps to assess the characteristics of your data and assumptions underlying various tests. Here is a simplified guide to help you make an informed decision.\n\n1. Define Your Research Question and Hypothesis\n\nClearly specify what you aim to investigate. This determines whether you need a test for comparing means (e.g., t-tests, ANOVA), analyzing relationships (e.g., Pearson, Spearman correlation), or something else (e.g., chi-square test for categorical data).\n\n2. Assess the Type of Data You Have\n\nIdentify whether your data are categorical or continuous, and whether you are comparing groups or looking at relationships between variables. This helps narrow down your choice of tests.\n\n3. Check for Normality\n\nMany parametric tests assume that the data are normally distributed. Use QQ plots and the Shapiro-Wilk test to assess normality.\n\nQQ Plots: Visual method to compare the distribution of your data against a normal distribution. Deviations from the line indicate departures from normality.\n\nShapiro-Wilk Test: Provides a p-value to statistically assess normality. A p-value below a certain threshold (commonly 0.05) suggests that the data do not follow a normal distribution.\n\n4. Test for Equal Variances\n\nSome tests assume that variances are equal across groups (homoscedasticity).\n\nLevene's Test: A robust test for equal variances that is less sensitive to departures from normality.\n\nF-test (ANOVA assumption check): More sensitive to normality, used primarily when comparing means across more than two groups and assuming normality.\n\n5. Choose the Test Based on Your Findings\n\nNormal Distribution and Equal Variances:\n\nUse parametric tests such as the independent samples t-test for comparing two means or ANOVA for more than two groups.\n\nNon-Normal Distribution or Unequal Variances:\n\nOpt for non-parametric alternatives like the Mann-Whitney U test (instead of the t-test) or the Kruskal-Wallis test (instead of ANOVA) for comparing groups. Use Welch's t-test if you suspect unequal variances between two groups but still consider a t-test appropriate.\n\nRelationships Between Variables:\n\nFor normally distributed data, Pearson's correlation can assess linear relationships. If data are non-normal or you're interested in monotonic relationships, use Spearman's rank correlation.\n\n6. Conduct the Test and Interpret Results\n\nPerform the chosen statistical test using appropriate software or programming libraries, such as Python. Interpret the results in the context of your research question, focusing on p-values to assess statistical significance and effect sizes to understand the magnitude of any observed effects.\n\nThis process is iterative and might require adjustments based on your findings at each step. It's essential to clearly understand the assumptions of each test and ensure your data meet these assumptions for the results to be valid.\n\nSimple Example of a Statistical Significance Test (T-Test)\n\nA t-test is a statistical method used to determine if there's a significant difference between the means (averages) of two groups. It's especially useful when dealing with small sample sizes and when the data is approximately normally distributed.\n\nThere are three main types of t-tests:\n\nOne-sample t-test: Compares the mean of a single group to a known average.\n\nTwo-sample t-test (independent): Compares the means of two separate groups to see if they're significantly different.\n\nPaired t-test: Compares the means of the same group at two different times (e.g., before and after a treatment).\n\nWhen you run a t-test, you get a t-value. This t-value, along with the sample size, helps determine if the difference between the groups is likely due to chance or if it's statistically significant. In short, a t-test helps you figure out if two groups are genuinely different or if the observed differences could just be random.\n\nThe t-test makes several assumptions, including:\n\nThe data is normally distributed (or approximately so).\n\nThe variances of the two populations are equal (for a two-sample t-test) unless you're conducting a version of the test that doesn't assume equal variances (often called the Welch's t-test).\n\nObservations are independent of each other.\n\nIf the data doesn't meet these assumptions, other statistical tests might be more appropriate.\n\nimport pandas as pd\n\nimport numpy as np\n\nimport scipy.stats as stats\n\nimport matplotlib.pyplot as plt\n\nimport matplotlib.style as style\n\nstyle.use(\"default\")\n\nparams = {\n\nÂ Â Â Â \"axes.labelsize\": 8,\n\nÂ Â Â Â \"font.size\": 8,\n\nÂ Â Â Â \"legend.fontsize\": 8,\n\nÂ Â Â Â \"xtick.labelsize\": 8,\n\nÂ Â Â Â \"ytick.labelsize\": 8,\n\nÂ Â Â Â \"text.usetex\": False,\n\nÂ Â Â Â \"font.family\": \"sans-serif\",\n\nÂ Â Â Â \"axes.spines.top\": False,\n\nÂ Â Â Â \"axes.spines.right\": False,\n\nÂ Â Â Â \"grid.color\": \"grey\",\n\nÂ Â Â Â \"axes.grid\": True,\n\nÂ Â Â Â \"grid.alpha\": 0.5,\n\nÂ Â Â Â \"grid.linestyle\": \":\",\n\n}\n\nplt.rcParams.update(params)\n\nScenario\n\nA school wants to determine if a new teaching technique for mathematics is more effective than the traditional method. They decide to conduct an experiment.\n\nProcedure\n\nThe school selects 30 students at random.\n\nThese students are split into two groups of 15 each.\n\nGroup A is taught using the traditional method for one month.\n\nGroup B is taught using the new teaching technique for the same duration.\n\nAt the end of the month, all students take the same math test.\n\nThe school now wants to know:\n\nIs the difference in test scores between the two groups statistically significant?\n\nIs the new technique genuinely better, or could this difference just be due to random chance?\n\n# Hypothetical test scores\n\ngroup_A = [85, 88, 90, 80, 87, 86, 84, 82, 88, 85, 83, 89, 85, 84, 87]\n\ngroup_B = [87, 93, 92, 90, 95, 91, 92, 90, 93, 91, 94, 95, 92, 91, 94]\n\n# Plot test scores of both groups\n\nplt.figure(figsize=(4, 2.5))\n\nplt.hist(group_A, alpha=0.5, label='Group A', edgecolor='black')\n\nplt.hist(group_B, alpha=0.5, label='Group B', edgecolor='black')\n\nplt.xlabel('Test Scores'); plt.ylabel('Frequency'); plt.legend(loc='upper left'); plt.tight_layout(); plt.show()\n\n# Two-sample t-test\n\nt_stat, p_value = stats.ttest_ind(group_A, group_B)\n\nprint(f\"t-statistic:\\t{t_stat:.3f}\")\n\nprint(f\"p-value:\\t{p_value}\")\n\nif p_value < 0.05:\n\nÂ Â Â Â print(\"p < 0.05: The difference between the two groups is significant\")\n\nelse:\n\nÂ Â Â Â print(\"p > 0.05: The difference between the two groups is not significant\")\n\nt-statistic: -7.236\n\np-value: 7.080650095530462e-08\n\np < 0.05: The difference between the two groups is significant\n\nThe results of the t-test are as follows:\n\nt-statistic: -7.236\n\np-value: 0.0000000708 (7.08 Ã 10^-8)\n\nThe negative t-statistic indicates that Group B (New Technique) has a higher mean score than Group A (Traditional). The extremely small p-value (much less than 0.05) suggests that the difference between the two groups is statistically significant. In other words, it's very unlikely that the observed difference in test scores is due to random chance. Thus, based on this data, we can conclude that the new teaching technique appears to be more effective than the traditional method.\n\nT-Distribution Chart\n\nThe t-distribution, also known as Student's t-distribution, is a type of probability distribution that is symmetric and bell-shaped, similar to the normal distribution but with heavier tails. It arises when estimating the mean of a normally distributed population in situations where the sample size is small and the population standard deviation is unknown. The shape of the t-distribution is determined by a parameter known as degrees of freedom (df). Degrees of freedom are typically related to the sample size (e.g., df = sample size - 1 for a single sample t-test). The larger the degrees of freedom, the closer the t-distribution is to the normal distribution.\n\nFollowing is a chart of the t-distribution with 10 degrees of freedom. The horizontal axis represents different t-values, and the vertical axis shows the probability density associated with each t-value. This chart illustrates how the probability density decreases as you move away from the center (t-value = 0), indicating that more extreme t-values are less likely to occur by chance.\n\n# Define the parameters for the t-distribution\n\ndf = 10 # degrees of freedom\n\nx = np.linspace(-4, 4, 1000) # range of x values\n\ny = stats.t.pdf(x, df) # probability density function for the t-distribution\n\nplt.figure(figsize=(4, 2.5))\n\nplt.plot(x, y, label=f'T-distribution (df={df})')\n\nplt.title('T-distribution Chart'); plt.xlabel('T-value'); plt.ylabel('Probability Density')\n\nplt.legend(); plt.grid(True); plt.tight_layout(); plt.show()\n\np-value explained\n\nA p-value gives us an idea of how likely it is to observe the results we did (or more extreme results) if we assume that there's no real effect present â essentially, if it's all just due to chance.\n\nSo, when you see a p-value of 0.05, it means there's a 5% chance that the differences or relationships you observed in your data could occur just by luck, even if there's actually no real underlying effect or difference. This is a way of saying, \"If we were to repeat this experiment or study many times under the same conditions, we'd expect to see results like these (or more extreme) about 5% of the time just by random chance.\"\n\nA lower p-value (like 0.01 or 1%) suggests that the observed data would be very unlikely if there were no real effect, making us more confident that the effect we're seeing might be real. On the other hand, a higher p-value (like 0.10 or 10%) means there's a higher likelihood that the observed results could just be due to chance, making us less confident in the presence of a real effect.\n\nIt's important to note, however, that the p-value doesn't tell us the probability that our hypothesis is true or false. Instead, it's about the probability of the data given a specific assumption (no effect or difference).\n\nThe p-value is also referred to as significance level, alpha, probability value.\n\nHere's where the actual p-value calculation comes into play:\n\nThe test statistic is compared against a distribution (e.g., t-distribution for a t-test) that represents what we would expect if there were no real effect or difference (the baseline assumption).\n\nThe p-value is then determined by finding the probability of obtaining a test statistic as extreme as (or more extreme than) the one calculated from your data, given that the baseline assumption is true.\n\nEssentially, the p-value is calculated by looking at the tails of the distribution. If your test statistic falls far out in the tail, it means that obtaining such a result would be very unlikely if the baseline assumption were true, leading to a low p-value.\n\nLet's illustrate the calculation of a p-value by plotting a t-distribution and marking the area corresponding to a p-value in red. For this example, let's assume we have a t-value of 2.5 with 10 degrees of freedom.\n\nt_value = 2.5\n\ndf = 10\n\n# Define the range of x values for plotting\n\nx = np.linspace(-4, 4, 1000)\n\ny = stats.t.pdf(x, df)\n\n# Calculate the p-value for the given t-value (for a two-tailed test)\n\n# This involves finding the area in the tails beyond the t-value and its negative counterpart\n\np_value_area = stats.t.sf(np.abs(t_value), df) * 2 # sf is the survival function, equivalent to 1 - cdf\n\nplt.figure(figsize=(4, 2.5))\n\nplt.plot(x, y, label=f'T-distribution (df={df})')\n\n# Highlight the area corresponding to the p-value\n\n# This will be the area in the tails beyond the t-value and its negative counterpart\n\nplt.fill_between(x, 0, y, where=(x >= t_value) | (x <= -t_value), color='red', alpha=0.5, label='p-value area')\n\nplt.title('T-distribution with p-value Area Highlighted')\n\nplt.xlabel('T-value'); plt.ylabel('Probability Density')\n\nplt.legend(); plt.grid(True); plt.tight_layout(); plt.show()\n\nprint(f\"p-value:\\t{p_value_area}\")\n\nif p_value_area < 0.05:\n\nÂ Â Â Â print(\"p < 0.05: Variance is statistically significant\")\n\nelse:\n\nÂ Â Â Â print(\"p > 0.05: Variance is not statistically significant\")\n\np-value: 0.031446844236608776\n\np < 0.05: Variance is statistically significant\n\nIn the chart above, we've plotted a t-distribution with 10 degrees of freedom and highlighted the area corresponding to a p-value in red. This red area represents the probability of observing a t-value as extreme as 2.5 (or more extreme) in both tails of the distribution, assuming there's no real effect or difference.\n\nThe calculated p-value for a t-value of 2.5 with 10 degrees of freedom is approximately 0.031, meaning there's about a 3.1% chance of observing such an extreme result (or more extreme) due to random chance alone. This area under the curve in the tails (marked in red) visually represents that probability. â\n\nNull Hypothesis and Rejecting It\n\nThe null hypothesis is a statement that suggests there is no difference between datasets or variables. It's a default position that assumes any observed differences in data are due to chance rather than a specific effect or cause. The null hypothesis is often denoted as H_0.\n\nWhen you perform statistical testing, you're essentially trying to find out whether there's enough evidence in your data to reject the null hypothesis. Put simply, you're attempting to show that two or more datasets are not the same, thereby establishing that there is a significant difference between them.\n\nSetting Up Hypotheses\n\nNull Hypothesis (H_0): There is no effect, no difference, or no association between the datasets. For example, \"The new trading strategy does not outperform the SP500 benchmark\".\n\nAlternative Hypothesis (H_1 or H_a): Contrary to H_0, it suggests there is an effect, a difference, or an association. For example, \"The new strategy outperforms the benchmark\".\n\nCollecting Data and Performing a Test: You collect data and perform a statistical test suited to your question. This test calculates a test statistic and a p-value.\n\nInterpreting the p-value: The p-value tells you the probability of observing your data (or something more extreme) if the null hypothesis were true. A low p-value (typically <0.05) indicates that such an extreme result is unlikely under the null hypothesis, suggesting evidence against H_0.\n\nMaking a Decision: If the p-value is below a predefined threshold (like 0.05), you might reject the null hypothesis in favor of the alternative hypothesis, concluding that there's statistical evidence for an effect or difference. If the p-value is above the threshold, you do not have enough evidence to reject the null hypothesis, meaning you haven't found statistically significant evidence of an effect or difference.\n\nIn essence, by attempting to disprove or reject H_0, researchers use statistical tests to find evidence of a real effect, difference, or association that could be considered statistically significant.\n\nNormality Test\n\nA normality test is a statistical procedure used to determine if a dataset is well-modeled by a normal distribution or Gaussian distribution. Given the importance of the normal distribution in many statistical methods and tests (which often assume that the data follows this distribution), assessing the normality of data is a critical step before selecting a statistical test or model. There are several methods for testing normality, including graphical and numerical approaches:\n\nGraphical Methods\n\nHistogram: Plotting a histogram of the data can provide a visual assessment of whether the data appears to be normally distributed, based on the bell curve shape.\n\nQ-Q (Quantile-Quantile) Plot: A graphical method that compares the quantiles of the data to the quantiles of the normal distribution. If the data are normally distributed, the points should fall approximately along a straight line.\n\nP-P (Probability-Probability) Plot: Similar to the Q-Q plot, but it compares the cumulative distribution functions of the data and a normal distribution.\n\nNumerical Methods\n\nShapiro-Wilk Test: A popular test that evaluates if a sample comes from a normally distributed population. It is suitable for small to moderate sample sizes.\n\nKolmogorov-Smirnov Test: Compares the empirical distribution function of the sample data with the expected distribution function of a normal distribution. It can be used for larger samples but is less powerful than the Shapiro-Wilk test for small samples.\n\nAnderson-Darling Test: Another test that compares the sample distribution to a specified distribution (like the normal distribution). It gives more weight to the tails than the Kolmogorov-Smirnov test.\n\nD'Agostino's K^2 Test: Uses skewness and kurtosis (measures of asymmetry and tail heaviness, respectively) to assess the normality of the data.\n\nThese tests generate a p-value, which is used to decide whether to reject the null hypothesis that the data are normally distributed. A low p-value (typically <0.05) indicates that the data do not follow a normal distribution, while a higher p-value suggests that the data are not significantly different from a normal distribution.\n\nIt's essential to choose an appropriate normality test based on the data size and the specific analysis needs. Also, combining graphical and numerical methods can provide a more comprehensive assessment of normality.\n\nHistogram\n\nLet's explore the distribution of daily stock returns for the S&P 500 index (ticker: SPY) spanning from 2018 to 2023, a period of six years. In the realm of financial research, it's a common assumption that stock returns follow a normal distribution. We aim to challenge this notion by first presenting the daily returns in a histogram. At first glance, the distribution of SP500 daily returns may appear to adhere to a normal distribution. However, our further analysis using QQ plots and the Shapiro-Wilk test will reveal that this initial impression does not accurately reflect the true nature of the data.\n\nimport yfinance as yf\n\nstart_year = 2018\n\ndata = yf.download('SPY', start=f'{start_year}-01-01', end='2023-12-31')\n\ndata['daily_return'] = data['Adj Close'].pct_change() * 100\n\ndaily_returns = data['daily_return'].dropna()\n\nplt.figure(figsize=(4, 2.5))\n\nplt.hist(daily_returns, bins=100, alpha=0.5)\n\nplt.title(f'SPY Daily Returns Histogram ({start_year}-2023)')\n\nplt.xlabel('Daily Returns (%)'); plt.ylabel('Frequency'); plt.grid(True); plt.tight_layout(); plt.show()\n\n[*********************100%%**********************] 1 of 1 completed\n\ndescp_stats = pd.DataFrame(daily_returns.describe())\n\nprint(\"Descriptive Statistics for SPY Daily Returns:\")\n\ndescp_stats.round(2)\n\nDescriptive Statistics for SPY Daily Returns:\n\nOut[Â ]:\n\ndaily_returncount1508.00mean0.05std1.28min-10.9425%-0.4950%0.0875%0.69max9.06\n\nQ-Q Plot\n\nQuantile-Quantile (Q-Q) plots are graphical tools used to assess if a dataset follows a particular distribution, such as the normal distribution. They work by plotting the quantiles of the data against the quantiles of the theoretical distribution. If the dataset follows the theoretical distribution, the points should lie approximately along a straight line (often called the line of identity).\n\nIn a Q-Q plot:\n\nThe x-axis represents the theoretical quantiles from the normal distribution.\n\nThe y-axis represents the ordered values (quantiles) from the dataset being tested.\n\nWe continue with creating the Q-Q plot for our SPY daily returns from 2018 to 2023.\n\n# QQ plot of SPY daily returns\n\nplt.figure(figsize=(4, 2.5))\n\nstats.probplot(daily_returns, dist=\"norm\", plot=plt)\n\nplt.title(f'Q-Q Plot of SPY Daily Returns ({start_year} - 2023)'); plt.tight_layout(); plt.show()\n\nThe Q-Q plot compares the quantiles of our data (SPY daily returns) to the quantiles of a normal distribution. If the returns are normally distributed, the points should roughly lie on the 45-degree red line. Deviations from this line suggest departures from normality.\n\nLooking at the generated Q-Q plot of SPY daily returns:\n\nThe blue points represent the actual quantiles of the SPY daily returns plotted against the theoretical quantiles of a standard normal distribution.\n\nThe red line represents the ideal situation where the sample quantiles perfectly match the theoretical quantiles of a normal distribution.\n\nThe plot indicates that while the central part of the dataset (between about -2 and 2 on the theoretical quantiles) appears to follow the red line quite closely, suggesting normal distribution characteristics in that range, the tails of the distribution (the ends of the dataset) deviate from the line significantly. The lower tail (left side) shows that the smallest values are more extreme than what would be expected for a normal distribution, and the upper tail (right side) shows that the largest values are also more extreme than expected.\n\nThe Q-Q plot tells us that the daily returns of the SPY index exhibit heavier tails than a normal distribution, which is a common characteristic of financial return data known as \"fat tails\" or \"leptokurtosis.\" These fat tails indicate a higher occurrence of extreme events (both negative and positive returns) than would be predicted by a normal distribution. This finding challenges the assumption that stock returns are normally distributed, especially in terms of the behavior of extreme values, and suggests that the distribution of daily returns is likely to be leptokurtic.\n\nShapiro-Wilk Test\n\nThe Shapiro-Wilk test is used to test if a sample comes from a normally distributed population. It is one of the most powerful tests for normality, especially for small sample sizes, although it can be used for moderately large sample sizes up to 5,000 datapoints.\n\nThe test returns a W statistic and a p-value.\n\nThe W statistic is the test statistic used in the Shapiro-Wilk test, which measures how closely the data correspond to a normal distribution. A W value close to 1 indicates that the data are likely normally distributed.\n\nA high p-value suggests the data do not significantly diverge from normality, meaning there's no strong reason to reject the null hypothesis that the data are normal. Conversely, a low p-value indicates a significant deviation from normality, leading to the rejection of the null hypothesis. In practice, if the p-value falls below a predefined threshold (often 0.05), it is taken as evidence against the data's normality. Not rejecting the null hypothesis doesn't definitively confirm normality - it merely implies that the data does not show strong enough evidence of non-normality.\n\nshapiro_stat, shapiro_p = stats.shapiro(daily_returns)\n\nprint(f\"Shapiro-Wilk Test for SPY Daily Returns ({start_year} - 2023):\")\n\nprint(\n\nÂ Â Â Â f\"W statistic:\\t{shapiro_stat:.4f}p-value:\\t{shapiro_p}\"\n\n)\n\nif shapiro_p < 0.01:\n\nÂ Â Â Â print(f\"p < 0.01: data does not originate from normally distributed population\")\n\nelse:\n\nÂ Â Â Â print(f\"p < 0.01: data originates from normally distributed population\")\n\nShapiro-Wilk Test for SPY Daily Returns (2018 - 2023):\n\nW statistic: 0.8907\n\np-value: 2.156638108052502e-31\n\np < 0.01: data does not originate from normally distributed population\n\nTest Statistic (0.8907): This value indicates the degree of fit between the data and a normal distribution; values closer to 1 suggest a closer fit. A value of 0.8907 suggests some deviation from normality.\n\np-value (2.16e-31): This extremely small p-value (practically 0 when considering numerical precision) provides very strong evidence against the null hypothesis that the data are normally distributed. Therefore, we conclude that the SPY daily returns from 2018 to 2023 do not come from a normally distributed population. The data are significantly different from a normal distribution.\n\nLet's examine the implications of overlooking our discovery that SPY returns do not adhere to a normal distribution, while applying a one-sample t-test to determine if the average of SPY daily returns significantly deviates from 0. This approach involves using a statistical test, which presupposes normally distributed data, on a dataset that, in reality, does not follow a normal distribution, to assess if the mean return differs from 0.\n\n# One-sample t-test on the daily returns\n\nt_stat, t_p = stats.ttest_1samp(daily_returns, 0)\n\nprint(f\"One-sample t-test on SPY Daily Returns ({start_year} - 2023):\")\n\nprint(f\"t-statistic:\\t{t_stat:.4f}p-value:\\t{t_p}\")\n\nOne-sample t-test on SPY Daily Returns (2018 - 2023):\n\nt-statistic: 1.5954\n\np-value: 0.11084172033526497\n\n# Calculate total return of SPY over the period\n\ntotal_return = (data['Adj Close'][-1] / data['Adj Close'][0] - 1) * 100\n\nprint(f\"SPY total return (2018 to 2023): {total_return:.2f}%\")\n\nSPY total return (2018 to 2023): 95.54%\n\nt-statistic (1.5954): This positive value indicates that the mean of the SPY daily returns is above 0 for testing against no change in returns. However, the magnitude of the t-statistic suggests a moderate difference.\n\np-value (0.11084179870334748): This p-value is greater than the common alpha levels (e.g., 0.05, 0.01), indicating that there is not enough statistical evidence to reject the null hypothesis at these significance levels.\n\nBased on this test, we cannot conclude that the average daily return significantly deviates from 0. We would incorrectly conclude that the market, as represented by SPY, has not consistently gained or lost value over this period based on daily returns, at least not to a statistically significant degree. However, looking at the total return of the index from 2018 to 2023, we find a total return of 95.54%, indicating a substantial gain. This discrepancy highlights the importance of checking the assumptions of statistical tests before drawing conclusions. Given the non-normality of the data, the conclusions drawn from the t-test should be approached with caution. For data that do not meet the normality assumption, non-parametric tests or transformations could provide more reliable insights into the data's characteristics.\n\nEqual Variance\n\nEqual variance, also known as homoscedasticity, describes a situation where different datasets have the same variance or spread. It is a common assumption in various statistical tests, including t-tests and analysis of variance (ANOVA).\n\nWhen data exhibit equal variance, it means that the variability or dispersion around the mean is consistent across all groups being compared, regardless of the group means. This uniformity in variance is crucial for certain parametric tests because these tests rely on the assumption of equal variance to accurately estimate the sampling distribution and, consequently, to provide valid p-values and confidence intervals.\n\nThere are several statistical tests designed to assess whether the assumption of equal variance holds across groups, including:\n\nLevene's Test: Useful for testing equality of variances when the data may not be normally distributed.\n\nBrown-Forsythe Test: Similar to Levene's test but uses medians instead of means, making it robust to outliers.\n\nBartlett's Test: More appropriate for data that are normally distributed but sensitive to deviations from normality.\n\nF-test: Assumes normally distributed data and compares the ratio of the variances of two samples to determine if they are significantly different.\n\nIf the assumption of equal variance is violated, alternative approaches or adjustments may be necessary, such as using different versions of statistical tests that do not assume equal variance (e.g., Welch's t-test instead of the standard t-test) or transforming the data to stabilize the variance.\n\nDaily Stock Returns of SP100 Companies\n\n# Crawl list of SP100 constituents from Wikipedia\n\nimport requests\n\nresponse = requests.get( \"https://en.wikipedia.org/wiki/S%26P_100\")\n\ntables = pd.read_html(response.text)\n\nsp100 = tables[2]\n\nsp100['Symbol'] = sp100['Symbol'].str.replace(\".\", \"-\")\n\nsp100\n\nOut[Â ]:\n\nSymbolNameSector0AAPLAppleInformation Technology1ABBVAbbVieHealth Care2ABTAbbottHealth Care3ACNAccentureInformation Technology4ADBEAdobeInformation Technology............96VVisaInformation Technology97VZVerizonCommunication Services98WFCWells FargoFinancials99WMTWalmartConsumer Staples100XOMExxonMobilEnergy\n\n101 rows Ã 3 columns\n\nimport yfinance as yf\n\nticker_list = sp100['Symbol'].to_list()\n\nticker_list.append('SPY')\n\nstart_year = 2018\n\nprice_data = yf.download(ticker_list, start=f'{start_year}-01-01', end='2023-12-31')\n\nprice_data_daily_returns = price_data['Adj Close'].pct_change().dropna() * 100\n\n[*********************100%%**********************] 102 of 102 completed\n\nfig, ax = plt.subplots(3, 2, figsize=(6, 6))\n\nfor i, stock in enumerate(['SPY', 'AAPL', 'WMT']):\n\nÂ Â Â Â left, right = ax[i]\n\nÂ Â Â Â left.hist(price_data_daily_returns[stock], bins=100, alpha=0.5)\n\nÂ Â Â Â stats.probplot(price_data_daily_returns[stock], dist=\"norm\", plot=right)\n\nÂ Â Â Â right.get_lines()[0].set_markersize(2.0); right.get_lines()[0].set_color('tab:blue')\n\nÂ Â Â Â left.set_title(f'{stock} - Daily Returns'); right.set_title(f'{stock} - Q-Q Plot')\n\nÂ Â Â Â left.set_ylabel('Frequency'); left.set_xlabel('Daily Returns (%)')\n\nfig.suptitle(f'Daily Returns Histogram & Q-Q Plots ({start_year}-2023)', y=1.0)\n\nplt.tight_layout(); plt.show()\n\nLevene's Test\n\nLevene's test is used to assess the equality of variances across different groups. It's designed to test if all input samples come from populations with equal variances, without assuming a normal distribution for those populations.\n\naapl_daily_returns = price_data_daily_returns[\"AAPL\"]\n\nwmt_daily_returns = price_data_daily_returns[\"WMT\"]\n\n# Levene's test for equal variances\n\nlevene_stat, levene_p = stats.levene(aapl_daily_returns, wmt_daily_returns)\n\nprint(\"Levene's Test for Equal Variances:\")\n\nprint(f\"test statistic:\\t{levene_stat:.3f}p-value:\\t{levene_p}\")\n\nif levene_p < 0.01:\n\nÂ Â Â Â print(f\"p < 0.01: variances are significantly different.\")\n\nÂ Â Â Â print(f\"Interpretation: Use non-parametric tests or Welch's t-test for unequal variances\")\n\nelse:\n\nÂ Â Â Â print(f\"p > 0.01: variances are equal\")\n\nÂ Â Â Â print(f\"Interpretation: Use parametric tests for equal variances\")\n\nLevene's Test for Equal Variances:\n\ntest statistic: 106.564\n\np-value: 1.7836047743809876e-24\n\np < 0.01: variances are significantly different.\n\nInterpretation: Use non-parametric tests or Welch's t-test for unequal variances\n\nF-Test\n\nThe F-test for equality of variances, also known as the F-test for homogeneity of variances, is a statistical procedure used to determine if two populations have the same variance. It's important to note that the F-test assumes that both groups are sampled from normally distributed populations. If the normality assumption is violated, the results of the F-test may not be reliable. In such cases, other tests like Levene's test are preferred because they are less sensitive to departures from normality. Additionally, the F-test is typically used only for comparing two groups; for more than two groups, ANOVA would be the appropriate technique to test for equal variances.\n\n# Conducting an F-test for equal variances\n\nvar_original = np.var(aapl_daily_returns, ddof=1)\n\nvar_cloned = np.var(wmt_daily_returns, ddof=1)\n\nF = var_original / var_cloned\n\ndf1 = len(aapl_daily_returns) - 1 # degrees of freedom for the first sample\n\ndf2 = len(wmt_daily_returns) - 1 # degrees of freedom for the second sample\n\nF_p_value = (\n\nÂ Â Â Â 1 - stats.f.cdf(F, df1, df2)\n\nÂ Â Â Â if var_original > var_cloned\n\nÂ Â Â Â else stats.f.cdf(F, df1, df2)\n\n)\n\nprint(\"F-test for Equal Variances:\")\n\nprint(f\"test statistic:\\t{F:.3f}p-value:\\t{F_p_value}\")\n\nif F_p_value < 0.01:\n\nÂ Â Â Â print(f\"p < 0.01: variances are significantly different\")\n\nÂ Â Â Â print(f\"Interpretation: Use non-parametric tests or Welch's t-test for unequal variances\")\n\nelse:\n\nÂ Â Â Â print(f\"p > 0.01: variances are equal\")\n\nÂ Â Â Â print(f\"Interpretation: Use parametric tests for equal variances\")\n\nF-test for Equal Variances:\n\ntest statistic: 2.075\n\np-value: 1.1102230246251565e-16\n\np < 0.01: variances are significantly different\n\nInterpretation: Use non-parametric tests or Welch's t-test for unequal variances\n\nStatistical Tests\n\nWelcht's t-test\n\n# Set equal_var=False to indicate that we do not assume equal population variances\n\nt_stat, p_value = stats.ttest_ind(aapl_daily_returns, wmt_daily_returns, equal_var=False)\n\nprint(\"Welch's t-test for AAPL and WMT Daily Returns:\")\n\nprint(f\"t-statistic:\\t{t_stat:,.3f}p-value:\\t{p_value:.6f}1\")\n\nif p_value < 0.01:\n\nÂ Â Â Â print(f\"p < 0.01: distributions are significantly different\")\n\nelse:\n\nÂ Â Â Â print(f\"p > 0.01: distributions are not significantly different\")\n\nWelch's t-test for AAPL and WMT Daily Returns:\n\nt-statistic: 1.201\n\np-value: 0.2300541\n\np > 0.01: distributions are not significantly different\n\nMann-Whitney U Test\n\n# Mann-Whitney U test\n\n# The alternative parameter specifies the hypothesis to test; 'two-sided' tests the hypothesis\n\n# that the distributions are different (not specifying whether one is greater than the other).\n\n# If you have a directional hypothesis, you can use 'greater' or 'less' instead.\n\nu_statistic, p_value = stats.mannwhitneyu(\n\nÂ Â Â Â aapl_daily_returns, wmt_daily_returns, alternative=\"two-sided\"\n\n)\n\nprint(\"Mann-Whitney U Test for AAPL and WMT Daily Returns:\")\n\nprint(f\"t-statistic:\\t{u_statistic:,.3f}p-value:\\t{p_value:.6f}1\")\n\nif p_value < 0.01:\n\nÂ Â Â Â print(f\"p < 0.01: distributions are significantly different\")\n\nelse:\n\nÂ Â Â Â print(f\"p > 0.01: distributions are not significantly different\")\n\nMann-Whitney U Test for AAPL and WMT Daily Returns:\n\nt-statistic: 752,986.000\n\np-value: 0.0985831\n\np > 0.01: distributions are not significantly different\n\n# Calculate AAPL total return and WMT total return\n\naapl_total_return = (price_data['Adj Close']['AAPL'][-1] / price_data['Adj Close']['AAPL'][0] - 1) * 100\n\nwmt_total_return = (price_data['Adj Close']['WMT'][-1] / price_data['Adj Close']['WMT'][0] - 1) * 100\n\nprint(f\"AAPL total return (2018 to 2023): {aapl_total_return:.2f}%\")\n\nprint(f\"WMT total return (2018 to 2023): {wmt_total_return:.2f}%\")\n\nAAPL total return (2018 to 2023): 372.78%\n\nWMT total return (2018 to 2023): 77.89%\n\nCorrelations\n\nPearson Correlation\n\n# Calculate Pearson's correlation coefficient\n\ncorrelation_coefficient, p_value = stats.pearsonr(aapl_daily_returns, wmt_daily_returns)\n\nprint(\"Pearson's Correlation Coefficient for AAPL & WMT Daily Returns:\")\n\nprint(f\"r:\\t\\t{correlation_coefficient:.3f}p-value:\\t{p_value}\")\n\nPearson's Correlation Coefficient for AAPL & WMT Daily Returns:\n\nr: 0.390\n\np-value: 4.503405572247887e-45\n\n# Filter price_data_daily_returns to only include 5 stocks for each sector in SP100\n\nsectors = sp100['Sector'].unique()\n\nsector_stocks = []\n\nfor sector in sectors:\n\nÂ Â Â Â sector_stocks.extend(sp100[sp100['Sector'] == sector]['Symbol'].to_list()[:5])\n\nprice_data_daily_returns_sector = price_data_daily_returns[sector_stocks]\n\nimport seaborn as sns\n\npearson_correlation_matrix = price_data_daily_returns_sector.corr(method='pearson')\n\nplt.figure(figsize=(9, 7))\n\nsns.heatmap(pearson_correlation_matrix, annot=False, cmap='coolwarm', cbar=True)\n\nplt.title(\"Pearson's Correlation Matrix for Daily Stock Returns\")\n\nplt.yticks(rotation=0); plt.tight_layout(); plt.show()\n\nThe matrix shows the correlation coefficients between pairs of variables in the dataset. These coefficients range from -1 to 1, where:\n\n1 indicates a perfect positive linear relationship,\n\n-1 indicates a perfect negative linear relationship, and\n\n0 indicates no linear relationship.\n\nThe heatmap visualization makes it easy to identify the strength and direction of relationships between the variables. For example, you can see how 'Variable1' correlates with 'Variable2', 'Variable3', and 'Variable4', and so on for each pair of variables. The color scale aids in quickly identifying strong and weak correlations.\n\nSpearman's Rank Correlation\n\n# Calculate Spearman's rank correlation coefficient\n\nrank_correlation_coefficient, rank_p_value = stats.spearmanr(aapl_daily_returns, wmt_daily_returns)\n\nprint(\"Spearman's Rank Correlation Coefficient for AAPL & WMT Daily Returns:\")\n\nprint(f\"r:\\t\\t{rank_correlation_coefficient:.3f}p-value:\\t{rank_p_value}\")\n\nSpearman's Rank Correlation Coefficient for AAPL & WMT Daily Returns:\n\nr: 0.315\n\np-value: 4.3214224570231754e-29\n\nspearman_correlation_matrix = price_data_daily_returns_sector.corr(method='spearman')\n\nplt.figure(figsize=(9, 7))\n\nsns.heatmap(spearman_correlation_matrix, annot=False, cmap='coolwarm', cbar=True)\n\nplt.title(\"Spearman's Rank Correlation Matrix for Daily Stock Returns\")\n\nplt.yticks(rotation=0); plt.tight_layout(); plt.show()"
    }
}