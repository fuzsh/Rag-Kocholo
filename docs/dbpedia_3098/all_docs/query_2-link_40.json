{
    "id": "dbpedia_3098_2",
    "rank": 40,
    "data": {
        "url": "https://yoast.com/advanced-technical-seo-social-image-ogimage-tags/",
        "read_more_link": "",
        "language": "en",
        "title": "How social image sharing works and how to optimize your og:image tags",
        "top_image": "https://yoast.com/app/uploads/2018/04/Social_image_sharing_optimizing_og_tags_Jono_FB.jpg",
        "meta_img": "https://yoast.com/app/uploads/2018/04/Social_image_sharing_optimizing_og_tags_Jono_FB.jpg",
        "images": [
            "https://yoast.com/app/themes/yoast-theme/images/logo-diap.svg",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/yoast_seo.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/yoast_seo_shopify.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/wordpress_plugins-1.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/features.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/highlight_premium.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/seo_academy.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/free_courses.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/seo_basics.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/ultimate_guides.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/highlight_webinars.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/content_seo.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/technical_seo.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/product_news.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/wp_core_blog.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/dev_blog.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/highlight_newsletter.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/wp_plugin_help.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/shopify_app_help.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/knowledge_base.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/dev_docs.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/highlight_support.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/company.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/wp_community.png",
            "https://yoast.com/cdn-cgi/image/width=40%2Cheight=40%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2022/09/giving_back.png",
            "https://yoast.com/cdn-cgi/image/width=400%2Cheight=210%2Cfit=scale-down%2Cf=auto%2Cquality=75%2Conerror=redirect/app/uploads/2016/08/Product_images_FI.png",
            "https://yoast.com/cdn-cgi/image/width=75,height=75,fit=contain,f=auto,onerror=redirect/app/uploads/2020/11/yoast_seo.png",
            "https://yoast.com/app/uploads/2022/09/g2_logo_white_rgb.svg",
            "https://yoast.com/app/uploads/2022/06/star-rating-star.svg",
            "https://yoast.com/app/uploads/2022/06/star-rating-star.svg",
            "https://yoast.com/app/uploads/2022/06/star-rating-star.svg",
            "https://yoast.com/app/uploads/2022/06/star-rating-star.svg",
            "https://yoast.com/app/uploads/2022/06/star-rating-half.svg",
            "https://yoast.com/app/uploads/2018/04/Star_Wars-203x300.jpg",
            "https://yoast.com/app/uploads/2018/04/FB_plugin_SEO.jpg",
            "https://yoast.com/app/uploads/2018/04/HTML_overview-1-250x281.jpg",
            "https://yoast.com/app/uploads/2018/04/Selection_FB-235x300.jpg",
            "https://yoast.com/app/uploads/2018/04/National_Geographic-250x253.jpg",
            "https://yoast.com/app/uploads/2018/04/Test_page_Jono.jpg",
            "https://yoast.com/app/uploads/2018/04/Article_Forbes.jpg",
            "https://yoast.com/app/uploads/2018/04/Example_share_link-250x195.jpg",
            "https://yoast.com/app/uploads/2018/04/Structured_data_FB.jpg",
            "https://yoast.com/app/uploads/2018/04/Test_page_JA.jpg",
            "https://yoast.com/app/uploads/2018/04/Image_test_page_Jono.jpg",
            "https://yoast.com/cdn-cgi/image/width=319%2Cheight=167%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/themes/yoast-theme/images/events-overview.jpg",
            "https://yoast.com/cdn-cgi/image/width=319%2Cheight=167%2Cfit=crop%2Cf=auto%2Conerror=redirect/app/uploads/2023/08/team_yoast_update_sept_23.png",
            "https://secure.gravatar.com/avatar/2f90c4c3f5214c71dbd528816c8c7dfb?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/14c1897f3dccdca0fec3cd0a687c1818?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/b6a4a45917dc262035b580626dfdf367?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/3c0f927b81be792931bb92735ef26fa7?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/9745bca4815e30f888b3d84f31d61d62?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/141ced34d36b08ae93437bc019265374?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/a2bdfb8c0d221b153115a5a9b724b9fb?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/51e21e2e3e9cfaaa64d976ae1114d038?s=70&d=mm&r=g",
            "https://secure.gravatar.com/avatar/066ac16c0e85b5d6a64b856f4fea8234?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/51e21e2e3e9cfaaa64d976ae1114d038?s=70&d=mm&r=g",
            "https://secure.gravatar.com/avatar/9f65c3987f29412c6a7b49fe73414820?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/51e21e2e3e9cfaaa64d976ae1114d038?s=70&d=mm&r=g",
            "https://secure.gravatar.com/avatar/f2dc12120c26b148fe93ca16e51af1cf?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/46df0eb9417ffa04ced8a1dbf78d6b39?s=100&d=mm&r=g",
            "https://secure.gravatar.com/avatar/51e21e2e3e9cfaaa64d976ae1114d038?s=70&d=mm&r=g"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Jono Alderson",
            "www.facebook.com",
            "jono.alderson"
        ],
        "publish_date": "2018-04-30T13:36:14+00:00",
        "summary": "",
        "meta_description": "Optimizing how content looks when it’s shared on social media has many benefits. But it's not as simple as just picking a great social image!",
        "meta_lang": "en",
        "meta_favicon": "https://yoast.com/images/yoast_icon_32x32.ico",
        "meta_site_name": "Yoast",
        "canonical_link": "https://yoast.com/advanced-technical-seo-social-image-ogimage-tags/",
        "text": "Optimizing how your content looks when it’s shared on third-party platforms like Facebook, Twitter or WhatsApp can drive improved visibility, clickthrough, and conversions. But it’s not as simple as just picking a great social image and adding it to your page…\n\nWhen you share a URL on Facebook, Twitter, or other platforms, they’ll typically show a preview of the page, with a title, description, and image. These elements are typically taken from Open Graph tags defined in the source code of the page you’re sharing.\n\nHow does this work?\n\nThe way in which this works is defined by the Open Graph Protocol. This is an open source standard (like WordPress, and even the Yoast SEO plugin), which allows webmasters to tell third-party systems about their pages. Third-party systems like Facebook, Twitter, Pinterest, or even WhatsApp, Skype or Hotmail.\n\nIt defines a set of meta tags which allow you to provide information about the type of content on a page (e.g., “this is a page about a movie”), metadata about that thing (e.g., “it’s called Star Wars – The Last Jedi”), and how it should be presented when shared.\n\nThey look like something this:\n\n<meta property=\"og:title\" content=\"Star Wars - The Last Jedi\" /> <meta property=\"og:type\" content=\"video.movie\" /> <meta property=\"og:url\" content=\"https://www.imdb.com/title/tt2527336/\" /> <meta property=\"og:image\" content=\"https://ia.media-imdb.com/images/M/MV5BMjQ1MzcxNjg4N15BMl5BanBnXkFtZTgwNzgwMjY4MzI@._V1_SY1000_CR0,0,675,1000_AL_.jpg\" /> <meta property=\"og:image:width\" content=\"675\" /> <meta property=\"og:image:height\" content=\"1000\" />\n\nMost websites (and those running the Yoast SEO plugin) automatically output elements like these for all pages, posts and archives.\n\nThe og:image tags are particularly important because Open Graph tags most commonly play a role in social sharing dialogues. This tag defines the picture which shows up when users share your content across social networks, apps, and other systems. Optimizing the composition, dimensions, and even the file size of the social image you use can influence whether somebody clicks and the quality of their experience.\n\nUsing social images that are too large, too small, or in the wrong dimensions can result in errors, or in platforms omitting your images entirely. But optimizing your Open Graph markup isn’t as simple as just picking a good social image. There are some complexities around how different platforms use these tags, treat your images, and support different rules.\n\nTL;DR\n\nIt’s impossible to specify different images/formats/files for different networks, other than for Facebook and Twitter. The Facebook social image is used, by default, for all other networks/systems. This is a limitation of how these platforms work. The same goes for titles and descriptions.\n\nThe Yoast SEO plugin will automatically try and specify the best social image for each platform where you share your content, based on the constraints of these platforms.\n\nThe image size and cropping won’t always be perfect across different platforms, as the way in which they work is inconsistent.\n\nSpecifically, your social images should look great on ‘broadcast’ platforms like Facebook and Twitter but might sometimes crop awkwardly on platforms designed for 1:1 or small group conversations, like WhatsApp or Telegram.\n\nFor best results, you should manually specify og:image tags for each post, through the plugin. You should ensure that your primary og:image is between 1200x800px and 2000x1600px, and is less than 2mb in size.\n\nWe’ll be adding developer support for more advanced customization via theme functions and filters.\n\nIt’s not as simple as just picking a good social image\n\nEven though Open Graph tags use an open standard, each platform treats Open Graph tags slightly differently. Some even have their own proprietary ‘versions’ of Open Graph tagging, too. Twitter’s ‘twitter card’ markup, for example, bears a strong resemblance to, and overlaps with, Open Graph tagging.\n\nAs an open project, the Open Graph constantly changes and improves too. Features and support come and go, the documentation isn’t always up to date, and individual platforms make (and change) their own decisions on how they interpret it, and which bits they implement.\n\nThe number of platforms keeps increasing\n\nAnd as the web itself continues to evolve, there are more and more ‘platforms’ where people share content. And where the Open Graph is used. From Slack to WeChat, to tomorrow’s productivity and social media apps. They all rely on the Open Graph but use it in subtly different ways.\n\nOn modern mobile phone handsets, even your SMS messages frequently source open graph titles and images from URLs they reference. With their own proprietary approaches to (and opinions on) formats and sizes.\n\nHow does the Yoast SEO plugin deal with this?\n\nSo when we try to define a ‘best practice’ approach to support with our plugin, it’s not as simple as picking the ‘best social image’. We need to make sure that we provide the right tags and image formats for each platform and network.\n\nTo make things more complex, these tags and approaches sometimes conflict with or override each other. Twitter’s twitter:image property, for example, overrides an og:image value for images shared via Twitter, when both sets of tags are on the same page.\n\nLastly, the open graph specification allows us to provide multiple og:image values. This, in theory, allows the platform to make the best decision about which size to use. And allows people who share some choice over which social image they pick. How different platforms interpret these values, however, varies considerably.\n\nThis logic behind which platforms use which social images, in which scenarios, gets complex pretty quickly! So more often than not, we’re stuck relying on the og:image value(s) as a general default for all platforms. And adding specific support where we can, whilst trying to minimize conflict. This doesn’t always produce perfect results. So we’re always on the lookout for better ways to ‘get it right’. Without requiring end-users to spend hours specifying multiple social image formats for each post they write.\n\nThe challenge of og:image as a default\n\nIn a perfect world, there are two different approaches to how platforms handle Open Graph tagging. They look like this:\n\nAll platforms only use og:image tags. When multiple images are set, they automatically select (and crop) the best version for their context.\n\nAll platforms have specific Open Graph tags (or their own versions). They allow fine-grain control over every scenario. By enabling us to specify the exact image which should be used in each case.\n\nUnfortunately, we’re stuck somewhere in-between. Some platforms allow a degree of control, but the og:image tag functions as a general fallback for all other scenarios.\n\nThis is particularly problematic, as the og:image is also Facebook’s primary image. This is a huge challenge for the Yoast SEO plugin team. And anybody else trying to define a ‘best practice’ approach to tagging. The image we specify as the main social image for Facebook sharing (usually a large, high-res picture) also has to be suitable as a general default for all platforms that don’t have their own specific tags.\n\nIs Facebook’s social image the answer?\n\nFor many of these platforms, a large file size optimized for sharing in a Facebook newsfeed isn’t appropriate for their context. For example, Pinterest expects a relatively small, square cropped thumbnail image when sharing from a page – and whilst it has its own tagging mechanisms, the presence of an og:image tag on the page overrides those.\n\nThere’s more complexity, too. Different platforms have varying restrictions on image dimensions, ratios, and file size. A high-res og:image optimized for Facebook (with a large file size) will, more often than not, not display at all when someone shares it on Slack, for example.\n\nFrequently, Yoast SEO has to share the same default og:image between multiple platforms. Even though they have different expectations and apply different rules and treatments. Trying to work out what the ‘default’ image tag(s) should be when it has to be the main image for Facebook and a universal default, is tricky. But it’s a problem that needs solving if we want to provide a best practice ‘default’ setting for WordPress users.\n\nThere are lots of unknowns\n\nThere are often gaps in our knowledge. Because each platform maintains its own rules and documentation on how they treat og:image tags. Specific restrictions, edge cases, and in particular, information on which rules override other rules, are rarely well-documented. The documentation which does exist is often ambiguous at best. Google+ “snippet” documentation, for example, states that they won’t use images which are “not square enough”. It’s unclear what this means in specific, technical terms.\n\nIn order to determine the best universal approach to image sharing markup, we had to do some digging and experimentation.\n\nWe were particularly interested in understanding how different platforms react to the presence of multiple og:image tags. If we can specify more than one image, and different platforms handle that differently, perhaps there’s a way in which we can get them to pick the most suitable image for their needs.\n\nWhat we found\n\nThe way in which different platforms handle og:image tags (and in particular, multiple og:image tags) is often inconsistent. And frequently complex. Thankfully, most small platforms and apps simply crop and use the og:image tag (or the first og:image tag, if there are multiple in the set), and apply some reasonable constraints around dimensions, ratio, and file size. Some of the larger and more popular platforms, however, exhibit some particularly challenging behaviors, which complicate matters.\n\nHere are some examples of the undocumented behaviors we’ve discovered. Note that we’ve not talked about platforms that simply pick the first og:image tag, and that don’t exhibit any other ‘odd’ behavior). If you find any other undocumented features or behaviors which we haven’t covered or supported (or if we’ve made any mistakes in our research), we’d love to hear from you!\n\nFacebook\n\nWhen multiple og:image tags are specified, Facebook uses the first tag in the set. This is in line with their documentation, but contrary to popular opinion (which assumes that the largest valid image is chosen). It’s also interesting to note that it uses the first image even if it’s invalid/broken.\n\nAdditional images are available for selection by the user at the point of sharing (on desktop only). Images are hard-cropped and sized to fit the sharing dialogue window, based on the size of the window.\n\nInstagram\n\nInstagram behaves similarly to Facebook, except that it will only show an image preview for ‘small’ images (if the image file size is smaller than 300KB, and the dimensions are ~256×256 – though we’ve seen up to 400×400 work). Plus it only supports JPG and PNG formats.\n\nTwitter\n\nTwitter uses the last image in an og:image set, unless a twitter:image tag exists. Using the twitter:image tag allows us to control Twitter images independently of all other types. But this unfortunately doesn’t allow us to specify multiple values (to accommodate for different tweet contexts/layouts).\n\nTo add some complexity, Twitter supports multiple card layouts, which can be defined in a twitter:card tag. The default value is ‘summary’ (1:1 ratio). But it’s also possible to specify ‘summary_large_image’ for a larger, full-width image (2:1) ratio.\n\nUnhelpfully, Twitter’s documentation shows the same layout for both card versions (summary, summary with large image).\n\nInterestingly, Twitter used to support a ‘gallery’ type of card which held multiple images. However, they deprecated this into the ‘summary with large image’ card some time ago.\n\nWhatsApp\n\nWhatsApp also uses the last image in the og:image set, which it hard crops to a small square. Note that, this appears to accept enormous images, both in terms of file size and dimensions; this red square is cropped from a 10000×10000, 1.49mb image.\n\nSkype\n\nTakes the first og:image, but caches it seemingly permanently (both locally and in the cloud). Making it impossible to change/update an image thumbnail for a URL (without, e.g., manipulating the og:url value to include cache-busting elements).\n\nLinkedIn\n\nFrustratingly, if there’s oembed functionality enabled on a page (as is often the case with WordPress sites), LinkedIn with often retrieve the values from that embed code. Rather than any on-page values.\n\nThis took some rather painful debugging. But we were thankfully able to fix the problem in Yoast SEO by also rewriting the oembed values to match the on-page values (or disabling / conditionally routing oembed).\n\nTelegram\n\nTakes values from Facebook’s cache (typically the first og:image in a set). Cached images can be updated by messaging the Telegram bot (as a Telegram user) with up to 10 URLs. Note, caches only be updated if a page’s <html> tag contains a prefix=”og: http://ogp.me/ns#” attribute.\n\nPinterest\n\nPinterest’s documentation mentions that they “support” up to six og:image tags. However, sharing the page only ever utilizes the first* image in the set.\n\nThey also support marking up inline images through Schema.org markup. However, when an og:image tag is present on the page (which is almost always the case), it uses this instead.\n\nThere’s also some ambiguity around the difference between how they handle Open Graph data with ‘article pins’ vs ‘rich pins’. The latter is an ‘upgraded’ version which displays more information on the card. But using these requires the site owner to validate their domain.\n\n*There’s an edge-case where, if there are more than six images in the array, the sharing dialogue periodically seems to choose the seventh value (and there’s some other weirdness depending on the total number of images in the array).\n\nWhat we’ve considered, and our decisions\n\nThat’s a lot of moving parts. We need to compare all of these rules and decide which og:image tags we output for any given post or page, on any given WordPress site running the Yoast SEO plugin. That means optimizing for the most common and general use-cases, without breaking too many edge-cases. It also means providing tools, hooks, and filters in WordPress to allow users with special requirements to alter the behavior to meet their particular needs.\n\nWhich brings us to our decision\n\nThat’s why we’re choosing to optimize the first image in the og:set for large, high-resolution sharing. The kind which Facebook supports and requires. But which causes issues with networks which expect a smaller image (like Instagram, or Telegram) sharing.\n\nWhilst you could argue that Facebook might not necessarily wield the influence and domination that it used to, it’s undoubtedly still a significant platform in terms of audience size, and a place where page/post sharing is prolific. And where the quality/treatment of the image is critical to click through.\n\nGiven that both Facebook, and most platforms’ default is the first og:image tag in a set, we must ensure that this image is a large, high-quality image (with a suitable aspect ratio for Facebook). Unfortunately, this approach has some side-effects. There’ll be many cases where the image used is too large for Instagram (and other platforms which expect small thumbnails) to feature in shared post links.\n\nSometimes you have to compromise\n\nWe’re not completely happy with this as a solution, but it’s the best compromise we can come up with. As an aside, we also believe that, in its current state, Open Graph markup is a bit broken. We think that it feels intuitively right that the first and default og:image in a set should be a high quality, high-resolution image – and that it’s the responsibility of the platform to crop this down appropriately, or to use secondary/smaller og:images, or to provide their own markup/solutions.\n\nIdeally, Open Graph tags would inherit some of the kinds of thinking behind CSS media queries, where you can specify the different screen widths at which different sets of logic apply. We’ll be seeking to lobby and work with the various platforms to improve their support and collaboration in the coming months and years.\n\nUser context is an important factor\n\nWe also think that this compromise makes more sense than optimizing for smaller images. This is because the context in which smaller thumbnails are used is different.\n\nWe believe that individuals sharing URLs in one-to-one chat, or in small groups (e.g., in WhatsApp), are less likely to be negatively affected by a missing (or awkwardly sized/cropped) image. They’re usually chatting, engaged, and know the sender.\n\nIn the context of a newsfeed, like on Facebook or Twitter, the quality of the image is much more important. You’re scrolling through lots of noise and you’re less engaged. So a better image is an increased chance of a click/share/like.\n\nIn the case of Pinterest, and other systems where your interest is the image itself, we believe that most interaction occurs directly on the image. Rather than from the page it’s on or a browser bookmarklet. Given this, we’re less concerned about Pinterest using the first og:image tag (which is a large image, optimized for Facebook) as a small, square thumbnail.\n\nThere’s an upper size limit to social images, too\n\nThe biggest image you can have (both in terms of file size and dimensions) varies by platform, too. Some platforms support huge images (Facebook allows images to be up to 8mb) – but they chop these down into smaller thumbnails depending on the context. Some have relatively small max sizes, like LinkedIn and Telegram’s 2mb limit.\n\nThis makes it even more challenging to determine what the ‘best’ image should be, and which images should feature in the og:image set. We want to show a large, high-resolution image, but not too large.\n\nIt’s particularly tricky to pick the best size with WordPress, where we’re not always sure what image sizes we’ll be working with. That’s because, when a user uploads an image to WordPress, their site creates multiple versions of that image with different sizes and cropping. Typically, these are the original ‘full’ size, and ‘large’ (1024x1024px), ‘medium_large’ (768px, cropped), ‘medium’ (300x300px) and ‘thumbnail’ (150x150px) versions. But these default sizes are often altered by WordPress theme or plugin code, and by server configuration – and frequently, some might be too large for general use.\n\nSome automatic restrictions to help you out\n\nBecause we need to make sure that the first og:image is suitable as a general default for as many platforms as possible, the Yoast SEO plugin evaluates post content, spots all of the images, and tries to pick the best size for each post. To get this right, we’ve evaluated the maximum file sizes and dimensions of a number of platforms, and we’ve set some automatic restrictions in the plugin.\n\nSpecifically:\n\nWhen the ‘full’ size image is over 2mb and/or over 2000 pixels on either axis, we’ll try and fall back to a smaller standard WordPress image size. Or scan the post content for an alternative.\n\nIf we can’t find a suitable smaller image, we’ll omit the og:image tag, in the hopes that the platform will select an appropriate alternative. Note that this may result in the image not appearing in some sharing contexts.\n\nIf the ratio exceeds 3:1 we’ll present a warnin (this is the maximum ratio for many networks).\n\nIn conclusion…\n\nWe don’t want our users to have to micromanage the details of how all of this works. Of course, when you’re producing great content for your audience, you should consider how that content appears on third-party platforms. But it should be as simple a matter of picking an appropriate image, and letting the system do the rest. From sizing and file management, to ensuring that the best version shows up when it’s shared in other locations. Because every platform follows its own rules, however, we’ve had to make some decisions which won’t please every user and won’t work for every scenario.\n\nFor most normal use-cases, we’d suggest that you manually set og:image values on your posts via the Yoast SEO plugin, and ensure that their dimensions are between 1200x800px and 2000x1600px (and that they’re less than 2mb in size).\n\nIf you disagree with the decisions we’ve made, or want to help us improve our solution; we’d love for you to get in touch. WordPress and Yoast SEO are both open source products – you can help by explaining your use-cases, reporting your bugs, and thinking about how a better solution might work.\n\nWe’d love to hear your thoughts; the Open Graph is a mess at the moment, and it’s up to all of us to fix it.\n\nSome additional technical details\n\nWe’ve taken some liberty in the og:image markup, and we’re aware that we’re adding quite a lot of weight and markup with this approach. Specifically, we’ll output HTML which looks something like this:\n\n<meta property=\"og:image\" content=\"https://www.example.com/main-image.jpg\" /> <meta property=\"og:image:secure_url\" content=\"https://www.example.com/main-image.jpg\" /> <meta property=\"og:image:height\" content=\"2000\" /> <meta property=\"og:image:width\" content=\"2000\" /> <meta property=\"og:image:alt\" content=\"A description of the image\" /> <meta property=\"og:image:type\" content=\"image/jpg\" />\n\n<meta property=\"og:image\" content=\"https://www.example.com/second-image.jpg\" /> <meta property=\"og:image:secure_url\" content=\"https://www.example.com/second-image.jpg\" /> <meta property=\"og:image:height\" content=\"800\" /> <meta property=\"og:image:width\" content=\"800\" /> <meta property=\"og:image:alt\" content=\"A description of the image\" /> <meta property=\"og:image:type\" content=\"image/jpg\" />\n\n<meta property=\"og:image\" content=\"https://www.example.com/third-image.jpg\" /> <meta property=\"og:image:secure_url\" content=\"https://www.example.com/third-image.jpg\" /> <meta property=\"og:image:height\" content=\"600\" /> <meta property=\"og:image:width\" content=\"400\" /> <meta property=\"og:image:alt\" content=\"A description of the image\" /> <meta property=\"og:image:type\" content=\"image/jpg\" />\n\n<meta property=\"og:image\" content=\"https://www.example.com/fourth-image.jpg\" /> <meta property=\"og:image:secure_url\" content=\"https://www.example.com/fourth-image.jpg\" /> <meta property=\"og:image:height\" content=\"256\" /> <meta property=\"og:image:width\" content=\"256\" /> <meta property=\"og:image:alt\" content=\"A description of the image\" /> <meta property=\"og:image:type\" content=\"image/jpg\" />\n\nNote the progression ‘down’ from ‘large, high-quality image’, through different media sizes (depending on the site/theme setup), ending at a universal ‘small’ size.\n\nWe’ll also output a twitter:image tag, alongside the other twitter:card requirements (unless you’ve chosen to disable it in the Yoast SEO plugin config).\n\nWe’ll likely continue to iterate and improve on the approach, but here’s our rationale behind some of our assumptions:\n\nThe og:image:type may not be strictly necessary in all cases, but there are many websites and server configurations where the images don’t have clean and recognizable ‘.jpg’ (or similar) file extensions. By making sure that we signpost the type of file, rather than making networks work it out, we reduce the risk of errors.\n\nFacebook’s documentation around how it uses secure_url tags is unclear, especially for sites which are fully HTTPS. However, in the case of video tags, it mentions explicitly that both tags are required, even if both feature the same HTTPS URL. As such, we’ll retain the secure_url tags even when your site and image are served over HTTPS.\n\nIt’s generally considered best practice to label images with descriptive alt attributes, in order to support users who rely on screen readers and assistive technologies. We believe that Open Graph image tags shouldn’t be any different. This tag is only output when your images are labeled, so we encourage you to write some descriptive text during your image upload workflow.\n\nOur 2mb file size limit aligns, incidentally, to the default upload size set in most WordPress implementations which run on ‘off the shelf’ hosting.\n\nOur 2000×2000 pixel size flag should be a suitable maximum for almost all websites and screen sizes. Most browsers on desktop monitors have a width of fewer than 2,000 pixels (4k monitors and upwards often use image scaling to prevent everything from looking tiny). It’s also rare for any sharing ‘thumbnail’ activity (e.g., a Facebook message preview box) to take up the full width of the screen.\n\nAs Google+ isn’t widely used, we chose not to add additional complexity to the Yoast SEO plugin by offering the ability to specify dedicated, schema-based image markup for Google+ images. In most cases, we believe that the default og:image should be a suitable option for Google+ sharing – though we’re keen to hear from you if you find that this is not the case.\n\nUnlike most other networks, WhatsApp supports SVG file formats. That means that, in theory, you could achieve optimal sharing for both WhatsApp and Facebook by setting your first og:image to be an SVG, and setting your second og:image as your full-res, large image. However. many other networks only read the first image, and won’t use the SVG file. SVG formats also come with a myriad of security risks, and so we’re not comfortable recommending their general use in this context.\n\nSome undocumented Facebook ‘features’\n\nIf you’re feeling particularly geeky, you might also enjoy the following discoveries!\n\nIn addition to specifying the URL of an image, you can specify its height and width. This has some benefits, including encouraging Facebook to pre-cache the image on the first time it’s shared. However, when you specify multiple og:image tags, invalid/malformed height/width in any of those tags may cause problems with all of your images. E.g., an invalid og:image:height or og:image:width value on an image which isn’t chosen, prevents pre-rendering.\n\nSpecifying an image triggers the pre-caching process, regardless of whether it’s correct or not.\n\nFacebook has different ‘share layout’ sizes, depending on the image size. Small images don’t scale up to a large preview very well, so they provide a condensed layout. However, the share layout size sometimes defaults to accommodating the smallest image from a set (e.g., if you have 10 huge og:image tags, and 1 small one, you sometimes get the small share layout).\n\nFacebook also sometimes falls back to the ‘small’ layout if you have too many broken images in your set (as Facebook’s broken image file is only 540×300).\n\nSetting incorrect image sizes lets you upscale small images in the Facebook debugger. But it doesn’t look like this is respected in the share dialogue. You cannot ‘downscale’ images so far as I can tell. There’s a “upscale=1” parameter in the version of the image which Facebook creates, which I suspect controls this.\n\nLarge images break! The maximum square image size appears to be in the region of 9200×9200. However, some images with unequal dimensions larger than this, but a lower total area (e.g., 10000×3000) work. As long as a 3:1 ratio or higher.\n\nThis suggests that the boundaries might be based, in part, on a maximum square area of ~95,000,000 pixels.\n\nAs an additional note, when sharing a too-large image directly (linking to the file itself), Facebook shows a blank image. There’s no fallback file/function used in their ‘safe image’ cleaner in this context.\n\nFacebook supports a really interesting feature that lets you build relationships between pages featuring partial/linked Open Graph information. This, theoretically, allows you to ‘inherit’ and/or place centralized og markup elsewhere, reducing page weight. This might be useful for mobile/responsive subdomains, and some internationalization/versioning scenarios, perhaps, if other platforms supported it.\n\nAdditionally, where cloaking is often a risky tactic in SEO (and frowned upon by Google), Facebook actively suggests cloaking mechanisms as a method of managing scenarios with paywalls, struggling servers, and other scenarios.\n\nDespite claiming otherwise in their documentation. Like Google+, Facebook’s crawler appears to ignore or disregard robots.txt directives. It’ll happily fetch Open Graph values from pages which are blocked by robots.txt files.\n\nSome potential “hacks”?\n\nBeing stuck having to ‘share’ the first og:image tag between multiple networks is, as we’re discovering, limiting, and not ideal. Sticking to the Open Graph standards, as they’re written, lumps us with all sorts of unfortunate compromises and dead-ends.\n\nSo what if we think outside the rules a bit?\n\nIf we’re creative, there may be some clever tricks or undocumented approaches which we can use to bypass, confuse, or force certain behaviors from some of the trickier platforms.\n\nHere are a few approaches we’ve considered, but ultimately discarded.\n\nCan we use platform detection to create a dynamic solution?\n\nImagine for a moment, that every time a page is shared, the platform visits that page, reads the og:image tag(s), and grabs the social image.\n\nTheoretically, the Yoast SEO plugin could detect which platform is requesting the page or image. And execute some clever code to serve it the perfect image for its requirements.\n\nThat’d enable us to ensure that the first og:image is the best option for the scenario. Regardless of what’s being shared, and where.\n\nHowever, the platforms don’t visit every time. They visit once and save a copy of the tags (and the images) they found for a little while. That length of time, and the scenarios which cause them to revisit and/or update their cached version vary wildly by platform.\n\nStill, theoretically, the Yoast SEO plugin could try and serve the right tags to the platform when they do visit. At the moment when they create their cache. But this approach relies heavily on the platforms identifying themselves when they visit. And on us recognizing their identities. But also on the website in question having a certain type of server configuration. And on our software doing some tricksy logic around deciding which tag(s) to show.\n\nIt might also open things up to forms of abuse by users and platforms who falsify their identities. And it won’t work for any website running any form of advanced caching (where the static pages are served to most visitors).\n\nIt’s pretty complicated, and it’s not a robust enough approach to rely on.\n\nHidden image techniques\n\nSome platforms, like Pinterest, do more than just grab the og:image tag(s). They scan the page and look for other images too. That means we can place optimized social images outside of the Open Graph tags as part of the page content. And hope that users select these when sharing.\n\nIn most scenarios, those images don’t necessarily need to be visible. We can place hidden images in the source code of a page.\n\nUnfortunately, this technique doesn’t help in most cases. Other than increasing the chance of an image showing up in a selection process. For example, where Facebook allows you to select a thumbnail from an og:image set. Or where Pinterest allows you to choose an image to share from a page when using their browser bookmarklet.\n\nIn most scenarios, in-page images are ignored when og:image tags are specified. Hiding images can also cause unexpected side-effects. Such as accessibility issues, or slower page loads. Especially when sharing the kinds of large images which platforms like Pinterest or Facebook look for.\n\nPublish-and-switch techniques\n\nFor some platforms, like Facebook, we can ‘push’ a specific social image to them. This is done by setting the first og:image and sending a request to their cache-busting URL.\n\nWe could adapt the Yoast SEO plugin to set a specific image as the first in the set. To then ping the relevant platform’s cache-busting system to update the image. Then we could change the og:image ordering and repeat the process. Setting the best image for each platform which allows for remote cache updating\n\nUnfortunately, this only allows us to set the initial social image. When their caches expire, we’re back to square one – they’ll use the logic we’ve outlined to pick their preferred images.\n\nTo repeat the cache-setting process, we’d need to constantly juggle the order of the tags, in line with the specific cache-expiry times of each platform. This adds a wealth of complexity and simply isn’t feasible in most site setups (especially those running their own caching solutions). Plus only a few platforms support this kind of cache-busting.\n\nMore importantly, we want to avoid tactical hacks\n\nAs we’ve explored, we’re not keen on going to these kinds of lengths to try and fix a problem which could be fixed so much more effectively, and comprehensively, by the platforms themselves. And improvements to the Open Graph protocol.\n\nWe’re not adverse to implementing clever, technical solutions to help get the image selection process right. But we’d rather work with the platforms to address the problems at the source. Rather than tackling the symptoms across the 8 million+ websites running the Yoast SEO plugin.\n\nThat’s why we’d love to hear your thoughts! How do you think WordPress, Yoast SEO, the Open Graph Protocol and big platforms like Facebook and Twitter can work together better?"
    }
}