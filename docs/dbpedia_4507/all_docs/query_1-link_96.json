{
    "id": "dbpedia_4507_1",
    "rank": 96,
    "data": {
        "url": "https://developers.google.com/cast/docs/media",
        "read_more_link": "",
        "language": "en",
        "title": "Supported Media for Google Cast",
        "top_image": "https://www.gstatic.com/devrel-devsite/prod/vb04bc6a770b206c5880569d039fa6eaa90ca0850e1afe1934dab7999e04ac53a/developers/images/opengraph/google-blue.png",
        "meta_img": "https://www.gstatic.com/devrel-devsite/prod/vb04bc6a770b206c5880569d039fa6eaa90ca0850e1afe1934dab7999e04ac53a/developers/images/opengraph/google-blue.png",
        "images": [
            "https://developers.google.com/static/site-assets/logo-stack-overflow.svg",
            "https://developers.google.com/static/site-assets/logo-github.svg",
            "https://developers.google.com/static/site-assets/logo-google-g.svg",
            "https://www.gstatic.com/devrel-devsite/prod/vb04bc6a770b206c5880569d039fa6eaa90ca0850e1afe1934dab7999e04ac53a/developers/images/lockup-google-for-developers.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "All the media facilities and types that are supported by Google Cast.",
        "meta_lang": "en",
        "meta_favicon": "https://www.gstatic.com/devrel-devsite/prod/vb04bc6a770b206c5880569d039fa6eaa90ca0850e1afe1934dab7999e04ac53a/developers/images/favicon-new.png",
        "meta_site_name": "Google for Developers",
        "canonical_link": "https://developers.google.com/cast/docs/media",
        "text": "Stay organized with collections Save and categorize content based on your preferences.\n\nGoogle Cast and all Cast Web Receiver applications support the media facilities and types listed on this page.\n\nSome of these require additional coding or the Web Receiver SDK. See Create a Basic Web Receiver App for more information about developing your Web Receiver application to support these media types.\n\nImage formats\n\nAPNG\n\nBMP\n\nGIF\n\nJPEG\n\nPNG\n\nWEBP\n\nMedia container formats\n\nMP2T\n\nMP3\n\nMP4\n\nOGG\n\nWAV\n\nWebM\n\nVideo codecs\n\nChromecast 1st and 2nd Gen.\n\nH.264 High Profile up to level 4.1 (720p/60fps or 1080p/30fps)\n\nVP8 (720p/60fps or 1080p/30fps)\n\nChromecast 3rd Gen\n\nH.264 High Profile up to level 4.2 (1080p/60fps)\n\nVP8 (720p/60fps or 1080p/30fps)\n\nChromecast Ultra\n\nH.264 High Profile up to level 4.2 (1080p/60fps)\n\nVP8 (4K/30fps)\n\nHEVC / H.265 Main and Main10 Profiles up to level 5.1 (4K/60fps)\n\nVP9 Profile 0 and Profile 2 up to level 5.1 (4K/60fps)\n\nHigh Dynamic Range (HDR)\n\nDolby® Vision™\n\nHDR10\n\nChromecast with Google TV\n\nH.264 High Profile up to level 5.1 (4Kx2K/30fps)\n\nHEVC / H.265 Main and Main10 Profiles up to level 5.1 (4Kx2K@60fps)\n\nVP9 Profile-2 up to 4Kx2K@60fps\n\nGoogle Nest Hub\n\nH.264 High Profile up to level 4.1 (720p/60fps)\n\nVP9 up to level 4.0 (720p/60fps)\n\nNest Hub Max\n\nH.264 High Profile up to level 4.1 (720p/30fps)\n\nVP9 up to level 4.0 (720p/30fps)\n\nAudio codecs\n\nChromecast Audio, Google Home, and Google Home Mini support the following list of codecs:\n\nFLAC (up to 96kHz/24-bit)\n\nHE-AAC\n\nLC-AAC\n\nMP3\n\nOpus\n\nVorbis\n\nWAV (LPCM)\n\nWebM\n\nMedia type strings\n\nMP4 video and audio\n\nVideo codec Video profile Audio codec Audio profile Media type string H.264 level 3.0 baseline AAC aac_he video/mp4; codecs=\"avc1.42E01E, mp4a.40.5\" aac_lc video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\" MP3 video/mp4; codecs=\"avc1.42E01E, mp4a.69\" video/mp4; codecs=\"avc1.42E01E, mp4a.6B\" H.264 level 3.1 baseline AAC aac_he video/mp4; codecs=\"avc1.42E01F, mp4a.40.5\" aac_lc video/mp4; codecs=\"avc1.42E01F, mp4a.40.2\" MP3 video/mp4; codecs=\"avc1.42E01F, mp4a.69\" video/mp4; codecs=\"avc1.42E01F, mp4a.6B\" H.264 level 3.1 main AAC aac_he video/mp4; codecs=\"avc1.4D401F, mp4a.40.5\" aac_lc video/mp4; codecs=\"avc1.4D401F, mp4a.40.2\" MP3 video/mp4; codecs=\"avc1.4D401F, mp4a.69\" video/mp4; codecs=\"avc1.4D401F, mp4a.6B\" H.264 level 4.0 main AAC aac_he video/mp4; codecs=\"avc1.4D4028, mp4a.40.5\" aac_lc video/mp4; codecs=\"avc1.4D4028, mp4a.40.2\" MP3 video/mp4; codecs=\"avc1.4D4028, mp4a.69\" video/mp4; codecs=\"avc1.4D4028, mp4a.6B\" H.264 level 4.0 high AAC aac_he video/mp4; codecs=\"avc1.640028, mp4a.40.5\" aac_lc video/mp4; codecs=\"avc1.640028, mp4a.40.2\" MP3 video/mp4; codecs=\"avc1.640028, mp4a.69\" video/mp4; codecs=\"avc1.640028, mp4a.6B\" H.264 level 4.1 high AAC aac_he video/mp4; codecs=\"avc1.640029, mp4a.40.5\" aac_lc video/mp4; codecs=\"avc1.640029, mp4a.40.2\" MP3 video/mp4; codecs=\"avc1.640029, mp4a.69\" video/mp4; codecs=\"avc1.640029, mp4a.6B\" H.264 level 4.2 high AAC aac_he video/mp4; codecs=\"avc1.64002A, mp4a.40.5\" aac_lc video/mp4; codecs=\"avc1.64002A, mp4a.40.2\" MP3 video/mp4; codecs=\"avc1.64002A, mp4a.69\" video/mp4; codecs=\"avc1.64002A, mp4a.6B\"\n\nMP4 video only\n\nVideo codec Video profile Video level Media type string Notes Dolby Vision 05 06 video/mp4; codecs=\"dvhe.05.06\" 4K24fps 07 video/mp4; codecs=\"dvhe.05.07\" 4K30fps 09 video/mp4; codecs=\"dvhe.05.09\" 4K60fps 08 06 video/mp4; codecs=\"dvhe.08.06\" 4K24fps, compatible with HEVC decoder 07 video/mp4; codecs=\"dvhe.08.07\" 4K30fps, compatible with HEVC decoder 09 video/mp4; codecs=\"dvhe.08.09\" 4K60fps, compatible with HEVC decoder H.265 main 5.0 video/mp4; codecs=\"hev1.1.6.L150.B0\" 5.1 video/mp4; codecs=\"hev1.1.6.L153.B0\" main10 5.0 video/mp4; codecs=\"hev1.2.6.L150.B0\" 5.1 video/mp4; codecs=\"hev1.2.6.L153.B0\"\n\nMP4 audio only\n\nFormat Audio codec Audio profile Media type string M4A AAC aac_he audio/mp4; codecs=\"mp4a.40.5\" aac_lc audio/mp4; codecs=\"mp4a.40.2\" MP3 MP3 audio/mp3 MPA MP3 audio/mpeg MP3 audio/mpeg; codecs=\"mp3\" MP4 MP3 audio/mp4; codecs=\"mp4a.69\" MP3 audio/mp4; codecs=\"mp4a.6B\"\n\nMP4 non-compliant audio media types\n\nFormat Audio codec Media type string M4A HE-AAC audio/mp4; codecs=\"mp4a.40.05\" LC-AAC audio/mp4; codecs=\"mp4a.40.02\"\n\nWebM video and audio\n\nFormat Video codec Audio codec Media type string WebM VP8 Vorbis video/webm; codecs=\"vp8, vorbis\" WebM VP9 Vorbis video/webm; codecs=\"vp9, vorbis\" WebM (audio only) Vorbis audio/webm; codecs=\"vorbis\"\n\nAudio passthrough\n\nAC-3 (Dolby® Digital™ audio technology)\n\nE-AC-3 (EC-3, Dolby® Digital Plus™ audio technology)\n\nMPEG-H Audio\n\nDolby® Atmos™\n\nThe Web Receiver SDK supports AC-3 passthrough. You can check the codec support prior to loading content using the CastReceiverContext.canDisplayType() method with the corresponding media type string for each codec.\n\nTo determine whether Dolby® Atmos™ is supported on specific hardware, check the cast.framework.system.DeviceCapabilities.IS_DOLBY_ATMOS_SUPPORTED flag.\n\nFormat Audio codec Media type string MP4 AAC audio/mp4; codecs=\"mp4a.40.2\" AC-3 audio/mp4; codecs=\"ac-3\" audio/mp4; codecs=\"mp4a.a5\" E-AC-3 audio/mp4; codecs=\"ec-3\" audio/mp4; codecs=\"mp4a.a6\" MPEG-H Audio audio/mp4; codecs=\"mhm1.0x0D\" Dolby® Atmos™ audio/mp4; codecs=\"ec-3\"; spatialRendering=true\n\nDelivery methods and adaptive streaming protocols\n\nThese are available through use of the Web Receiver SDK.\n\nMPEG-DASH\n\nDRM Support: Widevine (Level 1)\n\nSmoothStreaming\n\nHTTP Live Streaming (HLS)\n\nDRM Support: AES-128, SAMPLE-AES using Widevine (Level 1)\n\nProgressive download without adaptive switching\n\nWith adaptive bitrate streaming protocols, you must implement CORS. To implement an encrypted protocol, including DRM, you should develop a Custom Receiver. See DRM support for more information.\n\nSubtitles and closed captions\n\nYour subtitle resources must implement CORS.\n\nTTML - Timed Text Markup Language\n\nWebVTT - Web Video Text Tracks\n\nCEA-608/708\n\nDolby, Dolby Digital, Dolby Digital Plus, Dolby Atmos, and Dolby Vision are trademarks of Dolby Laboratories, Inc."
    }
}