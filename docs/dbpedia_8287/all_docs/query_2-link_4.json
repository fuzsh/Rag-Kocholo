{
    "id": "dbpedia_8287_2",
    "rank": 4,
    "data": {
        "url": "https://forum.keyboardmaestro.com/t/which-programming-language-should-i-try-first-to-manipulate-logic-pro-x-km/29515",
        "read_more_link": "",
        "language": "en",
        "title": "Which Programming Language Should I Try First to Manipulate Logic Pro X & KM?",
        "top_image": "https://forum.keyboardmaestro.com/uploads/default/original/3X/1/d/1d9ac78f5bf0132ec788a0a377b51705cecc53e5.png",
        "meta_img": "https://forum.keyboardmaestro.com/uploads/default/original/3X/1/d/1d9ac78f5bf0132ec788a0a377b51705cecc53e5.png",
        "images": [
            "https://forum.keyboardmaestro.com/user_avatar/forum.keyboardmaestro.com/fairchilde17/48/61640_2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2022-10-18T06:32:30+00:00",
        "summary": "",
        "meta_description": "Hi, \nI&#39;m a music producer and just started using KM to shorten workflow in Logic. \nI&#39;ve never learnt any programming languages before. Keyboard Maestro sure works well and saves lots of time. (Bouncing, importing project&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://forum.keyboardmaestro.com/uploads/default/optimized/1X/2ad4ba0fc83af499e1256c208b8b180d478a0236_2_32x32.ico",
        "meta_site_name": "Keyboard Maestro Discourse",
        "canonical_link": "https://forum.keyboardmaestro.com/t/which-programming-language-should-i-try-first-to-manipulate-logic-pro-x-km/29515",
        "text": "Hi,\n\nI'm a music producer and just started using KM to shorten workflow in Logic.\n\nI've never learnt any programming languages before. Keyboard Maestro sure works well and saves lots of time. (Bouncing, importing projects most of time.)\n\nBut since my goal on using KM with Logic Pro X (LPX) is not just shorten the time but learning programming to adapt it to other purposes. (In lucky case I could get a job that should handle both terms of music and programming world.)\n\nSo I listed what might be the first one to learn and hope you guys can suggest which one I should dig in to first.\n\nApplescript\n\nI've learnt a bit of this while configuring, customizing the KM macros on the forum.\n\nStill hard to get the result that I've purposed but I've understood bit of the structure.\n\nBut seems like it's not popular than other candidates. (Maybe it's Apple specific language?)\n\nJavascript\n\nNever tried to learnt or tried before.\n\nAFAIK, Javascript can be used on the MIDI FX plugin called Scripter included in LPX and also most of web structure.\n\nSince LPX, KM, Web are share this language, seems it could be the most variable one.\n\nSwift\n\nExperienced Swift Playgrounds before but it was just for fun and i wasn't into that much. (exp result: I understood outline of programming structure)\n\nApple made this app to make people learn easier by game and I think it would be more fun to learn.\n\nQuoted to Wikipedia some part of LPX was written in Swift.\n\nAnd it's younger gen of programming language so I hope it's more fleable to use on modern environments.\n\nBut is this really more versatile and fitter than the others in my useage?\n\ndon't know..\n\nPython\n\nAround me, learning Python was like fashion during the pandemic.\n\nHeard that it's easy and versatile.\n\nAlso shell scripts can be used with KM.\n\nBut thinking of work with LPX, KM â€“ will it be right the right choose over JS and other languages?\n\nNot familiar to world of programming, I just having lot of fear and doubts not to spend time on trials and errors. ('Cause making music is my main job now anyhow.)\n\nWhich one do you guys recommend to getting familiar with?\n\nThank you!\n\nIf you aren't familiar with programming, it's probably more important to pick up the mind-set rather than any particular language. How to break down a problem into parts, how to define those parts in \"programmy\" ways, how to get and use data (and the data structures available), and how to combine all those parts back into a whole with loops (repeat, while...) and flow control (if... then) to solve your original problem.\n\nIf you can go from a vague \"Wouldn't it be nice if...\" to a complete and precise outline of what you need to do -- so-called pseudocode -- you're halfway there.\n\nOf course, the best way to practice is to do it -- and using KM itself is a great tool for this. Working at a higher level means you can concentrate on the problem and let KM's actions deal with the nitty-gritty. And you'll find yourself picking up bits of other languages -- AppleScript, bash/zsh, JavaScript, Python... -- as you need them.\n\nEach of the languages you list above could be useful to you, depending on what you are doing. But if you don't know which direction you'll be heading, and if we're only allowed to pick one -- I'd plump for JavaScript. It's no longer just the \"language of the web\", it crops up all over the place. It's cross-platform, versatile, has plenty of features without being totally overwhelming, and because of its popularity there are plenty of resources out there.\n\nIf you want to limit yourself to \"what will be useful in LPX\" -- I'm sure other Logic users can jump in but, IIRC, it's JavaScript for the Scripter and Objective-C (another for your list!) for plugins (though I suspect the LPX team will get caught up in Apple's move to Swift-for-everything eventually). And given the evidence on this Forum of Logic's lack of proper scriptability, either JXA or AppleScript so you can attempt to manipulate the GUI..."
    }
}