{
    "id": "dbpedia_8287_2",
    "rank": 68,
    "data": {
        "url": "https://athena.ecs.csus.edu/~mei/logicp/home.html",
        "read_more_link": "",
        "language": "en",
        "title": "Logic Programming Courseware",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://athena.ecs.csus.edu/~mei/logicp/images/5.png",
            "https://athena.ecs.csus.edu/~mei/logicp/images/5.png",
            "https://athena.ecs.csus.edu/~mei/logicp/images/img2-3-large.png",
            "https://athena.ecs.csus.edu/~mei/logicp/images/2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Keywords"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Description",
        "meta_lang": "en",
        "meta_favicon": "web_site_icon_5.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Logic Programming\n\nLogic Programming is more of a declarative language and very different from actual conventional programming like C, C++ or Java.\n\nIn 1979, Robert Kowalski said \"Algorithm = Logic + Control\". Logic defines what should be solved and Control defines how it should be solved.\n\nIn Logic programming user only needs to specify the problem statements and the logic programming system finds the solution to that problem based on the provided information. In other words, we define what part of the problem and system finds how to get solution to that problem.\n\nUsually in declarative languages, instead of writing the problem in exact sequence of steps; our main focus is to define correct relationship between the different parts of the problem. So, basically in logic programming languages we provide information and declare relationships between objects and after supplying the query, the logic programming system deduce the result by tracing through given information.\n\nThough there are many logic programming languages but Prolog is widely used logic programming language.\n\nLearn more\n\nProlog\n\nProlog - PROgramming in LOGic, was first developed by Alain Colmerauer and Philippe Roussel in 1972 - A Logic Programming language based on the predicate logic.\n\nIn prolog, clauses are actually descriptive statements that specifies what is true about the problem and because of that Prolog is also known as declarative language or rule-based language.\n\nBasically, in prolog program we write the program statements in terms of facts and rules. The system reads in the program and stores it. Upon asking the questions (known as queries) the system gives the answer by searching through the possible solution(s).\n\nSome basic features of Prolog include:\n\npattern-matching mechanism\n\nbacktracking strategy that searches for possible solutions\n\nuniform data structures from which programs are built\n\nProlog is also widely used for AI programs especially experts systems. For Prolog programming SWI-Prolog provides comprehensive prolog environment and it is also free.\n\nDownload SWI-Prolog Download SWI-Prolog Editor"
    }
}