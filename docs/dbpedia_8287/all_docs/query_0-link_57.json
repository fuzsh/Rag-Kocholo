{
    "id": "dbpedia_8287_0",
    "rank": 57,
    "data": {
        "url": "https://firebase.google.com/docs/ios/setup",
        "read_more_link": "",
        "language": "en",
        "title": "Add Firebase to your Apple project",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.gstatic.com/devrel-devsite/prod/v20ab951cf37b43fc7a428ae75ce91d8269f391204ca16525bc8a5ececea0ab56/firebase/images/lockup.svg",
            "https://www.gstatic.com/devrel-devsite/prod/v20ab951cf37b43fc7a428ae75ce91d8269f391204ca16525bc8a5ececea0ab56/firebase/images/lockup.svg",
            "https://www.gstatic.com/devrel-devsite/prod/v20ab951cf37b43fc7a428ae75ce91d8269f391204ca16525bc8a5ececea0ab56/firebase/images/lockup-google-for-developers.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://www.gstatic.com/devrel-devsite/prod/v20ab951cf37b43fc7a428ae75ce91d8269f391204ca16525bc8a5ececea0ab56/firebase/images/favicon.png",
        "meta_site_name": "Firebase",
        "canonical_link": "https://firebase.google.com/docs/ios/setup",
        "text": "Stay organized with collections Save and categorize content based on your preferences.\n\nPrerequisites\n\nInstall the following:\n\nXcode 15.2 or later\n\nMake sure that your project meets these requirements:\n\nYour project must target these platform versions or later:\n\niOS 13\n\nmacOS 10.15\n\ntvOS 13\n\nwatchOS 7\n\nSet up a physical Apple device or use a simulator to run your app.\n\nDo you want to use Cloud Messaging?\n\nFor Cloud Messaging on Apple platforms, here are the prerequisites:\n\nSet up a physical Apple device.\n\nObtain an Apple Push Notification Authentication Key for your Apple Developer account.\n\nEnable Push Notifications in Xcode under App > Capabilities.\n\nSign into Firebase using your Google account.\n\nIf you don't already have an Xcode project and just want to try out a Firebase product, you can download one of our quickstart samples.\n\nStep 1: Create a Firebase project\n\nBefore you can add Firebase to your Apple app, you need to create a Firebase project to connect to your app. Visit Understand Firebase Projects to learn more about Firebase projects.\n\nCreate a Firebase project\n\nIn the Firebase console, click Add project.\n\nTo add Firebase resources to an existing Google Cloud project, enter its project name or select it from the dropdown menu.\n\nTo create a new project, enter the desired project name. You can also optionally edit the project ID displayed below the project name.\n\nIf prompted, review and accept the Firebase terms.\n\nClick Continue.\n\n(Optional) Set up Google Analytics for your project, which enables you to have an optimal experience using any of the following Firebase products:\n\nFirebase Crashlytics\n\nFirebase Cloud Messaging\n\nFirebase In-App Messaging\n\nFirebase Remote Config\n\nRemote Config personalization\n\nFirebase A/B Testing\n\nEither select an existing Google Analytics account or to create a new account.\n\nIf you create a new account, select your Analytics reporting location, then accept the data sharing settings and Google Analytics terms for your project.\n\nClick Create project (or Add Firebase, if you're using an existing Google Cloud project).\n\nFirebase automatically provisions resources for your Firebase project. When the process completes, you'll be taken to the overview page for your Firebase project in the Firebase console.\n\nStep 2: Register your app with Firebase\n\nTo use Firebase in your Apple app, you need to register your app with your Firebase project. Registering your app is often called \"adding\" your app to your project.\n\nGo to the Firebase console.\n\nIn the center of the project overview page, click the iOS+ icon to launch the setup workflow.\n\nIf you've already added an app to your Firebase project, click Add app to display the platform options.\n\nEnter your app's bundle ID in the bundle ID field.\n\nWhat's a bundle ID, and where do you find it?\n\nA bundle ID uniquely identifies an application in Apple's ecosystem.\n\nFind your bundle ID: open your project in Xcode, select the top-level app in the project navigator, then select the General tab.\n\nThe value of the Bundle Identifier field is the bundle ID (for example, com.yourcompany.yourproject).\n\nBe aware that the bundle ID value is case-sensitive, and it cannot be changed for this Firebase app after it's registered with your Firebase project.\n\nClick Register app.\n\nStep 3: Add a Firebase configuration file\n\nMove your config file into the root of your Xcode project. If prompted, select to add the config file to all targets.\n\nIf you have multiple bundle IDs in your project, you must associate each bundle ID with a registered app in the Firebase console so that each app can have its own GoogleService-Info.plist file.\n\nStep 4: Add Firebase SDKs to your app\n\nUse Swift Package Manager to install and manage Firebase dependencies.\n\nIn Xcode, with your app project open, navigate to File > Add Packages.\n\nWhen prompted, add the Firebase Apple platforms SDK repository:\n\nhttps://github.com/firebase/firebase-ios-sdk\n\nSelect the SDK version that you want to use.\n\nChoose the Firebase libraries you want to use.\n\nIf Google Analytics is enabled in your Firebase project, make sure to add FirebaseAnalytics. For Analytics without IDFA collection capability, add FirebaseAnalyticsWithoutAdId instead.\n\nWhen finished, Xcode will automatically begin resolving and downloading your dependencies in the background.\n\nStep 5: Initialize Firebase in your app\n\nThe final step is to add initialization code to your application. You may have already done this as part of adding Firebase to your app. If you're using a quickstart sample project, this has been done for you.\n\nImport the FirebaseCore module in your UIApplicationDelegate, as well as any other Firebase modules your app delegate uses. For example, to use Cloud Firestore and Authentication:\n\nSwiftUI\n\nimport SwiftUI import FirebaseCore import FirebaseFirestore import FirebaseAuth // ...\n\nSwift\n\nimport FirebaseCore import FirebaseFirestore import FirebaseAuth // ...\n\nObjective-C\n\n@import FirebaseCore; @import FirebaseFirestore; @import FirebaseAuth; // ...\n\nConfigure a FirebaseApp shared instance in your app delegate's application(_:didFinishLaunchingWithOptions:) method:\n\nSwiftUI\n\n// Use Firebase library to configure APIs FirebaseApp.configure()\n\nSwift\n\n// Use Firebase library to configure APIs FirebaseApp.configure()\n\nObjective-C\n\n// Use Firebase library to configure APIs [FIRApp configure];\n\nIf you're using SwiftUI, you must create an application delegate and attach it to your App struct via UIApplicationDelegateAdaptor or NSApplicationDelegateAdaptor. You must also disable app delegate swizzling. For more information, see the SwiftUI instructions.\n\nSwiftUI\n\n@main struct YourApp: App { // register app delegate for Firebase setup @UIApplicationDelegateAdaptor(AppDelegate.self) var delegate var body: some Scene { WindowGroup { NavigationView { ContentView() } } } }\n\nIf you've included the Firebase SDK for Google Analytics, you can run your app to send verification to the Firebase console that you've successfully installed Firebase.\n\nThat's it! You can skip ahead to the next steps.\n\nIf you're having trouble getting set up, though, visit the Apple platforms troubleshooting & FAQ.\n\nAvailable libraries\n\nThis section lists the Firebase products supported for Apple platforms. Learn more about these Firebase Apple platform libraries:\n\nReference documentation (Swift | Obj-C)\n\nFirebase Apple platforms SDK GitHub repo\n\nService or Product Pods SwiftPM Libraries Google Analytics.\">Add Analytics? AdMob pod 'Google-Mobile-Ads-SDK' N/A Analytics pod 'FirebaseAnalytics' FirebaseAnalytics App Check pod 'FirebaseAppCheck' FirebaseAppCheck App Distribution pod 'FirebaseAppDistribution' FirebaseAppDistribution Authentication pod 'FirebaseAuth' FirebaseAuth Cloud Firestore pod 'FirebaseFirestore' FirebaseFirestore Cloud Functions for Firebase Client SDK pod 'FirebaseFunctions' FirebaseFunctions Cloud Messaging pod 'FirebaseMessaging' FirebaseMessaging Cloud Storage pod 'FirebaseStorage' FirebaseStorage Crashlytics pod 'FirebaseCrashlytics' FirebaseCrashlytics Dynamic Links pod 'FirebaseDynamicLinks' FirebaseDynamicLinks In-App Messaging pod 'FirebaseInAppMessaging' FirebaseInAppMessaging\n\n(required) Firebase installations pod 'FirebaseInstallations' FirebaseInstallations Firebase ML Custom Model APIs pod 'FirebaseMLModelDownloader' FirebaseMLModelDownloader Performance Monitoring pod 'FirebasePerformance' FirebasePerformance Realtime Database pod 'FirebaseDatabase' FirebaseDatabase Remote Config pod 'FirebaseRemoteConfig' FirebaseRemoteConfig Vertex AI in Firebase N/A FirebaseVertexAI-Preview\n\nIntegrate without using Swift Package Manager\n\nIf you don't want to use Swift Package Manager, you can still take advantage of the Firebase SDKs by using CocoaPods or by importing the frameworks directly.\n\nCocoaPods\n\nLearn more about CocoaPods integration in our guide.\n\nFrameworks\n\nIn addition to supporting the iOS platform, the zip now includes .xcframework files. For details, see the Firebase Apple platforms SDK README on GitHub .\n\nDownload the framework SDK zip. This is a ~200MB file and might take some time to download.\n\nUnzip the file, and then integrate the frameworks that you want to include in your app.\n\nYou can find integration instructions in either of the following places:\n\nIn the Firebase iOS SDK GitHub repository.\n\nIn the README.md file within the downloaded zip distribution.\n\nFor information regarding framework versions or dependencies, refer to the METADATA.md file within the downloaded zip distribution.\n\nAdd the -ObjC linker flag in your Other Linker Settings in your target's build settings.\n\nNext steps\n\nLearn about Firebase:\n\nVisit Understand Firebase Projects to learn more about Firebase projects and best practices for projects.\n\nExplore sample Firebase apps.\n\nGet hands-on experience with the Firebase iOS Codelab.\n\nExplore the open source code in GitHub.\n\nPrepare to launch your app:\n\nSet up budget alerts for your project in the Google Cloud console.\n\nMonitor the Usage and billing dashboard in the Firebase console to get an overall picture of your project's usage across multiple Firebase services.\n\nReview the Firebase launch checklist.\n\nHaving trouble with Firebase and your Apple project? Visit the Apple platforms troubleshooting & FAQ.\n\nAdd Firebase services to your app:\n\nGain insights on user behavior with Analytics.\n\nSet up user authentication with Authentication.\n\nStore data, like user information, with Cloud Firestore or Realtime Database.\n\nStore files, like photos and videos, with Cloud Storage.\n\nTrigger backend code that runs in a secure environment with Cloud Functions.\n\nSend notifications with Cloud Messaging.\n\nFind out when and why your app is crashing with Crashlytics."
    }
}