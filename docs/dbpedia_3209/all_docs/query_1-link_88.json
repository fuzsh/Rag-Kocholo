{
    "id": "dbpedia_3209_1",
    "rank": 88,
    "data": {
        "url": "https://stackoverflow.com/questions/3482195/detect-windows-2008-server-and-windows-2003-server-in-c-sharp",
        "read_more_link": "",
        "language": "en",
        "title": "Detect windows 2008 server and windows 2003 server in C#",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/jWxn8.png?s=64",
            "https://www.gravatar.com/avatar/24d7c500139035b34672f8625d6ec2e5?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/2a3f3604f1befdc5af53dbf07aceaf04?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/1f276e30787b812c41aceec3ca61ce60?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/381a1343bf9c62211eb950c2509128f0?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/96fb4cead99e8381599790af1a576f72?s=64&d=identicon&r=PG",
            "https://stackoverflow.com/posts/3482195/ivc/9e7e?prg=d924b1f3-779d-4880-b6d7-75c88316e746"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-08-14T05:40:14",
        "summary": "",
        "meta_description": "Can someone help me modify this code to support Windows 2003 and Windows 2008 server?\nThanks\n\n public static string getOSLegacy()\n       {\n           //Get Operating system information.",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/3482195/detect-windows-2008-server-and-windows-2003-server-in-c-sharp",
        "text": "In my scenario I needed my application to capture computer info for possible bug-reports and statistics.\n\nI did not find the solutions where an application manifest had to be added satisfactory. Most of the suggestions I found while googling this suggested just that, unfortunately.\n\nThing is, when using a manifest, each OS version has to be added manually to it in order for that particular OS version to be able to report itself at runtime.\n\nIn other words, this becomes a race condition: A user of my app may very well be using a version of my app that pre-dates the OS in use. I would have to upgrade the app immediately when a new OS version was launched by Microsoft. I would also have to force the users to upgrade the app at the same time as they updated the OS.\n\nIn other words, not very feasible.\n\nAfter browsing through the options I found some references (surprisingly few compared to the app manifest) that instead suggested using registry lookups.\n\nCheck out this chart from MS in regards to mapping to OS releases: https://msdn.microsoft.com/en-us/library/windows/desktop/ms724832.aspx\n\nMy (chopped down) ComputerInfo class with only WinMajorVersion, WinMinorVersion and IsServer properties looks like this:\n\nusing Microsoft.Win32;"
    }
}