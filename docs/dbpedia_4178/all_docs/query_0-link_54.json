{
    "id": "dbpedia_4178_0",
    "rank": 54,
    "data": {
        "url": "https://devblogs.microsoft.com/dotnet/the-week-in-net-5242016/",
        "read_more_link": "",
        "language": "en",
        "title": "The week in .NET",
        "top_image": "https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2019/02/swimlane-cross-platform.png",
        "meta_img": "https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2019/02/swimlane-cross-platform.png",
        "images": [
            "https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31",
            "https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/letter-avatar/be16e3b9f45201449641755a1cf88e82.svg",
            "https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2016/05/MRW_thumb.png",
            "https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2016/05/1ed82a1a-2189-11e6-9f58-da01c16813fb.png",
            "https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/letter-avatar/04cf402768b4b09e5d5fb371d1ea432d.svg",
            "https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/letter-avatar/dcdc7bee55bbff46ef936bd48847b9cc.svg",
            "https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/letter-avatar/6d47a7633227c30b04dc4b30e24673a3.svg",
            "https://devblogs.microsoft.com/dotnet/wp-content/themes/understrap-child-master/images/Share.svg",
            "https://devblogs.microsoft.com/dotnet/wp-content/themes/understrap-child-master/images/light-theme.png",
            "https://devblogs.microsoft.com/dotnet/wp-content/themes/understrap-child-master/images/dark-theme.png",
            "https://devblogs.microsoft.com/dotnet/wp-content/themes/understrap-child-master/images/edit-outline.svg"
        ],
        "movies": [
            "https://www.youtube.com/embed/dz-O3vcSq_U"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Bertrand Le Roy",
            "www.facebook.com"
        ],
        "publish_date": "2016-05-24T16:11:32+00:00",
        "summary": "",
        "meta_description": "To read last week’s post, see The week in .NET – 5/16/2016. On.NET Last week on the show, we had Miguel de Icaza: This week, we’ll speak with Maoni Stephens, who works on .NET’s GC. Package of the week: Math.NET Symbolics Math.NET is an impressive project.",
        "meta_lang": "en",
        "meta_favicon": "https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2024/07/cropped-dotnet-logo-32x32.jpg",
        "meta_site_name": ".NET Blog",
        "canonical_link": "https://devblogs.microsoft.com/dotnet/the-week-in-net-5242016/",
        "text": "The week in .NET – 5/24/2016\n\nMay 24th, 2016\n\nTo read last week’s post, see The week in .NET – 5/16/2016.\n\nOn.NET\n\nLast week on the show, we had Miguel de Icaza:\n\nThis week, we’ll speak with Maoni Stephens, who works on .NET’s GC.\n\nPackage of the week: Math.NET Symbolics\n\nMath.NET is an impressive project. We’ve covered Math.NET’s numeric package before. Today, we’re looking at its symbolic package, that deals with the manipulation of symbolic mathematical expressions. With it, you can parse, format, and evaluate expressions, but also develop them, simplify them, differentiate them, etc.\n\nHere’s an example that uses symbolic differentiation to build the Taylor expansion of an expression to a given degree:\n\nXamarin App of the week: MRW\n\nDelivery drivers for Spain’s leading international transport company MRW use its Android app for proof of pick up, receiving orders, and scheduling. The app’s features include offline work, local storage, multi-threading, barcodes, geolocation, and payment. This complexity created time-to-market challenges that Xamarin solved.\n\nGame of the Week: Crashing Season\n\nCrashing Season is an action/arcade mobile game that blends cartoony low-poly graphics with fun and engaging game play. In Crashing Season, players will control up to 15 different silly animals and use their unique skill as well as the environment to fight waves of enemies. The goal of each level is to complete a series of challenges in order to progress. Players will also be able to earn extra rewards by challenging their friends in multiplayer game play.\n\nCrashing Season was created by Koukoi Games using Unity and C#. It will be available on May 26th on iOS and Android! More information can be found on their Made With Unity page.\n\nUser group meeting of the week: Introduction to F# with Nikhil Bartwhal\n\nTonight, May 24, at 6:30PM at the Empire State Building in NYC, Nikhil Barthwal will give an introduction to F#. The meeting is hosted by the New York City F# Group.\n\n.NET\n\nChanges to project.json by Scott Hunter.\n\nHappy 25th birthday, VB by Anthony D. Green.\n\nJSON.NET now works with RC2 without “import” directives.\n\nUpdating to RC2: Changes to EFCore, ASPNETCore, PostgreSQL driver & XUnit by Julie Lerman.\n\n.NET Core goes RC2 by Ed Charbeneau.\n\nHow to debug .NET Core RC2 app with Visual Studio Code on Windows by Simone Chiaretta.\n\n.NET Core, a call to action by Mark Rendle.\n\nUsing Windows Runtime in a .NET desktop application by jbe2277.\n\nASP.NET\n\nMigrating ASP.NET 5 RC1 apps to ASP.NET Core by Christos Sakell.\n\nConverting an ASP.NET Core RC1 Project to RC2 by Shawn Wildermuth.\n\nUsing EF6 with ASP.NET MVC Core 1.0 by Tony Sneed.\n\nStrongly Typed Configuration Settings in ASP.NET Core by Rick Strahl.\n\nHow to use the IOptions pattern for configuration in ASP.NET Core RC2, and How to add default security headers in ASP.NET Core using custom middleware by Andrew Lock.\n\nBuilding a Static File Server in ASP.NET Core RC2 with the CLI by Bobby Johnson.\n\nTemplates for building React.js front-ends in ASP.NET Core and MVC5 by Jon Smith.\n\nASP.NET Core: Watching Code by Shane Boyer.\n\nASP.NET Core distributed cache tag helper by David Paquette.\n\nF#\n\nA Dive into Cloud<`T> by Eirik Tsarpalis\n\nGetting Started with Fable and Webpack, by Krzysztof Cieślak\n\nSetting up your environment to build an Android app with Xamarin.Forms, by Kimserey Lam\n\nDynamic Recursive API with F#, by Lauri Taimila\n\nCheck out F# Weekly for more great content from the F# community.\n\nXamarin\n\n10 Developer Takeaways from Xamarin Evolve by Sam Basu.\n\nJames Montemagno interviews Joseph Hill, Xamarin co-founder, and VP of developer relations, on the Xamarin Podcast.\n\nThe many flavors of HttpClient by Kerry W. Lothrop.\n\nEmbedding Native Controls into Xamarin.Forms by James Montemagno.\n\nXamarin.Forms Workbooks, and Xamarin Workbooks with Nugets by Craig Dunn.\n\nGames\n\nCRYENGINE 5.1 is here\n\nUnity Development with VS Code\n\nBuild A Unity Game Part 3 – Video, by Stacey Haffner.\n\n(Unity 5) Let’s Make Rust! [Episode 01 – Introduction] – Video, by Gabe Kutuzov.\n\nAnd this is it for this week!\n\nContribute to the week in .NET\n\nAs always, this weekly post couldn’t exist without community contributions, and I’d like to thank all those who sent links and tips.\n\nYou can participate too. Did you write a great blog post, or just read one? Do you want everyone to know about an amazing new contribution or a useful library? Did you make or play a great game built on .NET? We’d love to hear from you, and feature your contributions on future posts:\n\nSend an email to beleroy at Microsoft,\n\ncomment on this gist\n\nLeave us a pointer in the comments section below.\n\nSend Stacey (@yecats131) tips on Twitter about .NET games."
    }
}