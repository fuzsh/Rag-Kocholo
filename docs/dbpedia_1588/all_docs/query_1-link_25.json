{
    "id": "dbpedia_1588_1",
    "rank": 25,
    "data": {
        "url": "https://about.gitlab.com/topics/agile-delivery/",
        "read_more_link": "",
        "language": "en",
        "title": "What is Agile delivery?",
        "top_image": "https://about.gitlab.com/nuxt-images/open-graph/open-graph-gitlab.png",
        "meta_img": "https://about.gitlab.com/nuxt-images/open-graph/open-graph-gitlab.png",
        "images": [
            "https://about.gitlab.com/_nuxt/image/87eca8.svg",
            "https://about.gitlab.com/_nuxt/image/65fccb.svg",
            "https://images.ctfassets.net/xz1dnu24egyd/2bFrhePshhlHE3uy0WGz6x/152af9ff8b704a88c1a659ada73221aa/how-devops-leads-transformation.jpeg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/5k6A5rsdzsR143q8RftlCM/055ce69a4ac6c8370fc903257a5da467/cloud-native-devops.jpeg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/7vWGksPuv1e53lJyg8r1EC/b8ba07ac992c82db87da1823a145324d/devops-tips-and-tricks.jpeg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/6OAid2EmbLCu96eCNrIU1R/6379538af1f98fbf8be1090349695739/resources_1.jpeg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/3Wc9witSdfuUR0KkbR0NLZ/432d86b081a9cd4cacd1981e5b08f616/resources_10.jpeg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/2d6TAd6DKw4wsSmY3YZmd3/4555118cd2fd79369e151dbaf8c24a12/resources_11.jpeg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/29VlOEpD6O0wdH7jjygrQx/640ba5d0a0d385ea70178bc619e890cd/resources_14.jpeg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/5Xwe49f52qFtMNiyxzkafe/4c59e209c74806831f07dfdc93f7dc7c/alteryx_case_study.jpg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/6cj7AwGn7JOStgR531zAp/ac99d10d85f44561b9bbad5b2bc44430/beginners-guide-to-ci.jpg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/7HYdOnYTh7QWPYlH5r0tMJ/ee74b3de396f823991d525aa9842b449/scm-ci-cr.png?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/1BxUSmJCzFzJo9gIUHHs4Q/3fa57bc75277795fec4deb797138e34e/markus-spiske-MkwAXj8LV8c-unsplash.png?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/193SnGdNyUfFqgY7oImrCz/0127bcf06919548f927a0bda67db5512/future-of-software-future-proof-your-career.png?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/55qI1YiSFra3Z6zQ3heObZ/691637dec77f2d3e9750d5ac79b1fde4/whatisgitlabflow.jpg?h=400&fl=progressive",
            "https://images.ctfassets.net/xz1dnu24egyd/2ouky0TRvapIoHpqLsJD1C/4a96055848d7e679da16c7d15ea4295d/next-step.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "GitLab"
        ],
        "publish_date": "2022-08-07T00:00:00",
        "summary": "",
        "meta_description": "Learn about the benefits of Agile Delivery, and how this iterative approach to software delivery is used to deliver better quality code, faster!",
        "meta_lang": "en",
        "meta_favicon": "/nuxt-images/ico/favicon.ico?cache=20220414",
        "meta_site_name": "",
        "canonical_link": "https://about.gitlab.com/topics/agile-delivery/",
        "text": "Agile is one of the most important and transformative methodologies introduced to the software engineering discipline in recent decades, helping software teams efficiently create customer-centric products.\n\nAgile development means taking iterative, incremental, and lean approaches to streamline and accelerate the delivery of projects. It is based on the Agile Manifesto, which values individuals and interactions, working software, customer collaboration, and responding to change.\n\nAgile project management processes are an alternative to traditional project management approaches such as the Waterfall or Spiral methodologies, which assume a linear path from one stage to another. Agile brings this to the next level by empowering teams to not only accept but embrace a non-linear workflow that changes and evolves during the development process. Agile processes emphasize building working products quickly and iteratively, and focus on empowering cross-functional teams rather than establishing top-down hierarchies.\n\nThe basics of Agile delivery include having an Agile mindset and creating an Agile enviorment, aftwards you're team will be able to immediately reap the benefits which include but are not limited to a faster speed to market, higher quality code and transparency.\n\nAgile mindset\n\nAn Agile mindset means viewing setbacks as learning opportunities, embracing iteration, collaboration, and change, and focusing on delivering value. With an Agile mindset, teams can adjust to changing market needs, respond to customer feedback, and deliver business value. Adopting a new perspective can positively change a teamâs culture, since the shift permits innovation without fear, collaboration with ease, and delivery without roadblocks.\n\nAgile environment\n\nAn Agile environment is a workplace that is designed to support Agile processes. Agile environments favor individuals and interactions over processes and tools, working software over comprehensive documentation, customer collaboration over contract negotiation, and responding to change over following a plan. An Agile environment encourages team members to work collaboratively and promotes constant innovation and process improvement.\n\nSpeed to market\n\nFaster time to market enables quicker customer feedback and higher customer satisfaction.\n\nHigher quality\n\nSince testing is integrated throughout the lifecycle, teams have early sight into quality issues.\n\nTransparency\n\nTeams are involved throughout a project â from planning and prioritizing to building and deploying.\n\nThere are many different agile delivery frameworks, but some of the most common are Scrum, Kanban, and Lean. Each of these frameworks has its own unique set of values, principles, and practices that help guide organizations in their transition to an agile way of working.\n\nScrum\n\nScrum, often synonymous with Agile, is an approach that emphasizes continuous improvement, self organization, and experience-based learning. By utilizing user stories, tasks, backlogs, and extensions, teams have a structured model to carry them across a software development lifecycle. Teams that use a Scrum approach to development are likely to be committed, respectful, and focused.\n\nKanban\n\nTeams that use a Kanban framework favor transparency and communication. Tasks are organized using Kanban cards on a board to enable end-to-end visibility throughout production. Three practices guide Kanban: visualize work, limit work in progress, and manage flow. Teams that use a Kanban framework are collaborative, transparent, balanced, and customer focused.\n\nLean\n\nLean software development comes from lean manufacturing principles and practices and focuses on eliminating waste, amplifying learning, deciding as late as possible, delivering as fast as possible, empowering the team, building integrity in, and optimizing the whole.\n\nThere are a number of reasons why Agile software delivery methods are becoming increasingly popular. First, they allow for much more flexibility and responsiveness to change than traditional waterfall methods. Organizations that are successful with Agile software delivery methods have clear business priorities and engage users and feedback in active delivery refinements.\n\nCore Agile methodology elements within the software delivery process help make it a success.\n\nTeams are kept small and iterations short\n\nFeedback from customers is fast\n\nBusiness priorities are value-based\n\nUsers are engaged in the refining of end-product requirements\n\nAgile methods tend to focus on delivering value to the end user, rather than simply meeting internal deadlines or milestones. Value-based business priorities and engaging users in refining requirements are key to making agile software delivery methods work effectively.\n\nAgile delivery can be a great way to improve your software development process, but it can also present some challenges. For example, you may need to change the way you communicate with stakeholders, or you may need to adjust your project management approach. You may also find that you need to invest in new tools and training for your team.\n\nCommon challenges with Agile approaches include:\n\nConstant feedback and collaboration between the customer and the development team in order to deliver a more flexible and responsive product\n\nNew tools to manage and the need to integrate the Agile structure and methodology across teams and stakeholders\n\nTeam members need to be trained in and aware of Agile concepts in order to improve performance and streamline processes\n\nIf youâre willing to overcome these challenges, youâll likely find that Agile delivery can help you speed up your development process and improve your software quality.\n\nThe demand for faster software development is universal, and Agile delivery meets both customer and business needs.\n\nOrganizations that adopt Agile practices can gain a competitive edge in a fast-changing market. Businesses that empower teams to use Agile processes satisfy discerning customers and adapt to new technologies, helping them to develop the products that set the standard for industries.\n\nItâs not just businesses that benefit from Agile delivery. Customers have more substantive experiences with organizations when their needs are met and their feedback makes a difference in product development. Customers appreciate when their input and expectations help shape an organizationâs releases.\n\nIf youâre looking to get started with Agile software development, there are a few things you can do. First, youâll need to identify what your Agile software development and delivery process will look like. Youâll also need to consider what your teamâs goals are, what your customersâ needs are, and what your delivery timeline looks like.\n\nOnce you have a good understanding of all of these factors, you can begin to put together your Agile development and delivery process. Once structured and implemented, you will then need to monitor your development process to ensure it is working as required, and if not, optimize as necessary."
    }
}