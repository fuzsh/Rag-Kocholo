{
    "id": "dbpedia_1588_2",
    "rank": 13,
    "data": {
        "url": "https://www.wrike.com/agile-guide/agile-development-life-cycle/",
        "read_more_link": "",
        "language": "en",
        "title": "The Agile Software Development Life Cycle",
        "top_image": "https://cdn.wrike.com/image/__cdnu/illustration_abstract_rebrand-meta-pic_shapes_electric.png",
        "meta_img": "https://cdn.wrike.com/image/__cdnu/illustration_abstract_rebrand-meta-pic_shapes_electric.png",
        "images": [
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-light.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-light.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-dark.svg",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/static/assets/img/header-v2/language-selector-2x.png",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-light.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-dark.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-light.svg",
            "https://web-static.wrike.com/tp/static/assets/img/header-v2/wrike-logo-dark.svg",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/storage/uploads/92025823-45d4-4b1c-bcef-6dffd4727344/scrum-cycle-resized.png",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/storage/uploads/92025823-45d4-4b1c-bcef-6dffd4727344/scrum-cycle-resized.png",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/storage/uploads/2afb4dca-e8ba-46fe-84d3-b0d77ba6a402/rebrand-screenshot-templates-agile-teamwork-template-lp-kanban.png",
            "https://web-static.wrike.com/cdn-cgi/image/format=auto/tp/storage/uploads/2afb4dca-e8ba-46fe-84d3-b0d77ba6a402/rebrand-screenshot-templates-agile-teamwork-template-lp-kanban.png",
            "https://web-static.wrike.com/tp/static/assets/img/footer/app-store_en.svg",
            "https://web-static.wrike.com/tp/static/assets/img/footer/google-play_en.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "What is the Agile life cycle and how does it work? Learn more about the six phases of the software development process with this helpful guide from Wrike.",
        "meta_lang": "en",
        "meta_favicon": "https://web-static.wrike.com/tp/static/favicon.ico?v7",
        "meta_site_name": "",
        "canonical_link": "https://www.wrike.com/agile-guide/agile-development-life-cycle/",
        "text": "The Agile life cycle will vary slightly depending on the project management methodology chosen by a team. For example, Scrum teams work in short time periods known as sprints, which are similar to iterations. They also have clearly defined roles, such as Scrum master. On the other hand, Kanban teams have more of a continuous flow with no required roles. Another example is Extreme Programming, where teams tend to work in shorter iterations and place an extra focus on engineering practices.\n\nHowever, the goal of all software development teams is the same: to deliver working software to users on time.\n\nThe six phases of the Agile life cycle\n\nAs mentioned, the Agile software development life cycle consists of six phases. Let’s examine each of these Agile phases in more detail.\n\n1. Concept\n\nFirst up is the concept phase. Here, a product owner will determine the scope of their project. If there are numerous projects, they will prioritize the most important ones. The product owner will discuss key requirements with a client and prepare documentation to outline them, including what features will be supported and the proposed end results. It is advisable to keep the requirements to a minimum as they can be added to in later stages. In the concept stage, the product owner will also estimate the time and cost of potential projects. This detailed analysis will help them to decide whether or not a project is feasible before commencing work.\n\n2. Inception\n\nOnce the concept is outlined, it is time to build the software development team. A product owner will check their colleagues’ availability and pick the best people for the project while also providing them with the necessary tools and resources. They can then start the design process. The team will create a mock-up of the user interface and build the project architecture. The inception stage involves further input from stakeholders to fully flesh out the requirements on a diagram and determine the product functionality. Regular check-ins will help to ensure that all requirements are built into the design process.\n\n3. Iteration\n\nNext up is the iteration phase, also referred to as construction. It tends to be the longest phase as the bulk of the work is carried out here. The developers will work with UX designers to combine all product requirements and customer feedback, turning the design into code. The goal is to build the bare functionality of the product by the end of the first iteration or sprint. Additional features and tweaks can be added in later iterations. This stage is a cornerstone of Agile software development, enabling developers to create working software quickly and make improvements to satisfy the client.\n\n4. Release\n\nThe product is almost ready for release. But first, the quality assurance team needs to perform some tests to ensure the software is fully functional. These Agile team members will test the system to ensure the code is clean — if potential bugs or defects are detected, the developers will address them swiftly. User training will also take place during this phase, which will require more documentation. When all of this is complete, the product’s final iteration can then be released into production.\n\n5. Maintenance\n\nThe software will now be fully deployed and made available to customers. This action moves it into the maintenance phase. During this phase, the software development team will provide ongoing support to keep the system running smoothly and resolve any new bugs. They will also be on hand to offer additional training to users and ensure they know how to use the product. Over time, new iterations can take place to refresh the existing product with upgrades and additional features.\n\n6. Retirement\n\nThere are two reasons why a product will enter the retirement phase: either it is being replaced with new software, or the system itself has become obsolete or incompatible with the organization over time. The software development team will first notify users that the software is being retired. If there is a replacement, the users will be migrated to the new system. Finally, the developers will carry out any remaining end-of-life activities and remove support for the existing software.\n\nEach phase of the Agile life cycle contains numerous iterations to refine deliverables and deliver great results. Let’s take a look at how this iteration workflow works within each phase:\n\nThe Agile iteration workflow\n\nAgile iterations are usually between two and four weeks long, with a final completion date. The workflow of an Agile iteration will typically consist of five steps:\n\nPlan requirements\n\nDevelop product\n\nTest software\n\nDeliver iteration\n\nIncorporate feedback\n\nEach Agile phase will contain numerous iterations as software developers repeat their processes to refine their product and build the best software possible. In essence, these iterations are smaller cycles within the overarching Agile life cycle.\n\nThe Agile life cycle is a key structural model for software development teams, enabling them to stay on course as they move their product from conception to retirement. To support all activities in the Agile cycle, team members need to have access to the appropriate resources and tools, including an Agile project management platform."
    }
}