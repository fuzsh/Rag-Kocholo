{
    "id": "dbpedia_1588_3",
    "rank": 83,
    "data": {
        "url": "https://www.one-beyond.com/process/agile-software-development-methodology/",
        "read_more_link": "",
        "language": "en",
        "title": "Agile Software Development Methodology",
        "top_image": "https://www.one-beyond.com/app/uploads/2023/08/Agile-Featured.png",
        "meta_img": "https://www.one-beyond.com/app/uploads/2023/08/Agile-Featured.png",
        "images": [
            "https://www.one-beyond.com/app/themes/dcsl/assets/images/logo-2023-static-mobile@1x.webp",
            "https://www.one-beyond.com/app/uploads/2023/08/Agile-Header.png",
            "https://www.one-beyond.com/app/uploads/2022/10/ScrumProcessDiagram.png",
            "https://www.one-beyond.com/app/uploads/2022/07/ProductBacklog_Image_1440x727.png",
            "https://www.one-beyond.com/app/plugins/cookie-law-info/legacy/public/images/logo-cookieyes.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-08-15T16:08:17+00:00",
        "summary": "",
        "meta_description": "By using Agile (Scrum) methodology we can ensure a flexible approach to planning, improvement via continuously updated prototype, regular updates on status, and a quick response if circumstances change rapidly. This ensures that your project is delivered on time and on budget.",
        "meta_lang": "en",
        "meta_favicon": "https://www.one-beyond.com/app/uploads/2022/08/cropped-Favicon-1-32x32.png",
        "meta_site_name": "One Beyond",
        "canonical_link": "https://www.one-beyond.com/process/agile-software-development-methodology/",
        "text": "By using agile software development, we can ensure that you get a flexible approach to planning, improvement via a continuously updated prototype, regular updates on status, and a quick response from us if circumstances change rapidly – for example, feedback from you that a certain feature isn’t quite right. This all ensures that we deliver your project on time and on budget.\n\nProject management practices\n\nWe employ Agile (Scrum), a process framework that has been used to manage complex product development. Our teams can address complex adaptive problems, while productively and creatively delivering products of the highest possible value.Our project management practices cover the development of customised software, designed meticulously from the ground up, requiring a blend of consistent, proven structure with project specific creativity.\n\nWe follow clear principles of quality software development and use common milestones as a basis for our software development processes. To ensure we get real world feedback as early as possible, we’ll split your project into a number of sub-projects so that you can “go live” in stages.\n\nKeeping your project on schedule\n\nConcise documentation\n\nCommon development environment\n\nFor every project, we define a common environment, so that all members of the development team are using the same platform, the same tools, and a common set of coding standards.\n\nQuality\n\nSoftware quality starts with a comprehensive test plan that verifies functionality, performance, reliability and compliance with requirements. We believe quality is the responsibility of the entire development team, not just the Quality Assurance (QA) team.\n\nWe aim to have a working build (prototype) as early as possible in the project and keep it in a working state as we add features; this ensures that the software testers and our QA team can start verification early in the process. We use industry-standard issue tracking systems (Microsoft Azure DevOps) to track change requests and defect reports throughout the life cycle of the project.\n\nCommunication\n\nMeeting contractual commitments\n\nWe make sure a tight feedback loop is created between you and the project team to provide transparency in the development process. To ensure your project is on schedule and remains on budget, we:\n\ncommunicate the “big picture” to the team so that everyone is motivated towards the common goal\n\nhave daily team meetings (scrums) to coordinate activities of the team members and bring everyone up to speed on current project status\n\nuse an automated web-based time sheet system so that project managers have daily status reports from team members\n\nwill immediately flag-up if we see something going ‘out of bounds’ for whatever reason – changing requirements, slipping dates, etc.\n\nChange and configuration management\n\nOur Software Configuration Management (SCM) system is a combination of tools, process, and teamwork, ensuring the delivery of higher quality software.\n\nSoftware changes are thoroughly planned, coded, tested and released just like any other software project, whether it is part of a larger project in development, or a change to a live system.\n\nSource code control and version control\n\nFor source code and version control we use Microsoft Azure DevOps, a highly reliable and flexible source code and version control system. All inputs to the project that are not static are version controlled, including:\n\nsource files\n\ntest scripts\n\ndesign documentation and requirements documents\n\nend-user documentation\n\ngraphics\n\nQuality management\n\nOur quality assurance strategies combine both black box (manual) testing performed by the Quality Assurance (QA) team, and white-box testing performed by the development team. Our process dictates that it is the responsibility of the developer to produce defect-free code, so that the QA team can focus on assessing the state of the product.\n\nWe perform both white box and black box testing because we believe that neither method will uncover all defects. For example, while unit testing and peer code reviews can discover potential vulnerabilities or performance bugs that would be nearly impossible to trace with black-box testing, black box testing can uncover defects such as inconsistencies in the user interface, compatibility bugs, unanticipated error conditions, and timing related bugs that can only be uncovered by manual human testing."
    }
}