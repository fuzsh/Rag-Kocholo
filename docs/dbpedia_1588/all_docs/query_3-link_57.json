{
    "id": "dbpedia_1588_3",
    "rank": 57,
    "data": {
        "url": "https://academia.stackexchange.com/questions/191638/equivalent-to-agile-software-development-but-for-research",
        "read_more_link": "",
        "language": "en",
        "title": "Equivalent to agile software development but for research?",
        "top_image": "https://cdn.sstatic.net/Sites/academia/Img/apple-touch-icon@2.png?v=7b0be71dac63",
        "meta_img": "https://cdn.sstatic.net/Sites/academia/Img/apple-touch-icon@2.png?v=7b0be71dac63",
        "images": [
            "https://cdn.sstatic.net/Sites/academia/Img/logo.svg?v=9be14a0ccbb8",
            "https://i.sstatic.net/S6fiE.png?s=64",
            "https://i.sstatic.net/ibvAV.jpg?s=64",
            "https://i.sstatic.net/Haz6W.jpg?s=64",
            "https://www.gravatar.com/avatar/7eb0cdce2c20934abdf5a0bc0bc96176?s=64&d=identicon&r=PG",
            "https://academia.stackexchange.com/posts/191638/ivc/524b?prg=f133d109-68c9-48f0-9d0b-88692f9b0e60"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Alex I"
        ],
        "publish_date": "2022-12-15T03:11:07",
        "summary": "",
        "meta_description": "In software development, there are many development methodologies with a focus on speed/efficiency: Agile, Scrum, DevOps, Kanban etc.\nAre there similar methodologies in scientific research? (someth...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/academia/Img/favicon.ico?v=514d6f4ed39d",
        "meta_site_name": "Academia Stack Exchange",
        "canonical_link": "https://academia.stackexchange.com/questions/191638/equivalent-to-agile-software-development-but-for-research",
        "text": "As someone who has used, taught, and published things about agile software process, I can give you some ideas. I don't know about tested successful existing practice for applying the ideas to research, however.\n\nFirst, the practices that agile developers use are mostly not applicable to research, though consistent \"pairing\" probably is. You really need to go back to the principles from which agile was developed to find appropriate principles and practices. For example, it is unlikely that a research team has a \"customer (product owner)\" in the sense of an agile software project, unless, perhaps, for product research. So, I'll assume you are interested in basic research, leading to an opening of new ideas and theories. I'll also assume, as in agile software development that you are interested in the work of teams.\n\nThe goal, all along was to create high quality software in a flexible, changing, environment using continuous feedback on the product as it developed. There was also a reluctance to guess about the needs and to therefore need to make corrections due to bad guesses, though enable changes due to changing conditions. How do you hit a moving target effectively and (relatively) efficiently?\n\nThe principles, often stated, are: We value\n\nindividuals and interactions over processes and tools,\n\nworking software over comprehensive documentation,\n\ncustomer collaboration over contract negotiation,\n\nresponding to change over following a plan.\n\nAs you can see even these principles need some restatement for research. These were devised by experienced developers to guide the creation of the actual practices.\n\nBut note that research, being an attempt to look into the unknown, has some of the same underlying characteristics. It isn't so much that the target moves, but that it is unknown, so our view of it at any moment might change.\n\nSo, what would agile research principles be? What would researchers value?\n\nLet me suggest a few, though I can't claim to be either complete or especially near the mark. This requires some group thinking to come to a consensus. It would also require being put to the test.\n\nBut, I suggest that we value:\n\ncollaboration over individual work,\n\ninsight over individual results,\n\nflexibility over established process,\n\n(questionable) small projects over big,\n\npeer feedback over holding details back.\n\nAnd note, importantly, that these aren't binary choices. It isn't that individual work isn't valued, it is just a matter of shifting balance. And, the simple statements above need a lot of expansion and elaboration.\n\nI'm not sure I've got it right yet, and won't on my own, but it might give you a starting framework that you could use to develop such a framework."
    }
}