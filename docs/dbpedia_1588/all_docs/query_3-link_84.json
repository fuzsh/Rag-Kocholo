{
    "id": "dbpedia_1588_3",
    "rank": 84,
    "data": {
        "url": "https://www.pmis-consulting.com/what-types-of-projects-can-agile-be-applied-to/",
        "read_more_link": "",
        "language": "en",
        "title": "What types of projects can Agile be applied to?",
        "top_image": "https://www.pmis-consulting.com/wp-content/uploads/2016/05/Agile-Project-Management-Method-e1523609638465.png",
        "meta_img": "https://www.pmis-consulting.com/wp-content/uploads/2016/05/Agile-Project-Management-Method-e1523609638465.png",
        "images": [
            "https://www.pmis-consulting.com/wp-content/uploads/2017/05/logo.png",
            "https://www.pmis-consulting.com/wp-content/uploads/2017/05/logo.png",
            "https://www.pmis-consulting.com/wp-content/uploads/2016/05/Agile-Project-Management-Method-e1523609638465.png",
            "https://www.pmis-consulting.com/wp-content/uploads/2016/05/Agile-Project-Management-Method-e1523609638465.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Kevin Lonergan"
        ],
        "publish_date": "2014-12-08T20:50:12+00:00",
        "summary": "",
        "meta_description": "Discussion on the types of projects that would be able to take advantage of a more Agile development process.",
        "meta_lang": "en",
        "meta_favicon": "https://www.pmis-consulting.com/wp-content/uploads/2017/05/favicon.png",
        "meta_site_name": "PMIS Consulting Limited",
        "canonical_link": "https://www.pmis-consulting.com/what-types-of-projects-can-agile-be-applied-to/",
        "text": "Types of projects that may suit Agile?\n\nMany people are understandably asking this question – “what kinds of projects can Agile be applied to”?\n\nThe single biggest difference between being able to use Agile or a more Waterfall approach is the ability to be able to define, develop and formally release end products (i.e. project deliverables) sequentially and incrementally. If this is not possible, it may be that incremental development (and hence the core of Agile) might not be feasible.\n\nA common aspect of Agile is that scope is often considered flexible. If the scope is not realistically flexible on your project, one of the main benefits of Agile will be lost.\n\nAnother major consideration is that if late changes to product design would have major impacts on the project, this may make elements of Agile unsuitable or not even possible.\n\nIncremental development can bring real advantages (and be very successful) to some types of projects, not just software development. It is also a great way to manage the risk that can be present in a more ‘big-bang’ development process.\n\nFor example, if a New Product Development project would benefit from this and it is feasible from a commercial and technical perspective, then Agile could work very well.\n\nClearly though, if we have a project such as building a new bridge, there are real reasons why much of Agile won’t work as we have to follow the type of development cycle that is common in the built world. Agile tries to embrace a flexible incremental development process; we cannot develop a bridge in a flexible way. There are obvious logical constraints and relationships that we cannot ignore.\n\nIn addition, other aspects must be considered:\n\nAs planning happens throughout the development process (as opposed to at the start of the project), Agile requires high levels of day-to-day communication between development teams and business owners and users. If this is not possible Agile approaches may well struggle.\n\nWhere there are key interfaces across the wider team (e.g. Suppliers/partners etc) ways of working must be compatible and development teams must respect the needs of all stakeholders. We are witnessing many project teams ignoring this, with very significant consequences on their project.\n\nExamples of projects where Agile is suitable or may be possible:\n\nSmall to medium-sized software developments.\n\nProduct development that includes multiple variants of the core product.\n\nIf the main deliverable can be broken down and produced (and even potentially released or at least accepted by the end customer) in incremental discrete increments. There is one major consideration here though; the requirements and functions developed during each iteration must be stand-alone and not have major dependencies with other requirements and functions outside of the current iteration. At the end of the iteration, we should have elements of the product that are ready to release and deploy. If we cannot achieve that, we may not be using Agile at all.\n\nWhen changes to business processes (related to the product) can also be deployed in parallel with the incremental product release plan.\n\nAlso, anywhere you find very dynamic requirements, which are able or likely to evolve per iteration, could take advantage of a more Agile approach.\n\nAgile can result in a more fit-for-purpose end product faster than may be possible using traditional approaches. This is because the heavy emphasis on collaboration and communication, early release, review and feedback on products may result in far less re-work than might otherwise be the case. It can also produce a far more controlled process.\n\nHowever, Agile is easy to understand in principle but much harder to do in practice. The benefits and success of using the approach do not come easily.\n\nAre there Agile Practices that all projects could benefit from?\n\nThere are certainly other practices that Agile (did not invent but) has adopted, that any project could benefit from. For example:\n\nBringing developers and users closer together and interacting more frequently during the whole definition and development phases.\n\nMaking reviews (of progress) shorter and more frequent.\n\nCommunication – using two-way communication methods for all key communication on the project. This should always be face-to-face where possible, and where not, should involve two-way forms of communication at least.\n\nDeveloping a collaborative development environment. One where all parties focus on the way ahead when there are issues, as opposed to sinking back into their respective contractual corners.\n\nVery few projects in the world would not benefit from such practices, if they do not already exist, in a manner that is both successful and productive."
    }
}