{
    "id": "dbpedia_1588_1",
    "rank": 7,
    "data": {
        "url": "https://tech.gsa.gov/guides/agile_faqs/",
        "read_more_link": "",
        "language": "en",
        "title": "Agile FAQs — Tech at GSA",
        "top_image": "https://tech.gsa.gov/assets/img/guides/EK_Waterfall.png",
        "meta_img": "",
        "images": [
            "https://tech.gsa.gov/assets/uswds/img/us_flag_small.png",
            "https://tech.gsa.gov/assets/uswds/img/icon-dot-gov.svg",
            "https://tech.gsa.gov/assets/uswds/img/icon-https.svg",
            "https://tech.gsa.gov/assets/img/gsa_logo.svg",
            "https://tech.gsa.gov/assets/uswds/img/usa-icons/close.svg",
            "https://tech.gsa.gov/assets/uswds/img/usa-icons-bg/search--white.svg",
            "https://tech.gsa.gov/assets/img/guides/EK_Waterfall.png",
            "https://tech.gsa.gov/assets/img/guides/EK_Agile.png",
            "https://tech.gsa.gov/assets/img/guides/Agile_Benefits.png",
            "https://tech.gsa.gov/assets/img/guides/Agile_Projects.png",
            "https://tech.gsa.gov/assets/img/guides/AgileOrgs_Location.PNG",
            "https://tech.gsa.gov/assets/img/guides/Agile_In_PM.png",
            "https://tech.gsa.gov/assets/img/guides/Agile_Industries.PNG",
            "https://tech.gsa.gov/assets/img/guides/Agile_Methods_Used.PNG",
            "https://tech.gsa.gov/assets/img/guides/Agile_Tools.png",
            "https://tech.gsa.gov/assets/img/gsa_logo.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Agile FAQs\n\nWhat is Agile?\n\nAgile is considered an alternative approach to traditional project management or product development. It is a value-based, iterative approach under which requirements and solutions evolve through the collaborative effort of self-organizing cross-functional teams. Agile advocates adaptive planning, evolutionary development, early delivery, and continuous improvement, and it encourages rapid and flexible response to change.\n\nAlthough it rose out of software development practices, Agile is not a software-development framework. It is neither methodological nor prescriptive; there is no exact way to become Agile. Also, Agile is not synonymous with Scrum (or Kanban, TDD, etc.) or a specific tool (i.e. JIRA, Rally, etc.).\n\nThe term agile was first coined for this in 2001, in the Manifesto for Agile Software Development (Agile Manifesto) and although originally written as Agile (with a capital A) this is progressively becoming deprecated.\n\nSuccess in Agile is based on an attitude of “servant leadership” and focuses on the team, not just developers. Agile encourages and does not lack in accountability or ownership. As a solution for complex problems, teams must “be” Agile, not just “do” Agile.\n\nMore information and associated documents can be found in our Agile guides.\n\nWhat is the Agile Manifesto?\n\nThe Agile Manifesto was written in February of 2001 by seventeen independent-minded software practitioners . The participants found consensus around four main values below that makeup the Agile manifesto.\n\nIndividuals and interactions over processes and tools. Agile is more about transparent interactions than technology.\n\nWorking software over comprehensive documentation. Create something usable quickly to enable faster customer feedback.\n\nCustomer collaboration over contract negotiation. Ensure customer buy-in between Business and IT, with marketable visibility.\n\nResponding to change over following a plan. Leave room for emergent solutions and better respond to change\n\nMore information and associated documents can be found in our Agile guides.\n\nWhat are the Principles of Agile?\n\nOur highest priority is to satisfy the customer through early and continuous delivery of valuable software.\n\nWelcome changing requirements, even late in development. Agile processes harness change for the customer’s competitive advantage.\n\nDeliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.\n\nBusiness people and developers must work together daily throughout the project.\n\nBuild projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\n\nThe most efficient and effective method of conveying information to and within a development team is face-to-face conversation.\n\nWorking software is the primary measure of progress.\n\nAgile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.\n\nContinuous attention to technical excellence and good design enhances agility.\n\nSimplicity — the art of maximizing the amount of work not done — is essential.\n\nThe best architectures, requirements, and designs emerge from self-organizing teams.\n\nAt regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.\n\nMore information and associated documents can be found in our Agile guides.\n\nWhat are the most common Agile methodologies?\n\nScrum\n\nA framework for the iterative development of complex products, particularly software. Scrum is the most widely recognized Agile framework, and is compatible with other Agile practices like Extreme Programming. Scrum is comprised of a series of short iterations – called sprints – each of which ends with the delivery of an increment of working software.\n\nThe framework is comprised of three roles:\n\nProduct Owner\n\nScrumMaster\n\n(Scrum) Team\n\nFour Ceremonies:\n\nDaily Standup Meeting\n\nSprint Planning Meeting\n\nSprint Review\n\nRetrospective\n\nThree artifacts:\n\nBurndown charts\n\nProduct backlog\n\nSprint backlog\n\nScrum should not be used interchangeably with the term Agile. Agile is not a framework, but a broader set of values and practices, while Scrum is a specific framework that fits comfortably under the Agile umbrella.\n\nKanban\n\nKanban is a tool derived from Lean manufacturing and is associated with the branch of agile practices loosely referred to as Lean software development. Like a task board, Kanban board visually represents the state of work in process. Unlike a task board, the Kanban constrains how much work in process is permitted to occur at the same time with the purpose to reduce bottlenecks and increase throughput by optimizing that segment of the value stream that is the subject of the Kanban.\n\nA principle difference between Kanban and Scrum is that Scrum limits work in process through timeboxing (i.e. the sprint) and Kanban limits work in process by limiting how much work may occur at one time (e.g. N tasks or N stories).\n\nExtreme Programming (XP)\n\nA software development methodology adhering to a very iterative and incremental approach, Extreme Programming is intended to improve software quality and responsiveness to changing customer requirements. As a type of agile software development, it advocates frequent releases in short development cycles (timeboxing), which is intended to improve productivity and introduce checkpoints where new customer requirements can be adopted. XP consists of a number of integrated practices for developers and management – the original twelve practices of XP include Small Releases, On-site Customer, Sustainable Pace, Simple Design, Continuous Integration, Unit Testing, Coding Conventions, Refactoring Mercilessly, Test-Driven Development, System Metaphor, Collective Code Ownership, and Pair Programming. Most successful Agile practitioners adopt some subset of XP practices, often in conjunction with Scrum.\n\nMore information and associated documents can be found in our Agile guides.\n\nWhat is the difference between Agile and Traditional Project Management?\n\nTraditional “Waterfall” Project Management\n\nRequirements and design decisions are made up front\n\nMonths of planning before development begins\n\nThe customer sees the product for the first time when the final product is done/delivered\n\nChallenges\n\nMonths before customers are interacting with what was developed\n\nNo time to change course along the way. By the time people provide feedback, it is too late.\n\n“Agile” Project Management\n\nAn agile approach enables rapid incrementally shippable deliverables and collaborative decision-making between the parties. In software, Agile is a method of software development that is based on iterative and incremental delivery approach that anticipates the need for flexibility into the delivery of the finished product.\n\nThe noteworthy differences for Agile development is the common delivery cycle and milestones in delivery cycle that include:\n\nTime boxed and iterative/incremental product development/delivery\n\nIntermediate milestones: deliver a deployable system with useful features, it may have insufficient functionality\n\nDefinition of Done/Releasability: each iteration/sprint delivery is done, programmed, tested, and so on, and is in theory releasable.\n\nHow do organizations benefit from being Agile?\n\nOne benefit of agile is to reduce a product’s time to market by delivering a product increment frequently. Through this process, customers and users are engaged throughout the delivery cycle to regularly review the product increment and provide feedback. By creating feedback loops with every increment, the product created value working with customers rather than for them. As a result, excess time and resources are not spent creating something customers do not want.\n\nBeing Agile also promotes innovation in product teams. Taking an iterative, incremental approach promotes experiential learning, and short release cycles encourage teams to experiment to find relevant, simple solutions.\n\nVersionOne: 10th State of Agile Survey\n\nWhat are the common challenges to adopting Agile?\n\nVarious data indicate that the top most common challenges to a successful Agile in organizations is mostly related to all or one of the following:\n\nCompany philosophy at odds with core agile values\n\nLack of experience with agile methods\n\nLack of management support\n\nChanging the development culture\n\nTeam work using traditional development methods\n\nLacking consistent practices\n\nSource: VersionOne: 10th State of Agile Survey and Gartner\n\nDo Agile approaches only work in the Software Development Industry?\n\nAlthough it arose out of software development practices, Agile is not just a software development framework.\n\nMany other areas outside of Technology have found success in developing an Agile culture, including Manufacturing, Marketing, Legal, Customer Support, and more recently, Learning Design, and Human Resources. The benefits of an Agile culture provide more customer-focused efforts, increase communication, enable change, improve quality of delivery, provide a more responsive environment, and increase both transparency and visibility.\n\nIs Agile suitable for all projects?\n\nNot necessarily. Depending on the nature of the project and the product in question, there are times where plan-driven project management methodologies (like the waterfall method) provide a higher likelihood of project success.\n\nAccording to Mike Cohn, one of the contributors to the invention of the Scrum software development, the most appropriate projects suitable for Agile (Scrum, Kanban, etc.) are ones with aggressive deadlines, a high degree of complexity, and a high degree of novelty (uniqueness) to the organization or at least new to the team building it. For instance, developing a new phone application.\n\nIf the project/product is very familiar to the team and if the team continues building the same thing everyday, there is an element of predictability that may not require an Agile approach to succeed. For instance, a fast food restaurant producing fries or burger with set recipes.\n\nIf the project/product is very familiar to the team and if the team continues building the same thing everyday, there is an element of predictability that may not require an Agile approach to succeed. For instance, a fast food restaurant producing fries or burger with set recipes.\n\nThere are various ways that can be used to decide whether the project team tasked with completing should be handled using an Agile framework or traditional plan-driven project management method, and it starts by taking a look at the information the team already has. Below is an example analysis based on risk and complexity.\n\nWho is practicing Agile?\n\nAccording to the State of Agile Report: Agile Trends - 2015 Agile Survey, agile software development has grown increasingly popular over the last decade. The number of large enterprises that are embracing agile continues to increase each year.\n\nAgile Demographics\n\nIn addition, 2 out of 3 IT organizations are either pure agile or or leaning toward agile (Source: PMI Pulse of the Profession, 2016.\n\nAgile approaches are also being used for teams outside of IT such as Marketing and Human Resources. The top three industries adopting Agile are Software Development, Financial and Professional Services (Source: State of Agile Report 2015).\n\nWhat are the trends in Agile?\n\nThe most popular Agile methodology is Scrum (Sources: Gartner 2015, VersionOne 2015).\n\n80% of organizations now have distributed agile teams, up from 35% two years ago (Source: VersionOne)\n\nScaling agile is increasing: 57% of organizations use Agile for program management;\n\n51% use Agile for portfolio management (Source: PMI, 2016)\n\nAlthough Agile does not require a specific set of tools for a successful adoption, not all traditional project management and other tools work well with Agile. Some companies configure existing tools in an Agile way while others use index cards and sticky notes to follow the frameworks. Some development group use JIRA software to help with things like requirements management, collaboration and testing.\n\nAccording to the 10th State of Agile Survey (2015), out of the many software management solutions on the market, over two-thirds of survey respondents use Microsoft® Excel (60%) to manage agile projects. Other commonly used tools were Atlassian / JIRA (51%), Microsoft Project (33%), and VersionOne (28%).\n\nWhat are the most popular trainings / certifications on Agile?\n\nProject Management Institute - Agile Certified Practitioner (PMI-ACP)\n\nThe Agile Certified Practitioner (ACP) from the Project Management Institute (PMI), is for project management professionals whose organizations currently use or are moving to agile practices. The PMI-ACP proves certification holders have real-world experience managing agile projects and familiarity with many subsets of the agile methodology including Scrum, Kanban, Lean and others. Those who achieve the certification must earn 30 professional development units (PDUs) every three years to maintain their status.\n\nScrum Alliance\n\nScrum is the leading framework of the agile methodology, especially for software development. The Scrum Alliance is the leading membership organization for Scrum professionals, with the mission of supporting widespread adoption and effective practice of Scrum. The Scrum Alliance offers six Scrum certifications for IT and software development professionals: Certified Scrum Master, Certified Scrum Product Owner, Certified Scrum Developer, Certified Scrum Trainer, Certified Scrum Coach and Certified Scrum Professional.\n\nInternational Consortium for Agile (ICAgile)\n\nThe International Consortium for Agile is an independent accrediting agency offering comprehensive agile certifications that provide role expertise across all agile ‘flavors,’ including Scrum, eXtreme Programming (XP), Kanban and more. There are three certification levels: Professional, Expert and Master, to test and evaluate candidate’s knowledge acquisition and competency within Agile.\n\nWhere can I find industry Agile conferences / events?\n\nThe following websites provide information on the most popular and relevant Agile events and conferences taking place in the United States and around the world.\n\nAgileAlliance - Events\n\nAgile and Beyond\n\nGartner’s Symposium/ITxpo\n\nWhere can I find credible resources on Agile?\n\nAgile Overview\n\nAgile Manifesto\n\nAgile Alliance\n\nVersionOne\n\nAtlassian\n\nSetting Up Agile Teams\n\nHow to build a kick-ass agile team\n\nBuilding an Agile Team\n\n3 Key Steps to Building an Agile Team\n\nAn Operating Model for Company-Wide Agile Development\n\nWho is Watching After Your Agile Money?\n\nScrum Teams\n\nScrum Framework\n\nScrum Reference Card\n\nScrum Is, Scrum Is Not\n\nWhy Scrum?\n\nKanban Teams\n\nEveryday Kanban\n\nKanban Explained\n\nLeanKit\n\nData and Information on Agile Trends, Blogs, etc."
    }
}