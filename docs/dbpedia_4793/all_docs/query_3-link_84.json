{
    "id": "dbpedia_4793_3",
    "rank": 84,
    "data": {
        "url": "https://bdtechtalks.com/2019/03/29/ageism-in-tech-age-limit-software-developers-face/",
        "read_more_link": "",
        "language": "en",
        "title": "invisible age limit developers face",
        "top_image": "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2019/03/software-developer-too-much-experience-problem.jpg?fit=6077%2C4051&ssl=1",
        "meta_img": "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2019/03/software-developer-too-much-experience-problem.jpg?fit=6077%2C4051&ssl=1",
        "images": [
            "https://bdtechtalks.com/wp-content/uploads/2018/03/techtalks-logo-normal.jpg",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/08/Figure-02.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/08/binary-llama.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/08/Berkeley-Humanoid-robot.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/08/claude.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/06/robot-knowledge-graph.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/07/multi-purpose-robot.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/05/monster-llm.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/04/robot-teaching-llama.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/02/robot-webcam.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/11/llamas.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/01/multi-modal-language-model.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/09/baby-llama-llm-compression.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2022/08/gradient-descent.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/07/swirls-data.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2022/10/vector-abstract-background.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2020/06/artificial-intelligence-money.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/04/ai-cybersecurity.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/05/open-source-language-models.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/04/deep-learning-revolution.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/01/language-model-document-retrieval.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2019/03/software-developer-too-much-experience-problem.jpg?resize=696%2C464&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2018/05/innovation-light-bulb.jpg?resize=696%2C483&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2019/03/startup-software-developers.jpg?resize=696%2C465&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2018/09/howard-williams-1.jpg?fit=96%2C87&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/07/cyborg-software-engineer.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2024/05/robot-coding-assistant.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/12/magic-hat-with-computer-code.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/11/lightweight-flying-llamas.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/11/superhero-llama.jpg?resize=218%2C150&ssl=1",
            "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2023/08/llama-on-your-own-server.jpg?resize=218%2C150&ssl=1",
            "https://secure.gravatar.com/avatar/b3cd446ba592d23147a62729a3f156ad?s=50&d=identicon&r=g",
            "https://secure.gravatar.com/avatar/38b87e3fb462cd7af0cbc7d0a5f443ab?s=50&d=identicon&r=g",
            "https://secure.gravatar.com/avatar/c0c914597eae1f5b04041ba3a027a476?s=50&d=identicon&r=g",
            "https://secure.gravatar.com/avatar/3b9ecbf0e7cb1eba0d041aff62332717?s=50&d=identicon&r=g",
            "https://secure.gravatar.com/avatar/e2cdc28c9442a711a12f7544c6eebecc?s=50&d=identicon&r=g",
            "https://secure.gravatar.com/avatar/9c341b31987a5efa08b573d9dc10fd42?s=50&d=identicon&r=g",
            "https://secure.gravatar.com/avatar/bd4ef2e88eb3b82757e2fcf6870eb548?s=50&d=identicon&r=g",
            "https://bdtechtalks.com/wp-content/uploads/2018/03/techtalks-logo-normal.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributor",
            "Howard Williams"
        ],
        "publish_date": "2019-03-29T00:00:00",
        "summary": "",
        "meta_description": "When it comes to job hunting, a common concern is not having enough experience, while in software development job seekers and holders fear to have too much of it. Let's see how!",
        "meta_lang": "en",
        "meta_favicon": "https://i0.wp.com/bdtechtalks.com/wp-content/uploads/2018/02/cropped-TechTalks-logo.jpg?fit=32%2C32&ssl=1",
        "meta_site_name": "TechTalks - Technology solving problems... and creating new ones",
        "canonical_link": "https://bdtechtalks.com/2019/03/29/ageism-in-tech-age-limit-software-developers-face/",
        "text": "When it comes to job hunting, a common concern is not having enough experience. In tech, the fear riddling job seekers and holders alike is the opposite. They worry they have too much experience.\n\nExperience comes with age, and age is proving an issue in tech careers. As many as 68 percent of baby boomers don’t apply for tech jobs for fear of being “too old.” Meanwhile, a 2018 study found that three-quarters of professional developers are younger than 35.\n\nAgeism is the elephant in the tech room. As programmers progress, their years of experience increasingly become a poisoned chalice. If the statistics are anything to go by, this problem is even more entrenched than you might imagine.\n\nThe not-so-invisible age barrier\n\n61 percent of developers over 45 are concerned that their age is limiting their career options. And this concern is not unfounded. According to the Stack Overflow developer survey, less than seven percent of professional developers in 2018 were 45 or over. Worldwide, meanwhile, the average age of developers ranges between 22 and 29.\n\nThese statistics are telling. They suggest that by the time a developer reaches their mid-40s, they’re likely to face career worries. Perhaps they fear for their job security, or perhaps they’ve found it increasingly difficult to land a new position. Either way, the numbers show that developers contend with an illicit age barrier in their career.\n\nWorse still, the flipside of the experience coin is often ineffectual. Experience should be a factor that gives older people a competitive edge. Yet experience seems to be hurting their applications, not helping. So much so, in fact, that some people have started removing references to earlier experience from their job applications.\n\nWhy is this happening?\n\nClearly, it’s a poorly kept secret that the tech industry favors younger team members. But when did experience become a bad thing?\n\nOne of the more obvious factors is money. In general, older developers (and those with more experience) tend to warrant higher pay. They know what their skills are worth, and aren’t likely to sell these hard-won skills for a junior salary bracket. This can then drive a preference for younger, cheaper developers—the “hungry” grads and interns desperate for a foot on the ladder.\n\nHowever, this is the case in many industries, and yet the problem is not as rampant outside of tech. So, we must turn to the fast-paced, innovation-fueled nature of the industry itself to tackle tech’s ageism issue.\n\nInnovation vs experience\n\nTechnology is future-focused. It evolves and changes with every passing day, and a drive for innovation has everyone looking to the future. Very little is the same as it was a decade ago. With so much change and so much emphasis placed on the tech-infused future, looking back seems redundant.\n\nAnd that’s exactly what experience does: it looks back. As a result, years of experience in tech isn’t always perceived to be as valuable as it is for other industries. Employers (wrongly) assume that experience implies a stagnated skillset, or outdated expectations.\n\nIn finance, for example, being able to balance books years ago suggests skills that are still largely relevant today. Things are a little more disruptive in tech. If you’ve been working for ten years on a legacy codebase, it doesn’t automatically follow that you can leap straight into a programming role on a more modern product.\n\nSo, recruiters looking on programming experience with a devaluing eye may be leading to discrimination against it. They scan applications for buzzwords and trendy new languages, not always recognizing the worth of years of acquired knowledge. Their view of the future looks for flexibility, not a developer stuck in their ways or hardened by years of experience.\n\nStereotypes and complacency\n\nThis view of the future feeds into typecasts. While young people are often referred to as “the future,” the stereotype of the tech-illiterate older person pervades. It’s assumed that, because someone is older, they can’t possibly know modern tech. It’s the classic fallacy: “you can’t teach an old dog new tricks.”\n\nCombine this stereotype with the reduced value of experience, and you find another contributing factor to ageism in tech: the concern of complacency.\n\nProgrammers need to be constantly learning. Skills can quickly become out-of-date or redundant. The pace in tech is relentless, with long-standing languages rendered obsolete and new languages and methodologies lionized.\n\nUnfortunately, this pace once again paves the way for ageism. When developers are in the game for so long, the assumption is that they’ve no doubt become complacent. They might have lost the passion they once held, or fallen behind the times in terms of languages.\n\nThe stereotype might be incorrect, but if a developer becomes complacent (no matter their age) they risk being left behind.\n\nThe problem for developers\n\nThis rampant ageism in the technology industry causes several problems for developers both young and old.\n\nOlder developers face concerns about the stability of the roles they’re in. This can lead to heightened stress or even imposter syndrome. Ageism in tech also makes competing for new jobs an uphill struggle for older developers. The result is a generation of developers facing a forced exit from their career.\n\nAnd it isn’t any better for young developers either. The ageism in tech has also created an unhealthy attitude toward new, younger developers. As Dan Lyons, a former writer for HBO’s Silicon Valley, said in an interview on the topic: “I think they’ve all decided that the optimal return is young kids: burn them out, get rid of them, replace them.”\n\nIf this is the case, ageism in tech means more than older developers struggling to put food on the table. It also means that younger developers are being treated like consumables. This is not to mention the fact that the new programmers entering the industry have less guidance available to them from people that know the job well. (Aka., older developers.)\n\nAdvice for developers to combat ageism\n\nSo, how can developers start to combat the ageism that’s placing a countdown on their career?\n\nFor older developers, it can help to reduce the emphasis placed on your age. So, if you are job hunting, age neutralize your resume or CV. A good way to do this is by removing old or irrelevant experience from your application. Instead, cherry-pick the most relevant and impressive examples of your experience. Tailor your experience to the job you’re after.\n\nWhether you’re old or young, never be discouraged enough to stop learning. Continue to demonstrate your passion for the role. Keep up-to-date with the newest trends, languages and other technology. It’s about proving that you’re an asset now, not that you used to be.\n\nTo that end, remember that performance proves value. If one of the causes of ageism in tech truly is the drive for innovation, then prove that you can perform as part of an innovative culture. (And that applies no matter how old you are.)\n\nFinally, wherever you work now, however many winters you’ve seen, network. Build relationships, make yourself known. Make friends and establish yourself as a valuable team member. So, when you reach the not-so-invisible age limit, you’re just that little bit harder to let go.\n\nThe benefits of age-diversity\n\nAgeism in tech isn’t a problem that affects only candidates and employees. It’s damaging to the businesses that fall foul of it as well. They miss out on the benefits that an age-diverse team can bring.\n\nFor example, older developers offer insight from experience. Their time in the industry typically makes them better suited to senior roles than a fresh-faced programmer. Older developers may also be better equipped to handle legacy code too, with a greater likelihood of knowing older languages.\n\nYounger developers, meanwhile, give fresh insight and are often more energetic. They bring a new outlook to an old problem, making them great catalysts for finding new solutions. They also benefit from a diverse team because they get a mentor that can help them learn and grow.\n\nEvidence backs up the power of diversity in the workplace. Offices with greater diversity across age, race, and gender, it’s found, enjoy 19 percent higher revenues from innovation.\n\nAdvice for tech businesses and recruiters\n\nSo, removing the age barrier in tech is set to provide benefits to all involved. But what can businesses do to help remove the developer age limit?\n\nFor a start, don’t discredit an applicant because they have more experience. Experience isn’t everything, and that goes both ways. If you have a young, super-motivated candidate with a hunger for code, then great. If you have an older candidate with years of experience and up-to-date knowledge, then great.\n\nRemember to check you aren’t falling foul of assumptions. Recognize what the candidate is doing and can do now. Don’t assume that an older developer can’t learn new code, or that a younger developer won’t know an old language.\n\nYou should also encourage mentoring. Developers of any age can share their experiences, their knowledge and their ideas, upwards and downwards. A young programmer could show an older colleague a new way of looking at a problem. An experienced developer could explain common approaches to a difficult problem.\n\nThe point is, experience and age aren’t adequate deal-breakers. Use experience as a backdrop; not the be-all and end-all.\n\nBreak the barrier\n\nAgeism in tech is a much bigger problem than it should be. Regardless of the reasons behind it, we need to do something about it. Finding a way to break down these biases is perhaps one of the most innovative and important things we can do.\n\nThe only way we can break the age bias in technology is if everyone works towards that goal. Developers need to keep learning and avoid complacency. Companies need to stop letting age and experience be a barrier to tech jobs.\n\nSo, let’s get on with it."
    }
}