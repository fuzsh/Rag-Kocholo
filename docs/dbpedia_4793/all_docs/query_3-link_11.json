{
    "id": "dbpedia_4793_3",
    "rank": 11,
    "data": {
        "url": "https://simpleprogrammer.com/what-happens-to-older-programmersdevelopers/",
        "read_more_link": "",
        "language": "en",
        "title": "What Happens To Older Programmers/Developers?",
        "top_image": "https://simpleprogrammer.com/wp-content/uploads/2016/02/Older-Software-Programmers-Developers.png",
        "meta_img": "https://simpleprogrammer.com/wp-content/uploads/2016/02/Older-Software-Programmers-Developers.png",
        "images": [
            "https://simpleprogrammer.com/wp-content/uploads/2022/12/SP-Logo-White-300x80-1.png",
            "https://secure.gravatar.com/avatar/695e2a956b2dcb5ac45a7095b6ee338a?s=512&d=retro&r=pg 2x",
            "https://secure.gravatar.com/avatar/695e2a956b2dcb5ac45a7095b6ee338a?s=256&d=retro&r=pg",
            "https://simpleprogrammer.com/wp-content/uploads/2015/04/badge.png"
        ],
        "movies": [
            "https://www.youtube.com/embed/a9bkrdB5EM4?feature=oembed"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "John Sonmez"
        ],
        "publish_date": "2016-02-18T13:00:36+00:00",
        "summary": "",
        "meta_description": "Can You Be Too Old For Software Development & Programming? Is it possible to be an excellent programmer when aging? Today I'm answering a developer career question from a reader that asked me about “Programming Till Old”. Can Old Software Developers Still Be Relevant On The Field? What Happens To Older Software Developers And Programmers? He […]",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "Simple Programmer",
        "canonical_link": "https://simpleprogrammer.com/what-happens-to-older-programmersdevelopers/",
        "text": "Can You Be Too Old For Software Development & Programming? Is it possible to be an excellent programmer when aging? Today I'm answering a developer career question from a reader that asked me about “Programming Till Old”.\n\nCan Old Software Developers Still Be Relevant On The Field? What Happens To Older Software Developers And Programmers?\n\nHe says, “Last weekend I have discussed about software developer job with my friends about whether software developer is a dead end job or not. Later I tried to look in the internet and found some good arguments from both sides. Here is a sample about programming as a dead end job.” He’s got a quote from a story here and he says, “Many programmers find that their employability starts to climb at around age 35. Employers dismiss them as either lacking in the technical skills such as the latest programming language fad or not suitable for entry level, in other words, either unqualified or overqualified. That doesn’t leave much, does it? It’s a sick show that most software developers are out of the field by 40. Employers have admitted this in unguarded moments. Craig Barrett a former chief executive officer of Intel Corp famously remarked the half life of an engineer software or hardware is only a few years while Mark Zuckerberg of Facebook has blurted out that young programmers are superior. I’m not satisfied with the results from my searching so I would like to know your opinion about this issue.”\n\nSo I’ve gotten various forms of this and I particularly don’t like this because I’m 35. No, in reality though I don’t believe that this is true at all and I’ll tell you why. I think that statistically it holds true but statistics doesn’t mean that there’s a reason behind it. We can’t draw conclusions just from numbers. Statistically it’s probably right, probably the employability does start to decline after 35. Probably most software developers are out of the field by 40. I agree, that’s probably true. But is it because being old means you’re going to be discriminated against? That’s not really old now is it, 35 to 40, because you’re not a young programmer or is it because of something else? I think it’s because of something else. I don’t think it has anything to do with age. I think what it has to do with is ability and staying up to date with technology.\n\nI know plenty of developers. A good example is Uncle Bob, Bob Martin. He is a software developer who—what is he? He’s definitely at least—I’m going to insult him now, but I think he’s in his 60s, I think that’s correct. I could be wrong. But anyway, he doesn’t look it, he looks like he’s in his 40s. You’re watching, Bob. But anyway, Bob is a great guy. He did the foreword for my Soft Skills book.\n\nAnyway, he is still up to date on everything. He is always learning, always improving his skills. He is one of the most famous software developers out there and well respected. He’s definitely over 35. There’s a lot of examples of this as well.\n\nThe key thing is that I think a lot of software developers they tend to not learn and not to grow and not to develop their skills over time and they stick with something that they know or they get stuck in a rut with some particular technology. Because they’re not developing and they’re not adapting then they end up—when that technology fades which is usually around the time 35, the technologies tend to have like around 5 to 10 year lifespan, they end up not being as employable because they haven’t learned the new skills, they haven’t kept up to date with technology and the new trends so they end up either not being able to find good work or they end up dropping out of the business by the time that they’re 40.\n\nI don’t think software development or programming is a dead end job. I think any job is a dead end job if you don’t continue to learn skills and practice. We live in an environment now technologically where things are advancing extremely fast. I don’t care what your profession is, you’re going to have to keep up with the times and learn new skills. Every single profession has had or most every single profession has had advances in technology and changes in the way that things are done that they had to keep up with.\n\nProgramming is definitely the most extreme of these, right? We have new technologies and new frameworks and everything happening all the time. In fact, I’ve built an actual course that will help you because I think that learning things could be as really important for programmers so you can check it out here, it’s called 10 Steps to Learn Anything Quickly and you can buy that course. Go check it out. We’ve had like over 2000 developers that have signed up for the course and have successfully learned how to learn things quickly.\n\nThe key is that you have to stay up with technology. If you think that you’re going to develop one skill set, if you think you’re going to come out of college and never learn on your own and never learn anything new and not stay up to date well then yeah, you’re going to become a dinosaur. By the time you’re 35 those young programmers, Mark Zuckerbergs, young programmers who are superior, they are going to be superior because they’re eager, the want it. They’re learning new things. They have the latest technology, but there’s no reason why—in fact, by the time you’re 35 or 40 you should be able to become a better developer, right? You should be better than all those young 20 year olds because you should have experience with a lot of different programming languages and technologies as well as the knowledge of the new ones. There’s no reason why you can’t stay up to date."
    }
}