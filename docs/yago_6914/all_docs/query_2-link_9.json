{
    "id": "yago_6914_2",
    "rank": 9,
    "data": {
        "url": "https://blog.iandavis.com/2006/03/refactoring-bio-with-einstein-part-4-employment-and-families/",
        "read_more_link": "",
        "language": "en",
        "title": "Refactoring Bio With Einstein Part 4: Employment and Families",
        "top_image": "http://www.gravatar.com/avatar/09dc91c92d018a094d7ce79b19034252.png",
        "meta_img": "http://www.gravatar.com/avatar/09dc91c92d018a094d7ce79b19034252.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Ian Davis"
        ],
        "publish_date": "2006-03-16T10:01:35",
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "/images/apple-touch-icon-152x152.png",
        "meta_site_name": "Internet Alchemy",
        "canonical_link": null,
        "text": "I'm sure regular readers of this series read part three and thought \"nice, but do I have to wait five months for the next part again?\". Well I thought I'd buck the trend and just get on with part four :)\n\nI thought I'd go back to the original paragraph about Einstein from Wikipedia:\n\nEinstein was born at Ulm in WÃƒ&frac14;rttemberg, Germany; about 100 km east of Stuttgart. His parents were Hermann Einstein, a featherbed salesman who later ran an electrochemical works, and Pauline, whose maiden name was Koch. They were married in Stuttgart-Bad Cannstatt. The family was Jewish (and non-observant); Albert attended a Catholic elementary school and, at the insistence of his mother, was given violin lessons.\n\nI just rechecked Wikipedia this paragraph has hardly changed which is encouraging. Presumably wiki-consensus has been reached on that aspect of Einstein's life. Here's what I have so far, expressed in Turtle rather than RDF/XML.\n\nThere are some anomalies such as foaf:name still being applied to the foaf:Person and some of those events perhaps should be replaced by or enhanced with conditions. But I want to examine the rest of the paragraph for what I haven't expressed yet. I can see:\n\nUlm is about 100km east of Stuttgart\n\nHermann was a featherbed salesman\n\nHermann later ran an electrochemical works\n\nThe family was Jewish\n\nAlbert's elementary school was Catholic\n\nAlbert's violin lessons were at the insistence of his mother\n\nI'm going to dismiss 1, 5 and 6 as out of scope for Bio and move straight onto 2. Bearing in mind my earlier characterisation of an Event as something that brings about a change in condition of an individual I can model it is as a Condition and two Events. The Condition is that Hermann is employed:\n\nThen there is the event of Hermann starting this period of employment:\n\nand the event of him finishing this employment:\n\nI can relate the three things together like this:\n\nI can use the same model for item 3 on my list\n\nI know that Hermann was running an electrochemical works after he was a featherbed salesman, but the description doesn't give me any more than that:\n\nSince employment is a very common condition for a person to be in, it's probably appropriate to define a class for it:\n\nI'd also like to be more explicit about the actual job Herman was doing during those periods of employment. I've used rdfs:label to describe the events and conditions but I'd like to structure this information in some way. My first guess is simply to introduce a bio:jobTitle like this:\n\nNow, these events and conditions are related temporally by the OWL-Time properties I'm using but I think it would be useful to relate them causally too. Doing this modelling is helping me understand the relationshops between the concepts I'm using. If a Condition is the state of being for an individual at a particular period of time and an Event is something that brings about a change in condition of an individual then there's a causal relationship between the two concepts. An event brings about a new condition and a condition is a consequence of an event. Here's how I could express that latter idea:\n\nClearly events can have multiple consequences:\n\nBut can conditions be the consequent of multiple events? I'm not sure. A literal reading of my definition of event suggests than every event brings about a change in condition of an individual without regard to any other events. I think I'm going to wait until I have more experience before deciding on this one.\n\nSo that's items 2 and 3 described, so onto 4 which is the family's faith. I could apply a new bio:faith property to a condition for each person but the paragraph clearly says that the family's faith was Jewish (non-observant). It makes no mention of the individual family members' beliefs. Clearly people can be born into families of one faith without necessarily subscribing to it themselves. So perhaps I have to model a family unit. I could invent a bio:Family class and make the Albert and his parents members of it. I don't want to assume any particular social structure but a family seems to be a universal unit of social organisation. The extent of it and the degree of involvement does vary consideraby between cultures but the definition of bio:Family can be kept as unconstrained as possible.\n\nIt just so happens that another schema I've been involved with has a class that could be useful here. The Relationship schema, with which I had a minor and mostly editorial role, defines a Relationship class which is described as A particular type of connection existing between people related to or having dealings with each other. I added that class hoping to use it for things like family units, marriages and partnerships. It was kept very open to enable use across all kinds of social situations. Here's my definition of a bio:Family class with a definition drawn from the Wikipedia page on Family:\n\nThe Relationship vocabulary provides the rel:participant property to declare involvement in a Relationship class. It can be used like this:\n\nNow here's an interesting thing: there was a time when this Einstein family consisted only of Hermann and Pauline. Then Albert was born and he became a member too. So families have a state of being too which changes over time and those changes are triggered by events such as the birth of Albert. So perhaps I should be modelling the family in terms of Conditions too. Here's how it could work:\n\nHere I'm saying that there is a family that has two conditons (states of being): one when it consisted of Hermann and Pauline and another when it included Albert too. Of course there may be others but I'm not considering those yet. The first condition started as soon as the marriage of Hermann and Pauline was complete and in fact was a consequence of that marriage (I'm simplifying here because they were a type of family before marriage too). This condition existed until the birth of Albert whereupon a new condition arises. This new condition is a family consisting of Hermann, Pauline and Albert and is a consequence of Albert's birth. I think that makes sense.\n\nNow what about that faith property I wanted to use, how do I do that? Well it seems obvious now that it has to be part of a condition. All I want to say is that at some point, and certainly when Albert was born, the family was of the Jewish faith:\n\nIt doesn't give me a great deal of information about ordering of events. It would be good to anchor that to some event that defines the formation of the family:\n\nBut I have no way of saying that the family didn't exist before this event. I have the same problem with people. There could be some small value in having properties that represent the start and end events of a family or a person and adding constraints so that entities can have only a maximum of one of each type. For a start event like a birth, I'd like then to be able to say that there can be no events or conditions that start before that event - another area I believe is not supported by OWL yet.\n\nBut that's the end of the list and I think I've managed to model the entire paragrah of biographical information. It remains to be seen how useful this information really is and what holes there are in the sequencing of event. That's the end of this posting, but I already have plans for several more. Now I'm worried that I've jinxed them by mentioning them in public :) Remember also that all of the development I'm doing here is experimental. I haven't made any changes to the Bio schema as yet and I may choose not to. I'm still thinking this through and trying to understand where the limits of this all-in-the-rdf-model approach lie. I'm actually pretty pleased with it so far and I'm gaining confidence that it's going to end up expressive enough to answer the kinds of genealogical questions I have in mind.\n\nP.S. While writing this it occurred to me that I forgot to mention another candidate for a temporal invariant in the previous post and it's one that already exists in the Bio schema - bio:olb. This property was the whole reason why Dave and I created Bio in the first place. It's a simple enough concept - a one line biography of the person. It's a potted history, a summary of that person's life achievements. Now, it may change over the lifetime of the person but it does so in a specialway. It's a cumulative record of that person's life. It doesn't depend on a particular state of being of a person, but on all of them up to that point in time. It's not strictly invariant but it's not something that gets replaced over time - it simply grows."
    }
}