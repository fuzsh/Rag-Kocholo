{
    "id": "dbpedia_3412_3",
    "rank": 4,
    "data": {
        "url": "https://stackoverflow.com/questions/149042/would-you-start-learning-smalltalk",
        "read_more_link": "",
        "language": "en",
        "title": "Would you start learning Smalltalk?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/FBFrJ.jpg?s=64",
            "https://i.sstatic.net/cwhY9RHg.png?s=64",
            "https://i.sstatic.net/rpdwr.png?s=64",
            "https://i.sstatic.net/8DntB.jpg?s=64",
            "https://www.gravatar.com/avatar/edd8638efe875601bfe394a8aea5b16d?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/c00afb235e224cb99852517f9bd2e7e7?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/f1779d6230d7211bf089d812674c9e7f?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/35c75942b089b28d3d610d3754ab9a79?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/9769fa7959586004975cb51f2ad97fb8?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/ux55V.jpg?s=64",
            "https://www.gravatar.com/avatar/d3197d1063f6323b3b3837dd5e09d498?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/c0831d75d44f9549b9650106ac308a0f?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/f3e46341bd51ce81564fab18d27e1399?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/9be442570803ecb4568600de6782bfcd?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/98df3c7cc17f088af555c5accbdb2509?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/b19534d8a57758546bdc252eefecc432?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/f0720ad6a8c5589e573d15e9a75438d4?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/05fd0ab8ca0f5091cdf78ad8dab94774?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/owv5n.png?s=64",
            "https://www.gravatar.com/avatar/f911774749a6cad95d07c7f63a01bed3?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/46bce1bb8135d821c3792456f240e764?s=64&d=identicon&r=PG",
            "https://stackoverflow.com/posts/149042/ivc/fe89?prg=ae999ab5-0d03-460a-a1ea-84e4980874f4"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Isaac Gouy Isaac Gouy"
        ],
        "publish_date": "2008-09-29T14:57:25",
        "summary": "",
        "meta_description": "My questions is simple!\r\nWould you start learning Smalltalk if you had the time? Why? Why not?\nDo you already know Smalltalk? Why would you recommend Smalltalk? Why not?\r\nPersonally I'm a Ruby on R...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/149042/would-you-start-learning-smalltalk",
        "text": "Well, since you mentioned me by name, I feel I should chime in.\n\nAs I said in that podcast interview, and as I have repeatedly demonstrated in my blog at http://MethodsAndMessages.vox.com/, this is \"the year of smalltalk\". And having now done Smalltalk advocacy for the past ten months, I can see that it really is happening. More customers are turning to Smalltalk and Seaside, and the Smalltalk vendors are all working hard to capture this new influx of attention. More larger Smalltalk conferences are being planned. More job postings are being posted. More blog postings are being made.\n\nIf you turn to Smalltalk today, you are not alone. There are many others who are out there as well.\n\nEdit\n\nWell, a number of years later, I'm now recommending Dart instead. It's a great language originated by Google but now owned by an ECMA committee. It runs serverside in node.js style, but also clientside in modern browsers by transpiling to JavaScript. Lots of good books, blogs, help channels, IDE support, public live pastebin. I think it's definitely got legs... enough so that I'm writing courseware to teach it onsite or online, and I'm pretty sure there's a book or two in the works from me. And Gilad Bracha, an old-time Smalltalker is a major contributor to the design, so there's a lot of Smalltalk in Dart.\n\nSmalltalk is a good language to learn, and the great thing is that it only takes a day to do it. It's a lot more than just an academic language. People are building huge, scalable, replicable applications handling billions of dollars. They just don't talk about it much. See, for instance, GemStone and Orient Overseas Container Lines: A Shipping Industry Case Study.\n\nSeaside is a good reason to learn Smalltalk, but I don't think you'll find it orders of magnitude better than Rails.\n\nThe thing that convinced me was GemStone. I really like Gemstone's GLASS (GemStone, Linux, Apache, Smalltalk, Seaside). The killer part of that is GemStone, which handles all the object persistence for you mostly without you thinking about it. Seeing some of their demos and hearing about what people are doing with GemStone reset my idea of what \"big application\" meant.\n\nThe part that bugs me the most about Rails is the object-relational mapping. That's nothing against Ruby because it sucks just as hard in GLORP (which handles ActiveRecord for Smalltalk), or Perl, or anything else. Mapping objects to database tables is just painful. With GemStone, thinking about the database disappears, so the work with the database disappears too. It's like a huge stone (or a troop of monkeys) is taken off my back.\n\nLearning Smalltalk will give you a grounding in object oriented software development from the perspective of the man who invented OO (Alan Kay). The idea of a overlapping windowing environment came from Smalltalk.\n\nA stumbling block to learning Smalltalk is that it is a message passing system with a strange syntax for flow control like:\n\ni < 60 ifTrue: [ self walk ]\n\nIt has a very mature class library that has a consistency I've not seen too many places. The class library in all environments (even commercial Smalltalks) has available source which allows you to learn from the masters of the language. When programming Smalltalk, I always ask the question how is it done in the environment.\n\nSmalltalk is generally implemented in an image which is a live environment for all the objects in your system.\n\nThe interactive debugger really seperates Smalltalk from Ruby.\n\nSeaside is the web development framework and has given Smalltalk a new spotlight. It is a continuation based environment that allows for intra-hit debugging and a smooth Rich Client type development experience (top application flow can be designed in a single method). It's integration with script.aculo.us has been done in such a way that it is easily called from within Smalltalk.\n\nNigel, one quote I have is this:\n\nAlthough it's now a long time since I did anything with it, I nominate Smalltalk, I still haven't come across anything quite like it for being able to transfer thoughts into computer code. It's not just the language: It's the wonderful browser environment, the libraries, and the culture of writing clear, well-designed code as quickly as anything else can crank out spaghetti. When the participants at JavaOne were extolling how Java was so much more productive than anything else, I needed a brown paper bag. Oh well, back to sorting out my classpaths... -- Martin Fowler (Software Development Magazine, Jan 2001)\n\nI found it here.\n\nWould disagree with the poster who reckons you wouldn’t use Smalltalk for large apps – that’s precisely where it shines. But I have created fairly groovy (note lowercase) prototype apps in under a week too.\n\nI learned OO in ST starting in 92, incredibly glad I did so. It gave me a real background in OO. Thinking in classes. No types. ST has a real emphasis on messaging. If you want to know something send an object a message and get an answer. IMHO, the ethos and the IDE really encourage you to do the right thing with your coupling and cohesion.\n\nIn my Java day job, I’m stuck with files, generics, IDE’s like eclipse that are orders of magnitude less productive that any ST IDE. I was using ST the only time I finished a development ahead of schedule. In fact it was so productive, and we got so much reuse I had to be moved off to another project, as I had nothing to do! (Ok, maybe I could have spent time learning to estimate...)\n\nDownload squeak, find a good book and play. Only downside is that if your day gig is using Java or C#, you’ll end up wishing you could use ST. You’d get home sooner.\n\nChris Brooks\n\nWould not start learning it if I had the time. Why not? Because it would be more productive and lucrative financially to learn C# or Java.\n\nOn the other hand if your a hobbyist, and would like to go on an archeological dig, then I'd suggest spending some time looking at the What, When, Why and how of smalltalk by researching Alan Kay. Fascinating story and an incredible person (after all, he earned the Turning Award). Then maybe play with squeak a little to get a feeling for the language. After this you might have a newly found respect/understanding of blocks, closures, and Object Oriented principles.\n\nI know and use Smalltalk, have for about 15 years, still maintaining it, and would not recommend Smalltalk to a friend. Why not? Employment is a good thing to have and keep getting. Although you can learn a lot from Smalltalk you can't easily turn that into gainfully being employed in this day and age.\n\nAlso, you appeared to be excited over Seaside and I would assume the Seaside/GemStone partnership. I've used GemStone for quite some time and the two together are very appealing. I hope they can get the market share and momentum required to be successful.\n\nAbsolutely, learn Smalltalk! This is 2015 and Smalltalk is on the rise again, thanks to Pharo. Pharo is FREE. Pharo is evolving quickly into a powerful enterprise tool. At Version 4.0, and soon to be 5.0, it has matured a great deal in just four years!\n\nThen there's Amber, which is Smalltalk for the web. It's also FREE and evolving quickly.\n\nDespite Smalltalk's reputation, this is not your father's Smalltalk. Modern Smalltalk is exciting and promising.\n\nIt's true that Smalltalk jobs are not (yet) plentiful. But if enough of you aggregate to a new wave of Smalltalkers, then the industry will adapt to it and we'll see wider adoption of Smalltalk in business. The question is, do you have the vision?\n\nI've been a software engineer for quite a few years now. I've heard people bring up Smalltalk a few times, and certainly Smalltalk has been around since about 1980, but it's one of those languages that's never seemed to make it into the software mainstream. Sort of like Objective C, CLIPS, PL/I, etc--something you may have heard of, but something that most folks have never programmed in.\n\nI probably wouldn't take the time to learn Smalltalk unless I needed to for a particular job. I looked at some Smalltalk tutorials and examples briefly a few years back, and it looks like it has some clear advantages for certain aspects of OO programming (like the message concept seems cool). But sadly, it is not mainstream, and doesn't seem to be gaining much momentum.\n\nThis thread has become very actual for me. I'm planning for a Software migration to a web-application. It's a database based software. I'm especially checking the alternatives 1) Rails 2) Seaside\n\nIf I can get the figures for the Gemstone/S as Database, I'll consider that also. So for me it means I have to learn Smalltalk (better) than before. Because it could be that it will be my work for the next 15 years. You would (and should not) work with software you don't like for that long ;-). I've the impression Gemstone/S is one of the \"killer\" applications. But persistence of Objects still is a very difficult field....\n\n1) Yes! It's always good to learn a language. If you are going to learn a language, make it a powerful, influential language that can be learnt easily and quickly.\n\nSmalltalk remains a pre-eminent language and environment for learning OO concepts.\n\nIt is all objects, all the way down. This makes for a really consistent approach to working.\n\nIntegers are instances of Class Integer. Strings are a collection of character objects. Classes are singleton instance objects for the class they define.\n\nControl structures work by sending get messages to instances of Class Boolean.\n\nEven anonymous methods (blocks of code, aka blocks) are objects.\n\nEverything is done by sending a message to an object. The syntax can be fitted on a postcard.\n\nThe clarity of the concepts and their implementation in Smalltalk mean that you can develop ways of thought which transfer directly into Java, Ruby and C#. I expect it's true for Python, too.\n\nIt's so good for making the concepts clear that a major UK University used Smalltalk to train 5,000 people a year in object-oriented computing.\n\nSqueak 5, has just been released. It has gained major performance increases from its new Cog/Spur VM, which features with progressive garbage-collection.\n\nPharo 4 has a lovely clean-looking desktop theme. The next version, Pharo 5, will be released soon. It will move to using the Cog/Spur VM, it will have about 5,000 classes in the release, and additional packages of classes are readily available from the net via the Configuration Browser tool.\n\nSqueak 5 is performant even on first-gen Raspberry Pis, and is almost 50% faster on the new $5 Raspberry Pi zero. $99 buys you a Raspberry Pi 2, screen and case - running a mature, fully feature-complete IDE.\n\nLeading edge research is being done on co-ordinated, distributed OO systems in Smalltalk (e.g. Naiad and Spoon).\n\nSome of the world's largest corporate databases are run on Smalltalk - including tracking of 60% of the world's shipping containers, and trading systems in the world's largest bank.\n\nYou can use Smalltalk as a sort of super-powered CoffeeScript, writing in Amber Smalltalk and transpiling to JavaScript, running in the browser.\n\nSqueak, Pharo, and Amber are all Free, Open-source, open-licenced languages and environments.\n\nSqueak and Pharo provide write-once, run anywhere facilities for MacOS, Windows and Linux. (Possibly RiscOS, too).\n\nDolphin Smalltalk is targetted firmly at native Windows look-and-feel, and lets you compile closed .exes of your finished work for distribution to end users. Further development of Dolphin by the vendor has stopped, but it is completely functional, and, like all Smalltalks, designed to be massively extensible. (Did I mention that Pharo now has 5,000 classes, compared to Squeak's 3,000? Pharo is a fork of Squeak 3.9)\n\n**There is a How-to guide for installing and starting Squeak, Amber, Pharo, Cuis and Dolphin at: ** http://beginningtosmalltalk.blogspot.co.uk/2015/11/how-to-get-smalltalk-up-and-running.html\n\nThe Seaside web framework runs on Squeak and on Pharo. It's a wonderful mature tool, as is the more traditional AidaWeb framework.\n\nVisualAge, VisualWorks and Gemstone all provide enterprise-grade robust systems. Gemstone provides an infinitely scalable object database with transactions and persistence.\n\n2) Yes - I do already use it.\n\nI learnt it via the Open University, and was immediately productive in Ruby (a copy of the Pickaxe book and the library reference by my side). It helped me enormously with Java, and with Xerox Moo-code.\n\nI have just returned to it to write apps to control manage and distribute responsive, massively multi-platform mobile apps.\n\nI expect that soon I'll be re-writing my JavaScript mobile apps using Amber, too.\n\nI don't really know what you're looking for.\n\nIf you are looking for a different language to write in, I'd think that would depend heavily on the libraries available. I know neither Ruby nor Smalltalk, but it seems likely that the most efficient way to write Ruby on Rails-sorts of applications may not be Smalltalk.\n\nIf you are looking to learn the ideas behind Ruby, this might be a very good move. I don't have anything quantitative, but I always felt better about using tools (such as language systems) if I knew more than just the tools, if I kmew the ideas behind them or how they worked.\n\nIf you want to learn different sorts of object-oriented languages, you might well want to learn Smalltalk (if it differs significantly from Ruby), something like Java or C++, and perhaps also the Common Lisp Object System.\n\nIf you just want to learn something different, Smalltalk may well be a good choice. I'd also suggest Common Lisp, and other people will doubtless have other suggestions (can you get a good Forth system nowadays?)."
    }
}