{
    "id": "dbpedia_7491_2",
    "rank": 29,
    "data": {
        "url": "https://blog.min.io/how-to-benchmark-minio-warp-speedtest/",
        "read_more_link": "",
        "language": "en",
        "title": "How to Benchmark MinIO with WARP and Speedtest",
        "top_image": "https://images.unsplash.com/photo-1612181345252-485e25c59eb2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDEwfHxzcGVlZCUyMGdhdWdlfGVufDB8fHx8MTY0NTY2NzM0MA&ixlib=rb-1.2.1&q=80&w=2000",
        "meta_img": "https://images.unsplash.com/photo-1612181345252-485e25c59eb2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDEwfHxzcGVlZCUyMGdhdWdlfGVufDB8fHx8MTY0NTY2NzM0MA&ixlib=rb-1.2.1&q=80&w=2000",
        "images": [
            "https://blog.min.io/assets/img/logo.svg?v=2b104e5512",
            "https://blog.min.io/assets/img/erasure-code-calculator.svg?v=2b104e5512",
            "https://blog.min.io/assets/img/ref-hardware.svg?v=2b104e5512",
            "https://blog.min.io/assets/img/ec-icon.svg?v=2b104e5512",
            "https://blog.min.io/content/images/2021/04/matt-headshot-jan2020-1.jpg",
            "https://images.unsplash.com/photo-1612181345252-485e25c59eb2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDEwfHxzcGVlZCUyMGdhdWdlfGVufDB8fHx8MTY0NTY2NzM0MA&ixlib=rb-1.2.1&q=80&w=300 300w,                                        https://images.unsplash.com/photo-1612181345252-485e25c59eb2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDEwfHxzcGVlZCUyMGdhdWdlfGVufDB8fHx8MTY0NTY2NzM0MA&ixlib=rb-1.2.1&q=80&w=600 600w,                                        https://images.unsplash.com/photo-1612181345252-485e25c59eb2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDEwfHxzcGVlZCUyMGdhdWdlfGVufDB8fHx8MTY0NTY2NzM0MA&ixlib=rb-1.2.1&q=80&w=1000 1000w,                                        https://images.unsplash.com/photo-1612181345252-485e25c59eb2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxMTc3M3wwfDF8c2VhcmNofDEwfHxzcGVlZCUyMGdhdWdlfGVufDB8fHx8MTY0NTY2NzM0MA&ixlib=rb-1.2.1&q=80&w=2000 2000w",
            "https://lh3.googleusercontent.com/Xt2hFWBQblqDP9dEiAE1k0xXTBAyVTaPDcEf02KeRYnRNOokeO5IICD8mlqw5glyZParvsiCUCLWLiLlRg2X6VBjwQ0xJ9eMK8abEFlYaAugdAwn0KNiu9q9YQCLvd1IMmgBCUvF",
            "https://lh6.googleusercontent.com/14fQt-kID5JpSMdNMXhbEdhOvqbxmmpP0yCuDGSk6JQ5ukEBejExJZ8tbmqtfDPxMKFJZCYQt2RIij1TGi4ep6bIDhDKLMUMswq_WV2amnsZp-4I6yC7-5l1yzYXSUEj3R-WOvzN",
            "https://lh4.googleusercontent.com/A6qKXm5tCBQmzZOZxbStfKMNXoEAcr6S1eG6di7YacXFJhLf2g1HYUxq7GS9xHY507pY-K2LxlXWPzwYwEJvhzLixHi3zbLxSDcQdW8fC0opdgbiqFZq-nzPqJuF-8kh9FbOqaps",
            "https://lh3.googleusercontent.com/W6yvpa87NSZPV3FRwfBw2V4BhBMeT5ZIOA0kqkJeeD8zxCdfmgxoscidNNwxjoerZVHcOGv1lh9sS-DMb4A14eBaDlL2F2J43Ey60QoyCNcRp1gYkB5UGH3oNlFY8IMbzpmEvEZK",
            "https://blog.min.io/content/images/size/w300/2024/01/Screenshot-2024-01-26-at-1.31.07-PM.png 300w,                        /content/images/size/w600/2024/01/Screenshot-2024-01-26-at-1.31.07-PM.png 600w,                        /content/images/size/w1000/2024/01/Screenshot-2024-01-26-at-1.31.07-PM.png 1000w,                        /content/images/size/w2000/2024/01/Screenshot-2024-01-26-at-1.31.07-PM.png 2000w",
            "https://blog.min.io/content/images/size/w300/2024/01/blog-header-debugging-MinIO-installs.png 300w,                        /content/images/size/w600/2024/01/blog-header-debugging-MinIO-installs.png 600w,                        /content/images/size/w1000/2024/01/blog-header-debugging-MinIO-installs.png 1000w,                        /content/images/size/w2000/2024/01/blog-header-debugging-MinIO-installs.png 2000w",
            "https://blog.min.io/content/images/size/w300/2024/01/blog-header---add-pool-and-expand.jpeg 300w,                        /content/images/size/w600/2024/01/blog-header---add-pool-and-expand.jpeg 600w,                        /content/images/size/w1000/2024/01/blog-header---add-pool-and-expand.jpeg 1000w,                        /content/images/size/w2000/2024/01/blog-header---add-pool-and-expand.jpeg 2000w",
            "https://blog.min.io/assets/img/footer-logo.svg?v=2b104e5512",
            "https://blog.min.io/assets/img/soc.png?v=2b104e5512",
            "https://blog.min.io/assets/img/slack.svg?v=2b104e5512"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Matt Sarrel"
        ],
        "publish_date": "2022-02-24T01:53:01+00:00",
        "summary": "",
        "meta_description": "MinIO is the fastest object storage available, but how do you know that underlying infrastructure is free from bottlenecks?",
        "meta_lang": "en",
        "meta_favicon": "https://blog.min.io/content/images/size/w256h256/2019/05/minio-publication-icon-7.png",
        "meta_site_name": "MinIO Blog",
        "canonical_link": "https://blog.min.io/how-to-benchmark-minio-warp-speedtest/",
        "text": "Customers bring MinIO into their environments to gain high-performance S3-compatible object storage that runs on any physical or virtual hardware and Kubernetes. Our published benchmarks demonstrate that MinIO is the fastest object storage available, but it can only run as fast the hardware and network you give it. Performance is a big focus for our team, so we do everything we can to help administrators get the most out of MinIO. In order to verify that underlying infrastructure can support MinIO optimally, we provide two methods to assess performance and identify potential bottlenecks: WARP and Speedtest.\n\nModern applications such as AI/ML, advanced analytics and databases require high-performance object storage. MinIO’s combination of scalability and high-performance puts every workload, no matter how demanding, within reach. When performance is critical, you need to know that you’re achieving the best performance possible. Results from WARP and Speedtest can be used to track performance over time and proactively pinpoint potential problems before they grow into serious issues.\n\nWARP is an open-source full-featured S3 performance assessment software built to conduct tests between WARP clients and object storage hosts. WARP measures GET and PUT performance from multiple clients against a MinIO cluster. WARP has many options, configured by command line or environmental variables, allowing you to create tests that align with your workloads. Remember - it’s absolutely critical to assess performance in a meaningful way and test using data and a workload that represents the real world conditions in which your object storage operates.\n\nIn contrast, Speedtest is an easy-to-use automated performance test that provides a streamlined experience and concise results. We introduced Speedtest in November to provide MinIO administrators with the ability to run a distributed performance assessment of their MinIO clusters with a single command. Speedtest runs PUTS, then GETS, incrementally increasing load to pinpoint maximum aggregate throughput. Tests can take anywhere from a few seconds to several minutes to execute depending on your MinIO cluster.\n\nThere are some important differences between WARP and Speedtest. WARP is a complete tool that tests performance of your MinIO cluster via operations conducted by WARP clients. Client machines are conducting PUTS and GETS of objects across the network to your distributed MinIO cluster. This makes WARP an excellent mechanism for testing anticipated client-server performance. In contrast, Speedtest runs on MinIO instances to conduct PUTS and GETS of objects to other MinIO instances in the same cluster. As such, Speedtest tells you what the server side of the performance equation is capable of.\n\nWARP contains just about every test (GET, PUT, DELETE, LIST, STAT, RETENTION) you might want to run against object storage, and test runs can include a custom mix of object sizes to match your workloads. Speedtest runs through set test parameters to pinpoint maximum throughput quickly. While WARP requires additional software, Speedtest is included with MinIO and can be run from the mc interface or MinIO Console. To aid in troubleshooting, customers can share Speedtest results with MinIO engineers with a single click.\n\nWARP: A Complete Object Storage Benchmarking Tool\n\nFirst, let’s take a look at WARP. WARP is a tool that allows you to thoroughly benchmark MinIO, or any S3-compatible object storage, performance under a variety of conditions. By default, WARP will perform a mixed test of read and write over all disks utilized by MinIO running in distributed mode.\n\nFor this demo. we’re going to be running WARP to test MinIO running on AWS in distributed mode. We’ve been doing this pretty often lately, so we can advise potential and current customers of the highest-performing configurations we have found by testing them.\n\nWARP is located in a GitHub repository, where you will also find detailed documentation.\n\nWe’re going to start by deploying MinIO in distributed mode. You can download MinIO and install it in your environment by yourself, or you can follow this tutorial to install MinIO on AWS EC2.\n\nEither way, we are going to start with a distributed MinIO deployment:\n\nOnce MinIO is up and running you will be able to measure performance with WARP, so let’s get started.\n\nStep 0: Create 4 instances (also known as nodes) with Distributed MinIO.\n\nPlease read and follow steps provided in How to Install MinIO in Distributed Mode on AWS EC2.\n\nStep 1: Create 4 more instances for WARP clients for a total of 8 AWS instances.\n\nFor all Amazon UI or AWS CLI, please follow steps from the previous blog post to deploy instances, but do not configure additional storage. The instances running WARP must be powerful enough to quickly generate objects and measure PUT and GET operations, but do not require the storage volume needed by a MinIO node.\n\nStep 2: Add hosts in /etc/hosts file at WARP clients.\n\nGet the IP Addresses of the MinIO instances\n\nGet the IP Addresses of the WARP clients\n\nAdd those address in the /etc/hosts file:\n\n172.31.23.237 host1\n\n172.31.26.78 host2\n\n172.31.26.90 host3\n\n172.31.19.110 host4\n\n172.31.27.18 warp1\n\n172.31.23.81 warp2\n\n172.31.19.28 warp3\n\n172.31.19.7 warp4\n\nNotice that we recommend listing and working with hosts in consecutive order. This simplifies launching WARP from the command line and makes it easier to locate each WARP client and MinIO host.\n\nStep 3: Install WARP on the clients and run it.\n\n[root@ip-172-31-19-7 ec2-user]# wget https://github.com/minio/warp/releases/download/v0.5.5/warp_0.5.5_Linux_arm64.tar.gz 2022-02-08 20:06:04 (66.3 MB/s) - 'warp_0.5.5_Linux_arm64.tar.gz' saved [3943887/3943887] [root@ip-172-31-19-7 ec2-user]# tar -xzvf warp_0.5.5_Linux_arm64.tar.gz LICENSE README.md warp_logo.png warp [root@ip-172-31-19-7 ec2-user]# ./warp client warp: Listening on :7761\n\nNotice that each WARP client is listening on port 7761\n\nStep 4: Run WARP and launch a mixed benchmark.\n\nYou’ve completed a basic mixed-mode performance test using WARP. While we used a mixed-mode test to demonstrate WARP, you will typically obtain better results that are more aligned to real-world usage) by breaking out individual operations (GET, PUT, LIST) into their own test runs instead of running a mixed-mode test.\n\nWe encourage you to refer to the documentation to learn about executing more test scenarios. For example, you can enable TLS and server-side encryption to measure their impact in your environment. You can stress infrastructure more by increasing the number of concurrent tests. You can use a random mix of object sizes, or specify an object size that matches your current environment and workload. You can configure tests to run for a defined period of time or to auto-terminate as we did above.\n\nWARP results are shown on-screen and saved to a local CSV file compressed using zstandard.\n\nSpeedtest for a Quick and Easy Performance Assessment\n\nIn the event that you don’t want the full flexibility of WARP, we’ve built a quick and easy way to measure MinIO performance using Speedtest. Speedtest is most commonly run in autotune mode, incrementally increasing load to pinpoint maximum aggregate throughput.\n\nYou can use mc to run Speedtest:\n\n$ mc support perf object <alias>\n\nOr, you can run Speedtest from MinIO Console, the browser-based GUI for configuring, managing and reporting on MinIO clusters. Simply navigate to the Support menu and click Performance, then click on the start button.\n\nThe performance test will run. When it is complete, aggregate GET and PUT performance as well as performance of individual nodes is displayed.\n\nFor more details and examples for Speedtest, please see this tutorial.\n\nWarp Speed Ahead!"
    }
}