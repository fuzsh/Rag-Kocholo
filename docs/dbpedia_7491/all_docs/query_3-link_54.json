{
    "id": "dbpedia_7491_3",
    "rank": 54,
    "data": {
        "url": "https://medium.com/warp-protocol/warp-speed-ahead-introducing-next-level-decentralized-automation-powered-by-warp-v2-ce10a7af2d16",
        "read_more_link": "",
        "language": "en",
        "title": "Warp Speed Ahead: Introducing Next-Level Decentralized Automation, Powered by Warp v2",
        "top_image": "https://miro.medium.com/v2/resize:fit:1200/1*M-hao4GhtOGKX8eaEIyX2A.jpeg",
        "meta_img": "https://miro.medium.com/v2/resize:fit:1200/1*M-hao4GhtOGKX8eaEIyX2A.jpeg",
        "images": [
            "https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png",
            "https://miro.medium.com/v2/resize:fill:88:88/1*vGBbWUuVoJf-kBx-F4WqDA.png",
            "https://miro.medium.com/v2/resize:fill:48:48/1*BuyNJ1L50bPTQYWnc_4j8Q.png",
            "https://miro.medium.com/v2/resize:fill:144:144/1*vGBbWUuVoJf-kBx-F4WqDA.png",
            "https://miro.medium.com/v2/resize:fill:64:64/1*BuyNJ1L50bPTQYWnc_4j8Q.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Warp Protocol",
            "medium.com"
        ],
        "publish_date": "2024-02-21T17:06:26.868000+00:00",
        "summary": "",
        "meta_description": "We’re excited to unveil Warp v2, a major upgrade that extends the capabilities of Warp Protocol — the decentralized automation layer of Cosmos. This upgrade brings substantial changes that enhance…",
        "meta_lang": "en",
        "meta_favicon": "https://miro.medium.com/v2/5d8de952517e8160e40ef9841c781cdc14a5db313057fa3c3de41c6f5b494b19",
        "meta_site_name": "Medium",
        "canonical_link": "https://medium.com/warp-protocol/warp-speed-ahead-introducing-next-level-decentralized-automation-powered-by-warp-v2-ce10a7af2d16",
        "text": "We’re excited to unveil Warp v2, a major upgrade that extends the capabilities of Warp Protocol — the decentralized automation layer of Cosmos.\n\nLaunch Warp v2 app\n\nBuild using Warp’s advanced SDK\n\nGet in touch with the Warp team to discuss integration\n\nThis upgrade brings substantial changes that enhance the developer experience, improve efficiency, and expand the capabilities of Warp, including an overhauled account management system, a revamped fee mechanism, and a new primitive for job executions.\n\nUsing Warp v2, developers on Terra, Neutron, and Injective (with more chains expected in the future) can create novel product experiences that attract new users and capital through cost-efficient, on-chain automation — no smart contract changes necessary.\n\nDevelopers interested in trying Warp can create a test job on the Warp app and get in touch with the Warp team to discuss integration by filling out the contact form. Existing Warp users are encouraged to migrate their jobs to Warp v2 by following the steps in the Migration section below.\n\nWarp v2: Limitless On-Chain Automation\n\nWarp empowers developers to build intricate product features and experiences without modifying a single smart contract. With Warp, you can schedule future transactions (known as jobs) triggered by any set of on-chain circumstances (called conditions). Anything that can be verified on-chain can be used as a condition. Once a job is created, it’s added as a pre-signed message to the Warp job queue, which is monitored by bots called keepers.\n\nWhen creating a Warp job, a small fee is charged (more information below). Once the conditions for a job are met, anyone running a Warp keeper can execute the job and receive the rewards offered by the job creator for successful execution.\n\nInstead of modifying smart contracts to enable new automations, developers can attract new users and capital by integrating Warp functionality into their front end, allowing users to set their desired conditions and create Warp jobs.\n\nThe main new features of Warp v2 include:\n\nAccount Abstraction: Create jobs instantly without the need for a Warp user account.\n\nMultiple Funding Accounts: Easier balance management across different jobs.\n\nUpdated Fee Structure: An easy-to-use and transparent fee system with LUNA value capture.\n\nNew Primitive — Switch Statements: For more sophisticated automation scenarios via the Warp Software Development Kit (SDK).\n\nAll of these changes improve the developer experience and enable an expanded set of use cases to be developed with the help of Warp’s decentralized automation system. Read on to learn more about the new features and what to expect in the near future.\n\nStreamlined Account Management\n\nAccount Abstraction: Replacing User Warp-Accounts with Job Accounts\n\nWarp v2 replaces the traditional user Warp account with job accounts, eliminating an extra step in the job creation process.\n\nNow, when a user creates a job on an app that has integrated Warp — like Astroport, where users can create and modify limit orders for various Cosmos assets — a job account is automatically generated for the user within the same transaction. In the case of recurring jobs, (i.e., a job that is rescheduled with the same parameters after being executed, such as automated reward distribution) the same job account is used throughout, which enables more sophisticated automation.\n\nJob accounts function as dedicated sessions throughout the duration of a job. They utilize assets specifically allocated for the job’s execution task on the application or contracts, as specified in the job message.\n\nMultiple Funding Accounts: Flexibility for Recurring Jobs\n\nRecognizing the need for payment flexibility, Warp v2 enables users to create and manage multiple funding accounts, each serving as a dedicated source for distributing rewards to keepers and paying Warp job fees. This feature is particularly beneficial when managing balances for multiple jobs and creating recurring jobs, allowing for seamless fee management and top-ups without interrupting recurring job execution.\n\nFor developers testing Warp out on the web app, you can create a funding account or view your existing funding accounts by selecting the third icon on the left sidebar.\n\nWhen clicking on one of the funding accounts, you are forwarded to the Balances section of the respective account, where you can view your balance and deposit or withdraw assets.\n\nWhen creating a job, you have the option to select the funding account you want to use. Note that for recurring jobs, a funding account is needed or the transaction will revert and fail.\n\nDevelopers using the Warp SDK can create funding accounts through the create_job.funding_account function and manage funding accounts as well as job accounts via the new Warp-Account-Tracker contract.\n\nIntroducing Warp-Account-Tracker: Enhanced Account Management\n\nTo enable developers to manage multiple user accounts without needing to interact with the Warp app, Warp v2 introduces a new contract — the Warp-Account-Tracker. This contract serves as a hub for overseeing job and funding accounts, holding information about accounts that are taken (currently used for a job) or free (not being used).\n\nBy consolidating the oversight of job and funding accounts and maintaining up-to-date information about the status of each account, the Warp-Account-Tracker reduces the risk of account conflicts and significantly contributes to the efficiency and organization of account management within the Warp ecosystem.\n\nImproved Fee Structure\n\nWarp v2 introduces a revamped fee mechanism, which:\n\nAutomatically estimates the job reward needed to motivate keepers to execute a user’s job, enhancing UX for both users and keepers by eliminating unexecuted jobs and increasing keeper profitability.\n\nAccrues greater value to LUNA through token buybacks and fee burns.\n\nEnables users to define how long they’d like to keep their job in the queue.\n\nDisincentivizes malicious actors from spamming/clogging the Warp job queue.\n\nWhen a user creates a Warp job, they pay a single fee, which is dynamically calculated and consists of four components:\n\nCreation Fee: Calculated based on the Warp job queue size. The creation fee grows linearly as the queue size increases (to prevent spam).\n\nMaintenance Fee: Determined by how long the user wants their job in the queue (in days).\n\nJob Reward: The reward paid to the keeper that successfully executes the user’s job if the job’s conditions are met.\n\nBurn Fee: LUNA equal to 25% of the job reward is burned for every Warp job created.\n\nAll of these are estimated and paid upfront at job creation, making the mechanism more transparent and straightforward. The total cost of a Warp job is the sum of the creation fee, maintenance fee, job reward, and burn fee.\n\nThe maintenance fee, based on the duration the user would like the job to be active in the queue (with a maximum of 180 days), replaces the previous eviction fee taken every 24 hours in Warp v1. If a job’s conditions haven’t been met by its expiry date, a keeper can evict the job from the queue, earning a portion of the job’s reward and the minimum maintenance fee (currently set at .25 LUNA).\n\nThe job reward is automatically estimated based on the transaction fee. Nonetheless, users retain the freedom to manually adjust the reward amount according to their preferences, ensuring a user-friendly yet customizable rewards system.\n\nThe total cost and fees are calculated as follows and displayed on the new job summary page as shown below:\n\nTotal cost = total fees + job reward\n\nTotal fees = creation fee + maintenance fee + burn fee\n\nLUNA Value Capture\n\nUnlike many decentralized applications that utilize their own tokens, Warp is part of a token-less, cross-chain suite of Terraform Labs (TFL) projects designed to accrue value to LUNA — the native governance and staking token of the Terra blockchain ecosystem. In line with the launch of Warp v2 and its new fee mechanism, all Warp creation, maintenance, and burn fees — regardless of the deployment chain — will be used to buy back and burn LUNA.\n\nTo keep things simple, the current fee configuration, which can be found here and changed as needed at any point, targets a minimum of 1 LUNA burned per Warp job created. If the job is created on a Warp deployment other than Terra, the total fees paid to create the job are used to buy LUNA before burning it.\n\n1 Warp job created = at least 1 LUNA burned\n\nAs an example, if a user creates a Warp job on Neutron with a duration of 7 days and a current job queue size of 3,000, the amount of LUNA that would be bought and burned equals the minimum total job fees:\n\nMinimum fees = min creation fee + min maintenance fee + min burn fee = 0.5 LUNA + 0.25 LUNA + 0.25 LUNA = 1 LUNA\n\nThis v2 fee mechanism design ensures that as the Warp economy grows, the LUNA community participates in the upside.\n\nNew Primitive — Switch Statements\n\nWarp v2 introduces another powerful new feature for SDK users: arrays of job executions. This allows users to define several execution pairs within a single job, each associated with a specific condition. The first condition that evaluates to ‘True’ triggers its corresponding message, effectively acting as a switch statement.\n\nThis can be considered a new primitive for job executions, as it allows for multi-state transitions and opens up exciting possibilities for more complex automation scenarios, such as price-based trading strategies, stop-loss limits, and more.\n\nWarp Job Migration Guide\n\nAs an existing Warp user, please make sure to migrate your jobs to Warp v2 before April 1st, 2024 by following the steps below:\n\nGo to v1.warp.money and click the Migrate button on the banner.\n\n2. Click on the job you want to migrate and confirm the transaction in your wallet. Please note that each job has to be selected and confirmed separately.\n\n3. For recurring jobs, please create and select a funding account to migrate your job.\n\n4. To migrate your funds, click Migrate funds, review your account balance, and hit Migrate funds again. Confirm the transaction, and you’re done!\n\nYou can now view and manage all of your migrated jobs, as well as create new jobs using the new web app at app.warp.money.\n\nWarp v1 will be maintained until April 1st, 2024. Please migrate all of your jobs before then. In case of any issues or questions, don’t hesitate to reach out to the team on Telegram or Discord.\n\nIn the coming days, we’ll be working with integration partners like Astroport to get users’ jobs and funds migrated. Keep an eye out for announcements on Warp’s X/Twitter account in case any user action is required. DAOs that have automated their reward distribution with Warp can use the SDK for migration by following this example or migrate their jobs via the UI as shown above. Please contact us on Telegram or Discord for questions and assistance on migration.\n\nUpcoming Partnerships & Future Plans\n\nLeading Cosmos projects are already leveraging Warp to deliver innovative features to their users, including Astroport’s limit orders, Eris Protocol’s auto-compounding yields, and automated rewards distribution from several DAOs on Enterprise DAO, with close to 10K jobs executed to date.\n\nBut this is just the beginning! Following the v2 launch, exciting integrations are coming soon with Astroport, Mito on Injective, Nibiru, PRYZM, and Quasar on Osmosis.\n\nTo celebrate the launch, we’ve invited the Quasar team to join us on an X/Twitter Space on Friday, February 23rd at 3 pm UTC to discuss the Warp use cases they’re looking to implement. Set your reminders to join here.\n\nWarp v2 represents a significant advancement in decentralized automation technology. The replacement of user accounts with job accounts, the introduction of multiple funding accounts, a new fee mechanism, and arrays for job executions all contribute to a more user-friendly, efficient, and scalable automation platform."
    }
}