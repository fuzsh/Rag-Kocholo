{
    "id": "dbpedia_8512_3",
    "rank": 81,
    "data": {
        "url": "https://discourse.igniterealtime.org/t/use-of-feature-jabber-iq-registered/67249",
        "read_more_link": "",
        "language": "en",
        "title": "Use of feature jabber:iq:registered",
        "top_image": "https://discourse.igniterealtime.org/uploads/default/original/2X/7/702479b3fc3566cb45835478e35bbf077708b8d0.png",
        "meta_img": "https://discourse.igniterealtime.org/uploads/default/original/2X/7/702479b3fc3566cb45835478e35bbf077708b8d0.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2007-09-12T02:47:16+00:00",
        "summary": "",
        "meta_description": "I&#39;m using Openfire 3.3.1, Gateway plugin 1.0.2, Smack 2.2.1.  (I&#39;m aware that these are all old versions.) \n\nI&#39;m following XEP-0100.  In the discovery response I see a feature jabber:iq:registered. \n\nI got the impression&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://discourse.igniterealtime.org/uploads/default/optimized/2X/1/19ee6681210539a5880e16ee2efa63a374bb68c8_2_32x32.ico",
        "meta_site_name": "Ignite Realtime Community Forums",
        "canonical_link": "https://discourse.igniterealtime.org/t/use-of-feature-jabber-iq-registered/67249",
        "text": "I’m using Openfire 3.3.1, Gateway plugin 1.0.2, Smack 2.2.1. (I’m aware that these are all old versions.)\n\nI’m following XEP-0100. In the discovery response I see a feature jabber:iq:registered.\n\nI got the impression I can use this to determine whether a username is already registered with a gateway transport, & I’d like to use this rather than my current implementation in which I register usernames with gateway transport whenever I login the Openfire user.\n\nI used the Ad-hoc message tab of the debugger to send an IQ GET using the jabber:iq:registered namespace to the gateway transport, but it returns error code 503 (service unavailable). The same procedure gives sensible results for namespaces jabber:iq:version & jabber:iq:gateway, also listed in the discovery response, so I feel I’m on the right track.\n\nIs my interpretation of jabber:iq:registered correct?\n\nFrom poking around a little more, I’ve found that when I send an IQ GET for jabber:iq:register, the response contains username & password of the registered gateway transport user if any; is this how I’m supposed to determine whether a transport user is already registered? Is this the semantics implied by the jabber:iq:registered feature?\n\nThanks\n\n– Richard\n\njabber:iq:registered is something we made up that Spark makes use of. It is basically just a flag to indicate that you are registered with a transport so that a client -could- do a disco info query against the transport to see ahead of time if the user is registered or not. It’s not been submitted as a formal thing for XEP-0100. (it may or may not ever be, depends on what we decide to do with it really =) )"
    }
}