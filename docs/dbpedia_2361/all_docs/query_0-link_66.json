{
    "id": "dbpedia_2361_0",
    "rank": 66,
    "data": {
        "url": "https://github.com/Beliavsky/Fortran-code-on-GitHub",
        "read_more_link": "",
        "language": "en",
        "title": "GitHub: Directory of Fortran codes on GitHub, arranged by topic",
        "top_image": "https://opengraph.githubassets.com/252bbaaf0f0dbe1aef44e841fa5f28fe1c97d36acb94698c3a09a1096823b352/Beliavsky/Fortran-code-on-GitHub",
        "meta_img": "https://opengraph.githubassets.com/252bbaaf0f0dbe1aef44e841fa5f28fe1c97d36acb94698c3a09a1096823b352/Beliavsky/Fortran-code-on-GitHub",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Directory of Fortran codes on GitHub, arranged by topic - Beliavsky/Fortran-code-on-GitHub",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/Beliavsky/Fortran-code-on-GitHub",
        "text": "Art and Music\n\nAstronomy and Astrophysics\n\nBenchmarks\n\nBiology and Medicine\n\nClimate and Weather\n\nCode Tools\n\nCompiler Tests\n\nComputational Chemistry\n\nComputational Fluid Dynamics\n\nContainers and Generic Programming\n\nCryptography\n\nDatabases\n\nDates and Times\n\nEarth Science\n\nEconomics\n\nEngineering\n\nError Handling\n\nExpression Parsers\n\nFast Fourier Transform\n\nFile I/O\n\nFinite Elements\n\nFortran Books and Tutorials\n\nGames and Puzzles\n\nGraphics, Plotting and User Interfaces\n\nGeneral Purpose\n\nInteroperability\n\nInterpolation\n\nLinear Algebra\n\nMaterials Science\n\nMolecular Dynamics\n\nMesh Generation\n\nNeural Networks and Machine Learning\n\nNumerical\n\nNumerical Integration (Quadrature)\n\nOrdinary Differential Equations\n\nOptimization\n\nParallel Programming\n\nPartial Differential Equations\n\nParticle Physics\n\nPhysics\n\nPlasma Physics\n\nRandom Number Generation\n\nReactor Physics\n\nRegular Expressions\n\nQuantum Chemistry and Electronic Structure\n\nSorting\n\nStatistics\n\nStrings\n\nTime Series\n\nUnclassified\n\nUnit Testing\n\nWeb Programming\n\nXML\n\nArt1: program written by Richard Williams in 1968. Its purpose was to give non-progammers access to an IBM System/360 Model 40 computer at the University of New Mexico in order to explore artistic and aesthetic uses of the machine.\n\nformidi: small Fortran MIDI sequencer for composing music and exploring algorithmic music, by Vincent Magnin\n\nforsynth: small Fortran synthesizer to explore sound synthesis, sound effects, electronic music, algorithmic music, etc, by Vincent Magnin\n\nMUSICV: Max Mathew's MUSIC V synthesis program, prepared by Bill Schottstaed for gfortran, with additions and fixes by Victor Lazzarini.\n\nTapTempo Fortran: command line taptempo written in modern Fortran, by Vincent Magnin. Listen to a song and hit enter key with style and you'll get the corresponding number of beats per minute (BPM).\n\nTonbandfetzen: collection of command-line tools to compose music based on audio fragments generated from plain text input, by Jan Berges\n\nuzura3: mpeg audio layer 3 encoder written in Fortran 90/95 (mp3 encoder), by cure-honey. There is also uzura1_fpm that works with the Fortran Package Manager.\n\nXenakisFreeStochasticMusicFortran: working versions of a Xenakis FORTRAN program (Xenakis 1971 Formalized Music p 149)\n\n1-D-Supernova-shock-radius-evolution: 1-D version of the ZEUS 2-D CODE which solves hydrodynamic equations is applied to a SuperNova Remnant (SNR), by Lorenzo Cavazzini\n\nAdaptive Spherical Overdensity Halo Finder (ASOHF): primarily designed to identify bound dark matter structures (dark matter haloes), as well as their stellar counterparts (galaxies) in the outputs of cosmological simulations. Associated paper: The halo-finding problem revisited: a deep revision of the ASOHF code, by David Vallés-Pérez, Susana Planelles, and Vicent Quilis, Astronomy&Astrophysics, 664 (2022).\n\nALBUS_ionosphere: determines the ionosphere total electron content (TEC) over any location on the Earth as a function of location and time, by Tony Willis. It then uses the TEC and a model of the Earth's magnetic field to compute the ionosphere's effect on the Faraday Rotion Measure (RM) observed for an astronomical radio source. The ionosphere's contribution to the RM can then be removed.\n\naquila astrophotography package: small LRGB astrophotography reduction and processing package, by Dominik Gronkiewicz. The package consists of the programs aqstack for stacking and reduction of monochromatic CCD images and aqlrgb for compositing images from many filters into one color picture.\n\nARTEMIS-P: Anisotropic Ray Tracer for Electromagnetism in Magnetospheres, Ionospheres and Solar wind, including Polarisation, by Baptiste Cecconi and C. Baskevitch\n\nastro-api: makes the astronomical calculations for yr.no, by Frank Thomas Tveter et al. The astro-api software uses the JPL ephemeride tables and the SOFA astronomical library, along with algorithms for quick and precise searches, to provide astronomical data on demand, such as sun/moon rise/set, twilight, polar day/night, moon phase, eclipse, solstice times.\n\nastro-fortran: modern Fortran implementations of standard models used in fundamental astronomy, by Jacob Williams. It is a refactoring of IAU SOFA.\n\nastroTools: command-line tools for astronomy and astrophysics, by AstroFloyd\n\nATES-Code: ATES hydrodynamics code, by AndreaCaldiroli, computes the temperature, density, velocity and ionization fraction profiles of highly irradiated planetary atmospheres, along with the current, steady-state mass loss rate.\n\nAutomatic Line Fitting Algorithm (ALFA): identifies and fits hundreds of lines in emission line spectra in just a few seconds. It does this using a genetic algorithm to optimise the line parameters, by Roger Wesson\n\nBI-spectra and Non-Gaussianity Operator (BINGO): numerically evaluates the scalar bi-spectrum and the non-Gaussianity parameter fNL in single field inflationary models involving the canonical scalar field, by dkhaz. The code is based on the Maldacena formalism to evaluate the bi-spectrum.\n\nCAMB: code for Anisotropies in the Microwave Background, by cmbant\n\ncleanest: semiautomatic removal of cosmic rays in astronomical images, by Nicolás Cardiel and Sergio Pascual\n\ncode-ans-qnm-share: computes quasi-normal modes of anisotropic neutron stars, by Vincent Lau Shu Yan\n\nCommander: optimal Monte-carlo Markov chAiN Driven EstimatoR which implements fast and efficient end-to-end CMB posterior exploration through Gibbs sampling, from Cosmoglobe\n\nCompact Object Synthesis and Monte Carlo Investigation Code (COSMIC): rapid binary population synthesis suite with a special purpose of generating realistic compact binary populations. COSMIC can also be used to evolve binaries with BSE in a python environment.\n\nComplete History of Interaction-Powered Supernovae (CHIPS): simulates the circumstellar matter and light curves of interaction-powered transients, by DTsuna et al. Coupling the MESA stellar evolution code and codes implemented by the authors, the user can obtain the circumstellar matter profile and light curves of the interaction-powered supernovae.\n\nCosmology Object Oriented Package (COOP): Reference: Observational effects of a running Planck mass, by Zhiqi Huang\n\nCosmoSIS: cosmological parameter estimation code, by joezuntz et al. It is a framework for structuring cosmological parameter estimation with a focus on flexibility, re-usability, debugging, verifiability, and code sharing in the form of calculation modules.\n\nCUMC3D-Ver1.28: parallel code for high-energy astrophysical simulations, by Ho Sang (Leon) Chan et al. It includes basic MHD solvers and models for simulating accretion discs around supermassive black holes.\n\ncufQUMC: CUDA Fortran version of QU-fitting with replica exchange MCMC method (parallel tempering), with a Python interface, by Shinsuke Ideguchi\n\nDAOPHOT-MCMC: modified version of the subroutine NSTAR.F which implements a Markov chain Monte Carlo (MCMC) routine for fitting highly blended stellar positions and fluxes, by Sean Terry. This code is installed and implemented within the overall DAOPHOT-II structure.\n\nDarkLim: statistical tools for calculating dark matter exclusion limits and sensitivity estimates, from SPICE/HeRALD\n\ndasilva-invariants: Python package with Fortran code to calculate the adiabiatic invariants K and L* from gridded models of Earth’s magnetic field, by Daniel da Silva and Scot Elkington\n\nD-NEAs: Asteroid Thermal Inertia Analyzer (ASTERIA) software. An associated paper is The low surface thermal inertia of the rapidly rotating near-Earth asteroid, by M. Fenucci et al., Astronomy and Astrophysics (2023)\n\ndStar: computing neutron star structure and evolution, by Edward Brown et al.\n\nDUMSES-hybrid: 3D MPI/OpenMP & MPI/OpenACC Eulerian second-order Godunov (magneto)hydrodynamic simulation code in cartesian, spherical and cylindrical coordinates, by Marc Joos\n\nDYnamics, Age and Metallicity Indicators Tracing Evolution (DYNAMITE): Schwarzschild- and stellar-population modelling of stellar systems\n\nECLIPSE: code for paper \"ECLIPSE: a fast Quadratic Maximum Likelihood estimator for CMB intensity and polarization power spectra\" (2021), by J.D. Bilbao-Ahedo et al.\n\netfFinal: Neutron star inner crust code, by mgeshelley\n\nevelchemevol: one-zone closed-box chemical evolution code written in Fortran with OpenMP, by lukeshingles\n\nexotrending: fast and easy-to-use light curve detrending software for exoplanets, from oscaribv\n\nFastQSL: code associated with Zhang, P., Chen, J., Liu, R. and Wang, C., FastQSL: A Fast Computation Method for Quasi-separatrix Layers. The Astrophysical Journal, 2022, 937, 26\n\nfastSHT: code associated with the paper Accelerating spherical harmonic transforms for a large number of sky maps, by Chi Tian, Siyu Li, and Hao Liu\n\nFEMlimb-Astrophysics: algorithm described in the paper Measuring limb darkening of stars in high-magnification microlensing events by the Finite Element Method, by L. Golchin and S. Rahvar, Monthly Notices of the Royal Astronomical Society (2020)\n\nFluxConserving: Fortran code to compute the flux-density conservation, with a Python interface, by Jean Gomes\n\nFortran-Astro: module for calculating orbital elements, by Cengiz Yıldırım\n\nfortran-astrodynamics: astrodynamics routines by Yuricst\n\nFortran-Astrodynamics-Toolkit: aims to be a comprehensive library, written in modern Fortran (Fortran 2003/2008), of all the standard orbital mechanics algorithms, by Jacob Williams\n\nfortranMR: library for reading output files generated by MESA (Modules for Experiments in Stellar Astrophysics), by Joshua Aiken. It extends fortranDF to read in files as a data frame.\n\nGaiaHub: Python/Fortran tool that computes proper motions combining data from Gaia and the Hubble Space Telescope, associated with paper GaiaHub: A Method for Combining Data from the Gaia and Hubble Space Telescopes to Derive Improved Proper Motions for Faint Stars, by del Pino, Andrés et al., The Astrophysical Journal, Volume 933, Issue 1, id.76, 18 pp. (2022)\n\ngalacticus: semi-analytic model of galaxy formation - a powerful toolkit for modeling the physics of how galaxies form\n\nGALAXEV-fortran: Galaxy Spectral Evolution Library, by G. Bruzual and S. Charlot\n\nGR1D: general relativistic, spherically symmetry, neutrino transport code for stellar collapse. Associated paper: An Open-Source Neutrino Radiation Hydrodynamics Code for Core-Collapse Supernovae, by Evan O'Connor, Astrophysical Journal Supplement Series, Volume 219, Number 2 (2015)\n\nGYRE Stellar Oscillation Code: Given an input stellar model, GYRE calculates the eigenfrequencies and eigenfunctions for the normal oscillation modes of the model, by rhdtownsend et al. These data can be put to a variety of uses; the most common is to compare them against observed oscillation frequencies of a star, allowing constraints on the star's fundamental parameters (mass, radius, etc.) to be established — the discipline of asteroseismology.\n\nhalo: orbit solver that can be used to generate long-duration Earth-Moon halo orbits in the ephemeris model. Reference: J. Williams et al., Targeting Cislunar Near Rectilinear Halo Orbits for Human Space Exploration, 27th AAS/AIAA Space Flight Mechanics Meeting, 2017\n\nhazel2: synthesis and inversion of Stokes profiles caused by the joint action of atomic level polarization and the Hanle and Zeeman effects, by aasensio\n\nHigh-performance Flux Transport (HipFT): computational core of the upcoming Open-source Flux Transport (OFT) software suite, from Predictive Science. OFT is a complete system for generating full-Sun magnetograms through acquiring & processing observational data, generating realistic convective flows, and running the flux transport model.\n\nHMcode: augmented halo model for accurate non-linear matter power spectrum calculations, by Alexander Mead and Tilman Troester.\n\nIMage COMbination (IMCOM): software associated with Optimal Linear Image Combination, by Barnaby Rowe, Barnaby, Christopher and Jason Rhodes, The Astrophysical Journal, Volume 741, Issue 1, (2011).\n\nimg2nc: converts planetary Digital Elevation Model (DEM) data into NetCDF, allowing one to draw a topographic map of the Moon, by ShinobuAmasaki.\n\nInternational Radiation Belt Environment Modeling (IRBEM) library: routines to compute magnetic coordinates for any location in the Earth's magnetic field, to perform coordinate conversions, to evaluate geophysics/space-physics models, and to propagate orbits in time.\n\nJust Another Vehicle for Estimating Lags In Nuclei (JAVELIN): version of the SPEAR algorithm written in Python to provide more flexibility in both functionality and visualization. One can use JAVELIN to model quasar variability using different covariance functions (Zu et al. 2013), and measure emission line lags using either spectroscopic light cruves (Zu et al. 2011) or photometric light curves (Zu et al. 2016).\n\nK2_Fortran_Modules: modules for space weather modelling by Shah Saad Alam, associated with paper Simulation of radiation belt wave-particle interactions in an MHD-particle framework, by Anthony A. Chan et al., Front. Astron. Space Sci. (2023)\n\nkcarta_gen: fast, accurate, easy-to-use pseudo-monochromatic radiative transfer code, by sergio66\n\nKiloNova Explosion Code (kNEC): simulates hydrodynamical evolution of BNS merger ejecta and the corresponding kilonova emission, by Zhenyu Wu. It is based on the SNEC code by Morozova et al., which is a Lagrangian radiation-hydrodynamics code for core-collapse supernova explosion.\n\nLAPS: UCLA-Pseudo-Spectral is a 3D MPI-parallelized Fourier-transform-based pseudo-spectral Hall-MHD code, with corotating-expanding-box-model implemented, by Chen Shi\n\nlegolas: modern tool for MHD spectroscopy, by n-claes\n\nlibTheSky: computes the positions and other properties of celestial bodies (Moon, planets, comets, asteroids, stars), events (e.g. lunar phases) and coordinate transformations, by Marc van der Sluys and AstroFloyd. It forms the core of the software that is used to create the Dutch popular-astronomy website http://hemel.waarnemen.com.\n\nmadwave3: wave packet propagation program for reactive collisions and photodissociation of triatomic systems, by Octavio Roncero\n\nMAESTRO: solves the equations of low Mach number hydrodynamics for stratified atmospheres/stars with a general equation of state, from AMReX-Astro\n\nmagnetizer: post-processes the output of a semi-analytic model of galaxy formation and produces a catalogue of galaxies with detailed radial dependent ISM properties, including magnetic fields, by luizfelippesr\n\nMCMax3D: Monte Carlo radiative transfer and disk modelling tool, described here. It sets up a disk structure using physical processes or a parameterised structure.\n\nmercury: N-Body integrator based on Bulirsh-Stoer, Everhart and other methods, originally by John E. Chambers, that can integrate any star system, such as the Solar System\n\nMHD: outputs both binary and vdc data to generate Magnetic Flux ropes in quadrupolar photosphere topologies for Coronal Mass Ejections, by Jaiman Parekh and Satoshi Inoue\n\nMicrophysics: collection of astrophysical microphysics routines for stellar explosions, by Michael Zingale et al.\n\nMini-chem: kinetic chemistry network solver primarily for gas giant atmospheric modelling, pared down from the large chemical networks, associated with paper A mini-chemical scheme with net reactions for 3D general circulation models II. 3D thermochemical modelling of WASP-39b and HD 189733b, by Elspeth K. H. Lee, Shang-Min Tsai, Mark Hammond, and Xianyu Tan, Volume 672 (2023) Astronomy&Astrophysics, 672 (2023) A110\n\nModules for Experiments in Stellar Astrophysics (MESA): allow users to run experiments in stellar evolution. Stellar evolution calculations (i.e., stellar evolution tracks and detailed information about the evolution of internal and global properties) are a basic tool that enable a broad range of research in astrophysics.\n\nMGITM: 3-D GCM of Mars atmosphere from the surface to 300 km aimed at solving for the dynamics of the upper atmosphere, by dpawlows\n\nMulti-channel Image Reconstruction, Image Analysis, and Display (MIRIAD): radio interferometry data-reduction package, designed for taking raw data through to the image analysis stage, by Bob Sault et al.\n\nmsg: Multidimensional Spectral Grids -- project for evaluating radiant properties of stellar atmospheres by rhdtownsend\n\nNASA Ames Mars Global Climate Model (AmesGCM): simulates the atmosphere and climate of the planet Mars using an external finite volume dynamical core to predict the global atmospheric state given various planetary parameters and physical parameters.\n\nNASA Ames Legacy Mars Global Climate Model: uses a modified version of the ARIES/GEOS dynamical core coupled with a set of Mars physics packages to simulate the martian climate.\n\nNaval Observatory Vector Astrometry Software (NOVAS): integrated package of routines for computing various commonly needed quantities in positional astronomy, refactored by Jacob Williams. The package can provide, in one or two subroutine or function calls, the instantaneous coordinates of any star or planet in a variety of coordinate systems.\n\nNbody6++GPU - Beijing version: N-body star cluster simulation code, by Rainer Spurzem and team. It is an offspring of Sverre Aarseth's direct N-body codes.\n\nNEAT: calculates chemical abundances in photoionised nebulae, by Roger Wesson et al. It can propagate uncertainties and compensate for measurement biases affecting weak lines.\n\nNormalModes: applies a combination of several highly parallel algorithms to compute the planetary interior normal modes, by js1019\n\nNPI Ephemeris Propagation Tool with Uncertainty Extrapolation (NEPTUNE): state-of-the-art numerical orbit propagator, from Space-Systems. It allows the extrapolation of a state vector and the associated uncertainty forward and backward in time.\n\nOrbFit: this version of the OrbFit package, by Marco Fenucci, contains a modified version of the orbit9 integrator. The integrator has been modified to integrate the spin axis dynamics of small asteroids, due to the Yarkovsky–O'Keefe–Radzievskii–Paddack (YORP) effect.\n\noorb: contains the statistical orbital ranging method (hereafter referred to as Ranging). Ranging is used to solve the orbital inverse problem of computing non-Gaussian orbital-element probability density functions based on input astrometry.\n\nOptab: computes opacity based on user-provided chemical equilibrium abundances, and outputs mean opacities as well as monochromatic opacities, by Shigenobu Hirose. Consequently, one can have opacity tables consistent with one's equation of state.\n\noptool: computes complex dust particle opacities from the command line, by Carsten Dominik and Ryo Tazaki. It is derived from Michiel Min’s DHS OpacityTool and also implements Ryo Tazaki’s MMF theory for highly porous aggregates.\n\nphantom: 3D Smoothed Particle Hydrodynamics and Magnetohydrodynamics code for astrophysics, by Daniel Price and others\n\nPhotochemPy: photochemical model of rocky planet's atmospheres, by Nicholaswogan. Given inputs, like the stellar UV flux, the atmospheric temperature structure, etc., this code will find the steady-state chemical composition of an atmosphere, or evolve atmospheres through time. Photochem is a rewrite in modern Fortran.\n\nPIERNIK: grid-based MHD code using conservative numerical schemes: relaxing TVD scheme (Pen et al., 2003; Trac & Pen, 2003) and the recently implemented HLLD approximate Riemann MHD solver (Miyoshi & Kusano, 2005) combined with the Dedner et al. (2002) divergence cleaning algorithm.\n\nPlanetary Code Collection: Thermal and Ice Evolution Models for Planetary Surfaces, by Norbert Schorghofer\n\nPOT3D: High Performance Potential Field Solver: computes potential field solutions to approximate the solar coronal magnetic field using observed photospheric magnetic fields as a boundary condition. A version of POT3D that includes GPU-acceleration with both MPI+OpenACC and MPI+OpenMP was released as part of the Standard Performance Evaluation Corporation's (SPEC) beta version of the SPEChpc(TM) 2021 benchmark suites.\n\npycalc11: Python interface by Adam Lanman for running the CALC delay modeling tool, written in Fortran, by providing parameters as astropy objects. CALC aims to compute VLBI baseline delays to picosecond precision by incorporating general relativistic deflection from the Sun, Earth, and other planets, solid Earth and ocean tide loading, and atmospheric contributions\n\npymoog: Python 3 wrapper for running the LTE spectrum synthesis part of the Fortran code MOOG by Chris Sneden\n\npython-fsps: Python bindings to Charlie Conroy's Flexible Stellar Population Synthesis (FSPS) Fortran code\n\nradbelt: AE-8/AP-8 Van Allen belt model, describing the differential or integral, omnidirectional fluxes of electrons (AE-8) and protons (AP-8) in the inner and outer radiation belts, by Jacob Williams\n\nRADMC-3D Version 2.0: computes the observational appearance of an astrophysical object on the sky of the observer, by dullemond. It solves the non-local radiative transfer problem of dusty media, including thermal radiative transport and scattering.\n\nradtrancode: radiative transfer calculations and retrievals, originally written in Oxford University.\n\nramses: models astrophysical systems, featuring self-gravitating, magnetised, compressible, radiative fluid flows. It is based on the Adaptive Mesh Refinement (AMR) technique on a fully-threaded graded octree.\n\nriaf-sed: computes spectral energy distributions of radiatively inefficient accretion flows (RIAFs) around black holes, by rsnemmen\n\nSaturn-Mag-Model: Saturnian magnetospheric empirical magnetic field model derived from Cassini magnetometer data\n\nshark: code associated with Protostellar collapse simulations in spherical geometry with dust coagulation and fragmentation (2023), by Ugo Lebreuilly, Valentin Vallucci-Goy, Vincent Guillet, Maxime Lombart, and Pierre Marchand, Monthly Notices of the Royal Astronomical Society, Volume 518, Issue 3, Pages 3326–3343\n\nSMERCURY-T: upgrade of the SMERCURY orbital integrator that includes modules to enable the solar tidal spin torque as well as the general relativistic force, by Steven M. Kreyche\n\nspacepy: Space Science library for Python, calling Fortran code - contains superposed epoch classes, drift shell tracing, access to magnetic field models, streamline tracing, bootstrap confidence limits, time and coordinate conversions, etc.\n\nSpectralRadex: Python library for spectral modelling and RADEX, by Jon Holdship et al. SpectralRadex uses F2PY to compile a version of RADEX written in modern Fortran, most importantly dropping the use of common blocks. As a result, running a RADEX model creates no subprocesses and can be parallelized.\n\nspiralssched: schedules for the Southern Hemisphere Parallax Interferometric Radio Astrometry Legacy Project (SPiRALS) experiment series, including trigonometric parallax observations, test observations, compactness observations and 3D distance observations, by Lucas Hyland and Gabor Orosz\n\nsplash: visualisation tool for Smoothed Particle Hydrodynamics (SPH) simulations in one, two and three dimensions, developed mainly for astrophysics, by Daniel Price\n\nStarlib: Thermonuclear Rate Library: library of thermonuclear reaction and laboratory weak interaction rates. It can be used for studies of stellar models and nucleosynthesis.\n\nstarlink: astronomical data processing\n\nstarsmasher: smoothed particle hydrodynamics code for smashing stars (and planets), by jalombar\n\nstochastic-parker: solves the Parker’s transport equation (and its extensions) using the stochastic method. Associated paper: Modeling Electron Acceleration and Transport in the Early Impulsive Phase of the 2017 September 10th Solar Flare, by Xiaocan Li, Fan Guo, Bin Chen, and Chengcai Shen, and Lindsay Glesener, The Astrophysical Journal Jun 2022\n\nswiftest: n-body Integrator for gravitational systems, by Carlisle Wishard et al. It contains the Wisdom-Holman Mapping (WHM), Regularized Mixed Variable Symplectic (RMVS), Democratic Heliocentric (HELIO), and Symplectic Massive Body Algorithm (SyMBA) numerical integrators.\n\nswiftest: models the long-term dynamical dynamics of n-body systems with a dominant central body, like the solar system, by David Minton et al. It is a re-write of the Swifter software package that incorporates modern programming techniques and performance improvements.\n\nSWMF: Space Weather Modeling Framework is a software framework that provides a common operating environment for the various modeling components included. Each of the components models particular aspects of space weather (sun, heliosphere, magnetosphere, etc) and the various commands allow you to control how those models run and interact with each other.\n\nToolkit for High-ORder Neutrino Radiation Hydrodynamics (thornado): neutrino radiation-hydrodynamics code aiming to simulate core-collapse supernovae using discontinuous Galerkin methods, by Eirik Endeve et al.\n\nTriple stellar evolution (TSE): single stellar evolution and binary interactions are modelled in Python using the binary population synthesis Fortran code MOBSE. An associated paper is Evolution of massive stellar triples and implications for compact object binary formation, by Jakob Stegmann et al., Monthly Notices of the Royal Astronomical Society (2022).\n\nUCLCHEM: gas-grain chemical code for Astrochemistry\n\nuniverse-age: calculate the age of the universe for various parameters by integrating Friedmann Equation, by shu-yusa\n\nweaklib: code library for astrophysical applications, from starkiller-astro. It provides preprocessed equation of state (EoS) and neutrino opacity tables for use in neutrino transport calculations.\n\nWhite Dwarf Evolution Code (WDEC): code associated with paper WDEC: A Code for Modeling White Dwarf Structure and Pulsations (2018), by Agnès Bischoff-Kim and Michael H. Montgomery\n\nWinNet: single zone nuclear reaction network, capable of calculating many different nucleosynthesis processes (i.e., r-process, nup-process, explosive nucleosynthesis, and many more), associated with paper The Nuclear Reaction Network WinNet, by M. Reichert et al., Astrophysical Journal (2023)\n\nXNet: thermonuclear reaction network for astrophysical applications, using a variety of temporal integration techniques, from starkiller-astro. It is written in portable modern Fortran and makes use of a variety of matrix solving packages to obtain excellent speed (as much as 50% of peak) on as many platforms as possible.\n\nForBenchmark: a Fortran library for benchmarking (with support for coarrays). There are dot_product benchmark results, by Seyed Ali Ghasemi\n\nAssessment of Programming Languages for Computational Numerical Dynamics: compares different programming languages performance in order to solve CFD and Heat Transfer problems, by arturofburgos\n\nBandwidth Benchmark (Fortran version): collection of simple streaming kernels for teaching purposes, from RRZE-HPC. It is heavily inspired by John McCalpin's STREAM.\n\nBasic Comparison of Various Computing Languages: Python, Julia, Matlab, IDL, R, Java, Scala, C, Fortran by Jules Kouatchou and Alexander Medema\n\nbench_density_gradient_wfn: analyze the performance of evaluating the density gradient with various language implementations (C++/Fortran/Rust/Julia), by zyth0s\n\nbenchio: simple Fortran parallel IO benchmark for teaching and benchmarking purposes, by David Henty\n\nbenchmarks: high performance computing benchmarks and associated performance analysis workflows, from HPCL\n\nComparison of Programming Languages in Economics: code referenced in the paper \"A Comparison of Programming Languages in Economics\" by S. Borağan Aruoba and Jesús Fernández-Villaverde\n\nCompiler-benchmark-suites: list of benchmark suites (and some loose kernels) in C and Fortran used in the research related to compilers, program performance, scientific computations etc.\n\ncumsum_benchmark: benchmarks for the cumulative sum of an array, in Fortran, C++, Matlab, and Python, using various methods\n\nfortran-math-tests: test programs for Fortran math libraries, by L. Fu\n\nfortran-speed: compares speed of looping over individual arrays of variables with multiple dimensions to looping over arrays of derived types, where e.g., the last dimension is contained within the derived type, by Alex Robinson\n\nHimeno Benchmark in Modern Fortran: Himeno benchmark to evaluate performance of incompressible fluid analysis code, written in Modern Fortran style, achieving almost the same execution performance as the original version, by Tomohiro Degawa. In this program, global variables are eliminated, and some variable names and subroutine names are refactored.\n\nhpc-medley: two publicly available hpc benchmarks: NPB (NAS) and the HPL part of the HPCC challenge. It is used to determine the performance of clustered computing resources.\n\nJulia, Matlab, Octave, and Fortran FEM Benchmark and Comparison: Benchmark and comparison of Julia, Matlab, Octave, and Fortran for a 2D Poisson problem solved on a unit square, by rdeits. The problem is discretized with Q1 bilinear Lagrange finite elements.\n\njulia-numpy-fortran-test: comparing Julia vs Numpy vs Fortran for performance and code simplicity, by mdmaas\n\njulia-pde-benchmark: benchmarks a very simple numerical integration algorithm for a 1d nonlinear partial differential equation (PDE) in Julia, Python, Matlab, C++, C, and Fortran, by John F. Gibson and Frank Otto. Results include execution time versus size of discretized system, and execution time versus lines of code.\n\nJulia Syntax: Comparison with Fortran: simple cheatsheet and some performance comparison for scientific programmers who are interested in discover Julia, by Pierre Navaro\n\nLINPACK: original (1000x1000 double precision) LINPACK benchmark, with bugfixes, by zaniyah\n\nmandelbrot-f: Mandelbrot benchmark in Fortran by Jesper Olsen, who also has versions in Rust, Erlang, and Mojo\n\nmatmul: matrix multiplication benchmark by Ondřej Čertík\n\nMicrobenchmarks: micro benchmark comparison of Julia against other languages, including Fortran, from JuliaLang\n\nminiApps-for-hpc: set of small codes representative of larger application programs run on supercomputers, by Vivek Kale. The reason that these codes were developed was to experiment with performance optimizations done on larger application programs.\n\nNetworkDynamicsBenchmarks: scripts for benchmarking dynamical systems on networks, from paper \"NetworkDynamics.jl -- Composing and simulating complex networks in Julia\", by Michael Lindner et al.\n\nnwchem-tce-triples-kernels: NWChem TCE CCSD(T) loop-driven kernels for performance optimization experiments, by jeffhammond\n\nPerformance comparison R, Julia, Fortran for Bayesian binary probit by driesbenoit\n\npi_examples: calculate pi using numerical integration of 1/(1+x**2), using Fortran with do concurrent, MPI, OpenMP, OpenACC, and other languages, by Owain Kenway et al.\n\nplb2: nqueen, matmul, sudoku, and bedcov benchmarks in Fortran, C, Lisp, Go, Java, JavaScript, Julia, Python, Rust, and other languages\n\nPython Performance: performance benchmarks of Python, Numpy, etc. vs. other languages such as Matlab, Julia, Fortran, from scivision\n\nraytracer: raytracer benchmark in dozens of languages, by edin. Associated with paper M. Moreira-Soares, R. Coimbra, L. Rebelo, J. Carvalho & R. D. M. Travasso. \"Angiogenic Factors produced by Hypoxic Cells are a leading driver of Anastomoses in Sprouting Angiogenesis–a computational study\". Scientific Reports 8, 8726 (2018)\n\nScalSALE: Scalable SALE Benchmark Framework for Supercomputers, from Scientific Computing Lab NRCN\n\nSimple N-Body with LeapFrog integrator: Implementation in C, Fortran, Go, Julia and Rust of a very simple N-Body simulator with 3 particles using a LeapFrog integrator. Presented in What can the programming language Rust do for astrophysics?, to appear in the Proceedings of the IAU Symposium 325 on Astroinformatics.\n\nSTREAM2: STREAM2 is an attempt to extend the functionality of the STREAM benchmark in two important ways: STREAM2 measures sustained bandwidth at all levels of the cache hierarchy and more clearly exposes the performance differences between reads and writes\n\nTraveling Salesman Problem Exact algorithm: fastest to slowest are C++, Rust, Go, C#, Fortran, Dart, and Python, by Luis Harvey Triana Vega\n\nAHA-R1: large scale simulation model that implements a general decision-making architecture in evolutionary agents, by Sergey Budaev. Each agent is programmed as a whole virtual organism including the genome, rudimentary physiology, the hormonal system, a cognitive architecture and behavioural repertoire.\n\nANCC: Python scripts and Fortran code for ambient noise tomography, such as computing cross-correlation (with parallel computing), and extracting dispersion curves, by Youshan Liu\n\nangio: 3D phase-field modelling for tumor angiogenesis, by phydev. Associated with paper M. Moreira-Soares, R. Coimbra, L. Rebelo, J. Carvalho & R. D. M. Travasso. Angiogenic Factors produced by Hypoxic Cells are a leading driver of Anastomoses in Sprouting Angiogenesis–a computational study. Scientific Reports 8, 8726 (2018)\n\nAsexual Penna model: implementation of a biological aging model, as introduced in the paper by Thadeu Penna, A Bit-String Model for Biological Aging, Journal of Statistical Physics 78 (1995)\n\nBrainTumors: time and space evolution of a brain tumor in 3D using the reaction-diffusion equation and finite differences to solve it numerically, by veneciachm\n\nCardiacFEM: cardiac electro-mechanics solver based on ParaFEM, by Levrero\n\nCAMI-Gz-Effects-Model-CGEM-: resource flow-based model of symptom induction and recovery from Gz accelerations in aeronauts. Associated report: Cerebral Blood Flow Based Computer Modeling of Gz-Induced Effects, by Kyle Copeland and James E. Whinnery, Civil Aerospace Medical Institute (CAMI) (2023)\n\nChromatin_Code: simulates the genome organization at a resolution of ~100 kbp, along with phase separation of active and silent regions of the genome using first principles. Associated paper: Euchromatin Activity Enhances Segregation and Compaction of Heterochromatin in the Cell Nucleus, by Achal Mahajan et al., Phys. Rev. X (2022)\n\nCOVID-testbias: Understanding the Bias between the Number of Confirmed Cases and Actual Number of Infections in the COVID-19 Pandemic, by dkhaz and xingangchen\n\ncovid19-vac-st: code and data for the paper Effects of infection fatality ratio and social contact matrices on vaccine prioritization strategies, by A. Schulenburg, W. Cota, G. S. Costa, and S. C. Ferreira, Chaos. 2022 Sep;32(9):093102\n\ndroplets_simulation: simulation of virus-laden droplets behavior from AFDET (Advanced Fluid Dynamics and Energy Transfer Lab)\n\ndynSIS: code for paper Optimized Gillespie algorithms for the simulation of Markovian epidemic processes on large and heterogeneous networks, by Wesley Cota and Silvio C. Ferreira, Computer Physics Communications v. 219 (2017) pp 303-312\n\nECOSYS: code for terrestrial ecosystem biogeochemistry, by Robert Grant. A related project is EcoSim.\n\nEpiDetector: identifies epistasis (i.e., gene-to-gene interactions) in a genome-wide analysis setting, by Jakub Pecanka. EpiDetector implements several flavors of a two-stage testing approach. The underlying methodology is described in this paper and book chapter.\n\nEuplectella_HPC: code for paper Extreme flow simulations reveal skeletal adaptations of deep-sea sponges, by Giacomo Falcucci et al., Nature volume 595, pp 537–541 (2021)\n\nFortran Image Processing: processing, manipulating, and filtering CT scan data, by Nisarg Patel. A CT scan data could be binary RAW data or VTK data.\n\nFSATOOL: fast sampling and analysis tool for biomolecules, by haomiao et al.\n\nGENeralized-Ensemble SImulation System (GENESIS): molecular dynamics and modeling software for bimolecular systems such as proteins, lipids, nucleic acids, glycans, and their complexes. Main site is here.\n\nhole2: analysis and visualisation of the pore dimensions of the holes through molecular structures of ion channels, by Oliver Smart et al.\n\nIllustrate: biomolecular illustration tool. Associated paper: Goodsell, D.S., Autin, L, Olson, A.J.,Goodsell, D. S., Autin, L., & Olson, A. J. (2019). Illustrate: Software for biomolecular illustration. Structure, 27(11), 1716-1720.e1.\n\nktz-phasediag: generates phase diagram for the KTz Neuron. Code written for the paper Girardi-Schappo M, Bortolotto GS, Stenzinger RV, Gonsalves JJ, Tragtenberg MHR (2017) Phase diagrams and dynamics of a computationally efficient map-based neuron model. PLoS ONE 12(3): e0174621.\n\nlungsim (Aether): pulmonary simulation library\n\nMotility Analysis of T-Cell Histories in Activation (MATCHA): designs virtual T cells that move like biological T cells, from BerkeleyLab and Northern New Mexico College. The virtual T cells will match the speed and turning angle distributions of biological cells.\n\nMycoplasmaGenitalium: modelling of Mycoplasma genitalium based on the WC computational model, by Ludovic Autin and Martina Maritan\n\nNuPoP_Fortran: code to predict the nucleosome positioning based on DNA sequences underlying the NuPoP R package. Associated paper: Predicting nucleosome positioning using a duration Hidden Markov Model, by Liqun Xi et al., BMC Bioinformatics (2010).\n\nOpen Continuum Mechanics, Imaging, Signal processing and System identification (OpenCMISS-Iron): computational back-end for a mathematical modelling environment that enables the application of finite element analysis techniques to a variety of complex bioengineering problems, by Chris Bradley et al.\n\nParizPLOS2021: code associated with paper Pariz A, Fischer I, Valizadeh A, Mirasso C (2021) Transmission delays and frequency detuning can regulate information flow between brain regions. PLoS Comput Biol 17(4)\n\nParse: predicts protein regions that are disordered, and which subset of those can undergo phase separation. Associated paper: Paiz, E.A., Allen, J.H., Correia, J.J., Fitzkee, N.C., Hough, L.E., Whitten, S.T. Beta turn propensity and a model polymer scaling exponent identify intrinsically disordered phase-separating proteins J. Biol. Chem. 297, 101343 (2021).\n\nPLOSCB2022: code associated with Orchestrated neuronal migration and cortical folding: A computational and experimental study, by Shuolun Wang et al., PLOS Computational Biology (2022)\n\nQMCube (ren-qm3): suite written in Python, calling Fortran codes, initially focused on multiscale QM/MM simulations of biological systems, but open enough to address other kinds of problems. Associated paper: QMCube (QM3): An all-purpose suite for multiscale QM/MM calculations, by Sergio Martí, J. Comput. Chem. 2021, 42, 447-457\n\nqptabsearch: tableau-based protein substructure search using quadratic programming. Associated paper: Stivala, A., Wirth, A. and Stuckey, P., Tableau-based protein substructure search using quadratic programming, BMC Bioinformatics 2009, 10:153\n\nRBC3D: spectral boundary integral solver for cell-scale blood flow. Associated paper: Bryngelson, S. H., Guéniat, F., & Freund, J. B. (2019), Irregular dynamics of cellular blood flow in a model microvessel, Physical Review E, 100, 012203.\n\nReproductive Simulation Library (reprosim): placenta and uterus simulation libraries by Monika Byrne et al.\n\nsequoia_notR: stand-alone equivalent to the R package sequoia, associated with paper Pedigree reconstruction from SNP data: parentage assignment, sibship clustering and beyond, by Jisca Huisman, Molecular Ecology Resources (2017). A related project is sequoiaExtra, a collection of R functions and Fortran programs loosely associated with R package sequoia and/or for general population genetics purposes.\n\nsnakedali: program for protein structural alignment and structure database search, based on the Dali (distance matrix alignment) method, from Doudna-lab\n\nsongbird-evo-model-FORTRAN: models evolution in a genetically simple population of songbirds, by Kaw-Han\n\nSPECIES: R package for species number estimation with underlying Fortran code, by Ji-Ping Wang\n\nsvFSI: multi-physics finite element solver for patient-specific blood flow simulation including fluid-structure interaction and cardiac electrophysiology, by Vijay Vedula et al.\n\nSystem for Processing Image Data from Electron microscopy and Related fields (SPIDER): image processing system for electron microscopy, especially useful for single-particle reconstruction, by Joachim Frank et al.\n\nsiQ-ChIP: sans spike-in Quantitative ChIP-seq: small package of bash and Fortran codes used to quantify ChIP-seq data without requiring \"spike-ins\" to be added to the ChIP-seq protocol. Associated with paper J Biol Chem. 2020 Nov 20;295(47):15826-15837. \"A physical basis for quantitative ChIP-sequencing\" by Bradley M Dickson, Rochelle L Tiedemann, Alison A Chomiak, Evan M Cornett, Robert M Vaughan, and Scott B Rothbart\n\numat_cartilage: subroutines for a multiphasic and fibril-reinforced model of articular cartilage, by shayansss\n\n3D_Convolusional_Filtering: convolusional filtering of computed tomography scans, by JoGebert. Intended to get a clear separation between bone marrow and cancellous bone for subsequent binarization and calculations. Another project is Binarization and Domain Decomposition\n\nasgs: the ADCIRC Surge Guidance System (ASGS), from StormSurgeLive, provides software infrastructure for automating ADCIRC for real time or operational deployments, as well as a variety of tools for pre- and post-processing ADCIRC data.\n\nAutomatic Lidar and Ceilometer Processing Framework (ALCF): tool for processing of automatic lidar and ceilometer (ALC) data and intercomparison with atmospheric models such as general circulation models (GCMs), numerical weather prediction models (NWP) and reanalyses with a lidar simulator using the COPS instrument simulator framework running offline on model output\n\nbin-microphysics-model: bin-microphysics cloud model used in research and teaching, by Paul J. Connolly, who has other projects for cloud physics\n\nCAPE: calculates Convectively Available Potential Energy (CAPE), which describes the instabilily of the atmosphere and provides an approximation of updraft strength within a thunderstorm, by Klemens Barfus\n\nC_ClWxSim: very simplistic weather and climate simulator for worldbuilding, from RosesHaveThorns\n\nClimate Modelling and Diagnostics Toolkit (climt): Python based library which provides a modular and intuitive approach to writing numerical models of the climate system. climt provides state-of-the art components and an easy-to-use interface to allow writing research quality models without modifying the underlying Fortran code.\n\nCloud-J: multi-scattering eight-stream radiative transfer model for solar radiation based on Fast-J, originally developed by Michael J. Prather (UCI)\n\nCloud Layers Unified By Binormals (clubb_release): single-column atmospheric model, with associated preprint CLUBB-SILHS: A parameterization of subgrid variability in the atmosphere, by Vincent E. Larson\n\nconvert_mpas: general conversion utility for MPAS-Atmosphere output files, by Michael Duda and David Ahijevych\n\nCRUST: Climatic Research Unit Standardisation of Tree-ring data\n\nCTSM: Community Terrestrial Systems Model (includes the Community Land Model of CESM), from ESCOMP\n\ndinsol-v1.0-linux: simulates the incoming solar radiation at the top of the atmosphere following the Milankovitch cycles theory, by Emerson Damasceno Oliveira. The tool is ideal for preparing the boundary conditions of climate models, beyond being a helpful tool for educational purposes.\n\ndwarf-p-cloudsc: standalone mini-app of the ECMWF cloud microphysics parameterization, by Michael Lange, Willem Deconinck, and Balthasar Reuter\n\nE3SM: Energy Exascale Earth System Model source code, by E3SM-Project\n\necrad: offline version of a radiation scheme suitable for use in atmospheric weather and climate models, from ecmwf\n\nExoRT: reasonably flexible two-stream radiative transfer code designed for use with 3D climate models, by Eric T. Wolf. In this software, contained are builds for a 1-D offline version, and for directly interfacing with CESM/CAM4.\n\nFMS: Flexible Modeling System (FMS), from NOAA-GFDL, is a software environment that supports the efficient development, construction, execution, and scientific interpretation of atmospheric, oceanic, and climate system models\n\nfst-tools: tools to manipulate RPN standard files, from Meteorological Research Informatics Services of Canada\n\ngcm: Toy General Circulation Model in Literate Fortran, by pqnelson\n\nGlobal ECMWF Fire Forecast (GEFF) model (geff): calculates fire danger indices from atmospheric inputs. It implements the Fire Weather Index, the National Fire Danger Rating System and the McArthur ratings in one single infrastructure.\n\nGEOCLIM-dynsoil-steady-state: computes geographically-distributed chemical weathering rates (along with associated parameters) at steady-state, according to the given climatology (temperature and runoff) for several CO2 levels (2 at least), the topographic slope and the lithology fraction in each grid cell, by Nick Swanson-Hysell and Yuem Park\n\nFinite Element Sea Ice-Ocean Model (FESOM2): Multi-resolution ocean general circulation model that solves the equations of motion describing the ocean and sea ice using finite-element and finite-volume methods on unstructured computational grids. The model is developed and supported by researchers at the Alfred Wegener Institute, Helmholtz Centre for Polar and Marine Research (AWI), in Bremerhaven, Germany.\n\nfv3gfs: Finite­ Volume Cubed-Sphere dynamical core (FV3) Global Forecasting System (GFS), from NOAA-EMC\n\nGARD: Generalized Analog Regression Downscaling code, from NCAR\n\nGemmesF90: code corresponding to paper \"Financial impacts of climate change mitigation policies and their macroeconomic implications: a stock-flow consistent approach.\" Climate Policy 20.2 (2020): 179-198, by timongo\n\nGFDL_atmos_cubed_sphere: GFDL atmos_cubed_sphere dynamical core code, from NOAA-GFDL\n\nGlobal Environmental Multiscale Model (GEM): integrated forecasting and data assimilation system developed by the Atmospheric Numerical Prediction Research Section, Meteorological Research Division, of Environment and Climate Change Canada.\n\nGridded Meteorological Ensemble Tool (GMET): software for created gridded meteorological datasets for precipitation and temperature, by Andy Newman. The current applications have been at a daily timestep, yielding daily total precipitation, mean temperature and temperature range.\n\nGVTD-X: implements numerical method to retrieve tangential and radial wind components in atmospheric vortices from single-Doppler radar observations, which is named from pronounciation of a abbreviation \"GVTD-HeCs\" (Generalized Velocity Track Display with the Helmholtz-decomposition-based Closure assumption). By Satoki Tsujino.\n\nHail Trajectory Clustering: groups three-dimensional hail trajectories into similar clusters. Associated with paper Adams-Selin, R., 2023: A three-dimensional trajectory clustering technique. Monthly Weather Review\n\nHigh-resolution Intermediate Complexity Atmospheric Research model (HICAR): variant of the Intermediate Complexity Atmospheric Research (ICAR) model developed for sub-kilometer resolutions. Associated preprint: Reynolds, D. S., et al., The High-resolution Intermediate Complexity Atmospheric Research (HICAR v1.0) Model Enables Fast Dynamic Downscaling to the Hectometer Scale, Geosci. Model Dev. (2023) in review\n\nHimawari_HSD_Reader: reader for data from Japan's Himawari satellite, by Simon Proud. This utility reads 'raw' HSD format data and can convert it into more friendly formats such as NetCDF4.\n\nHurricane Analysis and Forecast System (HAFS): Unified Forecast System (UFS) hurricane application, an FV3 (Finite­ Volume Cubed-Sphere Dynamical Core) based multi-scale model and data assimilation system capable of providing tropical cyclone (TC, including hurricane and typhoon) analyses and forecasts of the inner core structure\n\nicar: Intermediate Complexity Atmospheric Research Model (ICAR), from NCAR, a simplified atmospheric model designed primarily for climate downscaling, atmospheric sensitivity tests, and hopefully educational uses\n\nlibsim: libraries from ARPA-SIMC include a general purpose ''base'' library with modules for handling character variables, csv files, command-line arguments, physical constants, date and time computations, georeferenced coordinates, growable arrays and list structures of any type and other. Another set of libraries is specific to Meteorology and Earth Science and allows to work with gridded and sparse georeferenced data, perform interpolations, statistical processing in time, data quality control, thermodynamic computations.\n\nLimited-area Version of GAME (L-GAME): numerical weather prediction (NWP) model. It is the application of the theory behind GAME to a regional quadrilateral grid.\n\nLMDZE: simplified version of the LMDZ atmospheric general circulation model, by Lionel Guez. It has evolved aiming at clarity and robustness of the source code, taking advantage of modern features of the Fortran language.\n\nMITgcm: A numerical model designed for study of the atmosphere, ocean, and climate, MITgcm’s (General Circulation Model) flexible non-hydrostatic formulation enables it to efficiently simulate fluid phenomena over a wide range of scales; its adjoint capabilities enable it to be applied to sensitivity questions and to parameter and state estimation problems.\n\nModel for Prediction Across Scales (MPAS): develops atmosphere, ocean, and other earth-system simulation components for use in climate, regional climate, and weather studies. The primary development partners are the climate modeling group at Los Alamos National Laboratory (COSIM) and the National Center for Atmospheric Research.\n\nModel of an idealized Moist Atmosphere (MiMA): intermediate-complexity General Circulation Model with interactive water vapor and full radiation. It is published in M Jucker and EP Gerber, 2017: Untangling the annual cycle of the tropical tropopause layer with an idealized moist model, Journal of Climate 30, 7339-7358.\n\nmultio: package developed by ECMWF that provides an application programming interface (API) for I/O-server functionality for distributed earth-system models and post-processing pipelines of a user-programmable list of actions\n\nNoahMP: Noah with multiparameterization options (NoahMP) land surface model, from ESMWG\n\nNoah-OWP-Modular: extended, refactored version of the Noah-MP land surface model, by K. Jennings et al. In order to ease readability, adaptability, and interoperability, the model has been broken out into a series of modules and data types that represent various components of model information and parameters as well as the energy and water balances.\n\nNational Ocean Service Operational Forecast System from NCEP Central Operations (nosofs-NCO): copy from NOAA's PMB website. This repository contains updates needed to run using GCC/GFortran compilers.\n\nNCEPLIBS G2: Utilities for coding/decoding GRIB2 messages, by Hang Lei et al. This library contains Fortran 90 decoder/encoder routines for GRIB edition 2, as well as indexing/searching utility routines.\n\nprepbufr_decoder: decode prepBUFR files to CSVs and encode CSVs to prepBUFR files, by Shawn Murdzek. BUFR (Binary Universal Form for the Representation of meteorological data) is Table Driven Data Representation Forms approved by the World Meteorological Organization (WMO) for operational use since 1988.\n\nprodsim: collection of shell scripts and Fortran programs based on libsim, by Davide Cesari and ddales3. It is designed for processing raw numerical weather prediction (NWP) model output data and perform physically-based operations in order to obtain postprocessed data\n\npytdlpack: Python interface for reading and writing TDLPACK data, by eengl\n\nRegCM: Regional Climate Model system RegCM, originally developed at the National Center for Atmospheric Research (NCAR), is maintained in the Earth System Physics (ESP) section of the ICTP.\n\nRegional Atmospheric Modeling System (RAMS): highly versatile numerical code developed by several groups over the years, including the scientists at Colorado State University, the ASTER division of Mission Research Corporation, and ATMET. RAMS is used for simulating and forecasting meteorological phenomena.\n\nRTE+RRTMGP computes radiative fluxes in planetary atmospheres, from earth-system-radiation. RTE+RRTMGP is described in a paper in Journal of Advances in Modeling Earth Systems.\n\nScalable Computing for Advanced Library and Environment (SCALE): basic library for weather and climate model of the earth and planets aimed to be widely used in various models. The SCALE library is developed with co-design by researchers of computational science and computer science.\n\nscream: global atmosphere model targeted towards 3 km (\"cloud resolving\") resolution. It is part of the Energy Exascale Earth System Model (E3SM)\n\nshumlib: libraries which are used by the UM; the UK Met Office's Unified Model, that may be of use to external tools or applications where identical functionality is desired. The hope of the project is to enable developers to quickly and easily access parts of the UM code that are commonly duplicated elsewhere.\n\nsimple atmospheric models: simple models of the atmosphere (and ocean), for classroom examples, by Mathew Barlow\n\nSPARTACUS-Surface - Canopy radiation scheme: computes radiative transfer in complex 3D surface canopies, such as forests and cities, by Robin Hogan and VakankGrang. It makes use of the \"SPARTACUS\" technique, originally developed for clouds.\n\nspeedy.f90: intermediate complexity atmospheric general circulation model written in modern Fortran, by Sam Hatfield and Leo Saffin It is based on SPEEDY, developed by Fred Kucharski, Franco Molteni and Martin P. King.\n\nSPEEDY-ML: combines the atmospheric general circulation model (AGCM) SPEEDY with a reservoir computing-based machine learning algorithm for weather prediction and climate simulations, by Troy Arcomano.\n\ntcane_fortran: evaluate pre-trained artificial neural networks to estimate consensus hurricane intensity and track errors, as well as the associated uncertainties of the network predictions. Associated paper: Barnes, Elizabeth A., Randal J. Barnes and Nicolas Gordillo, 2021: Adding Uncertainty to Neural Network Regression Tasks in the Geosciences\n\nTorchClim: framework that allows the introduction of ML/AI models that were trained using PyTorch into a climate model (aka GCM), by dudek313 and ktrapeznikov. It facilitates a fast turnover of the train-test-run workflow allowing for quick development of ML/AI-based parametrizations into parallel and distributed environments.\n\nUCLALES-SALSA: large-eddy model coupled with a detailed sectional microphysics module for aerosol, clouds and precipitation, by Juha Tonttila et al.\n\nurban Dutch Atmospheric Large Eddy Simulation (u-dales): large-eddy simulation (LES) model for urban environments. LES is an approach to turbulence modelling used in computational fluid dynamics to simulate turbulent flows over a wide range of spatial and temporal scales.\n\nUnified Forecast System (UFS) weather model: weather model is used in several of the UFS applications, including the medium-range weather application and the short-range weather application.\n\nVenusPT-tables: atmospheric absorption coefficient calculator: Utilizing HITRAN and custom spectroscopy for Venus and Mars radiative transfer studies, by Mikhail Razumovskiy. Also PrecisionSpec-Analyzer, a high-precision tool for atmospheric absorption calculations over narrow spectral ranges, focusing on detailed spectroscopic analysis using HITRAN and HITEMP data with standard and custom line shapes for terrestrial atmospheric studies.\n\nweather-buoys: Processing weather buoy data in parallel, from modern-fortran\n\nWRF: Weather Research and Forecasting (WRF) model\n\nCode Tools\n\nAD_dnSVM: Fortran Automatic Differentiation tool using forward mode for scalars (S), Vectors (V) and Matrices (M), by David Lauvergnat. It has no limit in terms of the number of independent variables (this number is defined at runtime) and can compute up to third derivatives.\n\nadjac: automatic differentiation for generating sparse Jacobians, using Fortran 95 and operator overloading, by Pauli Virtanen\n\nAudito: automatic differentiation tool for Fortran, by Michel V. Heinz. The mathematical operators have been overloaded to work with the newly defined types, which include not only the function value, but also the gradient, Hessian and Laplacian.\n\nautodiff: automatic differentiation for up to 4th derivatives, by Simon Geard\n\nAuto-Diff: implementation in Modern Fortran of backward mode automatic differentiation, by zoziha\n\nbench-cli: cross-platform command line tool to benchmark commands and other executables/scripts in command lines written in Fortran, by Lateralus138. Very precise and fast.\n\nDual Number Automatic Differentiation (DNAD): update of code from Yu, W. and Blair, M.: \"DNAD, a Simple Tool for Automatic Differentiation of Fortran Codes Using Dual Numbers,\" Computer Physics Communications, vol. 184, 2013, pp. 1446-1452, by oddlehod. Related project: Fortran_DNAD\n\nexception_handling: tools for exception handling and tracing, by Sebastian Tillack\n\nexceptions: experiment with exceptions in Fortran via a simple preprocessing step, by Arjen Markus\n\nf2f90: utility to convert FORTRAN 77 fixed source form to Fortran 90 free source form, by Michael Metcalf, Peter A. Rochford, and Ben Trettel\n\nfazang: library for reverse-mode automatic differentiation, inspired by Stan/Math library, by Yi Zhang\n\nffixed2free: converts FORTRAN fixed-format source code (FORTRAN 77 style) to free-format source code (Fortran 90 style), by Pirmin Kaufmann and Martin Schraner. Ffixed2free does not require the fixed-format code to be restricted to the FORTRAN 77 standard.\n\nfortran2018-conditional-memory: library for the conditional allocation and deallocation of allocatable objects of Fortran intrinsic types, by Kevin Matthes\n\nFortran Debug Utilities: collection of some utilities useful for debugging code, by Pål Levold\n\nfortran-git: Fortran 2008 ISO C binding interfaces to libgit2, by interkosmos\n\nFortran-RefCount: simple reference counting for Fortran\n\nforwarddiff: allows for the computation for derivatives, gradients and Jacobians of Fortran subroutines or functions using forward mode automatic differentiation (AD), by Nicholas Wogan, inspired by DNAD and ForwardDiff.jl\n\nlibfde: Fortran Development Extensions (library), by Zorkator\n\nm_ad: collection of matrix derivative tests for forward and reverse mode algorithmic differentiation, by R. Quast. Associated paper: Giles, M. (2008) Collected matrix derivative results for forward and reverse mode algorithmic differentiation, Advances in Automatic Differentiation pp 35–44\n\nprep: streamlined pre-processor primarily designed for use with Fortran, by urbanjost. It does not support procedural macros but does support variable substitution and reusable free-format text blocks which allows for basic templating as well as easy construction of multi-line CHARACTER variables; and is quite capable of supporting traditional conditional compilation.\n\nprogress-bar: simple progress bar module that is typically used to display the time integration process, by zoziha\n\nprogRESS+repORT (progrep}: utility to show live progress, status and stats of a running simulation or any compute job that executes a given number of iterations, by SomajitDey. Progrep can report for both serial (single-core) and parallel (multi-core/multi-node - e.g. OpenMP/MPI) jobs.\n\nsymengine.f90: Fortran wrappers by Rikard Nordgren and Ondřej Čertík of SymEngine, a fast symbolic manipulation library, written in C++\n\nto_f90: Alan Miller's tool for converting Fortran 77 code to free-form Fortran 90 code, from jbdv-no\n\nversion-f: implementation of Semantic Versioning 2.0.0 by Minh Dao that aims to be a user-friendly tool for handling versions in Fortran projects.\n\nAdHoc: archives ad hoc tests for modern Fortran compilers used by Sourcery Institute, Sourcery, Inc., their collaborators, sponsors, and clients. These tests emphasize support for the Fortran 2003 and 2008 standards along with features proposed for Fortran 2015 in technical specification TS 29113 Further Interoperability with C and the draft technical specification TS 18508 Additional Parallel Features in Fortran.\n\ncompiler-test-suite: test suite for C/C++/Fortran compilers developed by Fujitsu\n\nFCVS_95: modified version of NIST F77 validation suite, updated for Fortran 95. The original is FCVS.\n\nfortran-compiler-tests: collection of Fortran compiler bug examples and tests, by nncarlson\n\nFortran Tests: set of tests for Modern Fortran, by Galen M. Shipman\n\nfortran-wringer-tests: collection of non-portable Fortran usage, standard-conformant or otherwise, by Peter Klausler, accumulated during the development of the f18 Fortran compiler (also known as \"LLVM Flang\")\n\ninfnan: functions for checking Inf/NaN, Zaikun Zhang. They should work even if the compilers are invoked with aggressive optimization flags such as gfortran -Ofast.\n\nllvm-test-suite: LLVM test-suite repository\n\nreproducers: place to submit information necessary for reproducing bugs encountered at HPC centers, by Brad Richardson and Katherine Rasmussen. The intent is that in concert with submitting a bug report to a vendor or open source project the information is also submitted here so that other HPC centers can confirm the bug, and point users to the information.\n\ntest_compiler: tests the applicability of Fortran compilers in a project that develops optimization solvers, by Zhang Zaikun\n\nAerosol Inorganic-Organic Mixtures Functional groups Activity Coefficients (AIOMFAC): thermodynamic group-contribution model to describe non-ideal mixing in liquid solutions\n\nBayesApp: calculates the pair distance distribution function, p(r), from a SAXS/SANS dataset by a Bayesian indirect Fourier transformation (BIFT) algorithm, by Steen Hansen\n\nCassandra: Monte Carlo package developed in the Maginn group at the University of Notre Dame to perform atomistic simulations of molecules composed of rings, chains, or both. Cassandra is suited to compute the thermodynamic properties of fluids and phase equilibria.\n\nchemfiles.f03: Fortran 2003 binding to the chemfiles library, by Guillaume Fraux et al.\n\nChemistry discovery engine (CDE): implements several different calculation types associated with chemical reaction-path analysis, by Joe Gilkes and Scott Habershon\n\nciaaw: library providing the standard and abridged atomic weights, the isotopic abundance and the isotopes' standard atomic weights, by Milan Skocic. It also provides a API for the C language.\n\nClassyMC: General Purpose Object Oriented Molecular Monte Carlo code. Classy is designed to be used for Metropolis Monte Carlo and other similar sampling methods in molecular simulations.\n\nCoarseAIR: Fortran 2008 Code for State-to-State and Coarse-Grained Quasi-Classical Trajectory (QCT) Method. Reference: S Venturi - \"Machine Learning and Uncertainty Quantification Framework for Predictive Ab Initio Hypersonics\" - Ph.D. Thesis, University of Illinois at Urbana-Champaign (2021)\n\ncofimaker: command-line tool for manipulating atomic coordinate files, by skoerbel\n\ncrest: Conformer-Rotamer Ensemble Sampling Tool based on the xtb Semiempirical Extended Tight-Binding Program Package, from grimme-lab\n\ncritic2: manipulation and analysis of structural and chemical information in molecules and periodic solids, by aoterodelaroza et al.\n\nDonostia Natural Orbital Functional Software (DoNOFsw): performs computational chemistry calculations based on the Natural Orbital Functional Theory (NOFT), including PNOF5, PNOF6 and PNOF7. Correlation corrections after PNOF calculations can be estimated by second order perturbation theories.\n\nDSAS: uses the modified phase-retrieval algorithm to determine the anomalous scattering substructure, by Fu Xingke et al. There is an automated parameters setting method that can automatically solve the optimal algorithm parameters for different SAD data sets\n\nduo: diatomic code for solving a fully coupled rovibronic Schroedinger equation, by Trovemaster\n\nDynemol: tools for studying Dynamics of Electrons in Molecules, by Luis G. C. Rego and albertotrj\n\necx: library providing formulas for electrochemistry with a C API, by Milan Skocic\n\nEMsoft: computation and visualization of scanning electron microscopy diffraction patterns, notably EBSD, ECP, TKD, and EKP, by Marc de Graef et al. In addition, there are programs for TEM defect image contrast, CBED, PED, Laue x-ray diffraction, and a new series of programs for computational polarized light microscopy. EMsoftOO is an object-oriented version under development in Fortran 2018.\n\nEquilibrate: chemical equilibrium solver by Nick Wogan which is based on EasyChem, which itself is a clone of the NASA CEA tool (described in Gordon and McBride 1994)\n\newald-summation: efficient and easy-to-use implementation of the Ewald summation method, by Jonas-Finkler\n\nFlexible Atomic Code (fac): software packge for the calculation of various atomic processes, by Ming Feng Gu\n\nfenvelopes: calculate phases boundaries of multicomponent systems using Equations of State, currently supporting PT envelopes and PX envelopes with partial three-phase-behaviour, by Federico E. Benelli\n\nFermi-orbital descriptor Monte-Carlo (fodMC): generator for Fermi-orbital descriptor (FOD) positions to be used in the Fermi-Löwdin orbital self-interaction correction (FLO-SIC) method, described in paper Interpretation and automatic generation of Fermi-orbital descriptors, S. Schwalbe, K. Trepte, et al., Journal of Computational Chemistry, vol. 40, pp. 2843-2857, 2019\n\nFREZCHEM: includes chloride, bromide, perchlorate, nitrate, sulfate, and bicarbonate-carbonate salts, strong acid chemistry, ferrous and ferric iron chemistry, aluminum and silicon chemistries, ammonia and ammonium chemistries, methane, ethane, and propane chemistries, and gas hydrate chemistry, by Giles Marion. This version includes both temperature and pressure dependencies.\n\nforsus: provides a simple API to read json files containing pure component information, which can be used in other projects, by José Antonio Scilipoti\n\ngibbs2: calculates pressure and temperature dependent thermodynamic properties of solids from ab initio results, by aoterodelaroza\n\nGWMlib: Generic Water isotope Modelling Library, by Didier M. Roche\n\nHFB: Hartree-Fock-Bogolyubov code for (hyper)nuclear structure calculations (version by P. Vesely)\n\nhibridon: solves the close-coupled equations which occur in the quantum treatment of inelastic atomic and molecular collisions. Gas-phase scattering, photodissociation, collisions of atoms and/or molecules with flat surfaces, and bound states of weakly-bound complexes can be treated.\n\nHICOLM: Multi-Methods for Molecules and Condensed Systems: molecular modelling of condensed systems. Reference: F. W. Fernandes, HICOLM: High-Performance Platform of Physical Simulations by Using Low Computational Cost Methods. doi: 10.22456/2175-2745.92486.\n\nInternational Association for the Properties of Water and Steam (iapws): library providing the formulas for computing light and heavy water properties, by Milan Skocic, with interfaces to C and (in pyiapws) Python\n\nkanon: program to compute chirality indices and assess molecular symmetry, by Asdrubal Lozada-Blanco\n\nKinetic Monte Carlo of Systems (kmcos): lattice based kinetic Monte Carlo with a Python front-end and Fortran back-end, by Max Hoffmann et al.\n\nKinetic PreProcessor (KPP): tool that assists the computer simulation of chemical kinetic systems, by Adrian Sandu et al. Also KPP-AR-boxmodel, a box-model for a KPP-generated chemistry mechanism using the auto-reduce feature to speed up computation\n\nlinemake: atomic and molecular line list generator, by Chris Sneden et al. Rather than a replacement for a number of well-established atomic and molecular spectral databases, linemake aims to be a lightweight, easy-to-use tool to generate formatted and curated lists suitable for spectral synthesis work.\n\nlocal_dielectric_saturation: Metropolis Monte-Carlo program to study local dielectric saturation in Restricted Primitive Model electrolytes, by David Ribar and janneforsman. Also modified_widom to study the structure and thermodynamics of ionic fluids\n\nMobCal-MPI: parallelization of the commonly used MobCal suite to calculate ion mobilities and collision cross sections, by Christian Ieritano and Scott Hopkins\n\nModular computation tool chain library (mctc-lib): common tool chain to use molecular structure data in various applications, from grimme-lab. This library provides a unified way to perform operations on molecular structure data, like reading and writing to common geometry file formats.\n\nMolAlignLib: Fortran and Python library based on random rotations and quasi-local RMSD minimizations to align rigid molecules and clusters. Associated paper: M. Vasquez-Perez, L. A. Zarate-Hernandez, C. Z. Gomez-Castro, U. A. Nolasco-Hernandez. A Practical Algorithm to Solve the Near-Congruence Problem for Rigid Molecules and Clusters, Journal of Chemical Information and Modeling (2023)\n\nmolecular-tools: modules that undertake a number of basic molecular modelling / computational chemistry analysis and manipulations, such as structure file reading and writing (including pdb, gro, g96, xyz), and parsing output files from programs as Gaussian (fchk and log) and Molpro retrieving informations such as geometry, frequencies, normal modes, Hessian, Gradient, molecular orbital coefficients, etc., by Javier Cerezo\n\nmstore: molecular structure store for testing, from grimme-lab\n\nmulti-crystal indexing data processing suite in macromolecular crystallography (MCDPS): associated with paper Zhou, Q., Gao, Z.Q., Dong, Z., Jiang, Y.M., She,Z., Geng, Z.& Dong, Y.H.(2021). A reference-based multi-lattice indexing method integrating prior information correction and iterative refinement in protein crystallography. Acta Cryst. A77\n\nNon-Adiabatic Transfer Rates Calculations (NATRC): calculates non-adiabatic transition rates between two states in molecules, by Arthur I. Martynov and Alexander S. Belov. Calculations are carried out based on the classical and modified Bixon-Jortner-Plotnikov models.\n\nnemo_eos: Fortran versions of equation of state of seawater as used by NEMO, wrapped in Python, by George Nurser\n\nnumsa: solvent accessible surface area calculation, from grimme-lab\n\nPICLas: parallel, three-dimensional PIC-DSMC solver developed cooperatively by the Institute of Space Systems, Institute of Aerodynamics and Gas Dynamics at the University of Stuttgart and the spin-off boltzplatz. PICLas is a flexible particle-based plasma simulation suite.\n\nPGLWrapper: code for Chapters 6-9 of The Properties of Gases and Liquids, 6th ed., by J. Richard Elliott et al., focusing on equations of state (EOSs) to correlate and predict thermodynamic properties of pure compounds and mixtures\n\npmflib: toolkit for Free Energy Calculations, by kulhanek\n\npydock3: Python package wrapping the DOCK Fortran program that provides tools to help standardize and automate the computational methods employed in molecular docking. Docking is the identification of the low-energy binding modes of a small molecule, or ligand, within the active site of a macromolecule, or receptor, whose structure is known.\n\nPython-Fortran-Fluids (PyForFluids): Python package focused in the calculation of Fluid properties based on Equations of State (EoS), by Federico E. Benelli et al. It provides a simple interface to work from Python but also exploits the high performance Fortran code for the more heavy calculations.\n\nRocketCEA: Python wrapper for the the NASA Fortran Chemical Equilibrium with Applications (CEA) code, which calculates chemical equilibrium compositions and properties of complex mixtures. Applications include assigned thermodynamic states, theoretical rocket performance, Chapman-Jouguet detonations, and shock-tube parameters for incident and reflected shocks.\n\nQCxMS: quantum chemical (QC) based program that enables users to calculate mass spectra (MS) using Born-Oppenheimer Molecular Dynamics (MD), by Jeroen Koopman and Sebastian Ehlert. It is the successor of the QCEIMS program, in which the EI part is exchanged to x (x=EI, CID) to account for the greater general applicability of the program. Plot Mass Spectra (PlotMS) is an associated plotting program.\n\nQMC=Chem: Reference: Quantum Monte Carlo for large chemical systems: Implementing efficient strategies for petascale platforms and beyond, by Anthony Scemama , Michel Caffarel, Emmanuel Osere.t and William Jalby (2013), Journal of Computational Chemistry, 34:11(938--951)\n\nrate: code for fitting and predicting chemical kinetic data, by Andrew L. Cooksy\n\nSPECIAL_BLEND: Supernova Parameter Estimation Code based on Insight on Analytic Late-time Burst Light-curve at Earth Neutrino Detector, by Akira Harada\n\nstring-amber: adaptive string method implementation in sander (AmberTools 22.3). Associated paper: Adaptive Finite Temperature String Method in Collective Variables, by Kirill Zinovjev and Iñaki Tuñón, J. Phys. Chem. A 2017, 121, 51, 9764–9772 (2017).\n\nstructure analysis on the command line (struca): simple tool to help compare structures and compute trajectory data on the command line, by Holger Kruse\n\nSurface Assessment via Grid Evaluation (SuAVE): accounts for the effect of curvature in the calculations of structural properties of chemical interfaces regardless of the chemical composition, asymmetry, and level of atom coarseness, by Denys E. S. Santos et al. It employs differential geometry techniques, enabling the representation of chemical surfaces as fully differentiable.\n\ntaurus_vap: solves the variation after particle-number projection equations for real general Bogoliubov quasi-particle states represented in a spherical harmonic oscillator basis, from project-taurus\n\nTHERMOCHIMICA: computational library for chemical thermodynamics. It determines a unique combination of phases and their compositions for a prescribed chemical composition, temperature and pressure, from ORNL-CEES.\n\ntinker: Tinker molecular modeling software is a complete and general package for molecular mechanics and dynamics, with some special features for biopolymers.\n\nTROVE: Theoretical ROVibrational Energies: A variational program for accurate nuclear motion calculations, by Trovemaster\n\nUniMoVib: unified interface for molecular harmonic vibrational frequency calculations, by zorkzou and smutao\n\nYA_EoS: thermodynamic equations of state library with both automatic and analytical derivation capabilities, by Federico E. Benelli\n\nany: user-defined type for mimicking procedures that can return different types, by Tomohiro Degawa\n\narray_range: provides user-defined types array_range{1|2|3}d_type to improve the manipulation of bounds of Fortran arrays, by Tomohiro Degawa\n\nClassicalDataStructuresF95: classical data structures such as the singly linked list and stack, by truongd and Sesshōmaru\n\ncollections: set of types supporting collections in Fortran, by Jason Christopherson. Currently, the library contains a generic, dynamically sizable list and a generic linked-list type.\n\nenhanced-allocatables: proposal to extend allocatable arrays to be dynamically reallocatable/resizable, with an implementation that calls C++, by PierUgit\n\nFortran_competitive_library: library for solving AtCoder problems, implementing a binary indexed tree, hash table, linked list, tuples, and merge and selection sort\n\nFortran Library based on Interfaces and Templates (FLIT): generic library providing a number of useful functionalities for computational geophysics and beyond, by Kai Gao. These functionalities include several single/multi-dimensional array manipulation functions/subroutines, flexible parameter reading from textual file or command line arguments, signal and image filtering and processing, integral transforms, interpolation, statistical functions, and so on.\n\nenumul: incomplete typed enumerator emulator for Fortran, by Tomohiro Degawa\n\nfdict: native Fortran 90 dictionary with hash tables for retaining any data-type in a Python-like dictionary, by Nick Papior\n\nfhash: hash table with support for generic keys and values, by Laurence Kedward\n\nffhash: generic and fast hash table similar to khash in C, by Jannis Teunissen\n\nfh_table: modern Fortran hash functions and hash tables, by dbartilson\n\nflinkedlist: object-oriented library providing an simple linked list, with the ability to sort elements with a user-defined function, apply a user-defined function in each node, and a convenience method to aid print debugging by automatically displaying variables of built-in types and providing a dedicated display function for user-defined types, by Yuichiro Sakamoto\n\nflist: modern Fortran linked lists using unlimited polymorphic derived types, by Jacob Williams\n\nFMacro: template preprocessor for Fortran, by Harris Snyder. Aims to address Fortran's lack of support for generic programming with a simple preprocessor, modeled after some of the language committee's early ideas for a template language feature, to be included in a future Fortran standard.\n\nfortran-container: resizable array, hash table, and linked list, by Li Dong et al.\n\nfortranDF: data frame that can have columns of different types, by Joshua Aiken\n\nfortran-dictionary: implementation of a hashmap aka dictionary, by Elias Toivanen\n\nFortran Elements Library: list, dictionary, shared pointer, and error handler, by Dominik Gronkiewicz\n\nFortran Implementation of Abstract Types (FIAT): aims to implement various common data structures in Fortran, by Chris MacMackin and gitter-badger. These will be implemented in a generic manner using a container type. This was originally developed in PolyCon but has since been folded into FIAT, with some improvements.\n\nFortran-Linked-List: linked list module for stdlib of fortran-lang, by ChetanKarwa\n\nfortran-list: generic list implementation in Fortran 2003, by Vladimír Fuka. Uses unlimited polymorphics or parametric polymorphism.\n\nFortran Parameter List (FPL): Fortran 2003 library that can manage the parameters of a program from a single point, by victorsndvg. FPL is an extendible container (dictionary) of <Key, Value> pairs, where the Key is a character string and the Value can be, by the default, of the basic data types.\n\nFortran Preprocessor Templates for Dynamic Data Structures (FPT-DDS): implements Fortran templates to create dynamic data structures using preprocessor directives, by Sergio Alexis Paz. A data structure for an arbitrary data type can be easily constructed by defining a few preprocessor variables and including the corresponding files distributed in the include folder.\n\nFortran Template Library (FTL): generic containers, versatile algorithms, easy string manipulation, and more, by Robert Rüger and Tomáš Trnka. It is heavily inspired by C++'s standard library, especially the part that is commonly referred to as the Standard Template Library (STL).\n\nFortran Template Library (FTL): object-oriented implementation of generic containers similar to the C++ STL (Standard Template Library), by Fran Martinez Fadrique. Not all elements present in STL are implemented in FTL, yet the documentation in http://www.cplusplus.com/reference/stl/ can be used as generic conceptual reference.\n\nfortran_vector: derived type for vector of integers, with procedures init, append, size, pop, remove, delete, unique, sort, cut, and clear, by Euler-37\n\nfstack: custom stack type for Fortran 2003 that implements a C-style stack, by jake-87. The advantage of this model is that one can have multiple stacks at any one time, so there is no need to juggle them -- just allocate another one.\n\nFTObjectLibrary: provides a collection of reference counted Fortran 2003 classes to facilitate writing generic object oriented Fortran programs, by David A. Kopriva et al.\n\ngFTL: provides a mechanism to easily create robust containers and associated iterators which can be used within Fortran applications, from Goddard-Fortran-Ecosystem. The primary methods are intended to be as close to their C++ STL analogs as possible. Also see gFTL-shared\n\nhashtable: hash tables by Jeremie Vandenplas based on the function hashword in lookup3.c by Bob Jenkins. Five derived types are available, for character, integer, and real scalars, and for integer and real arrays\n\nLinkedList: simple implementation of heterogeneous linked list in a single module, by Pedro Ricardo C. Souza\n\nLinkedList: doubly linked list for Fortran 2003, by Tomohiro Degawa. The list is based on object-oriented programming, so the list can treat all types Fortran supports, including integer, real, character and derived types by using the unlimited polymorphism feature.\n\nlist: easy-to-use implementation of Python-like lists, with methods append(), clear(), copy(), count(), extend(), insert(), pop(), remove(), reverse(), sort(), by Zdenek Grof\n\nM_anything: use polymorphism to allow promoting, casting and molding intrinsic types, by urbanjost\n\nmaps: wrapper by Tomohiro Degawa for stdlib_hashmaps that simplifies adding a key-value mapping and getting the value mapped to a key\n\nM_hashkeys: collection of hash key generator modules, by urbanjost\n\nMultidimensional Array Containers (MAC): library to create and manipulate arrays of any rank, by Álvaro R. Puente-Uriona, meant to serve as a building block for codes that expand on \"rank-agnostic\" programming\n\nmultidim_loop_iterator: versatile iterator for multi-dimensional loops with customizable lower bounds, upper bounds, and strides for each dimension, by Zdenek Grof. It simplifies the process of iterating over multi-dimensional arrays by abstracting the complexities of nested loops.\n\nPolyCon: abstract container derived type which can be used as a sort of unlimited polymorphic entity whose contents are retrievable with type-guards, by Chris MacMackin. Different subclasses are created in order to hold different data-types.\n\nrepot: abstract data types designed for the repository pattern for reading configuration files in Fortran, by Tomohiro Degawa. The repository pattern is a design pattern that makes an object persistent in a repository and reconstructs it from the repository. Repot_examples has practical usage examples.\n\nqContainers: container library for Fortran language. It enables one to store any internal Fortran data type and any derived data type to the container. It implements containers for key/value pairs: tree table and hash table, and containers for objects: list and vector.\n\nrearrayfx: demonstrates a reallocatable array structure with overprovision at re-allocation in order to decrease the number of reallocations, by Bálint Aradi\n\nslinked-list: simple generic singly linked list module for in-memory storage of small amounts of data, by zoziha\n\nsmart-pointers: tracks references to program resources and automates the freeing of those resources if and only if the reference count drops to zero, by Damian Rouson et al. Most commonly, the reference is a pointer and the resource is memory.\n\nVectorClass: Fortran 2003 dynamic memory array that functions similarly (but not identically) to the C++ Vector class, by Tyler Chang\n\n2DEulerSolver: numerically solve the Euler equations over a channel with a bump using Jameson scheme finite volume analysis, by FrostyNip\n\nadflow: flow solver developed by the MDO Lab at the University of Michigan. It solves the compressible Euler, laminar Navier–Stokes and Reynolds-averaged Navier–Stokes equations using structured multi-block and overset meshes.\n\nAdvanced Finite Difference flow solver with Multiple Resolution and Phase-Field implementations (AFiD-MuRPhFi): highly parallel application for simulating canonical flows in a channel domain, by Chris Howland\n\nAerOpt: aerodynamic optimisation code based on control node parameterisation, by Ben Evans et al.\n\nafivo-streamer: code for fluid simulations of streamer discharges, from Multiscale Dynamics - CWI. It is based on the afivo framework, which provides adaptive mesh refinement (AMR) and a multigrid solver for Poisson's equation.\n\nAMR-LBM-OpenMP-2D: Adaptive Mesh Refinement (AMR) technique utilized with the Lattice-Boltzmann Method (LBM) for numerical simulation of multiphase flows, by AbbasHub. OpenMP is used for parallelization of the code on share-memory machines.\n\nasimov-ccs: CFD and combustion code designed to scale to large numbers of cores. It follows a \"separation of concerns' design that separates interfaces from implementations, and physics from parallelisation.\n\nastr: high-order finite-difference flow solver for compressible turbulence research, by Jian Fang et al.\n\nBGK2D_GPU: 2D CFD Lattice Boltzmann Method code developed to 1) give an efficient implementation of LBM 2) Exploit mulithreading 3) Assess performance using (different) GPUs, by Giorgio Amati. Also BGK3D_GPU.\n\nBroadcast: discretises the compressible Navier-Stokes equations and then extracts the linearised N-derivative operators through Algorithmic Differentiation (AD), providing a toolbox for laminar flow dynamics. Associated paper: BROADCAST: A high-order compressible CFD toolbox for stability and sensitivity using Algorithmic Differentiation, by Arthur Poulain et al., Computer Physics Communications, Volume 283, 2023, 108557.\n\nC81-Interface: parses and creates C81 formatted airfoil tables, by Cibin Joseph\n\nCaNS: fast, massively-parallel direct numerical simulations (DNS) of canonical flows, by p-costa and nscapin\n\ncemfDEM: code corresponding to the book Coupled CFD-DEM Modeling: Formulation, Implementation and Application to Multiphase Flows by Hamid Reza Norouzi et al.\n\nCFD: basic CFD schemes implemented in Fortran using Finite-Volume and Finite-Difference Methods, by brli3. Sample simulations and figures are provided.\n\nCFD Utility Software Library (CFDTOOLS): contains nearly 30 numerical analysis libraries and close to 100 utility applications built upon those libraries. These utilities were developed over a rougly fifty year span to support aerospace research and development activities at NASA Ames Research Center (ARC).\n\nCFL3D: structured-grid, cell-centered, upwind-biased, Reynolds-averaged Navier-Stokes (RANS) code, by Chris Rumsey et al. It can be run in parallel on multiple grid zones with point-matched, patched, overset, or embedded connectivities.\n\nCGNS: the CFD General Notation System (CGNS) provides a standard for recording and recovering computer data associated with the numerical solution of fluid dynamics equations\n\nchannel: direct numerical simulation of an incompressible turbulent channel flow with two dimensional parallelization, by Davide Gatti\n\nChannel3d: efficient second- /fourth-order finite-difference direct numerical simulation (DNS) solver with versatile viscous treatments, also with the ability to handle different boundary conditions, by GongZheng-Justin\n\nCMPLXFOIL: version of Mark Drela's XFOIL code for the design and analysis of subsonic isolated airfoils with the GUI features removed and gradient computation implemented with the complex-step method, from mdolab\n\nCloverLeaf_ref: solves the compressible Euler equations on a Cartesian grid, using an explicit, second-order accurate method, from UK-MAC. Each cell stores three values: energy, density, and pressure.\n\ncode_saturne: CFD software handling either incompressible or expandable flows with or without heat transfer and turbulence\n\ncontur: code in Appendix D of J.C. Sivells, A computer program for the aerodynamic design of axisymmetric and planar nozzles for supersonic and hypersonic wind tunnels, ARO Inc., a Sverdrup Corporation Company, ADEC TR 78 63, December 1978. The code uses a combination of analytical solutions, the method of characteristics, and centerline distributions in order to calculate the divergent section of a convergent-divergent de Laval nozzle.\n\nCouette-Poiseuille-Flow: computation of Couette-Poiseuille flow with a mixing-length model of turbulence, by Akshay Anand\n\nCP3d: code associated with Z. Gong, Z. Wu, C. An, B. Zhang, X. Fu, CP3d: A comprehensive Euler-Lagrange solver for direct numerical simulation of particle-laden flows, Computer Physics Communications, 286 (2023) 108666.\n\ncruna-toolkit: (aero)acoustic solver that can find, reconstruct, or optimize sound sources with impedance boundary conditions, by Lewis Stein and Mathias Lemke. The solver utilizes adjoint-based optimization techniques and includes the full non-linear Euler and Navier-Stokes equations in a finite-difference time-domain approach.\n\nEOF: simulation of electro-osmotic flow by Lattice Boltzmann method, by parkeryang69\n\nEPIC: Elliptical Parcel-in-Cell model for fluid dynamics, by Matt Frey\n\neuler2D-kfvs-Fortran2003: compressible Euler equations solver using kinetic flux vector splitting (KFVS) scheme, by truongd8593\n\nExact_Riemann_Solver: code associated with The exact solution of the Riemann problem in relativistic magnetohydrodynamics, by B. Giacomazzo and L. Rezzolla, Journal of Fluid Mechanics 562, 223 (2006)\n\nFEST-3D: solves Navier-Stokes equations on a structured grid using state of the art finite-volume numerical methods. It is a modular, multiblock finite-volume code developed to solve compressible flow problems encountered in the field of aerodynamics.\n\nflexi: High-Order Unstructured Discontinuous Galerkin Fluid Dynamics Solver\n\nFlexible Aerodynamic Solver Technology (FAST): set of Python modules implementing HPC solvers for computational fluid dynamics, calling Fortran code, from ONERA, the French Aerospace Lab\n\nFlow81: basic CFD solvers by corygoates\n\nflowmol: molecular dynamics solver for molecular fluid dynamics simulation, by David Trevelyan and Ed Smith\n\nFluid2d: versatile Python-Fortran CFD code that solves a large class of 2D flows, by Guillaume Roullet et al. It is designed to be used easily by Students learning Fluid Mechanics or Geophysical Fluid Dynamics and by their professors willing to illustrate their course and to organize numerical practicals.\n\nfluidity: open source, general purpose, multiphase computational fluid dynamics code capable of numerically solving the Navier-Stokes equation and accompanying field equations on arbitrary unstructured finite element meshes in one, two and three dimensions\n\nFLUSI: Fluid-Structure-Interaction / MHD Research Code, from pseudospectators. Relies on Fourier transforms for derivatives and the volume penalization method to include obstacles.\n\nFluid Transport Accelerated Solver (FluTAS): modular, multiphysics code for multiphase fluid dynamics simulations. The code is written following a \"functional programming\" approach and aims to accommodate various independent modules. One of the main purposes of the project is to provide an efficient framework able to run both on many-CPUs (MPI) and many-GPUs (MPI+OpenACC+CUDA-Fortran).\n\nfluxo: solves linear and nonlinear advection diffusion equations, for example the compressible Navier-Stokes equations, the resistive magneto-hydrodynamic equations and others\n\nFortran Environment for Numerics (FEN): environment for performing numerical simulations, including a finite difference solver for the incompressible Navier-Stokes equations, fast direct solver for the solution of the Poisson equation, volume of Fluid solver (MTHINC) for multiphase simulations, direct forcing immersed boundary method for simulation of flow around solid objects, and computational parallelism by MPI, by Francesco De Vita\n\nFortran LBM: Lattice Boltzmann solver for fluid flows, by Mehdi Samiee\n\nFortranVortexIdentify: identifies discrete vortices from the velocity field data, using MPI, which are the result of a DaVis PIV process, by RickXie43\n\nfosolvers: suite of free and open source solvers, created with the goals of solving practical engineering problems and being easy to hack, by mianzhi\n\nfreeCappuccino: three-dimensional fully unstructured finite volume code for Computational Fluid Dynamics which comes in serial and parallel version, by nikola-m. FreeCappuccino is also a Fortran library for manipulation of discrete tensor fields, defined over polyhedral meshes.\n\nfvortex: implements vortex method, with applications to Elliptic Lamb–Oseen vortex and Melander, McWilliams, and Zabusky vortex, by Sergey Litvinov\n\nGATT_DNS: Direct Numerical Simulation code for the compressible Navier-Stokes equations, associated with the thesis of Marlon Sproesser Mathias, Computational study of the hydrodynamic stability of gaps and cavities in a subsonic compressible boundary layer (2021)\n\nGeophysical High-Order Suite for Turbulence (GHOST): accurate and highly scalable pseudospectral code that solves a variety of PDEs often encountered in studies of turbulent flows. It is mainly developed by Pablo Mininni and Duane Rosenberg, with contributions from many users.\n\nHORSES3D High-Order (DG) Spectral Element Solver: multiphysics environment where the compressible Navier-Stokes equations, the incompressible Navier–Stokes equations, the Cahn–Hilliard equation and entropy–stable variants are solved. Arbitrary high–order, p–anisotropic discretisations are used, including static and dynamic p–adaptation methods (feature-based and truncation error-based).\n\nIMEXLB-1.0: Lattice Boltzmann Method (LBM) proxy application code-suite for heterogeneous platforms (such as ThetaGPU). A ProxyApp, by definition, is a proxy for a full-fledged application code that simulates a wider array of problems.\n\nImproved_Phase-Field_LBM_2D: Improved conservative phase-field LBM code for multiphase flows in a 2D periodic domain, by Abbas Fakhari. It is a sample Lattice-Boltzmann solver for two-phase flows.\n\nIncompact3d: Fortran-MPI based, finite difference high-performance code for solving the incompressible Navier-Stokes equation and as many as needed scalar transport equations\n\ninterpolate-fields: interpolates DNS data to a new grid using linear interpolation, by Pedro Costa. It can run and store the interpolated data in a massively-parallel setting using MPI I/O. For now, it assumes two regular Cartesian grids with the file format of CaNS.\n\nInverse-gas-dynamic-tables-and-codes: programs and input data files for finding the Mach number through inverses of supersonic area ratio, subsonic area ratio, and Prandtl-Meyer angle, by anillals\n\njCODE: high-performance multiphase/multi-physics flow solver from the Jesse Capecelatro research group. The code is capable of solving the multi-component compressible Navier-Stokes equations on structured curvilinear meshes using a class of high-order energy-stable finite difference operators.\n\nKatzPlotkin: Fortran programs provided by Joseph Katz and Allen Plotkin in their book Low-Speed Aerodynamics\n\nLBcuda: CUDA Fortran code to solve Lattice Boltzmann equations of a multi-component flow interacting with rigid spherical particles, by Fabio Bonaccorso et al.\n\nlbm2d_opencl: D2Q9 BGK Lattice Boltzmann code written in OpenCL and Modern Fortran, by Laurence Kedward\n\nlesgo: solves the filtered Navier-Stokes equations in the high-Reynolds number limit on a Cartesian mesh, from the Turbulence Research Group at Johns Hopkins University. Originally designed to simulate flow in the atmospheric boundary layer, LESGO has been extended and used to simulate flow over tree canopies, wall-mounted cubes, and wind turbine arrays, among other things.\n\nLNS3D compressible Navier-Stokes Solver: part of the Flow Physics & Simulation code suite of fluid mechanics analysis codes to explore linear and nonlinear phenomena, primarily for compressible flows, by S. Scott Collis\n\nLPPM: Lagrangian Particle-Panel Method for solving the barotropic vorticity equation and the advection equation on the sphere and in the plane. Associated paper: P. Bosler, L. Wang, R. Krasny, and C. Jablonowski, 2014, A Lagrangian particle/panel method for the barotropic vorticity equation on a rotating sphere, Fluid Dynamics Research, 46 : 031406.\n\nMagIC: simulates fluid dynamics in a spherical shell. MagIC solves for the Navier-Stokes equation including Coriolis force, optionally coupled with an induction equation for Magneto-Hydro Dynamics (MHD), a temperature (or entropy) equation and an equation for chemical composition under both the anelastic and the Boussinesq approximations.\n\nMF-LBM: Portable, Scalable and High-performance Lattice Boltzmann Code for DNS of Flow in Porous Media, from LANL\n\nMGLC: multi-GPU parallel implementation of LBM(Lattice Boltzmann Method), using OpenACC to accelerate codes on single GPU and MPI for inter-GPU communication\n\nMulti-component Flow Code (MFC): parallel simulation software for multi-component, multi-phase, and bubbly flows, by Spencer Bryngelson et al. MicroFC is a mini-app for Baer-Nunziato-like models, interface capturing schemes, finite-volume WENO reconstruction, HLLC Riemann solvers, and large-scale OpenACC offloading of (multi-component) compressible fluid dynamics\n\nMulti Grid Large Eddy Turbulence (mglet-base): incompressible Navier-Stokes flow solver, a subset of the commercial product MGLET from KM Turbulenz GmbH\n\nMulti-order Approach to Calculating High-speed Linear aerodynamics (MachLine): modern, unstructured, subsonic/supersonic flow solver currently being developed by the AeroLab. It is a linear panel method based on the Prandtl-Glauert equation. Also MachUp, a Numerical Lifting-Line Algorithm\n\nNavier_Stokes_Spectral_Method: Navier Stokes simulation using the spectral method, visualized with gtk-fortran, by Jules Minard\n\nNek5000: fast and scalable high-order solver for computational fluid dynamics. Applications span a wide range of fields, including fluid flow, thermal convection, combustion and magnetohydrodynamics.\n\nNekIBM: implementation of Immersed Boundary Method for for exascale simulation of multiphase flow based on the Spectral Element Method Nek5000/CMTnek code, by Yunchao Yang\n\nnekStab: toolbox based on Krylov methods for highly parallel global linear stability analysis of incompressible flow problems for Nek5000, with theoretical framework described in Krylov Methods for Large-Scale Dynamical Systems: Application in Fluid Dynamics, by R. A. S. Frantz, J.-Ch. Loiseau, J.-Ch. Robinet, Appl. Mech. Rev. May 2023, 75(3).\n\nNemoh: Boundary Element Methods (BEM) code dedicated to the computation of first order wave loads on offshore structures (added mass, radiation damping, diffraction forces). Typical use is estimation of dynamic response of floating structures or performance assessment of wave energy converters.\n\nNGA2: high performance computing research library that provides a variety of finite volumes/finite difference solvers for typical fluid-related partial differential equations, by Olivier Desjardins and Austin Han\n\nNon-HydrostaticWave Model (NHWAVE): three-dimensional shock-capturing model which solves the incompressible Navier-Stokes equations in terrain and surface-following sigma coordinates. The model predicts instantaneous surface elevation and 3D flow field and is capable of resolving coastal wave processes (shoaling, refraction, diffraction, breaking etc.) as well as tsunami wave generation by landslide.\n\nNTUSTCFDLAB: code for 3D flow using projection method with FVM, by HSUAN221. Navier Stokes equations are solved for velocity and pressure fields.\n\nnuwtun: adjoint code for 1-D and 2-D Euler equations are developed using automatic differentiation tool Tapenade, by cpraveen. A piecemeal approach is used in which the subroutines in the flow solver are differentiated individually and used in an adjoint iterative solver.\n\nOFF: solve, numerically, the Navier-Stokes equations of fluid dynamics by means of Finite Volume technique, by szaghi and giacrossi\n\nOpenMHD: one/two-dimensional"
    }
}