{
    "id": "correct_foundationPlace_00043_2",
    "rank": 37,
    "data": {
        "url": "https://greensoftware.foundation/articles/10-recommendations-for-green-software-development/",
        "read_more_link": "",
        "language": "en",
        "title": "10 Recommendations for Green Software Development",
        "top_image": "https://www.datocms-assets.com/56002/1637229756-10-recommendations-for-green-software-development-san-murugesan-greensoftwarefoundation.png?w=1000&fit=max&fm=jpg",
        "meta_img": "https://www.datocms-assets.com/56002/1637229756-10-recommendations-for-green-software-development-san-murugesan-greensoftwarefoundation.png?w=1000&fit=max&fm=jpg",
        "images": [
            "https://www.datocms-assets.com/56002/1637229756-10-recommendations-for-green-software-development-san-murugesan-greensoftwarefoundation.png?auto=compress%2Cformat&w=1920",
            "https://www.datocms-assets.com/56002/1637229756-10-recommendations-for-green-software-development-san-murugesan-greensoftwarefoundation.png?auto=compress%2Cformat&w=1920",
            "https://www.datocms-assets.com/56002/1637066583-san-murugesan.png?auto=compress&fm=jpg&sat=-100&w=130",
            "https://www.datocms-assets.com/56002/1637066583-san-murugesan.png?auto=compress&fm=jpg&sat=-100&w=130",
            "https://www.datocms-assets.com/56002/1643691481-taichi-imura-ntt-data.png?auto=compress&fm=jpg&sat=-100&w=130",
            "https://www.datocms-assets.com/56002/1643691481-taichi-imura-ntt-data.png?auto=compress&fm=jpg&sat=-100&w=130"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2021-11-18T11:14:13+00:00",
        "summary": "",
        "meta_description": "When it comes to green software development, every choice you make matters. Read these 10 recommendations for greener software. How many of  them are you not following?",
        "meta_lang": "",
        "meta_favicon": "/favicon-32x32.png?v=413a86691393e3446238684b0597ca84",
        "meta_site_name": "Green Software Foundation",
        "canonical_link": null,
        "text": "Climate crisis is upon us, and it is worsening. Urgent and sustained actions are needed to address this defining story of our times which affects everyone of us and our future generations. Nevertheless, the actions we take now to reduce emissions of carbon dioxide (CO2) and other greenhouse gases would limit climate change and positively impact the future climate, as the recent the UN Intergovernmental Panel on Climate Change report, Climate Change 2021: the Physical Science Basis, emphasises.\n\nInformation technology (IT) sector—including hardware, software, firmware and communications—holds huge potential to help reduce overall global emissions . In fact, a report by the Global e-Sustainability Initiative estimates that IT solutions, which we call ‘greening by IT,’ can help cut nearly 10 times more CO2 than they emit. Nevertheless, it is imperative to reduce IT ‘s own carbon emission and footprint, which is known as ‘greening of IT’.\n\nAs we now broadly recognise, green means efficient and environmentally sustainable. In my recent Cutter Consortium report, Greening IT: Need and Opportunities, which you can access for free, I broadly discussed several aspects of Green IT.\n\nGreen IT, an umbrella term\n\nGreen IT is an umbrella term referring to environmentally sound IT hardware, software, systems, applications, and practices. It encompasses three complementary approaches to improving environmental sustainability.\n\nGreening of IT. This inward-looking approach focuses on reengineering IT products and processes to improve their energy efficiency, maximize their use, minimize their carbon footprint and meet compliance requirements. The greening of IT through making green software is the mandate of the Green Software Foundation.\n\nGreening by IT means using IT as an enabler to create a sustainable environment. This outward looking approach focuses on offering innovative solutions to key sectors such as manufacturing, energy, business, agriculture, healthcare, and buildings—homes, offices and other buildings—to decrease their emissions and resource consumption, while allowing for growth.\n\nPromoting Green Awareness. Many people are not yet aware of the serious impacts of the climate crisis and are not taking action to address it. IT has the ability and the duty to motivate them, help them be better informed and get them more engaged in the fight against climate change. Thereby IT can help promote ‘green’ initiatives and desired behavioral changes.\n\nOver the years, much emphasis and progress has been made towards making IT hardware efficient and environmentally friendly. But, to realize the fuller benefits, we need to take our green initiatives down to the software. Hence the newfound interest in making software greener.\n\nIn this article, we emphasize the need for greening software and examine how we can make our software greener to reduce carbon emission resulting from software development and use.\n\nGreening of Software\n\nSoftware is pervasive and has significantly transformed almost every aspect of our life and work. Many applications require large, complex software. The significance and use of software will only grow in future. What impact, if any, can it cause on our environment?\n\nWhat many don't realize is that, like computer hardware, software can contribute to environmental problems. Although software doesn't consume energy by itself directly, it directs and influences operation of computer hardware, thereby impacting hardware’s energy consumption indirectly and hence carbon emission. Computationally inefficient software can have a major impact on energy consumption. So, like computer hardware, software is part of the problem for environmental sustainability.\n\nAs hardware becomes more powerful and energy efficient, the impact of software on overall energy consumption becomes significant. Several real-world examples reinforce this trend. University of Cambridge estimates that the energy needed to maintain the Bitcoin network is roughly 115 terawatt-hours (TWh) which is about twice the energy consumption of the entire nation of Switzerland. A recent research revealed huge environmental costs of training a variety of recently successful neural network models for Natural Language Processing (NLP).\n\nFurther, the very development of software can be energy intensive. For example, researchers trained an AI model to classify flowers using a small, publicly available dataset of iris flowers. The AI model achieved accuracy of 96.17 percent in classifying the flowers’ different species with only 964 joules of energy. But to achieve higher accuracy the system consumed significantly higher energy—to gain 1.74 percent increase in accuracy energy consumption raised about three times significantly to 2,815 joules and further increase in accuracy demanded orders of increase energy consumption. The wasteful approach of throwing more computing power at a problem to get better results than necessary has been dubbed red AI.\n\nTherefore, it's important to design and use software to optimize its energy consumption. As the use of software has exploded in all areas of our activity this is becoming a necessity. Though software impact has been an overlooked factor in the sustainability discourse until recently, it’s time to pay due attention to greening software. This is the mandate of the Green Software Foundation. Enterprises and the IT industry should incorporate green software as part of their sustainability efforts.\n\nHow to Green Your Software\n\nTo realize a greener software, we need to consider energy efficiency and sustainability of software as an important parameter, in addition to functionality, security, scalability, and accessibility. We also need to design software for reuse, extended longevity of use and minimal computational and memory resource requirements.\n\nWriting energy-efficient software is, however, a challenging task; it requires a change of mindset for software developers and designers as well as guidelines, best practices, models and tools to measure and reduce the effect of software on the energy consumption of the underlying hardware. A 2015 IEEE IT Professional article presents a conceptual framework that provides a unifying view of the strategies, models, and tools available so far for designing and developing greener software.\n\nDevelopment of green software spans the entire lifecycle of software: development, operation and disposal (reuse).\n\nHere are some recommendations for creating greener software. They focus on four areas: design and coding options, choice of language, selection of AI models, and software development.\n\nDesign and coding options\n\nDevelopers should think about and act on how to minimize environmental impacts of software from the early stage of software development. Adopting the following general principles will help you in realizing green software.\n\n(01) Focus on and control features with higher power consumption and common usage scenarios.\n\n(02) Reduce data usage. Adopt efficient cache policy, minimise data exchange, and manage the lifecycle of stored data - compress and aggregate data and use smaller sizes for media and image when possible.\n\n(03) Remove or refactor unused features. This improves energy efficiency and makes software easier to maintain.\n\n(04) Detect and remove loops which can’t achieve their intended purpose and uselessly consume energy. For example, polling an unreachable server.\n\n(05) Adapt your app’s behavior according to the device power mode or other operating conditions.\n\n(06) Limit computational accuracy of the application to the desired level which commensurate with the operational needs. For example, you do not need very high resolution geolocation data of your user, if you are just looking for friends nearby.\n\n(07) Monitor real-time energy consumption of the application, to identify the modules that can be optimized to produce fewer emissions.\n\nFor additional related information, refer to Principles of Green Software Engineering which identifies eight key potential areas to focus on and GreenCoding which offers guidelines on the logic, methodology and platform to write, develop and run the code.\n\nChoice of language\n\n(08) Even the choice of programming language you use can influence the energy efficiency of the software. In a 2018 study, a team of researchers from three universities in Portugal examined energy efficiency across programming languages. They wrote and evaluated software written in 27 different languages for 10 different problems. They monitored electricity consumption as well as the speed and memory usage of each. As highlighted in a brief article, they concluded that there are several factors to be considered and no single language is the best under different criteria. We recommend further studies along these lines.\n\nChoice of AI Model\n\n(09) As outlined in a recent IEEE Spectrum article, AI can be made greener by developing and using a less-power-consuming ML model; creating and sharing reproducible code that will reduce duplicated efforts; and developing and using specialized hardware optimized for AI workload. For further details, refer to the ACM article, Green AI. You may also want to check out this article: Why should sustainability be a first class consideration for AI systems?\n\nSoftware Development\n\n(10) During development monitor real-time power consumption through techniques such as dynamic code analysis. The data you gather will be critical for understanding the gaps between the design choices and actual energy profiles. Tools and resources are now available for developers for managing energy consumption. For example, Intel’s Software Development Assistant allows developer to take energy measurements from the system as it executes specific workloads within their application and determine its efficiency.\n\nProspects\n\nGreening software is—and will continue to be—a necessity, not an option. To help create a more sustainable environment, software professionals must understand the principles of green software and its potential, and embrace green IT practices. By successfully greening your software systems, you can harness new opportunities, enhance your business’s competitive advantage, and help create a sustainable environment that benefits current and future generations.\n\nWe need to educate software developers and students about green software and its prospects. To advance and promote green software, further research and development is required in several areas including environmental impact assessment, standards and regulation, and harnessing software for environmental sustainability. For instance, the Software Carbon Intensity specification from the Green Software Foundation is a positive step in this direction.\n\nSoftware developers, engineers, professionals, educators, researchers, and users and the software industry can together make a huge difference and help create a sustainable environment that benefits current and future generations.\n\nLet’s join the green software bandwagon and pledge to develop and use green software."
    }
}