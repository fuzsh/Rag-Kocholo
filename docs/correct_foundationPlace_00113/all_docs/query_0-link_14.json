{
    "id": "correct_foundationPlace_00113_0",
    "rank": 14,
    "data": {
        "url": "https://msc2asemanticweb1617.wordpress.com/author/natsukih/",
        "read_more_link": "",
        "language": "en",
        "title": "natsukih",
        "top_image": "https://secure.gravatar.com/avatar/b330da8e8ff22ec30f6e70f085a302fb?s=200&d=identicon&r=g",
        "meta_img": "https://secure.gravatar.com/avatar/b330da8e8ff22ec30f6e70f085a302fb?s=200&d=identicon&r=g",
        "images": [
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2017-02-05-23-40-09.png?w=586&h=181",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2017-02-06-0-36-57.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2017-02-06-0-37-11.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/python_sparql.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/result_hotel_python_fuseki.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/query_math.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/mori_.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2017-02-06-0-21-37.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/tokyo.png?w=840",
            "https://1.gravatar.com/avatar/4a6433561d1806332e43c67cb33a97f5c0bc83711917e076dcef219f9cf3d7b9?s=49&d=identicon&r=G",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2016-12-11-14-20-39.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2016-12-11-14-26-41.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2016-12-11-14-27-25.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/assert.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/inserted.png?w=840",
            "https://1.gravatar.com/avatar/4a6433561d1806332e43c67cb33a97f5c0bc83711917e076dcef219f9cf3d7b9?s=49&d=identicon&r=G",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2017-02-06-3-02-32.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/kanzaki_maru.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2017-02-06-2-52-12.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2017/02/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2017-02-06-2-52-22.png?w=840",
            "https://1.gravatar.com/avatar/4a6433561d1806332e43c67cb33a97f5c0bc83711917e076dcef219f9cf3d7b9?s=49&d=identicon&r=G",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2016-12-01-14-06-07.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2016-12-01-14-10-30.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2016-12-01-14-11-59.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2016-12-01-14-12-51.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/screenshot_20161212_054203.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/screenshot_20161212_055654.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/food_asserted.png?w=840",
            "https://msc2asemanticweb1617.wordpress.com/wp-content/uploads/2016/12/e382b9e382afe383aae383bce383b3e382b7e383a7e38383e38388-2016-12-01-14-13-49.png?w=840",
            "https://1.gravatar.com/avatar/4a6433561d1806332e43c67cb33a97f5c0bc83711917e076dcef219f9cf3d7b9?s=49&d=identicon&r=G",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Author natsukih"
        ],
        "publish_date": "2017-02-06T00:50:26+01:00",
        "summary": "",
        "meta_description": "Read all of the posts by natsukih on Semantic Web",
        "meta_lang": "en",
        "meta_favicon": "https://s1.wp.com/i/favicon.ico",
        "meta_site_name": "Semantic Web",
        "canonical_link": "https://msc2asemanticweb1617.wordpress.com/author/natsukih/",
        "text": "In this exercise, we execute federated sparql queries on local server in Fuseki. Fuseki is open source software to construct SPARQL Endpoint by Apache Jena project. It supports SPARQL 1.1 and permutate RDF store (DB compilation)[1]. We can get Fuseki at the site [2].\n\nAfter running the fuseki-server, we go to “http://localhost:3030/” at a web browser. We can verify whether is is correctly run to check the server status icon at the upper right of site like this.\n\nIn Fuseki, we can upload rdf files and execute queries. We can see a small example below. This data is made by FOAF-a-matic[3].\n\nAfter uploading the data on Fuseki, we can also run query from the python like this. Python has a sparql endpoint interface[4]. This data comes from the Tourpedia[5]. We can the rdf file on the site. (In my environment, the file is too huge to upload on Fuseki, thus I extracted data only related to Paris and Hotel for execution)\n\nAnd the following is example of the federated query using DBpedia[6] and local ‘http://localhost:3030/foaf_s/query&#8217; endpoint.\n\nPREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> select * where { SERVICE <http://localhost:3030/foaf_s/query> { <http://localhost:3030/foaf_s/data#me> foaf:name ?name; foaf:givenname ?firstname; foaf:family_name ?familyname; foaf:mbox ?mbox; foaf:homepage ?hp. } SERVICE <http://dbpedia.org/sparql> { <http://dbpedia.org/resource/Shigefumi_Mori> dbp:name ?name; dbo:abstract ?abst. filter(lang(?abst) = 'en') } }\n\nThe result is here. We cat get the data of email address and homepage from the local and abstract from the DBpedia.\n\nAnother example is the following. This is used by LinkedGeoData[7] and DBpedia.\n\nReference:\n\n[1] Construct sparql endpoint by Fuseki http://www.statld.org/hp/1021\n\n[2] Apache Jena Releases https://jena.apache.org/download/\n\n[3] FOAF-a-matic http://www.ldodds.com/foaf/foaf-a-matic.html\n\n[4] SPARQL Endpoint interface to Python https://rdflib.github.io/sparqlwrapper/\n\n[5] Tourpedia http://tour-pedia.org/about/\n\n[6] DBpedia dbpedia.org/sparql\n\n[7] LinkedGeoData http://linkedgeodata.org/About\n\nFriend of a Friend (FOAF)\n\n・It is a ontology describing the persons and their relationships on people and objects\n\n・an experimental linked information system\n\n・a computer language defining a dictionary of people-related terms that can be used in structured data\n\n・an example of FOAF profile is the following\n\n<foaf:Person rdf:about=\"#jsmith\" xmlns:foaf=\"http://xmlns.com/foaf/0.1/\"> <foaf:name>John Smith</foaf:name> <foaf:homepage rdf:resource=\"http://jsmith.org/\" /> <foaf:openid rdf:resource=\"http://jsmith.org/\" /> <foaf:img rdf:resource=\"/images/me.jpg\" /> </foaf:Person>\n\n・There is a foaf:Person with foaf:name property of ‘John Smith’; this person stands in foaf:homepage and foaf:openid relationship to a thing called http://jsmith.org/ and a foaf:img relationship to a thing referenced by a relative URI of /images/me.jpg\n\nFOAF class and properties\n\nHow to create a FOAF\n\nAt the page http://www.ldodds.com/foaf/foaf-a-matic.html, we can use “FOAF-a-matic” to create a FOAF description. It is just filling in the blank to produce. The following is one of example.\n\nHere we inputted names, address, phone number and etc..\n\nAfter blanks are filled and the button of “FOAF me!” is pushed, we get the generated result of FOAF.\n\nSome examples of class and property\n\n・Class: foaf:Person\n\nThe Person class represents people. It does not matter whether they are alive, dead, real or imaginary. The Person class is a sub class of Agent Class.\n\n・Property: foaf:name\n\nThe name of something is a simple textual string. We can define the name as\n\nJohn Smith\n\n・Property: foaf:age\n\nIt is unstable status and whose domain has this property implies being a Agent.\n\nThe age property is a relationship between a Agent and an integer string representing their age in years.\n\nClasses: Agent, Document, Group, Image, LabelProperty, OnlineAccount, OnlineChatAccount, OnlineEcommerceAccount, OnlineGamingAccount, Organization, Person, PersonalProfileDocument, Project\n\nProperties: account, accountName, accountServiceHomepage, age, aimChatID, based_near_birthday, currentProject, depiction, depicts, dnaChecksum, familyName, family_name, firstName, focus, fundedBy, geedcode, gender, givenName, givenname, holdsAccount, homepage, icqChatID, img, interest, isPrimaryTopicOf, jabberID, knows, lastName, logo, made, maker, mbox, mbox_sha1sum, member, membershipClass, msnChatID, myersBriggs, name, nick, openid, page, pastProject, phone, plan, primaTopic, publicaitons, schoolHomepage, sha1, skypeID, status, surname, theme, thumbnail, tipjar, title, topic, topic_interest, weblog, workInfoHomepage, workplaceHomepage, yahooChatID\n\nVisualization of FOAF\n\nConsignes\n\n1: Charger dans Protégé l’ontologie Pizza.owl\n\n2: Parcourir les classes et les propriétés de l’ontologie\n\n2-A: Datatype properties\n\nThe following Datatypes are not used in the Pizza for the moment.\n\nowl:rational, owl:real, rdfs:Literal, xsd:anyURI, xsd:base64Binary, xsd:boolean, xsd:byte, xsd:dateTime, xsd:dateTimeStamp, xsd:decimal, xsd:double, xsd:float, xsd:hexBinary, xsd:int, xsd:integer, xsd:language, xsd:long, xsd:Name, xsd:NCName, xsd:negativeInteger, xsd:NMTOKEN, xsd:nonNegativeInteger, xsd:nonPositiveInteger, xsd:normalizedString, xsd:positiveInteger, xsd:short, xsd:toekn, xsd:unsignedByte, xsd:unsignedInt, xsd:unsignedLong, xsd:unsignedShort\n\nrdf:PlainLiteral,\n\nxsd:string,\n\nxsd:string — http://www.w3.org/2001/XMLSchema#string\n\nFound 4 uses of xsd:string\n\n・UnclosedPizza\n\nUnclosedPizza rdfs:comment “An unclosed Pizza cannot be inferred to be either a VegetarianPizza or NonVegetarianPizza, because it might have other toppings.”^^xsd:string\n\n・ValuePartition\n\nValuePartition rdfs:comment “A ValuePartition is a pattern that describes a restricted set of classes from which a property can be associated. The parent class is used in restrictions, and the covering axiom means that only members of the subclasses may be used as values. The possible subclasses cannot be extended without updating the ValuePartition class.”^^xsd:string\n\nrdf:PlainLiteral\n\nThe following picture shows some of Datatype Usage of rdf:PlainLiteral. Found 236 usage in owl:Thing.\n\n2-B: Object properties\n\nThe object property hierarchy is the following.\n\nexample of Object property\n\n2-C: Restriction sur les propriétés\n\nRestrictions is used to create relations(rules) between a class to the other class.\n\nEx1: The class VegetarianPizza restrictions :\n\nIt is equivalent to a Pizza, but it doesn’t have FishTopping and MeatTopping\n\nIt have at least 1 PizzaBase (rule from the Pizza class)\n\nIt can’t be a NonVegeterianPizza in the same time\n\nThe restriction “Equivalent to” implies that all pizza without Fish and Meat topping is a Vegetarian Pizza (it sounds normal for us).\n\nEx2 : The class Margherita restrictions :\n\nIt have only at least 1 MozzarellaToppings and at least 1 TomatoTopping\n\nThe restriction “Subclass of”don’t means that all pizza with a Mozzarella and Tomato Topping, it can also be an other class (in pizza.owl we have the class UnclosedPizza who can have the same topping as a Margherita).\n\n1: Visualisez le graphe de l’ontologie\n\n2: Utiliser un classificateur et comprendre les erreurs détectées et ce qu’il faut corriger.\n\nUsing the Reasoner we got 2 errors.\n\nThe first one is for the class CheeseyVegetableTopping. This is a subclass of 2 different class, CheeseTopping and VegetableTopping, but those classes are disjoint so a topping can’t be in the same time in both classes. One thing we can do to correct is to change the meaning of CheesyVegetableTopping. If we consider it as new topping class, we won’t get the error (I have no idea of what is a cheesy vegetable topping).\n\nThe second error is for the IceCream class. This is a subclass of Food and it has at least 1 FruitTopping. The problem here is that it use the hasTopping property which are in the Pizza Domain. This means that if we wan’t to use the hasTopping property the class have to be Pizza. The easiest way to fixe that is to change the domain of hasTopping (and the Range of isToppingof) to Pizza or IceCream (Should maybe change the PizzaTopping class to Topping to don’t make confusion)."
    }
}