{
    "id": "dbpedia_5334_2",
    "rank": 65,
    "data": {
        "url": "https://blog.crisp.se/2016/01/25/henrikkniberg/making-sense-of-mvp",
        "read_more_link": "",
        "language": "en",
        "title": "and why I prefer Earliest Testable/Usable/Lovable",
        "top_image": "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-.jpg",
        "meta_img": "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-.jpg",
        "images": [
            "https://blog.crisp.se/wp-content/themes/crisp-blog/assets/images/logos/crisp-logo-symbol.svg",
            "https://blog.crisp.se/wp-content/themes/crisp-blog/assets/images/logos/crisp-logo.svg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-96x96.png",
            "https://blog.crisp.se/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/facebook.png",
            "https://blog.crisp.se/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/twitter.png",
            "https://blog.crisp.se/wp-content/plugins/simple-share-buttons-adder/buttons/somacro/linkedin.png",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-1.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-2.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-3.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-4.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-5.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-6.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-7.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-8.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-9.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-10.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-11.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-12.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-13.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-14.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-15.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-16.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-17.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-18.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-19.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-20.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-21.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-22.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-23.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-24.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-25.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-26.jpg",
            "https://blog.crisp.se/wp-content/uploads/2016/01/Making-sense-of-MVP-27.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-96x96.png",
            "https://secure.gravatar.com/avatar/13523c7439be144ee1d323f23ea4f3de?s=64&r=g",
            "https://secure.gravatar.com/avatar/e2a32202392b177b1683c2496c7fb60d?s=64&r=g",
            "https://secure.gravatar.com/avatar/d1165f4c1d8b6e2f4ee63f98d12a7ecc?s=64&r=g",
            "https://secure.gravatar.com/avatar/fc58e3b47f82f3920fbb0480ba26b6e6?s=64&r=g",
            "https://secure.gravatar.com/avatar/fb10725816b01470adfd6a8fb6c6376d?s=64&r=g",
            "https://secure.gravatar.com/avatar/39f7fc4434e816e8ffe7a54a971bcc4a?s=64&r=g",
            "https://secure.gravatar.com/avatar/9d7e1749f4a07250b51a7ae1499af32f?s=64&r=g",
            "https://secure.gravatar.com/avatar/e4ed1a8858194923126e15cb178b3ef1?s=64&r=g",
            "https://secure.gravatar.com/avatar/06f8cfeb0f90414a1907fff3b8865976?s=64&r=g",
            "https://secure.gravatar.com/avatar/417410589bf8e4616b2296179475d9fa?s=64&r=g",
            "https://secure.gravatar.com/avatar/18fce96d020cb3b88bb8e10b1521c171?s=64&r=g",
            "https://secure.gravatar.com/avatar/049f4336958b1220f4c5332d9d6fd9d9?s=64&r=g",
            "https://secure.gravatar.com/avatar/4f3e48da4351f93221ca35b4a5769b18?s=64&r=g",
            "https://secure.gravatar.com/avatar/72fba49643752b692f5318c03a89a5eb?s=64&r=g",
            "https://secure.gravatar.com/avatar/1a8dc890b7ad041ff0889c1f678ef53c?s=64&r=g",
            "https://secure.gravatar.com/avatar/e0a1899d081f44c91f7a49dfd2a54129?s=64&r=g",
            "https://secure.gravatar.com/avatar/43561391025344ef2893fc27573392bd?s=64&r=g",
            "https://secure.gravatar.com/avatar/dd971ed54b96175e482f65a0d13e0d95?s=64&r=g",
            "https://secure.gravatar.com/avatar/73a95f6c8b705b4a4aa761292bf59ed6?s=64&r=g",
            "https://secure.gravatar.com/avatar/e855f46220fe9ebd4401a23fd660452a?s=64&r=g",
            "https://secure.gravatar.com/avatar/3cf5e4fc00806e40bef3861250ef722c?s=64&r=g",
            "https://secure.gravatar.com/avatar/2a079f2a0e7a288309091a37d9139262?s=64&r=g",
            "https://secure.gravatar.com/avatar/f668535d7df35bb72143feb640c28624?s=64&r=g",
            "https://secure.gravatar.com/avatar/e2a9f67294e3e5e6d0456fb527bbb486?s=64&r=g",
            "https://secure.gravatar.com/avatar/fde2daeeb044d539ab1609f54e4b3503?s=64&r=g",
            "https://secure.gravatar.com/avatar/5b6e952f8e3c17498cea0700cba755ff?s=64&r=g",
            "https://secure.gravatar.com/avatar/989446c29a0f22b07567139cadf7e674?s=64&r=g",
            "https://secure.gravatar.com/avatar/c1468e3dd7c1ae010d1ab6ce7f4e3dda?s=64&r=g",
            "https://secure.gravatar.com/avatar/edea7538b4879123dcea52886acb139d?s=64&r=g",
            "https://secure.gravatar.com/avatar/6dc18dfd3c49af1305a108f9c2b0c0a8?s=64&r=g",
            "https://secure.gravatar.com/avatar/68dce4e3f0f29348accba5d3affd0143?s=64&r=g",
            "https://secure.gravatar.com/avatar/0da2da8cbce243a7619e123d2693d153?s=64&r=g",
            "https://secure.gravatar.com/avatar/3e13da6f68901d58ca6e9418141bf736?s=64&r=g",
            "https://secure.gravatar.com/avatar/4b8b5d55d70def6e80cc042163dffb22?s=64&r=g",
            "https://secure.gravatar.com/avatar/f77032adcbe77d2777bb0e0c30873159?s=64&r=g",
            "https://secure.gravatar.com/avatar/37c19013165180fc7dec2d510deea466?s=64&r=g",
            "https://secure.gravatar.com/avatar/5dd1b27c0deed86682555bcbb607e667?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/7a02641712da9f57daa7b9ba135e6446?s=64&r=g",
            "https://secure.gravatar.com/avatar/aaa6917f0207c08316f99503d876d7a2?s=64&r=g",
            "https://secure.gravatar.com/avatar/cdca13c828d04f1f7d1b9df0ec0f7a55?s=64&r=g",
            "https://secure.gravatar.com/avatar/6e61c208469216b7cca979de6300400b?s=64&r=g",
            "https://secure.gravatar.com/avatar/27cda3eeaaad64f471281352cf592353?s=64&r=g",
            "https://secure.gravatar.com/avatar/2f5310ccc03e035f6565c998e8a20bce?s=64&r=g",
            "https://secure.gravatar.com/avatar/94e817b5e0635b567cd78e0c1b014dac?s=64&r=g",
            "https://secure.gravatar.com/avatar/41ce936ead47fc7da1101906b322fde5?s=64&r=g",
            "https://secure.gravatar.com/avatar/b1475b1712f804b7df9e228a9179b0b6?s=64&r=g",
            "https://secure.gravatar.com/avatar/39f7fc4434e816e8ffe7a54a971bcc4a?s=64&r=g",
            "https://secure.gravatar.com/avatar/b8f1d86a04219bb9cf91c81854a05290?s=64&r=g",
            "https://secure.gravatar.com/avatar/0271739a46127c26302cc10aac120152?s=64&r=g",
            "https://secure.gravatar.com/avatar/ae10c7b52e8e7c9401378a81bb877dc8?s=64&r=g",
            "https://secure.gravatar.com/avatar/d13d83bab9680075eabe976bd07a216f?s=64&r=g",
            "https://secure.gravatar.com/avatar/2be29e62d76b01f3bdef5a08baa2fb94?s=64&r=g",
            "https://secure.gravatar.com/avatar/347a61faabc250f2e8eb31bd057f10fd?s=64&r=g",
            "https://secure.gravatar.com/avatar/fce00938fccabd8162f1799f5e98b317?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/5266ab0858c2952d02d6da9fac4e52ff?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/94219d487967ab2fc6efaba70380e346?s=64&r=g",
            "https://secure.gravatar.com/avatar/18e6d78ddeb60a0a05884c13f0728f73?s=64&r=g",
            "https://secure.gravatar.com/avatar/fe781b7060b3b898bbf21e6a25faaef7?s=64&r=g",
            "https://secure.gravatar.com/avatar/e354f321d8f301b00346a8977dab9484?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/857d9b84e806e764c1d101694407c9bd?s=64&r=g",
            "https://secure.gravatar.com/avatar/857d9b84e806e764c1d101694407c9bd?s=64&r=g",
            "https://secure.gravatar.com/avatar/39ac376ea39188e4755b1ac75fa21097?s=64&r=g",
            "https://secure.gravatar.com/avatar/512aa453b7b83537752eb30c5b2aae56?s=64&r=g",
            "https://secure.gravatar.com/avatar/a263bbb9abaf5307567766e504b2a8ed?s=64&r=g",
            "https://secure.gravatar.com/avatar/b8ab8ff4d2aaf6ea4c60d89306eb191e?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/8be9e66612d2f33c61d70c39d415d4f5?s=64&r=g",
            "https://secure.gravatar.com/avatar/b54325e29d4c4d6ef8540b17dfdd5e0b?s=64&r=g",
            "https://secure.gravatar.com/avatar/d1165f4c1d8b6e2f4ee63f98d12a7ecc?s=64&r=g",
            "https://secure.gravatar.com/avatar/5e19eaab43459e74cf2aaa8b5c5a8bd2?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/51ad75a9635d9a4dbae3f454b68f306a?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/51ad75a9635d9a4dbae3f454b68f306a?s=64&r=g",
            "https://secure.gravatar.com/avatar/0aabdc05e365d91678d09c0db81515d1?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/7f5d6e5d388ba77510500da724ef4528?s=64&r=g",
            "https://secure.gravatar.com/avatar/578cc27ea45c51f177bde03a456c131f?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/bd217cd68d82c9b390ed9d8ebce7e291?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/b5da634d7ec827b45ac20e46e01fb652?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/28d4db6e1131976f772c43550077156d?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/e3007a016c220f114e339f445ab414ad?s=64&r=g",
            "https://secure.gravatar.com/avatar/c320bfa2c903668a3bcf7b0e8bf00a7d?s=64&r=g",
            "https://secure.gravatar.com/avatar/578cc27ea45c51f177bde03a456c131f?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mattias-Skarin_avatar_1517165202-64x64.jpg",
            "https://secure.gravatar.com/avatar/0b6a61f0e108566dc9d4f9c95fc92c00?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/0b6a61f0e108566dc9d4f9c95fc92c00?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mattias-Skarin_avatar_1517165202-64x64.jpg",
            "https://secure.gravatar.com/avatar/fa423ee34eed3b6303b2fb405745c114?s=64&r=g",
            "https://secure.gravatar.com/avatar/9c5bea025fd99a4e93e89b46da7dd2ea?s=64&r=g",
            "https://secure.gravatar.com/avatar/2c30326c3795c77225a6a7eed1857e89?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mattias-Skarin_avatar_1517165202-64x64.jpg",
            "https://secure.gravatar.com/avatar/fa423ee34eed3b6303b2fb405745c114?s=64&r=g",
            "https://secure.gravatar.com/avatar/566be8d4a7b78dc25ab07bd61a48116b?s=64&r=g",
            "https://secure.gravatar.com/avatar/816ea423461b55e3fe2b3f62a275eb76?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mattias-Skarin_avatar_1517165202-64x64.jpg",
            "https://secure.gravatar.com/avatar/83c5179c4e81d80354e2a40b66c667c2?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mattias-Skarin_avatar_1517165202-64x64.jpg",
            "https://secure.gravatar.com/avatar/83c5179c4e81d80354e2a40b66c667c2?s=64&r=g",
            "https://secure.gravatar.com/avatar/866dc11379f15125000c07d91a02a629?s=64&r=g",
            "https://secure.gravatar.com/avatar/7ef484adfe36f05531f5ec4b0aa20af4?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-64x64.png",
            "https://secure.gravatar.com/avatar/368242dafa578e6e7cf95a606a2c5bfa?s=64&r=g",
            "https://secure.gravatar.com/avatar/dc0858899163c8acce7b7c9ade51749b?s=64&r=g",
            "https://secure.gravatar.com/avatar/66936fdc5af6db079db67f32f2f1da0b?s=64&r=g",
            "https://secure.gravatar.com/avatar/878668bb0e82c2c2e82dd66763f31168?s=64&r=g",
            "https://secure.gravatar.com/avatar/d6d72d22abb987a302fbc3d250072ee2?s=64&r=g",
            "https://secure.gravatar.com/avatar/3e91054cc36d7a816df17b89f29d946f?s=64&r=g",
            "https://secure.gravatar.com/avatar/a556cbcd971abedb05e55bf5d508d8c7?s=64&r=g",
            "https://secure.gravatar.com/avatar/bb333db814eb99df5e4b4ad0364a71ab?s=64&r=g",
            "https://secure.gravatar.com/avatar/298555b9561466815b4a85a093659032?s=64&r=g",
            "https://secure.gravatar.com/avatar/df1e473488a21c708b90a189302d9c66?s=64&r=g",
            "https://secure.gravatar.com/avatar/e1b1928154a6852e3bf90ab899ea436c?s=64&r=g",
            "https://secure.gravatar.com/avatar/c871a1c6f5de91b511be9224d127711c?s=64&r=g",
            "https://secure.gravatar.com/avatar/726f798ba2e63ee1cd0d3a5e25415270?s=64&r=g",
            "https://secure.gravatar.com/avatar/76e70c485cf09c18af1f165b709d8ae6?s=64&r=g",
            "https://secure.gravatar.com/avatar/8358e8681fedc03da045ce55966ac563?s=64&r=g",
            "https://secure.gravatar.com/avatar/5a9036342a4ac763531cc445323523e6?s=64&r=g",
            "https://secure.gravatar.com/avatar/f1befee6fe76ace31a0cededffb2b51c?s=64&r=g",
            "https://secure.gravatar.com/avatar/307444fa270953ac093c00c87e627691?s=64&r=g",
            "https://secure.gravatar.com/avatar/a5dfe181d861dd90f31e3e4f2636345e?s=64&r=g",
            "https://secure.gravatar.com/avatar/d6a5b88740d33834860bc4024d11cf9e?s=64&r=g",
            "https://secure.gravatar.com/avatar/fe1d1ca45e5ee05c5637f323da735d5e?s=64&r=g",
            "https://secure.gravatar.com/avatar/9c5bea025fd99a4e93e89b46da7dd2ea?s=64&r=g",
            "https://secure.gravatar.com/avatar/1e25896a170c1f035baf3244d9e256cc?s=64&r=g",
            "https://secure.gravatar.com/avatar/4f2fd4c855c136a07f335caf8e6ea3b2?s=64&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Fredrik-Lindgren_avatar_1517164800-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mathias-Holmgren_avatar_1517165863-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2023/11/joakim-stor-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2023/08/IMG_2299-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/David-Barnholdt_avatar_1517164585-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Alexander-Tarlinder_avatar_1517164381-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2019/11/Marcus-Castenfors_avatar_1573657886-60x60.jpg",
            "https://secure.gravatar.com/avatar/9d10ef8ba297886c6265d411892db7d7?s=60&r=g",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Max-Wenzin_avatar_1517165226-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Reza-Farhang_avatar_1517165368-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Per-Lundholm_avatar_1517165334-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Magnus-Axelqvist_avatar_1517165075-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Evil-Coach_avatar_1517164737-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2024/04/Hans-Brattberg-scaled-e1713127931532-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mikael-Brodd_avatar_1517165277-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Henrik-Kniberg_avatar_1517164948-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Jan-Grape_avatar_1517164973-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Michael-Göthe_avatar_1517165261-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Olle-Hallin_avatar_1517165293-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2023/02/Leading-Complexity_avatar_1675248094-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2019/09/Troy-Magennis_avatar_1568270940-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2019/08/Stephen-Bungay_avatar_1566544716-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Ellen-Gottesdiener_avatar_1517164654-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Andrii-Dzynia_avatar_1517164454-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Craig-Larman_avatar_1517164512-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Anders-Ramsay_avatar_1517164438-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Esther-Derby_avatar_1517164672-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Jeff-Gothelf_avatar_1517164992-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/David-Evans_avatar_1517164566-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Christopher-Avery_avatar_1517164488-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Gojko-Adzic_avatar_1517170029-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2019/12/Neil-Cook_avatar_1576477554-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Anders-Laestadius_avatar_1517164414-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2020/06/39965357-AA82-47C1-8AB4-0A357C22BBC7-e1591192940230-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Daniel-Sundman_avatar_1517164545-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Gustav-Boström_avatar_1517164855-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Jimmy-Janlén_avatar_1517165011-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Martin-Christensen_avatar_1517165093-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mats-Henricson_avatar_1517165134-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mattias-Skarin_avatar_1517165202-60x60.jpg",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Mia-Kolmodin_avatar_1517165243-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Oscar-Lantz_avatar_1517165310-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Peter-Antman_avatar_1517165351-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2018/01/Thomas-Thyberg_avatar_1517165404-60x60.png",
            "https://blog.crisp.se/wp-content/uploads/2020/12/profilepic-edit-square-small-60x60.jpeg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Henrik Kniberg"
        ],
        "publish_date": "2016-01-25T00:00:00",
        "summary": "",
        "meta_description": "(French translation, Spanish translation, Japanese translation) A couple of years ago I drew this picture and started using it in various presentations about…",
        "meta_lang": "en",
        "meta_favicon": "https://blog.crisp.se/wp-content/uploads/2020/06/cropped-crisp-site-icon-32x32.png",
        "meta_site_name": "Crisp's Blog",
        "canonical_link": "https://blog.crisp.se/2016/01/25/henrikkniberg/making-sense-of-mvp",
        "text": "(French translation, Spanish translation, Japanese translation)\n\nA couple of years ago I drew this picture and started using it in various presentations about agile and lean development:\n\nSince then the drawing has gone viral! Shows up all over the place, in articles and presentations, even in a book (Jeff Patton’s “User Story Mapping” – an excellent read by the way). Many tell me the drawing really captures the essence of iterative & incremental development, lean startup, MVP (minimum viable product), and what not. However, some misinterpret it, which is quite natural when you take a picture out of it’s original context. Some criticize it for oversimplifying things, which is true. The picture is a metaphor. It is not about actual car development, it is about product development in general, using a car as a metaphor.\n\nAnyway, with all this buzz, I figured it’s time to explain the thinking behind it.\n\nFirst example – Not Like This\n\nThe top row illustrates a common misconception about iterative, incremental product development (a.k.a Agile).\n\nMany projects fail badly because they do Big Bang delivery (build the thing until 100% done and deliver at the end). I’ve lost count of the number of failed projects I’ve seen because of this (scroll down for some examples). However, when Agile is presented as an alternative people sometimes balk at the idea of delivering an unfinished product – who wants half of a car?. Imagine this:\n\n“Here sir, here’s our first iteration, a front tire. What do you think?”\n\nCustomer is like “Why the heck are you delivering a tire to me? I ordered a CAR! What am I supposed to do with this?”\n\n(By the way, I’m using the term “customer” here as a generic term to represent people like product managers, product owners, and early adopter users).\n\nWith each delivery the product gets closer to done, but the customer is still angry because he can’t actually use the product. It’s still just a partial car.\n\nAnd finally, when the product is done, the customer is like “Thanks! Finally! Why didn’t you just deliver this in the first place, and skip all the other useless deliveries?”.\n\nIn this example he’s happy with the final product, because it’s what he ordered. In reality, that’s usually not true. A lot of time has passed without any actual user testing, so the product is most likely riddled with design flaws based on incorrect assumptions about what people need. So that smiley face at the end is pretty idealistic.\n\nAnyway, the first row represents “bastardized agile”. Technically it might be incremental and iterative delivery, but the absence of an actual feedback loop makes it very risky – and definitely not agile.\n\nHence the “Not Like This” heading.\n\nSecond example – Like this!\n\nNow for the second row.\n\nHere we take a very different approach. We start with the same context – the customer ordered a car. But this time we don’t just build a car. Instead we focus on the underlying need the customer wants fulfilled. Turns out that his underlying need is “I need to get from A to B faster”, and Car is just one possible solution to that. Remember, car is just a metaphor, think any kind of customized product development situation.\n\nSo the team delivers the smallest thing they can think of that will get the customer testing things and giving us feedback. Some might call it an MVP (Minimum Viable Product), but I prefer to call it Earliest Testable Product (more on that further down).\n\nCall it what you like (some even call their first release the “the skateboard version” of the product, based on this metaphor….).\n\nThe customer is unlikely to be happy with this. This is nowhere near the car he ordered. But that’s OK! Here’s the kicker – we’re not trying to make the customer happy at this point. We might make a few early adopters happy (or pragmatists in pain), but our main goal at this point is just to learn. Ideally, the team explains this clearly to the customer in advance, so he isn’t too disappointed.\n\nHowever, as opposed to the front wheel in the first scenario, the skateboard is actually a usable product that helps the customer get from A to B. Not great, but a tiny bit better than nothing. So we tell the customer “don’t worry, the project is not finished, this was just the first of many iterations. We’re still aiming to build a car, but in the meantime please try this and give us feedback“. Think big, but deliver in small functionally viable increments.\n\nWe might learn some really surprising things. Suppose the customer says he hates the skateboard, we ask why, and he says “I hate the color”. We’re like “uh…. the color? That’s all?”. And the customer says “Yeah, make it blue! Other than that, it’s fine!”. You just saved *alot* of money not building the car! Not likely, but who knows?\n\nThe key question is “What is the cheapest and fastest way we can start learning?” Can we deliver something even earlier than a skateboard? How about a bus ticket?\n\nWill this help solve the customer’s problem? Maybe, maybe not, but we’ll definitely learn something by putting this into the hands of real users. Lean Startup offers a great model based on listing your actual hypotheses about the users and then working systematically to validate or invalidate them.\n\nYou don’t need to test the product on all users, and you don’t need to build a product to test something. Testing a prototype on even a single user will teach you more than nothing.\n\nBut OK, back to the skateboard example.\n\nAfter playing around with it in the office, the customer says “OK, kind of fun, and it does get me to the coffee machine faster. But it’s unstable. I fall off too easily”.\n\nSo the next iteration we try to solve that problem, or at least learn more about it.\n\nCustomer can now get around the office without falling off!\n\nHappy? Not really, he still kind of wants that car. But in the meantime he is actually using this product, and giving us feedback. His biggest complaint is that it’s hard to travel longer distances, like between buildings, due to the small wheels and lack of breaks. So, next release the product morphs into something like a bicycle.\n\nNow the customer can zoom around campus. Yiihaaa!\n\nWe learn some things along the way: The customer likes the feeling of fresh air on his face. The customer is on a campus, and transportation is mostly about getting around between buildings.\n\nThe bicycle may turn out to be a much better product than the car originally envisioned. In fact, while testing out this product we may learn that the paths are too narrow for a car anyway. We just saved the customer tons of time and money, and gave him a better product in less time!\n\nNow you may be thinking “but shouldn’t we already have known that. via up-front analysis of the customer’s context and needs?” Good point. But in most real-life product development scenarios I’ve seen, no matter how much up-front analysis you do, you’re still surprised when you put the first real release into the hands of a real user, and many of your assumptions turn out to be way off.\n\nSo yes, do some up-front analysis, discover as much as you can before starting development. But don’t spend too much time on it and don’t trust the analysis too much – start prototyping and releasing instead, that’s when the real learning happens.\n\nAnyway, back to the story. Perhaps the customer wants more. Sometimes he needs to travel to another city, and the bike ride is too slow and sweaty. So next iteration we add an engine.\n\nThis model is especially suitable for software, since software is, well, Soft. You can “morph” the product as you go, as opposed to hardware where you essentially have to rebuild every time. However, even in hardware projects there is a huge benefit to delivering prototypes to observe and learn from how the customer uses your product. It’s just that the iterations tend to be a bit longer (months instead of weeks). Even actual car companies like Toyota and Tesla do a lot of prototyping (sketches, 3d models, full-scale clay models, etc) before developing a new car model.\n\nSo now what? Again, maybe the customer is happy with the motorcycle. We could end the project earlier than planned. Most products are riddled with complexity and features that nobody uses. The iterative approach is really a way of delivering less, or finding the simplest and cheapest way to solve the customer’s problem. Minimize the distance to Awesome. Very Zen.\n\nOr, again, the customer could choose to continue, with or without modifications to the requirements. We may in fact end up with the exact same car as originally envisioned. However it is much more likely that we gain vital insights along the way and end up with something slightly different. Like this:\n\nThe customer is overjoyed! Why? Because we learned along the way that he appreciates fresh air in his face, so we ended up with a convertible. He did get a car after all – but a better car than originally planned!\n\nSo let’s take a step back.\n\nWhat’s your skateboard?\n\nThe top scenario (delivering a front tire) sucks because we keep delivering stuff that the customer can’t use at all. If you know what you’re doing – your product has very little complexity and risk, perhaps you’ve built that type of thing hundreds of times before – then go ahead and just do big bang. Build the thing and deliver it when done.\n\nHowever, most product development efforts I’ve seen are much too complex and risky for that, and the big bang approach all too often leads to huge expensive failures. So the key question is What’s your skateboard?\n\nIn product development, one of the first things you should do (after describing what problem you are trying to solve for whom) is to identify your skateboard-equivalent. Think of the skateboard as a metaphor for the smallest thing you can put in the hands of real users, and get real feedback. Or use “bus ticket” if that metaphor works better.\n\nThis will give you the vitally needed feedback loop, and will give both you and the customer control over the project – you can learn and make changes, instead of just following the plan and hoping for the best.\n\nLet’s take at some real-life examples.\n\nExample 1: Spotify music player\n\n“With over 75 million users, it’s hard to remember a time without Spotify. But there was. A time when we were all mulling the aisles of Target for new CDs. A time in our lives where we all became thieves on Napster. A time when iTunes forced us to buy songs for $2/piece. And then came Spotify.” –Tech Crunch\n\nSpotify is a pretty fancy product now. But it didn’t start that way. I was lucky to be involved pretty early in this amazing journey (and still am).\n\nAs a startup in 2006, Spotify was founded on some key assumptions – that people are happy to stream (rather than own) music, that labels and artists are willing to let people do so legally, and that fast and stable streaming is technically feasible. Remember, this was 2006 when music streaming (like Real Player) was a pretty horrible experience, and pirate-copied music was pretty much the norm. The technical part of the challenge was: “Is it even possible to make a client that streams music instantly when you hit the Play button? Is it possible to get rid of that pesky ‘Buffering’ progress bar?”\n\nStarting small doesn’t mean you can’t think big. Here’s one of the early sketches of what they had in mind:\n\nBut instead of spending years building the whole product, and then finding out if the assumptions hold, the developers basically sat down and hacked up a technical prototype, put in whatever ripped music they had on their laptops, and started experimenting wildly to find ways to make playback fast and stable. The driving metric was “how many milliseconds does it take from when I press Play to when I hear the music?”. It should play pretty much instantly, and continue playing smoothly without any stuttering!\n\n“We spent an insane amount of time focusing on latency, when no one cared, because we were hell bent on making it feel like you had all the world’s music on your hard drive. Obsessing over small details can sometimes make all the difference. That’s what I believe is the biggest misunderstanding about the minimum viable product concept. That is the V in the MVP.” -Daniel Ek, co-founder and CEO\n\nOnce they had something decent, they started testing on themselves, their family, and friends.\n\nThe initial version couldn’t be released to a wider audience, it was totally unpolished and had basically no features except the ability to find and play a few hard-coded songs, and there was no legal agreement or economic model. It was their skateboard.\n\nBut they shamelessly put the skateboard in the hands of real users – friends and family – and they quickly got the answers they needed. Yes, it was technically possible. And yes, people absolutely loved the product (or more like, what the product can become)! The hypotheses were validated! This running prototype helped convince music labels and investors and, well, the rest is history.\n\nExample 2: Minecraft\n\nMinecraft is one of the most successful games in the history of game development, especially if you take development cost into consideration. Minecraft is also one of the most extreme examples of the release-early-and-often mindset. The first public release was made after just 6 days of coding, by one guy ! You couldn’t do much in the first version – it was basically an ugly blocky 3d-landscape where you can dig up blocks and place them elsewhere to build crude structures.\n\nThat was the skateboard.\n\nThe users were super-engaged though (most developer-user communication happened via Twitter, pretty funny). Among the early users were me and my four kids. Over hundred releases were made during the first year. Game development is all about finding the fun (some game companies I’ve worked with use the term “Definition of Fun” instead of “Definition of Done”), and the best way to do that is by having real people actually play that game – in this cases thousands of real people who had actually paid to try the early access version and therefore had a personal incentive to help improve the game.\n\nGradually a small development team was formed around the game (mostly 2 guys actually), and the game became a smash hit all over the world. I don’t think I’ve met any kid anywhere who doesn’t play Minecraft. And last year the game (well, the company that was formed around the game) was sold to Microsoft for $2.5 billion. Quite amazing.\n\nExample 3: Big Government Project\n\nAround 2010 the Swedish Police started a big initiative to enable police to spend more time in the field and less time at the station – PUST (Polisens Utrednings STöd). A fascinating project, I was involved as coach and wrote a book about what we did and what we learned (Lean from the Trenches).\n\nThe idea was to put laptops in the cars, and customized software to give police access to the systems they need in real-time, for example while interrogating a suspect (this was the pre-tablet age).\n\nThey had tried to build similar systems in the past and failed miserably, mainly because of Big Bang thinking. They told me that one of their previous attempts took 7 years from inception to first release. SEVEN YEARS! By then of course everything had changed and the project was a total failure. So this time they wanted to do it differently.\n\nThe 60-person project (later referred to as “PUST Java”) succeeded surprisingly well, especially for being a big government project (it even came second in CIO Awards “Project of the Year”). One of the main success factors was that they didn’t try to build the whole thing at once – they split the elephant along two dimensions:\n\nBy Region. We don’t need to release to ALL of Sweden at once, we could start by releasing to just one region.\n\nBy Crime type. We don’t need to support ALL crime types initially, we could start by just supporting 1-2 crime types.\n\nThe first version, 1.0, was their skateboard.\n\nIt was a small system, supporting just a couple of crime types, and it was field-tested on a handful of cops in Östergötland (a region in Sweden). Other crime types had to be dealt with the old way – drive to the station and do paperwork. They knew they were guinea pigs, and that the product was nowhere near finished. But they were happy to test it, because they knew the alternative. They had seen what kind of crappy systems come out of processes that lack early user feedback, and now they finally had a chance to influence a system while it was being built!\n\nTheir feedback was harsh and honest. Many of our assumptions flew out the window, and one of the big dilemmas was what to do with all the carefully crafted Use Case specifications that were getting less and less relevant as the real user feedback came in (this was an organization with a waterfall history and a habit of doing big upfront analysis).\n\nAnyway, long story short, the early feedback was channeled into product improvements and, gradually, as the those cops in Östergötland started liking the product, we could add more crime types and spread it to more regions. By the time we got to the big release (1.4), with nationwide rollout and training of 12000 police, we weren’t all that worried. We had done so many releases, so much user testing, that we slept well on the night of the nationwide release.\n\nUnfortunately the victory was short-lived. A follow-up project (PUST Siebel) botched it and went back to waterfall-thinking, probably due to old habit. 2 years of analysis and testing without any releases or user-testing, followed by a big-bang release of the “next generation” of the product to all 12,000 police at once. It was an absolute disaster, and after half a year of hemorrhaging they shut the whole thing down. The development cost was about €20 million, but Internal studies estimate that the cost to Swedish society (because the police were handicapped by the horrible system) was on the order of €1 Billion!\n\nPretty expensive way to learn!\n\nExample 4: Lego\n\nI’m currently working at Lego, and I’m amazed by their ability to deliver new smash-hits, year after year without fail. I hear lots of interesting stories about how they do this, and the common theme is prototyping and early user testing! I often see groups of kids in the office, and designers collaborate with local kindergartens and schools and families to field-test the latest product ideas.\n\nHere’s a recent example – Nexo Knights (released Jan 2016):\n\nWhen they first started exploring this concept, they did paper prototypes and brought to small kids. The kids’ first reaction was “hey, who are the bad guys? I can’t see who’s good and who’s bad!”. Oops. So the designers kept iterating and testing until they found a design that worked with the kids. I bet even you can see who’s good and who’s evil in the picture above…\n\nNot sure exactly where the skateboard is in this story, but you get the idea – early feedback from real users! Don’t just design the product and build the whole thing. Imagine if they had built the product based on their original design assumptions, and learned about the problem after delivering thousands of boxes to stores all over the world!\n\nLego also has it’s share of hard-earned failures. One example is Lego Universe, a massively multiplayer online Lego world. Sounds fun huh? Problem is, they got overambitious and ended up trying to build the whole thing to perfection before releasing to the world.\n\nAbout 250 people worked for 4-5 years (because of constant scope creep due to perfectionism), and when the release finally came the reception was… lukewarm. The finished game was beautiful, but not as fun as expected, so the product was shut down after 2 years.\n\nThere was no skateboard!\n\nWhy not? Because skateboards aren’t Awesome (at least not if you’re expecting a car), and Lego’s culture is all about delivering Awesome experiences! If you work at Lego HQ in Billund, Denmark you walk past this huge mural every day:\n\nTranslates roughly to “Only the best is good enough”. It has been Lego’s guiding principle ever since the company started 80+ years ago, and has helped them become one of the most successful companies in the world. But in this case the principle was misapplied. The hunt for perfection delayed vital feedback, which meant mistaken assumptions about what the users like and don’t like. The exact opposite of Minecraft.\n\nInterestingly enough the Lego Universe teams were actually using Scrum and iterating heavily – just like the Minecraft guys did. But the releases were only internal. So there was most likely a skateboard, and a bicycle, and so on, but those products never reached real users. That’s not how Scrum is intended to be used.\n\nIt was an expensive failure, but Lego learned from it and they are constantly getting better at early testing and user feedback.\n\nImproving on “MVP”\n\nAnd that (deep breath…) brings me to the topic of MVP – Minimum Viable Product.\n\nThe underlying idea is great, but the term itself causes a lot of confusion and angst. I’ve met many customers that are like “No Way do I want an MVP delivery – that’s the last delivery I’ll get!” All too often teams deliver the so-called Minimum Viable Product, and then quickly get whisked away to the next project, leaving the customer with a buggy, unfinished product. For some customers, MVP = MRC (Minimum Releasable Crap).\n\nI know, I know, this comes down to bad management rather than the term MVP, but still… the term invites misunderstanding. “Minimum” and “Viable” mean different things to different people, and that causes problems.\n\nSo here’s an alternative.\n\nFirst of all, replace the word “Minimum” with “Early”. The whole idea behind releasing an MVP is to get early feedback – by delivering a minimum product rather than a complete product, we can get the feedback earlier.\n\nFew customers want “minimum” but most customers want “early”! So that’s our first change:\n\nMinimum => Earliest\n\nNext, remove the word “Viable” since it’s too vague. Your “viable” is my “horrible”. Some people think Viable means “something I can test and get feedback from”, others think it means “something the customer can actually use”. So let’s be more explicit and split it into three different things:\n\nEarliest Testable Product is the skateboard or bus ticket – the first release that customers can actually do something with. Might not solve their problem, but it generates at least some kind of feedback. We make it very clear that learning is the main purpose of this release, and that any actual customer value will be a bonus.\n\nEarliest Usable Product is perhaps the bicycle. The first release that early adopters will actually use, willingly. It is far from done, and it might not be very likeable. But it does put your customers in a better position than before.\n\nEarliest Lovable Product is perhaps the motorcycle. The first release that customers will love, tell their friends about, and be willing to pay for. There’s still lots to improve, and we may still end up with a convertible, or a plane, or something else. But we’ve reached the point where we have a truly marketable product.\n\nI considered adding an even earlier step “Earliest Feedbackable Product”, which is basically the paper prototype or equivalent that you use to get your first feedback from the customer. But four steps seems too many, and the word Feedbackable….. ugh. But nevertheless, that is also an important step. Some would call a paper prototype the Earliest Testable Product, but I guess that comes down to how you define Testable. Check out Martin’s MVP Guide to learn more – he’s got plenty of super-concrete examples of how to get early feedback with minimum investment.\n\nOf course people can still misinterpret Earliest Testable/Usable/Lovable, but it’s at least one step more explicit than the nebulous Minimum Viable Product.\n\nTakeaway points\n\nOK time to wrap it up. Never thought it would get this long, thanks for sticking around! Key takeaways:\n\nAvoid Big Bang delivery for complex, innovative product development. Do it iteratively and incrementally. You knew that already. But are you actually doing it?\n\nStart by identifying your skateboard – the earliest testable product. Aim for the clouds, but swallow your pride and start by delivering the skateboard.\n\nAvoid the term MVP. Be more explicit about what you’re actually talking about. Earliest testable/usable/lovable is just one example, use whatever terms are least confusing to your stakeholders..\n\nAnd remember – the skateboard/car drawing is just a metaphor. Don’t take it too literally :o)\n\nPS – here’s a fun story about how my kids and I used these principles to win a Robot Sumo competition :o)\n\nThanks Mary Poppendieck, Jeff Patton, Alistair Cockburn, Anders Haugeto, Sophia, colleagues from Crisp, Spotify and Lego, and everyone else who gave tons of useful feedback."
    }
}