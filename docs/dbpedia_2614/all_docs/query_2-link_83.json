{
    "id": "dbpedia_2614_2",
    "rank": 83,
    "data": {
        "url": "https://onecompiler.com/mongodb/3zqxzqknu",
        "read_more_link": "",
        "language": "en",
        "title": "OneCompiler",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-10-19T00:00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "MongoDB online editor\n\nWrite, Run & Share MongoDB queries online using OneCompiler's MongoDB online editor and compiler for free. It's one of the robust, feature-rich online editor and compiler for MongoDB. Getting started with the OneCompiler's MongoDB editor is really simple and pretty fast. The editor shows sample boilerplate code when you choose language as 'MongoDB' and start writing queries to learn and test online without worrying about tedious process of installation.\n\nAbout MongoDB\n\nMongoDB is a cross platform document oriented NoSQL database.\n\nKey Features:\n\nDesigned to overcome the the limitations of relational databases approach and other NoSQL solutions\n\nHorizontal scaling\n\nLoad balancing capabilities\n\nBetter data availability and stability\n\nSyntax help\n\nCommands\n\nInserting documents\n\ndb.collection.insert(): Using insert you can either insert one document or array of documents\n\ndb.employees.insert( {empId: 3, name: 'Ava', dept: 'Sales' });\n\ndb.collection.insertOne(): Inserts one document\n\ndb.employees.insertOne( {empId: 4, name: 'Nick', dept: 'Accounting' });\n\ndb.collection.insertMany: Inserts multiple documents\n\ndb.employees.insertMany([ {empId: 1, name: 'Clark', dept: 'Sales' }, {empId: 2, name: 'Dave', dept: 'Accounting' } ]);\n\nUpdating documents\n\ndb.collection.update() : Updates one or more than one document(s) in collection based on matching document and based on multi option\n\ndb.employees.update( {empId: 3 }, { $set: { region: \"Asia\" } } );\n\ndb.collection.updateOne() : Updates a single document in collection based on matching document\n\ndb.employees.updateOne( {empId: 2 }, { $set: { region: \"Asia\" } } );\n\ndb.collection.updateMany() : Updates multiple documents in collection based on the condition.\n\ndb.employees.updateMany( { dept: 'Sales'}, { $set: { region: \"US\" } } );\n\nDeleting documents\n\ndb.collection.deleteOne(<filter>, <options>): Deletes a Single document from collection\n\ndb.employees.deleteOne({ empId: 1})\n\ndb.collection.deleteMany(<filter>, <options>): Deletes all documents with matching filter"
    }
}