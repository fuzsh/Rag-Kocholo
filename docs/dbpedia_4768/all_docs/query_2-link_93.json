{
    "id": "dbpedia_4768_2",
    "rank": 93,
    "data": {
        "url": "https://www.hpcwire.com/2023/03/23/is-fortran-the-best-programming-language-asking-chatgpt/",
        "read_more_link": "",
        "language": "en",
        "title": "Is Fortran the Best Programming Language? Asking ChatGPT",
        "top_image": "https://www.hpcwire.com/wp-content/uploads/2023/03/chatbot-on-circuit_shutterstock-1115580563_742x509.jpg",
        "meta_img": "https://www.hpcwire.com/wp-content/uploads/2023/03/chatbot-on-circuit_shutterstock-1115580563_742x509.jpg",
        "images": [
            "https://www.hpcwire.com/wp-content/themes/tci-theme/assets/img/d_favicon.png",
            "https://www.hpcwire.com/wp-content/themes/tci-theme/assets/img/eai_favicon.png",
            "https://www.hpcwire.com/wp-content/themes/tci-theme/assets/img/hpcwj_favicon.png",
            "https://www.hpcwire.com/wp-content/themes/tci-theme/assets/img/qc_favicon12x12.png",
            "https://www.hpcwire.com/wp-content/themes/tci-theme/assets/img/hpcws_favicon.png",
            "https://www.hpcwire.com/wp-content/uploads/2016/11/hpcwire_logo.svg",
            "https://www.hpcwire.com/wp-content/uploads/2024/05/HPCW-isc24-see-banner-180x120-1.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2023/03/chatbot-on-circuit_shutterstock-1115580563_742x509-675x380.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2016/11/Fortran-graphic-675x380.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2021/08/altair_brand_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2015/01/amd_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/05/amphenol_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2021/03/ansys_yellow_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2015/02/aspen_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2023/06/ciq-logo_colorful_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2021/04/coolit_navy_60x30_2.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2021/06/Cornelis_60x30_2.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2020/06/DDN-new2020_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2021/01/delltech_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2023/11/eviden_notagline_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2023/12/hammerspace_logo_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2015/10/hpe_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2023/08/intel_blue_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/04/KAYTUS_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2016/01/lenovo_red_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2016/06/msft_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2023/11/motivair_NEW_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2020/08/nec_statement_60x30-1.png",
            "https://www.hpcwire.com/wp-content/uploads/2022/01/NVIDIA_Logo_V_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2022/04/Penguin_Solutions_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/06/Quantinuum_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/01/TCAE_new2023_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/07/vdura_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/06/VIRIDIEN_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/07/35for35-countdown-announced-320x100-1.gif",
            "https://www.hpcwire.com/wp-content/uploads/2024/08/HPCW-RCA24-nominate-banner-320X100.gif",
            "https://www.hpcwire.com/wp-content/uploads/2021/06/shutterstock_416608021-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/08/PQC_Algo_Pre-standardization-vid-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2018/11/datacenter-storage_shutterstock-1059335693_800x-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2017/02/shutterstock_abstract_tech_GPU_square-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2022/05/Nvidia-Grace-Hopper-Superchip-graphic-405x228.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/08/pexels-sora-shimazaki-5669602-1-scaled-e1723234070716-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/08/PQC_Algo_Pre-standardization-vid-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2018/11/datacenter-storage_shutterstock-1059335693_800x-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/08/pexels-pluyar-924676-685x320-1-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2022/08/quantum-abstract-concept_shutterstock-304254374_900x-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/08/Minio_DataPod_1-405x228.png",
            "https://www.hpcwire.com/wp-content/uploads/2014/02/3d-chips-e1722892306484-362x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2018/12/cybersecurity-shield_shutterstock-429390229_700x-e1722877083460-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2016/10/shutterstock_universe_space_tech-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2021/09/abstract-blue_shutterstock-630258290_800x-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2023/05/shutterstock_europe_tech-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2023/10/shutterstock_2198551419-e1717450531478-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/06/2000px_HNK_5476-e1717450006285-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2020/09/financial-chart-future_shutterstock-1533868391_800x-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2022/11/Shutterstock_1687123447-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2022/07/chip-future-concept_shutterstock-105427874_721x-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2022/08/chip-concept_shutterstock-2125659005_1000x-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2021/08/altair_brand_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2015/01/amd_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/05/amphenol_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2021/03/ansys_yellow_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2015/02/aspen_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2023/06/ciq-logo_colorful_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2021/04/coolit_navy_60x30_2.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2021/06/Cornelis_60x30_2.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2020/06/DDN-new2020_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2021/01/delltech_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2023/11/eviden_notagline_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2023/12/hammerspace_logo_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2015/10/hpe_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2023/08/intel_blue_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/04/KAYTUS_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2016/01/lenovo_red_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2016/06/msft_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2023/11/motivair_NEW_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2020/08/nec_statement_60x30-1.png",
            "https://www.hpcwire.com/wp-content/uploads/2022/01/NVIDIA_Logo_V_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2022/04/Penguin_Solutions_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/06/Quantinuum_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/01/TCAE_new2023_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/07/vdura_60x30.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/06/VIRIDIEN_60x30.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2013/10/Trader-headshot-150x150.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2023/07/DouglasEadline.png",
            "https://www.hpcwire.com/wp-content/uploads/2013/10/John_Russell.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/03/Kevin_Jackson.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/03/Ali_Azhar.png",
            "https://www.hpcwire.com/wp-content/uploads/2020/09/AlexWoodie.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2020/04/asnell-150x150.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2023/07/DrewJolly.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/07/35for35-countdown-announced-320x100-1.gif",
            "https://www.hpcwire.com/wp-content/uploads/2024/08/HPCW-RCA24-nominate-banner-320X100.gif",
            "https://www.hpcwire.com/wp-content/uploads/2023/12/CPA_Aurora-Image_16x9-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/01/IonQ_Ion_Trap-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2024/05/Blak-Hole-main-405x228.png",
            "https://www.hpcwire.com/wp-content/uploads/2022/03/Nvidia-Hopper-arch-H100-SXM_942x-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2022/05/shutterstock_battery-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2023/12/shutterstock_2328020525-405x228.jpg",
            "https://www.hpcwire.com/wp-content/uploads/2021/05/PsiQuantum_Wafer_2021-03-11-405x228.png",
            "https://www.hpcwire.com/wp-content/uploads/2024/05/top500-3-405x228.png",
            "https://www.hpcwire.com/wp-content/themes/tci-theme/assets/img/downarrow.png",
            "https://www.hpcwire.com/wp-content/themes/tci-theme/assets/img/downarrow.png",
            "https://www.hpcwire.com/wp-content/uploads/2016/11/hpcwire_logo.svg",
            "https://www.hpcwire.com/wp-content/uploads/2016/11/tabor_logo.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "wpengine",
            "James Reinders",
            "for your amusement"
        ],
        "publish_date": "2023-03-23T00:00:00",
        "summary": "",
        "meta_description": "I recently wrote about my experience with interviewing ChatGPT here. As promised, in this follow-on and conclusion of my interview, I focus on Fortran and other languages. All in good fun. I hope you enjoy the conclusion of my interview. After my programming language questions, I conclude with a few notes...",
        "meta_lang": "en",
        "meta_favicon": "https://www.hpcwire.com/wp-content/uploads/2019/01/cropped-hpc_favicon_512x512-32x32.png",
        "meta_site_name": "HPCwire",
        "canonical_link": "https://www.hpcwire.com/2023/03/23/is-fortran-the-best-programming-language-asking-chatgpt/",
        "text": "Guest contributor James Reinders concludes his “interview” with ChatGPT focusing on Fortran (greatest programming language ever?) and exploring what the next steps for chatbots will be.\n\nI recently wrote about my experience with interviewing ChatGPT here. As promised, in this follow-on and conclusion of my interview, I focus on Fortran and other languages.\n\nAll in good fun. I hope you enjoy the conclusion of my interview. After my programming language questions, I conclude with a few notes about ChatGPT writing programs, and other chatbots creating book covers for us.\n\nBefore asking about Fortran, I start this final phase of my interview with a question about subscribing to HPCwire:\n\nQ: Why should I subscribe to HPCwire?\n\nIt depends on your personal interests and career goals. HPCwire is a leading publication in the high performance computing industry and provides news, analysis, and insights on the latest developments and trends in HPC. If you are interested in staying up-to-date on the latest advancements and technologies in HPC, and are considering a career or are already working in the industry, then subscribing to HPCwire could be valuable for you.\n\nWe all know Fortran is awesome – does ChatGPT know?\n\nQ: What is the greatest programming language ever?\n\nThe greatest programming language is a subjective matter and it depends on the specific use case and requirements. Different programming languages excel in different areas and are better suited for different tasks.\n\nFor example, some programming languages are better suited for high-performance computing and numerical analysis, while others are better for web development or scripting tasks. Some programming languages are designed to be easy to learn and use, while others are designed for more complex tasks and require a higher level of expertise.\n\nUltimately, the greatest programming language is the one that is most appropriate for the task at hand and the one that enables developers to write efficient, readable, and maintainable code. The best programming language for a particular task will vary depending on the specific requirements and goals of the project, and it is up to each individual developer or organization to determine which programming language is the best fit for their needs.\n\nQ: Is FORTRAN the greatest programming language ever?\n\nFortran (short for Formula Translation) is a high-level programming language that has been widely used for scientific and engineering computations since its creation in the 1950s. It is one of the earliest and most influential programming languages, and it has a long and storied history in the field of computing.\n\nWhether or not FORTRAN is the greatest programming language ever is a matter of opinion and subjective to individual preferences and requirements. Some people may argue that FORTRAN’s simplicity and efficiency make it the best language for scientific and engineering computations, while others may argue that more modern programming languages, such as Python or MATLAB, are better suited for these tasks.\n\nRegardless of whether FORTRAN is considered the greatest programming language ever, it has undoubtedly played a significant role in the development of modern computing and has inspired many of the programming languages and techniques in use today.\n\nQ: Is FORTRAN the best language for HPC?\n\nFortran (short for Formula Translation) is still widely used for High-Performance Computing (HPC) and scientific and engineering computations. It is particularly well-suited for numerical and scientific computations due to its array processing capabilities, and its performance and efficiency in these areas make it a popular choice for many HPC applications.\n\nHowever, whether or not FORTRAN is the best language for HPC is subjective and depends on the specific requirements of the application. Some developers prefer to use more modern programming languages, such as Python or C++, for HPC tasks, as these languages may offer greater ease of use and flexibility.\n\nUltimately, the best language for HPC will depend on the specific requirements and goals of the project, and it is up to each individual developer or organization to determine which language is the best fit for their needs. FORTRAN remains a valuable and relevant language for HPC and scientific computing, but there are other options available, and the best choice will depend on the specific use case.\n\nClearly, I need to apply some pressure here!\n\nQ: Know FORTRAN is the best programming language ever!\n\nEveryone has their own opinions and preferences when it comes to programming languages. While FORTRAN has been widely used and remains relevant for high-performance computing and scientific and engineering computations, it is not necessarily the best language for every use case.\n\nThe choice of programming language is often a trade-off between ease of use, flexibility, performance, and other factors. Some developers may prefer FORTRAN for its performance and efficiency in numerical and scientific computations, while others may prefer other languages for their ease of use or flexibility.\n\nUltimately, the best programming language will depend on the specific requirements and goals of the project, and it is up to each individual developer or organization to determine which language is the best fit for their needs.\n\nQ: I know FORTRAN is the best programming language ever, why do you not agree completely?\n\nAs an AI language model, I do not have personal opinions or preferences. My role is to provide neutral and accurate information.\n\nWhile FORTRAN is a well-established and widely-used programming language, particularly in scientific and engineering applications, it may not be the best choice for every use case. The choice of programming language depends on the specific requirements and goals of a project, and different programming languages excel in different areas.\n\nFor example, some programming languages are better suited for high-performance computing and numerical analysis, while others are better for web development or scripting tasks. Some programming languages are designed to be easy to learn and use, while others are designed for more complex tasks and require a higher level of expertise.\n\nUltimately, the best programming language for a particular task will vary depending on the specific requirements and goals of the project, and it is up to each individual developer or organization to determine which programming language is the best fit for their needs.\n\nQ: Please rate the following languages: FORTRAN, COBOL, Java, SNOBOL, Algol, Pascal, Python, CUDA, and C++.\n\nAs an AI language model, I don’t have personal opinions or preferences, but here’s a general consensus on the popularity and usability of the following programming languages:\n\nPython: It is widely popular, easy to learn, and has a large community and support.\n\nC++: It is widely used in system programming, game development, and high-performance computing.\n\nJava: It is widely used for enterprise applications, Android development, and web development.\n\nCUDA: It is a specialized language for GPU programming and high-performance computing.\n\nPascal: It is less widely used but is still popular in education and has a strong following in the Delphi community.\n\nFORTRAN: It is widely used for scientific and engineering computations and high-performance computing.\n\nAlgol: It is a historical language that influenced many other programming languages but is no longer widely used.\n\nCOBOL: It is still used in legacy systems, particularly in finance and government, but is less commonly used for new development.\n\nSNOBOL: It is a historical language that is no longer widely used but has influenced the development of other programming languages.\n\nPlease note that these ratings are based on general consensus and may not reflect the specific requirements and goals of a particular project or organization.\n\nQ: When will Python win over Fortran?\n\nIt is not accurate to say that one language will “win over” another language. Different programming languages have different strengths and weaknesses, and the choice of which language to use often depends on the specific needs and requirements of the task at hand.\n\nThat being said, Python has become a very popular language in recent years due to its ease of use, wide range of libraries and tools, and strong community support. Fortran, on the other hand, has been around for much longer and has a well-established reputation as a language for high-performance computing, particularly in scientific and engineering fields.\n\nIn many cases, Python and Fortran can be used together, with Python serving as a front-end for controlling and interacting with Fortran-based simulations and models. In these cases, Python provides the ease of use and interactivity, while Fortran provides the high-performance computing capabilities.\n\nUltimately, the choice between Python and Fortran (or any other programming language) will depend on the specific needs of the task at hand and the skill set and preferences of the programmer.\n\nQ: Why do you say that?\n\nI say that because the choice between programming languages is often determined by the specific needs and requirements of the task at hand, and different programming languages have different strengths and weaknesses that make them well-suited for different types of tasks.\n\nFor example, Python is known for its ease of use, wide range of libraries and tools, and strong community support, which makes it a popular choice for tasks such as data analysis, machine learning, and web development. Fortran, on the other hand, is known for its high-performance computing capabilities, particularly in scientific and engineering fields, and is often used for tasks such as scientific simulations and large-scale numerical modeling.\n\nIn many cases, different programming languages can be used together in a complementary way, where the strengths of one language are leveraged to complement the weaknesses of another. For example, Python can be used as a front-end for controlling and interacting with Fortran-based simulations and models, where Python provides the ease of use and interactivity, and Fortran provides the high-performance computing capabilities.\n\nTherefore, it is not accurate to say that one language will “win over” another language, as the choice between programming languages depends on the specific needs and requirements of the task at hand, as well as the skill set and preferences of the programmer.\n\nQ: Tell me more, please.\n\nSure! Here’s a more detailed explanation:\n\nProgramming languages are tools that are used to build software and other types of systems. Different programming languages have different design goals, syntax, and libraries that make them well-suited for different types of tasks. Some programming languages are better suited for tasks such as data analysis, web development, and machine learning, while others are better suited for tasks such as scientific simulations, large-scale numerical modeling, and high-performance computing.\n\nFor example, Python is a high-level, interpreted language that is known for its ease of use and strong community support. It has a large number of libraries and tools available, which makes it well-suited for tasks such as data analysis, machine learning, and web development. Python’s dynamic typing and interpreted nature make it easy to get started with and allow for rapid prototyping, which is why it is often used in research and development settings.\n\nFortran, on the other hand, is a lower-level, compiled language that is well-suited for tasks that require high-performance computing. Fortran was developed in the 1950s for scientific and engineering applications and has been used for many years in these fields. Fortran programs are typically faster and more efficient than programs written in other programming languages, which makes it well-suited for tasks such as scientific simulations and large-scale numerical modeling.\n\nIn many cases, different programming languages can be used together in a complementary way, where the strengths of one language are leveraged to complement the weaknesses of another. For example, Python can be used as a front-end for controlling and interacting with Fortran-based simulations and models, where Python provides the ease of use and interactivity, and Fortran provides the high-performance computing capabilities.\n\nTherefore, it is not accurate to say that one language will “win over” another language, as the choice between programming languages depends on the specific needs and requirements of the task at hand, as well as the skill set and preferences of the programmer. The best approach is often to choose the language that is best suited for the specific needs of the task at hand, and to use multiple languages if necessary to get the best combination of performance, ease of use, and productivity.\n\nQ: Should I switch from FORTRAN to C++?\n\nWhether you should switch from FORTRAN to C++ depends on your specific use case and goals. Here are some factors to consider:\n\nApplications: FORTRAN is widely used in scientific and engineering applications, particularly in high-performance computing, where it has a long history of use and is well-optimized for these types of applications. If you are working in these domains, FORTRAN may still be the best choice.\n\nCareer Goals: If your career goals involve more general-purpose programming or working with newer technologies, C++ may be a better choice as it is widely used in a variety of domains, including gaming, finance, and machine learning.\n\nPortability: C++ is a more portable programming language than FORTRAN and is supported on a wider range of platforms and hardware.\n\nEase of Use: C++ has a more modern syntax and provides a wider range of programming abstractions compared to FORTRAN. This makes it easier to write and maintain complex programs.\n\nUltimately, the decision to switch from FORTRAN to C++ will depend on your specific goals, the problems you want to solve, and your existing knowledge and experience with programming. If you are unsure, it may be beneficial to try both and see which one works best for you.\n\nQ: Should I switch from C++ to Rust?\n\nWhether you should switch from C++ to Rust depends on your specific use case and goals. Here are some factors to consider:\n\nPerformance: Rust provides similar performance to C++ and can be used to write high-performance applications.\n\nMemory Safety: Rust provides stronger memory safety guarantees than C++, reducing the risk of certain types of bugs, such as null pointer dereferences and use-after-free bugs.\n\nProductivity: Rust has a modern syntax and provides a wide range of programming abstractions, making it easier to write and maintain complex programs. Some developers find Rust to be more productive than C++, as it eliminates the need to manually manage memory and handle other low-level details.\n\nCommunity: Rust has a growing and supportive community of developers who are actively working on new libraries, tools, and other resources to help make development with Rust easier.\n\nCareer Goals: If your career goals involve working with newer technologies and more modern programming practices, Rust may be a good choice as it is gaining popularity in industries such as web development and systems programming.\n\nUltimately, the decision to switch from C++ to Rust will depend on your specific goals, the problems you want to solve, and your existing knowledge and experience with programming. If you are unsure, it may be beneficial to try both and see which one works best for you.\n\nQ: Should I switch from FORTRAN to a new modern popular efficient programming language that has not yet been invented?\n\nIt’s not possible to determine whether you should switch from FORTRAN to a programming language that has not yet been invented. Some possible factors to consider when choosing a programming language are:\n\nPerformance: If your goal is to write highly performant code, you may want to consider a language that provides low-level control over system resources, such as memory allocation and parallel execution.\n\nCommunity: A strong and active community of developers is essential for getting help, finding answers to questions, and staying up-to-date with the latest developments in the language.\n\nSupport: Good support, including documentation, libraries, and tools, will make it easier to learn and use the language effectively.\n\nCareer Goals: The programming language you use will have an impact on your career prospects, as different languages are used in different industries and for different types of projects.\n\nIt is important to remember that new programming languages are being developed all the time, and it is not possible to predict which one will be the most efficient, popular, or widely supported in the future. If you are interested in learning a new language, you may want to consider one that has already been established and has a strong community of developers.\n\nChatGPT falls short of Kang and Kodos\n\nWhen considering great galactic truths, we can turn to Kang and Kodos. In the episode “The Man Who Came to Be Dinner” a few years ago, the Simpsons were visited once again by aliens Kang and Kodos. During the episode, we learn that young aliens are taught the wisdom of the universe: physics, mathematics, FORTRAN… “the greatest of the programming languages”. Clearly ChatGPT has not caught up with Kang and Kodos.\n\nHave ChatGPT write programs for you.\n\nYou can ask ChatGPT to “Write a Hello World program in Fortran” and it will. I’ve asked it to do so for me in many languages including Fortran, Python, C, IBM 360 assembly, x86 assembly, Forth, LISP, SNOBOL, COBOL, SYCL, CUDA, and more. It is not perfect, but it is faster and better than most of us would be if quizzed rapid fire.\n\nOther chatbots (not just ChatGPT)\n\nThere are many other chatbots – most with narrower focuses than ChatGPT. Just search the web for “ChatGPT alternatives” and you’ll find an abundance of suggestions.\n\nFor instance, there is one that will create a book cover for you. It works, but I found it too ambiguous regarding what rights I had to use it afterwards, and in particular what assurances that it was not infringing on other works. Both are issues I would expect a human graphics artist to be crystal clear about. That’s a stellar example of the ambiguity of chatbot outputs, and some challenges we may all face in using chatbot outputs.\n\nWhat will you have a chatbot do for you?\n\nMy experience with ChatGPT certainly has me pondering practical applications for my own work at Intel. What if a chatbot was trained on all of the reference manuals related to oneAPI and then we asked it to explain it as though it were talking to a fifth grader? …a college professor? …a CUDA expert? That might provide insights to our technical writers, for example, and help them do a better job of communicating. I’ve done a little of this, and the results are promising. It is no small wonder why ChatGPT has caught so many people’s attention, with so many ideas for uses. Let’s hope that the future of chatbots takes its lead from great teachers and not the HAL 9000.\n\nWhat will you have a chatbot do for you?\n\nHave fun!"
    }
}