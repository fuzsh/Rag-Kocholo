{
    "id": "dbpedia_4768_3",
    "rank": 56,
    "data": {
        "url": "https://www.embeddedrelated.com/showarticle/1672.php",
        "read_more_link": "",
        "language": "en",
        "title": "Parlez vous Fortran?",
        "top_image": "https://www.embeddedrelated.com/new2/images/blog_generic_image.png",
        "meta_img": "https://www.embeddedrelated.com/new2/images/blog_generic_image.png",
        "images": [
            "https://d23s79tivgl8me.cloudfront.net/new2/images/EmbeddedRelated_bigtab.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/FPGARelated_smalltab.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/DSPRelated_smalltab.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/MLRelated_smalltab.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/ER_Logo_Responsive_Header_Optimized.svg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/fpgarelated_small_mobile_logo.svg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/dsprelated_small_mobile_logo.svg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/electronics-related_small_mobile_logo.svg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/insights/306_200.jpg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/insights/306_300.jpg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/insights/306_300.jpg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/blogs/JasonSachs_transparent_100.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/blogs/NathanJones_transparent_100.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/blogs/MohammedBilloo_transparent_100.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/blogs/JacobBeningo_transparent_100.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/blogs/AlanCAssis_transparent_100.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/blogs/JasonSachs_transparent_100.png",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/blogs/MassimilianoPagani_transparent_100.png",
            "https://www.embeddedrelated.com/new2/Documents_Covers/209.70.jpg",
            "https://www.embeddedrelated.com/new2/Documents_Covers/178.70.jpg",
            "https://www.embeddedrelated.com/new2/Documents_Covers/180.70.jpg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/EmbeddedRelated_logo.svg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/DSPRelated_logo.svg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/MLRelated_logo.svg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/Electronics-Related_logo.svg",
            "https://d23s79tivgl8me.cloudfront.net/new2/images/FPGARelated_logo.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Colin Walls",
            "Jason Sachs",
            "Nathan Jones",
            "Mohammed Billoo",
            "Jacob Beningo",
            "Alan C. Assis",
            "Massimiliano Pagani"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "A look at the variety of programming languages that are [or have been] used for embedded and some thoughts on the future possibilities.",
        "meta_lang": "",
        "meta_favicon": "/apple-touch-icon.png",
        "meta_site_name": "",
        "canonical_link": "https://www.EmbeddedRelated.com/showarticle/1672.php",
        "text": "When I first started programming, the only language available to me was Fortran. I punched cards with my code and later received back a print-out with mostly error messages. I was always intrigued by being able to program a computer in such a straightforward way. I understood what assembly language or even machine code was all about, but felt that high level languages had a mystique. In due course, while still at university, I tried out any other languages that were available: BASIC, BCPL, Simula, SNOBOL 4, Algol W and I am sure there were others.\n\nWhen I graduated and found myself in the “real world”, moving towards embedded programming, I found that a selection of languages was still on offer …\n\nIn my first job, I was doing real time programming on a mini-computer using a variant of Fortran and some assembly. I was then assigned to an embedded project not that we used that term then and I was programming mainly in Forth, which was interesting. My next job saw me become much more specialized in embedded using mainly assembly language on 8-bit devices. Later on I began to use high level languages like Pascal and C. We even offered a Fortran compiler for embedded applications, but I do not recall anyone ever buying one.\n\nOf all the different high level languages that I encountered in the past, not one of them was designed for embedded use. PL/M from Intel is probably the only one that I can identify; Forth may also qualify. C has become the standard because it is a reasonable compromise – not ideal, but good enough. Ironically, I have often felt that one of its ancestors, BCPL, might have made a good embedded programming language.\n\nIn latter years, many programmers migrated from C to C++, which always had the potential to be a better language. But the take up was slower than anticipated.\n\nI am frequently asked to speculate on what language will be used in coming years and I do not have a firm view, as there are a number of possibilities:\n\nIt is often observed that the power that C offers as a language is also a problem, as this power is dangerous. One way to mitigate this danger is to use the language in a specific style. For example, MISRA have published a detailed set of guidelines on how to use C safely. It seems to me that, even if you are not programming a safety critical system, using such techniques will lead to more bug-free code, which is always advantageous.\n\nI always believed that C++ usage would increase, as engineers’ confidence in modern tools increased. MISRA have also published guidelines for C++, which may be useful. There is a language dialect called Embedded C++, which was espoused by certain vendors. It is a subset of the language, but, as far as I can tell, some language elements have been eliminated for no obvious reason.\n\nJava might play a greater part in embedded programming, particularly at the application level. However, writing a complete system in Java is not an option. It lacks a number of necessary language features notably pointers, so some coding in C, C++ or assembler will be needed.\n\nNowadays, I might bet on Rust, which shows great promise, as it is designed to address the needs of modern embedded applications.\n\nIn looking at programming languages, I have a strong sense of a continuing history. Maybe I will draw up a “family tree” sometime. It is entertaining to realise that there is nothing new. I first encountered object oriented programming in the Simula language, which was defined in the late 1960s. Fortran, which has been in use for over 50 years, introduced the idea of function overloading.\n\nI often have the urge to program in Forth again, as the language has an amazing economy in style and memory usage. Critics say that it is the only write-only programming language. I settle for insisting on an RPN calculator. Maybe I should look at Lisp …"
    }
}