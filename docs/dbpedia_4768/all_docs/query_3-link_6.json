{
    "id": "dbpedia_4768_3",
    "rank": 6,
    "data": {
        "url": "https://fortran-lang.discourse.group/t/history-of-fortran-fortran-ii-source-code/117",
        "read_more_link": "",
        "language": "en",
        "title": "History of Fortran (Fortran II source code)",
        "top_image": "https://canada1.discourse-cdn.com/free1/uploads/fortran_lang/original/1X/50078338be6df8cfc3e2277e9cb3c805f45c6ee6.png",
        "meta_img": "https://canada1.discourse-cdn.com/free1/uploads/fortran_lang/original/1X/50078338be6df8cfc3e2277e9cb3c805f45c6ee6.png",
        "images": [
            "https://canada1.discourse-cdn.com/free1/uploads/fortran_lang/original/1X/753300ee50b9fc3850b174441743608cd407dbbc.png",
            "https://avatars.discourse-cdn.com/v4/letter/m/858c86/48.png",
            "https://emoji.discourse-cdn.com/twitter/slight_smile.png?v=10"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2020-06-14T04:52:02+00:00",
        "summary": "",
        "meta_description": "I noticed the following resources today: \nhttp://www.softwarepreservation.org/projects/FORTRAN/ \nhttps://news.ycombinator.com/item?id=23497895 \nAmong other things, they have the FORTRAN II compiler sources and they claim&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://canada1.discourse-cdn.com/free1/uploads/fortran_lang/optimized/1X/50078338be6df8cfc3e2277e9cb3c805f45c6ee6_2_32x32.png",
        "meta_site_name": "Fortran Discourse",
        "canonical_link": "https://fortran-lang.discourse.group/t/history-of-fortran-fortran-ii-source-code/117",
        "text": "I noticed the following resources today:\n\nhttp://www.softwarepreservation.org/projects/FORTRAN/\n\nhttps://news.ycombinator.com/item?id=23497895\n\nAmong other things, they have the FORTRAN II compiler sources and they claim they got it working in a simulator, as well as the programs that the compiler generates.\n\nI don’t have time to do it myself, but would somebody be interested in trying to get the FORTRAN II compiler working and posting step by step instructions?\n\nAlso I would be interested in having a page at fortran-lang.org about Fortran’s history, with the focus on the language changes with code examples. We can do that from FORTRAN 66 onward relatively easily using the published standards, see e.g. here:\n\nhttps://www.fortran90.org/\n\nBut I would like to extend this all the way to FORTRAN I if possible. Based on https://en.wikipedia.org/wiki/Fortran#History, it seems there was simply\n\nFORTRAN I (1957)\n\nFORTRAN II (1958)\n\nFORTRAN III (1958, but never released as a product)\n\nFORTRAN IV (1962)\n\nThe FORTRAN IV was essentially equivalent to FORTRAN 66, of which the standard is available (see the link above).\n\nThe Wikipedia page is a good start, but I would prefer to have more code examples for each Fortran version, I think it conveys much better what the language allowed and how it looked like.\n\nThe basic elements of Fortran didn’t really change from FORTRAN I, and so having this page at fortran-lang.org would allow to drive the point home of what problem Fortran is trying to solve and that the original mission still applies today.\n\nI am quite confused about the early history of the standardization of FORTRAN. The English Wikipedia page says about ANSI X 3.9 1966 Fortran 66 (published on the 7th March 1966):\n\nFORTRAN 66 effectively became the first industry-standard version of FORTRAN.\n\nANSI X 3.9 1966 Fortran 66 : American National Standards Institute : Free Download, Borrow, and Streaming : Internet Archive\n\nBut it does not speak about the ECMA-9 Fortran standard, published in April 1965:\n\nECMA is the European Computer Manufacturers Association.\n\nI am also confused about that paragraph in the introduction:\n\nThe ECMA FORTRAN has been adopted by the International Organization for Standardization (ISO) as intermediate level (referred to as Intermediate FORTRAN) between “FORTRAN” and “Basic FORTRAN” as will be described in the ISO Recommendation on FORTRAN. The ECMA FORTRAN is a subset of the full ISO FORTRAN.\n\nI thought Fortran became an ISO standard only with Fortran 90. So what is that ISO FORTRAN they are talking about?\n\nI have found two interesting documents about the early standards:\n\nhttps://fortran.bcs.org/~fortrandev/1972/fortran_in_washington_1972.pdf\n\nIn July 1972 ISO published a recommended standard for\n\nFORTRAN under the document number R1539. This has three levels\n\nof the language, corresponding closely with American Standard\n\nFORTRAN, ECMA FORTRAN, and American Basic Standard FORTRAN.\n\nThat second document gives more details about the history of Fortran standardization:\n\nMy understanding is that the ECMA Fortran was the first Fortran standard in 1965, but it was a subset of the future Fortran 66, which was itself (like Fortran 77) a double standard with the full FORTRAN standard and a Basic Fortran standard. ECMA was somewhere between those full and basic standards.\n\nIn 1972, the ISO published an ISO Recommendation for Fortran (R1539), including these three levels of the language. I have found no clear definition of what is an ISO Recommendation, but my understanding is that it is not a true standard but may become one later (?). It is all the more surprising that it was not until Fortran 90 that it became an ISO standard.\n\nI’m afraid that getting the compiler working on an IBM 704 simulator will still leave a lot more to be done before the program can be run. The output from the compiler would be SAP assembler code (example of SAP code for a short Fortran program that inverts a 5 X 5 Hilbert matrix ). That assembler code would need to be run through the assembler and linked with the Fortran II library to obtain the equivalent of an EXE/a.out. Add to that the IBM 704 OS, simulated peripherals such as card reader, line printer, channels, etc.!\n\nWith a modern Fortran compiler one should have little trouble running Fortran II programs on a PC or MAC, except for a few features such as sense lights and sense switches that may not be included in the simulator.\n\nWhoops, formatting is lost, try again:\n\nC SOLUTION OF QUADRATIC EQUATION C (P. 122 OF A FORTRAN PRIMER BY E. ORGANICK) 1 READ INPUT TAPE 5, 51, ANAME, N 51 FORMAT(A6,I2) WRITE OUTPUT TAPE 6,52, ANAME 52 FORMAT(1H1,33HROOTS OF QUADRATIC EQUATIONS FROM A6) DO 21 I = 1, N READ INPUT TAPE 5, 53, A, B, C 53 FORMAT(3F10.2) WRITE OUTPUT TAPE 6,54, I, A, B, C 54 FORMAT(1H0,8HSET NO. I2/5H A = F8.2,12X,4HB = F8.2,12X,4HC = F8.2) IF(A) 10, 7, 10 7 RLIN = -C/B WRITE OUTPUT TAPE 6, 55, RLIN 55 FORMAT(7H LINEAR,25X,4HX = F10.3) GO TO 21 10 D = B**2 - 4.*A*C IF(D) 12, 17, 17 12 COMPR = -B/(2.*A) COMP1 = SQRTF(-D)/(2.*A) COMP2= -COMP1 WRITE OUTPUT TAPE 6, 56, COMPR, COMP1, COMPR, COMP2 56 FORMAT(8H COMPLEX,21X,7HR(X1)= F10.3,11X,7HI(X1)= F10.3,/1H ,28X, 17HR(X2)= F10.3,11X,7HI(X2)= F10.3) 16 GO TO 21 17 REAL1 = (-B + SQRTF(D))/(2.*A) REAL2 = (-B - SQRTF(D))/(2.*A) 20 WRITE OUTPUT TAPE 6, 57, REAL1, REAL2 57 FORMAT(6H REAL 25X,5HX1 = F10.3,13X,5HX2 = F10.3) 21 CONTINUE WRITE OUTPUT TAPE 6, 58, ANAME 58 FORMAT(8H0END OF A6) GO TO 1 END"
    }
}