{
    "id": "dbpedia_4768_3",
    "rank": 33,
    "data": {
        "url": "https://www.britannica.com/technology/computer/IBM-develops-FORTRAN",
        "read_more_link": "",
        "language": "en",
        "title": "Computer - Programming, FORTRAN, IBM",
        "top_image": "https://cdn.britannica.com/77/170477-050-1C747EE3/Laptop-computer.jpg",
        "meta_img": "https://cdn.britannica.com/77/170477-050-1C747EE3/Laptop-computer.jpg",
        "images": [
            "https://cdn.britannica.com/mendel/eb-logo/MendelNewThistleLogo.png",
            "https://cdn.britannica.com/mendel/eb-logo/MendelNewThistleLogo.png",
            "https://cdn.britannica.com/77/170477-004-B774BDDF/Laptop-computer.jpg",
            "https://cdn.britannica.com/61/74061-004-9EAD20C7/computer-peripherals-images-laser-printer-inkjet-layout.jpg",
            "https://cdn.britannica.com/67/74067-004-02138267/Gordon-E-Moore-law-number-transistors-computer.jpg",
            "https://cdn.britannica.com/63/74063-004-1E01870E/hard-drive.jpg",
            "https://cdn.britannica.com/42/20542-004-771D1C10/laser-DVD-player-CD-focus-point-storage.jpg",
            "https://cdn.britannica.com/64/74064-004-1192BCB2/mouse-personal-computer.jpg",
            "https://cdn.britannica.com/65/74065-004-5A9ED975/computer-laser-printer.jpg",
            "https://cdn.britannica.com/66/74066-004-DDBF4DD5/colour-Inkjet-printer-Colour-inkjet-printers-amounts.jpg",
            "https://cdn.britannica.com/82/179682-138-95AEFEA2/quantum-computers.jpg?w=400&h=225&c=crop",
            "https://cdn.britannica.com/37/24337-004-B57997F0/area-networks-bus-Ethernet-token-IBM-office.jpg",
            "https://cdn.britannica.com/mendel-resources/3-124/images/shared/default3.png?v=3.124.12",
            "https://cdn.britannica.com/63/166063-131-0E023062/computer-chip-processing-unit-history-society-science.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/93/149293-131-2CD523EA/Technician-computer-system-console-UNIVAC-Corona-Annex-June-1-1981.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/93/149293-131-2CD523EA/Technician-computer-system-console-UNIVAC-Corona-Annex-June-1-1981.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/88/129488-131-09AB5E83/Internet-blue-screen-blog-society-history-media-2009.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/09/198609-131-0FECF4D1/insides-desktop-computer.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/30/199930-131-B3D1D347/computer.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/88/129488-131-09AB5E83/Internet-blue-screen-blog-society-history-media-2009.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/70/62770-131-C97CD1F7/Black-widow-spider.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/51/190751-131-B431C216/soccer-ball-goal.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/70/191970-131-A85628DA/Color-wheel-light-color-spectrum.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/73/124073-131-EA3EACC6/Tug-of-war-US-Naval-Academy-Maryland-Annapolis-2005.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/24/129624-131-37C4C022/flags-soccer-balls-Futbol-football-arts-blog-2009.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/36/162636-131-E4AA93A0/Colosseum-Rome-Italy.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/41/166941-131-E27FD3A6/Yingxiu-school-China-Sichuan-earthquake-May-2008.jpg?w=200&h=200&c=crop",
            "https://cdn.britannica.com/94/186694-138-E7FAC9E8/Elliott-803-United-Kingdom.jpg?w=800&h=450&c=crop",
            "https://cdn.britannica.com/95/186695-138-46018768/ICL-2966-circuit-technology-United-Kingdom.jpg?w=800&h=450&c=crop"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "computer",
            "encyclopedia",
            "encyclopeadia",
            "britannica",
            "article"
        ],
        "tags": null,
        "authors": [
            "William Morton Pottenger",
            "David Hemmendinger"
        ],
        "publish_date": "2001-05-11T00:00:00+00:00",
        "summary": "",
        "meta_description": "Computer - Programming, FORTRAN, IBM: In the early 1950s John Backus convinced his managers at IBM to let him put together a team to design a language and write a compiler for it. He had a machine in mind: the IBM 704, which had built-in floating-point math operations. That the 704 used floating-point representation made it especially useful for scientific work, and Backus believed that a scientifically oriented programming language would make the machine even more attractive. Still, he understood the resistance to anything that slowed a machine down, and he set out to produce a language and a compiler that would produce code that",
        "meta_lang": "en",
        "meta_favicon": "/favicon.png",
        "meta_site_name": "Encyclopedia Britannica",
        "canonical_link": "https://www.britannica.com/technology/computer/IBM-develops-FORTRAN",
        "text": "In the early 1950s John Backus convinced his managers at IBM to let him put together a team to design a language and write a compiler for it. He had a machine in mind: the IBM 704, which had built-in floating-point math operations. That the 704 used floating-point representation made it especially useful for scientific work, and Backus believed that a scientifically oriented programming language would make the machine even more attractive. Still, he understood the resistance to anything that slowed a machine down, and he set out to produce a language and a compiler that would produce code that ran virtually as fast as hand-coded machine language—and at the same time made the program-writing process a lot easier.\n\nBy 1954 Backus and a team of programmers had designed the language, which they called FORTRAN (Formula Translation). Programs written in FORTRAN looked a lot more like mathematics than machine instructions:\n\nDO 10 J = 1,11\n\nI = 11 − J\n\nY = F(A(I + 1))\n\nIF (400 − Y) 4,8,8\n\n4 PRINT 5,1\n\n5 FORMAT (I10, 10H TOO LARGE)\n\nThe compiler was written, and the language was released with a professional-looking typeset manual (a first for programming languages) in 1957.\n\nFORTRAN took another step toward making programming more accessible, allowing comments in the programs. The ability to insert annotations, marked to be ignored by the translator program but readable by a human, meant that a well-annotated program could be read in a certain sense by people with no programming knowledge at all. For the first time a nonprogrammer could get an idea what a program did—or at least what it was intended to do—by reading (part of) the code. It was an obvious but powerful step in opening up computers to a wider audience.\n\nFORTRAN has continued to evolve, and it retains a large user base in academia and among scientists.\n\nCOBOL\n\nAbout the time that Backus and his team invented FORTRAN, Hopper’s group at UNIVAC released Math-matic, a FORTRAN-like language for UNIVAC computers. It was slower than FORTRAN and not particularly successful. Another language developed at Hopper’s laboratory at the same time had more influence. Flow-matic used a more English-like syntax and vocabulary:\n\n1 COMPARE PART-NUMBER (A) TO PART-NUMBER (B);\n\nIF GREATER GO TO OPERATION 13;\n\nIF EQUAL GO TO OPERATION 4;\n\nOTHERWISE GO TO OPERATION 2.\n\nFlow-matic led to the development by Hopper’s group of COBOL (Common Business-Oriented Language) in 1959. COBOL was explicitly a business programming language with a very verbose English-like style. It became central to the wide acceptance of computers by business after 1959.\n\nALGOL\n\nAlthough both FORTRAN and COBOL were universal languages (meaning that they could, in principle, be used to solve any problem that a computer could unravel), FORTRAN was better suited for mathematicians and engineers, whereas COBOL was explicitly a business programming language.\n\nDuring the late 1950s a multitude of programming languages appeared. This proliferation of incompatible specialized languages spurred an interest in the United States and Europe to create a single “second-generation” language. A transatlantic committee soon formed to determine specifications for ALGOL (Algorithmic Language), as the new language would be called. Backus, on the American side, and Heinz Rutishauser, on the European side, were among the most influential committee members.\n\nAlthough ALGOL introduced some important language ideas, it was not a commercial success. Customers preferred a known specialized language, such as FORTRAN or COBOL, to an unknown general-programming language. Only Pascal, a scientific programming-language offshoot of ALGOL, survives.\n\nControl programs\n\nIn order to make the early computers truly useful and efficient, two major innovations in software were needed. One was high-level programming languages (as described in the preceding section, FORTRAN, COBOL, and ALGOL). The other was control. Today the systemwide control functions of a computer are generally subsumed under the term operating system, or OS. An OS handles the behind-the-scenes activities of a computer, such as orchestrating the transitions from one program to another and managing access to disk storage and peripheral devices.\n\nThe need for some kind of supervisor program was quickly recognized, but the design requirements for such a program were daunting. The supervisor program would have to run in parallel with an application program somehow, monitor its actions in some way, and seize control when necessary. Moreover, the essential—and difficult—feature of even a rudimentary supervisor program was the interrupt facility. It had to be able to stop a running program when necessary but save the state of the program and all registers so that after the interruption was over the program could be restarted from where it left off.\n\nThe first computer with such a true interrupt system was the UNIVAC 1103A, which had a single interrupt triggered by one fixed condition. In 1959 the Lincoln Labs TX2 generalized the interrupt capability, making it possible to set various interrupt conditions under software control. However, it would be one company, IBM, that would create, and dominate, a market for business computers. IBM established its primacy primarily through one invention: the IBM 360 operating system.\n\nThe IBM 360\n\nIBM had been selling business machines since early in the century and had built Howard Aiken’s computer to his architectural specifications. But the company had been slow to implement the stored-program digital computer architecture of the early 1950s. It did develop the IBM 650, a (like UNIVAC) decimal implementation of the IAS plan—and the first computer to sell more than 1,000 units.\n\nThe invention of the transistor in 1947 led IBM to reengineer its early machines from electromechanical or vacuum tube to transistor technology in the late 1950s (although the UNIVAC Model 80, delivered in 1958, was the first transistor computer). These transistorized machines are commonly referred to as second-generation computers.\n\nTwo IBM inventions, the magnetic disk and the high-speed chain printer, led to an expansion of the market and to the unprecedented sale of 12,000 computers of one model: the IBM 1401. The chain printer required a lot of magnetic core memory, and IBM engineers packaged the printer support, core memory, and disk support into the 1401, one of the first computers to use this solid-state technology.\n\nIBM had several lines of computers developed by independent groups of engineers within the company: a scientific-technical line, a commercial data-processing line, an accounting line, a decimal machine line, and a line of supercomputers. Each line had a distinct hardware-dependent operating system, and each required separate development and maintenance of its associated application software. In the early 1960s IBM began designing a machine that would take the best of all these disparate lines, add some new technology and new ideas, and replace all the company’s computers with one single line, the 360. At an estimated development cost of $5 billion, IBM literally bet the company’s future on this new, untested architecture.\n\nThe 360 was in fact an architecture, not a single machine. Designers G.M. Amdahl, F.P. Brooks, and G.A. Blaauw explicitly separated the 360 architecture from its implementation details. The 360 architecture was intended to span a wide range of machine implementations and multiple generations of machines. The first 360 models were hybrid transistor–integrated circuit machines. Integrated circuit computers are commonly referred to as third-generation computers.\n\nKey to the architecture was the operating system. OS/360 ran on all machines built to the 360 architecture—initially six machines spanning a wide range of performance characteristics and later many more machines. It had a shielded supervisory system (unlike the 1401, which could be interfered with by application programs), and it reserved certain operations as privileged in that they could be performed only by the supervisor program.\n\nThe first IBM 360 computers were delivered in 1965. The 360 architecture represented a continental divide in the relative importance of hardware and software. After the 360, computers were defined by their operating systems.\n\nThe market, on the other hand, was defined by IBM. In the late 1950s and into the 1960s, it was common to refer to the computer industry as “IBM and the Seven Dwarfs,” a reference to the relatively diminutive market share of its nearest rivals—Sperry Rand (UNIVAC), Control Data Corporation (CDC), Honeywell, Burroughs, General Electric (GE), RCA, and National Cash Register Co. During this time IBM had some 60–70 percent of all computer sales. The 360 did nothing to lessen the giant’s dominance. When the market did open up somewhat, it was not due to the efforts of, nor was it in favor of, the dwarfs. Yet, while “IBM and the Seven Dwarfs” (soon reduced to “IBM and the BUNCH of Five,” BUNCH being an acronym for Burroughs, UNIVAC, NCR, CDC, and Honeywell) continued to build Big Iron, a fundamental change was taking place in how computers were accessed."
    }
}