{
    "id": "dbpedia_4768_1",
    "rank": 49,
    "data": {
        "url": "https://ethw.org/John_Backus",
        "read_more_link": "",
        "language": "en",
        "title": "John Backus",
        "top_image": "https://ethw.org/w/logo.png",
        "meta_img": "https://ethw.org/w/logo.png",
        "images": [
            "https://ethw.org/w/logo.png",
            "https://ethw.org/w/images/5/57/Backus.jpg",
            "https://ethw.org/w/resources/assets/poweredby_mediawiki_88x31.png"
        ],
        "movies": [
            "https://www.youtube.com/embed/WKUAir2dOEY"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "ETHW"
        ],
        "publish_date": "2017-04-12T13:51:05+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "ETHW",
        "canonical_link": "https://ethw.org/John_Backus",
        "text": "Biography\n\nJohn Warner Backus was an American computer scientist. He led the team that invented the first widely used high-level programming language (FORTRAN) and was the inventor of the Backus-Naur form (BNF), the almost universally used notation to define formal language syntax. He also did research in function-level programming and helped to popularize it.\n\nThe IEEE awarded Backus the W.W. McDowell Award in 1967 for the development of FORTRAN. He received the National Medal of Science in 1975, and the 1977 ACM Turing Award “for profound, influential, and lasting contributions to the design of practical high-level programming systems, notably through his work on FORTRAN, and for seminal publication of formal procedures for the specification of programming languages.\n\nBackus was born in Philadelphia, Pennsylvania, but grew up in Wilmington, Delaware. He studied at the The Hill School in Pottstown, Pennsylvania, and was apparently not a diligent student. After entering the University of Virginia to study chemistry, he quit and was drafted into the U.S. Army. He began medical training and, during an internship at a hospital, he was diagnosed with a brain tumor, which was successfully removed; a plate was installed in his head, and he dropped out of medical training after nine months and a subsequent operation to replace the plate with one of his own design.\n\nAfter moving to New York City he initially took training as a radio technician and discovered an interest in mathematics — it would prove to be his calling. He graduated from Columbia University with a Master's degree in 1949, and joined IBM in 1950. During his first three years, he worked on the Selective Sequence Electronic Calculator (SSEC); his first major project was to write a program to calculate positions of the Moon. In 1953, John Backus also developed the language Speedcoding, the first higher-order language created for an IBM computer.\n\nThe difficulties of programming were acute, and in 1954 Backus assembled a team to define and develop Fortran for the IBM 704 computer. Though debatably not the first high-level programming language, it was the first to achieve wide use.\n\nJohn Backus made another, critical contribution to early computer science: During the latter part of the 1950s Backus served on the international committees which developed ALGOL 58 and the very influential ALGOL 60, which quickly became the de facto worldwide standard for publishing algorithms. Backus developed the Backus-Naur Form (BNF), in the UNESCO report on ALGOL 58. This was a formal notation with which one could describe any context-free programming language and was important in the development of compilers. This contribution helped Backus win the Turing Award.\n\nHe later worked on a “function-level” programming language known as FP which was described in his Turing Award lecture “Can Programming be Liberated from the von Neumann Style?” Sometimes viewed as Backus’s apology for creating FORTRAN, this paper did less to garner interest in the FP language than to spark research into functional programming in general. An FP interpreter was distributed with the 4.2BSD Unix operating system. FP was strongly inspired by Kenneth E. Iverson’s APL, even using a non-standard character set. Backus spent the latter part of his career developing FL (from “Function Level”), a successor to FP. FL was an internal IBM research project, and development of the language essentially stopped when the project was finished (only a few papers documenting it remain), but many of the language’s innovative, arguably important ideas have now been implemented in Iverson’s J programming language.\n\nBackus was named an IBM Fellow in 1963, and was awarded a honoris causa from the University Henri Poincaré in Nancy (France) in 1989 and a Draper Prize in 1993. He retired in 1991 and died at his home in Ashland, Oregon on March 17, 2007."
    }
}