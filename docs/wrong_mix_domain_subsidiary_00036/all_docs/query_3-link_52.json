{
    "id": "wrong_mix_domain_subsidiary_00036_3",
    "rank": 52,
    "data": {
        "url": "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-215a",
        "read_more_link": "",
        "language": "en",
        "title": "2022 Top Routinely Exploited Vulnerabilities",
        "top_image": "https://www.cisa.gov/profiles/cisad8_gov/themes/custom/gesso/favicon.png",
        "meta_img": "https://www.cisa.gov/profiles/cisad8_gov/themes/custom/gesso/favicon.png",
        "images": [
            "https://www.cisa.gov/profiles/cisad8_gov/themes/custom/gesso/dist/images/us_flag_small.png",
            "https://www.cisa.gov/profiles/cisad8_gov/themes/custom/gesso/dist/images/icon-dot-gov.svg",
            "https://www.cisa.gov/profiles/cisad8_gov/themes/custom/gesso/dist/images/icon-https.svg",
            "https://www.cisa.gov/sites/default/files/images/SVG/header_logo_tagline_update.svg",
            "https://www.cisa.gov/sites/default/files/images/SVG/mobile_logo_wordmark.svg",
            "https://www.cisa.gov/sites/default/files/images/SVG/header_tagline_mobile_update.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-08-03T12:00:00+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/profiles/cisad8_gov/themes/custom/gesso/favicon.png",
        "meta_site_name": "Cybersecurity and Infrastructure Security Agency CISA",
        "canonical_link": "https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-215a",
        "text": "SUMMARY\n\nThe following cybersecurity agencies coauthored this joint Cybersecurity Advisory (CSA):\n\nUnited States: The Cybersecurity and Infrastructure Security Agency (CISA), National Security Agency (NSA), and Federal Bureau of Investigation (FBI)\n\nAustralia: Australian Signals Directorate’s Australian Cyber Security Centre (ACSC)\n\nCanada: Canadian Centre for Cyber Security (CCCS)\n\nNew Zealand: New Zealand National Cyber Security Centre (NCSC-NZ) and Computer Emergency Response Team New Zealand (CERT NZ)\n\nUnited Kingdom: National Cyber Security Centre (NCSC-UK)\n\nThis advisory provides details on the Common Vulnerabilities and Exposures (CVEs) routinely and frequently exploited by malicious cyber actors in 2022 and the associated Common Weakness Enumeration(s) (CWE). In 2022, malicious cyber actors exploited older software vulnerabilities more frequently than recently disclosed vulnerabilities and targeted unpatched, internet-facing systems.\n\nThe authoring agencies strongly encourage vendors, designers, developers, and end-user organizations to implement the recommendations found within the Mitigations section of this advisory—including the following—to reduce the risk of compromise by malicious cyber actors.\n\nVendors, designers, and developers: Implement secure-by-design and -default principles and tactics to reduce the prevalence of vulnerabilities in your software.\n\nFollow the Secure Software Development Framework (SSDF), also known as SP 800-218, and implement secure design practices into each stage of the software development life cycle (SDLC). As part of this, establish a coordinated vulnerability disclosure program that includes processes to determine root causes of discovered vulnerabilities.\n\nPrioritize secure-by-default configurations, such as eliminating default passwords, or requiring addition configuration changes to enhance product security.\n\nEnsure that published CVEs include the proper CWE field identifying the root cause of the vulnerability.\n\nEnd-user organizations:\n\nApply timely patches to systems. Note: First check for signs of compromise if CVEs identified in this CSA have not been patched.\n\nImplement a centralized patch management system.\n\nUse security tools, such as endpoint detection and response (EDR), web application firewalls, and network protocol analyzers.\n\nAsk your software providers to discuss their secure by design program and to provide links to information about how they are working to remove classes of vulnerabilities and to set secure default settings.\n\nDownload the PDF version of this report:\n\nTECHNICAL DETAILS\n\nKey Findings\n\nIn 2022, malicious cyber actors exploited older software vulnerabilities more frequently than recently disclosed vulnerabilities and targeted unpatched, internet-facing systems. Proof of concept (PoC) code was publicly available for many of the software vulnerabilities or vulnerability chains, likely facilitating exploitation by a broader range of malicious cyber actors.\n\nMalicious cyber actors generally have the most success exploiting known vulnerabilities within the first two years of public disclosure—the value of such vulnerabilities gradually decreases as software is patched or upgraded. Timely patching reduces the effectiveness of known, exploitable vulnerabilities, possibly decreasing the pace of malicious cyber actor operations and forcing pursuit of more costly and time-consuming methods (such as developing zero-day exploits or conducting software supply chain operations).\n\nMalicious cyber actors likely prioritize developing exploits for severe and globally prevalent CVEs. While sophisticated actors also develop tools to exploit other vulnerabilities, developing exploits for critical, wide-spread, and publicly known vulnerabilities gives actors low-cost, high-impact tools they can use for several years. Additionally, cyber actors likely give higher priority to vulnerabilities that are more prevalent in their specific targets’ networks. Multiple CVE or CVE chains require the actor to send a malicious web request to the vulnerable device, which often includes unique signatures that can be detected through deep packet inspection.\n\nTop Routinely Exploited Vulnerabilities\n\nTable 1 shows the top 12 vulnerabilities the co-authors observed malicious cyber actors routinely exploiting in 2022:\n\nCVE-2018-13379. This vulnerability, affecting Fortinet SSL VPNs, was also routinely exploited in 2020 and 2021. The continued exploitation indicates that many organizations failed to patch software in a timely manner and remain vulnerable to malicious cyber actors.\n\nCVE-2021-34473, CVE-2021-31207, CVE-2021-34523. These vulnerabilities, known as ProxyShell, affect Microsoft Exchange email servers. In combination, successful exploitation enables a remote actor to execute arbitrary code. These vulnerabilities reside within the Microsoft Client Access Service (CAS), which typically runs on port 443 in Microsoft Internet Information Services (IIS) (e.g., Microsoft’s web server). CAS is commonly exposed to the internet to enable users to access their email via mobile devices and web browsers.\n\nCVE-2021-40539. This vulnerability enables unauthenticated remote code execution (RCE) in Zoho ManageEngine ADSelfService Plus and was linked to the usage of an outdated third-party dependency. Initial exploitation of this vulnerability began in late 2021 and continued throughout 2022.\n\nCVE-2021-26084. This vulnerability, affecting Atlassian Confluence Server and Data Center (a web-based collaboration tool used by governments and private companies) could enable an unauthenticated cyber actor to execute arbitrary code on vulnerable systems. This vulnerability quickly became one of the most routinely exploited vulnerabilities after a PoC was released within a week of its disclosure. Attempted mass exploitation of this vulnerability was observed in September 2021.\n\nCVE-2021- 44228. This vulnerability, known as Log4Shell, affects Apache’s Log4j library, an open-source logging framework incorporated into thousands of products worldwide. An actor can exploit this vulnerability by submitting a specially crafted request to a vulnerable system, causing the execution of arbitrary code. The request allows a cyber actor to take full control of a system. The actor can then steal information, launch ransomware, or conduct other malicious activity.[1] Malicious cyber actors began exploiting the vulnerability after it was publicly disclosed in December 2021, and continued to show high interest in CVE-2021- 44228 through the first half of 2022.\n\nCVE-2022-22954, CVE-2022-22960. These vulnerabilities allow RCE, privilege escalation, and authentication bypass in VMware Workspace ONE Access, Identity Manager, and other VMware products. A malicious cyber actor with network access could trigger a server-side template injection that may result in remote code execution. Exploitation of CVE-2022-22954 and CVE-2022-22960 began in early 2022 and attempts continued throughout the remainder of the year.\n\nCVE-2022-1388. This vulnerability allows unauthenticated malicious cyber actors to bypass iControl REST authentication on F5 BIG-IP application delivery and security software.\n\nCVE-2022-30190. This vulnerability impacts the Microsoft Support Diagnostic Tool (MSDT) in Windows. A remote, unauthenticated cyber actor could exploit this vulnerability to take control of an affected system.\n\nCVE-2022-26134. This critical RCE vulnerability affects Atlassian Confluence and Data Center. The vulnerability, which was likely initially exploited as a zero-day before public disclosure in June 2022, is related to an older Confluence vulnerability (CVE-2021-26084), which cyber actors also exploited in 2022.\n\nTable 1: Top 12 Routinely Exploited Vulnerabilities in 2022 CVE Vendor Product Type CWE CVE-2018-13379 Fortinet FortiOS and FortiProxy SSL VPN credential exposure CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n\nCVE-2021-34473\n\n(Proxy Shell)\n\nMicrosoft Exchange Server RCE CWE-918 Server-Side Request Forgery (SSRF)\n\nCVE-2021-31207\n\n(Proxy Shell)\n\nMicrosoft Exchange Server Security Feature Bypass CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n\nCVE-2021-34523\n\n(Proxy Shell)\n\nMicrosoft Exchange Server Elevation of Privilege CWE-287 Improper Authentication CVE-2021-40539 Zoho ManageEngine ADSelfService Plus\n\nRCE/\n\nAuthentication Bypass\n\nCWE-287 Improper Authentication CVE-2021-26084 Atlassian Confluence Server and Data Center Arbitrary code execution CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n\nCVE-2021- 44228\n\n(Log4Shell)\n\nApache Log4j2 RCE\n\nCWE-917 Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')\n\nCWE-20 Improper Input Validation\n\nCWE-400 Uncontrolled Resource Consumption\n\nCWE-502 Deserialization of Untrusted Data\n\nCVE-2022-22954 VMware Workspace ONE Access and Identity Manager RCE CWE-94 Improper Control of Generation of Code ('Code Injection') CVE-2022-22960 VMware Workspace ONE Access, Identity Manager, and vRealize Automation Improper Privilege Management CWE-269 Improper Privilege Management CVE-2022-1388 F5 Networks BIG-IP Missing Authentication Vulnerability CWE-306 Missing Authentication for Critical Function CVE-2022-30190 Microsoft Multiple Products RCE None Listed CVE-2022-26134 Atlassian Confluence Server and Data Center RCE CWE-74 Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')\n\nAdditional Routinely Exploited Vulnerabilities\n\nIn addition to the 12 vulnerabilities listed in Table 1, the authoring agencies identified vulnerabilities—listed in Table 2—that were also routinely exploited by malicious cyber actors in 2022.\n\nTable 2: Additional Routinely Exploited Vulnerabilities in 2022 CVE Vendor Product Type CWE CVE-2017-0199 Microsoft Multiple Products Arbitrary Code Execution None Listed CVE-2017-11882 Microsoft Exchange Server Arbitrary Code Execution CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer CVE-2019-11510 Ivanti Pulse Secure Pulse Connect Secure Arbitrary File Reading CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') CVE-2019-0708 Microsoft Remote Desktop Services RCE CWE-416: Use After Free CVE-2019-19781 Citrix Application Delivery Controller and Gateway Arbitrary Code Execution CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') CVE-2020-5902 F5 Networks BIG-IP RCE CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') CVE-2020-1472 Microsoft Multiple Products Privilege Escalation CWE-330: Use of Insufficiently Random Values CVE-2020-14882 Oracle WebLogic Server RCE None Listed CVE-2020-14883 Oracle WebLogic Server RCE None Listed CVE-2021-20016 SonicWALL SSLVPN SMA100 SQL Injection CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\n\nCVE-2021-26855\n\n(ProxyLogon)\n\nMicrosoft Exchange Server RCE CWE-918: Server-Side Request Forgery (SSRF)\n\nCVE-2021-27065\n\n(ProxyLogon)\n\nMicrosoft Exchange Server RCE CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\n\nCVE-2021-26858\n\n(ProxyLogon)\n\nMicrosoft Exchange Server RCE None Listed\n\nCVE-2021-26857\n\n(ProxyLogon)\n\nMicrosoft Exchange Server RCE CWE-502: Deserialization of Untrusted Data CVE-2021-20021 SonicWALL Email Security Privilege Escalation Exploit Chain CWE-269: Improper Privilege Management CVE-2021-40438 Apache HTTP Server Server-Side Request Forgery CWE-918: Server-Side Request Forgery (SSRF) CVE-2021-41773 Apache HTTP Server Server Path Traversal CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') CVE-2021-42013 Apache HTTP Server Server Path Traversal CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') CVE-2021-20038 SonicWall SMA 100 Series Appliances Stack-based Buffer Overflow\n\nCWE-787: Out-of-bounds Write\n\nCWE-121: Stack-based Buffer Overflow\n\nCVE-2021-45046 Apache Log4j RCE CWE-917: Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection') CVE-2022-42475 Fortinet FortiOS Heap-based Buffer Overflow CWE-787: Out-of-bounds Write CVE-2022-24682 Zimbra Collaboration Suite ‘Cross-site Scripting’ CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') CVE-2022-22536 SAP Internet Communication Manager (ICM) HTTP Request Smuggling CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') CVE-2022-22963 VMware Tanzu Spring Cloud RCE\n\nCWE-94: Improper Control of Generation of Code ('Code Injection')\n\nCWE-917: Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')\n\nCVE-2022-29464 WSO2 Multiple Products RCE CWE-434: Unrestricted Upload of File with Dangerous Type CVE-2022-27924 Zimbra Zimbra Collaboration Suite Command Injection CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') CVE-2022-22047 Microsoft Windows CSRSS Elevation of Privilege CWE-269: Improper Privilege Management CVE-2022-27593 QNAP QNAP NAS Externally Controlled Reference CWE-610: Externally Controlled Reference to a Resource in Another Sphere CVE-2022-41082 Microsoft Exchange Server Privilege Escalation None Listed CVE-2022-40684 Fortinet FortiOS, FortiProxy, FortiSwitchManager Authentication Bypass CWE-306: Missing Authentication for Critical Function\n\nMITIGATIONS\n\nVendors and Developers\n\nThe authoring agencies recommend vendors and developers take the following steps to ensure their products are secure by design and default:\n\nIdentify repeatedly exploited classes of vulnerability. Perform an analysis of both CVEs and known exploited vulnerabilities to understand which classes of vulnerability are identified more than others. Implement appropriate mitigations to eliminate those classes of vulnerability. For example, if a product has several instances of SQL injection vulnerabilities, ensure all database queries in the product use parameterized queries, and prohibit other forms of queries.\n\nEnsure business leaders are responsible for security. Business leaders should ensure that proactive steps to eliminate entire classes of security vulnerabilities, rather than only making one-off patches when new vulnerabilities are discovered.\n\nFollow the SSDF (SP 800-218) and implement secure design practices into each stage of the SDLC. Pay attention to:\n\nPrioritizing the use of memory safe languages wherever possible [SSDF PW 6.1].\n\nExercising due diligence when selecting software components (e.g., software libraries, modules, middleware, frameworks) to ensure robust security in consumer software products [SSDF PW 4.1].\n\nSetting up secure development team practices; this includes conducting peer code reviews, working to a common organization secure coding standard, and maintaining awareness of language specific security concerns [SSDF PW.5.1, PW.7.1, PW.7.2].\n\nEstablishing a vulnerability disclosure program to verify and resolve security vulnerabilities disclosed by people who may be internal or external to the organization [SSDF RV.1.3]. As part of this, establish processes to determine root causes of discovered vulnerabilities.\n\nUsing static and dynamic application security testing (SAST/DAST) tools to analyze product source code and application behavior to detect error-prone practices [SSDF PW.7.2, PW.8.2].\n\nConfiguring production-ready products to have to most secure settings as default and providing guidance on the risks of changing each setting [SSDF PW.9.1, PW9.2]\n\nPrioritize secure-by-default configurations such as eliminating default passwords, implementing single sign on (SSO) technology via modern open standards, and providing high-quality audit logs to customers with no additional configuration and at no extra charge.\n\nEnsure published CVEs include the proper CWE field identifying the root cause of the vulnerability to enable industry-wide analysis of software security and design flaws.\n\nFor more information on designing secure-by-design and -default products, including additional recommended secure-by-default configurations, see joint guide Shifting the Balance of Cybersecurity Risk: Principles and Approaches for Security-by-Design and -Default.\n\nEnd-User Organizations\n\nThe authoring agencies recommend end-user organizations implement the mitigations below to improve cybersecurity posture on the basis of the threat actors’ activity. These mitigations align with the cross-sector Cybersecurity Performance Goals (CPGs) developed by CISA and the National Institute of Standards and Technology (NIST). The CPGs provide a minimum set of practices and protections that CISA and NIST recommend all organizations implement. CISA and NIST based the CPGs on existing cybersecurity frameworks and guidance to protect against the most common and impactful threats, tactics, techniques, and procedures. Visit CISA’s Cross-Sector Cybersecurity Performance Goals for more information on CPGs, including additional recommended baseline protections.\n\nVulnerability and Configuration Management\n\nUpdate software, operating systems, applications, and firmware on IT network assets in a timely manner [CPG 1.E]. Prioritize patching known exploited vulnerabilities, especially those CVEs identified in this CSA, then critical and high vulnerabilities that allow for remote code execution or denial-of-service on internet-facing equipment. For patch information on CVEs identified in this CSA, refer to the appendix.\n\nIf a patch for a known exploited or critical vulnerability cannot be quickly applied, implement vendor-approved workarounds.\n\nReplace end-of-life software (i.e., software no longer supported by the vendor).\n\nRoutinely perform automated asset discovery across the entire estate to identify and catalogue all the systems, services, hardware and software.\n\nImplement a robust patch management process and centralized patch management system that establishes prioritization of patch applications [CPG 1.A].\n\nOrganizations that are unable to perform rapid scanning and patching of internet-facing systems should consider moving these services to mature, reputable cloud service providers (CSPs) or other managed service providers (MSPs). Reputable MSPs can patch applications—such as webmail, file storage, file sharing, and chat and other employee collaboration tools—for their customers. However, MSPs and CSPs can expand their customer’s attack surface and may introduce unanticipated risks, so organizations should proactively collaborate with their MSPs and CSPs to jointly reduce risk [CPG 1.F]. For more information and guidance, see the following resources.\n\nCISA Insights Risk Considerations for Managed Service Provider Customers\n\nCISA Insights Mitigations and Hardening Guidance for MSPs and Small- and Mid-sized Businesses\n\nACSC advice on How to Manage Your Security When Engaging a Managed Service Provider\n\nDocument secure baseline configurations for all IT/OT components, including cloud infrastructure. Monitor, examine, and document any deviations from the initial secure baseline [CPG 2.O].\n\nPerform regular secure system backups and create known good copies of all device configurations for repairs and/or restoration. Store copies off-network in physically secure locations and test regularly [CPG 2.R].\n\nMaintain an updated cybersecurity incident response plan that is tested at least annually and updated within a risk informed time frame to ensure its effectiveness [CPG 2.S].\n\nIdentity and Access Management\n\nEnforce phishing-resistant multifactor authentication (MFA) for all users, without exception. [CPG 2.H].\n\nEnforce MFA on all VPN connections. If MFA is unavailable, require employees engaging in remote work to use strong passwords [CPG 2.A, 2.B, 2.C, 2.D, 2.G].\n\nRegularly review, validate, or remove privileged accounts (annually at a minimum) [CPG 2.D, 2.E].\n\nConfigure access control under the principle of least privilege [CPG 2.Q].\n\nEnsure software service accounts only provide necessary permissions (least privilege) to perform intended functions (using non-administrative privileges where feasible).\n\nNote: See CISA’s Capacity Enhancement Guide – Implementing Strong Authentication and ACSC’s guidance on Implementing Multi-Factor Authentication for more information on authentication system hardening.\n\nProtective Controls and Architecture\n\nProperly configure and secure internet-facing network devices, disable unused or unnecessary network ports and protocols, encrypt network traffic, and disable unused network services and devices [CPG 2.V, 2.W, 2X].\n\nHarden commonly exploited enterprise network services, including Link-Local Multicast Name Resolution (LLMNR) protocol, Remote Desktop Protocol (RDP), Common Internet File System (CIFS), Active Directory, and OpenLDAP.\n\nManage Windows Key Distribution Center (KDC) accounts (e.g., KRBTGT) to minimize Golden Ticket attacks and Kerberoasting.\n\nStrictly control the use of native scripting applications, such as command-line, PowerShell, WinRM, Windows Management Instrumentation (WMI), and Distributed Component Object Model (DCOM).\n\nImplement Zero Trust Network Architecture (ZTNA) to limit or block lateral movement by controlling access to applications, devices, and databases. Use private virtual local area networks [CPG 2.F, 2.X]. Note: See the Department of Defense’s Zero Trust Reference Architecture for additional information on Zero Trust.\n\nContinuously monitor the attack surface and investigate abnormal activity that may indicate cyber actor or malware lateral movement [CPG 2.T].\n\nUse security tools, such as endpoint detection and response (EDR) and security information and event management (SIEM) tools. Consider using an information technology asset management (ITAM) solution to ensure EDR, SIEM, vulnerability scanner, and other similar tools are reporting the same number of assets [CPG 2.T, 2.V].\n\nUse web application firewalls to monitor and filter web traffic. These tools are commercially available via hardware, software, and cloud-based solutions, and may detect and mitigate exploitation attempts where a cyber actor sends a malicious web request to an unpatched device [CPG 2.B, 2.F].\n\nImplement an administrative policy and/or automated process configured to monitor unwanted hardware, software, or programs against an allowlist with specified approved versions [CPG 2.Q].\n\nUse a network protocol analyzer to examine captured data, including packet-level data.\n\nSupply Chain Security\n\nReduce third-party applications and unique system/application builds—provide exceptions only if required to support business critical functions [CPG 2.Q].\n\nEnsure contracts require vendors and/or third-party service providers to:\n\nProvide notification of security incidents and vulnerabilities within a risk informed time frame [CPG 1.G, 1.H, 1.I].\n\nSupply a Software Bill of Materials (SBOM) with all products to enhance vulnerability monitoring and to help reduce time to respond to identified vulnerabilities [CPG 4.B].\n\nAsk your software providers to discuss their secure by design program and to provide links to information about how they are working to remove classes of vulnerabilities, and to set secure default settings.\n\nRESOURCES\n\nFor information on the top vulnerabilities routinely exploited in 2016 through 2019, 2020, and 2021, see:\n\nJoint CSA Top 10 Routinely Exploited Vulnerabilities\n\nJoint CSA Top Routinely Exploited Vulnerabilities\n\nJoint CSA 2021 Top Routinely Exploited Vulnerabilities\n\nSee the appendix for additional partner resources on the vulnerabilities mentioned in this CSA.\n\nSee ACSC’s Essential Eight mitigation strategies for additional mitigations.\n\nSee ACSC’s Cyber Supply Chain Risk Management for additional considerations and advice.\n\nDISCLAIMER\n\nThe information in this report is being provided “as is” for informational purposes only. CISA, FBI, NSA, ACSC, CCCS, NCSC-NZ, CERT NZ, and NCSC-UK do not endorse any commercial product or service, including any subjects of analysis. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply endorsement, recommendation, or favoring.\n\nPURPOSE\n\nThis document was developed by CISA, NSA, FBI, ACSC, CCCS, NCSC-NZ, CERT NZ, and NCSC-UK in furtherance of their respective cybersecurity missions, including their responsibilities to develop and issue cybersecurity specifications and mitigations.\n\nREFERENCES\n\n[1] Apache Log4j Vulnerability Guidance\n\nVERSION HISTORY\n\nAugust 3, 2023: Initial version.\n\nAPPENDIX: PATCH INFORMATION AND ADDITIONAL RESOURCES FOR TOP EXPLOITED VULNERABILITIES"
    }
}