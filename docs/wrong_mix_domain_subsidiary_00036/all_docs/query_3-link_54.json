{
    "id": "wrong_mix_domain_subsidiary_00036_3",
    "rank": 54,
    "data": {
        "url": "https://docs.gitlab.com/omnibus/settings/smtp.html",
        "read_more_link": "",
        "language": "en",
        "title": "SMTP settings",
        "top_image": "https://docs.gitlab.com/favicon.ico?v=2",
        "meta_img": "https://docs.gitlab.com/favicon.ico?v=2",
        "images": [
            "https://docs.gitlab.com/assets/images/gitlab-logo-header.svg",
            "https://docs.gitlab.com/assets/images/gitlab-logo.svg",
            "https://docs.gitlab.com/assets/images/by-sa.svg",
            "https://dc.ads.linkedin.com/collect/?pid=30694&fmt=gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "GitLab product documentation.",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico?v=2",
        "meta_site_name": "",
        "canonical_link": "https://docs.gitlab.com/omnibus/settings/smtp.html",
        "text": "SMTP connection pooling\n\nUsing encrypted credentials\n\nExample configurations\n\nSMTP on localhost\n\nSMTP without SSL\n\nGmail\n\nGoogle SMTP relay\n\nMailgun\n\nAmazon Simple Email Service (AWS SES)\n\nMandrill\n\nSMTP.com\n\nSparkPost\n\nGandi\n\nZoho Mail\n\nSiteAge, LLC Zimbra Mail\n\nOVH\n\nOutlook\n\nOffice365\n\nOffice365 relay\n\nOnline.net\n\nAmen.fr / Securemail.pro\n\n1&1\n\nyahoo\n\nQQ exmail\n\nNetEase Free Enterprise Email\n\nSendGrid with username/password authentication\n\nSendGrid with API Key authentication\n\nBrevo\n\nSMTP2GO\n\nYandex\n\nUD Media\n\nMicrosoft Exchange (no authentication)\n\nMicrosoft Exchange (with authentication)\n\nStrato.de\n\nRackspace\n\nDomainFactory (df.eu)\n\nInfomaniak (infomaniak.com)\n\nGoDaddy (TLS)\n\nGoDaddy (No TLS)\n\nOpenSRS (hostedemail.com)\n\nAruba (aruba.it)\n\nAlibaba Cloud Direct Mail (No TLS)\n\nAlibaba Cloud Direct Mail (TLS)\n\nAliyun Direct Mail\n\nAliyun Enterprise Mail with TLS\n\nFastMail\n\nDinahosting\n\nGMX Mail\n\nHetzner\n\nSnel.com\n\nJangoSMTP\n\nMailjet\n\nMailcow\n\nALL-INKL.COM\n\nwebgo.de\n\nmxhichina.com\n\nPostmark\n\neasyDNS (outbound mail)\n\nCampaign Monitor\n\nFreehostia\n\nMailbox.org\n\nMittwald CM Service (mittwald.de)\n\nUnitymedia (.de)\n\nunited-domains AG (united-domains.de)\n\nIONOS by 1&1 (ionos.de)\n\nAWS Workmail\n\nOpen Telekom Cloud\n\nUberspace 6\n\nTipimail\n\nNetcup\n\nMail-in-a-Box\n\nNIFCLOUD ESS\n\nSina mail\n\nFeishu mail\n\nHostpoint\n\nFastweb (fastweb.it)\n\nScaleway Transactional Email\n\nProton Mail\n\nMore examples are welcome\n\nTesting the SMTP configuration\n\nTroubleshooting\n\nOutgoing connections to port 25 is blocked on major cloud providers\n\nWrong version number when using SSL/TLS\n\nEmails not sending when using external Sidekiq\n\nEmails not sending when using Sidekiq routing rules\n\nEmail not sent\n\nEmail not sent when using STARTTLS and SMTP TLS\n\nDisable all outgoing email\n\nSMTP settings\n\nIf you would rather send application email via an SMTP server instead of via Sendmail or Postfix, add the following configuration information to /etc/gitlab/gitlab.rb and run gitlab-ctl reconfigure.\n\nThere are example configurations at the end of this page.\n\nSMTP connection pooling\n\nYou can enable SMTP connection pooling with the following setting:\n\nThis allows Sidekiq workers to reuse SMTP connections for multiple jobs. The maximum number of connections in the pool follows the maximum concurrency configuration for Sidekiq.\n\nUsing encrypted credentials\n\nInstead of storing the SMTP credentials in the configuration files as plain text, you can optionally use an encrypted file for the SMTP credentials. To use this feature, you first need to enable GitLab encrypted configuration.\n\nThe encrypted configuration for SMTP exists in an encrypted YAML file. By default the file will be created at /var/opt/gitlab/gitlab-rails/shared/encrypted_configuration/smtp.yaml.enc. This location is configurable in the GitLab configuration.\n\nThe unencrypted contents of the file should be a subset of the settings from your smtp_*' settings in the gitlab_rails configuration block.\n\nThe supported configuration items for the encrypted file are:\n\nuser_name\n\npassword\n\nThe encrypted contents can be configured with the SMTP secret edit Rake command.\n\nConfiguration\n\nIf initially your SMTP configuration looked like:\n\nIn /etc/gitlab/gitlab.rb:\n\nEdit the encrypted secret:\n\nsudo gitlab-rake gitlab:smtp:secret:edit EDITOR=vim\n\nThe unencrypted contents of the SMTP secret should be entered like:\n\nuser_name: 'smtpuser' password: 'smtppassword'\n\nEdit /etc/gitlab/gitlab.rb and remove the settings for smtp_user_name and smtp_password.\n\nReconfigure GitLab:\n\nsudo gitlab-ctl reconfigure\n\nExample configurations\n\nSMTP on localhost\n\nThis configuration, which simply enables SMTP and otherwise uses the default settings, can be used for an MTA running on localhost that does not provide a sendmail interface or that provides a sendmail interface that is incompatible with GitLab, such as Exim.\n\nSMTP without SSL\n\nBy default SSL is enabled for SMTP. If your SMTP server does not support communication over SSL use following settings:\n\nGmail\n\nDon’t forget to change my.email@gmail.com to your email address and my-gmail-password to your own password.\n\nIf you encounter authentication errors, ensure you have allowed less secure apps to access the account or try turning on 2-step validation and using an application password.\n\nGoogle SMTP relay\n\nYou can route outgoing non-Gmail messages through Google using Google’s SMTP relay service.\n\nMailgun\n\nAmazon Simple Email Service (AWS SES)\n\nUsing STARTTLS\n\nMake sure to permit egress through port 587 in your ACL and security group.\n\nUsing TLS Wrapper\n\nMake sure to permit egress through port 465 in your ACL and security group.\n\nMandrill\n\nSMTP.com\n\nYou can use the SMTP.com email service. Retrieve your sender login and password from your account.\n\nTo improve delivery by authorizing SMTP.com to send emails on behalf of your domain, you should:\n\nSpecify from and reply_to addresses using your GitLab domain name.\n\nSet up SPF and DKIM for the domain.\n\nCheck the SMTP.com Knowledge Base for further assistance.\n\nSparkPost\n\nGandi\n\nZoho Mail\n\nThis configuration was tested on Zoho Mail with a custom domain.\n\nSiteAge, LLC Zimbra Mail\n\nOVH\n\nOutlook\n\nOffice365\n\nOffice365 relay\n\nOnline.net\n\nAmen.fr / Securemail.pro\n\n1&1\n\nyahoo\n\nQQ exmail\n\nQQ exmail (腾讯企业邮箱)\n\nNetEase Free Enterprise Email\n\nNetEase Free Enterprise Email (网易免费企业邮)\n\nSendGrid with username/password authentication\n\nSendGrid with API Key authentication\n\nIf you don’t want to supply a username/password, you can use an API key:\n\nNote that smtp_user_name must literally be set to \"apikey\". The API Key you created must be entered in smtp_password.\n\nBrevo\n\nThis configuration was tested with the Brevo SMTP relay service. To grab the relevant account credentials via the URLs commented into this example, log in to your Brevo account.\n\nFor further details, refer to the Brevo help page.\n\nSMTP2GO\n\nThis configuration was tested using SMTP2GO. To get the relevant account credentials using the URLs commented in this example, sign in to your SMTP2GO account.\n\nYandex\n\nUD Media\n\nMicrosoft Exchange (no authentication)\n\nMicrosoft Exchange (with authentication)\n\nStrato.de\n\nRackspace\n\nDomainFactory (df.eu)\n\nInfomaniak (infomaniak.com)\n\nGoDaddy (TLS)\n\nEuropean servers: smtpout.europe.secureserver.net\n\nAsian servers: smtpout.asia.secureserver.net\n\nGlobal (US) servers: smtpout.secureserver.net\n\nGoDaddy (No TLS)\n\nSee GoDaddy (TLS) entry above for mail server list.\n\nOpenSRS (hostedemail.com)\n\nAruba (aruba.it)\n\nAlibaba Cloud Direct Mail (No TLS)\n\nAlibaba Cloud Direct Mail (TLS)\n\nAliyun Direct Mail\n\nAliyun Direct Mail (阿里云邮件推送)\n\nAliyun Enterprise Mail with TLS\n\nAliyun Enterprise Mail with TLS (阿里企业邮箱)\n\nFastMail\n\nFastMail requires an App Password even when two-step verification is not enabled.\n\nDinahosting\n\nGMX Mail\n\nHetzner\n\nSnel.com\n\nJangoSMTP\n\nMailjet\n\nMailcow\n\nALL-INKL.COM\n\nwebgo.de\n\nmxhichina.com\n\nPostmark\n\neasyDNS (outbound mail)\n\nCheck if it’s available/enabled and configuration settings in the control panel.\n\nCampaign Monitor\n\nFreehostia\n\nMailbox.org\n\nMittwald CM Service (mittwald.de)\n\nUnitymedia (.de)\n\nunited-domains AG (united-domains.de)\n\nIONOS by 1&1 (ionos.de)\n\nAWS Workmail\n\nFrom the AWS workmail documentation:\n\nOpen Telekom Cloud\n\nUberspace 6\n\nFrom the Uberspace Wiki:\n\nTipimail\n\nNetcup\n\nMail-in-a-Box\n\nNIFCLOUD ESS\n\nSMTP Interface.\n\nCheck the SMTP user name and SMTP user password from the ESS dashboard. gitlab_email_from and gitlab_email_reply_to must be ESS authenticated sender email addresses.\n\nSina mail\n\nUser needs first to enabled SMTP through the mailbox settings via web mail interface and get the authenitication code. Check out more details in the help page of Sina mail.\n\nFeishu mail\n\nCheck out more details in the help page of Feishu mail.\n\nHostpoint\n\nFor more information about Hostpoint email visit their help page\n\nFastweb (fastweb.it)\n\nScaleway Transactional Email\n\nRead more about Scaleway’s Transactional Email.\n\nProton Mail\n\nProton documentation: How to set up SMTP to use business applications or devices with Proton Mail\n\nMore examples are welcome\n\nIf you have figured out an example configuration yourself please send a Merge Request to save other people time.\n\nTesting the SMTP configuration\n\nYou can verify that GitLab can send emails properly using the Rails console. On the GitLab server, execute gitlab-rails console to enter the console. Then, you can enter the following command at the console prompt to cause GitLab to send a test email:\n\nTroubleshooting\n\nOutgoing connections to port 25 is blocked on major cloud providers\n\nIf you are using a cloud provider to host your GitLab instance and you are using port 25 for your SMTP server, it is possible that your cloud provider is blocking outgoing connections to port 25. This prevents GitLab from sending any outgoing mail. You can follow the instructions below to work around this depending on your cloud provider:\n\nAWS: How do I remove the restriction on port 25 from my Amazon EC2 instance or AWS Lambda function?\n\nAzure: Troubleshoot outbound SMTP connectivity problems in Azure\n\nGCP: Sending email from an instance\n\nWrong version number when using SSL/TLS\n\nMany users run into the following error after configuring SMTP:\n\nThis error is usually due to incorrect settings:\n\nIf your SMTP provider is using port 25 or 587, SMTP connections start unencrypted but can be upgraded via STARTTLS. Be sure the following settings are set:\n\ngitlab_rails['smtp_enable_starttls_auto'] = true gitlab_rails['smtp_tls'] = false # This is the default and can be omitted gitlab_rails['smtp_ssl'] = false # This is the default and can be omitted\n\nIf your SMTP provider is using port 465, SMTP connections start encrypted over TLS. Ensure the following line is present:\n\ngitlab_rails['smtp_tls'] = true\n\nFor more details, read about the confusion over SMTP ports, TLS, and STARTTLS.\n\nEmails not sending when using external Sidekiq\n\nIf your instance has an external Sidekiq configured, the SMTP configuration must be present in /etc/gitlab/gitlab.rb on the external Sidekiq server. If the SMTP configuration is missing, you may notice that emails do not get sent through SMTP as many GitLab emails are sent via Sidekiq.\n\nEmails not sending when using Sidekiq routing rules\n\nIf you are using Sidekiq routing rules, your configuration might be missing the mailers queue which is required for outgoing mail.\n\nFor more details, review the example configuration.\n\nEmail not sent\n\nIf you have correctly configured an email server, but email is not sent:\n\nRun a Rails console.\n\nCheck the ActionMailer delivery_method. It must match the type of server you’re using, either :smtp for an SMTP server or :sendmail for Sendmail: intended. If you configured SMTP, it should say :smtp. If you’re using Sendmail, it should say :sendmail:\n\nirb(main):001:0> ActionMailer::Base.delivery_method => :smtp\n\nIf you’re using SMTP, check the mail settings:\n\nirb(main):002:0> ActionMailer::Base.smtp_settings => {:address=>\"localhost\", :port=>25, :domain=>\"localhost.localdomain\", :user_name=>nil, :password=>nil, :authentication=>nil, :enable_starttls_auto=>true}\n\nIn the example above, the SMTP server is configured for the local machine. If this is intended, check your local mail logs (for example, /var/log/mail.log) for more details.\n\nSend a test message using the console:\n\nirb(main):003:0> Notify.test_email('youremail@email.com', 'Hello World', 'This is a test message').deliver_now\n\nIf you do not receive an email or see an error message, check your mail server settings.\n\nEmail not sent when using STARTTLS and SMTP TLS\n\nYou may encounter the following error if both STARTTLS and SMTP TLS are enabled:\n\nThis error occurs when both gitlab_rails['smtp_enable_starttls_auto'] and gitlab_rails['smtp_tls'] are set to true. If using SMTPS, set gitlab_rails['smtp_enable_starttls_auto'] to false. If using SMTP with STARTTLS, set gitlab_rails['smtp_tls'] to false. Run sudo gitlab-ctl reconfigure for the change to take effect.\n\nDisable all outgoing email\n\nIn order to disable all outgoing email, you can edit or add the following line to /etc/gitlab/gitlab.rb:"
    }
}