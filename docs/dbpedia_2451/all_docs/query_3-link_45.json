{
    "id": "dbpedia_2451_3",
    "rank": 45,
    "data": {
        "url": "https://www.101ways.com/how-to-break-the-internet-with-shors-algorithm/",
        "read_more_link": "",
        "language": "en",
        "title": "How to break the internet with Shor's Algorithm",
        "top_image": "https://www.101ways.com/wp-content/uploads/2019/06/john-salvino-417565-unsplash-200x300.jpg",
        "meta_img": "https://www.101ways.com/wp-content/uploads/2019/06/john-salvino-417565-unsplash-200x300.jpg",
        "images": [
            "https://www.101ways.com/wp-content/uploads/2019/06/john-salvino-417565-unsplash-200x300.jpg",
            "https://www.101ways.com/wp-content/uploads/2019/06/john-salvino-417565-unsplash-200x300.jpg",
            "https://www.101ways.com/wp-content/uploads/2019/06/cmdr-shane-610506-unsplash-1024x669.jpeg",
            "https://www.101ways.com/wp-content/uploads/2019/06/cmdr-shane-610506-unsplash-1024x669.jpeg",
            "https://www.101ways.com/wp-content/themes/101ways/images/post-sidebar-services.png",
            "https://www.101ways.com/wp-content/themes/101ways/images/post-sidebar-services.png",
            "https://www.101ways.com/wp-content/themes/101ways/images/post-sidebar-stories.png",
            "https://www.101ways.com/wp-content/themes/101ways/images/post-sidebar-stories.png",
            "https://www.101ways.com/wp-content/themes/101ways/images/101ways-logo.svg",
            "https://www.101ways.com/wp-content/themes/101ways/images/101ways-logo.svg",
            "https://www.101ways.com/wp-content/uploads/2024/06/Cyber-Essentials-Logo-v2.png",
            "https://www.101ways.com/wp-content/uploads/2024/06/Cyber-Essentials-Logo-v2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Odhrán McConnell"
        ],
        "publish_date": "2019-06-10T10:51:01+00:00",
        "summary": "",
        "meta_description": "Note: Thanks to minutephysics for the primer that allowed me to make this article and for making it a lot […]",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "101 Ways",
        "canonical_link": "https://www.101ways.com/how-to-break-the-internet-with-shors-algorithm/",
        "text": "Note: Thanks to minutephysics for the primer that allowed me to make this article and for making it a lot easier for me to learn about this.\n\nHaving started the journey of learning as much as I can about quantum computing, I decided that the next step is to try and gain an understanding of something practical. There has been a lot of discussion and debate about quantum computers having the potential to break encryption, thus rendering all internet encrypted traffic open to prying eyes, so I decided to investigate.\n\nFair warning, this is going to get a little complicated and I will try and explain it in layman’s terms, although there will be an equation or two involved – but nothing more complicated than middle school algebra … I hope.\n\nAll encryption over the internet is based on finding the\n\nfactors of a really large non-prime number. Unlike multiplying numbers together to get a really large number, dividing a really large number into integer factors takes a very long time. The best method we have for doing this is incredibly slow. In my previous article I mentioned that the largest factored RSA number was 768 bits long and it took 15,000 CPU years to decrypt (two years of real time, on many hundreds of computers). This takes too much time and electricity to be useful.\n\nEnter Shor’s algorithm, quantum computers, and the threat these pose to effectively breaking encryption. The algorithm is based on two aspects of quantum theory, ‘quantum superposition’ and ‘interference’. Peter Shor is an American professor of applied mathematics at MIT and is the inventor of this quantum algorithm from his work in the 90s in the field of quantum computation.\n\nRSA encryption is based on a mechanism of obscuring information with a large number such that the only way to unobscure it is by finding the factors of this large number. Our current best method effectively guesses a number and if it isn’t a factor, then it tries another until it finally finds a guess that works. Even with optimisations during the process, it is extremely slow.\n\nUltimately though, all encryption is based on the hope that the factoring process takes so long that people won’t bother and to date this has largely been the case.\n\nShor’s algorithm is based on making a bad guess of a factor and then using the algorithm to turn that bad guess into a much better guess. Unlike quantum computers that take an astonishingly small amount of time, classical computers can also run Shor’s algorithm but take a very long time to complete.\n\nFundamentally, it can be broken down into two parts:\n\nThe mathematical part – making the guesswork more accurate; and\n\nThe physics part – speeding up the process\n\nThe TL;DR here is roughly as follows:\n\nMake a guess, g, at a number that shares factors with the RSA encrypted number, N\n\nShor’s algorithm says that a much better guess would be gp/2 ± 1, where P is the number of times you’d have to multiply g with itself such that gp = m * N + 1, where m is some multiple of N\n\nWe can find P very quickly by using quantum superpositions and interference so that all the wrong superpositions of P destructively interfere with each other and you’re left with the right value\n\nWorking this back we can then use Euclid’s algorithm to find the real factors\n\nThen we break the encryption!\n\nThe Maths Part\n\n(NB: The following section uses * to symbolise multiplication – while this may offend the purist mathematicians for the purposes of this article it is being used due to common usage by non-mathematicians)\n\nLet’s start with a big number N, which you’ll need to find the factors of. First step, make a guess, g, which is a number less than N. Numbers that share factors are okay too because of Euclid’s algorithm, which I won’t go into now, but effectively means that we can find the real factors using this.\n\nWe can now use a trick based on the following, to turn the bad guess into something more accurate:\n\nTake any pair of whole numbers that don’t share a factor with N and multiply one of them by itself enough times you’ll eventually end up with some whole number multiple of the other number plus 1\n\nFactor A * Factor B → A * A * A * A …(enough times) = some multiple * B + 1"
    }
}