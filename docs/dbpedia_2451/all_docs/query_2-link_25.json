{
    "id": "dbpedia_2451_2",
    "rank": 25,
    "data": {
        "url": "https://blog.computationalcomplexity.org/2004/02/",
        "read_more_link": "",
        "language": "en",
        "title": "Computational Complexity",
        "top_image": "https://blog.computationalcomplexity.org/favicon.ico",
        "meta_img": "https://blog.computationalcomplexity.org/favicon.ico",
        "images": [
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_email.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://pup-assets.imgix.net/onix/images/9780691175782.jpg?w=640",
            "https://i.creativecommons.org/l/by-nc/4.0/88x31.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Lance Fortnow"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Computational Complexity and other fun stuff in math and computer science from Lance Fortnow and Bill Gasarch",
        "meta_lang": "en",
        "meta_favicon": "https://blog.computationalcomplexity.org/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://blog.computationalcomplexity.org/2004/02/",
        "text": "One of our graduate students asked me why, if the NSF has limited grant money, do our program officers actively and sometimes aggressively encourage more grant proposals? Let me explain. The NSF uses, as one of their criteria to determine the amount of funding, the ratio of proposals funded from those submitted. A lower ratio indicates higher need and may lead to more funding. Project leaders don't want to lower the numerator as this means giving out fewer grants so instead they try to raise the denominator.\n\nUnfortunately writing a grant proposal takes a considerable amount of time and effort so many researchers are reluctant to write a proposal that has little or no chance of funding. In theory especially one can make a reasonable determination to their chances of funding so even as the number of theorists grow and the theory budget remains steady, the ratio of funded proposals remains relatively constant.\n\nWe will have to see how these rules will apply now that the theory program has been reorganized into a part of the larger Formal and Mathematical Foundations Cluster. Nevertheless if you submit a grant proposal that doesn't get funded you can take solace in the fact that you are helping the community. Doesn't that make you feel better?\n\nYesterday I got an email addressed from SUNY Stonybrook with a strange attachment. I checked it with a virus checker and then stupidly opened it. Apparently a new variation of the MyDoom virus got to my computer a few hours before its virus definition was available for download. This is a reason not an excuse.\n\nMy computer is clean now but many people I know got emails with the From addressed from someone else I know. So be careful when opening your email and don't make the same mistake I did.\n\nAnd for all of you Mac and Linux users out there: Go ahead and laugh. (Just anticipating the inevitable comments)\n\nWhen I started college in 1981 I brought a typewriter with me. Junior year of college I experimented with a simple text processor system called script--no more white-out but my papers looked artificial.\n\nIn the first year of graduate school I used something called troff to write a term paper for operating systems. But then, just as I had my first research paper to write, LaTeX made its way onto the scene.\n\nBack then LaTeX was relatively easy to use and did a great job with mathematics and references. Running LaTeX took a long time but boy did our papers look good. LaTeX has since become the standard in theoretical computer science papers--one has to use it because everyone else uses it. LaTeX fell far behind in user interface but still does mathematics better than anything else out there. LaTeX runs blazingly fast on today's computers but my papers look like everyone else's papers.\n\nOn a recent visit to her grandmother's house, my daughter saw my college typewriter and said \"Look, Daddy's old computer.\" She will never know the joy of white-out.\n\nLet's look at some interesting questions about the set of smallest programs. This post relates more to recursion theory than complexity theory. No time bounds today.\n\nLet f1, f2, ... be an enumeration of the partial recursive functions. We say fi≠fj if there is some input x such that either\n\nfi(x) halts and fj(x) does not halt, or\n\nfj(x) halts and fi(x) does not halt or\n\nboth fi(x) and fj(x) halt and fi(x)≠fj(x).\n\nDefine the set MIN as the set of indices i such that for all j<i, fi≠fj. How hard is the set MIN?\n\nMIN is in Σ2 of the arithmetic hierarchy. For all j<i you need to check that for some input x, one of the three conditions above hold (which might require a ∀ to check that a machine does not halt). We have two unbounded quantifiers (the first \"for all\" is bounded) so MIN is in Σ2.\n\nIn fact this is tight for Turing reductions, every problem in Σ2 reduces to MIN.\n\nFor an interesting open question we turn to a variation called MIN*. We say fi≠*fj if one of the three conditions above hold for infinitely many x. MIN* contains the set of indices i such that for all j<i, fi≠*fj.\n\nWithout too much effort one can show MIN* is in Π3. Marcus Schaefer shows that every language in Π3 can be Turing reduces to an oracle that encodes both MIN* and K where K is the usual halting problem. We would like to remove K which is equivalent to the following open question\n\nDoes K Turing reduce to MIN*?\n\nRead Schaefer's paper for details and many more interesting facts about MIN and MIN*.\n\n\"I like everybody in this field\" Berkeley professor Christos Papadimitriou said during his acceptance speech of the Knuth Award at the 2002 STOC conference. He paused and added \"Even those not on the MIT-Berkeley axis whose papers usually do not get accepted into STOC and FOCS.\"\n\nPapadimitriou was alluding to an earlier time, the 1980s, when indeed STOC and FOCS were dominated by papers (and program committee members) from MIT and Berkeley and those with strong connections with these institutions. When I attended grad school at MIT I grew to believe there was MIT theory and there was bad theory. Once I left MIT and moved off axis to Chicago I discovered whole beautiful areas of CS theory completely ignored during my MIT days.\n\nThe MIT-Berkeley axis still exists to some extent but has far less influence than two decades ago. The vagaries of the job market have forced MIT and Berkeley Ph.D.'s to spread out over a large variety of colleges and universities diluting the axis. Also the field has grown too large to be dominated by two institutions or two conferences.\n\nI spent a considerable part of yesterday looking at applications for our Ph.D. program in theoretical computer science. Some of you readers might have an interest in what I look for in a potential graduate student. Keep in mind that other professors may read the applications differently.\n\nJudging Ph.D. applications is not an easy task. Most of our applicants have near perfect grades (in math and TCS courses) and GRE scores (focusing on quantitative). Next I read the letters of recommendation. Nearly every recommender writes positive letters but you can definitely see some differences. \"Best student in the past five years\" means much more than \"one of the top ten graduating CS students this year.\" Recommendation letters carry more weight if they show a personal contact not just \"he took my class.\" I also pay particular attention to letters written by people I know, i.e., active members of the theoretical computer science community.\n\nI check to see if an applicant has done any research as an undergrad (which helps but is not critical) and do a quick read of the statement of purpose. I know applicants fret considerably about the statement of purpose but in fact they carry very little weight. You can use them to explain anomalies in the application (health problems in the semester you got a C in algorithms). Trying to be clever can harm you. I remember one applicant years ago started the statement with \"I want to be a graduate student because I don't want to work for a living.\"\n\nDoes it matter what undergraduate school you attended? We'll accept a student from any university or college, but I keep the quality of the school in mind as I evaluate the application.\n\nDoes it matter if you are a US citizen or even live in the US? Not really, though many universities including the University of Chicago have strict lower limits on TOEFL scores for incoming foreign students.\n\nIn short for me, assuming an applicant has good grades and scores, it is the letters of recommendation that make or break an application. Choose your letter writers well.\n\nEditor's Note: I don't plan to be an announcement server but this theory day deserves some extra publicity. Despite the self-aggrandizing it looks like quite an impressive event. Five famous speakers and most of them are known to give great talks.\n\nThe panel discussion should be quite interesting especially since Karp and Wigderson have had in the past well-publicized differing views on the topic. Read them here and here before you attend the panel.\n\nThere will be a super special Theory Day at Columbia on Friday, May 14, 2004. Theory Day, sponsored by Columbia, NYU and IBM Research, is a semi-annual conference which brings together New York Metropolitan area theorists for a day of interaction and discussion.\n\nWhy have a special one?\n\nBecause we have several reasons to celebrate:\n\nColumbia University celebrates its 250th anniversary.\n\nThe Computer Science Department celebrates its 25th anniversary.\n\nThe Computer Science Theory group at Columbia celebrates its terrific theory faculty. The most recent addition is Mihalis Yannakakis.\n\nThe speakers and panelists will be:\n\nShafi Goldwasser (MIT/Weizmann)\n\nRichard Karp (UC Berkeley)\n\nPrabhakar Raghavan (Verity/Stanford)\n\nPeter Shor (MIT)\n\nAvi Wigderson (IAS)\n\nMihalis will chair a panel discussion on the future of CS theory.\n\nTo make this Theory Day really special we are planning\n\nto provide lunch to the participants\n\nto provide a commemorative T-shirt.\n\nYou will have to RSVP to get either; contact Rocco Servedio.\n\nWe hope you'll join us in celebrating theory in the midst of the local celebrations at Columbia.\n\nAn interesting NSF press release describes the importance of the layout of offices to the productivity of a research group: Clustering items like refrigerator, printers, coffee makers in common areas increases chance encounters which leads to impromptu conversations and a higher level of innovation.\n\nSuch clustering may prove difficult given building layouts and worries about theft. But the study underscores that often the best research comes from unscheduled interactions between scientists as opposed to scheduled research discussions and even the simple choices of placement of offices for faculty and students should take this into consideration.\n\nLet me throw out another question. Is it possible to get these chance encounters in cyberspace? Can we have some sort of virtual complexity coffeehouse? Or does the Internet, despite its great properties of improving communication and distributing information, actually stifle innovation by preventing those random connections we need for research?\n\nDear friends and colleagues,\n\nWe would like to encourage you to submit suitable papers to the journal Computational Complexity (cc).\n\nWe believe that cc should be the main publication forum for papers in complexity theory. In our opinion, a high-quality specialized journal (like cc) should be a preferred option because of the following reasons:\n\nauthors can have better impact on the field by publishing in cc, since their papers will be read by more complexity theorists.\n\nby having a specialized journal devoted to complexity, our community proclaims and enhances its identity.\n\nWhat prompts this email is that the 2002 volume of cc was only published in 2003 and consisted of two rather than the customary four issues. This was mainly due to too few good submissions, and we did not want to compromise on quality. (The delays, in turn, caused further problems with library subscriptions.)\n\nIt is up to us, the relevant research community, to change this situation by submitting enough good papers to cc to make it flourish. Certainly, the number of high-quality complexity papers every year significantly exceeds the number we can publish, so we hope this is a realistic goal. We are committed to establishing the journal as a leading journal for papers in complexity theory.\n\nAnother advantage of publishing in cc: the publisher has a very liberal policy on copyrights and electronic versions. The copyright remains with the authors, and only the commercial-distribution rights are transferred to the publisher. Authors are free to post their work on any non-commercial forum.\n\nYou are most welcome to submit papers (via email) to us or to any member of the editorial board.\n\nCurrently, the delay between receipt of a final version of an accepted paper and its publication is quite short.\n\nJoachim von zur Gathen (Editor-in-chief)\n\nSanjeev Arora (Assoc Ed)\n\nPeter B�rgisser (Assoc Ed)\n\nOded Goldreich (Assoc Ed)"
    }
}