{
    "id": "dbpedia_2451_3",
    "rank": 81,
    "data": {
        "url": "https://www.qutube.nl/quantum-algorithms/shors-algorithm",
        "read_more_link": "",
        "language": "en",
        "title": "Shor's algorithm",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [
            "https://www.youtube.com/embed/zoKIWrpan6M",
            "https://www.youtube.com/embed/ukqduQEP8_o"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "QuTube",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://www.qutube.nl/quantum-algorithms/shors-algorithm",
        "text": "Among the first quantum algorithms that demonstrated advantage over classical ones we find Shor's algorithm. In general terms, Shor's algorithm allows us to find prime decomposition of very big numbers in O((logN)^3) time and O(logN) space.\n\nCurrently, our internet's security relies mainly on the RSA encryption scheme, which involves encryption using a large number made of two large prime numbers. Finding large prime numbers is thus very useful in order to decrypt messages. Shor's algorithm uses quantum mechanics to find such pirme numbers, and thus break RSA encryption much faster and more efficiently than in the classical case.\n\nPrerequisite knowledge\n\nQuantum fourier transform\n\nBreaking encryption\n\nThe following videos contain an explanation of Shor's algorithm given by Elsie Loukiantchenko and Maria Flors Mor Ruiz, Applied Physics MSc students at TU Delft.\n\nFind first a general view of the algorithm:\n\nThe role of quantum mechanics is covered in the second part:\n\nFurther Thinking\n\nEuclid's algorithm is a way to find common divisors. Use this algorithm to find the greatest common divisor of 210 and 45.\n\nNow, let's say that we have a number N=91, whose factors are 7 and 13. If we choose as a random guess g=64, which power p gives us the following expression?\n\ngp = m*N â†’ (gp/2 + 1)*(gp/2 - 1) = m*N\n\nSolution\n\nFurther Reading\n\nThe following references are interesting, check them out!"
    }
}