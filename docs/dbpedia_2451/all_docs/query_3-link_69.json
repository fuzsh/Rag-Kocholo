{
    "id": "dbpedia_2451_3",
    "rank": 69,
    "data": {
        "url": "https://github.com/mett29/Shor-s-Algorithm",
        "read_more_link": "",
        "language": "en",
        "title": "Algorithm: Description and implementation of the Shor's algorithm (to solve the prime factorization problem) using the IBM SDK Qiskit and the framework ProjectQ.",
        "top_image": "https://opengraph.githubassets.com/bd1c772b458ca7fd8adc6426fd835c293b27a043faa5fbbd135f357480c8e70c/mett29/Shor-s-Algorithm",
        "meta_img": "https://opengraph.githubassets.com/bd1c772b458ca7fd8adc6426fd835c293b27a043faa5fbbd135f357480c8e70c/mett29/Shor-s-Algorithm",
        "images": [
            "https://camo.githubusercontent.com/f08fd30337d1949f92e493aa95d1d61efb61aee7efb64b01368ef7a0920746d4/68747470733a2f2f77696b696d656469612e6f72672f6170692f726573745f76312f6d656469612f6d6174682f72656e6465722f7376672f34313334346235356566356536343934626238333562316164646539613462653434303333303363",
            "https://camo.githubusercontent.com/07632c185268f854ac35e8522210d0213889b95e6233b2a3e05f57e1bb0a1ef6/68747470733a2f2f77696b696d656469612e6f72672f6170692f726573745f76312f6d656469612f6d6174682f72656e6465722f7376672f31393536343630613163656134663237393466613034383766383836653261363463656463323434",
            "https://github.com/mett29/Shor-s-Algorithm/raw/master/img/complexity.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Description and implementation of the Shor's algorithm (to solve the prime factorization problem) using the IBM SDK Qiskit and the framework ProjectQ. - mett29/Shor-s-Algorithm",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/mett29/Shor-s-Algorithm",
        "text": "This project was done as part of the Software Engineering 2 course at Polytechnic of Milan. The aim was to explore the field of Quantum Computing to understand its characteristics and potential. In order to accomplish this task, I and other colleagues started from the paper Quantum Algorithm Implementations for Beginners, from which each person chose an algorithm and then started its study. As you can understand, my algorithm is the Shor's algorithm.\n\nShor's algorithm, named after mathematician Peter Shor, is a quantum algorithm (an algorithm that runs on a quantum computer) for integer factorization, formulated in 1994. Informally, it solves the following problem: Given an integer N, find its prime factors.\n\nGitHub has some issues in rendering LaTeX notation. Hopefully, everything should be understandable, otherwise use the following link to visualize the notebook:\n\nShor's algorithm (open with nbviewer)\n\nAlternatively, just clone this repository and launch jupyter lab.\n\nLemma: Factoring is equivalent to finding a nontrivial squareroot of 1 mod N.\n\nComplexity:\n\nComplexity on quantum computer:\n\nComplexity on classical computer:\n\nImage credits: https://quantum-computing.ibm.com/docs/iqx/guide/shors-algorithm\n\nShor's algorithm consists of two parts:\n\n1) [CLASSICAL PART] A reduction, which can be done on a classical computer, of the factoring problem to the problem of order-finding.\n\n2) [QUANTUM PART] A quantum algorithm to solve the order-finding problem."
    }
}