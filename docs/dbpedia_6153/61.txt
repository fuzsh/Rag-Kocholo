Spencer Kimball is the co-founder and CEO of Cockroach Labs, where he maintains a delicate balance between his love for programming distributed systems and the excitement of helping the company grow smoothly. While in university, he was one of the original authors of the GIMP. He cut his teeth on databases during the dot com heyday and had a front-row seat at Google for a decade’s worth of their evolution.

Relevant Links

LinkedIn - Twitter

Jim Walker is a recovering developer turned product marketer and has spent his career in emerging tech. He believes product marketing is one of the most strategic functions in early-stage companies and helps organizations translate complex concepts into a compelling and effective core narrative and market strategy. During his career, he has brought multiple products to market in a variety of fields, including data loss prevention, master data management (MDM), Hadoop, Predictive Analytics, Kubernetes and Distributed SQL. Jim specializes in open source business models and is focused on accelerating the emergence of categories and broad developer movements. Currently working at Cockroach Labs, the creator of CockroachDB, the most highly evolved cloud-native, distributed SQL database on the planet. We help companies of all sizes — and the apps they develop — scale fast, survive anything, and thrive everywhere.

Relevant Links

LinkedIn - Twitter

The expanded definition of open source and the ramifications of public cloud providers on Open Core product decisions and Open Core licensing

Jim and Spencer introduce themselves and the presentation agenda - 0:00

Jim: Spencer, you go back in open source a long time. You had one of the most successful products ever in open source, right? (Spencer speaks about experience with the GIMP) - 1:03

Jim: Open source and the definition of open source hasn’t really fundamentally changed. Open source is more than a license, right? Spencer, how do you define open source? - 2:20

(Jim elaborates on open-source being more about communities than licenses, and the impact of communities). - 5:44

Jim: Coming back to the consumption thing, Spencer. The consumption model is a big deal. People want to consume as a service. Code contribution and code community consumption and the license model don’t exist alone. What was the change that we made as we went through this consumption thing? (Spencer explains how AWS and other large cloud providers started implementing enterprise features into open source, to expand the open service the cloud providers could offer, enabling them to capture more customers to the disadvantage of the companies building the open core. In response, Spencer explains adoption of the Business Source License (BSL) with a three-year window before new versions become open source.) - 7:05

Jim: So we didn’t choose to carve out any features. It’s basically stopping someone from hosting the service and making money. The three-year thing in the BSL is interesting to me. How did we come to the three-year window in the BSL? - 13:32

Jim: I think it’s plenty of time, with the rate of innovation and how fast things are moving. (Jim and Spencer discuss the open-source/OSI status of the BSL). Whether it’s open source, to me, it’s just a business model question, and helping drive innovation. The three-year window is great because it forces us to innovate. It’s on us. Going back to the consumption model, has the shift in consumption changed how we think about what goes into open core vs what goes into enterprise? (Spencer explains how license change will help put more high-value features in the core, and CockroachDB/all databases will be increasingly consumed as a service. As more people consume as a service, it makes less of a difference what is in core vs enterprise. The distinction between enterprise vs core breaks down in the service-based model.) - 15:17

Jim: The change to services has basically taken away the free beer of open-source, hasn’t it? Will we ever be free again? (Spencer clarifies that open source was never completely free. The software was free, but you paid for the hardware. Extending that to Cockroach Cloud, someone has to pay for the hardware. The answer interestingly is maybe-to-yes. For hobby/startup/hackathon level, can we make it so that you get something as powerful as CockroachDB perpetually free? So it really is free beer as a serivce, but something has to subsidize that. The goal is to restore/persist the free feeling you had from open source, even as we move to the service-based consumption model. Rallying cry: “returning free beer to open source.”) - 20:30