{
    "id": "dbpedia_6153_3",
    "rank": 49,
    "data": {
        "url": "http://www.home.unix-ag.org/simon/gimp/guadec2002/gimp-plugin/html/",
        "read_more_link": "",
        "language": "en",
        "title": "Script-Fu and plug-ins for The GIMP",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://www.home.unix-ag.org/simon/gimp/guadec2002/gimp-plugin/html/pdb-entry.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Simon Budig"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "1. The GIMP's PDB\n\nThe PDB (Procedural DataBase) is the most important interface to access the image manipulation functions of The GIMP. The libgimp library provides some functions to call functions from the PDB or enter new functions into the PDB.\n\nEach plug-in enters its functionality into the PDB, which enables it to be used by other plug-ins or scripts. The PDB also has information on the various parameters for each function.\n\nWriting a binding for a programming language – for example Scheme or Perl – just requires mapping the PDB onto the syntax of the target language and providing access to the various parameter types. This is not a trivial task, but since libgimp is written in C and every reasonable target language provides a mechanism to access C-libraries it is not impossible. Some details (for example pixel-level manipulation of image data as in Gimp-Perl) need more attention.\n\nA typical PDB entry contains this information (this is a screenshot of <Toolbox>/Xtns/DB Browser):\n\nYou can see that a function can have different types of input and output parameters. In addition to types like INT, FLOAT and STRING and arrays of these, COLOR, IMAGE, DRAWABLE, LAYER and CHANNEL get used frequently. Layers and channels are both drawable types."
    }
}