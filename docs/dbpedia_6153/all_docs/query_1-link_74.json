{
    "id": "dbpedia_6153_1",
    "rank": 74,
    "data": {
        "url": "https://rebelsky.cs.grinnell.edu/Courses/CSC151/2016S/readings/gimp-reading.html",
        "read_more_link": "",
        "language": "en",
        "title": "The GNU Image Manipulation Program (Readings, CSC 151 2016S)",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://rebelsky.cs.grinnell.edu/Courses/CSC151/2016S/resources/cc-by-nc-3.0.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "As you probably know, the face of computing has changed significantly in the past twenty or so years. Until the advent of reasonably priced personal computers, most computing was done on large, shared, computer systems. To simplify matters, we'll say that there were two basic kinds of computing that happened then: business computing and academic/scientific computing. (Yes, that's a significant simplification.) In the business world, dominated by computers from IBM and its associated operating systems, there was an assumption that software either came with your computer or was purchased at a relatively high price. In the academic world, most people who needed custom software wrote it themselves and then shared it with their colleagues elsewhere (just as scientists regularly share research results, at least in an ideal world).\n\nWith the advent of the personal computer, the realms mixed somewhat (and, as importantly, expanded significantly). To many, this suggested that the business model could be more widely adopted. That is, your computer would come with a small, core, set of software and you'd buy anything else you wanted or needed. (It took some time for this model to develop; the first Macs shipped with free word-processing and drawing programs.)\n\nMany long-time computer programmers were upset at this commercialization. In response, they began a number of endeavors to provide non-commercial alternatives to the commercial software. Foremost among these endeavors was the GNU (GNU's Not Unix) project, which evolved into the Free Software Foundation (FSF). Richard Stallman, the driving force behind GNU/FSF believed (and continues to believe) that software should be free (as in “freedom”). That is, if you own software, you should be free to use it as you wish, to modify it to make it do other things, and to share it with others. Stallman also believes strongly in community development, so a requirement of his free software is that you share any useful changes you make with the community.\n\nThe GNU project led to the development of Linux, one of the first free, widely-used operating systems for personal computers. It also led to the more general Open Source movement, which follows many of the tenets of the FSF (particularly the distribution of the source code of software, so that you can modify it), but permits a bit more of a commercial spin on those tenets.\n\nWhile Linux is clearly one of the great successes of the open source movement, there have been many others. For example, the Apache Web Server is an open source project that provides the most popular Web Server and the MySQL project provides an open-source database management system. One of Grinnell's spam filtering systems is also open source software.\n\nThe Free Software Foundation continues to take the lead in many projects. Many of the compilers (the programs that programmers use to build programs) used today are FSF products. The Gnome graphical user interface that we use in MathLAN (the thing that provides windows and icons on our Linux boxes) is an FSF product. The FSF also produces alternatives to many commercial applications.\n\nFrom your perspective, the most important aspect of open source software is probably that it's free (as in “free beer”): You can get a copy from the Web without paying for it and you can legally use it. Eventually, it may become important that it's modifiable (if it doesn't do something you want it to do, you can change it yourself, hire someone else to change it for you, or rely on the community to change it). And, depending upon your perspective, it may become important that it's unrestricted (or “free as in freedom”). Some of you may already have a political perspective that supports such freedom. Others of you are likely to find it necessary. As commercial software increasingly makes decisions as to what you can and cannot do, you will find unrestricted software more convenient.\n\nAs the introduction suggested, one of the more notable recent efforts of the FSF is GIMP. GIMP is a full-featured alternative to Photoshop, with some features that Photoshop lacks."
    }
}