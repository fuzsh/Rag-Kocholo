{
    "id": "correct_foundationPlace_00051_1",
    "rank": 82,
    "data": {
        "url": "https://barreto12.rssing.com/chan-6579071/all_p8.html",
        "read_more_link": "",
        "language": "en",
        "title": "Jose Barreto's Blog",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://pixel.quantserve.com/pixel/p-KygWsHah2_7Qa.gif",
            "https://blogs.technet.com/aggbug.aspx?PostID=3646937&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/image_5F00_thumb_5F00_6830EBB2.png",
            "https://blogs.technet.com/aggbug.aspx?PostID=3647648&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/CmdletPopularity_5F00_thumb_5F00_726A94D0.png",
            "https://blogs.technet.com/aggbug.aspx?PostID=3647652&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3648235&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3648243&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/image_5F00_0D460B24.png",
            "https://blogs.technet.com/aggbug.aspx?PostID=3648363&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3648875&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3648876&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/image_5F00_thumb_5F00_37B5A949.png",
            "https://blogs.technet.com/aggbug.aspx?PostID=3649181&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3649203&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3649301&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3649368&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/image_5F00_0176F7D2.png",
            "https://blogs.technet.com/aggbug.aspx?PostID=3649392&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/image_5F00_048FA423.png",
            "https://blogs.technet.com/aggbug.aspx?PostID=3649394&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/image_5F00_048FA423.png",
            "https://blogs.technet.com/aggbug.aspx?PostID=3649395&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3650022&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image001_5F00_thumb_5F00_14C9ED4F.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image002_5F00_thumb_5F00_10536C88.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image003_5F00_thumb_5F00_76EB694D.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image004_5F00_thumb_5F00_2F96135B.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image005_5F00_thumb_5F00_38F1D88F.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image006_5F00_thumb_5F00_1F89D555.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image007_5F00_thumb_5F00_61FC778B.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image008_5F00_thumb_5F00_1AA72199.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image009_5F00_thumb_5F00_013F1E5F.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image010_5F00_thumb_5F00_7CC89D97.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image011_5F00_thumb_5F00_3F3B3FCE.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image012_5F00_thumb_5F00_05B82FD7.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image013_5F00_thumb_5F00_6C502C9C.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image014_5F00_thumb_5F00_2EC2CED3.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image015_5F00_thumb_5F00_0E3B8F21.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image016_5F00_thumb_5F00_3BBCAEE4.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image017_5F00_thumb_5F00_653380D5.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image018_5F00_thumb_5F00_24913466.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image019_5F00_thumb_5F00_4E080657.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image020_5F00_thumb_5F00_4D9BD362.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image021_5F00_thumb_5F00_290A45DE.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image022_5F00_thumb_5F00_3D8F955C.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image023_5F00_thumb_5F00_3D236267.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/clip_5F00_image024_5F00_thumb_5F00_51A8B1E5.png",
            "https://blogs.technet.com/aggbug.aspx?PostID=3650374&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3651721&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/image_5F00_63399A47.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/image_5F00_6C292C86.png",
            "https://blogs.technet.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-38-13-metablogapi/image_5F00_66DCD686.png",
            "https://blogs.technet.com/aggbug.aspx?PostID=3653333&AppID=3813&AppType=Weblog&ContentType=0",
            "https://blogs.technet.com/aggbug.aspx?PostID=3654914&AppID=3813&AppType=Weblog&ContentType=0",
            "https://www.trueshayari.in/wp-content/uploads/2018/12/Mahadev-Status-in-Hindi.jpg",
            "https://augustacrime.com/wp-content/uploads/2017/01/imageCRESTONCURRY.jpg",
            "https://1.bp.blogspot.com/-_msqplafums/WoFP6BwVd6I/AAAAAAAAJiE/juU5uOC6Bb04hWSl3jpnZ5hFowZxDCZAwCLcBGAs/s1600/email2.PNG",
            "https://4.bp.blogspot.com/-P7HUlhcqRgI/UnCno2XjJQI/AAAAAAAAFZ4/pdetT2Y6c4I/s400/526ede69b2b18.image.jpg",
            "https://busyteacher.org/uploads/posts/2012-11/thumbs/1353086477_make-or-do-collocations-key-0.png",
            "https://2.bp.blogspot.com/-sI9NCiZooEI/WLgKcr_Uh3I/AAAAAAAAKZ0/CsJRU0aVqYs0wQpfjkAUAK7rfmvZbvzeQCPcB/s320/3252.windows-server-2016.png",
            "https://busyteacher.org/uploads/posts/2015-06/thumbs/1434962640_crossword-months-0.png",
            "https://augustacrime.com/wp-content/uploads/2021/05/Daniel-Broome-32-of-Augusta-Meth-trafficking-xanax-possession-attempting-to-elude-felony-reckless-driving.jpg",
            "https://chrisukorg.files.wordpress.com/2015/02/perry.jpg?w=529&h=511",
            "https://2.bp.blogspot.com/-w6Agw9GoYus/Wn1uc3rQKEI/AAAAAAAAEg8/9unlqDngRaUlF7EFSLeS3UwuAomYNLofQCLcBGAs/s320/class12-bilogy-ncert-solutions-in-hindi-ch3-1.png",
            "https://s3.amazonaws.com/nixle/uploads/pub_media/md/user24872-1464275450-media1_a5a7a6_240_180_PrsMe_.jpeg",
            "https://u.footballfonts.com/img/portugal-2020-ttf-font.jpg",
            "https://i.pinimg.com/originals/e6/33/6d/e6336d1dad962eae5f8162806efe68ce.png",
            "https://i2.wp.com/www.twincities.com/wp-content/uploads/2019/06/Cha-e1560483258563.jpg?fit=620%2C9999px&ssl=1",
            "https://2.bp.blogspot.com/-7TLcIsTWCRM/WJdhZJ8T1vI/AAAAAAAANlA/7-XTO95WE1494iVWxC5MIpWXckxuscj3QCLcB/s640/meenakshi%2Bjoshi%2Banchor.jpg",
            "https://www.digitalkhabar.in/wp-content/uploads/मतलबी-दोस्त-स्टेट्स.jpg",
            "https://4.bp.blogspot.com/-D2ybkIpqREU/Wti4IoCYwLI/AAAAAAAABEg/UTVmhPWy1QcrZg6t-w8mJpp49Ho6MfwfQCLcBGAs/s640/Anasuya%2B3.png",
            "https://3.bp.blogspot.com/-NP1u31H_hVE/WIJo02ELdQI/AAAAAAAAADY/eCMDy6ZuNoESiAXT9rhyePg9W9gujKiKwCEw/s400/p.txt.jpg",
            "https://www.workloadautomation-community.com/uploads/1/0/2/7/102707030/published/bhoodev.jpg?1560455651",
            "https://www.thesun.co.uk/wp-content/uploads/2024/07/jack-grealish-shares-uefa-super-839674000_761ccd.jpg?strip=all&w=960",
            "https://www.recordshopx.com/cover/normal/9/96/962000.jpg?lp",
            "https://i.etsystatic.com/5322367/r/il/16c961/6189750711/il_570xN.6189750711_3fil.jpg",
            "https://www.reversewinesnob.com/wp-content/uploads/2022/08/warp-weft-shweshwe-red-blend.jpg",
            "https://www.thesun.co.uk/wp-content/uploads/2024/07/andrew-timms-pa-wire-note-498134096.jpg?strip=all&w=960",
            "https://brobible.com/wp-content/uploads/2024/07/Close-up-of-the-dorsal-fin-of-shark.jpg?w=650",
            "https://www.rappler.com/tachyon/2024/07/carina-track-july-22-2024-11pm.png?fit=1024%2C1024",
            "https://s3.us-west-2.amazonaws.com/assets.eastidahonews.com/wp-content/uploads/2024/07/jelly-beans-300x200.jpg",
            "https://www.the-sun.com/wp-content/uploads/sites/6/2024/07/sweat-hot-japanese-woman-918865887.jpg?strip=all&w=960",
            "https://racedayct.com/wp-content/uploads/2021/02/My-Post-252-550x288.jpg",
            "https://en.metal-tracker.com//cache_images/index/3527040.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "//www.rssing.com/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "PowerShell Examples: Adventure House Game\n\nThis blog is part of a series that shows example PowerShell code for those learning the language.\n\nThis time we’re using PowerShell create a text adventure game that requires to find your way out of a house using simple commands. There is a locked door and you need to find a key.\n\nThis example explores the use of arrays (an array of arrays, actually), string manipulation and the switch statement.\n\n↧\n\n↧\n\nPowerShell Examples – Random words and their popularity via Bing\n\nThis blog is part of a series that shows example PowerShell code for those learning the language.\n\nThis time we’re using PowerShell to generate random words and check if they are popular by using a Bing search. The words are color-coded as white (not found on the web), green (between 1 and 1,000 hits on the web), yellow (between 1,000 and 1,000,000 hits) and red (more than 1,000,000 hits). This could be useful if you need to create a username on a popular website and everything you can think of is already taken :-).\n\nThis example explores using the Internet Explorer objects and searching through web pages by ID, along with more common items like arrays, string manipulation and functions.\n\nIn case you were wondering what the output would look like, here is a sample:\n\n↧\n\nPowerShell Examples: Using Bing to measure the popularity of cmdlets in a specific PowerShell module\n\nThis blog is part of a series that shows example PowerShell code for those learning the language.\n\nThis time we’re using PowerShell to find out which PowerShell cmdlet in a specific module is the most popular. To do this, we’re using a Bing search and producing a list with the name and number of web pages found for each one. This is returned as an object, so you can pipe the output to sort or filter. The name of the module is hard coded to “SmbShare”, but you can replace it with any valid module name. You could also make a parameter.\n\nThis example explores using the Web client in the .NET System.Web assembly, searching through the resulting web page using string functions, showing cmdlet progress and also a trick to create an object on the fly. It also shows more common items like arrays and functions.\n\nIn case you were wondering what the output would look like, here is a sample:\n\n↧\n\nStorage Sessions at Microsoft Ignite. Make sure to update your schedule!\n\nHi!\n\nIf you’re planning to attend Ignite, here is a list of sessions related to Storage at the event:\n\nSession titlePresentersDeploying Highly Scalable Clusters with Dell Servers and Microsoft StorageClaus Joergensen, Shai Ofek, Syama PoluriEnabling New On-premises Scale-Out File Server with Direct-Attached StorageClaus Joergensen, Michael GrayExploring Storage Replica in Windows Server vNextNed PyleHyper-V Storage Performance with Storage Quality of ServiceJose Barreto, Senthil RajaramManaging Storage with System Center Virtual Machine Manager: A Deep DiveHector LinaresOverview of Microsoft Azure Storage and Key Usage ScenariosVamshidhar KommineniOverview of the Microsoft Cloud Platform SystemVijay Tewari, Wassim FayedPlatform Vision & Strategy (4 of 7): Storage OverviewJose Barreto, Siddhartha RoySpaces-Based, Software-Defined Storage: Design and Configuration Best PracticesAllen Stewart, Jason Gerend, Joshua AdamsStorSimple: Extending Your Datacenter into Microsoft Azure with Hybrid Cloud StorageBadri Venkatachari, Meghan LieseStretching Failover Clusters and Using Storage Replica in Windows Server vNextElden Christensen, Ned PyleSystem Center Virtual Machine Manager: Technical Overview and RoadmapEric Winner, Jonobie FordThe Power of the Windows Server Software Defined datacenter in actionPhillip MossUpgrading your private cloud to Windows Server 2012 R2 and beyond!Ben Armstrong, Rob Hindman\n\nThere are other sessions on Storage and other sessions on Windows Server, but this list tries to cover the intersection of the two, plus some bonus Azure and Hybrid sessions. My apologies in advance if I missed anything and feel free to add comments about other sessions that you’re planning to attend at Ignite.\n\nWith hundreds of sessions in the event, I suggest that you get started building your schedule…\n\n↧\n\nWindows PowerShell equivalents for common networking commands (IPCONFIG, PING, NSLOOKUP)\n\nNetwork troubleshooting is part any System Administrator’s life. Maybe you need to check the IP address of a machine or test if its networking connection is working. Maybe you need to see if DNS is properly configured or check the latency between two hosts.\n\nIf you have been in this field long enough, you probably have a few favorite commands that you learned years ago and use on a regular basis, like IPCONFIG or PING.\n\nThere are literally hundreds of networking-related PowerShell cmdlets in Windows these days. Just try out this command on your machine: Get-Command -Module Net* | Group Module\n\nBut more important than knowing every one of them, is to know the most useful cmdlets that have the potential to replace those old commands that you can’t live without.\n\nAnd it’s when you combine the many networking cmdlets in ways that only PowerShell can do that you’ll find amazing new troubleshooting abilities…\n\nIPCONFIG\n\nDescription: This command has many options, but the most common usage is just to show the IP address, subnet mask and default gateway for each network adapter in a machine.\n\nPowerShell: Get-NetIPConfiguration or Get-NetIPAddress\n\nSample command lines:\n\nGet-NetIPConfiguration\n\nGet-NetIPAddress | Sort InterfaceIndex | FT InterfaceIndex, InterfaceAlias, AddressFamily, IPAddress, PrefixLength -Autosize\n\nGet-NetIPAddress | ? AddressFamily -eq IPv4 | FT –AutoSize\n\nGet-NetAdapter Wi-Fi | Get-NetIPAddress | FT -AutoSize\n\nSample output:\n\nPS C:\\> Get-NetIPConfiguration\n\nInterfaceAlias : Wi-Fi\n\nInterfaceIndex : 3\n\nInterfaceDescription : Dell Wireless 1703 802.11b|g|n (2.4GHz)\n\nNetProfile.Name : HomeWifi\n\nIPv6Address : fded:b22c:44c4:1:88f2:9970:4082:4118\n\nIPv4Address : 192.168.1.2\n\nIPv6DefaultGateway :\n\nIPv4DefaultGateway : 192.168.1.1\n\nDNSServer : 192.168.1.1\n\nInterfaceAlias : Bluetooth Network Connection\n\nInterfaceIndex : 6\n\nInterfaceDescription : Bluetooth Device (Personal Area Network)\n\nNetAdapter.Status : Disconnected\n\nInterfaceAlias : Ethernet\n\nInterfaceIndex : 4\n\nInterfaceDescription : Realtek PCIe GBE Family Controller\n\nNetAdapter.Status : Disconnected\n\nPS C:\\> Get-NetIPAddress | Sort InterfaceIndex | FT InterfaceIndex, InterfaceAlias, AddressFamily, IPAddress, PrefixLength –Autosize\n\nInterfaceIndex InterfaceAlias AddressFamily IPAddress PrefixLength\n\n-------------- -------------- ------------- --------- -------\n\n1 Loopback Pseudo-Interface 1 IPv6 ::1 128\n\n1 Loopback Pseudo-Interface 1 IPv4 127.0.0.1 8\n\n3 Wi-Fi IPv6 fe80::88f2:9970:4082:4118%3 64\n\n3 Wi-Fi IPv6 fded:b22c:44c4:1:f188:1e45:58e3:9242 128\n\n3 Wi-Fi IPv6 fded:b22c:44c4:1:88f2:9970:4082:4118 64\n\n3 Wi-Fi IPv4 192.168.1.2 24\n\n4 Ethernet IPv6 fe80::ce6:97c9:ae58:b393%4 64\n\n4 Ethernet IPv4 169.254.179.147 16\n\n6 Bluetooth Network Connection IPv6 fe80::2884:6750:b46b:cec4%6 64\n\n6 Bluetooth Network Connection IPv4 169.254.206.196 16\n\n7 Local Area Connection* 3 IPv6 fe80::f11f:1051:2f3d:882%7 64\n\n7 Local Area Connection* 3 IPv4 169.254.8.130 16\n\n8 Teredo Tunneling Pseudo-Interface IPv6 2001:0:5ef5:79fd:1091:f90:e7e9:62f0 64\n\n8 Teredo Tunneling Pseudo-Interface IPv6 fe80::1091:f90:e7e9:62f0%8 64\n\n9 isatap.{024820F0-C990-475F-890B-B42EA24003F1} IPv6 fe80::5efe:192.168.1.2%9 128\n\nPS C:\\> Get-NetIPAddress | ? AddressFamily -eq IPv4 | FT –AutoSize\n\nifIndex IPAddress PrefixLength PrefixOrigin SuffixOrigin AddressState PolicyStore\n\n------- --------- ------------ ------------ ------------ ------------ -----------\n\n7 169.254.8.130 16 WellKnown Link Tentative ActiveStore\n\n6 169.254.206.196 16 WellKnown Link Tentative ActiveStore\n\n3 192.168.1.2 24 Dhcp Dhcp Preferred ActiveStore\n\n1 127.0.0.1 8 WellKnown WellKnown Preferred ActiveStore\n\n4 169.254.179.147 16 WellKnown Link Tentative ActiveStore\n\nPS C:\\> Get-NetAdapter Wi-Fi | Get-NetIPAddress | FT -AutoSize\n\nifIndex IPAddress PrefixLength PrefixOrigin SuffixOrigin AddressState PolicyStore\n\n------- --------- ------------ ------------ ------------ ------------ -----------\n\n3 fe80::88f2:9970:4082:4118%3 64 WellKnown Link Preferred ActiveStore\n\n3 fded:b22c:44c4:1:f188:1e45:58e3:9242 128 RouterAdvertisement Random Preferred ActiveStore\n\n3 fded:b22c:44c4:1:88f2:9970:4082:4118 64 RouterAdvertisement Link Preferred ActiveStore\n\n3 192.168.1.2 24 Dhcp Dhcp Preferred ActiveStore\n\nPING\n\nDescription: Checks connectivity to a specific host. Commonly used to check for liveliness, but also used to measure network latency.\n\nPowerShell: Test-NetConnection\n\nSample command lines:\n\nTest-NetConnection www.microsoft.com\n\nTest-NetConnection -ComputerName www.microsoft.com -InformationLevel Detailed\n\nTest-NetConnection -ComputerName www.microsoft.com | Select -ExpandProperty PingReplyDetails | FT Address, Status, RoundTripTime\n\n1..10 | % { Test-NetConnection -ComputerName www.microsoft.com -RemotePort 80 } | FT -AutoSize\n\nSample output\n\nPS C:\\> Test-NetConnection www.microsoft.com\n\nComputerName : www.microsoft.com\n\nRemoteAddress : 104.66.197.237\n\nInterfaceAlias : Wi-Fi\n\nSourceAddress : 192.168.1.2\n\nPingSucceeded : True\n\nPingReplyDetails (RTT) : 22 ms\n\nPS C:\\> Test-NetConnection -ComputerName www.microsoft.com -InformationLevel Detailed\n\nComputerName : www.microsoft.com\n\nRemoteAddress : 104.66.197.237\n\nAllNameResolutionResults : 104.66.197.237\n\n2600:1409:a:396::2768\n\n2600:1409:a:39b::2768\n\nInterfaceAlias : Wi-Fi\n\nSourceAddress : 192.168.1.2\n\nNetRoute (NextHop) : 192.168.1.1\n\nPingSucceeded : True\n\nPingReplyDetails (RTT) : 14 ms\n\nPS C:\\> Test-NetConnection -ComputerName www.microsoft.com | Select -ExpandProperty PingReplyDetails | FT Address, Status, RoundTripTime -Autosize\n\nAddress Status RoundtripTime\n\n------- ------ -------------\n\n104.66.197.237 Success 22\n\nPS C:\\> 1..10 | % { Test-NetConnection -ComputerName www.microsoft.com -RemotePort 80 } | FT -AutoSize\n\nComputerName RemotePort RemoteAddress PingSucceeded PingReplyDetails (RTT) TcpTestSucceeded\n\n------------ ---------- ------------- ------------- ---------------------- ----------------\n\nwww.microsoft.com 80 104.66.197.237 True 17 ms True\n\nwww.microsoft.com 80 104.66.197.237 True 16 ms True\n\nwww.microsoft.com 80 104.66.197.237 True 15 ms True\n\nwww.microsoft.com 80 104.66.197.237 True 18 ms True\n\nwww.microsoft.com 80 104.66.197.237 True 20 ms True\n\nwww.microsoft.com 80 104.66.197.237 True 20 ms True\n\nwww.microsoft.com 80 104.66.197.237 True 20 ms True\n\nwww.microsoft.com 80 104.66.197.237 True 20 ms True\n\nwww.microsoft.com 80 104.66.197.237 True 15 ms True\n\nwww.microsoft.com 80 104.66.197.237 True 13 ms True\n\nNSLOOKUP\n\nDescription: Name server lookup. Mostly used to find the IP address for a given DNS name (or vice-versa). Has many, many options.\n\nPowerShell: Resolve-DnsName\n\nSample command lines:\n\nResolve-DnsName www.microsoft.com\n\nResolve-DnsName microsoft.com -type SOA\n\nResolve-DnsName microsoft.com -Server 8.8.8.8 –Type A\n\nSample output\n\nPS C:\\> Resolve-DnsName www.microsoft.com\n\nName Type TTL Section NameHost\n\n---- ---- --- ------- --------\n\nwww.microsoft.com CNAME 6 Answer toggle.www.ms.akadns.net\n\ntoggle.www.ms.akadns.net CNAME 6 Answer www.microsoft.com-c.edgekey.net\n\nwww.microsoft.com-c.edgekey.ne CNAME 6 Answer www.microsoft.com-c.edgekey.net.globalredir.akadns.net\n\nt\n\nwww.microsoft.com-c.edgekey.ne CNAME 6 Answer e10088.dspb.akamaiedge.net\n\nt.globalredir.akadns.net\n\nName : e10088.dspb.akamaiedge.net\n\nQueryType : AAAA\n\nTTL : 6\n\nSection : Answer\n\nIP6Address : 2600:1409:a:39b::2768\n\nName : e10088.dspb.akamaiedge.net\n\nQueryType : AAAA\n\nTTL : 6\n\nSection : Answer\n\nIP6Address : 2600:1409:a:396::2768\n\nName : e10088.dspb.akamaiedge.net\n\nQueryType : A\n\nTTL : 6\n\nSection : Answer\n\nIP4Address : 104.66.197.237\n\nPS C:\\> Resolve-DnsName microsoft.com -type SOA\n\nName Type TTL Section PrimaryServer NameAdministrator SerialNumber\n\n---- ---- --- ------- ------------- ----------------- ------------\n\nmicrosoft.com SOA 2976 Answer ns1.msft.net msnhst.microsoft.com 2015041801\n\nPS C:\\> Resolve-DnsName microsoft.com -Server 8.8.8.8 –Type A\n\nName Type TTL Section IPAddress\n\n---- ---- --- ------- ---------\n\nmicrosoft.com A 1244 Answer 134.170.188.221\n\nmicrosoft.com A 1244 Answer 134.170.185.46\n\nROUTE\n\nDescription: Shows the IP routes in a given system (also used to add and delete routes)\n\nPowerShell: Get-NetRoute (also New-NetRoute and Remove-NetRoute)\n\nSample command lines:\n\nGet-NetRoute -Protocol Local -DestinationPrefix 192.168*\n\nGet-NetAdapter Wi-Fi | Get-NetRoute\n\nSample output:\n\nPS C:\\WINDOWS\\system32> Get-NetRoute -Protocol Local -DestinationPrefix 192.168*\n\nifIndex DestinationPrefix NextHop RouteMetric PolicyStore\n\n------- ----------------- ------- ----------- -----------\n\n2 192.168.1.255/32 0.0.0.0 256 ActiveStore\n\n2 192.168.1.5/32 0.0.0.0 256 ActiveStore\n\n2 192.168.1.0/24 0.0.0.0 256 ActiveStore\n\nPS C:\\WINDOWS\\system32> Get-NetAdapter Wi-Fi | Get-NetRoute\n\nifIndex DestinationPrefix NextHop RouteMetric PolicyStore\n\n------- ----------------- ------- ----------- -----------\n\n2 255.255.255.255/32 0.0.0.0 256 ActiveStore\n\n2 224.0.0.0/4 0.0.0.0 256 ActiveStore\n\n2 192.168.1.255/32 0.0.0.0 256 ActiveStore\n\n2 192.168.1.5/32 0.0.0.0 256 ActiveStore\n\n2 192.168.1.0/24 0.0.0.0 256 ActiveStore\n\n2 0.0.0.0/0 192.168.1.1 0 ActiveStore\n\n2 ff00::/8 :: 256 ActiveStore\n\n2 fe80::d1b9:9258:1fa:33e9/128 :: 256 ActiveStore\n\n2 fe80::/64 :: 256 ActiveStore\n\n2 fded:b22c:44c4:1:d1b9:9258:1fa:33e9/128 :: 256 ActiveStore\n\n2 fded:b22c:44c4:1:c025:aa72:9331:442/128 :: 256 ActiveStore\n\n2 fded:b22c:44c4:1::/64 :: 256 ActiveStore\n\nTRACERT\n\nDescription: Trace route. Shows the IP route to a host, including all the hops between your computer and that host.\n\nPowerShell: Test-NetConnection –TraceRoute\n\nSample command lines:\n\nTest-NetConnection www.microsoft.com –TraceRoute\n\nTest-NetConnection outlook.com -TraceRoute | Select -ExpandProperty TraceRoute | % { Resolve-DnsName $_ -type PTR -ErrorAction SilentlyContinue }\n\nSample output:\n\nPS C:\\> Test-NetConnection www.microsoft.com–TraceRoute\n\nComputerName : www.microsoft.com\n\nRemoteAddress : 104.66.197.237\n\nInterfaceAlias : Wi-Fi\n\nSourceAddress : 192.168.1.2\n\nPingSucceeded : True\n\nPingReplyDetails (RTT) : 16 ms\n\nTraceRoute : 192.168.1.1\n\n10.0.0.1\n\nTimedOut\n\n68.86.113.181\n\n69.139.164.2\n\n68.85.240.94\n\n68.86.93.165\n\n68.86.83.126\n\n104.66.197.237\n\nPS C:\\> Test-NetConnection outlook.com -TraceRoute | Select -ExpandProperty TraceRoute | % { Resolve-DnsName $_ -type PTR -ErrorAction SilentlyContinue }\n\nName Type TTL Section NameHost\n\n---- ---- --- ------- --------\n\n125.144.85.68.in-addr.arpa PTR 7200 Answer te-0-1-0-10-sur02.bellevue.wa.seattle.comcast.net\n\n142.96.86.68.in-addr.arpa PTR 4164 Answer be-1-sur03.bellevue.wa.seattle.comcast.net\n\n6.164.139.69.in-addr.arpa PTR 2469 Answer be-40-ar01.seattle.wa.seattle.comcast.net\n\n165.93.86.68.in-addr.arpa PTR 4505 Answer be-33650-cr02.seattle.wa.ibone.comcast.net\n\n178.56.167.173.in-addr.arpa PTR 7200 Answer as8075-1-c.seattle.wa.ibone.comcast.net\n\n248.82.234.191.in-addr.arpa PTR 3600 Answer ae11-0.co2-96c-1a.ntwk.msn.net\n\nNETSTAT\n\nDescription: Shows current TCP/IP network connections.\n\nPowerShell: Get-NetTCPConnection\n\nSample command lines:\n\nGet-NetTCPConnection | Group State, RemotePort | Sort Count | FT Count, Name –Autosize\n\nGet-NetTCPConnection | ? State -eq Established | FT –Autosize\n\nGet-NetTCPConnection | ? State -eq Established | ? RemoteAddress -notlike 127* | % { $_; Resolve-DnsName $_.RemoteAddress -type PTR -ErrorAction SilentlyContinue }\n\nSample output:\n\nPS C:\\> Get-NetTCPConnection | Group State, RemotePort | Sort Count | FT Count, Name -Autosize\n\nCount Name\n\n----- ----\n\n1 SynSent, 9100\n\n1 Established, 40028\n\n1 Established, 65001\n\n1 Established, 27015\n\n1 Established, 5223\n\n1 Established, 49227\n\n1 Established, 49157\n\n1 Established, 49156\n\n1 Established, 12350\n\n1 Established, 49200\n\n2 Established, 5354\n\n2 TimeWait, 5357\n\n2 Established, 80\n\n3 Established, 443\n\n36 Listen, 0\n\nPS C:\\> Get-NetTCPConnection | ? State -eq Established | FT -Autosize\n\nLocalAddress LocalPort RemoteAddress RemotePort State AppliedSetting\n\n------------ --------- ------------- ---------- ----- --------------\n\n127.0.0.1 65001 127.0.0.1 49200 Established Internet\n\n192.168.1.2 59619 91.190.218.57 12350 Established Internet\n\n192.168.1.2 57993 213.199.179.175 40028 Established Internet\n\n192.168.1.2 54334 17.158.28.49 443 Established Internet\n\n192.168.1.2 54320 96.17.8.170 80 Established Internet\n\n192.168.1.2 54319 23.3.105.144 80 Established Internet\n\n192.168.1.2 54147 65.55.68.119 443 Established Internet\n\n192.168.1.2 49257 17.143.162.214 5223 Established Internet\n\n127.0.0.1 49227 127.0.0.1 27015 Established Internet\n\n127.0.0.1 49200 127.0.0.1 65001 Established Internet\n\n192.168.1.2 49197 157.56.98.92 443 Established Internet\n\n127.0.0.1 49157 127.0.0.1 5354 Established Internet\n\n127.0.0.1 49156 127.0.0.1 5354 Established Internet\n\n127.0.0.1 27015 127.0.0.1 49227 Established Internet\n\n127.0.0.1 5354 127.0.0.1 49157 Established Internet\n\n127.0.0.1 5354 127.0.0.1 49156 Established Internet\n\nPS C:\\> Get-NetTCPConnection | ? State -eq Established | ? RemoteAddress -notlike 127* | % { $_; Resolve-DnsName $_.RemoteAddress -type PTR -ErrorAction SilentlyContinue }\n\nLocalAddress LocalPort RemoteAddress RemotePort State AppliedSetting\n\n------------ --------- ------------- ---------- ----- --------------\n\n192.168.1.2 59619 91.190.218.57 12350 Established Internet\n\n192.168.1.2 57993 213.199.179.175 40028 Established Internet\n\n192.168.1.2 54334 17.158.28.49 443 Established Internet\n\n192.168.1.2 54320 96.17.8.170 80 Established Internet\n\nName : 170.8.17.96.in-addr.arpa\n\nQueryType : PTR\n\nTTL : 86377\n\nSection : Answer\n\nNameHost : a96-17-8-170.deploy.akamaitechnologies.com\n\n192.168.1.2 54319 23.3.105.144 80 Established Internet\n\nName : 144.105.3.23.in-addr.arpa\n\nQueryType : PTR\n\nTTL : 7\n\nSection : Answer\n\nNameHost : a23-3-105-144.deploy.static.akamaitechnologies.com\n\n192.168.1.2 54147 65.55.68.119 443 Established Internet\n\nName : 119.68.55.65.in-addr.arpa\n\nQueryType : PTR\n\nTTL : 850\n\nSection : Answer\n\nNameHost : snt404-m.hotmail.com\n\n192.168.1.2 49257 17.143.162.214 5223 Established Internet\n\n192.168.1.2 49197 157.56.98.92 443 Established Internet\n\nName : 92.98.56.157.in-addr.arpa\n\nQueryType : PTR\n\nTTL : 3600\n\nSection : Answer\n\nNameHost : bn1wns1011516.wns.windows.com\n\nNote: Including a PDF version of the output in case you can't see it too well on the web with the lines wrapping and all. See below.\n\n↧\n\n↧\n\nThe Deprecation of SMB1 – You should be planning to get rid of this old SMB dialect\n\nI regularly get a question about when will SMB1 be completely removed from Windows. This blog post summarizes the current state of this old SMB dialect in Windows client and server.\n\n1) SMB1 is deprecated, but not yet removed\n\nWe already added SMB1 to the Windows Server 2012 R2 deprecation list in June 2013. That does not mean it’s fully removed, but that the feature is “planned for potential removal in subsequent releases”. You can find the Windows Server 2012 R2 deprecation list at https://technet.microsoft.com/en-us/library/dn303411.aspx.\n\n2) Windows Server 2003 is going away\n\nThe last supported Windows operating system that can only negotiate SMB1 is Windows Server 2003. All other currently supported Windows operating systems (client and server) are able to negotiate SMB2 or higher. Windows Server 2003 support will end on July 14 of this year, as you probably heard.\n\n3) SMB versions in current releases of Windows and Windows Server\n\nAside from Windows Server 2003, all other versions of Windows (client and server) support newer versions of SMB:\n\nWindows Server 2008 or Windows Vista – SMB1 or SMB2\n\nWindows Server 2008 R2 or Windows 7 – SMB1 or SMB2\n\nWindows Server 2012 and Windows 8 – SMB1, SMB2 or SMB3\n\nWindows Server 2012 R2 and Windows 8.1 – SMB1, SMB2 or SMB3\n\nFor details on specific dialects and how they are negotiated, see this blog post on SMB dialects and Windows versions.\n\n4) SMB1 removal in Windows Server 2012 R2 and Windows 8.1\n\nIn Windows Server 2012 R2 and Windows 8.1, we made SMB1 an optional component that can be completely removed. That optional component is enabled by default, but a system administrator now has the option to completely disable it. For more details, see this blog post on how to completely remove SMB1 in Windows Server 2012 R2.\n\n5) SMB1 removal in Windows 10 Technical Preview and Windows Server Technical Preview\n\nSMB1 will continue to be an optional component enabled by default with Windows 10, which is scheduled to be released in 2015. The next version of Windows Server, which is expected in 2016, will also likely continue to have SMB as an optional component enabled by default. In that release we will add an option to audit SMB1 usage, so IT Administrators can assess if they can disable SMB1 on their own.\n\n6) What you should be doing about SMB1\n\nIf you are a systems administrator and you manage IT infrastructure that relies on SMB1, you should prepare to remove SMB1. Once Windows Server 2003 is gone, the main concern will be third party software or hardware like printers, scanners, NAS devices and WAN accelerators. You should make sure that any new software and hardware that requires the SMB protocol is able to negotiate newer versions (at least SMB2, preferably SMB3). For existing devices and software that only support SMB1, you should contact the manufacturer for updates to support the newer dialects.\n\nIf you are a software or hardware manufacturer that has a dependency on the SMB1 protocol, you should have a clear plan for removing any such dependencies. Your hardware or software should be ready to operate in an environment where Windows clients and servers only support SMB2 or SMB3. While it’s true that today SMB1 still works in most environments, the fact that the feature is deprecated is a warning that it could go away at any time.\n\n7) Complete removal of SMB1\n\nSince SMB1 is a deprecated component, we will assess for its complete removal with every new release.\n\n↧\n\nSMB3 Networking Links for Windows Server 2012 R2\n\nSomeone asked me for a good collection of links about SMB3 Networking, including SMB Multichannel, SMB Direct (SMB over RDMA) and SMB Performance.\n\nHere’s what I offered:\n\nSMB Multichannel\n\nTechEd 2012 - SMB Multichannel and NIC Teaming (SMB Multichannel covered on the second half)\n\nJose’s Blog - The basics of SMB Multichannel, a feature of Windows Server 2012 and SMB 3.0\n\nTechNet Radio - SMB Multi-channel Basics for Windows Server 2012 and SMB 3.0 (October 8th 2012)\n\nJose’s Blog - Troubleshooting File Server Networking Issues in Windows Server 2012 R2\n\nJose's Blog - Networking configurations for Hyper-V over SMB in Windows Server 2012 and Windows Server 2012 R2\n\nTechEd 2014 NA - DCIM-B337 - File Server Networking for a Private Cloud Storage Infrastructure in Windows Server 2012 R2 (includes overview of the Hyper-V over SMB scenario in Windows Server 2012 R2 with focus on Networking features)\n\nSMB Direct\n\nTechEd 2012 - SMB Direct (SMB over RDMA) and Cluster-in-a-box (SMB direct covered on the second half)\n\nTechNet – Deploy SMB Direct with InfiniBand Network Adapters\n\nTechNet – Deploy SMB Direct with RoCE Network Adapters\n\nTechNet – Deploy SMB Direct with Ethernet (iWARP) Network Adapters\n\nSMB Performance\n\nJose's Blog - MMS 2013 Demo: Hyper-V over SMB at high throughput with SMB Direct and SMB Multichannel\n\nJose’s Blog - Hyper-V over SMB – Performance considerations\n\nTechEd 2013 - MDC-B335 - Understanding the Hyper-V over SMB Scenario, Configurations, and End-to-End Performance (includes new SMB features in Windows Server 2012 R2)\n\nJose’s Blog - DiskSpd, PowerShell and storage performance: measuring IOPs, throughput and latency for both local disks and SMB file shares\n\nJose’s Blog - Using file copy to measure storage performance – Why it’s not a good idea and what you should do instead\n\nPerformance White Papers\n\nWindows Server 2012 File Server Performance with EchoStreams FlacheSAN2 and Mellanox ConnectX-3: http://www.microsoft.com/en-us/download/details.aspx?id=38432\n\nWindows File Server SMB SQL OLTP Performance: http://www.microsoft.com/en-us/download/details.aspx?id=36793\n\nBuilding High Performance Storage for Hyper-V Cluster on Scale-Out File Servers using Violin Windows Flash Arrays: http://www.microsoft.com/en-us/download/details.aspx?id=44300\n\nMicrosoft Cloud Platform System Storage Performance: http://blogs.technet.com/b/windowsserver/archive/2015/03/09/microsoft-cloud-platform-system-storage-performance-overview-now-available.aspx\n\nSMB Encryption\n\nTechNet Radio - SMB 3.0 Encryption Overview (November 26th 2012)\n\nSMB Signing\n\nJose’s Blog - The Basics of SMB Signing (covering both SMB1 and SMB2)\n\n↧\n\nWhat’s new in SMB 3.1.1 in the Windows Server 2016 Technical Preview 2\n\n1. Introduction\n\nEvery new version of Windows brings updates to our main remote file protocol, known as SMB (Server Message Block).\n\nIf you’re not familiar with it, you can find some information in this previous blog post: Windows Server 2012 R2: Which version of the SMB protocol (SMB 1.0, SMB 2.0, SMB 2.1, SMB 3.0 or SMB 3.02) are you using?\n\nIn this blog post, you’ll see what changed with the new version of SMB that comes with the Windows 10 Insider Preview released in late April 2015 and the Windows Server 2016 Technical Preview 2 released in early May 2015.\n\n2. Protocols Changes in SMB 3.1.1\n\nThis section covers changes in SMB 3.1.1 related to the protocol itself.\n\nThe Protocol Preview document fully describes these changes: [MS-SMB2-Diff]- Server Message Block (SMB) Protocol Versions 2 and 3, but you can see the highlights below.\n\n2.1. Pre-Authentication Integrity\n\nPre-authentication integrity provides improved protection from a man-in-the-middle attacker tampering with SMB’s connection establishment and authentication messages.\n\nPre-Auth integrity verifies all the “negotiate” and “session setup” exchanges used by SMB with a strong cryptographic hash (SHA-512).\n\nIf your client and your server establish an SMB 3.1.1 session, you can be sure that no one has tampered with the connection and session properties.\n\nUsing SMB signing on top of an SMB 3.1.1 session protects you from an attacker tampering with any packets.\n\nUsing SMB encryption on top of an SMB 3.1.1 session protects you from an attacker tampering with or eavesdropping on any packets.\n\nAlthough there is a cost to enable SMB signing or SMB encryption, we highly recommend enabling one of them.\n\nNote: While these changes improve overall security, they might interfere with some solutions that rely on modifying SMB network traffic, like certain kinds of WAN accelerators.\n\n2.2. SMB Encryption Improvements\n\nSMB Encryption, introduced with SMB 3.0, used a fixed cryptographic algorithm: AES-128-CCM.\n\nSince then, we have learned that AES-128-GCM performs better in most modern processors.\n\nTo take advantage of that, SMB 3.1.1 offers a mechanism to negotiate the crypto algorithm per connection, with options for AES-128-CCM and AES-128-GCM.\n\nWe made AES-128-GCM the default for new Windows versions, while older versions will continue to use AES-128-CCM.\n\nWith this flexible infrastructure for negotiation in place, we could add more algorithms in the future.\n\nWe observed that moving from AES-128-CCM to AES-128-GCM showed a 2x improvement in certain scenarios, like copying large files over an encrypted SMB connection.\n\n2.3. Cluster Dialect Fencing\n\nProvides support for cluster rolling upgrade for Scale-Out File Servers. For details, see http://technet.microsoft.com/en-us/library/dn765474.aspx#BKMK_RollingUpgrade\n\nIn this new scenario, a single SMB server appears to support different maximum dialects of SMB, depending on whether the SMB client is accessing clustered or non-clustered file shares.\n\nFor local, non-clustered file shares, the server offers up to 3.1.1 during dialect negotiation.\n\nFor clustered shares, if the cluster is in mixed mode (before upgrading the cluster functional level), it will offer up to 3.0.2 during dialect negotiation.\n\nAfter you upgrade the cluster functional level, it then offers all clients the new 3.1.1 dialect.\n\n3. Other SMB changes that are not protocol-related\n\nThere are other changes in Windows that change the SMB Client or SMB Server implementation, but not the protocol itself.\n\nHere are a few important changes in that category:\n\n3.1. Removing RequireSecureNegotiate setting\n\nIn previous versions of SMB, we introduced “Secure Negotiate”, where the SMB client and server verify integrity of the SMB negotiate request and response messages.\n\nBecause some third-party implementations of SMB did not correctly perform this negotiation, we introduced a switch to disable “Secure Negotiate”. We explain this in more detail in this blog post.\n\nSince we have learned via our SMB PlugFests that third parties have fixed their implementations, we are removing the option to bypass “Secure Negotiate” and SMB always performs negotiate validation if the connection’s dialect is 2.x.x or 3.0.x.\n\nNote 1: For SMB 3.1.1 clients and servers, the new Pre-Authentication Integrity feature (described in item 2.1 above) supersedes “Secure Negotiate” with many advantages.\n\nNote 2: With the new release, any third party SMB 2.x.x or SMB 3.0.x implementations that do not implement “Secure Negotiate” will be unable to connect to Windows.\n\nNote 3: While this change improves overall security, it might interfere with some solutions that rely on modifying SMB network traffic, like certain kinds of WAN accelerators.\n\n3.2. Dialects with non-zero revision number now reported with the x.y.z notation\n\nAs you probably noticed throughout this blog post, we’re using 3 separate digits to notate the version of SMB.\n\nIn the past, you might have seen us talk about SMB 3.02. Now we call that SMB 3.0.2.\n\nNote that there is no change when the revision number is 0, like SMB 2.1 or SMB 3.0 (we don’t call them SMB 2.1.0 or SMB 3.0.0).\n\nThis new format avoids confusion when comparing SMB dialects and better represents the actual version information used by SMB.\n\nYou can use the Get-SmbConnection cmdlet on the Windows SMB client to report the currently used SMB dialects.\n\n4. Which protocol is negotiated?\n\nPlease note that SMB clients and SMB servers negotiate the SMB dialect that they will use based on each side’s offer.\n\nHere’s a table to help you understand what version you will end up using, depending on what Windows version is running as the SMB client and what version of Windows is running as the SMB server:\n\n* WS = Windows Server\n\nNote: Earlier Windows 10 and Windows Server 2016 previews used SMB dialect version 3.1.\n\n5. Considering your options for removing the older SMB1 protocol\n\nWhen Windows Server 2003 hits the end of its extended support later this year, the last supported version of Windows that only works with SMB1 will be gone.\n\nSMB1 is already a separate component in Windows that you can completely remove. However, up to this point, Windows still enables it by default for compatibility reasons.\n\nThe next logical step (which we are planning for a future release of Windows) will be to ship SMB1 disabled by default, but still available if necessary.\n\nTo help with this transition, you can now enable auditing of SMB1 traffic in your SMB server using PowerShell. This will alert you via events if any clients are still using SMB1.\n\nTo enable auditing of SMB1 traffic, use the cmdlet: Set-SmbServerConfiguration –AuditSmb1Access $true\n\nTo view the SMB1 events, use the cmdlet: Get-WinEvent -LogName Microsoft-Windows-SMBServer/Audit\n\nIf you feel confident that there are no SMB1 clients in your network, you can uninstall SMB1 from your server using the cmdlet: Remove-WindowsFeature FS-SMB1\n\n6. Conclusion\n\nI hope this blog post helps you prepare for the upcoming changes in SMB.\n\nWe also recommend that you download the SNIA Tutorial on SMB 3, which we recently updated to include details of the 3.1.1 dialect. You can find a copy of that tutorial at http://www.snia.org/sites/default/files2/DSI2015/presentations/FileSystems/JoseBarreto_SMB3_remote%20file%20protocol.pdf\n\n↧\n\nWindows Server 2016 Technical Preview 2 (TP2) and Storage Quality of Service (QoS)\n\nStorage Quality of Service (Storage QoS) is a new feature in the upcoming Windows Server 2016 that provides a way to centrally monitor and manage storage performance for virtual machines. The feature automatically improves storage resource fairness between multiple virtual machines using the same file server cluster and allows specific minimum and maximum performance goals (Storage QoS policies) to be configured in units of normalized 8KB IOPs.\n\nWith the release of Windows Server 2016 Technical Preview 2 (TP2), the Storage QoS feature is available for testing. Virtual Machine Manager 2016 TP2 also includes the ability to manage Storage QoS. Find below some important links to review so you can experiment with Storage QoS in Windows Server 2016 TP2:\n\nDownload link for Windows Server 2016 TP2 and System Center 2016 TP2:\n\nhttps://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-technical-preview\n\nhttps://www.microsoft.com/en-us/evalcenter/evaluate-system-center-technical-preview\n\nTechNet Guide for Windows Server 2016 TP2 and Storage QoS:\n\nStorage Quality of Service in Windows Server Technical Preview\n\nMicrosoft Ignite 2015 session on Windows Server 2016 TP2 and Storage QoS:\n\nHyper-V Storage Performance with Storage Quality of Service\n\nStorage QoS demos (videos):\n\nWindows Server 2016 TP2 Storage QoS: PowerShell Monitoring\n\nWindows Server 2016 TP2 Storage QoS: Managing policies with VMM\n\nWindows Server 2016 TP2 Storage QoS: Managing Policies with PowerShell\n\nWindows Server 2016 TP2 Storage QoS: Managing with a PowerShell script\n\nStorage QoS script samples\n\nTechNet: Storage Quality of Service in Windows Server Technical Preview\n\nBlog: PowerShell script used in the Windows Server 2016 TP2 Storage QoS demo at MSIgnite\n\n↧\n\n↧\n\nPowerShell script used in the Windows Server 2016 TP2 Storage QoS demo at MSIgnite\n\nThis is the Windows PowerShell script I used in the Microsoft Ignite 2015 session on Storage QoS: Hyper-V Storage Performance with Storage Quality of Service. You can also find that demo video by itself at Windows Server 2016 TP2 Storage QoS: Managing with a PowerShell script.\n\nThe script is fairly straightforward, but there a few interesting points to make about what it does:\n\nThe script is designed to run from a separate management computer, so all Storage QoS cmdlets use the –CimSession option to point to the Scale-Out File Server.\n\nThere is a handy function called “Get-PolicyName” that translates a PolicyID into a PolicyName by using Get-StorageQosPolicy.\n\nIt shows how to filter output of Get-StorageQosFlow. It remove the default policy entries from the list and and sorts the list by VM name (InitiatorName).\n\nIt offers a good example of how to use Expressions to format the output of Get-StorageQosFlow.\n\nIt uses the $LastChange variable to later show the time passed since the QoS policies were changed with Set-StorageQosPolicy, since the Get-StorageQosFlow is an average for the last 5 minutes.\n\nHere’s the script:\n\n# QosDemo.ps1 – Storage QoS demo script for Microsoft Ignite 2015\n\nFunction Get-PolicyName([string] $PolicyID)\n\n{\n\n$Policy = Get-StorageQosPolicy -CimSession JOSEBDA-FS -PolicyID $PolicyID\n\nReturn $Policy.Name\n\n}\n\n$LastChange = Get-Date\n\n$Option = \"R\"\n\nWhile ($Option -ne \"Q\") {\n\nClear-Host\n\nWrite-Host -ForegroundColor Yellow \"C:\\> Get-StorageQosFlow |”\n\nWrite-Host -ForegroundColor Yellow “FT InitiatorNodeName, InitiatorName, FilePath, MinimumIOPS, MaximumIOPS, InitiatorIOPS, InitiatorLatency, PolicyID\"\n\nGet-StorageQosFlow -CimSession JOSEBDA-FS | ? InitiatorName -ne \"\" | Sort InitiatorName |\n\nFT @{Expression={$_.InitiatorNodeName.Split(\".\")[0]}; Label=\"Node\"},\n\n@{Expression={$_.InitiatorName}; Label=\"VM\"},\n\n@{Expression={$_.FilePath.Split(\"\\\")[4]}; Label=\"File\"},\n\n@{Expression={$_.MinimumIOPS}; Label=\"MinIOPS\"},\n\n@{Expression={$_.MaximumIOPS}; Label=\"MaxIOPS\"},\n\n@{Expression={$_.InitiatorIOPS}; Label=\"VM IOPS\"},\n\n@{Expression={[int] $_.InitiatorLatency}; Label=\"Latency\"},\n\n@{Expression={(Get-PolicyName $_.PolicyID)}; Label=\"Policy\"},\n\nPolicyID -AutoSize\n\n$TimeDiff = (Get-Date) - $LastChange\n\n$Minutes = [System.Math]::Round($TimeDiff.TotalMinutes, 2)\n\n$Seconds = [System.Math]::Round($TimeDiff.TotalSeconds, 2)\n\nWrite-Host \"IOPS and Latency are 5-minute averages. Last policy change $Seconds seconds ago ($Minutes minutes ago).\"\n\nWrite-Host\n\nWrite-Host -ForegroundColor Yellow \"C:\\> Get-StorageQosPolicy | FT Name, PolicyType, MinimumIOPS, MaximumIOPS, PolicyID\"\n\nGet-StorageQosPolicy -CimSession JOSEBDA-FS | FT Name, PolicyType, MinimumIOPS, MaximumIOPS, PolicyID -AutoSize\n\nWrite-Host -NoNewline \"Command: Quit, Refresh, Zero, Low, High: \"\n\n$Option = Read-Host\n\n$Option = $Option.ToUpper()[0]\n\nSwitch ($Option) {\n\n\"Z\" {\n\nSet-StorageQosPolicy -CimSession JOSEBDA-FS -Name SilverVM -MinimumIops 0 -MaximumIops 0\n\nSet-StorageQosPolicy -CimSession JOSEBDA-FS -Name GoldVM -MinimumIops 0 -MaximumIops 0\n\n$LastChange = Get-Date\n\n}\n\n\"L\" {\n\nSet-StorageQosPolicy -CimSession JOSEBDA-FS -Name SilverVM -MinimumIops 200 -MaximumIops 500\n\nSet-StorageQosPolicy -CimSession JOSEBDA-FS -Name GoldVM -MinimumIops 500 -MaximumIops 1000\n\n$LastChange = Get-Date\n\n}\n\n\"H\" {\n\nSet-StorageQosPolicy -CimSession JOSEBDA-FS -Name SilverVM -MinimumIops 500 -MaximumIops 1000\n\nSet-StorageQosPolicy -CimSession JOSEBDA-FS -Name GoldVM -MinimumIops 1000 -MaximumIops 5000\n\n$LastChange = Get-Date\n\n}\n\n} #end switch\n\n} #end while\n\n↧\n\nMicrosoft Ignite 2015 sessions related to OneDrive and SharePoint\n\nMicrosoft Ignite 2015 was a great event, but there were so many sessions that it was truly impossible to watch everything that looked interesting. However, all sessions were recorded and by now they should be available on Channel 9 for streaming.\n\nEven with all the recordings available, it's hard to find the links to all sessions for a given topic. For those interested in SharePoint Server and OneDrive, I compiled here is a list of Microsoft Ignite 2015 sessions related those topics, with links to the Channel9 page with the video recording and slides.\n\nCodeTitleFND2203The Evolution of SharePoint: Overview and RoadmapBRK2192A File's Future with OneDrive for BusinessBRK4110I Sync, Therefore I Am: A Deep Dive on OneDrive Sync Capabilities and RoadmapBRK2188What's New for IT Professionals in SharePoint Server 2016BRK4111Future-Proofing Your On-Premises SharePoint DevelopmentBRK3176Effective Search Deployment and Operations in SharePoint Server 2013BRK3164Deep Dive into Safe SharePoint Branding in Office 365 Using Repeatable Patterns and PracticesBRK2102How to Decide When to Use SharePoint and Yammer and Office 365 Groups and Outlook and SkypeBRK2142Microsoft SharePoint Data Security and ComplianceBRK2163MVP Panel: SharePoint On-Premises, Online and Everything in BetweenBRK4124Search Extensibility in SharePoint 2013BRK3134Implementing Next Generation SharePoint Hybrid Search with the Cloud Search Service ApplicationBRK3190Designing and Applying Information Architecture for Microsoft SharePoint and Office 365BRK3115Upgrade to Microsoft SharePoint 2013 and Ready for Cloud PotentialBRK4125Transforming Your SharePoint Full Trust Code to the Office App ModelBRK2130Ernst & Young: Microsoft SharePoint Server 2013 Search AdoptionBRK3201The Social Intranet: Integrate Yammer into Your Microsoft SharePoint ExperienceBRK2169Best Practices for Design and Performance in SharePoint OnlineBRK2150Proven Ways to Build Robust, No-Code Solutions in Microsoft SharePointBRK4116Authentication Patterns for SharePoint Server 2013, Office 365 and OneDrive for BusinessBRK4113Hybrid Business Connectivity Services with SharePoint OnlineBRK2129Driving User Adoption from a Technical Standpoint for SharePoint, Exchange and Office 365BRK4106Troubleshooting Hybrid Configurations and Workloads with SharePoint 2013 and Office 365BRK4131Microsoft SharePoint Server with SQL Server: Now Better Than EverBRK3182Microsoft OneDrive for Business: Most Secure for Your Data in the CloudBRK2206SharePoint UNPLUGGED! Questions Answered on Anything You Heard This WeekBRK3135OneDrive for Business for B2B External Sharing, IT-Lead Cross-Org CollaborationBRK3123SharePoint Online and OneDrive for Business Management and ControlBRK2140DSM: Their Journey to Microsoft SharePoint Online and Office365BRK3122Building Solutions and Apps That Leverage OneDrive for BusinessBRK2196Re-Thinking Attachments: Collaborating in Outlook with OneDriveBRK3153Migration to SharePoint Online Best Practices and New API InvestmentsBRK4101Elastic SharePoint Storage with StorSimple and Microsoft AzureBRK3210Advanced Enterprise Content Management and Classification in SharePoint On-Premises and Office 365BRK3124SharePoint 2013 and Azure IaaS: Better TogetherBRK4130Developing Microsoft Office and SharePoint Solutions in a Hybrid WorldBRK3183Configuring OneDrive for Business Deployment: Options and Best PracticesBRK2156Virtusa: Establishing SharePoint Hybrid for Social, Search and Personal StorageBRK4104Setting Up Your On-Premises SharePoint Environment for Custom App Development\n\nIf my calculations are correct, it would take you over 48 hours to watch all 39 sessions. So get started right now :-). Also, let me know if I missed any sessions on the SharePoint and OneDrive topics.\n\n↧\n\nDo you have a suggestion? Check the User Voice sites for several Microsoft products and services\n\nSeveral teams at Microsoft are now using a User Voice site as your place to suggest ideas on how to improve specific products and services. These sites make it easier for the teams to receive your suggestions and listen to what you say. Here are the User Voice sites that I could find:\n\nASP Net – http://aspnet.uservoice.com\n\nBing Ads – http://bingads.uservoice.com\n\nCortana – http://cortana.uservoice.com\n\nLumia Beta Apps – http://lumiabetaapps.uservoice.com\n\nMicrosoft Access – http://msaccess.uservoice.com\n\nMicrosoft SQL Azure – http://manage.uservoice.com\n\nMultilingual App Toolkit – http://multilingualapptoolkit.uservoice.com\n\nOffice - http://office.uservoice.com\n\nOffice Developer Platforms – http://officespdev.uservoice.com\n\nOffice Forms – http://officeforms.uservoice.com\n\nOneNote – http://onenote.uservoice.com\n\nOneDrive – http://onedrive.uservoice.com\n\nOutlook - http://outlook.uservoice.com/\n\nOutlook Web Access – http://owa.uservoice.com\n\nSharePoint Server – http://sharepoint.uservoice.com\n\nVisual Studio – http://visualstudio.uservoice.com\n\nWeb Essentials – http://webessentials.uservoice.com\n\nWindows – http://windows.uservoice.com\n\nWindows Azure – http://windowsazure.uservoice.com\n\nWindows Phone – http://windowsphone.uservoice.com\n\nWindows Phone Dev – http://wpdev.uservoice.com\n\nWindows Server – http://windowsserver.uservoice.com\n\nXbox – http://xbox.uservoice.com\n\nXbox Music – http://xboxmusic.uservoice.com\n\nXbox Video – http://xboxvideo.uservoice.com\n\nBefore you post, be sure to check out the ideas others have suggested and vote on your favorites. If you have a suggestion that’s not listed yet, you can submit your own. But keep suggestions focused on a single topic so the team can track and respond accordingly.\n\nStandard Disclaimer\n\nPlease note that these suggestion boxes are moderated and they are voluntary participation-based projects. If your submission is not a product feature suggestion, it may be removed. Please do not send any novel or patentable ideas, copyrighted materials, samples or demos which you do not want to grant a license to Microsoft. Your submission is subject to licensing terms like the Microsoft Windows License Terms.\n\n↧\n\nMicrosoft SharePoint Server 2013 PowerShell cmdlet popularity\n\nIf you follow the blog, you probably saw a little PowerShell script I published a while back to measure the popularity of the cmdlets in a certain module using a Bing search. As an example, that blog showed the popularity of the cmdlets in the SmbShare module.\n\nNow I got curious about how the cmdlets in other modules would rank, so I spun up some Azure virtual machines to try some other modules. I decided to try the Microsoft SharePoint Server 2013 module (named Microsoft.SharePoint.PowerShell).\n\nThe results are listed below:\n\nPS C:\\> .\\PopularCmdlet.ps1 | Sort BingCount -Descending | FT -AutoSize\n\nCmdletName BingCount\n\n---------- ---------\n\nNew-SPSite 480000\n\nGet-SPWeb 187000\n\nGet-SPSite 114000\n\nGet-SPWebApplication 70700\n\nNew-SPTrustedSecurityTokenIssuer 48300\n\nAdd-SPShellAdmin 45200\n\nMount-SPContentDatabase 44500\n\nEnable-SPFeature 44300\n\nImport-SPWeb 43300\n\nRestore-SPSite 42900\n\nAdd-SPSolution 40700\n\nInstall-SPSolution 38000\n\nGet-SPUser 37800\n\nExport-SPWeb 37200\n\nNew-SPConfigurationDatabase 36700\n\nGet-SPServiceInstance 35800\n\nGet-SPServiceApplication 35600\n\nBackup-SPSite 35200\n\nGet-SPFarm 33000\n\nRegister-SPWorkflowService 31100\n\nNew-SPWeb 30200\n\nGet-SPDatabase 30100\n\nUpgrade-SPContentDatabase 29900\n\nTest-SPContentDatabase 29800\n\nNew-SPWebApplication 29700\n\nMove-SPUser 28500\n\nGet-SPFeature 27700\n\nEnable-SPUserLicensing 26600\n\nGet-SPEnterpriseSearchServiceApplication 25200\n\nGet-SPUserLicensing 24700\n\nBackup-SPFarm 24600\n\nDisable-SPUserLicensing 24400\n\nSet-SPUser 24300\n\nDisable-SPFeature 24200\n\nCopy-SPSite 24200\n\nGet-SPContentDatabase 23300\n\nUninstall-SPSolution 23100\n\nUpdate-SPSolution 21600\n\nRemove-SPSite 21300\n\nSet-SPSite 20800\n\nGet-SPTimerJob 20600\n\nGet-SPManagedAccount 20400\n\nNew-SPWOPIBinding 19500\n\nUpdate-SPProfilePhotoStore 19400\n\nStart-SPServiceInstance 19300\n\nNew-SPUser 18800\n\nStop-SPAssignment 18700\n\nNew-SPTrustedIdentityTokenIssuer 18400\n\nSet-SPEnterpriseSearchServiceApplication 18100\n\nNew-SPManagedAccount 17400\n\nNew-SPEnterpriseSearchServiceApplication 17300\n\nGet-SPLogEvent 17000\n\nNew-SPCentralAdministration 16900\n\nRemove-SPUser 16300\n\nGet-SPEnterpriseSearchServiceInstance 16300\n\nNew-SPProfileServiceApplication 16100\n\nGet-SPSecurityTokenServiceConfig 16000\n\nNew-SPContentDatabase 15700\n\nInstall-SPFeature 15300\n\nRestore-SPFarm 15200\n\nGet-SPSolution 14800\n\nGet-SPShellAdmin 14600\n\nStart-SPEnterpriseSearchServiceInstance 14500\n\nGet-SPServer 14200\n\nConnect-SPConfigurationDatabase 14200\n\nSet-SPWeb 14100\n\nStop-SPServiceInstance 13800\n\nDismount-SPContentDatabase 13700\n\nGet-SPServiceApplicationPool 13700\n\nNew-SPServiceApplicationPool 13500\n\nConvert-SPWebApplication 13500\n\nGet-SPServiceContext 13500\n\nMerge-SPLogFile 13500\n\nSet-SPManagedAccount 13400\n\nStart-SPAssignment 13100\n\nAdd-SPDistributedCacheServiceInstance 12900\n\nUpgrade-SPSite 12800\n\nGet-SPServiceApplicationProxy 12800\n\nRemove-SPWeb 12600\n\nRemove-SPSolution 12400\n\nGet-SPWOPIBinding 12000\n\nGet-SPWebTemplate 11700\n\nStart-SPAdminJob 11400\n\nGet-SPEnterpriseSearchService 11000\n\nNew-SPClaimsPrincipal 10900\n\nRemove-SPWOPIBinding 10800\n\nRestore-SPDeletedSite 10800\n\nGet-SPProduct 10600\n\nInstall-SPService 10600\n\nUninstall-SPFeature 10600\n\nEnable-SPSessionStateService 10500\n\nSet-SPWebApplication 10400\n\nNew-SPUsageApplication 10400\n\nRemove-SPDeletedSite 10400\n\nImport-SPMetadataWebServicePartitionData 10100\n\nNew-SPMetadataServiceApplication 10100\n\nSet-SPEnterpriseSearchTopology 10100\n\nNew-SPSecureStoreServiceApplication 10000\n\nGet-SPDeletedSite 9880\n\nGet-SPTrustedSecurityTokenIssuer 9730\n\nNew-SPSubscriptionSettingsServiceApplication 9730\n\nGet-SPTrustedIdentityTokenIssuer 9660\n\nGet-SPUsageDefinition 9580\n\nSet-SPEnterpriseSearchCrawlDatabase 9360\n\nGet-SPEnterpriseSearchStatus 9330\n\nNew-SPStateServiceDatabase 9320\n\nSet-SPSiteURL 9060\n\nSet-SPUsageDefinition 8870\n\nTest-SPSite 8840\n\nSet-SPEnterpriseSearchService 8520\n\nNew-SPClaimTypeMapping 8430\n\nNew-SPEnterpriseSearchCrawlComponent 8370\n\nSet-SPAppSiteSubscriptionName 8320\n\nRename-SPServer 8280\n\nRemove-SPClaimProvider 8230\n\nRepair-SPManagedAccountDeployment 8070\n\nSet-SPProfileServiceApplication 8060\n\nNew-SPEnterpriseSearchServiceApplicationProxy 8040\n\nGet-SPEnterpriseSearchCrawlContentSource 7980\n\nRemove-SPWebApplication 7960\n\nRemove-SPServiceApplication 7940\n\nNew-SPAuthenticationProvider 7930\n\nRestore-SPEnterpriseSearchServiceApplication 7930\n\nGet-SPSiteAdministration 7670\n\nGet-SPAppPrincipal 7610\n\nDisconnect-SPConfigurationDatabase 7600\n\nRemove-SPDistributedCacheServiceInstance 7480\n\nSet-SPBusinessDataCatalogThrottleConfig 7460\n\nSet-SPPassPhrase 7410\n\nRegister-SPAppPrincipal 7360\n\nNew-SPEnterpriseSearchAdminComponent 7320\n\nRemove-SPContentDatabase 7280\n\nInstall-SPUserSolution 7170\n\nGet-SPEnterpriseSearchMetadataManagedProperty 7120\n\nSet-SPUsageService 7080\n\nMove-SPProfileManagedMetadataProperty 7070\n\nExport-SPMetadataWebServicePartitionData 7060\n\nSet-SPCustomLayoutsPage 7010\n\nSet-SPMetadataServiceApplication 7010\n\nUpgrade-SPSingleSignOnDatabase 6950\n\nSet-SPLogLevel 6910\n\nNew-SPClaimTypeEncoding 6910\n\nNew-SPEnterpriseSearchIndexComponent 6750\n\nSet-SPFarmConfig 6690\n\nAdd-SPUserSolution 6610\n\nAdd-SPProfileSyncConnection 6500\n\nSet-SPAppDomain 6360\n\nInstall-SPDataConnectionFile 6360\n\nSet-SPDiagnosticsProvider 6340\n\nSet-SPEnterpriseSearchAdministrationComponent 6320\n\nGet-SPEnterpriseSearchTopology 6280\n\nInstall-SPApplicationContent 6270\n\nUpdate-SPDistributedCacheSize 6250\n\nSet-SPWOPIBinding 6250\n\nGet-SPClaimProvider 6250\n\nGet-SPCertificateAuthority 6200\n\nImport-SPAppPackage 6190\n\nGet-SPBusinessDataCatalogMetadataObject 6080\n\nNew-SPSecureStoreApplication 6030\n\nInstall-SPApp 6020\n\nNew-SPEnterpriseSearchQueryScope 6020\n\nRemove-SPManagedAccount 6000\n\nRemove-SPTrustedIdentityTokenIssuer 5900\n\nInstall-SPHelpCollection 5870\n\nRemove-SPEnterpriseSearchComponent 5840\n\nNew-SPSubscriptionSettingsServiceApplicationProxy 5790\n\nAdd-SPProfileLeader 5790\n\nSuspend-SPEnterpriseSearchServiceApplication 5780\n\nGet-SPLogLevel 5770\n\nGet-SPAlternateURL 5700\n\nInitialize-SPResourceSecurity 5700\n\nSet-SPEnterpriseSearchCrawlContentSource 5700\n\nGet-SPPendingUpgradeActions 5650\n\nNew-SPWOPISuppressionSetting 5640\n\nRemove-SPServiceApplicationPool 5640\n\nGet-SPTaxonomySession 5630\n\nRemove-SPEnterpriseSearchServiceApplication 5590\n\nUpdate-SPSecureStoreApplicationServerKey 5550\n\nSet-SPServiceApplicationSecurity 5530\n\nSet-SPTrustedIdentityTokenIssuer 5530\n\nStop-SPDistributedCacheServiceInstance 5520\n\nGet-SPEnterpriseSearchMetadataCrawledProperty 5510\n\nNew-SPEnterpriseSearchTopology 5490\n\nStart-SPEnterpriseSearchQueryAndSiteSettingsServiceInstance 5420\n\nGet-SPWOPIZone 5390\n\nNew-SPEnterpriseSearchMetadataManagedProperty 5390\n\nRevoke-SPObjectSecurity 5320\n\nStart-SPTimerJob 5310\n\nNew-SPEnterpriseSearchCrawlContentSource 5300\n\nGet-SPAuthenticationRealm 5300\n\nGrant-SPObjectSecurity 5270\n\nSet-SPUsageApplication 5260\n\nSet-SPTimerJob 5240\n\nSet-SPSecurityTokenServiceConfig 5230\n\nNew-SPEnterpriseSearchMetadataCrawledProperty 5220\n\nReceive-SPServiceApplicationConnectionInfo 5210\n\nSet-SPSiteSubscriptionConfig 5160\n\nNew-SPWebApplicationAppDomain 5160\n\nSet-SPCentralAdministration 5150\n\nGet-SPBusinessDataCatalogThrottleConfig 5110\n\nNew-SPManagedPath 5110\n\nResume-SPEnterpriseSearchServiceApplication 5090\n\nUninstall-SPAppInstance 5080\n\nGet-SPAppInstance 5060\n\nGet-SPEnterpriseSearchQueryScope 5060\n\nAdd-SPSiteSubscriptionProfileConfig 5040\n\nNew-SPEnterpriseSearchLanguageResourcePhrase 5020\n\nSet-SPWOPIZone 5010\n\nNew-SPAppManagementServiceApplication 5000\n\nNew-SPEnterpriseSearchCrawlDatabase 4980\n\nRemove-SPServiceApplicationProxy 4930\n\nNew-SPEnterpriseSearchCrawlRule 4920\n\nRemove-SPSiteURL 4890\n\nStop-SPEnterpriseSearchServiceInstance 4840\n\nNew-SPProfileServiceApplicationProxy 4840\n\nNew-SPEnterpriseSearchQueryProcessingComponent 4830\n\nUpgrade-SPEnterpriseSearchServiceApplication 4800\n\nNew-SPEnterpriseSearchQueryScopeRule 4750\n\nNew-SPUserLicenseMapping 4750\n\nInstall-SPWebPartPack 4690\n\nGet-SPServiceHostConfig 4690\n\nGet-SPEnterpriseSearchServiceApplicationProxy 4650\n\nNew-SPBusinessDataCatalogServiceApplication 4650\n\nNew-SPSiteSubscription 4640\n\nGet-SPEnterpriseSearchMetadataCategory 4620\n\nRemove-SPShellAdmin 4580\n\nNew-SPMetadataServiceApplicationProxy 4560\n\nSet-SPAppPrincipalPermission 4560\n\nNew-SPEnterpriseSearchAnalyticsProcessingComponent 4540\n\nSet-SPContentDatabase 4520\n\nGet-SPSiteSubscription 4500\n\nGet-SPEnterpriseSearchQueryKeyword 4480\n\nRemove-SPEnterpriseSearchCrawlContentSource 4480\n\nImport-SPEnterpriseSearchThesaurus 4420\n\nGet-SPEnterpriseSearchQueryAndSiteSettingsServiceInstance 4410\n\nGet-SPSessionStateService 4410\n\nRepair-SPSite 4410\n\nGet-SPServiceApplicationSecurity 4410\n\nRemove-SPBusinessDataCatalogModel 4390\n\nSet-SPMetadataServiceApplicationProxy 4390\n\nNew-SPSiteSubscriptionFeaturePack 4380\n\nNew-SPEnterpriseSearchSecurityTrimmer 4380\n\nRemove-SPTrustedSecurityTokenIssuer 4340\n\nSet-SPEnterpriseSearchRankingModel 4310\n\nGet-SPSecureStoreApplication 4300\n\nGet-SPSiteSubscriptionFeaturePack 4300\n\nGet-SPEnterpriseSearchCrawlDatabase 4270\n\nSet-SPIRMSettings 4260\n\nRemove-SPTrustedRootAuthority 4240\n\nSet-SPServiceApplicationPool 4240\n\nGet-SPEnterpriseSearchCrawlCustomConnector 4230\n\nRemove-SPEnterpriseSearchQueryScope 4210\n\nGet-SPEnterpriseSearchComponent 4200\n\nGet-SPEnterpriseSearchQuerySuggestionCandidates 4200\n\nGet-SPEnterpriseSearchOwner 4190\n\nGet-SPEnterpriseSearchRankingModel 4190\n\nSet-SPProfileServiceApplicationSecurity 4190\n\nGet-SPSiteURL 4180\n\nRemove-SPEnterpriseSearchLanguageResourcePhrase 4170\n\nSet-SPEnterpriseSearchServiceInstance 4160\n\nUpdate-SPInfoPathUserFileUrl 4160\n\nUpdate-SPUserSolution 4150\n\nNew-SPAlternateURL 4150\n\nImport-SPEnterpriseSearchTopology 4130\n\nGet-SPTopologyServiceApplication 4120\n\nGrant-SPBusinessDataCatalogMetadataObject 4090\n\nGet-SPEnterpriseSearchFileFormat 4090\n\nSet-SPEnterpriseSearchContentEnrichmentConfiguration 4080\n\nRemove-SPEnterpriseSearchCrawlMapping 4070\n\nGet-SPEnterpriseSearchQueryScopeRule 4070\n\nNew-SPEnterpriseSearchCrawlExtension 4070\n\nGet-SPUserLicense 4040\n\nSet-SPEnterpriseSearchMetadataManagedProperty 4030\n\nGet-SPStateServiceApplication 4020\n\nPublish-SPServiceApplication 3990\n\nNew-SPODataConnectionSetting 3980\n\nGet-SPUserSolution 3980\n\nUninstall-SPUserSolution 3980\n\nRemove-SPEnterpriseSearchMetadataManagedProperty 3970\n\nSet-SPEnterpriseSearchMetadataMapping 3970\n\nRemove-SPEnterpriseSearchTopology 3960\n\nNew-SPServiceApplicationProxyGroup 3940\n\nGet-SPSiteSubscriptionConfig 3930\n\nBackup-SPConfigurationDatabase 3920\n\nSet-SPSiteAdministration 3910\n\nSet-SPAuthenticationRealm 3900\n\nAdd-SPSiteSubscriptionFeaturePackMember 3890\n\nRemove-SPEnterpriseSearchCrawlCustomConnector 3890\n\nRemove-SPSiteSubscription 3890\n\nGet-SPEnterpriseSearchMetadataMapping 3880\n\nGet-SPTrustedRootAuthority 3880\n\nNew-SPEnterpriseSearchSiteHitRule 3870\n\nGet-SPEnterpriseSearchLanguageResourcePhrase 3870\n\nGet-SPFarmConfig 3870\n\nRemove-SPEnterpriseSearchCrawlDatabase 3850\n\nSet-SPEnterpriseSearchQueryScope 3840\n\nNew-SPAppManagementServiceApplicationProxy 3840\n\nRemove-SPEnterpriseSearchCrawlRule 3840\n\nAdd-SPClaimTypeMapping 3830\n\nRemove-SPEnterpriseSearchQueryAuthority 3820\n\nGet-SPEnterpriseSearchCrawlExtension 3820\n\nSet-SPEnterpriseSearchMetadataCrawledProperty 3810\n\nRemove-SPEnterpriseSearchServiceApplicationProxy 3810\n\nRemove-SPSiteSubscriptionSettings 3800\n\nGet-SPEnterpriseSearchCrawlMapping 3800\n\nRemove-SPEnterpriseSearchMetadataCategory 3790\n\nImport-SPEnterpriseSearchCustomExtractionDictionary 3790\n\nSet-SPDiagnosticConfig 3780\n\nUpdate-SPSecureStoreMasterKey 3780\n\nRemove-SPEnterpriseSearchQueryScopeRule 3760\n\nUpdate-SPAppInstance 3760\n\nSet-SPEnterpriseSearchQueryScopeRule 3760\n\nImport-SPBusinessDataCatalogModel 3760\n\nRemove-SPEnterpriseSearchMetadataMapping 3740\n\nGet-SPUsageService 3740\n\nGet-SPEnterpriseSearchSecurityTrimmer 3740\n\nStop-SPEnterpriseSearchQueryAndSiteSettingsServiceInstance 3730\n\nRemove-SPEnterpriseSearchQueryDemoted 3720\n\nNew-SPEnterpriseSearchFileFormat 3720\n\nRemove-SPEnterpriseSearchSiteHitRule 3720\n\nNew-SPSecureStoreServiceApplicationProxy 3710\n\nRemove-SPEnterpriseSearchCrawlExtension 3700\n\nDisable-SPTimerJob 3700\n\nGet-SPEnterpriseSearchQueryAndSiteSettingsService 3700\n\nExport-SPEnterpriseSearchTopology 3700\n\nRemove-SPEnterpriseSearchQueryKeyword 3700\n\nNew-SPEnterpriseSearchQueryAuthority 3700\n\nGet-SPAuthenticationProvider 3700\n\nGet-SPEnterpriseSearchQueryAuthority 3690\n\nGet-SPDistributedCacheClientSetting 3690\n\nGet-SPEnterpriseSearchSiteHitRule 3690\n\nSet-SPEnterpriseSearchQueryAuthority 3680\n\nRemove-SPEnterpriseSearchRankingModel 3680\n\nNew-SPEnterpriseSearchCrawlCustomConnector 3680\n\nGet-SPEnterpriseSearchQueryAndSiteSettingsServiceProxy 3670\n\nGet-SPEnterpriseSearchQueryDemoted 3670\n\nNew-SPEnterpriseSearchQueryDemoted 3660\n\nGet-SPEnterpriseSearchCrawlRule 3650\n\nSet-SPEnterpriseSearchQueryKeyword 3640\n\nSet-SPEnterpriseSearchServiceApplicationProxy 3640\n\nSet-SPEnterpriseSearchMetadataCategory 3640\n\nSet-SPBusinessDataCatalogServiceApplication 3630\n\nSet-SPEnterpriseSearchCrawlRule 3630\n\nNew-SPEnterpriseSearchQueryKeyword 3630\n\nRemove-SPEnterpriseSearchSecurityTrimmer 3610\n\nNew-SPClaimProvider 3600\n\nGet-SPWorkflowServiceApplicationProxy 3590\n\nNew-SPEnterpriseSearchMetadataCategory 3580\n\nGet-SPUsageApplication 3570\n\nGet-SPProfileLeader 3570\n\nRemove-SPClaimTypeMapping 3560\n\nGet-SPServiceApplicationProxyGroup 3560\n\nSet-SPTrustedRootAuthority 3540\n\nRemove-SPUserSolution 3530\n\nNew-SPStateServiceApplicationProxy 3520\n\nNew-SPEnterpriseSearchCrawlMapping 3510\n\nSet-SPServiceApplication 3480\n\nGet-SPManagedPath 3460\n\nAdd-SPUserLicenseMapping 3440\n\nSet-SPSiteSubscriptionProfileConfig 3430\n\nSet-SPServiceHostConfig 3430\n\nGet-SPMetadataServiceApplication 3400\n\nNew-SPLogFile 3390\n\nGet-SPEnterpriseSearchAdministrationComponent 3380\n\nSet-SPSubscriptionSettingsServiceApplication 3370\n\nRemove-SPEnterpriseSearchLinksDatabase 3370\n\nImport-SPSiteSubscriptionSettings 3340\n\nRequest-SPUpgradeEvaluationSite 3330\n\nGet-SPCustomLayoutsPage 3310\n\nUpdate-SPWOPIProofKey 3310\n\nGet-SPEnterpriseSearchQuerySpellingCorrection 3300\n\nSet-SPEnterpriseSearchQuerySpellingCorrection 3300\n\nAdd-SPServiceApplicationProxyGroupMember 3290\n\nUpgrade-SPFarm 3290\n\nRemove-SPSiteSubscriptionBusinessDataCatalogConfig 3280\n\nGet-SPProfileServiceApplicationSecurity 3260\n\nRemove-SPConfigurationDatabase 3260\n\nExport-SPSiteSubscriptionSettings 3250\n\nUpdate-SPInfoPathAdminFileUrl 3240\n\nBackup-SPEnterpriseSearchServiceApplicationIndex 3190\n\nNew-SPAzureAccessControlServiceApplicationProxy 3170\n\nRemove-SPTrustedServiceTokenIssuer 3140\n\nUpdate-SPRepopulateMicroblogFeedCache 3130\n\nSet-SPClaimProvider 3110\n\nRemove-SPServiceApplicationProxyGroup 3100\n\nInitialize-SPStateServiceDatabase 3100\n\nSet-SPPerformancePointSecureDataValues 3080\n\nGet-SPServiceApplicationEndpoint 3070\n\nGet-SPClaimProviderManager 3070\n\nSet-SPDistributedCacheClientSetting 3030\n\nGet-SPRequestManagementSettings 3020\n\nGet-SPTrustedServiceTokenIssuer 2990\n\nAdd-SPDiagnosticsPerformanceCounter 2990\n\nTest-SPInfoPathFormTemplate 2970\n\nStart-SPContentDeploymentJob 2960\n\nSet-SPBusinessDataCatalogMetadataObject 2930\n\nGet-SPDiagnosticConfig 2920\n\nGet-SPInfoPathFormTemplate 2920\n\nUpdate-SPFarmEncryptionKey 2920\n\nGet-SPInfoPathFormsService 2900\n\nGet-SPClaimTypeEncoding 2890\n\nRemove-SPProfileSyncConnection 2870\n\nRemove-SPSolutionDeploymentLock 2870\n\nGet-SPWebPartPack 2870\n\nGet-SPBackupHistory 2870\n\nRemove-SPUsageApplication 2860\n\nRemove-SPServiceApplicationProxyGroupMember 2850\n\nGet-SPWebApplicationHttpThrottlingMonitor 2810\n\nGet-SPWorkflowConfig 2800\n\nGet-SPSiteUpgradeSessionInfo 2800\n\nGet-SPWOPISuppressionSetting 2800\n\nRemove-SPSiteSubscriptionFeaturePack 2790\n\nMount-SPStateServiceDatabase 2780\n\nClear-SPLogLevel 2780\n\nSet-SPTrustedServiceTokenIssuer 2730\n\nRemove-SPManagedPath 2700\n\nGet-SPDiagnosticsProvider 2700\n\nGet-SPHealthAnalysisRule 2680\n\nGet-SPMetadataServiceApplicationProxy 2620\n\nUpdate-SPRepopulateMicroblogLMTCache 2610\n\nImport-SPInfoPathAdministrationFiles 2610\n\nSet-SPWebApplicationHttpThrottlingMonitor 2600\n\nEnable-SPTimerJob 2590\n\nExport-SPInfoPathAdministrationFiles 2590\n\nSet-SPInfoPathFormsService 2580\n\nSet-SPTopologyServiceApplication 2580\n\nGet-SPHelpCollection 2570\n\nGet-SPInfoPathUserAgent 2570\n\nRemove-SPSiteSubscriptionFeaturePackMember 2570\n\nSet-SPServiceApplicationEndpoint 2560\n\nGet-SPStateServiceDatabase 2550\n\nSet-SPAlternateURL 2550\n\nRemove-SPSiteSubscriptionProfileConfig 2540\n\nSet-SPDataConnectionFile 2540\n\nUpdate-SPInfoPathFormTemplate 2530\n\nUnpublish-SPServiceApplication 2530\n\nImport-SPBusinessDataCatalogDotNetAssembly 2510\n\nAdd-SPRoutingMachinePool 2500\n\nGet-SPDataConnectionFileDependent 2500\n\nGet-SPDataConnectionFile 2490\n\nUninstall-SPDataConnectionFile 2450\n\nGet-SPPerformancePointServiceApplication 2420\n\nRemove-SPStateServiceDatabase 2400\n\nSet-SPSiteSubscriptionMetadataConfig 2400\n\nGet-SPInfoPathWebServiceProxy 2400\n\nSet-SPInfoPathWebServiceProxy 2380\n\nAdd-SPInfoPathUserAgent 2360\n\nRemove-SPDiagnosticsPerformanceCounter 2360\n\nGet-SPTopologyServiceApplicationProxy 2360\n\nStart-SPInfoPathFormTemplate 2340\n\nRemove-SPInfoPathUserAgent 2330\n\nNew-SPPerformancePointServiceApplication 2300\n\nSet-SPContentDeploymentJob 2290\n\nGet-SPContentDeploymentJob 2270\n\nStop-SPInfoPathFormTemplate 2260\n\nMove-SPBlobStorageLocation 2260\n\nSet-SPInfoPathFormTemplate 2260\n\nExport-SPBusinessDataCatalogModel 2260\n\nGet-SPDiagnosticsPerformanceCounter 2260\n\nSet-SPDesignerSettings 2260\n\nSet-SPProfileServiceApplicationProxy 2250\n\nRemove-SPProfileLeader 2250\n\nGet-SPContentDeploymentPath 2250\n\nNew-SPContentDeploymentPath 2240\n\nUpdate-SPSecureStoreCredentialMapping 2230\n\nGet-SPUserLicenseMapping 2230\n\nSet-SPStateServiceApplication 2220\n\nGet-SPStateServiceApplicationProxy 2210\n\nEnable-SPBusinessDataCatalogEntity 2210\n\nRevoke-SPBusinessDataCatalogMetadataObject 2200\n\nClear-SPDistributedCacheItem 2190\n\nGet-SPProcessAccount 2190\n\nGet-SPDesignerSettings 2170\n\nGet-SPRoutingMachinePool 2150\n\nCopy-SPBusinessDataCatalogAclToChildren 2150\n\nSet-SPWorkflowConfig 2120\n\nExport-SPAppPackage 2110\n\nGet-SPAppDomain 2100\n\nSet-SPSessionStateService 2090\n\nNew-SPWorkManagementServiceApplication 2090\n\nDismount-SPStateServiceDatabase 2090\n\nSet-SPPerformancePointServiceApplication 2070\n\nNew-SPSecureStoreApplicationField 2070\n\nGet-SPRoutingMachineInfo 2070\n\nAdd-SPThrottlingRule 2070\n\nAdd-SPRoutingRule 2060\n\nUpdate-SPSecureStoreGroupCredentialMapping 2040\n\nRemove-SPUserLicenseMapping 2040\n\nUninstall-SPHelpCollection 2030\n\nGet-SPRoutingRule 2020\n\nResume-SPStateServiceDatabase 2000\n\nGet-SPMobileMessagingAccount 2000\n\nSet-SPSiteSubscriptionEdiscoveryHub 2000\n\nSet-SPBrowserCustomerExperienceImprovementProgram 2000\n\nSet-SPStateServiceDatabase 1980\n\nDisable-SPBusinessDataCatalogEntity 1980\n\nSuspend-SPStateServiceDatabase 1980\n\nRemove-SPContentDeploymentPath 1970\n\nSet-SPSecureStoreApplication 1960\n\nSet-SPStateServiceApplicationProxy 1960\n\nEnable-SPWebApplicationHttpThrottling 1960\n\nSet-SPContentDeploymentPath 1950\n\nRemove-SPSocialItemByDate 1950\n\nRemove-SPSiteUpgradeSessionInfo 1940\n\nDisable-SPWebApplicationHttpThrottling 1940\n\nSet-SPMobileMessagingAccount 1930\n\nRemove-SPContentDeploymentJob 1930\n\nGet-SPBrowserCustomerExperienceImprovementProgram 1920\n\nClear-SPSiteSubscriptionBusinessDataCatalogConfig 1910\n\nDisable-SPSessionStateService 1900\n\nRemove-SPSiteSubscriptionMetadataConfig 1890\n\nClear-SPMetadataWebServicePartitionData 1890\n\nUninstall-SPWebPartPack 1870\n\nNew-SPPerformancePointServiceApplicationProxy 1840\n\nGet-SPSiteSubscriptionMetadataConfig 1840\n\nExport-SPSiteSubscriptionBusinessDataCatalogConfig 1830\n\nNew-SPContentDeploymentJob 1790\n\nGet-SPODataConnectionSettingMetadata 1730\n\nSet-SPWorkManagementServiceApplication 1710\n\nSet-SPRoutingMachineInfo 1700\n\nGet-SPSiteSubscriptionEdiscoveryHub 1690\n\nGet-SPSiteSubscriptionEdiscoverySearchScope 1680\n\nSet-SPRequestManagementSettings 1670\n\nGet-SPUpgradeActions 1660\n\nNew-SPUsageLogFile 1660\n\nEnable-SPAppAutoProvision 1650\n\nDisable-SPHealthAnalysisRule 1650\n\nSet-SPBingMapsKey 1590\n\nNew-SPTranslationServiceApplication 1570\n\nDisable-SPSingleSignOn 1540\n\nGet-SPPerformancePointServiceApplicationTrustedLocation 1480\n\nClear-SPSecureStoreCredentialMapping 1470\n\nSet-SPSecureStoreServiceApplication 1420\n\nSet-SPWordConversionServiceApplication 1370\n\nClear-SPSecureStoreDefaultProvider 1330\n\nSet-SPSecureStoreDefaultProvider 1290\n\nRemove-SPWordConversionServiceJobHistory 1240\n\nNew-SPPerformancePointServiceApplicationTrustedLocation 1210\n\nRemove-SPPerformancePointServiceApplicationTrustedLocation 1210\n\nRemove-SPPerformancePointServiceApplication 1200\n\nClear-SPPerformancePointServiceApplicationTrustedLocation 1190\n\nRemove-SPPerformancePointServiceApplicationProxy 1160\n\nNew-SPWorkManagementServiceApplicationProxy 1080\n\nNew-SPPowerPointConversionServiceApplication 1070\n\nSet-SPTranslationServiceApplication 1020\n\nNew-SPPowerPointConversionServiceApplicationProxy 994\n\nEnable-SPHealthAnalysisRule 881\n\nNew-SPTranslationServiceApplicationProxy 50\n\nGet-SPEnterpriseSearchResultItemType 50\n\nRemove-SPODataConnectionSetting 49\n\nAdd-SPPluggableSecurityTrimmer 49\n\nGet-SPBingMapsKey 49\n\nGet-SPAppSiteSubscriptionName 47\n\nGet-SPEnterpriseSearchPropertyRule 47\n\nGet-SPEnterpriseSearchHostController 47\n\nAdd-SPRoutingMachineInfo 46\n\nGet-SPEnterpriseSearchPropertyRuleCollection 46\n\nGet-SPPluggableSecurityTrimmer 46\n\nGet-SPAppStateUpdateInterval 45\n\nSet-SPSiteSubscriptionIRMConfig 45\n\nSet-SPRoutingMachinePool 45\n\nGet-SPEnterpriseSearchLinksDatabase 45\n\nAdd-SPAppDeniedEndpoint 45\n\nUpdate-SPAppCatalogConfiguration 45\n\nClear-SPBusinessDataCatalogEntityNotificationWeb 45\n\nDisable-SPAppAutoProvision 45\n\nGet-SPThrottlingRule 44\n\nRemove-SPRoutingMachineInfo 44\n\nGet-SPIRMSettings 43\n\nGet-SPEnterpriseSearchContentEnrichmentConfiguration 43\n\nSet-SPThrottlingRule 43\n\nGet-SPEnterpriseSearchLinguisticComponentsStatus 42\n\nSet-SPODataConnectionSetting 42\n\nSet-SPEnterpriseSearchLinksDatabase 42\n\nGet-SPSiteSubscriptionIRMConfig 41\n\nGet-SPScaleOutDatabaseLogEntry 41\n\nGet-SPAppStateSyncLastRunTime 41\n\nAdd-SPScaleOutDatabase 41\n\nInstall-SPEduSites 41\n\nImport-SPEnterpriseSearchPopularQueries 41\n\nGet-SPAppScaleProfile 41\n\nAdd-SPServerScaleOutDatabase 41\n\nExport-SPScaleOutDatabaseTenantData 40\n\nNew-SPEnterpriseSearchResultItemType 40\n\nGet-SPServerScaleOutDatabase 40\n\nGet-SPBusinessDataCatalogEntityNotificationWeb 40\n\nRemove-SPPluggableSecurityTrimmer 40\n\nSet-SPEnterpriseSearchCrawlLogReadPermission 40\n\nGet-SPScaleOutDatabase 40\n\nGet-SPEnterpriseSearchVssDataPath 40\n\nGet-SPAppAutoProvisionConnection 39\n\nClear-SPScaleOutDatabaseTenantData 39\n\nRemove-SPEnterpriseSearchContentEnrichmentConfiguration 39\n\nSet-SPInternalAppStateUpdateInterval 39\n\nGet-SPScaleOutDatabaseInconsistency 39\n\nGet-SPInternalAppStateSyncLastRunTime 38\n\nSet-SPODataConnectionSettingMetadata 38\n\nGet-SPInternalAppStateUpdateInterval 38\n\nGet-SPScaleOutDatabaseDataState 38\n\nGet-SPODataConnectionSetting 38\n\nMove-SPDeletedSite 38\n\nNew-SPBECWebServiceApplicationProxy 37\n\nSet-SPAppStoreConfiguration 37\n\nClear-SPScaleOutDatabaseLog 37\n\nGet-SPEnterpriseSearchCrawlLogReadPermission 37\n\nGet-SPOfficeStoreAppsDefaultActivation 37\n\nClear-SPServerScaleOutDatabaseDeletedDataSubRange 35\n\nSet-SPBusinessDataCatalogEntityNotificationWeb 35\n\nClear-SPServerScaleOutDatabaseTenantData 35\n\nGet-SPEnterpriseSearchServiceApplicationBackupStore 35\n\nClear-SPScaleOutDatabaseDeletedDataSubRange 35\n\nGet-SPServerScaleOutDatabaseInconsistency 35\n\nExport-SPServerScaleOutDatabaseTenantData 34\n\nRemove-SPRoutingRule 34\n\nGet-SPServerScaleOutDatabaseLogEntry 34\n\nRemove-SPEnterpriseSearchFileFormat 34\n\nNew-SPMarketplaceWebServiceApplicationProxy 34\n\nSet-SPAppManagementDeploymentId 34\n\nStart-SPDiagnosticsSession 33\n\nSet-SPAppStateUpdateInterval 33\n\nRemove-SPThrottlingRule 33\n\nSet-SPWorkManagementServiceApplicationProxy 33\n\nSplit-SPScaleOutDatabase 33\n\nSet-SPPowerPointConversionServiceApplication 33\n\nGet-SPServerScaleOutDatabaseDataState 33\n\nImport-SPScaleOutDatabaseTenantData 33\n\nSet-SPTranslationServiceApplicationProxy 32\n\nSet-SPAppAutoProvisionConnection 32\n\nSet-SPTrustedSecurityTokenIssuer 32\n\nCopy-SPActivitiesToWorkflowService 32\n\nSet-SPOfficeStoreAppsDefaultActivation 32\n\nRemove-SPRoutingMachinePool 32\n\nStop-SPDiagnosticsSession 32\n\nSet-SPRoutingRule 31\n\nClear-SPServerScaleOutDatabaseLog 31\n\nRemove-SPServerScaleOutDatabase 31\n\nRemove-SPAppDeniedEndpoint 31\n\nSet-SPScaleOutDatabaseDataSubRange 31\n\nRemove-SPAppPrincipalPermission 30\n\nRemove-SPTranslationServiceJobHistory 30\n\nRemove-SPScaleOutDatabase 30\n\nGet-SPAppStoreConfiguration 30\n\nUpgrade-SPEnterpriseSearchServiceApplicationSiteSettings 30\n\nSet-SPAppScaleProfile 30\n\nSet-SPScaleOutDatabaseDataRange 29\n\nImport-SPServerScaleOutDatabaseTenantData 29\n\nSplit-SPServerScaleOutDatabase 29\n\nRemove-SPEnterpriseSearchResultItemType 29\n\nRestore-SPEnterpriseSearchServiceApplicationIndex 28\n\nSet-SPEnterpriseSearchLinguisticComponentsStatus 28\n\nSet-SPEnterpriseSearchPrimaryHostController 28\n\nSet-SPServerScaleOutDatabaseDataRange 27\n\nNew-SPEduClass 27\n\nSet-SPServerScaleOutDatabaseDataSubRange 26\n\nGet-SPAppAcquisitionConfiguration 26\n\nMove-SPEnterpriseSearchLinksDatabases 26\n\nGet-SPWebApplicationAppDomain 26\n\nGet-SPAppHostingQuotaConfiguration 25\n\nRemove-SPEnterpriseSearchServiceApplicationSiteSettings 25\n\nGet-SPSecureStoreSystemAccount 25\n\nClear-SPAppDeniedEndpointList 25\n\nGet-SPAppDeniedEndpointList 25\n\nRemove-SPEnterpriseSearchCrawlLogReadPermission 25\n\nSet-SPEnterpriseSearchResultItemType 25\n\nAdd-SPSecureStoreSystemAccount 24\n\nRemove-SPEnterpriseSearchTenantSchema 24\n\nGet-SPAppDisablingConfiguration 24\n\nImport-SPPerformancePointContent 24\n\nSet-SPAppHostingQuotaConfiguration 23\n\nRemove-SPSecureStoreSystemAccount 23\n\nGet-SPBingMapsBlock 23\n\nExport-SPPerformancePointContent 23\n\nNew-SPUserSettingsProvider 22\n\nRemove-SPEnterpriseSearchTenantConfiguration 22\n\nRemove-SPUserSettingsProvider 22\n\nRemove-SPActivityFeedItems 22\n\nGet-SPUserSettingsProvider 21\n\nGet-SPUserSettingsProviderManager 21\n\nSet-SPAppAcquisitionConfiguration 21\n\nSet-SPAppDisablingConfiguration 21\n\nRemove-SPWebApplicationAppDomain 21\n\nAdd-SPEduUser 20\n\nNew-SPStateServiceApplication 20\n\nSet-SPBingMapsBlock 19\n\nAdd-SPEduClassMember 19\n\nGet-SPEduServiceSetting 18\n\nMove-SPSite 17\n\nRemove-SPEduClassMember 16\n\nNew-SPWorkflowServiceApplicationProxy 16\n\nSet-SPEduServiceSetting 16\n\nGet-SPEnterpriseSearchResultSource 14\n\nNew-SPBusinessDataCatalogServiceApplicationProxy 13\n\nNew-SPEnterpriseSearchRankingModel 12\n\nSet-SPAppSiteDomain 12\n\nNew-SPOnlineApplicationPrincipalManagementServiceApplicationProxy 12\n\nRestart-SPAppInstanceJob 11\n\nRemove-SPAlternateURL 10\n\nNew-SPEnterpriseSearchResultSource 10\n\nNew-SPEnterpriseSearchContentEnrichmentConfiguration 9\n\nUpdate-SPHelp 8\n\nGet-SPTranslationThrottlingSetting 7\n\nSet-SPTranslationThrottlingSetting 7\n\nNew-SPTrustedRootAuthority 7\n\nRemove-SPWOPISuppressionSetting 7\n\nRemove-SPSecureStoreApplication 7\n\nMove-SPSocialComment 7\n\nNew-SPWebApplicationExtension 6\n\nSet-SPTopologyServiceApplicationProxy 5\n\nSet-SPEnterpriseSearchResultSource 5\n\nRemove-SPEnterpriseSearchResultSource 5\n\nNew-SPEnterpriseSearchMetadataMapping 4\n\nNew-SPEnterpriseSearchContentProcessingComponent 4\n\nNew-SPTrustedServiceTokenIssuer 3\n\nSet-SPEnterpriseSearchFileFormatState 3\n\nImport-SPSiteSubscriptionBusinessDataCatalogConfig 3\n\nNew-SPSecureStoreTargetApplication 3\n\nNew-SPEnterpriseSearchLinksDatabase 3\n\nNew-SPWordConversionServiceApplication 3\n\nNew-SPRequestManagementRuleCriteria 3\n\nPS C:\\>\n\n↧\n\n↧\n\nMicrosoft SQL Server 2014 PowerShell cmdlet popularity\n\nIf you follow the blog, you probably saw a little PowerShell script I published a while back to measure the popularity of the cmdlets in a certain module using a Bing search. As an example, that blog showed the popularity of the cmdlets in the SmbShare module.\n\nNow I got curious about how the cmdlets in other modules would rank, so I spun up some Azure virtual machines to try some other modules. I decided to try the Microsoft SQL Server 2014 main module (named SQLPS).\n\nThe results are listed below:\n\nPS C:\\> .\\PopularCmdlet.ps1 | Sort BingCount -Descending | FT -AutoSize\n\nCmdletName BingCount\n\n---------- ---------\n\nInvoke-Sqlcmd 70700\n\nBackup-SqlDatabase 34100\n\nRestore-SqlDatabase 20300\n\nGet-SqlDatabase 7250\n\nInvoke-PolicyEvaluation 7170\n\nEnable-SqlAlwaysOn 5460\n\nAdd-SqlAvailabilityDatabase 4230\n\nTest-SqlAvailabilityGroup 4050\n\nGet-SqlInstance 3850\n\nEncode-SqlName 3040\n\nSet-SqlAvailabilityReplica 2970\n\nTest-SqlAvailabilityReplica 2680\n\nJoin-SqlAvailabilityGroup 2350\n\nSwitch-SqlAvailabilityGroup 2330\n\nTest-SqlDatabaseReplicaState 2250\n\nSet-SqlHADREndpoint 2230\n\nSet-SqlAvailabilityGroupListener 1930\n\nRemove-SqlAvailabilityDatabase 1920\n\nConvert-UrnToPath 1790\n\nDecode-SqlName 1690\n\nDisable-SqlAlwaysOn 1370\n\nRemove-SqlAvailabilityReplica 1290\n\nSet-SqlAvailabilityGroup 1100\n\nSuspend-SqlAvailabilityDatabase 1070\n\nResume-SqlAvailabilityDatabase 1050\n\nRemove-SqlAvailabilityGroup 889\n\nAdd-SqlAvailabilityGroupListenerStaticIp 50\n\nNew-SqlBackupEncryptionOption 34\n\nGet-SqlSmartAdmin 34\n\nSet-SqlSmartAdmin 31\n\nGet-SqlCredential 28\n\nSet-SqlCredential 25\n\nRemove-SqlCredential 23\n\nSet-SqlAuthenticationMode 20\n\nTest-SqlSmartAdmin 18\n\nStart-SqlInstance 15\n\nStop-SqlInstance 15\n\nSet-SqlNetworkConfiguration 10\n\nAdd-SqlFirewallRule 9\n\nRemove-SqlFirewallRule 9\n\nNew-SqlAvailabilityGroup 5\n\nNew-SqlAvailabilityGroupListener 4\n\nNew-SqlHADREndpoint 3\n\nNew-SqlCredential 3\n\nNew-SqlAvailabilityReplica 3\n\nPS C:\\>\n\n↧\n\nWindows Server 2012 R2 Storage PowerShell cmdlet popularity\n\nIf you follow the blog, you probably saw a little PowerShell script I published a while back to measure the popularity of the cmdlets in a certain module using a Bing search. As an example, that blog showed the popularity of the cmdlets in the SmbShare module.\n\nNow I got curious about how the cmdlets in other modules would rank, so I spun up some Azure virtual machines to try some other modules. I decided to try the Storage module in Windows Server 2012 R2 (named simply Storage).\n\nThe results are listed below:\n\nPS C:\\> .\\PopularCmdlet.ps1 | Sort BingCount -Descending | FT -AutoSize\n\nCmdletName BingCount\n\n---------- ---------\n\nNew-Volume 688000\n\nNew-Partition 403000\n\nSet-Volume 268000\n\nGet-Volume 156000\n\nFormat-Volume 111000\n\nSet-Partition 82300\n\nSet-Disk 73700\n\nGet-Disk 72500\n\nFlush-Volume 71300\n\nResize-Partition 66000\n\nClear-Disk 65900\n\nRepair-Volume 63400\n\nGet-Partition 62100\n\nInitialize-Disk 56000\n\nUpdate-Disk 52000\n\nRemove-Partition 49000\n\nOptimize-Volume 38700\n\nNew-VirtualDisk 29500\n\nMount-DiskImage 25700\n\nGet-VirtualDisk 17900\n\nGet-PhysicalDisk 17400\n\nRepair-VirtualDisk 14600\n\nRemove-PhysicalDisk 11200\n\nSet-VirtualDisk 10600\n\nRemove-VirtualDisk 9340\n\nSet-PhysicalDisk 8250\n\nGet-DiskImage 7220\n\nNew-StoragePool 7130\n\nDismount-DiskImage 7080\n\nInitialize-Volume 7040\n\nGet-StoragePool 5860\n\nSet-FileStorageTier 4810\n\nResize-VirtualDisk 4620\n\nGet-StorageEnclosure 4380\n\nGet-StorageReliabilityCounter 4340\n\nConnect-VirtualDisk 4340\n\nAdd-PartitionAccessPath 4330\n\nSet-StoragePool 4250\n\nGet-StorageSubSystem 4170\n\nGet-StorageTier 4080\n\nGet-InitiatorPort 4060\n\nSet-FileIntegrity 4030\n\nGet-FileStorageTier 3930\n\nAdd-PhysicalDisk 3930\n\nReset-PhysicalDisk 3790\n\nGet-FileIntegrity 3780\n\nClear-FileStorageTier 3620\n\nGet-StorageProvider 3500\n\nSet-ResiliencySetting 3490\n\nGet-PartitionSupportedSize 3440\n\nGet-MaskingSet 3360\n\nUnregister-StorageSubsystem 3270\n\nRepair-FileIntegrity 3250\n\nAdd-InitiatorIdToMaskingSet 3200\n\nSet-StorageSubSystem 3180\n\nRemove-StoragePool 3160\n\nGet-StorageJob 2910\n\nGet-InitiatorId 48\n\nGet-ResiliencySetting 47\n\nRemove-PartitionAccessPath 47\n\nGet-TargetPort 46\n\nAdd-TargetPortToMaskingSet 45\n\nGet-StorageTierSupportedSize 44\n\nGet-StorageSetting 39\n\nResize-StorageTier 39\n\nDisconnect-VirtualDisk 36\n\nGet-StorageNode 36\n\nSet-StorageSetting 35\n\nGet-TargetPortal 35\n\nGet-OffloadDataTransferSetting 35\n\nSet-StorageProvider 32\n\nEnable-PhysicalDiskIndication 30\n\nAdd-VirtualDiskToMaskingSet 29\n\nSet-InitiatorPort 29\n\nSet-StorageTier 27\n\nRemove-StorageTier 26\n\nRemove-MaskingSet 26\n\nRemove-InitiatorIdFromMaskingSet 25\n\nGet-VirtualDiskSupportedSize 25\n\nRemove-InitiatorId 25\n\nRemove-VirtualDiskFromMaskingSet 25\n\nGet-SupportedFileSystems 24\n\nHide-VirtualDisk 24\n\nGet-VolumeCorruptionCount 23\n\nRename-MaskingSet 23\n\nGet-VolumeScrubPolicy 22\n\nWrite-VolumeCache 22\n\nGet-SupportedClusterSizes 21\n\nEnable-StorageEnclosureIdentification 21\n\nRemove-TargetPortFromMaskingSet 20\n\nGet-StorageEnclosureVendorData 17\n\nSet-VolumeScrubPolicy 16\n\nDisable-PhysicalDiskIndication 9\n\nDisable-StorageEnclosureIdentification 9\n\nRegister-StorageSubsystem 8\n\nReset-StorageReliabilityCounter 7\n\nWrite-FileSystemCache 7\n\nUpdate-StoragePool 4\n\nNew-VirtualDiskSnapshot 3\n\nNew-VirtualDiskClone 3\n\nUpdate-StorageProviderCache 3\n\nUpdate-HostStorageCache 3\n\nNew-MaskingSet 3\n\nNew-StorageSubsystemVirtualDisk 3\n\nShow-VirtualDisk 3\n\nNew-StorageTier 3\n\nGet-PhysicalDiskStorageNodeView 2\n\nGet-PhysicalDiskSNV 1\n\nPS C:\\>\n\n↧\n\nNew PowerShell cmdlets in Windows Server 2016 TP2 (compared to Windows Server 2012 R2)\n\n1. State the problem\n\nWith the release of Windows Server 2016 TP2 a few weeks ago, I was wondering what new PowerShell cmdlets are now included (when you compare to Windows Server 2012 R2). However, the list of cmdlets is so long now that it is hard to spot the differences by hand.\n\nHowever, there a cmdlet in PowerShell to show all the cmdlets available (Get-Command) and a little bit of programming would make it easy to find out what are the main differences. So I set out to collect the data and compare the list.\n\nDISCLAIMER: As you probably know already, the Technical Preview is subject to change so all the information about Windows Server 2016 TP2 is preliminary and may not make it into the final product. Use with care, your mileage may vary, not available in all areas, some restrictions apply, professional PowerShell operator on a closed Azure VM course, do not attempt.\n\n2. Gather the data\n\nFirst, I needed the list of cmdlets from both versions of the operating system. That was actually pretty easy to gather, with a little help from Azure. I basically provisioned two Azure VM, one running Windows Server 2012 R2 and one running Windows Server 2016 Technical Preview 2 (yes, TP2 is now available in the regular Azure VM image gallery).\n\nSecond, I installed all of the Remote Server Administration Tools (RSAT) on both versions. That loads the PowerShell modules used for managing features that are not installed by default, like Failover Cluster or Storage Replica.\n\nFinally, I ran a simple cmdlet to gather the list from Get-Command and save it to an XML file. This made it easier to put all the data I needed in a single place (my desktop machine running Windows 10 Insider Preview). Here's a summary of what it took:\n\nCreate WS 2012 R2 Azure VM\n\nInstall RSAT in the WS 2012 R2 VM\n\nGet-WindowsFeature RSAT* | Install-WindowsFeature\n\nCapture XML file with all the WS 2012 R2 cmdlet information\n\nGet-Command | Select * | Export-CliXml C:\\WS2012R2Cmdlets.XML\n\nCreate WS 2016 TP2 Azure VM\n\nInstall RSAT in the WS 2016 TP2 VM\n\nGet-WindowsFeature RSAT* | Install-WindowsFeature\n\nCapture XML file with all the WS 2016 TP2 cmdlet information\n\nGet-Command | Select * | Export-CliXml C:\\WS2016TP2Cmdlets.XML\n\n3. Process the data\n\nWith the two XML files at hand, all I had left to do was to compare them to produce a good list of what's new. The first attempt resulted in a long list that was hard to understand, so I decided to do it module by module.\n\nThe code starts by creating a combined list of modules from both operating systems. Then it builds a dictionary of all cmdlets for a given module, assigning the value 1 if it's in WS 2012 R2, 2 if it's in WS 2016 TP2 and 3 if it's in both.\n\nThen I would show the total number of cmdlets per module per OS, then number of new cmdlets and the actual list of new cmdlets. Since the goal was to publish this blog, I actually wrote the script to format the output as an HTML table. Quite handy :-).\n\n4. Show the results\n\nFinally, here is resulting table with all the new PowerShell cmdlets (by module) in Windows Server 2016 TP2, compared to Windows Server 2012. Enjoy!\n\nModuleNew CmdletsWS 2016 TP2\n\nCmdletsWS 2012 R2\n\nCmdlets03838ActiveDirectory0147147ADRMSAdmin02121AppLocker055Appx8146+ Add-AppxVolume\n\n+ Dismount-AppxVolume\n\n+ Get-AppxDefaultVolume\n\n+ Get-AppxVolume\n\n+ Mount-AppxVolume\n\n+ Move-AppxPackage\n\n+ Remove-AppxVolume\n\n+ Set-AppxDefaultVolumeBestPractices044BitLocker01313BitsTransfer088BranchCache03232CimCmdlets01414CIPolicy110+ ConvertFrom-CIPolicyClusterAwareUpdating01717ConfigCI10100+ Edit-CIPolicyRule\n\n+ Get-CIPolicy\n\n+ Get-CIPolicyInfo\n\n+ Get-SystemDriver\n\n+ Merge-CIPolicy\n\n+ New-CIPolicy\n\n+ New-CIPolicyRule\n\n+ Remove-CIPolicyRule\n\n+ Set-HVCIOptions\n\n+ Set-RuleOptionDefender11110+ Add-MpPreference\n\n+ Get-MpComputerStatus\n\n+ Get-MpPreference\n\n+ Get-MpThreat\n\n+ Get-MpThreatCatalog\n\n+ Get-MpThreatDetection\n\n+ Remove-MpPreference\n\n+ Remove-MpThreat\n\n+ Set-MpPreference\n\n+ Start-MpScan\n\n+ Update-MpSignatureDFSN02323DFSR34542+ Get-DfsrDelegation\n\n+ Grant-DfsrDelegation\n\n+ Revoke-DfsrDelegationDhcpServer0121121DirectAccessClientComponents01111Dism44339+ Add-WindowsCapability\n\n+ Expand-WindowsCustomDataImage\n\n+ Get-WindowsCapability\n\n+ Remove-WindowsCapabilityDnsClient01717DnsServer21122101+ Add-DnsServerClientSubnet\n\n+ Add-DnsServerQueryResolutionPolicy\n\n+ Add-DnsServerRecursionScope\n\n+ Add-DnsServerZoneScope\n\n+ Add-DnsServerZoneTransferPolicy\n\n+ Disable-DnsServerPolicy\n\n+ Enable-DnsServerPolicy\n\n+ Get-DnsServerClientSubnet\n\n+ Get-DnsServerQueryResolutionPolicy\n\n+ Get-DnsServerRecursionScope\n\n+ Get-DnsServerZoneScope\n\n+ Get-DnsServerZoneTransferPolicy\n\n+ Remove-DnsServerClientSubnet\n\n+ Remove-DnsServerQueryResolutionPolicy\n\n+ Remove-DnsServerRecursionScope\n\n+ Remove-DnsServerZoneScope\n\n+ Remove-DnsServerZoneTransferPolicy\n\n+ Set-DnsServerClientSubnet\n\n+ Set-DnsServerQueryResolutionPolicy\n\n+ Set-DnsServerRecursionScope\n\n+ Set-DnsServerZoneTransferPolicyEventTracingManagement14140+ Add-EtwTraceProvider\n\n+ Get-AutologgerConfig\n\n+ Get-EtwTraceProvider\n\n+ Get-EtwTraceSession\n\n+ New-AutologgerConfig\n\n+ New-EtwTraceSession\n\n+ Remove-AutologgerConfig\n\n+ Remove-EtwTraceProvider\n\n+ Remove-EtwTraceSession\n\n+ Send-EtwTraceSession\n\n+ Set-AutologgerConfig\n\n+ Set-EtwTraceProvider\n\n+ Set-EtwTraceSession\n\n+ Start-AutologgerConfigFailoverClusters28482+ New-ClusterNameAccount\n\n+ Update-ClusterFunctionalLevelGroupPolicy02929HgsClient11110+ Export-HgsGuardian\n\n+ Get-HgsAttestationBaselinePolicy\n\n+ Get-HgsClientConfiguration\n\n+ Get-HgsGuardian\n\n+ Grant-HgsKeyProtectorAccess\n\n+ Import-HgsGuardian\n\n+ New-HgsGuardian\n\n+ New-HgsKeyProtector\n\n+ Remove-HgsGuardian\n\n+ Revoke-HgsKeyProtectorAccess\n\n+ Set-HgsClientConfigurationHyper-V26204178+ Add-VMGroupMember\n\n+ Add-VMSwitchTeamMember\n\n+ Add-VMTPM\n\n+ Disable-VMConsoleSupport\n\n+ Enable-VMConsoleSupport\n\n+ Get-VHDSet\n\n+ Get-VHDSnapshot\n\n+ Get-VMGroup\n\n+ Get-VMHostCluster\n\n+ Get-VMSwitchTeam\n\n+ Get-VMTPM\n\n+ Get-VMVideo\n\n+ New-VMGroup\n\n+ Optimize-VHDSet\n\n+ Remove-VHDSnapshot\n\n+ Remove-VMGroup\n\n+ Remove-VMGroupMember\n\n+ Remove-VMSwitchTeamMember\n\n+ Rename-VMGroup\n\n+ Set-VMHostCluster\n\n+ Set-VMSwitchTeam\n\n+ Set-VMTPM\n\n+ Set-VMVideo\n\n+ Start-VMTrace\n\n+ Stop-VMTrace\n\n+ Update-VMVersionIISAdministration17170+ Get-IISAppPool\n\n+ Get-IISConfigCollectionItem\n\n+ Get-IISConfigElement\n\n+ Get-IISConfigSection\n\n+ Get-IISConfigValue\n\n+ Get-IISServerManager\n\n+ Get-IISSite\n\n+ New-IISConfigCollectionItem\n\n+ New-IISSite\n\n+ Remove-IISConfigCollectionItem\n\n+ Remove-IISSite\n\n+ Reset-IISServerManager\n\n+ Set-IISConfigValue\n\n+ Start-IISCommitDelay\n\n+ Start-IISSite\n\n+ Stop-IISCommitDelay\n\n+ Stop-IISSiteInternational01818iSCSI01313IscsiTarget02828ISE033Kds066Microsoft.PowerShell.Archive220+ Compress-Archive\n\n+ Expand-ArchiveMicrosoft.PowerShell.Core56055+ Debug-Job\n\n+ Enter-PSHostProcess\n\n+ Exit-PSHostProcess\n\n+ Get-PSHostProcessInfo\n\n+ Register-ArgumentCompleterMicrosoft.PowerShell.Diagnostics055Microsoft.PowerShell.Host022Microsoft.PowerShell.Management48682+ Clear-RecycleBin\n\n+ Get-Clipboard\n\n+ Get-ItemPropertyValue\n\n+ Set-ClipboardMicrosoft.PowerShell.ODataUtils110+ Export-ODataEndpointProxyMicrosoft.PowerShell.Security01313Microsoft.PowerShell.Utility1110594+ ConvertFrom-String\n\n+ Convert-String\n\n+ Debug-Runspace\n\n+ Disable-RunspaceDebug\n\n+ Enable-RunspaceDebug\n\n+ Format-Hex\n\n+ Get-Runspace\n\n+ Get-RunspaceDebug\n\n- GetStreamHash\n\n+ New-Guid\n\n+ New-TemporaryFile\n\n+ Wait-Debugger\n\n+ Write-InformationMicrosoft.WSMan.Management01313MMAgent055MsDtc04141NetAdapter46864+ Disable-NetAdapterPacketDirect\n\n+ Enable-NetAdapterPacketDirect\n\n+ Get-NetAdapterPacketDirect\n\n+ Set-NetAdapterPacketDirectNetConnection022NetEventPacketCapture02323NetLbfo01313NetNat01313NetQos044NetSecurity08585NetSwitchTeam077NetTCPIP03434NetWNV01919NetworkConnectivityStatus044NetworkController1411410+ Add-NetworkControllerNode\n\n+ Clear-NetworkControllerNodeContent\n\n+ Disable-NetworkControllerNode\n\n+ Enable-NetworkControllerNode\n\n+ Export-NetworkController\n\n+ Get-NetworkController\n\n+ Get-NetworkControllerCanaryConfiguration\n\n+ Get-NetworkControllerCluster\n\n+ Get-NetworkControllerCredential\n\n+ Get-NetworkControllerDevice\n\n+ Get-NetworkControllerDeviceGroupingTestConfiguration\n\n+ Get-NetworkControllerDeviceGroups\n\n+ Get-NetworkControllerDeviceGroupUsage\n\n+ Get-NetworkControllerDeviceUsage\n\n+ Get-NetworkControllerDiagnostic\n\n+ Get-NetworkControllerDiscoveredTopology\n\n+ Get-NetworkControllerExternalTestRule\n\n+ Get-NetworkControllerFabricRoute\n\n+ Get-NetworkControllerGoalTopology\n\n+ Get-NetworkControllerInterface\n\n+ Get-NetworkControllerInterfaceUsage\n\n+ Get-NetworkControllerIpPool\n\n+ Get-NetworkControllerIpPoolStatistics\n\n+ Get-NetworkControllerIpSubnetStatistics\n\n+ Get-NetworkControllerLogicalNetwork\n\n+ Get-NetworkControllerLogicalSubnet\n\n+ Get-NetworkControllerMonitoringService\n\n+ Get-NetworkControllerNode\n\n+ Get-NetworkControllerPhysicalHostInterfaceParameter\n\n+ Get-NetworkControllerPhysicalHostParameter\n\n+ Get-NetworkControllerPhysicalSwitchCpuUtilizationParameter\n\n+ Get-NetworkControllerPhysicalSwitchInterfaceParameter\n\n+ Get-NetworkControllerPhysicalSwitchMemoryUtilizationParameter\n\n+ Get-NetworkControllerPhysicalSwitchParameter\n\n+ Get-NetworkControllerPSwitch\n\n+ Get-NetworkControllerPublicIpAddress\n\n+ Get-NetworkControllerServer\n\n+ Get-NetworkControllerServerInterface\n\n+ Get-NetworkControllerSwitchBgpPeer\n\n+ Get-NetworkControllerSwitchBgpRouter\n\n+ Get-NetworkControllerSwitchConfig\n\n+ Get-NetworkControllerSwitchNetworkRoute\n\n+ Get-NetworkControllerSwitchPort\n\n+ Get-NetworkControllerSwitchPortChannel\n\n+ Get-NetworkControllerSwitchVlan\n\n+ Get-NetworkControllerTopologyConfiguration\n\n+ Get-NetworkControllerTopologyDiscoveryStatistics\n\n+ Get-NetworkControllerTopologyLink\n\n+ Get-NetworkControllerTopologyNode\n\n+ Get-NetworkControllerTopologyTerminationPoint\n\n+ Get-NetworkControllerTopologyValidationReport\n\n+ Get-NetworkControllerVirtualInterface\n\n+ Get-NetworkControllerVirtualNetworkUsage\n\n+ Get-NetworkControllerVirtualPort\n\n+ Get-NetworkControllerVirtualServer\n\n+ Get-NetworkControllerVirtualServerInterface\n\n+ Get-NetworkControllerVirtualSwitch\n\n+ Get-NetworkControllerVirtualSwitchPortParameter\n\n+ Import-NetworkController\n\n+ Install-NetworkController\n\n+ Install-NetworkControllerCluster\n\n+ New-NetworkControllerCanaryConfiguration\n\n+ New-NetworkControllerCredential\n\n+ New-NetworkControllerDevice\n\n+ New-NetworkControllerDeviceGroupingTestConfiguration\n\n+ New-NetworkControllerDeviceGroups\n\n+ New-NetworkControllerExternalTestRule\n\n+ New-NetworkControllerInterface\n\n+ New-NetworkControllerIpPool\n\n+ New-NetworkControllerLogicalNetwork\n\n+ New-NetworkControllerMonitoringService\n\n+ New-NetworkControllerNodeObject\n\n+ New-NetworkControllerPhysicalHostInterfaceParameter\n\n+ New-NetworkControllerPhysicalHostParameter\n\n+ New-NetworkControllerPhysicalSwitchCpuUtilizationParameter\n\n+ New-NetworkControllerPhysicalSwitchInterfaceParameter\n\n+ New-NetworkControllerPhysicalSwitchMemoryUtilizationParameter\n\n+ New-NetworkControllerPhysicalSwitchParameter\n\n+ New-NetworkControllerPSwitch\n\n+ New-NetworkControllerPublicIpAddress\n\n+ New-NetworkControllerServer\n\n+ New-NetworkControllerServerInterface\n\n+ New-NetworkControllerSwitchBgpPeer\n\n+ New-NetworkControllerSwitchBgpRouter\n\n+ New-NetworkControllerSwitchNetworkRoute\n\n+ New-NetworkControllerSwitchPortChannel\n\n+ New-NetworkControllerSwitchVlan\n\n+ New-NetworkControllerTopologyLink\n\n+ New-NetworkControllerTopologyNode\n\n+ New-NetworkControllerTopologyTerminationPoint\n\n+ New-NetworkControllerVirtualInterface\n\n+ New-NetworkControllerVirtualPort\n\n+ New-NetworkControllerVirtualServer\n\n+ New-NetworkControllerVirtualServerInterface\n\n+ New-NetworkControllerVirtualSwitch\n\n+ New-NetworkControllerVirtualSwitchPortParameter\n\n+ Remove-NetworkControllerCanaryConfiguration\n\n+ Remove-NetworkControllerCredential\n\n+ Remove-NetworkControllerDevice\n\n+ Remove-NetworkControllerDeviceGroupingTestConfiguration\n\n+ Remove-NetworkControllerDeviceGroups\n\n+ Remove-NetworkControllerExternalTestRule\n\n+ Remove-NetworkControllerFabricRoute\n\n+ Remove-NetworkControllerInterface\n\n+ Remove-NetworkControllerIpPool\n\n+ Remove-NetworkControllerLogicalNetwork\n\n+ Remove-NetworkControllerLogicalSubnet\n\n+ Remove-NetworkControllerNode\n\n+ Remove-NetworkControllerPhysicalSwitchCpuUtilizationParameter\n\n+ Remove-NetworkControllerPhysicalSwitchMemoryUtilizationParameter\n\n+ Remove-NetworkControllerPSwitch\n\n+ Remove-NetworkControllerPublicIpAddress\n\n+ Remove-NetworkControllerServer\n\n+ Remove-NetworkControllerServerInterface\n\n+ Remove-NetworkControllerSwitchBgpPeer\n\n+ Remove-NetworkControllerSwitchBgpRouter\n\n+ Remove-NetworkControllerSwitchNetworkRoute\n\n+ Remove-NetworkControllerSwitchPortChannel\n\n+ Remove-NetworkControllerSwitchVlan\n\n+ Remove-NetworkControllerTopologyLink\n\n+ Remove-NetworkControllerTopologyNode\n\n+ Remove-NetworkControllerTopologyTerminationPoint\n\n+ Remove-NetworkControllerVirtualInterface\n\n+ Remove-NetworkControllerVirtualPort\n\n+ Remove-NetworkControllerVirtualServer\n\n+ Remove-NetworkControllerVirtualServerInterface\n\n+ Remove-NetworkControllerVirtualSwitch\n\n+ Repair-NetworkControllerCluster\n\n+ Set-NetworkController\n\n+ Set-NetworkControllerCluster\n\n+ Set-NetworkControllerDiagnostic\n\n+ Set-NetworkControllerFabricRoute\n\n+ Set-NetworkControllerGoalTopology\n\n+ Set-NetworkControllerLogicalSubnet\n\n+ Set-NetworkControllerNode\n\n+ Set-NetworkControllerSwitchConfig\n\n+ Set-NetworkControllerSwitchPort\n\n+ Set-NetworkControllerTopologyConfiguration\n\n+ Start-NetworkControllerTopologyDiscovery\n\n+ Uninstall-NetworkController\n\n+ Uninstall-NetworkControllerClusterNetworkLoadBalancingClusters03535NetworkSwitchManager19190+ Disable-NetworkSwitchEthernetPort\n\n+ Disable-NetworkSwitchFeature\n\n+ Disable-NetworkSwitchVlan\n\n+ Enable-NetworkSwitchEthernetPort\n\n+ Enable-NetworkSwitchFeature\n\n+ Enable-NetworkSwitchVlan\n\n+ Get-NetworkSwitchEthernetPort\n\n+ Get-NetworkSwitchFeature\n\n+ Get-NetworkSwitchGlobalData\n\n+ Get-NetworkSwitchVlan\n\n+ New-NetworkSwitchVlan\n\n+ Remove-NetworkSwitchEthernetPortIPAddress\n\n+ Remove-NetworkSwitchVlan\n\n+ Restore-NetworkSwitchConfiguration\n\n+ Save-NetworkSwitchConfiguration\n\n+ Set-NetworkSwitchEthernetPortIPAddress\n\n+ Set-NetworkSwitchPortMode\n\n+ Set-NetworkSwitchPortProperty\n\n+ Set-NetworkSwitchVlanPropertyNetworkTransition03434NFS04242Nps-6713- Get-NpsRemediationServer\n\n- Get-NpsRemediationServerGroup\n\n- New-NpsRemediationServer\n\n- New-NpsRemediationServerGroup\n\n- Remove-NpsRemediationServer\n\n- Remove-NpsRemediationServerGroupPackageManagement10100+ Find-Package\n\n+ Get-Package\n\n+ Get-PackageProvider\n\n+ Get-PackageSource\n\n+ Install-Package\n\n+ Register-PackageSource\n\n+ Save-Package\n\n+ Set-PackageSource\n\n+ Uninstall-Package\n\n+ Unregister-PackageSourcePcsvDevice495+ Clear-PcsvDeviceLog\n\n+ Get-PcsvDeviceLog\n\n+ Set-PcsvDeviceNetworkConfiguration\n\n+ Set-PcsvDeviceUserPasswordPester20200+ AfterAll\n\n+ AfterEach\n\n+ Assert-MockCalled\n\n+ Assert-VerifiableMocks\n\n+ BeforeAll\n\n+ BeforeEach\n\n+ Context\n\n+ Describe\n\n+ Get-MockDynamicParameters\n\n+ Get-TestDriveItem\n\n+ In\n\n+ InModuleScope\n\n+ Invoke-Mock\n\n+ Invoke-Pester\n\n+ It\n\n+ Mock\n\n+ New-Fixture\n\n+ Set-DynamicParameterVariables\n\n+ Setup\n\n+ ShouldPKI01717PnpDevice440+ Disable-PnpDevice\n\n+ Enable-PnpDevice\n\n+ Get-PnpDevice\n\n+ Get-PnpDevicePropertyPowerShellGet11110+ Find-Module\n\n+ Get-InstalledModule\n\n+ Get-PSRepository\n\n+ Install-Module\n\n+ Publish-Module\n\n+ Register-PSRepository\n\n+ Save-Module\n\n+ Set-PSRepository\n\n+ Uninstall-Module\n\n+ Unregister-PSRepository\n\n+ Update-ModulePrintManagement02222PSDesiredStateConfiguration51712+ Connect-DscConfiguration\n\n+ Find-DscResource\n\n+ Get-DscConfigurationStatus\n\n+ Invoke-DscResource\n\n+ Publish-DscConfigurationPSDiagnostics01010PSReadline550+ Get-PSReadlineKeyHandler\n\n+ Get-PSReadlineOption\n\n+ Remove-PSReadlineKeyHandler\n\n+ Set-PSReadlineKeyHandler\n\n+ Set-PSReadlineOptionPSScheduledJob01616PSWorkflow022PSWorkflowUtility011RemoteAccess14121107+ Add-BgpRouteAggregate\n\n+ Add-VpnSstpProxyRule\n\n+ Clear-BgpRouteFlapDampening\n\n+ Disable-BgpRouteFlapDampening\n\n+ Enable-BgpRouteFlapDampening\n\n+ Get-BgpRouteAggregate\n\n+ Get-BgpRouteFlapDampening\n\n+ Get-VpnSstpProxyRule\n\n+ New-VpnSstpProxyRule\n\n+ Remove-BgpRouteAggregate\n\n+ Remove-VpnSstpProxyRule\n\n+ Set-BgpRouteAggregate\n\n+ Set-BgpRouteFlapDampening\n\n+ Set-VpnSstpProxyRuleRemoteDesktop57873+ Export-RDPersonalSessionDesktopAssignment\n\n+ Get-RDPersonalSessionDesktopAssignment\n\n+ Import-RDPersonalSessionDesktopAssignment\n\n+ Remove-RDPersonalSessionDesktopAssignment\n\n+ Set-RDPersonalSessionDesktopAssignmentScheduledTasks01919SecureBoot055ServerCore022ServerManager077ServerManagerTasks01111ShieldedVMDataFile330+ Import-ShieldingDataFile\n\n+ New-VolumeIDQualifier\n\n+ Protect-ShieldingDataFileShieldedVMTemplate110+ Protect-ServerVHDXSmbShare03535SmbWitness033SoftwareInventoryLogging01111StartScreen033Storage32140108+ Block-FileShareAccess\n\n+ Clear-StorageDiagnosticInfo\n\n+ Debug-FileShare\n\n+ Debug-StorageSubSystem\n\n+ Disable-PhysicalDiskIdentification\n\n+ Disable-StorageDiagnosticLog\n\n+ Enable-PhysicalDiskIdentification\n\n+ Enable-StorageDiagnosticLog\n\n+ Get-DedupProperties\n\n+ Get-DiskSNV\n\n+ Get-DiskStorageNodeView\n\n+ Get-FileShare\n\n+ Get-FileShareAccessControlEntry\n\n+ Get-StorageAdvancedProperty\n\n+ Get-StorageDiagnosticInfo\n\n+ Get-StorageEnclosureSNV\n\n+ Get-StorageEnclosureStorageNodeView\n\n+ Get-StorageFaultDomain\n\n+ Get-StorageFileServer\n\n+ Grant-FileShareAccess\n\n+ New-FileShare\n\n+ New-StorageFileServer\n\n+ Optimize-StoragePool\n\n+ Remove-FileShare\n\n+ Remove-StorageFileServer\n\n+ Revoke-FileShareAccess\n\n+ Set-FileShare\n\n+ Set-StorageFileServer\n\n+ Start-StorageDiagnosticLog\n\n+ Stop-StorageDiagnosticLog\n\n+ Stop-StorageJob\n\n+ Unblock-FileShareAccessStorageQoS660+ Get-StorageQoSFlow\n\n+ Get-StorageQoSPolicy\n\n+ Get-StorageQoSVolume\n\n+ New-StorageQoSPolicy\n\n+ Remove-StorageQoSPolicy\n\n+ Set-StorageQoSPolicyStorageReplica11110+ Get-SRGroup\n\n+ Get-SRPartnership\n\n+ New-SRGroup\n\n+ New-SRPartnership\n\n+ Remove-SRGroup\n\n+ Remove-SRPartnership\n\n+ Set-SRGroup\n\n+ Set-SRPartnership\n\n+ Suspend-SRGroup\n\n+ Sync-SRGroup\n\n+ Test-SRTopologyTLS374+ Disable-TlsCipherSuite\n\n+ Enable-TlsCipherSuite\n\n+ Get-TlsCipherSuiteTroubleshootingPack022TrustedPlatformModule01111UpdateServices41612+ Add-WsusDynamicCategory\n\n+ Get-WsusDynamicCategory\n\n+ Remove-WsusDynamicCategory\n\n+ Set-WsusDynamicCategoryUserAccessLogging01414VpnClient01919Wdac01212WebAdministration08080Whea022WindowsDeveloperLicense033WindowsErrorReporting033WindowsSearch022\n\n5. Share the code\n\nFor those wondering about the script I used to compile the results, here it goes.\n\n#\n\n# Enumerating all the modules from both OS versions\n\n#\n\n# Load XML files into memory: $Files[0] and $Files[1]\n\n$Files= ( (Import-Clixml\"C:\\WS2012R2Cmdlets.XML\"),\n\n(Import-Clixml\"C:\\WS2016TP2Cmdlets.XML\") )\n\n# Create empty dictionary for modules\n\n$ModuleDict= @{}\n\n# Loop through the two files to gather module info\n\n$Files|% {\n\n$_|GroupModuleName|SortName|% {\n\n$Module=$_.Name\n\n# If found, increase count. If not, add to dictionary\n\nIf ($ModuleDict.ContainsKey($Module)) {\n\n$ModuleDict.$Module++\n\n} Else {\n\n$ModuleDict.Add($Module,1)\n\n} # End If\n\n} # End Import\n\n} # End $Files\n\n#\n\n# Enumerate the cmdlets in every module\n\n#\n\n# Add the HTML table header\n\nWrite-Host\"<table border=1><tr><td><b>Module</b></td><td>New Cmdlets</td><td>WS 2016 TP2</td><td>WS 2012 R2</td></tr>\"\n\n# Loop through the modules in the dictionary\n\n$ModuleDict.GetEnumerator() |SortName|% {\n\n# Initialize variables for a new module\n\n$Module=$_.Name\n\n$VersionCount= (0,0)\n\n$CmdletDict= @{}\n\n# Loop through the two files, filtering by module\n\n0..1|% {\n\n$WSVersion=$_\n\n$Files[$_]|?ModuleName-eq$Module|% {\n\n$Cmdlet=$_.Name\n\n# Count cmdlets by module for each OS version\n\n$VersionCount[$WSVersion]++\n\n# Increase per-cmdlet value by 1 (WS2012R2) or by 2 (WS2016TP2)\n\n# If cmdlet exists in both OSes, value will be 3\n\nIf ($CmdletDict.ContainsKey($Cmdlet)) {\n\n$CmdletDict.$Cmdlet+= ($WSVersion+1)\n\n} Else {\n\n$CmdletDict.Add($Cmdlet, ($WSVersion+1))\n\n} # End If\n\n} # End %\n\n} # End 0..1\n\n#\n\n# Output the list of cmdlets that changed in every module\n\n#\n\n# Copy data to single variables for easy use with Write-Host\n\n$WS0=$VersionCount[0]\n\n$WS1=$VersionCount[1]\n\n$Dif=$WS1-$WS0\n\n$CrLf=\"<BR>\"+[char]10+[char]13\n\n# Write HTML table row with module summary information\n\nWrite-Host\"<tr><td><b>$Module</b></td><td align=`\"right`\">$Dif</td><td align=`\"right`\">$WS1</td><td align=`\"right`\">$WS0</td></tr>\" # If there are cmdlets in the module\n\nIf ($CmdletDict.Count -gt0) {\n\n# Gather all new and removed cmdlets in a variable\n\n$CmdletList=\"\"\n\n$CmdletDict.GetEnumerator() |? {$_.Value -eq2-or$_.Value -eq1} |SortName|% {\n\n# 1 means removed cmdlet. 2 means new cmdlet\n\n$Name=$_.Name\n\nIf ($_.Value -eq1) {\n\n$CmdletList+=\"- $Name\"+$CrLf\n\n} else {\n\n$CmdletList+=\"+ $Name\"+$CrLf\n\n} # End If\n\n} # End Enumerator\n\n# If new or removed exist, write another HTML table row\n\nIf ($CmdletList-ne\"\") {\n\nWrite-Host\"<tr><td colspan=4>$CmdletList</td></tr>\"\n\n} # End If\n\n} # End if\n\n} # End Module\n\n# Write HTML table end. All done.\n\nWrite-Host\"</table>\"\n\n↧\n\nUsing PowerShell and Excel PivotTables to understand the files on your disk\n\nIntroduction\n\nI am a big fan of two specific technologies that usually don’t get mentioned together: PowerShell and Excel PivotTables. It started when I was explaining PivotTables to someone and the main issue I had was finding a good set of example data that is familiar to everyone. That’s when it hit me. People using a computer have tons of files stored in their local disks and most don’t have a clue about those files. That’s the perfect example!\n\nSo I set out to gather the steps to gather information about your local files and extract the most information about it.\n\nStep 1 – List the questions you need to answer\n\nTo start, here are a few questions you might have about the files in your local hard drive:\n\nWhich folder is storing the most files or using up the most space in your local disk?\n\nWhat kind of data (pictures, music, video) is using the most space in your local disk?\n\nWhat is the average size of the pictures you took this year?\n\nHow much of the files in your local disk was created in the last 30 days? Or this year?\n\nWhich day of the week do you create the most new pictures? Or PowerPoint presentations?\n\nNow you could write a PowerShell script to answer any of those questions. It would in itself be a great programming exercise, but some would be quite tricky to code. However, those questions are just the tip of the iceberg. Given that dataset, you could come up with many, many more. So the point is that you would use Excel PivotTables to explore the data set and come up with the answers while interacting with it.\n\nStep 2 – Gather the required raw data\n\nIn any work with PivotTables and BI (Business Inteligence) in general, you need to identify the raw data that you can use to produce the answers to your questions. As you problably already figured out, we’ll use PowerShell to query the file system and extract that data. Using the Get-ChildItem (more commonly known by its alias: DIR), you can get information about each folder and file on the disk.\n\nNow with possibly hundreds of thousands of files, you want to make sure you gather only the necessary data. That will make it faster to obtain and will give Excel less data to chew on, which is always a good thing.Here’s what you could use (running"
    }
}