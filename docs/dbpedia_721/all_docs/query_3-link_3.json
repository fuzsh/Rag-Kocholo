{
    "id": "dbpedia_721_3",
    "rank": 3,
    "data": {
        "url": "https://devforum.roblox.com/t/how-can-i-properly-make-projectile-hitboxes/3094419/12",
        "read_more_link": "",
        "language": "en",
        "title": "How can i properly make projectile hitboxes?",
        "top_image": "https://devforum-uploads.s3.dualstack.us-east-2.amazonaws.com/uploads/original/5X/7/1/0/e/710ebeb5021c9798aaaf2a8a65dcea4b4c311caa.jpeg",
        "meta_img": "https://devforum-uploads.s3.dualstack.us-east-2.amazonaws.com/uploads/original/5X/7/1/0/e/710ebeb5021c9798aaaf2a8a65dcea4b4c311caa.jpeg",
        "images": [
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/frodev1002/40/5676939_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/cozmicweb/40/5687036_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/vulkanapi/40/5554971_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/dynamite2479/40/5664357_2.png",
            "https://doy2mn9upadnk.cloudfront.net/user_avatar/devforum.roblox.com/xan_thedragon/40/5329350_2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Cozmicweb (Cozmic)",
            "dthecoolest (dthecoolest)"
        ],
        "publish_date": "2024-07-30T18:15:24+00:00",
        "summary": "",
        "meta_description": "Hitboxes are annoying. For regular melee one time hitboxes i use :GetPartsInBox and other spatial queries, I have no problems with that. But even after searching and asking this question many times. This question still h&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://devforum-uploads.s3.dualstack.us-east-2.amazonaws.com/uploads/optimized/5X/b/3/d/0/b3d0a9f2fe866b16e020240b5703a04757781377_2_32x32.png",
        "meta_site_name": "Developer Forum | Roblox",
        "canonical_link": "https://devforum.roblox.com/t/how-can-i-properly-make-projectile-hitboxes/3094419",
        "text": "Personally I dont like the feel of using raycasts for this sorta thing so I use a part, that I then move based on the size of it, I then use workspace:GetPartsBoundInBox in order to get anything it is touching.\n\nThe reason I dont use velocities to move the bullet is the strain on the server it causes, although Im not sure my method is better than using velocity at all.\n\nAnyhow if you really cared you could always make is so the client that shot the bullet simulates the projectile, whilst doing server checks to make sure its following the right behavior.\n\nJust my thoughts!\n\nThats what I do instead of straight up using what they made. And thats why im asking this question and asking for examples of what people use.\n\nYour right about the strain on the server but the server doesnt need to see the bullet itself thats why you i use a remote event with :FireAllClients so each client has a replicated copy with smooth movement. Only thing important on the server is the hitbox.\n\nThis could be inefficient. Too many requests on the server and the bullet will only be seen on the client. I see what you mean though.\n\nYou could create your own raycast module and add all the features you need by defining the volume / hitbox of the projectile using a Region3, then, use custom logic to move the region and and add features like projectile drop. For collision detection, you can use GetPartBoundsInBox and specify collision behavior with the default RaycastParams data type. If you encounter performance issues, consider using some form of batch processing or lower the frequency of collision checks to reduce lag.\n\nThis is what im trying to find out.\n\nExample:\n\nBullet Force = 100\n\nI want to find out how much i should move the hitbox per heartbeat so it matches the force of the bullet\n\nYou’ll need to move the hitbox forward the same length as the projectile to avoid skipping collisions. You can use the force to determine the length of the projectile, allowing it to move faster without missing collisions. For projectile drop, store the creation time of the projectile using Tick() and use the time difference as a parameter in an interpolation formula (Something like this).\n\nMy projectile is only replicated to the clients. The server doesn’t keep track of it, it only has the force which it passes to the clients.\n\nAnd im a little lost on this:\n\nMove the collision detection to the server and send the necessary information to the client for rendering. Relying on clients for collision detection can make your game vulnerable to exploiters and affect performance.\n\nIf your projectile is 2 studs long, you should move it forward by 2 studs per heartbeat. Moving it more than that could cause it to skip collisions, while moving it less could cause inefficiencies due to overlapping positions. Increasing the size of the projectile can make it move forwards faster, while not skipping any collisions.\n\nI never rely on the client? My hitbox with the collision detection IS on the server but the projectile which is affected by velocity is on the client.\n\nHitbox and projectile’s are 2 different thing’s in my game\n\nThis is where we got it confused because my projectile’s use assembly linear velocity and linear velocity. I dont use heartbeat events to move them I use instances\n\nIf i were to use your logic, count the hitbox as the projectile to move with the heartbeat event. the actual projectile model, example: a baseball would be unimportant and just a model with effects.\n\nI didn’t know your projectiles were actual parts. I don’t recommend using unanchored client side parts to represent the projectiles, as it could affect performance, require manual garbage collection, and Roblox physics are generally unreliable on the client.\n\nHow does it affect performance? If I manually anchor and use heartbeat its not gonna create the physic’s effects a regular projectile has. But this is for alv, for a regular linear projectile ill probably use your method, but it can also cause lag on the server cant it? And especially if i have many projectiles at the same time. Its better to put some of this work on all client since it doesn’t have the job of replicating everything to every player\n\nAs I mentioned here, you can simulate the physics to ensure you know exactly where the projectile will be at any time, allowing you to replicate the positions accurately.\n\nI tested it with 2600 projectiles, and it ran fine even without optimizations like streaming. However, performance can vary depending on the player’s computer.\n\nCan you show me some code of how it would look like?\n\nI thought you said it was bad for performance?\n\nSetup:\n\n–Local Script:\n\nUIS.InputBegan:Connect(function() --Client code for when a button is pressed to tell the server to replicate the projectiles Event:FireServer() end)\n\n–Server Script\n\nlocal Force = 100 Event.OnServerEvent:Connect(function(Player) ReplicateProjectileEvent:FireAllClients(Force) --Code for the hitbox here, what im trying to figure out end)\n\n–Local Script 2\n\nReplicateProjectileEvent.OnClientEvent:Connect(function(Force) --Creates the projectile with the linear velocity local Direction = --Mouse position from the sent player minus the sent players charcter LinearVelocity.VectorVelocity = Direction.Unit * Force end)\n\nThis is what i roughly do to set it up but im willing to change it because idk what to even do atp\n\nBoosting postttttt 31 characters\n\nThis is a proof of concept and should ideally be implemented on the client rather than the server. I’ve written it on the server for now as I currently do not have enough time to write the full thing.\n\nScript Inside ServerScriptService\n\nlocal RunService = game:GetService(\"RunService\") -- Testing projectile part local Projectile = Instance.new(\"Part\") Projectile.Size = Vector3.new(1, 1, 3) Projectile.Position = Vector3.new(0, 20, 0) Projectile:SetAttribute(\"CreationTime\", tick()) -- Track the creation time for the interpolation function Projectile.Anchored = true Projectile.Parent = workspace local Force = 2 -- Horizontal movement speed of the projectile local Gravity = 2 -- Fall speed of the projectile --- Quadratic interpolation function to calculate the projectile's position -- @param startPos The starting position of the projectile -- @param force The force applied to the projectile (used for air resistance) -- @param currentTime The current time -- @return The new position of the projectile local function interpolate(startPos, force, currentTime) -- Calculate the vertical drop this frame, clamped to a maximum of 5 (terminal velocity) local drop = math.clamp(currentTime^2 / Gravity / force, 0, 5) -- Calculate the new position by subtracting the drop from the starting position local newPos = startPos - Vector3.new(0, drop, 0) return newPos end --- Function called every frame to update the projectile's position local function heartbeat() -- Get the creation time of the projectile local creationTime = Projectile:GetAttribute(\"CreationTime\") -- Calculate how long the projectile has existed local timeDifference = tick() - creationTime -- Set the new position for the projectile -- interpolate(Projectile.Position, Force, timeDifference) to get the new height -- Projectile.CFrame.LookVector to get the horizontal movement -- Projectile.Size.Z to avoid overlapping and skipping positions -- Increase the part's Z size to make it move faster Projectile.Position = interpolate(Projectile.Position, Force, timeDifference) + Projectile.CFrame.LookVector * Projectile.Size.Z end -- Connect the heartbeat function to the RunService.Heartbeat event RunService.Heartbeat:Connect(heartbeat)\n\nProjectileExample.rbxl (52.8 KB)\n\nUnanchored parts would be bad for performance and have unreliable physics when used on the client. I used anchored parts and moved them with a RunService.Heartbeat connection.\n\nCreate a Region3 to represent the projectile on the server, then use the interpolation function I provided to move that region forwards. Use Workspace:GetPartBoundsInBox to check for collisions.\n\nYou could use the interpolation function to visualize the movement of the part by updating its position, or have the server send the Region3 location to the client, and use that to visualize the part.\n\nAdditionally, optimize the collision detection logic and part movement using something like batch processing before using it in production.\n\nI went into the project and it works but I have some questions.\n\nIm guessing by remote events?\n\nAlso what is this?\n\nYes\n\nInstead of creating separate RunService.Heartbeat connections for each part’s collision detection, create a single connection that loops through a table of all the projectiles and processes them simultaneously. However, consider using BasePart.Touched first, as it may be more performant if it works correctly.\n\nYeah it would be my last resort using touched events for heavy physics based projectiles\n\nI didnt really find a answer to this question but i found some helpful topics like:\n\nThis works for linear projectiles with a predictable path but not really what im looking for\n\nIf you do not want it to be linear you can modify the equation.\n\nCurrently the equation is this on the Z axis\n\nlocal projectileTime = (respondedTick - startTickVal) local positionCFrame = spawnPoint * CFrame.new(0, 0, -45 * projectileTime )\n\nIf you want it to randomly start moving diagonally at 5 seconds in linearly you can use an if statement.\n\nlocal projectileTime = (respondedTick - startTickVal) if projectileTime > 10 then --Start moving in X axis instead local positionCFrame = spawnPoint * CFrame.new( -45 * (projectileTime-10), 0, -45 * projectileTime ) else local positionCFrame = spawnPoint * CFrame.new(0, 0, -45 * projectileTime ) end\n\nYou can even instead of just making it swerve 10 seconds in you can use math.random instead to make it even more unpredictable yet predictable.\n\nYou can also even add a quadratic equation instead to make a curved behavior.\n\nlocal positionCFrame = spawnPoint * CFrame.new(0, 0, -45 * projectileTime^2 -5*projectileTime )\n\nThe concept I did above was actually similar but not the same as fastcast using piecewise functions to seperate the projectile motions into sections."
    }
}