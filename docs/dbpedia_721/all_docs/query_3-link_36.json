{
    "id": "dbpedia_721_3",
    "rank": 36,
    "data": {
        "url": "https://itch.io/post/5216240",
        "read_more_link": "",
        "language": "en",
        "title": "Post by JP LeBreton in Playscii comments",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://static.itch.io/images/logo-black-new.svg",
            "https://static.itch.io/images/itchio-textless-black.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "No discord. The documentation is available from the Help menu as well as on the website: http://vectorpoem.com/playscii/howto_main.html That documentation covers both Art mode and Game mode. The latte",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "itch.io",
        "canonical_link": "https://jp.itch.io/playscii/comments",
        "text": "I have some experience designing game systems in a much simpler language, so I think I could knock out some prototypes or demos in Playscii once I get the hang of it.\n\nso far I've been playing around (trial and error), and I watched the youtube video for roguelike celebration\n\nI'm new-ish to python and its conventions, so there's quite a lot I don't know, and a lot that I want to know (I tried Godot with scripting based on Python, and tried my hand at a roguelike and text games in terminal using a python script)\n\nI had a look at the docs and example scripts of the included games, and there's a lot I still don't understand, sadly. The program keeps closing when I try to load a faulty script :P\n\nI saw there are a lot of commands in the docs, but I have no idea how to go about using them, looking them up, etc.,\n\nquite a lot text incoming:\n\nFor example,\n\n# CAMERA #\n\nHow can I handle the camera? How could I script a cutscene? Or if I wanted to swap the camera between multiple targets? Can I see some examples?\n\n- I can use camera_follows_player but don't know how to change camera properties like pan speed or zoom level. Do I need a camera instance?\n\n- I don't understand how i should call focus_object, Actually I didnt see focus_object in the generated docs, but in the \"game mode\" docs.\n\n# CONROLS#\n\nWhat is the advantage of Player Class? is there a way to toggle the player behaviour like moving with wasd/arrow keys? I am trying to use a Character to represent player objects instead so I can control multiple objects. Or should I use multiple Player objects?\n\nwhat If the player has multiple controllable units and can swap between them, or for co-op with 2 sets of controls?\n\nI figured out how to add my own input/ controls to control a Character rather than a player, and experimented with some HUD things okayish. That was a bit simpler.\n\nOrthogonal/Diagonal movement is such that you move faster overall when travelling diagonally. This always bothered me about roguelikes. I like that Dwarf Fortress addressed this. I added my own function to scale x/y values appropriately. Is there an in-built way to handle this? For example, handling radial movement? I should just use trig or pythagorean theorem I guess?\n\nHow would I shoot fireballs in 8(etc.,) directions all around the player? How could I shoot a fireball towards the mouse cursor?\n\nI assume I would have some class fireball, then in the actor, they would have their own fireball shooting function? or i could create a function outside of the actor that multiple actors could access?\n\n# COLLISION #\n\nI got some basic collision stuff working by looking at the shoot em up. I got it so that I can detect when hitboxes overlap, and to add non-colliding classes to hitboxes. Very useful! I'd also like to wrangle something like Line-Of-Sight and (basic) pathfinding.\n\nHow can I attach multiple separate types of hitbox to an actor? I want to use hitboxes to represent ranges like detection, fields, or ranges for various actions, so a single actor might have several distinct hitboxes.\n\nI thought I could use \"attach_to\" or \"attachment_classes\" for example, and attached a GameObjectAttachment, and set its collision data, but its hitbox doesnt seem to appear when I view hitboxes. Is this just a definition that I need an instance of? How would I do that?\n\n# SCOPE #\n\nIt might be useful to know what the main intended structural paradigms are. I don't know which scope I should be working in for each task.\n\nMain question is: Do I need an instance? for the world, camera, etc., and many other things, and if so how? sorry for noob questions.\n\nWhat is the purpose of the syntax like this \"self.world.HUD\" in a Player (from maze)? I can access the HUD (or other things through this)? is this the world class? it can be accessed from anywhere? or for that matter \"self.world.app\"? what scope or space does this represent? how does it relate to other objects? This is more like the project scope which manages resources?\n\nHow would I attach an instance to another instance? Is that impossible? How can I structure my instances with respect to each other to accomplish this? Can I do that from within one of the instances, or should I do this in a room or world or at init or whatever?\n\n# DOCS/DICT #\n\nIs there a listing of every single command in one place? Or a way to search all of them? Where would I look to find focus_object in the docs for example?\n\nI tried to get the __dict__ of members of a class a few times, but I dont know if this will show me all the relevant members/methods and other things, except by trying it on each object.\n\nI think I'm learning slowly and getting ideas for how I might approach things. I might create a special object to initialise the game objects using its update function, and then have it delete itself when it's done, for example?\n\nOr create some projectiles with a lifespan, which is how I've tried to handle particle systems and projectiles previously.\n\nI'd like to eventually get around to programatically creating \"sprites\" which seems extremely promising! for example visual representations of state changes to tiles or actors. and of course programatically creating maps would be cool.\n\nI like Playscii for its versatility :P you can go from simple micro projects or have something that will scale well as a custom engine for basically ANY type of game, from management sims, to RPGs, to strategy games, to action games. Really incredible stuff.\n\nMaybe I am a bit too ambitious, but Playscii honestly seems like it could handle any concept I can think of, and that's very exciting."
    }
}