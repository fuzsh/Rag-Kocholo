{
    "id": "dbpedia_6243_3",
    "rank": 30,
    "data": {
        "url": "https://livebook.manning.com/book/the-programmers-brain/chapter-8/",
        "read_more_link": "",
        "language": "en",
        "title": "8 How to get better at naming things · The Programmer's Brain",
        "top_image": "https://drek4537l1klr.cloudfront.net/hermans2/Figures/cover.jpg",
        "meta_img": "https://drek4537l1klr.cloudfront.net/hermans2/Figures/cover.jpg",
        "images": [
            "https://www.facebook.com/tr?id=1940497162877014&ev=PageView&noscript=1"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Comparing different perspectives on good naming practices · Understanding the relationship between names and cognitive processes · Exploring the effect of different naming styles · Investigating the effect of bad names on bugs and errors · Learning how to structure a variable name to maximize understanding",
        "meta_lang": "en",
        "meta_favicon": "https://d19npu3b8zepp3.cloudfront.net/assets/images/favicon.png?v=1",
        "meta_site_name": "",
        "canonical_link": "https://livebook.manning.com/book/the-programmers-brain/chapter-8",
        "text": "8 How to get better at naming things\n\nThis chapter covers\n\nComparing different perspectives on good naming practices\n\nUnderstanding the relationship between names and cognitive processes\n\nExploring the effect of different naming styles\n\nInvestigating the effect of bad names on bugs and errors\n\nLearning how to structure a variable name to maximize understanding\n\nPart 1 covered the different cognitive processes involved in reading code, including storing information in the LTM and retrieving it when needed, storing information in the STM, and processing code in the working memory. In part 2, we looked at how we think about code, what mental models are formed about code, and how we talk about code. In Part 3, we will zoom into the process of writing code rather than reading or thinking about it.\n\nThis chapter aims to study how to best name things in code, like variables, classes, and methods. Since we now know quite a bit about how the brain processes code, we can more deeply understand why naming is so important for code comprehension. Good names help activate your LTM to find relevant information you already know about the domain of the code. Bad names, on the other hand, can cause you to make assumptions about the code, leading to misconceptions.\n\n8.1 Why naming matters\n\n8.1.1 Why naming matters\n\n8.1.2 Different perspectives on naming\n\n8.1.3 Initial naming practices have a lasting impact\n\n8.2 Cognitive aspects of naming\n\n8.2.1 Formatting names supports your STM\n\n8.2.2 Clear names help your LTM\n\n8.2.3 Variable names can contain different types of information to help you understand them\n\n8.2.4 When to evaluate the quality of names\n\n8.3 What types of names are easier to understand?\n\n8.3.1. To abbreviate or not to abbreviate?\n\n8.3.2 Snake case or camel case?\n\n8.4 The influence of names on bugs\n\n8.4.1 Code with bad names has more bugs"
    }
}