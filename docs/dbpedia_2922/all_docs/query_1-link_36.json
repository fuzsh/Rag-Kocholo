{
    "id": "dbpedia_2922_1",
    "rank": 36,
    "data": {
        "url": "https://encyclopedia.pub/entry/30906",
        "read_more_link": "",
        "language": "en",
        "title": "Arduino",
        "top_image": "https://encyclopedia.pub/build/images/header_logo.png",
        "meta_img": "https://encyclopedia.pub/build/images/header_logo.png",
        "images": [
            "https://encyclopedia.pub/build/images/header_logo.png",
            "https://encyclopedia.pub/build/images/logo.png",
            "https://encyclopedia.pub/build/images/point-3.png",
            "https://encyclopedia.pub/media/item_content/202210/635640c77ebf5250px-The_first_Arduino.jpeg",
            "https://encyclopedia.pub/media/item_content/202210/635640c8143b3250px-Arduino-compatible_R3_UNO_Sku066313-01.jpg",
            "https://encyclopedia.pub/media/item_content/202210/635640c88da84250px-Arduino316.jpg",
            "https://encyclopedia.pub/media/item_content/202210/635640c96c8b0250px-UnoConnections.jpg",
            "https://encyclopedia.pub/media/item_content/202210/635640c9e6225250px-Power_and_Pin13_LED_on_Arduino_Compatible_Board.jpg",
            "https://encyclopedia.pub/media/banner/202408/huodongbanner85-66b2e82a63c33.jpg",
            "https://encyclopedia.pub/build/images/feedback_success.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2022-10-24T09:37:45+02:00",
        "summary": "",
        "meta_description": "Encyclopedia is a user-generated content hub aiming to provide a comprehensive record for scientific developments. All content free to post, read, share and reuse.",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://encyclopedia.pub/entry/30906",
        "text": "1. History\n\n1.1. Founding\n\nThe Arduino project was started at the Interaction Design Institute Ivrea (IDII) in Ivrea, Italy.[1] At that time, the students used a BASIC Stamp microcontroller at a cost of $50. In 2003 Hernando Barragán created the development platform Wiring as a Master's thesis project at IDII, under the supervision of Massimo Banzi and Casey Reas. Casey Reas is known for co-creating, with Ben Fry, the Processing development platform. The project goal was to create simple, low cost tools for creating digital projects by non-engineers. The Wiring platform consisted of a printed circuit board (PCB) with an ATmega128 microcontroller, an IDE based on Processing and library functions to easily program the microcontroller.[2] In 2005, Massimo Banzi, with David Mellis, another IDII student, and David Cuartielles, extended Wiring by adding support for the cheaper ATmega8 microcontroller. The new project, forked from Wiring, was called Arduino.[2]\n\nThe initial Arduino core team consisted of Massimo Banzi, David Cuartielles, Tom Igoe, Gianluca Martino, and David Mellis.[1]\n\nFollowing the completion of the platform, lighter and less expensive versions were distributed in the open-source community. It was estimated in mid-2011 that over 300,000 official Arduinos had been commercially produced,[3] and in 2013 that 700,000 official boards were in users' hands.[4]\n\n1.2. Trademark Dispute\n\nIn early 2008, the five co-founders of the Arduino project created a company, Arduino LLC,[5] to hold the trademarks associated with Arduino. The manufacture and sale of the boards was to be done by external companies, and Arduino LLC would get a royalty from them. The founding bylaws of Arduino LLC specified that each of the five founders transfer ownership of the Arduino brand to the newly formed company.\n\nAt the end of 2008, Gianluca Martino's company, Smart Projects, registered the Arduino trademark in Italy and kept this a secret from the other co-founders for about two years. This was revealed when the Arduino company tried to register the trademark in other areas of the world (they originally registered only in the US), and discovered that it was already registered in Italy. Negotiations with Martino and his firm to bring the trademark under control of the original Arduino company failed. In 2014, Smart Projects began refusing to pay royalties. They then appointed a new CEO, Federico Musto, who renamed the company Arduino SRL and created the website arduino.org, copying the graphics and layout of the original arduino.cc. This resulted in a rift in the Arduino development team.[6][7][8]\n\nIn January 2015, Arduino LLC filed a lawsuit against Arduino SRL.[9]\n\nIn May 2015, Arduino LLC created the worldwide trademark Genuino, used as brand name outside the United States.[10]\n\nAt the World Maker Faire in New York on 1 October 2016, Arduino LLC co-founder and CEO Massimo Banzi and Arduino SRL CEO Federico Musto announced the merger of the two companies.[11] Around that same time, Massimo Banzi announced that in addition to the company a new Arduino Foundation would be launched as \"a new beginning for Arduino\", but this decision was withdrawn later.[12][13]\n\nIn April 2017, Wired reported that Musto had \"fabricated his academic record... On his company's website, personal LinkedIn accounts, and even on Italian business documents, Musto was, until recently, listed as holding a PhD from the Massachusetts Institute of Technology. In some cases, his biography also claimed an MBA from New York University.\" Wired reported that neither university had any record of Musto's attendance, and Musto later admitted in an interview with Wired that he had never earned those degrees.[14] The controversy surrounding Musto continued when, in July 2017, he reportedly pulled many open source licenses, schematics, and code from the Arduino website, prompting scrutiny and outcry.[15]\n\nBy 2017 Arduino AG owned many Arduino trademarks. In July 2017 BCMI, founded by Massimo Banzi, David Cuartielles, David Mellis and Tom Igoe, acquired Arduino AG and all the Arduino trademarks. Fabio Violante is the new CEO replacing Federico Musto, who no longer works for Arduino AG.[16][17]\n\n1.3. Post-Dispute\n\nIn October 2017, Arduino announced its partnership with ARM Holdings (ARM). The announcement said, in part, \"ARM recognized independence as a core value of Arduino ... without any lock-in with the ARM architecture\". Arduino intends to continue to work with all technology vendors and architectures.[18]\n\nUnder Violante's guidance, the company started growing again and releasing new designs. The Genuino trademark was dismissed and all products were branded again with the Arduino name. As of February 2020, the Arduino community included about 30 million active users based on the IDE downloads.[19]\n\nIn August 2018, Arduino announced its new open source command line tool (arduino-cli), which can be used as a replacement of the IDE to program the boards from a shell.[20]\n\nIn February 2019, Arduino announced its IoT Cloud service as an extension of the Create online environment.[21]\n\n2. Hardware\n\nArduino is open-source hardware. The hardware reference designs are distributed under a Creative Commons Attribution Share-Alike 2.5 license and are available on the Arduino website. Layout and production files[22] for some versions of the hardware are also available.\n\nAlthough the hardware and software designs are freely available under copyleft licenses, the developers have requested the name Arduino to be exclusive to the official product and not be used for derived works without permission. The official policy document on use of the Arduino name emphasizes that the project is open to incorporating work by others into the official product.[23] Several Arduino-compatible products commercially released have avoided the project name by using various names ending in -duino.[24]\n\nMost Arduino boards consist of an Atmel 8-bit AVR microcontroller (ATmega8,[26] ATmega168, ATmega328, ATmega1280, or ATmega2560) with varying amounts of flash memory, pins, and features.[27] The 32-bit Arduino Due, based on the Atmel SAM3X8E was introduced in 2012.[28] The boards use single or double-row pins or female headers that facilitate connections for programming and incorporation into other circuits. These may connect with add-on modules termed shields. Multiple and possibly stacked shields may be individually addressable via an I2C serial bus. Most boards include a 5 V linear regulator and a 16 MHz crystal oscillator or ceramic resonator. Some designs, such as the LilyPad,[29] run at 8 MHz and dispense with the onboard voltage regulator due to specific form-factor restrictions.\n\nArduino microcontrollers are pre-programmed with a boot loader that simplifies uploading of programs to the on-chip flash memory. The default bootloader of the Arduino Uno is the Optiboot bootloader.[30] Boards are loaded with program code via a serial connection to another computer. Some serial Arduino boards contain a level shifter circuit to convert between RS-232 logic levels and transistor–transistor logic (TTL) level signals. Current Arduino boards are programmed via Universal Serial Bus (USB), implemented using USB-to-serial adapter chips such as the FTDI FT232. Some boards, such as later-model Uno boards, substitute the FTDI chip with a separate AVR chip containing USB-to-serial firmware, which is reprogrammable via its own ICSP header. Other variants, such as the Arduino Mini and the unofficial Boarduino, use a detachable USB-to-serial adapter board or cable, Bluetooth or other methods. When used with traditional microcontroller tools, instead of the Arduino IDE, standard AVR in-system programming (ISP) programming is used.\n\nThe Arduino board exposes most of the microcontroller's I/O pins for use by other circuits. The Diecimila,[31] Duemilanove,[32] and current Uno[33] provide 14 digital I/O pins, six of which can produce pulse-width modulated signals, and six analog inputs, which can also be used as six digital I/O pins. These pins are on the top of the board, via female 0.1-inch (2.54 mm) headers. Several plug-in application shields are also commercially available. The Arduino Nano, and Arduino-compatible Bare Bones Board[34] and Boarduino[35] boards may provide male header pins on the underside of the board that can plug into solderless breadboards.\n\nMany Arduino-compatible and Arduino-derived boards exist. Some are functionally equivalent to an Arduino and can be used interchangeably. Many enhance the basic Arduino by adding output drivers, often for use in school-level education,[36] to simplify making buggies and small robots. Others are electrically equivalent, but change the form factor, sometimes retaining compatibility with shields, sometimes not. Some variants use different processors, of varying compatibility.\n\n2.1. Official Boards\n\nThe original Arduino hardware was manufactured by the Italian company Smart Projects.[37] Some Arduino-branded boards have been designed by the American companies SparkFun Electronics and Adafruit Industries.[38] (As of 2016), 17 versions of the Arduino hardware have been commercially produced.\n\nArduino RS232[39]\n\n(male pins)\n\nArduino Diecimila[40]\n\nArduino Duemilanove[41]\n\n(rev 2009b)\n\nArduino Uno R2[42][43]\n\nArduino Uno SMD R3[44]\n\nArduino Leonardo[45]\n\nArduino micro(AtMega 32U4)\n\nArduino pro micro (AtMega32U4)\n\nArduino Pro[46]\n\n(No USB)\n\nArduino Mega[47]\n\nArduino Nano[48]\n\n(DIP-30 footprint)\n\nArduino LilyPad 00[49]\n\n(rev 2007) (No USB)\n\nArduino Robot[50]\n\nArduino Esplora[51]\n\nArduino Ethernet[52]\n\n(AVR + W5100)\n\nArduino Yún[53]\n\n(AVR + AR9331)\n\nArduino Due[54]\n\n(ARM Cortex-M3 core)\n\n2.2. Shields\n\nArduino and Arduino-compatible boards use printed circuit expansion boards called shields, which plug into the normally supplied Arduino pin headers.[55] Shields can provide motor controls for 3D printing and other applications, GNSS (satellite navigation), Ethernet, liquid crystal display (LCD), or breadboarding (prototyping). Several shields can also be made do it yourself (DIY).[56][57][58]\n\nSome shields offer stacking headers which allows multiple shields to be stacked on top of an Arduino board. Here, a prototyping shield is stacked on two Adafruit motor shield V2s.\n\nScrew-terminal breakout shield in a wing-type format, allowing bare-end wires to be connected to the board without requiring any specialized pins.\n\nAdafruit Datalogging Shield with a Secure Digital (SD) card slot and real-time clock (RTC) chip along with some space for adding components and modules for customization.\n\nAdafruit Motor Shield with screw terminals for connection to motors. Officially discontinued, this shield may still be available through unofficial channels.\n\nThe Adafruit motor shield V2 uses I2C, requiring vastly fewer digital I/O pins than attaching each motor directly.\n\nA USB host shield which allows an Arduino board to communicate with a USB device such as a keyboard or a mouse.\n\n3. Software\n\nA program for Arduino hardware may be written in any programming language with compilers that produce binary machine code for the target processor. Atmel provides a development environment for their 8-bit AVR and 32-bit ARM Cortex-M based microcontrollers: AVR Studio (older) and Atmel Studio (newer).[59][60][61]\n\n3.1. IDE\n\nThe Arduino integrated development environment (IDE) is a cross-platform application (for Microsoft Windows, macOS, and Linux) that is written in the Java programming language. It originated from the IDE for the languages Processing and Wiring. It includes a code editor with features such as text cutting and pasting, searching and replacing text, automatic indenting, brace matching, and syntax highlighting, and provides simple one-click mechanisms to compile and upload programs to an Arduino board. It also contains a message area, a text console, a toolbar with buttons for common functions and a hierarchy of operation menus. The source code for the IDE is released under the GNU General Public License, version 2.[62]\n\nThe Arduino IDE supports the languages C and C++ using special rules of code structuring. The Arduino IDE supplies a software library from the Wiring project, which provides many common input and output procedures. User-written code only requires two basic functions, for starting the sketch and the main program loop, that are compiled and linked with a program stub main() into an executable cyclic executive program with the GNU toolchain, also included with the IDE distribution. The Arduino IDE employs the program avrdude to convert the executable code into a text file in hexadecimal encoding that is loaded into the Arduino board by a loader program in the board's firmware.\n\nFrom version 1.8.12, Arduino IDE windows compiler supports only Windows 7 or newer OS. On Windows Vista or older one gets \"Unrecognized Win32 application\" error when trying to verify/upload program. To run IDE on older machines, users can either use version 1.8.11, or copy \"arduino-builder\" executable from version 11 to their current install folder as it's independent from IDE.[63]\n\n3.2. IDE 2.0\n\nOn October 18, 2019, Arduino Pro IDE (alpha preview) was released. Later, on March 1, 2021, the beta preview was released, renamed IDE 2.0. The system still uses Arduino CLI (Command Line Interface), but improvements include a more professional development environment, autocompletion support, and Git integration.[64] The application frontend is based on the Eclipse Theia Open Source IDE. The main features available in the new release are:[65]\n\nModern, fully featured development environment\n\nDual Mode, Classic Mode (identical to the Classic Arduino IDE) and Pro Mode (File System view)\n\nNew Board Manager\n\nNew Library Manager\n\nBoard List\n\nBasic Auto-Completion (Arm targets only)\n\nGit Integration\n\nSerial Monitor\n\nDark Mode\n\n3.3. Sketch\n\nA sketch is a program written with the Arduino IDE.[66] Sketches are saved on the development computer as text files with the file extension .ino. Arduino Software (IDE) pre-1.0 saved sketches with the extension .pde.\n\nA minimal Arduino C/C++ program consists of only two functions:[67]\n\nsetup(): This function is called once when a sketch starts after power-up or reset. It is used to initialize variables, input and output pin modes, and other libraries needed in the sketch. It is analogous to the function main().[68]\n\nloop(): After setup() function exits (ends), the loop() function is executed repeatedly in the main program. It controls the board until the board is powered off or is reset. It is analogous to the function while(1).[69]\n\nMost Arduino boards contain a light-emitting diode (LED) and a current limiting resistor connected between pin 13 and ground, which is a convenient feature for many tests and program functions.[70] A typical program used by beginners, akin to Hello, World!, is \"blink\", which repeatedly blinks the on-board LED integrated into the Arduino board. This program uses the functions pinMode(), digitalWrite(), and delay(), which are provided by the internal libraries included in the IDE environment.[71][72][73] This program is usually loaded into a new Arduino board by the manufacturer.\n\n# define LED_PIN 13 // Pin number attached to LED. void setup() { pinMode(LED_PIN, OUTPUT); // Configure pin 13 to be a digital output. } void loop() { digitalWrite(LED_PIN, HIGH); // Turn on the LED. delay(1000); // Wait 1 second (1000 milliseconds). digitalWrite(LED_PIN, LOW); // Turn off the LED. delay(1000); // Wait 1 second. }\n\n3.4. Libraries\n\nThe open-source nature of the Arduino project has facilitated the publication of many free software libraries that other developers use to augment their projects.\n\n3.5. Operating Systems/Threading\n\nThere is a Xinu OS port for the atmega328p (Arduino Uno and others with the same chip), which includes most of the basic features.[74] The source code of this version is freely available.[75]\n\nThere is also a threading tool, named Protothreads. Protothreads are described as \"extremely lightweight stackless threads designed for severely memory constrained systems, such as small embedded systems or wireless sensor network nodes.[76]\n\n4. Applications\n\nArduboy, a handheld game console based on Arduino\n\nArduinome, a MIDI controller device that mimics the Monome\n\nArdupilot, drone software and hardware\n\nArduSat, a cubesat based on Arduino.\n\nC-STEM Studio, a platform for hands-on integrated learning of computing, science, technology, engineering, and mathematics (C-STEM) with robotics.\n\nData loggers for scientific research.[77][78][79][80]\n\nOBDuino, a trip computer that uses the on-board diagnostics interface found in most modern cars\n\nOpenEVSE an open-source electric vehicle charger\n\nXOD, a visual programming language for Arduino\n\nTinkercad, an analog and digital simulator supporting Arduino Simulation\n\n5. Recognitions\n\nThe Arduino project received an honorary mention in the Digital Communities category at the 2006 Prix Ars Electronica.[81]"
    }
}