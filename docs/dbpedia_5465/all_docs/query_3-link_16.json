{
    "id": "dbpedia_5465_3",
    "rank": 16,
    "data": {
        "url": "https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-config",
        "read_more_link": "",
        "language": "en",
        "title": "Atlassian Git Tutorial",
        "top_image": "https://www.atlassian.com/favicon-32x32.png",
        "meta_img": "https://www.atlassian.com/favicon-32x32.png",
        "images": [
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/AtlassianHeaderLogo.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Confluence.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Service-Management.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Trello.svg",
            "https://wac-cdn-bfldr.atlassian.com/K3MHR9G8/at/k5xhw8hpqxghzb55nfktt4/logo-light_Rovo_mark_brand_RGB.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Product-Discovery.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Compass.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Guard.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Loom.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Bitbucket.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Compass.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Confluence.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Product-Discovery.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Service-Management.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Guard.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Confluence.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Trello.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Loom.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Align.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Confluence.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Loom.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-software.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-software-hover.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-marketing.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-marketing-hover.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-it.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-it-hover.svg",
            "https://wac-cdn.atlassian.com/dam/jcr:64d5612a-3e1e-464e-b76a-a3712560d81b/git-branch.png?cdnVersion=2147",
            "https://wac-cdn.atlassian.com/dam/jcr:03116c1f-27e5-4a82-9b9b-806786578fb2/logos-bitbucket-icon-gradient-blue-121x109@2x.png?cdnVersion=2147",
            "https://wac-cdn.atlassian.com/dam/jcr:2642fbab-a771-4961-9648-806c2fff25e5/bitbucket-blog-resized.png?cdnVersion=2147",
            "https://wac-cdn.atlassian.com/dam/jcr:d1f1a28b-11fc-4e22-b6c8-d47832b39d53/devops-learning-path-resized.png?cdnVersion=2147",
            "https://wac-cdn.atlassian.com/dam/jcr:73c6bd92-448f-4ae7-a6c1-5f4695f78692/demo-den-resized.png?cdnVersion=2147",
            "https://wac-cdn.atlassian.com/dam/jcr:9c4bf443-5045-4ff9-a48d-36ae466f3ced/logos-atlassian-mini-icon-onecolor-blue.svg?cdnVersion=2147"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "The git config command is a convenience function that is used to set Git configuration values on a global or local project level. Learn more here.",
        "meta_lang": "en",
        "meta_favicon": "/favicon-16x16.png",
        "meta_site_name": "Atlassian",
        "canonical_link": "https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-config",
        "text": "In this document, we'll take an in-depth look at the git config command. We briefly discussed git config usage on our Setting up a Repository page.\n\nThe git config command is a convenience function that is used to set Git configuration values on a global or local project level. These configuration levels correspond to .gitconfig text files. Executing git config will modify a configuration text file.\n\nWe'll be covering common configuration settings like email, username, and editor. We'll discuss Git aliases, which allow you to create shortcuts for frequently used Git operations. Becoming familiar with git config and the various Git configuration settings will help you create a powerful, customized Git workflow.\n\n--local\n\nBy default, git config will write to a local level if no configuration option is passed. Local level configuration is applied to the context repository git config gets invoked in. Local configuration values are stored in a file that can be found in the repo's .git directory: .git/config\n\n--global\n\nGlobal level configuration is user-specific, meaning it is applied to an operating system user. Global configuration values are stored in a file that is located in a user's home directory. ~ /.gitconfig on unix systems and C:\\Users\\\\.gitconfig on windows\n\n--system\n\nSystem-level configuration is applied across an entire machine. This covers all users on an operating system and all repos. The system level configuration file lives in a gitconfig file off the system root path. $(prefix)/etc/gitconfig on unix systems. On windows this file can be found at C:\\Documents and Settings\\All Users\\Application Data\\Git\\config on Windows XP, and in C:\\ProgramData\\Git\\config on Windows Vista and newer.\n\nThus the order of priority for configuration levels is: local, global, system. This means when looking for a configuration value, Git will start at the local level and bubble up to the system level.\n\nIn the event of a merge conflict, Git will launch a \"merge tool.\" By default, Git uses an internal implementation of the common Unix diff program. The internal Git diff is a minimal merge conflict viewer. There are many external third party merge conflict resolutions that can be used instead. For an overview of various merge tools and configuration, see our guide on tips and tools to resolve conflits with Git.\n\nBy default, color.ui is set to auto which will apply colors to the immediate terminal output stream. The auto setting will omit color code output if the output stream is redirected to a file or piped to another process.\n\nYou can set the color.ui value to always which will also apply color code output when redirecting the output stream to files or pipes. This can unintentionally cause problems since the receiving pipe may not be expecting color-coded input.\n\nIn addition to color.ui, there are many other granular color settings. Like color.ui, these color settings can all be set to false, auto, or always. These color settings can also have a specific color value set. Some examples of supported color values are:\n\nnormal\n\nblack\n\nred\n\ngreen\n\nyellow\n\nblue\n\nmagenta\n\ncyan\n\nwhite\n\nColors may also be specified as hexadecimal color codes like #ff0000, or ANSI 256 color values if your terminal supports it.\n\nYou may be familiar with the concept of aliases from your operating system command-line; if not, they're custom shortcuts that define which command will expand to longer or combined commands. Aliases save you the time and energy cost of typing frequently used commands. Git provides its own alias system. A common use case for Git aliases is shortening the commit command. Git aliases are stored in Git configuration files. This means you can use the git config command to configure aliases."
    }
}