{
    "id": "dbpedia_5465_3",
    "rank": 12,
    "data": {
        "url": "https://docs.aws.amazon.com/cli/v1/userguide/cli-chap-troubleshooting.html",
        "read_more_link": "",
        "language": "en",
        "title": "Troubleshoot AWS CLI errors",
        "top_image": "https://docs.aws.amazon.com/assets/images/favicon.ico",
        "meta_img": "https://docs.aws.amazon.com/assets/images/favicon.ico",
        "images": [
            "https://d1ge0kk1l5kms0.cloudfront.net/images/G/01/webservices/console/warning.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "AWS CLI",
            "AWS Command Line Interface",
            "AWS CLI troubleshoot",
            "AWS Command Line Interface troubleshoot",
            "AWS CLI errors",
            "AWS Command Line Interface errors",
            "AWS CLI command not found",
            "AWS Command Line Interface command not found",
            "AWS CLI access denied",
            "AWS Command Line Interface access denied"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "This section covers common errors and troubleshooting steps to follow to diagnose and fix a variety of AWS Command Line Interface errors you may encounter.",
        "meta_lang": "en",
        "meta_favicon": "/assets/images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://docs.aws.amazon.com/cli/v1/userguide/cli-chap-troubleshooting.html",
        "text": "This section covers common errors and troubleshooting steps to follow to resolve your issue. We suggest following the general troubleshooting first.\n\nGeneral troubleshooting to try first\n\nIf you receive an error or encounter an issue with the AWS CLI, we suggest the following general tips to help you troubleshoot.\n\nBack to top\n\nCheck your AWS CLI command formatting\n\nIf you receive an error that indicates that a command doesn't exist, or that it doesn't recognize a parameter (Parameter validation failed) that the documentation says is available , then your command might be formatted incorrectly. We suggest that you check the following:\n\nFor more information on how a specific command should be structured, see the AWS CLI reference guide.\n\nBack to top\n\nCheck the AWS Region your AWS CLI command is using\n\nErrors or unexpected results might occur if an AWS service isn't available for your specified AWS Region or your resources are located in a different AWS Region. In order of precedence, the AWS Region is set in the following ways:\n\nConfirm you're using the correct AWS Region for your resources.\n\nBack to top\n\nConfirm that you're running a recent version of the AWS CLI\n\nIf you receive an error that indicates that a command doesn't exist, or that it doesn't recognize a parameter that the AWS CLI reference guide says is available, first confirm that your command is correctly formatted. If the formatting is correct, then we recommend that you upgrade to the most recent version of the AWS CLI. Updated versions of the AWS CLI are released almost every business day. New AWS services, features, and parameters are introduced in those new versions of the AWS CLI. The only way to get access to those new services, features, or parameters is to upgrade to a version that was released after that element was first introduced.\n\nHow you update your version of the AWS CLI depends on how you originally installed it as described in Install, update, and uninstall the AWS CLI.\n\nIf you used one of the bundled installers, you might need to remove the existing installation before you download and install the latest version for your operating system.\n\nBack to top\n\nUse the --debug option\n\nWhen the AWS CLI reports an error that you don't immediately understand, or produces results that you don't expect, you can get more detail about the error by running the command again with the --debug option. With this option, the AWS CLI outputs details about every step it takes to process your command. The details in the output can help you to determine when the error occurs and provides clues about where it started.\n\nYou can send the output to a text file for later review, or to send to AWS Support when asked for it.\n\nWhen you include the --debug option, some of the details include:\n\nHere's an example of a command run with and without the --debug option.\n\n$ aws iam list-groups --profile MyTestProfile { \"Groups\": [ { \"Path\": \"/\", \"GroupName\": \"MyTestGroup\", \"GroupId\": \"AGPA0123456789EXAMPLE\", \"Arn\": \"arn:aws:iam::123456789012:group/MyTestGroup\", \"CreateDate\": \"2019-08-12T19:34:04Z\" } ] }\n\nBack to top\n\nEnable and review the AWS CLI command history logs\n\nYou can enable the AWS CLI command history logs using the cli_history file setting. After enabling this setting, the AWS CLI records the history of aws commands.\n\nYou can this list your history using the aws history list command, and use the resulting command_ids in the aws history show command for details. For more information see aws history in the AWS CLI reference guide.\n\nWhen you include the --debug option, some of the details include:\n\nYou can use this information to confirm paramater data and API calls are behaving in the way you expect, and can then deduce at what step in the process your command is failing.\n\nBack to top\n\nConfirm that your AWS CLI is configured\n\nVarious errors can occur if your config and credentials files or your IAM user or role is not configured correctly. For more information on resolving errors with config and credentials files or your IAM user or roles, see Access denied errors and Invalid credentials and key errors.\n\nBack to top\n\nCommand not found errors\n\nThis error means that the operating system can't find the AWS CLI command. The installation might be incomplete or requires updating.\n\nBack to top\n\nThe \"aws --version\" command returns a different version than you installed\n\nYour terminal might be returning a different PATH for the AWS CLI than you expect.\n\nThe \"aws --version\" command returns a version after uninstalling the AWS CLI\n\nThis often occurs when there is still an AWS CLI installed somewhere on your system.\n\nThe AWS CLI processed a command with an incomplete parameter name\n\nAccess denied errors\n\nInvalid credentials and key errors\n\nExample error text:\n\n$ aws s3 ls An error occurred (InvalidAccessKeyId) when calling the ListBuckets operation: The AWS Access Key Id you provided does not exist in our records.\n\n$ aws s3 ls An error occurred (InvalidClientTokenId) when calling the ListBuckets operation: The security token included in the request is invalid.\n\nSignature does not match errors\n\nExample error text:\n\n$ aws s3 ls An error occurred (SignatureDoesNotMatch) when calling the ListBuckets operation: The request signature we calculated does not match the signature you provided. Check your key and signing method.\n\nWhen the AWS CLI runs a command, it sends an encrypted request to the AWS servers to perform the appropriate AWS service operations. Your credentials (the access key and secret key) are involved in the encryption and enable AWS to authenticate the person making the request. There are several things that can interfere with the correct operation of this process, as follows.\n\nNo Windows console found errors\n\nExample error text:\n\n$ aws s3 ls No Windows console found. Are you running cmd.exe?\n\nWhen you use an AWS CLI command, you receive a \"No Windows console found. Are you running cmd.exe?\" error message. This is usually an error seen for the AWS CLI version 1 if the Python prompt_toolkit you have installed is outdated. To resolve this issue, install a recent version of the prompt_toolkit on the Python website.\n\nBack to top\n\nSSL certificate errors\n\nInvalid JSON errors\n\nExample error text:\n\n$ aws dynamodb update-table \\ --provisioned-throughput '{\"ReadCapacityUnits\":15,WriteCapacityUnits\":10}' \\ --table-name MyDDBTable Error parsing parameter '--provisioned-throughput': Invalid JSON: Expecting property name enclosed in double quotes: line 1 column 25 (char 24) JSON received: {\"ReadCapacityUnits\":15,WriteCapacityUnits\":10}\n\nWhen you use an AWS CLI command, you receive a \"Invalid JSON\" error message. This is usually an error seen when you enter a command with an expected JSON format and the AWS CLI cannot read your JSON correctly.\n\nAdditional resources\n\nFor additional help with your AWS CLI issues, visit the AWS CLI community on GitHub or the AWS re:Post community."
    }
}