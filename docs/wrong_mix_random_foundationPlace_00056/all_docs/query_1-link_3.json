{
    "id": "wrong_mix_random_foundationPlace_00056_1",
    "rank": 3,
    "data": {
        "url": "https://www.satisfice.com/blog/archives/74",
        "read_more_link": "",
        "language": "en",
        "title": "Context-Driven Methodology",
        "top_image": "https://www.satisfice.com/wp-content/uploads/2018/12/cropped-SL3-1-32x32.png",
        "meta_img": "https://www.satisfice.com/wp-content/uploads/2018/12/cropped-SL3-1-32x32.png",
        "images": [
            "https://www.satisfice.com/wp-content/uploads/2019/01/RSTLogo_Satisfice-768x269.jpg",
            "https://secure.gravatar.com/avatar/ec4c874813903d8802c05bfd532b0a5c?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/ec4c874813903d8802c05bfd532b0a5c?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/8dc1dfdbfb46da170ac4fbe8f2b8afc6?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/c8e896dda863c69997d1fb2b4520272a?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/2685b790612e997fb3482457de3b3cc6?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/0975def48d06624fd25120a16ed743d2?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/91ea78b014b2ae2109ea148664006941?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/029780fa46bfc1d919adc994c3d0abb3?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/91ea78b014b2ae2109ea148664006941?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/8a38983770c990ee9fd88be3d1909f81?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/782b39952d2adeb531b35d000e173c3b?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/41e8978a08684ee5d6e1490e6e09b401?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/daa4a494316b1285599e45037c9c1a5b?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/f8e9df37af1dceb07b49a3c2c93dcfd4?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/44ee5b93282ee5000172118cd9b5b740?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/72d491c9c2601279a4a54b4af38ca17b?s=48&d=mm&r=g",
            "https://secure.gravatar.com/avatar/becf3bbf724291576acfe36d3d331b9a?s=48&d=mm&r=g"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Erwin Van Trier says",
            "keith ray says",
            "John McConda says",
            "David Holroyd says",
            "Mondo T says",
            "Eric N says",
            "Izzati Jamal says",
            "Jasmine Sureddi says",
            "Scott says",
            "Steve Campbell says"
        ],
        "publish_date": "2006-11-04T07:23:24-08:00",
        "summary": "",
        "meta_description": "Today I am writing about the Context-Driven school of software testing. This is a community that initially coalesced around Cem Kaner’s Los Altos Workshops on Software Testing (the LAWST meetings), in the late 90’s. I am a founding member of that community. In the last two years, more people have joined the community of active […]",
        "meta_lang": "en",
        "meta_favicon": "https://www.satisfice.com/wp-content/uploads/2018/12/cropped-SL3-1-32x32.png",
        "meta_site_name": "Satisfice, Inc.",
        "canonical_link": "https://www.satisfice.com/blog/archives/74",
        "text": "Today I am writing about the Context-Driven school of software testing. This is a community that initially coalesced around Cem Kaner’s Los Altos Workshops on Software Testing (the LAWST meetings), in the late 90’s. I am a founding member of that community.\n\nIn the last two years, more people have joined the community of active context-driven thinkers, helping to develop the notion of what “context-driven” means for testing. I feel like we have a critical mass.\n\nSchools of Thought\n\nIn this context, “school” relates to this definition from Merriam-Webster’s Dictionary:\n\n4 a: a group of persons who hold a common doctrine or follow the same teacher (as in philosophy, theology, or medicine) the Aristotelian school; also: the doctrine or practice of such a group b: a group of artists under a common influence c: a group of persons of similar opinions or behavior; also: the shared opinions or behavior of such a group other schools of thought\n\nThis definition is a good start, but we are referring to a stronger sense of school: a paradigm; an ontology; a way of organizing, experiencing, and thinking about the entire field. In other words, in the way I use the term, it’s not possible to belong to more than one school of testing at a time. If you tried to be in two schools at once, the school I think you would actually belong to would be a new school called Confused.\n\nThe value of the school concept is that it allows us to make progress in our work without constantly having the same fruitless arguments with people who are pursuing a fundamentally different view of the field.\n\nI see the testing world in terms of six major schools of testing. These include the â€œbreakthroughâ€? schools of Analytical, Control, and Test-Driven Design, and the â€œpragmaticâ€? schools of Oblivious, Factory, and Context-Driven. The breakthrough schools generally hope to reduce or eliminate the need for independent testing. The pragmatic schools generally accept the idea of dedicated software testers and deal with the problem of how testers should get the job done.\n\nTo the best of my knowledge, only my school has named itself. Bret Pettichord, Cem Kaner, and I, came up with the names for the other schools. More on the first five in another post, right now I want to focus on the world from the Context-Driven school perspective.\n\nThe Context Driven Basics\n\nCem Kaner came up with the term “context-driven”, in 1999. Cem and I drafted the principles of the Context-Driven School in 2001. Context-driven is all about people solving problems.\n\n“Context-driven” means to match your solutions to your problems as your problems change. The principles of my particular flavor of Context-Driven methodology can be found here.\n\nConsider this rant:\n\nStop memorizing things people say are solutions, then applying them without understanding how or if they actually solve the problems you face.Don’t pretend to solve problems– really solve them. Don’t solve pretend problems– really solve real problems. And you know what? Those problems are going to shift and change, sometimes day by day or minute by minute.\n\nIf you think you can do good work by following some guru’s scripted Best Practice, you might as well blindfold yourself, take a dozen sleeping pills, and drive the Daytona 500. But the nice thing about driving blind in the Daytona 500 is that you know when you’ve crashed and burned. The hard thing about software testing is that you can do terrible work for years and not realize it until some uber-bug that you could have and should have found nails some poor user right in his “GUI components.” Even then, you’ll probably just blame the developers for putting the bug there in the first place.\n\nIf you want to take responsibility for the quality of your own work, practices won’t save you: what saves you is your skill, plus your ambition to use your skill. I’m not saying you should ignore practices, nor should you hate them. Just don’t worship them.\n\nTo learn to test is to learn to solve testing problems in every situation (we call them contexts) that you encounter. If you do that, your process will unfold naturally, your methods will be fluid, your practice balanced and flexible. So ask yourself, do you have the skills you need? Ask yourself, is your testing fitting your context?\n\n(That’s the end of the rant.)\n\nI like ranting, sometimes. In a rant, I can bring the world into sharp focus. I can say bold, definite things. Unfortunately, the rant above, while advocating the context-driven attitude, is not itself an example of that attitude. Do you see why?\n\nLet me explain…\n\nFour Attitudes Toward Context\n\nWhen I say “context” I mean the totality of a situation that influences the success or failure of an enterprise. If I want my testing to be successful, I need to behave, somehow, in harmony with the aspects of my world that make testing success possible. For instance, I’m not going to introduce the test technique of cause-effect graphing into the context of a team that has no idea what that means or how to do it, and no time or resources to figure it out.\n\nEverybody copes with context. I see four interesting flavors of coping:\n\nContext-Oblivious\n\nTo be context-oblivious is to be unaware of the relationships between the way you work and the many aspects of the context in which you work. A context-oblivious practitioner is aware of doing things, but can’t tell us why it’s done that way. This is typical of novices, of course, but also of experienced people who do not like to think about methodology (a methodology being a system of methods; a method being some way of doing something).\n\nCompletely context-oblivious testers simply don’t read blogs like this. What would be the point?\n\nContext-Specific\n\nTo be context-specific is to be adapted to a context and to know that you are adapted. You know what problems you face, and you solve them. But those problems don’t change, and therefore you don’t need to adjust your solutions.\n\nMost of us Americans would say we know how to drive a car. When we say that we are thinking of a particular context: driving on ordinary public roads in ordinary weather in ordinary cars. Any ordinary car driver in America would know that our driving skill in that context probably does not carry over to driving a race car in the Daytona 500 (even without a blindfold). Still less does it carry over to “driving” an airplane, even though there are many elements in common between airplanes and cars.\n\nI don’t need to learn how to drive a race car, because I’m not in that context, and I don’t even need to learn how to drive in unfamiliar situations, because I simply don’t drive in unfamiliar situations.\n\nIt’s easy to believe that being context-specific is good enough, but beware: What if you suddenly lose half your team, or part of your testing get outsourced, or features of your product change radically, or you have to adapt to use a new tool. You may not have the option of adapting to one context only.\n\nContext-Imperial\n\nTo be context-imperial is to keep your solutions the same while striving to change the context around you to fit those solutions.\n\nA classic example is when a tester refuses to test without a “complete specification” instead of learning how to test with or without a spec.\n\nAnother classic example is the typical testing consultant who asserts we should all use some Best Practice he has in his mind. When it doesn’t work, he says we must not be using “engineering discipline” to follow the golden path to success, or maybe we don’t have “upper management support” to force us to do the right thing. The solution can’t be wrong, so the context must be.\n\nA modern example is the Agilist who insists that test-driven design is the only good way to write software, and the all software must therefore be written in an object-oriented language, and that 100% of all tests must be automated, because otherwiseâ€¦ wellâ€¦ itâ€™s just not Agile! Kent Beck has spoken! Donâ€™t anger the gods of Agile!\n\nIt’s the context-imperialists who bug me most. They are like doctors who prescribe medicine to patients they’ve never examined.\n\nContext-Driven\n\nTo be context-driven is to behave as if there is literally no such thing as a best practice. All we can hope for is good practices in context. Context-driven methodologists are very interested in learning about practices. Then they decompose and recompose them to fit the situation at hand.\n\nTo summarize the attitudes of practitionersâ€¦\n\nThe context-oblivious simply follow convention.\n\nThe context-specific cultivate the skill to succeed in one stable corner of the world.\n\nThe context-imperial insist that the world change to suit their own skill.\n\nThe context-driven cultivate the skill to adapt to a changing world.\n\nThese Attitudes Are Not Mutually Exclusive\n\nI said the four types above were attitudes, not schools. (Note that I’m using the same label “context-driven” as both the name of an attitude toward context and the name of my school of testing thought which is centered on that attitude.) That’s because these attitudes, unlike schools, can mix together.\n\nEven the most ardent context-driven methodologist (and I suspect I am that person) cannot be aware of all the aspects of context that matter in every situation. For instance, if a tester is secretly planning to sabotage the project, I don’t necessarily take that into account when planning that project. In that respect, I am context-oblivious.\n\nI am also partly context-specific, because all my thinking about testing is colored and biased by the kinds of projects I have worked on in the past. Since I have done little military work, for instance, my ideas and calculations are probably different than they would be if I had grown up as a tester in that world.\n\nI am also context-imperial, in some ways. If you want me to design a test process for a commercial product with the requirement that every single test be procedurally specified and placed into a test case management system, I would probably tell you that it sounds like a formula for bad testing and I would try to get you to change your mind. I’m not confident I can be successful in that context.\n\nDespite all that, my self-image and my pride as a tester lies mostly with my belief that I can and I should be able to see a wide range of solutions to nearly any problem. That’s what being skilled in this craft of testing means to me.\n\nLook Again at the Rant\n\nSee the unqualified assertions in the rant (e.g. â€œThose problems are going to shift and changeâ€¦â€?)? When directed to a person in a context I know nothing of, they are the hallmarks of the context-imperial attitude. The context-driven way is to make speak in conditionals (â€œIf your problems shift and changeâ€¦â€?) and qualifiers (â€œâ€¦then you might find it useful to learn how to adapt your solutions to fit.â€?), or else stick to speaking about my own experience (â€œI find it rewarding to study the dynamics of testing problems in general, so that I can solve them no matter how they shift and change. This is because, as a consultant, I am asked to give advice in a wide range of situations.â€?)\n\nIf you look at my writing on this blog closely, you will notice that I use conditionals, qualifiers and personal experiences a great deal. Now you know why. Itâ€™s the price of belonging to the Context-Driven school.\n\nContext-Driven Challenge\n\nAny decent context-driven thinker can cite at least three scenarios where taking the context-driven attitude would be a bad idea. Can you think of them?"
    }
}