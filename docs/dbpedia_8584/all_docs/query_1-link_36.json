{
    "id": "dbpedia_8584_1",
    "rank": 36,
    "data": {
        "url": "https://www.jetbrains.com/help/rider/Code_Cleanup__Index.html",
        "read_more_link": "",
        "language": "en",
        "title": "JetBrains Rider Documentation",
        "top_image": "https://resources.jetbrains.com/storage/products/rider/img/meta/preview.png",
        "meta_img": "https://resources.jetbrains.com/storage/products/rider/img/meta/preview.png",
        "images": [
            "https://resources.jetbrains.com/help/img/rider/2024.2/app.resharper.Common.Edit.svg",
            "https://resources.jetbrains.com/help/img/rider/2024.2/app.ide.notification.gearHover.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://jetbrains.com/apple-touch-icon.png",
        "meta_site_name": "JetBrains Rider Help",
        "canonical_link": "https://www.jetbrains.com/help/rider/Code_Cleanup__Index.html",
        "text": "Code cleanup\n\nJetBrains Rider allows you to apply formatting and other code style preferences in a bulk mode to instantly eliminate code style violations in one or more files, in a project or in the entire solution.\n\nCode cleanup profiles\n\nCode cleanup can have various configurations (profiles) to apply in different cases according to your needs. There are three default profiles available out of the box:\n\nBuilt-in: Reformat Code that only applies code formatting preferences\n\nBuilt-in: Reformat & Apply Syntax Style that applies code formatting preferences and code syntax styles.\n\nBuilt-in: Full Cleanup that applies all available cleanup tasks except updating file header.\n\nThese profiles help in most cases but you cannot configure them. If you want to run code cleanup with the custom set of cleanup tasks, you need to create a custom profile and specify the set of desired tasks there.\n\nCreate a new custom cleanup profile\n\nPress Ctrl+Alt+S or choose File | Settings (Windows and Linux) or JetBrains Rider | Preferences (macOS) from the menu .\n\nGo to the cleanup profiles settings page: Editor | Code Cleanup.\n\nClick Add on the top of the page. JetBrains Rider will create a new cleanup profile .\n\nSelect the newly created profile in the list of profiles.\n\nUse the right pane to configure the list of tasks in the selected profile.\n\nClick Save in the Settings dialog to apply the modifications and let JetBrains Rider choose where to save them, or save the modifications to a specific settings layer by choosing this layer from the Save selector. For more information, see layer-based settings.\n\nYour newly created cleanup profile will be available in the Reformat and Cleanup Code dialog when you are running code cleanup. You can also set this profile to be used for the silent cleanup.\n\nRun code cleanup\n\nJetBrains Rider can apply code cleanup to an arbitrarily selected block of code, all code in the current file, all files in a directory, files in the current VCS changelist, the current project, or even the current solution. Make sure that you select the right set of cleanup tasks by choosing the right cleanup profile.\n\nClean up selection or file\n\nSelect the scope where you want to clean up code:\n\nMake a selection in the editor to clean up code in the selection.\n\nPlace the caret anywhere in the file to clean up code in the file.\n\nIf you are cleaning up a selection, press Alt+Enter and choose Reformat and cleanup | [cleanup profile].\n\nAlternatively you can follow the below steps, which work for both selection and file.\n\nPress Ctrl+R, C or choose Code | Reformat and Cleanupâ¦ from the main menu .\n\nIn the Reformat and Cleanup Code dialog that opens, you can check and optionally change the scope for cleaning code and choose a cleanup profile to apply. Use the area to the right of the selected profile to check the tasks included in that profile.\n\nIf none of the available profiles suits you, click Edit , then choose one of the existing profiles and click Clone to create a new custom profile and save the changes.\n\nClick Run to clean up code in the selected scope.\n\nYou can clean up not only an individual file, but also multiple files in a directory, project or entire solution. To do so, run code cleanup from the Solution Explorer.\n\nClean up multiple files, projects, or entire solution\n\nSelect one or more items (files, directories, projects, or the solution) in the Solution Explorer.\n\nPress Ctrl+R, C or choose Code | Reformat and Cleanupâ¦ from the main menu .\n\nChoose a cleanup profile as described above.\n\nClick Run to clean up code in the selected scope.\n\nYou can run Code Cleanup in code that you have recently modified and are going to commit to Git. JetBrains Rider will run the selected cleanup profile before committing.\n\nClean up code before committing it to Git\n\nPress Ctrl+K or select Git | Commit from the main menu.\n\nIn the Commit tool window, click and in the Commit Checks area, select the Cleanup with... checkbox.\n\nOptionally, you can click Choose profile to specify the cleanup profile that should be used.\n\nClick Commit or Commit and Push. JetBrains Rider will run code cleanup in files staged for the commit, and then commit the changes.\n\nYou can run Code Cleanup every time you save changes in a file to make sure that your edits always comply with your code style. Note that this will only happen when you save changes explicitly with Ctrl+S or Ctrl+S and will not be triggered by auto-saving. However, all auto-saved files are placed to the 'reformat and cleanup' queue and will be processed on the next explicit save.\n\nAutomatically run Code Cleanup on saving changes\n\nPress Ctrl+Alt+S to open settings and then select Tools | Actions on Save.\n\nSelect Reformat and Cleanup Code, choose which code cleanup profile should be applied and whether to apply it to the whole file or only to the changed lines.\n\nThe next time you finish editing and save the file or all files , JetBrains Rider will clean up the affected files using the selected profile.\n\nSilent cleanup\n\nYou can also run code cleanup in the silent mode â that is, without displaying the Reformat and Cleanup Code dialog. Since in this case you will not be able to choose a profile explicitly, you have to assign some cleanup profile to use for the silent code cleanup.\n\nAssign a profile for silent code cleanup\n\nPress Ctrl+Alt+S or choose File | Settings (Windows and Linux) or JetBrains Rider | Preferences (macOS) from the menu .\n\nGo to the cleanup profiles settings page: Editor | Code Cleanup.\n\nSelect a cleanup profile on the left and click Set as default for silent cleanup at the top of the options page.\n\nClick Save in the Settings dialog to apply the modifications and let JetBrains Rider choose where to save them, or save the modifications to a specific settings layer by choosing this layer from the Save selector. For more information, see layer-based settings.\n\nRun code cleanup in silent mode\n\nDo one of the following:\n\nTo run silent code cleanup in a specific code file, open it in the text editor or select it in the Solution Explorer.\n\nTo apply silent code cleanup to a set of files (directory, project, or solution), select the corresponding item in the Solution Explorer.\n\nPress Ctrl+R, G or choose Code | Silent Reformat and Cleanup from the main menu . Alternatively, you can press Ctrl+Shift+A, start typing the command name in the popup, and then choose it there.\n\nAvailable code cleanup tasks\n\nThe tables below list available cleanup tasks for different languages. If you need the cleanup to perform only a part of these tasks, you can create a custom cleanup profile for that.\n\nReformat code\n\nC#\n\nReformat code\n\nReformats your code according to the preferences that you can configure on the Editor | Code Style | C# page of JetBrains Rider settings . For more information, refer to Apply formatting rules.\n\nReformat embedded XML doc comments\n\nReformats XML doc comments according to options configurable on the Editor | Code Style | C# | XML Doc Comments page of JetBrains Rider settings .\n\nNote that JetBrains Rider does not reformat plain comments like:\n\n// A plain single-line comment\n\nor\n\n/* A plain multi-line comment */\n\nC++\n\nReformat code\n\nReformats your code according to the preferences that you can configure on the Editor | Code Style | C++ page of JetBrains Rider settings . For more information, refer to Apply formatting rules.\n\nVisual Basic\n\nReformat code\n\nReformats your code according to the preferences that you can configure on the Editor | Code Style | Visual Basic page of JetBrains Rider settings . For more information, refer to Apply formatting rules.\n\nReformat embedded XML doc comments\n\nReformats XML doc comments according to options configurable on the Editor | Code Style | Visual Basic | XML Doc Comments page of JetBrains Rider settings .\n\nNote that JetBrains Rider does not reformat plain comments like:\n\n// A plain single-line comment\n\nor\n\n/* A plain multi-line comment */\n\nXML\n\nReformat code\n\nReformats your code according to the preferences that you can configure on the Editor | Code Style | XML page of JetBrains Rider settings . For more information, refer to Apply formatting rules.\n\nHTML\n\nReformat code\n\nReformats your code according to the preferences that you can configure on the Editor | Code Style | HTML page of JetBrains Rider settings . For more information, refer to Apply formatting rules.\n\nCSS\n\nReformat code\n\nReformats your code according to the preferences that you can configure on the Editor | Code Style | CSS page of JetBrains Rider settings . For more information, refer to Apply formatting rules.\n\nJavaScript/TypeScript\n\nReformat code\n\nReformats your code according to the preferences that you can configure on the Editor | Code Style | JavaScript/TypeScript page of JetBrains Rider settings . For more information, refer to Apply formatting rules.\n\nReformat embedded XML doc comments\n\nReformats XML doc comments according to options configurable on the Editor | Code Style | JavaScript/TypeScript | XML Doc Comments page of JetBrains Rider settings .\n\nNote that JetBrains Rider does not reformat plain comments like:\n\n// A plain single-line comment\n\nor\n\n/* A plain multi-line comment */\n\nSyntax styles\n\nOptimize imports\n\nRearrange code\n\nRemove redundancies & apply optimizations\n\nC#\n\nUpdate file header\n\nInserts or updates the file header comment that you can configure on the Editor | File Header Template page of JetBrains Rider settings Ctrl+Alt+S or using the file_header_template EditorConfig property. For more information, refer to File header style.\n\nC/C++\n\nUpdate file header\n\nInserts or updates the file header comment that you can configure on the Editor | File Header Template page of JetBrains Rider settings Ctrl+Alt+S or using the file_header_template EditorConfig property. For more information, refer to File header style.\n\nC/C++\n\nApply Clang-tidy fix-its\n\nIn this node, you can choose all or specific fixes that will be applied according to the Clang-Tidy checks.\n\nThe selected fixes will be applied even if the corresponding inspections are turned off on the Editor | Inspection Settings| Inspection Severity page of JetBrains Rider settings Ctrl+Alt+S. Be careful when enabling too many checks at once â code cleanup runs Clang-Tidy only once for a given file, so if multiple fixes touch the same block of code, the changes might conflict with each other.\n\nLast modified: 11 February 2024"
    }
}