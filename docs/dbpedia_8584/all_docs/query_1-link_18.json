{
    "id": "dbpedia_8584_1",
    "rank": 18,
    "data": {
        "url": "https://www.linkedin.com/pulse/create-nuget-packages-using-co-app-scripts-phaneendra-paluri",
        "read_more_link": "",
        "language": "en",
        "title": "Create NuGet Packages Using Co-App Scripts",
        "top_image": "https://static.licdn.com/aero-v1/sc/h/en3f1pk3qk4cxtj2j4fff0gtr",
        "meta_img": "https://static.licdn.com/aero-v1/sc/h/en3f1pk3qk4cxtj2j4fff0gtr",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Phaneendra Paluri"
        ],
        "publish_date": "2020-01-25T02:50:21+00:00",
        "summary": "",
        "meta_description": "Though the world is slowly moving away from NuGet, and momentum of the push towards 'Conan' is steadily gaining traction, NuGet still remains a very popular package management system. NuGet depends on the file called .",
        "meta_lang": "en",
        "meta_favicon": "https://static.licdn.com/aero-v1/sc/h/al2o9zrvru7aqj8e1x2rzsrca",
        "meta_site_name": "",
        "canonical_link": "https://www.linkedin.com/pulse/create-nuget-packages-using-co-app-scripts-phaneendra-paluri",
        "text": "Though the world is slowly moving away from NuGet, and momentum of the push towards 'Conan' is steadily gaining traction, NuGet still remains a very popular package management system.\n\nNuGet depends on the file called .nuspec which is XML heavy. It contains everything that is required for the package to get built, published/distributed. Nevertheless, learning the schema requires one to put further efforts in building the .nuspec file.\n\nWell, how to create and publish new NuGet packages so that ones work can be consumed by other individuals/projects/organizations. In the recent past, this is where Microsoft has put some efforts, the result of those decisions is now what is available as a free tool - \"Co-App Tools\".\n\nCo-App scripts accept .autopkg files as an input. These files contain schema which is similar to JSON. Co-App tools provide a much higher abstraction layer to the users that is much simpler than writing or editing the corresponding .nuspec file for a package.\n\nI've happened to make an attempt at creating my own NuGet package for SystemC library using Co-App tools. Further details are listed in my post below. Scope for improvement is there and hence, this task is an unfinished business yet, but I hope it gives first insights into the use of Co-App tools.\n\nhttps://vsphaneendrapaluri.github.io/packmansys/2019/09/09/creating-and-publising-nuget-package-using-co-app.html\n\nHappy Reading !"
    }
}