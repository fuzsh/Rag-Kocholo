{
    "id": "wrong_mix_property_foundationPlace_00064_3",
    "rank": 13,
    "data": {
        "url": "https://github.com/JetBrains/JetBrainsRuntime",
        "read_more_link": "",
        "language": "en",
        "title": "JetBrains/JetBrainsRuntime: Runtime environment based on OpenJDK for running IntelliJ Platform",
        "top_image": "https://opengraph.githubassets.com/48fccd048fa4bfcfe1ec8a8418ecc44d6e10aeb55f8723988c641241dbbf49a6/JetBrains/JetBrainsRuntime",
        "meta_img": "https://opengraph.githubassets.com/48fccd048fa4bfcfe1ec8a8418ecc44d6e10aeb55f8723988c641241dbbf49a6/JetBrains/JetBrainsRuntime",
        "images": [
            "https://camo.githubusercontent.com/57b16b45b114c5f5fad152ad7035febd6b8c07ce23c0a62c827dedce44f4f6de/687474703a2f2f6a622e67672f6261646765732f6f6666696369616c2e737667",
            "https://avatars.githubusercontent.com/u/8001573?s=64&v=4",
            "https://avatars.githubusercontent.com/u/3232337?s=64&v=4",
            "https://avatars.githubusercontent.com/u/17044068?s=64&v=4",
            "https://avatars.githubusercontent.com/u/7251192?s=64&v=4",
            "https://avatars.githubusercontent.com/u/28651297?s=64&v=4",
            "https://avatars.githubusercontent.com/u/14975482?s=64&v=4",
            "https://avatars.githubusercontent.com/u/9004656?s=64&v=4",
            "https://avatars.githubusercontent.com/u/36852005?s=64&v=4",
            "https://avatars.githubusercontent.com/u/44893891?s=64&v=4",
            "https://avatars.githubusercontent.com/u/6972448?s=64&v=4",
            "https://avatars.githubusercontent.com/u/8738347?s=64&v=4",
            "https://avatars.githubusercontent.com/u/3697427?s=64&v=4",
            "https://avatars.githubusercontent.com/u/127120854?s=64&v=4",
            "https://avatars.githubusercontent.com/u/36081106?s=64&v=4"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Runtime environment based on OpenJDK for running IntelliJ Platform-based products on Windows, macOS, and Linux - JetBrains/JetBrainsRuntime",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/JetBrains/JetBrainsRuntime",
        "text": "JetBrains Runtime is a fork of OpenJDK available for Windows, Mac OS X, and Linux. It supports enhanced class redefinition (DCEVM), features optional JCEF, a framework for embedding Chromium-based browsers, includes a number of improvements in font rendering, keyboards support, windowing/focus subsystems, HiDPI, accessibility, and performance, provides better desktop integration and bugfixes not yet present in OpenJDK.\n\nNOTE: This is a development branch that is periodically synchronized with the OpenJDK master branch.\n\nRelease builds are based on these branches:\n\njbr11 (JDK 11)\n\njbr17 (JDK 17)\n\njbr21 (JDK 21)\n\nDownload the latest releases of JetBrains Runtime to use with JetBrains IDEs. The full list can be found on the releases page.\n\nIDE Version Latest JBR Date Released 2024.2 21.0.3-b509.4 26-Jun-2024 2024.1 21.0.2-b346.3 30-Jan-2024\n\nIDE Version Latest JBR Date Released 2024.2 17.0.11-b1312.2 18-Jun-2024 2024.1 17.0.11-b1207.24 16-May-2024 2023.3 17.0.10-b1087.23 20-Mar-2024 2023.2 17.0.10-b1000.50 20-Mar-2024 2023.1 17.0.10-b829.27 21-Mar-2024 2022.3 17.0.6-b653.34 28-Feb-2023 2022.2 17.0.6-b469.82 06-Mar-2023\n\nIDE Version Latest JBR Date Released 2022.1 11_0_16-b2043.64 10-Nov-2022 2021.3 11_0_14_1-b1751.46 21-Feb-2022 2021.2 11_0_13-b1504.49 15-Nov-2021 2021.1 11.0.11+9-b1341.60 15-Jun-2021 2020.3 11_0_10-b1145.115 21-Jun-2021\n\nWelcome to JetBrains Runtime\n\nWhy Use JetBrains Runtime?\n\nProducts Built on JetBrains Runtime\n\nGetting Sources\n\nmacOS, Linux\n\nWindows\n\nConfiguring the Build Environment\n\nLinux (Docker)\n\nUbuntu Linux\n\nWindows\n\nmacOS\n\nDeveloping\n\nContributing\n\nResources\n\nEmbedded browser: JetBrains Runtime includes the Java Chromium Embedded Framework (JCEF), which enables you to embed a Chromium-based browsers in your JVM-based application. To use it, download a build with JCEF.\n\nEnhanced class re-definition with the DCEVM technology that makes it easier to reload changed code without restarting JVM; this feature needs to be explicitly enabled with -XX:+AllowEnhancedClassRedefinition.\n\nBetter FPS performance for graphics-intensive applications.\n\nImproved font rendering, keyboard input (such as shortcuts and multinational keyboards), HiDPI and accessibility support.\n\nRobust desktop experience: GUI-related fixes often reach JetBrains Runtime much earlier than the corresponding version of OpenJDK.\n\nAndroid Studio. The official IDE for Google's Android operating system.\n\nCLion. A cross-platform IDE for C and C++ from JetBrains.\n\nDataGrip. The IDE for Databases and SQL from JetBrains.\n\nGoLand. The cross-platform Go IDE from JetBrains.\n\nIntelliJ IDEA. The IDE for JVM from JetBrains.\n\nJProfiler. The Java profiler.\n\nPhpStorm. The PHP IDE from JetBrains.\n\nPyCharm. The Python IDE from JetBrains.\n\nRider. The cross-platform .NET IDE from JetBrains.\n\nRubyMine. The Ruby and Rails IDE from JetBrains.\n\nToolbox App. JetBrains IDE manager.\n\nWebStorm. The JavaScript IDE from JetBrains.\n\nYourKit. Java and .NET profilers.\n\nHere are quick per-platform instructions for those who can't wait to get started. Please refer to OpenJDK build docs for in-depth coverage of all the details.\n\nTIP: To get a preliminary report of what's missing, run ./configure and check its output. It would usually have meaningful advice on how to solve the problem.\n\nCreate a container:\n\nRun these commands in the new container:\n\nInstall the necessary tools, libraries, and headers with:\n\nGet Java 21 (for instance, Azul Zulu Builds of OpenJDK 21).\n\nThen run the following:\n\nThis will build the release configuration under ./build/linux-x86_64-server-release/.\n\nInstall the following:\n\nCygwin x64. Required packages: autoconf, binutils, cpio, diffutils, file, gawk, gcc-core, make, m4, unzip, zip.\n\nInstall those together with Cygwin.\n\nVisual Studio compiler toolset. Install with the desktop development kit, which includes Windows SDK and compilers. Visual Studio 2019 is supported by default.\n\nJava 21 (for instance, Azul Zulu Builds of OpenJDK 21). If you have problems while configuring, read Java tips on Cygwin.\n\nFrom the command line:\n\nThe first command sets up environment variables, the second starts a Cygwin shell with the proper environment.\n\nIn the Cygwin shell:\n\nThis will build the release configuration under ./build/windows-x86_64-server-release/.\n\nInstall the following:\n\nXcode command line developer tools and autoconf via Homebrew.\n\nJava 21 (for instance, Azul Zulu Builds of OpenJDK 21).\n\nFrom the command line:\n\nThis will build the release configuration under ./build/macosx-x86_64-server-release/.\n\nYou can use CLion to develop native parts of the JetBrains Runtime and IntelliJ IDEA for the parts written in Java. Both require projects to be created.\n\nRun\n\nin the git root and open the resulting build/.../compile_commands.json file as a project. Then use Tools | Compilation Database | Change Project Root to point to git root of this repository.\n\nSee also this detailed step-by-step tutorial for all platforms: How to develop OpenJDK with CLion.\n\nRun\n\nin the git root to generate project files (add --help for options). If you have multiple configurations (for example, release and fastdebug), supply the --conf <conf_name> argument. Then open the git root directory as a project in IDEA.\n\nWe are happy to receive your pull requests! Before you submit one, please sign our Contributor License Agreement (CLA)."
    }
}