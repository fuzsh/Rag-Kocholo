{
    "id": "dbpedia_5039_3",
    "rank": 8,
    "data": {
        "url": "https://www.capacities.io/use-cases/queries-automatic-collections",
        "read_more_link": "",
        "language": "en",
        "title": "Have you ever wanted an automatic collection?",
        "top_image": "https://capacities.io/use-cases/queries-collections/cover.jpg",
        "meta_img": "https://capacities.io/use-cases/queries-collections/cover.jpg",
        "images": [
            "https://www.capacities.io/use-cases/queries-collections/cover.jpg",
            "https://www.capacities.io/persons/beth-2.jpeg",
            "https://www.capacities.io/use-cases/queries-collections/book-filter.png",
            "https://www.capacities.io/use-cases/queries-collections/book-sort.png",
            "https://www.capacities.io/use-cases/queries-collections/read-query.png",
            "https://www.capacities.io/use-cases/queries-collections/reading-list.png",
            "https://www.capacities.io/use-cases/queries-collections/media-book-filter.png",
            "https://www.capacities.io/use-cases/queries-collections/query-meetings.png",
            "https://www.capacities.io/use-cases/queries-collections/meeting-settings.png",
            "https://www.capacities.io/use-cases/queries-collections/meetings.png",
            "https://www.capacities.io/use-cases/queries-collections/web-clipper-video.png",
            "https://www.capacities.io/use-cases/queries-collections/video-to-watch.png",
            "https://www.capacities.io/use-cases/queries-collections/video-query.png",
            "https://www.capacities.io/use-cases/queries-collections/watchlist.png",
            "https://www.capacities.io/use-cases/inbox/cover.jpg",
            "https://www.capacities.io/persons/steffen.jpg",
            "https://www.capacities.io/use-cases/para/cover.jpg",
            "https://www.capacities.io/persons/beth-2.jpeg",
            "https://www.capacities.io/use-cases/class-notes-1/cover2.jpg",
            "https://www.capacities.io/persons/anna-new.jpg",
            "https://www.capacities.io/MLB_logo.png",
            "https://www.capacities.io/HdM_logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "productivity time management"
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2024-07-30T00:00:00",
        "summary": "",
        "meta_description": "Let's explore how we can use queries to do just that!",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "capacities.io",
        "canonical_link": "https://capacities.io//use-cases/queries-automatic-collections",
        "text": "Have you ever made a collection in Capacities and thought âI wish I could do this automatically?â. This is something queries can help with, because queries collect content based on rules we set up.\n\nSo today, weâll show you three ways you could use queries as automatic collections. ð\n\nWeâll look atâ¦\n\nð an automatic library of the books youâve read this year\n\nð a list of all the meetings associated with a certain project\n\nð an automatically updating video watch list.\n\nLetâs go!\n\nEvery book youâve read this year\n\nYou can automatically create a virtual bookshelf of the books youâve read this year with this query. It only uses one property: a date-time property called âfinished onâ.\n\nWhen youâve finished a book, all you need to do for this query to work is to add the date you finished it on! So make sure you add this property to your object type before continuing if you donât already have it.\n\nTo create this query, go to your books object type and click âfilterâ. Then apply these filters, and sort from oldest to newest:\n\nThen click âsave as queryâ, rename it and give it an icon, and thereâs your query! If you click Pin to Dashboard, youâll see it in the left sidebar with your object types.\n\nThis will update automatically whenever you fill in the âFinished Onâ date property. Do this every time you finish a book, and this query will always be up to date! ð\n\nTwo extra tips\n\nIf you want to create a reading list, we can use this same property with a different filter. Just add one filter where âfinished onâ is empty.\n\nIf you are using a media object type, where you define books with a tag, just adapt the query like this:\n\nAll meetings for a certain project\n\nProject notes in Capacities can be a great hub from which to work on your active projects. We wrote about this here.\n\nPart of your project note set up could include a simple query that will collect all meetings associated with this project, for easy review of those notes. You will need a projects object type, and a meetings object type for this.\n\nTo set this query up, open one of your project notes, go to a new line and type /query meetings, then press enter.\n\nClick âedit queryâ and apply these filters ð and then click update.\n\nYouâll want to choose the name of your project each time you set up this query. One way to make this quicker is to duplicate the query and move it to another project, then you just need to change the project name!\n\nAnd thatâs it!\n\nNot only do you have a query that will update automatically, itâs also embedded where you need it: in your project object.\n\nAll videos youâd like to watch\n\nIf you want to save videos to watch, you can use the Capacities Web Extension to bookmark them. We recommend adding two tags: #to watch, and a tag for the media typeâââ #video, #film, #tv show etc.\n\nGo back to Capacities and click your âto watchâ tag. You might have more than just videos in here, such as TV shows or films too.\n\nTo look just for videos, add a filter like this â¬\n\nswap video for film or tv show, depending on what query youâre trying to create\n\nAnd there we go! Now you can choose a video to watch.\n\nTip\n\nWeâll add a video object type soon, then we can update this query!\n\nSo there are three ideas for automatic collections with queries. Which one will you try first?"
    }
}