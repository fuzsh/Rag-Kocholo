{
    "id": "dbpedia_2234_1",
    "rank": 85,
    "data": {
        "url": "https://copasi.org/Support/Change_History/COPASI_4_30_Build_240/",
        "read_more_link": "",
        "language": "en",
        "title": "COPASI 4 30 Build 240",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://copasi.org/images/COPASI-light.png",
            "https://copasi.org/images/previous.png",
            "https://copasi.org/images/up.png",
            "https://copasi.org/images/next.png",
            "https://copasi.org/images/house.png",
            "https://copasi.org/images/Forum.png",
            "https://copasi.org/images/Mastodon_42x42.png",
            "https://copasi.org/images/YouTube_42x42.png",
            "https://copasi.org/images/GitHub-Mark-32px.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Modeling",
            "Simulation",
            "Biochemical Networks",
            "Biochemical Pathways",
            "Systems Biology",
            "Time Course",
            "Steady state",
            "Optimization",
            "Parameter Fitting",
            "Software"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "COPASI is a software application for simulation and analysis of biochemical networks and their dynamics.",
        "meta_lang": "",
        "meta_favicon": "/images/ico/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Version 4.30.240\n\nRelease Date: February 24, 20201\n\nNew Features since COPASI 4.29 (Build 228)\n\nGraphical User Interface (CopasiUI)\n\nAdded intensive reaction flux to the steady-state results relevant for small compartments.\n\nSimulation Engine\n\nAdded Just In Time compilation of all user defined mathematical expression to assembler code significantly improving COPASI's performance.\n\nLanguage Bindings\n\nIt is now possible to capture data generated from tasks directly without using a temporary file.\n\nBug Fixes since COPASI 4.29 (Build 228)\n\nGraphical User Interface (CopasiUI)\n\nLoading a model parameter set with a name already in the model is no longer silently ignored. Instead a new unique name is generated.\n\nFixed dragging an dropping of report items which may cause a crash in certain situations.\n\nImproved layout of parameter estimation result widgets to better display Eigenvalues of the Fisher Information Matrix.\n\nFixed problem where the deletion of a just created parameter set could cause a crash.\n\nFixed update of local reaction parameters in the parameter overview, which was not correctly refreshed.\n\nFixed problem updating the separator when editing a report definition.\n\nImproved display of Elementary Flux Mode results where some table rows were not correctly adjusted.\n\nImproved object selection for Time Course Sensitivity task to include only and all relevant objects.\n\nFixed loading of XHTML comments including entities like Ï€ (&pi;).\n\nUpdated MIRIAM resources to correctly handle identifiers using https://.\n\nSimulation Engine\n\nTemporary Files for user with special characters in the name is now correctly handled.\n\nFixed issue with Hybrid LSODA integration method which was not correctly initialized on its initial use.\n\nFixed an issue where it was not possible to read extremely old COPASI files using user defined functions with recent versions.\n\nFixed file permissions for COPASI files which in some situation under Linux did not respect umask settings.\n\nFixed report output of Elementary Flux Mode task.\n\nFixed tracking of wall clock and CPU time in the Sensitivities Task.\n\nStandards\n\nSED-ML export of plots may have used non-unique IDs for a variable if that variable occurred in multiple curves.\n\nSBML import no longer crashes if an event without a name and an id is encountered.\n\nSBML unit import and export preserve the user specified volume unit instead of converting to liter.\n\nSBML improved import of reactions with undefined stoichiometry which could crash COPASI.\n\nLanguage Bindings\n\nFixed problem where bindings terminated if the environment variable HOME was not set.\n\nLanguage bindings no longer crash when calling getStringValue from a non existing variable.\n\nIt is now possible to create parameters of type Common Name (CN) in language bindings."
    }
}