{
    "id": "dbpedia_8284_1",
    "rank": 85,
    "data": {
        "url": "https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-20-04",
        "read_more_link": "",
        "language": "en",
        "title": "How To Install MySQL on Ubuntu 20.04",
        "top_image": "https://community-cdn-digitalocean-com.global.ssl.fastly.net/M1bswVs7zkuTaBacgsKxDCB4",
        "meta_img": "https://community-cdn-digitalocean-com.global.ssl.fastly.net/M1bswVs7zkuTaBacgsKxDCB4",
        "images": [
            "https://www.gravatar.com/avatar/99c6e4c26bf3e0a52e419c85495bf499037ba8a127347d8678d8aa110d0e4714?default=retro 1x, https://www.gravatar.com/avatar/99c6e4c26bf3e0a52e419c85495bf499037ba8a127347d8678d8aa110d0e4714?default=retro 2x",
            "https://www.gravatar.com/avatar/4dfb614b1cd031250f1f9bfc8bbe9bfab4a98ea184aa6d7f633873b75f8f7d39?default=retro 1x, https://www.gravatar.com/avatar/4dfb614b1cd031250f1f9bfc8bbe9bfab4a98ea184aa6d7f633873b75f8f7d39?default=retro 2x",
            "https://www.digitalocean.com/api/static-content/v1/images?src=https%3A%2F%2Fcommunity-cdn-digitalocean-com.global.ssl.fastly.net%2FM1bswVs7zkuTaBacgsKxDCB4&width=828 1x, https://www.digitalocean.com/api/static-content/v1/images?src=https%3A%2F%2Fcommunity-cdn-digitalocean-com.global.ssl.fastly.net%2FM1bswVs7zkuTaBacgsKxDCB4&width=1920 2x",
            "https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fdefault-avatar.14b0d31d.jpeg&width=64 1x, https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fdefault-avatar.14b0d31d.jpeg&width=128 2x",
            "https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fdefault-avatar.14b0d31d.jpeg&width=64 1x, https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fdefault-avatar.14b0d31d.jpeg&width=128 2x",
            "https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fcreativecommons.c0a877f1.png&width=128 1x, https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fcreativecommons.c0a877f1.png&width=256 2x",
            "https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2FnewsLetter.c1eb26e3.jpeg&width=750 1x, https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2FnewsLetter.c1eb26e3.jpeg&width=1920 2x",
            "https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2FhollieHub4Good.90285377.jpeg&width=750 1x, https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2FhollieHub4Good.90285377.jpeg&width=1920 2x",
            "https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fwrite4DO.6a167f0c.jpeg&width=750 1x, https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fwrite4DO.6a167f0c.jpeg&width=1920 2x",
            "https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fconsole-static.1b14cc64.svg&width=640 1x, https://www.digitalocean.com/api/static-content/v1/images?src=%2F_next%2Fstatic%2Fmedia%2Fconsole-static.1b14cc64.svg&width=1080 2x"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "MySQL is an open-source database management system, commonly installed as part of the popular LAMP (Linux, Apache, MySQL, PHP/Python/Perl) stack. It implemenâ¦",
        "meta_lang": "en",
        "meta_favicon": "/_next/static/media/apple-touch-icon.d7edaa01.png",
        "meta_site_name": "",
        "canonical_link": "https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-20-04",
        "text": "Introduction\n\nMySQL is an open-source database management system, commonly installed as part of the popular LAMP (Linux, Apache, MySQL, PHP/Python/Perl) stack. It implements the relational model and uses Structured Query Language (better known as SQL) to manage its data.\n\nThis tutorial will go over how to install MySQL version 8.0 on an Ubuntu 20.04 server. By completing it, you will have a working relational database that you can use to build your next website or application.\n\nPrerequisites\n\nTo follow this tutorial, you will need:\n\nOne Ubuntu 20.04 server with a non-root administrative user and a firewall configured with UFW. To set this up, follow our initial server setup guide for Ubuntu 20.04.\n\nStep 1 â Installing MySQL\n\nOn Ubuntu 20.04, you can install MySQL using the APT package repository. At the time of this writing, the version of MySQL available in the default Ubuntu repository is version 8.0.27.\n\nTo install it, update the package index on your server if youâve not done so recently:\n\nsudo apt update\n\nThen install the mysql-server package:\n\nsudo apt install mysql-server\n\nEnsure that the server is running using the systemctl start command:\n\nsudo systemctl start mysql.service\n\nThese commands will install and start MySQL, but will not prompt you to set a password or make any other configuration changes. Because this leaves your installation of MySQL insecure, we will address this next.\n\nStep 2 â Configuring MySQL\n\nFor fresh installations of MySQL, youâll want to run the DBMSâs included security script. This script changes some of the less secure default options for things like remote root logins and sample users.\n\nRun the security script with sudo:\n\nsudo mysql_secure_installation\n\nThis will take you through a series of prompts where you can make some changes to your MySQL installationâs security options. The first prompt will ask whether youâd like to set up the Validate Password Plugin, which can be used to test the password strength of new MySQL users before deeming them valid.\n\nIf you elect to set up the Validate Password Plugin, any MySQL user you create that authenticates with a password will be required to have a password that satisfies the policy you select. The strongest policy level â which you can select by entering 2 â will require passwords to be at least eight characters long and include a mix of uppercase, lowercase, numeric, and special characters:\n\nOutput\n\nSecuring the MySQL server deployment. Connecting to MySQL using a blank password. VALIDATE PASSWORD COMPONENT can be used to test passwords and improve security. It checks the strength of password and allows the users to set only those passwords which are secure enough. Would you like to setup VALIDATE PASSWORD component? Press y|Y for Yes, any other key for No: Y There are three levels of password validation policy: LOW Length >= 8 MEDIUM Length >= 8, numeric, mixed case, and special characters STRONG Length >= 8, numeric, mixed case, special characters and dictionary file Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 2\n\nRegardless of whether you choose to set up the Validate Password Plugin, the next prompt will be to set a password for the MySQL root user. Enter and then confirm a secure password of your choice:\n\nOutput\n\nPlease set the password for root here. New password: Re-enter new password:\n\nNote that even though youâve set a password for the root MySQL user, this user is not currently configured to authenticate with a password when connecting to the MySQL shell.\n\nIf you used the Validate Password Plugin, youâll receive feedback on the strength of your new password. Then the script will ask if you want to continue with the password you just entered or if you want to enter a new one. Assuming youâre satisfied with the strength of the password you just entered, enter Y to continue the script:\n\nOutput\n\nEstimated strength of the password: 100 Do you wish to continue with the password provided?(Press y|Y for Yes, any other key for No) : Y\n\nFrom there, you can press Y and then ENTER to accept the defaults for all the subsequent questions. This will remove some anonymous users and the test database, disable remote root logins, and load these new rules so that MySQL immediately respects the changes you have made.\n\nOnce the script completes, your MySQL installation will be secured. You can now move on to creating a dedicated database user with the MySQL client.\n\nStep 3 â Creating a Dedicated MySQL User and Granting Privileges\n\nUpon installation, MySQL creates a root user account which you can use to manage your database. This user has full privileges over the MySQL server, meaning it has complete control over every database, table, user, and so on. Because of this, itâs best to avoid using this account outside of administrative functions. This step outlines how to use the root MySQL user to create a new user account and grant it privileges.\n\nIn Ubuntu systems running MySQL 5.7 (and later versions), the root MySQL user is set to authenticate using the auth_socket plugin by default rather than with a password. This plugin requires that the name of the operating system user that invokes the MySQL client matches the name of the MySQL user specified in the command, so you must invoke mysql with sudo privileges to gain access to the root MySQL user:\n\nsudo mysql\n\nOnce you have access to the MySQL prompt, you can create a new user with a CREATE USER statement. These follow this general syntax:\n\nCREATE USER 'username'@'host' IDENTIFIED WITH authentication_plugin BY 'password';\n\nAfter CREATE USER, you specify a username. This is immediately followed by an @ sign and then the hostname from which this user will connect. If you only plan to access this user locally from your Ubuntu server, you can specify localhost. Wrapping both the username and host in single quotes isnât always necessary, but doing so can help to prevent errors.\n\nYou have several options when it comes to choosing your userâs authentication plugin. The auth_socket plugin mentioned previously can be convenient, as it provides strong security without requiring valid users to enter a password to access the database. But it also prevents remote connections, which can complicate things when external programs need to interact with MySQL.\n\nAs an alternative, you can leave out the WITH authentication_plugin portion of the syntax entirely to have the user authenticate with MySQLâs default plugin, caching_sha2_password. The MySQL documentation recommends this plugin for users who want to log in with a password due to its strong security features.\n\nRun the following command to create a user that authenticates with caching_sha2_password. Be sure to change sammy to your preferred username and password to a strong password of your choosing:\n\nCREATE USER 'sammy'@'localhost' IDENTIFIED BY 'password';\n\nAfter creating your new user, you can grant them the appropriate privileges. The general syntax for granting user privileges is as follows:\n\nGRANT PRIVILEGE ON database.table TO 'username'@'host';\n\nThe PRIVILEGE value in this example syntax defines what actions the user is allowed to perform on the specified database and table. You can grant multiple privileges to the same user in one command by separating each with a comma. You can also grant a user privileges globally by entering asterisks (*) in place of the database and table names. In SQL, asterisks are special characters used to represent âallâ databases or tables.\n\nTo illustrate, the following command grants a user global privileges to CREATE, ALTER, and DROP databases, tables, and users, as well as the power to INSERT, UPDATE, and DELETE data from any table on the server. It also grants the user the ability to query data with SELECT, create foreign keys with the REFERENCES keyword, and perform FLUSH operations with the RELOAD privilege. However, you should only grant users the permissions they need, so feel free to adjust your own userâs privileges as necessary.\n\nYou can find the full list of available privileges in the official MySQL documentation.\n\nRun this GRANT statement, replacing sammy with your own MySQL userâs name, to grant these privileges to your user:\n\nGRANT CREATE, ALTER, DROP, INSERT, UPDATE, INDEX, DELETE, SELECT, REFERENCES, RELOAD on *.* TO 'sammy'@'localhost' WITH GRANT OPTION;\n\nNote that this statement also includes WITH GRANT OPTION. This will allow your MySQL user to grant any permissions that it has to other users on the system.\n\nFollowing this, itâs good practice to run the FLUSH PRIVILEGES command. This will free up any memory that the server cached as a result of the preceding CREATE USER and GRANT statements:\n\nFLUSH PRIVILEGES;\n\nThen you can exit the MySQL client:\n\nexit\n\nIn the future, to log in as your new MySQL user, youâd use a command like the following:\n\nmysql -u sammy -p\n\nThe -p flag will cause the MySQL client to prompt you for your MySQL userâs password in order to authenticate.\n\nFinally, letâs test the MySQL installation.\n\nStep 4 â Testing MySQL\n\nRegardless of how you installed it, MySQL should have started running automatically. To test this, check its status.\n\nsystemctl status mysql.service\n\nYouâll see output similar to the following:\n\nOutput\n\nâ mysql.service - MySQL Community Server Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset: enabled) Active: active (running) since Tue 2020-04-21 12:56:48 UTC; 6min ago Main PID: 10382 (mysqld) Status: \"Server is operational\" Tasks: 39 (limit: 1137) Memory: 370.0M CGroup: /system.slice/mysql.service ââ10382 /usr/sbin/mysqld\n\nIf MySQL isnât running, you can start it with sudo systemctl start mysql.\n\nFor an additional check, you can try connecting to the database using the mysqladmin tool, which is a client that lets you run administrative commands. For example, this command says to connect as a MySQL user named sammy (-u sammy), prompt for a password (-p), and return the version. Be sure to change sammy to the name of your dedicated MySQL user, and enter that userâs password when prompted:\n\nsudo mysqladmin -p -u sammy version\n\nYou should see output similar to this:\n\nOutput\n\nmysqladmin Ver 8.0.19-0ubuntu5 for Linux on x86_64 ((Ubuntu)) Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or its affiliates. Other names may be trademarks of their respective owners. Server version 8.0.19-0ubuntu5 Protocol version 10 Connection Localhost via UNIX socket UNIX socket /var/run/mysqld/mysqld.sock Uptime: 10 min 44 sec Threads: 2 Questions: 25 Slow queries: 0 Opens: 149 Flush tables: 3 Open tables: 69 Queries per second avg: 0.038\n\nThis means MySQL is up and running.\n\nConclusion\n\nYou now have a basic MySQL setup installed on your server. Here are a few examples of next steps you can take:"
    }
}