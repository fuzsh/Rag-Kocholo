{
    "id": "correct_subsidiary_00088_3",
    "rank": 60,
    "data": {
        "url": "https://www.rebeccapeck.org/2019/10/archiving-a-yahoo-group/",
        "read_more_link": "",
        "language": "en",
        "title": "Archiving A Yahoo Group",
        "top_image": "https://www.rebeccapeck.org/cache/resize/a4de947070f1bbe060ef9433368fb3de_320x320.jpeg",
        "meta_img": "https://www.rebeccapeck.org/cache/resize/a4de947070f1bbe060ef9433368fb3de_320x320.jpeg",
        "images": [
            "https://www.rebeccapeck.org/assets/img/logo.png",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/rss.svg",
            "https://www.rebeccapeck.org/cache/resize/a4de947070f1bbe060ef9433368fb3de_32x32.jpeg",
            "https://www.rebeccapeck.org/cache/resize/a4de947070f1bbe060ef9433368fb3de_320x320.jpeg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/minutemailer.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/mastodon.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/bluesky.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/linkedin.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/amazon.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/github.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/ycombinator.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/devdotto.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/kofi.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/keybase.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/minutemailer.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/mastodon.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/bluesky.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/linkedin.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/facebook.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/linkedin.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/reddit.svg",
            "https://cdn.jsdelivr.net/npm/simple-icons@v11/icons/ycombinator.svg",
            "https://www.rebeccapeck.org/cache/resize/ea449a1c73938d3fe3ceb8bb838cffa0_320x320.jpg",
            "https://www.rebeccapeck.org/cache/resize/fd690e335a479055d11dc2c0373778e3_320x320.jpg",
            "https://www.rebeccapeck.org/assets/img/logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Python",
            "MongoDB",
            "Yahoo"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Verizon pulling the plug on Yahoo Groups will leave a massive memory hole in the Internet. Here's how to save your history from being lost.",
        "meta_lang": "",
        "meta_favicon": "/apple-touch-icon-57x57.png",
        "meta_site_name": "Rebecca Peck",
        "canonical_link": "https://www.rebeccapeck.org/2019/10/archiving-a-yahoo-group/",
        "text": "I’ve been on the Internet a long time, since the early to mid 1990s. And when you are on the Internet that long, you tend to leave a pretty long trail behind you. But over the years that trail gets overgrown as sites close, lists vanish, and machines crash. There is precious little left from those early years.\n\nOne thing that has persisted to this time, despite being pretty heavily neglected over the years, is Yahoo Groups. Those who remember the first dot-com boom may remember that Yahoo Groups was not originally Yahoo Groups. It was eGroups, which Yahoo bought and merged into their own sprawling empire. eGroups basically made it possible for anyone to set up a mailing list without needing access to a listserv service.\n\nWell, it looks like the end has finally come for Yahoo Groups. Verizon, the new owner of the rotting corpse of Yahoo, has announced that all groups will disappear on December 14th. I was on tons of mailing lists during my early Internet years, and I would really like to archive and preserve those messages if I could. But how could I get them out of Yahoo?\n\nAs it turns out, there is already an option out there for downloading content from Yahoo. Someone has kindly written a backup script to take care of the hard part of getting messages out of Yahoo.\n\nThe problem? It only appears to be able to store them in a MongoDB database. :( Not that I have anything against MongoDB (it is webscale!), but I really wanted to preserve the raw messages themselves as text data rather than storing them in a database.\n\nWhy? Well, the biggest reason is long-term stability. Will you be able to read that data out of MongoDB in 20 years? I have some files that are younger than that I can no longer read. Either the program doesn’t work anymore, or isn’t supported, or can’t even be found. But text files? I can read 40 year old text files just fine. Pretty good bet text files will be readable in another 40 years as well.\n\nSo the solution I came up with was to spin up a docker image of MongoDB and allow the script to do it’s thing, then wrote another script to pull the data out of MongoDB and write raw data. I decided to write both JSON of the full entry and text of the original raw email. That way I have all the Yahoo metadata if I ever need it in the future, in an open format that should be relatively easy to read in the future, as well as the original raw format.\n\nSetting Up The Fetch Script\n\nThe fetching script is a tad finnicky, especially on macOS. Your best bet is to install Python 3.7 from Homebrew. You’re also better off doing this in a Python Virtual Environment, as I found out the hard way.\n\nYou will also need to install Chromedriver as well.\n\nNow that you are inside a “pristine” Python environment, you can follow the instructions in the readme for the fetch script.\n\nBefore I was able to get pip to install the dependencies from requirements.txt, I also had to bump the version of pyyaml to 3.13. It did not compile otherwise on macOS and there is a bug about this that is fixed on 3.13. Doing this does not seem to impact the script.\n\nBe sure to fill in your username and password in the YAML file.\n\nNext, we need to spin up a MongoDB instance in Docker:\n\nOnce you’re ready to go, you can just run the script like so:\n\nSetting Up The Dump Script\n\nSo after you’ve let the script run for awhile (and it may take awhile depending on the quantity of messages, as this script seems to process them at the rate of about 40 per hour), you can dump the data to local files.\n\nAnd now to dump the files out of Mongo:\n\nAnd it will create a directory structure of raw text and JSON files, one for each message. From there, you can zip them up for more efficient storage."
    }
}