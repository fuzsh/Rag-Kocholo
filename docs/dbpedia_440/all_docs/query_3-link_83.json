{
    "id": "dbpedia_440_3",
    "rank": 83,
    "data": {
        "url": "http://computationalculture.net/object-lessons/",
        "read_more_link": "",
        "language": "en",
        "title": "Object Lessons: A Review of Jacob Gaboury’s ‘Image Objects: An Archaeology of Computer Graphics’ – Computational Culture",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "http://computationalculture.net/object-lessons/",
        "text": "If you have been watching any of the various series recently produced for the Star Wars franchise, you may have noticed a curious kind of continuity editing: the screens that are used to target weapons and navigate outer space display computer graphics in the style of the 1970s. On these screens appear wireframes rather than 3D shapes with occluded surfaces; rather than millions of colors, we see the sixteen that could have appeared on an Apple II in 1977. Obviously, George Lucas and his crew were compelled for the first movie of the series, released in 1977, to have 1970s graphics on the displays of the Millennium Falcon and the Death Star. Subsequent directors have preserved these graphics in, for instance, Star Wars: Andor (2022) and other films and series, to evoke the time and place of the first film, “a long time ago in a galaxy far, far away.”\n\nWe are left to consider conditions of existence different from our own where light speed travel, autonomous sentient robots, holographic displays, and hovercraft are commonplace — but 3D graphics have yet to be invented. But it also raises a question about the here and now. What happened between the 1970s, when 3D graphics were still a dream, and now when 3D graphics are so commonplace that even IKEA catalogues are full of them? This is the subject of Jacob Gaboury’s book Image Objects: An Archaeology of Computer Graphics .\n\nGaboury’s Image Objects is a remarkable and rigorously researched book. Through narrating a history of computer graphics, the author demonstrates that “The computer is not a visual medium. And yet computation as we know it today has been fundamentally shaped by computer graphics” (200). The author’s history traces a professional network of computer scientists with a hub in the University of Utah’s Computer Science Department founded in 1966 by Salt Lake City native David C. Evans with initial funding from Ivan Sutherland, then a program director at the Department of Defense’s Advanced Research Projects Agency (ARPA). Sutherland later joined Evans in Utah to co-found the computer graphics company Evans & Sutherland (E&S). The network, rooted at the University of Utah and E&S, is illustrated by examining work accomplished by faculty and graduate students in the department from, roughly, 1966 to 1980 and by following graduates and former faculty out of the department as they founded and/or shaped Pixar, Adobe, Silicon Graphics, Netscape, Atari, WordPerfect, Xerox PARC, NASA’s Jet Propulsion Laboratory, the New York Institute of Technology, and Industrial Light & Magic.\n\nGaboury’s history is organized around five technical artifacts produced by this network:\n\nsoftware and hardware solutions for hidden surface removal (solutions that determine which points, edges and surfaces of an object to show on screen, and which to hide, given a specific point of view);\n\nthe development of the cathode ray tube as both a technology of computer memory and as an interface;\n\nthe creation and distribution of a standard set of datasets describing common objects used as benchmark tests for computer graphics systems and, later, as synecdoches representing all of computer graphics in wide-distribution cultural artifacts;\n\none such common object was a teapot, first defined as a set of data points at the University of Utah and later shown in the Pixar movie Toy Story;\n\nthe entanglement of the development of computer graphics techniques and object-oriented programming techniques in, for example, the Smalltalk programming environment and the Adobe PostScript standard;\n\nand,the creation of the graphical processing unit (GPU), its subsequent ubiquity in computer graphics workstations and its ultimate influence in territories of computation far beyond graphics, such as its current use in artificial intelligence.\n\nGaboury argues that it is these five objects — “image objects,” in his terms — that have shaped both visual culture and computing throughout the last half century. The historical work is impeccable. Even as a reader knowledgeable about many parts of this history, I learned new facts (e.g., the genealogy of OpenGL), found connections between actors in this network that I was previously unaware of (e.g., the interactions between the two Sutherland brothers), and gained a new appreciation for some of the secondary literature on the topics (such as Lev Manovich’s writings about computer graphics from the early 1990s). These are the achievements of the book and they are plentiful and very significant.\n\nOther books have attempted complements to or pieces of the larger history told in this book. For example, Lev Manovich’s Software Takes Command examines some of the Alan Kay and Xerox PARC story told here; from Daniel Llach’s Builders of Vision: Software and the Imagination of Design one learns about CAD developments at MIT and elsewhere (and intersects with Gaboury’s on the work of Steven Coons, former MIT professor of mechanical engineering, Ivan Sutherland’s dissertation advisor and the originator of the concept of computer aided design). Furthermore, many texts tell the origin of splines in the ancient arts of shipbuilding. The accomplishment of this manuscript is to touch on all these aspects — and more — and create a coherent set of connections, an encompassing narrative, that relates them all together and tells the story of the five focal technical artifacts in more historical depth than has been done elsewhere.\n\nSpecialists in software studies may find the text quite tightly — perhaps, at times, too tightly — circumscribed around the personal stories of the inventors of these objects and the technical developments of computer graphics. Gaboury’s book relies heavily on what historians of computing (e.g., Michael Mahoney, Histories of Computing ) have termed an “insider history,” a history that hews quite closely to the internal dynamics of a technical field. One might want parts of the book to more deeply engage with larger political, ideological and cultural formations to provide insight into why the details of the insider history are details that have larger significance. More firmly connecting the history to graphical simulations, games, animation and special effects for cinema, and other culturally important forms of software that crucially depend on computer graphics would more firmly situate the book in a larger cultural field. While some of this kind of cultural studies is done in the final pages of the last chapter (via reference to IKEA catalogs and Volkswagen ads), these references would be stronger laced into the text in earlier chapters. (Note that Gaboury has taken this alternative approach for other projects, such as his queer history of computing developed for the arts website, Rhizome. )\n\nSignaled already in Gaboury’s subtitle, “An archaeology of computer graphics,” is the intention that this book would be something other than an insider history. The “archaeology” in the subtitle is ultimately philosopher Michel Foucault’s but more immediately the “media archaeology” of, for instance, Erkki Huhtamo and Jussi Parikka. In Parikka’s words “Media archaeology sees media cultures as sedimented and layered, a fold of time and materiality where the past might be suddenly discovered anew, and the new technologies grow obsolete increasingly fast.”\n\nAn archaeology focuses on the material aspects of culture and yet it is difficult to narrate a history without people, thus Gaboury’s focus repeatedly drifts away from the objects of concern and onto the people, the inventors. Gaboury foreshadows this drift of focus in his introduction where he says, “Holding in tension the need for a cultural politics of technology and the desire to deprivilege human-centered narratives of technological innovations, I acknowledge the difficulty of describing and performing a fixed media archaeological method, and view it as an essential focus of my investigation” (6). The danger of following such methods, as expressed by Gaboury, is to steer too close to the objects and thereby lose sight of the people: “This focus on objects rather than the culture of the people that produced them runs the risk of erasing agency of human subjects and the deeply political context in which these objects were produced, used, and circulated” (204).\n\nYet at certain points in the text, Gaboury so deftly avoids running aground on the objects that his history becomes overpopulated with the personal lives of the inventors, details that shed no clear light on the political context of the objects. For example, the book starts with an anecdote about Ivan Sutherland’s students painting a grid on his wife’s Volkswagen. In the book, Marsha Sutherland makes no other appearance than as the owner and driver of this car. Later we learn that David Evans was from an old Mormon family and had seven children with his wife Joy. She appears in the book as an advocate for the family to stay in Salt Lake City rather than move to Boston. Also the programming language JOY developed by Evan’s students is likely her namesake. But, otherwise, we learn nothing else about Marsha and Joy, the spouses of the main protagonists of Gaboury’s history. With some notable exceptions (e.g., the inventors Lynn Conway and Adele Goldberg) the stories told here are men’s stories and gender politics are not interrogated. I am not advocating that Image Objects should have been focused on examining the gender politics of the field of computer graphics. Rather my point is that the narrative form of insider stories can carry an author away from an examination of objects and their political context regardless of the author’s intentions.\n\nThe ways that Gaboury employs the narrative form of insider histories can be seen by comparing Image Objects to passages from a book that came out at the same time with the same publisher, A Biography of the Pixel by one of the inventors of computer graphics, the cofounder of Pixar, Alvy Ray Smith. Smith’s book is unapologetically an insider account, much of it recounted in the first person. Smith’s book was preceded by a number of articles he published before his book in the IEEE Annals of the History of Computing and elsewhere — articles that Gaboury cites, thus setting up echoes between the insider account of Smith and Image Objects. For example, the frame buffer is a key technology examined by Gaboury, and one that Smith describes in his articles and then, again, in his book. Comparing Gaboury’s p. 74 with Smith’s p. 351 we can see how heavily, at times, Gaboury relies on the insider stories:\n\nOn hearing of the Evans & Sutherland system, and with the goal of finding new institutional sponsors, Smith and DiFrancesco set out on a road trip from Silicon Valley to Salt Lake City in hopes of continuing their research. … After one meeting with Evans, the two were quickly turned away — but not before being given the name of Alexander Schure, a wealthy businessman from New York who had purchased “one of everything in sight” on a recent trip to Evans & Sutherland, including the not-yet-delivered frame buffer. Gaboury, p. 74\n\nWe [Smith and DiFrancesco] heard that Evans & Sutherland in Salt Lake City was building the next one [frame buffer], so that was our first destination. … We were about to depart disappointed when someone mentioned that a “crazy rich man” named Dr. Alexander Schure from Long Island had passed through recently and “bought one of everything in sight.” “Did he buy a frame buffer?” I asked hurriedly. Yes! Smith, p. 351\n\nWith this comparison I mean to imply neither that Gaboury’s book is simply a set of insider stories nor should one conclude that Smith’s is just a personal narrative. In fact, Smith weaves into his text a set of engaging histories of, for instance, the technical and political contexts of Jean Joseph Fourier’s development of harmonic analysis and the misattribution of Vladimir Kotelnovik’s Sampling Theorem to Claude Shannon. Ultimately, however, Smith’s book is a very conventional history of science that focuses on the heroics of inventors, while Gaboury’s is intended to be a media archaeology with a much more ambitious aim than Smith’s.\n\nTo accomplish his aim, Gaboury articulates to his analysis of specific objects of hardware and software the ongoing philosophical concerns with objects in general; see especially chapter 4, “Object Paradigms: On the Origins of Object Orientation.” About ten years ago, commenting on object-oriented philosophy, Alexander Galloway wrote,\n\nWhy, within the current renaissance of research in continental philosophy, is there a coincidence between the structure of ontological systems and the structure of the most highly evolved technologies of post-Fordist capitalism? I am speaking, on the one hand, of computer networks in general and object-oriented computer languages (such as Java or C++) in particular and, on the other hand, of certain realist philosophers such as Bruno Latour, but also more pointedly Quentin Meillassoux, Graham Harman, and their associated school known as speculative realism. Why do these philosophers, when holding up a mirror to nature, see the mode of production reflected back at them? Why, in short, is there a coincidence between today’s ontologies and the software of big business?\n\nNow, a decade later, when our era is increasingly recognized as the anthropocene or, more accurately, the capitalocene, the answer to Galloway’s question is readily to hand. One sees a mode of production (e.g., the object-oriented programming paradigm) in nature because digital capitalism has radically reshaped the world with software. Most of the software used by designers today is implemented using object-oriented programming and its libraries, inputs and outputs are objects, in the computer science sense. As an epigraph to his final chapter, “Coda: After Objects,” Gaboury cites James Bridle’s comment on Autodesk, a piece of software used by many architects: “Because a line has been crossed, technology/software/code is in and of the world and there’s no getting out of it. Some architects can look at a building and tell you which version of Autodesk was used to create it. The world is defined by our visualizations of it” (191).\n\nIn his introduction, Gaboury makes the point himself like this: “computational images are not pictures of the things they represent; they are pictures of the world that produced them, and they execute a theory of that world in the world” (9). Gaboury provides us with a clear analysis of why we see objects in the philosopher’s mirror, or more expansively in most all of the productions of contemporary visual culture. He discusses how the same software is used in the design and manufacture of physical objects as well as the rendering of pictures of those same objects. In the physical production of manufactured objects as diverse as Volkswagen Beetles and IKEA couches is an object-oriented methodology that was developed — over the historical period covered by Gaboury — for 3D graphics and their associated computational processes. When pictures of those objects are rendered using the same software and hardware systems, Gaboury points out, in his conclusion, “These are not pictures of objects in the world. They are pictures of a way of making the world, an articulation of a particular relation toward objects as computational systems. … [A] vast number of the objects we see, use, and touch every day are derived from this same logic, products of the history of computer graphics” (195).\n\nGaboury notes his observation is apposite to artist Marisa Olson’s “post-internet” art, James Bridle’s “new aesthetic,” and architect Greg Lynn’s observations about (and practices employing) the merging of CAD/CAM packages, the software for finite element analysis, and 3D graphics rendering software. All of these and Gaboury’s image objects are further developments of what philosopher Jean Baudrillard, in the nineteen eighties, referred to as the “precession of simulacra,” the notion that representation precedes and determines the real or, in Baudrillard’s words, “[h]enceforth, it is the map that precedes the territory … it is the map that engenders the territory.”\n\nThere is no doubt that Gaboury’s book is concerned with image objects as simulacra: the term “simulation” occurs 270 times in the text and Gaboury writes in his acknowledgements, “The first draft of this project was completed in Lüneburg, Germany, during a transformative fellowship at the Institute for Advanced Study on Media Cultures of Computer Simulation” (viii). Yet, while Baudrillard can be read as a Marxist critic of capitalism, in Gaboury’s book, capitalism, Marx, and Baudrillard are not mentioned at all. Baudrillard’s politics can be broadly characterized as anti-capitalist, but Gaboury’s politics are more difficult to identify. He concludes the book with a plea: “If we hope to understand our lived environment, shaped as it has been by the seventy-year history of computer graphics, we must learn to perceive this coexistent quality of that world” (202). So perception and understanding are called for in this examination of the computer graphicists’ quest for “realism,” their pursuit of the receding horizon of perfect simulation. However, is this not a closed loop? New techniques and technologies reshape us, the observers/perceivers/understanders, and so recursively restructure our perceptions and understanding of those same techniques and technologies. The political call to action here is for a critical technical practice that reflexively shapes the new media technologies that shape us."
    }
}