{
    "id": "dbpedia_440_3",
    "rank": 93,
    "data": {
        "url": "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/topics/software.page.htm",
        "read_more_link": "",
        "language": "en",
        "title": "TCMHC: Timeline of Computer History",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/tcmhc_2nd.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/logo_2nd.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/2nd_nav/timeline_b.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/2nd_nav/collections_a.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/2nd_nav/exhibits_a.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/2nd_nav/research_a.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/2nd_nav/events_a.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/2nd_nav/contribute_a.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/2nd_nav/about_a.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/2nd_nav/search_a.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/2nd_nav/home_a.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/home/2nd_graphics/headers/timeline_header.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/software_line.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1945/1945_zuse.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1948/1948_shannon.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1953/1953_speed.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1956/1956_kinput.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1957/1957_ao_compiler.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1957/1957_fortran.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1959/1959_erma.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1960/1960_cobol.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1960/1960_lisp.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1962/1962_spacewar.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1963/1963_sketchpad.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1963/1963_ascii.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1964/1964_basic.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1967/1967_seymour.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1969/1969_unix.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1976/1976_cpm.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1979/1979_visicalc.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1982/1982_lotus.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/1985/1985_pmaker.jpg",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/more_year.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/previous_topic.gif",
            "https://bcc16.ncu.edu.tw/pool/stuff/CMHC_timeline/timeline/graphics/next_topic.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Konrad Zuse 1945 Konrad Zuse began work on Plankalkul (Plan Calculus), the first algorithmic programming language, with an aim of creating the theoretical preconditions for the formulation of problems of a general nature. Seven years earlier, Zuse had developed and built the world's first binary digital computer, the Z1. He completed the first fully functional program-controlled electromechanical digital computer, the Z3, in 1941. Only the Z4 -- the most sophisticated of his creations -- survived World War II. Claude Shannon 1948 Claude Shannon's \"The Mathematical Theory of Communication\" showed engineers how to code data so they could check for accuracy after transmission between computers. Shannon identified the bit as the fundamental unit of data and, coincidentally, the basic unit of computation. IBM 701 1953 John Backus completed speedcoding for IBM's 701 computer. Although speedcoding demanded more memory and compute time, it trimmed weeks off of the programming schedule. 1955 Herbert Simon and Allen Newell unveiled Logic Theorist software that supplied rules of reasoning and proved symbolic logic theorems. The release of Logic Theorist marked a milestone in establishing the field of artificial intelligence. 1956 The first operating system for the IBM 704 reflected the cooperation of Bob Patrick of General Motors and Owen Mock of North American Aviation. Called GM-NAA I/O, it allowed batch processing -- a simple way to combine existing commands into new commands. MIT Whirlwind 1956 At MIT, researchers began experimentation on direct keyboard input on computers, a precursor to today's normal mode of operation. Doug Ross wrote a memo advocating direct access in February; five months later, the Whirlwind aided in such an experiment. UNIVAC MATH-MATIC 1957 Sperry Rand released a commercial compiler for its UNIVAC. Developed by Grace Hopper as a refinement of her earlier innovation, the A-0 compiler, the new version was called MATH-MATIC. Earlier work on the A-0 and A-2 compilers led to the development of the first English-language business data processing compiler, B-0 (FLOW-MATIC), also completed in 1957. FLOW-MATIC served as a model on which to build with input from other sources. IBM 704 FORTRAN 1957 A new language, FORTRAN (short for FORmula TRANslator), enabled a computer to perform a repetitive task from a single set of instructions by using loops. The first commercial FORTRAN program ran at Westinghouse, producing a missing comma diagnostic. A successful attempt followed. ERMA characters 1959 ERMA, the Electronic Recording Method of Accounting, digitized checking for the Bank of America by creating a computer-readable font. A special scanner read account numbers preprinted on checks in magnetic ink. COBOL design team 1960 A team drawn from several computer manufacturers and the Pentagon developed COBOL, Common Business Oriented Language. Designed for business use, early COBOL efforts aimed for easy readability of computer programs and as much machine independence as possible. Designers hoped a COBOL program would run on any computer for which a compiler existed with only minimal modifications.\n\nHoward Bromberg, an impatient member of the committee in charge of creating COBOL, had this tombstone made out of fear that the language had no future. However, COBOL has survived to this day.\n\nLISP Programmer's Reference 1960 LISP made its debut as the first computer language designed for writing artificial intelligence programs. Created by John McCarthy, LISP offered programmers flexibility in organization. SpaceWar! on PDP-1 1962 MIT students Slug Russell, Shag Graetz, and Alan Kotok wrote SpaceWar!, considered the first interactive computer game. First played at MIT on DEC's PDP-1, the large-scope display featured interactive, shoot'em-up graphics that inspired future video games. Dueling players fired at each other's spaceships and used early versions of joysticks to manipulate away from the central gravitational force of a sun as well as from the enemy ship. Sketchpad document 1963 Ivan Sutherland published Sketchpad, an interactive, real time computer drawing system, as his MIT doctoral thesis. Using a light pen and Sketchpad, a designer could draw and manipulate geometric figures on the screen. ASCII code 1963 ASCII -- American Standard Code for Information Interchange -- permitted machines from different manufacturers to exchange data. ASCII consists of 128 unique strings of ones and zeros. Each sequence represents a letter of the English alphabet, an Arabic numeral, an assortment of punctuation marks and symbols, or a function such as a carriage return. BASIC manual 1964 Thomas Kurtz and John Kemeny created BASIC, an easy-to-learn programming language, for their students at Dartmouth College. 1965 Object-oriented languages got an early boost with Simula, written by Kristen Nygaard and Ole-John Dahl. Simula grouped data and instructions into blocks called objects, each representing one facet of a system intended for simulation. Seymour Papert 1967 Seymour Papert designed LOGO as a computer language for children. Initially a drawing program, LOGO controlled the actions of a mechanical \"turtle,\" which traced its path with pen on paper. Electronic turtles made their designs on a video display monitor.\n\nPapert emphasized creative exploration over memorization of facts: \"People give lip service to learning to learn, but if you look at curriculum in schools, most of it is about dates, fractions, and science facts; very little of it is about learning. I like to think of learning as an expertise that every one of us can acquire.\"\n\n1968 Edsger Dijkstra's \"GO TO considered harmful\" letter, published in Communications of the ACM, fired the first salvo in the structured programming wars. The ACM considered the resulting acrimony sufficiently harmful that it established a policy of no longer printing articles taking such an assertive position against a coding practice. [Full text] 1969 The RS-232-C standard for communication permitted computers and peripheral devices to transmit information serially -- that is, one bit at a time. The RS-232-C protocol spelled out a purpose for a serial plug's 25 connector pins. UNIX \"license plate\" 1969 AT&T Bell Laboratories programmers Kenneth Thompson and Dennis Ritchie developed the UNIX operating system on a spare DEC minicomputer. UNIX combined many of the timesharing and file management features offered by Multics, from which it took its name. (Multics, a projects of the mid-1960s, represented the first effort at creating a multi-user, multi-tasking operating system.) The UNIX operating system quickly secured a wide following, particularly among engineers and scientists. 1972 Nolan Bushnell introduced Pong and his new company, Atari video games. CP/M 1976 Gary Kildall developed CP/M, an operating system for personal computers. Widely adopted, CP/M made it possible for one version of a program to run on a variety of computers built around eight-bit microprocessors. 1977 The U.S. government adopted IBM's data encryption standard, the key to unlocking coded messages, to protect confidentiality within its agencies. Available to the general public as well, the standard required an eight-number key for scrambling and unscrambling data. The 70 quadrillion possible combinations made breaking the code by trial and error unlikely. Bob Frankston and Dan Brinklin 1979 Harvard MBA candidate Daniel Bricklin and programmer Robert Frankston developed VisiCalc, the program that made a business machine of the personal computer, for the Apple II. VisiCalc (for Visible Calculator) automated the recalculation of spreadsheets. A huge success, more than 100,000 copies sold in one year. 1981 The MS-DOS, or Microsoft Disk Operating System, the basic software for the newly released IBM PC, established a long partnership between IBM and Microsoft, which Bill Gates and Paul Allen had founded only six years earlier. Lotus 1-2-3 1982 Mitch Kapor developed Lotus 1-2-3, writing the software directly into the video system of the IBM PC. By bypassing DOS, it ran much faster than its competitors. Along with the immense popularity of the IBM's computer, Lotus owed much of its success to its working combination of spreadsheet capabilities with graphics and data retrieval capabilities.\n\nKapor, who received his bachelor's degree in an individually designed cybernetics major from Yale University in 1971, started Lotus Development Corp. to market his spreadsheet and served as its president and CEO from 1982 to 1986. He also has worked to develop policies that maximize openness and competitiveness in the computer industry.\n\n1983 Microsoft announced Word, originally called Multi-Tool Word, and Windows. The latter doesn't ship until 1985, although the company said it would be on track for an April 1984 release. In a marketing blitz, Microsoft distributed 450,000 disks demonstrating its Word program in the November issue of PC World magazine. Aldus PageMaker 1985 Aldus announced its PageMaker program for use on Macintosh computers, launching an interest in desktop publishing. Two years later, Aldus released a version for IBMs and IBM-compatible computers. Developed by Paul Brainerd, who founded Aldus Corp., PageMaker allowed users to combine graphics and text easily enough to make desktop publishing practical.\n\nChuck Geschke of Adobe Systems Inc., a company formed in 1994 by the merger of Adobe and Aldus, remembered: \"John Sculley, a young fellow at Apple, got three groups together - Aldus, Adobe, and Apple - and out of that came the concept of desktop publishing. Paul Brainerd of Aldus is probably the person who first uttered the phrase. All three companies then took everybody who could tie a tie and speak two sentences in a row and put them on the road, meeting with people in the printing and publishing industry and selling them on this concept. The net result was that it turned around not only the laser printer but, candidly, Apple Computer. It really turned around that whole business.\"\n\n1985 The C++ programming language emerged as the dominant object-oriented language in the computer industry when Bjarne Stroustrup published \"The C++ Programming Language.\" Stroustrup, at AT&T Bell Laboratories, said his motivation stemmed from a desire to write event-driven simulations that needed a language faster than Simula. He developed a preprocessor that allowed Simula style programs to be implemented efficiently in C.\n\nStroustrup wrote in the preface to \"The C++ Programming Language\": \"C++ is a general purpose programming language designed to make programming more enjoyable for the serious programmer. Except for minor details, C++ is a superset of the C programming language. In addition to the facilities provided by C, C++ provides flexible and efficient facilities for defining new types.... The key concept in C++ is class. A class is a user-defined type. Classes provide data hiding, guaranteed initialization of data, implicit type conversion for user-defined types, dynamic typing, user-controlled memory management, and mechanisms for overloading operators.... C++ retains C's ability to deal efficiently with the fundamental objects of the hardware (bits, bytes, words, addresses, etc.). This allows the user-defined types to be implemented with a pleasing degree of efficiency.\"\n\n1987 Apple engineer William Atkinson designed HyperCard, a software tool that simplifies development of in-house applications. HyperCard differed from previous programs of its sort because Atkinson made it interactive rather than language-based and geared it toward the construction of user interfaces rather than the processing of data. In HyperCard, programmers built stacks with the concept of hypertext links between stacks of pages. Apple distributed the program free with Macintosh computers until 1992.\n\nHypercard users could look through existing HyperCard stacks as well as add to or edit the stacks. As a stack author, a programmer employed various tools to create his own stacks, linked together as a sort of slide show. At the lowest level, the program linked cards sequentially in chronological ordered, but the HyperTalk programming language allowed more sophisticated links.\n\n1989 The concept of virtual reality made a statement as the hot topic at Siggraph's 1989 convention in Boston. The Silicon Graphics booth featured the new technology, designed by the computer-aided design software company Autodesk and the computer company VPL. The term describes a computer-generated 3-D environment that allows a user to interact with the realities created there. The computer must calculate and display sensory information quickly enough to fool the senses.\n\nHoward Rheingold described, \"shared and objectively present like the physical world, composable like a work of art, and as unlimited and harmless as a dream.\" First practical for accomplishing such tasks as flight simulation, virtual reality soon spread much further, promising new ground in video games, education, and travel. Computer users are placed into the virtual environment in a variety of ways, from a large monitor to a head-mounted display or a glove.\n\n1990 Microsoft shipped Windows 3.0 on May 22. Compatible with DOS programs, the first successful version of Windows finally offered good enough performance to satisfy PC users. For the new version, Microsoft revamped the interface and created a design that allowed PCs to support large graphical applications for the first time. It also allowed multiple programs to run simultaneously on its Intel 80386 microprocessor.\n\nMicrosoft released Windows amid a $10 million publicity blitz. In addition to making sure consumers knew about the product, Microsoft lined up a number of other applications ahead of time that ran under Windows 3.0, including versions of Microsoft Word and Microsoft Excel. As a result, PCs moved toward the user-friendly concepts of the Macintosh, making IBM and IBM-compatible computers more popular."
    }
}