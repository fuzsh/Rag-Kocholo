{
    "id": "dbpedia_4560_1",
    "rank": 60,
    "data": {
        "url": "https://arxiv.org/html/2401.01589v1",
        "read_more_link": "",
        "language": "en",
        "title": "The Security and Privacy of Mobile Edge Computing: An Artificial Intelligence Perspective",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://arxiv.org/html/x1.png",
            "https://arxiv.org/html/x2.png",
            "https://arxiv.org/html/x3.png",
            "https://arxiv.org/html/extracted/5304577/cheng.jpeg",
            "https://arxiv.org/html/extracted/5304577/zenghui.png",
            "https://arxiv.org/html/extracted/5304577/panzhou.jpg",
            "https://arxiv.org/html/extracted/5304577/zichuan.jpg",
            "https://arxiv.org/html/extracted/5304577/ruixuan.jpg",
            "https://arxiv.org/html/extracted/5304577/wu.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Mobile Edge Computing",
            "5G",
            "Internet of Things",
            "Artificial Intelligence",
            "Machine Learning",
            "Security and Privacy",
            "Software Defined Network Security",
            "Virtual Machine security."
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "License: arXiv.org perpetual non-exclusive license\n\narXiv:2401.01589v1 [cs.CR] 03 Jan 2024\n\nThe Security and Privacy of Mobile Edge Computing: An Artificial Intelligence Perspective\n\nCheng Wang, Zenghui Yuan, Pan Zhou, , Zichuan Xu, Ruixuan Li, , and Dapeng Oliver Wu Cheng Wang, Zenghui Yuan and Pan Zhou are with Hubei Engineering Research Center on Big Data Security, Key Laboratory of Distributed System Security of Hubei Province, School of Cyber Science and Engineering, Huazhong University of Science and Technology, Wuhan, 430074, China. (e-mail: wangcheng20, zenghuiyuan, panzhou@hust.edu.cn).Zichuan Xu is with the School of Software, and the Key Laboratory for Ubiquitous Network and Service Software of Liaoning Province, Dalian University of Technology, Dalian 116024, China. (e-mail: z.xu@dlut.edu.cn).Ruixuan Li is with the Intelligent and Distributed Computing Laboratory, School of Computer Science and Technology, Huazhong University of Science and Technology, Wuhan 430074, China. (e-mail: rxli@hust.edu.cn).Dapeng Oliver Wu is with the Department of Computer Science, City University of Hong Kong, Kowloon 999077, Hong Kong. (e-mail: dpwu@ieee.org).Cheng Wang and Zenghui Yuan contributed equally to this work.(Corresponding authors: Pan Zhou and Ruixuan Li.)\n\nAbstract\n\nMobile Edge Computing (MEC) is a new computing paradigm that enables cloud computing and information technology (IT) services to be delivered at the network’s edge. By shifting the load of cloud computing to individual local servers, MEC helps meet the requirements of ultralow latency, localized data processing, and extends the potential of Internet of Things (IoT) for end-users. However, the crosscutting nature of MEC and the multidisciplinary components necessary for its deployment have presented additional security and privacy concerns. Fortunately, Artificial Intelligence (AI) algorithms can cope with excessively unpredictable and complex data, which offers a distinct advantage in dealing with sophisticated and developing adversaries in the security industry. Hence, in this paper we comprehensively provide a survey of security and privacy in MEC from the perspective of AI. On the one hand, we use European Telecommunications Standards Institute (ETSI) MEC reference architecture as our based framework while merging the Software Defined Network (SDN) and Network Function Virtualization (NFV) to better illustrate a serviceable platform of MEC. On the other hand, we focus on new security and privacy issues, as well as potential solutions from the viewpoints of AI. Finally, we comprehensively discuss the opportunities and challenges associated with applying AI to MEC security and privacy as possible future research directions.\n\nIndex Terms:\n\nMobile Edge Computing, 5G, Internet of Things, Artificial Intelligence, Machine Learning, Security and Privacy, Software Defined Network Security, Virtual Machine security.\n\nI Introduction\n\nThe number of end devices, which include smartphones, wearable gadgets, tablets, and Internet-of-Things (IoT) devices, etc., has exploded in recent years. Simultaneously, a growing number of mobile and IoT applications, such as online gaming, virtual reality, and self-driving vehicles, have become more resource-intensive and latency-sensitive. These applications render the conventional cloud computing paradigm obsolete for its long propagation delays [1]. To meet the exponentially growing resource and latency requirements of these applications, the Mobile Edge Computing (MEC) paradigm was proposed [2]. The purpose of MEC is to push the powerful cloud computing capacities onto the edge servers that are in close proximity with end-users. MEC enables the provision of IT services and cloud computing capabilities at the mobile network’s edge, within the Radio Access Network (RAN), and in close proximity to mobile subscribers. End devices can access the applications, services, and data on these edge servers with ultralow latency provided by the application vendors [3].\n\nAs a new distributed computing paradigm, MEC has brought many research topics to academic and industrial areas such as computation offloading, data caching, and service placement, etc [4, 5, 3]. The security and privacy issues of the MEC environment have gradually attracted the attention of researchers due to the complexity of the MEC service model, multi-source heterogeneous data, and resource-constrained end devices [6]. For example, a malware named \"Mirai\" manages as many as 400,000 compromised smart devices into a controlled \"zombies\" network to launch a DDoS attack against edge servers, shutting down over 178,000 domains. The number of cyberattacks on such facilities doubled again between November 2020 and January 2021 [7]. These fragile IoT devices directly or indirectly lead to this despondent result.\n\nCompared with security and privacy issues in traditional cloud computing, MEC possesses several unique characteristics. First, in order to compete, a growing number of IoT devices deployed in the MEC environment are produced with economically manufactured circuitry that employs weak, guessable, or hardcoded passwords and other brittle security measures. Most such devices are easily preempted, contaminated, and destroyed by malicious users. Therefore, the MEC system is vulnerable to security and privacy threats directly brought by IoT devices. In this paper, we purposefully incorporate the IoT system’s security and privacy issues into the MEC in order to thoroughly investigate the MEC’s security and privacy issues. Second, all end devices requesting edge servers’ services must through RAN, and this critical juncture is one of the weakest points in the entire network, resulting in serious communication link security issues, such as eavesdropping, hijacking and Distributed Denial-of-Service (DDoS) attacks [8]. Third, in order to achieve a serviceable platform with dynamic resource allocation capability and ease the burden of the network management, Software Defined Network (SDN) [9], Network Function Virtualization (NFV) [10], and virtualization technologies are vital for realizing the MEC paradigm. These technologies are viewed as the potential solution to MEC’s cost and efficiency problems. However, each of these technologies has its own security and privacy challenges which are easy targets for attackers. Finally, in the MEC environment, user data such as user identity information, location information, and sensitive data is typically stored and processed by an honest-but-curious authorized entity, and the user has no way of knowing whether these semi-trusted authorized entities will secretly obtain the user’s private information for the purpose of illegal profit.\n\nTo decrease the security and privacy burden associated with MEC, numerous research directions have been explored, such as context-aware security, microservices, and blockchain, etc [6]. However, the unique characteristics of AI-based approaches have attracted much more attention than other approaches since it has the advantage of handling a large amount of unpredicted and complex data automatically. [11]. AI technologies have been developed rapidly in the past few decades, from initial laboratory research to various commercial applications. As an important subset of AI, Machine Learning (ML) refers to the concept that computer programs can automatically learn from and adapt to new data without being assisted by humans. With the prosperity of Graph Processing Units (GPU) and big data, ML has completed remarkable achievements in many fields, such as Computer Version (CV), robotic, social media marketing, and gaming [12], and the simplicity and functionality of deploying learning algorithms in these fields significantly surpass almost all traditional rule-based algorithms. These leading advantages are also affecting the development of the security and privacy field.\n\nAccording to the AV-TEST report, more than 450,000 new malware are registered every day [13]. However, most of the instances are just minor variants of the existing malware. Nonetheless, the correct identification of these specific malware needs to be based on many complex classification methods, such as hashes, simple rules, or heuristic fingerprints [11]. Fortunately, AI algorithms can manage vast amounts of unpredictable and complex data, which offers a distinct advantage in dealing with sophisticated and developing adversaries in the security industry. In order to meet the challenges of security and privacy, many AI algorithms have been used to protect data privacy and address security issues such as spoofing attacks [14], DoS attacks [15], DDoS attacks [8], intrusions [16], jamming [17], eavesdropping [18], and malware [19]. A suitable learning algorithm can particularly use the trained model generated from the labeled data to recognize new security and privacy threats. Due to the advantages of learning algorithms, an increasing number of researchers are focusing on how to use them to address security and privacy concerns associated with MEC. The MEC environment integrates a variety of devices, such as IoT devices, mobile devices, and third-party servers, so that MEC naturally has a complicated network architecture, communication links, and various network protocols. In addition, the subscription nodes and the service nodes in the MEC have the defect of resource constraints. Therefore, in such a resource-scarce and heterogeneous distributed environment, traditional AI-based methods can no longer cope with the security and privacy challenges brought by MEC. However, the prosperity of various distributed, lightweight and green learning algorithms has paved the way for deploying such algorithms in the MEC environment.\n\nIn this paper, we comprehensively consider security and privacy issues in the ETSI reference architecture from the viewpoints of AI.\n\nThe key contributions of this survey are listed as follows:\n\n•\n\nWe purposefully incorporate the security and privacy of IoT systems as well as the SDN/NFV into the MEC environment to thoroughly investigate the MEC’s security and privacy issues.\n\n•\n\nWe provide an in-depth review of recent security and privacy issues in the MEC environment and from the layer viewpoints of ETSI reference architecture to thoroughly discuss the solutions for implementing AI technologies.\n\n•\n\nAt the end of this paper, we meticulously highlight the possible future directions about AI approaches for MEC security and privacy issues.\n\nFig. 1 depicts the overall architecture of this paper. In the following content of this section, we investigate the current survey on discussing MEC’s security and privacy and compare the papers that have been published so far and summarize the uniqueness and importance of our work. Then, we systematically overview the reference architecture of ETSI MEC in Section II. In Section III, we start to comprehensively study the MEC-specific security and privacy issues in the MEC environment. Based on the presented security and privacy issues, in Section IV, we thoroughly discuss the most promising AI algorithms, their advantages, disadvantages, and applications in the MEC security and privacy domains. Then, in Section V and VI, we systematically introduce the AI approaches for layer-based MEC’s security and privacy issues. In Section VII, we summarize the overall work of this paper and propose research problems and future directions. Finally, we draw conclusions in Section VIII.\n\nI-A Related Work\n\nIn order to meet the increasing demand for sensitive applications and the proliferation of IoT devices, some papers have proposed to add an edge side fall between the cloud and users to reduce the pressure on the bandwidth and network traffic of cloud servers and increase the Quality of Services (QoS) of users. The papers [20, 21, 22, 23, 24] proposed an initial three-tier framework about edge computing paradigms. The authors of [20] defined \"edge\" as any computing and network resources located between data sources and cloud data centers, and they provided several case studies involving computing offloading, data caching, data processing, and service delivery.\n\nThe development of fifth-generation (5G) wireless networks is gaining momentum, with the goal of connecting almost every aspect of life via the network at a significantly faster speed, with extremely low latency and ubiquitous connectivity. Additional to this, 5G networks, based on the 3GPP (The 3rd Generation Partnership Project) 5G specifications [25] will be a key future target environment for MEC deployments in the coming years. Mao et al. [1] provided an in-depth overview and future research directions for MEC from a 5G communication perspective. The authors of [26] presented a comprehensive survey of MEC from the standpoint of service adoption and provision. To meet the stringent latency requirements of applications (e.g., real-time applications) and to reduce energy consumption at User Equipment (UE), the authors [27] proposed a survey about computing offloading issues from different aspects.\n\nThe MEC’s ability to ensure security and privacy has been widely questioned due to the use of multiple communication technologies, complex network structures, and multi-source heterogeneous data types [6, 28, 8]. The papers[29, 30, 27, 26] made no mention of security or privacy as critical aspects of MEC. Although certain surveys, such as [23, 31, 32, 8] and [29], mainly focused on security and privacy, the contexts are not concurring to the ETSI standardized MEC architecture and its components. When it comes to security and privacy, the MEC paradigm is closely aligned with ETSI standards, according to a survey published in [6]. This survey aimed to guide the research communities on their way toward a feasible MEC deployment. Ali et al. [28] proposed a survey about the data security and privacy based on the ETSI standardized MEC architecture. At the same time, some surveys about MEC security and privacy around ML began to appear [33, 8, 34]. In [35], they provided a comprehensive survey of ML methods and recent advances in deep learning (DL) methods that can be used to develop enhanced security methods for IoT systems. Authors in [36] specifically summarize the application of some AI technologies in IoT-based hajj and umrah scenarios. Singh et al. [37] presented a review of ML for assisting security and privacy issues of Edge Computing (EC), however, they only discussed the naive three-tier architecture and did not consider the security and privacy issues that two critical auxiliary technologies (i.e., SDN/NFV) brought to the EC environment.\n\nTo the best of our knowledge, we are the first survey that synthetically investigates ETSI standardized MEC, IoT system as well as their assistive technologies SDN/NFV’s security and privacy issues from the perspective of AI. On the one hand, this survey identifies and compares the opportunities, benefits, and drawbacks of various AI approaches for MEC security and privacy. On the other hand, we comprehensively consider various possible AI solutions from the layer viewpoints of ETSI MEC reference architecture. Based on reviewing potential AI applications in the MEC security and privacy context, we discuss and present the identified challenges and future directions.\n\nII Overview of Mobile Edge Computing\n\nEuropean 5G PPP (5G Infrastructure Public Private Partnership) research body recognizes the MEC as one of the key technologies in the development of 5G and beyond 5G technologies [2]. MEC opens up services to mobile users and enterprise entities as well as to adjacent manufactories, these entities now can deliver their resource-intensive and latency-sensitive applications over the mobile network. ETSI and Information Services Group (ISG) proposed the primitive standards and architecture of MEC which illustrated in Fig. 2. As an extension of cloud computing, the purpose of MEC is to push the powerful cloud computing capacities onto the MEC servers that are in close proximity with end-users. MEC has the following unique characteristics which differ from the traditional computing paradigms:\n\n•\n\nOn-Premises: MEC can run independently of other networks, this is an essential attribution in machine-to-machine (M2M) scenarios.\n\n•\n\nProximity: The MEC servers are often attached to the base stations or access points close to the end-users, improving real-time response ability.\n\n•\n\nLower Latency: End-users data can be directly processed on the nearby MEC servers without delivering to the remote cloud. Hence, the end-users QoS and QoE (Quality of Experience) will get a considerable improvement.\n\n•\n\nLocation Awareness: The MEC servers can only serve the specific geographic location’s users covered by the base station to which it is connected.\n\nIn this subsection, we divide the edge server system into two layers according to the ETSI-published MEC framework and the reference architecture [38, 6]. Each layer has several submodules, and there are three groups of reference points to link different submodules. Where Mx, Mm, and Mp denote reference points connecting to external entities, management reference points, and reference points regarding the MEC platform functionality, respectively.\n\nII-1 MEC System Level\n\nUser Equipment (UE) and Customer Facing Service (CFS) Portal are all external devices subscribed to the edge server services. Users interact with the mobile edge system through the UE application that is instantiated in the UE. Specifically, the CFS Portal enables third-party customers to select and order a variety of edge applications to meet their unique requirements. Both UE application and CFS Portal connect the edge server through Access Networks (AN). User App Life-Cycle Management Proxy (UALCMP) determines the UE applications can initialize, terminate or relocate mobile edge applications and decides on the granting of these requests to be forwarded to Operations Support System (OSS) and Mobile Edge Orchestrator (MEO). Then it can send the status information of mobile edge applications to UE applications. In particular, UALCMP can only receive requests which are within the geographic area that MEC servers covered, which means that it needs to fulfill the proximity constraint. OSS receives requests for initiation or termination that forwarded from UE applications and CFS Portal, then decides whether to authorize these requests for further processing on MEO. MEO, as the backbone functional block of mobile system layer, manages both MEC system level and MEC host level. Specifically, it can grant requests forwarded from MEC system level to initiate, terminate or relocate mobile edge applications, and dominate the resources of mobile host layer, such as selecting the appropriate mobile edge host to tackle low-latency or resource-incentive requests.\n\nII-2 MEC Host Level\n\nMEC host level can be divided into MEC server management level and MEC server level. Mobile Edge Platform Manager (MEPM) as the backbone of MEC host level, is responsible for the management of various functional blocks in Mobile Edge Host (MEH), including MEC platform element management, Mobile Edge (ME) application rules and requirements management (i.e., service authorizations, traffic rules formulation, Domain Name System (DNS) configuration and resource conflict resolution). MEPM is also responsible for managing the life cycle of applications and forwarding information to related applications through MEO. Virtualization Infrastructure Manager (VIM) is mainly responsible for allocating and releasing virtual resources (storage, compute and networking resources) of Virtualization Infrastructure (VI), and using VI resources to create software images for serving CFS Portal and UE applications. VIM also collects the current status information of VI resources to MEO and MEPM. ME applications are software entities built on the top of VI. In a MEH, the connectivity among different ME applications is established through Local Area Data Network (LADN) [39]. After receiving traffic rules and DNS records from MEPM, MEC Platform uses traffic rules controller and DNS handling to configure the traffic rules of MEC applications and DNS proxy/server. MEC Service contains different services to facilitate MEC applications and MEC platform.\n\nIII Security and Privacy Challenges of MEC\n\nEdge computing scenarios are centred on time-sensitive services, such as industrial IoT, autonomous driving, smart cities, etc. As a result, when designing network protocols and topologies, security and privacy are frequently sacrificed in favor of real-time and effective communication. Edge servers with on-demand and close proximity attributions are exposed to the network edge, shortening the distance between the attacker and the MEC physical devices. At the same time, the widely open Application Programming Interfaces (APIs) make it easy for attackers to initiate security threats such as data theft, information tampering, and node intrusion [40]. Finally, end-users’ mobile nature allows them to dynamically join or exit the edge servers that cover them, and frequent topology changes between mobile devices and edge servers will have an impact on network resource management, allowing attackers to launch adaptive attacks by exploiting the calculation transforming between different edge servers. Fig.3 [41, 42, 43] shows the overall architecture of a typical MEC deployment with its security and privacy issues.\n\nIII-A Security Threats\n\nIn this subsection, we comprehensively consider the security issues in MEC and IoT systems with their serviceable platforms SDN and NFV.\n\nIII-A1 IoT Systems Security\n\nFrom the perspective of the ETSI MEC architecture, MEC enabled IoT systems consists of two parts, one is IoT devices deployed in the actual environment, and the other is MEC IoT platform hosts as software instance which is migrated to the MEC facilities. IoT devices easily suffer various security risks due to current manufacturing and service vendors’ lack of security awareness, lagging security standards, limited software and hardware resources, and the weakness of security protection capabilities. Large-scale cyber attacks targeting or originating from IoT have sparked widespread concern. For example, a malware named Mirai can exploit as many as 400,000 compromised smart devices into a controlled \"zombies\" network to launch a DDoS attack [44]. The MEC IoT platform appears as a service provider for MEC applications running on MEC hosts and enabled via the Mp1 interface as depicted in Fig.2 [41]. In other words, MEC applications can find the MEC IoT platform by querying its service registry, and interact with it using a defined IoT API exposed by the MEC IoT platform.\n\nPerception Layer\n\nThe main goals of the perception layer are to interact with the complicated real world and cooperatively connect heterogeneous sensors to provide diversely intelligent services. The perception layer can also be called the “sensors” layer. Considering the economic pressure brought by the massive deployment of IoT devices, they are generally designed as resource-constrained devices with low power and limited computing resources [45]. Therefore, it is a challenge to identify malicious data and authenticate benign equipment through traditional intrusion detection and authentication methods [14].\n\nDoS/DDoS Attacks: The notorious DDoS attack, which has been intensively studied in the traditional cloud computing environment, is a new challenge and an open research topic in the MEC environment. Unlike traditional DDoS attacks in the cloud environment that mainly utilize computers as bots, a DDoS attack in the EC environment is often coordinated via control of mobile and IoT devices [46]. There are many applications with different functions installed on mobile user devices, but the security consciousness of different application developers is uneven, and some malicious applications often try to require permissions that are out of scope. Especially for some android devices, although the open-source android framework brings convenience for developers to require APIs to implement various functions, the fragile supervision capabilities of android communities make users easily threatened by malware. Simultaneously, some applications may hijack the user device’s microphone in order to collect private information from daily conversations.\n\nTCP/IP Attacks: If a fake base station can easily transmit a spoofing synchronizing signal with sufficient high power during the cell selection stage, wireless mobile UE may be drawn to and attempt to camp on the fake base station rather than any legitimate base station [47].\n\nNetwork Layer\n\nThe network layer is the backbone of the IoT system and has three main functions. First, it is responsible for establishing the network topology among IoT devices, then receiving and processing the raw information of the perception layer, and finally, the refined information is transmitted to the application layer to provide services for real-world customers [35].\n\nAd-hoc Network Security: Some short-range communication technologies can establish connections between UE equipments such as Bluetooth, WiFi, IrDA, ZigBee, etc. This type of connection is device-to-device which establishes a direct communication link among UE equipments in IoT systems without requiring any edge servers for connection, and we call this type of network as Mobile Ad-hoc Network (MANET) [40]. These communication technologies allow billions of heterogeneous devices to connect to the backbone and communicate with each other to complete complex and diverse intelligent functions. However, most end devices that adopt these technologies are resource-constrained so that the adversary can violate the route structure, congest wireless channels, and inject malicious nodes with ease.\n\nRouting Attacks: While the MANET’s nodes roam in a hostile environment, some statical security solutions are unable to adapt to the dynamic change in topology. The routing protocol of MANET such as Dynamic Source Routing (DSR) establishes route paths from a source node to a destination node by exchanging the network topology information between these two nodes. Since all messages are transmitted through wireless channels, so that any intruder can forge a valid routing updates and maliciously furnish incorrect routing states information. Intruders can also modify the route request (RREQ) or route replay (RREP) packets to delete a node, switch the order of the nodes, and append a node.\n\nAttack on Short-range Communication Technologies: In an ad-hoc network, all communication signals must pass through a bandwidth-limited wireless channel, making the network vulnerable to physical-layer threats. The attacker can also eavesdrop and modify the information within the wireless communication channels or impersonate a legitimate participant to intentionally inconsistent wireless channels. Bandwidth-limited wireless channels are also vulnerable to DoS attacks via network-layer packet blasting. These packets exhaust a significant proportion of the computing resources, which introduce the wireless channel contention and network congestion.\n\nMalicious Nodes: In a hostile environment, it is impractical for an ad-hoc network to rely on the cooperation of all nodes to complete decentralized control, while malicious nodes can suspend the cooperation algorithm by refusing to respond. This situation also makes some centralized intrusion detection mechanisms incapable of detecting a node failure or a malicious intrusion.\n\nSide Channel Attacks: Some IoT devices, such as smart medical devices, wearable devices, and smart home devices, collect raw data about the users’ behavior and status [48]. These data are much more detailed and accurate, which contain much more sensitive information. As a result, an adversary can exploit these raw data to obtain additional privacy information. For example, Liu et al. [49] analyze the data collected by the accelerometer sensors in the smartwatch via the new and practical side-channel to successfully infer the user’s keystroke behavior [49].\n\nApplication Layer\n\nThe application layer serves application subscribers by providing intelligent services. For instance, the application layer can provide surveillance video data and humidity measurements to subscribers. The importance of the application layer is to provide users with high-quality intelligent services.\n\nMalware: IoT system applications are most closely connected with users, and they are required to defend against security and privacy threats while providing services for users. However, malware will deliberately obtain extra information beyond its requirements, resulting in the leakage of user’s sensitive data and the preempt of IoT devices. For example, Fernandes et al. [50] analyzed the source code of SmartThings apps and found that more than 50% of the apps on the Samsung smart home platform have significant overprivileged.\n\nIII-A2 MEC system level with 5G Core Network\n\nMobile core network needs to ensure that end devices are securely connected to edge servers through an access interface and run a series of authentication protocols to prevent unauthorized devices. It also needs to provide some security measures such as integrity protection and encryption to protect the communication information from manipulating and eavesdropping on the wireless communication channel. At the same time, the mobile core network is eager for the necessary differentiated security mechanisms to serve various personal businesses and vertical services.\n\nAccess Network security\n\nAs part of a mobile telecommunication system, AN resides between end devices and provides wide-area wireless connectivity to edge servers. It traverses the emanated service requests located at the different geographic locations to the edge servers due to the resource-constrained UE. In order to enable high network throughput, ubiquitous connections, and low latency, some novel technologies such as massive multiple-input-multiple-output (MIMO), interference-aware receivers, and advanced coding/modulations are proposed to improve the spectral efficiency [51]. The connectivity between the UE and edge servers through these heterogeneous technologies raises several security concerns that could be exploited by the attacker [6].\n\nDenial of Service (DoS): Jamming a wireless channel or compromising a service via DoS is to destroy the availability of AN connected to edge servers. The attacker raises a DoS attack in the MEC environment can only affect the edge servers where the botnets can access [46]. Therefore, it is difficult for the attacker to use their global botnets to launch a tremendous DDoS attack on a specific target edge server. However, the MEC has deployed a large number of latency-tolerant applications, disrupting legitimate users’ access to services will greatly affect the QoS of MEC systems. It is difficult to detect such malicious network activities because of the direct connection between MEC systems and end devices [27]. Novel botnet type DDoS attacks will also affect the availability of UALCMP and CFS Portal in the MEC system level.\n\nEavesdropping and Hijacking: A wireless channel between UE equipment and edge servers is prone to cyber risks such as eavesdropping and hijacking due to the broadcast nature of the wireless medium. As a result, wireless communication channels are vulnerable to being hijacked to retrieve information by cyberattacks such as man-in-the-middle (MitM), replay, Advanced Persistent Threat (APT), Sybil, and spoofing attempts [52]. Traditional wireless channels mainly use some encryption protocols to secure the transmission process [52]. However, the process of information encryption and private key exchanges between channels largely hinders its applicability for massive latency-sensitive applications in the MEC environment.\n\nMEC System Level\n\nMEC system level as part of the core network of MEC system connecting to end devices, MEH, and 5G core network. It has the following three aspects of functions. First, it determines to grant services for further process and handle services life cycle forwarded from end devices. Second, it guards the resource utilization status, and the configuration of VMs and underlying hardware in the MEH. Finally, it switches control signals with a 5G core network via wireless, wired, or optical. Thus, the MEC system level is critical to attackers for gaining unauthorized access, manipulating or misusing ME applications, etc.\n\nDoS/DDoS Attacks: As the UALCMP is the entity handling the life cycle of requests, while the OSS grants the approval for subscribers to use a particular MEC service. The attacks over them can be targeted at congesting the access interfaces between them and UE so that both of them have to be protected from DoS/DDoS attacks.\n\nManipulate and Misuse: Since all the ME application subscribers should be registered in OSS or UALCMP, the attackers could attempt to inject craftily constructed information to manipulate or misuse the functionality of these two. At the same time, malicious UE can inject fake information to impersonate legitimate entities to disrupt the everyday activities of MEO and MEPM. The malicious intrusions are improbable at MEO since MEO is deployed at the in-depth MEC system level that is difficult for attackers to reach. However, resource allocation and service manipulation attacks are highly possible such as DNS amplification and VM escape.\n\nTCP/IP Attacks: Separate physical hosts for the 5G core network and MEO are more prevalent [53], which introduce typical TCP/IP attacks such as eavesdropping, spoofing, DoS, replay, and reset attacks.\n\nSDN Threats\n\nIn the MEC environment, in order to reduce network management costs and improve the network scalability and flexibility, infrastructure providers have introduced SDN. SDN separates the network architecture into a three-tier architecture of application, control and data plane [54], controlling the network with software to achieve centralized management of the network and programmability of network applications. This convenient network management approach is not only convenient for operators but also for attackers. A capable attacker can preempt SDN applications or tamper with the flow tables in SDN controllers to chaos packets forwarding.\n\nApplications Plane Threats: Network functions are implemented as applications in this plane, and these applications are created by using the VI’s computing resources in the MEH. These applications aim to provide network services such as QoE, monitoring, load balancing and security, etc. These services host as one type of special MEC application in the MEH and exchange data with the SDN controllers through the north-bound interface. Thus, an authorized malicious application can invade other applications to control the network. This malicious threat can be caused by the open APIs of network equipment, the lack of mutual authentication mechanism between the application plane and the control plane, or the implementation of the wrong access control method for third-party applications[55].\n\nControl Plane Threats: The SDN control plane communicates with the application plane and the data plane through the north-bound interface and the south-bound interface respectively, and there can be multiple controllers in SDN. In ETSI MEC architecture, these controllers are as one of the support functions that deployed in the MEC platform [43]. The control plane adopts a centralized management architecture, which relies on programming to achieve overall control of SDN data plane devices. Thus, an attacker can directly send specifically crafted DDoS flows to overwhelm the resources of control plane [56] or IP packets with random header fields to disturb legitimate flow setup [57]. Also, it is incompetent to secure application authorization, resource usage and tracking while malicious applications in control plane [58].\n\nData Plane Threats: The main elements of the data plane are switches and routers. They are simple packets forwarding elements without embedded intelligence to take autonomous decisions. These data plane devices communicate with the controller through a standard OpenFlow interface, ensuring the compatibility and interoperability of configuration and communication among different devices. Since the packet forwarding of the data plane depends on the flow tables issued by the control plane, an attacker can control the forwarding of data packets by intercepting or tampering with the flow tables sent to the SDN switches [9]. In addition, three types of attacks may be used to compromise the data plane, including device attack, protocol attack, and side-channel attack [59]. Device attacks aim to exploit SDN software or hardware vulnerabilities to compromise the SDN data plane. Protocol attacks exploit network protocol loopholes in the forwarding equipment (e.g., as Border Gateway Protocol (BGP) attacks) to attack the data plane. Side-channel attacks infer the network’s forwarding strategy by analyzing the performance metrics of the forwarding equipment. For example, by analyzing the processing time of data packets, attackers can identify forwarding strategies [60].\n\nIII-A3 MEC Host Level Security\n\nIn the MEC paradigm, the MEH is the primary host-level functional entity that performs computational, storage, and networking operations. Furthermore, the User Plane Function (UPF) is a 5G access network entity included within the MEH for integrating the 5G core network into the LADN. Since the SDN security threats and the MEC IoT platform have been illustrated above, we will focus on the virtualization threats and NFV threats in this subsection.\n\nVM Threats\n\nVirtualization integrates physical resources into a resource pool providing various on-demand services, which decreases the high management complexity and operational expenses, and enhances the efficiency for usage and fine-grained control. However, novel security threats and vulnerabilities introduced in the following contents become one of the major concerns in the MEC environment.\n\nThe overall VM entities are actually composed of SDN applications, VNFs, IoT applications, and the MEC applications, which provide services for users or MEC architecture. The threats and vulnerabilities target to the VMs are as follows:\n\nInfected VM images: VM image, as a pre-packaged software file, contains the configuration templates used to initiate the VM instances on demand. The resource renters can either create their own VM images from an image software or downloading VM images stored in the third-party’s repository [54]. Thus, this gives the attacker the opportunity to upload VM images injected with malicious code such as a Trojan horse to the third-party repository, and the victim will be infected with the hidden malware after uploading such malicious VM images.\n\nCompromising VM migration: VM migration allows network operators to optionally initiate, terminate a VM, or move VMs from one physical machine to another. The migration of VM benefits the workload balancing and system management. Due to the dynamic nature of VM and the plaintext presented in migration data, an attacker can easily launch MitM attacks to sniff or tamper the traffic.\n\nVM hopping: The attacker gains access to a host with multiple VMs by renting or hacking a guest VM. From the persecuted guest VM, the attacker then compromises other guests’ VMs through privileged access to the host. The reason for this could be that the Memory Management Module (MMU) of the hypervisor allows attackers to perform illegal manipulation on the memory pages of other guest VMs based on the access rights they have obtained [10].\n\nVM escape: Any interaction between VM and hypervisor may become a potential attack vector [61]. VM escape refers to the program running in the virtual machine using the vulnerability of the VM to break through the Virtual Machine Monitor (VMM) or hypervisor. After that, the adversaries may obtain the host OSS management authority, control other virtual machines running on the host machine[62], and completely destroy the original security architecture.\n\nNFV Threats\n\nNFV, as one of the key emerging technologies for 5G networks, consolidates multiple network functions onto the software, running on a range of industry-standard hardware [10]. The infrastructure that hosts MEC and NFV is quite similar [2]. Thus, it will be beneficial to reuse the infrastructure and infrastructure management of MEC by hosting both Virtual Network Functions (VNFs) and MEC applications on the same platform. VNFs can be recognized as software that encapsulate network functions in a VM. Therefore, most NFV threats also are inherited from VM threats. NFV-specific security threats may from the NFV management and orchestration (NFV MANO). It is mainly responsible for the orchestration and management of virtual resources, the creation of virtual network functions, and NFV lifecycle management. ETSI has published an official document about NFV MANO to describe how the NFV and its interfaces work without specific details about interface design and implementation [10]. Thus, an adversary may exploit the insecure interface to obtain sensitive data or launch a Cross Site Scripting (XSS) or Cross Site Request Forgery (CSRF) attack by injecting a well-constructed script into the web surfaces provided by the management interface.\n\nIII-B Privacy Threats\n\nUser data in the MEC environment, such as user identity information, location information, and sensitive data, is typically stored and processed by an honest-but-curious authorized entity (e.g., edge data center and infrastructure provider), and the user has no way of knowing whether these semi-trusted authorized entities will secretly obtain the user’s private information to achieve the purpose of illegal profit. At the same time, in the open ecosystem of MEC, multiple trust domains are dominated by different infrastructure providers, and users cannot identify which service provider is trustworthy. Thus, MEC, with the complexity and real-time nature of the service mode, multi-source heterogeneous data, and resource-constrained end devices, has more delicacy privacy threats.\n\nIn this subsection, we will focus on three aspects of privacy concerns: data, location, and identity privacy.\n\nIII-B1 Data Privacy\n\nUsers outsource data to edge nodes (i.e., IoT devices or edge servers) with computing resources, which give edge nodes the opportunity to control over the data, introducing the same security risks as cloud computing. It is challenging to ensure the confidentiality and integrity of the data since the complicated communication link may cause data to be lost or maliciously modified. Additionally, through privilege escalation, unauthorized entities may exploit the uploaded data for their own gain. Compared to cloud servers, edge servers have partially circumvented the data security and privacy issues caused by the long-distance transmission of multi-hop routing. However, the applications that are dominated by different application vendors and the access networks that belong to different telecom operators have compelled MEC to introduce more severe data privacy issues, such as coexistence of multiple security domains and data in multiple formats.\n\nIII-B2 Location Privacy\n\nLBS refers to using a certain positioning technology (e.g., global positioning system, mobile phone positioning, and positioning through WiFi access points) to provide mobile users with personalization related to their current location service. However, these services frequently collect location data in the background without the user’s knowledge or consent. As a result, figuring out how to protect a user’s location privacy has become a pressing issue [63]. The leakage of location information can be divided into three major kinds of threats:\n\n•\n\nTracking Threat: The adversary may obtain continuous location updates, allowing him to pinpoint the user in real time. For example, in Vehicle Ad-hoc networks (VANET), an attacker can eavesdrop on the communication between vehicles to lock and track the target vehicle; the attacker can tamper with the traffic information in the network and publish false information on the network, which creates the illusion of road congestion for other vehicles and affects the route selection of other vehicles.\n\n•\n\nIdentification Threat: Even if the adversary only accesses the user’s location on a sporadic basis, he may be able to isolate the user’s frequently visited locations, such as home and work. The adversary can use these locations as pseudo-identifiers to deduce the user’s identity from anonymous location traces [64].\n\n•\n\nProfiling Threat: The mobility track of the user may not include places that reveal his identity but can be used to profile him by the adversary. Some Location Service Providers (LSPs) collect and analyze the location attributes in the user’s request to infer the user’s personal information, behavioral preferences, and physical condition [65]. For instance, if a user sends a location request that frequently includes a specific hospital location, the LSP can infer the user’s physical condition, and the user’s home address can be inferred based on the user’s resident location at night.\n\nIII-B3 Identity Privacy\n\nPersonal Identifiable Information (PII), also known as user identity, is the information about a person that has been collected, assessed, or used on demand by edge or cloud services [65]. Compared with the cloud computing data center located in the core network, edge nodes are located at the edge of the network, enabling the collection of more high-value sensitive information of users, such as location information, lifestyle habits, social relationships, and even health status, etc. A considerable privacy crisis will occur while an attacker can map each private data to the corresponding user. For instance, in early 2018, the Facebook data scandal resulted in the disclosure of 50 million users’ PII to a third-party company, Cambridge Analytica, via service providers for \"analysis\" purposes.\n\nIV Review of Artificial Intelligence Approaches on MEC Security and Privacy\n\nIn this section, we make a comprehensive review of the MEC security and privacy from the perspective of AI. Firstly, we introduce the classification of ML approaches and summarize advantages, disadvantages as well as applications of the typical approaches. Then, considering the entire AI categories, we present some other applications of non-ML approaches. The summary of the AI-based methods and their corresponding advantages and disadvantages are introduced in Table I.\n\nIV-A Classification of Machine learning Methods in MEC Security and Privacy\n\nDiscussions and researches around AI have focused on the field of ML in recent years [108]. We divide ML approaches into four categories: supervised learning, unsupervised learning, semi-supervised learning and reinforcement learning. In this subsection, the characteristics of these four categories, classic algorithms and their applications in MEC are discussed in detail.\n\nIV-A1 Supervised Learning\n\nSupervised learning has attracted more and more attention in the field of the security and privacy protection of MEC due to its outstanding performance in prediction and classification. Generally, utilizing the labeled data as the input of supervised learning, the model can predict the label of test data through learning from the distribution of labels. We discuss the classic algorithms of supervised learning and their applications in the protection of security and privacy of MEC in the following.\n\nk-Nearest Neighbor (kNN)\n\nBased on the unsurpassed performance on classification tasks, kNN has been widely used in network malicious intrusion detection [66, 67, 68]. As to the MEC privacy, computational-hungry algorithms are not suitable for the practical applications with massive data and computation load. Therefore, a lightweight edge-based kNN (EBkNN) model was proposed to protect users’ security and privacy in [69]. However, the transferability of kNN is poor. A trained model often needs to be retrained to determine the optimal k𝑘kitalic_k value when the dataset changes, which will increase the resource consumption of the light-weighted edge devices.\n\nSupport Vector Machines (SVMs)\n\nDue to the advantages of SVMs in solving linear and non-linear data classification problems, they have been widely used in abnormal intrusion detection in the MEC environment. The research [71] chose the SVM algorithm to detect cloning attacks and Sybil attacks in industrial edge networks. For the actual data without labels, this work adopted the threshold detection method to generate labels for training, so that the model obtained improved detection accuracy. Nevertheless, for the scenarios with complex data distribution, the optimal kernel function is hard to acquire in SVM, which may decrease the performance of Intrusion Detection System (IDS) [97], and this disadvantage will be further amplified in the data-heavy MEC environment.\n\nLogistic Regression (LR)\n\nLR has been widely used in protecting the security and privacy of MEC. In response to the vulnerability in Physical unclonable function (PUF), [75] proved that PUF can be cloned without prior knowledge of its structure. Based on ML, this work proposed a non-invasive attack method against the PUF of edge nodes and the corresponding defence strategy, which adopted LR, RF, artificial neural network (ANN) and merged algorithms, respectively. The attack effectively cloned the PUF in MEC and the countermeasure greatly improved the accuracy of recognizing authentic and cloned PUF. However, LR is with the drawback of falling into the dilemma of overfitting that limits the accuracy, and has poor performance with missing data and large feature in MEC environments.\n\nDecision Trees (DTs)\n\nFor the data with high-dimensional features in MEC, DTs can reduce the number of features in the internal nodes while ensuring a certain performance in inferring. Based on this, the DTs-based algorithm has been widely used in the network intrusion detection [109]. In the edge-cloud computing (ECC) scenario, a private random DT framework based on differential privacy (DP) was used to analyze the impact of different applications on privacy, so as to better coordinate the overall system to ensure the data privacy [77]. Whereas, DTs are sensitive to the noise data and ignore the relationship among different attributions in the dataset, and these disadvantages affect the performance of preserving security and privacy seriously.\n\nRandom Forests (RFs)\n\nRFs have been widely used in the IoT system for intrusion detection [79, 80, 81] and anomaly detection [82, 83, 84]. Especially in the detection of DDoS attacks, a mass of previous work has analyzed the performance of RFs [82, 110]. A research [111] proposed an automatic anomaly detection system based on RFs; the proposed system effectively detected anomalies in distributed edge devices. The disadvantage of RFs is that it is prone to overfitting on datasets with large noise.\n\nConvolutional Neural Network (CNN)\n\nAs one of the most classic DL models, CNN has been fully employed in protecting the MEC security and privacy [112]. Using the CNN model, Tian et al. [85] proposed a web server attack detection system based on a distributed framework. The Uniform Resource Locator (URL) in the IoT-cloud environment was analyzed and a high detection rate was obtained. However, the problem of CNN is that the amount of calculation under the application of high-dimensional data is huge, and it is difficult to guarantee sufficient computing resources in some resource-constrained MEC environments. Some current neural network scale compression technologies and partition training technologies [113, 114] provide support for the deployment of lightweight CNN on mobile terminals.\n\nRecurrent Neural Network (RNN)\n\nAnother classic DL model called RNN, which is aimed at sequence type data, has also been fully used in the malware detection in the IoT network [88, 115, 116, 117]. Conventional RNN models use the back-propagation training time (BPTT) to extract sequence data, but it will cause gradient explosion in the training process with long-time sequence data. Previous work [118] applied LSTM to the cloud-edge scenario to achieve distributed network attack detection. In the experiment, the performance of the proposed model was compared with LR, which proved that the utilization of LSTM can fully extract the correlation information from the long-term continuous network state data. However, the RNN model generally has the disadvantage of gradient explosion, which will limit its performance in long-term sequence training.\n\nIV-A2 Unsupervised Learning\n\nUnsupervised learning is a ML method for unlabeled datasets, which clusters different classes by learning their associations [119]. In addition, unsupervised learning can mine the structure information in depth, which may be hidden by labels in supervised learning [120]. Thus, the unsupervised learning algorithm has obvious advantages in the classification task in MEC security and privacy with a large number of unlabeled data. For example, the next-gen cloud security company, Bitglass, exploits unsupervised learning approaches to provide Advanced Threat Protection (ATP) services for detection both known and zero-day threats on cloud applications [121]. The emblematic unsupervised learning methods in MEC security and privacy are listed as follows:\n\nK-Means\n\nBased on the excellent performance of K-Means in feature clustering on unlabeled data, it has been applied to the field attack detection and privacy protection in MEC. In order to solve the complex link attack problem caused by the open and multi-source characteristic in the MEC environment, Li et al. [89] proposed a link decision scheme based on attribute attack graphs, which used K-Means to de-redundate complex network alarm information to construct the attribute attack graphs, and utilized the greedy algorithm to make decisions on the link defense by the solution of the minimum dominating set of the attribute attack graph. However, K-Means is sensitive to the abnormal data, and the progress of K-Means clustering mainly depends on the value of K𝐾Kitalic_K, which is usually set manually. And these disadvantages cause the weak robustness of K-Means-based methods.\n\nPrincipal Component Analysis (PCA)\n\nDue to the effective feature extraction and dimension reduction capacity for large datasets, PCA fits the MEC environment well. The previous work [92] proposed a multi-attack detection model with low complexity in the cloud-edge environment. The computationally efficient and low-cost PCA was selected as the feature extractor, and the deep neural network (DNN) was used as the classifier. In the experiment, the model was used to detect 10 types of attacks with higher accuracy rate than other ML methods. Nevertheless, PCA ignores the influence of non-principal components, which may play a crucial role in inferring. Discarding them directly will decrease the classification accuracy. And PCA is effective for feature extraction, while requires to be combined with other AI-based methods to fully finish the inference task.\n\nRestricted Boltzmann Machine (RBM)\n\nRBM is a deep generative neural network based on unsupervised learning, which is a variant of the Boltzmann machine, and has been adopted in MEC security protections. In terms of malicious detection classifiers, the adopted features are the key factor affecting its accuracy. Benchea et al. [94] used RBM to improve the feature generation, and generated new features in a non-linear manner to train the classifier and improve its performance. However, the drawback of RBM is also obvious. The training of RBM takes a mass of computation cost, and it is still a challenge to deploy the model on-board in the resource-limited edge sever.\n\nDeep Belief Networks (DBNs)\n\nDBNs are widely employed in the intrusion detection in IoT networks due to the efficient performance with a mass of unlabeled data [122, 73, 16, 95]. In order to realize the attack detection in the edge transmission network, an unsupervised-based model based on DBNs was proposed in [8]. In this work, the Android data package files in edge devices were utilized to extract the permissions information, sensitive program APIs and dynamic information as features, which were adopted by DBNs for attack detection. Unfortunately, the disadvantages of DBNs are manifested in their high computational cost and slow convergence rate, which limit the performance of DBNs in MEC security and privacy-preserving.\n\nDeep Autoencoder (AE)\n\nDeep AE is widely used in IDS for the MEC environment due to its feature extraction capabilities [97], and the process of feature extraction-reconstruction also provides privacy protection for user information in the original data. The previous work [96] utilized Deep AE to realize anomaly detection based on the characteristics of MEC. The model was trained in a distributed manner on multiple edge severs. The abnormal data from each edge sever was aggregated to update the model on the central server, and then the updated model was sent to each edge sever to reduce the load on the central server. While in terms of malicious detection, it requires a large amount of benign data for training an AE model, which is unrealistic in practice.\n\nIV-A3 Semi-supervised ML Learning\n\nSemi-supervised learning is a technology that falls between supervised learning and unsupervised learning [123]. It can solve the inability to construct a reliable supervised classifier caused by scarce labeled data. Thus, the semi-supervised learning method is well-suited to the MEC scenario, in which a large amount of raw data is generated at any time and in any location but is incapable of being used efficiently. This inherent advantage makes it easier for Semi-supervised learning algorithms to address security and privacy concerns in MEC.\n\nSemi-supervised Support Vector Machine (S3⁢V⁢Msuperscript𝑆3𝑉𝑀S^{3}VMitalic_S start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT italic_V italic_M)\n\nThe discovery of the distributed S3⁢V⁢Msuperscript𝑆3𝑉𝑀S^{3}VMitalic_S start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT italic_V italic_M architecture [98] enables it to solve the security problems in the MEC environment which owns tremendous unlabeled raw data and a small amount of labeled data. Wang et al. [98] proposed a hybrid approach including S3⁢V⁢Msuperscript𝑆3𝑉𝑀S^{3}VMitalic_S start_POSTSUPERSCRIPT 3 end_POSTSUPERSCRIPT italic_V italic_M-based appliance pattern matching classifier and the hidden Markov model (HMM)-based energy consumption habit classifier to defend against anomaly intrusion.\n\nOther Non-DL Semi-supervised Approaches\n\nMEC has a number of characteristics, including real-time processing, low computation costs, and a distributed architecture. Some of the above characteristics are already present in security and privacy-preserving methods based on semi-supervised learning. In [124], an ELM-based Semi-supervised Fuzzy C-Means (ESFCM) attack detection framework was proposed to secure the IoT system. At the same time, an optimized, low-cost semi-supervised IDS model which combines an Active learning Support Vector Machine (ASVM) and Fuzzy C-Means (FCM) clustering was proposed in [72]. To defend Sybil attacks that appeared in distributed environments, recently, Gong et al. [125] designed a Markov random fields-based, noisy-tolerated and scalable semi-supervised learning approach. The above security defense mechanisms are more or less satisfying the conditions for deployment in the MEC environment. Despite the fact that researchers dislike the current semi-supervised learning method, it cannot be ruled out that it has the potential to become a new mainstream solution to the security and privacy issues in the MEC environment.\n\nGenerative Adversarial Networks (GANs)\n\nGANs have been recently implemented in MEC security and privacy. In [99], a supply chain risk management architecture that mixes machine learning, cryptographic hardware monitoring, and distributed system coordination techniques was proposed to detect normal and abnormal system behaviors in IoT systems. GANs can learn the distribution of attack samples from existing attacks in MEC, thereby generating zero-attack samples that do not exist in the set of known attack samples. Even for degenerate distributions, GANs can generate sharp samples without Markov chains requirement. As a DL-based semi-supervised approach, GANs are suitable for training classifiers with limited ground-truth datasets. Hence, GAN is a promising method for developing security and privacy applications in the MEC environment. The latest paper about compressed CGANs models [126] made it feasible to deploy GANs in the MEC environment.\n\nHowever, the disadvantages of GANs are also obvious, such as \"the Helvetica scenario\" and the instability and difficulty of the training process. We must avoid these drawbacks in order to maximize the benefits of GANs and use them to protect the security and privacy of MEC.\n\nOther DL-based Semi-supervised Approaches\n\nDNN can fit various nonlinear functions appropriately, so it has outstanding contributions in the fields of pattern recognition, data analysis, and control. simultaneously, semi-supervised learning can be well adapted to a small number of labeled data together with a massive number of unlabeled data. Semi-supervised learning combined with the DNN method began to be widely concerned by researchers in order to make good use of the advantage of these two approaches. Although semi-supervised DL sounds like an effective solution to deal with a large amount of unlabeled data in the MEC environment, the detection accuracy is hard to exceed supervised DL. Therefore, only a small amount of work now uses semi-supervised DL in terms of MEC security and privacy. For example, authors in [127] proposed a semi-supervised DL approach for intrusion detection in IoT networks, which combines multi-scale residual temporal convolutional (MS-Res) module to finetune the network capability and traffic attention mechanism to help the model to concentrate on important information in the learning process.\n\nIV-A4 Reinforcement Learning (RL)\n\nResearchers have extensively studied popular topics in communication fields such as data caching and offloading in the MEC environment. In recent years, a large number of papers are using DRL algorithms to solve these problems [128, 129, 104, 130]. Previous studies (e.g., Integer programming and game-theory methods) only consider one-shot optimization [131]. However, the process of caching or offloading tasks in the MEC environment is a continuous process. Fortunately, RL provides a promising approach to maximize long-term rewards. At the same time, security and privacy issues have become the bottleneck of mobile caching/offloading, as edge server is always deployed close to users, making attackers also easier to reach the vulnerable position of MEC. Therefore, Xiao et al. [103] formally defined a repeated game between MEC systems and attackers and build the RL-based security solutions to defend against jamming and smart attacks in mobile offloading/caching.\n\nHowever, the RL agent sampling data from the environment is a very inefficient process, and designing an appropriate reward function for unknown environments is challenging. Even if we successfully overcome the aforementioned difficulties, the local optimal is still hard to escape [132].\n\nIV-B The Other Artificial Intelligence Approaches\n\nIn addition to the previously introduced ML methods, some other non-ML methods (in AI categories, but not in ML categories) have also been applied in MEC security and privacy-preserving.\n\nIV-B1 Bayesian Networks in MEC Security and Privacy\n\nBayesian networks, also named belief networks, are a kind of directed acyclic AI graph model, which are widely used in classification tasks [133]. To intuitively reflect the relationship between various vulnerabilities, the attack graph in the network can be modelled in IoT networks. Based on the attack graph, some previous works [134, 135] proposed to adopt Bayesian network model to find the correlation between vulnerabilities and network status, thereby providing security measurement for the network. However, the structure characteristic brings Bayesian networks with high computational complexity, which increases the burden of resource-limited edge severs.\n\nIV-B2 Evolutionary Algorithms in MEC Security and Privacy\n\nEvolutionary algorithms are also an important subset of AI, including genetic algorithm (GA), evolution strategy, neuro-evolution and so on. In the MEC network, the dependency graph that is used to characterize the dependencies between objects can be employed to represent the relationship between different malware. Based on this, Kim et al. [107] proposed a malware detection model by GA, which turned the problem into searching the largest sub-graph isomorphism problem in the dependency graph. Meanwhile, the complexity of the proposed model was greatly decreased by reducing the size of the dependency graph. Nevertheless, the disadvantages of evolutionary algorithms are also obvious. The manual programming is complex which makes the evolutionary algorithms are not suitable in the large dataset.\n\nV AI Approaches for Layer Based MEC Security\n\nIn this section, we provide a hierarchical introduction to technologies involving AI approaches for protecting the MEC security. Further, we provide a layer-based security solutions in Table II.\n\nV-A IoT Systems Security\n\nV-A1 Perception Layer Security\n\nSome attackers try to manipulate the device authentication or jam the radio frequency environment in the data collection progress to launch DoS attacks. Lightweight cryptography is widely used in IoT-enabled devices for authentication [144, 145, 146]. However, time-varying features in the network limit the performance of such traditional authentication algorithms in large-scale IoT systems. To alleviate these burdens, some researches based on AI methods have been proposed to address these security threats, which are introduced in the following.\n\nIoT Devices Level\n\nPhysical layer authentication (PLA) ensures that the connected device is not malicious. In PLA, physical layer features such as received signal strength (RSS), channel impulse response (CIR), and channel state information (CSI) are adopted to detect spoof attacks [14, 71]. Aiming at the MEC environment, Chen et al. [136] proposed a PLA framework that combined clustering and traditional lightweight symmetric cryptography. Based on the advantages of unsupervised clustering approaches in the data without prior knowledge, this framework extracted and clustered CSI features, and then used the symmetric cryptography to achieve authentication of IoT devices. The proposed model significantly improved the authentication rate of the system with a low-complexity structure, and effectively combated spoofing attacks, replay attacks and small integer attacks.\n\nHowever, the traditional ML-based methods require to be trained with a mass of samples, which occupies plentiful computationally resources and increases the time consumption. In response to this, Liao et al. [137] employed the data augmentation algorithm to accelerate the authentication process, and combined with DNN to enhance the accuracy of PLA and the model training efficiency. In the experiment, the author illustrated the proposed model attained a lightweight authentication with higher accuracy compared with the traditional threshold-based PLA method.\n\nRaw Data Collection Level\n\nThe raw data collected by sensors in MEC is usually transmitted through the cognitive radio network (CRN). Some attackers transmit false signals in the CRN to expend network bandwidth, which causes the received IoT devices to consume a mass of public resources. Taking the advantage of RL in game-based problems, [102] proposed an anti-jamming model based on multi-agent RL. Multiple CRNs were allowed to transmit signals on the same frequency band, so each CRN was required to discriminate jamming signals and other normal CRN signals. Q-learning was used to generate the jamming-free sub-band frequency strategy, which was with lower complexity and achieved better performance in anti-jamming.\n\nV-A2 Network Layer Security\n\nNumerous communication protocols in the network layer can provide and manage the connectivity between sensors and edge servers. However, the open communication protocol makes it effortless for attackers to seek out the vulnerability during communication.\n\nData Transmission Level\n\nAn effective solution to anomalies in data transmission is to build an IDS to automatically detect various attacks during communications. In a previous study [15], PCA was used to reduce the dimension of the original data and represent it as new data with the minimum attribute through the principle component load matrix, and the improved NB classifier was utilized to classify network attacks. Another work [147] applied the replacement missing value filter to the feature extraction and utilized the RF classifier to classify attacks with network traffic data. Whereas, the index of classification accuracy alone is not enough to objectively evaluate the performance of the IDS classifier. It needs to be combined with indexes such as precision, recall rate, and false detection rate to make a comprehensive measurement [82, 15, 147].\n\nDoS attacks are the most common type of intrusion in the network layer. In response to this, a previous research [74] adopted LR-based classifiers to detect DDoS attacks and MitM attacks. This work utilized smartphones as edge servers in IoT networks for training. Using the power consumption ratio information of attacking devices and non-attacking devices to predict intrusion, the proposed model achieved a relatively ideal accuracy rate. Another study [76] proposed an intelligent anomaly detection architecture based on GA and the DT classifier. The architecture detected illegal links based on the IP packet header information.\n\nOffloading and Caching Level\n\nEnsuring the safety of the offloading and caching process is an important task for maintaining the network layer security. A previous research [103] extended RL to the MEC environment to protect the security of edge caching. In response to attacks in the mobile edge cache, mobile devices adopted RL to make the optimal decision from a limited set of actions to protect the offloading process from interference or perform device authentication. This work proposed a security framework for MEC offloading with RL-based methods, which has enlightening significance for protecting the security of edge offloading and caching.\n\nV-A3 Application Layer Security\n\nThe application layer directly provides users with intelligent services. However, the inherent vulnerabilities in the operating system (OS) of smart device pose security threats to the application. In a previous research [122], an Android malware intelligent detection system named DroidDelver based on the DBN model was introduced. In this work, API calls were extracted from the smali code, and different API csalls were categorized into blocks according to their functions. Based on the generated API call blocks, DBN learned the relationship between benign software and malware to detect malware in the system with improved accuracy. Xu et al. [73] proposed a hybrid analysis malware detection system of Android, which extracted features through DBN and combined them with original features to construct a vector set for classification. SVM was utilized as a classifier, and the kernel matrix constructed by the similarity between features was applied for classifying the benign software and malicious applications.\n\nV-B MEC System Level Security\n\nMEC system level provides UE and CFS Portal with available edge sever services. In this subsection, we summarize the AI-based approaches in MEC system level in the following two aspects:\n\nV-B1 End-edge Level\n\nThe collaboration working mode of mobile ends and edge servers provides an efficient solution for intrusion detection in UEs and access networks. In a previous work [138], the Deep AE model was used for anomaly detection in the industrial IoT network in an end-edge collaborative mode. This work applied a CNN-variational AE model to extract features from the time series state information of sensors and perform anomaly detection. What’s more, the memory and computing consumption deployed on the edge sever were reduced by compressing the neural network size. In another research [97], an IDS architecture based on the Deep AE was applied to detect abnormal traffic from sensors to edge servers. In order to improve the accuracy of classification, the model utilized isolation forest to further classify the output of the Deep AE model to find the points of classification errors. This optimized detection architecture based has an enlightening effect on reducing the false alarm rate.\n\nThe access network between the edge sever and the mobile end is also with potential vulnerabilities to several attacks. Based on previous works, Chen et al. [8] proposed a network attack detection system based on DBN in MEC. The dynamic features were extracted by exploiting the Android file package in the edge server and used for the model training. The loss function was established according to the difference between inputs and the actual outputs, and the loss was reduced by using the BP algorithm to fine-tune the parameters of the neural network.\n\nMoreover, a mass of high-dimensional and multi-source alarm information is gathered in the edge server [89], which is a huge challenge for the processing and storage capabilities of the server. Li et al. [89] proposed an attack detection method based on the end-edge framework. The alarm information of the edge equipment was de-redundant through the K-Means method. The authors established attribute attack graphs through the correlation between the alarm information to comprehensively analyzed to the potential vulnerabilities of all edge nodes. A greedy decision-making algorithm was utilized to solve the problem of the minimum dominance set in the attribute attack graph to replace the generation of the complex attack linkage strategy. Given these points, this work provides ideas for the feature extraction of high-dimensional and multi-source alarm information in the end-edge level and the consideration of complex attack relevance.\n\nV-B2 SDN Level\n\nThe separation of data plane and control plane in SDN also brings various security threats. In a previous study [139], an IDS in SDN based on the combination of K-Means and an improved RF classifier was proposed. The bat algorithm was used for feature selection, where the position of bat was set as the selected feature subset, the iteration of position movement and target search were summarized as the feature selection process, and the fitness function was adopted to evaluate the feature selection process. After the selected features were clustered by K-Means, the flows were classified by using the RF algorithm based on the weighted voting mechanism. The proposed model achieved satisfactory classification accuracy due to the advanced feature selection method while reducing the training cost. In [140], authors applied DNN to build an abnormal flow detection system in SDN, which was deployed in the control plane. It monitored the data of all OpenFlow switches and utilized the global network status to detect intrusions. The flow table was modified to propagate the security policy to the switch when detecting intrusions. The DNN model of this system was trained through information such as protocol, duration, and flow bytes as features and achieved improved classification accuracy.\n\nKirutika et al. [141] proposed an external monitor based on the RF algorithm for possible attacks in the SDN control plane. The number of incoming/outgoing data packets and lost packets, duration and other network state information were utilized as features to train the RF classifier. The external monitor detected the malicious data and interrupted the controller timely. Consequently, this work ensured the security of SDN from the control plane to prevent the entire SDN system from being corroded by attackers.\n\nV-C MEC Host Level Security\n\nMEC host level is mainly responsible for managing various functions of the host, as well as the collaboration with other hosts and the cloud. We introduce the AI-related works in the MEC host level from the above aspects in the following:\n\nV-C1 Edge-host Level\n\nThe edge host security directly affects the robustness of the overall MEC architecture. Khalid et al. [18] proposed a hardware Trojan detection framework in edge hosts by multi-layer perceptrons (MLP). The single power-port current acquisition block was designed in the time-division multiplexed current sensor to reduce the cost of data acquisition. Through the analysis of hardware Trojan benchmarks at the register transfer level in the system-on-chip (SoC), four LEON3 processors from other infrastructure providers were integrated to provide the solution. The proposed model greatly improved the detection accuracy of hardware Trojan compared with the existing methods, and reduced the power consumption on per unit area of the chip. In [100], a GAN-based self-adversarial agent model was proposed to improve the hardware security of edge hosts. The agent utilized vanilla GAN and conditional GAN respectively to attack edge hosts, and the public PUF was used to evaluate the quality of the attack by generating realistic secret keys. The agent reconstructed its underlying security primitives into the public PUF through feedback to improve the security entropy of the system when the attack quality exceeds the setting threshold.\n\nV-C2 Edge-edge Level\n\nThe secure collaboration mode between edge hosts is crucial for MEC host level. In a research [118], LSTM was utilized to detect cyber attacks in the sensors network through the Fog-to-Things architecture. The entire architecture assigned attack detection tasks to edge hosts, then cyber attacks in the cover area were detected through the coordination of parameter update, storage and control between each edge host. In each edge host, the sequential Stochastic Gradient Descent (SGD) algorithm was adopted to calculate local parameters of the LSTM. And the coordination host was responsible for aggregating local parameters from all edge hosts, then updating and returning the global parameters back for updating the local model.\n\nPan et al. [142] proposed a gradient aggregation agent (GAA) model suitable for the MEC environment against Byzantine attacks, using RL to protect the robustness of the distributed learning framework. The proposed GAA model learned the experience from the interaction among workers and the auxiliary information in the master, and decided the contribution weight of its generated parameters to the overall parameters according to the credit of the worker. For different aggressive environments, the robustness of the GAA model proved its performance in MEC multi-edge collaborative level.\n\nV-C3 Edge-cloud Level\n\nThe edge-cloud collaboration mode solves the problem of insufficient edge device resources. In [143], ELM was employed to detect attacks in IoT networks. Features about duration, IP, source and destination port numbers were converted into random multi-dimensional space vectors. However, plenty of features occupied the memory and the model training process generated huge energy consumption in the edge sever. To achieve an efficient detection architecture, edge devices were used to randomly project raw data to generate private data and upload the data to the cloud with sufficient resources for model training.\n\nRan et al. [86] proposed a CNN-based edge-cloud collaborative attack recognition architecture. The initial datasets of multiple edge hosts were set to the same. Then edge hosts were responsible for the raw data preprocessing and feature selection, and utilized the trained CNN locally for attack detection. The edge host with the highest detection rate uploaded its own data to the cloud in a fixed period of time, and the cloud was in charge of updating the dataset and retraining the CNN and sending the improved model to each edge host. This edge-cloud collaborative learning mode improves the detection accuracy and the robustness of the system. In addition, in order to release the workload of the cloud, AI algorithms (such as PCA [92] and Deep AE [97]) can be deployed in edge hosts to pre-learn data, and perform secondary learning through the cloud to fully improve performance.\n\nV-C4 NFV level\n\nNFV provides resource virtualization services for edge hosts. Guizani et al. [115] proposed an anti-malware system based on NFV, which used RNN to predict malicious software so that NFV can deploy relevant resources in a timely manner to resist attacks. The raw data collected by the sensor was preprocessed and evaluated in terms of available functions, and feature reduction and data cleaning were employed to filter valuable features. Then the system applied the RNN-LSTM model to learn the preprocessed data, and utilized NFV to virtualize the patch distribution mechanism.\n\nVI AI Approaches for Layer Based MEC privacy\n\nTraditional IoT network privacy protection methods are implemented through cryptography or steganography [155, 156, 157, 158], while advanced AI technology gives more possibilities for privacy-preserving. In this section, we give a hierarchical introduction to AI-based works related to the privacy in the MEC environment. Related works are summarized in the same hierarchical manner as Section V and listed in Table III.\n\nVI-A IoT Systems Privacy\n\nVI-A1 Perception Layer Privacy\n\nIn the raw data collected by sensors, the location privacy is of great importance. Han et al. [90] proposed a location privacy-preserving framework based on K-Means in the IoT network. Fake source nodes were established to transmit packets from real source node, so as to make the attacker confused about the real location of the source node. And fake sink nodes were utilized to conceal the real route through generating fake packets and transmitting them in different directions. In this work, the public and private keys were applied in each node for authentication, and only the real packet was able to be transmitted to the real sink node through the specific route.\n\nAs the subject of the perception layer, the privacy protection of the sensor is also of the essence. In a previous research [148], a lightweight privacy-preserving framework of the mobile sensor was proposed based on CNN. In order to reduce the computing overhead, storage and communication costs on mobile terminals, this work transferred data processing tasks from the cloud to the edge server. The CNN model was publicly available to each edge server for feature extraction. The sensor randomly divided the collected image data into two parts for encrypting, which can be restored by superimposing them together. The two encrypted divided parts were respectively used for feature extraction and learning of two edge servers, and the interaction of the two edge servers was controlled by a trusted third party.\n\nVI-A2 Network Layer Privacy\n\nIn this subsection, we introduce the AI-enabled methods of privacy preserving from the following aspects:\n\nOffloading Level\n\nML-based inference tasks on mobile devices are often offloaded to the nearby edge server instead of the cloud sever, which greatly reduces the communication pressure and computational burden. In [69], kNN was used to construct a lightweight encrypted cloud database architecture with edge offloading. In this work, data owners uploaded data to the cloud server, data users sent query requests to the cloud, and the cloud utilized kNN for classifying. Pailier encryption system was employed to encrypt data and labels to provide database security, query privacy, and data access mode hiding. In another work, Tian et al. [87] proposed a lightweight scheme to protect the privacy of the CNN-based inference task in the offloading process. Multiple pairs of encryption and decryption keys were generated and stored in the IoT device in an offline form, and each pair corresponded to a CNN inference task request. In the inference phase, the IoT device offloaded the CNN training task to the nearby edge server online, and the CNN model provided data integrity checks to ensure the correctness of the data.\n\nCaching Level\n\nEdge caching provides additional resources for mobile devices to relieve storage pressure. Yu et al. [149] proposed a proactive content caching method based on Federated Learning (FL), which performed training with no require of the centralized collection user data. The method used a centralized server to aggregate parameters of distributed edge servers for updating, and each edge server utilized Deep AE for local training. In the absence of user data, the performance of this model was still better than other methods, and it played a vital role in protecting user privacy. In [91], a privacy-preserving method based on K-Means was used in the caching process of the next generation cellular network. Through FL system, a distributed architecture was adopted to upload user data instead of encrypted user data to the cloud server for training based on the SGD method, so that avoiding data leakage caused by directly uploading data.\n\nVI-A3 Application Layer Privacy\n\nBlockchain is a well-known shared database in application layer. Due to the data in blockchain cannot be tampered, it can be applied for the privacy-preserving of user information. Zhao et al. [150] proposed a CNN-based FL system combined with blockchain to provide a user data privacy protection model for home appliance manufacturers. Firstly, the user’s smart phone collected data from home appliances, and conducted local-level training of the model in a collaborative manner with the edge server. Then users signed the trained model and uploaded the model to the blockchain to protect it from tampering. In addition, the manufacturer used the DP technology to calculate an average model for the models collected from users and preserve their privacy.\n\nIn addition, video streaming and analytics (VSM) is also a popular application in IoT system. In order to protect the user privacy contained in the required data in the VSA, Wu et al. [151] proposed an enhanced privacy protection system. Using the steganography of the GAN model at the front end, the system was able to reverse the privacy-enhanced video without changing the back end without auxiliary data. In addition, by combining with system optimization technology, the system fully reduced the network bandwidth and realized efficient real-time processing on the hardware.\n\nVI-B MEC System Level Privacy\n\nAiming at protecting edge servers from privacy damage caused by malicious users’ poisoning attacks, Zhao et al. [152] proposed a privacy-preserving model based on a feature learning model named Skip-gram. In the edge server, the social relationship between different users was extracted and an inferred social graph was established. The model predicted the location of the poisoning through the best map between the social graph and the social graph. In other work, Mao et al. [153] proposed a privacy-preserving model of DNN facial recognition based on DP mechanism. In order to reduce training costs, the DNN model was partitioned from the convolutional layer, where the first part was deployed on the user side and the second part was arranged on the edge server side. The output of the user-side model was input to the edge server, and the calculated loss information was fed back to the user-side to update the gradient.\n\nMoreover, in a previous research [78], a combined approach based on DTs and kNN was used to identity the user’s position, and the hidden Markov model was applied to estimate the user’s destination and location tracking sequence. This approach was implemented in the MEC environment to ensure the timeliness and confidentiality of the delivery of LBS and provide privacy-preserving LBS for roaming users. G-Means clustering method was adopted to extract effective location features from the redundant information of the device, and DTs and kNN were merged to solve the position tracking sequence ordering problem. Then the edge sever utilized excessive locations to predict the location through hidden Markov models.\n\nVI-C MEC Host Level Privacy\n\nIn MEC host level, related privacy-preserving researches focus on the realization of two collaborative levels, edge-edge and edge-cloud.\n\nVI-C1 Edge-edge Level\n\nLu et al. [154] proposed a joint learning mechanism based on FL to provide privacy protection support for joint work scenarios of multiple edge servers. Edge servers were used to train the ML-based model, and the parameter server was responsible for collecting parameters of all edge servers and updating global parameters. In this work, the parameter privacy of the entire model was protected because the edge server only communicated with the parameter server and had no authority to obtain the information from other edge servers. Meanwhile, in order to improve the training efficiency of the model, a gradient sparsification method was adopted to compress the interaction between edge servers and the parameter server so as to reduce the communication consumption and obtain effective compression space at a tiny cost of accuracy.\n\nVI-C2 Edge-cloud Level\n\nThe edge-cloud hybrid architecture is an efficient privacy-preserving framework. In a research [77], a privacy-preserving mechanism in the edge-cloud environment based on DTs was proposed. On account of the DP algorithm, the edge server as the collector of the adversary dataset was required to not distinguish the difference from the normal dataset. In this mechanism, the cloud server was used to build a private random DTs model, and the edge server was responsible for collecting data and adding it to the random DTs.\n\nIn another work, Osia et al. [93] proposed an edge-cloud hybrid privacy-preserving framework that used edge server resources to reduce the cloud processing latency and improve the processing performance. The framework consisted of two modules. The privacy edge module was responsible for extracting features from the original image data, and the cloud server module was in charge of inferring and feeding back to users. In the privacy edge module, a Siamese privacy framework was adopted, and the PCA model was employed to reduce the dimension of the data to extract features and ensure the accuracy of feature extraction through fine-tuning. In the cloud server, the CNN model was utilized to perform inference based on the extracted low-dimensional features, and the use of low-dimensional features instead of the raw user data to transfer to the cloud also ensured the secure user data privacy.\n\nVII Lessons Learned, Future Works and Challenges\n\nIn this section, according to the security and privacy concerns and related AI-based solution, we summarize specific research problems and propose promising future directions to give our insights to future researchers.\n\nVII-A AI Methods for MEC Security\n\nThe integration of various complex heterogeneous technologies in MEC makes it face multitudinous threats. Additionally, although powerful AI methods can provide efficient classifiers and feature extraction tools for MEC security protection, the deployment of these methods in the MEC environment is also extremely challenging. In this subsection, we summarize the existing research issues and future directions in using AI methods to solve various security threats in MEC.\n\nVII-A1 IoT Systems Security\n\nThe heavily deployed IoT networks provide MEC with a wide range of interconnection and low-latency applications, while also brings the following challenges: (1) attackers can steal sensitive information from IoT devices in collecting raw data through side channel attacks, or directly perform physical attacks to disrupt the normal operation of IoT devices, and the extensively applied gateway devices also increase the risk of TCP/IP attacks; (2) for the reason that the application layer of IoT directly provides users with related services, it is also indispensable to perform effective malware detection in IoT networks.\n\nA General IDS Architecture for Enhancing Trust Based Approaches in Ad-hoc Networks\n\nResearch Problems: Existing IDS for the security of wired networks could be used in wireless contexts. However, the intrinsic characteristics of MANET may limit their application, such as the absence of centralised infrastructure, limited bandwidth, and mobility of the nodes, etc.\n\nFuture Directions: Considering the intrinsic characteristics of MANET, a general IDS architecture should have the following properties in the future: 1) A self-defence mechanism is of immense importance for defending repeated false alarms by sending a flood of irrelevant packets to the IDS host; 2) It should require little system resources to execute and not hinder system performance by adding overhead; 3) It should run continuously and keep up transparent to the system and the users; 4) The IDS should abide by standard to be cooperative and open, such as the standard alert format Intrusion Detection Message Exchange Format (IDMEF) and a protocol for transporting such alerts Intrusion Detection Exchange Protocol (IDXP) [159].\n\nEfficient Malware Detection Tools in IoT Networks\n\nResearch Problems: The malware detection tools can effectively prevent threatening objects in the IoT network from destroying software-level security. However, various widely popular applications in the practical IoT environment accelerate the evolution of malware, which greatly limits the performance of traditional detection methods, and cannot guarantee the false alarm rate for benign system files.\n\nFuture Directions: Future researches on malware detection should mainly focus on combining traditional malware detection tools with powerful AI models. The key to detection lies in heuristic features such as file properties, code fragments, and file hashes that distinguish benign from malware. Therefore, some DL-based Natural Language Processing (NLP) models can be used to extract and process various feature information in OpCode, and construct malware detection as a binary classification problem. In addition, in order to adapt to the continuous emergence of system files and malware in the IoT network, the dependency graph can be used to express the relationship between software, and solve the state-of-the-art Graph Neural Network (GNN) model to extract features and graph reduction operations to reduce the amount of computation.\n\nMEC-IoT Security Protocols with Machine Learning\n\nResearch Problems: The Intelligent Transportation System (ITS) is a typical application of MEC-IoT systems, which consists of advanced sensors and control systems. ITS relies on the interconnectivity of various devices to process real-time data flow and transmit it to assure secure and efficient digital services. Such data flow is plaintext that is prone to eavesdropping and hijacking. Unmanned Aerial Vehicles (UAV) are another example in which the aim is to conserve battery life while offloading computational or storage information to MEC servers for processing. As a result, using strong cryptographic primitives or lengthy security processes would be impossible [160]. The recent works either consider security protocols or machine learning technologies to secure the MEC-IoT systems. However, an elaborately designed method by aligning security protocols with machine learning can be more effective in protecting the security of MEC-IoT systems.\n\nFuture Directions: Although the ML-based IDS can cope well with abnormal data traffic, the required massive data collection in the interconnective IoT systems raises privacy concerns during both the training and prediction stages. One promising solution is secretly sharing the data with light-weighted cryptography protocols and evaluating the data with three-party computation. However, there are several research challenges to be solved in the future. First, the three-party computation is only suitable for computation over a ℤ2ksubscriptℤsuperscript2𝑘\\mathbb{Z}_{2^{k}}blackboard_Z start_POSTSUBSCRIPT 2 start_POSTSUPERSCRIPT italic_k end_POSTSUPERSCRIPT end_POSTSUBSCRIPT ring. But both the training data and intermediate parameters of machine learning are decimal values that are unable to handle modular arithmetic. Second, secret sharing is costly and quickly becomes a major performance bottleneck in resource-constrained MEC-IoT systems.\n\nVII-A2 Mobile Core Network Security\n\nThe mobile core network is the provider of the main functions of MEC. Although the in-depth modules of the MEC system (e.g., MEO) are difficult to be invaded by attackers, manipulated and misused attacks can inject fake data into the authentication module to disrupt the normal operation of the edge server. Moreover, threats in SDN are also hot research topics in the mobile core network.\n\nEnsuring Reliable End-Edge Connections in Access Network\n\nResearch Problems: As mentioned above, the end-edge reliable connection constitutes the first barrier to the access network security. In addition to the rational use of service request authentication provided by modules such as OSS and MEO at the MEC system level, AI-based IDS should also be combined to protect the connection from being disrupted.\n\nFuture Directions: In the future, researchers can focus on choosing optimal AI models and features for detecting attacks between ends and edges. In order to obtain the sensitive information uploaded by mobile ends to the edge server, attackers usually inject malicious data packets into the end-edge connection. Therefore, IDS at the end-edge level should focus on the analysis of network traffic, analyze network dynamic information from the captured data packets, and take countermeasures when abnormalities are detected. In order to perform efficient feature extraction on large-scale data streams, DL models (such as DNN and DBN) can be used as favourable tools for building IDS in the future.\n\nDetecting and Mitigating DDoS Attack on SDN Control Plane\n\nResearch Problems: SDN offers unparalleled programming which enables network administrators to dynamically customize and control their networks within the MEC environment. One of the security concerns is DDoS attacks which drain the network capacity of SDN control plane by sending heavy traffic.\n\nFuture Directions: Although the advantage of the SDN control plane is that it can get the global view of the entire network, the control plane is insufficiently scalable to support high-frequency flow requests. A promising solution is to leverage the scalability and easy customization of virtualized software functions and adopt appropriate ML technologies and rule-based schemes to safeguard the centralized SDN control plane.\n\nVII-A3 Mobile Host Level Security\n\nWhen considering MEC security, the multi-faceted threats cannot be ignored: (1) VMs composed of various heterogeneous technologies may suffer from infected VM images, compromising VM migration, VM hopping, VM escape, and VM DoS attacks; (2) there are specific threats in NFV MANO when adopting the "
    }
}