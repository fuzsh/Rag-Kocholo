{
    "id": "dbpedia_1969_0",
    "rank": 36,
    "data": {
        "url": "https://trace.umd.edu/central-reference-document-version-8-unified-web-site-accessibility-guidelines/",
        "read_more_link": "",
        "language": "en",
        "title": "Version 8: Unified Web Site Accessibility Guidelines",
        "top_image": "http://trace.umd.edu/wp-content/uploads/2021/08/2_0.gif",
        "meta_img": "http://trace.umd.edu/wp-content/uploads/2021/08/2_0.gif",
        "images": [
            "https://trace.umd.edu/wp-content/themes/trace/images/tracelogo.png",
            "https://trace.umd.edu/wp-content/themes/trace/images/tracelogo.png",
            "http://trace.umd.edu/wp-content/uploads/2021/08/2_0.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/access2.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/access.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent3.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent3.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent1.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent3.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent3.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent3.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent3.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent2.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent2.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent2.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent3.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent3.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent3.gif",
            "http://trace.umd.edu/wp-content/uploads/2021/08/agent4.gif",
            "https://trace.umd.edu/wp-content/themes/trace/images/infologo_light.png",
            "https://trace.umd.edu/wp-content/uploads/2023/11/702300.png",
            "https://trace.umd.edu/wp-content/uploads/2023/11/6711567-1.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2020-12-04T01:16:56+00:00",
        "summary": "",
        "meta_description": "ADVANCED DRAFT COPY January 20, 1998   Compiled by: Gregg C. Vanderheiden Ph.D., Wendy A. Chisholm, M.S., Trace R and D Center, University of Wisconsin – Madison For the Web Accessibility Initiative Guidelines Working Group (This is a final Trace Center Guidelines Document. It is compiled in preparation for transfer of the Guidelines to the […]",
        "meta_lang": "en",
        "meta_favicon": "https://trace.umd.edu/wp-content/themes/trace/images/favicon.ico",
        "meta_site_name": "TRACE RERC",
        "canonical_link": "https://trace.umd.edu/central-reference-document-version-8-unified-web-site-accessibility-guidelines/",
        "text": "ADVANCED DRAFT COPY\n\nJanuary 20, 1998\n\nCompiled by:\n\nGregg C. Vanderheiden Ph.D., Wendy A. Chisholm, M.S.,\n\nTrace R and D Center, University of Wisconsin – Madison\n\nFor the Web Accessibility Initiative Guidelines Working Group\n\n(This is a final Trace Center Guidelines Document.\n\nIt is compiled in preparation for transfer of the Guidelines to the Web Accessibility\n\nInitiative of the W3C.\n\nThis guideline reflects recent work of the WAI as well as previous contributions of many\n\nother guidelines developers (listed in the appendix)).\n\nContributors include: Jim Bell, Jane Berliss, Harvey Bingham, Judy Brewer, Kevin Carey,\n\nJohn Churchill, David Clark, Dan Connolly, Daniel Dardailler, Judith Dixon, Martin Durst,\n\nPaul Fontaine, Geoff Freed, Alfred S. Gilman, Larry Goldberg, Jon Gunderson, Markku\n\nHakkinen, Scott Isaacs, Scott Isensee, Jun Ishikawa, Steve Jacobs, Phill Jenkins, Alan\n\nKarben, Hiroshi Kawamura, George Kerscher, Peter Korn, Josh Krieger, Chuck\n\nLetourneau, Edmund MacKenty, Murray Maloney, Aya Matsui, Gabriel Michel, Jim Miller,\n\nMasafumi NAKANE, Charles Oppermann, Mike Paciello, David Pawson, Michael Pieper, Dave\n\nRagget, T.V. Raman, Jan Richards, Madeleine Rothberg, Jutta Treviranus, Steve Tyler, Jaap\n\nVan Lelieveld, Jason White, Tom Wlodkowski, ATRC, CAST, InfoUse, NCR, WGBH, WINGS,\n\nYRIF, and the WAI IG and GL Working groups\n\n(If you have contributed and your name or organization is missing\n\nfrom the above list, inform us via e-mail so that\n\nwe may correct our omission – and we apologize in advance.)\n\nPrepared under funding from\n\nthe National Institute on Disability and Rehabilitation Research (NIDRR),\n\nOffice of Special Education and Rehabilitation Services (OSERS),\n\nUS Department of Education\n\nThe US Postal Service’s WINGS project and\n\nthe NCSA-PACI Universal Design / Disability Access Project.\n\n(This is a living document. Comments and suggestions are solicited.)\n\nTable of Contents\n\nAbout version 8 of the Unified Web Site Accessibility Guidelines\n\nIntroduction\n\nPurpose of Version 8\n\nFormat of Version 8\n\nSimplifying the Guidelines\n\nInput Requested\n\nIntroduction to web site accessibility\n\n[Place holder for “On SGML and HTML “]\n\nDefinitions and Conventions\n\nDefinitions\n\nTypes and encoding of recommendations\n\n[Place holder for “HTML Document Representation – Character sets, character encodings, and entities“]\n\n[Place holder for “Basic HTML data types – Character data, colors, and lengths“]\n\nThe global structure of an HTML document – The HEAD and BODY of a document\n\nPage Titles\n\nMetadata\n\nLanguage information and text direction -International considerations for text\n\nText – Paragraphs, Lines, and Phrases\n\nText formatting\n\nAcronyms\n\nPunctuation, symbols and ASCII art\n\nText that changes or moves\n\nLists and Outlining – Unordered, Ordered, and Definition Lists\n\nHelping users navigate lists effectively\n\nTables\n\nComprehension and navigation of table elements\n\nLinks – Hypertext and Media-Independent Links\n\nLinks read out of context\n\nIdentifying links within a sentence\n\nSeveral links read as one\n\nMethods for linking to alternate pages\n\nUse of graphics decreases cognitive load and increases target area.\n\nPage abstracts\n\nKeyboard shortcuts for links\n\nObjects, Images, Audio, and Applets\n\nIntroduction to the issues\n\nGeneral recommendations\n\nImages and image maps\n\nApplets\n\nAudio and video\n\nStyle Sheets – Controlling the presentation of an HTML document\n\nStyle sheets solve several issues, but only if users can override\n\nAlignment, font styles, and horizontal rules\n\nProviding additional cues with horizontal rules\n\nFrames – Multi-view presentation of documents\n\nMisinterpretation by screen readers and small screen users\n\nForms – User-input Forms: Text Fields, Buttons, Menus, and more\n\nNavigation and manipulation\n\nGraphical buttons\n\nScripts – Animated Documents and Smart Forms\n\nIntroduction to the issues\n\nAction occurring away from user focus\n\nActions executed during load of page\n\nAutomatic update of page (“push”)\n\nSummary of issues\n\n[Place holder for “SGML reference information for HTML – Formal definition of HTML and validation“]\n\n[Place holder for “SGML Declaration of HTML 4.0”]\n\n[Place holder for “Document Type Definition”]\n\n[Place holder for “Transitional Document Type Definition”]\n\n[Place holder for “Frameset Document Type Definition”]\n\n[Place holder for “Character entity references in HTML 4.0”]\n\nGood Web Site Design Practices\n\nAppendices\n\nDesign Notes\n\nAlt-text\n\nAlternate pages\n\nReferences\n\n1. About Version 8 of the\n\nUnified Web Site Accessibility Guidelines\n\n1.1 Introduction\n\nThe 8 series of website accessibility guidelines is the final set of unified guidelines prepared by the Trace Center. The Web Access Initiative (WAI) of the World-Wide-Web Consortium (W3C) has been launched, and the development of HTML guidelines is being transferred to that body. The Trace Center will be continuing to work with and as a part of the WAI. As a result, the Trace Center will no longer be developing or maintaining this Unified Website Accessibility Guideline series. Readers are referred to the W3C site (http://www.w3.org/wai) for the latest version of the guidelines.\n\n1.2 Purpose of Version 8\n\np align=”left”>The primary purpose for compiling Version 8 is to bring together all of the information, notes, and ideas that the Trace Center has been able to locate (see appendix for listing of guidelines we were able to locate). This version also takes into account decisions and directions that were taken at the August 1997 WAI working group meeting, as well as recent discussions by the working groups on-line (although at the present time, some of those discussions have not reached conclusion).\n\n1.3 Format of Version 8\n\nVersion 8 has been completely restructured from previous versions. Part of this was to reflect decisions or directions in which the WAI decided that it would like to take the guidelines at the August meeting. The greatest restructuring, however, has been done so that these web guidelines would directly follow the structure and numbering of topics in the new HTML 4.0 specification. In fact, in order to maintain the numbering, there are several sections in this document that have almost nothing in them, or are just place holders to keep the numbering aligned between these guidelines and the HTML 4.0 specification.\n\nThis document is actually one of a series of documents that make up the Unified Website Design Guidelines 8. The full set of guidelines include:\n\nWeb Access: Why Is It Important? (in 2 pages or less)\n\nA brief introduction to the issues around web access for executives responsible for websites\n\nUnderstanding Disabilities and Web Access Issues\n\nA discussion of the different types of disabilities and their effect on access to the web\n\nA series of Check Lists\n\nChecklist for web authors – about two printed pages\n\nChecklist for user agent (browser) developers\n\nChecklist for web server developers\n\nChecklist for web tool developers\n\nA series of Guidelines\n\nGuidelines for web authors – about six printed pages\n\nGuidelines for user agent (browser) developers\n\nGuidelines for web server developers\n\nGuidelines for web tool developers\n\nThe Unified Website Access Guidelines Central Reference Document\n\nPresentation of web access issues along with solution strategies for web authors, browser developers, server developers, and tool developers, all in an integrated document so that the issues and the interactions between the authors, browsers, and tools may most easily be seen.\n\nWeb Access Resource Site\n\nA website containing extended discussions, case studies, demonstrations, tools, references to other guidelines and efforts related to web access, etc.\n\n1.4 Simplifying the Guidelines\n\nIn putting together these guidelines, we have tried to keep in mind that the simpler the guidelines were, the easier they would be to understand and follow. Unfortunately, HTML, formatting, and the Web are becoming increasingly complex. Also, browsers are introducing new elements and options. These present both opportunities and complications. In addition, we need to take into account the fact that although some of the pages out there on the Web will be using the new features, there is still a legacy of pages using old techniques, only a small portion of which will probably ever be updated and reformatted. We are therefore trying to follow the advice of Albert Einstein, who said \"Everything should be made as simple as possible, but no simpler.\" This first draft is an attempt to reach our objective. In it, we have tried to incorporate all of the new information and strategies, and to present them in as straightforward and useful a fashion as possible. Our goals in this first version are therefore: correct, complete, simplify, in that order. In fact, since this set of guidelines is being used as a central reference point by so many, we need to always maintain that order. However, we recognize the need for simplicity, and that will be a primary focus, particularly of the short form and checklist versions.\n\nC2S2 Approach\n\nThe Trace Center has also launched what they call a \"C2S2 Project.\" This stands for the \"Comprehensive Cross-Segment Strategy Project.\" In a nutshell, this project seeks to identify and define a way that different industry segments (authors, user agent [browser] developers, and assistive technology developers [e.g., screen reader manufacturers]) can coordinate their efforts. The goals of this cooredination are:\n\nTo minimize the effort needed by page authors to make their sites accessible.\n\nTo maximize the flexibility and creativity of page authors to create web-based environments.\n\nFor example, currently, page authors have to follow several rules that are not necessary if some basic capabilities or options were built into browsers and screen readers. C2S2 seeks to work with all of the segments to identify a cooperative strategy that divides up the access issue and identifies ways that the different industry segments could cooperate to minimize the number of guidelines and amount of effort needed. These guidelines reflect and help support the C2S2 approach by identifying, under each issue, the strategies and approaches that could be taken by all of the industry segments to help address the access issue. More information on the C2S2 project is available at http://trace.wisc.edu/docs/c2s2/c2s2.htm.\n\n1.5 Input Requested\n\nAs always, any and all comments on this draft are solicited. This 8 series, however, will formally freeze on November 10. At that point, the guidelines in their current form will be formally transferred to the WAI, which will then, per previous decision, use them as a basis for developing the formal WAI guidelines. Once the W3C/WAI guidelines are released, these guidelines will be archived and website authors will be directed to the W3C/WAI guidelines.\n\n2. Introduction to Web Site Accessibility\n\n2.1 Profiles of users with disabilities\n\nSensory disabilities – vision, audition\n\nLow vision – There are many types of low vision, including poor acuity, tunnel vision, clouded vision, floaters in the eye, peripheral vision, etc. Some people with low vision need to enlarge the text fonts and images, and may use use a dual (i.e., partial) or full screen magnifier.\n\nNote, low vision users may still encounter difficulty deciphering information on the computer screen even when magnified due to:\n\nmagnifying small fonts or images may cause pixelation and/or distortion ;\n\nmagnified areas tend to loose contextual information (tunnel vision effect doesn’t allow user to \"see\" what information or choices are around the magnified area).\n\nBlindness – People are legally blind when they have less than 20/200 vision in the better eye after correction, or less than a 20 degree field of view in the better eye after correction. Individuals who are blind rely primarily on screen readers to read the text on the screen. For graphic elements, they rely on the presence of a text description of the image (and any text that is included as an image in the document).\n\nHard of hearing – A person whose hearing is less severely impaired than deafness is said to be hard of hearing.\n\nDeafness – A person is considered deaf when sound must reach at least 90 decibels to be heard at all and even amplified speech cannot be understood. Normal conversation is approximately 40 to 60 decibels.\n\nPhysical disabilities – paralysis, fine-motor skills\n\nThere is a tremendous variety of physical disabilities. In addition to the usual range from minor to severe involvement, there are also many different types of physical disabilities. In order to better understand its breadth, it is useful to break this category into two major areas: neuromuscular and skeletal. Neuromuscular impairments include any impairments that relate to the nervous system (including the brain) or the muscles. For example, most speech impairments fall into this area. Skeletal impairments relate to the bones, joints and missing limbs.\n\nAlthough there are many specific types of neurological impairments, their effects can be characterized as variations or combination of:\n\nParalysis – This lack of any muscular control and often sensation in part of the body. This is usually caused by a break in the nerves leading to the muscle, often in the spinal cord.\n\nParesis – Weakness or inability to produce small, controlled or forceful movements. This can be caused by problems with the signals sent to the muscles via the nerves, problems with the muscles themselves, or problems due to pain when movements are made (as in the case of severe arthritis).\n\nInterference with Control – This interference can take different forms. The term spasticity is used if the muscles are tense and contracted and voluntary movements is very difficult. Ataxia refers to problems in motor programming and coordination. Athetosis and Chorea refer to constant or uncontrolled motion (i.e. extra, involuntary movements).\n\nCognitive disabilities – learning, attention deficit\n\nThese disabilities result from some type of damage to the human brain. Therefore it is not surprising that there is a great complexity of impairments in this category. Cognitive disabilities can be divided into the following seven categories:\n\nImpairments of Intelligence and Thinking\n\nMental Retardation\n\nDementia\n\nImpairments of Memory\n\nAmnesia\n\nMemory illusions\n\nForgetfulness\n\nOther Intellectual Impairments\n\nAphasia\n\n(Specific) Learning Disabilities\n\nSpoken language\n\nWritten language\n\nArithmetic\n\nReasoning\n\nPsychological impairments\n\nDrug and Alcohol Dependence\n\n3. [Place holder for “On SGML and HTML”]\n\n4. Definitions and Conventions\n\n4.1 Definitions\n\nAssistive Technologies\n\nAssistive technologies are products used to help people accomplish tasks that they can not accomplish otherwise. For example, eyeglasses assist those of us who can not see clearly. When dealing with computers and the world wide web, assistive technologies usually refer to software adaptations, specially designed hardware devices, and/or standard devices used in alternative ways which provide user access.\n\nScreen reader\n\nA software program that reads the contents of the screen aloud to a user. Used primarily by individuals who are blind, screen readers can only read text that is printed, not painted, to the screen.\n\nScreen magnifier\n\nA software program that magnifies a portion of the screen, so that it can be more easily viewed. Used primarily by individuals with low vision.\n\nShowSounds and SoundSentry\n\nIndividuals who are deaf or hard-of-hearing can set the \"ShowSounds\" and \"SoundSentry\" flags on some operating systems such as Windows95/NT. If the SoundSentry flag is set, whenever the computer makes a sound, a user chosen visual indication is provided on the screen. Any programs which have significant aural or spoken content should check to see if the ShowSounds flag is turned on. If it is, these programs should also provide all significant aural content in a visual format (e.g., closed captions).\n\nScanning Software\n\nSoftware that highlights (and/or announces) selection choices (e.g. menu items, groups of possible phrases, etc.) one at a time. A user selects a desired item by hitting a switch when the desired item is highlighted/announced. Used primarily by individuals with severe physical or cognitive disabilities.\n\nAlternate Keyboards\n\nHardware/software devices that provide an alternate way of creating keystrokes that appear to be coming from the standard keyboard. On-screen keyboards, speech input, eyegaze keyboards, and sip-and-puff (Morse code) keyboards are some examples. Used primarily by individuals with disabilities that prevent them from using the standard keyboard (and usually from using the mouse as well). Programs that can be operated entirely from the standard keyboard (and don’t require the mouse) can be used by individuals with alternate keyboards.\n\nBraille and Dynamic Braille\n\nBraille is a technique involving six dots which are raised in different patterns to represent letters and numbers so that they can be read by people who are blind using their fingertips. Grade II braille includes additional codes that represent common letter groupings (e.g., \"th,\" \"ble\") to make braille more compact. An 8-dot version of braille has been developed to allow all ASCII characters to be represented. Dynamic braille involves the use of a display where dots can be raised and lowered dynamically to allow any braille words to be displayed. Only letters and numbers can be represented in braille, although some braille printers have a utility that allows simple graphics to be drawn on a sheet using the raised dots at a resolution of approximately 11 dots per inch.\n\nThe word “Accessible” in Braille.\n\nThe word “Accessible” in Grade II Braille.\n\n4.2 Types and encoding of recommendations\n\nRating System\n\n[Required] – Required for some groups of users to access the information on a page.\n\n[Recommended] – Makes page easier to understand and use.\n\nClassification System\n\n[Interim] – Strategies needed to make pages accessible for today’s browsers and assistive technologies\n\n[New] – Strategies that will take advantage of new features being incorporated into supported tomorrow’s browsers and assistive technologies (which incorporate Web Access Initiative recommendations).\n\nIf a recommendation has several possible strategies, the strategies are classified, if not the recommendation itself is classified. Those recommendations and strategies that have no classification work for both old and new browsers.\n\nRecommendations for different groups\n\nThere are several pieces of the puzzle that need to be put together for a single page to be accessible. This document focuses mainly on what page authors should be doing to ensure that browsers render the page as maximally accessible as they can. We do offer suggestions for browser and assistive technology designers, and even a few hints for users. The following headings are used throughout the document:\n\nRecommendations for page authors – issues to behandled in source documents\n\nRecommendations for user agent (browser) designers – issues to be handled by browsers\n\nRecommendations for Assistive Technology designers – issues to be handled by screen readers, screen magnifiers, scanning software, etc.\n\nSuggestions for Users– configuring the useragent and assistive technology for maximum benefit.\n\n5. [Place holder for “HTML Document Representation”]\n\n6. [Place holder for “Basic HTML data types”]\n\n7. The global structure of an HTML document\n\nThe HEAD and BODY of a document\n\n7.1 Page Titles\n\nIssue: Meaningful titles should be associated with each page not only because they are required in HTML 4.0, but users will more easily identify bookmarked pages. Most browsers will use the address of a web page if no title is provided.\n\nRecommendations for page authors\n\nDesign Tip: Use the TITLE element in the HEAD of each document.\n\nFor example, <HTML><HEAD>...<TITLE>Version 8 of the Unified Web Accessibility Guidelines</TITLE>...</HEAD>...\n\n7.2 Metadata\n\nThere are many recent developments on this front that are still being discussed. Hopefully, in the near future, authors will be able to associate a variety of metadata with their pages. Stay tuned.\n\n8. Language information and text direction\n\nInternational considerations for text\n\n9. Text\n\nParagraphs, Lines, Phrases,\n\nPunctuation and Symbols\n\n9.1 Text formatting\n\n9.2 Acronyms\n\n9.3 Punctuation, symbols and ASCII art\n\n9.4 Text that changes or moves\n\n9.1 Text formatting\n\nIssues: There are four issues with the presentation of text:\n\nAuthors often use color, font style (e.g. bold or italic) or font changes to highlight certain words or to make a page easier to read visually (e.g. headings are italicized, outdented, a larger font and bold). While this often makes the page easier to read visually, it is either lost in the aural presentation or makes the aural presentation confusing. In some instances, important information is being conveyed through the typographics used and is lost to the auditory user. The following is an expansion of the issues:\n\nColor, font or font size – These typographic attributes often highlight a section of text. For example, to signify a heading, or to emphasize an important statement. Since most screen readers read all text in the same manner, no matter what visual attributes they possess, the meta information given in the example is lost. Headings not only make it easier to skim through a page, they signify that a major change in context has just occurred and give the new context a \"handle.\" The loss of this information can make a document harder to understand.\n\nIndentation – Indentation is usually used to order or to group items. Most screen readers do not indicate how much space precedes or follows text. The issues are discussed in greater detail in the section on Lists.\n\nDrop-caps, subscripts and superscripts. Current screen readers might interpret words or letters as appearing on a separate line.\n\nUsers need to adjust text size for easier viewing if they have low vision. Changing the text size often makes the page unreadable due to changes in layout.\n\nAlthough users can override the color settings of HTML pages to alleviate poorly contrasting colors, formats such as Portable Document Format (PDF) prevent this. Also, some users may not yet be aware that they have this ability.\n\nScreen reading software cannot make sense of bit-mapped text since it is perceived as graphical information. One of the most common examples of bitmap text is the counter that records the number of accesses to a certain page. For example, a text-only browser or screen reader might say the word \"image\" when it encounters a graphic. Reading a page with a graphical counter would sound like, \"You are visitor number (image) to visit this site\" or \"The number of visits to our site this month is (image).\"\n\nElements affected: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, BLOCKQUOTE, Q, IMG, FONT, SUB and SUP\n\nRecommendations for page authors\n\n[Required]\n\nUse style sheets: [New]\n\nto create drop caps, subscripts and superscripts\n\nto highlight sections of a document with font size, formatting or color\n\nrather than converting text to images or alternative text file formats(such as PDF)\n\n[Recommended]\n\nUse logical styles rather than physical markups. Do no misuse logical elements.\n\nLogical: DFN, EM, CITE, CODE, KBD, SAMP, STRONG, VAR, H1, H2, etc.\n\nPhysical: size=14, B, I.\n\nThis makes it easier for users to adjust the look of the screen (e.g., larger print, color contrast, etc.) when they apply their own style sheets or for browsers to adjust the presentation of the document based on user settings. The other advantage of logical elements is that they help enforce consistency in your documents. It also leaves open the possibility for more sophisticated uses of the semantic encodings in the future. For example, the Lycos indexing system can take advantage of semantic encoding to create abstracts of documents. Alternatively, browsers can navigate through a document by logical styles, such as headers. Only use logical elements for what they represent. For example, avoid using <cite> to undent a paragraph.\n\n[Recommended]\n\nAvoid using the BLINK and MARQUEE elements. [Interim]\n\nUse another method to draw attention to text such as text size or color.\n\n[Recommended]\n\nProperly nest headings. (Use style sheets for formatting [New] ).\n\nUsers with dyslexia may have problems reading long pages and will be helped if the design facilitates scanability by proper use of headings. This also benefits us all, as we scan through pages via the headings. Tagging these correctly means that user agents can provide navigation through the structure.\n\nTesting tips\n\nTo test if the text and background contrast is sufficient enough to be read by people with color deficiencies or on low resolution monitors, view your pages with a monochrome\n\nmonitor.\n\nTo get a better understanding of what a screen reader would present to a user, do not load the images on a page when viewing with a graphical browser or use a text-based\n\nbrowser such as Lynx.\n\nRecommendations for user agent (browser) designers\n\nAllow user-selected style sheets to override the page author’s settings.\n\nSupport navigation between different size “chunks.”\n\nFor example, allow the user to jump between links, or level 2 headings, or by sentence, or whatever they choose.\n\nRecommendations for assistive technology designers\n\nIf user agents do not support the previous recommendation, then that functionality should be implemented here (although this requires parsing of HTML).\n\nSuggestions for users\n\nMake use of existing (or create your own) Aural Cascading Style Sheet (ACSS) to interpret the page constructs as you desire.\n\nTo translate PDF files, download Adobe’s plug-in for windows or retrieve documents through their proxy. For more information, go to the Adobe site at http://access.adobe.com/.\n\n9.2 Acronyms\n\nIssue: Acronyms may be unfamiliar to readers or interpretted incorrectly based on previous experience. For example, \"CID\" can stand for \"Central Institute for the Deaf, \" \"Charge Injection Device,\" \"Computer Integrated Design,\" or \"Configuration/Installation/Distribution\" depending on your context. For disability access, screen readers may not recognize the phrase as an acronym and might make a best guess at pronouncing it. Not only can this sound ridiculous, it can be confusing.\n\nElement affected: ABBR\n\nRecommendations for page authors\n\nDesign Tip: Use the \"title\" attribute for acronyms and abbreviations <abbr>title=\"World wide web\">WWW</abbr>\n\nRecommendations for user agent (browser) designers\n\nMake title information available or present it inline if requested by the user.\n\n9.3 Punctuation, symbols and ASCII art\n\nIssue: Screen reading software will often either ignore or read each name for punctuation used to make an emoticon or ASCII art. For example, the smiley emoticon 🙂 would either be ignored or read as \"colon dash close parentheses.\"\n\nText symbols affected: all punctuation and letters that are used to make emoticons, symbols or ASCII art\n\nRecommendations for page authors\n\nDesign Tip: Avoid using ASCII art or replace it with an image and alternative text.\n\nCommon typographic characters or constructions to be avoided are emoticons, arrows consisting of dashes and greater than signs –>, etc..\n\n9.4 Text that changes or moves\n\nIssue: Text that changes or moves is either read incorrectly or not at all by screen readers, can adversely affect people with cognitive disabilities, and is often annoying to people in general (see Jared Spool’s book, \"Web Site Usability\"). For example, a user with attention deficit disorder might find it hard to focus on the rest of a page while blinking or scrolling text is present. Another example, marquee text, is often read by most current screen readers (which do not interpret the HTML) one letter at a time as it appears on screen. Therefore, the visible words and characters of the message will be repeated each time a new letter appears. For example, the message \"Have a nice day,\" scrolling left to right:\n\nElements affected: BLINK, MARQUEE, as well as programming or scripting languages, such as Java and JavaScript.\n\nRecommendations for page authors\n\n[Required]\n\nProvide a mechanism for the user to freeze any moving or blinking text.\n\nIn the following example created by Mark Novak, if the user presses the escape key while the Java marquee has focus, the text will be displayed statically. View the example.\n\n[Recommended]\n\nAvoid using the BLINK and MARQUEE elements. [Interim]\n\nUse another method to draw attention to text such as text size or color.\n\nRecommendations for user agent (browser) designers\n\nAllow users to view BLINK and MARQUEE phrases as static text.\n\nThis goes for all animations and interactions. See the sections on Applets and Scripts for more information.\n\nSide note: MARQUEE is a MSIE3.0 element, while BLINK was introduced in Netscape 1.1. Therefore, neither are considered standard HTML.\n\n10. Lists and Outlining\n\nUnordered, Ordered, and Definition Lists\n\n10.1 Helping users navigate lists effectively\n\nIssue: Non-visual users often \"get lost\" in lists, especially those with several layers of embedding and those which lack discernible cues to indicate the specific level of indentation for each item. In addition, it is often difficult for non-visual users to know where the list itself begins and ends and where each list item starts. Further, if a list entry wraps to the next line, it may appear to be two separate items in the list.\n\nFor example, imagine stripping the indentation and bullets from a list of items I keep in my desk:\n\nwriting utensils.\n\npens\n\nhighlighters\n\nred\n\ngreen\n\nblue\n\nball-point\n\ngreen\n\npurple\n\nblue\n\npencils\n\n#2 lead\n\nsoft lead\n\nerasers\n\nIt might be read like this by a screen reader:\n\nwriting utensils.\n\npens\n\nhighlighters\n\nred\n\ngreen\n\nblue\n\nball-point\n\ngreen\n\npurple\n\nblue\n\npencils\n\n#2 lead\n\nsoft lead\n\nerasers\n\nElements affected: OL, UL, LI, DL, DD, DT, BLOCKQUOTE\n\nRecommendations for Page Authors\n\n[Recommended] Correctly encode list structure and list items with proper HTML elements (UL, OL, LI). (Use style sheets to adjust item spacing [New]).\n\nThis is an ongoing topic of discussion, stay tuned for developments.\n\nTips and tricks:\n\nUsing a numbered (ordered) list makes it easier for people accessing the page auditorally to keep track of where they are within a list.\n\nRecommendations for user agent (browser) designers\n\nIntroduce each list by indicating how many items it contains.\n\nFor example, \"There are 6 subtopics.\" or \"7 Objectives of this study are:\". This information is helpful in orienting users as to how long a list is that they are about to read. Numbering lists also addresses cognitive disabilities. The organization in a page with numbered lists and an indicator of the upcoming page structure helps someone’s understanding of a Web page.\n\nAllow the user to configure how nested lists should be enumerated and presented.\n\nThis includes allowing the user to choose to view all text in a left-justified format if they so desire or to associate an aural cue with different levels (via alternate aural cascading style sheets).\n\n11. Tables\n\n11.1 Comprehension and navigation of table elements\n\nIssue 1: Newspaper columns. Tables are often used to layout pages of text in newspaper columns. Most current screen readers (which do not interpret the HTML) read all the way across the page reading sentences on the same row from different columns as one sentence.\n\nFor example:\n\nThis might be read by a screen reader as:\n\nThere is a 30% chance of rain Classes at the University of Wisconsin\n\nshowers this morning, but the will resume on September 3rd.\n\nweekend looks like it will be sunny.\n\nIssue 2: Spreadsheets and calendars. Tables are often used to layout text and numbers. The screen reader may append all of the numbers from different columns in the same row into one large number if spaces and punctuation are not provided.\n\nIssue 3: Alt-text that wraps. If the alt-text of graphics laid out in a table wrap, then the \"column effect\" described above will occur, making the table difficult or impossible to decipher. For example, tables are often used to layout graphics to create navigation bars. In this instance the alt-text for an image might be wrapped to fit the width of the column that it is placed in. The following table represents what a reader might see if images were not viewed on an example opening page:\n\nSince each of these cells represents a graphic, and each graphic is a link to another page, a user tabbing through the page might hear:\n\n\"Welcome to our\" [tab] \"Sponsored by\" [tab] \"site\" [tab] \"XYZ company\" [tab] \"Help\" [tab] \"Search\" [tab] \"Products\" [tab] \"Games and\" [tab] \"project and\" etc.\n\nIssue 4: In all of these instances, it is very difficult to comprehend the semantics of the table since navigation through a table with most current screen readers (which do not interpret the HTML) is so limited. The user is forced to navigate by sentence, without the options to navigate by row, column or cell.\n\nElements affected: TABLE, CAPTION, THEAD, TFOOT, COLGROUP, TBODY, TH, TD, TR, and their attributes\n\nRecommendations for page authors\n\n[Required]\n\nExplicitly associate table cells with row and column labels. [New] Future browsers and assistive technologies will be able to automatically translate tables into linear fashions if tables are tagged appropriately.\n\n\"headers\" – The following example, shows how to associate header information with the \"headers\" attribute. The \"headers\" attribute specifies a list of header cells (row and column labels) associated with the current data cell. This requires each header cell to have an \"id.\"\n\n<TABLE border=\"border\" summary=\"This table charts the number of cups of coffee consumed by each senator, the type of coffee (decaf or regular), and whether taken with sugar.\">\n\n<CAPTION>Cups of coffee consumed by each senator</CAPTION>\n\n<TR>\n\n<TH id=\"t1\">Name</TH>\n\n<TH id=\"t2\">Cups</TH>\n\n<TH id=\"t3\" abbr=\"Type\">Type of Coffee</TH>\n\n<TH id=\"t4\">Sugar?</TH>\n\n<TR>\n\n<TD headers=\"t1\">T. Sexton</TD>\n\n<TD headers=\"t2\">10</TD>\n\n<TD headers=\"t3\">Espresso</TD>\n\n<TD headers=\"t4\">No</TD>\n\n<TR>\n\n<TD headers=\"t1\">J. Dinnen</TD>\n\n<TD headers=\"t2\">5</TD>\n\n<TD headers=\"t3\">Decaf</TD>\n\n<TD headers=\"t4\">Yes</TD>\n\n</TABLE>\n\nA speech synthesizer might render this table as follows:\n\nCaption: Cups of coffee consumed by each senator\n\nSummary: This table charts the number of cups of coffee consumed by each senator, the type of coffee (decaf or regular), and whether taken with sugar.\n\nName: T. Sexton, Cups: 10, Type: Espresso, Sugar: No\n\nName: J. Dinnen, Cups: 5, Type: Decaf, Sugar: Yes\n\n\"scope\" – The following example associates the same header and data information as the previous example, but uses the \"scope\" attribute rather than \"headers.\" \"Scope\" must have one of the following values: row, col, rowgroup or colgroup. Scope specifies the set of data cells to be associated with the current header cell. This method is particularly useful for simple tables.\n\n<TABLE border=\"border\"\n\nsummary=\"This table charts the number of cups of coffee consumed by each senator, the type of coffee (decaf or regular), and whether taken with sugar.\">\n\n<CAPTION>Cups of coffee consumed by each senator</CAPTION>\n\n<TR>\n\n<TH scope=\"col\">Name</TH>\n\n<TH scope=\"col\">Cups</TH>\n\n<TH scope=\"col\" abbr=\"Type\">Type of Coffee</TH>\n\n<TH scope=\"col\">Sugar?</TH>\n\n<TR>\n\n<TD>T. Sexton</TD>\n\n<TD>10</TD>\n\n<TD>Espresso</TD>\n\n<TD>No</TD>\n\n<TR>\n\n<TD>J. Dinnen</TD>\n\n<TD>5</TD>\n\n<TD>Decaf</TD>\n\n<TD>Yes</TD>\n\n</TABLE>\n\n[Required]\n\nAvoid using tables or <PRE> elements to arrange text documents in columns or otherwise layout a page. (Use style sheets to position graphics and text [New]).\n\n[Recommended]\n\nProvide abbreviations for lengthy row or column labels. [New]\n\nAbbreviations should be short but meaningful. This will be particularly useful for future speaking technologies that will read row and column labels for each cell. Abbreviations cut down on repetition and reading time. Refer to the examples given in the appendix.\n\n[Recommended]\n\nProvide summaries of tables. [New] Summaries of table structure and purpose are especially useful for non-visual users. Refer to the examples given in the appendix.\n\n[Recommended]\n\nFor more complex tables, group information into categories. [New] Future browsers will allow users to select data from a table by asking for categories. For example, a table contains information about several trips a person has recently made. One of these trips is to San Jose. Information on expenses for meals, hotels and transportation are recorded (each in their own column). There are several locations (San Jose, Seattle, Madison). The expenses can be grouped into an \"Expenses\" category and all of the locations into a \"Location\" category. The following question could then be asked, \"What were all of my expenses in San Jose?\" This means \"What are all the data cells in the \"Expenses=Meals, Hotels, Transport\" and \"Location=San Jose\" categories?\n\nThe following example shows how to create categories within a table.\n\n<TABLE border=\"border\">\n\n<CAPTION> Travel Expense Report </CAPTION>\n\n<TR>\n\n<TH></TH>\n\n<TH id=\"a2\" axis=\"expenses\">Meals</TH>\n\n<TH id=\"a3\" axis=\"expenses\">Hotels</TH>\n\n<TH id=\"a4\" axis=\"expenses\">Transport</TH><TD>subtotals</TD>\n\n</TR>\n\n<TR>\n\n<TH id=\"a6\" axis=\"location\">San Jose</TH>\n\n<TH></TH><TH></TH><TH></TH><TD></TD>\n\n</TR>\n\n<TR>\n\n<TD id=\"a7\" axis=\"date\">25-Aug-97</TD>\n\n<TD headers=\"a6 a7 a2\">37.74</TD>\n\n<TD headers=\"a6 a7 a3\">112.00</TD>\n\n<TD headers=\"a6 a7 a4\">45.00</TD><TD></TD>\n\n</TR>\n\n<TR>\n\n<TD id=\"a8\" axis=\"date\">26-Aug-97</TD>\n\n<TD headers=\"a6 a8 a2\">27.28</TD>\n\n<TD headers=\"a6 a8 a3\">112.00</TD>\n\n<TD headers=\"a6 a8 a4\">45.00</TD><TD></TD>\n\n</TR>\n\n<TR>\n\n<TD>subtotals</TD><TD>65.02</TD><TD>224.00</TD><TD>90.00</TD><TD>379.02</TD>\n\n</TR>\n\n<TR>\n\n<TH id=\"a10\" axis=\"location\">Seattle</TH>\n\n<TH></TH><TH></TH><TH></TH><TD></TD>\n\n</TR>\n\n<TR>\n\n<TD id=\"a11\" axis=\"date\">27-Aug-97</TD>\n\n<TD headers=\"a10 a11 a2\">96.25</TD>\n\n<TD headers=\"a10 a11 a3\">109.00</TD>\n\n<TD headers=\"a10 a11 a4\">36.00</TD><TD></TD>\n\n</TR>\n\n<TR>\n\n<TD id=\"a12\" axis=\"date\">28-Aug-97</TD>\n\n<TD headers=\"a10 a12 a2\">35.00</TD>\n\n<TD headers=\"a10 a12 a3\">109.00</TD>\n\n<TD headers=\"a10 a12 a4\">36.00</TD><TD></TD>\n\n</TR>\n\n<TR>\n\n<TD>subtotals</TD><TD>131.25</TD><TD>218.00</TD><TD>72.00</TD><TD>421.25</TD>\n\n</TR>\n\n<TR>\n\n<TH>Totals</TH><TD>196.27</TD><TD>442.00</TD><TD>162.00</TD><TD>800.27</TD>\n\n</TR>\n\n</TABLE>\n\n[Recommended]\n\nEnsure that alternative text does not wrap within tables used to position graphics. [Interim]\n\nTest for wrapping using the equivalent window size as that which can maximally fit on a 15-inch monitor using a common resolution such as 800×600 pixels.\n\nTBD\n\nFor tables of text and numbers, provide an alternative page which presents the table information in a linear fashion. [Interim]\n\nThere are several ways to link to alternate pages which are described in more detail in Methods for linking to alternate pages.\n\n[Recommended]\n\nProvide a phone or fax number or e-mail address if tables can not be made accessible.\n\nTesting tips\n\nTo predict how one of today’s screen readers might read your table, hold a piece of paper up to your monitor. As you slide the paper down the monitor, read the words above the line the paper creates as a sentence. Ask another person to listen as you read the page out loud without pausing for column gaps. Can he or she make sense out of what you have read?\n\nAnother method, to predict how a screen reader will interpret your page, is to save it as a text-only file then open it with a word processing program. This function is available in the \"File\" menu in most browsers.\n\nRecommendations for user agent (browser) designers\n\nMake cell, row and column information available.\n\nSemantic information is provided through attributes available for each entry in the table, the row and column information as well as the cell’s data contents. This will most likely emerge in the next HTML 4.0 specification as AXES, AXIS, and SCOPE attributes. As the draft solidifies we will provide more information about how to use the new attributes.\n\nProvide methods to \"unwrap\" table information.\n\nHow a table is unwrapped will be determined by which attributes are added to HTML 4.0. There has been considerable discussion about this in the WAI working groups and we will update this recommendation as soon as it is resolved.\n\nRecommendations for assistive technology designers\n\nProvide the ability to navigate by column, row and cell.\n\nProvide orientation functions.\n\nTo help the user determine which row or column they are in, and to establish how the current cell contents relate to the rest of the table, a \"where am I\" feature is needed.\n\n12. Links\n\nHypertext and Media-Independent Links\n\n12.1 Links read out of context\n\n12.2 Identifying links within a sentence\n\n12.3 Several links read as one\n\n12.4 Methods for linking to alternate pages\n\n12.5 Use of graphics decreases cognitive load and increases target area.\n\n12.6 Page abstracts\n\n12.7 Keyboard shortcuts for links\n\n12.1 Links read out of context\n\nIssue: People who use screen readers to access the information on the web will often use the tab key to step through the links on a page. Although this allows users to more quickly identify links, they will not hear the surrounding text and will lose the context of the link. Pages that use the same phrase for several different links (e.g. a series of \"click here’s\") are impossible to navigate solely by reading the links. Microsoft Internet Explorer 4.0 can create an overview of a page by presenting a list of just the links on the page. This might become a popular method to scan pages by everyone.\n\nElement affected: A\n\nRecommendations for page authors\n\n[Recommended]\n\nCreate link phrases that make sense when read out of context (but they are not too verbose).\n\nA user should be able to select a link from a list of all of the links on a page without reading the context in which the link was used. For example, using \"click here\" as the text phrase for several links requires a user viewing the page with a screen reader to scout out each link to determine the context before selecting one. However, replacing \"click here\" with something more descriptive solves this problem. For example, \"download this document in ASCII text,\" \"view the full version in HTML,\" or \"to view the text version, click here.\"\n\nRecommendations for user agent (browser) designers\n\nProvide a feature that displays either:\n\nA list of links\n\nA list of links which each link followed by its surrounding text.\n\nFor example, click here; To find out more about how the west was won, click here.\n\nOR A list of headers and links\n\n12.2 Identifying links within a sentence\n\nIssue: It is difficult for users of screen readers to identify links included within a sentence since there are no aural differences of how links are read versus other words. Visual users are able to detect links by color coding and underlining.\n\nRecommendations for user agent (browser) designers and/or assistive technology designers\n\nProvide an option to insert a character(s) or a blank line before each link or associate an aural cue with links.\n\nCharacters are one way of associating an aural cue with links, since it will be spoken by those using screen readers. However, this cue usually does not help determine where the link ends whereas a sustained background sound that is played during the reading of a link or a change in the pitch of the voice would.\n\n12.3 Several links read as one\n\nIssue: Currently, lists of links are sometimes read as one link by most current screen readers (which do not interpret the HTML). Sometimes this happens even when the links are on different lines. The user is unable to position the mouse cursor on any of the specific links, making the links inaccessible.\n\nRecommendations for page authors\n\n[Recommended]\n\nPlace non-link, printable characters (surrounded by spaces) between links which occur consecutively to keep separate links from being read as one by screen readers. [Interim]\n\nRecommendations for assistive technology designers\n\nLinks should be spoken separately with pauses in between.\n\n12.4 Methods for Linking to alternate page s\n\nIssue : Oftentimes an alternate version of a page is available as a link from the current page. Alternate pages can be text-only versions of a page, the page translated to another language, or a more succinct presentation of the information.\n\nWhen creating text-only versions of pages, there are several issues to be aware of:\n\nThe text-only page might link back to a graphic-intensive page, which has an alternative link for a text-only page. This hopping back and forth can dramatically increase the time required to navigate the site. Especially if the link for the text-only version is buried in the page.\n\nIt is easy to see that creating text-only versions of every page on a site could double the number of pages that need to be maintained. Three methods for generating and maintaining text-only pages are described in the section Methods to create alternate pages found in Appendix A. Some of these methods generate text-only pages automatically.\n\nMethods for page authors\n\nProvide a visible link at the top of each page to allow a user to move back and forth between the graphic and alternate versions of the page, if they wish to do so. [Interim]\n\nProvide the appropriate information in the header of the page so that the browser loads it automatically. [New] If the user has set his or her default media type to \"speech\" this will load the alternate page automatically:\n\n<HEAD><LINK title=\"Text-only version\" rel=\"alternate\" href=\"text_only.html\" media=\"speech\"></HEAD>\n\nRecommendations for user agent (browser) designers\n\nAllow users to select a default media type (screen, print, projection, braille, or speech).\n\nIf a page is specifically created for their selected default media type, load the appropriate page automatically.\n\n12.5 Use of graphics decreases cognitive load and increases target area\n\nIssue: For web-surfers with some degree of motion impairment, selecting text links can be difficult because of the small target area and dexterity needed to select them with a mouse pointer. Therefore they, along with people with cognitive disabilities and people who cannot read well, often find that photos and graphics/icons make it easier to navigate and comprehend a site. While the use of graphics poses problems for users with visual disabilities, it may make it more obvious for someone else who has difficult reading and/or understanding the content. To learn more about how to make images accessible to people with visual disabilities, see the section Viewing and interacting with images and image maps. Keep in mind that the design of effective icons is not a trivial task due to the variety of possible interpretations by people based on personal differences.\n\nRecommendations for page authors\n\nDesign Trick: Provide hyperlinks that use enlarged font sizes or graphical buttons to make the target area larger.\n\nHowever, make sure that you follow the guidelines for style sheets and alt-text so that you do not cause problems for people with visual disabilities.\n\nRecommendations for user agent (browser) designers\n\nSupport \"tabbing\" between links.\n\nAllow the user to select font color and size of text links.\n\nConsider creating a bookmark function that allows a person to associate a picture with each bookmark.\n\nSelecting a favorite page then becomes a matter of locating the image they associate with it.\n\n12.6 Page abstracts\n\nIssue: It seems that it would be beneficial if metadata information could be stored with a link or retrieved separate from the entire page to provide a better picture of where the user is headed. Some information that might be helpful is a description of where the page going to, size of the page, purpose of the link, author, etc. Or, the creation of a page \"abstract\" that could be retrieved and viewed before the whole page was loaded.\n\nRecommendations\n\nThere are no recommendations at this time. Further exploration is needed and solutions solicited.\n\n12.7 Keyboard shortcuts for links\n\nDesign Trick: Provide keyboard shortcuts for links.\n\nThe \"accesskey \" attribute of <LABEL>, <A>, <CAPTION> and <LEGEND> allows an author to associate a keyboard shortcut with the phrase. For example, when associated with a link, it takes the user to the associated document. <A accesskey=\"C\" href=\"doc.html\">Press C to go to XYZ page</A>\n\n13. Objects , Images, Audio, and Applets\n\nMultimedia in HTML documents\n\n13.1 Introduction to the issues\n\n13.2 In general\n\n13.3 Viewing and interacting with static images and image maps\n\n13.4 Viewing and interacting with applets\n\n13.5 Audio and video\n\n13.1 Introduction to the issues\n\nMultimedia provides the greatest number of barriers for the greatest number of people for the following reasons:\n\nSome users are unable to see images, movies or other types of animations CLEARLY either because they are colorblind, they have low vision, or they do not have a high resolution display.\n\nSome users are unable to view images, movies or other types of animations AT ALL either because their eyes are currently busy (they are driving), they do not have the proper software, have text-based software, have a slow data connection, are blind or very low vision, or they are accessing the information via phone interface.\n\nSome users are unable to hear movie sound tracks, audio clips or other types of audio information because they work in a loud environment (and the computer noises are masked by the environmental noises), work in a quiet environment (and need to turn the speakers off so as not to disturb others), do not have the proper software, hardware or enough memory to run the software, have a slow data connection, or are deaf or hard of hearing.\n\n13.2 Gen eral Recommendations\n\nThe following recommendations apply to images, sounds and multimedia.\n\nElements affected: OBJECT, IMG, APPLET, A\n\nRecommendations for page authors\n\nBackground patterns and color should contrast well with the lettering to maintain readability (background refers to both backgrounds of pages and backgrounds of images).\n\nAvoid using similar hues together. For example, do not place blue-green lettering on a blue background. Dark shades of blue, violet, purple or black lettering on backgrounds of light shades of blue-green, green, yellow or orange are easiest to read. For more information on color contrast for people with low vision and color deficiencies contact The Lighthouse, Inc. for their pamphlet Color Contrast and Partial Sight [(800) 334-5497] which is also available on the web at http://www.lighthouse.org/1lh32a.html.\n\nDesign graphics with just 16 colors so that colors do not change across platforms, i.e. it might be unreadable on a different platform.\n\nMake color coding redundant with other means of conveying information.\n\nFor example, distinguish glossary words with the color red as well as with emphasis.\n\nFor troublesome pages, link to an alternative page\n\nWhenever you have trouble making a page directly accessible, provide a second version of the page which replaces any graphics, applets, movies or audio with text descriptions or transcripts and replaces buttons and other active areas with text links. There are several ways to do this which are described in more detail in Methods for linking to alternate pages (in Appendix B).\n\nRecommendations for user agent (browser) designers\n\nAllow users to designate whether they want to download and view multimedia and applets.\n\nDisplay the alternate media associated with the element if the user selects not to view multimedia .\n\nThis includes:\n\nAlternate text for images.\n\nAlternate text for each link of an image map (client side).\n\nAlternate renderings for objects included with the OBJECT element. An HTML example is in the section on applets. Then an applet, either a movie, a still image or text description could be loaded based on the user’s preferences.\n\nTranscripts for movies.\n\nTranscripts or descriptions of audio clips.\n\nSuggestions for users\n\nIf you have a slow modem connection (14400 kbps or less), are unable to see, or do not care to see multimedia or applets, your browser should provide a way to select whether or not you wish to download this information. Lynx and other text-based browsers do not support graphics and you will not need to configure anything.\n\n13.3 I mages and image maps\n\nElements affected: OBJECT, IMG\n\nRecommendations for page authors\n\n[Required]\n\nProvide alternative text for all images and image maps.\n\nAll images should have alternative text that describes the function of the graphic. Examples of possible alt-text are, \"Section Title: Banana Products,\" \"Graph of population versus age,\" or \"Search Button.\" Possible solution strategies include:\n\nThe \"alt\" attribute is mandatory for the <AREA> and <IMG> elements, but should also be used for <APPLET>, and <INPUT>. For example, <IMG SRC=\"logo.gif\" alt=\"XYZ Logo\">.\n\n[New] If <OBJECT> is used, text can be provided in the body of the <OBJECT> element. For example, <OBJECT data=\"logo.gif\"> XYZ Logo </OBJECT>\n\nSeveral tips and tricks concerning alternative text are in the appendix.\n\n[Required]\n\nProvide a link to a longer description (i.e., via D-link, or longdesc, etc.) for graphics that present important information (especially charts, tables and diagrams). (Include internal text in image file formats that support it).\n\nAlternative text descriptions (recommendation #1) are usually short and define the basic purpose of graphic elements. To describe the graphic itself in more detail a link to a longer description should be provided.\n\n[Interim] Provide a D-link next to the graphic that links to a page or a phrase at the bottom of the page with a longer description of the graphic. For example, <IMG SRC=\"97sales.gif\" alt=\"Sales for 1997\"><A HREF=\"sales.html\">D</A>\n\n[New] Use the \"longdesc\" attribute of the <IMG> element or provide text within the body of the <OBJECT > element. For example, <IMG SRC=\"97sales.gif\" alt=\"Sales for 1997\" longdesc=\"sales.html\">\n\nThe description found on the page \"97sales.html\" might read something like: \"This chart shows how many widgets we sold in each of our four regions, North, South, East and West. In the North we sold 2,000 units. In the South 5,000 units. In the East 6,000 units and in the West 8,000 units.\"\n\nWGBH pioneered the practice of placing a capital \"D\" text link next to pictures or graphics which link to a longer description of the graphic. Since the letter \"D\" is not a very descriptive phrase for a link, if you use this method you should include an explanation of what it represents and why. Another option is to use a more descriptive text link, such as \"or a description of xxx.\"\n\n[Required]\n\nUse client-side (instead of server-side) image maps.\n\nClient-side image maps are similar to server-side image maps except that the information for all of the \"hot-spots\" within the image are sent to the browser along with the image map picture. Descriptions provided with the URLs can be displayed rather than the graphic. If server-side image maps can not be avoided, see the 5th strategy of the next recommendation.\n\n[Required]\n\nProvide a description for each link in an image map.\n\nDepending on how you’ve created your image map you have several possibilities:\n\nUse the \"alt\" attribute of the <AREA> element (with the IMAGE, MAP and AREA elements)\n\n<IMG src=\"welcome.gif\" alt=\"Image map of areas in the library\" usemap=\"#map1\">\n\n<MAP name=\"map1\">\n\n<AREA coords=\"0,0,30,30\" href=\"reference.html\" alt=\"Reference\">\n\n<AREA coords=\"34,34,100,100\" href=\"media.html\" alt=\"Audio Visual lab\">\n\n</MAP>\n\n[New] Use the \"alt\" attribute of the <AREA> element (with the OBJECT, MAP and AREA elements)\n\n<OBJECT data=\"welcome.gif\" usemap=\"#map1\">\n\nalt=\"Image map of areas in the library\" </OBJECT>\n\n<MAP name=\"map1\">\n\n<AREA coords=\"0,0,30,30\" href=\"reference.html\" alt=\"Reference\">\n\n<AREA coords=\"34,34,100,100\" href=\"media.html\" alt=\"Audio Visual lab\">\n\n</MAP>\n\n[New] Use the \"title\" attribute of the <A> element (with the OBJECT and SHAPES elements)\n\n<OBJECT data=\"welcome.gif\" shapes>\n\nAreas in the library\n\n<A coord=\"0,0,30,30\" href=\"reference.html\" title=\"Reference\">Reference</A>\n\n<A coords=\"34,34,100,100\" href=\"media.html\" title=\"Audio Visual lab\">Audio Visual Lab</A>\n\n</OBJECT>\n\n[New] Create a descriptive paragraph within the <OBJECT> element that includes the links (using the OBJECT and A elements)\n\n<OBJECT data=\"welcome.gif\" shapes>\n\nThere are several areas in the library including <A coord=\"0,0,30,30\" href=\"reference.html\">Reference</A> and <A coords=\"34,34,100,100\" href=\"media.html\"> the Audio Visual Lab</A>. More text can follow or precede.\n\n</OBJECT>\n\nIf a server-side image map has to be used, provide a list of the image map choices (links) as text links on the same page, on an alternative page that is accessible, or within the body of the <OBJECT> element (similar to method #4 above). To avoid confusion, if providing the list of links following the image map, you should indicate within the alt-text of the image map that this is so.\n\n[Recommended]\n\nProvide descriptive titles for all images used as links.\n\nUse the \"title\" attribute of the <A> element to provide more information about images used as links (usually a graphical button). For example, <a href=\"home.html\" title=\"XYZ company home page\"><IMG SRC=\"logo.gif\" alt=\"XYZ logo\"></A>\n\nRecommendations for user agent (browser) designers\n\nCalculate the alt-text for the IMG element if not provided by the author.\n\nWhen an author does not set the alt attribute for the IMG element, user agents should supply the alternate text, calculated in the following order:\n\nIf the title has been specified, its value should be used as alternate text.\n\nOtherwise, if HTTP headers provide title information when the included object is retrieved, this information should be used as alternate text.\n\nOtherwise, if the included object contains text fields (e.g., Portable Network Graphics (PNG) images contain some text fields), information extracted from the text fields should be used as alternate text. Since user agents may have to retrieve an entire object first in order to extract textual information, user agents may adopt more economical approaches (e.g., content negotiation).\n\nOtherwise, in the absence of other information, user agents should use the file name (minus the extension) as alternate text.\n\nAlt-text that is displayed for image links should have the same font attributes as text links.\n\nIf an image is a link to another page then the alt-text should be coded just as other text links. The most common coding is blue and underlined. This will ensure that users will be able to distinguish between decorative or illustrative graphics and those that are links.\n\nLoad and display long descriptions of graphics on command.\n\nWhile a user is on a graphic, he or she should be able to issue a command to pull up the long description of the graphic. Especially as the longdesc attribute of IMG is supported or descriptions are included within the graphic file. The description should be displayed surrounded by square brackets in place of the graphic. If no description has been specified for a graphic, the user should be notified of the error.\n\n13.4 Applets\n\nSince there are several full-fledged programming languages with accessibility issues of their own, we leave the discussion for how to make them accessible to other documents. Trace recently completed a report commissioned by Sun to identify the accessibility issues with Java. For more information on what JavaSoft is doing about accessibility issues within Java, visit their Java Accessibility site at http://www.sun.com/tech/access/.\n\nHowever, not all browsers support applets and some users do not want to download them because of bandwidth or platform constraints. Newer browsers support a preferences flag that allows the user to indicate if they wish to view applets or not.\n\nRecommendations for page authors\n\n[Required]\n\nProvide alternative text for all applets.\n\n[Interim] <APPLET code=\"Press.class\" width=\"500\" height=\"500\" alt=\"Java applet: how temperature affects pressure.\">\n\nAs temperature increases the molecules in the balloon...\n\n</APPLET>\n\n[New] <OBJECT classid=\"Press.class\" width=\"500\" height=\"500\" title=\"Java applet: how temperature affects pressure.\">\n\nAs temperature increases the molecules in the balloon...\n\n</OBJECT>\n\n[Required]\n\nProvide descriptions of applets that present important information.\n\n[Interim] Use the <APPLET> element to provide a description (see the previous example). Complete text descriptions could be substituted for the \"Hello World!\" message.\n\n[New] Use the <OBJECT> element (see the previous example). Complete text descriptions and other accessible objects (see recommendation #5) could be substituted for the \"Hello World!\" message.\n\n[Required]\n\nIf an applet gathers information, provide an alternative mechanism to gather the information.\n\nAs with the previous two recommendations, an alternative such as a user-input form, e-mail address, phone or fax number could be provided within the alternative text of either the <APPLET> or <OBJECT> elements.\n\n[Required]\n\nIf an applet requires a user interaction (e.g. the ability to manipulate a physics experiment) that can not be duplicated in an alternative format, make the applet directly accessible.\n\nThe guidelines for accomplishing this are included within the Java Accessibility project, and are not yet complete.\n\n[Recommended]\n\nFor applets embedded with the <OBJECT> element, provide alternative, accessible presentations of information within the <OBJECT> element body. [New]\n\nIn HTML4.0 the <APPLET> element has been replaced by the <OBJECT> element. The <OBJECT> element supports nesting of objects for alternative renderings. For example:\n\n<!-- First, try the pressure applet -->\n\n<OBJECT title=\"How temperature affects pressure\" classid=\"Press.class\" width=\"500\" height=\"500\">\n\n<!-- Else, try the MPEG video -->\n\n<OBJECT data=\"pressure.mpeg\" type=\"application/mpeg\">\n\n<!-- Else, try the GIF image -->\n\n<OBJECT data=\"Pressure.gif\">\n\n<!-- Else render the description and an alternative exercise -->\n\nAs temperature increases the molecules in the balloon...\n\n</OBJECT></OBJECT></OBJECT>\n\n[Recommended]\n\nMake applets keyboard operable (using standard conventions).\n\nRecommendations for user agent (browser) designers\n\nRender alternatives based on user preferences.\n\nCalculate the alt-text for the APPLET element if not provided by the author, in the same way as suggested for IMG.\n\n13.5 Audio and video\n\nBeyond the accessibility issues, there are other practical issues that support following these guidelines. For example, users may want to print a transcript of the dialogue in a movie, search for a certain section of an audio clip via keywords, or search for a particular video clip using a search engine such as a web crawler. Associated captions and transcripts makes these scenarios possible. If descriptions are provided in text mode as well, you can index and search for any video information which is contained in the descriptions.\n\nRecommendations for page authors\n\n[Required]\n\nProvide a text transcript file for all information presented auditorally.\n\nA transcript is a textual representation of all dialogue, and audio information.\n\n[Required]\n\nProvide descriptions of all video information in an auditory form.\n\nAudio descriptions of video action provide additional information during breaks in the dialogue of a movie about the actions that are occurring.\n\n[Required]\n\nProvide a separate text transcript file of all video descriptions.\n\nA text transcript of video action provides the same information as in recommendation #2 but in a format accessible to those with no audio access.\n\n[Required]\n\nSynchronize transcript and video description information with audio/video information, either directly or via a synchronization file.\n\nSome media formats such as QuickTime (for Macintosh) movies provide alternative tracks that can be used to add captioning and video descriptions.\n\n[Interim] Until the format you are using supports alternative tracks, two versions of the movie could be made available, one with captions (and descriptive video) and one without.\n\nExample – QuickTime (for Macintosh): With QuickTime you can add as many audio or video tracks as you wish. Users can then select as few or as many of the tracks as desired when they view the QuickTime clip. Tracks could include (in addition to the regular video and audio tracks):\n\nA text track with captions\n\nAn audio track with video descriptions added\n\nAn additional video track with American Sign Language translation\n\nAdditional text or audio or video tracks spoken or signed in other languages\n\nFor more information on captioning and descriptions visit: http://www.boston.com/wgbh/pages/ncam/currentprojects/captionedmovies.html\n\n[New] Future technologies will allow separate audio/visual files to be combined with text files via a synchronization file to create captioned audio and movies. It will also allow the user to choose from multiple sets of captions to match their reading skills. For more information see the SMIL specification.\n\nTBD\n\nProvide visual notification of sounds that are played automatically.\n\nThis can be provided in the form of a text phrase on the page that links to a text transcript or description of the sound file. The link to the transcript should appear in a highly visible location like the top of the page. However, if a script is automatically loading a sound, it should also be able to automatically load a visual indication that the sound is currently being played and provide a description or transcript of the sound. The controversy surrounding this recommendation is that the browser should load the semantic information instead of the auditory if the user preferences are set to do so. However, how do we resolve this so it will work with today’s browsers.\n\nDesign Trick: Use the \"TITLE\" attribute to provide a brief description within the link to very short sounds.\n\nFor example, <a href=\"mittens.wav\" title=\"meow\"></a>\n\nRecommendations for user agent (browser) designers\n\nSupport time synchronized text (caption) files.\n\nThis implies providing the support to link three files (the audio, the text transcript and the text synchronization files).\n\nProvide a command to load and display the text transcription/description file.\n\nVisually display aural alerts.\n\nIf the device has a ShowSounds/Captions feature then this indicator could be tied to the ShowSounds/Caption Flag maintained by the system.\n\nDisplay the title attribute of links.\n\n14. Style Sheets\n\nControlling the presentation of an HTML document\n\n14.1 Style sheets solve several issues, but only if users can override\n\nWhereas most of the other areas present issues that create problems, style sheets is one of the few areas where it generates more solutions that problems. This assumes that the current specification of HTML 4.0 is implemented as discussed in the most recent draft.\n\nElements affected: STYLE and its attribute\n\nRecommendations for page authors\n\n[Required]\n\nUse style sheets to position text and objects within pages, rather than physically marking up text and graphics (e.g. <B> or the \"align\" attribute of <IMG>) (However, continue to use logical elements such as STRONG, H1, etc. to provide semantic coding within the body of the page) [New]\n\nUse style sheets rather than:\n\nconverting text to images or alternative text file formats (such as PDF)\n\nusing tables or PRE elements to layout pages\n\nusing proprietary extensions\n\nusing \"invisible\" images to layout pages\n\nwriting a program to accomplish something that is possible with style sheets or plain HTML\n\nUse style sheets to:\n\nposition text and graphics\n\ncreate drop caps, subscripts and superscripts\n\navoid uncommon typographic characters or constructions (such as ASCII art, etc.)\n\ncreate alternative versions of a page. Whether or not you anticipate your page being viewed on alternative media, such as a PDA, a speech-based browser or paper (printed), it is a good idea to create style sheets for alternative media to facilitate readability. Example media types are screen, print, projection, braille, and speech.\n\nhighlight sections of a document with font size, formatting or color\n\n[Required]\n\nEnsure that your pages are readable and usable without style sheets (e.g. when the browser does not support or the user prefers not to load). Since style sheets are a new phenomenon, older browsers will not support them and it will take a while for new browsers to support them in a standard way.\n\nRecommendations for user agent (browser) designers\n\nAllow users to select which types of media style sheets they want to use. Allow users to override page author settings with their own style sheets.\n\nRecommendations for assistive technology designers\n\nPerhaps one of the best developments for AT designers will be style sheets that work best with their products, especially aural style sheets.\n\nSuggestions for users\n\nIf you do not want to create your own style sheet, but would like to ensure that pages will display appropriately on your viewing device, you can retrieve a style sheet and set it as your default from one of the emerging libraries of style sheets.\n\n15. Alignment, font styles, and horizontal rules\n\n15.1 Providing additional cues with horizontal rules\n\nIssue: Horizontal rules (lines) visually indicate changes in context or highlight a section of text. For example, in this document we use horizontal rules between chapters and sections. Since screen readers do not usually pronounce anything for horizontal rules these cues changes in context go unnoticed. In this document we try to give as many cues to the reader as possible. One strategy is to use numbers to mark each chapter and associated section. Therefore when you read 16.4, then come across 17 it should be easy to interpret that you have just started a new chapter. To provide equal \"warning\" to the non-visual user we use the title attribute of the HR element.\n\nElement affected: HR\n\nRecommendations for page authors\n\nDesign Trick: Use the \"title\" attribute on horizontal rules <hr title=\"new section\">\n\n16. Frames\n\nMulti-view presentation of documents\n\n16.1 Misinterpretation by screen readers and small screen users\n\nIssue: Today’s screen readers often view each frame as either a separate window or read across several of them as they do tables (line by line across all frames). Other times, screen readers get stuck in one frame. Also, when multiple frames are viewed on small monitors it is often difficult or impossible to see all of the data.\n\nElements affected: FRAME, FRAMESET and NOFRAME\n\nRecommendations for page authors\n\n[Required]\n\nProvide a <NOFRAME> option for each <FRAMESET>.\n\nWhen using the <NOFRAME> option it is easiest to include all essential information on the bottom of the main frame. The following example is taken from the HTML 4.0 specification.\n\nIf the user reads \"top.html\" and the user agent is not displaying frames the user won’t see anything since we do not have a BODY in \"top.html\". If we insert \"table_of_contents.html\" and \"main.html\" directly in a NOFRAMES element in the FRAMESET, we solve the problem of associating the two documents, but we may cause user agents that support frames to retrieve the same data twice: one copy associated with the FRAMESET and one copy inserted in the NOFRAMES. It is more economical to include the table of contents at the top of \"main.html\" within a NOFRAMES element:\n\n<!-- This is main.html -->\n\n<HTML><BODY>\n\n<NOFRAMES>\n\n...the table of contents here...\n\n</NOFRAMES>\n\n...the rest of the document...\n\n</BODY></HTML>\n\nand to link to \"main.html\" from \"top.html\" for the case when frames are not displayed:\n\n<!-- This is top.html -->\n\n<HTML>\n\n<FRAMESET cols=\"50%, 50%\" title=\"Our big document\">\n\n<FRAME src=\"main.html\" title=\"Where it's all at\">\n\n<FRAME src=\"table_of_contents.html\" title=\"Table of Contents\">\n\n<NOFRAMES>\n\nHere's the <A href=\"main.html\">for a non-frames version.</A>\n\n</NOFRAMES>\n\n</FRAMESET>\n\n</HTML>\n\n[Recommended]\n\nTitle each frame. [TOMORROW]\n\nNotice the use of \"TITLE\" in the previous example. People accesing the page aurally will more easily keep track of how many frames exist and which is the current one.\n\n[Recommended]\n\nDescribe the layout and purpose of frames and how multiple frames relate to each other. [New] Use the \"longdesc\" attribute on <FRAME> and <IFRAME> elements to link to a page with descriptions.\n\nRecommendations for user agent (browser) designers\n\nAllow the user to select whether they want to load frames or not. If they do not, use the NOFRAME option provided by the page author or the first frame defined as default.\n\nRecommendations for assistive technology designers\n\nScreen readers should be able to navigate each frame as a separate window that is identified uniquely by the TITLE of each frame.\n\nSuggestions for users\n\nIf you don’t want to view frames, select the \"NOFRAME\" in your user agent (TOMORROW), or use a text-based like Lynx which automatically requests the NOFRAME (TODAY).\n\n17. Forms\n\nUser-input Forms: Text Fields, Buttons, Menus, and more\n\n17.1 Navigation and manipulation\n\n17.2 Graphical buttons\n\n17.1 Navigation and manipulation\n\nIssue: Users who do not use a mouse (such as screen reader users) or that do not use a mouse well (such as users with mobility disabilities) are not always able to navigate into form elements. Often, once they are able to focus on the form element they are unable to manipulate it.\n\nElements affected: A, AREA, OBJECT, INPUT, SELECT, TEXTAREA, and BUTTON.\n\nRecommendations for page authors\n\n[Required]\n\nDo not use image maps to create graphical \"submit\" buttons.\n\n[Required]\n\nExplicitly associate labels with their control. [New]\n\nFor example:\n\n<FORM action=\"http://somesite.com/adduser\" method=\"post\"\n\n<FIELDSET>\n\n<LEGEND align=\"top\">Personal information</LEGEND>\n\n<LABEL for=\"firstname\">First name: </LABEL>\n\n<INPUT type=\"text\" id=\"firstname\" tabindex=\"1\">\n\n<LABEL for=\"lastname\">Last name: </LABEL>\n\n<INPUT type=\"text\" id=\"lastname\" tabindex=\"2\">\n\n...more personal information...\n\n</FIELDSET>\n\n<FIELDSET>\n\n<LEGEND align=\"top\">Medical History</LEGEND>\n\n...medical history information...\n\n</FIELDSET>\n\n</FORM>\n\n[Required]\n\nProvide alternative text for images used as \"submit\" buttons.\n\nFor example, <INPUT type=\"image\" name=\"submit\" src=\"button.gif\" alt=\"Submit\">\n\n[Recommended]\n\nSpecify a logical tab order with \"tabindex\".[New]\n\nFor example, (taken from the HTML 4.0 draft)\n\n<INPUT tabindex=\"1\" type=\"text\" name=\"field1\">\n\n<INPUT tabindex=\"2\" type=\"text\" name=\"field2\">\n\n<INPUT tabindex=\"3\" type=\"submit\" name=\"submit\">\n\n[Recommended]\n\nGroup related controls with the <FIELDSET> element.[New]\n\nsee the example for #2 – \"Explicitly associate labels with their control.\"\n\n[Recommended]\n\nLabel a group of controls with the <LEGEND> element. [New]\n\nsee the example for #2 – \"Explicitly associate labels with their control.\"\n\n[Recommended]\n\nFor long lists of selections, group items into a hierarchy. [New] In the near future, browsers will display grouped lists with expanding and collapsing levels of detail. To group items, use <OPTGROUP> elements with a <SELECT> element, such as:\n\n<FORM action=\"http://somesite.com/prog/someprog\" method=\"post\">\n\n<P><SELECT name=\"ComOS\">\n\n<OPTGROUP label=\"Comm Servers\">\n\n<OPTGROUP label=\"PortMaster 3\">\n\n<OPTION label=\"3.7.1\" value=\"pm3_3.7.1\">PortMaster 3 with ComOS 3.7.1\n\n<OPTION label=\"3.7\" value=\"pm3_3.7\">PortMaster 3 with ComOS 3.7\n\n<OPTION label=\"3.5\" value=\"pm3_3.5\">PortMaster 3 with ComOS 3.5\n\n</OPTGROUP>\n\n<OPTGROUP label=\"PortMaster 2\">\n\n<OPTION label=\"3.7\" value=\"pm2_3.7\">PortMaster 2 with ComOS 3.7\n\n<OPTION label=\"3.5\" value=\"pm2_3.5\">PortMaster 2 with ComOS 3.5\n\n</OPTGROUP>\n\n</OPTGROUP>\n\n<OPTGROUP label=\"Routers\">\n\n<OPTGROUP label=\"IRX\">\n\n<OPTION label=\"3.7R\" value=\"IRX_3.7R\">IRX with ComOS 3.7R\n\n<OPTION label=\"3.5R\" value=\"IRX_3.5R\">IRX with ComOS 3.5R\n\n</OPTGROUP>\n\n</OPTGROUP>\n\n</SELECT>\n\n</FORM>\n\n[Recommended]\n\nInclude default, place-holding characters in edit boxes and text areas. [Interim]\n\n[Recommended]\n\nInclude a phone number, e-mail address, postal address or fax number for submitting information.\n\n[Recommended]\n\nCreate keyboard shortcuts for form elements. [New]\n\nThis example assigns \"U\" as the access key. Typing \"U\" gives focus to the label which gives focus to the control then the user can input text.\n\n<FORM action=\"submit\" method=\"post\">\n\n<label for=\"user\" accesskey=\"U\">user name</label>\n\n<input type=\"text\" name=\"user\">\n\n</FORM>\n\nRecommendations for user agent (browser) designers\n\nSupport the accesskey attribute and FIELDSET and LEGEND elements included in the HTML 4.0 specification.\n\nAllow users to navigate to and manipulate all form elements via the keyboard.\n\nCalculate the alt-text for the INPUT element if not provided by the author.\n\nWhen an author does not set the alt attribute for the INPUT element, user agents should supply the alternate text, calculated in the following order:\n\nIf the title has been specified, its value should be used as alternate text.\n\nOtherwise, if the name has been specified, its value should be used as alternate text.\n\nOtherwise (submit and reset buttons), the value of the type attribute should be used as alternate text\n\nRead labels with their associated objects.\n\n17.2 Graphical buttons\n\nIssue: Forms can include images that act as buttons or image maps to gather input. See the section that discusses graphical links.\n\nRecommendations for page authors\n\n[Required]\n\nDo not use image maps to create graphical \"submit\" buttons.\n\n[Required]\n\nProvide alternative text for images used as \"submit\" buttons.\n\nFor example, <INPUT type=\"image\" name=\"submit\" src=\"button.gif\" alt=\"Submit\">\n\n18. Scripts\n\nAnimated Documents and Smart Forms\n\n18.1 Introduction to the issues\n\n18.1.1 Action occurring away from user focus\n\n18.1.2 Actions executed during load of page\n\n18.1.3 Automatic update of page (\"push\")\n\n18.1.4 Summary of issues\n\n18.1 Introduction to the issues\n\nA client-side script is a program that may accompany an HTML document or be embedded directly in it. The program executes on the client’s machine when the document loads, or at some other time such as when a link is activated. HTML’s support for scripts is independent of the scripting language.\n\nScripts offer authors a means to extend HTML documents in highly active and interactive ways. For example:\n\nScripts may be evaluated as a document loads to modify the contents of the document dynamically.\n\nScripts may accompany a form to process input as it is entered. Designers may dynamically fill out parts of a form based on the values of other fields. They may also ensure that input data conforms to predetermined ranges of values, that fields are mutually consistent, etc.\n\nScripts may be triggered by events that affect the document, such as loading, unloading, element focus, mouse movement, etc.\n\nScripts may be linked to form controls (e.g., buttons) to produce graphical user interface elements (HTML 4.0 draft).\n\n18.1.1 Action occurring away from user focus\n\nIssue: \"Intrinsic events\" are events generated by the elements on an HTML page that can be used to trigger scripts that accompany a page. These scripts are often used to cause action away from the user focus. Where the user’s focus is limited because they are accessing the page aurally or only accessing a portion of the page (via a PDA or screen magnification), these events may go unnoticed. Intrinsic events are: onfocus, onblur, onchange, onclick, ondblclick, onmousedown, onmouseup, onmouseover, onmousemove, onmouseout, onkeypress, onkeydown, onkeyup.\n\n18.1.2 Actions executed during load of page\n\nIssue: There are two types of scripts: those that are execute in conjunction with an intrinsic event (just discussed) and those executed during loading or immediately after the page is loaded. This includes audio greetings that are played upon opening a page. For this example, if valuable information about how to navigate the site is exclusively delivered by audio, people who are unable to hear the greeting will miss out on the instructions.\n\n18.1.3 Automatic update of page (\"push\")\n\nIssue : Where an intrinsic event or an allotted passage of time causes another page to be loaded or more information to be displayed, a user who has a limited focus may not realize new information has been displayed. For example, if they are reading a page of basketball scores line by line with a screen reader, by the time they have read one score of one game, the page may have reloaded a different set of scores. In this case they would hear one score for each team for two different games. Not all users are able to interact with animations or dynamically changing pages either because they are not able to position and activate the mouse quickly enough, or do not have the visual information to realize that the page is changing.\n\n18.1.4 Summary of issues\n\nWhere the user’s focus is limited because they are accessing the page aurally or only accessing a portion of the page (via a PDA or screen magnification), events occurring away from the center of the user’s focus may go unnoticed.\n\nActions executed during loading or immediately after the page is loaded may go unnoticed.\n\nWhere an intrinsic event or an allotted passage of time causes another page to be loaded or more information to be displayed, a user with a limited focus may not realize new information has been displayed.\n\nNot all users are able to interact with animations or dynamically changing pages either because they are not quick enough, do not have the visual information to realize that the page is changing, or do not have the agility to precisely select a moving image.\n\nElements affected: almost every element generates at least one of the intrinsic events\n\nRecommendations for page authors\n\n[Required]\n\nProvide a <NOSCRIPT> option for all scripts.\n\nFor example:\n\n<SCRIPT type=\"text/tcl\">\n\n...some Tcl script to show a billboard of sports scores...\n\n</SCRIPT>\n\n<NOSCRIPT>\n\n<P> To access today's scores <A href=\"scores.html\">visit our text-only version.</A>\n\n</NOSCRIPT>\n\n[Required]\n\nProvide a mechanism for the user to freeze any moving or blinking text.\n\nMore exploration is needed in this area. Please stay tuned.\n\nRecommendations for user agent (browser) designers\n\nProvide the ability to pause \"pushes\" until the user is ready for them.\n\nProvide information in the status line to let users know that the page is updating or changing.\n\nProvide the ability to break out the text of an animation, banner or etc. and present it as static text.\n\n19. [Place holder for \"SGML reference information for HTML\"]\n\n20. [Place holder for \"SGML Declaration of HTML 4.0\"]\n\n21. [Place holder for \"Document Type Definition’]\n\n22. [Place holder for \"Transitional Document Type Definition’]\n\n23. [Place holder for \"Frameset Document Type Definition\"]\n\n24. [Place holder for \"Character entity references in HTML 4.0\"]\n\n25. Good Web Site Design Practices\n\nNow that each individual page is accessible, there are few things to consider about your site as a whole.\n\nPage layout is consistent but pages or areas do not look identical.\n\nFor example, navigation bars should be located in the same place on every page.\n\nA clear, consistent navigation structure is used.\n\nYou should always be able to easily navigate to all documents which immediately relate, but you should also always be able to get any other document in the infrastructure with a minimum of fuss. Always provide access to the original table of contents, or its equivalent. This is especially important when others create links to documents in your site that are not necessarily main entry points. This will prevent readers from finding themselves in the middle of what is obviously a larger document, but without any means of finding additional information.\n\nNavigation bars provide easy access to the navigation structure.\n\nGraphical aids are useful for some persons with learning or intellectual disabilities. The button bar can be individual .GIF files or an image map. BUT don’t forget to provide alternatives for users who cannot view graphics. It is helpful to keep the same buttons and the same location on every page.\n\nInstructions are provided to describe the general layout of the site, the access features used, and how to use them.\n\nFor example, if you use D-links describe what information the user can expect to find when following D-links.\n\nA site map is available.\n\nPeople who have difficulty visualizing the structure of information can be helped by a site map, a visualization of the structure of the site. In the future, perhaps user agents will update the view of the site map with the path of navigation and the location of the current page.\n\nDifferent types of searches are available for different skill levels and preferences.\n\nMost search facilities require the user to enter keywords for search terms. Users with spelling disabilities and foreign users will have a difficult time finding what they need as long as perfect spellings are required. Search engines could include a spell checker, offering best guess alternatives or offer different types of searches, for example: query-by-example or similarity searches.\n\nNothing within the site prevents keyboard operation.\n\nElements outside of the HTML 4.0 specification (such as <BLINK> and <MARQUEE>) are not used\n\nUse a design tool that supports access features (and does not remove access when you close, or reopen your page using the tool)\n\nTest the site with AT LEAST:\n\na text only browser (such as Lynx)\n\na self-voicing browser (such as PWWebspeak)\n\nMultiple graphic browsers, with:\n\nsounds and graphics loaded,\n\ngraphics not loaded,\n\nsounds not loaded,\n\nno mouse\n\nAppendices\n\nA. Design Notes\n\nAlt-text Tips and Tricks\n\nKeep the wording simple.\n\nSometimes it is easier to describe what the function of the graphic is rather than what it is or looks like.\n\nUsing the height & width attributes for images may cause the alt-text to wrap, which often makes it unreadable by everyone but Lynx users. By decreasing the size of the font, the alt-text can be made to fit in the specified region.\n\nInclude periods at the end of alt-text of images, especially those used as links. Periods cause screen readers to pause and will give an indication of where the alt-text ends and the rest of the text begins. It also ensures that several links in a row will not be strung together into a single link.\n\nGraphical lines can be used to provide extra cues for changes in context, in comparison with the<HR> element. For example, the alt-text for a graphical line might be ‘Section 2: today’s weather.\"\n\nFor critical bullets, use numbers or letters as the alt-text so that they are pronounced.\n\nOne of the first items a user encounters on the site should be a description of what protocol is being used. For example, make it clear that images that have spaces for alt-text or not alt-text at all are not required to grasp the content of the page.\n\nAT&T has created a reference area for creating alt-text available at http://www.att.com/style/alttext.html\n\nMethods to create alternate pages\n\n\"By hand\" Sometimes, a site may only need to create text-only pages for layouts that can not be made accessible. This may involve only a couple of pages.\n\nDatabase-based pages: Create a database-based server that generates HTML pages on demand when the user asks for them. In this manner, pages can be constructed \"on the fly\" either with or without graphics. An example of this is the the CommerceNet server.\n\nFilters This approach is similar to Database-based pages, but involves the use of a filter/translator that would exist on the server as a common gateway interface (cgi). Pages would be constructed using alt-text and alternate text pages where needed and, at the direction of the user, be translated into either graphic or pure text pages on the fly. This method has disadvantages however. Since all pages must be processed on the fly (as with the database method), there may be a decrement in performance unless the filter program is used off-line to create the text versions of the pages in advance. Secondly, this method would only work for pages on the server with the AltPage cgi. Whenever references were made to other pages on other servers, the filter would not work. Image maps on other servers would be a particular problem unless client-side image maps were used. Finally, such a filter would create text versions of pages, but since it would do so by formula, the pages may not be laid out very well or be very easy to interpret. Building access into the page or providing alternate pages which are laid out to make sense in text form (and to provide a text alternative to any Image Maps) as with 1 (By hand) would be much more effective.\n\nStyle sheets\n\nReferences\n\nHTML 4.0 draft Available: http://www.w3.org/TR/WD-html40/cover.html\n\nWorld Wide Web browser access recommendations – Jon Gunderson. Available: http://www.staff.uiuc.edu/~jongund/access-browsers.html\n\nDesigning Accessible HTML Pages — guidelines and overview documents"
    }
}