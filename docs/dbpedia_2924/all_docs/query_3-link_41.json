{
    "id": "dbpedia_2924_3",
    "rank": 41,
    "data": {
        "url": "https://github.com/docker/build-push-action",
        "read_more_link": "",
        "language": "en",
        "title": "action: GitHub Action to build and push Docker images with Buildx",
        "top_image": "https://opengraph.githubassets.com/a92d7f39b4766941702255563cb4ac110f281833e93c96cec1f3c364ee410a1c/docker/build-push-action",
        "meta_img": "https://opengraph.githubassets.com/a92d7f39b4766941702255563cb4ac110f281833e93c96cec1f3c364ee410a1c/docker/build-push-action",
        "images": [
            "https://camo.githubusercontent.com/bfc4008611a9ff832692a3eb0aff9db5ee4064885a605a33b07c17d61d30a485/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f646f636b65722f6275696c642d707573682d616374696f6e2e7376673f7374796c653d666c61742d737175617265",
            "https://camo.githubusercontent.com/22ebc73f9c4b05af1fb143b986269be909375cc4b2d02ec5ce321f8883e61255/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61726b6574706c6163652d6275696c642d2d616e642d2d707573682d2d646f636b65722d2d696d616765732d626c75653f6c6f676f3d676974687562267374796c653d666c61742d737175617265",
            "https://camo.githubusercontent.com/69534bdace80c061cf0c1fc8696dfea7741a08906cd47885ca05021c2ce709b8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f646f636b65722f6275696c642d707573682d616374696f6e2f63692e796d6c3f6272616e63683d6d6173746572266c6162656c3d6369266c6f676f3d676974687562267374796c653d666c61742d737175617265",
            "https://camo.githubusercontent.com/75a3e6ed8c17aafe11f2e218e79ac592b68cd2fafdff174a61321a18aaf478b7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f646f636b65722f6275696c642d707573682d616374696f6e2f746573742e796d6c3f6272616e63683d6d6173746572266c6162656c3d74657374266c6f676f3d676974687562267374796c653d666c61742d737175617265",
            "https://camo.githubusercontent.com/5df893f589c63e27f51fe0598acdb33d40c0b3bc7a51540899ffcdf2ff74f068/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f646f636b65722f6275696c642d707573682d616374696f6e3f6c6f676f3d636f6465636f76267374796c653d666c61742d737175617265",
            "https://github.com/docker/build-push-action/raw/master/.github/build-push-action.png",
            "https://github.com/docker/build-push-action/raw/master/.github/build-push-summary.png",
            "https://avatars.githubusercontent.com/u/29057045?s=64&v=4",
            "https://avatars.githubusercontent.com/u/177229961?s=64&v=4",
            "https://avatars.githubusercontent.com/u/71536409?s=64&v=4",
            "https://avatars.githubusercontent.com/u/86509501?s=64&v=4",
            "https://avatars.githubusercontent.com/u/47853651?s=64&v=4",
            "https://avatars.githubusercontent.com/u/32882900?s=64&v=4",
            "https://avatars.githubusercontent.com/u/28947890?s=64&v=4",
            "https://avatars.githubusercontent.com/u/43166868?s=64&v=4",
            "https://avatars.githubusercontent.com/u/1951866?s=64&v=4",
            "https://avatars.githubusercontent.com/in/29110?s=64&v=4",
            "https://avatars.githubusercontent.com/u/22098752?s=64&v=4",
            "https://avatars.githubusercontent.com/u/585223?s=64&v=4",
            "https://avatars.githubusercontent.com/u/7352848?s=64&v=4",
            "https://avatars.githubusercontent.com/u/5585923?s=64&v=4",
            "https://avatars.githubusercontent.com/u/320064?s=64&v=4",
            "https://avatars.githubusercontent.com/u/375258?s=64&v=4",
            "https://avatars.githubusercontent.com/u/501976?s=64&v=4",
            "https://avatars.githubusercontent.com/u/3060199?s=64&v=4",
            "https://avatars.githubusercontent.com/u/6677170?s=64&v=4",
            "https://avatars.githubusercontent.com/u/7610845?s=64&v=4",
            "https://avatars.githubusercontent.com/u/35727626?s=64&v=4",
            "https://avatars.githubusercontent.com/u/67764432?s=64&v=4"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "GitHub Action to build and push Docker images with Buildx - docker/build-push-action",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/docker/build-push-action",
        "text": "GitHub Action to build and push Docker images with Buildx with full support of the features provided by Moby BuildKit builder toolkit. This includes multi-platform build, secrets, remote cache, etc. and different builder deployment/namespacing options.\n\nUsage\n\nGit context\n\nPath context\n\nExamples\n\nSummaries\n\nCustomizing\n\ninputs\n\noutputs\n\nenvironment variables\n\nTroubleshooting\n\nContributing\n\nIn the examples below we are also using 3 other actions:\n\nsetup-buildx action will create and boot a builder using by default the docker-container driver. This is not required but recommended using it to be able to build multi-platform images, export cache, etc.\n\nsetup-qemu action can be useful if you want to add emulation support with QEMU to be able to build against more platforms.\n\nlogin action will take care to log in against a Docker registry.\n\nBy default, this action uses the Git context, so you don't need to use the actions/checkout action to check out the repository as this will be done directly by BuildKit.\n\nThe git reference will be based on the event that triggered your workflow and will result in the following context: https://github.com/<owner>/<repo>.git#<ref>.\n\nname: ci on: push: jobs: docker: runs-on: ubuntu-latest steps: - name: Set up QEMU uses: docker/setup-qemu-action@v3 - name: Set up Docker Buildx uses: docker/setup-buildx-action@v3 - name: Login to Docker Hub uses: docker/login-action@v3 with: username: ${{ secrets.DOCKERHUB_USERNAME }} password: ${{ secrets.DOCKERHUB_TOKEN }} - name: Build and push uses: docker/build-push-action@v6 with: push: true tags: user/app:latest\n\nBe careful because any file mutation in the steps that precede the build step will be ignored, including processing of the .dockerignore file since the context is based on the Git reference. However, you can use the Path context using the context input alongside the actions/checkout action to remove this restriction.\n\nDefault Git context can also be provided using the Handlebars template expression {{defaultContext}}. Here we can use it to provide a subdirectory to the default Git context:\n\nBuilding from the current repository automatically uses the GitHub Token, so it does not need to be passed. If you want to authenticate against another private repository, you have to use a secret named GIT_AUTH_TOKEN to be able to authenticate against it with Buildx:\n\n- name: Build and push uses: docker/build-push-action@v6 with: push: true tags: user/app:latest secrets: | GIT_AUTH_TOKEN=${{ secrets.MYTOKEN }}\n\nname: ci on: push: jobs: docker: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 - name: Set up QEMU uses: docker/setup-qemu-action@v3 - name: Set up Docker Buildx uses: docker/setup-buildx-action@v3 - name: Login to Docker Hub uses: docker/login-action@v3 with: username: ${{ secrets.DOCKERHUB_USERNAME }} password: ${{ secrets.DOCKERHUB_TOKEN }} - name: Build and push uses: docker/build-push-action@v6 with: context: . push: true tags: user/app:latest\n\nMulti-platform image\n\nSecrets\n\nPush to multi-registries\n\nManage tags and labels\n\nCache management\n\nExport to Docker\n\nTest before push\n\nLocal registry\n\nShare built image between jobs\n\nNamed contexts\n\nCopy image between registries\n\nUpdate Docker Hub repo description\n\nSBOM and provenance attestations\n\nAnnotations\n\nReproducible builds\n\nThis action generates a job summary that provides a detailed overview of the build execution. The summary shows an overview of all the steps executed during the build, including the build inputs and eventual errors.\n\nThe summary also includes a link for downloading the build record with additional details about the build, including build stats, logs, outputs, and more. The build record can be imported to Docker Desktop for inspecting the build in greater detail.\n\nSummaries are enabled by default, but can be disabled with the DOCKER_BUILD_SUMMARY environment variable.\n\nFor more information about summaries, refer to the documentation.\n\nThe following inputs can be used as step.with keys:\n\nList type is a newline-delimited string\n\ncache-from: | user/app:cache type=local,src=path/to/dir\n\nCSV type is a comma-delimited string\n\ntags: name/app:latest,name/app:1.0.0\n\nName Type Description add-hosts List/CSV List of customs host-to-IP mapping (e.g., docker:10.180.0.1) allow List/CSV List of extra privileged entitlement (e.g., network.host,security.insecure) annotations List List of annotation to set to the image attests List List of attestation parameters (e.g., type=sbom,generator=image) builder String Builder instance (see setup-buildx action) build-args List List of build-time variables build-contexts List List of additional build contexts (e.g., name=path) cache-from List List of external cache sources (e.g., type=local,src=path/to/dir) cache-to List List of cache export destinations (e.g., type=local,dest=path/to/dir) cgroup-parent String Optional parent cgroup for the container used in the build context String Build's context is the set of files located in the specified PATH or URL (default Git context) file String Path to the Dockerfile. (default {context}/Dockerfile) labels List List of metadata for an image load Bool Load is a shorthand for --output=type=docker (default false) network String Set the networking mode for the RUN instructions during build no-cache Bool Do not use cache when building the image (default false) no-cache-filters List/CSV Do not cache specified stages outputs List List of output destinations (format: type=local,dest=path) platforms List/CSV List of target platforms for build provenance Bool/String Generate provenance attestation for the build (shorthand for --attest=type=provenance) pull Bool Always attempt to pull all referenced images (default false) push Bool Push is a shorthand for --output=type=registry (default false) sbom Bool/String Generate SBOM attestation for the build (shorthand for --attest=type=sbom) secrets List List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken) secret-envs List/CSV List of secret env vars to expose to the build (e.g., key=envname, MY_SECRET=MY_ENV_VAR) secret-files List List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt) shm-size String Size of /dev/shm (e.g., 2g) ssh List List of SSH agent socket or keys to expose to the build tags List/CSV List of tags target String Sets the target stage to build ulimit List Ulimit options (e.g., nofile=1024:1024) github-token String GitHub Token used to authenticate against a repository for Git context (default ${{ github.token }})\n\nThe following outputs are available:\n\nName Type Description imageid String Image ID digest String Image digest metadata JSON Build result metadata\n\nName Type Default Description DOCKER_BUILD_CHECKS_ANNOTATIONS Bool true If false, GitHub annotations are not generated for build checks DOCKER_BUILD_SUMMARY Bool true If false, build summary generation is disabled DOCKER_BUILD_RECORD_UPLOAD Bool true If false, build record upload as GitHub artifact is disabled DOCKER_BUILD_RECORD_RETENTION_DAYS Number Duration after which build record artifact will expire in days. Defaults to repository/org retention settings if unset or 0\n\nSee TROUBLESHOOTING.md"
    }
}