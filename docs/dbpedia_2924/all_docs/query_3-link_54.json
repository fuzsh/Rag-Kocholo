{
    "id": "dbpedia_2924_3",
    "rank": 54,
    "data": {
        "url": "https://journals.aas.org/aastexguide/",
        "read_more_link": "",
        "language": "en",
        "title": "AASTeX v6.3.1 Author Guide",
        "top_image": "https://journals.aas.org/wp-content/uploads/2019/11/figsetexample-285x300.png",
        "meta_img": "https://journals.aas.org/wp-content/uploads/2019/11/figsetexample-285x300.png",
        "images": [
            "https://journals.aas.org/wp-content/uploads/2018/10/AAS-Publishing-2-black.png",
            "https://journals.aas.org/wp-content/uploads/2018/09/banner.jpg",
            "https://journals.aas.org/wp-content/uploads/2019/06/collaboutput.png",
            "https://journals.aas.org/wp-content/uploads/2018/10/newfig.png",
            "https://journals.aas.org/wp-content/uploads/2019/11/figsetexample-285x300.png",
            "https://journals.aas.org/wp-content/uploads/2019/06/nominalsyntax-e1559942039200.png",
            "https://journals.aas.org/wp-content/uploads/2019/06/nominalunitexamples-1024x665.png",
            "https://journals.aas.org/wp-content/uploads/2021/08/sidebar-ethicspolicy-600x400-1.jpg",
            "https://journals.aas.org/wp-content/uploads/2022/12/AAS-ebooks-BN-1122_283-x-250px.jpg",
            "https://journals.aas.org/wp-content/uploads/2021/08/Announcement-New-Sidebar.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2021-02-26T19:24:07+00:00",
        "summary": "",
        "meta_description": "The AASTeX v6.3 guide provides information about all of the features available to authors for typesetting their manuscripts.",
        "meta_lang": "en",
        "meta_favicon": "https://journals.aas.org/wp-content/themes/aasjournals/images/favicon.ico",
        "meta_site_name": "AAS Journals",
        "canonical_link": "https://journals.aas.org/aastexguide/",
        "text": "AASTeX allows authors to define their own commands with LaTeX’s \\newcommand. (Authors should not use the plain TeX \\def command in AAS journal submissions.) Authors’ \\newcommand definitions must be placed in the document preamble.\n\nIn general, author-defined commands that are abbreviations or shorthands are acceptable and can be easily handled by journal offices and publishers during data conversion; for example:\n\n\\newcommand{\\grb}{gamma ray burst}\n\n\\newcommand{\\bHa}{Broad line H{\\alpha}}\n\nHowever, abbreviations that attempt to define new symbols by using LaTeX commands for repositioning text tend to cause problems in the publication process and should be avoided. In particular, author-defined commands that use any of the commands listed below are apt to cause problems during data conversion.\n\nhskip, \\vskip, \\raise, \\raisebox, \\lower, \\rlap, \\kern, \\lineskip, \\char, \\mathchar, \\mathcode, \\buildref, \\mathrel, \\baselineskip\n\nConsequently, authors are strongly discouraged from using them. In addition, AASTeX already has defined commands for all the major astronomical journals so authors should refrain from using their own as it generally leads to conflict errors during compilation.\n\nExtra symbols are defined for AASTeX, some specifically for an astronomical context, others more broadly used in math and physics. In particular, the AMS has additional symbol fonts that are available in a standard LaTeX package (amssymb). All of these symbols are depicted in the additional symbols tables supplied with the package and on the AASTeX website.\n\nBefore defining a new symbol command, authors are advised to consult these tables to see whether the symbol they need already exists. If it does, they should use the corresponding markup command. Authors should not redefine existing command names. When one of these commands is encountered in an electronic manuscript submitted to a journal, an author’s redefinition will be ignored and the originally-defined command used.\n\nThe way AASTeX v6.3.1 handles author, affiliation, and collaboration information is different from previous versions so authors should read this section carefully. There are many reasons for these changes including updates in how article titles are displayed, the addition of ORCID support, automatic affiliation indexing, improved collaboration identification, and additional article meta-data commands for preprints. The following older commands are now removed: \\affil, \\altaffilmark, \\altaffiltext, \\fullcollaborationName, and \\and. LaTeX will issue an error and stop if these are encountered in an AASTeX v6.3.1 manuscript.\n\nUse the \\title command to specify the title. Footnotes can be included within this command. In v6.3.1 the title is rendered in bold. This change was implemented to match the published article which is now shown in title case, e.g. only capitalizing the first letter of principle words. It is the author’s responsibility to maintain title case within the \\title command.\n\nThe \\author command is used to specify an individual author. Authors’ names should be entered in mixed case. Authors can use the LaTeX CJK macro package to include Chinese, Japanese and Korean language support with their names. More information about using CJK can be found here. A new optional argument to the \\author command has been added to provide the author’s unique ORCID identifier. The syntax is:\n\n\\author[dddd-dddd-dddd-dddd]{Author Name}\n\nDuring compilation, LaTeX will check that the value in the optional argument has this format. If not, a warning message will be issued and LaTeX will exit. When a valid format is entered the author name will be hyperlinked to the given ORCID webpage. If the orcid-ID.png file (available in the aastexv6.3.1 distribution) is present in the manuscript directory or in the LaTeX path the ORCID icon will appear after the author’s name to further increase ORCID visibility. Note that it is the author’s responsibility to ensure that the correct ORCID is provided when this functionality is used. At this time the ORCID is not carried into the peer review database since these identifier must be personally authenticated via the ORCID website.\n\nEach \\author command should be have an associated \\affiliation command to specify a primary affiliation. AASTeX v6.3.1 will automatically index all the \\affiliation commands during compilation. When a duplicate \\affiliation command is encountered it is given the same index number as the first \\affiliation found. Physical and postal address information for the specified institution should be included with \\affiliation. The address can be broken over several lines using the \\\\ command to indicate the line breaks. Use multiple \\affiliation calls for secondary and tertiary affiliations.\n\nAuthors often have additional information that needs to be noted (e.g. Hubble Fellow, author is deceased, etc.) in addition to their affiliation information. This information may be specified with the \\altaffiliation command. Note that in order to work correctly the \\altaffiliation command must appear right after the \\author command as the corresponding footnote symbol is attached to the previous text. The \\altaffiliation footnotes are non-numeric and rendered at the bottom left of the page.\n\nAll affiliation information can be hidden with the new \\suppressAffiliations command. This command should appear before the first \\author call.\n\nThere are two other optional pieces of author information that can be included. Both appear in the bottom left corner of the title page. The first is the new \\correspondingauthor{Author Name} command. This will identify the named author as the corresponding author. It should only be used once for the author that was the primary contact during peer review. The other command is \\email. Each \\email call will placed on its own line thus when many emails are provided it is recommended they all be put in a single \\email call. The order in which these two optional commands are called determines order in which they appear on the page.\n\nThe \\collaboration command should be used to identify all authors in a collaboration group. This command is placed after the corresponding author group. \\collaboration is slightly different in AASTeX v6.3.1 as it now takes an additional argument.\n\n\\collaboration{number}{name}\n\nThe name argument is the same as in v6.2 and is simply the collaboration identifier. The number argument gives the number of authors above to show in addition to the collaboration identifier. This should only be used when there are very large author list and only the first few authors are to be displayed in the front matter of the manuscript. For example,\n\n\\author{1} ... \\author{1000} \\collaboration{2}{The BIG collaboration}\n\nwould be displayed as “1 and 2 et al. The BIG collaboration“. When suppressing some of the authors in the collaboration it is recommended that authors use the \\suppressAffiliations command described above for the cleanest look.\n\nThe full author list, including the affiliations, will be shown at the end of the article when the \\allauthors command is placed just before the \\end{document}.\n\nDepending on the group complexity and number of collaborations, authors may also have to use the updated \\nocollaboration command to segregate authors that are not part of any group. \\nocollaboration also takes a number argument so that these authors can be removed from the front matter. In the compiled version a dash is shown to offset the unaffiliated group from the other collaborations.\n\nThe following example illustrates how the author and affiliation commands entered and authors are grouped in collaborations. This specific example only shows the collaboration names in the compiled output (below). Note that LaTeX takes care of any needed “and”s and commas between author names and thus it is not necessary to include them in an \\author call. This footnote based style is the default for the front matter. It produces the most compact output and thus is ideal for manuscripts with long author lists. The longauthor style can be called as a classfile argument to produce the more traditional style where each author is listed individually. See Section 3 for details on using the different styles.\n\nDisplay equations can be typeset in LaTeX in a number of ways. The following three are probably of greatest use in AASTeX.\n\n\\begin{displaymath}\n\n\\end{displaymath}\n\n\\begin{equation}\n\n\\end{equation}\n\n\\begin{eqnarray}\n\n\\end{eqnarray}\n\nThe displaymath environment will break out a single, unnumbered formula. The equation environment does the same thing except that the equation is auto-numbered by LaTeX. To set several formula in which vertical alignment is required, or to display a long equation across multiple lines, use the eqnarray environment. Each line of the eqnarray will be numbered unless a \\nonumber command is inserted before the equation line delimiter (\\\\). LaTeX‘s equation counter is not incremented when \\nonumber is used.\n\nAuthors may occasionally wish to group related equations together and identify them with letters appended to the equation number. When this is desired, use the subequations environment in the amsmath package (note that amsmath is already included in all LaTeX distributions after 2005 but it must be explicitly called in the preamble via \\usepackage{amsmath}).\n\n\\begin{subequations}\n\n...\n\n\\end(subequations}\n\nAll equations within this environment will be number with the previous equation number but appended with a letter. See the amsmath documentation, section 3.11.2, for additional details.\n\nIt is possible to override LaTeX‘s automatic numbering within the equation or eqnarray environments using\n\n\\eqnum{text}\n\nWhen \\eqnum is specified inside an equation environment or on a particular equation within an eqnarray, the text supplied as an argument to \\eqnum is used as the equation identifier. LaTeX‘s equation counter is not incremented when \\eqnum is used. \\eqnum must be used inside the math environment.\n\nIf, as a consequence of the use of \\eqnum or \\nonumber, LaTeX‘s equation counter gets out of synch with the author’s intended sequence, the counter may be reset to a particular value.\n\n\\setcounter{equation}{number}\n\nThe equation counter should be set to the number corresponding to the last equation that was formatted; therefore, it is most appropriate for this command to appear immediately after an equation or eqnarray environment. The command must be used outside the math environments.\n\nAASTeX uses the natbib package for citation management. The natbib package re-implements LaTeX’s cite command, offering greater flexibility for managing citations in the author-year form. Specific instructions on how to use natbib is available here.\n\nWhen using natbib, bibliographic data are defined in bibitem commands.\n\n\\bibitem[author(year)]{key}\n\nbibliographic data\n\nThe square-bracketed argument of the bibitem contains the author portion of the citation followed by the year set off in parentheses. The parentheses are important-natbib uses them to determine the year portion of the citation-so be sure to include them. The argument key in curly braces is the code name by which the citation is referenced in the text.\n\nWhen placing citations in the text, the author should use either a citep or a citet command.\n\n\\citep{key(s)} \\citet{key(s)}\n\nThe citep command produces a citation that is entirely set off by parentheses, e.g. “(Cox 1995),” while citet permits the author’s name to form part of the text, e.g. “Cox (1995).” The plain LaTeX cite command behaves like citet.\n\nThe citation key must correspond to the key in a bibitem command. During processing, information from the square-bracketed argument of the key’s bibitem is inserted in the text at the location of the \\cite command. Multiple citation keys are separated by commas, e.g., citep{knuth84,cox95,lamport94}.\n\ncitep and citet each take optional arguments that specify extra text to be appended to the citation label. Text in the first set of square brackets will appear before the cite while text in the second set will appear after it. For instance, citep[chap. 2]{jon90} would produce the citation “(Jones et al., 1990, chap. 2),” citep[see][]{jon90} would produce “(see Jones et al, 1990),” and citep[see][chap. 2]{jon90}would print “(see Jones et al., 1990, chap. 2).” In addition, the * form of the cite commands will print the full author list instead of the abbreviated form.\n\nThe syntax discussed above should be sufficient for the vast majority of cases; however, AASTeX does use the full natbib implementation, so many more syntax options are available.\n\nAuthors are also encourage to use reference management software such as BibTex to organize their references and produce correct bibliographies. When using BibTeX a .bst file is need to produce the proper reference output that follows the AAS Journal’s format. Authors should use the latest aasjournal.bst file when using BibTex with AAS Journal manuscripts.\n\nIt is not possible to use \\bibitem within AASTeX’s references environment ( 2.14.3), nor will \\cite commands work properly in the main body if \\bibitem commands are absent.\n\nThere are many commands available in deluxetable to control the output. Commands that control the structure of the entire table must be specified before the \\begin{deluxetable} call but note that there are a few exceptions. The exceptions will be pointed out when these commands are described. Multi-page deluxetables are created by including a \\startlongtable before the deluxetable call.\n\n\\startlongtable \\begin{deluxetable} ... \\end{deluxetable}\n\nIf \\startlongtable is left out a long table will flow off the page.\n\nWide tables will not always center properly when using the commands above. For wide, portrait tables the command \\centerwidetable at the top of the deluxetable environment should be used first. If this command does not produce the desired results authors can manually move a wide, portrait table with the \\movetableright=X where X is a recognized LaTeX unit such as in (inches) or mm (millimeters).\n\n\\movetableright=-1in\n\nwill move the table to the left 1 inch. This command appears before the \\begin{deluxetable} call.\n\nLandscape orientation, e.g. rotation, is available for both deluxetables and the tabular environment but how this is accomplished in v6.3.1 is slightly different than in versions v6.0 and earlier. The previous \\rotate has been superceded by the superior rotatetable environment. This environment should surround all short tables requiring rotation.\n\n\\begin{rotatetable} \\begin{deluxetable} ... \\end{deluxetable} \\end{rotatetable}\n\nWhile the \\rotate command can still be used it is only recommended the rotation of splittables, see the cheat sheet chart in Section 2.16.5 for examples. Likewise, the new longrotatetable environment is used to rotate a multi-page deluxetable.\n\nWhen using the rotatetable or longrotatetable environments the resulting table may spill over the top margin, particularly for wide tables. In these cases authors can adjust the landscaped table further down the page using the new \\movetabledown=X command. This command is works in the same way as \\movetableright=X works for wide portrait tables. For example,\n\n\\movetabledown=3mm\n\nwill move the landscape table down 3 millimeters. This command also appears before the \\begin{deluxetable} call.\n\nThe * option informs LATEX that a table (or figure) will span both columns in a two column style.\n\n\\begin{deluxetable*} ... \\end{deluxetable*}\n\nor\n\n\\begin{table*} ... \\end{table*}\n\nWhen the * option is used, it can also be applied to the rotatetable environment to center the rotated table on the page otherwise the table will be left justified. See the cheat sheet chart in Section 2.16.5 for examples.\n\nThere other deluxetable commands must be used in the preamble inside the deluxetable environment.\n\n\\tabletypesize{font size command}\n\n\\tablewidth{dimen}\n\n\\tablenum{text}\n\n\\tablecolumns{num}\n\n\\tablecaption{text\\label{key}}\n\n\\tablehead{text}\n\nIf a table is too wide for the PDF/EPS page, the font size of the table can be changed with the \\tabletypesize command, which takes as an argument one of the font size change commands: \\small (11pt), \\footnotesize (10pt), or \\scriptsize (8pt).\n\nThe width of a deluxetable is defined by \\tablewidth. If this command is omitted, the default width is the width of the page. The table can be set to its natural width by specifying a dimension of 0pt. Long tables may have a natural width that is different for each page. The natural width for each page will be printed to the log file during processing. Authors may then use this log information to define a fixed table width in order to give the table a more uniform appearance across pages.\n\nIt is possible to override LATEX‘s automatic numbering within the deluxetable environment. When \\tablenum is specified inside a deluxetable preamble, the text supplied as an argument to \\tablenum will be used as the table identifier. LATEX‘s equation counter is not incremented when \\tablenum is used.\n\nThe caption (actually, the title) of the table is specified in \\tablecaption. The text of \\tablecaption should be brief; explanatory notes should be specified in the end notes to the table (see 2.16.5 below). If the caption does not appear centered above the table after processing, then specify the width of the table explicitly with the \\tablewidth command and rerun LATEX on the file. If an author supplies a \\label for cross-referencing purposes, this, too, must be included in the \\tablecaption.\n\nColumn headings are specified with \\tablehead. Within the \\tablehead, each column heading should be given in a \\colhead, which will ensure that the heading is centered on the natural width of the column. There should be a heading for each column so that there are as many \\colhead commands in the \\tablehead as there are data columns.\n\n\\tablehead{\n\n\\colhead{heading} & \\colhead{heading}}\n\nIf more complicated column headings are required, any valid tabular command that constitutes a proper head line in a LATEX table may be used. For example, the multicolumn command below would create a table head with text centered over five columns.\n\n\\multicolumn{5}{c}{text}\n\nThe \\tablecolumns{num} command is necessary if an author has multi-line column headings produced by \\tablehead or other LATEX commands and is using either the \\cutinhead or \\sidehead markup (see below). The num argument should be set to the true number of columns in the table. The command must come before the \\startdata command.\n\nAfter the table title and column headings have been specified, data rows can be entered. Data rows are delimited with the \\startdata and \\enddata commands. The end of each row is indicated with the standard LATEX \\\\ command. Data cells within a row are separated with & (ampersand) characters.\n\n\\startdata\n\ndata line\n\ncell&cell&cell \\\\\n\nmore data lines\n\n\\enddata\n\nColumn alignment within the data columns can be adjusted with the TeX \\phantom{string} command, where string can be any character, e.g., \\phantom{$\\arcmin$}. A blank character of width string is then inserted in the table. Four commands have been predefined for this purpose.\n\n\\phn phantom numeral 0-9 \\phd phantom decimal point \\phs phantom ? sign \\phm{string} generic phantom\n\nExtra vertical space can be inserted between rows with an optional argument to the \\\\ command.\n\n\\\\[dimen]\n\nThe argument is a dimension and may be specified in any units that are legitimate in LATEX.\n\nIn a table, it may happen that several rows of data are associated with a single object or item. Such logical groupings should not be broken across pages. In these cases, the tablebreak command may be used to force a page break at the desired point.\n\ntable row\n\n\\\\tablebreak\n\nnext table row\n\nThis command can be used any time that the default deluxetable page breaks need to be overridden.\n\nTo explicitly indicate that a table cell that contain no data, the \\nodata command can be used. This is to differentiate such cells from blank cells, which are frequently interpreted as implicitly repeating the entry in the corresponding cell in the row preceding.\n\nWithin the deluxetable body, two kinds of special heads are allowed, cutinhead and sidehead. A cut-in head is a piece of text centered across the width of the table. It is spaced above and below from the data rows that precede and follow it and will appear set off by rules in the LATEX output. Similarly, the command for a side head produces a row spanning the width of the table but with the text left justified.\n\n\\cutinhead{text}\n\n\\sidehead{text}\n\nTable footnotes (more properly, table end notes) may also be used in the deluxetable environment. Their use is described in detail in Section 2.16.5.\n\nInteractive figures give the reader the ability to manipulate the information contained in an image which can add clarity or help further the author’s narrative. All interactive figures consist of two parts, the static figure file for the LATEX/PDF copy and a dynamic Javascript and HTML framework that provides interactive control. We have published rotatable 3D images, zoom and clickable vector plots, and “blink” style figures. Examples can be discovered in the Astronomy Image Explorer and searching the content type for interactive figures.\n\nWe have also partnered with the Astropy Project to provide an easy way to include interactive figures of time series (such as light curves, radial velocity curves, etc.) in articles that are created from Python and does not require any expertise in Javascript. A new astropy.timeseries module is now available in the astropy core package, and can be used to construct a time series object in Python. With this object, you can then make use of the aas-timeseries package to create your interactive figure. We recommend reading through the guides in the aas-timeseries documentation to find out how to create such figures. In particular, the section Preparing an interactive figure for submission to AAS Journals will show you how to create a .zip bundle containing all the necessary files for the interactive figure as well as static PDF versions of the figures that you can then include in your paper.\n\nSince interactive figures are not actionable in LaTeX/PDF it is necessary to include a non-interactive regular figure to use as an example. The example figure should also indicate to the reader that the enhanced figure is interactive and can be accessed online. Authors should use the new interactive environment in all example interactive figures.\n\n\\begin{figure} \\begin{interactive}{type}{file} figure call (e.g.\\plotone, \\includegraphics, etc.) \\end{interactive} \\caption{Description of the example figure and the interactive portion which includes how to use the interactive functionality.} \\end{figure}\n\nThe interactive environment should surround the example figure call and possess two arguments. The first is declaration of the enhanced graphic type while the second argument is the .tar.gz or .zip package containing all of the interactive elements, e.g html framework, javascript driver, and data file. Authors should use the type js for generic javascript interactive figure and lc for astropy generated light curve figures.\n\nAdditional animation information, including basic requirements and supported frameworks, is available in the graphics guide.\n\nIn general, authors are encouraged not to use external packages unless there is an absolute need for it. Due to their size and complexity, it is very likely that any external package will have some conflicts with AASTeX or its underlying ReVTeX package. As we are made aware of them we will try to come up with solution and document them here.\n\nsinuitx.sty\n\nThere is a known conflict between AASTeX’s deluxetables and the siunitx.sty style package. Both define \\tablenum which leads to the conflict. A solution has been built into v6.3. First, allow siunitx to redefine \\tablenum for its own purposes with this command just before siunitx is called.\n\n\\let\\tablenum\\relax \\usepackage{siunitx}\n\nSecond, if a table needs to be renumbered via the \\tablenum command use the \\savetablenum command instead so siunitx can use \\tablenum.\n\n\\begin{deluxetable}{ccc} \\savetablenum{5} \\caption{Renumbering tables while using the sinuitx package} \\tablehead{\\colhead{1} & \\colhead{2} & \\colhead{3}} \\startdata A & B & C \\\\ \\enddata \\end{deluxetable}\n\nadjustbox.sty\n\nBoth adjustbox.sty and AASTeX v6+ define the command splitbox. This command needs to be redefined in AASTeX in order to us the adjustbox package.\n\namsmath.sty and lineno.sty\n\nThere are known compatibility issues between the amsmath and lineno packages when numbering around equations. Depending on how the equation is called the text above may not be numbered. While AASTeX v6.3.1 corrects the majority of the problems, issues may remain with more exotic equation environments. The first order solutions are to include line breaks around any equation environments and to use the \\[ ... \\] notation instead of $$ ... $$.\n\nAnother known problem is with the subequations environment. With the lineno package on, these equations might be typeset at the top of the page with large spacing between them and the next equation or text. The solution is to bracket subequations with the linenomath environment. You also need to specifically call the lineno package with the “running” option. Do not invoke the “linenumbers” option but rather use \\linenumbers. Your latex manuscript header should look like this:\n\n\\usepackage[running]{lineno} \\linenumbers\n\nand in the text, the subequations should look like this:\n\n\\begin{linenomath} \\begin{subequations} ... \\end{subequations} \\end{linenomath\n\nCompiling with these commands will produce a LaTeX warning:\n\n! LaTeX Error: Option clash for package lineno.\n\nbut you can ignore it and press on."
    }
}