{
    "id": "yago_18972_1",
    "rank": 5,
    "data": {
        "url": "https://www.linkedin.com/posts/srushtika_so-my-mom-has-a-website-of-her-own-ladies-activity-6440575796770902016-Q3fo",
        "read_more_link": "",
        "language": "en",
        "title": "Srushtika Neelakantam on LinkedIn: So my mom has a website of her own, ladies and gentlemen!",
        "top_image": "https://media.licdn.com/dms/image/v2/C4E22AQEpmpSCKSDTUg/feedshare-shrink_800/feedshare-shrink_800/0/1577728502802?e=2147483647&v=beta&t=nVzKlbwHcT2BHLz7vhcBdq4OUZuCvtzkLJPZBtDEepc",
        "meta_img": "https://media.licdn.com/dms/image/v2/C4E22AQEpmpSCKSDTUg/feedshare-shrink_800/feedshare-shrink_800/0/1577728502802?e=2147483647&v=beta&t=nVzKlbwHcT2BHLz7vhcBdq4OUZuCvtzkLJPZBtDEepc",
        "images": [
            "https://media.licdn.com/dms/image/v2/C5616AQE8NIZMLK6WfQ/profile-displaybackgroundimage-shrink_200_800/profile-displaybackgroundimage-shrink_200_800/0/1516576047325?e=2147483647&v=beta&t=Sx0WxPYZT1H9NiN5HQIj3s2UO0oPpCGC6yIotgNjBhk"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Srushtika Neelakantam"
        ],
        "publish_date": "2018-08-29T14:28:49.990000+00:00",
        "summary": "",
        "meta_description": "So my mom has a website of her own, ladies and gentlemen!",
        "meta_lang": "en",
        "meta_favicon": "https://static.licdn.com/aero-v1/sc/h/al2o9zrvru7aqj8e1x2rzsrca",
        "meta_site_name": "",
        "canonical_link": "https://www.linkedin.com/posts/srushtika_so-my-mom-has-a-website-of-her-own-ladies-activity-6440575796770902016-Q3fo",
        "text": "Another week, another product launch! Today, I'm very excited to announce the private beta of our new product ‚Äî Ably Chat üí¨üö¢ We‚Äôve had the privilege of working with a wide range of customers including global retailers, CRM vendors, sports franchises, creators, entertainers, and broadcasters - from HubSpot and Sportsbet, to 17LIVE Inc. and InvitePeople - providing them with reliable, scalable and low-latency chat. Ably Pub/Sub is already a fantastic fit for a variety of chat use cases. But we‚Äôve been doing a lot of thinking about how we can better help developers to overcome the many challenges of delivering chat features to market quickly, at scale and in an economically viable way. Ably Chat, is a suite of purpose-built APIs for a number of chat features. It is designed to meet a wide range of chat use cases, such as livestreams, in-game communication, customer support, or social interactions in SaaS products. Built on Ably's core service, it abstracts complex details to enable efficient chat architectures. Read more about it here: https://lnkd.in/exEwRXYv or dive straight into docs and request an invite to the beta: https://lnkd.in/eQrrfdZy Huge kudos to the entire team that has helped bring this out üöÄüôå\n\nToday I'm very excited to announce the alpha launch of a new product ‚Äî LiveSync! üö¢ LiveSync is a powerful tool that allows you to stream changes in your database in realtime to frontend clients at scale without any unnecessary load on your database. It is designed to be database agnostic with support for PostgreSQL in this version üöÄ The fact that it's built on Ably's global message delivery network gives it a lot of proven leverage by default, especially with respect to the 4 pillars of dependability around performance, integrity, reliability and availability! üòé For existing users of Ably's Pub/Sub Channels, LiveSync effectively lets you publish messages to Ably Channels transactionally as you write to your database while maintaining your database as the single source of truth for the app state. This avoids a dual-write scenario, which is a common cause of data inconsistencies and also the thundering-herd problem where your frontend clients are constantly polling the database or doing so at the same time causing a sudden surge in traffic and overwhelming the database's capacity to respond effectively üò¨ LiveSync has three key components: 1) a Database Connector at the backend that can watch changes in your database table using the outbox pattern and broadcast those updates and 2) the default Ably Pub/Sub channels that form the mechanism behind-the-scenes to broadcast those updates at scale and 3) a Models SDK that facilitates optimistic updates for the changes made and helps merge the confirmed changes from the backend with the overall frontend state In the alpha release, you get two options to host the Database Connector: either host it yourself using the docker image or host it easily on Ably‚Äôs infra by setting up an integration rule for PostgreSQL on the dashboard. With LiveSync, Ably is now able to abstract so much more away from developers with respect to managing the data and state of the realtime applications! Huge kudos to the entire team that has made this possible üëè In today's data-driven and collaborative world, maintaining a consistent view of data across devices is essential. Traditional solutions, from realtime databases that impose strong opinions on your tech stack to building backend services from scratch, pose limitations and complexities. Periodic polling leads to inefficient backend load and outdated data, while alternatives like setting up CDC and stream processing systems add a lot of infrastructure management overhead. LiveSync eliminates the complexities and inefficiencies, offering a seamless database to frontend synchronisation while allowing you to maintain control over your tech stack. I can't wait for folks to try it out and share feedback! I'll leave a link to documentation in the comments section! Please feel free to DM me if you have any questions about LiveSync, I'd be happy to chat :)\n\nGreat to see Google Slides adding live cursors in their latest release! Here's a little back story on the live cursors API in Ably Spaces. When we started building Spaces, we categorised the SaaS apps that would benefit from collaboration into three categories in the increasing order of technical complexity ‚Äî structured apps (CRMs, slide decks, spreadsheets and video editors, etc), text co-editing (docs and code editors) and spatial apps (whiteboards, canvases, etc). We immediately jumped on enabling collaborative features for structured apps as it seemed like this would enable the widest set of developers. Interestingly, live cursors were not on our initial roadmap of features to include in the beta launch because they seemed relevant only to the spatial category. However, we soon realised the great benefits in terms of the virtual behavioural cues it adds to the collaboration experience in any kind of SaaS apps. You can ‚àôpoint to certain things for others ‚àôhave shared context on what others are looking at (and not just what they have actively selected) ‚àôgenerally feel like you are together in the same room. Plus, live cursors are synonymous to multiplayer collaboration these days, thanks to Figma and the likes. It's pretty challenging though to have an efficient implementation of these cursors, especially for a large group of collaborators. Some naive implementations would send all the mouse pointer movements as they happen, which is quite wasteful given the rate at which those events get generated. You could have an optimal experience with the right balance of the number of messages sent per sec and the number of pointer events batched into a single message that's streamed to other members. While Spaces handles these challenges by default, I'm excited for further enhancements coming up to virtually eliminate the latency for a large group of members. Separately, there's also a bunch of UX considerations here. ‚àôTwo's company, sixteen's a crowd ‚Äî having too many cursors can be a distraction instead of a benefit. Miro, for example, gives you an option to switch off cursors on demand. ‚àôSmoothly does it ‚Äî streaming cursor positions has to be coupled nicely with replays, interpolations and animations to ensure the movement is smooth and not jerky. Can you imagine the OCD trigger otherwise? ‚àôWho's who? ‚Äî Cursors are fast moving objects, so manually correlating profile info with a colour match can be too much unnecessary activity for the brain. Showing a name or a profile image next to the cursor works best! On the Spaces landing page, we have randomly generated names which will soon show up geolocation flags for a nice global collab effect. ‚àôAccurate pointing ‚Äî One tricky thing with cursors on web applications is adjusting the position of the cursor accurately to the right element irrespective of the screen size and responsive layout. My colleague Thomas Camp has some more interesting strategies in his video."
    }
}