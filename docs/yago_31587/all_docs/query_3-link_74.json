{
    "id": "yago_31587_3",
    "rank": 74,
    "data": {
        "url": "https://softwareengineering.stackexchange.com/questions/196236/why-does-donald-knuth-write-taocp-using-assembly-language",
        "read_more_link": "",
        "language": "en",
        "title": "Why does Donald Knuth write TAOCP using assembly language?",
        "top_image": "https://cdn.sstatic.net/Sites/softwareengineering/Img/apple-touch-icon@2.png?v=1ef7363febba",
        "meta_img": "https://cdn.sstatic.net/Sites/softwareengineering/Img/apple-touch-icon@2.png?v=1ef7363febba",
        "images": [
            "https://cdn.sstatic.net/Sites/softwareengineering/Img/logo.svg?v=e86f7d5306ae",
            "https://www.gravatar.com/avatar/d6db99aa846a8217f7e2aba6fa198e7c?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/lsaoi.jpg?s=64",
            "https://www.gravatar.com/avatar/fbf2421aadfca785f0c591afe75197f1?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/effc48549bd3c101d868e1836f39cedd?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/a2d70e08fc81e1991cd21c8ad69a5576?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/d8962238339d771f0348967be6f97b1b?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/e3e679a2dbdd96029876a81b1964f698?s=64&d=identicon&r=PG",
            "https://softwareengineering.stackexchange.com/posts/196236/ivc/cd1e?prg=200081ab-4bbe-43a0-8567-8e375632f204"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2013-04-26T12:54:14",
        "summary": "",
        "meta_description": "I don't hate using assembly language, since I have written some in my os course. But obviously, assembly language lacks abstraction, you have to pay more attention to the details. \n\nIs assembly lan...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/softwareengineering/Img/favicon.ico?v=c4f35a1e3900",
        "meta_site_name": "Software Engineering Stack Exchange",
        "canonical_link": "https://softwareengineering.stackexchange.com/questions/196236/why-does-donald-knuth-write-taocp-using-assembly-language",
        "text": "Why have a machine language?\n\nMany readers are no doubt thinking, ``Why does Knuth replace MIX by another machine instead of just sticking to a high-level programming language? Hardly anybody uses assemblers these days.''\n\nSuch people are entitled to their opinions, and they need not bother reading the machine-language parts of my books. But the reasons for machine language that I gave in the preface to Volume 1, written in the early 1960s, remain valid today:\n\nOne of the principal goals of my books is to show how high-level constructions are actually implemented in machines, not simply to show how they are applied. I explain coroutine linkage, tree structures, random number generation, high-precision arithmetic, radix conversion, packing of data, combinatorial searching, recursion, etc., from the ground up.\n\nThe programs needed in my books are generally so short that their main points can be grasped easily.\n\nPeople who are more than casually interested in computers should have at least some idea of what the underlying hardware is like. Otherwise the programs they write will be pretty weird.\n\nMachine language is necessary in any case, as output of many of the software programs I describe.\n\nExpressing basic methods like algorithms for sorting and searching in machine language makes it possible to carry out meaningful studies of the effects of cache and RAM size and other hardware characteristics (memory speed, pipelining, multiple issue, lookaside buffers, the size of cache blocks, etc.) when comparing different schemes.\n\nMoreover, if I did use a high-level language, what language should it be? In the 1960s I would probably have chosen Algol W; in the 1970s, I would then have had to rewrite my books using Pascal; in the 1980s, I would surely have changed everything to C; in the 1990s, I would have had to switch to C++ and then probably to Java. In the 2000s, yet another language will no doubt be de rigueur. I cannot afford the time to rewrite my books as languages go in and out of fashion; languages aren't the point of my books, the point is rather what you can do in your favorite language. My books focus on timeless truths.\n\nTherefore I will continue to use English as the high-level language in TAOCP, and I will continue to use a low-level language to indicate how machines actually compute. Readers who only want to see algorithms that are already packaged in a plug-in way, using a trendy language, should buy other people's books.\n\nThe good news is that programming for RISC machines is pleasant and simple, when the RISC machine has a nice clean design. So I need not dwell on arcane, fiddly little details that distract from the main points. In this respect MMIX will be significantly better than MIX."
    }
}