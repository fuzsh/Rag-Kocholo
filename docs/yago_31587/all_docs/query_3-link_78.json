{
    "id": "yago_31587_3",
    "rank": 78,
    "data": {
        "url": "https://academicinfluence.com/inflection/study-guides/computer-science-influential-books",
        "read_more_link": "",
        "language": "en",
        "title": "25 Most Influential Books in Computer Science 2010â2020",
        "top_image": "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571377213/computer-science-influential-books",
        "meta_img": "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571377213/computer-science-influential-books",
        "images": [
            "https://academicinfluence.com/api/view?id=df61cd5f-b623-4b62-bcc7-d3ccec653aa1",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571377213/computer-science-influential-books",
            "https://images.academicinfluence.com/res/w_150,h_218,c_pad,f_auto,q_auto/v1632148797/books/knuth-art-of-computer-programming-vol-1",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_228,c_pad,f_auto,q_auto/v1631895354/books/smiley-man-who-invented-computer",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_179,c_pad,f_auto,q_auto/v1631895487/books/felleisen-how-to-design-programs",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_224,c_pad,f_auto,q_auto/v1631895624/books/palfrey-born-digital",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_213,c_pad,f_auto,q_auto/v1612473972/books/graham-concrete-mathematics",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_170,c_pad,f_auto,q_auto/v1631895932/books/cormen-introduction-to-algorithms",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_184,c_pad,f_auto,q_auto/v1616786911/books/wolfram-new-kind-of-science",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_225,c_pad,f_auto,q_auto/v1631896195/books/lashinsky-inside-apple",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_217,c_pad,f_auto,q_auto/v1631896297/books/abelson-structure-interpretation-computer-programs",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_228,c_pad,f_auto,q_auto/v1631896455/books/domingos-master-alorithm",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_228,c_pad,f_auto,q_auto/v1631896567/books/levy-in-the-plex",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_225,c_pad,f_auto,q_auto/v1631896755/books/raymond-jargon-file",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_225,c_pad,f_auto,q_auto/v1631903146/books/garey-computers-intractability",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_225,c_pad,f_auto,q_auto/v1631903420/books/lee-ai-super-powers",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_198,c_pad,f_auto,q_auto/v1631904111/books/minsky-society-of-mind",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_227,c_pad,f_auto,q_auto/v1631904237/books/bostrom-superintelligence",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_228,c_pad,f_auto,q_auto/v1631904354/books/wilson-how-to-survive-robot-uprising",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_225,c_pad,f_auto,q_auto/v1631904512/books/minsky-emotion-machine",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_219,c_pad,f_auto,q_auto/v1631904670/books/tannenbaum-modern-operating-system",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_222,c_pad,f_auto,q_auto/v1631905120/books/knuth-computer-scientist-rarely-talks-about",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_232,c_pad,f_auto,q_auto/v1631905246/books/raymond-cathedral-bazaar",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_231,c_pad,f_auto,q_auto/v1612549696/books/kurzweil-age-of-spiritual-machines",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_223,c_pad,f_auto,q_auto/v1632144720/books/brooks-mythical-man-month",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_188,c_pad,f_auto,q_auto/v1632145330/books/cheswick-firewalls-internet-security",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_150,h_239,c_pad,f_auto,q_auto/v1632145237/books/neumann-computer-and-brain",
            "https://res.cloudinary.com/academicinfluence/image/upload/v1/study-guide/amazon_button.svg",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571224853/economics-influential-books",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571292018/physics-influential-books",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571308583/cva/influential-books-guide-u1J5M1n",
            "https://images.academicinfluence.com/hero-badge/2023/BEST-FOR/COMPUTER-SCIENCE/COLLEGES/&-UNIVERSITIES",
            "https://images.academicinfluence.com/hero-badge/2023/BEST/ONLINE/MASTER'S-IN/COMPUTER-SCIENCE",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571353405/psychology-influential-books",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1704817064421/computer-science-masters",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571359896/social-work-influential-books",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571412437/political-science-influential-books",
            "https://images.academicinfluence.com/hero-badge/2023/BEST-FOR/COMPUTER-SCIENCE/RESEARCH/UNIVERSITIES",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571439332/business-influential-books",
            "https://images.academicinfluence.com/res/w_800,h_450,c_pad,f_auto,q_auto/v1690571478874/by-discipline/computer-science",
            "https://in.getclicky.com/101377805ns.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "James Barham"
        ],
        "publish_date": "2021-09-14T16:37:27.467000+00:00",
        "summary": "",
        "meta_description": "Are you looking for the most important computer science books in the US over the past ten years? Explore classic and contemporary works in computer science.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://academicinfluence.com/inflection/study-guides/computer-science-influential-books",
        "text": "Back to Top\n\n25 Most Influential Books in Computer Science\n\nBy: Donald Knuth , 1962\n\nKnuth (b. 1938) is Professor Emeritus of computer science at Stanford University in Stanford, California. Born in Milwaukee, Wisconsin, he obtained his PhD in mathematics in 1963 from the California Institute of Technology (CalTech). In 1974, Knuth won the Turing Awardâthe equivalent of the Nobel Prize for computer science.\n\nThe book under consideration here is a classic, but no ordinary one. An ordinary classic is a work that never gets stale. This extraordinary classic is one that is never even finished! First published in 1962 in a single volume consisting of twelve chapters, the book has gradually but continuously expanded over the intervening 60 years.\n\nToday, The Art of Computer Programming comprises four separate volumes. The last volume is divided into two parts, only the first part of which (consisting of Fascicles 0â4) has been published so far, under the designation Volume 4A.\n\nThe second part of Volume 4âto be denominated as Volume 4Bâhas been announced for the near future. It will consist of an unspecified number of additional fascicles, the first of which, Fascicle 5, was published separately in 2019. More volumes may appear after that.\n\nThe topics covered by Volumes 1â4A of this authoritative and encyclopedic work include the basic concepts of fundamental algorithms, random numbers, arithmetic algorithms, sorting, searching, and combinatorics.\n\nBy: Jane Smiley , 2010\n\nSmiley (b. 1949) is best known as a novelist. She won the Pulitzer Prize for Fiction in 1991 for her bestselling novel, A Thousand Acres, which was loosely based on Shakespeareâs play, King Lear.\n\nThis book is a biography of the American physicist, John V. Atanasoff (1903â1995). Atanasoffâs father, who was an electrical engineer, was born in Bulgaria and emigrated to the US in 1889. Born in Hamilton, New York, the son was raised mostly in Florida.\n\nAtanasoff received his bachelorâs degree in 1925 from the University of Florida. He then earned his masterâs degree in mathematics in 1926 from Iowa State College (now Iowa State University) and his PhD in theoretical physics in 1930 from the University of Wisconsin at Madison. After graduation, Atanasoff accepted a position teaching mathematics and physics back at Iowa State College.\n\nIn Atanasoffâs day, scientists used slide rules, mechanical calculating machines and tabulators to solve math problems. Atanasoff teamed up with a graduate student named Clifford Berry (1918â1963) to try to develop a new method of calculation that would be faster and more reliable than the ones available at the time. The device they came up with in 1939 at Iowa State became known as the âAtanasoff-Berry Computerâ (ABC).\n\nThe ABC employed Boolean logic and binary arithmetic to solve as many as 29 simultaneous linear equations. While it did not employ a central processing unit (CPU), it did use vacuum tubes in order to perform digital computations. Thus, the ABCâs design represents one of the earliest examples of an electronic digital computer.\n\nThe ABC also made use of electrical capacitance to create regenerative memoryâa process similar to todayâs dynamic random-access memory (DRAM).\n\nBy: Matthias Felleisen , Robert Bruce Findler , Matthew Flatt , and Shriram Krishnamurti, 1962\n\nFelleisen is Trustee Professor in the Khoury College of Computer Sciences at Northeastern University in Boston, Massachusetts. He was born in Germany and immigrated to the US when he was 21 years old. He obtained his PhD in 1987 from Indiana University in Bloomington and spent several years teaching at Rice University in Houston, Texas, before moving to Northeastern in 2001.\n\nRobert Bruce Findler is a professor of electrical engineering and computer science at Northwestern University in Evanston, Illinois. He received his PhD in 2002 from Rice University, where he worked under the supervision of Matthias Felleisen.\n\nMatthew Flatt is a professor in the School of Computing at the University of Utah in Salt Lake City. He received his PhD in 1999 from Rice University, where he too worked under the supervision of Matthias Felleisen.\n\nShriram Krishnamurti is a professor of computer science at Brown University in Providence, Rhode Island. He was born in Bengaluru (formerly Bangalore), the capital of the Indian state of Karnataka. He received his PhD in 2000 from Rice University, where he also worked under the supervision of Matthias Felleisen.\n\nIn the 1990s, Felleisen developed PLT (âprogramming language theoryâ), a branch of computer science that investigates the analysis, classification, design, and implementation of programming languages according to their computational features.\n\nFelleisen is also the author of TeachScheme! (the predecessor of ProgramByDesign), a program which teaches program-design principles to beginners. Felleisen and his three former graduate students published this book in 2001 in order to make his insights available to a wider audience. A second edition of How to Design Programs was released in 2018.\n\nBy: John Palfrey and Urs Erwin Gasser 2008\n\nPalfrey (b. 1972) received his bachelorâs degree in 1994 from Harvard College. He has earned two doctorates: a DPhil in history from the University of Cambridge (1997) and a JD from Harvard Law School (2001). Palfrey taught at Harvard Law School for many years. Today, he is president of the MacArthur Foundation.\n\nGasser (b. 1972) is a Swiss-born professor at Harvard Law School. He also holds visiting professorships at Keio University in Japan and the University of St. Gallen in Switzerland.\n\nTheir book is an exploration of the ways in which the thinking of âdigital nativesâ differs from that of âdigital immigrants.â A âdigital nativeâ is someone who was born after the personal computing revolution (roughly after 1980). Such persons have grown up in a world equipped with computers and have never known anything else. A âdigital immigrantâ is someone born substantially before 1980, whose early childhood did not include computers and who has had to learn to use them as a teenager or adult.\n\nA revised and expanded edition of the book was published in 2016, with the subtitle âHow Children Grow Up in a Digital Age.â\n\nBy: Ronald Graham , Donald Knuth , and Oren Ptashnik, 1989\n\nGraham (1935â2020) received his PhD in mathematics in 1962 from the University of California, Berkeley. He spent much of his career at Bell Labs and AT&T Labs. Later, he taught at Rutgers University in New Brunswick, New Jersey, and the University of California, San Diego.\n\nFor Knuthâs bio, see #1 above.\n\nPtashnik (b. 1954) is a researcher at the Center for Communications Research in La Jolla, California. During the 1980s, he worked at Bell Labs. He received his PhD in computer science in 1990 from Stanford University, where he worked under the supervision of Donald Knuth.\n\nConcrete Mathematics is a popular introductory textbook in computer programming written in a witty, accessible style. The book is based on a set of lectures which Knuth began delivering in 1970 at Stanford University.\n\nIt also draws on the first hundred pages or so of the âMathematical Preliminariesâ section from the first volume of Knuthâs The Art of Computer Programming. As a result, readers can use it as an introduction to that series of books.\n\nThe term âconcreteâ in the bookâs title may be understood in two ways: (1) the math involved in the book is âconcreteâ in the sense that it is âapplied,â as opposed to âabstractâ; and (2) the title may also be construed as a contraction of the phrase âCONtinuous and disCRETE.â\n\nA second edition of Concrete Mathematics was published in 1994.\n\nBy: Thomas H. Cormen , Charles E. Leiserson , Ron Rivest , and Clifford Stein 1990\n\nCormen (b. 1956) is a professor of computer science at Dartmouth College. He obtained his PhD in computer science from the Massachusetts Institute of Technology (MIT) in 1993.\n\nLeiserson (b. 1953) is a professor of computer science at MIT. He received his PhD in computer science from Carnegie Mellon University in Pittsburgh, Pennsylvania in 1981.\n\nRivest (b. 1947) is an Institute Professor at MIT. He is also a member of MITâs Computer Science and Artificial Intelligence Laboratory (CSAIL). He received his PhD in computer science in 1974 from Stanford University. In 2002, Rivest received the Turing Award for his work in computer cryptography.\n\nStein (b. 1965) is a professor of industrial engineering and operations research, with a cross-appointment in computer science, at Columbia University in New York City. He earned his PhD in computer science from MIT in 1992.\n\nIntroduction to Algorithms is just what its title says: an introductory textbook to algorithms used in computer science. The book covers many of the fundamental topics students will encounter in this field, including (but not limited to) the following:\n\nAlgorithms\n\nSorting and Order Statistics\n\nElementary and Advanced Data Structures\n\nDesign and Analysis Techniques\n\nGraph Algorithms\n\nMatrix Operations\n\nLinear Programming\n\nPolynomials and the Fast Fourier Transform (FFT)\n\nNP-Completeness\n\nThe first three persons listed above co-authored the first edition of this book, which was published in 1990. A second edition appeared in 2001, at which time Stein was added as the fourth co-author. A third edition of the book was released in 2009 and a fourth edition has been announced for 2022.\n\nBy: Stephen Wolfram , 2002\n\nWolfram (b. 1959) was born in London into a family of German Jewish refugees. He was a child prodigy, who published his first peer-reviewed papers in quantum field theory and particle physics at the age of 15. He received his PhD in particle physics in 1979 from the California Institute of Technology (CalTech), where his dissertation was supervised by the storied Richard Feynman.\n\nAfter graduating, Wolfram joined the faculty of Caltech, before moving to the Institute for Advance Study in Princeton, New Jersey in 1983. In 1984, he was involved in the founding of the Santa Fe Institute for the study of complex systems in Santa Fe, New Mexico. Two years later, he founded the Center for Complex Systems Research (CCSR) at the University of Illinois at UrbanaâChampaign.\n\nDuring this period of his career, Wolfram was primarily involved in two projects: developing the theory of cellular automata and developing a new computer algebra system, called Mathematica.\n\nIn 1988, Wolfram left academia to found his own company, Wolfram Research, in order to turn his ideas into commercial reality. Wolfram Language is one of the many new products developed by Wolframâs company.\n\nIn his first book, A New Kind of Science, published in 2002, Wolfram presents an empirical study of simple computational systems such as cellular automata. He argues that such studies are important because the universe is inherently discrete in nature, not continuous. Hence, computer simulations based on discrete mathematics are inherently better-suited to the development of predictive models of empirical realityâespecially, complex systemsâthan the continuous mathematics of traditional physics based on partial differential equations.\n\nWolfram predicts that his computational approach to physics will have a revolutionary influence on physics, chemistry, biology, and, indeed, all areas of science (hence the bookâs title).\n\nBy: Adam Lashinsky , 2012\n\nLashinsky (born c. 1967) received his bachelorâs degree in history and political science in 1989 from the University of Illinois at Urbana-Champaign. After serving as a reporter, editor, and columnist for several business, economics, and technology journals, Lashinsky was appointed Senior Editor-at-Large for FORTUNE magazine. He writes primarily about Wall Street and Silicon Valley.\n\nThe book under consideration here is both a history and an analysis of the leadership patterns, strategies, and tactics adopted by Apple Inc. during its rise to global prominence. Inside Apple places stress on the transition that occurred in 1996 whenâwith the company on the brink of bankruptcyâApple co-founder Steve Jobs (1955â2011) returned to his former leadership role.\n\nWith only 90 days of cash on hand, Jobs began to turn his company around with a series of brilliantly designed and engineered products that proved to be wildly popular with the public, from the iPod, to the iPhone, to the iPad.\n\nBy the time of Jobsâs death in 2011, Apple Inc. had become the largest consumer electronics company in the world as measured by total global revenue. Today, with $274.5 billion in revenue earned in 2020, Apple remains the worldâs largest technology company.\n\nBy: Hal Abelson and Gerald Jay Sussman , with Julie Sussman, 1985\n\nAbelson (b. 1947) is Class of 1992 Professor of Computer Science and Engineering in the Department of Electrical Engineering and Computer Science at the Massachusetts Institute of Technology (MIT). He is a founder and director of both Creative Commons and the Free Software Foundation. He also directed the first implementation of the Logo programming language for the Apple II.\n\nGerald Sussman (b. 1947) is Panasonic Professor of Electrical Engineering at MIT. He has worked primarily in the areas of artificial intelligence (AI), programming languages, computer architecture, and Very Large-Scale Integration (VLSI) design.\n\nAbelson and Gerald Sussman are both principal investigators with MITâs Computer Science and Artificial Intelligence Lab (CSAIL). Julie Sussman is a computer programmer.\n\nThe book under consideration here is an introductory-level textbook in computer programming, which began life as the prescribed text in the principal authorsâ classes at MIT. Presenting its material in Scheme, a dialect of Lisp, the book takes an innovative pedagogical approach. Namely, it makes use of a cast of six fictitious characters with facetious names, each of whom represents a topic or aspect of the field. For example, the character âLem E. Tweakitâ is an irate user, while âAlyssa P. Hackerâ is a Lisp hacker.\n\nA second edition of the book was published in 1996.\n\nBy: Pedro M. Domingos , 2015\n\nDomingos (born c. 1966) is Professor Emeritus of computer science and engineering at the University of Washington in Seattle. He obtained his bachelorâs and masterâs degrees in computer science and electrical engineering in 1988 and 1992, respectively, from the Instituto Superior TÃ©cnico in Lisbon, Portugal. He received his PhD in information and computer sciences in 1997 from the University of California, Irvine.\n\nDomingosâs main field of research is machine learning. He is especially known for his work on uncertain inference, in connection with which he invented the Markov logic network.\n\nThis book advances a thesis about the nature of general or universal learningâmaking no distinction between human and machine learning. The thesis is that universal learning consists of five basic components:\n\ninductive reasoning\n\nconnectionism\n\nevolutionary computation\n\nBayesâs theorem\n\nanalogical modeling\n\nThe hypothetical âmaster algorithmâ that is the subject of this book will be a combination of algorithms embodying each of these five features. The author predicts that the master algorithm will become a reality in the near future and that it will grow rapidly in such a way as to approach asymptotically a perfect understanding of the universe and all its contents, including human beings themselves.\n\nOnce that occurs, any computer running such a well-trained master algorithm will be able to solve any problem more efficiently than any human being could.\n\nThe book was reprinted in 2018.\n\nBy: Steven Levy , 2021\n\nLevy (b. 1951) is a journalist and book author who specializes in the subjects of computers, technology, cryptography, the Internet, cybersecurity, and privacy. He received his bachelorâs degree from Temple University in Philadelphia and his masterâs degree in literature from Pennsylvania State University at State College.\n\nLevy was formerly chief technology writer and a senior editor for Newsweek magazine and is currently Editor-at-Large for Wired magazine. He has published his work in many prominent venues, including Rolling Stone, The New Yorker, The New York Times Magazine, and Harperâs.\n\nIn addition to his journalism, Levy has published eight books including the one under consideration here. This book is a history of the Google company. Its somewhat cryptic title is a reference to the word âgoogolplex,â from which Googleâs young founders derived their companyâs name.\n\nThe book begins with the origins of the company in 1996 as a dissertation project at Stanford University undertaken by PhD students Larry Page (b. 1973) and Sergey Brin (b. 1973). The result of their brilliant efforts was an Internet search engine that significantly outperformed all others.\n\nThe book then traces the rise of Google to the position of world dominance that the company enjoys today, with some 24,000 employees and an annual operating income in excess of $40 billion. The book received very positive reviews. Reviewers emphasized Levyâs ability to make difficult technical material intelligible to a general audience.\n\n12\n\nThe Jargon File\n\nBy: Eric S. Raymond , 1991\n\nRaymond (b. 1957) is an American software developer, open-source software advocate, blogger, and author. Raymond is probably best known as the author of the bestselling 1999 book, The Cathedral and the Bazaar on the open-source movement (see #21 below).\n\nIn 1996, the author took over the curation of an online dictionary of slang terms that had been in existence for some time, which he published that year in book form as the third edition of the so-called Jargon File. Before bringing Raymondâs efforts on The Jargon File up to date, let us review its history prior to 1996.\n\nThe âJargon Fileâ was originated by Raphael Finkel (b. 1951) at Stanford University in 1975. In the early years, it was also referred to simply as âthe File,â and after the publication of later editions, this first edition came to be referred to as âJargon-1.â\n\nFinkel soon passed the torch on to Don Woods (b. 1954); a little later it was picked up by Richard Stallman (b. 1953). In 1983, the latest version of the File up to that time was published under the editorship of Guy Steele (b. 1954). This book, which was titled The Hackerâs Dictionary and contained a commentary aimed at a mass market, constituted the first integral public presentation of the File.\n\nThe 1983 version of the File was based on contributions by Finkel, Woods, Stallman, Mark Crispin (b. 1949), and Geoff Goodfellow (b. 1956), but it became generally known as âSteele-83â for its general editor.\n\nRaymond took over curation of the file and published it as it was as of 1991 under the title, The New Hackerâs Dictionary (known as âRaymond-1991â). However, the explosive growth of the Internet during the early 1990s motivated Raymond to quickly publish yet another new edition, entitled The New Hackerâs Dictionary, Third Edition, in 1996.\n\nIn 2000, Raymond released a âversion 4.0â of The Jargon File. The latest incarnation of The Jargon File is a Kindle-only edition released in 2019.\n\nBy: Michael Garey and David S. Johnson, 1979\n\nGarey (b. 1945) earned his PhD in computer science in 1970 from the University of Wisconsin at Madison. He was employed by AT&T Bell Laboratories from 1970 until 1999, where he worked in the Mathematical Sciences Research Center.\n\nGarey specializes in computational complexity, discrete algorithms, graph theory, scheduling theory, and approximation algorithms. From 1978 until 1981 he served as Editor-in-Chief of the Journal of the Association for Computing Machinery.\n\nJohnson (1945â2016) earned his Ph.D. in mathematics from MIT in 1973. He worked at AT&T Bell Laboratories from 1988 to 2013, where he rose to become head of the Algorithms and Optimization Department. He was also a visiting professor at Columbia University from 2014 to 2016.\n\nA widely used and highly influential textbook, Computers and Intractability was the first book devoted exclusively to problems associated with NP-completeness. Though it is now somewhat outdated (for example, it lacks a discussion of the PCP Theorem), it remains a milestone and a classic of the field.\n\nThe reviews of this book could scarcely have been more glowing. For example, one critic wrote:\n\nI consider Garey and Johnson the single most important book on my office bookshelf. Every computer scientist should have this book on their shelves as well. ... Garey and Johnson has the best introduction to computational complexity I have ever seen.\n\nBy: Kai-Fu Lee , 2018\n\nLee (b. 1961) was born in Taipei, the capital of Taiwan. In 1973, he immigrated to the US. He earned his bachelorâs degree in computer science from Columbia University in 1983 and his PhD in computer science from Carnegie Mellon University in 1988.\n\nHis doctoral dissertation consisted of the development of Sphinx, the first large-vocabulary, speaker-independent, continuous speech recognition system. He later published two technical monographs on speech recognition. Lee has spent his career in the computing industry, moving from Apple, to Silicon Graphics, to Microsoft, to Google.\n\nIn 2009 Lee resigned from Google and undertook a career as a venture capitalist. His main project has been Sinovation Ventures, a leading Chinese technology venture capital firm with offices in Beijing, Shanghai, Guangzhou, Shenzhen, and Nanjing. The stated goal of Sinovation Ventures is to create five Chinese start-ups per year in the areas of Internet businesses and cloud computing.\n\nIn this book, Lee brings his dual expertise in technology and business in China to bear on an analysis of present technological, economic, and political trends and where they are likely to lead. Lee makes many startling and controversial observations in this book. For example, he observes that âIf data is the new oil, then China is the new Saudi Arabia.â He also praises China for subsidizing and according high status to the AI industry.\n\nAnother controversial section of the book explores the future impact that AI is likely to have on the nature of work available to the mass of the population in American and elsewhere.\n\nBy: Marvin Minsky , 1986\n\nMinsky (1927â2016) was born and raised in New York City. After a tour of duty in the US Navy during World War II, he received his bachelorâs degree in mathematics in 1950 from Harvard University and his PhD in mathematics in 1954 from Princeton University.\n\nMinsky joined the faculty of MIT in 1958 and remained there throughout his career. Together with John McCarthy (1927â2011), he co-founded what is known today as the MIT Computer Science and Artificial Intelligence Laboratory.\n\nMinsky is a seminal figure in the field of artificial intelligence (AI). His 1969 book Perceptrons, co-authored with Seymour Papert (1928â2016), is considered a foundational document in the history of machine learning based on neural networks. The same year that the pathbreaking book Perceptrons was published, Minsky was awarded the prestigious Turing Award.\n\nThe Society of Mind covers a very wide range of topics, from language, memory, and learning to consciousness, the self, and free will. For this reason, it is as much a work of philosophy as a computer science text.\n\nIn this book, the author presents his own model of human intelligence step by step. Minskyâs basic idea is that natural human intelligence is built up from the interactions among simple, mindless parts, which he calls âagentsâ (an unfortunate word choice, since in ordinary speech âagentsâ are themselves intelligent).\n\nMinsky then describes the result of the interactions among these myriad sub-intelligent âagentsâ as a âsociety of mindââhis term for intelligence, whether natural or artificial.\n\nBy: Nick Bostrom , 2014\n\nBostrom (b. 1974) was born as Niklas BostrÃ¶m in Helsingborg, Sweden. He received his bachelorâs degree in philosophy, mathematics, and artificial intelligence from the University of Gothenburg in 1994. Bostrom then earned two masterâs degrees, one in philosophy and physics from Stockholm University and the other in computational neuroscience from Kingâs College London, both in 1996. Finally, Bostrom received his PhD in philosophy from the London School of Economics in 2000.\n\nIn 2005, Bostrom founded the Future of Humanity Institute (FHI) at the University of Oxford. FHI explores the far future of human civilization. Bostrom is also associated with the University of Cambridgeâs Centre for the Study of Existential Risk.\n\nAfter graduating, he briefly taught at Yale University in the US and then occupied a Postdoctoral Fellowship back at the University of Oxford. After leaving academia, Bostrom made his living as a freelance writer. He has published four books and some 200 peer-reviewed academic papers.\n\nBostrom writes on many topics, but one of his main fields of interest is artificial intelligence and the threat it poses to humanityâs future. The book under consideration here is his most in-depth discussion of this theme. The âsuperintelligenceâ referred to in the title is a kind of general intelligence far exceeding that of human beings, with which the author claims computers and robots will be equipped at some point in the future.\n\nThe book offers an accessible account of the technical issues underlying artificial intelligence and its philosophical interpretations. But the author does more than merely explain these matters. He also considers what changes in political organization might be required for humanity to effectively protect itself from the threat he sees as being posed by the advent of superintelligence.\n\nThe book was reprinted in 2016.\n\nBy: Daniel H. Wilson , 2005\n\nWilson (b. 1978) was born in Tulsa, Oklahoma. He is a member of the Cherokee Nation. Wilson earned his bachelorâs degree in computer science in 2000 from the University of Tulsa. As an undergraduate, he spent a semester abroad studying philosophy at the University of Melbourne.\n\nWilson completed a double masterâs degree program, one in machine learning and one in robotics, as well as a PhD program in robotics, all in 2005 from Carnegie Mellon Universityâs Robotics Institute in Pittsburgh, Pennsylvania.\n\nDespite his sterling academic credentials, Wilson did not pursue an academic career, but rather has made his living as a freelance writer. Wilson has published six novels, one short story collection, a graphic novel, and four comic books. He has also authored or co-edited seven works of non-fiction, including the book under consideration here.\n\nHow to Survive a Robot Uprising was optioned by a Hollywood producer in 2005, Wilsonâs last year in graduate school. Although the film has not yet been made, this experience led to Wilsonâs involvement with movies.\n\nHe has gone on to write two screenplays himself based on his own novels. Two more of his novels have also been optioned, as well as one short story. The latter is his only film project to be produced so far. The Nostalgist was directed by Giacomo Cimino and premiered at the Palm Spring International Shortfest in 2014.\n\nThis book is a tongue-in-cheek satire in the form of a how-to manual. With abundant scientific detail, it explains how to survive in a world in which superintelligent robots (see #16 above) have rebelled against their human masters. The effectiveness of its dark, deadpan humor derives from its subtle exaggeration of scientific facts beyond the bounds of reasonableness.\n\nBy: Marvin Minsky , 2006\n\nLate in his life, Minsky (see #15 above) wrote a second book to update and clarify the ideas he expressed in his earlier book, The Society of Mind, published in 1986.\n\nIn the new book, Minsky basically tries to integrate the emotional or affective dimension of natural human intelligence (or âcommon senseâ) into his earlier âsociety of mindâ theory of intelligence as the resultant effect arising from the interactions among myriad unintelligent âagents.â\n\nIn a nutshell, Minsky downplays the distinctiveness of affectivity, arguing that the various emotions are simply âways to thinkâ about the different classes or types of problem situations that brains encounter in their interaction with the world.\n\nHe further claims that the brain employs ârule-based mechanismsâ embodying âselection rulesâ (basically, algorithms) in order to âturn onâ the appropriate emotions when a brain is faced with a specific kind of problem situation.\n\nThe author also uses his new book to review the achievements of AI, explaining why modeling natural intelligence, whether human or artificial, is so difficult.\n\nFinally, Minsky considers such fundamentally philosophical questions as whether artificial brains embodied in computers and robots will really be able to think and, if so, what their experiencesâtheir pleasures, sufferings, and so onâmight be like.\n\nBy: Andrew S. Tanenbaum and Herbert Bos , 1992\n\nTanenbaum (b. 1944) was born in New York City and grew up in White Plains, New York. He received his bachelorâs degree in physics in 1965 from MIT and his PhD degree in astrophysics in 1971 from the University of California, Berkeley.\n\nTanenbaum is currently Professor Emeritus of Computer Science at the Vrije Universiteit Amsterdam (Free University of Amsterdam) in the Netherlands. He was a co-founder and served as the first Dean of a Dutch academic consortium known as the Advanced School for Computing and Imaging, with faculty from Vrije Universiteit Amsterdam, Delft University of Technology, and Leiden University.\n\nTanenbaum is perhaps best known as the inventor of MINIX, a free, Unix-like operating system for teaching. He is also well known for a famous 1992 debate with Linus Torvalds (b. 1969) regarding Usenet. In 2004, he founded the web site electoral-vote.com. Finally, Tanenbaum has advised an unusually large contingent of graduate students during his career at the Vrije Universiteit Amsterdam, many of whom have gone on to distinguished careers in computer science.\n\nHerbert Bos is currently a full professor of computer science at the Vrije Universiteit Amsterdam. He received the degree of Ingenieur in computer science in 1994 from the University of Twente in Enschede, the Netherlands, and his PhD in computer science in 1999 from the University of Cambridgeâs Computer Laboratory.\n\nBos joined Tanenbaum as co-author of Modern Operating Systems for the fourth edition published in 2014. The book under consideration here is a direct descendent of the book, Operating Systems: Design and Implementation, a textbook that Tanenbaum first published in 1987. The new book is basically the same as the old one, with the material relating to implementation omitted.\n\nThe book is written in autonomous C language and covers the fundamentals of Minix and other operating systems. The book describes many scheduling algorithms. Now in its fourth edition, Modern Operating Systems has proven to be a very popular textbook worldwide.\n\nBy: Donald Knuth , 2001\n\nOften referred to as the âFather of Computer Science,â Donald Knuth (see #1 and #5 above) is uniquely qualified to comment on the larger philosophical significance of computer science.\n\nWith this book, Knuth has given us the benefit of his unparalleled experience and wisdom concerning the connection between computer technology and religion.\n\nAmong the large questions Knuth addresses in this remarkable book are:\n\nthe relationship between computation and infinity\n\nthe bearing of probability theory on free will\n\nthe place of mathematics in oneâs personal understanding of the sacred\n\nThe book began life as a series of lectures delivered at MIT in 1999 on the topic of computers and religion. The following is a list of the lecture titles, which also makes up the published bookâs table of contents:\n\nLecture 1: Introduction\n\nLecture 2: Randomization and Religion\n\nLecture 3: Language Translation\n\nLecture 4: Aesthetics\n\nLecture 5: Glimpses of God\n\nLecture 6: God and Computer Science\n\nFor the book, Knuth added an additional concluding section entitled âPanel: Creativity, Spirituality, and Computer Science.â\n\nOne reviewer, writing in the immediate aftermath of the lectures in 1999, summed up Knuthâs work with the following headline:\n\nâComputer God Speaks About God, Computersâ\n\nBy: Eric S. Raymond , 1999\n\nIn this book, Raymond (see #12 above) recounts his experience as a developer of the Linux kernel and a manager of the open source project known as fetchmail. He uses his own personal history as a backdrop for reflections on the eternal struggle between top-down and bottom-up approaches to system design.\n\nThe title of the book is based on the symbols of the medieval cathedral as an example of a top-down (centralized, goal-directed) system and of the bazaar (or market) as an example of a bottom-up (distributed, self-organizing) system.\n\nThe book grew out of a paper the author first presented at the Linux Kongress in 1997 in WÃ¼rzburg, Germany. In 1999, the book was both published in English and self-published in German as Die Kathedrale und der Basar.\n\nThe book also advances many ideas concerning the best way to practice operating system design, including the following assertions:\n\nGood software flows from a programmerâs personal interests and commitments\n\nRewriting and beta testing are essential to the process\n\nIntelligently designed data structures are more important than coding\n\nThe next-best thing to having your own good ideas is recognizing your usersâ good ideas\n\nInnovation often lies in reconceptualizing the problem\n\nSimplify as much as possible\n\nA good tool should do what it is intended to do; a great took does unanticipated things\n\nBy: Ray Kurzweil , 1999\n\nKurzweil (b. 1948) was born and raised in New York City. He obtained his bachelorâs degree in computer science and literature in 1970 from MIT, where he was a student of Marvin Minskyâs (see #15 and #18 above).\n\nWhile still an undergraduate at MIT, Kurzweil founded a company which used a program he had written to match high school students with potential colleges. He soon sold this company for three-quarters of a million dollars in todayâs money.\n\nIn 1974, Kurzweil used his profits to start another company, Kurzweil Computer Products, Inc. One of the new companyâs first products was first omni-font optical character recognition (OCR) systemâa computer program capable of recognizing text written in any normal font. This product was immensely successful. Among the companyâs many OCR-related products is the Kurzweil Reading Machine for the blind.\n\nIn 1984, Kurzweil founded Kurzweil Music Systems, whose first product was Kurzweil K250, a vastly improved electronic music synthesizer. Tests showed that trained musicians were unable to distinguish between sounds produced by a Kurzweil K250 set on piano mode and those produced by a real grand piano.\n\nDuring the late 1980s and 1990s, Kurzweil founded several new companies, including one in the education sector, which combined his previously developed OCR capabilities with new pattern-recognition technologies to help people with disabilities such as blindness, dyslexia and attention-deficit hyperactivity disorder (ADHD) with their school work.\n\nBeginning around 1990, and at increasing pace after 2000, Kurzweil turned his attention to writing projects, mainly on the topics of computer-human interaction and futurism, more generally. Altogether, he has written seven nonfiction books, including the one under consideration here, as well as one novel.\n\nIn a nutshell, Kurzweil argues in this book that continuous improvements in the intelligence of computers must inevitably lead to machines with human-like and, eventually, more-than-human capabilities, including the emergence of subjective consciousness (hence the bookâs title). Kurzweil dubs this event âthe singularity,â meaning the moment when computers pass a point of no return, when it will no longer be possible for human beings to control them.\n\nThe Age of Spiritual Machines is a mixture of solid computer science, reasonable speculation about the future development of artificial intelligence, controversial philosophy, and dubious claims about the future. The book attracted a large amount of attention from various intellectual communities, from academic computer scientists and philosophers to the fantasy and science fiction community and the general reading public.\n\nAn anthology of essays on this bookâentitled Are We Spiritual Machines?: Ray Kurzweil vs. the Critics of Strong A.I. and edited by Jay W. Richardsâwas published in 2001. It contained contributions by Kurzweil and the distinguished philosopher, John Searle (b. 1932), among others.\n\nIn addition to Searle, many other philosophers have weighed in on The Age of Spiritual Machines, as well as its sequel, The Singularity is Near (2005). In general, one may say that the computer science communityâs view of Kurzweilâs work has been far more favorable than that of philosophers.\n\nBy: Frederick P. Brooks, Jr., 1975\n\nBrooks (b. 1931) was born in Durham, North Carolina. He obtained his bachelorâs degree in physics in 1953 from Duke University, located in his hometown. He then received his PhD in applied mathematics (computer science) in 1956 from Harvard University in Cambridge, Massachusetts.\n\nIn 1956, Brooks went to work for IBM, where he contributed to the development of several new computer systems before being appointed to lead the development of the IBM System/360 family of computers and the OS/360 software package. During this time period, he invented the phrase âcomputer architectureâ to describe the design of operating systems.\n\nIn 1964, Brooks accepted a position with the University of North Carolina at Chapel Hill, where he spent the rest of his career. He won the coveted Turing Award in 1999.\n\nBrooksâs book is about the various aspects of project development scheduling. It advances the thesis that the concept of a âman-monthââthe theoretical amount of work done that can be performed by one person in one monthâis not a useful metric with which to measure progress in the field of computer software engineering.\n\nThis book has been widely read and discussed. Its main idea was summed up by Brooks with the catchy phrase âadding manpower to a late software project makes it later.â In this form, it became famous as âBrooksâs Law.â\n\nBrooks once remarked that more people cited his âlawâ than obeyed it, saying he should have called his book, The Bible of Software Engineering, because âeverybody quotes it, some people read it, and a few people go by it.â\n\nA second edition of the book was published in 1982, while a third, twentieth-anniversary edition was published in 1995. The twentieth-anniversary edition contained an appendix featuring a famous essay Brooks had written in 1986 entitled âNo Silver BulletâEssence and Accident in Software Engineering.â\n\nBy: William Cheswick , Steven M. Bellovin , and Aviel D. Rubin 1994\n\nCheswick (born c. 1953) received his bachelorâs degree in fundamental science in 1975 from Lehigh University, in Bethlehem, Pennsylvania. He worked for several companies, including Computer Sciences Corporation, before joining AT&T Bell Labs in 1987, where he and Bellovin developed the first computer network firewall.\n\nBellovin (born c. 1950) earned his bachelorâs degree in 1972 from Columbia University in New York City and his PhD in 1982 from the University of North Carolina at Chapel Hill. He worked for AT&T Bell Labs from 1982 until 2004. Since 2005, he has been a professor of computer science at Columbia University.\n\nRubin (b. 1967) received his bachelorâs, masterâs, and PhD degrees in computer science and engineering in 1989, 1991, and 1994, respectively, all from the University of Michigan at Ann Arbor. He is currently Professor of Computer Science at Johns Hopkins University in Baltimore, Maryland.\n\nThis book recounts the development of the first computer network firewall by Cheswick and Bellovin at AT&T Labs in the 1980s. Their work helped define the concept of a firewall and heavily influenced the later formation of the perimeter security model, which during the mid-1990s became the dominant network security architecture.\n\nCheswick and Bellovin authored the first edition alone. They were joined by Rubin as co-author for the second edition, published in 2003.\n\nBy: John von Neumann , 1958\n\nVon Neumann (1903â1957) was born and raised in Budapest, Hungary, into a middle-class, non-observant Jewish family. He was a child prodigy who at the age of six could divide eight-digit numbers in his head and converse in ancient Greek.\n\nAt the age of 19, von Neumann published a mathematics paper which gave the modern definition of ordinal numbers, superseding the definition advanced by Georg Cantor (1845â1918) that had been current up until that time.\n\nVon Neumann pursued two courses of graduate studies simultaneously, earning a diploma in chemical engineering from ETH Zurich and a PhD in mathematics from PÃ¡zmÃ¡ny PÃ©ter University in Budapest, both in 1926. He then studied with David Hilbert (1862â1943) at the University of GÃ¶ttingen, where he completed his Habilitation in 1927.\n\nAfter finishing his formal studies, von Neumann concentrated on mathematics. By the end of 1929, he had published over 30 ground-breaking papersâachieving an incredible pace of more than one a month!\n\nAfter briefly working as a Privatdozent at the Universities of Berlin and Hamburg, in 1930 von Neumann received an offer to join the Institute for Advanced Study (IAS) in Princeton, New Jersey. Three year later, the IAS offered von Neumann a lifetime professorship.\n\nDuring World War II, von Neumann was recruited for the Manhattan Project and made important contributions to the development of the first atomic bomb.\n\nVon Neumann made major contributions to an amazing number of fields of mathematics and science, of which the following are only some of the best known:\n\nPure Mathematics\n\nSet theory\n\nProof theory\n\nErgodic theory\n\nMeasure theory\n\nFunctional analysis\n\nTopological groups\n\nOperator algebras\n\nGeometry\n\nLattice theory\n\nPhysics\n\nFoundations of quantum mechanics\n\nVon Neumann Entropy\n\nQuantum mutual information\n\nDensity matrices\n\nQuantum logic\n\nMathematical Statistics\n\nFluid dynamics\n\nSocial Science\n\nGame theory\n\nEconomics\n\nLinear programming\n\nComputer Science\n\nMerge/sort algorithm\n\nComputer architecture\n\nCellular automata\n\nArtificial intelligence\n\nVon Neumann began to take an interest in the theory of computation even before World War II. He worked briefly with the father of computer science, Alan Turing (1912â1954), when the latter visited the IAS in the late 1930s.\n\nAfter the war, von Neumann became deeply involved in the design and implementation of the first electronic digital computers. Specifically, he worked closely on the EDVAC (Electronic Discrete Variable Automatic Computer), which was the worldâs first computer to be based on binary arithmetic (the earlier ENIAC had still been based on the decimal system). EDVAC was built at the Ballistic Research Laboratory at Aberdeen Proving Ground, a US Army installation in Maryland, between 1944 and 1949.\n\nVon Neumannâs second major computer project was the IAS Machine, built at the IAS between 1945 and 1951 under his supervision and utilizing an architecture designed by him, now known as the âvon Neumann architecture.â\n\nFinally, von Neumann, who was universally known to his American friends as âJohnny,â was playfully immortalized by the RAND Corporation in their machine, the âJohnniac,â which copied the IAS Machineâs architecture and ran continuously from 1953 until 1966. The tongue-in-cheek nickname âJohnniacâ supposedly stood for âJohn von Neumann Numerical Integrator and Automatic Computer.â\n\nThe book under consideration here was originally intended for Yaleâs prestigious Silliman Lecture series, but von Neumann did not live to deliver the lectures or this posthumously published book, which is based on his unfinished lecture notes.\n\nThis book was an early and important contribution to the computational theory of the mind. It argues that the brain must be a kind of digital computer, though one with many features that surpass the technology of Von Neumannâs day. The author speculates about the directions in which computers would have to develop to achieve the full capabilities of the human brain.\n\nA second edition of the book was published in 2000, while a third edition was published in 2012."
    }
}