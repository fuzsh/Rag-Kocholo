{
    "id": "wrong_mix_property_subsidiary_00139_1",
    "rank": 17,
    "data": {
        "url": "https://www.jcp.org/en/jsr/detail%3Fid%3D122",
        "read_more_link": "",
        "language": "en",
        "title": "The Java Community Process(SM) Program",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.jcp.org/images/spacer.gif",
            "https://www.jcp.org/images/button_go.gif",
            "https://www.jcp.org/images/spacer.gif",
            "https://www.jcp.org/images/hr_dots1.gif",
            "https://www.jcp.org/images/hd_find-jsrs.gif",
            "https://www.jcp.org/images/button_go.gif",
            "https://www.jcp.org/images/spacer.gif",
            "https://www.jcp.org/images/hd_my-jcp.gif",
            "https://www.jcp.org/images/global/spacer.gif",
            "https://www.jcp.org/images/hr_dots1.gif",
            "https://www.jcp.org/images/global/spacer.gif",
            "https://www.jcp.org/images/hd_jcp-info.gif",
            "https://www.jcp.org/images/spacer.gif",
            "https://www.jcp.org/images/ad_banner2.gif",
            "https://www.jcp.org/images/common/trans.gif",
            "https://www.jcp.org/images/common/trans.gif",
            "https://www.jcp.org/images/global/bar_green.gif",
            "https://www.jcp.org/images/global/bar_green.gif",
            "https://www.jcp.org/images/global/spacer.gif",
            "https://www.jcp.org/images/spacer.gif",
            "https://www.jcp.org/images/common/logo_oracle_footer.gif",
            "https://www.jcp.org/images/spacer.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "JSRs: Java Specification Requests\n\nJSR 122: JAINTM JCAT\n\nStage Access Start Finish Withdrawn 05 Apr, 2016 Public Review Download page 27 Aug, 2003 26 Sep, 2003 Community Draft Ballot View results 08 Jul, 2003 14 Jul, 2003 Community Review Login page 02 Jun, 2003 14 Jul, 2003 Expert Group Formation 08 May, 2001 JSR Review Ballot View results 24 Apr, 2001 07 May, 2001\n\nStatus: Withdrawn\n\nReason: We see no reason to keep it as there has be no development or interest for a long time and we do not intend to further evolve the standard.\n\nJCP version in use: 2.1\n\nJava Specification Participation Agreement version in use: 1.0\n\nDescription:\n\nThis develops the JavaTM Coordination and Transaction (JCAT) specification, which perceives Java Call Control (JCC) as its core package and extends it with concepts to model and control terminal capabilities.\n\nPlease direct comments on this JSR to the Spec Lead(s)\n\nSpecification Leads Christer Boberg Ericsson AB Expert Group Avaya Ericsson AB IBM Haifa Research Lab Net4Call A.S. TrueTel Communications Inc\n\nThis JSR has been Withdrawn\n\nReason: We see no reason to keep it as there has be no development or interest for a long time and we do not intend to further evolve the standard.\n\nThis section contains updates to the original request.\n\n2013.04.16: Ericsson AB has become the Specification Lead.\n\nSpecification Lead: Christer Boberg, Ericsson AB\n\nE-Mail Address: christer.boberg @ericsson.com\n\nTelephone Number: -\n\nFax Number: -\n\nOriginal Java Specification Request (JSR)\n\nIdentification | Request | Contributions\n\nOriginal Summary: This JSR is to develop the JavaTM Coordination and Transaction (JCAT) specification. JCAT perceives Java Call Control (JCC) as its core package and extends it with concepts to model and control terminal capabilities. Furthermore, JCC's state transitions models are enriched and more control is provided over its processing.\n\nSection 1. Identification\n\nSubmitting Member: Telcordia Technologies, Inc.\n\nName of Contact Person: Ravi Jain\n\nE-Mail Address: rjain@telcordia.com\n\nTelephone Number: +1 973 829 3178\n\nFax Number: +1 973 829 2645\n\nSpecification Lead: Ravi Jain\n\nE-Mail Address: rjain@telcordia.com\n\nTelephone Number: +1 973 829 3178\n\nFax Number: +1 973 829 2645\n\nInitial Expert Group Membership:\n\nAePONA\n\nBT\n\nIBM\n\nLucent\n\nMotorola\n\nNokia\n\nNortel Networks\n\nTelcordia\n\nUlticom\n\nSUN\n\nSection 2: Request\n\n2.1 Please describe the proposed Specification:\n\nJavaTM Coordination and Transaction (JCAT) includes (but is not limited to) the facilities required for applications to be invoked and return results before, during or after calls; to process call parameters or subscriber-supplied information; and to engage in further call processing and control.\n\nJCAT perceives JavaTM Call Control (JCC) as its core call control model. JCAT extends the JCC call control model with terminal capabilities and it enriches JCC's state diagrams such that an even more diverse range of applications can be supported. The AIN/IN class of applications is an example of applications that can be supported.\n\nThe name JCAT was taken from a previous JSR (JSR 000021). If the expert group feels the name is not applicable, it may be decided to change the name.\n\n2.2 What is the target Java platform? (i.e., desktop, server, personal, embedded, card, etc.)\n\nJavaTM 2 platform Standard Edition, JavaTM 2 platform Enterprise Edition.\n\n2.3 What need of the Java community will be addressed by the proposed specification?\n\nThe JAIN JCAT Specification defines an API which allows for the rapid creation and deployment of a diverse range of and dynamic telephony services into a Java telephony platform. Traditionally, telephony applications require costly resources to develop, test, and deploy. A JAIN software component written to the JCAT API can be rapidly developed, tested, and integrated on a variety of platforms with access to numerous tools and utilities. A JAIN cross-platform solution gives the Carriers, Service Providers, and Network Equipment Providers a consistent, open environment where they can develop and deploy telephony services.\n\n2.4 Why isn't this need met by existing specifications?\n\nJCAT includes facilities not found in existing specifications, such as JCC. JCC is intended to be the core for JCAT and therefore JCC's facilities do not conflict with the JCAT facilities.\n\n2.5 Please give a short description of the underlying technology or technologies:\n\nThe JAIN JCAT Specification will provide an interface to underlying call processing platforms (which are assumed to include coordination and transactions facilities) supplied by the JAIN JSPA members and other third-party platform implementers. It is expected that JAIN JCC/JCAT platform providers will support a variety of lower-layer signaling, coordination and transaction protocols, such as MGCP, SIP, H.323, ISUP, TCAP, etc., in order to implement the facilities provided via the JCC/JCAT APIs. However, through the JAIN JCC/JCAT APIs, a JAIN JCC/JCAT application is abstracted from the functions and peculiarities of different vendors' call processing platforms.\n\n2.6 Is there a proposed package name for the API Specification? (i.e., javapi.something, org.something, etc.)\n\njain.application.services.jcat\n\n2.7 Does the proposed specification have any dependencies on specific operating systems, CPUs, or I/O devices that you know of?\n\nNone\n\n2.8 Are there any security issues that cannot be addressed by the current security model?\n\nNone\n\n2.9 Are there any internationalization or localization issues?\n\nJCAT is expected to be modular, extensible and defined at a sufficient level of abstraction so that it can be adapted to the needs of the markets.\n\n2.10 Are there any existing specifications that might be rendered obsolete, deprecated, or in need of revision as a result of this work?\n\nJCAT depends on JAIN JCC. This specification may impact JAIN JCC and may draw new requirements for the JCC specification. JCAT is aware of the APIs developed under the JAIN SPA activity, JCAT foresees to interwork with these APIs. None of the JAIN SPA APIs are expected to be duplicated or impacted by this work.\n\n2.11 Please describe the anticipated schedule for the development of this specification.\n\nJSR Approved : April '01\n\nExpert Group Draft : end Jun '01\n\nCommunity Draft on JCP website : end Sept '01\n\nProposed Final Draft on JCP website : end Dec '01\n\nRI & TCK complete : end Jan '02\n\nFinal Release on JCP website : end Feb '02\n\nSection 3: Contributions\n\n3.1 Please list any existing documents, specifications, or implementations that describe the technology. Please include links to the documents if they are publicly available.\n\nJCC Specification (JSR 000021)\n\nITU-T Q.1200 series recommendations\n\nJTAPI\n\n3.2 Explanation of how these items might be used as a starting point for the work.\n\nJCAT inherits from the JCC package. The mentioned terminal capabilities are similar to those found in JTAPI. Furthermore, concepts found in the Basic Call Model (BCM) are applied to extend JCC's call information retrieval capabilities and to engage in further call processing and control."
    }
}