{
    "id": "dbpedia_4314_3",
    "rank": 79,
    "data": {
        "url": "https://wordpress.org/plugins/advanced-custom-fields/",
        "read_more_link": "",
        "language": "en",
        "title": "Advanced Custom Fields (ACF)",
        "top_image": "https://ps.w.org/advanced-custom-fields/assets/banner-772x250.jpg?rev=3096880",
        "meta_img": "https://ps.w.org/advanced-custom-fields/assets/banner-772x250.jpg?rev=3096880",
        "images": [
            "https://ps.w.org/advanced-custom-fields/assets/banner-772x250.jpg?rev=3096880",
            "https://ps.w.org/advanced-custom-fields/assets/icon.svg?rev=3096880",
            "https://ps.w.org/advanced-custom-fields/assets/screenshot-1.jpg?rev=3096879",
            "https://ps.w.org/advanced-custom-fields/assets/screenshot-2.jpg?rev=3096880",
            "https://ps.w.org/advanced-custom-fields/assets/screenshot-3.jpg?rev=3096880",
            "https://ps.w.org/advanced-custom-fields/assets/screenshot-4.jpg?rev=3096880",
            "https://ps.w.org/advanced-custom-fields/assets/screenshot-5.jpg?rev=3096880",
            "https://secure.gravatar.com/avatar/337d759f095e1f31f874b553bffe3942?s=60&d=retro&r=g",
            "https://secure.gravatar.com/avatar/8e826a449b099c9960502c9c1bde7fee?s=60&d=retro&r=g",
            "https://secure.gravatar.com/avatar/e20e2b16aedb1e33dc8ee5638a71c658?s=60&d=retro&r=g",
            "https://secure.gravatar.com/avatar/90a745242d4a837404688afa0bdb7376?s=60&d=retro&r=g",
            "https://secure.gravatar.com/avatar/9a1665a52b4cd855e3c6d33c906d702d?s=60&d=retro&r=g",
            "https://secure.gravatar.com/avatar/8f77146051b60edccc6af52433add727?s=60&d=retro&r=g",
            "https://secure.gravatar.com/avatar/696d233d4e88b868c385da3480a7730f?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/c49ce4c563ebe19c03fb3af0348f162e?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/533079e82e526367047100d8019cb9a7?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/c0ec3df5b2d5cf25ca1ab1fc3fdbe270?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/1c126b5df1afc631b50bae0dda8094d7?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/453fbc8dfd108125f351d60fd2c1afe7?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/459d1a78b2c7c46729a175c372a9be4f?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/c0528da391a7f8b5a403404224347421?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/920dd5ed3b01d7185cc421e15e75ef07?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/696d233d4e88b868c385da3480a7730f?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/c49ce4c563ebe19c03fb3af0348f162e?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/533079e82e526367047100d8019cb9a7?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/c0ec3df5b2d5cf25ca1ab1fc3fdbe270?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/1c126b5df1afc631b50bae0dda8094d7?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/453fbc8dfd108125f351d60fd2c1afe7?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/459d1a78b2c7c46729a175c372a9be4f?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/c0528da391a7f8b5a403404224347421?s=32&d=mm&r=g",
            "https://secure.gravatar.com/avatar/920dd5ed3b01d7185cc421e15e75ef07?s=32&d=mm&r=g",
            "https://s.w.org/style/images/code-is-poetry-for-dark-bg.svg"
        ],
        "movies": [
            "https://www.youtube.com/embed/9C6_roqghZQ?version=3&rel=0&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en-US&autohide=2&wmode=transparent"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Tessa (they",
            "AuRise Creative",
            "WP Engine"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "ACF helps customize WordPress with powerful, professional and intuitive fields. Proudly powering over 2 million sites, WordPress developers love ACF.",
        "meta_lang": "en",
        "meta_favicon": "https://s.w.org/favicon.ico?2",
        "meta_site_name": "WordPress.org",
        "canonical_link": "https://wordpress.org/plugins/advanced-custom-fields/",
        "text": "Description\n\nAdvanced Custom Fields (ACF) turns WordPress sites into a fully-fledged content management system by giving you all the tools to do more with your data.\n\nUse the ACF plugin to take full control of your WordPress edit screens, custom field data, and more.\n\nAdd fields on demand.\n\nThe ACF field builder allows you to quickly and easily add fields to WP edit screens with only the click of a few buttons! Whether it’s something simple like adding an “author” field to a book review post, or something more complex like the structured data needs of an ecommerce site or marketplace, ACF makes adding fields to your content model easy.\n\nAdd them anywhere.\n\nFields can be added all over WordPress including posts, pages, users, taxonomy terms, media, comments and even custom options pages! It couldn’t be simpler to bring structure to the WordPress content creation experience.\n\nShow them everywhere.\n\nLoad and display your custom field values in any theme template file with our hassle-free, developer friendly functions! Whether you need to display a single value or generate content based on a more complex query, the out-of-the-box functions of ACF make templating a dream for developers of all levels of experience.\n\nAny Content, Fast.\n\nTurning WordPress into a true content management system is not just about custom fields. Creating new custom post types and taxonomies is an essential part of building custom WordPress sites. Registering post types and taxonomies is now possible right in the ACF UI, speeding up the content modeling workflow without the need to touch code or use another plugin.\n\nSimply beautiful and intentionally accessible.\n\nFor content creators and those tasked with data entry, the field user experience is as intuitive as they could desire while fitting neatly into the native WordPress experience. Accessibility standards are regularly reviewed and applied, ensuring ACF is able to empower as close to anyone as possible.\n\nDocumentation and developer guides.\n\nOver 10 plus years of vibrant community contribution alongside an ongoing commitment to clear documentation means that you’ll be able to find the guidance you need to build what you want.\n\nFeatures\n\nSimple & Intuitive\n\nPowerful Functions\n\nOver 30 Field Types\n\nExtensive Documentation\n\nMillions of Users\n\nLinks\n\nWebsite\n\nDocumentation\n\nSupport\n\nACF PRO\n\nPRO\n\nThe Advanced Custom Fields plugin is also available in a professional version which includes more fields, more functionality, and more flexibility. The ACF PRO plugin features:\n\nThe Repeater Field allows you to create a set of sub fields which can be repeated again, and again, and again.\n\nACF Blocks, a powerful PHP-based framework for developing custom block types for the WordPress Block Editor (aka Gutenberg).\n\nDefine, create, and manage content with the Flexible Content Field, which provides for multiple layout and sub field options.\n\nUse the Options Page feature to add custom admin pages to edit ACF fields.\n\nBuild fully customisable image galleries with the Gallery Field.\n\nUnlock a more efficient workflow for managing field settings by reusing existing fields and field groups on demand with the Clone Field.\n\nUpgrade to ACF PRO\n\nScreenshots\n\nInstallation\n\nFrom your WordPress dashboard\n\nVisit Plugins > Add New\n\nSearch for “Advanced Custom Fields” or “ACF”\n\nInstall and Activate Advanced Custom Fields from your Plugins page\n\nClick on the new menu item “ACF” and create your first custom field group, or register a custom post type or taxonomy.\n\nRead the documentation to get started\n\nFAQ\n\nWhat kind of support do you provide?\n\nSupport Forums. Our ACF Community Forums provide a great resource for searching and finding previously answered and asked support questions. You may create a new thread on these forums, however, it is not guaranteed that you will receive an answer from our support team. This is more of an area for ACF developers to talk to one another, post ideas, plugins and provide basic help. View the Support Forum\n\nReviews\n\nI used to write little custom plugins to create custom post types, custom taxonomies, and custom meta data for them. This simplifies the process with a rock solid easy to use interface that drastically reduces the time need to build anything out. It does everything, is easily transportable between projects, & repeatable. Like butter!\n\nAdvanced Custom Fields speeds up the development time of complex projects. Rather than spending countless hours coding custom functionality, we leverage ACF to get the job done in half the time. As long as it can be imagined, it can be accomplished using ACF.\n\nACF v4 with add-ons was installed on my site by a developer ten years ago, and I ran into issues attempting to update. The technician (Alvin Muthui) patiently answered all questions, tested updates on my staging site, corrected db issues and even located a small, key PHP problem. The v6 plugin now runs perfectly. I’m amazed and immensely thankful for the time, kindness and skill offered by the ACF team – along with providing an essential plug-in, they’re uncommonly committed to helping users at all levels. Definitely five stars….\n\nI use the plugin to create custom fields and am very satisfied with it\n\n1 reply\n\nTHE NEW ACF UPDATE CRASHING MY WEBSITE When i activate it, why ?\n\n1 reply\n\nI’ve been using ACF free and PRO for years. It’s even replaced Custom Post Type UI in my installs since ACF added custom post type creation and management (with the only difference I’ve needed is that if you need to change the post type’s slug and migrate posts from the old one to the new, ACF does not handle that yet while CPTUI has been for years). I’ve found it to be incredibly user friendly for my content editors in WordPress backoffice and developer friendly for me! I’ve not had any issue figuring out their documentation either. My only critique, and it doesn’t even hurt the star rating because it’s not something I’d expect their plugin to handle, is that it can easily bloat your postmeta and termmeta data tables if you have a lot of fields and a lot of posts with data in those fields. Having a lot of rows can slow your queries and ultimately affect the site’s overall performance so one of my current projects is finding a way to move the ACF data into their own tables in the database without losing functionality.\n\nRead all 1,218 reviews\n\nContributors & Developers\n\n“Advanced Custom Fields (ACF)” is open source software. The following people have contributed to this plugin.\n\nContributors\n\nDelicious Brains\n\nWP Engine\n\nElliot Condon\n\nMatt Shaw\n\nLiam Gladdy\n\nAnthony Burchell\n\nPhil Johnston\n\nDale Williams\n\nIain Poulson\n\n“Advanced Custom Fields (ACF)” has been translated into 31 locales. Thank you to the translators for their contributions.\n\nTranslate “Advanced Custom Fields (ACF)” into your language.\n\nInterested in development?\n\nBrowse the code, check out the SVN repository, or subscribe to the development log by RSS.\n\nChangelog\n\n6.3.5\n\nRelease Date 1st August 2024\n\nFix – The ACF Shortcode now correctly outputs a comma separated list of values for arrays\n\nFix – ACF Blocks rendered in auto mode now correctly re-render their previews after editing fields\n\nFix – ACF Block validation no longer raises required validation messages if HTML will automatically select the first value when rendered\n\nFix – ACF Block validation no longer raises required validation messages if a default value will be rendered as the field value\n\nFix – ACF Block validation no longer raises required validation messages for fields hidden by conditional logic when adding a new block\n\n6.3.4\n\nRelease Date 18th July 2024\n\nSecurity Fix – The ACF shortcode now prevents access to fields from different private posts by default. View the release notes for more information\n\nFix – Users without the edit_posts capability but with custom capabilities for a editing a custom post type, can now correctly load field groups loaded via conditional location rules\n\nFix – Block validation no longer validates a field’s sub fields on page load, only on edit. This resolves inconsistent validation errors on page load or when first adding a block\n\nFix – Deactivating an ACF PRO license will now remove the license key even if the server call fails\n\nFix – Field types returning objects no longer cause PHP warnings and errors when output via the_field, the_sub_field or the ACF shortcode, or when retrieved by a get_ function with the escape html parameter set\n\nFix – Server side errors during block rendering now gracefully displays an error to the editor\n\n6.3.3\n\nRelease Date 27th June 2024\n\nEnhancement – All dashicons are now available to the icon picker field type\n\nFix – The True/False field now correctly shows it’s description message beside the switch when using the Stylized UI setting\n\nFix – Conditional logic values now correctly load options when loaded over AJAX\n\nFix – ACF PRO will no longer trigger license validation calls when loading a front-end page\n\ni18n – Fixed an untranslatable string on Option Page previews\n\n6.3.2.1\n\nRelease Date 24th June 2024\n\nPRO Only Release\n\nFix – ACF Blocks no longer trigger a JavaScript error when fetched via AJAX\n\n6.3.2\n\nRelease Date 24th June 2024\n\nSecurity Fix – ACF now generates different nonces for each AJAX-enabled field, preventing subscribers or front-end form users from querying other field results\n\nSecurity Fix – ACF now correctly verifies permissions for certain editor only actions, preventing subscribers performing those actions\n\nSecurity Fix – Deprecated a legacy private internal field type (output) to prevent it being able to output unsafe HTML\n\nSecurity Fix – Improved handling of some SQL filters and other internal functions to ensure output is always correctly escaped\n\nSecurity Fix – ACF now includes blank index.php files in all folders to prevent directory listing of ACF plugin folders for incorrectly configured web servers\n\n6.3.1.2\n\nRelease Date 6th June 2024\n\nPRO Only Release\n\nFix – ACF Blocks in widget areas no longer cause a fatal error when no context is available\n\nFix – ACF Blocks with no fields assigned no longer show a gap in the sidebar where the form would render\n\n6.3.1.1\n\nRelease Date 6th June 2024\n\nPRO Only Release\n\nFix – Repeater and Flexible Content fields no longer error when duplicating or removing rows containing Icon Picker subfields\n\nFix – ACF Blocks containing Flexible Content fields now correctly load their edit form\n\nFix – ACF Blocks no longer have a race condition where the data store is not initialized when read\n\nFix – ACF Blocks no longer trigger a JS error for blocks without fields and with an empty no-fields message\n\nFix – ACF Block preloading now works correctly for fields consuming custom block context\n\nFix – ACF Block JavaScript debug messages now correctly appear when SCRIPT_DEBUG is true\n\n6.3.1\n\nRelease Date 4th June 2024\n\nEnhancement – Options Pages registered in the UI can now be duplicated\n\nFix – ACF Block validation now correctly validates Repeater, Group, and Flexible Content fields\n\nFix – ACF Block validation now correctly validates when a field is using a non-default return type\n\nFix – Fields moved between field groups now correctly updates both JSON files\n\nFix – Icon Picker fields now render correctly when using left-aligned labels\n\nFix – Icon Picker fields no longer renders tabs if only one tab is selected for display\n\nFix – Icon Picker fields no longer crash the post editor if no icon picker tabs are selected for displayed\n\nFix – True/False field now better handles longer On/Off labels\n\nFix – Select2 results loaded by AJAX for multi-select Taxonomy fields no longer double encode HTML entities\n\n6.3.0.1\n\nRelease Date 22nd May 2024\n\nFix – A possible fatal error no longer occurs in the new site health functionality for ACF PRO users\n\nFix – A possible undefined index error no longer occurs in ACF Blocks for ACF PRO users\n\n6.3.0\n\nRelease Date 22nd May 2024\n\nNew – ACF now requires WordPress version 6.0 or newer, and PHP 7.4 or newer.\n\nNew – ACF Blocks now support validation rules for fields. View the release notes for more information\n\nNew – ACF Blocks now supports storing field data in the postmeta table rather than in the post content\n\nNew – Conditional logic rules for fields now support selecting specific values for post objects, page links, taxonomies, relationships and users rather than having to enter the ID\n\nNew – New Icon Picker field type for ACF and ACF PRO\n\nNew – Icon selection for a custom post type menu icon\n\nNew – Icon selection for an options page menu icon\n\nNew – ACF now surfaces debug and status information in the WordPress Site Health area\n\nNew – The escaped html notice can now be permanently dismissed\n\nEnhancement – Tab field now supports a selected attribute to specify which should be selected by default, and support class attributes\n\nFix – Block Preloading now works reliably in WordPress 6.5 or newer\n\nFix – Select2 results loaded by AJAX for post object fields no longer double encode HTML entities\n\nFix – Custom post types registered with ACF will now have custom field support enabled by default to better support revisions\n\nFix – The first preview after publishing a post in the classic editor now displays ACF fields correctly\n\nFix – ACF fields and Flexible Content layouts are now correctly positioned while dragging\n\nFix – Copying the title of a field inside a Flexible Content layout no longer adds whitespace to the copied value\n\nFix – Flexible Content layout names are no longer converted to lowercase when edited\n\nFix – ACF Blocks with attributes without a default now correctly register\n\nFix – User fields no longer trigger a 404 when loading results if the nonce generated only contains numbers\n\nFix – Description fields for ACF items now support being solely numeric characters\n\nFix – The field group header no longer appears above the WordPress admin menu on small screens\n\nFix – The acf/json/save_file_name filter now correctly applies when deleting JSON files\n\ni18n – All errors raised during ACF PRO license or update checks are now translatable\n\nOther – The ACF Shortcode is now disabled by default for new installations of ACF as discussed in the ACF 6.2.7 release notes\n\n6.2.10\n\nRelease Date 15th May 2024\n\nSecurity Fix – ACF Blocks no longer allow render templates, or render or asset callbacks to be overridden in the block’s attributes. For full information, please read the release blog post\n\n6.2.9\n\nRelease Date 8th April 2024\n\nEnhancement – The Select2 escapeMarkup function can now be overridden when initializing a custom Select2\n\nFix – “Hide on Screen” settings are now correctly applied when using conditionally loaded field groups\n\nFix – Field names are no longer converted to lowercase when editing the name\n\nFix – Field group titles will no longer convert HTML entities into their encoded form\n\n6.2.8\n\nRelease Date 2nd April 2024\n\nNew – Support for the Block Bindings API in WordPress 6.5 with a new acf/field source. For more information on how to use this, please read the release blog post\n\nNew – Support for performance improvements for translations in WordPress 6.5\n\nEnhancement – A new JS filter, select2_escape_markup now allows fields to customize select2’s HTML escaping behavior\n\nFix – Options pages can no longer set to have a parent of themselves\n\nFix – ACF PRO license activations on multisite subsite installs will now use the correct site URL\n\nFix – ACF PRO installed on multisite installs will no longer try to check for updates resulting in 404 errors when the updates page is not visible\n\nFix – ACF JSON no longer produces warnings on Windows servers when no ACF JSON folder is found\n\nFix – Field and layout names can now contain valid non-ASCII characters\n\nOther – ACF PRO now requires a valid license to be activated in order to use PRO features. Learn more\n\n6.2.7\n\nRelease Date 27th February 2024\n\nSecurity Fix – the_field now escapes potentially unsafe HTML as notified since ACF 6.2.5. For full information, please read the release blog post\n\nSecurity Fix – Field and Layout names are now enforced to alphanumeric characters, resolving a potential XSS issue\n\nSecurity Fix – The default render template for select2 fields no longer allows HTML to be rendered resolving a potential XSS issue\n\nSecurity Enhancement – A acf/shortcode/prevent_access filter is now available to limit what data the ACF shortcode is allowed to access\n\nSecurity Enhancement – i18n translated strings are now escaped on output\n\nEnhancement – ACF now universally uses WordPress file system functions rather than native PHP functions\n\n6.2.6.1\n\nRelease Date 7th February 2024\n\nFix – Fatal JS error no longer occurs when editing fields in the classic editor when Yoast or other plugins which load block editor components are installed\n\nFix – Using $escape_html on get functions for array returning field types no longer produces an Array to string conversion error\n\n6.2.6\n\nRelease Date 6th February 2024\n\nEnhancement – The get_field() and other get_ functions now support an escape_html parameter which return an HTML safe field value\n\nEnhancement – The URL field will be now escaped with esc_url rather than wp_kses_post when returning an HTML safe value\n\nFix – ACF fields will now correctly save into the WordPress created revision resolving issues with previews of drafts on WordPress 6.4 or newer\n\nFix – Multisite subsites will now correctly be activated by the main site where the ACF PRO license allows, hiding the updates page on those subsites\n\nFix – Field types in which the required property would have no effect (such as the tab, or accordion) will no longer show the option\n\nFix – Duplicating a field group now maintains the current page of field groups being displayed\n\nFix – Fields in ACF Blocks in edit mode in hybrid themes will now use ACF’s styling, rather than some attributes being overridden by the theme\n\nFix – Text in some admin notices will no longer overlap the dismiss button\n\nFix – The word link is now prohibited from being used as a CPT name to avoid a WordPress core conflict\n\nFix – Flexible content layouts can no longer be duplicated over their maximum count limit\n\nFix – All ACF notifications shown outside of ACF’s admin screens are now prefixed with the plugin name\n\nFix – ACF no longer checks if a polyfill is needed for <PHP7 and the polyfill has been removed\n\n6.2.5\n\nRelease Date 16th January 2024\n\nSecurity Fix – The ACF shortcode will now run all output through wp_kses, escaping unsafe HTML. This may be a breaking change to your site but is required for security, a message will be shown in WordPress admin if you are affected. Please see the blog post for this release for more information. Thanks to Francesco Carlucci via Wordfence for the responsible disclosure\n\nSecurity – ACF now warns via an admin message, when upcoming changes to the_field and the_sub_field may require theme changes to your site to avoid stripping unsafe HTML. Please see the blog post for this release for more information\n\nSecurity – Users may opt in to automatically escaping unsafe HTML via a new filter acf/the_field/escape_html_optin when using the_field and the_sub_field before this becomes default in an upcoming ACF release.\n\n6.2.4\n\nRelease Date 28th November 2023\n\nFix – Custom Post Types labels now match the WordPress 6.4 behavior for “Add New” labels\n\nFix – When exporting both post types and taxonomies as PHP, taxonomies will now appear before post types, matching the order ACF registers them. This resolves issues where taxonomy slugs will not work in post type permalinks\n\nFix – Advanced Settings for Taxonomies, Post Types or Options Pages now display with the correct top padding when toggled on\n\nFix – When a parent option page is set to “Redirect to Child Page”, the child page will now correctly show it’s parent setting\n\nFix – When activated as a must-use plugin, the ACF PRO “Updates” page is now visible. Use the existing show_updates setting to hide\n\nFix – When activated as a must-use plugin, ACF PRO licenses defined in code will now correctly activate sites\n\nFix – When show_updates is set or filtered to false, ACF PRO will now automatically still activate defined licenses\n\ni18n – Maintenance and internal upstream messages from the ACF PRO activation server are now translatable\n\n6.2.3\n\nRelease Date 15th November 2023\n\nView Release Post\n\nNew – An ACF Blocks specific JSON schema for block.json is now available on GitHub\n\nNew – Flexible Content fields now show the layout name in the layout’s header bar and supports click-to-copy\n\nNew – Duplicating Flexible Content layouts now appends “Copy” to their name and label, matching the behavior of field group duplication\n\nEnhancement – ACF PRO will now automatically attempt license reactivation when the site URL changes, e.g. after a site migration. This resolves issues where updates may fail\n\nEnhancement – Presentation setting for “High” placement of the Field Group made clear that it’s not supported in the block editor\n\nFix – acf_format_date now ensures the date parameter is valid to prevent fatal errors if other data types are passed in\n\nFix – CPTs with a custom icon URL now display the posts icon in the location column of the field groups screen\n\nFix – The ACF JSON import form will now disable on first submit resolving an issue where you could submit the form twice\n\nFix – The “Add Row” button in the Flexible Content field now displays correctly when using nested layouts\n\nFix – Warning and Error notices no longer flicker on ACF admin pages load\n\ni18n – ACF PRO license activation success and error messages are now translatable\n\n6.2.2\n\nRelease Date 25th October 2023\n\nEnhancement – ACF Blocks which have not been initialized by the editor will now render correctly\n\nEnhancement – Added a new acf/filesize filter to allow third party media plugins to bypass ACF calling filesize() on attachments with uncached file sizes, which may result in a remote download if offloaded\n\nEnhancement – ACF PRO license status and subscription expiry dates are now displayed on the “Updates” page\n\nFix – Product pages for WooCommerce version 8.2 or newer now correctly support field group location rules\n\nFix – Relationship field items can now be removed on mobile devices\n\nFix – Color picker fields no longer autocomplete immediately after typing 3 valid hex characters\n\nFix – Field settings no longer appear misaligned when the viewport is something other than 100%\n\nFix – Select fields without an aria-label no longer throw a warning\n\nFix – CPTs and Taxonomies with a custom text domain now export correctly when using PHP export\n\n6.2.1.1\n\nRelease Date 8th September 2023\n\nFix – Editing a field group no longer generates an error when UI options pages are disabled\n\n6.2.1\n\nRelease Date 7th September 2023\n\nNew – Options Pages created in the admin UI can now be assigned as child pages for any top-level menu item\n\nNew – Added a “Title Placeholder” setting to ACF Post Types which filters the “Add title” text when editing posts\n\nEnhancement – ACF PRO will now warn when it can’t update due to PHP version incompatibilities\n\nEnhancement – ACF PRO will now work correctly with WordPress automatic updates\n\nEnhancement – The internal ACF Blocks template attribute parser function parseNodeAttr can now be shortcut with the new acf_blocks_parse_node_attr filter.\n\nEnhancement – Removed legacy code for supporting WordPress versions under 5.8\n\nFix – The “Menu Position” setting is no longer hidden for child options pages\n\nFix – The tabs for the “Advanced” settings in Post Types and Taxonomies are now rendered inside a wrapper div\n\nFix – Options pages will no longer display as a child page in the list view when set to a top level page after previously being a child\n\nFix – Conflict with Elementor CSS breaking the ACF PRO banner\n\nFix – Errors generated during the block editor’s savePost function will no longer be caught and ignored by ACF\n\n6.2.0\n\nRelease Date 9th August 2023\n\nView Release Post\n\nNew – ACF now requires WordPress version 5.8 or newer, and PHP 7.0 or newer. View the release post for more information\n\nNew – Bidirectional Relationships now supported for Relationship, Post Object, User and Taxonomy fields. View the release post for more information\n\nNew – Options Pages can now be registered and managed by the admin UI in ACF PRO\n\nNew – Link to the product feedback board added to the plugin footer\n\nEnhancement – ACF JSON now supports multiple save locations (props Freddy Leitner)\n\nEnhancement – ACF Post Types and Taxonomies can now be duplicated\n\nEnhancement – The filename for JSON files can now be customized with the acf/json/save_file_name filter\n\nFix – REST updates of fields with choices containing integer or mixed keys now behave correctly\n\nFix – Using the block_type_metadata_settings PHP filter to add usesContext values no longer breaks ACF blocks\n\nFix – Notice to import post types/taxonomies from CPTUI no longer flashes on page load\n\nFix – Various buttons for fields in blocks now display correctly\n\nFix – The settings for the DateTime field are no longer cut off when nested in several fields in the field group editor\n\nFix – The newline added to the end of JSON files will now use PHP_EOL to detect the correct newline character with a filter acf/json/eof_newline to alter it.\n\ni18n – Updated French and Portuguese translations (Thanks to pedro-mendonca and maximebj)\n\nView the full changelog"
    }
}