{
    "id": "dbpedia_4129_2",
    "rank": 38,
    "data": {
        "url": "https://retrocomputing.stackexchange.com/questions/16700/did-computer-games-for-commodore-64-really-take-25-minutes-to-load-if-everyth",
        "read_more_link": "",
        "language": "en",
        "title": "Did computer games for Commodore 64 really take \"25 minutes\" to load \"if everything went alright\"?",
        "top_image": "https://cdn.sstatic.net/Sites/retrocomputing/Img/apple-touch-icon@2.png?v=6b27f39a6023",
        "meta_img": "https://cdn.sstatic.net/Sites/retrocomputing/Img/apple-touch-icon@2.png?v=6b27f39a6023",
        "images": [
            "https://i.sstatic.net/L9NB3.png?s=64",
            "https://www.gravatar.com/avatar/2658332341121c02b34b4cf44b8ea0fd?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/757fa3b6d9ea32ca2ccf15cfa7f4e5e2?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.commodore-info.com/foto/cassette_the_sold_a_million2_01.jpg",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/121422e807e1e5c279586424f4a7c0fe?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/115bc32870b5d6f30652eb9d76ede205?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/aab285b5be5b0ed08729ea66ef2159f0?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/4xczZ.jpg?s=64",
            "https://i.sstatic.net/4lI4f.jpg?s=64",
            "https://www.gravatar.com/avatar/6e24ead2483073e2fbeb1532a3954125?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/2d73e500871bdd5650df3124175576f0?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/f5c118aaeb5bb7162db613a37e595be8?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/58b0m.png?s=64",
            "https://www.gravatar.com/avatar/efb8aeb26aacbe32a88bfa47fecf663f?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/8de1d1370606c18f095c6050055e77ae?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/Py8CW.png?s=64",
            "https://i.sstatic.net/ljsK7.png?s=64",
            "https://www.gravatar.com/avatar/92f0c7fe372960ea92560487665a8720?s=64&d=identicon&r=PG",
            "https://graph.facebook.com/10226365729103897/picture?type=large",
            "https://i.sstatic.net/ljsK7.png?s=64",
            "https://retrocomputing.stackexchange.com/posts/16700/ivc/0e79?prg=b2967690-52ec-460a-ade5-a41b58e73cf4"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2020-10-29T04:40:14",
        "summary": "",
        "meta_description": "In the Swedish-language song &quot;Nostalgi&quot; by Markoolio from 2003, some of the lyrics go:\n\nMy first computer had 64 kB \nyou surfed on the water, and that's that \nThe computer games were load...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/retrocomputing/Img/favicon.ico?v=9b6f1e4fd156",
        "meta_site_name": "Retrocomputing Stack Exchange",
        "canonical_link": "https://retrocomputing.stackexchange.com/questions/16700/did-computer-games-for-commodore-64-really-take-25-minutes-to-load-if-everyth",
        "text": "Theoretically it could take 25 minutes (or more), in practice it never did.\n\nTheoretically it could, because the C-64's built-in tape handling routines had a data rate of about 300 bit/s. That's 37.5 bytes per second, or almost 30 minutes for a full 64K.\n\nIn practice, it never did, because the tape handling / decoding was done almost entirely in software, Commodore's own tape handling routines were horribly inefficient*, and third party speeders managed data rates close to 5 kbit/s, reducing load times dramatically. Almost every bit of commercial software, and every quality crack released on tape ;-), had a two part loader, first loading a fast loader at normal speed, then loading the rest of the game at higher speed. I can't recall waiting more than a few minutes for any game to load.\n\nAs for cartridges: Hardly any game or application software for the C-64 was sold on cartridges. Tapes and disks were way cheaper to produce.\n\n* One source claims that the inefficiency was a response to the quality of audio tapes typically used at the time the PET was designed (mid-70s), and that only improved tape quality in the mid-80s made fast loaders possible. I'm not convinced.\n\nYes, cassettes were common, they took ages, and they were error prone.\n\nIn Europe, disk drives for the ZX Spectrum and Commodore 64 were uncommon. It's the same for cartridge games for the C64. The market for the 8-bit micros in the 80s in the UK was driven by price, so the cassette interfaces were the majority here. (BBC Micros with floppy drives were common for education.)\n\nAs for 'did they actually sell' cassettes - yes, in fact They Sold A Million.\n\nThere's at least 3 of these compilations - each compilation's games were chosen as between them they sold at least a million copies.\n\nIn this answer, the C64 tape data rate is calculated at 55 bytes per second, giving approximately 15 minutes to load 48 kilobytes. On the Spectrum, a title screen alone (6912 bytes) would take just under a minute (like in this video of Jetpac) to load from tape. (Though to a kid it would feel like forever :) .)\n\nThe typical C64 tape interface was a first party Datasette with little user tweaking required. On the Spectrum using an off the shelf tape recorder you'd need to adjust the volume level using trial and error. On both, especially with pirate cassettes there might be an extra bit of calibration required - cassettes recorded on one recorder might not 'like' another.\n\nA View To A Kill is a multiload C64 game (more like a sequence of minigames) and each section has a very lengthy loading time. I haven't measured it but I could accept AVTAK having a combined loading time of 25 minutes.\n\nI suggest you read a magazine like Zzap64 to get an impression of what was available at the time.\n\nAs other answers note, the basic tape and disk routines on the C64 were notoriously slow. Commercial game releases usually were on tape, but tended to use a \"fastloader\" routine to bring the loading times down to something vaguely sane. The loader routine also served as an excuse to display a loading screen and play music while you waited - and some of those loader tunes were works of art in themselves. Many games didn't need to load a full 64KB into RAM before starting. This also tended to speed up loading.\n\nFor concrete examples, I timed loading Cybernoid into an emulator, with the \"warp load\" feature of the emulator switched off so that it ran in simulated realtime. It took about 5m15s until the title screen and music started. This is a game that doesn't have a distinct loading screen and music; it takes about a minute to bootstrap the fastloader, and the rest of the time is spent loading the game proper.\n\nArkanoid is another famous example that does have a loading screen. The fastloader bootstraps in about 40 seconds, the loader music starts at the one minute mark, and about the next 45 seconds are spent loading the loader screen. In total it takes less than 5 minutes before the loader music changes to the title music, at which point loading is complete, despite the extra time taken by the loading screen.\n\nThe Last Ninja actually uses both sides of the tape - it is a comparatively big game for the machine. However, it is effectively several distinct games chained together, so there is a relatively normal loading time at the start, and subsequently after completing each level, each with its own set of loader music. The loader music begins at about 1m10s, and the first level completes loading in 7m30s total.\n\nIn short, there's a genuine reason why short 10 and 15 minute tapes - this rating counting both sides - were commonly produced for use with home computers.\n\nDid they actually sell commercial/legal software for Commodore 64 and other early home computers on tapes on shelves in stores? For full price?\n\nI remember that the Oric 1/Atmos had a fast and a slow mode.\n\nSlow mode was 300 bauds. But it wasn't the default. Default was \"fast\" (2400 bauds). Both modes were built-in (there were slightly faster custom formats but I never saw them in any production)\n\nHowever, some commercial programs (by Tansoft, mostly) put the fast loading version of the game on one side and the slow loading version on the other side. So it probably decreased the risk of not loading the tape with a bad tape player (there were a ton of them)\n\nBut it was dropped gradually. For instance there are 2 versions of Harrier Attack\n\nThe Oric-1 version had a tape with 2 fast recordings on side A, and a slow recording on side B, and was labelled \"Oric\".\n\nThe Oric-1/Atmos version only had one fast recording on both sides, and was labelled \"Atmos / Oric 1\".\n\nI remember that Harrier Attack loaded in around 3 minutes in fast load mode, so more than 20 minutes on slow mode probably (who used that ? :))\n\nOf course if the tape player chewed on the tape, it destroyed both sides so it was unlikely to be safer. The only proper safety was to record software on both sides (fast was okay) just if one side was erased by mistake (because someone disabled the read-only tape safety?)\n\nCracked copies were always spread in fast mode. And the Oric had no commerical software on disk or cartridge (note: there's an almost-cartridge system now with Erebus card which is able to read tape data from SD card and transfert data through parallel port at lightning speed)\n\nLoading from cassette was very, very common and the default option for most 8-bit micro owners. The early micros like the C64 were reasonably affordable, and the fact you could hook them up to a regular television set as a monitor and an ordinary cassette deck to load data added to that affordability. Floppy drives were quite expensive and could double the cost of owning a system.\n\nGames took various different lengths of time to load from cassette depending on a number of factors, but each individual game always took the same length of time to load because the cassette ran at a specific speed. Games loaded from the cassette into the computer's RAM so, broadly speaking, the more memory the game took up when loaded, the longer it took to load.\n\nIn the very early days of all 8-bit micros, games tended to be quite simple in concept and graphically. Some were designed to fit into far less RAM than your computer had because many micros came with memory options (for example, the Commodore had 16K and 64K models, and the ZX Spectrum 16K and 48K models). Games designed for 16K naturally loaded faster than later, more complex titles that took full advantage of the enhanced machines.\n\nPart of the tape-loading experience was a 'loading screen' - usually a graphical display that you could look at while the game loaded. This had to load and show on the screen before the main game started loading, so this added to the loading time. A few games even had loading music that played while the main game loaded. These things loaded in a sequence, so the loading screen/music would load first and be cleared from RAM by the time the main program had loaded.\n\nAs development on 8-bit micros progressed, programmers found ways to make games load faster by coding their own tape loading systems which could receive data faster than the system's in-built method. To make use of this though, the fast-loading system had to load itself first using the system method, and then the rest of the data on the tape would be in the faster format. These systems often had a timer on the screen which counted down so you could see how long the game had left to load. As this later era of software coincided with bigger titles, games could still take some considerable time to load.\n\nFinally, it is worth mentioning 'multi-load' games. These were games that were too big to fit into the memory in one go. Often these were arcade-conversions which had not been designed with small micros in mind. These would usually load the game engine first, then you were asked to stop the tape. Each level of the game would load separately and you were prompted to stop and start the tape in-between levels.\n\nI'd say that 5-10 minutes is probably a more realistic average loading time for a decent game at the height of the 8-bit micro era, but to a child that wait could seem a lot longer which may account for the exaggeration in the song you quoted.\n\nHaving games on cassette did make piracy quite easy, but it also kept production costs quite low so arguably there was less temptation to pirate them when you could buy them at an affordable price. Because there was no internet, piracy was limited to copying games from other people you knew which was far more limiting than file-sharing today. The time it would take for a game to copy tape-to-tape didn't put us off. I'd buy 90-minute blank cassettes which I would append newly copied games to. If a friend brought round a new game we'd load it, and then then I'd copy it while we played it.\n\nThe line from your song which says \"if everything went alright\" seems to refer to the fact that tape-loading could sometimes fail. Tapes could get damaged or just degrade over time. Poor quality cassette players could \"eat\" cassettes - causing the tape to come off the spool and get tangled up inside the deck. Cassette player heads could also be slightly misaligned, and users with persistent loading difficulties were often advised to adjust the azimuth alignment screw which could improve the tone of playback in a way that would be condusive to successful loading. Copied (pirated) cassettes could also be of poorer quality. Some twin-cassette decks available at the time had a feature called 'high-speed dubbing' that copied cassettes at double-speed. I found their games copied this way didn't always load so reliably, possibly because the process left a slight high-pitched whine on the dubbed copy which could interfere with loading.\n\nThe other answers cover the historic reality, but I also think it’s worthwhile to illustrate what were the technical reasons for tapes to be “slow”. Audio tape as a medium is not “slow” and is quite data-dense, compared to what one might think based on what the home micros did back then. Compared to C64’s default rate, the tape can do 4 orders of magnitude better at least!\n\nPrimarily, a lot of the information from signal recorded on tape was lost. It was passed to the CPU not as if you had a sound card, there wasn’t a parallel-output A/D converter that would sample the signal from the tape and feed 8-bit values to the CPU. The most popular tape interfaces had a simple analog signal shaper and a comparator for threshold detection. The CPU saw a serial bitstream on some input port. All the information you had left were zero crossings of the audio signal. Some micros probably did things a bit better, e.g. using a low resolution sigma-delta converter that would provide the equivalent of 2-4 bit sampling. It had to be cheap, even 8-bit A/D converters that could sample at kilohertz rates were expensive in the early 80s as well as power hungry, and usually were considered “glam” peripherals rather than something you could waste on tape duty.\n\n8-bit microprocessors used in home micros had no multiplier, and to do the digital signal processing needed to demodulate high density tape data you definitely need lots of multiplications to implement the DSP algorithms. You could definitely hook an 8-bit ADC to a micro and implement a state-of-the-art demodulator system that could offer quite high data rates with error correction - think 1-5kbytes/s on a mono audio tape. Said demodulator would probably run at least 1000x slower than real time, though :( It couldn’t keep up with real-time tape data, and even if a large RAM buffer was available to sample the data, store, and process offline, you’d still get throughput much slower than the “naive” methods allow.\n\nAs far as what tapes are actually capable of: with a 16-bit sound card and processing throughput of a 486DX2, you could load 64 kilobytes from stereo tape in 15 seconds or so, with state of the art error correction and so on - that tape could be pretty well mangled, and the head azimuth a bit off, and it still worked. But this is the sort of stuff that even today requires specialist knowledge, and most people who designed I/O for micros of the era did not have that sort of a background. I did a class project very long ago on this and it was lots of work, especially that the access to literature was much harder in the late 90s, so collecting all the necessary bits of wisdom wasn’t easy - and I forgot like 99% of it since then, too :) This problem is harder than what the voice line modems had to cope with: they have a very limited adaptive ability for channel estimation, so if the channel changes too much, they must retrain to re-estimate the channel model, and while they do that, the data transmission is suspended. They also don’t tolerate any sort of timing slips - those usually force a full retraining. With tape you have a time-variable channel whose model you have to continuously estimate and adapt. Then the timing is not constant either, since the tape speed regulation is orders of magnitude worse than the phase stability needed for demodulation of dense data, so you have to do clock recovery and resample the data. All of this is computationally heavy, even in fixed point integer arithmetic. On a “fancy” CISC like the 486, you could run integer processing in parallel with floating point, but this had to be hand-coded in assembly at the time. Tedious stuff.\n\nI don't know if the Commodore 64 used the same tape loader as the Commodore PET. The Commodore PET saved the program twice on tape. On loading, it would load the first image into memory and then read the second image and verify it against what had been loaded into memory. If there was a discrepancy, then you would get a verify error.\n\nSo a 25 minute load actually took 12.5 minutes. The rest of it was verifying the image. If there was a verify error, the program would still be in memory with possibly at least one byte being corrupted or a read error or a corrupted verification image.\n\nIt was a lot of fun watching engineers look for the eject button for the cassette drives. One guy, possibly an apple user kept typing eject. It was just this look of amazement when you lifted the cover to take the tape out.\n\nWe used to use 30 or 60 minute tapes, never anything longer. The cassette motor used to struggle with 90 minute tapes.\n\nEdit Sometimes, these tapes had built in security so they couldn't be copied on the Commodore machines. They would load in two parts - first the security bit and then the rest of the program. If you saved the image in memory, it only saved the second part. If you then tried to load it on another machine and run it, it would fail because the second part would look for the first part, which was missing.\n\nA common way of getting round the security was to do a tape to tape copy on your hi-fi unit with the volume turned right down."
    }
}