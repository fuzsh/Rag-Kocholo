{
    "id": "correct_subsidiary_00128_2",
    "rank": 69,
    "data": {
        "url": "http://shahbaz-chaudhry.blogspot.com/2018/04/",
        "read_more_link": "",
        "language": "en",
        "title": "GCP AWS OKTA ForgeRock Saviynt OAM OIM OVD OID OPAM OES OIF ODSEE SailPoint",
        "top_image": "http://shahbaz-chaudhry.blogspot.com/favicon.ico",
        "meta_img": "http://shahbaz-chaudhry.blogspot.com/favicon.ico",
        "images": [
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif",
            "https://resources.blogblog.com/img/icon18_edit_allbkg.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Shahbaz Chaudhry",
            "View my complete profile"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "http://shahbaz-chaudhry.blogspot.com/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "http://shahbaz-chaudhry.blogspot.com/2018/04/",
        "text": "Difference between 2 request is in BOLD letter\n\nDIP Initiated SSO\n\nAn IdP Initiated SSO flow is a Federation SSO operation that was started from the IdP Security Domain, by the IdP Federation server creating a Federation SSO Response and redirecting the user to the SP with the response message and an optional operational state:\n\nThe Federation SSO Response varies depending on the protocol used:\n\nSAML 2.0: SAMLResponse with Assertion\n\nSAML 1.1: Response with Assertion\n\nWS-Fed: Response with Assertion\n\nOpenID 2.0: OpenID 2.0 Response\n\nThe optional operation state in this flow will convey the URL where the user should be redirected after the Federation SSO is complete at the SP. If missing, the SP will need to determine where the user should be redirected. This information is conveyed differently depending on the protocol:\n\nSAML 2.0: RelayState parameter\n\nSAML 1.1: TARGET parameter\n\nWS-Fed: wctx parameter\n\nOpenID 2.0: this protocol does not support IdP Initiated SSO flow.\n\nSP Initiated SSO\n\nAn SP Initiated SSO flow is a Federation SSO operation that was started from the SP Security Domain, by the SP Federation server creating a Federation Authentication Request and redirecting the user to the IdP with the message and some short string representing the operation state:\n\nThe Federation Authentication Request varies depending on the protocol used:\n\nSAML 2.0: AuthnRequest\n\nSAML 1.1: a URL with a parameter representing the SP\n\nWS-Fed: a URL with a wtrealm parameter representing the SP and other optional parameters\n\nOpenID 2.0: OpenID 2.0 Request\n\nThe operation state (what the user was doing before the Federation SSO operation started) is conveyed in the message sent to the IdP with the user, not as the whole state, but instead as a pointer to the state in the SP Server's runtime storage. This information is conveyed differently depending on the protocol:\n\nSAML 2.0: RelayState parameter\n\nSAML 1.1: TARGET parameter\n\nWS-Fed: wctx parameter\n\nOpenID 2.0: openid.return_to parameter which is an SP URL where the user will be redirected after authentication at the IdP, which is generated at runtime by the SP, and as such can contain a query parameter referencing an operational state\n\nOpenDJ is both a full-fledged LDAP / LDAPS server, AND an HTTP / HTTPS REST-based server. This is an important distinction, because each can be run separately, or in tandem.\n\nIAM Stack can runs both LDAP and HTTP/REST on the same server. It is possible to set up REST Gateways and other more custom configurations to further separate the two.\n\nHere's where it gets interesting:\n\nREST is not enabled by default\n\nREST uses its own logger and connection handler\n\nREST uses its own separate configuration file\n\nREST presents only a \"window\" of OpenDJ schema data\n\nThe last point is important. The REST interface represents potential attribute data. In other words, it CAN respond to data queries for all data available in the directory. By default, it does not. Nor, is it aware of custom schema extensions by default.\n\nWhen setting up OpenDJ, first get all DJ / LDAP components working correctly, then add HTTP support later.\n\nIn IAM stack Time synchronization is a key component of a smooth IAM service. Not configuring it can cause replication issues. To synchronize the IAM Stack, we can use the subnet router, which can be configured as an NTP server.\n\nTo retrieve public SSL certificate you can use a command similar to:\n\necho | openssl s_client -connect orasystemsusa.com:636 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'\n\nOS level command to rotate logfiles.\n\nPlease find below the logrotate file for the web policy agents in PROD environment:\n\n/var/log/httpd/*log {\n\nmissingok\n\nnotifempty\n\nsharedscripts\n\ndelaycompress\n\npostrotate\n\n/bin/systemctl reload httpd.service > /dev/null 2>/dev/null || true\n\nendscript\n\n}\n\nControlling the Maximum Heap Size Allocated to the Oracle Virtual Directory Server\n\nThe -Xmx parameter in the opmn.xml file controls the maximum heap size allocated to the Oracle Virtual Directory server. The default value is -Xmx256m. Edit this parameter as needed to increase or decrease the maximum heap size allocated to the Oracle Virtual Directory server. The opmn.xml file is located in the ORACLE_INSTANCE/config/OPMN/opmn/ directory.\n\nThe following example shows the -Xmx parameter set to -Xmx2048m, which allocates 2 GB of heap size to the Oracle Virtual Directory Server:\n\n<ias-component id=\"OVD_COMPONENT_NAME\"> <process-type id=\"OVD\" module-id=\"OVD\"> <module-data> <category id=\"start-options\"> <data id=\"java-options\" value=\"-server -Xms512m -Xmx2048m -Doracle.security.jps.config=$ORACLE_INSTANCE/config/JPS/jps-config-jse.xml -Dvde.soTimeoutBackend=120\"/> <data id=\"java-classpath\" value=\"$ORACLE_ HOME/ovd/jlib/vde.jar$:$ORACLE_HOME/jdbc/lib/ojdbc6.jar\"/> </category> </module-data> <stop timeout=\"120\"/> </process-type> </ias-component>\n\nlogin to OAAM console\n\nclick on Attribute\n\nsearch for Rule \"Maximum Devices Per User\"\n\nchange Rule Status to \"Disable\".\n\nSave the changes.\n\nNow at you should be able to get more than 3(default) OTP password.\n\nTo enable registration and preferences:\n\nLog in to the OAAM Administration Console.\n\nIn the Navigation pane, double-click Properties under the Environment node. The Properties Search page is displayed.\n\nEnter bharosa.uio.default.register.userinfo.enabled in the Name field and click Search.\n\nClick to select the property in the Search Results section, change the value to true, and click Save.\n\nEnter bharosa.uio.default.userpreferences.userinfo.enabled in the Name field and click Search.\n\nClick to select the property in the Search Results section, change the value to true, and click Save.\n\nTo increase the level use below command\n\nwlst.sh\n\nconnect()\n\ndomainRuntime()\n\nsetLogLevel(target='oaam_server_server1',logger='oracle.oaam',level='TRACE:32',persist=\"0\",addLogger=1)\n\nto roll back\n\nwlst.sh\n\nconnect()\n\ndomainRuntime()\n\nsetLogLevel(target='oaam_server_server1',logger='oracle.oaam',level='TRACE:1',persist=\"0\",addLogger=1)\n\nadd below line to ssl.conf file\n\nssl.conf:\n\nHeader always set Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\"\n\nGenerating Keys\n\nYou can generate private and public certificate pairs by using the keytool command.\n\nThe following command creates an identity keystore (support.jks):\n\n$JAVA_HOME/jre/bin/keytool -genkey -alias support -keyalg RSA -keysize 1024 -dname \"CN=localhost, OU=Identity, O=Oracle Corporation,C=US\" -keypass KEYSTORE_PASSWORD -keystore support.jks -storepass weblogic1\n\nSigning the Certificates\n\nUse the following keytool command to sign the certificates that you created:\n\n$JAVA_HOME/jre/bin/keytool -selfcert -alias support -sigalg MD5withRSA -validity 2000 -keypass weblogic1 -keystore support.jks -storepass KEYSTORE_PASSWORD\n\nopenssl req -newkey rsa:2048 -nodes -keyout signcert.key -x509 -days 365 -out sign.cer\n\n./orapki wallet create -wallet /tmp/wallet -auto_login\n\n./orapki wallet display -wallet /tmp/wallet\n\n./orapki wallet add -wallet /tmp/wallet -dn \"CN=Gms Signing Certificate\" -keysize 2048 -self_signed -validity 1825 -pwd Welcome1\n\nkeytool -list -keystore /path/to/certificate\n\nkeytool -exportcert -alias certificatename.cert -file /tmp/certfilename -storepass password\n\n$JAVA_HOME/java -classpath WEB-INF/lib/opensso-sharedlib.jar:WEB-INF/lib/openfedlib.jar:install/lib/configurefedlet.jar oracle.security.fed.fedlet.install.ConfigureFedlet\n\nError\n\nCannot run program \"keytool\": error=2, No such file or directory\n\nSolution:\n\nI have resolved this error by specifying\n\nexport JAVA_OPTS=\"-d64\"\n\nalong with other commands to export JAVA_HOME and PATH\n\nHeader always set Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\"\n\nMartin: NameVirtualHost\n\nMartin: NameVirtualHost *:7777<VirtualHost *:7777> ServerName <servername> Redirect / https:<servername>:443/</VirtualHost>\n\nClick to add to Favorites How to Configure HTTP Strict Transport Security (HSTS) for Oracle HTTP Server 11g? To BottomTo Bottom\n\nIn this Document\n\nGoal\n\nSolution\n\nAPPLIES TO:\n\nOracle HTTP Server - Version 11.1.1.0.0 to 11.1.1.9.0 [Release Oracle11g]\n\nInformation in this document applies to any platform.\n\nGOAL\n\nHow to configure HTTP Strict Transport Security (HSTS) for Oracle HTTP Server 11g?\n\nSOLUTION\n\nThere is no official documentation from Oracle for this configuration, but you can add below parameters in $INSTANCE_HOME/config/OHS/ohs1/ssl.conf.\n\n1. Add below line to VirtualHost in $INSTANCE_HOME/config/OHS/ohs1/ssl.conf file\n\n<VirtualHost IPaddress:sslport>\n\nHeader always set Strict-Transport-Security \"max-age=31536000; includeSubDomains\"\n\n</VirtualHost>\n\n2. Restart OHS\n\n3. To test if HSTS has been configured, access OHS on ssl port and capture headers through \"Live HTTP Headers extension\" on Chrome (you can use the curl utility too)\n\nGET / HTTP/1.1\n\nHost: examplehost.exampledomain.com:4443\n\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\n\nAccept-Encoding: gzip,deflate\n\nAccept-Language: en-US,en;q=0.8\n\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.120 Safari/537.36\n\nHTTP/1.1 200 OK\n\nAccept-Ranges: bytes\n\nConnection: Keep-Alive\n\nContent-Language: en\n\nContent-Length: 11028\n\nContent-Type: text/html\n\nDate: Tue, 16 Sep 2014 10:29:44 GMT\n\nETag: \"1600000002481e-2b14-4fdc5d4d121b8\"\n\nKeep-Alive: timeout=5, max=100\n\nLast-Modified: Wed, 09 Jul 2014 17:13:47 GMT\n\nServer: Oracle-Application-Server-11g\n\nStrict-Transport-Security: max-age=31536000; includeSubDomains\n\nHow to Change password for OIM, MDS, SOAINFRA, OPSS, ORASDPM schema OIM 11g R2 from Oracle\n\nSOLUTION\n\nDescription of each of the above schema could be found in the following Document\n\nhttp://docs.oracle.com/cd/E27559_01/core.1112/e28516/meta.htm\n\nPassword change for the following schema can be performed in the following ways.\n\nStop all the Managed servers and Application Server.\n\nTake a back up of the entire domain and take the backup of the database.\n\nStart the Application Server\n\nChange the xxxx_OPSS user password.\n\nExecute the following to change the password for xxxx_OPSS:\n\nSQL> alter user xxxx_OPSS identified by <new_pwd_here>;\n\nSQL>commit;\n\nInvoke wlst (oracle_common\\common\\bin).\n\nRun \"modifyBootStrapCredential\". See Oracle Fusion Middleware Application Security Guide 11g Release 1 (11.1.1) Chapter 10 Managing the Credential Store - 10.5.4 modifyBootStrapCredentia modifyBootStrapCredential(jpsConfigFile='<DOMAIN_NAME>/config/fmwconfig/jps-config.xml', username='<xxxx>_OPSS', password='newpassword')\n\nRun the setDomainenv.sh under the domain bin folder ( ./setDomainEnv.sh)\n\nInvoke the following command:\n\nbin/java weblogic.security.Encrypt\n\npassword: <newpassword>\n\n{AES}JHyrhOMB5hVRuDU/pV0qX86qz98ZV0xWXBSEAANA4Gs=\n\nEdit the <DOMAIN_NAME>\\Config\\jdbc\\OPSSdbs.xml file:\n\nReplace the current encrypted password with the newly encrypted password value e.g.\n\n{AES}JHyrhOMB5hVRuDU/pV0qX86qz98ZV0xWXBSEAANA4Gs=\n\nSave the file.\n\nLogin to Weblogic Console, Navigate to Services->Data Sources\n\nClick on opss-DBDS->Connection Pool and enter the new password set to xxxx_opss in step 4.2 Save\n\nRestart Application Server but do not start managed servers.\n\nConnect to the database with sqlplus as system user\n\nExecute the following to change the password of xxx_OIM:\n\nSQL> alter user xxx_OIM identified by <new_pwd_here>;\n\nSQL>commit\n\nExecute the following to change the password for xxx_MDS:\n\nSQL> alter user xxx_MDS identified by <new_pwd_here>;\n\nSQL>commit;\n\nExecute the following to change the password for xxx_SOAINFR\n\nSQL> alter user xxx_SOAINFRA identified by new_pwd_here>;\n\nSQL>commit\n\nExecute the following to change the password for xxx_ORASDPM:\n\nSQL> alter user xxx_ORASDPM identified by <new_pwd_here>;\n\nSQL>commit;\n\nCheck that the passwords have been changed, by trying to login to the database with sqlplus and the four users and the new passwords\n\nOpen a browser and connect to WebLogic console\n\nNavigate to Services->Data Sources\n\nclick on oimJMSStoreDS->Connection Pool and enter the new password set to xxx_OIM in step 13.2 above\n\nClick on oimOperationsDB->Connection Pool and enter the new password set to xxx_OIM in step 13.2 above\n\nClick on ApplicationDB->Connection Pool and enter the new password set to xxx_OIM in step 13.2 above\n\nClick on mds-oim->Connection Pool and enter the new password set to xxx_MDS in step 13.5 above\n\nClick on mds-owsm->Connection Pool and enter the new password set to xxx_MDS in step 13.5 above\n\nClick on mds-soa->Connection Pool and enter the new password set to xxx_MDS in step 13.5 above\n\nClick on EDNDataSource->Connection Pool and enter the new password set to xxx_SOAINFRA in step 13.8 above\n\nClick on EDNLocalTxDataSource->Connection Pool and enter the new password set to xxx_SOAINFRA in step 13.8 above\n\nClick on SOADataSource->Connection Pool and enter the new password set to xxx_SOAINFRA in step 13.8 above\n\nClick on SOALocalTxDataSource->Connection Pool and enter the new password set to xxx_SOAINFRA in step 13.8 above\n\nClick on OraSDPMDataSource->Connection Pool and enter the new password set to xxx_ORASDPM in step 13.11 above\n\nChange OIMAuthenticationProvider configuration:\n\nIn the WebLogic Administrative console, navigate to Security Realms, myrealm, and then Providers.\n\nClick OIMAuthenticationProvider\n\nClick Provider Specific.\n\nIn the DBPassword field, enter the new Oracle Identity Manager database schema password\n\nClick Save to save the changes\n\nChange domain credential store configuration:\n\n19.1 Login to Enterprise Manager by using the following URL:\n\nhttp://ADMIN_SERVER:<PORT_NUMBER>/em\n\n19.2 Navigate to Weblogic Domain, and then DOMAIN_NAME.\n\n19.3 Right click navigate to Security, Credentials, and then oim.\n\n19.4 Select OIMSchemaPassword, and click Edit.\n\nIn the Password field, enter the new password, and click OK\n\nRestart the WLS AdminServer\n\nStart the SOA/OIM managed server\n\norapki cert display -cert certificate_location [-summary|-complete]\n\nThe-cert parameter specifies the location of the certificate you want to display.\n\nYou can use either the-summary or the-complete parameter to display the following information:\n\n-summary displays the certificate and its expiration date\n\n-complete displays additional certificate information, including the serial number and public key\n\nHow To Generate A Wallet Containing A Self Signed Certificate Using ORAPKI from Oracle\n\nSOLUTION\n\nThis self-signed certificate should be used for testing purposes only with Oracle Application Server (OAS 10.1.2 - 10.1.3) or Fusion Middleware (FMW 11.1.1.X)\n\nBefore attempting this with ORAPKI for FMW 11.1.1.X or FMW 12.1.X, please read:Note 1218603.1 Understanding Wallets and Keystores in Fusion Middleware 11g/12c\n\nImportant: This is not a substitute for the Oracle Documentation or comprehensive orapki options. This provides sample commands using orapki to create a basic wallet and certificate. If you need advanced options such as SHA2 or higher keysize, ensure to add in the -sign_alg sha256 and/or -keysize 2048 parameters. See the Oracle Documentation for your version for options available on your version.\n\nThe steps below show how to create a Wallet, and a Self-Signed certificate using orapki:\n\n1. Create the Wallet:\n\nFor OAS:\n\n$ORACLE_HOME/bin/orapki wallet create -wallet <path_to_where_wallet_will_be_created> -pwd <wallet_pwd> -auto_login\n\nFor example:\n\n$ORACLE_HOME/bin/orapki wallet create -wallet /oracle/app/product/oracle/russ/orapki/ -pwd Welcome1 -auto_login\n\nFor FMW:\n\nNote the commands below show $MIDDLEWARE_HOME. $MIDDLEWARE_HOME should be used for FMW 11.1.X. If using FMW 12.1.X , use $ORACLE_HOME instead\n\nTo create aPassword Protected Wallet(ewallet.p12 and cwallet.sso):\n\n$MIDDLEWARE_HOME/oracle_common/bin/orapki wallet create -wallet <path> -auto_login\n\nFor example:\n\n>$MIDDLEWARE_HOME/oracle_common/bin/orapki wallet create -wallet /fmw11g/instances/webtier/wallet -auto_login\n\nEnter password: **********\n\nEnter password again: **********\n\nTo create anAuto-Login Wallet (cwallet.sso only):\n\n$MIDDLEWARE_HOME/oracle_common/bin/orapki wallet create -wallet <path> -auto_login_only\n\nFor example:\n\n$MIDDLEWARE_HOME/oracle_common/bin/orapki wallet create -wallet /fmw11g/instances/webtier/wallet -auto_login_only\n\nThis generates an Auto-Login Wallet in the desired location. It currently contains no user certificate.\n\n2. Create a Self Signed Certificate:\n\nFor OAS:\n\n$ORACLE_HOME/bin/orapki wallet add -wallet <path_to_where_wallet_was_created_above> -dn '<certificate_DN_you_require> -keysize 1024 -self_signed -validity <days> -pwd <wallet_pwd>\n\nFor example:\n\n$ORACLE_HOME/bin/orapki wallet add -wallet /oracle/app/product/oracle/russ/orapki/ -dn 'CN=server.uk.oracle.com, OU=Support, O=Oracle, L=Reading, ST=Berkshire, C=GB' -keysize 1024 -self_signed -validity 365 -pwd Welcome1\n\nFor FMW:\n\n$MIDDLEWARE_HOME/oracle_common/bin/orapki wallet add -wallet wallet_location -dn user_dn -keysize 512|1024|2048|4096 -self_signed [-pwd][-auto_login_only]\n\nFor example:\n\nFor aPassword Protected Wallet:\n\n$MIDDLEWARE_HOME/oracle_common/bin/orapki wallet add -wallet /fmw11g/instances/webtier/wallet -dn 'CN=server.uk.oracle.com, OU=Support, O=Oracle, L=Reading, ST=Berkshire, C=GB' -keysize 1024 -self_signed -validity 365 -pwd Welcome1\n\nFor anAuto-Login Wallet:\n\n$MIDDLEWARE_HOME/oracle_common/bin/orapki wallet add -wallet /fmw11g/instances/webtier/wallet -dn 'CN=server.uk.oracle.com, OU=Support, O=Oracle, L=Reading, ST=Berkshire, C=GB' -keysize 1024 -self_signed -validity 365 -auto_login_only\n\nNote: On Windows use double quotes for the -dn option i.e: -dn \"CN=server.uk.oracle.com,\n\nOU=Support, O=Oracle, L=Reading, ST=Berkshire, C=GB\"\n\nIf you open the Wallet in Wallet Manager, you will see it says Certificate: Ready, and also contains the Trusted Certificate.\n\nThis Wallet is ready to use with Application Server or Fusion Middleware for testing purposes.\n\nREFERENCES\n\nNOTE:1281035.1 - Master Note for SSL Configuration in Oracle Application Server 10g (10.1.2 - 10.1.3)\n\nNOTE:1628909.1 - Master Note for SSL Configuration in Fusion Middleware 12c (12.1.x)\n\nNOTE:1218695.1 - Master Note for SSL Configuration in Fusion Middleware 11g\n\nNOTE:341904.1 - Configuring HTTP Server to Use SSL in Oracle Application Server 10g (10.1.2 - 10.1.3)\n\nNOTE:342155.1 - Configuring Web Cache with SSL in Oracle Application Server 10G Release 2 (10.1.2.X.X)\n\nTo change the password stored in the CSF, go to ORACLE_HOME/common/bin\n\na. Run ./wlst.sh or wlst.cmd (based on the OS)\n\nb. Enter connect() to connect to weblogic Admin Server\n\nc. Run listCred(map=\"OIF\", key=\"jcepwdsign\"). This should print out the password already in the system\n\nd. Run\n\nupdateCred(map=\"OIF\",key=\"jcepwdsign\",user=\"UniqueUserNameCredential\",password=\"welcome1\")\n\ne. Run\n\nupdateCred(map=\"OIF\",key=\"jcepwdenc\",user=\"UniqueUserNameCredential\",password=\"welcome1\")\n\nf. Restart Managed Server\n\nQn1:\n\nThe default certificate in your OIF environment is expiring. You would like to renew the certificate with a self signed certificate. What is the procedure?\n\nQn2:\n\nHow could you restore to the previous cert in case the cert renewal is failing?\n\nSOLUTION\n\nAn1:\n\nInstructions as below:\n\n1. Follow this note to generate a new self signed wallet:\n\nHow To Generate A Wallet Containing A Self Signed Certificate Using ORAPKI (Doc ID 560982.1).\n\n2. Once you have a new wallet, then follow the instruction below to update signing wallet:\n\n8.3 Managing Signing and Encryption Wallets\n\n3. Once updated in the OIF,\n\nAn2:\n\nBack up the entire configuration directory to be safe:\n\n<Domain_Home>/config i.e. /refresh/home/Oracle/Middleware/user-projects/domains/IDMDomain/config\n\n4. If OIF fails to start after the step 3, and you see following error message:\n\n[HTTP:101216]Servlet: \"spmanager\" failed to preload on startup in Web application: \"/fed\".\n\njava.lang.RuntimeException: The server could not initialize properly: oracle.security.fed.sec.util.KeySourceException: Invalid/unsupported key store or incorrect password. Please verify that the password is correct and the store is a valid PKCS#12 PFX wallet or Java KeyStore file.\n\nThis could be due to OIF issue if password is different between keystore and key. If you are sure that your keystore is valid, then issue is probably with the password.\n\nTo change the password stored in the CSF, go to ORACLE_HOME/common/bin\n\na. Run ./wlst.sh or wlst.cmd (based on the OS)\n\nb. Enter connect() to connect to weblogic Admin Server\n\nc. Run listCred(map=\"OIF\", key=\"jcepwdsign\"). This should print out the password already in the system\n\nd. Run\n\nupdateCred(map=\"OIF\",key=\"jcepwdsign\",user=\"UniqueUserNameCredential\",password=\"welcome1\")\n\ne. Run\n\nupdateCred(map=\"OIF\",key=\"jcepwdenc\",user=\"UniqueUserNameCredential\",password=\"welcome1\")\n\nf. Restart Managed Server\n\n5. If the JKS file that you generated using keytool did not get updated, refer to Doc ID 1088993.1 has a section for \"How to create self-signed certificates and configure keystore\".\n\n6. After the new wallet loaded successfully, you should get a confirmation for wallet update. If not, you may running into bug 9470286. See Doc ID 1099743.1 for solution.\n\nREFERENCES\n\nNOTE:1088993.1 - WebLogic Server Support Pattern: Troubleshooting SSL Configuration and Node Manager Issues\n\nNOTE:1099743.1 - Not Able To Update Wallet With OIF 11.1.1.0\n\nNOTE:1420596.1 - OIF 11g : How To Renew Certificates for Oracle Identity Federation (OIF) 11g?\n\nNOTE:560982.1 - How to Generate a Wallet Containing a Self Signed Certificate Using ORAPKI in Oracle Application Server and Fusion Middleware\n\nOAM SERVER TRACE 32 INSTRUCTIONS\n\nHow to increase the logging for the {odl-handler} to Trace:32, which would then add more details in the {oam managed server}-diagnostic.log file.\n\nTo set this up\n\n1)run the /em console\n\n2) Expand the Farm_base_domain\n\n3) Expand Identity and Access\n\n4) Expand OAM\n\n5) Right click on oam_server\n\n6) Click on Logs -> Log Configuration\n\n7) On the Log Files tab, click on odl-handler to select it\n\n8) Click Edit Configuration\n\n9) Change the Logging Level to TRACE:32 //note the log level already set\n\n10) Click OK\n\n11) Click Close\n\n12) On the Log Levels tab, click the triangle next to Root Logger to expand the list of loggers, then click the triangle next to \"oracle\", find both \"oracle.oam\" and \"oracle.security\" and use the pull down menu next to each one to change it to TRACE:32 (FINEST)\n\n13) Click Apply\n\n14) Click Yes\n\n15) Click Close\n\n16) Rename the OAM Server Diagnostic log so we get a clean log. i.e. rename oam_server1-diagnostic.log to oam_server1-diagnostic1.log\n\n17) Restart the OAM Managed server and allow it to reach the Running state.\n\n18) Set the Logging Level back to previous and apply\n\n======================================================================\n\nADMIN SERVER TRACE 32 INSTRUCTIONS\n\nHow to increase the logging for the {odl-handler} to Trace:32, which would then add more details in the {admin server}-diagnostic.log file.\n\nTo set this up\n\n1)run the /em console\n\n2) Expand the Farm_base_domain\n\n3) Expand Weblogic Domain\n\n4) Expand base_domain\n\n5) Right click on AdminServer\n\n6) Click on Logs -> Log Configuration\n\n7) On the Log Files tab, click on odl-handler to select it\n\n8) Click Edit Configuration\n\n9) Change the Logging Level to TRACE:32 //note the log level already set\n\n10) Click OK\n\n11) Click Close\n\n12) On the Log Levels tab, use pull down menu next to Root Logger to change it to TRACE:32 (FINEST)\n\n13) Click Apply\n\n14) Click Yes\n\n15) Click Close\n\n16) Rename the Admin Server Diagnostic log so we get a clean log. i.e. rename AdminServer-diagnostic.log to AdminServer-diagnostic1.log\n\n17) Restart the OAM Managed Server and allow it to reach the Running state.\n\n18) Set the Logging Level back to previous and apply\n\nOIF 11g: Questions about Maintenance and Expiry of Signing And Encryption Certificates (Doc ID 1991933.1) To BottomTo Bottom\n\nIn this Document\n\nGoal\n\nSolution\n\nReferences\n\nThis document is being delivered to you via Oracle Support's Rapid Visibility (RaV) process and therefore has not been subject to an independent technical review.\n\nAPPLIES TO:\n\nOracle Identity Federation - Version 11.1.1.5.0 and later\n\nInformation in this document applies to any platform.\n\nGOAL\n\nOracle Identity Federation (OIF) 11.1.1.x has been configured as Identity Provider (IdP) or Service Provider (SP).\n\nOIF has been configured with signing and encryption certificates for messages sent to peer providers. OIF has also been configured to accept signed [and encrypted] messages from peer providers.\n\nThis document answers a few common questions about maintenance of the OIF and peer provider signing / encryption certificates.\n\n1. How to renew the OIF signing and/or encryption certificates when they expire?\n\n2. The certificate used by OIF used for signing/encrypting SAML assertions is soon to expire.\n\nA renewed certificate has been obtained and imported into a JKS store.\n\nIs there a way to make OIF work with either of the certificates i.e. both the old and the new one?\n\n3. A new wallet/keystore has been configured in the OIF Security and Trust settings. The old wallet has not been removed.\n\nIt is expected to see both new and old encryption certificates in the OIF IdP metadata at http(s)://OIFHOSTNAME.DOMAIN:OIFPORT/fed/idp/metadata for <md:KeyDescriptor use=\"encryption\">.\n\nBut only the new certificate is shown in the OIF metadata.\n\nFor <md:KeyDescriptor use=\"signing\"> both old and new certificates are included.\n\nWhy is this?\n\n4. A peer provider's signing and/or encryption certificate has expired. Will this cause OIF to generate errors or Single Sign-On (SSO) to fail?\n\n5. If a peer provider signing or encryption certificate is soon to expire or has expired, will OIF provide a warning? Is there a way to monitor peer provider certificate expiration through OIF?\n\n6. A peer provider has replaced an expiring or expired signing and/or encyption certificate. How to configure OIF with the new peer provider certificate(s)?\n\n7. How to configure OIF to validate peer provider signing or encryption certificates before use?\n\n8. Does OIF validate certificates using a Certificate Revocation List (CRL)? How?\n\nSOLUTION\n\n1. To replace an expiring signing or encryption certificate in OIF 11.1.1.x, create a new Java keystore or Oracle Wallet containing a new, valid certificate.\n\nOracle FusionMiddleWare (FMW) 11g offers either Oracle Wallet Manager (owm) or keytool to manage certificate stores.\n\nReferences:\n\nOracle Fusion Middleware Online Documentation Library, 11g Release 1 (11.1.1.5) / Cross-Suite\n\nFusion Middleware Administrator's Guide\n\nH Oracle Wallet Manager and orapki\n\nOracle Fusion Middleware Online Documentation Library, 11g Release 1 (11.1.1.5) / Security for Oracle Fusion Middleware\n\nFusion Middleware Securing Oracle WebLogic Server\n\nUsing the Keytool Utility\n\nGenerate a certificate request using the appropriate tool (keytool or owm) and submit it to a Certificate Authority for the server certificate to be issued.\n\nThen import the server certificate into the keystore/wallet.\n\nAfter that the keystore/wallet is ready to be configured in OIF.\n\nFollow the instructions here to configure OIF with the new keystore/wallet:\n\nOracle Fusion Middleware Online Documentation Library, 11g Release 1 (11.1.1.5) / Identity Management\n\nFusion Middleware Administrator's Guide for Oracle Identity Federation\n\n5.10.1 Security and Trust - Wallet\n\nThe following document also provides useful information about replacing the OIF certificates: How To Renew Default Signed Certificate With Self Signed Certificate In OIF (Doc ID 1434548.1).\n\nAfter the new encryption and signing certificates have been configured in OIF, the OIF metadata must be re-generated and supplied it to all peer providers for them to use.\n\nThere is the option to keep the old certificates/wallet until all peer providers have updated their configuration with the new OIF metadata.\n\nWhen all peer providers are using the new metadata, click Remove Old Wallet in EM Console to remove the old OIF certificates.\n\n2. If OIF has been configured with new signing and encryptions certificates, will OIF work with either of the certificates i.e. both the old and the new one?\n\nYes, the old certificate(s) will continue to be used by OIF until \"Remove old wallet\" is selected.\n\n3. Until \"Remove old wallet\" is selected in OIF Administration Security and Trust, OIF will provide both both old and new signing certificates in the metadata.\n\nHowever only the new encryption certificate will be supplied in the OIF metadata.\n\nPeer Providers/Partners only need to know about a single encryption certificate to send encrypted data to OIF. So the OIF IdP metadata only lists the new encryption certificate. The old certificate is no longer necessary.\n\nThe OIF server itself is still using the two encryption certificates to decrypt encrypted messages and therefore will be able to decrypt data encrypted with the new encryption certificate as well as the old encryption certificate.\n\n4. OIF will not object to expired peer provider certificates unless OIF is configured to validate certificates before use.\n\nSee 7. below.\n\nIf certificate validation is configured and OIF cannot validate the signing or encryption certificate for an authentication request or response then SSO will fail.\n\n5. OIF will not provide any warning if a peer provider signing or encryption certificate is soon to expire or has expired. It is the responsibility of the SP to ensure that their certificates are valid.\n\nHowever OIF will produce an error if a peer provider certificate is expired and OIF is configured for certificate validation (see 7. below).\n\n6. To configure OIF with new peer provider certificates, obtain the new metadata file from the peer provider which contains the renewed certificates. Upload the new metadata file in the OIF Administration -> Federations section. OIF will detect that a provider already exist with the same ID and will replace the existing metadata with the new metadata.\n\n7. To configure OIF 11g to validate certificates, check the \"Certificate Validation\" checkbox in OIF Administration -> Security and Trust settings.\n\nNote also that if Certificate Validation is configured, the root Certificate Authority (CA) certificate and any subCA certificates for chained certificates must be loaded into the OIF Trust Store.\n\n8. OIF will execute certificate validation for the peer provider signing and encryption certificates IF \"Enable Certificate Validation\" is checked in OIF Configuration Security and Trust -> Trusted CAs and CRLs section.\n\nIf this option is checked then the OIF administrator must upload the root CA certificates for the peer provider signing and encryption certificates in the Trusted CAs list.\n\nIf a CRL is also configured then OIF will check the revocation status of certificates using the configured CRL(s).\n\nMore detail and more advanced configuration options are provided at the following location:\n\nOracle Fusion Middleware Online Documentation Library, 11g Release 1 (11.1.1.5) / Identity Management\n\nFusion Middleware Administrator's Guide for Oracle Identity Federation\n\n6.22 Certificate Path Validation\n\nSee also:\n\nOIF 11g: Unable To Load Metadata Files. Error \"The Signing Certificate Could Not Be Validated\" (Doc ID 1908582.1)\n\nOIF Generates 500 Error When Validating Incoming Message Signature - Reference Validation With URI Failed (Doc ID 1637895.1)\n\nIdentity Federation SSO Fails With \"Signature verification failed for provider ID ...\" (Doc ID 2032605.1)\n\nREFERENCES\n\nNOTE:2032605.1 - Identity Federation SSO Fails With \"Signature verification failed for provider ID ...\"\n\nNOTE:1908582.1 - OIF 11g: Unable To Load Metadata Files. Error \"The Signing Certificate Could Not Be Validated\"\n\nNOTE:1637895.1 - OIF Generates 500 Error When Validating Incoming Message Signature - Reference Validation With URI Failed\n\nError:\n\nORA­01157: cannot identify/lock data file 64 ­ see DBWR trace fileORA­01110: data file 64: '/app/oracle/product/11.2.0.4/dbhome_1/dbs/path_to_your_datafiles_foldername_of_df_you_want.dbf'ORA02002: error while writing to audit trailORA­00604: error occurred at recursive SQL level 1 ORA­01157: cannot identify/lock data file 64 ­ see DBWR trace fileORA­01110: data file 64: '/app/oracle/product/11.2.0.4/dbhome_1/dbs/path_to_your_datafiles_foldername_of_df_you_want.dbf'\n\nSolution:\n\nWe followed the following set of steps to resolve the issue\n\nRMAN> copy datafile '/app/oracle/product/11.2.0.4/dbhome_1/dbs/path_to_your_datafiles_foldername_of_df_you_want.dbf' to '+DATA';\n\nusing SQL PLUS rename the Datafile to the New location\n\nSQL>alter database rename file '/app/oracle/product/11.2.0.4/dbhome_1/dbs/path_to_your_datafiles_foldername_of_df_you_want.dbf'' to '+DATA/SYSTEM.xxx.zzzzzz';\n\n­ open the DB\n\nSQL> alter Database open;\n\n­ remove the old file $ rm /u01/app/oracle/product/11.2.0.4/dbhome_1/dbs/path_to_your_datafiles_foldername_of_df_you_want.dbf\n\nThis is expected as it is RAC DB and it suppose to create the new Datafile on the shared disk no on the local node\n\nwhen user add data file using\n\nSQL> alter tablespace system add datafile 'FRA' SIZE 250M AUTOEXTEND ON NEXT 50M MAXSIZE UNLIMITED;\n\nits add the datafile in the default OMG location db_create_file_dest\n\nExtra commands used during troubleshooting.\n\nuse below commands to check the backup of currept file.\n\nset pagesize 20000\n\nset linesize 180\n\nset pause off\n\nset serveroutput on\n\nset feedback on\n\nset echo on\n\nset numformat 999999999999999\n\nalter session set nls_date_format = 'DD­MON­RRRR HH24:MI:SS';\n\nSpool recover.lst select name,platform_name,open_mode,controlfile_type,log_mode,flashback_on,RESETLOGS_TIME,RESETLOGS_CHANGE# from v$database; select substr(name, 1, 50), status from v$datafile; select substr(name,1,50), recover, fuzzy, checkpoint_change#,RESETLOGS_TIME,RESETLOGS_CHANGE# from v$datafile_header; select * from v$backup; select name, open_mode, checkpoint_change#, ARCHIVE_CHANGE# from v$database; select GROUP#,THREAD#,SEQUENCE#,MEMBERS,ARCHIVED,STATUS,FIRST_CHANGE# from v$log; select GROUP#,substr(member,1,60) from v$logfile; select * from v$log_history; select * from v$recover_file; select * from v$recovery_log; select HXFIL File_num,substr(HXFNM,1,40) File_name,FHTYP Type,HXERR Validity, FHSCN SCN, FHTNM TABLESPACE_NAME,FHSTA status ,FHRBA_SEQ Sequence, FHTHR Thread from X$KCVFH; spool off\n\nMigrating a Certificate in IdP Metadata\n\nThis article is for site administrators wishing to replace an old certificate with a new certificate in IdP metadata. Please read the overview Certificate Migration topic before continuing.\n\nHandle the New Private Key Carefully!\n\nThe IdP private signing key must be handled with extreme care. Before generating a new private key, consult the IdP Key Handling topic for recommended practices.\n\nIn Federation metadata, all certificates in IdP metadata are contained in an <md:KeyDescriptor use=\"signing\"> element. Such a certificate may be used for signing and/or TLS. Usually there are identical key descriptors contained in the <md:IDPSSODescriptor> element (used as a signing key) and the <md:AttributeAuthorityDescriptor> element (used as an TLS key), in which case both certificates are migrated out of metadata at the same time.\n\nImplementation Requirements\n\nThis procedure ultimately requires two <md:KeyDescriptor use=\"signing\"> elements to be bound to a single role descriptor in IdP metadata. Some SP software implementations will not consume such metadata (which is an implementation bug). Check with your federation partners before initiating the procedure below.\n\nRegardless of the IdP implementation used, the general migration process is as follows.\n\nPreconditions:\n\nThere is a single <md:KeyDescriptor use=\"signing\"> element bound to each role descriptor in IdP metadata.\n\nThe IdP software is configured to use the corresponding private key as a signing key and/or TLS key.\n\nProcedure:\n\nAdd a new <md:KeyDescriptor use=\"signing\"> element to IdP metadata.\n\nWait for the newly updated metadata to propagate throughout the Federation.\n\nConfigure the IdP software to use the new key (instead of the old key) as the signing key and/or TLS key.\n\nRemove the old <md:KeyDescriptor use=\"signing\"> element from IdP metadata.\n\nProcedural details:\n\nAt step 1, log into the Federation Manager, upload a new certificate, and bind that certificate to your metadata. Be sure to bind the certificate to each of the <md:IDPSSODescriptor> and <md:AttributeAuthorityDescriptor> elements. After doing so, your IdP's metadata will contain four (4) key descriptors, two of which are new.\n\nKey Order in Metadata\n\nWhen two verification keys are listed in IdP metadata, the old one is listed first. This is because the IdP is still signing with the old key as long as two keys are listed in metadata. This accommodates non-conforming SP implementations (such as EZProxy) that try the first key listed and then stop.\n\nThe configuration at step 3 depends on your particular IdP software implementation and how the key is used. Some implementations require separate configurations for signing and TLS. In particular, if your IdP supports artifact resolution or attribute query, it may require a separate TLS key configuration. Consult your software documentation for further instructions. (If you're using the Shibboleth IdP, refer to the next section.)\n\nFinally, at step 4, remove the old key descriptors from metadata but leave the two newer key descriptors in the metadata. This completes the migration process.\n\nSELECT a.file_name,\n\nsubstr(A.tablespace_name,1,14) tablespace_name,\n\ntrunc(decode(A.autoextensible,'YES',A.MAXSIZE-A.bytes+b.free,'NO',b.free)/1024/1024) free_mb,\n\ntrunc(a.bytes/1024/1024) allocated_mb,\n\ntrunc(A.MAXSIZE/1024/1024) capacity,\n\na.autoextensible ae\n\nFROM (\n\nSELECT file_id, file_name,\n\ntablespace_name,\n\nautoextensible,\n\nbytes,\n\ndecode(autoextensible,'YES',maxbytes,bytes) maxsize\n\nFROM dba_data_files\n\nGROUP BY file_id, file_name,\n\ntablespace_name,\n\nautoextensible,\n\nbytes,\n\ndecode(autoextensible,'YES',maxbytes,bytes)\n\n) a,\n\n(SELECT file_id,\n\ntablespace_name,\n\nsum(bytes) free\n\nFROM dba_free_space\n\nGROUP BY file_id,\n\ntablespace_name\n\n) b\n\nWHERE a.file_id=b.file_id(+)\n\nAND A.tablespace_name=b.tablespace_name(+)\n\nORDER BY A.tablespace_name ASC;\n\nRun the Oracle WebLogic 10.3.6.0 installer from the image that you downloaded from the Oracle Software Delivery Cloud.\n\nThe item name of the installer is (V29856-01). The filename of the installer is:\n\nwls1036_generic.jar\n\nUpon execution, the installer starts preparing the OUI install program.\n\nOpen a Command window with Run as Administrator option and run this command from the prompt:\n\n>java -jar wls1036_generic.jar\n\nOn Choose Middleware Home Directory, click this radio button:\n\nCreate a new Middleware Home\n\nFor example, your Middleware Home Directory might be:\n\nC:\\Oracle\\Middleware\n\nOn Register for Security Updates, Oracle strongly recommends you complete the Email address and/or the My Oracle Support Password fields to register your installation of Oracle WebLogic 10.3.6.0. This registration will enable you to be informed of security issues.\n\nClick the Next button\n\nOn Choose Install Type, select the type of installation you wish to perform.\n\nIn this guide, it is assumed you select the Typical installation type, which installs the Oracle WebLogic 10.3.6.0 and the Oracle Coherence Server.\n\nThe Typical selection automatically includes the Oracle Coherence server, which is part of Oracle WebLogic 10.3.6.0. This new server is a stand-alone cache server that enables dedicated JVM instances responsible for maintaining and managing cached data. As of the initial publication of this guide, the JD Edwards EnterpriseOne HTML Server has not been certified with the Oracle Coherence Server.\n\nOn JDK Selection, click the check box for the JDK you wish to use and install with this product installation.\n\nClick the Next button.\n\nOn Choose Product Installation Directories, complete these fields:\n\nWebLogic Server\n\nEnter or browse to a location where you wish to install an Oracle WebLogic 10.3.6.0.\n\nFor example:\n\nc:\\Oracle\\Middleware\\wlserver_10.3\n\nOracle Coherence\n\nEnter or browse to a location where you wish to install the Oracle Coherence Server.\n\nFor example:\n\nc:\\Oracle\\Middleware\\coherence_3.7\n\nClick the Next button.\n\nIf the above screen does display (because you are not running the installer as an Administrator), on Choose Shortcut Location, click this radio button:\n\n\"All Users\" Start Menu folder (recommended)\n\nClick the Next button.\n\nOn Installation Summary, review the products that will be installed.\n\nClick the Next button.\n\nThe installer starts copying files.\n\nA progress bar is displayed in the lower right-hand portion of the screen.\n\nAs the installer progresses it displays the new features of the Oracle WebLogic 10.3.6.0.\n\nConnecting to Node Manager ...\n\nTraceback (innermost last):\n\nFile \"<console>\", line 1, in ?\n\nFile \"<iostream>\", line 123, in nmConnect\n\nFile \"<iostream>\", line 648, in raiseWLSTException\n\nWLSTException: Error occured while performing nmConnect : Cannot connect to Node\n\nManager. : Access to domain 'my_domain' for user 'weblogic' denied\n\nUse dumpStack() to view the full stacktrace\n\nSolution:\n\nif it is new installation update Weblogic credential information."
    }
}