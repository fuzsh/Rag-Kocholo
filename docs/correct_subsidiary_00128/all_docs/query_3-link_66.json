{
    "id": "correct_subsidiary_00128_3",
    "rank": 66,
    "data": {
        "url": "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/uioasa.htm",
        "read_more_link": "",
        "language": "en",
        "title": "Customizing OAAM Server Web Application Pages",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/aadev_dt_011.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/single1.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/singjump.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/single1.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/forgot1.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/singlotpchal.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/singreset.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/singkba1.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/single2.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/singlereg1.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/singlereg2.png",
            "https://docs.oracle.com/cd/E40329_01/dev.1112/e60534/img/singreset.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2015-06-12T17:28:32+00:00",
        "summary": "",
        "meta_description": "Documentation to help integrators and developers integrate OAAM natively with customer applications, perform key customizations for virtual authentication devices, OTP Anywhere, and OAAM Server, and develop web applications to leverage OAAM Server functionality.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "8.1 About Customizing the OAAM Server for Multiple Applications\n\nMultitenancy refers to a principle in software architecture where a single instance of the software runs on a server, serving multiple client organizations. With a multitenant architecture, each client organization feels as if they are working with a separate customized application instance.\n\nYou can configure the OAAM Server to support one or more Web application authentication and user registration flows. The OAAM Server configuration is specific to the UIO Proxy deployment. The OAAM UIO Proxy offers multifactor authentication to Web applications without requiring any change to the application code.\n\nThe OAAM Server proxy intercepts the HTTP traffic between the client (browser) and the server (Web application) and performs appropriate actions, such as redirecting to OAAM Server, to provide multifactor authentication and authorization. OAAM Server in turn communicates with OAAM Admin to determines the risk and takes the appropriate actions, such as permitting the login, challenging the user, blocking the user, and other actions.\n\nFigure 8-1 Universal Installation Deployment\n\nDescription of \"Figure 8-1 Universal Installation Deployment\"\n\nThe UIO Proxy can be placed in front of multiple applications and customized to work with each one as required.\n\n8.2 Configuring and Customizing OAAM Server for Multiple Applications\n\nThis section contains the following topics:\n\nDetermining the Application ID of Each Application to Secure\n\nAssigning Default User Groups for Each Application to Secure\n\nConfiguring OAAM Server Application Properties\n\nConfiguring OAAM Server Properties Several Applications Have In Common\n\nManaging the Appearance and Behavior of OAAM Using User-Defined Enumerations\n\n8.2.1 Determining the Application ID of Each Application to Secure\n\nTo ensure that a customer's data is unique from that of other customers, an Application ID for the client application is mapped to an Organization ID. An Organization ID identifies what tenant applications a user utilizes.\n\nDetermine how many applications are to be configured and assign each application an Application ID. This Application ID is the same one used to configure the Proxy (see Chapter 6, \"Implementing the Oracle Adaptive Access Manager Proxy\"). In many cases applications are referred to internally by some name or abbreviation, so an integrator configuring OAAM Server might want to use that name. For an example, if the client has two applications, one wholesale banking application and one retail banking application, the integrator might choose to use wholesale and retail as the Application IDs for the two applications.\n\nThis Application ID is the same one used to configure the Proxy (see Chapter 6, \"Implementing the Oracle Adaptive Access Manager Proxy\").\n\nThe Proxy will send the AppId to OAAM Server as needed through an HTTP header. This AppId is then used to determine which configuration is used when displaying pages to the client. OAAM Server is configured by a set of properties which will be discussed in more detail later.\n\nProperties can contain an AppId to allow for multiple configurations for multi-tenant scenarios.\n\nThe following example shows how to use the AppId to define a property in the OAAM server:\n\nbharosa.uio.appId1.default.user.group=app1Group\n\nThe bold appId1 is in the location in the property where you use the AppId to configure application specific values.\n\n8.2.2 Assigning Default User Groups for Each Application to Secure\n\nYou can configure e ach applicat ion to have a unique default user group. This is the group that a user of that application will be associated with as their Organization ID when the user is first created in the Oracle Adaptive Access Manager database. The Organization ID is used when a user attempts to log in to the application and user data is loaded from the database.\n\nAn example of how Organization ID is used in a property definition is shown as follows:\n\nbharosa.uio.appId1.default.user.group=app1Group bharosa.uio.appId2.default.user.group=app2Group\n\nIn the example, two Organization IDs are defined to two different applications. The application with an AppId of appId 1 has been assigned the Organization ID of app1Group and the application with an AppId of appId2 has been assigned the Organization ID of app2Group.\n\n8.2.3 Configuring OAAM Server Application Properties\n\nAn application in OAAM Server is made up of a grouping or set of properties. You can configure OAAM Server properties on a global or application specific level.\n\nOAAM Server property names are prefixed with bharosa.uio. They are followed by the Application ID or default if the setting is global.\n\nProperty definitions that start with bharosa.uio.default apply to all Application IDs unless overridden by a more specific value.\n\nIn the following example, default is used instead of the appId to designate the property as a global default. The property is used across all applications of the OAAM Server installation unless a specific application has another location specified.\n\nbharosa.uio.default.header = /globalcustomHeader.jsp bharosa.uio.default.footer = /globalcustomFooter.jsp\n\nThe default properties for the path to the custom header and footer are:\n\nbharosa.uio.default.header = path_to_custom_header.jsp bharosa.uio.default.footer = path_to_custom_footer.jsp\n\nAn application-level property is one that only effects a single application when there are more than one application defined in the properties.\n\nIn Oracle Adaptive Access Manager and Access Manager integrations, the AppId is oam. This allows OAAM to display a different header and footer that keeps the same look and feel as Access Manager pages.\n\nThe properties for the path to the Access Management custom header and footer are:\n\nbharosa.uio.oam.header = path_to_custom_header.jsp bharosa.uio.oam.footer = path_to_custom_footer.jsp\n\nThese specific prefix bharosa.uio.oam value overrides the default settings defined as bharosa.uio.default.\n\nIn the following example, app1 uses an application-level defined header and footer file, but app2 uses an application-level defined footer but a global or default defined header file.\n\nbharosa.uio.default.header = /globalcustomHeader.jsp bharosa.uio.default.footer = /globalcustomFooter.jsp bharosa.uio.app1.header = /app1customHeader.jsp bharosa.uio.app1.footer = /app1customFooter.jsp bharosa.uio.app2.footer = /app2customFooter.jsp\n\n8.2.4 Configuring OAAM Server Properties Several Applications Have In Common\n\nIn addition to con figuring properties for each application, you can configure a set of properties that several applications have in common. You can then extend that set to customize the parameters that differ between the set of applications.\n\nIf you were to configure three applications that all use a single footer, but each has a unique header, you can include the following properties:\n\nbharosa.uio.myAppGroup.footer = /myAppGroup/customFooter.jsp bharosa.uio.appId1.extends=myAppGroup bharosa.uio.appId1.header=/client/app1/customHeader.jsp bharosa.uio.appId2.extends=myAppGroup bharosa.uio.appId2.header==/client/app2/customHeader.jsp bharosa.uio.appId3.extends=myAppGroup bharosa.uio.appId3.header==/client/app3/customHeader.jsp\n\n8.3 Managing the Appearance and Behavior of OAAM Using User-Defined Enumerations\n\nYou can manage the appearance and behavior of OAAM using user-defined enumerations. User-defined enumerations are a collection of properties that represent a list of items. Each element in the list may contain several different attributes. The definition of a user-defined enum begins with a property ending in the keyword \".enum\" and has a value describing the use of the user-defined enum. Each element definition then starts with the same property name as the enum, and adds on an element name and has a value of a unique integer as an ID. The attributes of the element follow the same pattern, beginning with the property name of the element, followed by the attribute name, with the appropriate value for that attribute.\n\n8.3.1 Enum Example\n\nThe following is an example of an enum defining credentials displayed on the login screen of an OAAM Server implementation:\n\nbharosa.uio.default.credentials.enum = Enum for Login Credentials bharosa.uio.default.credentials.enum.companyid=0 bharosa.uio.default.credentials.enum.companyid.name=CompanyID bharosa.uio.default.credentials.enum.companyid.description=Company ID bharosa.uio.default.credentials.enum.companyid.inputname=comapanyid bharosa.uio.default.credentials.enum.companyid.maxlength=24 bharosa.uio.default.credentials.enum.companyid.order=0 bharosa.uio.default.credentials.enum.username=1 bharosa.uio.default.credentials.enum.username.name=Username bharosa.uio.default.credentials.enum.username.description=Username bharosa.uio.default.credentials.enum.username.inputname=userid bharosa.uio.default.credentials.enum.username.maxlength=18 bharosa.uio.default.credentials.enum.username.order=1\n\nThis set of properties defines one user-defined enum that contains two elements, each of which with five attributes. The name and description attributes are required to define any user-defined enum, other attributes are defined and used as needed by each individual use of a user-defined enum.\n\n8.3.2 Overriding Existing User-Defined Enums\n\nOverriding existing user-defined enums has some special cases. You may override any existing enum element's attribute value of the default application ID just as you would any other property, but to change the value of an element's attribute in a single application using an appId, you must create the entire enum in that application using the appropriate appId.\n\nFor example, using the user defined enum defined in Section 8.3.1, \"Enum Example,\" if you wanted to change Company ID to Profile ID for only one application (appId1), you would need to modify the enum:\n\nbharosa.uio.appId1.credentials.enum = Enum for Login Credentials bharosa.uio.appId1.credentials.enum.profileid=0 bharosa.uio.appId1.credentials.enum.profileid.name=ProfileID bharosa.uio.appId1.credentials.enum.profileid.description=Profile ID bharosa.uio.appId1.credentials.enum.profileid.inputname=profileid bharosa.uio.appId1.credentials.enum.profileid.maxlength=20 bharosa.uio.appId1.credentials.enum.profileid.order=0 bharosa.uio.appId1.credentials.enum.username=1 bharosa.uio.appId1.credentials.enum.username.name=Username bharosa.uio.appId1.credentials.enum.username.description=Username bharosa.uio.appId1.credentials.enum.username.inputname=userid bharosa.uio.appId1.credentials.enum.username.maxlength=18 bharosa.uio.appId1.credentials.enum.username.order=1\n\nFor instructions on customizing, extending, or overriding Oracle Adaptive Access Manager properties or enums, see Chapter 7, \"Using the OAAM Extensions Shared Library to Customize OAAM.\"\n\n8.3.3 Disabling Elements\n\nTo disable any already defined element in a user-defined enum, simply add an enabled attribute with a value of false. Using the appId1 credentials enum from Section 8.3.2, \"Overriding Existing User-Defined Enums,\" you would add the following line to remove Profile ID from the elements used by the application:\n\nbharosa.uio.appId1.credentials.enum.profileid.enabled=false\n\n8.4 Customizing the OAAM Server Pages\n\nThis section describes how to customize the appearance of the OAAM server pages. Topics include:\n\nTips for Customizing the OAAM Web Application Pages\n\nCustomizing Headers and Footers in User Interface Branding\n\nModifying User Interface Styles in User Interface Branding\n\nCustomizing Content and Messaging in User Interface Branding\n\nCustomizing the Text in the OAAM Login Page\n\nConfiguring Forgot Username Link\n\nChanging the Invalid Characters Check on the Login Page\n\nConfiguring OAAM Server for Localization\n\n8.4.1 Tips for Customizing the OAAM Web Application Pages\n\nAs you plan to customize the web user interface, keep the following points in mind:\n\nWhen customizing, back up files so that they may be used when the software is upgraded.\n\nWhen configuring the web application, use oaam_custom.properties. The file should contain:\n\nClient-configured properties (any pro perties that have been customized for a specific deployment)\n\nUIO Proxy system /device configurations. These properties deal with the structural changes in the overall application. It is where the header, footer, and CSS properties are located.\n\nIn the deployed application, the oaam_custom.properties file is located in the web-inf/classes directory.\n\nNote:\n\nIn 11.1.2, the oaam_custom.properties file replaces the bharosa_server.properties file from previous versions.\n\nWhen adapting the OAAM deployment to a particular language, use client_resource_locale.properties where locale is the locale string for which you want to use the custom values (en, es, and others). The client_resource_locale.properties file is used to customize text on the pages when the application is translated into many languages. The file should contain\n\nClient-c onfigured properties that are configurable for each locale being supported. locale is the locale string for which you want to use the custom values (en, es, and others).\n\nUIO Proxy messaging and page content configuration. For example, page titles, links at the bottom of the pages, page messages, error message, and confirmation messages.\n\nNote:\n\nThe client_resource_locale.properties file is not used for header and footer files customization.\n\nThe administrator creates the client_resource_locale.properties file to customize the application so that it contains locale-specific properties.\n\nFor instructions on customizing, extending, or overriding Oracle Adaptive Access Manager properties, see Chapter 7, \"Using the OAAM Extensions Shared Library to Customize OAAM.\"\n\n8.4.2 Customizing Headers and Footers in User Interface Branding\n\nYou can create custom header and footer files for the applications being secured. The header and footer files are JSP files and can contain any HTML or JSP code required to replicate the look of the application being secured.\n\nCreate a work folder called oaam_extensions. (The folder can be created anywhere if it is outside the installation folder.)\n\nLocate oracle.oaam.extensions.war in the following directory:\n\nIAM_Home/oaam/oaam_extensions/generic\n\nExtract oracle.oaam.extensions.war in the oaam_extensions folder.\n\nIn the oaam_extensions folder, create the following subfolders:\n\n/client/app1/ /client/app1/images/\n\nCreate a customHeader.jsp and customFooter.jsp inside the client/app1/ folder.\n\nThe header (customHeader.jsp) and footer (customFooter.jsp) files should contain only content HTML, all page related tags (<html>, <head>, <body>, and so on) are already provided by OAAM Server.\n\nAs a simple example, a header and footer are created that contain a single image each, to be used as the header and footer of an application called \"appId1\".\n\nCopy the following code into customHeader.jsp for the header.\n\n/client/app1/customHeader.jsp <img src=\"client/app1/images/customHeader.jpg\" alt=\"Welcome to App1\"/>\n\nCopy the following code into customFooter.jsp for the footer.\n\n/client/app1/customFooter.jsp <img src=\"client/app1/images/customFooter.jpg\" alt=\"App1 Footer\"/>\n\nThese files will be deployed in the \"/client/app1/\" directory within the Web application.\n\nAdd associated files to the client/app1 folder as needed.\n\nFor example, the customHeader.jpg and customFooter.jpg image files referenced by customHeader.jsp and customFooter.jsp.\n\n/client/app1/images/customHeader.jpg /client/app1/images/customFooter.jpg\n\nOpen the oaam_custom.properties file in the WEB-INF/classes/bharosa_properties directory of the oracle.oaam.extensions.war file.\n\nTo associate these header and footer files with the application, add the following properties to oaam_custom.properties and save it to oaam_extensions/WEB-INF/classes/bharosa_properties.\n\nbharosa.uio.appId1.header = /client/app1/customHeader.jsp bharosa.uio.appId1.footer = /client/app1/customFooter.jsp\n\nRepackage oracle.oaam.extensions.war from the parent folder of oaam_extensions using the command:\n\njar -cvfm oracle.oaam.extensions.war oaam_extensions/ META-INF\\MANIFEST.MF -C oaam_extensions/ .\n\nNote:\n\nNote that there is a dot at the end of the command.\n\nThis command recreates the WAR file with the MANIFEST.MF file. The new JSP files, referenced images, and added properties in oaam_custom.properties are included in the new WAR file.\n\nShut down the OAAM Admin and OAAM Server managed servers.\n\nStart the WebLogic Server where Oracle Adaptive Access Manager is deployed and log in to the WebLogic Administration Console.\n\nNavigate to Domain Environment > Deployments and lock the console.\n\nClick the Install button.\n\nBrowse to the location of the oracle.oaam.extensions.war file and select it by clicking the radio button next to the .war file and clicking Next.\n\nEnsure Install this deployment as a library is selected and click Next.\n\nSelect OAAM Admin and OAAM Server servers as deployment targets.\n\nClick Next again to accept the defaults in this next page and then click Finish.\n\nClick the Save button and then Activate Changes.\n\nStart the OAAM Admin and OAAM Server managed servers.\n\n8.4.3 Modifying User Interface Styles in User Interface Branding\n\nYou can create a custom Cascading Style Sheet (CSS) to create a custom user interface. The CSS file provides control over backgrounds, font colors and sizes, and so on. The default CSS file, oaam_uio.css, is located in the css folder. You can override the styles in this CSS file using a custom CSS file. Use the file for an application or at a global level. For information on setting application properties, see Section 8.2.3, \"Configuring OAAM Server Application Properties.\"\n\nFor example, to override the font-family of the default body style definition:\n\nCreate a work folder called oaam_extensions.\n\nThe folder can be created anywhere if it is outside the installation folder.\n\nLocate oracle.oaam.extensions.war, which is located in the IAM_Home/oaam/oaam_extensions/generic directory.\n\nExplode oracle.oaam.extensions.war into the oaam_extensions folder.\n\nCreate the client/app1/css directory.\n\nCreate an app1.css file.\n\nAdd the following code to the app1.css file.\n\nbody{ background-color:#ffffff; font-size:12px; color:#000000; font-family:arial,helvetica,sans-serif; margin:0px 0px 0px 0px }\n\nChange Helvetica to the primary font-family you want to use for your appId1 application.\n\nAdd the file to the /client/app1/css directory.\n\nOpen the oaam_custom.properties file in the WEB-INF/classes/bharosa_properties directory of the oracle.oaam.extensions.war file.\n\nTo use the newly created file, set the following property in oaam_custom.properties:\n\nbharosa.uio.appId1.custom.css=/client/app1/css/app1.css\n\nRepackage oracle.oaam.extensions.war from the parent folder of oaam_extensions using the command:\n\njar -cvfm oracle.oaam.extensions.war oaam_extensions/META-INF/MANIFEST.MF -C oaam_extensions/ .\n\nShut down the OAAM Admin and OAAM Server managed servers.\n\nStart the WebLogic Server where Oracle Adaptive Access Manager is deployed and log in to the Oracle WebLogic Administration Console.\n\nNavigate to Domain Environment > Deployments and lock the console.\n\nClick the Install button.\n\nBrowse to the location of the oracle.oaam.extensions.war file and select it by clicking the option next to the WAR file and clicking Next.\n\nEnsure Install this deployment as a library is selected and click Next.\n\nSelect OAAM Admin and OAAM Server servers as deployment targets.\n\nClick Next again to accept the defaults in this next page and then click Finish.\n\nClick the Save button and then Activate Changes.\n\nStart the OAAM Admin and OAAM Server managed servers.\n\nAny style defined in the oaam_uio.css in the OAAM Server ear file can be overridden in this manner if required.\n\n8.4.4 Customizing Content and Messaging in User Interface Branding\n\nYou can customize content and messaging of the OAAM server pages by adding properties to the client_resource_locale.properties file.\n\nSome customizable items, like page title and message, are applicable for each page. While other items, like login blocked message, are specific to a particular page.\n\nTo customize content and messaging:\n\nCreate a work folder called oaam_extensions. (The folder can be created anywhere if it is outside the installation folder.)\n\nLocate oracle.oaam.extensions.war, which is located in the IAM_Home/oaam/oaam_extensions/generic directory.\n\nExplode oracle.oaam.extensions.war into the oaam_extensions folder.\n\nCreate a client_resource_locale.properties file in oaam_extensions\\WEB-INF\\classes.\n\nAdd the customized message to this file.\n\nFor example, to change the page title on the login page for the appId1 application, add the following line to client_resource_locale.properties:\n\nbharosa.uio.appId1.signon.page.title=Welcome to App1, please sign in.\n\nFor example, to customize the error message displayed when a user has been blocked by security rules, add the following line to client_resource_locale.properties:\n\nbharosa.uio.appId1.login.user.blocked = You are not authorized to login. Please contact customer service at 1-888-555-1234.\n\nRepackage oracle.oaam.extensions.war from the parent folder of oaam_extensions using the command:\n\njar -cvfm oracle.oaam.extensions.war oaam_extensions/META-INF/MANIFEST.MF -C oaam_extensions/ .\n\nShut down all managed servers.\n\nStart the WebLogic Server where Oracle Adaptive Access Manager is deployed and log in to the Oracle WebLogic Administration Console.\n\nNavigate to Domain Environment > Deployments and lock the console.\n\nClick the Install button.\n\nBrowse to the location of the oracle.oaam.extensions.war file and select it by clicking the option next to the WAR file and clicking Next.\n\nEnsure Install this deployment as a library is selected and click Next.\n\nSelect OAAM Admin and OAAM Server servers as deployment targets.\n\nClick Next again to accept the defaults in this next page and then click Finish.\n\nClick the Save button and then Activate Changes.\n\nStart the OAAM Admin and OAAM Server managed servers.\n\n8.4.5 Customizing the Text in the OAAM Login Page\n\nYou can override the page directions and the virtual authentication device text (if desired) in the resource bundles.\n\nAdd these customizations using OAAM Extensions Shared Library. For information on customizations, see Chapter 7, \"Using the OAAM Extensions Shared Library to Customize OAAM.\"\n\nUsername Page\n\nTable 8-1 User Name Page Properties\n\nProperty Default Value Description Property Must Be In File\n\nPassword Page\n\nTable 8-2 Password Page Properties\n\nProperty Default Value Description Property Must Be In File\n\nKeyPad Description and Directions\n\nTable 8-3 KeyPad Description and Direction Properties\n\nProperty Default Value Description Property Must Be In File\n\nPinPad Description and Directions\n\nTable 8-4 KeyPad Description and Direction Properties\n\nProperty Default Value Description Property Must Be In File\n\nTextPad Description and Directions\n\nTable 8-5 TextPad Description and Direction Properties\n\nProperty Default Value Description Property Must Be In File\n\nCaptionPad Description and Directions\n\nTable 8-6 CaptionPad Description and Direction Properties\n\nProperty Default Value Description Property Must Be In File\n\nQuestionPad Description and Directions\n\nTable 8-7 KeyPad Description and Direction Properties\n\nProperty Default Value Description Property Must Be In File\n\n8.4.6 Configuring Forgot Username Link\n\nOAAM has a placeholder for a link to Forgot Username. It can be configured to link to Oracle Identity Manager.\n\nNote:\n\nThe Forgot Password feature requires Oracle Identity Manager integration. For more information on Access Manager, Oracle Adaptive Access Manager, and Oracle Identity Manager integration, see Oracle Fusion Middleware Integration Guide for Oracle Identity Management Suite.\n\nForgot Username (Placeholder)\n\nbharosa.uio.default.signon.links.enum.forgotusername=2 bharosa.uio.default.signon.links.enum.forgotusername.name=ForgotUsername bharosa.uio.default.signon.links.enum.forgotusername.description=Forgot your username? bharosa.uio.default.signon.links.enum.forgotusername.url=# bharosa.uio.default.signon.links.enum.forgotusername.personalization=false bharosa.uio.default.signon.links.enum.forgotusername.order=2 bharosa.uio.default.signon.links.enum.forgotusername.enabled=false\n\nForgot Password\n\nbharosa.uio.default.password.links.enum.forgotpassword=3 bharosa.uio.default.password.links.enum.forgotpassword.name=ForgotPassword bharosa.uio.default.password.links.enum.forgotpassword.description=Forgot your password? bharosa.uio.default.password.links.enum.forgotpassword.url=forgotPassword.do bharosa.uio.default.password.links.enum.forgotpassword.personalization=false bharosa.uio.default.password.links.enum.forgotpassword.order=3 bharosa.uio.default.password.links.enum.forgotpassword.enabled=true\n\n8.4.7 Changing the Invalid Characters Check on the Login Page\n\nTo add characters to the invalid characters check on the Login page, add the following property to the client_resource.properties (or client_resource_en.properties) file.\n\nbharosa.uio.default.signon.loginid.regexp=/[^\\\\s\\\\\\\\\\\\<\\\\>]/gi\n\nThen add your characters to the property. Afterwards, add the file to the OAAM Extension Library Jar file.\n\n8.4.8 Configuring OAAM Server for Localization\n\nThis section contains the following topics:\n\nTurning Off Localization\n\nOverriding Localized Properties\n\nConfiguring Language Defaults for Oracle Adaptive Access Manager\n\nCustomizing Abbreviations and Equivalences for Locales\n\n8.4.8.1 Turning Off Localization\n\nThere is no flag to turn-off localization, but there is a property that captures the locales supported by the deployment. You can use the property to enable one locale.\n\nYou would change the locale.enum.XXX.adminSupported and locale.enum.XXX.enabled properties to false for each unwanted locale.\n\n8.4.8.2 Overriding Localized Properties\n\nPerform customizations to localized strings in the client_resource_locale.properties file:\n\nCreate client_resource_locale.properties.\n\nAdd property bharosa.config.resourcebundle.clientoverride to client_resource_locale.properties. The default value of this property in OAAM Server is client_resource.\n\nBy default the file to add custom localized strings to is client_resource_locale.properties.\n\nFor example, for English, the file is client_resource_en.properties and for Spanish the file is client_resource_es.properties.\n\nAdd customized properties to client_resource_locale.properties.\n\nCreate OAAM Extension WAR file containing client_resource_locale.properties inside in oaam_extensions\\WEB-INF\\classes directory.\n\n8.4.8.3 Configuring Language Defaults for Oracle Adaptive Access Manager\n\nYou can configure language defaults in the client_resource_locale.properties file using the bharosa.locale. enum property. For instructions on customizing Oracle Adaptive Access Manager, see Chapter 7, \"Using the OAAM Extensions Shared Library to Customize OAAM.\"\n\nAn example of a bharosa.locale. enum is shown below:\n\nbharosa.locale.enum.german=2 bharosa.locale.enum.german.name=German bharosa.locale.enum.german.description=German bharosa.locale.enum.german.language=de bharosa.locale.enum.german.country= bharosa.locale.enum.german.adminSupported=true bharosa.locale.enum.german.enabled=true\n\nTo enable the default locale:\n\nAdd and set the bharosa.local.enum.locale.enabled properties of the locales you want to support to true.\n\nAdd and set the bharosa.local.enum.locale.enabled properties of the locales you do not want to support to false.\n\nAdd and set the bharosa.default.locale property to match the bharosa.locale.enum.locale property of your locale.\n\nNote:\n\nThe only locales supported are the ones listed in the enums.\n\n8.4.8.3.1 Example 1\n\nA German bank wants to set German as the default language and wants to support only German. Follow these steps to configure the client_resource_de.properties file:\n\nIf the locale enum does not exist, create it:\n\nbharosa.locale.enum.german.enabled=true\n\nIf the locale enum already exists, set it to true.\n\nIf present, set other bharosa.local.enum.locale.enabled properties to false.\n\nbharosa.locale.enum.italian.enabled=false bharosa.locale.enum.french.enabled=false bharosa.locale.enum.portuguese_br.enabled=false bharosa.locale.enum.spanish.enabled=false bharosa.locale.enum.korean.enabled=false bharosa.locale.enum.chinese_cn.enabled=false bharosa.locale.enum.chinese_tw.enabled=false bharosa.locale.enum.japanese.enabled=false bharosa.locale.enum.arabic.enabled=false bharosa.locale.enum.czech.enabled=false bharosa.locale.enum.danish.enabled=false bharosa.locale.enum.dutch.enabled=false bharosa.locale.enum.finnish.enabled=false bharosa.locale.enum.greek.enabled=false bharosa.locale.enum.hebrew.enabled=false bharosa.locale.enum.hungarian.enabled=false bharosa.locale.enum.norwegian.enabled=false bharosa.locale.enum.polish.enabled=false bharosa.locale.enum.portuguese.enabled=false bharosa.locale.enum.romanian.enabled=false bharosa.locale.enum.russian.enabled=false bharosa.locale.enum.slovak.enabled=false bharosa.locale.enum.swedish.enabled=false bharosa.locale.enum.thai.enabled=false bharosa.locale.enum.turkish.enabled=false\n\nSet bharosa.default.locale property to match the value of the locale enum.\n\nSince bharosa.locale.enum.german=2, set bharosa.default.locale property to 2.\n\nIf the property does not exist, create it.\n\n8.4.8.3.2 Example 2\n\nA Brazilian bank wants to set Brazilian Portuguese as the default, but wants to display all the other languages that OAAM Server had been translated to. To configure the setting:\n\nIf the locale enum does not exist, create it:\n\nbharosa.locale.enum.pt_br.enabled=true\n\nIf the locale enum already exists, set it to true.\n\nSet all other bharosa.local.enum.locale.enabled properties to false.\n\nSet bharosa.default.locale property to the value of the locale enum.\n\nIf bharosa.locale.enum.pt_br=9, set bharosa.default.locale property to 9.\n\nSet bharosa.locale.enum.locale.enabled property in client_resource_locale.properties for all the languages OAAM Server had been translated to and ensure they are set to true.\n\nbharosa.locale.enum.german.enabled=true bharosa.locale.enum.italian.enabled=true bharosa.locale.enum.french.enabled=true bharosa.locale.enum.portuguese_br.enabled=true bharosa.locale.enum.spanish.enabled=true bharosa.locale.enum.korean.enabled=true bharosa.locale.enum.chinese_cn.enabled=true bharosa.locale.enum.chinese_tw.enabled=true bharosa.locale.enum.japanese.enabled=true bharosa.locale.enum.arabic.enabled=true bharosa.locale.enum.czech.enabled=true bharosa.locale.enum.danish.enabled=true bharosa.locale.enum.dutch.enabled=true bharosa.locale.enum.finnish.enabled=true bharosa.locale.enum.greek.enabled=true bharosa.locale.enum.hebrew.enabled=true bharosa.locale.enum.hungarian.enabled=true bharosa.locale.enum.norwegian.enabled=true bharosa.locale.enum.polish.enabled=true bharosa.locale.enum.portuguese.enabled=true bharosa.locale.enum.romanian.enabled=true bharosa.locale.enum.russian.enabled=true bharosa.locale.enum.slovak.enabled=true bharosa.locale.enum.swedish.enabled=true bharosa.locale.enum.thai.enabled=true bharosa.locale.enum.turkish.enabled=true\n\nSet bharosa.default.locale property in client_resource_locale.properties to 9.\n\n8.4.8.3.3 Example 3\n\nA French bank wants clients to see French as a default, and wants to support only French, German, English, and Italian. The French locale enum is already present in the client_resource_fr.properties file.\n\nbharosa.locale.enum.french=5 bharosa.locale.enum.french.name=French bharosa.locale.enum.french.description=French bharosa.locale.enum.french.language=fr bharosa.locale.enum.french.country= bharosa.locale.enum.french.adminSupported=true bharosa.locale.enum.french.enabled=true\n\nTo configure the application:\n\nIn client_resource_fr.properties set bharosa.locale.enum.locale.enabled to true for German, Italian, and English.\n\nbharosa.locale.enum.german.enabled=true bharosa.locale.enum.italian.enabled=true bharosa.locale.enum.english.enabled=true\n\nSet all other bharosa.local.enum.locale.enabled properties to false.\n\nSet bharosa.default.locale property to the value of the locale enum.\n\nSince bharosa.locale.enum.french=5, set bharosa.default.locale property to 5.\n\n8.4.8.3.4 Example 4\n\nA German bank wants to set English as the default language and wants to support all other languages. To do this, follow these steps for client_resource_de.properties:\n\nIf the locale enum does not exist, create it:\n\nbharosa.locale.enum.english.enabled=true\n\nIf the locale enum already exists, set it to true.\n\nIf present, set other bharosa.local.enum.locale.enabled properties to true.\n\nbharosa.locale.enum.italian.enabled=true bharosa.locale.enum.german.enabled=true bharosa.locale.enum.french.enabled=true bharosa.locale.enum.portuguese_br.enabled=true bharosa.locale.enum.spanish.enabled=true bharosa.locale.enum.korean.enabled=true bharosa.locale.enum.chinese_cn.enabled=true bharosa.locale.enum.chinese_tw.enabled=true bharosa.locale.enum.japanese.enabled=true bharosa.locale.enum.arabic.enabled=true bharosa.locale.enum.czech.enabled=true bharosa.locale.enum.danish.enabled=true bharosa.locale.enum.dutch.enabled=true bharosa.locale.enum.finnish.enabled=true bharosa.locale.enum.greek.enabled=true bharosa.locale.enum.hebrew.enabled=true bharosa.locale.enum.hungarian.enabled=true bharosa.locale.enum.norwegian.enabled=true bharosa.locale.enum.polish.enabled=true bharosa.locale.enum.portuguese.enabled=true bharosa.locale.enum.romanian.enabled=true bharosa.locale.enum.russian.enabled=true bharosa.locale.enum.slovak.enabled=true bharosa.locale.enum.swedish.enabled=true bharosa.locale.enum.thai.enabled=true bharosa.locale.enum.turkish.enabled=true\n\nSet bharosa.default.locale property to match the value of the locale enum.\n\nSince bharosa.locale.enum.english=0, set bharosa.default.locale property to 0.\n\nIf the property does not exist, create it.\n\n8.4.8.4 Customizing Abbreviations and Equivalences for Locales\n\nOracle Adaptive Access Manager supports the concept of \"fuzzy logic.\" Fuzzy logic, in part, relies on preconfigured sets of word equivalents, commonly known as abbreviations.\n\nIn the English version of Oracle Adaptive Access Manager, there are several thousand English abbreviations (and equivalences).\n\nIn all other languages, it is necessary for the installer to enhance the brief abbreviation files provided. Without additions, the fuzzy logic will be not as effective.\n\nLocale-specific abbreviation files are shipped with OAAM. These files are named bharosa_auth_abbreviation_config_locale.properties where locale is the locale string. For example, the Spanish version of the file is bharosa_auth_abbreviation_config_es.properties.\n\nChanges cannot be made to this file. To customize abbreviations, a new file must be created with a new set of abbreviations. This file takes precedence over the original file and all abbreviations in the original file are ignored.\n\nTo localize for one locale (for example, for Japanese only), perform the following steps:\n\nCreate one file specific to the locale with the same prefix as the original locale-specific abbreviation file. For example, Abbreviations_ja.properties for Japanese.\n\nAdd the file to oaam_extensions/WEB-INF/classes.\n\nIn the client_resource_locale.properties file, set the value of property bharosa.authenticator.AbbreviationFileName to that file's absolute path, WEB-INF/classes/Abbreviations_ja.properties in the oaam_extensions folder.\n\nIf you want customize for multiple locales, perform the following steps:\n\nCreate the files specific to those locales with the same prefix as the original locale-specific abbreviation file.\n\nFor example,\n\nAbbreviations_es.properties for Spanish\n\nAbbreviations_ja.properties for Japanese\n\nAdd the file to oaam_extensions/WEB-INF/classes.\n\nIn the client_resource_locale.properties file, set the value of property bharosa.authenticator.AbbreviationFileName to that file's absolute path, WEB-INF/classes/Abbreviations.properties in the oaam_extensions folder.\n\nThe locale prefix is absent in the value of the property because the locale settings of the end user's browser determine the run-time locale.\n\n8.5 Configuring a Single Login Page\n\nIf you want to have the username and password input on a single page, you can configure a single login page. This section contains the following topics:\n\nSection 8.5.1, \"OAAM Single Login Page Flows\"\n\nSection 8.5.2, \"Setting Properties to Enable the OAAM Single Login Page\"\n\nSection 8.5.3, \"Configuring Single Login Page to Use the OAAM HTML Pad\"\n\nSection 8.5.4, \"Customizing the OAAM Single Login Page Using the Shared Extensions Library\"\n\nSection 8.5.5, \"Properties for Customizing Messages, Links, and Credential Inputs on the Single Login Page\"\n\nNote:\n\nIn cases where the property you want does not exist in the appropriate file, you can add it.\n\nFor instructions on deploying the OAAM Shared Extensions Library, see Chapter 7, \"Using the OAAM Extensions Shared Library to Customize OAAM.\"\n\n8.5.1 OAAM Single Login Page Flows\n\nOAAM Single Login Page flows are presented in this section.\n\nSingle Login Page Login Flow (Access Manager and OAAM Integration)\n\nAccess Manager and OAAM integration in Advanced mode or Advanced mode using TAP is used in this flow. Access Manager and OAAM integration in Basic mode is not supported. Both Advanced modes include the OTP Anywhere and KBA Challenge frameworks. If integrated with OIM also, self-service management flows are supported available. For details on self-service management flow, see \"Forgot Password Flow (Access Manager, OAAM, and OIM Integration)\".\n\nThe single login page flow is as follows:\n\nThe user tries to access a resource protected by the OAAM authentication scheme.\n\nOracle Access Management WebGate (SSO Agent) intercepts the request and redirects the user to the OAAM Server.\n\nOAAM Server presents the user with a single login page with fields for Username and Password and a Forgot your password link, as shown in Figure 8-2.\n\nFigure 8-2 Single Login Page\n\nDescription of \"Figure 8-2 Single Login Page\"\n\nThe user submits credentials.\n\nOAAM displays a jump page to capture digital and secure cookies and fingerprints the user device.\n\nOAAM runs the device identification process to identify the user device.\n\nOAAM evaluates the Preauthentication checkpoint to check if the user is a member of a blacklisted country, device, IP, ISP, or users group or if he is using WEBZIP. If he is in a blacklisted group or using WEBZIP, he is blocked and cannot proceed.\n\nNote:\n\nOAAM does not run the Authentipad checkpoint because no virtual authentication devices are used for this flow.\n\nOAAM sends OAP API calls to Access Manager to validate credentials.\n\nAfter validation on the Access Manager side, OAAM evaluates the Post-Authentication to determine if the action should be Block, Challenge, or Allow.\n\nIf the outcome of Post-Authentication is Allow then OAAM determines if the user has to be registered by evaluating the Registration checkpoint. Based on the types of registration it takes the user through the Registration Flow.\n\nIf there is enough risk involved, the outcome of Post-Authentication may be Challenge. OAAM evaluates the Challenge checkpoint to determine if the user should be blocked or challenged with one of the registered challenge mechanism by taking the user through the Challenge Flow.\n\n0 score is no risk\n\n1-500 score is low risk\n\n501-1000 score is high risk\n\nOAAM interacts with the user during the appropriate flows and if the user is successful, one of the following scenarios occur:\n\nIf using the Access Manager and OAAM integration in Advanced mode, OAAM sets the OAM cookie, user is logged in, and a single sign-on session is created.\n\nIf using the Access Manager and OAAM integration in Advanced mode with TAP, Access Manager sets the OAM cookie, user is logged in, and a single sign-on session is created.\n\nForgot Password Flow (Access Manager, OAAM, and OIM Integration)\n\nNote:\n\nThe Forgot Password feature requires Oracle Identity Manager integration. For more information on Access Manager, Oracle Adaptive Access Manager, and Oracle Identity Manager integration, see Oracle Fusion Middleware Integration Guide for Oracle Identity Management Suite.\n\nAccess Manager, OAAM, and OIM integration includes OTP Anywhere, the Challenge framework, and additional self-service management flows (reset and change password) using OAAM with OIM APIs.\n\nThe user tries to access a resource protected by the OAAM authentication scheme.\n\nOracle Access Management WebGate (SSO Agent) intercepts the request and redirects the user to the OAAM Server.\n\nOAAM Server presents the user with a single login page with fields for Username and Password and a Forgot your password link, as shown in Figure 8-4.\n\nFigure 8-4 Single Login Page\n\nDescription of \"Figure 8-4 Single Login Page\"\n\nThe user clicks the Forgot your password link.\n\nThe user is taken to the Forgot Password User Name page, as shown in Figure 8-5, where he enters his user name into the Username field.\n\nFigure 8-5 Forgot Password User Name Page\n\nDescription of \"Figure 8-5 Forgot Password User Name Page\"\n\nThe OAAM jump page captures the digital and secure cookies and fingerprints the user device.\n\nOAAM runs the device identification process to identify the user device.\n\nOAAM evaluates the Preauthentication checkpoint to check if the user is a member of a blacklisted country, device, IP, ISP, or users group or if he is using WEBZIP. If he is in a blacklisted group or using WEBZIP, he is blocked and cannot proceed.\n\nNote:\n\nOAAM does not run the Authentipad checkpoint because no VADs are used for this flow.\n\nThe OAAM Server runs the Forgot Password checkpoint.\n\nOAAM presents the user with a challenge page.\n\nAn example OTP challenge is shown below.\n\nIf the challenge is successful, he is redirected to the Password Reset page.\n\nThe user enters new password and confirms the new password by entering it again.\n\nOAAM sends OAP API calls to Access Manager to validate credentials.\n\nAfter authentication, OAAM evaluates Post-Authentication checkpoint policies. Based on the outcome of the policy OAAM might challenge or block the user or allow the user to register if he has not been registered.\n\nIf the outcome of Post-Authentication is Allow then OAAM determines if the user has to be registered by evaluating the Registration checkpoint. Based on the types of registration it takes the user through the Registration Flow.\n\nIf there is enough risk involved, the outcome of Post-Authentication may be Challenge. OAAM evaluates the Challenge checkpoint to determine if the user should be blocked or challenged with one of the registered challenge mechanism by taking the user through the Challenge Flow.\n\n0 score is no risk\n\n1-500 score is low risk\n\n501-1000 score is high risk\n\nIf the outcome of Post-Authentication is Block then the user would be blocked and he will not be able to access the resource that he tried accessing.\n\nOAAM interacts with the user during the required flows and if the user is successful, one of the following scenarios occur:\n\nIf using the Access Manager and OAAM integration in Advanced mode, OAAM sets the OAM cookie, user is logged in, and a single sign-on session is created.\n\nIf using the Access Manager and OAAM integration in Advanced mode with TAP, Access Manager sets the OAM cookie, user is logged in, and a single sign-on session is created.\n\nSingle Login Page Challenge Flow\n\nThe challenge mechanism that is used and the order in which they are used depends on the deployment. For example, the OTP challenge can by configured to be first priority instead of KBA by changing trigger combination in the OAAM Challenge Policy.\n\nIf the user does not have a mechanism registered and the risk score is high enough for the user to be challenged, then the user might be blocked because it is not possible to take him through the challenge flow because of incomplete registration.\n\nOAAM determine which authentication mechanism to use to challenge the user. The challenge is on an HTML page which does not require virtual authentication devices. The user must enter the answer into the HTML input field. Figure 8-8 shows an example of a KBA challenge.\n\nIf able to answer the challenge, OAAM takes the user through the Registration Flow if the user needs registration.\n\nIf the challenge is unsuccessful, the user may be challenged again or he can be locked out because there are no more challenge mechanisms to challenge him with.\n\nSingle-Page Registration Flow (Access Manager and OAAM Integration)\n\nRegistration is required depending on security requirements, which specify whether the registration is mandatory or optional.\n\nOAAM runs the Registration checkpoint to determine if the user needs to register his security profile. Based on the types of registration, it takes the user through the registration pages.\n\nIf the user is accessing the application for the first time, a Registration page is displayed after he enters valid credentials. Figure 8-9 shows the Registration page where the user can choose to register his security profile now or to register the security profile at a later time.\n\nIf he selects Continue, he is taken through the registration flow.\n\nIf the user does not have a complete profile registered, the user is taken to the registration pages where he provides the appropriate information in the HTML input fields. No VAD related information is shown.\n\nThe user is taken to the Security Registration page where he selects challenge questions from the menus (dropdown lists) provided, and enters the answers to those questions in HTML input fields. No VAD related information is shown.\n\nIf the deployment supports OTP, the user is taken through the OTP Anywhere Registration. An example of an OTP registration page is shown below.\n\nFigure 8-11 OTP Anywhere Registration\n\nDescription of \"Figure 8-11 OTP Anywhere Registration\"\n\nAfter successful registration, the user is successfully logged in.\n\nExpired Password Flow (OAAM and OIM Integration)\n\nThe user tries to access a resource protected by the OAAM authentication scheme.\n\nThe user is redirected to OAAM Server application.\n\nOAAM Server presents the user with a single login page. The user enters username and password, and OAAM retrieves the password syntax and lifecycle policies from Oracle Identity Manager. OAAM enforces these policies. It determines that the password expired.\n\nThe user is redirected to the Password Reset page.\n\nThe user enters new password and confirms the new password by entering it again.\n\nThe OAAM jump page captures the digital and secure cookies and fingerprints the user device.\n\nOAAM runs the device identification process to identify the user device.\n\nOAAM evaluates the Preauthentication checkpoint to check if the user is a member of a blacklisted country, device, IP, ISP, or users group or if he is using WEBZIP. If he is in a blacklisted group or using WEBZIP, he is blocked and cannot proceed.\n\nNote:\n\nOAAM does not run the Authentipad checkpoint because no VADs are used for this flow.\n\nAfter authentication, OAAM evaluates Post-Authentication checkpoint policies. Based on the outcome of the policy OAAM might challenge or block the user or allow the user to register if he has not been registered.\n\nIf the outcome of Post-Authentication is Allow then OAAM determines if the user has to be registered by evaluating the Registration checkpoint. Based on the types of registration it takes the user through the Registration Flow.\n\nIf there is enough risk involved, the outcome of Post-Authentication may be Challenge. OAAM evaluates the Challenge checkpoint to determine if the user should be blocked or challenged with one of the registered challenge mechanism by taking the user through the Challenge Flow.\n\n0 score is no risk\n\n1-500 score is low risk\n\n501-1000 score is high risk\n\nIf the outcome of Post-Authentication is Block then the user would be blocked and he will not be able to access the resource that he tried accessing.\n\nOAAM interacts with the user during the required flows and if the user is successful, Access Manager sets the OAM cookie, user is logged in, and a single sign-on session is created.\n\nSingle-Page Login Flow for Self-Registration Flow (OAAM and OIM Integration)\n\nThe Single-Page Login can be used to initiate self-registration.\n\nThe user tries to access a resource protected by OAAM authentication scheme.\n\nThe user is redirected to OAAM Server application.\n\nOAAM Server presents the user with a single login page with the Register link. This page does not display any text related to the VADs. The user clicks the Register link, which takes the user to a self-registration page provided by the application.\n\nThe user interacts with the application to self-register.\n\nOn completion, the user receives a confirmation message and a registration tracking request number.\n\nSingle-Page Login Flow for Track-Registration Flow (OAAM and OIM Integration)\n\nThe Single-Page Login can be used to access the interface for tracking the status of the self-registration.\n\nThe user is redirected to OAAM Server application.\n\nOAAM Server presents the user with a single login page with the Track Registration link. This page does not display any text related to the VADs. The user clicks the Track Registration link, which takes the user to a page that tracks the status of the self-registration.\n\nThe user interacts with the application to track the self-registration.\n\nOn completion, the user receives the status of the tracked request.\n\n8.5.2 Setting Properties to Enable the OAAM Single Login Page\n\nTo enable the single login page, set the following to true:\n\nbharosa.uio.default.login.auth.enabled bharosa.uio.default.singlelogin.enabled\n\nThe properties are modified in oaam_custom.properties and the changes deployed as part of the OAAM Shared Extensions Library.\n\n8.5.3 Configuring Single Login Page to Use the OAAM HTML Pad\n\nEnsure the following property is true so that HTML pages are used in Single Login Password flows:\n\nbharosa.uio.default.singlelogin.forceHTMLDevice.enabled\n\nBy default this property is set to true.\n\nNote:\n\nThis property only effects Single Login Page flows.\n\nIf you want to control devices by rules in the single login page flow, you need to set the property to false and perform the following steps to configure the OAAM AuthenticationPad Policy to use the OAAM HTML Pad for Challenge SMS, Registered Image and Caption, Challenge Email, and Challenge Question rules.\n\nNote:\n\nIf you set the property to false, the AuthentiPad checkpoint is run. If the property is set to true, the AuthentiPad checkpoint will not be run.\n\nLog in to the OAAM Administration Console as an administrator.\n\nDouble-click the Policies node. The Policies Search page is displayed.\n\nIn the Search filters section, select AuthentiPad for the Checkpoint and click Search.\n\nIn the Search Results table, click the OAAM AuthenticationPad Policy link to open the Policy Details page.\n\nIn the Policy Details page, click the Rules tab.\n\nClick the Challenge Question link to open the Rules Details page.\n\nIn the Rules Details page, click the Results tab.\n\nIn the Actions Group list, select OAAM HTML Pad as the action you want triggered by this rule and click Apply to save the modified rule details.\n\nA confirmation dialog is displayed.\n\nClick OK to dismiss the confirmation dialog.\n\nRepeat Steps 5 through 9 for Challenge SMS, Registered Image and Caption, and Challenge Email rules.\n\nIn the Policies Detail page, click the Trigger Combinations tab.\n\nChange the Action Group for all the Trigger Combinations to OAAM HTML Pad and click Apply after making the edits.\n\nA confirmation dialog is displayed.\n\nClick OK to dismiss the confirmation dialog.\n\n8.5.4 Customizing the OAAM Single Login Page Using the Shared Extensions Library\n\nTo add or modify the text and links to the Single Login Page, you must use the OAAM Shared Extensions Library:\n\nFollow the instructions in Section 7.3, \"Adding Customizations Using the OAAM Extensions Shared Library\" to extract the Extensions Shared Library.\n\nAdd or modify the properties in oaam_custom.properties and client_resource_locale.properties and save the files in the oaam_extensions\\WEB-INF\\classes\\bharosa_properties directory.\n\nRefer to Section 8.5.5 for information on specific properties and the files to which they need to be added.\n\nFollow the instructions in Section 7.3.6, \"Step 5 Repackage the OAAM Extensions Shared Library Into a New WAR File\" to repackage the Extensions Shared Library, oracle.oaam.extensions.war.\n\nShut down all managed servers if they are running.\n\nStart the WebLogic Administration Server.\n\nStart the WebLogic Server where Oracle Adaptive Access Manager is deployed.\n\nFollow the instructions in Section 7.3.11, \"Step 10 Deploy the New OAAM Extensions Shared Library\" to redeploy the OAAM Extensions Shared Library.\n\n8.5.5 Properties for Customizing Messages, Links, and Credential Inputs on the Single Login Page\n\nTo add additional messages, links or fields or disable existing ones, configure the properties described in this section. Refer to the tables to see if the properties need to be added to both oaam_custom.properties and client_resource_locale.properties files as part of the OAAM Shared Extensions Library.\n\nSingle Sign In main page properties and buttons enums are shown.\n\nTable 8-8 Single Login Page Properties and Buttons\n\nProperty Default Value Description Property Must Be In File\n\nThe Single Login Page Welcome Message enum definitions are shown.\n\nTable 8-9 Single Login Page Welcome Message\n\nProperty Default Value Description Property Must Be In File\n\nThe Single Login Page enums for links are shown.\n\nNote:\n\nThe Forgot Password feature requires Oracle Identity Manager integration. For more information on Access Manager, Oracle Adaptive Access Manager, and Oracle Identity Manager integration, see Oracle Fusion Middleware Integration Guide for Oracle Identity Management Suite.\n\nTable 8-10 Single Login Page Links\n\nProperty Default Value Description Property Must Be In File\n\nTable 8-11 provides information about the Single Login Page credential input enums.\n\nTable 8-11 Single Login Page Credential Inputs\n\nProperty Default Value Description Property Must Be In file"
    }
}