{
    "id": "correct_subsidiary_00128_3",
    "rank": 48,
    "data": {
        "url": "https://docs.oracle.com/cd/E17904_01/admin.1111/e14568/otp.htm",
        "read_more_link": "",
        "language": "en",
        "title": "Setting Up OTP Anywhere",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/cd/E17904_01/admin.1111/e14568/img/ccreset.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2010-08-06T17:34:42+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "8.1 Introduction and Concepts\n\nThis section introduces you to the concept of One Time Password (OTP) and how it is used in Oracle Adaptive Access Manager.\n\n8.1.1 Out-of-Band OTP Delivery\n\nOracle Adaptive Access Manager 11g contains one time password authentication capabilities that support the delivery of a random server-generated OTP through any of the following out-of-band channels:\n\nemail\n\nSMS\n\nvoice messaging\n\ninstant messaging\n\nThe user is OTP-challenged to enter the single-use PIN or password code he receives into a Web interface. This form of authentication is used as a secondary credential in addition to the static username and password.\n\n8.1.2 One Time Password (OTP)\n\nOne Time Password (OTP) is a random single use authentication credential. The OTP may be either numeric or alphanumeric and any length and the randomization algorithm is pluggable.\n\nThe following are major benefits of using out-of-band OTP:\n\nThe one time password is delivered to the valid user through one of the configured channels. These can include SMS, IM, email or voice.\n\nThe user does not require any proprietary hardware or client software of any kind.\n\n8.1.3 Registration\n\nRegistration is the enrollment process, the opening of a new account, or other event where information is obtained from the user.\n\nDuring registration, the user is asked to select supported OTP delivery channels.\n\nWhen OTP-challenged, the single-use PIN or password is delivered to the user through the delivery channel he selected.\n\n8.1.4 OTP Challenge\n\nAn OTP challenge is when the user is asked to provide the OTP as a form of authentication for high risk situations based upon configured policies.\n\nOracle Adaptive Access Manager, depending on its configuration for OTP, sends a time-constrained single-use PIN or password to the user when further authentication is required.\n\nThe user is OTP-challenged to enter the single-use PIN or password code he receives in to a Web interface.\n\nThe user must enter the correct OTP in to the Web interface to proceed with the operation.\n\n8.1.5 KBA vs. OTP\n\nOracle Adaptive Access Manager deployments may choose to use both KBA and OTP Anywhere or each separately or no challenge mechanisms at all. If both KBA and OTP Anywhere are being used in a deployment, the security team may choose to use KBA for challenges in lower risk situations and OTP Anywhere for higher risk situations.\n\nFor example, a user logging in from a new IP in a city he often logs in from is relatively low risk on its own so a KBA challenge would be a good option to gain additional verification that this is the valid user. If, however, a user is attempting a funds transfer of more than $1000 using a device and location he has never accessed from previously and the user has never performed a transfer, a stronger measure such as OTP Anywhere would be warranted.\n\nIf a customer has both KBA and OTP Anywhere enabled, the priority is configurable through properties.\n\nFor information on KBA and OTP Anywhere priority, see Section 8.5, \"Enabling OTP Challenge.\"\n\n8.1.6 OTP Failure Counters\n\nAn OTP failure occurs when the user supplies an incorrect answer during an OTP-challenge and the failure counter is incremented. When a correct PIN or password is provided by the user, the failure counter is reset to 0 and the user is allowed to proceed with the operation.\n\nWhen the failure counter reaches the threshold value, the user is \" OTP Locked.\"\n\nThe maximum number for OTP challenges is configurable.\n\nOTP failures are counted across sessions.\n\nIf the user is OTP-locked, he can call the Customer Service Representative to become unlocked.\n\n8.1.7 OTP Resets\n\nA customer service representative (CSR) can reset a customer's OTP profile or unlock a customer when necessary.\n\n8.1.7.1 Reset OTP Profile\n\nThe CSR resets a user's OTP profile. The system deletes the contact information that is used to send the OTP. The customer must register OTP information at the log in.\n\n8.1.7.2 Unlock a Customer\n\nThe CSR unlocks the user who calls because he has been OTP-locked out of the system. Unlocking the customer resets the customer's OTP failure counter.\n\n8.2 User Flow\n\nExample use cases that follow illustrates the user experience when the OTP framework is configured.\n\nUse Case 1: New Registration Example\n\nThis example illustrates the user registration experience.\n\nThe user logs in to a protected application for the first time after Oracle Adaptive Access Manager is deployed.\n\nThe user selects his virtual device, and personalization image and phase.\n\nThe user sets up KBA challenge questions.\n\nThe user selects one or more of the following OTP Anywhere delivery channels:\n\ncell phone\n\nemail address\n\nhome phone number\n\nInstant Message ID\n\nThe delivery channel used is configured by an administrator for all users in a deployment.\n\nUse Case: User Login Example\n\nThis section illustrates an example of the user login experience when a high risk rule is triggered, and OTP Anywhere is used in the deployment.\n\nA registered user logs in to a protected application.\n\nIf the situation is high enough risk, the user is asked to enter an OTP sent to them in another channel/band.\n\nThe user will enter the OTP in the web interface to authenticate himself.\n\n8.3 Setting Up OTP Anywhere\n\nTo set up OTP Anywhere, you must perform the following tasks:\n\nEnabling OTP Profile Registration and Preference Setting\n\nSetting Up the Contact Input Elements for OTP Registration Page\n\nConfiguring the OTP Challenge Types\n\nConfiguring OTP Delivery\n\nFor information on customizing Oracle Adaptive Access Manager, see the Oracle Fusion Middleware Developer's Guide for Oracle Adaptive Access Manager.\n\n8.3.1 Enabling OTP Profile Registration and Preference Setting\n\nTo enable OTP profile registration and preference setting:\n\nIn the Navigation tree, double-click Properties under the Environment node. The Properties Search page is displayed.\n\nSearch for the following properties and set them to true.\n\nIf the properties do not exist, create them.\n\nbharosa.uio.default.register.userinfo.enabled\n\nSetting the property to true enables the profile registration pages if the OTP channel is enabled and requires registration.\n\nbharosa.uio.default.userpreferences.userinfo.enabled\n\nSetting the property to true enables the user to set preferences if the OTP channel is enabled and allows preference setting.\n\nOTP Challenge types must be enabled before any pages are displayed.\n\n8.3.2 Setting Up the Contact Input Elements for OTP Registration Page\n\nIf user information registration or user preferences is set to true, configure the input information for the OTP registration or preferences page. The bharosa.uio.default.userinfo.inputs.enum property values are shown in Table 8-1.\n\nTable 8-1 OTP Properties for Contact Input\n\nProperty Description\n\nThe following is an example of an enum defining mobile device registration on the OTP registration page of an authenticator:\n\nbharosa.uio.default.userinfo.inputs.enum.mobile=0 bharosa.uio.default.userinfo.inputs.enum.mobile.name=Mobile Phone bharosa.uio.default.userinfo.inputs.enum.mobile.description=Mobile Phone bharosa.uio.default.userinfo.inputs.enum.mobile.inputname=cellnumber bharosa.uio.default.userinfo.inputs.enum.mobile.inputtype=text bharosa.uio.default.userinfo.inputs.enum.mobile.maxlength=15 bharosa.uio.default.userinfo.inputs.enum.mobile.required=true bharosa.uio.default.userinfo.inputs.enum.mobile.order=1 bharosa.uio.default.userinfo.inputs.enum.mobile.enabled=true\n\nThe following is an example of an enum for adding a second mobile device to register:\n\nbharosa.uio.default.userinfo.inputs.enum.mobile2=2 bharosa.uio.default.userinfo.inputs.enum.mobile2.name=Mobile Phone 2 bharosa.uio.default.userinfo.inputs.enum.mobile2.description=Mobile Phone 2 bharosa.uio.default.userinfo.inputs.enum.mobile2.inputname=mobile2 bharosa.uio.default.userinfo.inputs.enum.mobile2.inputtype=text bharosa.uio.default.userinfo.inputs.enum.mobile2.maxlength=10 bharosa.uio.default.userinfo.inputs.enum.mobile2.required=true bharosa.uio.default.userinfo.inputs.enum.mobile2.order=2 bharosa.uio.default.userinfo.inputs.enum.mobile2.enabled=true bharosa.uio.default.userinfo.inputs.enum.mobile2.regex=\\\\D?(\\\\d{3})\\\\D?\\\\D?(\\\\d{3})\\\\D?(\\\\d{4}) bharosa.uio.default.userinfo.inputs.enum.mobile2.errorCode=otp.invalid.mobile bharosa.uio.default.userinfo.inputs.enum.mobile2.managerClass=com.bharosa.uio.manager.user.DefaultContactInfoManager\n\nThe following is an example of an enum defining email registration on the OTP registration page of an authenticator:\n\nbharosa.uio.default.userinfo.inputs.enum.email=1 bharosa.uio.default.userinfo.inputs.enum.email.name=Email Address bharosa.uio.default.userinfo.inputs.enum.email.description=Email Address bharosa.uio.default.userinfo.inputs.enum.email.inputname=email bharosa.uio.default.userinfo.inputs.enum.email.inputtype=text bharosa.uio.default.userinfo.inputs.enum.email.maxlength=40 bharosa.uio.default.userinfo.inputs.enum.email.required=true bharosa.uio.default.userinfo.inputs.enum.email.order=2 bharosa.uio.default.userinfo.inputs.enum.email.enabled=true bharosa.uio.default.userinfo.inputs.enum.email.regex=.+@[a-zA-Z_]+?\\\\.[a-zA-Z]{2,3} bharosa.uio.default.userinfo.inputs.enum.email.errorCode=otp.invalid.email bharosa.uio.default.userinfo.inputs.enum.email.managerClass=com.bharosa.uio.manager.user.DefaultContactInfoManager\n\nThe following is an example of an enum for adding a second email to register:\n\nbharosa.uio.default.userinfo.inputs.enum.email2=2 bharosa.uio.default.userinfo.inputs.enum.email2.name=Email Address 2 bharosa.uio.default.userinfo.inputs.enum.email2.description=Email Address 2 bharosa.uio.default.userinfo.inputs.enum.email2.inputname=email2 bharosa.uio.default.userinfo.inputs.enum.email2.inputtype=text bharosa.uio.default.userinfo.inputs.enum.email2.maxlength=40 bharosa.uio.default.userinfo.inputs.enum.email2.required=true bharosa.uio.default.userinfo.inputs.enum.email2.order=2 bharosa.uio.default.userinfo.inputs.enum.email2.enabled=true bharosa.uio.default.userinfo.inputs.enum.email2.regex=.+@[a-zA-Z_]+?\\\\.[a-zA-Z]{2,3} bharosa.uio.default.userinfo.inputs.enum.email2.errorCode=otp.invalid.email bharosa.uio.default.userinfo.inputs.enum.email2.managerClass=com.bharosa.uio.manager.user.DefaultContactInfoManager\n\n8.3.3 Configuring the OTP Challenge Types\n\nConfigure the bharosa.uio.default.challenge.type.enum property to edit out-of-the-box OTP challenge types or add a new challenge type.\n\nTable 8-2 Challenge type Properties\n\nProperty Description\n\nThe following is an example of an enum defining email challenge for OTP:\n\nbharosa.uio.default.challenge.type.enum.ChallengeEmail = 1 bharosa.uio.default.challenge.type.enum.ChallengeEmail.name = Email Challenge bharosa.uio.default.challenge.type.enum.ChallengeEmail.description = Email Challenge bharosa.uio.default.challenge.type.enum.ChallengeEmail.processor = com.bharosa.uio.processor.challenge.EmailChallengeProcessor bharosa.uio.default.challenge.type.enum.ChallengeEmail.requiredInfo = mobile bharosa.uio.default.challenge.type.enum.ChallengeEmail.available = true bharosa.uio.default.challenge.type.enum.ChallengeEmail.enabled = true\n\nThe following is an example of an enum defining SMS challenge for OTP:\n\nbharosa.uio.default.challenge.type.enum.ChallengeSMS = 2 bharosa.uio.default.challenge.type.enum.ChallengeSMS.name = SMS Challenge bharosa.uio.default.challenge.type.enum.ChallengeSMS.description = SMS Challenge bharosa.uio.default.challenge.type.enum.ChallengeSMS.processor = com.bharosa.uio.processor.challenge.SmsChallengeProcessor bharosa.uio.default.challenge.type.enum.ChallengeSMS.requiredInfo = mobile bharosa.uio.default.challenge.type.enum.ChallengeSMS.available = true bharosa.uio.default.challenge.type.enum.ChallengeSMS.enabled = true\n\n8.3.4 Configuring OTP Delivery\n\nThe delivery channel used is configured by an administrator for all users in a deployment."
    }
}