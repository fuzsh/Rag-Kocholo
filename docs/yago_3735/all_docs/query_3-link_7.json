{
    "id": "yago_3735_3",
    "rank": 7,
    "data": {
        "url": "https://legacy.cs.stanford.edu/memoriam/professor-john-mccarthy",
        "read_more_link": "",
        "language": "en",
        "title": "Professor John McCarthy",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://legacy.cs.stanford.edu/sites/all/themes/stanford_wilbur/images/header-stanford-logo@2x.png",
            "https://legacy.cs.stanford.edu/sites/all/themes/stanford_wilbur/logo.png",
            "https://legacy.cs.stanford.edu/sites/default/files/j_mccarthy_0.jpg",
            "https://www-media.stanford.edu/su-identity/images/footer-stanford-logo@2x.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://legacy.cs.stanford.edu/sites/all/themes/stanford_wilbur/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://legacy.cs.stanford.edu/memoriam/professor-john-mccarthy",
        "text": "The Department of Computer Science is saddened to report that Emeritus Professor John McCarthy died on October 24, 2011 at age 84. John was one of the founders of artificial intelligence (AI), coining that name in 1955. From that time until his death he made foundational contributions both to AI and to computer science in general. In a famous 1958 paper and subsequent memos, he proposed (and thereafter strongly held) that the knowledge needed by AI programs should be represented in declarative sentences (principally in a logical language) rather than being encoded within the programs that use that knowledge. As he put it, “Sentences can be true in much wider contexts than specific programs can be useful.”\n\nJohn’s work on AI systems that could reason with declarative knowledge inspired a legion of researchers who, along with John, advanced this approach to AI and produced many practical applications of it. Realizing some of the difficulties of getting logical systems to reason with commonsense knowledge, John extended logic to be able to deal with contexts and with the use of default (but not necessarily universally true) knowledge.\n\nIn 1958, John invented the list processing language LISP, which became the language of choice for programming AI systems. Programs written in LISP have flown in a NASA spacecraft and are key parts of several practical AI systems. John’s 1960 paper “Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part I,” established the theoretical foundations of LISP as a universal computational formalism. John also made seminal contributions to the problem of proving that programs meet their specifications.\n\nIn a memo written on January 1, 1959, John was the first to describe a way to do general purpose computer timesharing --- allowing a single computer to be simultaneously shared among a number of users—and that inspired four groups in the MIT community to develop such systems. That made possible the development of ARPAnet a few years later, which started as a network of timesharing systems. A few years after that it turned into the Internet, which still depends on timesharing systems in its core. It is not clear how long that all would have taken had John not started it in 1959.\n\nJohn grew up and went to school in Los Angeles. He got his undergraduate degree at Caltech and his PhD at Princeton, both in mathematics. After brief professorships at Stanford (1953-1955) and at Dartmouth College (1955-1958), John went to MIT where he, along with his colleague Marvin Minsky, founded the MIT Artificial Intelligence Project. In 1962, John came to the Mathematics Department at Stanford and then transferred to Stanford’s newly formed Department of Computer Science in 1965 where he (with the help of Lester Earnest) founded and led the Stanford Artificial Intelligence Laboratory (SAIL).\n\nDuring the 1960s and 1970s SAIL was a shining example of what a community of very bright faculty, students, and staff could accomplish when provided with adequate funding, powerful computers, peripheral equipment (such as display devices and printers) and associated software. Much of the equipment and software needed was developed at SAIL. The foundations for graphical user interfaces and printers, computer typesetting and publishing, speech recognition, expert systems, computer vision and robotics, computer music, and other technologies that are now parts of our everyday lives all got their start at SAIL’s facilities in the Stanford foothills.\n\nJohn’s accomplishments, his many publications, and his prescient insights earned him many awards. Among these are the ACM Turing Award, the National Medal of Science, the Kyoto Prize, and memberships in the National Academy of Science and the National Academy of Engineering.\n\nJohn McCarthy’s genius, puckish humor, and presence, along with his provocations to think more deeply, will be greatly missed by his colleagues and many friends. Fortunately there is still much to be mined from his Web pages at http://www-formal.stanford.edu/jmc/.\n\nby Nils J. Nilsson"
    }
}