{
    "id": "yago_3735_1",
    "rank": 8,
    "data": {
        "url": "https://sofialiaqat215.medium.com/lisp-programming-language-guide-history-origin-and-more-8381509b4b5d",
        "read_more_link": "",
        "language": "en",
        "title": "Lisp Programming Language (Guide: History, Origin, and More)",
        "top_image": "https://miro.medium.com/v2/resize:fit:768/1*ZyX7fti50p4Klnm7Pgej8w.jpeg",
        "meta_img": "https://miro.medium.com/v2/resize:fit:768/1*ZyX7fti50p4Klnm7Pgej8w.jpeg",
        "images": [
            "https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png",
            "https://miro.medium.com/v2/resize:fill:88:88/1*YZwsDgSRkPkDm5sRw668uw.jpeg",
            "https://miro.medium.com/v2/resize:fill:144:144/1*YZwsDgSRkPkDm5sRw668uw.jpeg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Sofialiaqat"
        ],
        "publish_date": "2023-08-08T02:34:07.399000+00:00",
        "summary": "",
        "meta_description": "This family of programming languages is the second-oldest programming language that’s still in use, beaten by Fortran by only one year. The founder, John McCarthy, based Lisp on Alonzo Church’s…",
        "meta_lang": "en",
        "meta_favicon": "https://miro.medium.com/v2/5d8de952517e8160e40ef9841c781cdc14a5db313057fa3c3de41c6f5b494b19",
        "meta_site_name": "Medium",
        "canonical_link": "https://sofialiaqat215.medium.com/lisp-programming-language-guide-history-origin-and-more-8381509b4b5d",
        "text": "6 Facts About Lisp:\n\nLisp, originally styled LISP, stands for list processing.\n\nThis family of programming languages is the second-oldest programming language that’s still in use, beaten by Fortran by only one year.\n\nLisp is recognized by its distinctive parenthesized prefix notation and syntax.\n\nThe programming language remains popular in artificial intelligence research.\n\nThe founder, John McCarthy, based Lisp on Alonzo Church’s lambda calculus and was originally created for practical mathematical notation.\n\nLisp pioneered tree data structures, automatic storage management, dynamic typing, and the self-hosting compiler.\n\nWhat Is Lisp?\n\nIn 1958, McCarthy specified LISP, the second-oldest high-level programming language in widespread use today (only Fortran is older by one year). The full form of Lisp is List Processing. Like Fortran, Lisp has changed a great deal since its early days, and a number of dialects have existed over its history.\n\n© Gago Design / Shutterstock.com\n\n0 of 1 minute, 7 seconds Volume 0%\n\n00:13\n\n01:07\n\n6 Facts About Lisp\n\nLisp, originally styled LISP, stands for list processing.\n\nThis family of programming languages is the second-oldest programming language that’s still in use, beaten by Fortran by only one year.\n\nLisp is recognized by its distinctive parenthesized prefix notation and syntax.\n\nThe programming language remains popular in artificial intelligence research.\n\nThe founder, John McCarthy, based Lisp on Alonzo Church’s lambda calculus and was originally created for practical mathematical notation.\n\nLisp pioneered tree data structures, automatic storage management, dynamic typing, and the self-hosting compiler.\n\nWhat Is Lisp?\n\nIn 1958, McCarthy specified LISP, the second-oldest high-level programming language in widespread use today (only Fortran is older by one year). The full form of Lisp is List Processing. Like Fortran, Lisp has changed a great deal since its early days, and a number of dialects have existed over its history.\n\nToday, the most widely known general-purpose Lisp dialects are Common Lisp, Scheme, and Clojure. Linked lists are one of LISP languages’ major data structures, and its source code is itself made up of lists.\n\nQuick Facts\n\nCreator (person) :John McCarthy\n\nOriginal Price : N/A (open source)\n\nOperating System: TOPS-10, TENEX, then Windows, macOS, Linux, Heroku, OpenBSD, etc.\n\nDeveloped By (company) : N/A\n\nOriginally created as a practical mathematical notation for computer programs, Lisp is based on the notation of Alonzo Church’s lambda calculus. It quickly became the favored programming language for AI research. As one of the earliest programming languages, Lisp pioneered many ideas in computer science, including tree data structures, automatic storage management, dynamic typing, and the self-hosting compiler.\n\nLisp is not only a widely used programming language but is also a family of languages. There are many distinct dialects of Lisp; many are still being used today. Here are just a few examples of Lisp dialects:\n\nCommon Lisp\n\nArc\n\nAutoLisp\n\nBBN Lisp\n\nChicken\n\nClojure\n\nEmacs Lisp\n\nIkarus\n\nInterLisp\n\nRacket\n\n©CobraCZ/Shutterstock.com\n\n©CobraCZ/Shutterstock.com\n\nHow to Use Lisp\n\nLisp is a functional programming language that is used in a variety of situations. It was originally designed for artificial intelligence work and has been used in projects as diverse as aircraft design and Grammarly, the online text processing service.\n\nReview a full Lisp tutorial to find out how to write Lisp routines. Just like other programming languages, Lisp requires practice to use it efficiently. While there are many reasons to use a Lisp tutorial to learn this programming language, one of the most common is for AutoCAD projects.\n\nLisp routines are commonly loaded and run in AutoCAD. Look for a full tutorial on how to run Lisp routines on AutoCAD. To start, follow these steps:\n\nRun the APPLOAD command\n\nSelect the Contents button under the Startup Suite\n\nSelect the Add button\n\nFind the location of the Lisp file and select the Open button\n\nClick the Close button after all the Lisp routines have been added to the Startup Suite\n\nSelect the Close button to close the Load/Unload Applications dialog box\n\nHow to Learn Lisp Programming Language\n\nThere are many different dialect options to consider as you explore ways to learn Lisp. The shared structure of both the syntax and data make Lisp a popular programming language to learn. For others, it’s a frustrating language to learn due to the number of parentheses.\n\nStart by following the instructionsto install Lisp. You can then find easy tutorial steps and example tasks to write the following units in Lisp:\n\nList processing\n\nVariables\n\nFunctions\n\nLists\n\nScripting\n\nThere are many books available to learn and practice Lips. Look for Successful Lisp: How to Understand and Use Common Lisp and other popular books for grasping the basics of this programming language. You can also find many online courses and tutorial videos for step-by-step visual instructions.\n\nThe Difference Between Lisp vs. Fortran\n\nFortran, also stylized FORTRAN, is the oldest programming language still in use. It offers support for numerical analysis, array, and modular programming and is optimized for vectorization.\n\nCompared to other programming languages, it doesn’t have the same level of control and data structures. Some dialects, the Fortran 77 dialect, for example, use a fixed form source format that can be awkward to use.\n\nThe founder of Lisp originally used it for mathematical notation. Lisp can be a faster way to program compared to Fortran and other common coding languages. It comes in a lot of dialects to help you find dynamic solutions.\n\nUnfortunately, Lisp isn’t as easy to read as other languages. It doesn’t have a very intuitive syntax, making it more difficult to learn as well.\n\nLisp Release History\n\nJohn McCarthy specified the original Lisp in 1958. The syntax and dialect list has undergone many changes, but this family of languages has remained strong and popular for programming, particularly in the artificial intelligence field. Here is a brief history of many of the languages in the Lisp family. The dates are estimates since many dialects were used before they became stable and widespread.\n\n1965: MACLISP and Inter lisp\n\nMACLISP was actually developed for the Multics system rather than Apple’s Macintosh. It is descended from Lisp 1.5 and was developed in MIT’s project Mac. Inter lisp ran on the TENEX operating system and was a competitor of MACLISP for some time.\n\n1970s: Lisp Machine, Scheme, and NIL\n\nStarting in the 1970s, a lot of dialects started to emerge from the original Lisp programming language. Lisp Machine, also known as ZetaLisp, was descended from MACLISP and influenced Common Lisp. Scheme and NIL were notable additions during this time, with Scheme being a minimalist version of the programming language.\n\n©Jason Riedy/CC BY 2.0 — License\n\n1980s: ZIL, Franz Lisp, Common Lisp, and Le Lisp\n\nZIL, or Zork Implementation Language, was released in the 1980s. Franz Lisp is a play by Franz Liszt, the famous composer and pianist. It was widely used in the 1980s, but the final version of the language was released in 1988.\n\nCommon Lisp is another successor to MACLISP and is one of the most common, all-purpose Lisp versions still in use. It has undergone many versions and continues to be used across multiple platforms."
    }
}