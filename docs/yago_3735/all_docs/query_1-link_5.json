{
    "id": "yago_3735_1",
    "rank": 5,
    "data": {
        "url": "https://www.techtarget.com/whatis/definition/LISP-list-processing",
        "read_more_link": "",
        "language": "en",
        "title": "What is the Lisp (List Processing) Programming Language? â€“ A Definition from TechTarget.com",
        "top_image": "https://cdn.ttgtmedia.com/ITKE/images/logos/TTlogo-379x201.png",
        "meta_img": "https://cdn.ttgtmedia.com/ITKE/images/logos/TTlogo-379x201.png",
        "images": [
            "https://cdn.ttgtmedia.com/rms/onlineImages/froehlich_andrew.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Andrew Froehlich"
        ],
        "publish_date": "2022-09-27T15:37:00+00:00",
        "summary": "",
        "meta_description": "Learn what Lisp is, how this high-level programming language is used and its history. Also examine how major corporations are implementing dialects of Lisp.",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "WhatIs",
        "canonical_link": "https://www.techtarget.com/whatis/definition/LISP-list-processing",
        "text": "What is Lisp (programming language)?\n\nLisp, an acronym for list processing, is a functional programming language that was designed for easy manipulation of data strings. As one of the oldest programming languages still in use, Lisp offers several different dialects and has influenced the development of other languages.\n\nA unique feature of early Lisp versions compared to most other programming languages is that the code could be directly interpreted without a compiler. The source code itself could be parsed and interpreted directly on a system. Today, however, most Lisp versions require that code be compiled and then loaded into an image to run. This offers faster program execution speeds compared to direct interpretation.\n\nWhat are the different dialects of Lisp?\n\nSince its inception, Lisp has gone through multiple changes and iterations depending on the need. These language implementations are known as dialects -- many of which are open source. The most used Lisp-based languages today include the following:\n\nClojure\n\nEmacs Lisp\n\nCommon Lisp\n\nJulia\n\nRacket\n\nScheme\n\nIn Lisp, all computation is expressed as a function of at least one object. Objects can be other functions, data items -- such as constants or variables -- or data structures. Lisp's ability to compute with symbolic expressions rather than numbers makes it convenient for artificial intelligence (AI) applications. While it isn't as popular as C, Python or Perl, Lisp is still used for AI programming as well as several other functions. Lisp continues to be popular in higher education, as students learn Lisp programming tactics and extend this knowledge to the private sector after graduation.\n\nBenefits of Lisp\n\nWhile there are several reasons why the Lisp programming language is still popular after all these years, perhaps the most important is that it's considered to be a relatively simple language to learn. This is probably why it's still popular in academia. Other benefits include the following:\n\naccess to powerful and easy-to-integrate macros;\n\nthe language itself is programmable to meet nearly any need;\n\noperates on most platforms; and\n\nmany find programming in Lisp to be faster with smaller code footprints.\n\nWho uses Lisp?\n\nLisp is used within academia for a variety of functions, ranging from basic programming and AI to machine learning and quantum computing. Outside the university walls, Lisp dialects are used by the following:\n\nsymbolic AI programmers;\n\nquantum computing professionals;\n\nembedded systems programmers;\n\nthose seeking a quick scripting language; and\n\nsmall or understaffed programming teams.\n\nToday, Lisp dialects are used to create code in a variety of use-case scenarios from basic HyperText Markup Language and web-based apps to software that operates and controls mass transit systems, including the London Tube.\n\nCommercial applications of Common Lisp include Grammarly, which uses AI to analyze text and suggest improvements, and Boeing, which uses a server written in the Lisp variant. Lisp Clojure or ClojureScript users include Amazon, Capital One and Walmart.\n\nHistory of Lisp\n\nJohn McCarthy at Massachusetts Institute of Technology is credited with creating the first version of Lisp in 1959. The first official implementation of the language was performed on an IBM 704 mainframe using punched cards. Between the 1960s and 2000s, more than a dozen mainstream dialects were created and used in a variety of ways.\n\nThroughout the 1990s, Lisp's popularity began to fade as programmers opted for more modern programming languages. However, computer scientist and entrepreneur Paul Graham helped to create a resurgence in interest for Lisp. In an essay titled \"Beating the Averages\" written in the early 2000s, Graham wrote of his interest in using Lisp within his latest startup organization's software platform to create a competitive advantage over others. Graham stated: \"Our hypothesis was that if we wrote our software in Lisp, we'd be able to get features done faster than our competitors, and also to do things in our software that they couldn't do. And because Lisp was so high-level, we wouldn't need a big development team, so our costs would be lower.\" Many readers of the essay took this notion to heart, and thus the use of Lisp again.\n\nChoosing the right programming languages for DevOps workflows can be complicated, especially because there are so many to choose. Explore the advantages and disadvantages of several common programming languages."
    }
}