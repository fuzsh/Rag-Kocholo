{
    "id": "correct_foundationPlace_00052_2",
    "rank": 47,
    "data": {
        "url": "https://arxiv.org/html/2406.02216v1",
        "read_more_link": "",
        "language": "en",
        "title": "NordIQuEst: the Nordic‚ÄìEstonian Quantum Computing e‚ÄìInfrastructure Quest",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://arxiv.org/html/x1.png",
            "https://arxiv.org/html/x2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Quantum Computing HPC Hybrid Computing"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "11institutetext: VTT Technical Research Center (Finland)22institutetext: CSC ‚Äì IT Center for Science (Finland)33institutetext: Technical University of Denmark (Denmark)44institutetext: DEIB, Politecnico di Milano (Italy)\n\nNordIQuEst: the Nordic‚ÄìEstonian Quantum Computing e‚ÄìInfrastructure Quest\n\nCostantino Carugno 1144 Jake Muff 1122\n\nMikael P. Johansson 22 Sven Karlsson 33 Alberto Lanzanova 22\n\nAbstract\n\nThis paper presents the Nordic‚ÄìEstonian Quantum Computing e‚ÄìInfrastructure Quest ‚Äì NordIQuEst ‚Äì an international collaboration of scientific and academic organizations from Denmark, Estonia, Finland, Norway, and Sweden, working together to develop a hybrid High‚ÄìPerformance and Quantum Computing (HPC+QC) infrastructure. The project leverages existing and upcoming classical high‚Äìperformance computing and quantum computing systems, facilitating the development of interconnected systems. Our effort pioneers a forward‚Äìlooking architecture for both hardware and software capabilities, representing an early‚Äìstage development in hybrid computing infrastructure. Here, we detail the outline of the initiative, summarizing the progress since the project outset, and describing the framework established. Moreover, we identify the crucial challenges encountered, and potential strategies employed to address them.\n\nKeywords:\n\nQuantum Computing HPC Hybrid Computing\n\n1 Introduction\n\nOver the years, HPC systems have served as the foundation for conducting demanding calculations and simulations. Increasingly powerful supercomputers have been deployed with elaborated software stacks and dedicated resource management [15]. A supercomputer is realized through a computer cluster, equipped with a specialized set of software and interconnected hardware that enables massively parallel and distributed computing, leveraging the power of many individual computing units. Recently, QC has emerged as an alternative computational paradigm, advocating the use of quantum devices in order to carry on specialized computation in a radically different way, by leveraging quantum effects [7]. The availability of first-generation quantum computers, named ‚ÄúNoisy Intermediate-Scale Quantum‚Äù (NISQ) devices [18], has allowed researchers to experiment with a variety of quantum algorithms under practical, although limited, conditions. Presently, these devices, characterized by their ability to handle from a few to a few thousand ‚Äúnoisy‚Äù qubits, face the issue of preserving information encoded in a quantum system for the required time necessary to carry out computationally difficult tasks [21]. However, current improvements in technology and future efforts towards developing ‚ÄúFault‚ÄìTolerant Quantum Computers‚Äù (FTQC) [20], hold the potential to overcome this issue, and solve problems that are currently intractable for classical supercomputers alone [6]. From this, efforts towards integration of HPC systems with QC have sprung forth, with the aim of ultimately addressing uniquely complex scientific and engineering problems.\n\nThe NordIQuEst project represents a pioneering initiative to leverage the complementary strengths of both HPC and QC computing systems, blending these two different forms of computing into a hybrid HPC+QC infrastructure[11]. This collaborative effort, promoted by the Nordic e‚ÄìInfrastructure Collaboration NeIC , and brought forward by various organizations within the Nordic nations ‚Äì DTU (Denmark), VTT and CSC (Finland), Simula and Sintef (Norway), Chalmers‚ÄìWACQT (Sweden), and University of Tartu (Estonia) ‚Äì aims to set up a prototypical infrastructure, incorporating HPC and QC devices, and specialized software. Integrating quantum computing into the existing framework of HPC systems introduces several challenges, including the need for compatible software environments, efficient management of resources, and robust access control [12]. NordIQuEst tackles these issues by developing a cohesive ecosystem that is approachable and reliable, in order to enable researchers to execute smoothly on both real QC devices and the hybrid system. In addition to preparing the infrastructure, NordIQuEst has organized several events and workshops aimed at disseminating knowledge and educating experimenters on HPC and QC topics . The project reflects the Nordic tradition of collaboration in innovation and scientific inquiry, and seeks to establish a blueprint for the integration of quantum and classical computing resources.\n\nThis paper outlines the foundational principles of HPC and QC, examines the potential for their combination, and describes the implementation of the NordIQuEst platform. It addresses the technical, operational, and conceptual challenges of merging these computing paradigms, and shares the project‚Äôs approach and vision for navigating current and upcoming obstacles. This work lays the foundation for further advancement of integrated HPC+QC computing technologies, upon which future projects may leverage and expand upon.\n\n2 HPC and QC\n\nHPC systems are advanced computing systems that leverage the aggregation and orchestration of computational resources, in order to tackle problems that demand vast amounts of computing power. Such infrastructures are constituted by the combined integration of several technologies, of which a supercomputer, in the form of a computer cluster, stands as the foundational element. A cluster is a physical infrastructure that groups many computing nodes ‚Äì individual computing resources ‚Äì that serve as a unified computational resource. The nodes are connected through a high‚Äìspeed network and specialized interconnect hardware, specifically engineered to meet computational demands, leveraging the combined capabilities of one or more CPUs, GPUs, or other dedicated hardware. In addition, supercomputers are equipped with the memory and the storage necessary to accommodate the data. The supercomputer is managed on‚Äìsite and is accessed remotely by users, that carry out intensive calculations using distributed parallel computing, a computational paradigm that consists in dividing the problem into smaller tasks, distributing and executing them concurrently across the nodes. Moreover, a group of tasks can be collected and processed simultaneously in batches, further reducing processing time. The efficiency of HPC systems heavily relies on the software and algorithms used, as optimizing execution for parallel processing is critical for maximizing performance. Workload management and job scheduling software is utilized, to allocate the computational resources needed without hindering overall system performance. Furthermore, a dedicated system to manage user identity and permission levels is essential, in order to properly assign computational quotas, and impose security restrictions, averting misuse of the system. Lastly, handling large volumes of data necessitates an advanced storage systems, such as a parallel file system, designed for big data storage, fast data retrieval, and high reliability.\n\nQC represents a paradigm shift in our approach to computational problems, introducing principles that fundamentally diverge from classical computing.[23] At its core, quantum computing encodes information in a quantum system, and leverages phenomena from quantum mechanics ‚Äì superposition, interference, and entanglement ‚Äì to carry out the calculation. The fundamental unit of quantum information is the qubit, analogous to the bit in classical computing. Unlike a classical bit, which can take either one of two values ‚Äì 00 or 1111 ‚Äì a qubit can exist in a superposition of both states, allowing, in principle, a quantum computer with nùëõnitalic_n qubits to represent and process 2nsuperscript2ùëõ2^{n}2 start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT possible qubit states simultaneously. In classical computers, the information is represented as a string of nùëõnitalic_n bits ‚Äì a bitstring ‚Äì which is inserted in a processor register, and after certain logic operations are performed, the resulting bitstring is obtained. In quantum computing, information is encoded in nùëõnitalic_n qubits ‚Äì a quantum state ‚Äì symbolized as a quantum register but realized in a physical system. The qubits are then manipulated using quantum gates, i.e., basic logic operations, until they reach a final state composed of a superposition of the qubits states. By measuring the qubits, the final state collapses to a classical state, a bitstring. However, as the final state is the result of a superposition of the qubit states, a single measurement yields only one possible bitstring, obtained according to its specific probability, dictated by quantum mechanics. In order to reconstruct the probability distribution of all the outcoming bitstrings in the final state, the measurement process needs to be repeated several times, which is often referred to as ‚Äúshots‚Äù. In fact, quantum interference, the ability of quantum states to amplify or cancel each other, plays a critical role during quantum computation, guiding the state towards the correct solutions by enhancing probabilities associated with desired outcomes, while suppressing the others. Similarly to how a series of logical gates designed to perform specific operations are assembled into circuits, a series of quantum gates are assembled in quantum circuits, which are unitary transformations that enable superposition and entanglement, a phenomenon where the state of one qubit is correlated with the state of another, such that the measurement of one immediately defines the state of the other.\n\nA given problem is thus solved by QC in a radically different way, with a quantum algorithm that pre‚Äìprocesses the data, encodes it in a qubit register, executes a quantum circuits several times, and post‚Äìprocesses the outcome. A diverse set of quantum algorithms has been conceived over the years, aimed at addressing issues that are difficult to solve using classical methods. It is important to note that quantum computers and algorithms will not replace classical computers and algorithms. In fact, one should think of QC devices as more closely resembling hardware accelerators, special‚Äìpurpose solvers, rather than entire classical computers replacements. The concept of having dedicated hardware to perform specific demanding computational operations is not new to computer science. Initially conceived to advance computer graphics and image processing, Graphics Processing Units (GPUs) have proven useful in a diverse set of applications, from training neural networks to mining cryptocurrency, due to their capacity of handling intensive matrix calculations, and they are now a common component of HPC systems. Furthermore, while Application‚ÄìSpecific Integrated Circuits (ASICs) are custom‚Äìdesigned circuits, used in HPC for tasks that require high efficiency and performance, Field‚ÄìProgrammable Gate Arrays (FPGAs) have a versatile internal logic, and are utilized in HPC for their flexibility, and their ability to be reprogrammed for different scopes. Following a similar logic, the term Quantum Processing Unit (QPU) was recently established to identify the computational capability offered by QC devices.\n\nThe advantages of integrating HPC and QC into a hybrid HPC+QC infrastructure come in many forms. The following points delineate some of the prevalent use‚Äìcases of an HPC+QC system:\n\n(a)\n\nHybrid classical‚Äìquantum algorithms: Quantum circuits often feature a modular structure, with parameterized gates that are modifiable through classical inputs. Variational Quantum Algorithms (VQA) ‚Äì such as the Variational Quantum Eigensolver (VQE) for chemistry problems [17], and the Quantum Approximate Optimization Algorithms (QAOA) for combinatorial optimization problems [8] ‚Äì require the interplay with classical routines to be tuned to the specific objective. In this scenario, classical computers can run parallel parameter optimization using one or more optimizers, whilst quantum computers are used to prepare quantum states and measure observables, which are then fed back into the classical optimization loop running on a classical resource. Furthermore, as the relationship between the classical parameters and the cost function is non‚Äìlinear, the optimization landscape of VQA problems can be highly complex with many local minima, and, even in the case of a single optimizer, providing convergence to acceptable values can be challenging for ordinary computers.\n\n(b)\n\nQC supports HPC: In the realm of machine learning, several hybrid algorithms have been developed that are mainly classical but could benefit from having a quantum component. A Quantum Support Vector Machine (QSVM) [19] is a classifier that utilizes a quantum kernel to divide the dataset. In such case, having an HPC infrastructure available allows high‚Äìperformance pre‚Äìprocessing of large datasets and faster execution time, and to promptly compare the results obtained using a classical kernel. In Quantum Generative Adversarial Networks (QGANs) [5], whilst HPC trains the discriminator and optimize the overall network, the quantum computer runs the quantum generator, exploring the high‚Äìdimensional space in order to generate new data samples that can be used in the discriminator. In a similar way, for deep learning, in Quantum Convolutional Neural Networks (QCNNs) [4], whilst HPC performs the heavy computational tasks associated with training the classical layers, the quantum computer takes care of implementing the quantum layers.\n\n(c)\n\nHPC supports QC: In addition to the classical processing required for variational hybrid algorithms, HPC resources are crucial for extracting the most out of quantum computers through pre‚Äì and post‚Äìprocessing of data. Pre‚Äìprocessing includes optimal compiling and transpiling of circuits, and increasingly, creating the quantum algorithms in the first place.[14] Efficient compiling and transpiling is necessary in order to make the final executable circuit sufficiently shallow for NISQ devices to finish before decoherence. With increasing qubit count, qubit routing and gate optimization becomes a computationally hard problem, requiring supercomputing resources. Post‚Äìprocessing includes error mitigation measures, in effect, a process of enhancing the signal‚Äìto‚Äìnoise ratio. Also this task becomes increasingly resource‚Äìintensive as qubit number grows. In order to avoid losing the computational advantage of a conceptually efficient quantum algorithm, it is important that the pre‚Äì and post‚Äìprocessing tasks can be performed efficiently, that is, with low scaling with respect to qubit count. Here, machine learning techniques are expected to play a decisive role in suppressing the scaling of classical processing methods.[9]\n\n(d)\n\nHPC simulates QC: HPC is crucial for benchmarking quantum computers, in assessing the current capabilities and scalability of quantum algorithms, and predicting their future potential. On a classical computer, the exact simulation of a quantum circuit of nùëõnitalic_n qubits requires storing the complex amplitudes for 2nsuperscript2ùëõ2^{n}2 start_POSTSUPERSCRIPT italic_n end_POSTSUPERSCRIPT possible states. As the memory necessary to accommodate these values grows exponentially with circuit size, the evaluation of circuits with around 25252525 and more, quickly becomes unfeasible for an ordinary machine. Instead, a supercomputer can take advantage of a distributed memory approach, distributing the complex values to different nodes, thereby pushing the boundaries of classical simulation around the 50505050 qubits mark, thus enabling larger scalability analysis. Conversely, approximate evaluations of locally‚Äìentangled quantum circuits can be classically performed using tensor network methods, which encode and compress a circuit, alleviating the aforementioned memory constraint. Depending on the specific circuit and the tensor structure chosen, it is sometimes possible to approximate circuits with a large number of qubits, even hundreds or thousands, provided that the entanglement is low enough [16]. However, in such cases, in order to reach the final result, several tensor contractions need to be performed and an efficient contraction path needs to be found, shifting the computational burden from memory to processors [10]. In conclusion, HPC is still indispensable in providing the necessary computational power for these simulations [22].\n\n3 NordIQuEst infrastructure\n\n3.1 Overview\n\nThe NordIQuEst platform acts as the central actor to manage the interaction between HPC systems and QC devices, as shown in Fig.1. The infrastructure is realized through the integration of several hardware and software components, which NordIQuEst enables to seamlessly interface:\n\n(a)\n\nHPC sites: The pan‚ÄìEuropean EuroHPC LUMI , is presently the fastest supercomputer in Europe and number five on the global TOP500 list . LUMI consists of 2048 LUMI‚ÄìC CPU nodes, each with two AMD EPYC 7763 CPUs with 64 cores, 2978 LUMI‚ÄìG nodes, each with four AMD MI250x GPUs, and additional specialized computing partititons. All LUMI compute nodes use the HPE Cray Slingshot‚Äì11 200 Gbps network interconnect. LUMI has a sustained computing power of 380 PFLOPS, and is equipped with 1.751.751.751.75 PB of RAM. It is hosted by CSC ‚Äì IT Centre for Science (Finland), and is the principal HPC resource of NordIQuEst. In addition, the eX3 project, coordinated by Simula (Norway), provides several different computational clusters for Norwegian researchers. HPC sites are equipped with the SLURM workload manager , to schedule jobs and dispatch them to QC sites.\n\n(b)\n\nQC sites: Helmi , a 5‚Äìqubit superconducting quantum computer, hosted at VTT Research Center (Finland), is the main QC site for NordIQuEst. The qubits are arranged in a star‚Äìtopology and have fidelities around 99.7% for single‚Äìqubit gates, 95% for two‚Äìqubit gates, and 95% for readout, with T2 times in the range of 10‚Äì20Œºùúá\\muitalic_Œºs. Of a similar superconducting technology, QAL 9000 , is currently a 25‚Äìqubit testing chip, with planar grid connectivity map, fabricated and mantained by Chalmers‚ÄìWAQCT (Sweden). Both QC sites are planning to upgrade to a 40‚Äì50 qubits device in the upcoming years.\n\n(c)\n\nUser management: Puhuri is a cloud service project, funded by NeIC, which provides identity management, project management and resource allocation across Europe. It is integrated into both HPC and QC systems.\n\n(d)\n\nProgramming frameworks: Several QC simulators are available, in order to accommodate different needs. IBM Qiskit and Google Cirq are popular well‚Äìsupported and well‚Äìequipped quantum programming frameworks. Oxford QuEST[13] is specially made for running on multi‚Äìcore and multi‚Äìnode clusters, in addition to supporting distributed memory. Nvidia cuQuantum[2] is designed for running on GPUs and performing advanced tensor networks calculations. Xanadu Pennylane [3] contains several tools to run quantum machine learning algorithms and is suited for running large scale hybrid algorithms on supercomputers [1].\n\n(e)\n\nTesting frameworks: In addition to the simulators, customized Python software for circuit testing is made available and maintained by Simula: quito , an automatic test coverage generator tool, and QuCAT , a quantum circuit analyzer tool.\n\n(f)\n\nApplication library: A quantum algorithm library, written in Python, is provided, in order to test and evaluate the capabilities of the hybrid computing framework. Introductory tutorials and additional educational resources are publicly available for new researchers and are easily executable through Jupyter notebooks.\n\n3.2 Operational workflow\n\nThe operational workflow designed within the NordIQuEst infrastructure, displayed in Fig. 2, is constructed to be intuitive, and to allow users to easily submit computational jobs to either HPC clusters, QC devices, or a combination of both. Initially, the user applies for a project through Puhuri. Upon approval, Puhuri allocates the necessary classical and quantum resource quotas. The user then accesses the HPC system directly. For job submission, the user sends single or a batch of jobs to the HPC, which are handled by the SLURM workload manager. SLURM manages the job execution, based on the job requirements and resource availability, including accessing the QC devices via a REST API for hybrid computations. The assigned QC device processes the jobs and returns the results and resource usage information to SLURM, which then relays both the results and the metadata to the HPC system. Finally, the HPC system returns the computational results to the user, and reports the resource usage back to Puhuri for project accounting. This workflow ensures an efficient allocation of resources based on the job requirements, availability, and user entitlements, whilst managing the intricate process of coordinating between HPC and QC devices.\n\n3.3 User engagement\n\nThe NordIQuEst project kicked off officially in April 2022, and the infrastructure became operational in a testing phase in September 2022, in conjunction with the first NordIQuEst workshop. Since November 2022, a stable connection between LUMI and the VTT quantum computer Helmi has allowed for testing the HPC+QC infrastructure across the Nordics and Estonia. For example, the connection has been utilised in NordIQuEst organised events, such as the Quantum Autumn School 2023, co‚Äìorganised with the EuroCC National Competence Centre Sweden (ENCCS) and the Wallenberg Centre for Quantum Technologies. It is also used at the NeIC Conference 2024, Nordic e‚ÄìInfrastructure Tomorrow, within the theme of these Proceedings.\n\nThe setup of the NordIQuEst platform has been shown to be stable and able to handle large loads, as tested during the Quantum Autumn School 2023, which is highlighted in Table. 1. This shows the usage statistics over the short period of the event, where users were introduced to hybrid HPC+QC concepts, and were able to run their first hybrid HPC+QC jobs. The success of this event was aided by the Finnish Quantum‚ÄìComputing Infrastructure (FiQCI), which is one of the main synergistic efforts working together with the NordIQuEst project. The table displays the total number of users which used the platform over the course of the event, with the total number of jobs submitted and the number of shots used. The high number of shots, which is a single execution of an algorithm on the QPU, highlights the engagement of the users during this event.\n\n4 Challenges: present and future\n\nThe NordIQuEst infrastructure, while pioneering in its integration HPC and QC, has faced a multitude of diverse challenges, as expected for a conceptually completely new implementation. These challenges encompass technical, operational, and conceptual domains, reflecting the complexity of merging these powerful but different computing paradigms. This chapter identifies the most prominent of the challenges faced, and offers some insights into conceiving potential solutions.\n\n4.1 Technical challenges\n\n(a)\n\nQuantum hardware variability: The current landscape of quantum computing is full of varying emerging technologies, such as superconducting, ion trap and neutral atoms, each with its own unique strengths and limitations. This diversity has lead to significant variability among available quantum computers in terms of qubit count, error rates and operational capabilities.\n\nAddressing this challenge requires the development of an adaptable infrastructure, to match computational tasks to the most suitable quantum hardware. The NordIQuEst project has recognized the uncertainty surrounding quantum technology and aims to mitigate its impact by abstracting the hardware layer as much as possible. QC sites in the NordIQuEst project try and offer as much information about the quantum computing stack as possible to the HPC sites through a variety of cutting edge software solutions. Additionally, by offering a wide variety of simulators, with the classical resources to back it up, users can experiment and test out potentially different solutions.\n\n(b)\n\nQuantum hardware reliability: Current NISQ quantum computers are delicate devices, requiring lots of calibration work and human maintenance to maintain uptime. This is in stark contrast to the HPC machines with which they are connected to, which provide users with very high up‚Äìtimes, availability and performance. Within the NordIQuEst project, it is the responsibility of QC sites to take care of maintenance and upkeep of the quantum computers, in addition to providing HPC sites with the availability information, such as whether the quantum computer is available for job submission and what is the current calibration status. Presently, for LUMI, this is solved in a straightforward manner with the automatic opening and closing of the SLURM job scheduler upon signal from Helmi.\n\n(c)\n\nSoftware instability: The software enabling the use of quantum computation, be it simulator or real device, is in a very unstable state, reflecting the current state of quantum computing. Within the confines of a cross‚Äìborder project it has proven to be a difficult challenge to maintain and update software packages, so that different software stacks are in sync and interoperable. The NordIQuEst project has learned that software installers are required to keep the software updated and to test new versions frequently. In addition, researchers are in close contact with maintainers in order to track potential problems and fix them promptly.\n\n4.2 Operational challenges\n\n(a)\n\nQuantum hardware availability: Quantum computers are typically designed to be used by one user at a time, utilizing a first‚Äìin‚Äìfirst‚Äìout (FIFO) queuing system at the level of the control electronics and lab equipment. Due to this, access to the quantum device is sequential, and notably, users may be accessing the device from different sources. Additionally, there needs to be a mechanism for users to reserve time slots for their quantum algorithms, to ensure exclusive access and the best use of their time. A sufficiently smart enough scheduler could be employed to manage the execution of quantum jobs which avoids stalling the quantum computer and efficiently plans future job execution. The scheduler should consider factors such as the current quality of the device, time constraints, and the demand for the quantum resources. An early solution, adopted within the FiQCI framework, was to set a daily time slot for HPC users and implement a hard limit to the number of job executions and time limit of jobs to avoid stalling. This required good communication between HPC and QC sites. The future hope is to have a dedicated quantum metascheduler, with a fair‚Äìshare queuing system, that takes into account both the HPC system and the quantum computer. The implementation of an efficient co‚Äìscheduler is expected to be one of the most challenging tasks for HPC+QC infrastructures.\n\n(b)\n\nUser quotas and project management: The administrative tasks that are required for HPC style projects can be seen as a hindrance for access to experimental resources such as quantum computers. Estimating the amount of classical and quantum resources needed is difficult for researchers of hybrid quantum algorithms and complex processes for project management might prevent adoption from new researchers. User quotas impose restrictions on the amount of computational resources that individual researchers or projects can access. Experienced researchers with demanding computational requirements may find themselves constrained by these quotas, leading to delays in their work. To address these challenges organizations can organize workshops to deliver temporary collective access. While the practical experience among the user base is building up, it is important to provide a flexible resource application process, with short application processing times. Additionally, offering training through easy to follow tutorials and Jupyter notebooks can help new researchers familiarize themselves with quantum computing concepts and the tools needed to perform hybrid computation.\n\n4.3 Conceptual challenges\n\n(a)\n\nHybrid applications assessment: Properly evaluating quantum algorithms is a challenge due to the many heuristics involved. The nature of hybrid algorithms combining both classical and quantum components leads to additional complexity in terms of assessing how well they are performing, how well they scale, and the potential applications. The NordIQuEst project has found that many users prioritize the execution of quantum algorithms over in‚Äìdepth analysis of benchmarking, testing the scalability and assessing the application. For many, it is important that it just executes. These challenges can be addressed by promoting evaluation studies that focus on the assessment of hybrid quantum applications. Providing software tools that facilitate the isolation of variables and automate the assessment of algorithms. An important component is to enable mitigation of the noise from NISQ‚Äìera quantum devices to enhance the reliability and reproducibility of results. Classical resources in HPC environments are in an abundance compared to their quantum counterparts. Hybrid applications should try to leverage the parallel computing power offered by HPC to enhance the assessment of hybrid algorithms.\n\n(b)\n\nUser engagement While the NordIQuEst infrastructure is still under development and not generally available to users, it is important to proactively consider user engagement. Our experience is that some clear barriers to user adoption exist. Some of these are related to insufficient knowledge about what an HPC+QC infrastructure can provide for a user, and others to the practicalities of getting access to it. As discussed in Sec. 3.2, the envisioned journey of a prospective user begins with applying for a project. This requires that the user articulates their research objectives in order to properly assess the computational quotas. Although necessary, this process might be hold back new researchers in adopting experimental technologies. As we have ascertained during NordIQuEst‚Äôs events, facilitating this by providing access to the platform through a single project account and sharing its resources, significantly lowers this barrier. Especially for users who are not familiar with standard HPC procedures, providing a hands‚Äìon walk‚Äìthrough of the process is highly beneficial. Conversely, more experienced QC users might already have direct access to QC devices ‚Äì such as those hosted by VTT or Chalmers ‚Äì and might not resort to NordIQuEst‚Äôs services unless they see an added value, e.g., in the form of hybrid computation or heavy pre‚Äì and post‚Äìprocessing. This added value thus needs to be clearly formulated and communicated to potential users. To engage users, it is also crucial to build up the infrastructure in constant rapport with the end‚Äìusers. In practice, this means that the project implementation needs to be sufficiently flexible to allow for developing the user experience on the fly.\n\n(c)\n\nEducation and training: Both HPC and QC are complex domains that demand a level of expertise and experience to navigate efficiently. Integrating HPC with QC adds an additional layer of complexity, resulting in a steep learning curve for new users. Becoming proficient in both HPC and QC requires dedicated time and education in quantum computing, using a supercomputer, computer science, and additional domains. Bridging the gap between the HPC realm and the QC realm is crucial for enabling the adoption of hybrid infrastructure. This requires developing training programs and educational material tailored to equip researchers and potential users with the necessary skills and knowledge. Such training programs should include primers, tutorials, and plug‚Äìand‚Äìplay demonstrations for both beginners and advanced users. In particular, the NordIQuEst project has seen the need for plug‚Äìand‚Äìplay examples to introduce users and increase adoption. Advanced examples of hybrid algorithms are also needed for experienced users looking to optimize their workflows. Such examples should demonstrate the utilization of open‚Äìsource tools and cutting‚Äìedge techniques to get the most out of the resources available.\n\n5 Conclusions\n\nThe NordIQuEst collaboration has established a pioneering groundwork for integrating HPC and QC resources into a cohesive, hybrid computing infrastructure. This effort ‚Äì the first of its kind on such a scale ‚Äì was driven by the potential of offering researchers the opportunity to experiment with the novel technology of quantum computing, while accessing the capabilities of usual supercomputers.\n\nSince its inception, the NordIQuEst platform has been predisposed with a diverse set of tools, enabling researchers to advance important scientific goals, such as evaluating variational hybrid algorithms, benchmarking current quantum computers, and implementing new hybrid applications. Nonetheless, the NordIQuEst project has faced, and successfully addressed, several technical challenges, including the need for an adaptable infrastructure that can accommodate the diverse nature of quantum hardware, and the software instability inherent in this rapidly evolving field. On the operational side, the project has managed to provide reliable access to quantum hardware, while leveraging existing systems and collaborative projects such as FiQCI (Research Council of Finland) and Puhuri (NeIC/Nordforsk) for coordinating user access and resource allocation. Furthermore, the project‚Äôs commitment to cultivating a research community, has produced hands‚Äìon training events and educational materials, aimed at bridging the knowledge gap between classical HPC users and the QC practitioners.\n\nIn conclusion, while the NordIQuEst project has made significant strides in unifying HPC and QC systems, it is only an initial step towards a future where the synergistic potential of these technologies can be fully realized. Our journey underscores the importance of international collaboration in fostering innovation at the forefront of computing technologies, setting a precedent for future endeavors that will build on our foundational work. We end by highlighting the need for open‚Äìsource development and open access material for enabling adoption and (re)utilization of the work performed.\n\nReferences\n\n[1] Asadi, A., Dusko, A., Park, C.Y., et al.: Hybrid quantum programming with PennyLane Lightning on HPC platforms (2024)\n\n[2] Bayraktar, H., Charara, A., Clark, D., et al.: cuQuantum SDK: A High-Performance Library for Accelerating Quantum Science (2023)\n\n[3] Bergholm, V., Izaac, J., Schuld, M., et al.: Pennylane: Automatic differentiation of hybrid quantum-classical computations (2022)\n\n[4] Cong, I., Choi, S., Lukin, M.D.: Quantum convolutional neural networks. Nature Physics 15(12), 1273‚Äì1278 (Dec 2019). https://doi.org/10.1038/s41567-019-0648-8, https://doi.org/10.1038/s41567-019-0648-8\n\n[5] Dallaire-Demers, P.L., Killoran, N.: Quantum generative adversarial networks. Phys. Rev. A 98, 012324 (Jul 2018). https://doi.org/10.1103/PhysRevA.98.012324, https://link.aps.org/doi/10.1103/PhysRevA.98.012324\n\n[6] Devoret, M.H., Schoelkopf, R.J.: Superconducting circuits for quantum information: An outlook. Science 339(6124), 1169‚Äì1174 (2013). https://doi.org/10.1126/science.1231930, https://www.science.org/doi/abs/10.1126/science.1231930\n\n[7] DiVincenzo, D.P.: The physical implementation of quantum computation. Fortschritte der Physik 48(9-11), 771‚Äì783 (2000). https://doi.org/https://doi.org/10.1002/1521-3978(200009)48:9/11<771::AID-PROP771>3.0.CO;2-E, https://onlinelibrary.wiley.com/doi/abs/10.1002/1521-3978%28200009%2948%3A9/11%3C771%3A%3AAID-PROP771%3E3.0.CO%3B2-E\n\n[8] Farhi, E., Goldstone, J., Gutmann, S.: A quantum approximate optimization algorithm (2014)\n\n[9] Filippov, S., Leahy, M., Rossi, M.A.C., Garc√≠a-P√©rez, G.: Scalable tensor-network error mitigation for near-term quantum computing (2023)\n\n[10] Gray, J., Kourtis, S.: Hyper-optimized tensor network contraction. Quantum 5, 410 (Mar 2021). https://doi.org/10.22331/q-2021-03-15-410, http://dx.doi.org/10.22331/q-2021-03-15-410\n\n[11] Johansson, M., Wendin, G.: The Quest for a Nordic Quantum Computing Ecosystem. ERCIM News (128), 31‚Äì32 (2022), https://ercim-news.ercim.eu/en128/special/the-quest-for-a-nordic-quantum-computing-ecosystem\n\n[12] Johansson, M.P., Krishnasamy, E., Meyer, N., Piechurski, C.: Quantum Computing ‚Äì A European Perspective (Oct 2021). https://doi.org/10.5281/zenodo.5547408, https://doi.org/10.5281/zenodo.5547408\n\n[13] Jones, T., Brown, A., Bush, I., Benjamin, S.C.: Quest and high performance simulation of quantum computers. Scientific Reports 9(1), 10736 (Jul 2019). https://doi.org/10.1038/s41598-019-47174-9, https://doi.org/10.1038/s41598-019-47174-9\n\n[14] Nakaji, K., Kristensen, L.B., Campos-Gonzalez-Angulo, J.A., et al.: The generative quantum eigensolver (GQE) and its application for ground state search (2024)\n\n[15] Navaux, P.O.A., Lorenzon, A.F., Serpa, M.d.S.: Challenges in high-performance computing. Journal of the Brazilian Computer Society 29(1), 51‚Äì62 (Aug 2023). https://doi.org/10.5753/jbcs.2023.2219, https://sol.sbc.org.br/journals/index.php/jbcs/article/view/2219\n\n[16] Patra, S., Jahromi, S.S., Singh, S., Orus, R.: Efficient tensor network simulation of ibm‚Äôs largest quantum processors (2023)\n\n[17] Peruzzo, A., McClean, J., Shadbolt, P., et al.: A variational eigenvalue solver on a photonic quantum processor. Nature Communications 5(1), 4213 (Jul 2014). https://doi.org/10.1038/ncomms5213, https://doi.org/10.1038/ncomms5213\n\n[18] Preskill, J.: Quantum computing in the nisq era and beyond. Quantum 2, 79 (Aug 2018). https://doi.org/10.22331/q-2018-08-06-79, http://dx.doi.org/10.22331/q-2018-08-06-79\n\n[19] Rebentrost, P., Mohseni, M., Lloyd, S.: Quantum support vector machine for big data classification. Phys. Rev. Lett. 113, 130503 (Sep 2014). https://doi.org/10.1103/PhysRevLett.113.130503, https://link.aps.org/doi/10.1103/PhysRevLett.113.130503\n\n[20] Shor, P.W.: Fault-tolerant quantum computation (1997)\n\n[21] Smith, K.N., Viszlai, J., Seifert, L.M., et al.: Fast fingerprinting of cloud-based nisq quantum computers. In: 2023 IEEE International Symposium on Hardware Oriented Security and Trust (HOST). pp. 1‚Äì12 (2023). https://doi.org/10.1109/HOST55118.2023.10133778\n\n[22] Tindall, J., Fishman, M., Stoudenmire, E.M., Sels, D.: Efficient tensor network simulation of ibm‚Äôs eagle kicked ising experiment. PRX Quantum 5, 010308 (Jan 2024). https://doi.org/10.1103/PRXQuantum.5.010308, https://link.aps.org/doi/10.1103/PRXQuantum.5.010308\n\n[23] Wendin, G.: Quantum information processing with superconducting circuits: a perspective (2023)"
    }
}