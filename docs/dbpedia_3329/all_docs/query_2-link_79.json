{
    "id": "dbpedia_3329_2",
    "rank": 79,
    "data": {
        "url": "https://dl.acm.org/doi/10.1145/3459995",
        "read_more_link": "",
        "language": "en",
        "title": "Creativity in CS1: A Literature Review",
        "top_image": "https://dl.acm.org/cms/asset/d9fd35ca-dc26-4662-98e7-5837138d5f34/3494072.cover.jpg",
        "meta_img": "https://dl.acm.org/cms/asset/d9fd35ca-dc26-4662-98e7-5837138d5f34/3494072.cover.jpg",
        "images": [
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/acm-dl-logo-white-1ecfb82271e5612e8ca12aa1b1737479.png",
            "https://dl.acm.org/doi/10.1145/specs/products/acm/releasedAssets/images/acm-logo-1-ad466e729c8e2a97780337b76715e5cf.png",
            "https://dl.acm.org/pb-assets/icons/DOs/default-profile-1543932446943.svg",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/footer-logo1-45ae33115db81394d8bd25be65853b77.png",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/Default_image_lazy-0687af31f0f1c8d4b7a22b686995ab9b.svg",
            "https://dl.acm.org/pb-assets/icons/DOs/default-profile-1543932446943.svg",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/loader-7e60691fbe777356dc81ff6d223a82a6.gif",
            "https://dl.acm.org/pb-assets/icons/DOs/default-profile-1543932446943.svg",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/acm-logo-dl-8437178134fce530bc785276fc316cbf.png",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/acm-logo-3-10aed79f3a6c95ddb67053b599f029af.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Creativity",
            "literature review"
        ],
        "tags": null,
        "authors": [
            "Canada View Profile",
            "Sadia Sharmin"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Computer science is a fast-growing field in today’s digitized age, and working in\nthis industry often requires creativity and innovative thought. An issue within computer\nscience education, however, is that large introductory programming courses often ...",
        "meta_lang": "en",
        "meta_favicon": "/pb-assets/head-metadata/apple-touch-icon-1574252172393.png",
        "meta_site_name": "ACM Transactions on Computing Education",
        "canonical_link": "https://dl.acm.org/doi/10.1145/3459995",
        "text": "Abstract\n\nComputer science is a fast-growing field in today’s digitized age, and working in this industry often requires creativity and innovative thought. An issue within computer science education, however, is that large introductory programming courses often involve little opportunity for creative thinking within coursework. The undergraduate introductory programming course (CS1) is notorious for its poor student performance and retention rates across multiple institutions. Integrating opportunities for creative thinking may help combat this issue by adding a personal touch to course content, which could allow beginner CS students to better relate to the abstract world of programming. Research on the role of creativity in computer science education (CSE) is an interesting area with a lot of room for exploration due to the complexity of the phenomenon of creativity as well as the CSE research field being fairly new compared to some other education fields where this topic has been more closely explored.\n\nTo contribute to this area of research, this article provides a literature review exploring the concept of creativity as relevant to computer science education and CS1 in particular. Based on the review of the literature, we conclude creativity is an essential component to computer science, and the type of creativity that computer science requires is in fact, a teachable skill through the use of various tools and strategies. These strategies include the integration of open-ended assignments, large collaborative projects, learning by teaching, multimedia projects, small creative computational exercises, game development projects, digitally produced art, robotics, digital story-telling, music manipulation, and project-based learning. Research on each of these strategies and their effects on student experiences within CS1 is discussed in this review. Last, six main components of creativity-enhancing activities are identified based on the studies about incorporating creativity into CS1. These components are as follows: Collaboration, Relevance, Autonomy, Ownership, Hands-On Learning, and Visual Feedback. The purpose of this article is to contribute to computer science educators’ understanding of how creativity is best understood in the context of computer science education and explore practical applications of creativity theory in CS1 classrooms. This is an important collection of information for restructuring aspects of future introductory programming courses in creative, innovative ways that benefit student learning.\n\nReferences\n\n[1]\n\nAli Alharbi, David Paul, Frans Henskens, and Michael Hannaford. 2011. An investigation into the learning styles and self-regulated learning strategies for computer science students. In Proceedings of the 28th Annual Conference of the Australasian Society for Computers in Learning in Tertiary Education: Changing Demands, Changing Directions (ASCILITE’11). Australasian Society for Computers in Learning in Tertiary Education (ASCILITE), Sydney, Australia, 36–46.\n\n[2]\n\nTeresa M. Amabile. 1983. The social psychology of creativity: A componential conceptualization. J. Pers. Soc. Psychol. 45, 2 (1983), 357.\n\n[3]\n\nHoda Amer and Saad Harous. 2017. Smart-learning course transformation for an introductory programming course. In Proceedings of the IEEE 17th International Conference on Advanced Learning Technologies (ICALT’17). IEEE Computer Society, Washington, DC, 463–465.\n\n[4]\n\nHoda Amer and Walid Ibrahim. 2014. Using the iPad as a pedagogical tool to enhance the learning experince for novice programing students. In Proceedings of the IEEE Global Engineering Education Conference (EDUCON’14). IEEE Computer Society, Washington, DC, 178–183.\n\n[5]\n\nMikko Apiola, Matti Lattu, and Tomi A. Pasanen. 2010. Creativity and intrinsic motivation in computer science education: Experimenting with robots. In Proceedings of the 15th Annual Conference on Innovation and Technology in Computer Science Education. Association for Computing Machinery, New York, NY, 199–203.\n\n[6]\n\nOwen Astrachan and Amy Briggs. 2012. The CS principles project. ACM Inroads 3, 2 (2012), 38–42.\n\n[7]\n\nTheresa Beaubouef and John Mason. 2005. Why the high attrition rate for computer science students. ACM SIGCSE Bull. 37, 2 (Jan. 2005), 103–106. https://doi.org/10.1145/1083431.1083474\n\n[8]\n\nJens Bennedsen and Michael E. Caspersen. 2007. Failure rates in introductory programming. ACM SIGCSE Bull. 39, 2 (Jan. 2007), 32–36. https://doi.org/10.1145/1272848.1272879\n\n[9]\n\nAudrey Bennett, Ron Eglash, Michael Lachney, and William Babbitt. 2016. Design agency: Diversifying computer science at the intersections of creativity and culture. In Revolutionizing Education through Web-based Instruction. IGI Global, Pennsylvania, 35–56.\n\n[10]\n\nSusan Bergin and Ronan Reilly. 2005. The influence of motivation and comfort-level on learning to program. In Proceedings of the 17th Workshop on Psychology of Programming (PPIG’05). Psychology of Programming Interest Group, UK, 293–304.\n\n[11]\n\nSusan Bergin and Ronan Reilly. 2006. Predicting introductory programming performance: A multi-institutional multivariate study. Comput. Sci. Educ. 16, 4 (2006), 303–323.\n\n[12]\n\nMaureen Biggers, Anne Brauer, and Tuba Yilmaz. 2008. Student perceptions of computer science: A retention study comparing graduating seniors with cs leavers. SIGCSE Bull. 40, 1 (2008), 402–406.\n\n[13]\n\nGlenn D. Blank, Soma Roy, Shreeram Sahasrabudhe, William M. Pottenger, and G. Drew Kessler. 2003. Adapting multimedia for diverse student learning styles. J. Comput. Sci. Coll. 18, 3 (2003), 45–58.\n\n[14]\n\nShawn Bowers and Kathie Yerion. 2013. Programming personal robots within an introductory computer science course for engineering majors. J. Comput. Sci. Coll. 29, 1 (2013), 133–139.\n\n[15]\n\nKaren Brennan and Mitchel Resnick. 2012. New frameworks for studying and assessing the development of computational thinking. In Proceedings of the 2012 Annual Meeting of the American Educational Research Association, Vancouver, Canada, Vol. 1. AERA, Washington, D.C., 25.\n\n[16]\n\nChristine Bruce, Lawrence Buckingham, John Hynd, Camille McMahon, Mike Roggenkamp, and Ian Stoodley. 2004. Ways of experiencing the act of learning to program: A phenomenographic study of introductory programming students at university. J. Inf. Technol. Educ.: Res. 3, 1 (2004), 145–160.\n\n[17]\n\nLeah Buechley, Nwanua Elumeze, Camille Dodson, and Michael Eisenberg. 2005. Quilt snaps: A fabric based computational construction kit. In IEEE International Workshop on Wireless and Mobile Technologies in Education (WMTE’05). IEEE Computer Society, Washington, DC.\n\n[18]\n\nDonald Chinn, Judy Sheard, Angela Carbone, and Mikko-Jussi Laakso. 2010. Study habits of CS1 students: What do they do outside the classroom? In Proceedings of the 12th Australasian Conference on Computing Education-Volume 103. Australian Computer Society, Inc., Sydney, Australia, 53–62.\n\n[19]\n\nMihaly Csikszentmihalyi. 1996. Flow and the Psychology of Discovery and Invention. Harper Perennial, New York, NY.\n\n[20]\n\nAndrea A. DiSessa. 2001. Changing Minds: Computers, Learning, and Literacy. MIT Press, Cambridge, MA.\n\n[21]\n\nDwight Egbert, George Bebis, Meggin McIntosh, Nancy LaTourrette, and Aniruddha Mitra. 2002. Computer vision research as a teaching tool in CS1. In Proceedings of the 32nd Annual Frontiers in Education, Vol. 1. IEEE Computer Society, Washington, DC, T4G–T4G. https://doi.org/10.1109/FIE.2002.1158014\n\n[22]\n\nRon Eglash, Audrey Bennett, Casey O’donnell, Sybillyn Jennings, and Margaret Cintorino. 2006. Culturally situated design tools: Ethnocomputing from field site to classroom. Am. Anthropol. 108, 2 (2006), 347–362.\n\n[23]\n\nPaul Gestwicki and Khuloud Ahmad. 2010. A pilot study on the impact of creative achievement on academic achievement in media-oriented CS1. J. Comput. Sci. Coll. 26, 1 (2010), 85–92.\n\n[24]\n\nFrederik Gossen, Dennis Kühn, Tiziana Margaria, and Anna-Lena Lamprecht. 2018. Computational thinking: Learning by doing with the Cinco adventure game tool. In Proceedings of the IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC’18), Vol. 1. IEEE Computer Society, Washington, DC, 990–999.\n\n[25]\n\nIra Greenberg, Deepak Kumar, and Dianna Xu. 2012. Creative coding and visual portfolios for CS1. In Proceedings of the 43rd ACM Technical Symposium on Computer Science Education (SIGCSE’12). Association for Computing Machinery, New York, NY, 247–252. https://doi.org/10.1145/2157136.2157214\n\n[26]\n\nIra Greenberg, Deepak Kumar, and Dianna Xu. 2013. Computational art and creative coding: Teaching CS1 with processing. In Proceeding of the 44th ACM Technical Symposium on Computer Science Education. ACM, Association for Computing Machinery, New York, NY, 761–761.\n\n[27]\n\nMark Guzdial. 2013. Exploring hypotheses about media computation. In Proceedings of the 9th Annual International ACM Conference on International Computing Education Research. ACM, Association for Computing Machinery, New York, NY, 19–26.\n\n[28]\n\nMichael Haungs, Christopher Clark, John Clements, and David Janzen. 2012. Improving first-year success and retention through interest-based CS0 courses. In Proceedings of the 43rd ACM Technical Symposium on Computer Science Education. Association for Computing Machinery, New York, NY, 589–594.\n\n[29]\n\nCristyne Hébert and Jennifer Jenson. 2020. Making in schools: Student learning through an e-textiles curriculum. Stud. Cult. Pol. Educ. 41, 5 (2020), 740–761.\n\n[30]\n\nNed Herrmann. 1996. The Whole Brain Business Book. McGraw–Hill, New York, NY.\n\n[31]\n\nLexis F. Higgins. 1999. Applying principles of creativity management to marketing research efforts in high-technology markets. Industr. Market. Manage. 28, 3 (1999), 305–317.\n\n[32]\n\nSusan Horwitz, Susan H. Rodger, Maureen Biggers, David Binkley, C. Kolin Frantz, Dawn Gundermann, Susanne Hambrusch, Steven Huss-Lederman, Ethan Munson, Barbara Ryder, et al. 2009. Using peer-led team learning to increase participation and success of under-represented groups in introductory computer science. ACM SIGCSE Bull. 41, 1 (2009), 163–167.\n\n[33]\n\nGayithri Jayathirtha and Yasmin B. Kafai. 2020. Interactive stitch sampler: A synthesis of a decade of research on using electronic textiles to answer the who, where, how, and what for K–12 computer science education. ACM Trans. Comput. Educ. 20, 4, Article 28 (Oct. 2020), 29 pages. https://doi.org/10.1145/3418299\n\n[34]\n\nMehdi Jazayeri. 2015. Combining mastery learning with project-based learning in a first programming course: An experience report. In Proceedings of the IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol. 2. IEEE Computer Society, Washington, DC, 315–318.\n\n[35]\n\nMary Elizabeth Jones, Melanie Kisthardt, and Marie A. Cooper. 2011. Interdisciplinary teaching: Introductory programming via creative writing. In Proceedings of the 42nd ACM Technical Symposium on Computer Science Education. Association for Computing Machinery, New York, NY, 523–528.\n\n[36]\n\nYatta Kanu and Mark Glor. 2006. ‘Currere’ to the rescue? Teachers as ‘amateur intellectuals’ in a knowledge society. J. Can. Assoc. Curric. Stud. 4, 2 (2006), 101–122.\n\n[37]\n\nJames C. Kaufman and Robert J. Sternberg. 2010. The Cambridge Handbook of Creativity. Cambridge University Press, Cambridge, United Kingdom.\n\n[38]\n\nJohn M. Keller. 1987. Development and use of the ARCS model of instructional design. J. Instruct. Dev. 10, 3 (1987), 2.\n\n[39]\n\nJohn M. Keller. 2000. How to integrate learner motivation planning into lesson planning: The ARCS model approach. In VII Semanario. Santiago, Cuba, 13 pages.\n\n[40]\n\nJohn M. Keller. 2009. Motivational Design for Learning and Performance: The ARCS Model Approach. Springer Science & Business Media, Berlin.\n\n[41]\n\nJ. M. Keller. 2010. Motivational Design for Learning and Performance: The ARCS Model Approach. Springer, New York, NY.\n\n[42]\n\nAllen Kent and J. G. Williams. 1996. Encyclopedia of Computer Science and Technology. Marcel Dekker Inc., New York, NY.\n\n[43]\n\nPäivi Kinnunen and Lauri Malmi. 2006. Why students drop out CS1 course? In Proceedings of the 2006 International Workshop on Computing Education Research (ICER’06). Association for Computing Machinery, New York, NY, 97–108. https://doi.org/10.1145/1151588.1151604\n\n[44]\n\nMaria Knobelsdorf and Ralf Romeike. 2008. Creativity as a pathway to computer science. In Proceedings of the 13th Annual Conference on Innovation and Technology in Computer Science Education. Association for Computing Machinery, New York, NY, 286–290.\n\n[45]\n\nKarim R. Lakhani and Robert G. Wolf. 2005. Why hackers do what they do: Understanding motivation effort in free/open source software projects. In Perspectives on Free/OS Software, J. Feller et al (Ed.). MIT Press, Cambridge, MA, 3–22.\n\n[46]\n\nCatherine Lang, Judy Mckay, and Sue Lewis. 2007. Seven factors that influence ICT student achievement. ACM SIGCSE Bull. 39, 3 (2007), 221. https://doi.org/10.1145/1269900.1268849\n\n[47]\n\nGary Lewandowski, Elizabeth Johnson, and Michael Goldweber. 2005. Fostering a creative interest in computer science. In Proceedings of the 36th SIGCSE Technical Symposium on Computer Science Education (SIGCSE’05). Association for Computing Machinery, New York, NY, 535–539. https://doi.org/10.1145/1047344.1047512\n\n[48]\n\nColleen M. Lewis, Ken Yasuhara, and Ruth E. Anderson. 2011. Deciding to major in computer science: A grounded theory of students’ self-assessment of ability. In Proceedings of the 7th International Workshop on Computing Education Research (ICER’11). Association for Computing Machinery, New York, NY, 3–10. https://doi.org/10.1145/2016911.2016915\n\n[49]\n\nRaymond Lister, Anders Berglund, Ilona Box, Chris Cope, Arnold Pears, Chris Avram, Mat Bower, Angela Carbone, Bill Davey, Michael de Raadt, et al. 2007. Differing ways that computing academics understand teaching. In Proceedings of the 9th Australasian Conference on Computing Education, Volume 66. Australian Computer Society, Inc., Sydney, Australia, 97–106.\n\n[50]\n\nRaymond Lister, Otto Seppälä, Beth Simon, Lynda Thomas, Elizabeth S. Adams, Sue Fitzgerald, William Fone, John Hamer, Morten Lindholm, Robert Mccartney, et al.2004. A multi-national study of reading and tracing skills in novice programmers. ACM SIGCSE Bull. 36, 4 (Jan. 2004), 119–150. https://doi.org/10.1145/1041624.1041673\n\n[51]\n\nBrian Magerko, Jason Freeman, Tom Mcklin, Mike Reilly, Elise Livingston, Scott Mccoid, and Andrea Crews-Brown. 2016. EarSketch: A STEAM-based approach for underrepresented populations in high school computer science education. ACM Trans. Comput. Educ. 16, 4, Article 14 (Sept. 2016), 25 pages. https://doi.org/10.1145/2886418\n\n[52]\n\nCharlie McDowell, Linda Werner, Heather E. Bullock, and Julian Fernald. 2006. Pair programming improves student retention, confidence, and program quality. Commun. ACM 49, 8 (2006), 90–95.\n\n[53]\n\nMonica M. McGill. 2012. Learning to program with personal robots: Influences on student motivation. ACM Trans. Comput. Educ. 12, 1 (2012), 4.\n\n[54]\n\nLee Dee Miller, Leen-Kiat Soh, Vlad Chiriacescu, Elizabeth Ingraham, Duane F. Shell, and Melissa Patterson Hazley. 2014. Integrating computational and creative thinking to improve learning and performance in CS1. In Proceedings of the 45th ACM Technical Symposium on Computer Science Education. Association for Computing Machinery, New York, NY, 475–480.\n\n[55]\n\nL. Dee Miller, Leen-Kiat Soh, Vlad Chiriacescu, Elizabeth Ingraham, Duane F. Shell, Stephen Ramsay, and Melissa Patterson Hazley. 2013. Improving learning of computational thinking using creative thinking exercises in CS-1 computer science courses. In Proceedings of the IEEE Frontiers in Education Conference (FIE’13). IEEE Computer Society, Washington, DC, 1426–1432.\n\n[56]\n\nMarco T. Morazán. 2010. Functional video games in the CS1 classroom. In Proceedings of the International Symposium on Trends in Functional Programming. Springer, New York, NY, 166–183.\n\n[57]\n\nV. Anantha Narayanan, C. K. Shyamala, and C. Shunmuga Velayutham. 2018. Thinker: A physical computing tool kit for computational thinking. In Proceedings of the IEEE 18th International Conference on Advanced Learning Technologies (ICALT’18). IEEE Computer Society, Washington, DC, 298–300. https://doi.org/10.1109/ICALT.2018.00075\n\n[58]\n\nAllen Newell, J. C. Shaw, and Herbert Alexander Simon. 1959. The Processes of Creative Thinking. RAND Corporation, Santa Monica, CA.\n\n[59]\n\nSeymour Papert. 1996. An exploration in the space of mathematics educations. Int. J. Comput. Math. Learn. 1, 1 (1996), 95–123.\n\n[60]\n\nSeymour Papert and Idit Harel. 1991. Situating constructionism. In Constructionism, Seymour Papert and Idit Harel (Eds.). Ablex Publishing Corporation, Norwood, NJ, 1–11.\n\n[61]\n\nMarkeya S. Peteranetz, Abraham E. Flanigan, Duane F. Shell, and Leen-Kiat Soh. 2018. Helping engineering students learn in introductory computer science (CS1) using computational creativity exercises (CCEs). IEEE Trans. Educ. 61, 3 (Aug. 2018), 195–203. https://doi.org/10.1109/TE.2018.2804350\n\n[62]\n\nMarkeya S. Peteranetz, Shiyuan Wang, Duane F. Shell, Abraham E. Flanigan, and Leen-Kiat Soh. 2018. Examining the impact of computational creativity exercises on college computer science students’ learning, achievement, self-efficacy, and creativity. In Proceedings of the 49th ACM Technical Symposium on Computer Science Education. Association for Computing Machinery, New York, NY, 155–160.\n\n[63]\n\nAndrew Petersen, Michelle Craig, Jennifer Campbell, and Anya Tafliovich. 2016. Revisiting why students drop CS1. In Proceedings of the 16th Koli Calling International Conference on Computing Education Research. Association for Computing Machinery, New York, NY, 71–80. https://doi.org/10.1145/2999541.2999552\n\n[64]\n\nLeo Porter and Beth Simon. 2013. Fostering creativity in CS1 by hosting a computer science art show. ACM Inroads 4, 1 (2013), 29–31.\n\n[65]\n\nMareen Przybylla. 2016. Situating physical computing in secondary CS education. In Proceedings of the 2016 ACM Conference on International Computing Education Research. Association for Computing Machinery, New York, NY, 287–288.\n\n[66]\n\nMareen Przybylla and Ralf Romeike. 2017. The nature of physical computing in schools: Findings from three years of practical experience. In Proceedings of the 17th Koli Calling International Conference on Computing Education Research. Association for Computing Machinery, New York, NY, 98–107.\n\n[67]\n\nEvgeny Pyshkin. 2017. Liberal arts in a digitally transformed world: Revisiting a case of software development education. In Proceedings of the 13th Central & Eastern European Software Engineering Conference in Russia. Association for Computing Machinery, New York, NY, 1–7.\n\n[68]\n\nYizhou Qian and James Lehman. 2017. Students’ misconceptions and other difficulties in introductory programming: A literature review. ACM Trans. Comput. Educ. 18 (10 2017), 1–24. https://doi.org/10.1145/3077618\n\n[69]\n\nLauren Rich, Heather Perry, and Mark Guzdial. 2004. A CS1 course designed to address interests of women. SIGCSE Bull. 36, 1 (2004), 190–194.\n\n[70]\n\nDavid L. Rodgers and Beverly J. Withrow-Thorton. 2005. The effect of instructional media on learner motivation. Int. J. Instruct. Media 32, 4 (2005), 333.\n\n[71]\n\nRalf Romeike. 2006. Creative students: What can we learn from them for teaching computer science? In Proceedings of the 6th Baltic Sea Conference on Computing Education Research: Koli Calling 2006. Association for Computing Machinery, New York, NY, 149–150.\n\n[72]\n\nRalf Romeike. 2007. Applying creativity in CS high school education: Criteria, teaching example and evaluation. In Proceedings of the 7th Annual Finnish/Baltic Sea Conference on Computer Science Education, Vol. 88. Association for Computing Machinery, New York, NY, 87–96.\n\n[73]\n\nRalf Romeike. 2007. Three drivers for creativity in computer science education. In Proceedings of the IFIP Conference on “Informatics, Mathematics and ICT: A Golden Triangle.”College of Computer and Information Science, Boston, MA, 10.\n\n[74]\n\nRalf Romeike. 2008. The contribution of computer science education in a creative society. In Proceedings of the IFIP World Computer Congress, TC 3. Springer, New York, NY, 237–244.\n\n[75]\n\nRalf Romeike. 2008. Towards students’ motivation and interest: Teaching tips for applying creativity. In Proceedings of the 8th International Conference on Computing Education Research (Koli’08). Association for Computing Machinery, New York, NY, 113–114.\n\n[76]\n\nNathan Rountree, Janet Rountree, Anthony Robins, and Robert Hannah. 2004. Interacting factors that predict success and failure in a CS1 course. https://doi.org/10.1145/1044550.1041669\n\n[77]\n\nRichard M. Ryan and Edward L. Deci. 2000. Self-determination theory and the facilitation of intrinsic motivation, social development, and well-being. Am. Psychol. 55, 1 (2000), 68.\n\n[78]\n\nSarah Ryan, Julia Kaufman, Joel Greenhouse, Ruicong She, and Judy Shi. 2016. The effectiveness of blended online learning courses at the community college level. Commun. Coll. J. Res. Pract. 40, 4 (2016), 285–298. https://doi.org/10.1080/10668926.2015.1044584arXiv:https://doi.org/10.1080/10668926.2015.1044584\n\n[79]\n\nAndrea Salgian, Teresa M. Nakra, Christopher Ault, and Yunfeng Wang. 2013. Teaching creativity in computer science. In Proceedings of the 44th ACM Technical Symposium on Computer Science Education. Association for Computing Machinery, New York, NY, 123–128.\n\n[80]\n\nDaniel Saunders and Paul Thagard. 2005. Creativity in computer science. In Creativity across Domains: Faces of the Muse, James C. Kaufman and John Baer (Eds.). Lawrence Erlbaum Associates, Mahwah, NJ.\n\n[81]\n\nR. Keith Sawyer. 2006. Educating for innovation. Think. Skills Creativ. 1, 1 (2006), 41–48.\n\n[82]\n\nJessica Young Schmidt. 2020. Reviewing CS1 materials through a collaborative software engineering exercise: An experience report. In Proceedings of the 51st ACM Technical Symposium on Computer Science Education. Association for Computing Machinery, New York, NY, 379–385.\n\n[83]\n\nGreg Scragg, Doug Baldwin, and Hans Koomen. 1994. Computer science needs an insight-based curriculum. In Proceedings of the 25th SIGCSE Symposium on Computer Science Education (SIGCSE’94). Association for Computing Machinery, New York, NY, 150–154. https://doi.org/10.1145/191029.191092\n\n[84]\n\nKimberly Seltzer and Tom Bentley. 1999. The Creative Age: Knowledge and Skills for the New Economy. Demos, London, UK.\n\n[85]\n\nElaine Seymour and Nancy M. Hewitt. 1997. Talking About Leaving: Why Undergraduates Leave the Sciences. Westview Press, Boulder, CO.\n\n[86]\n\nDavid Williamson Shaffer and Mitchel Resnick. 1999. “Thick” authenticity: New media and authentic learning. J. Interact. Learn. Res. 10, 2 (1999), 195–216.\n\n[87]\n\nSadia Sharmin, Daniel Zingaro, and Clare Brett. 2020. Weekly Open-ended exercises and student motivation in CS1. In Proceedings of the 20th Koli Calling International Conference on Computing Education Research (Koli Calling’20). Association for Computing Machinery, New York, NY, Article 33, 10 pages. https://doi.org/10.1145/3428029.3428035\n\n[88]\n\nDuane F. Shell, Melissa Patterson Hazley, Leen-Kiat Soh, L. Dee Miller, Vlad Chiriacescu, and Elizabeth Ingraham. 2014. Improving learning of computational thinking using computational creativity exercises in a college CSI computer science course for engineers. In Proceedings of the IEEE Frontiers in Education Conference (FIE’14). IEEE Computer Society, Washington, DC, 1–7.\n\n[89]\n\nDuane F. Shell, Leen-Kiat Soh, Abraham E. Flanigan, Markeya S. Peteranetz, and Elizabeth Ingraham. 2017. Improving students’ learning and achievement in CS classrooms through computational creativity exercises that integrate computational and creative thinking. In Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education. Association for Computing Machinery, New York, NY, 543–548.\n\n[90]\n\nBeth Simon, Julian Parris, and Jaime Spacco. 2013. How we teach impacts student learning: Peer instruction vs. lecture in CS0. In Proceeding of the 44th ACM Technical Symposium on Computer Science Education. ACM, Association for Computing Machinery, New York, NY, 41–46.\n\n[91]\n\nDean Keith Simonton. 2000. Creativity: Cognitive, personal, developmental, and social aspects. Am. Psychol. 55, 1 (2000), 151.\n\n[92]\n\nSebastien Siva, Tacksoo Im, Tom McKlin, Jason Freeman, and Brian Magerko. 2018. Using music to engage students in an introductory undergraduate programming course for non-majors. In Proceedings of the 49th ACM Technical Symposium on Computer Science Education (SIGCSE’18). Association for Computing Machinery, New York, NY, 975–980. https://doi.org/10.1145/3159450.3159468\n\n[93]\n\nHannah Snyder. 2019. Literature review as a research methodology: An overview and guidelines. J. Bus. Res. 104 (2019), 333–339.\n\n[94]\n\nDavid Spendlove. 2008. Creativity in education: A review. Des. Technol. Educ. 10, 2 (2008), 9–18.\n\n[95]\n\nBen Stephenson. 2009. Using python and QuickDraw to foster student engagement in CS1. In Proceedings of the 24th ACM SIGPLAN Conference Companion on Object Oriented Programming Systems Languages and Applications. Association for Computing Machinery, New York, NY, 675–682.\n\n[96]\n\nDeborah J. Stipek. 1996. Motivation and instruction. In Handbook of Educational Psychology, David C. Berliner and Robert C. Calfee (Eds.). Routledge, Abingdon, England, 85–113.\n\n[97]\n\nNathaniel Titterton, Colleen M. Lewis, and Michael J. Clancy. 2010. Experiences with lab-centric instruction. Comput. Sci. Educ. 20, 2 (2010), 79–102.\n\n[98]\n\nRobert J. Vallerand, Luc G. Pelletier, Marc R. Blais, Nathalie M. Briere, Caroline Senecal, and Evelyne F. Vallieres. 1992. The academic motivation scale: A measure of intrinsic, extrinsic, and amotivation in education. Educ. Psychol. Meas. 52, 4 (1992), 1003–1017.\n\n[99]\n\nTammy VanDeGrift. 2007. Encouraging creativity in introductory computer science programming assignments. In Proceedings of the American Society for Engineering Education Conference. American Society for Engineering Education, Washington, DC, 8–13.\n\n[100]\n\nTammy VanDeGrift. 2015. Supporting creativity and user interaction in CS 1 homework assignments. In Proceedings of the 46th ACM Technical Symposium on Computer Science Education (SIGCSE’15). Association for Computing Machinery, New York, NY, 54–59. https://doi.org/10.1145/2676723.2677250\n\n[101]\n\nKaren J. Viechnicki, Roy M. Bohlin, and William D. Milheim. 1990. Instructional motivation of adult learners: An analysis of student perceptions in continuing education. J. Contin. High. Educ. 38, 3 (1990), 10–14.\n\n[102]\n\nChristopher Watson and Frederick W. B. Li. 2014. Failure rates in introductory programming revisited. In Proceedings of the 2014 Conference on Innovation & Technology in Computer Science Education (ITiCSE’14). Association for Computing Machinery, New York, NY, 39–44. https://doi.org/10.1145/2591708.2591749\n\n[103]\n\nRichard Wicentowski and Tia Newhall. 2005. Using image processing projects to teach CS1 topics. ACM SIGCSE Bull. 37, 1 (2005), 287–291.\n\n[104]\n\nGeoff Wong, Trish Greenhalgh, Gill Westhorp, Jeanette Buckingham, and Ray Pawson. 2013. RAMESES publication standards: Meta-narrative reviews. BMC Med. 11, 20 (2013), 987–1004. https://doi.org/10.1186/1741-7015-11-20\n\n[105]\n\nZoë Wood and Aaron Keen. 2015. Building worlds: Bridging imperative-first and object-oriented programming in CS1–CS2. In Proceedings of the 46th ACM Technical Symposium on Computer Science Education. Association for Computing Machinery, New York, NY, 144–149.\n\n[106]\n\nDaniel Zingaro. 2014. Peer instruction contributes to self-efficacy in CS1. In Proceedings of the 45th ACM Technical Symposium on Computer Science Education. Association for Computing Machinery, New York, NY, 373–378.\n\nCited By\n\nView all\n\nZhan ZHe LZhong XHow does problem-solving pedagogy affect creativity? A meta-analysis of empirical studiesFrontiers in Psychology10.3389/fpsyg.2024.128708215\n\nHogan EDriscoll JSoosai Raj AGriswold WPorter LMonga MLonati VBarendsen ESheard JPaterson JUncovering Meaningful Computing Contexts for Incarcerated College StudentsProceedings of the 2024 on Innovation and Technology in Computer Science Education V. 110.1145/3649217.3653632(701-707)\n\nMesser MBrown NKölling MShi MAutomated Grading and Feedback Tools for Programming Education: A Systematic ReviewACM Transactions on Computing Education10.1145/363651524:1(1-43)\n\nShow More Cited By\n\nIndex Terms\n\nCreativity in CS1: A Literature Review\n\nSocial and professional topics\n\nProfessional topics\n\nComputing education\n\nComputing education programs\n\nComputer science education\n\nCS1\n\nRecommendations\n\nIntroductory programming: a systematic literature review\n\nITiCSE 2018 Companion: Proceedings Companion of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education\n\nAs computing becomes a mainstream discipline embedded in the school curriculum and acts as an enabler for an increasing range of academic disciplines in higher education, the literature on introductory programming is growing. Although there have been ...\n\nApplying creativity in CS high school education: criteria, teaching example and evaluation\n\nKoli Calling '07: Proceedings of the Seventh Baltic Sea Conference on Computing Education Research - Volume 88\n\nThis paper describes an innovative method for teaching computer science in general high school education, illustrated with the example of introductory programming. Analyzing the literature in CS education research we found that creativity is rarely ...\n\nDeveloping Creativity in Computer Science Initial Teacher Education through Design Thinking\n\nUKICER '20: United Kingdom & Ireland Computing Education Research conference.\n\nDesign thinking is a valuable component in teacher education enabling the development of creativity amongst the cohort. Studies have been developed to capture the effects of discipline specific design thinking, however design thinking amongst Computer ...\n\nInformation & Contributors\n\nInformation\n\nPublished In\n\n312 pages\n\nEISSN:1946-6226\n\nDOI:10.1145/3494072\n\nEditor:\n\nAmy J. Ko\n\nUniversity of Washington, USA\n\nIssue’s Table of Contents\n\nPermission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from [email protected].\n\nPublisher\n\nAssociation for Computing Machinery\n\nNew York, NY, United States\n\nPublication History\n\nPublished: 01 November 2021\n\nAccepted: 01 September 2021\n\nRevised: 01 May 2021\n\nReceived: 01 July 2020\n\nPublished in TOCE Volume 22, Issue 2\n\nPermissions\n\nRequest permissions for this article.\n\nCheck for updates\n\nAuthor Tags\n\nCreativity\n\nliterature review\n\nQualifiers\n\nResearch-article\n\nRefereed\n\nContributors\n\nOther Metrics\n\nBibliometrics & Citations\n\nBibliometrics\n\nArticle Metrics\n\n7\n\nTotal Citations\n\nView Citations\n\n1,656\n\nTotal Downloads\n\nDownloads (Last 12 months)452\n\nDownloads (Last 6 weeks)43\n\nOther Metrics\n\nCitations\n\nCited By\n\nView all\n\nZhan ZHe LZhong XHow does problem-solving pedagogy affect creativity? A meta-analysis of empirical studiesFrontiers in Psychology10.3389/fpsyg.2024.128708215\n\nHogan EDriscoll JSoosai Raj AGriswold WPorter LMonga MLonati VBarendsen ESheard JPaterson JUncovering Meaningful Computing Contexts for Incarcerated College StudentsProceedings of the 2024 on Innovation and Technology in Computer Science Education V. 110.1145/3649217.3653632(701-707)\n\nMesser MBrown NKölling MShi MAutomated Grading and Feedback Tools for Programming Education: A Systematic ReviewACM Transactions on Computing Education10.1145/363651524:1(1-43)\n\nSmith GStephenson BStone JBattestilli LRebelsky SShoop LPairing Ungrading with Project-Based Learning in CS1 for Inherently Flexible Course DesignProceedings of the 55th ACM Technical Symposium on Computer Science Education V. 110.1145/3626252.3630903(1265-1271)\n\nMisbah MHakam AQamariah Umar FHarto MMuhammad NProject Based Learning (PjBL) Model in Science Learning: A Bibliometric AnalysisE3S Web of Conferences10.1051/e3sconf/202448204031482(04031)\n\nObaido GAgbo FAlvarado COyelere SAnalysis of Attrition Studies Within the Computer SciencesIEEE Access10.1109/ACCESS.2023.328007511(53736-53748)\n\nTang CYu YPoon CAn automated system with a versatile test oracle for assessing student programsComputer Applications in Engineering Education10.1002/cae.2257731:1(176-199)\n\nView Options\n\nGet Access\n\nLogin options\n\nCheck if you have access through your login credentials or your institution to get full access on this article.\n\nSign in\n\nFull Access\n\nView options\n\nPDF\n\nView or Download as a PDF file.\n\nPDF\n\neReader\n\nView online with eReader.\n\neReader\n\nFull Text\n\nView this article in Full Text.\n\nFull Text\n\nHTML Format\n\nView this article in HTML Format.\n\nHTML Format\n\nMedia\n\nFigures\n\nOther\n\nTables\n\nShare\n\nShare\n\nShare this Publication link\n\nCopied!\n\nCopying failed.\n\nShare on social media\n\nAffiliations\n\nSadia Sharmin\n\nUniversity of Toronto, Toronto, Canada\n\nRequest permissions Authors Info & Affiliations"
    }
}