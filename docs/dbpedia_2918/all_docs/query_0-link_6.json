{
    "id": "dbpedia_2918_0",
    "rank": 6,
    "data": {
        "url": "https://docs.kubos.com/0.0.3/libcsp/index.html",
        "read_more_link": "",
        "language": "en",
        "title": "CSP: Cubesat Space Protocol",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.kubos.com/0.0.3/kubos.png",
            "https://docs.kubos.com/0.0.3/libcsp/search/mag_sel.png",
            "https://docs.kubos.com/0.0.3/libcsp/search/close.png",
            "https://docs.kubos.com/0.0.3/libcsp/doxygen.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Cubesat Space Protocol (CSP) is a small protocol stack written in C. CSP is designed to ease communication between distributed embedded systems in smaller networks, such as Cubesats. The design follows the TCP/IP model and includes a transport protocol, a routing protocol and several MAC-layer interfaces. The core of libcsp includes a router, a socket buffer pool and a connection oriented socket API.\n\nDocs:\n\nOverview\n\nCSP Interfaces\n\nHow CSP uses memory\n\nMaximum Transfer Unit\n\nThe Protocol Stack\n\nNetwork Topology\n\nAPI Modules:\n\nCore\n\nBuffer\n\nCMP\n\nCSP\n\nCRC32\n\nDebug\n\nEndian\n\nError\n\nInterfaceList\n\nInterface\n\nPlatform\n\nRoutingTable\n\nTypes\n\nArchitecture Dependent\n\nClock\n\nMalloc\n\nQueue\n\nSemaphore\n\nSystem\n\nThread\n\nTime\n\nInterfaces\n\nCANInterface\n\nI2CInterface\n\nKISSInterface\n\nLOInterface\n\nDrivers"
    }
}