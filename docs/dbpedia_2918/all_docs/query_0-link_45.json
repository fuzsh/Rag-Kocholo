{
    "id": "dbpedia_2918_0",
    "rank": 45,
    "data": {
        "url": "https://githubhelp.com/libcsp/libcsp",
        "read_more_link": "",
        "language": "en",
        "title": "The libcsp from libcsp",
        "top_image": "https://githubhelp.com/favicon.svg",
        "meta_img": "https://githubhelp.com/favicon.svg",
        "images": [
            "https://githubhelp.com/assets/img/logo.svg",
            "https://github.com/libcsp/libcsp/actions/workflows/build-test.yml/badge.svg",
            "https://githubhelp.com/libcsp/doc/_images/csp.png",
            "https://avatars.githubusercontent.com/u/6966049?v=4",
            "https://avatars.githubusercontent.com/u/33853907?v=4",
            "https://avatars.githubusercontent.com/u/22232505?v=4",
            "https://avatars.githubusercontent.com/u/35066854?v=4",
            "https://avatars.githubusercontent.com/u/275183?s=40&v=4",
            "https://avatars.githubusercontent.com/u/5460596?v=4",
            "https://avatars.githubusercontent.com/u/42586041?v=4",
            "https://avatars.githubusercontent.com/u/1029999?s=40&u=efbdf768808dfbf00ca351f3fc7b213ec8953b79&v=4",
            "https://avatars.githubusercontent.com/u/71638987?v=4",
            "https://avatars.githubusercontent.com/u/23060007?v=4",
            "https://avatars.githubusercontent.com/u/34681323?s=40&u=741ade9bff52c28ba91c37c124b611ba356f3cbb&v=4",
            "https://avatars.githubusercontent.com/u/124855?s=30&u=9c274db446a20f7f1c23e8d0ec2c8fea8faecd23&v=4",
            "https://avatars.githubusercontent.com/u/545264?s=40&u=e4193d7c3a75320ed0c06822069cd19f205296cb&v=4",
            "https://avatars.githubusercontent.com/u/83201581?s=40&u=f4075bdde82e2988e6684d1b73d5bc57a87aaf9d&v=4",
            "https://avatars.githubusercontent.com/u/57446369?v=4",
            "https://avatars.githubusercontent.com/u/6450596?v=4",
            "https://avatars.githubusercontent.com/u/62430938?v=4",
            "https://avatars.githubusercontent.com/u/3180701?v=4",
            "https://avatars.githubusercontent.com/u/6190795?v=4",
            "https://avatars.githubusercontent.com/u/24488253?v=4",
            "https://avatars.githubusercontent.com/u/5177161?s=40&u=094e8c5f75fc5af481b693bf9bb1d6963a07d1ee&v=4",
            "https://avatars.githubusercontent.com/u/31589589?v=4",
            "https://avatars.githubusercontent.com/u/93954843?v=4",
            "https://avatars.githubusercontent.com/u/11031519?v=4",
            "https://avatars.githubusercontent.com/u/26788506?v=4",
            "https://avatars.githubusercontent.com/u/19479232?s=40&v=4",
            "https://avatars.githubusercontent.com/u/60161614?v=4",
            "https://avatars.githubusercontent.com/u/2781358?v=4",
            "https://avatars.githubusercontent.com/u/111593?v=4",
            "https://avatars.githubusercontent.com/u/10152?v=4",
            "https://avatars.githubusercontent.com/u/19172636?s=40&u=057d0f2a347fef668dfb80d54a6b181aa4c93545&v=4",
            "https://avatars.githubusercontent.com/u/12896581?s=40&u=5ea716499463c6e1c025e5873ec2208b3128e14b&v=4",
            "https://avatars.githubusercontent.com/u/8012860?v=4",
            "https://avatars.githubusercontent.com/u/2256008?s=40&v=4",
            "https://avatars.githubusercontent.com/u/32176872?s=40&u=260360d53ea4ccb9f5b1763d6267a4eecab1e963&v=4",
            "https://avatars.githubusercontent.com/u/59456868?s=40&u=9e089c07738140af81763723ac94e5fc29328f26&v=4",
            "https://avatars.githubusercontent.com/u/31916450?s=40&u=80023e7f10212cd64c8477a35115a94db33d1015&v=4",
            "https://avatars.githubusercontent.com/u/55955971?s=40&u=5aaec4bed8a471e7e918a2ed503c16d27a500145&v=4",
            "https://avatars.githubusercontent.com/u/351169?s=40&u=e282eed5a6c26f711c1a9764185b3e9573aa4399&v=4",
            "https://avatars.githubusercontent.com/u/33110495?s=40&u=ea7993405eb02d19f8ff8c178412dbc1fe913380&v=4",
            "https://avatars.githubusercontent.com/u/923021?s=40&u=4838561ab407df894b114bff724edce34c650f96&v=4",
            "https://avatars.githubusercontent.com/u/12473592?v=4",
            "https://avatars.githubusercontent.com/u/90781181?v=4",
            "https://avatars.githubusercontent.com/u/48057394?s=40&u=c8650659b84a2b8fdf55d9e064984e1160e2f1af&v=4",
            "https://avatars.githubusercontent.com/u/55418469?s=40&u=c1e7104fa1092bb0b6aab6c0c6c0a0e033166876&v=4",
            "https://avatars.githubusercontent.com/u/57244262?s=40&u=17da0ec3397dfa1a2a407bd35f5d715e38435531&v=4",
            "https://avatars.githubusercontent.com/u/11891037?s=40&u=91e499d7dcb147e9cc611ca1e8803ebe07b304dd&v=4",
            "https://avatars.githubusercontent.com/u/13159984?v=4",
            "https://avatars.githubusercontent.com/u/5057012?s=40&u=a5384d9ccf0cfbbaf05e5e5158e8c52020444a47&v=4",
            "https://avatars.githubusercontent.com/u/6835908?s=40&v=4",
            "https://avatars.githubusercontent.com/u/5460596?v=4",
            "https://avatars.githubusercontent.com/u/26608987?v=4",
            "https://avatars.githubusercontent.com/u/80447685?s=40&v=4",
            "https://avatars.githubusercontent.com/u/11021263?v=4",
            "https://avatars.githubusercontent.com/u/52613113?s=40&u=7189f6da75f3293397540aff1fa887ac4d2f449a&v=4",
            "https://avatars.githubusercontent.com/u/57327214?s=40&v=4",
            "https://avatars.githubusercontent.com/u/421871?s=40&u=b8122de4ded3d911857a567af29d7a6f48d85608&v=4",
            "https://avatars.githubusercontent.com/u/56552214?s=40&u=a6ee05ae02383b5701fe009f7731a827510565fa&v=4",
            "https://avatars.githubusercontent.com/u/43045582?s=40&u=34a8c19f471e3ffb68ba8715f0834b228c1c6f7f&v=4",
            "https://avatars.githubusercontent.com/u/71964582?s=40&u=c07f5d168ab4aacce5b4c3bb5f7f6d99ce6cee70&v=4",
            "https://avatars.githubusercontent.com/u/47484934?s=40&u=d71b9f0e2e59ad6ed778b9c6a009160495b4d656&v=4",
            "https://avatars.githubusercontent.com/u/6956476?s=40&u=6a5894d4b1d331d4b39028f402d2feafe2a0e920&v=4",
            "https://avatars.githubusercontent.com/u/25778208?s=40&u=0333a8b6bdcff8a8ad623cde86b767515513b09a&v=4",
            "https://avatars.githubusercontent.com/u/28064159?s=40&u=43899ac23d8ae64c4c747d4352a6125974b0e625&v=4",
            "https://avatars.githubusercontent.com/u/174689595?s=40&v=4",
            "https://avatars.githubusercontent.com/u/26634892?s=40&u=be81d68cbbcd6832b4d4f47eb82f556edce3d0ae&v=4",
            "https://avatars.githubusercontent.com/u/647106?v=4",
            "https://avatars.githubusercontent.com/u/4342302?v=4",
            "https://avatars.githubusercontent.com/u/29641307?s=40&v=4",
            "https://avatars.githubusercontent.com/u/50683509?s=40&u=9a6a876a2d4c1d14a67fddfbc3518411aed27540&v=4",
            "https://avatars.githubusercontent.com/u/41483463?v=4",
            "https://avatars.githubusercontent.com/u/35879895?s=40&u=f0594eea0c28773070db1753177e4f8d6c63061e&v=4",
            "https://avatars.githubusercontent.com/u/7620254?v=4",
            "https://avatars.githubusercontent.com/u/65247229?v=4",
            "https://avatars.githubusercontent.com/u/3375461?s=40&u=f2649f795c2d899a13ddd11d8fb4af302a56b8fd&v=4",
            "https://avatars.githubusercontent.com/u/3347879?s=40&v=4",
            "https://avatars.githubusercontent.com/u/16009455?s=40&v=4",
            "https://avatars.githubusercontent.com/u/39062223?s=40&v=4",
            "https://avatars.githubusercontent.com/u/43434313?s=40&u=6ac7401c7da405b3f1e03e836ca4ac86bb7e6360&v=4",
            "https://avatars.githubusercontent.com/u/31068129?s=40&u=722878c5fc5e9e9f0fe7ed51a644046afdd6befc&v=4",
            "https://avatars.githubusercontent.com/u/50077834?s=40&u=6fe5ee45ac016521a32bb955de6ea67354c2b1ea&v=4",
            "https://avatars.githubusercontent.com/u/21155067?s=40&u=ba5f93d14d502ccae476aba5fa02e9d4c85dbfc4&v=4",
            "https://avatars.githubusercontent.com/u/151612433?v=4",
            "https://avatars.githubusercontent.com/u/7601474?s=40&v=4",
            "https://avatars.githubusercontent.com/u/8005101?v=4",
            "https://avatars.githubusercontent.com/u/9271257?s=40&v=4",
            "https://avatars.githubusercontent.com/u/25797139?s=40&v=4",
            "https://avatars.githubusercontent.com/u/64594210?s=40&u=dcbc4a3ea28d0ed63c2e4277584f1800882a0cb8&v=4",
            "https://avatars.githubusercontent.com/u/171565140?s=40&v=4",
            "https://avatars.githubusercontent.com/u/6502679?s=40&u=8353a3e80c74b5fe896031f4567b3699d4fc4a82&v=4",
            "https://avatars.githubusercontent.com/u/53956357?s=40&u=8f369feed74fe6a843dbdffec384bfaee792ebae&v=4",
            "https://avatars.githubusercontent.com/u/25365583?s=40&u=63fbaae0490537299732c201d3af902febab489b&v=4",
            "https://avatars.githubusercontent.com/u/49306779?s=40&u=33ff43063fa07668c991a4ee5aabed7d279dc4c5&v=4",
            "https://avatars.githubusercontent.com/u/29914083?v=4",
            "https://avatars.githubusercontent.com/u/11367325?s=40&u=ee5d8cc346ad7d505bc25896ced9d53cdeae685e&v=4",
            "https://avatars.githubusercontent.com/u/73722088?s=40&u=de48d700bfe80a0fa1ff40be6569d5aec8020472&v=4",
            "https://avatars.githubusercontent.com/u/61212486?s=40&u=4b9182d4c8c95de870db3bd259489b07b809923d&v=4",
            "https://avatars.githubusercontent.com/u/36342359?s=40&u=7e5c61dccb2d49b507ddd9d6194fe25bd7c9c662&v=4",
            "https://avatars.githubusercontent.com/u/74956347?s=40&v=4",
            "https://avatars.githubusercontent.com/u/153563686?v=4",
            "https://avatars.githubusercontent.com/u/22593897?v=4",
            "https://avatars.githubusercontent.com/u/1643177?s=40&u=8d02816d0bd9eba36df3eb67db874b2f32613431&v=4",
            "https://avatars.githubusercontent.com/u/92068256?s=40&v=4",
            "https://avatars.githubusercontent.com/u/86821042?s=40&u=68fd3458f1c7043a8cea86c05c8baff13ef8d1c1&v=4",
            "https://avatars.githubusercontent.com/u/33395806?s=40&u=85f0d95e9d948a3608293fc661466f2fb7f09c11&v=4",
            "https://avatars.githubusercontent.com/u/63148538?s=40&v=4",
            "https://avatars.githubusercontent.com/u/31589589?v=4",
            "https://avatars.githubusercontent.com/u/19827477?s=40&u=201ba6c110bd3c3dd07f1a1456913c5e712179a1&v=4",
            "https://avatars.githubusercontent.com/u/156098680?v=4",
            "https://avatars.githubusercontent.com/u/22209943?s=40&u=718fadf330231b63887bc4773769b7db2635e83b&v=4",
            "https://avatars.githubusercontent.com/u/114852870?s=40&u=1c6f262605b387f05d5057cf097912e63dffbbf8&v=4",
            "https://avatars.githubusercontent.com/u/6352576?v=4",
            "https://avatars.githubusercontent.com/u/132281492?v=4",
            "https://avatars.githubusercontent.com/u/64110243?s=40&u=8254751328454cacb84ba551ccdcf22bcdee1b0e&v=4",
            "https://avatars.githubusercontent.com/u/94194538?s=40&v=4",
            "https://avatars.githubusercontent.com/u/79508119?s=40&u=cff93aaff60cd7b30f52d3a6d4445c9ca977241d&v=4",
            "https://avatars.githubusercontent.com/u/53432958?v=4",
            "https://avatars.githubusercontent.com/u/62590284?s=40&v=4",
            "https://avatars.githubusercontent.com/u/127350370?s=40&u=73c1b362d79e3824efaba1b886844322c22dc308&v=4",
            "https://avatars.githubusercontent.com/u/46729485?s=40&u=54a639c262e3de218b7df99a5659b7948dcc3303&v=4",
            "https://avatars.githubusercontent.com/u/400562?s=40&u=50ccd821d183d79093cd90fea5a8b33e077af1d7&v=4",
            "https://avatars.githubusercontent.com/u/7350203?v=4",
            "https://avatars.githubusercontent.com/u/65253049?s=40&u=35788029ba6373cb1e531c80c99483b1a81cdc0f&v=4",
            "https://avatars.githubusercontent.com/u/139346778?s=40&u=69344723fc6d38e3bd6845b4a790feca60c813d2&v=4",
            "https://avatars.githubusercontent.com/u/128910037?s=40&u=176fb07ef86da109ecae9d54e5516da1812b598a&v=4",
            "https://avatars.githubusercontent.com/u/1143890?s=40&u=daa7fb40ce428931a6f3cb27c3665fcd9c8f9aa6&v=4",
            "https://avatars.githubusercontent.com/u/121136?s=40&u=fcee7aaeac754e6ba98956dc428c24f256369641&v=4",
            "https://avatars.githubusercontent.com/u/40303456?s=40&u=703805eb0ddba47aa12ef2e0be8e0fa1a4bc8db3&v=4",
            "https://avatars.githubusercontent.com/u/23330229?s=40&u=fafbdc066881b67cdb8fca79c1b739b7b0196dfc&v=4",
            "https://avatars.githubusercontent.com/u/100305058?s=40&v=4",
            "https://avatars.githubusercontent.com/u/834432?s=40&v=4",
            "https://avatars.githubusercontent.com/u/1055112?s=40&u=46f2e1323d2f2e633972c372e4fe491bc5571d84&v=4",
            "https://avatars.githubusercontent.com/u/916785?s=40&v=4",
            "https://avatars.githubusercontent.com/u/18204690?s=40&v=4",
            "https://avatars.githubusercontent.com/u/825409?v=4",
            "https://avatars.githubusercontent.com/u/32309979?s=40&v=4",
            "https://avatars.githubusercontent.com/u/26634892?s=40&u=be81d68cbbcd6832b4d4f47eb82f556edce3d0ae&v=4",
            "https://avatars.githubusercontent.com/u/17832832?s=40&u=dc49af747a613d886134cee773a1a2af8ad8a287&v=4",
            "https://avatars.githubusercontent.com/u/5456674?s=40&v=4",
            "https://avatars.githubusercontent.com/u/2612557?s=40&v=4",
            "https://avatars.githubusercontent.com/u/34681323?s=40&u=741ade9bff52c28ba91c37c124b611ba356f3cbb&v=4",
            "https://avatars.githubusercontent.com/u/53252001?s=40&v=4",
            "https://avatars.githubusercontent.com/u/41234784?s=40&u=6b087d417100e15c2d08e97d8b3ddd44bfaa02ed&v=4",
            "https://avatars.githubusercontent.com/u/1378422?v=4",
            "https://avatars.githubusercontent.com/u/841039?s=40&v=4",
            "https://avatars.githubusercontent.com/u/1624243?s=40&v=4",
            "https://avatars.githubusercontent.com/u/3416009?s=40&v=4",
            "https://avatars.githubusercontent.com/u/124855?s=30&u=9c274db446a20f7f1c23e8d0ec2c8fea8faecd23&v=4",
            "https://avatars.githubusercontent.com/u/545264?s=40&u=e4193d7c3a75320ed0c06822069cd19f205296cb&v=4",
            "https://avatars.githubusercontent.com/u/19404372?s=40&v=4",
            "https://avatars.githubusercontent.com/u/21155067?s=40&u=ba5f93d14d502ccae476aba5fa02e9d4c85dbfc4&v=4",
            "https://avatars.githubusercontent.com/u/4373814?v=4",
            "https://avatars.githubusercontent.com/u/19308602?v=4",
            "https://avatars.githubusercontent.com/u/3050054?s=40&v=4",
            "https://avatars.githubusercontent.com/u/8470400?s=40&v=4",
            "https://avatars.githubusercontent.com/u/41003597?s=40&v=4",
            "https://avatars.githubusercontent.com/u/5875173?s=40&v=4",
            "https://avatars.githubusercontent.com/u/2959210?s=40&u=04ae16dd457b5259673b8e56e2d05ff0bc262c50&v=4",
            "https://avatars.githubusercontent.com/u/11069366?s=40&u=44cfb170cf6719f43594aba3df8ad9b35c9f80b4&v=4",
            "https://avatars.githubusercontent.com/u/1239352?s=40&v=4",
            "https://avatars.githubusercontent.com/u/5363028?s=40&v=4",
            "https://avatars.githubusercontent.com/u/6939621?s=40&v=4",
            "https://avatars.githubusercontent.com/u/14899064?s=40&u=ca366aff0e5c3140c2a9323202e640c96a4aa5b0&v=4",
            "https://avatars.githubusercontent.com/u/19301999?s=40&v=4",
            "https://avatars.githubusercontent.com/u/4569591?s=40&v=4",
            "https://avatars.githubusercontent.com/u/1026063?s=40&v=4",
            "https://avatars.githubusercontent.com/u/10152?v=4",
            "https://avatars.githubusercontent.com/u/20208008?s=40&v=4",
            "https://raw.githubusercontent.com/facebook/create-react-app/master/packages/cra-template/template/public/logo192.png",
            "https://camo.githubusercontent.com/c8f91d18976e27123643a926a2588b8d931a0292fd0b6532c3155379e8591629/68747470733a2f2f7675656a732e6f72672f696d616765732f6c6f676f2e706e67",
            "https://www.typescriptlang.org/favicon-32x32.png",
            "https://camo.githubusercontent.com/c04e16c05de80dadbdc990884672fc941fdcbbfbb02b31dd48c248d010861426/68747470733a2f2f7777772e74656e736f72666c6f772e6f72672f696d616765732f74665f6c6f676f5f736f6369616c2e706e67",
            "https://avatars2.githubusercontent.com/u/27804?s=200&v=4",
            "https://laravel.com/img/logomark.min.svg",
            "https://camo.githubusercontent.com/586ccf0aad9684edc821658cee04146cf36d1f1d5ec904bbefd72728909ccb2e/68747470733a2f2f64336a732e6f72672f6c6f676f2e737667",
            "https://avatars.githubusercontent.com/u/69631?v=4",
            "https://avatars.githubusercontent.com/u/6154722?v=4",
            "https://avatars.githubusercontent.com/u/1342004?v=4",
            "https://avatars.githubusercontent.com/u/1961952?v=4",
            "https://avatars.githubusercontent.com/u/1562726?v=4",
            "https://avatars.githubusercontent.com/u/18461506?v=4"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "libcsp",
            "libcsp"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Cubesat Space Protocol - A small network-layer delivery protocol designed for Cubesats from GithubHelp",
        "meta_lang": "en",
        "meta_favicon": "/favicon.svg",
        "meta_site_name": "GithubHelp libcsp,libcsp",
        "canonical_link": "https://githubhelp.com/",
        "text": "libcsp's Issues\n\nset csp_prio field per packet, not per connection.\n\nToday only one csp_prio may be selected for each connection using the csp_connect call. It should be possible to set different priorities on packets in the same connection. So the prio field should be added to csp_send, or we may extend the api with csp_send_prio(prio, conn, packet) which will then override the default priority set in the connection.\n\nCAN/ driver doesn't receive interface! multiple can interfaces on the same microcontroller not supported.\n\nHi!, I have implemented our drivers for your can interface, and it is working perfectly, but I have found an issue:\n\nWe have 2 can peripherals in our micro-controller, so we need to create 2 can interfaces, and route them independently to different destinations.\n\nI think this is happening because all of your hardware nodes only have \"one\" interface of each type. And yo have never deal with this issue.\n\nTo fix this problem some modifications needs to be done:\n\nUser needs to be able to create several instances of an interface. Right now interface is just a global variable declared in csp_if_can.c. Each interface would have at list a different name \"can0\", \"can1\".\n\n\"can_send\" function needs to receive as parameter a pointer to the interface. And also the tx_callback. Right now I see you are receiving the interface in the csp_can_tx function, but you don't use it for nothing!\n\ncsp_can_init function, maybe should be split into 2 functions, one to be called only once for initializing queues and rxtask, and other to be called once for each interface....\n\nIf you are ok, I can try to do some refactor to implement this modifications, and that way I will be more sure about all modifications involved in fixing this issue. And the I show you the results. I won't be able to test all the drivers! I will only modify the signature of them.\n\nI would like to know what do you think about this. Maybe you are already working on this...\n\nBest Regards! Nicolas.\n\nCRC doesn't protect headers\n\nRelated to #45, CSP does not include the header when calculating the checksum. We cannot easily fix it, because CSP would then break compatability with itself.\n\nAdd zmqhub service\n\nThe csp_if_zmqhub interface isn't of much use without the matching zmqhub service. Clean it up and push it to the public tree.\n\nCustom endpoints in ZMQ-Hub interface\n\nHi! First of all, I want to thank you for this wonderful project! It has really fitted my needs and I would be very happy if I can give you back some improvements.\n\nI would like to introduce some changes in the ZMQ-Hub interface, to allow for more flexibility, so I'll need some guidance from you. Based on your feedback, I'll send you a PR with the changes.\n\nFor starters, I think it would be better to pass the two full endpoints to csp_zmqhub_init (both publisher and subscriber), instead of just the host. This would allow to use any zmq supported transport (eg. IPC), instead of just TCP, and remove hardcoded ports (6000, 7000).\n\nBy the way, is there any reason this interface outputs various errors using printf directly? Wouldn't it be better to use csp log functions instead? If not, would you consider at least sending output to stderr?\n\nThanks for your time!\n\nReconfigurable routing table\n\nAPI for altering routing table via \"CMP\".\n\nAlso, when receiving a \"source routed\" packet, update the routing table to learn next hop for the reply. (Learning)\n\nSimplify CAN configuration\n\nThe fields in the can_at90can128_conf, can_socketcan_conf, can_at91sam7a1_conf and can_at91sam7a3_conf structs should be aggregated into a common can_config struct. This would avoid the ugly void pointer casts, sizeof(...), etc.\n\nAdd i2c_frame_t to csp_if_i2c.h\n\nThis structure is currently only in i2c.h which is not included.\n\nAlso consider adding a header file for the I2C driver calls.\n\nCSP_MEMFREE gives wrong answer on freertos AVR due to truncation\n\ncsp_service_handler gives wrong answer on the CSP_MEMFREE port for freertos on AVR.\n\nThis is due to truncation of the argument given to malloc. Malloc takes type size_t, which is only two bytes on AVR. The value of 'size' is initialized to 1000000 and is thus truncated in the call to malloc.\n\nSetting the initialized value of 'size' and 'max' to a value below UINT16_MAX results in the right answer.\n\nMAC comparison leaks timing data\n\nThe current MAC check uses memcmp to compare the digests, which leaks timing data and allows an attacker to efficiently retrieve a valid MAC for arbitrary messages.\n\nTake a look at f. ex FreeBSD's implementation of timingsafe_bcmp for a timing-independent comparison.\n\nI2C message receive\n\nI am confused as to how packets should be received over I2C.\n\nThe i2c interface defines the following:\n\n/**\n\nWhen a frame is received, cast it to a csp_packet\n\nand send it directly to the CSP new packet function.\n\nContext: ISR only\n\n@param frame\n\n*/\n\nvoid csp_i2c_rx(i2c_frame_t * frame, void * pxTaskWoken)\n\nShould this be called by the ISR after an entire packet has been received?\n\nDoes that mean that we have to manually reconstruct the frame (length, etc) before calling this function?\n\nWhat is the parameter- pxtaskwoken?\n\nMeanwhile: I remember having read somewhere that to make the I2C driver I only need to define the i2c_init/send/recv functions. What is the prototype for i2c_recv? Its not there in i2c.h.\n\nImplement conn table as open list and closed list\n\nThe current table lookup for connections, scans the entire connection list, even closes connections are checked before looping to the next element. In CSP the number of active open connections should be rather small, therefore it would make sense to make a linked list of open connections, rather than using the table itself. This will cost a bit more memory if pre-allocated connection objects are chosen, but it would be quicker. It also allows for a more relaxed use of malloc where a number of statically pre-allocated elements can be inserted into a connection-closed list during initialisation from which new connection objects can be found. When this list is empty, there could be a flag which indicates wether or not to allow extension of the list using malloc. A flag could be added to the connection object which tells the conn_close() handler wether or not the object is allowed to be free'd or if it should be put back on the connection-closed list.\n\nHMAC doesn't protect headers\n\nThe MAC seems to only protect application data, and not the headers of the packet.\n\nAdd support for multiple host addresses\n\nIt would make sense that each node could have multiple addresses, so you could e.g. run multiple \"subsystem\" on one microcontroller.\n\nAdd I2C and KISS interfaces\n\nThe interfaces for I2C and KISS are currently kept in the closed GomSpace repositories. We should clean them up and release them to public use for v1.1\n\nRewrite buffer system\n\nThe current buffer system is overly complicated, and has non-deterministic allocation times because the pool is searched using a for loop.\n\nIf the buffer elements were organized as a singly linked list, we could allocate by grabbing the first element in the list, and deallocate by inserting last in the list. O(1) instead of O(n).\n\nThe fix should be very easy. Just change the csp_buffer_state_t to contain a *next pointer and add a head and tail pointer for insertion/deletion.\n\nMove architecture specific code to src/arch\n\nThe src/arch dir contains architecture specific code for task create, semaphores and so on. However, some of our code still contains constructs like (csp_service_handler.c):\n\n#if defined(CSP_FREERTOS) /* Try to malloc a lot */ uint32_t size = 1000000, total = 0, max = UINT32_MAX; void * pmem; while (1) { pmem = csp_malloc(size + total); if (pmem == NULL) { max = size + total; size = size / 2; } else { total += size; if (total + size >= max) size = size / 2; csp_free(pmem); } if (size < 32) break; } #elif defined(CSP_POSIX) /* Read system statistics */ uint32_t total = 0; struct sysinfo info; sysinfo(&info); total = info.freeram * info.mem_unit; #elif defined(CSP_MACOSX) uint32_t total = 0; /* TODO: Fix memory free on OSX */ #elif defined(CSP_WINDOWS) MEMORYSTATUSEX statex; statex.dwLength = sizeof(statex); GlobalMemoryStatusEx(&statex); DWORDLONG freePhysicalMem = statex.ullAvailPhys; size_t total = (size_t) freePhysicalMem; #endif\n\nwhich looks awful...\n\nThis functionality should be moved to four functions in the src/arch dir.\n\nAutomatic host discovery/multiple routes\n\nSome kind of automatic discovery of other hosts on the bus would be nice. Maybe even with gateway announcements from the radio(s)...\n\nDo not print log messages in ISR context\n\nThe functions ending in _isr are meant to run in interrupt context only. However, some of them contains log messages. Since interrupt stacks are often very limited, it is generally a no-go to do printf's in ISR context.\n\nI just hit a couple of reboots on AVR due to csp_buffer_get_isr() doing a csp_log_error(\"Out of buffers\\r\\n\") when it runs out of buffers.\n\nI'm not sure what the correct solution to this is. Maybe we could come up with something like trace_printk?\n\ncsp_send return value\n\nUnfortunately, the original version of CSP used 1 to indicate successful transmission in interface tx functions, and 0 to indicate failure. In the name of backward compatibility, this return value has been kept.\n\nThe remaining CSP calls return one of the defines from csp_error.h, which use 0 for success, and negative integer error codes. This gives an irregular API, and could lead to confusion since e.g. csp_send(...) == CSP_ERR_NONE is true when the transfer failed.\n\nWe can easily change the interface tx functions to return error codes. I suggest we also change the API for v1.1 so csp_send and interface tx functions return CSP_ERR_NONE on success like the rest of the API.\n\nUpdate Python bindings to use a generator\n\nThe current Python bindings requires manual update every time the API changes. Because we're lazy, we should change to something like pybindgen instead.\n\nCSP_MAX_DELAY should be CSP_INFINITY\n\nUse the FreeRTOS function to never timeout if portMAX_DELAY (CSP_MAX_DELAY) is passed to a queue or semaphore.\n\nThis is fixed for FreeRTOS, but posix just uses a large number.\n\nPosix should not use a time semaphore if MAX_DELAY is passed.\n\nFinally, CSP_MAX_DELAY could be renamed to CSP_INFINITY in order to prevent confusion, but this is breaking backwards compatability...\n\nUpdate the Wiki\n\nThe wiki page(s) should be updated. Furthermore, we could add pages with:\n\nHow to write a CSP interface\n\nHow to define protocols on top of CSP\n\nProbably more...\n\nStorage interface for settings\n\nThe routing table in CSP should be available as a struct array, that could be used by the user to easily store and restore the configuration to/from EEPROM or in flash. This is to allow generic CSP products to be shipped out, configured by the user and then stored in the flash configuraiton.\n\nI suggest that CSP will support a callback function pattern for store and restore. CSP will take care of formatting and parsing the data, and the user provides a function that will store the char * data and int length, from CSP.\n\nThis may even be extended in the future such that node address, buffer sizes and other options could be stored along with the routing table, and make CSP even more flexible for the users.\n\nThe aim is to provide a generic CSP software for products like the EPS that we will \"mass-produce\" without re-compiling the software for each user-defined routing table.\n\nReplay attack protection\n\nThe current HMAC implementation is vulnerable to replay attacks. A sequence number like in the IPsec AH should be added to protect against this.\n\nIncrease MTU on packets and add fragmentation on layer 3\n\nOriginal idea: Implement full support for data buffering and fragmentation. (TCP-a-like)\n\nProposed change: Increase MTU and provide automatic fragmentation on layer 3. (unless the DF flag is set). This leads to two new fields in the routing table. These fields may be set statically in the table compile time, or discovered by a traceroute.\n\nMax MTU\n\nEstimated round trip time.\n\nGeneric Task Interface\n\nCurrently we have two different task interfaces as shown in the example below:\n\n#ifndef CSP_WINDOWS int csp_thread_create(csp_thread_return_t (* routine)(void *), const signed char * const thread_name, unsigned short stack_depth, void * parameters, unsigned int priority, csp_thread_handle_t * handle); #else int csp_thread_create(csp_thread_return_t (* routine)(void *)__attribute__((stdcall)), const signed char * const thread_name, unsigned short stack_depth, void * parameters, unsigned int priority, csp_thread_handle_t * handle); #endif\n\nWe should define a CSP_TASK or CSP_THREAD macro instead that generates the right function prototype.\n\nRemove drivers\n\nThe drivers should not be included in CSP.\n\nCSP debug should not enter do_csp_debug unless level is active\n\nEntering do_csp_debug uses a va_list for arguments of arbitrary size. This is extremely ineffective especially on platforms such as AVR8. Therefore we should move the debug-level check outside of the do_csp_debug function, so we don't call it unnecessarily.\n\ncsp/csp_autoconfig.h: No such file or directory\n\nHi, I am trying to compile source code of hmac from crypto. But I received this error and checked the CSP folder for csp_autoconfig.h. I did not found this header file. Can anyone help me regarding this issue.\n\nSource Routing\n\nBefore venturing into the great worlds of routing protocols, the simple tool of source routing should be added to CSP. This ensures that as long as nodes are informed of their neighboring nodes, a packet can always be successfully routed with manual source routing. This could be used as an emergency tool in order to modify routing tables that are invalid manually.\n\nThe implementation is quite simple, and not something that would interfere with normal CSP traffic. I suggest that we add a CSP_FSRCRTE flag to the header and add an optional routing table at the end of the data, just as we add other fields at the end.\n\nWhen transmitting: The routing table could consist of a 8-bit length field and a variable length array of 8-bit fields which specify the next hop address. Each intermediate node will find its own address in the table, and send the message to the next hop node. When the message arrives at the CSP end-node, there are a few options\n\nWhen receiving: If a message arrived to the node by source routing, we can assume that the default route on the receiving node is no longer valid, or there may be some other reason not to use the default route. Therefore the receiving node should either remember the source route on a connection basis, and/or update it's routing table to the correct default route. Maybe there should be a \"learn\" flag on the source routed message, that would make all CSP-nodes update their routing table. In this case source routing could be used as a tool to update the routing tables in the network by simply sending a ping message to a specific node, using source routing and the \"learn\" flag.\n\nFor the first implementation i think that the connection handler should remember the incoming source route, and then reverse it for replies on the connection. Only one problem. Since all connection data is static, how do we get memory allocation for an arbitrary length source route?\n\nbuffer leak in can driver\n\nThe can driver is leaking packets when the hardware is not responding.\n\nSettle on a coding style\n\nThe CSP core team finally reached consensus on the placement of pointer asterisks :)\n\nchar *correct = \"This is correct\"; char * bad = \"This is not\";\n\nFix it in the entire codebase...\n\nwaf configure, program [...] is not executable\n\nWhen trying to configure csp with avr32 toolchain and freertos, by following the procedure described in https://github.com/GomSpace/libcsp/blob/master/INSTALL.rst, the waf system produces the following error message: \"Program ['avr32-gcc'] is not executable\".\n\nI have earlier successfully configured and build csp for avr32 using older version of waf (v.1.6.9) and wscript (1.0.1), but I'm not able to get the current versions to work.\n\nWhat do I need to do to build csp with freertos for the avr32 toolchain with the current version of csp?\n\nconfig_log.txt\n\nAdd __version__, __model__, __date__, __time__ to uptime\n\nAdd some string's to uptime response. Should support dynamic length strings. such as\n\ndefine VERSION \"42ab3257\" // Git identifier\n\ndefine MODEL \"NanoCom U482C\"\n\ndate and time should come from the compiler already.\n\nAdd Windows and Mac OS X support\n\nAdd support for windows. Dan Erik Holmstrøm has added preliminary windows support here https://github.com/danerik/libcsp, but we still need e.g. a serial port driver.\n\nWhile we're at it, we might as well try to add Mac OS X support. The current posix branch doesn't compile because OS X lacks the pthread semaphore/mutex realtime extensions. We can probably find a workaround.\n\nunknown error csp_init\n\nI am trying implement csp for stm32f4+freertos. csp with newest freertos 8.1.2 not building, so I use well know for me 7.3.0 version. I got autoconf file. By using simple example project compiles up to csp_init where I got unknown error, Eclipse just shown Error1. if i comment lines with csp_conn_init() and csp_route_table_init(); it compiles but of course csp not working. so I come until csp_log_error(\"No more memory for sport semaphore\\r\\n\"); and I don't know how to fix it. Please help me to solve it. Thank You.\n\nIncrease the address space\n\nWe have started meeting the limitations to the CSP 1.0 header. I would like to start a discussion about where to go with version 2.0, and would like to start with some requirements:\n\nCSP 2.0 should be backwards compatible with CSP 1.0: This means that a CSP 1.0 message must be valid on any 2.0 node, and a 2.0 message should be valid on a 1.x node. I don't know if this can be fixed somehow using the existing code, but we should at least start now by adding a version field to the reserved bits and ensure that CSP from version 1.3 (when it's released) is capable of distinguishing between packet formats.\n\nCSP 2.0 should have a larger address space allowing for inter satellite networks, and maybe even a possible ground network extension (attaching a satellite ID or similar). Maybe we can take a look at the CCSDS recommendations for IPv4 in satellites, i don't know if there is some inspiration or not.\n\nChange the interface to csp_thread_create to accept the stack size in bytes instead of words\n\nSee Title:\n\nChange the interface to csp_thread_create to accept the stack size in bytes instead of words\n\n1.0-RC1 Testing\n\nMake a list of features and do systematic test of the release candidate.\n\nServices:\n\nCSP_PING\n\nCSP_PS\n\nCSP_MEMFREE\n\nCSP_REBOOT\n\nCSP_BUF_FREE\n\nCSP_UPTIME\n\nCSP_STATS\n\nFeatures:\n\nRDP\n\nCRC32\n\nHMAC\n\nXTEA\n\nPlatforms:\n\nFreeRTOS\n\nPosix\n\nInterfaces:\n\nLoopback\n\nHow to know when RDP-ack has been received?\n\nIs there way to know with rdp-connections and current api when the sender has succesfully received ack for the sent packet? It seems csp_send doesn't wait for the ack before returning.\n\nMake csp_buffer size availabe to drivers\n\nThe drivers typically have an input overflow check defined (for example I2C_MTU). It would be better if the defined buffer size in CSP could be available to the driver, so it could check against the actual buffer size...\n\nSet network byte order for XTEA and CRC32 fields\n\nThe XTEA and CRC code does not use network byte order\n\nSupport multiple instances of interfaces\n\nWe generally only support a single instance of each interface type, e.g. only one CAN interface because the csp_iface_t structs are statically defined. The KISS interface has some code to support multiple UARTs, but it would be nice to generalize this to cover all interface types. It should be possible to have both multiple instances of the same type (e.g. two SocketCAN interfaces) and of the same type but with different drivers (e.g. a platform I2C controller and an external controller).\n\nWrong return value in CSP_IF_TRXUV\n\nWAS: Possible race condition in buffer system\n\nNote to johan: (explain better later :))\n\nTriton-2 # ~~~~0x5011d7c0 : 00 00 00 00 00 00 50 01 01 00 00 70 A0 82 00 00 |......P....p....|\n\n0x5011d7d0 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\n0x5011ee40 : 00 00 00 00 00 00 51 00 01 00 00 6F A0 82 00 00 |......Q....o....|\n\n0x5011ee50 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\n0x5011f200 : 00 00 00 00 00 00 50 01 01 00 00 72 A0 82 00 00 |......P....r....|\n\n0x5011f210 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\n[01] csp_if_trxuv.c:87 Another disaster\n\n0x5011ee40 : 00 00 00 00 00 00 51 00 06 00 10 00 72 A0 82 00 |......Q.....r...|\n\n0x5011ee50 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\n0x5011d180 : 00 00 00 00 00 00 50 01 01 00 00 6C A0 82 00 00 |......P....l....|\n\n0x5011d190 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\n[01] csp_if_trxuv.c:87 Another disaster\n\n0x5011cf00 : 00 00 00 00 00 00 51 00 06 00 10 00 70 A0 82 00 |......Q.....p...|\n\n0x5011cf10 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\n0x5011d7c0 : 00 00 00 00 00 00 50 01 01 00 00 70 A0 82 00 00 |......P....p....|\n\n0x5011d7d0 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\n[01] csp_if_trxuv.c:87 Another disaster\n\n0x5011cf00 : 00 00 00 00 00 00 51 00 06 00 10 00 70 A0 82 00 |......Q.....p...|\n\n0x5011cf10 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\n0x5011f200 : 00 00 00 00 00 00 50 01 01 00 00 00 6C A0 82 00 |......P.....l...|\n\n0x5011f210 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\n[01] csp_if_trxuv.c:87 Another disaster\n\n0x5011d7c0 : 00 00 00 00 00 00 51 00 06 00 10 00 00 6C A0 82 |......Q......l..|\n\n0x5011d7d0 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 |................|\n\nAdd RTT to routing table\n\nFine grained csp_debug output filtering\n\nCurrent, all output from csp_debug can be disabled at compile time with the --disable-output configure switch. Some systems may wish to keep e.g. warning and error messages, but not use space for storing the strings for the remaining log levels.\n\nI propose that we create csp_error, csp_warning, csp_info, etc. macros, and create a --with-loglevel configure switch, and let the preprocessor remove unwanted log levels.\n\nBTW, the AVR debug output hack in csp.h also requires fixing. It should be able to use colored output and proper filtering.\n\nTimeout is int should be uint32_t\n\nThe int type is not always large enough to hold\n\ndefine portMAX_DELAY 0xFFFFFFFF\n\nProper packing\n\nWe're approaching CSP version 1.0, so we should start focusing on proper packing of the library. We need to:\n\nGo through the documentation. Make sure everything is in doxygen format\n\nCreate README, INSTALL and LICENSE files\n\nMake a good makefile for compiling the library without Eclipse. Could the GNU Autotools be used?\n\nCreate an examples dir with a running example"
    }
}