{
    "id": "dbpedia_6624_2",
    "rank": 99,
    "data": {
        "url": "https://openmw.org/",
        "read_more_link": "",
        "language": "en",
        "title": "OpenMW",
        "top_image": "https://openmw.org/wp-content/uploads/2021/06/cropped-openmw.png",
        "meta_img": "https://openmw.org/wp-content/uploads/2021/06/cropped-openmw.png",
        "images": [
            "https://openmw.org/wp-content/uploads/2024/05/OpenMW_Interview_Blender-File-Example-1024x576.png",
            "https://openmw.org/wp-content/uploads/2024/03/image-1024x768.png",
            "https://img.shields.io/badge/dynamic/json?style=social&logo=gitlab&label=Stars&query=%24.star_count&url=https%3A%2F%2Fgitlab.com%2Fapi%2Fv4%2Fprojects%2F7107382",
            "https://img.shields.io/github/stars/openmw/openmw?style=social",
            "https://img.shields.io/badge/irc-libera.chat-green?style=social",
            "https://img.shields.io/matrix/openmw:matrix.org?label=matrix&style=social&logo=matrix",
            "https://img.shields.io/discord/260439894298460160?label=discord&style=social&logo=discord",
            "https://img.shields.io/twitter/follow/openmw_org?style=social&label=openmw_org",
            "https://img.shields.io/mastodon/follow/109591552483354049?domain=https%3A%2F%2Fmastodon.gamedev.place&style=social",
            "https://img.shields.io/reddit/subreddit-subscribers/openmw?style=social",
            "https://img.shields.io/badge/rss-feed-white",
            "https://img.shields.io/badge/atom-feed-white",
            "https://openmw.org/wp-content/themes/openmw/images/futureweb-logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Open source Elderscrolls 3: Morrowind engine reimplementation.",
        "meta_lang": "en",
        "meta_favicon": "https://openmw.org/wp-content/themes/openmw/images/favicon.png",
        "meta_site_name": "OpenMW",
        "canonical_link": "https://openmw.org/",
        "text": "Good morning and welcome to this joint interview. Can you tell us a bit about yourselves?\n\nA.: Hey, anonymous interviewer! I’m neither a cat nor a month, but a rather fortunate bird — if you believe some historians’ hypothesis about my nickname’s origin. In my day-to-day life, I prefer to take the form of a German electrical engineer doing his PhD in the field of battery technology. Thanks for reminding me that I still was an undergraduate when I joined the project in early 2016, technically transforming from long-time lurker to, well, bird.\n\nJ.: Hello there! I enjoy the company of cats but like my fine friend Atahualpa I also am not a month. I also may not always be that hostile. When I’m not poking around in OpenMW-related things I do enjoy cycling, nature hiking, and playing music. I started hanging out in the OpenMW IRC channel back in 2013 or so and have just been hanging out ever since.\n\nWord on the street is that you’re the dynamic duo of OpenMW’s massive video production industry. Is that true?\n\nJ.: I remember learning about OpenMW, and of course part of that first exposure was a classic release video. I forget which was the first video I saw, but what did stay with me was the style — and I hope we’re staying true to it with our work.\n\nA.: While we might be the somewhat dynamic video duo today, we are standing on the shoulders of giants: Star-Demon, who started the whole concept of presenting OpenMW’s progress in video format over twelve years ago for version 0.6.0, and the brilliant WeirdSexy, whose great voice and even greater love for spears have been ingrained in our collective memory.\n\nProducing video sounds like work. What does it look like, what’s the secret sauce?\n\nA.: At this point, a short disclaimer: We aren’t professionals by any means, so take everything we say with a spoonful of salt.\n\nJ.: Oh please, everybody knows that Atahualpa is a Blender video-editing Arch Magister. I learned everything I know from him!\n\nA.: Alright then, let’s look at some of the things we need to cover in order to produce a somewhat entertaining release video. Please note that this is a simplified breakdown and that many of these steps may overlap, change order, or require several iterations and feedback loops. Video production is reaaaaally time-consuming (maybe we should start doing reaction videos).\n\nContent considerations\n\nWe usually take the complete list of changes (nowadays 100+ closed issues per release), add changes without tickets on our issue tracker, put them into suitable categories, and rate their video eligibility:\n\nImportance?\n\nInteresting to the viewer?\n\n“Easy” to demonstrate?\n\nContent outline\n\nAfter choosing the issues we want to cover, we define their order of appearance. The structure might look like this:\n\nIntro\n\nCredits\n\nMain video\n\nSection 1\n\nCool new feature\n\n…\n\nSection 2\n\n…\n\nOutro\n\nFake “end card”\n\n“Post-credit” scene\n\nScript draft\n\nHaving a rough outline, we start writing the script. Especially this step might go through several feedback loops by discussing it among us or passing it to the team for review.\n\nAudio recording\n\nWe usually divide our speaking parts evenly. Then, we record our paragraphs, optimise audio quality, put in labels, and export them into single files for greater flexibility.\n\nVideo recording\n\nWith the script and audio in place, we can start recording video footage. This is, of course, heavily guided by the script — not only in content but also in length. Moreover, many of the scenes might require a certain setup, even including mods or custom editor content to fit in those little inside jokes no one will catch anyway.\n\nPre-postproduction\n\nEach video requires title screens, text overlays, and pre-rendered audio visualisers (see intro of 0.47.0 video). Those are done in Blender.\n\nPostprodcution\n\nIn this step, everything is put together using Blender’s video sequence editor: video and audio files, background music, overlays, video and audio transitions, and additional effects, e.g., speed modifiers or zoom effects. The final Blender file might look like in the image below.\n\nRendering\n\nThe video is rendered in 4K to ensure highest quality on YouTube — yep, even 1080p viewers benefit from a 4K source file due to YouTube’s infamous compression shenanigans! Early video tests are usually rendered with a lower resolution to speed up the process.\n\nPost-postproduction\n\nBefore the video is published, we create closed captions in English (as well as subtitles in German if there is no separate German video) and a custom thumbnail.\n\nPre-release tests\n\nThe last step before a release is extensive test viewing by other team members to catch any remaining errors. — Et voilà, a new release video is ready to go!\n\nIs it true that you’re mysteriously showing up in time of need, like, right before an OpenMW release?\n\nA.: Nice try to get that famous quote from this wizard in Star Wars. Ehm, Spock it was, right?\n\nJ.: Think of me as the reverse homer-in-the-bushes gif. Oh, and yeah Atahualpa: that was Captain Spock for sure.\n\nA.: In fact, OpenMW releases tend to spawn right after one of our videos. Except for 0.48.0, which, to this very day, is a great mystery in and of itself.\n\nWait, does that mean you’re cooking a release video right now‽ Can you share some details? Can you leak the date of the release?\n\nA.: My estimate is that we will release the video at least one day too late from everyone’s perspective, which is going to be mitigated by delaying the actual release which, in turn, is going to annoy everyone even more. It wouldn’t be the same otherwise.\n\nJ.: Maybe a few days plus or minus from that. I can’t be too sure. It’s likely we won’t know when it will be out until it is.\n\nA.: Seriously though: 2024 would be awesome — looking at you, extended release phase for 0.48.0.\n\nPrevious videos have been awesome and thus rightfully well-received. How do you handle so much fame?\n\nJ.: Give the people what they want! And by that I, of course, mean Fargoth jokes and Imperial guard mosh pits.\n\nA.: Not to rain on your parade, but I measure fame in the amount of bot comments below our videos — and going by that metric, we are as famous as the menu pinning feature in Morrowind.\n\nSpeaking of videos, since you’re obviously domain experts, any recommendations with regard to movies and TV shows?\n\nA.: Boomer advice: Don’t let your consumption of movies and TV series become arbitrary. Oh, and consider reading the source material (if it exists), especially if you happen to love fantasy and sci-fi works like I do — it usually allows you to imagine and explore other worlds in much more depth than a TV adaption can provide. As to actual recommendations, my last movie was “Dune: Part Two” (you might have heard about it). One of the best audio-visual experiences I’ve ever had in cinema. (Again, read the books! Well, at least the first three, I guess. The series gets increasingly more complicated and esoteric.)\n\nJ.: Oh yeah, Dune is on my “to-watch” list, and I guess now on my “to-read” list as well! Ahem, as TV shows go, I must take this opportunity to give a shout out to “Star Trek: Deep Space Nine”. When I think about movies, I think about “Fear and Loathing in Las Vegas” and I think of mine and Atahualpa’s adventures in making OpenMW-related videos. Yeah… it’s kinda like that!\n\nA.: Uhm, okay. But who is which character in that analogy?\n\nJ.: I do think of you as my attorney and you are doing the PhD thing, so that makes you Dr. Gonzo. I’ll be Hunter S. Thompson; I can wear cool hats and take all the ~screenshots~ photographs.\n\nHave you ever thought about learning C++ to contribute by writing code, like some other contributors did?\n\nJ.: Years back, my first experience with (very roughly) hacking on C++ at all was with OpenMW — I wanted to hack in the ability to wear more rings and kind of grepped my way to it. More recently, I actually did decide to dive back in to get a small feature added into the Lua API. Major thanks to everyone who helped, especially S3ctor and Evil Eye! It’s a big, complicated codebase but it can be reasoned about. The C++ itself is just another thing you must cope with, but things can come together surprisingly quickly.\n\nA.: Truth be told, I learned C++ at technical college back in 2008. The problem is that an engineer’s ability to produce completely functional spaghetti code doesn’t qualify them to work as a game engine developer. Nonetheless, I’ve already contributed some smaller changes and bugfixes, with an emphasis on our editor, OpenMW-CS. — Even more truth be told, I have several thousand lines of unpublished code for various parts of the CS buried in my local OpenMW folder. Programmers can be harsh at times, and OpenMW developers are especially good at humbling you, allowing you to sustain your personal coding insecurities and letting you keep your work for yourself.\n\nWhat’s the next big OpenMW thing you’re super excited about?\n\nA. and J.: Lua!\n\nJ.: Of course it’s playing Half-Life 3 in OpenMW: Unity Edition. Seriously though: I’m looking forward to the awesome work that’s being done with spell casting and combat for the Lua API. These are some of the most sought-after features for modding and I think we’re going to see a lot of cool content that will utilize this. There’s also been some hacking on sky shaders that looked amazing, hopefully that can be on our pre-2090 list.\n\nA.: I also like to see new stuff which I’ll probably never use myself, but which sets OpenMW apart from the original TES games. Upcoming features like (eventual) native support for multiplayer and VR are not only great for the people that use them — but they’ll also make OpenMW more accessible to other audiences which, in turn, might draw new contributors to the project. Moreover, let’s not forget that all these features will be most likely integrated into one platform, i.e., multiplayer users should be able to join using the Android version of OpenMW, VR users get to enjoy full support for OpenMW-Lua mods, etc.\n\nFollowing, OpenMW intends to be a platform for independent games. Do you have a “dream” OpenMW game, and if so, what’s that look like?\n\nA.: With “Tamriel Rebuilt”, “Skyrim: Home of the Nords”, “Province: Cyrodiil”, and the other “Project Tamriel” projects, Morrowind-era Tamriel is already covered if you ask me. What I would like to see — and, yes, I’m a sucker for Daggerfall, especially Daggerfall Unity — are large-scale approaches to a fantasy game. Maybe not as massive as Daggerfall or the (hopefully) to-be-released “Wayward Realms”, but with a greater sense of scale than the tiny theme parks current TES games are. Eventually, OpenMW-CS should allow for some kind of random/procedural generation, and I would like to see somebody take advantage of that possibility.\n\nJ.: I’m looking forward to community-driven projects that are using OpenMW for their engine such as Open-Z; My dream game made with OpenMW might be something surprising, maybe something with Katamari-like gameplay or some kind of recreation of a classic game. I love to see unexpected, not-Morrowind things as much as I love the Morrowind things.\n\nA.: *cough* RoboWind Construct (RWC). Google it.\n\nIf you could change one thing about OpenMW, what would it be?\n\nJ.: I would remove the team’s harsh ban on hardcoding every actor in any game using OpenMW as Fargoth. It’s a crime, really!\n\nA.: Speaking of hardcoding: the father of OpenMW, Nicolay Korslund, found it funny to hide most of our engine’s features behind a hardcoded 2090 timestamp which can only be removed for each feature individually by wasting huge amounts of energy to mine a developer token. That must have been the single biggest mistake in computer history! I want my vanilla-style water now!\n\nSomeone told me that johnnyhostile was going to jam with lysol in a sludge metal cover of the Morrowind theme. Is this true?\n\nJ.: It is true! This is actually the epitome of vaporware, 2090 edition projects. Coming soonTM.\n\nA.: Not to spoil anything, but having heard an early demo of johnnyhostile’s guitar part, I’m more than hyped for the full album release!\n\nAnything you’d like to add?\n\nA.: To avoid a shameless self-plug by my wonderful partner in crime: If you want to mod OpenMW, go visit modding-openmw.com! I consider it to be OpenMW’s sister project, a hub for mod creators and modders alike that allows the community to decentralise mod hosting, while it ensures easy access to mods and modding instructions for everyone. It’s johnnyhostile’s baby, and he’s managed to build a team of dedicated contributors who help maintaining and improving the site for all of us to benefit from! Oh, and if you are a modder who wants to dive into OpenMW-Lua, have a look at johnnyhostile’s Lua mod template. It even allows you to host a little static website for your mod. — End of ad break.\n\nJ.: That’s it for today’s interview. See you next time — and as always: thanks for watch-, uhm, reading!\n\n2024-05-26 - jvoisin - No pingbacks so far.\n\nInterview with CMAugust 2024-05-12 - jvoisin\n\nGood morning, who are you, and have you always been a month?\n\nOnly for a little while. My previous moniker was CMTuesday, or was it?\n\nWhen did you join the project and why?\n\nI first heard of OpenMW in late 2015, around the release of 0.37.0. The MrOpenMW Release Commentaries hadn’t caught up by that point, but the FAQ video successfully piqued my interest in a clean-room reverse engineered engine that could run Morrowind better than the original. I had bounced off of Morrowind in my first attempts to play it, but after the release of Skyrim ignited my interest in The Elder Scrolls like never before, I was ready to try it again in this new engine. And believe it or not, that was the first time I finished Morrowind’s main quest.\n\nIt was already a very playable experience in OpenMW even then, but there were some minor visual and UI hiccups along the way – these I documented and submitted as bug reports, which were promptly fixed by scrawl, who was still working like a machine after moving the engine from OGRE to OSG for 0.37.0. Seeing that level of responsiveness encouraged me, and thanks to the ease of being able to download a fixed build the next day, the testing process was in a sense more satisfying than if I had just played the game and moved on. Of course I played some more, and noticed some more oddities, and opened more issues on the tracker. And I basically never stopped.\n\nI’ve been told you’re part of the “OpenMW Public Relations And Assorted Propaganda cabal”, is that so?\n\nIt’s news to me, but maybe I haven’t been let in on the joke! First and foremost my role in OpenMW has been as a tester, giving feedback to identify any bugs, issues, or features that will help to improve the user experience. I generally interact more within the OpenMW team than outside it – or to put it another way, if I’m pestering anyone, it’s the devs themselves. Of course, I do regularly wade over to the various Discord servers such as Morrowind Modding Community as well as the big projects like Tamriel Rebuilt to see what’s being worked on there, and occasionally I put in my two cents when certain topics like rendering performance are being discussed. That topic comes up fairly often with a game as CPU-intensive as Morrowind, and mods are constantly hitting that performance ceiling. I don’t care to do any preaching or propaganda for more users to pick up OpenMW, because as far as I’m concerned the engine speaks for itself with each new version that’s released. It’s good enough for me to know that the OpenMW team itself is in great shape, with a community Discord server that’s friendly and focused on the business at hand.\n\nOut of all your time playing OpenMW and looking for bugs, which issues have been the most satisfying to see resolved?\n\nFor me it probably has to be the visual side of things, as in rendering. For a long time particles weren’t lit correctly, at least according to how Morrowind originally rendered them. Particle effects are usually the thing that brings the most “pizazz” to any game, and Morrowind’s effects aren’t great to begin with, so it irked me that they looked a bit worse in certain lighting conditions. I was also bothered by the light rendering in general, since while OpenMW faithfully replicated Morrowind’s fixed function lighting, the lighting in Morrowind is just hideous. Quite apart from the infamous 8 lights limit, the attenuation model used was so whack that it produced lighting seams and unsightly blinking everywhere you looked. Cleaning all this stuff up and replacing it with something better was not for the faint of heart, requiring knowledge of not just rendering but the many rules and quirks of OSG and OpenMW engine itself, and there was more than one attempt by different developers over the years with several false starts. To my eternal gratitude, all of this was finally resolved by wazabear in 0.47.0 and 0.48.0, with some further tweaks by Capo and wareya to end up in 0.49.0, and all with such finesse that OpenMW now has a direct upgrade path to clustered shading at a future date.\n\nHow come you know literally everything about OpenMW graphics even though you never wrote a single line of its code?\n\n“Talk is cheap. Ask questions. You don’t ask, you never learn.”\n\nWhen I notice something about Morrowind that looks broken, or runs slow, or is simply not as pretty as other games, I ask why. The OpenMW team is after all stuffed with people knowledgeable about such things, and more often than not a guru like AnyOldName3 or wazabear will explain it to me. Or, on the occasion they can’t recall off the top of their head like a Zen master, they might do some investigation of their own, in which case we both end up learning something.\n\nMoreover, one of the nice things about identifying problems for open development is that you get to see the solutions. I read every issue and merge request that comes through on the tracker at least once, which usually conveys the gist of what was wrong and what was changed even if I don’t understand a lick of code. I also read each message that comes through the Discord, and each new post on the OpenMW forum before that. To sum it up, eventually some of that knowledge soaks through. But I certainly don’t know it all, and any day can bring new surprises.\n\nHas OpenMW lived up to what you expected when you first discovered the project so far?\n\nLooking back, I’d say OpenMW has nearly fulfilled all my original hopes from when it first caught my attention. At that time there was no distant land, object paging, groundcover, shadows, fancy shaders… and while all the Morrowind essentials were more or less in its place, not all the thousands of little pieces that make up the game fit quite right. Things are much further along today. OpenMW has reached parity with vanilla Morrowind in nearly every conceivable way, and for a stickler like me, that’s saying something. Out of all those original expectations, the only thing that still falls short is the dehardcoding of all relevant systems, and that is now well underway with the Lua API. But that’s not the end of the story, because completing the various features doesn’t simply close chapters of the OpenMW book – it opens new ones.\n\nWhat’s the current or next big thing you’re hyped about?\n\nBindless textures will be a huge deal if it lands, and because one is related to the other, clustered shading* is likely to come with it. Aside from the advent of Vulkan, this is likely to be the biggest leap in rendering performance OpenMW will ever see. When that happens, there is suddenly scope for huge (and expensive) leaps in visual fidelity such as point light shadows. In addition, we could soon have a native physically based rendering path and support for its materials to go with it. Altogether, there’s a lot to be excited about in OpenMW’s future.\n\nAny favourite mods?\n\nWhen I’m not testing stuff, I run a fairly light setup, mostly related to fixes like Morrowind Optimization Patch and Patch for Purists. I think my favorite mods haven’t been invented yet. If I had to describe it, I think I’m most inclined towards mods that provide glimpses of a Morrowind that is less clumsy and more refined in every respect, polished and fun from end to end.\n\nIf you could change one thing about OpenMW, what would it be?\n\nGiving it the power to dispense good luck and motivation to its many talented developers, so it can be developed still further.\n\n2024-05-12 - jvoisin - No pingbacks so far.\n\nInterview with psi29a 2024-04-11 - jvoisin\n\nHello and who are you?\n\nResident cat herder, metaphorically speaking and a dad, literally speaking. I, in fact, have no cats but it seems that I’m in charge of 3 children, a few teams at work and other teams spread all around the planet who work on FOSS stuff. An ex-patriot who settled in Europe and rebuilt his life. When there is free time, I do in fact play games, but I like hacking, tinkering and travelling more.\n\nWhen did you join the project and why?\n\nI’m a little fuzzy on the details, but it was likely around 2011, when 0.11 was released. I provided Debian and Ubuntu packages for the project. At this point, I was operating under the pseudonym BrotherBrick — to keep my work on OpenMW separate from my day job. I’ve had psi29a since the 90s, so once I talked to legal at my work to make sure everything was okay, I switched back to using my old handle. I had lurked around earlier of course because I was totally into finally completing the main quest while running Morrowind natively on Linux. So that was my overriding goal. Years passed, but I’m still putting off completing the main quest, which is probably why I’m still around.\n\nThis was my first post on the forum I think, in 2011.\n\nI’ve been told that you’re the one currently wearing the “Benevolent Dictator for Life” hat, and that you’re the third hero to do so. Is that true? And if so, is it heavy?\n\nIt is. Not all heroes wear capes. That being said, it’s more like being a glorified cat herder. FOSS developers will do what developers think is cool, neat or interesting to work on. As a hobby project, as Project Lead, one can only give guidance, make suggestions, propose solutions, represent the project to the outside world, remove roadblocks and in the end still get unanimously outvoted, which is fine because the OpenMW doesn’t really need a BDFL in the traditional Linus Torvalds sense.\n\nMuch of the work comes down to coordination and communication between developers, with upstream libraries we use and downstream in distributions. We can and have provided fixes for many of the libraries we use and also provide patches downstreams to fix issues that would prevent OpenMW from running.\n\nSometimes I have to put on my dad hat or my therapist hat and help developers suffering from burn out or personal issues. I mean, I’ve known most of the developers for over a decade and bonds form. They are all welcome to the 1.0 release party at my house :)\n\nSo you do plan on continuing to lead the project for the foreseeable future?\n\n<_< >_>\n\nI’m not as involved as I would like to be for such a role. I think I only got here because of how long I’ve been active in the project, not necessarily a master of shadows or a master of lights. If new leadership wants to step forward, I’ll support them.\n\nWhat have you been working on recently?\n\nRecently not so much; I had a small break with the project to focus on my family. I can’t express how much I value boundaries, setting them, having a good work life balance for one’s own mental wellness. A few months ago, I reconnected with OpenMW thanks to the positivity of the community and developers which I’d like to think I helped foster.\n\nWhile away, I reconnected with an email penpal and worked on vsgopenmw: a fork of OpenMW that runs on Vulkan, specifically VulkanSceneGraph, the successor of OpenSceneGraph which we use as our rendering middleware library. It was nice to collaborate again, even though it was slightly unorthodox. Many patches were sent upstream to VSG and vsgopenmw now also runs on macOS via MoltenVK and Linux.\n\nI guess I’ll let the cat out of the bag here and mention that I’m currently working on the OpenMW 1.0 roadmap. It’s been going on for the past few months and the plan is to release this roadmap sometime after 0.49’s release. Its release will not mean that 0.50 will be the first 1.x release, but it will make it a point that OpenMW is taking a “1.0” release seriously and setting things up for getting the project across this threshold and beyond. It’ll also be the opportunity to make the fabled “1.0 release party” happen.\n\nHas OpenMW lived up to what you expected when you first discovered the project so far?\n\nAbsolutely, I feel like OpenMW reached “1.0” for me in 0.46, when it was mentioned to me that I could theoretically complete the main quest line with a reasonable approximation of the original spirit of Morrowind, just without the constant crashing. It’s gone now above and beyond with all sorts of graphical (object paging), scripting (Lua), physics (threaded) enhancements. That it does so on the three major systems is a bonus, because while emotionally I only care about Linux, in practice I have to care about Windows and macOS as well.\n\nWhen I first discovered the project, Windows was more of a novelty and most developerss used Linux, no macOS work to speak of. I think I floated around T-posing in a cave for a long time, and exteriors only had buildings with no terrain. So we’ve come a long way.\n\nWhat’s the current or the next big thing you’re hyped about?\n\nSeeing Lua support maturing is wonderful, however, the next “big thing” I’m hyped about is VSG support. For me, it’s a way of future-proofing Morrowind. OpenGL is dead, it’s not even being maintained and in some cases like macOS, it’s been abstracted away with another layer of bugs upon the existing ones.\n\nThere are many other things to be hyped about as well including VR that exists in another long-lived fork, and multiplayer, TES3MP. That being said, with the amount of work going into de-hardcoding for Lua, I’m waiting to see what cool stuff the community comes up with.\n\nSpeaking of Lua, what’s your opinion on MWSE, and also MGE XE? Shall we expect them to be ported one way or the other unto OpenMW?\n\nMWSE and MGE XE are a great bit of kit; it’s great for extending Morrowind.exe and giving modders an amazing amount of freedom. I believe there continues to be value in continuing work on MWSE, specifically in addressing the stability issues. Hooking into parts of Morrowind.exe that are prone to failure and rewriting it to be more failure resistant would go a long way in addressing one of the largest pain points of playing Morrowind on the original engine. Major thanks to all involved in these two projects, those who work on them have also indirectly helped OpenMW with research.\n\nSaying that Lua is similar across MWSE and OpenMW is a misnomer; what’s been done is that we have a Domain Specific Language (DSL) tailored to each engine. There is no way to reconcile this as the underlying engines are not the same, which is good from a legal standpoint as it proves to Bethesda that OpenMW is a clean-room reverse engineering effort. This might not be a good thing to hear to end users who really don’t care, but this is very important to us to keep the project in a safe legal position.\n\nSome of the work done for both MWSE and OpenMW can be bridged though, as we could sit down and define higher-level API that modders can use that in turn would make platform-specific calls to either MWSE or OpenMW. In theory a determined modder or group of modders can already build off what both projects have done and create the common API. I think both projects would support this endeavour and help provide support.\n\nAs the saying goes, don’t let your dreams be dreams.\n\nAny favourite mods?\n\nOh gosh, the original one that got me into OpenMW was Zini‘s ambitious Ultima Total Convertion which originally used Morrowind.exe to remake Ultima 9 with the original script/ideas. Ultima IX: Redemption is what brought Zini to OpenMW as it was clear that Morrowind.exe couldn’t handle the vision. You can hear more about this with Zini’s interview with DarkElfGuy here. This was also why he was adamant about having OpenMW-CS, our editor.\n\nSo while the project was abandoned, the assets were released and I contacted as many modders as I could find and got their permission to release a ‘libre edition’ that allows anyone to use the assets based on the CC-BY or even CC0 licences. You can download them here.\n\nI also want to throw out how much I respect the Tamriel Rebuilt team and all the blood, sweat and tears they’ve poured into their labour of love. Same goes for the MWSE and MGE XE contributors.\n\nIf you could change one thing about OpenMW, what would it be?\n\nNothing… really, well, maybe the ability to “play” other TES games and Fallout. ;)\n\n2024-04-11 - jvoisin - No pingbacks so far.\n\nTo eliminate any potential confusion, this post was originally published on the 1st of April, and Unity is terrible. If you must use an engine other than OpenMW for your next project, why not try an open-source alternative such as Godot?\n\nOriginal article below:\n\nAs technology surges forward, video games are becoming more visually stunning and performant than ever before. To keep pace, OpenMW must evolve. With OpenGL being phased out in favor of Vulkan, GPUs gaining more muscle, and CPUs packing an increasing number of cores, we must either adapt or risk obsolescence.\n\nThis is why we’re making a bold move and switching our main engine once again. In the past, we’ve transitioned from OGRE to OpenSceneGraph. And now, the time has come to embrace the future and choose Unity.\n\nWhy Unity?\n\nUnity is not just something that will dramatically alter the course of our progress — it is also a platform that aligns more closely with our values. Despite being closed-source, Unity boasts several advantages over our current engine: solid leadership, first-class mobile support, a healthy enterprise culture, generative AI integration, publicly traded status, and a rock-solid reputation in the industry.\n\nExciting Prospects\n\nWe’re thrilled about the possibilities that this move opens up for us. For one, it means that we will finally be able to transpose OpenMW from C++ to D♭. Also, while we currently only target the niche operating systems Windows, macOS and GNU/Linux, the switch will let us effortlessly provide OpenMW builds for mainstream platforms such as Google Stadia, modern BlackBerries and Samsung TV. Furthermore, Unity’s advanced high-performance graphical capabilities will open the door to cutting-edge rendering techniques like ray-tracing, ray-coloring, ray-scribbling and ray-watercolor-painting.\n\nFueling the Ambitions\n\nUnfortunately, embracing Unity means we’ll need to gather funds to cover its embracing fees. Since OpenMW as a whole does not accept donations, we’ll fund the project tentatively codenamed “Tribunity” through three primary avenues:\n\nWe’ll create our very own marketplace for downloadable content created by the community. To promote it, we’ll start by publishing a few exclusive creations of our own, such as map marker-based fast travel, an armour pack for pack guars, Centurion Tetrahedrons, and cosmetics like a Dwarven monocle.\n\nThanks to the Unity Ads SDK‘s comprehensive monetisation framework, we’re planning on integrating a couple of minimally invasive and tasteful ads into the game via natural surfacing points, like loading screens. Naturally, we’ll have to modify the game slightly to abide by the rules set by ad publishers, but fortunately, the required adjustments will be limited to omitting the usage of and references to alcohol, drugs, slavery, racism, violence, blood, religious blasphemy, crude humor, suggestive themes, partial nudity and Wood Elves.\n\nFor players outside of California and the European Union, we might share some anonymised playthrough and associated data with various partners. We will respect our users’ privacy and will not include references to adult content from their content lists in this information.\n\nWe can’t wait to release Tribunity and for you to enjoy it with us!\n\n2024-04-01 - jvoisin - No pingbacks so far.\n\nInterview with jvoisin 2024-03-23 - jvoisin\n\nWho are you?\n\nI’m jvoisin, a security engineer by trade. I’m involved in way too many projects and software, and ramble write on a regular basis on dustri.org\n\nWhere did you get your avatar from, and are you actually a beaver?\n\nEvery time someone asks me this question, it’s a different animal: beaver, rat, shrew, otter, mouse, ermine, but it’s none of them! It’s the bear from I want my hat back from Jon Klassen. And yes, it’s me, I’m the bear from the book. I’m happy I got my hat back, and I’m more careful with it now.\n\nWhen did you join the project and why?\n\nI think I’m a bit the Tom Bombadil of OpenMW: I’ve been there since the beginning, and I will likely be there at the end, always in the background. I “joined” the project around mid-2008, when Nicolay Korslund announced OpenMW. Back in the day, it was written in D, used OGRE, Audiere, OIS and Monster, and lived on openmw.snaptoad.com.\n\nI’ve been following it on the Google group, on openmw.net and finally on openmw.org. I survived the transition from D to C++, from OGRE to OpenSceneGraph, from GitHub to GitLab and a couple of project leader changes.\n\nI joined the project because Morrowind is one of my favourite games. I remember going to my local multimedia library, and seeing this yellow/brown-ish video game box on the shelf. The computer we had at home couldn’t display the game at first, since it couldn’t handle the 640×480 resolution, but the booklet fascinated me. When we got a better screen, I could finally play, and it was so impressive at the time: you could do whatever you wanted: follow the main quest, talk to anyone, hunt, fight, become a wizard, a warrior… it was incredible. A couple of years later, in 2008, I was looking to make it run on a Linux machine, and stumbled upon this new project of complete re-implementation. The rest is history.\n\nI guess I should write a blog post here about the history of OpenMW at some point.\n\nSo what have you been doing/working on this whole time?\n\nIn the beginning I didn’t do much. And now that I think about it, I never did much to be honest. I started by joining the PR team, doing blog posts and translations. I know C, so I can read some C++, and thus contributed a bit to the codebase, but never did anything major or groundbreaking, mostly fixing bugs and trying to make contributing to OpenMW easier and the code better. I ended up becoming the main system administrator, taking care of our server, website, wiki and so on. Nowadays, I mostly do sysadmin, code reviews and taking care of this very blog, as the amount of time I can dedicate to the project has shrunk significantly lately.\n\nAny particularly cool things you’ve worked on?\n\nI had a lot of fun writing fuzzers for OpenMW. They found some bugs, but I think the best part is that it led me to profile OpenMW to make things run faster, resulting in a better OpenMW for everyone. It also improved its robustness against all kinds of weird mods people are coming up with.\n\nWhat have you been working on recently?\n\nI’ve been interviewing various people from the core team, hence the surge of activity on this very blog. I find it fascinating that random people from all around the world, with different backgrounds and interests, are spending their time trying to work together on OpenMW, a custom engine for a ~22 years old game. It’s incredible really, when you think about it!\n\nHas OpenMW lived up to what you expected when you first discovered the project so far?\n\nI think so. Heck, when I discovered the project, it could render some statics… and that was pretty much it. When OpenMW was able to handle and render some parts of the terrain, everyone was so excited! Now we have Lua bindings for most of the mechanisms, and some gorgeous shaders that I wouldn’t have dreamt of, a prototype for multiplayer, and so much more!\n\nWhat’s the current or next big thing you’re hyped about?\n\nEveryone is raving about Lua support, but I think that the future move from OpenSceneGraph to VulkanSceneGraph will bring a lot of great things, if it happens: performance improvements, portability, easier eye-candy…\n\nAny favourite mods?\n\nTough question. I spent hours on Wiwiland, the French Morrowind modding community, downloading and playing so many of them. I think that my favourite small mod is Maison du voyageur, a hut near Seyda Neen. As for bigger mods, I’m always impressed by how big and well-done Tamriel Rebuilt is, of course. Maybe one day they’ll ship with OpenMW by default, who knows?\n\nIf you could change one thing about OpenMW, what would it be?\n\nI would love to have it written in a different language. Even though C++ a popular language, it has so many drawbacks: mistakes are easy to make, compilation times are abysmal, so many subtleties everywhere…\n\nIn that case, what language would you rather be used?\n\nNo no no, I’m a security engineer, I only point out things I don’t like, I’m not here to provide actual actionable solutions.\n\nMore seriously, I don’t think there are good choices in 2024. Some might say Rust, but it comes with its own set of problems, and porting the project to a new language would be a monstrously large effort anyway. I think the best we can do is to working on making our C++ as less awful as possible, with things like modules to reduce compilation time for example, or leveraging modern tooling to make contributors’ lives less dreadful: sanitizers, our glorious continuous integration, our growing test suite…\n\nIt feels like an uphill battle, but to be fair, this is how most interactions with computers feel anyway.\n\nAnything else you’d like to add?\n\nI’d recommend anyone who likes Morrowind look into OpenMW, and if you’ve got some free time, contributions in any form or shape are always welcome!\n\n2024-03-23 - jvoisin - No pingbacks so far."
    }
}