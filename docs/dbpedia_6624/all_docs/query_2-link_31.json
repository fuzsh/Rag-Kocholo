{
    "id": "dbpedia_6624_2",
    "rank": 31,
    "data": {
        "url": "https://retrogamecorps.com/2022/02/28/retroarch-starter-guide/",
        "read_more_link": "",
        "language": "en",
        "title": "RetroArch Starter Guide",
        "top_image": "https://retrogamecorps.com/wp-content/uploads/2022/02/ra-starter-guide-720p.png?w=1200",
        "meta_img": "https://retrogamecorps.com/wp-content/uploads/2022/02/ra-starter-guide-720p.png?w=1200",
        "images": [
            "https://retrogamecorps.com/wp-content/uploads/2021/07/fade-ezgif.com-gif-maker.gif",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/ra-starter-guide-720p.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-11.21.47-am.png?w=1024",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-11.38.29-am.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-11.39.26-am.png?w=1024",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-11.39.34-am.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-11.38.59-am.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-11.39.41-am.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-11.39.50-am.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-11.06.07-am.png?w=1024",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.007.png?w=1024",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-25-at-7.40.53-pm.png?w=778",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220227-104910.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220227-104921.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220226-092631.png?w=640",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220226-092700.png?w=640",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220226-092731.png?w=640",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220226-092536.png?w=640",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.008.png?w=1024",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220227-104951.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220227-105042.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220227-110323.png?w=1024",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.001.png?strip=info&w=600 600w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.001.png?strip=info&w=900 900w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.001.png?strip=info&w=1200 1200w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.001.png?strip=info&w=1500 1500w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.001.png?strip=info&w=1800 1800w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.001.png?strip=info&w=1920 1920w",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.002.png?strip=info&w=600 600w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.002.png?strip=info&w=900 900w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.002.png?strip=info&w=1200 1200w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.002.png?strip=info&w=1500 1500w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.002.png?strip=info&w=1800 1800w,https://retrogamecorps.com/wp-content/uploads/2022/02/aspect.002.png?strip=info&w=1920 1920w",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/bevel-adventure-island-usa-210125-123644.png?w=320",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/lcd3x-adventure-island-usa-210125-123530.png?w=320",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/sameboy-dmg-response-time-adventure-island-usa-210125-124101.png?w=320",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/gameboy-adventure-island-usa-210125-123819.png?w=320",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/gb-palette-dmg-adventure-island-usa-210125-123918.png?w=320",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/bevel-dmg-adventure-island-usa-210125-130028-1.png?w=320",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/sgb-1a-adventure-island-usa-210125-130633.png?w=320",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/sgb-2a-adventure-island-usa-210125-130716.png?w=320",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/sgb-3aadventure-island-usa-210125-130734.png?w=320",
            "https://retrogamecorps.com/wp-content/uploads/2021/01/colour_correction-768x984-1.png?w=768",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-10.51.45-am.png?w=1024",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screenshot_20220227-105243.png?w=720",
            "https://retrogamecorps.com/wp-content/uploads/2022/02/screen-shot-2022-02-27-at-11.07.00-am.png?w=1024",
            "https://0.gravatar.com/avatar/6fff46c0a0abb1644ff240ccd1b1f2c4ac05c7f96f4ae6daf9200275f7fcd2c3?s=64&d=identicon&r=G",
            "https://2.gravatar.com/avatar/be77d4eda5332cb9fb9546b84c70fd76f19de1a1efb95a0bdfc1b8dd6240c1af?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/91a7239ab71632be9fde3aa0dffd60e392c4b5d06c98f783622c7c8ab4bcc72d?s=64&d=identicon&r=G",
            "https://2.gravatar.com/avatar/8280bb99a0ad15637419a87b13c8e64857c65816a4b23684db76a5ae06e91a34?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/351fb09aa04123e821c57013dbd0e72168d2f6deddeb1dca501615d54c999a79?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/cb633ac47dfcebdc58ebeb7813934530ea3fdb6172bbb7b6596b75a63aa56398?s=64&d=identicon&r=G",
            "https://1.gravatar.com/avatar/46e3fb4d11a0feb9fd9760d91d3bc05d43b80677e59b613c8f6d1985f3cea0df?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/630c2753505fe445126c1da0a6034f00ec08d9ae9366791a893404d98b708959?s=64&d=identicon&r=G",
            "https://2.gravatar.com/avatar/2b84af6faa9a6e85dd3fafc5f2bad8cdfcf3b717eca6a331a4b7919120fc701d?s=64&d=identicon&r=G",
            "https://1.gravatar.com/avatar/af2a32f9b99707dc8bfc2c9dfae14f1b1a31ecc72be886fba744ccd71c911d59?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/989dfc3068dffa09ccb0eac7e1a19dab7268c53cfcaf603ed9b8b155179d1967?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/3e62a07686b7ae715c4f26684fdb1a599ecd773f4d9b473519a69d4787e2bc64?s=64&d=identicon&r=G",
            "https://1.gravatar.com/avatar/1a79eb504af57df382212e3464697207a1f16c6949201875d3909206d7a87909?s=64&d=identicon&r=G",
            "https://2.gravatar.com/avatar/e42b06a93716fa022b699a677be96c534dc5c11658448caed97864333de942ea?s=64&d=identicon&r=G",
            "https://1.gravatar.com/avatar/7c48c59bec91e35ae7f27ca7a4835bf09f5576bbe8780c7840785bf8bde7cdc2?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/f4de08ff346f81ccffe46a21e8eca5e08f4578f566feebc615c6ff01dd94bffc?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/60e5457a73532c74065b8de46337d65d452a144915ff8eb0789ea6fe9fee8af0?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/60e5457a73532c74065b8de46337d65d452a144915ff8eb0789ea6fe9fee8af0?s=64&d=identicon&r=G",
            "https://1.gravatar.com/avatar/a71653a0dfb40c36565cf61777ff73976cc44cf90acc3f26f5e4c85ba093e853?s=64&d=identicon&r=G",
            "https://0.gravatar.com/avatar/9933645e1c93afda36b44623e425e2df936720e8686a4172e70f2a6eba52bb58?s=64&d=identicon&r=G",
            "https://1.gravatar.com/avatar/d5167fa5c6c6f786db79d82ffead14453e4fe869887caf5e670079dc60df7ba3?s=64&d=identicon&r=G",
            "https://2.gravatar.com/avatar/56cccbbeaebd99eb0efbe9a15cd694998abaa6adc87102ab64afa8cb1849826c?s=64&d=identicon&r=G",
            "https://2.gravatar.com/avatar/2d7f69bb404498bfc9d56051c86bfbe1f2722d46aac0ecf8577927a104b36967?s=64&d=identicon&r=G",
            "https://1.gravatar.com/avatar/736da61b42518f82810b02079b97b2016d1cb48cde76a5fd9d67245e18a21c75?s=64&d=identicon&r=G",
            "https://retrogamecorps.files.wordpress.com/2021/01/patreon-join.png",
            "https://retrogamecorps.files.wordpress.com/2021/01/kofi-donate.png",
            "https://retrogamecorps.com/wp-content/uploads/2024/04/merchstore.png",
            "https://retrogamecorps.com/wp-content/uploads/2020/08/cropped-controller-icon-1.png?w=50",
            "https://retrogamecorps.com/wp-content/uploads/2020/08/cropped-controller-icon-1.png?w=50",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [
            "https://www.youtube.com/embed/icGYGriNkF4?version=3&rel=1&showsearch=0&showinfo=1&iv_load_policy=1&fs=1&hl=en&autohide=2&wmode=transparent"
        ],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2022-02-28T00:00:00",
        "summary": "",
        "meta_description": "Last updated: 28FEB2022 (see Changelog for details) RetroArch is one of my favorite programs to use for retro game emulation, because it can emulate many systems. But it does have quite a steep learning curve. In this guide I'm going to demystify some of the more peculiar things about this emulation frontend, and show you…",
        "meta_lang": "en",
        "meta_favicon": "https://retrogamecorps.com/wp-content/uploads/2020/08/cropped-controller-icon-1.png?w=32",
        "meta_site_name": "Retro Game Corps",
        "canonical_link": "https://retrogamecorps.com/2022/02/28/retroarch-starter-guide/",
        "text": "Last updated: 28FEB2022 (see Changelog for details)\n\nRetroArch is one of my favorite programs to use for retro game emulation, because it can emulate many systems. But it does have quite a steep learning curve. In this guide I’m going to demystify some of the more peculiar things about this emulation frontend, and show you how I set up RetroArch on my own gaming platforms.\n\nThis guide is meant to help you get set up with various RetroArch iterations. The video will primarily be done on Windows PC, but the same method will apply to MacOS, Linux, Android, iOS, Vita, and Xbox platforms, and more.\n\nRetroArch really shines on retro systems, particularly PlayStation 1 and below games. For more modern consoles, it is often more efficient to rely on standalone emulators, which are generally more optimized than RetroArch. However, if you are using a system that relies primarily on RetroArch for emulation (like Xbox), or you have a beefy PC that can run well regardless of optimizations, you may find success in emulating higher-end systems in RetroArch, too.\n\nTable of Contents What is RetroArch? Game and BIOS files Install RetroArch Understanding configurations and saves Set your file directory Update RetroArch assets, cores, and more Adjust the user interface Button mapping and hotkeys Optional features Create playlists Scaling and video options Shaders and filters Core options RetroAchievements Cheats Updating RetroArch Further reading Changelog\n\nWhat is RetroArch?\n\nRetroArch is a frontend for emulators, game engines and media players. It can run on the usual platforms like Windows, MacOS and Linux, but it also runs on iOS and Android for tablets and phones, as well as on game consoles like PS2, PS3, PSP, PS Vita, Wii, Wii U, 2DS, 3DS, Switch, and more. The frontend for RetroArch is often referred to as the “libretro frontend”.\n\nNote that technically, “RetroArch” should be pronounced like “RetroARTCH” versus “RetroARK”, because it was first based on Arch Linux, but both pronunciations are considered acceptable. I have a habit of pronouncing it the latter way, which is what you’ll hear in my videos.\n\nRetroArch consists of what they call “cores“, which function as emulators embedded in the program. So in this guide I will use the words “emulators” and “cores” interchangeably. Depending on the version of RetroArch you are using, you can pick and choose which cores to load, to be able to customize your experience, or the RetroArch build may come pre-loaded with all working cores.\n\nSo you might be asking yourself, why should I bother with RetroArch, if I already have standalone emulator options that will play my games? That’s a fair question. The answer is that RetroArch contains a lot of universal features that are not implemented in many of the other emulators. For example, with RetroArch, you can unlock the following features:\n\nWide system support. You can find RetroArch on many systems, and it can also emulate a ton of systems too. Here is a full core list so you can get an idea of all the emulation options within.\n\nUniversal button mapping. You can set your buttons for any RA core, and also save per-game settings and button remaps for the best experience. You can also set up hotkeys for things like save states, loading save states, bringing up the RA menu, fast forward, etc. With this method, you only have to remember hotkeys for one platform instead of different key mapping options across various emulators.\n\nPrecise video scaling options. With RetroArch, you can adjust the game image to match your device’s dimensions and resolution, or even apply bezel overlays to customize the layout of your screen. If you have certain preferences for your scaling (perfect pixel accuracy, or stretching out the image to take up the full screen), RA should have what you need.\n\nShaders and Filters. Shaders apply an overlay to your screen that can mimic scanlines, colorization, or other effects that will recreate CRT monitors, chunky LCD grid displays, and more. Filters behave like shaders for your games, and can alter the screen to provide you a better visual experience. Adding filters to your game image will smooth out pixel distortion for screens that don’t accurately match the original console you are emulating.\n\nPlaylists and thumbnails. RetroArch uses “Playlists” to organize the game library, and it will allow you to add box art (“Thumbnails”) to every game as you scroll through, and you can also set favorites, which is very handy.\n\nIn-game saves and save states. RetroArch has the ability to save your game with SRAM (in-game) saves like how it was on the original console, and you can also use save states to take a snapshot of any game at any time as well.\n\nFast forward, rewind support. RetroArch has universal support for fast forward and rewind hotkeys, which will allow you to navigate slow (or perilous) moments in certain games.\n\nUniversal cheats. With RetroArch, you can simply add the appropriate cheat files and access all of the cheats from the RA menu.\n\nAchievements. RetroArch supports Retro Achievements, which are super fun.\n\nNetPlay. You can use RetroArch to host or join online gaming sessions for retro games.\n\nRecording and Streaming. You can record your gameplay directly in the app, and even stream it to services like Twitch.\n\nActive development. RetroArch has been around since 2004 and its development team is very active.\n\nThat being said, RetroArch is not perfect. The user interface can be cumbersome to newcomers, and some emulation cores aren’t as performant as standalone emulators. So there may be times when standalone emulators are preferred to a full RA build.\n\nGame and BIOS files\n\nThe primary file requirements for running RetroArch will be the game files, as well as BIOS files for systems that require them.\n\nGame files will be standard ROMs that you would use with any other emulator. RetroArch (generally) has the ability to use .zip or .7z files that will compress those ROM files as well. To find which ROM files work best for your desired core, I recommend going to the Libretro Docs page, then navigating the Core Library menu on the left-hand side to find the core you want to use, and then consult the “Extensions” section to see what files are accepted. Here is an example of the Gambatte core section, which will show you the accepted file types for Game Boy and Game Boy Color, plus information on BIOS and other core-specific options.\n\nAt the end of the day, the most important thing for you to do is to build a standardized ROM library. This can be done in a number of ways, but the easiest way to do it would be to make a folder on your computer called “GAMES”. Inside, create subfolders for each of your systems (NES, SNES, GB, GBC, etc.). Then in each of those subfolders, add your ROM files. I recommend sticking with the same file type for each system, like .sfc files for SNES games. File names should be named according to the “No Intro” standard (e.g. “Super Mario Bros. 3 (USA)”).\n\nAdditionally, inside your GAMES folder, make a BIOS folder and put the BIOS files inside. BIOS files are necessary system files for certain consoles to run properly. Examples of systems that will not run without BIOS include PlayStation 1, Game Boy Advance, and Sega CD. Here is more information about BIOS files, including links to specific BIOS requirements for each core.\n\nHere is a list of recommended BIOS files to get you started:\n\nSEGA CD: bios_CD_E.bin bios_CD_J.bin bios_CD_U.bin FAMICOM DISK SYSTEM: disksys.rom GAME BOY (for boot logo): gb_bios.bin GAME BOY COLOR (for boot logo): gbc_bios.bin GAME BOY ADVANCE: gba_bios.bin NEO GEO: neogeo.zip PLAYSTATION 1: scph1001.bin TURBOGRAFX-CD: syscard1.pce syscard2.pce syscard3.pce\n\nBIOS files cannot be shared due to copyright, so you are on your own to dump them from the original console or to find backup RetroArch BIOS packs via the Internet.\n\nInstall RetroArch\n\nDepending on what device or console you are using, you may have to manually install RetroArch, or it will already be loaded. For example, RetroArch is already installed on certain firmwares and operating systems, like Batocera, EmuELEC or RetroPie, and so you don’t need to install anything. However, for something like a PS Vita, Xbox, Android phone, Mac, or Windows PC, you will need to download and install RetroArch yourself.\n\nTo install RetroArch, head over to their Downloads page and find the platform you want to use to run RetroArch. You can then download the version of your choice and install it. Note that there may be 64-bit and 32-bit versions available. In most cases, you want to install the 64-bit version if your device can handle it.\n\nSome notes:\n\nThe list on the Downloads page features Stable releases. If you want more cutting-edge (and potentially buggy) software, you can also download their Nightly builds here. In most cases, the Stable releases are perfectly fine.\n\nIf using Android, you can download and install RetroArch directly from the Google Play Store. However, the Google Play Store version is not updated as frequently as the version you can find on the RetroArch Downloads page, so for the latest and greatest features, it might be easier to download the APK and sideload it yourself.\n\nAfter you have installed RetroArch, launch the app for the first time. This will create your file directory structure, and you can also check to see if your controller works out of the box with the interface. If it doesn’t, check out my button mapping section.\n\nUnderstanding configurations and saves\n\nBefore we get started, it is very important to understand how configuration saves work in RetroArch, because it follows a specific logic. 99% of the time when someone tells me they “screwed up their RetroArch” it’s because they saved a configuration in a way they didn’t expect. So let’s take a minute and explain how this stuff works.\n\nCONFIGURATION FILE. Basic configurations are saved in a configuration file called retroarch.cfg. This is where you would save system-wide configurations that would apply to the entire frontend. For example, this file will dictate what menu driver (theme) to display when showing RetroArch, your button mapping preferences, hotkeys, video scaling options, and more. To make adjustments to the configuration file, you need to be using RetroArch without a game loaded, and then you will make your adjustments and go to Main Menu > Configuration File > Save Current Configuration. Consider this your “baseline” configurations. Note that the configuration file can only be saved when a game is NOT loaded.\n\nOVERRIDES. If you want to make a specific configuration that applies only to a certain emulator, emulated console, or game, you will want to use overrides. These are basically configuration (.cfg) files that are specific to a game or console. For example, if there is a certain game where you want to use a special hotkey or video scaling option, you would open up that game, make the adjustment in the settings, and then save it as a per-game override. Every other game will function normally, but the next time you boot that specific game, those per-game settings will load.\n\nThere are three types of overrides, which follow a specific hierarchy: core overrides, content directory overrides, and game overrides. In order to save an override, you need to launch a game first, and then access the RetroArch Quick Menu (which we will set up in the hotkeys section below), and then go to Quick Menu > Overrides to save the override.\n\nCORE OVERRIDES will save your configuration for that entire core. This is good when you have a core that emulates multiple systems and you want to have the same experience across each of those systems. An example of this would be the Gambatte core, which emulates Game Boy and Game Boy Color. If you make a CORE OVERRIDE for Gambatte, all Game Boy and Game Boy Color games will be affected when launching those games with the Gambatte core.\n\nCONTENT DIRECTORY OVERRIDES will save your configuration for every game file in that same folder. For example, if you save a content directory override for a Game Boy game, it will affect all Game Boy games, but not Game Boy Color games since those ROM files will (likely) reside in a different folder — even though they use the same core. This feature is helpful when you have disparate systems that are supported by the same core. Another example is the Genesis Plus GX core, which can support Sega Genesis, 32X, Master System, and Game Gear. If you were to make some configuration adjustments that would be beneficial for the Genesis but not the Game Gear, you would want to use a content directory override instead of a core override, that way it would only affect Genesis games.\n\nGAME OVERRIDES affect only that one game, and not others.\n\nREMAP FILES. If you want to save game-specific controls, then this is done via a REMAP (.rmp) file. To do so, you will need to enter the RetroArch Quick Menu > Controls section, make your changes (likely in the Port 1 Controls subsection), then save a Core / Content Directory / Game Remap file. These three types of remap files follow the same pattern as the overrides above.\n\nThe hierarchy of these overrides and remap files are as follows:\n\nSo by default the settings within retroarch.cfg will be your primary configuration settings, but if you have a core override then those settings will take precedence. But if you also have a content directory (or game) override, that will take precedence over anything else.\n\nINDEPENDENT SAVES. Confusingly, there are a couple other options and configurations that work outside of the process above. This is because they are governed by their own configuration files, and not the typical retroarch.cfg or override cfg/rmp files mentioned above.\n\nIf you open a game then go into Quick Menu > Options and make adjustments here (which are called “Core Options“), it will affect everything that boots from that core, and you don’t need to manually save it — the settings changes will just save at the core level when you close out the game. Within this Options menu you can also choose to manually save these core options by game or content directory by going into the Manage Core Options section.\n\nIf you open a game then go into Quick Menu > Shaders you can save what they call “Shader Presets“, which will apply a specific shader profile. Like with other options, you can specify how they apply, as either GLOBAL (whole system), CORE, CONTENT DIRECTORY, or GAME presets.\n\nNote that some operating systems, like EmuELEC, Batocera, and 351ELEC, use their own frontend (EmulationStation) to synchronize settings with the RetroArch system that functions as a backend. This means that you will go into the EmulationStation frontend menu and make adjustments there, which will then trigger configuration or override file adjustments in RetroArch without having to actually use RetroArch itself. As an added bonus, 351ELEC will actually provide optimized settings custom tailored to the device you are using it on. Alternatively, if you try to go into RetroArch and adjust things yourself, you may find that your saved configurations won’t work, because the EmulationStation settings will override RetroArch. In most cases, stick with the EmulationStation menu to make your changes.\n\nSet your file directory\n\nWhen you launch RetroArch for the first time, it will create a file structure, which they call “Directories” on your device. Generally this will be the same folder where your RetroArch app is located, or in the root directory of your device (like an Android phone). However, you may want to adjust the file locations manually, so that you can point RetroArch to your own BIOS folder, or to change the location of your save files for easier access.\n\nGo to Settings > Directory and you will see a list of directory paths. Here you can configure them to your needs. Some adjustments worth considering:\n\nSystem/BIOS: You can either go into the default RetroArch directory on your device and find the “system” folder to add all your BIOS files, or you can just change the BIOS location to point to wherever your BIOS are already saved. Go in here and navigate to your BIOS folder, then select “Use This Directory”.\n\nFile Browser: You can adjust this to the main GAMES folder you have on your device, so that way you don’t have to navigate to that folder every time you want to add a new system to your Playlists. This will save you time in the long run.\n\nCheat Files: If you manually install cheat files like in my section below, this option will allow you to set a new default cheat file location. If you were able to install cheats via the Update Cheats function described in the next section, you won’t need to do anything.\n\nScreenshots: Here you can adjust the screenshots location to the folder of your choice.\n\nSave Files: For easier access, you can change the location of your save files on your device. If you are running RetroArch on your PC, you could theoretically point this section to a cloud-based folder (like a Dropbox or Google Drive folder) and create a cloud-based save system that would work across multiple devices.\n\nSave States: This works like the Save Files section above, but with Save States. The same process applies here.\n\nYou could offload even more of your directories to custom folders as well, so that they were located somewhere independent of the default RetroArch folders. This is beneficial if you want to update RetroArch in the future while preserving your current setup. See the Updating RetroArch section below for more information.\n\nAfter you have made your adjustments, be sure to go to Main Menu > Configuration File > Save Current Configuration.\n\nUpdate RetroArch assets, cores, and more\n\nNow that we have built our file structure and know how to save configurations, let’s go in and start updating RetroArch. The core system you installed may not have all of its functions included, so you will want to load them yourself. Note that you will need to be connected to the Internet for this section to work. To do so, go to Main Menu > Online Updater and run some of the updater functions available. I recommend the following:\n\nUpdate Core Info Files\n\nUpdate Assets\n\nUpdate Controller Profiles\n\nUpdate Cheats\n\nUpdate Databases\n\nUpdate Shaders\n\nNote that some versions of RetroArch may not have these options, which is done by design. Don’t sweat it.\n\nAdditionally you will want to go into Online Updater > Core Downloader and download the cores you want to run on your system. You can download as many or few as you would like. I would recommend fully downloading one core before starting the download for the next core, because it can mess up your downloads to queue them all up at once. Periodically, you can also go in and select Update Installed Cores to see if there have been any updates to the cores since you first downloaded them.\n\nMy preferred RetroArch cores for popular systems:\n\nArcade (FB Alpha 2012) -- for low-end devices Arcade (FinalBurn Neo) -- fighting games and beat'em ups Arcade (MAME 2003-Plus) -- all-around arcade emulation Commodore Amiga (PUAE) DOS (DosBox-Pure) NEC PCE/TG-16/PCE-CD/TG-CD (Beetle PCE) Nintendo GB/GBC (Gambatte) Nintendo GBA (gpSP or mGBA) Nintendo Virtual Boy (Beetle VB) Nintendo DS (melonDS) Nintendo NES (Nestopia or fceumm) Nintendo SNES (Snes9x Current) Nintendo 64 (ParaLLEl or Mupen64Plus) Nintendo GameCube/Wii (Dolphin) ScummVM -- point-and-click PC games Sega Master System/Genesis/CD (Genesis Plus GX) Sega 32x (PicoDrive) Sega Saturn (YabaSanshiro or Beetle Saturn) Sega Dreamcast (Flycast) SNK Neo Geo (FinalBurn Neo) Sony PlayStation (DuckStation, SwanStation, or PCSX ReARMed) Sony PlayStation 2 (PCSX2) Sony Playstation Portable (PPSSPP)\n\nAdjust the user interface\n\nOnce you have an understanding of how to save configurations, and we have the most updated assets, let’s start actually adjusting RetroArch. We’ll start with the user interface, which is called a “menu driver” in RetroArch.\n\nWhen starting up the system, you will likely be greeted with a black and white interface called “glui”. It’s okay, but I find that it can be confusing to navigate. Instead, I prefer to use an older interface called “xmb”, modeled after the original PlayStation 3 cross-menu bar. I prefer this menu because it makes the submenus more logical and visual to me, so that is what I will use in my video guides.\n\nTo change the User Interface, go to Settings > User Interface > Menu and adjust it to one of the other menus. Then go to Configuration File > Save Current Configuration to save your changes. After you exit and re-open RetroArch, you will have the new menu.\n\nYou can also adjust the menu appearance to fit your preferences. To do so, go to Settings > User Interface > Appearance and adjust the settings here. You can adjust the Menu Scale Factor to increase or decrease the menu font, adjust the menu icons, or change the background color, and more.\n\nFinally, you can adjust the menu items that are displayed on your interface, to clean it up a bit. Go to Settings > User Interface > Menu Item Visibility and toggle off the menus you don’t want to see. In general, these are the menu items I turn off by default:\n\nShow ‘Explore’ > OFF\n\nShow ‘Favorites’ > OFF\n\nShow ‘Images’ > OFF\n\nShow ‘Music’ > OFF\n\nShow ‘Netplay’ > OFF\n\nAfter you have made your adjustments, be sure to go to Main Menu > Configuration File > Save Current Configuration.\n\nButton mapping and hotkeys\n\nButton mapping is likely the next thing you want to do. This will align your controller’s controls with the RetroArch universal button mapping. If you are using an x-input controller (like an Xbox controller) the buttons will likely be automatically mapped, and if you are using a handheld device that has a RetroArch backend already baked in (like ArkOS, EmuELEC, or 351ELEC), then you likely don’t have to map the controls. But some bluetooth or wired controllers may behave unexpectedly, so let’s adjust the button mapping.\n\nTo configure your controls, open RetroArch and go to Settings > Input > Port 1 Controls > Set All Controls and follow the prompts.\n\nAfter you are done setting up the controls, you will want to decide which buttons you want to use for OK and Cancel buttons. If you don’t like how they are configured by default, you can go into Settings > Input > Menu Controls and swap the buttons.\n\nOnce you have mapped your controls, be sure to go to RetroArch Main Menu > Configuration File > Save Current Configuration. Note that you can make core or game specific button mapping by using overrides, if you want to have a special setup for a particular game or core. Additionally, in the Input setting there is an option to create and save Controller Profiles, which you could use for multiple controllers (for example, if you wanted to use a specific controller for SNES gameplay, you could map the controls to that one controller and then choose that profile for SNES gameplay).\n\nHOTKEYS are simple button combinations that will allow you to make certain adjustments while in games and RetroArch. You will want to set these up next.\n\nOpen RetroArch and then go to Settings > Input > Hotkeys. Here you will see a number of hotkey options.\n\nHere are a couple options that are fundamental to the hotkey experience:\n\nConfirm Quit: with this ON, you will have to press the Quit RetroArch hotkey twice to actually exit. This can be good to avoid accidental button presses, but can get annoying over time. I leave this one OFF.\n\nMenu Toggle Controller Combo: this option will pause your game and bring up the RetroArch Quick Menu. This can be a specific key combination that works independently of any other hotkey setup. For this one I choose Hold Start (2 Seconds). This means if I hold the START button for two seconds, the RetroArch Quick Menu will appear.\n\nHotkey Enable: this will be your primary hotkey button. Every hotkey you choose in the options below it will need to be used in combination with your hotkey enable button. For this I usually choose the SELECT button. This means that SELECT + whatever other hotkey I choose will be my button combo to activate a hotkey shortcut.\n\nThere are several hotkeys I recommend you set while you’re in these settings. Here are some of my preferred hotkeys:\n\nHotkey Enable: SELECT button Fast-Forward (Toggle): R2 button Rewind: L2 button * Load State: L1 button Save state: R1 button Show FPS (Toggle): Y button Pause (Toggle): A button ** Reset Game: B button Close Content (or Quit RetroArch): START button *** Menu (Toggle): X button Volume Up: Left d-pad Volume Down: Right d-pad Run-Ahead (Toggle): Up d-pad\n\n* For the Rewind function to work, you will need to go into Settings > Frame Throttle > Rewind > ON. This is not something I would recommend turning on as a global configuration, because some systems (like Saturn or PS1) will be very slow with it on, and some (like PSP) may outright crash. Instead, I recommend setting the hotkey now, then for the systems you want to use rewind (like NES, for example), you can go into the Quick Menu by pressing SELECT + X and then go turn Rewind on and save it as a core override. More information is in the section below.\n\n** There is a bug in the Android version of RetroArch when mapping the “Pause Game” hotkey. This will break the use of the button within the menu altogether. So for Android, skip that particular hotkey.\n\n*** Note that your SELECT + START hotkey should be set to either “Close Content” or “Quit RetroArch”, but this will depend on your use case. If you plan on using RetroArch as your frontend, then you will want to Close Content to return to the RetroArch menu. If you are using a different frontend, like EmulationStation or LaunchBox, you will want to set it to Quit RetroArch so that when using this hotkey it will return you to the frontend instead.\n\nAfter you’ve made all of your configurations, go to the RetroArch Main Menu > Configuration File > Save Current Configuration.\n\nOptional features\n\nAn option I like to set with my games is AUTO SAVE / AUTO LOAD. This will create a save state when you close down a game, and then load that save state when you launch the game again. It provides a pick-up-and-play feel to your retro gaming. To set this, use the following two commands:\n\nSettings > Saving > Auto Save State > ON\n\nSettings > Saving > Load State Automatically > ON\n\nThe auto save/load feature works best when combine with the “Reset Game” hotkey above, so that way if your game loads at a part you don’t want, you can press SELECT + B to reboot the game and start over.\n\nThe REWIND feature in RetroArch is helpful when you want to re-do a mistake on the fly. And while we set it as the SELECT + L2 hotkey above, by default this feature should be turned OFF in RetroArch, and then enabled only for certain systems. That’s because this feature has a somewhat high performance tax which can negatively affect performance on systems like PS1 and above. Instead, you will want to use a core override to save this setting. First, start up a game (like an NES game), and then press SELECT + X to bring up the Quick Menu, then navigate to the Rewind section within the Quick Menu. Now select Rewind Support > ON. Now you can go to Quick Menu > Overrides > Save Core Overrides, which will enable rewind support on all NES games running that emulator core.\n\nThere is also a RUN AHEAD feature which will reduce latency on certain setups. For example, this may be beneficial when using the Android-based version of RetroArch and a bluetooth controller, to give a more natural feel to retro gaming. Like with the rewind feature, this has a performance tax and should only be used on systems that would benefit from it (like SNES and below). For this reason we’ll use a core override again. First, start up a game (like an NES game), and then press SELECT + X to bring up the Quick Menu, then navigate to the Latency section within the Quick Menu. Now select Run-Ahead to Reduce Latency > ON. Now you can go to Quick Menu > Overrides > Save Core Overrides, which will enable run ahead support on all NES games running that emulator core. Note that this is one of many advanced features to improve latency; here is more information.\n\nFinally, on many versions of RetroArch (specifically those with touchscreen capability, like Android), they may have a TOUCHSCREEN BUTTON OVERLAY on your screen when starting up a game. If you have a controller you likely do not want to see this overlay. To turn it off, go to Settings > On-Screen Display > On-Screen Overlay > Display Overlay > Hide Overlay When Controller is Connected > ON.\n\nCreate playlists\n\nYou can set up playlists within RetroArch to browse and launch your games directly in the program. This will be helpful if you just want to remain within RetroArch to launch your games. There are two methods for creating playlists in RetroArch:\n\nSCAN DIRECTORY. This is the most straightforward way to make playlists, and is best for systems with unzipped ROMs that have distinct file types (like .nes games). With this option, you will navigate to the folder that contains your ROM files, then select “Scan this Directory”. RetroArch will then recognize and scan the directory for games, and assign the console and assets to that system. You should then see it in your playlist. When you have a more common file type for your games (like .bin files for Genesis games, it’s better to do a Manual Scan).\n\nMANUAL SCAN. This is the preferred way to scan your directories because it gives you more control. Here is the breakdown:\n\nContent Directory: navigate to your ROM folder and select “Scan this Directory”\n\nSystem Name: select the system name you want to associate with your playlist\n\nCustom System Name: use this if you want to use a special name for this playlist. Note that you will also need to set your “System Name” to “Custom” for this to work\n\nDefault Core: select the core you want to associate with this play list. Afterwards you can assign a different core to specific games by selecting the game and choose “Set Core Association”\n\nFile Extensions: add in all of the file extensions you want to scan for your console. You can leave this blank if they are all the same (e.g. zip files for arcade games), but for the most part it’s helpful to add these in, especially if you are using several file types. Separate each file extension with a space (no comma), like this for Dremcast: cdi, gdi, chd\n\nScan Recursively: turn this on if you want to scan subfolders too\n\nScan Inside Archives: this will scan the files within the zip file, whether you want this on will depend on the system you are scanning. You will want this off if scanning arcade games\n\nArcade DAT File: this is important if you are scanning arcade games, because it will associate your zip file (“simps2pj”) with a full file name (The Simpsons). To set this up, head to this page and download the latest MAME dat/xml file. Then save this file somewhere that you can access on your device, and choose it when at this part of the menu\n\nArcade DAT Filter: with this selected, only arcade games that appear in the DAT file will show up in your playlist. Generally you want this setting OFF\n\nOverwrite Existing Playlist: this will overwrite anything already in the playlist. You generally want this OFF if you are just adding new games to your playlist\n\nIf you want thumbnails to appear next to your games, you need two things: 1) the files must be named according to the “No Intro” standard (e.g. “Super Mario Bros. 3 (USA)”) and 2) go into Online Updater > On-Demand Thumbnail Downloads > ON so that they will download when you browse through your playlist. Alternatively, you can manually scan each playlist for thumbnails in the Online Updater section instead.\n\nFinally, you can go into Settings > Playlists and adjust how your playlists behave. There is also a Manage Playlists section within here that will allow you to adjust things like the default core, how the thumbnails appear, or just delete the playlist altogether.\n\nScaling and video options\n\nOne of the biggest advantages of using RetroArch is that you can use universal and streamlined video options. So let’s take some time to go over the basics here.\n\nASPECT RATIO\n\nLet’s first define aspect ratio. A square screen aspect ratio would be defined as 1:1 (or 1.0), and very few game systems ran at this aspect ratio (Watara Supervision). At the other end of the spectrum, a standard widescreen TV aspect ratio would be 16:9, or 1.76,\n\nMost classic home consoles had an aspect ratio of 4:3 to match CRT TVs. Handheld systems had varying aspect ratios, due to having a variety of screens. Arcade system aspect ratios are also all over the place, because each cabinet was different. Some other notes:\n\nAspect ratios for some systems are not set in stone. Atari 2600 games didn’t technically have pixels, so they are at a different standard. Similarly, more modern consoles like the PS2 had widescreen options and variable resolutions.\n\nThe NES had a resolution of 256×240, but only showed 256×224 on NSTC screens (which were limited to 224 vertical pixels); the 256×240 resolution can still be displayed on emulators. So while the NTSC TV showed an aspect ratio of 4:3 (1.33), most emulators show NES at 16:15 (1.07), and likely look best at a 4:3 anyway.\n\nSome games actually had different native resolutions on the same system. Most NTSC SNES games had a native resolution of 256×224 pixels, while Star Fox had 224×190, and Yoshi’s Island had 256×208. So for the chart below I stuck with the general NTSC aspect ratios.\n\nPAL TVs output a 240-pixel height, so PAL ROMs may have different resolutions than shown below. PAL ROMs on Nintendo GameCube have a resolution of 768×576.\n\nSome systems introduced scaling for certain games. For example, the PS1 mostly played games at a resolution of 320×240, but some scenes could scale up to 640×480. N64 games could scale from 320×240 up to 640×480 as well.\n\nCommon aspect ratios for handheld and home console systems (click to enlarge)\n\nSo why is aspect ratio important? Because if you plan on playing RetroArch on a modern TV or monitor (which likely has a 16:9 aspect ratio), emulated systems at their native aspect ratio will have black bars on the left and right sides. If you want to preserve the native aspect ratio then it’s all good, but if you want to stretch out the display to take up more space on your TV, then you will need to adjust scaling options.\n\nYou can adjust the aspect ratio by going into Settings > Video > Scaling > Aspect Ratio and adjusting your global configuration. I would recommend “Core Provided” since that will allow each emulator core to decide the appropriate aspect ratio. If you want to stretch the aspect ratio to fit your screen no matter what, you would want to select your screen’s ratio (like 16:9). Just beware that the emulation police will likely come for you if you don’t use the proper aspect ratio.\n\nAfter you have made your adjustment, go to Main Menu > Configuration File > Save Current Configuration. You could also use the Overrides function to make core-specific or game-specific configurations.\n\nINTEGER SCALING\n\nBecause many handheld systems had a much lower pixel density than the resolution of your TV, monitor, or phone, some of these systems will benefit from integer scaling. Integer scaling is defined as scaling by a factor of a whole number (2x, 3x, etc), as opposed to non-integer scaling (1.5x, etc). When turned on, RetroArch will scale up to the greatest integer scale below your device’s resolution. So for Nintendo 64 games, which have a native resolution of 640×480, it will scale up to 2x, or 1240×960, with black borders on all sides. This will keep a 1:1 pixel ratio and everything will look nice and crisp, so long as you don’t mind the black bars around the image.\n\nIf you don’t turn on integer scaling, the image will scale to match your device’s display (while preserving aspect ratio) to fill out as much of the screen as possible, but this may result in pixel distortion which can make some pixels look distorted on your display. You may not notice the difference, which is totally fine. You can also use shaders or filters to re-balance the image, as you’ll see in the section below.\n\nTo turn on integer scaling, go to Settings > Video > Scaling > Integer Scaling and make your adjustment. Like with everything else, you will need to save your configuration file, and you could also use overrides to make per-core or per-game settings, too.\n\nShaders and filters\n\nYou can add Shaders to your game image to recreate classic looks (like scanlines to mimic CRT displays) or LCD grids, and more. They are stackable and adjustable, giving you a lot of freedom in their implementation. For more information on shaders, check out this page from RetroArch. Shaders can become very complex, so we will stick with just the basics here.\n\nTo find shaders, start a game then enter the Quick Menu > Shaders > Video Shaders > ON, then navigate to the Load menu. You will likely have the choice of glsl or slang shaders; slang shaders are newer but may not be compatible with your device. You can experiment with the two to find which set you prefer. Within each shader folder will be subfolders that contain shader collections. Some of the best places to start looking are the handheld folder (for handheld systems) or the interpolation folder. Once you have found shaders you like, you can save them as global, core-based, or game-based presets within the Shaders folder.\n\nFilters behave a lot like shaders but are more CPU intensive, although sometimes they can create a more accurate effect than shaders alone. You can find the filters section in Settings > Video > Video Filter. The Normal 2x and 4x shaders are effective in balancing pixels when not using integer scaling. This will give you the best “clean” screen option but will have some CPU tax, so I do not recommend using them on lower-end consoles like RK3326 handheld devices (Abernic RG351 series, PowKiddy RGB10, etc.). Another set of filters that work really well with NES and SNES games are the Blargg filters, which recreate the experience of using an older television set. Once you have found a filter you like, you can save the configuration file for a global setting, or use overrides for core-specific or game-specific settings.\n\nNote that the way you save shaders versus filters is different. Shaders are saved by their own presets within the Shaders setting menu, while Filters are saved via overrides or the global configuration file (Save Current Configuration).\n\nCore options\n\nThe last settings worth messing with are core options. You can find these by starting up a game, entering the Quick Menu > Options section, and seeing what core options are available. For example, on higher-end systems like N64 or PSP, within the core options you can find the ability to upscale the resolution from 480p to 720p or 1080p, or higher. Each core options section will be unique to that core, so go in there and see what options you have. If you have any questions about any of these settings, I recommend consulting the LibRetro Docs page and browsing their Core Library to see what options are available and what they do.\n\nAn easy example of core options would be to adjust colorization options for Game Boy within the Gambatte core, demonstrated above.\n\nOpen a Game Boy game in RetroArch\n\nBring up the RetroArch Quick Menu, then go to Options > GB Colorization > Internal. Next, go to Internal Palette > Special 1. This will produce a night light green colorization. For colorization that is more in line with the original DMG display, set it to Options > GB Colorization > DMG. Experiment to find what you like best! Above you can see three Super Game Boy colorization options.\n\nTo set it as default for that game or for all Game Boy games no further configuration is necessary. Core options will automatically save when you close the game out. To save it for a specific game, go to Options > Manage Core Options > Save Game Options.\n\nAnother core options adjustment you could make in Gambatte is LCD ghosting, which will recreate the original blur effect on the Game Boy.\n\nGo to Quick Menu > Options > Interframe Blending. There you will see two LCD ghosting effects:\n\nLCD Ghosting (Accurate)\n\nLCD Ghosting (Fast)\n\nTo set it as default, go to Overrides > Save Content Directory Overrides.\n\nFinally, in addition to ghosting and GB colorization, the Gambatte RetroArch core also provides an accurate color correction for Game Boy Color games, as you can see above. This setting is found in Quick Menu > Options > Color Correction Mode > Accurate. You can also adjust the “frontlight position” options within Color Correction Mode to tone down any harsh contrast in your current configuration.\n\nRetroAchievements\n\nOne neat feature that is available within RetroArch is a service called RetroAchievements. These function as you would expect — as you complete a milestone in a retro game, you will get an achievement pop-up celebrating that accomplishment. Moreover, you can track your achievements from within RetroArch or on the RetroAchievements website. And if you want to go all the way down the rabbit hole, you could compete with friends or join the community to participate in discussions or contribute to creating or refining achievements in the future. Note the you must be connected to the internet for RetroAchievements to work.\n\nTo get started, go to RetroAchievements.org and register for a free account. Then in RetroArch, go to Settings > Achievements > ON and enter your username and password. Finally, to save this setting, go to Main Menu > Configuration File > Save Current Configuration. The same account can be used on multiple versions of RetroArch spread across various platforms.\n\nIf you’d like to add me as a friend or track my (abysmal) progress on retro games, here is my profile.\n\nCheats\n\nRetroArch has an embedded universal cheat system, which can be used in a pinch or for the duration of your game.\n\nTo set these up, you must first go into Main Menu > Online Updater > Update Cheats. This will download the cht database and install everything automatically.\n\nIf you do not have internet access on your device, or if you use an operating system that doesn’t enable the cheats downloader function, you can still load cheats offline. This only needs to be done one time.\n\nFirst, go to this GitHub page and click on the green “Code” button, and select Download Zip. Download that file, and unzip it. Inside you’ll find a folder named “cht”, and within that, a bunch of game system folders. Grab the game system folders for the systems that you want to enable cheats for, and place those folders somewhere handy, like in a “Cheats” folder within the GAMES folder where your ROMs reside.\n\nOpen up RetroArch then navigate to Settings > Directory > Cheat File, and then navigate to the Cheats folder, then select <Use This Directory>. To save this setting, go to Main Menu > Configuration File > Save Current Configuration. Now, whenever you try and load cheats, it will default to your Cheats folder to find your cheat files.\n\nOnce you have the cheat files installed, it’s easy to activate them. Start up a game, then go to Quick Menu > Cheats > Load Cheat File\n\nThe process of updating RetroArch is unique for each system. For example, on Windows, you can update the program by simply overwriting the .exe file with a newer version. For more information, I recommend going to the installation page of your respective RetroArch version and see what the team says to do. I wouldn’t sweat too much about keeping the absolute latest version of RetroArch on your device; it’s often enough to use a stable build and update your cores via the Online Update tool instead.\n\nAnother way to update RetroArch is to do a manual reinstallation while preserving your most critical files. To do so, you would want to go into the Settings > Directory section and point some important folders to somewhere besides the default RetroArch folder. Here is the process:\n\nCreate the following folders somewhere safe:\n\nSystem/BIOS\n\nThumbnails\n\nConfigs\n\nCheat Files\n\nOverlays\n\nController Profiles\n\nInput Remaps\n\nPlaylists\n\nSave Files\n\nSave States\n\nNote that if you are just starting up RetroArch for the first time (i.e. nothing is saved in the corresponding RetroArch folders already), you don’t need to do anything else. However, if you have been using RetroArch for a while already, then you want to go into the default RetroArch folders and copy their contents from their current location to your new location.\n\nGo into Settings > Directory and point the above directories to their new location.\n\nBefore installing the new version of RetroArch, you need to find the retroarch.cfg file on your system. Its location will vary by device. On PC, you can find it in the root directory of the retroarch.exe file. On Android, it will be found in the Android > Data > com.retroarch.aarch64 (or similar) folder. Save a copy of this file somewhere you can access later.\n\nDownload and install the new version of RetroArch and install it onto your device. You may need to delete the old one first (don’t worry, the folders you saved elsewhere will be fine). Before starting up RetroArch for the first time, place a copy of the retroarch.cfg in the same place where you found it originally.\n\nLaunch RetroArch and it should pull up the retroarch.cfg file and all of your settings and directory locations along with it. You will need to go into the Online Updater tool and re-download assets, databases, etc.\n\nFurther reading\n\nThis guide, while quite long, only scrapes the surface of what is available in RetroArch. I’ve made a couple dedicated guides for other functions, such as multi-disk gameplay, or NetPlay. You can find those guides below, and let me know in the comments if there is something else you’d like me to tackle in the future.\n\nMulti-Disk Gameplay Guide\n\nNetPlay Guide\n\nChangelog"
    }
}