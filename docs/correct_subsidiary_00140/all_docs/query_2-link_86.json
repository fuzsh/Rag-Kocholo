{
    "id": "correct_subsidiary_00140_2",
    "rank": 86,
    "data": {
        "url": "https://docs.oracle.com/middleware/11119/wcp/plan/pywcp_tasks.htm",
        "read_more_link": "",
        "language": "en",
        "title": "Planning and Building a Portal",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/pywcp_decision.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/pywcp_portal_template.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/wcadm_wpa_stage_prod.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/wcpaa_port_admacc2.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/jdev.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/jpsdg_dev_test.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/wcsug_dcmnts_docspg.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/jpsdg_srm_adminui.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/cross.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/tick.gif",
            "https://docs.oracle.com/middleware/11119/wcp/plan/img/admin_gen_pgtem.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2015-03-26T18:40:55+00:00",
        "summary": "",
        "meta_description": "Provides a starting point for portal development projects. Introduces portals and portal use cases at a high level, describes how to pick an appropriate development approach, and discusses the kinds of development tasks you'll need to plan for.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "2.2.1 Considering the Portal Builder Approach\n\nPortal Builder is a browser-based, packaged environment for building portals in WebCenter Portal. Oracle recommends Portal Builder as a long-term solution to your portal needs.\n\nIn Portal Builder, you can create a portal, add and edit the pages of a portal in the page editor (Composer), and administer a single portal as the portal creator. The system administrator has access to the Portal Builder administration area that allows for administering all portals. Using Portal Builder, portal creators select from out-of-the-box or custom portal and page templates, simplifying and standardizing the portal creation process. A drag-and-drop paradigm makes it easy to add content, layout, and feature components to the portal.\n\nPortal Builder is oriented toward application specialists and knowledge workers who create, build out, customize, and manage individual portals, and system administrators who manage global portal settings. Figure 2-2 shows the Portals page in Portal Builder in a browser.\n\nFigure 2-2 Creating a New Portal in Portal Builder\n\nDescription of \"Figure 2-2 Creating a New Portal in Portal Builder\"\n\nWhen you choose the Portal Builder path, developer skills, such as ADF and Java, are only required if you want to develop custom components that are not provided by Oracle WebCenter Portal out-of-the-box. Developers can use JDeveloper to build and deploy any specialized custom skins, page styles, page templates, content display templates, navigations, resource catalogs, data controls, task flows, portlets, and managed beans that you may want to offer in Portal Builder.\n\nIt is important to note that Portal Builder is a multi-portal solution. You can install a single instance of Oracle WebCenter Portal and host multiple portals within it. You can use out-of-the-box templates to get started and subsequently customize them. Typically, system administrators delegate administration rights to designated individuals, so they can manage the portal themselves, reducing the cost to the IT department and enabling thousands of users to be served with minimal support overhead. Portal Builder is the only approach that provides built-in mobile device support and capabilities.\n\nEverything you need to know about building and managing portals with Portal Builder is documented in Building Portals with Oracle WebCenter Portal. Tasks for administering the Portal Builder environment are covered in \"Managing Portals in Portal Builder Administration\" in Administering Oracle WebCenter Portal. The following sections provide a summary overview:\n\nSection 2.2.1.1, \"Understanding the Portal Life Cycle with Portal Builder\"\n\nSection 2.2.1.2, \"Managing Portal Assets with Portal Builder\"\n\nSection 2.2.1.3, \"Integrating Content into a Portal with Portal Builder\"\n\nSection 2.2.1.4, \"Administering Oracle WebCenter Portal with Portal Builder\"\n\n2.2.1.1 Understanding the Portal Life Cycle with Portal Builder\n\nThe portal life cycle describes the process of creating a portal using Portal Builder through deployment to a production instance. The phases of the life cycle typically include development, testing, staging, and production. Each phase requires certain tasks to be performed. Some tasks are performed only once, like setting up a content repository. Others are performed more frequently, like creating backups, and performing nightly builds. With Portal Builder, it is easy to export an entire portal or individual assets and import them into a different environment.\n\nFigure 2-3 illustrates the general flow from staging to production environments.\n\nFigure 2-3 Flow from WebCenter Portal Staging to Production Environments\n\nDescription of \"Figure 2-3 Flow from WebCenter Portal Staging to Production Environments\"\n\nFor more information, see:\n\n\"Understanding WebCenter Portal Life Cycle\" in Administering Oracle WebCenter Portal.\n\n\"Deploying Portals\" in Administering Oracle WebCenter Portal.\n\n2.2.1.2 Managing Portal Assets with Portal Builder\n\nAssets are the objects that define the structure, look and feel, and the content of portals. WebCenter Portal provides the following assets, which can be used out-of-the-box or customized: page templates, resource catalogs, skins, page styles, Content Presenter display templates, task flow styles, pagelets, task flows, and data controls.\n\nIf your portal asset requirements extend beyond the browser-based editing capabilities of Portal Builder, developers can further develop assets in JDeveloper from within a special project called WebCenterSpacesResources. This project is part of a JDeveloper workspace that you can download from Oracle Technology Network. The JDeveloper project provides everything developers need to create, modify, and upload assets like page templates, skins, page styles, resource catalogs, and others.\n\nJDeveloper supports the direct uploading and downloading of assets to and from the WebCenterSpacesResources project and Portal Builder. You can also export an asset to a file and then import it into Portal Builder or JDeveloper.\n\nFor more information, see:\n\n\"Developing Assets for WebCenter Portal\" in Developing Portals with Oracle WebCenter Portal and Oracle JDeveloper\n\n\"Deploying Assets\" in Administering Oracle WebCenter Portal\n\n2.2.1.3 Integrating Content into a Portal with Portal Builder\n\nOne of the most important portal requirements is content integration. Portal creators and managers need to add and update content, manage content creation, workflows, archiving, and so on.\n\nA content repository stores content such as documents and images. A connection to a back-end content repository (Oracle WebCenter Content) is created for Portal Builder out-of-the-box. Once this connection is available, portal moderators can enable the documents tool in their portals from the Tools and Services page of Portal Builder. They can then add document components to portal pages, and end users can work with the documents in the portal.\n\nFor more information, see:\n\n\"Managing Content Repositories\" in Administering Oracle WebCenter Portal.\n\n\"Working with Documents\" in Using Oracle WebCenter Portal.\n\n\"Enabling and Disabling Tools and Services Available to a Portal\" section in Building Portals with Oracle WebCenter Portal\n\n\"Publishing Content Using Content Presenter\" in Building Portals with Oracle WebCenter Portal.\n\n\"Working with Document Task Flows and Document Components\" in Building Portals with Oracle WebCenter Portal.\n\n2.2.1.4 Administering Oracle WebCenter Portal with Portal Builder\n\nThe system administrator is the only user assigned to the WebCenter Portal Administrator role. WebCenter Portal administrators have the highest application privileges within the WebCenter Portal application (which includes Portal Builder). The system administrator can view and customize every aspect of WebCenter Portal, manage users and roles, and delegate responsibilities to others.\n\nAn individual portal is managed by the user who creates the portal (assigned the portal Moderator role) or a portal member with Manage All or Manage Configuration permission in the portal. Users are assigned portal permissions and roles through the portal administration security settings.\n\nA user who accesses administration settings for a portal and does not have Manage permission (for example, a user with Participant role, granted permission to edit a page in the portal) will see only the settings available to their role and permissions.\n\nFigure 2-4 shows the Portals page in Portal Builder. This page displays a table showing all the available portals. If you have one of the Manage permissions for a portal, an Administer link shows next to that portal, which allows you to access the administration settings for the portal.\n\nFigure 2-4 Portal Builder Portals Page\n\nDescription of \"Figure 2-4 Portal Builder Portals Page\"\n\nFor more information, see:\n\n\"Administering a Portal\" in Building Portals with Oracle WebCenter Portal.\n\n\"System Administration for WebCenter Portal\" and \"System Administration for Portal Builder\" in Administering Oracle WebCenter Portal.\n\n2.2.2 Considering the Portal Framework Approach\n\nNote:\n\nOracle recommends creating new portals using Portal Builder, rather than Portal Framework. While custom Portal Framework applications may provide a greater degree of flexibility when developing your portal solution, such flexibility typically forfeits product supportability and the ability to upgrade to new WebCenter Portal releases. Using Portal Builder avoids these constraints without sacrificing complexity or scalability.\n\nA Portal Framework application is a highly customizable approach to building a portal. As the more complex approach, portals built using Portal Framework require considerable Oracle ADF and Java development expertise and require using Oracle JDeveloper, Oracle's Java development environment. Because Portal Framework applications are pure ADF applications, they integrate well with other ADF applications, which could be important if you have such applications. Figure 2-5 shows a portal project open in JDeveloper.\n\nFigure 2-5 A Portal Project in JDeveloper\n\nDescription of \"Figure 2-5 A Portal Project in JDeveloper\"\n\nThe Portal Framework approach typically requires a dedicated team of developers who create both the portal and any custom components that may be needed. A browser-based portal administration environment is provided that allows administrators and others to manage and customize a portal once it is deployed to a server. However, it is important to understand that a Portal Framework application is primarily a developer-focused approach.\n\nUnlike Portal Builder, Portal Framework is a single-portal approach. It is not possible to create multiple portals or a portal hierarchy (subportals) within a Portal Framework application.\n\nEverything you need to know about building Portal Framework applications is covered in Developing Portals with Oracle WebCenter Portal and Oracle JDeveloper. The following sections provide a summary overview:\n\nSection 2.2.2.1, \"Understanding the Portal Life Cycle with Portal Framework\"\n\nSection 2.2.2.2, \"Managing Portal Assets with Portal Framework\"\n\nSection 2.2.2.3, \"Integrating Content into a Portal with Portal Framework\"\n\nSection 2.2.2.4, \"Administering Portal Framework Applications\"\n\n2.2.2.1 Understanding the Portal Life Cycle with Portal Framework\n\nThe WebCenter Portal Framework application life cycle refers to the path a Portal Framework application takes from development through production. The phases of the life cycle typically include development, testing, staging, and production. Each phase requires certain tasks to be performed. Some tasks are performed only once, like setting up a content repository. Others are performed more frequently, like nightly builds.\n\nIf you build a Portal Framework application, you need to consider setting up a team development environment, a build environment, and environments for testing, staging, and finally, production.\n\nDevelopers and administrators typically use standard web application deployment methods (EAR deployment), WLST (WebLogic Scripting Tool), Enterprise Manager, and an out-of-the-box propagation tool to move portals, portal assets, and portal customizations from one environment to another. JDeveloper allows developers to deploy portals quickly and iteratively to an internal server for testing.\n\nFigure 2-6 illustrates the general flow from development to build to test environments.\n\nFigure 2-6 Flow from Development to Build to Test Environments\n\nDescription of \"Figure 2-6 Flow from Development to Build to Test Environments\"\n\nFor more information, see the following chapters in Developing Portals with Oracle WebCenter Portal and Oracle JDeveloper:\n\n\"Working Productively in Teams\"\n\n\"Understanding the WebCenter Portal Framework Application Life Cycle\"\n\n\"Deploying and Testing Your Portal Framework Application\"\n\n2.2.2.2 Managing Portal Assets with Portal Framework\n\nIn a Portal Framework application, round-trip development refers to features and techniques that allow you to retrieve assets (such as page templates or skins) from a previously deployed portal and pull them back into JDeveloper for maintenance or enhancement. After modifying an asset in JDeveloper, you can use a feature called the Resource Manager to upload the resource back to the deployed portal.\n\nThe typical pattern used for round-trip development of assets in a Portal Framework application is to download the asset from the deployed portal to a file (using the Assets page of the Administration Console), then import the downloaded file into JDeveloper and work on it. Then, you export it from JDeveloper and upload the exported asset back to the deployed portal using the Assets page of the Administration Console.\n\nFor more information, see:\n\n\"Working with Round-Trip Development\" in Developing Portals with Oracle WebCenter Portal and Oracle JDeveloper.\n\n\"Managing Assets for a Portal Framework Application\" in Administering Oracle WebCenter Portal.\n\n2.2.2.3 Integrating Content into a Portal with Portal Framework\n\nA content repository stores content such as documents and images. A developer can create content repository connections directly in JDeveloper. These connections allow the Portal Framework application's content components to access and display content while the developer is actively working on the portal in JDeveloper. The development team may install and maintain its own content repository instance for their exclusive use.\n\nFor portals in a staging or production managed server environment, content repository connections are typically configured and maintained by a system administrator.\n\nAfter content repository connections are made, you can integrate content into a Portal Framework application in a variety of ways. For example, you can use the Document Explorer (shown in Figure 2-7) and other related document tools. Other features you can employ include Content Presenter, content data controls, and REST APIs.\n\nFigure 2-7 The Document Explorer\n\nDescription of \"Figure 2-7 The Document Explorer\"\n\nIn a Portal Framework application, security must be configured between the application and the content repository (this is not a requirement if you are using Portal Builder).\n\nFor more information, see:\n\n\"Managing Content Repositories\" in Administering Oracle WebCenter Portal\n\n\"Configuring Security Between Content Server and WebCenter Portal Framework Applications\" in Administering Oracle WebCenter Portal\n\n\"Configuring Content Repository Connections\" in Developing Portals with Oracle WebCenter Portal and Oracle JDeveloper\n\n\"Introduction to Integrating and Publishing Content\" in Developing Portals with Oracle WebCenter Portal and Oracle JDeveloper\n\n2.2.2.4 Administering Portal Framework Applications\n\nPortal Framework applications can provide a WebCenter Portal Administration Console, shown in Figure 2-8. The console allows authorized users to manage application-wide preferences, manage users and roles, manage assets, manage content, create polls, register producers and external applications.\n\nFigure 2-8 The Administration Console for Portal Framework Applications\n\nDescription of \"Figure 2-8 The Administration Console for Portal Framework Applications\"\n\nApplication role assignment is the responsibility of the system administrator. Administrators can assign members a default application role or create additional, custom roles specific to their portal application.\n\nUsers with the Administrator role can set application-wide preferences, manage assets, manage content, create polls, and register producers and external applications.\n\nAdministrators can also manage users and roles for the application, and delegate or revoke privileges to or from other users.\n\nFor more information, see:\n\n\"Administering Portal Framework Applications Using the Administration Console\" in Administering Oracle WebCenter Portal."
    }
}