{
    "id": "correct_subsidiary_00140_3",
    "rank": 15,
    "data": {
        "url": "https://docs.oracle.com/cd/B14099_19/portal.1012/b10358/preface1.htm",
        "read_more_link": "",
        "language": "en",
        "title": "What is OracleAS Portal?",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/prodicon.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/bookicon.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/conticon.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/indxicon.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/larrow.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/rarrow.gif",
            "https://docs.oracle.com/cd/B14099_19/portal.1012/b10358/img/basics01.gif",
            "https://docs.oracle.com/cd/B14099_19/portal.1012/b10358/img/basics02.gif",
            "https://docs.oracle.com/cd/B14099_19/portal.1012/b10358/img/nav.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/larrow.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/rarrow.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/oracle.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/prodicon.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/bookicon.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/conticon.gif",
            "https://docs.oracle.com/cd/B14099_19/dcommon/gifs/indxicon.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "This chapter introduces basic concepts unique to OracleAS Portal and outlines the audiences you will want to consider as you construct your portal.\n\nWhat is OracleAS Portal?, introduces the OracleAS Portal features you’ll need as you ready your portal for use.\n\nWho is Your Audience?, defines the different user groups typically found at most enterprises. These definitions are becoming increasingly valuable as Oracle continues to evolve and document OracleAS Portal (you’ll find that the OracleAS Portal documentation set is based on them), so chances are good that you’ll also find them useful as you develop your own portal.\n\nArmed with the knowledge of basic OracleAS Portal terminology as described in this chapter, you’ll be much better positioned to take advantage of the wealth of features available to you in this product. And when you’re ready, Chapter 3, \" Planning Your Portal\" will help you answer some important questions that can help shape and define your portal before you even start clicking.\n\nWhat is OracleAS Portal?\n\nIn order to fully maximize the potential that is OracleAS Portal, you’ll need to be familiar with some key concepts and terms. This section introduces these concepts and weaves them together so you’ll have a good working knowledge of their importance; however, each concept is treated much more exhaustively elsewhere in this book. Much of what you need to know is depicted in the following diagram:\n\nAnatomy of a Page Group\n\nDescription of the illustration basics01.gif\n\nLet’s take this diagram section by section.\n\nHierarchy of Pages\n\nOne of the first things you need to know is that in OracleAS Portal, a portal is a collection of one or more page groups. A page group is a hierarchical collection of pages. A page is the face of the portal; what the user interacts with to access information and applications. OracleAS Portal pages are flexible enough to contain any HTML content. They can be created and structured declaratively, through browser-based wizards, or defined programatically as Java Server Pages. Information on portal pages is published as either portlets or items, both of which are described later in this chapter.\n\nA page group is exactly what it sounds like: a group of pages for which common attributes and mechanisms can be established that govern the behavior of the pages it contains. You can construct your entire portal within one page group, or use different page groups as sub-portals targeted at specific communities within your organization. Many vital decisions and configurations are specified at the page group level by the page group administrator (see Who is Your Audience? for more information on what this role entails).\n\nAt the far left of the diagram, notice that the top of the page group is called a root page. Every page within a page group is a sub-page of the root page. When you create a page group, a root page is automatically created for you using the same name as the page group itself. Root pages are often to used to construct your portal’s (or sub-portal’s) home page.\n\nAnother important concept to the development of any portal is that of security. If you are a page group administrator, you can grant varying levels of access to entire page groups, individual pages, tabs, or even discrete items on a page. You can either make these objects publicly available, or control them through an access control list, which states which users and groups can interact with the object and to what extent. You can also grant permission to manipulate the access control list to other users as required.\n\nAnatomy of a Page\n\nIn this section of the diagram, three essential concepts are illustrated: regions, portlet, and items.\n\nEvery page can be carved up into one or more regions. You accomplish this using tools that are available when editing a page in Layout or Graphical Mode. The following picture shows three pages with varying numbers of regions. It is quite common to use the top region for a banner, one alongside the left for a navigation bar, and perhaps another along the bottom for a footer. In OracleAS Portal, all three of these elements are called navigation pages. (You can use OracleAS Portal to create navigation pages, or have your graphics designer develop JPEGs or GIFs to fulfill this need.) The remaining regions are typically used for page-specific content.\n\nThree Different Region Configurations\n\nDescription of the illustration basics02.gif\n\nEach region has its own set of options that control how the content within it is displayed. For example, you can specify the width of the region relative to the page, whether the region can contain portlets or items (a single region cannot contain both), and whether to display borders around the portlets in a portlet region. Regions can also include one or more tabs.\n\nThink of a portlet as a reusable building block for easily publishing information and applications. You can instantly deliver new content to thousands of users by simply adding a portlet to the users' view of the portal. All portlets come from a data source registered within OracleAS Portal, called a portlet provider.\n\nThe information displayed within portlets comes from a number of sources. Some are as easy to create as checking a box within a wizard; others require knowledge of PL/SQL or Java.\n\nWhile creating a page or navigation page, simply check a box in the associated wizard to indicate that you want to publish the page as a portlet. That way, you can re-use the page on other pages, or make the page available for others to use.\n\nUse OracleAS Portal's wizards to easily create reports, forms, charts, and other types of dynamic components and publish them as portlets. No programming knowledge is required.\n\nUse your own tools to turn your legacy applications and Web sources into portlets and integrate them through Portal's Application Programming Interfaces (APIs), available in the Portal Developer Kit (PDK).\n\nBut you don’t have to create your own portlets. Simply by installing OracleAS Portal, you instantly have access to portlets created by a wide range of third-party vendors registered through Oracle’s Partner Program. In addition, by subscribing to the OracleAS Portal Developer Services, you can access a number of services and resources available exclusively to the Portal developer community. Not only will you be able to access the development team within Oracle, but you can tap into the greater community of Portal developers who have acquired expertise in working with portlets. And you can publish Portal development knowledge and experience of your own. (If you’re responsible for building your own portlets, you’ll probably want to consult http://portalstudio.oracle.com.)\n\nAn item is the other basic OracleAS Portal building block. More specifically, an item is an individual piece of content (text, hyperlink, image, and so on) that resides on a page in an item region. There are two types of items: content item types, which display user-managed content such as text, files, images, and URLs; and navigation item types, which are used to provide navigation and to access or execute various portal-specific functions. Items are added to the portal through simple wizards and stored in the Oracle Application Server Metadata Repository for ongoing management and publishing. If you plan to use OracleAS Portal as a content management solution, you’ll no doubt rely heavily on the use of items.\n\nReusable Objects\n\nReusable objects are created at the page group level and can be used for any page within the page group. For example, you may want to create a consistent color scheme for every page within your portal. (If you want to create objects to use among several different page groups, be sure to create them in the Shared Objects page group.) Even though the graphic doesn’t depict it, pages themselves can be considered reusable objects, as any page can be published as a portlet and reused/shared elsewhere in the portal, or in remote portals.\n\nSome objects control how your pages are laid out and how they appear. Others help you organize and classify your information so that others can locate it quickly. The following screen shot depicts the Navigator, which you will use to create and manage all of your reusable objects. The Navigator is an important workspace that you’ll use a great deal as you develop your portal.\n\nPage Groups tab in the Navigator\n\nDescription of the illustration nav.gif\n\nEach time a page is displayed, it is dynamically assembled and formatted according to the content (portlets and items) and the reusable objects chosen for that page.\n\nLayout and Appearance\n\nA template is a type of page from which other pages can inherit layout, style, privileges, and even content, thus enforcing consistency across multiple pages. A page template might include a corporate logo, frequently used links at the top, a navigation bar, and a footer that shows the location of the current page within the page group. When you create a new page, you have the option of selecting a template on which to base it, or to choose no template at all. Styles control the colors, fonts, and backgrounds of pages or regions within pages.\n\nWhen you use the Create Page wizard, you are asked to supply the navigation page, template, and/or style you want to apply. If you choose not to apply these objects when you create the page, you can always do so later when you edit the page.\n\nContent Attribution\n\nThe business of content attribution concerns you much more if you’re building a page group that supports collaboration among your users. Collaboration is chiefly supported through OracleAS Portal’s content management features, which centers on the use of items. Content attribution refers to the process of associating various attributes with each item and/or page in your portal. These attributes store information about your item or page and/or make it easy to group logically related items and pages together. Attributes also enable advanced metadata searches.\n\nWhen you add a file to the portal, for example, you use the Add Item Wizard. This wizard prompts you for an item type. The kinds of item types that are exposed through the Add Item Wizard are determined by the page group administrator. Suppose you choose the File item type, which comes with OracleAS Portal by default. The File item type comes with certain default attributes, like File Name, Description, Author, and so on, which you as the publisher of the file are expected to supply in order to complete the publication process. These attributes not only supply information about the file you’re adding, but allow you (or others) to later construct custom searches so that you can, say, display all the content published by a given author. (Custom searches are easy to build in OracleAS Portal.)\n\nBut suppose the attributes that come with the File item type aren’t sufficient for your needs? Suppose you want to add another attribute called Group Name, to identify the group from which the file originated. With OracleAS Portal, you can easily create your own custom attributes using the Create Attribute wizard. At a minimum, simply identify the Group Name attribute as a Text attribute, add it to the definition of the file item type, and you’re done.\n\nYou may also want to create custom item types specifically for your needs. For example, if you’re managing an entertainment portal, you might create a custom item type called Movie Review, which includes custom attributes such as Rating, Reviewer, and Producer. You can even specify which attributes are mandatory and which are optional.\n\nCustom page types operate on the same principle. By default, OracleAS Portal comes with several different page types optimized for use with different types of content. For example, the Standard page type is used to display both portlet and items, and thus is used for the majority of all portal development. Other page types include JSP pages, which display the results of executing a Java Server Page, and URL pages, which allow you to include any Web-accessible page within your portal. However, you may encounter situations where you want to modify the page types already in existence, or require additional page types. For example, you might want to create a Performance Review page for use by your managers, which contains attributes for Rating, Employee Name, Employee Rank, and so on. Like custom items types, it is very easy to create custom page types that are designed to meet your specific requirements.\n\nCategories and perspectives represent a different type of content attribution at the item level. Both are means of classifying your content into discrete groups, to make it easy for users to find. A Human Resources page group might contain categories such as Benefits, Policies, and Payroll. Each time a user adds a piece of content, that content must be assigned to one and only one category (assuming that the Category attribute is exposed for the item type). Users can also search by category and perspective or browse through content that is organized into category and perspective hierarchies.\n\nPerspectives work best when they cut across multiple categories. Because each item can be assigned many perspectives, it’s best to reserve them for classifications that take advantage of this strength. In our Human Resources page group, you might choose to make your perspectives reflect the various user groups at the company: Engineers, Design Analysts, Sales Representatives, and so on. It’s easy to imagine how the same piece of content, like the company’s holiday schedule, would interest all users regardless of their user group. When the user submitted a search based on Engineers, OracleAS Portal would locate all the content tagged with that perspective, irrespective of category. Engineers would see the holiday schedule, as well as all other content from the Benefits, Policies, and Payroll that had been flagged as being of particular interest to that group. Or, on a portal devoted to travel, the perspectives Inexpensive, Moderate, and Luxury would neatly cut across the categories Lodging, Restaurants, Air Fare, and Rental Cars.\n\nDeciding how to construct all of your attributes is an important part of building your portal taxonomy, and making these decisions should be attended to with care. One of the main benefits of creating a sound attribution model is that it provides you with more flexibility if you choose to publish content dynamically, using the autoquery capability of the custom search portlet. The autoquery feature is extremely powerful, and effective use of it gives you tremendous control over how and where you manage and publish content within your portal. In fact, in many cases it is best to manage content in one area or page group and publish it dynamically throughout the portal. See Section 3.2, \"Making Key Decisions\" for more information.\n\nWho is Your Audience?\n\nKeeping your audience firmly in mind as you design and implement your portal is key to creating something that will be truly useful. In working with various companies and moderating our own development process, we’ve identified six fundamental user groups that you are likely to have in your midst:\n\nViewer - Consumes information; does not publish it. Requires little, if any, OracleAS Portal-specific knowledge or skills. Must know how to search to find desired information; may need to know how to customize the display to hide or reveal content.\n\nChapter 1, \" Viewing and Customizing Pages\" contains information that will be of use to the viewers of your portal. You may want to give a copy of this chapter to your users; however, it may be more practical for you to use it as an information source as you prepare your own tutorials and how-to guides. That way, you can illustrate OracleAS Portal concepts with concrete examples taken from your own portal, thus solidifying the association in users’ minds.\n\nContent Contributor - Publishes items to a portal page. Needs to know how to add and edit items; depending on privileges, may also need to know how to manage them.\n\nChapter 2, \" Publishing Content \" contains information that will be of use to those who will contribute content to your portal. You may want to use the material in this chapter as the basis for creating or augmenting your own user’s guide, based on real-life examples from your portal.\n\nPage Designer/Builder - Creates pages, usually for others to populate with content. Extends pages with simple wizard-created components; feeds portlet requirements to Developers. Provides access to pages to appropriate users and user groups. May set up some reusable components (navigation pages, styles, templates, and so on).\n\nChapter 7, \" Creating and Designing Pages\", in particular, contains information targeted to the page designers/builders at your site.\n\nPage Group Administrator - Responsible for deciding how to implement the portal: whether to use one page group or many, deciding how deeply to nest pages, and so on; determining the need for and creating custom item and page types; creating categories and perspectives; establishing workflow processes; policing the content contribution effort; feeding requirements to page designers. To maintain consistency, may have complete or partial control over developing reusable objects (navigation pages, styles, templates, and so on.)\n\nAlthough much of the material in this book is geared toward the page group administrator, Chapter 3, \" Planning Your Portal\" is of particular significance. If you’re a page group administrator, be sure to read this chapter before you begin creating your portal.\n\nPortal Administrator - Installs and configures OracleAS Portal and its subsystems. Sets up users and user groups; monitors performance and maintains acceptable levels; manages the Portlet Repository; performs upgrades and adds software patches; registers portlet providers.\n\nPortal administrators should refer to the Oracle Application Server Portal Configuration Guide. The tasks in this User’s Guide assume that all necessary configuration activities have already been completed.\n\nDeveloper - Builds components and/or portlets for others to include on their pages. Relies heavily on the APIs to extend the capabilities of OracleAS Portal; may frequently consult the Knowledge Exchange or the forums for advice or inspiration.\n\nDevelopers will find http://portalstudio.oracle.com to be a valuable source of information."
    }
}