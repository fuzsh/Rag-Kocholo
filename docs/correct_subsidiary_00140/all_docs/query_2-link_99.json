{
    "id": "correct_subsidiary_00140_2",
    "rank": 99,
    "data": {
        "url": "https://chris.bucchere.com/2008/01/17/one-portal-to-rule-them-all",
        "read_more_link": "",
        "language": "en",
        "title": "One Portal to Rule Them All",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://chris.bucchere.com/hs-fs/hubfs/chris.bucchere.ai-2.png?width=100&height=101&name=chris.bucchere.ai-2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Christopher Bucchere"
        ],
        "publish_date": "2008-01-17T00:00:00",
        "summary": "",
        "meta_description": "One Portal to Rule Them All",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://chris.bucchere.com/2008/01/17/one-portal-to-rule-them-all",
        "text": "Funny you should mention the price issue. About two years ago, we had a customer switch from ALI to Oracle portal for that exact reason. Why pay for licenses and support for ALUI products when Oracle gives you the portal for free? That customer still calls on us for ALUI support, so apparently the migration hasn't gone exactly as planned.Two old adages come to mind here:\n\nYou get what you pay for.\n\nThere's no such thing as a free lunch.\n\nRegarding #1, the products really don't cover the same feature set -- Oracle portal cannot be the gateway to SOA that we all know ALUI is, so it's really not an apples-to-apples comparison.\n\nRegarding #2, with any free software, whether it's from a large company like Oracle or from the Apache Software Foundation, you always need to think about Total Cost of Ownership (TCO). If you need to build services integration points in Oracle Portal to talk to all of Oracle's other products, that adds to your TCO. Moreover, if somebody is giving something away, what sort of quality expectations do you have about the product? What happens if you need to request support from Oracle or ask them to develop a patch for you? All of a sudden, the fact that you didn't pay for the software comes back and bites you in the butt. :-)\n\nThanks for the correction about Oracle WebCenter -- I'm not too familiar with Oracle products other than the DB and I should have done more homework before posting this!However, I still disagree that there are only two portals at Oracle. I'm not too sure about JDE, but I remember with 100% certainty that PeopleSoft and Siebel called their UIs \"portals.\" They're not truly portals in a horizontal sense like Oracle Portal, WebCenter, WLP and ALUI and I don't think they're actually relevant to this discussion, so it's a moot point.\n\nNow, given the four remaining portal products, I challenge your assertion that WebCenter and WLP \"support Web 2.0 futures\" and I'd like to see some examples that support that claim. As far as I know, the only products coming out of BEA that deserve the \"Web 2.0\" label are AquaLogic Pages, Ensemble and Pathways. (Note I don't include ALI itself as a Web 2.0 product, despite the fact that ALI 6.5 has some pretty slick social features that might someday earn it that distinction.)\n\nI also take issue with your calling Plumtree/ALUI proprietary and I'm not sure what makes you make that claim. It's written in Java and ported to C#.net, so it runs \"natively\" on IIS (which no other products from BEA or Oracle can do). Its Java version (from the same source base), runs on WebSphere, WLS, Tomcat and probably JBoss and other app servers and it supports both Oracle and SQL Server, so in terms of how and where you can run it, it's probably the most open and flexible product in the entire 40+ product lineup that BEA boasts.\n\nThat's just one side of the proprietary vs. open argument. The other is how well one supports standards for plugging in functionality. In those terms, I think ALUI stands out from the pack as well. It supports portlets over two very well supported standards: HTTP and HTML, which again makes it the most flexible portlet development environment on the market. (You can develop ALI portlets using ANY web server that speaks HTTP and I've personally done so using Java, .NET, LAMP, Ruby on Rails, Groovy on Grails and even Domino if you can believe that.) It also supports JSR-168 and WSRP. (In reading about WebCenter, all portlet development documentation was Java-centric, so I'm not sure if they support any other kind of portlet development, e.g. .NET. It's crucial that any product which claims to be the \"face of SOA\" supports at least Java and .NET development and plugins; however, many would argue that you need to support much more -- e.g. Ruby on Rails, PHP, etc.)\n\nLeaving portlets out of the picture for a moment, consider the other ALUI integration points: AWS, PWS, CWS and SWS. All of them use SOAP, which is a documented open standard. In fact, in my next blog post (which went up last night), I talk about how I integrated a custom MySQL/Ruby on Rails user store with ALI using a Rails-based SOAP-driven web service to interface with ALI's user management system. It just doesn't get any more open than that. At last year's Participate conference, I demonstrated how you could use the ALI \"face\" to front WLS applications written to run on the WL message bus and communicating with data stores using DSP, proving that you integrate ALUI products with pretty much anything. I would like to see how a WebCenter consultant or a WLS guy would approach integrating Siebel or PeopleSoft, two products now in the Oracle family.\n\nI may make many \"assertions\" (as you call them), but they're backed up by solid facts. I'm open to continuing this dialog because I want to hear more facts about 1) how you perceive ALUI as a proprietary technology and 2) how WLP and WebCenter claim to support \"Web 2.0.\""
    }
}