{
    "id": "dbpedia_1255_0",
    "rank": 8,
    "data": {
        "url": "https://blog.mediacoderhq.com/tag/sve/",
        "read_more_link": "",
        "language": "en",
        "title": "Inside & Outside MediaCoder",
        "top_image": "http://blog.mediacoderhq.com/wp-content/uploads/2014/02/mediacoder_x265_sve-300x273.png",
        "meta_img": "",
        "images": [
            "http://blog.mediacoderhq.com/wp-content/uploads/2014/02/mediacoder_x265_sve-300x273.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "MediaCoder 0.8.28 is just released. This version added support for VP9 encoding. Though the vpxenc is slow encoding VP9 with almost no multi-threading implementation (unlike VP8 encoding), MediaCoder’s Segmental Video Encoding backs it up. With SVE enabled, the VP9 encoding speed boosts by times, though still low comparing to x264.\n\nSeveral other tools have been updated. An x64 build of MP4Box is included in 64-bit distribution. Several minor bugs got fixed. For GPU encoding, I fine tuned the pre-processing filtering parameters to eliminate some side effect I witnessed myself.\n\nFor more info about the new release, just head for the changelog.\n\nFinally, I wish a happy holiday to all of my users! It’s been almost 9 years since the very first spark and I have never stopped working on it. MediaCoder has served millions of people I believe. Thinking about all these, I feel my time and efforts spent throughout the years all worth it.\n\nCan’t take out all the computation power of your multi-processor system when doing transcoding? A new technology being developed in MediaCoder will be the solution. I name it SVE (Segmental Video Encoding). It is like multi-segments downloading, but the difference is the segmentation is temporal instead of spatial. Multiple instances of the same encoder are used to encode the different part of one video concurrently. The result bitstreams are merged by muxer together with audio. My practice has proved that this is completely feasible, without almost no compromise. This will increase overall transcoding speed on all under-loaded systems (a system with many CPUs or processor cores) reglardless of the encoder’s multi-threading capability, as well as GPU encoding (in most cases GPU is under-loaded when encoding a single stream). My test has shown a 20% speed boost of Intel MSDK GPU encoding on the same Intel i7-2600 system. Distributive encoding will also benefit from this technology. So stay tuned!"
    }
}