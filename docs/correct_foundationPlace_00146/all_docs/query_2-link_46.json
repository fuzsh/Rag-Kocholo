{
    "id": "correct_foundationPlace_00146_2",
    "rank": 46,
    "data": {
        "url": "https://www.fortra.com/resources/guides/getting-started-ibm-i-security",
        "read_more_link": "",
        "language": "en",
        "title": "Getting Started with IBM i Security",
        "top_image": "https://www.fortra.com/themes/custom/hs/favicon.ico",
        "meta_img": "https://www.fortra.com/themes/custom/hs/favicon.ico",
        "images": [
            "https://static.fortra.com/fortra-global-assets/fortra-logo-full.svg?l=1297213100",
            "https://static.fortra.com/fortra-global-assets/fortra-logo-small.svg?l=1528343132",
            "https://www.fortra.com/themes/custom/fortra_parent_2022/images/logo.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "From beginner basics to advanced tactics, this white paper provides the background and instruction you need to restore your IBM i security back to its former glory.",
        "meta_lang": "en",
        "meta_favicon": "/themes/custom/hs/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://www.fortra.com/resources/guides/getting-started-ibm-i-security",
        "text": "Text\n\nTo begin safeguarding your IBM i environment, admins should leverage the built-in capabilities. There are six core areas that serve as a valuable starting point in protecting the system:\n\nSystem security\n\nAdministrative privileges\n\nNetwork access\n\nPublic authority\n\nUser security\n\nEvent auditing\n\nSystem Security\n\nMuch of IBM i’s system security is handled via system values that control the performance of various functions. Administrators can alter a range of settings, including those that apply to the entire system and those that apply to more specific functions like user passwords and auditing.\n\nThe system’s security level value (QSECURITY) should support the organization’s security goals. For instance, if the security level is set to 20 or below, private authorities are not checked and new users are automatically granted *ALLOBJ authority.\n\nIBM has established 40 as the minimum level required to support a secure system and ships servers preconfigured as such. This increase from level 30 came after the discovery of several well-documented vulnerabilities. Organizations are often surprised to learn that the shipped level of 40 has been “downgraded” during a migration and their server is operating at-risk.\n\nThe maximum sign-on attempts (QMAXSIGN) value determines how many times users are allowed failed log-in attempts before action is taken. This value should align with the organization’s security policy. IBM recommends setting QMAXSIGN to 3, but administrators can limit the number of sign-on attempts from 1 up to 25, or set the system for no maximum (not recommended).\n\nPassword rules are established via a number of values whose names start with “QPWD”. In IBM i V6R1, a new system value (QPWDRULES) was established as a repository for all of the password rules to be implemented. For consistency, Powertech recommends that the rules be similar to those that are enforced for the network.\n\nUnfortunately, IBM i password rules are often lacking in a way that would not be tolerated on other servers:\n\nDefault passwords allowed\n\nMinimum lengths set to less than 7 characters\n\nNo expiration date\n\nDigits not required\n\nNot only do these settings make for an easy target, but they also violate compliance regulations. For example, the Payment Card Industry Data Security Standard (PCI-DSS) requires that passwords be changed from their defaults.\n\nIn researching the 2013 State of IBM i Security Study, Powertech found this to be a common pain point. In one instance, more than 20 percent of profiles on a system were operating with default passwords. While this may make it more convenient for administrators to configure profiles, it introduces a significant vulnerability—anyone with knowledge of IBM i’s password conventions would be able to access a high-level account.\n\nPowertech strongly recommends that you change these settings to make passwords harder to guess and increase the protection of your system.\n\nAdministrator Privileges\n\nOne of the most important ways to reduce opportunistic breaches is to observe what users are doing and what data they’re viewing on the system. This is also an area where the rule of least privilege applies. Users should only have access to the systems and data they need to do their jobs effectively\n\nIBM i has eight administrator-level privileges (see table 1) that should be assigned sparingly and monitored vigilantly. IBM recommends that organizations carefully review user roles before assigning special authorities and to keep track of those that have already been granted.\n\nThe *ALLOBJ authority in particular can be problematic and, as the State of IBM i Security Study revealed, it is a common security gap.\n\nThe 2013 State of IBM i Security Study also found that out of 101 IBM i systems, an average of 65 profiles on each system had *ALLOBJ authority. Best practices dictate that fewer than 10 users should have special system privileges, and Powertech recommends that those users be closely audited\n\nNetwork Access\n\nTraditional IBM i applications are accessed by users via a telnet-based emulation session, often known as a “green screen” for its green-on-black, text-based appearance. Under this model, users can be controlled effectively via command line restrictions, menus, and application security.\n\nControl is technically possible without having to configure public and private authority, although that is always recommended. In contrast, non-traditional applications connect users to the database through modern interfaces such as ODBC and DDM using desktop tools like Microsoft Excel or Access.\n\nIBM provides a registry of exit points in the operating system to facilitate user–written programs that can audit and control network-initiated access. Although object-level security is ultimately the final decisionmaker whether a user is granted permission to access an object, it is often not configured.\n\nOrganizations must also realize that users can execute commands through some of these alternate interfaces without command line permission. Exit programs should be considered as an important auxiliary security layer.\n\nPublic Authority\n\nPublic authority is a unique concept in IBM i, and one that receives too little consideration. When a user lacks explicit permission—including explicit “permission” to have no access— then public authority (*PUBLIC) is applied as the default level of access.\n\nUnfortunately, IBM ships this value preconfigured as *CHANGE, which is sufficient authority to read, change, and delete data, and to execute programs. The majority of organizations unwittingly remain operating at this default. To support the stated requirement for the rule of least privilege, this authority should be set to *EXCLUDE and authorized users granted access on an as-needed basis.\n\nUser Security\n\nIBM i empowers users with the security administrator authority to create new user accounts, and in some instances, modify an existing profile. Safeguards prevent administrators from assigning privileges to others that they do not possess themselves. Unfortunately, this often results in a dangerous side effect: security administrators are granted additional privileges so that they may be allowed to assign them to others.\n\nIBM i supports both individual and group user profiles; the latter of which is useful for standardizing profiles based on roles. For example, establishing a group profile for contractors eliminates onboarding fires and configuration inconsistency. However, organizations must be careful when assigning special authorities to group profiles as they are inherited by all of the members of the group.\n\nSystem Event Auditing\n\nAn organization’s security policy should identify the type of activity to be recorded in the operating system’s tamper-proof repository: the security audit journal (QAUDJRN). This is handled through several system values. Table 2 lists the auditing system values that should be given careful consideration.\n\nWhile some of the values in table 2 will be dependent on an organization’s operating environment and compliance needs, Powertech highly recommends that you enable auditing. For other values, such as the Auditing Force Level, it is important to create an organizational policy for how much audit journal data loss would be acceptable, as this would determine optimal frequency.\n\n>>Download the annual State of IBM i Security Study to better understand IBM i security risks and the steps you can take to harden system security"
    }
}