{
    "id": "correct_foundationPlace_00146_3",
    "rank": 86,
    "data": {
        "url": "https://aws.amazon.com/blogs/apn/the-6-pillars-of-the-aws-well-architected-framework/",
        "read_more_link": "",
        "language": "en",
        "title": "The 6 Pillars of the AWS Well-Architected Framework",
        "top_image": "https://d2908q01vomqb2.cloudfront.net/77de68daecd823babbb58edb1c8e14d7106e83bb/2018/01/04/DevOps.jpg",
        "meta_img": "https://d2908q01vomqb2.cloudfront.net/77de68daecd823babbb58edb1c8e14d7106e83bb/2018/01/04/DevOps.jpg",
        "images": [
            "https://d2908q01vomqb2.cloudfront.net/77de68daecd823babbb58edb1c8e14d7106e83bb/2018/01/04/DevOps-300x150.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Seth Eliot",
            "Lara Valverde"
        ],
        "publish_date": "2018-05-15T14:56:33-07:00",
        "summary": "",
        "meta_description": "Creating a software system is a lot like constructing a building. If the foundation is not solid, structural problems can undermine the integrity and function of the building. The AWS Well-Architected Framework helps cloud architects build the most secure, high-performing, resilient, and efficient infrastructure possible for their applications. This framework provides a consistent approach to evaluate architectures, and provides guidance to implement designs that scale with your application needs over time.",
        "meta_lang": "en",
        "meta_favicon": "https://a0.awsstatic.com/main/images/site/fav/favicon.ico",
        "meta_site_name": "Amazon Web Services",
        "canonical_link": "https://aws.amazon.com/blogs/apn/the-6-pillars-of-the-aws-well-architected-framework/",
        "text": "Editor’s note: This post was updated in February 2022 to reflect the most current information.\n\nBy Seth Eliot, Principal Reliability Solutions Architect – AWS Well-Architected\n\nBy Lara Valverde – Product Marketing Leader – AWS Well-Architected\n\nCreating a software system is a lot like constructing a building. If the foundation is not solid, structural problems can undermine the integrity and function of the building.\n\nWhen building technology solutions on Amazon Web Services (AWS), if you neglect the six pillars of operational excellence, security, reliability, performance efficiency, cost optimization, and sustainability, it can become challenging to build a system that delivers on your expectations and requirements.\n\nIncorporating these pillars into your architecture helps produce stable and efficient systems. This allows you to focus on the other aspects of design, such as functional requirements.\n\nThe AWS Well-Architected Framework helps cloud architects build the most secure, high-performing, resilient, and efficient infrastructure possible for their applications. The framework provides a consistent approach for customers and AWS Partners to evaluate architectures, and provides guidance to implement designs that scale with your application needs over time.\n\nIn this post, we provide an overview of the Well-Architected Framework’s six pillars and explore design principles and best practices. You can find more details—including definitions, FAQs, and resources—in each pillar’s whitepaper we link to below.\n\nRead the full Well-Architected whitepaper >>\n\n1. Operational Excellence\n\nThe Operational Excellence pillar includes the ability to support development and run workloads effectively, gain insight into their operation, and continuously improve supporting processes and procedures to delivery business value. You can find prescriptive guidance on implementation in the Operational Excellence Pillar whitepaper.\n\nDesign Principles\n\nThere are five design principles for operational excellence in the cloud:\n\nPerform operations as code\n\nMake frequent, small, reversible changes\n\nRefine operations procedures frequently\n\nAnticipate failure\n\nLearn from all operational failures\n\nBest Practices\n\nOperations teams need to understand their business and customer needs so they can support business outcomes. Ops creates and uses procedures to respond to operational events, and validates their effectiveness to support business needs. Ops also collects metrics that are used to measure the achievement of desired business outcomes.\n\nEverything continues to change—your business context, business priorities, and customer needs. It’s important to design operations to support evolution over time in response to change, and to incorporate lessons learned through their performance.\n\n2. Security\n\nThe Security pillar includes the ability to protect data, systems, and assets to take advantage of cloud technologies to improve your security. You can find prescriptive guidance on implementation in the Security Pillar whitepaper.\n\nDesign Principles\n\nThere are seven design principles for security in the cloud:\n\nImplement a strong identity foundation\n\nEnable traceability\n\nApply security at all layers\n\nAutomate security best practices\n\nProtect data in transit and at rest\n\nKeep people away from data\n\nPrepare for security events\n\nBest Practices\n\nBefore you architect any workload, you need to put in place practices that influence security. You’ll want to control who can do what. In addition, you want to be able to identify security incidents, protect your systems and services, and maintain the confidentiality and integrity of data through data protection.\n\nYou should have a well-defined and practiced process for responding to security incidents. These tools and techniques are important because they support objectives such as preventing financial loss or complying with regulatory obligations.\n\nThe AWS Shared Responsibility Model enables organizations that adopt the cloud to achieve their security and compliance goals. Because AWS physically secures the infrastructure that supports our cloud services, as an AWS customer you can focus on using services to accomplish your goals. The AWS Cloud also provides greater access to security data and an automated approach to responding to security events.\n\n3. Reliability\n\nThe Reliability pillar encompasses the ability of a workload to perform its intended function correctly and consistently when it’s expected to. This includes the ability to operate and test the workload through its total lifecycle. You can find prescriptive guidance on implementation in the Reliability Pillar whitepaper.\n\nDesign Principles\n\nThere are five design principles for reliability in the cloud:\n\nAutomatically recover from failure\n\nTest recovery procedures\n\nScale horizontally to increase aggregate workload availability\n\nStop guessing capacity\n\nManage change in automation\n\nBest Practices\n\nBefore building any system, foundational requirements that influence reliability should be in place. For example, you must have sufficient network bandwidth to your data center. These requirements are sometimes neglected (because they are beyond a single project’s scope). With AWS, however, most of the foundational requirements are already incorporated or can be addressed as needed.\n\nThe cloud is designed to be nearly limitless, so it’s the responsibility of AWS to satisfy the requirement for sufficient networking and compute capacity, leaving you free to change resource size and allocations on demand.\n\nA reliable workload starts with upfront design decisions for both software and infrastructure. Your architecture choices will impact your workload behavior across all six AWS Well-Architected pillars. For reliability, there are specific patterns you must follow, such as loosely coupled dependencies, graceful degradation, and limiting retries.\n\nChanges to your workload or its environment must be anticipated and accommodated to achieve reliable operation of the workload. Changes include those imposed on your workload, like a spikes in demand, as well as those from within such as feature deployments and security patches.\n\nLow-level hardware component failures are something to be dealt with every day in an on-premises data center. In the cloud, however, these are often abstracted away. Regardless of your cloud provider, there is the potential for failures to impact your workload. You must therefore take steps to implement resiliency in your workload, such as fault isolation, automated failover to healthy resources, and a disaster recovery strategy.\n\n4. Performance Efficiency\n\nThe Performance Efficiency pillar includes the ability to use computing resources efficiently to meet system requirements, and to maintain that efficiency as demand changes and technologies evolve. You can find prescriptive guidance on implementation in the Performance Efficiency Pillar whitepaper.\n\nDesign Principles\n\nThere are five design principles for performance efficiency in the cloud:\n\nDemocratize advanced technologies\n\nGo global in minutes\n\nUse serverless architectures\n\nExperiment more often\n\nConsider mechanical sympathy\n\nBest Practices\n\nTake a data-driven approach to building a high-performance architecture. Gather data on all aspects of the architecture, from the high-level design to the selection and configuration of resource types.\n\nReviewing your choices on a regular basis ensures you are taking advantage of the continually evolving AWS Cloud. Monitoring ensures you are aware of any deviance from expected performance. Make trade-offs in your architecture to improve performance, such as using compression or caching, or relaxing consistency requirements\n\nThe optimal solution for a particular workload varies, and solutions often combine multiple approaches. AWS Well-Architected workloads use multiple solutions and enable different features to improve performance\n\n5. Cost Optimization\n\nThe Cost Optimization pillar includes the ability to run systems to deliver business value at the lowest price point. You can find prescriptive guidance on implementation in the Cost Optimization Pillar whitepaper.\n\nDesign Principles\n\nThere are five design principles for cost optimization in the cloud:\n\nImplement cloud financial management\n\nAdopt a consumption model\n\nMeasure overall efficiency\n\nStop spending money on undifferentiated heavy lifting\n\nAnalyze and attribute expenditure\n\nBest Practices\n\nAs with the other pillars, there are trade-offs to consider. For example, do you want to optimize for speed to market or for cost? In some cases, it’s best to optimize for speed—going to market quickly, shipping new features, or simply meeting a deadline—rather than investing in up-front cost optimization.\n\nDesign decisions are sometimes directed by haste rather than data, and as the temptation always exists to overcompensate rather than spend time benchmarking for the most cost-optimal deployment. This might lead to over-provisioned and under-optimized deployments.\n\nUsing the appropriate services, resources, and configurations for your workloads is key to cost savings\n\n6. Sustainability\n\nThe discipline of sustainability addresses the long-term environmental, economic, and societal impact of your business activities. You can find prescriptive guidance on implementation in the Sustainability Pillar whitepaper.\n\nDesign Principles\n\nThere are six design principles for sustainability in the cloud:\n\nUnderstand your impact\n\nEstablish sustainability goals\n\nMaximize utilization\n\nAnticipate and adopt new, more efficient hardware and software offerings\n\nUse managed services\n\nReduce the downstream impact of your cloud workloads\n\nBest Practices\n\nChoose AWS Regions where you will implement workloads based on your business requirements and sustainability goals.\n\nUser behavior patterns can help you identify improvements to meet sustainability goals. For example, scale infrastructure down when not needed, position resources to limit the network required for users to consume them, and remove unused assets.\n\nImplement software and architecture patterns to perform load smoothing and maintain consistent high utilization of deployed resources. Understand the performance of your workload components, and optimize the components that consume the most resources.\n\nAnalyze data patterns to implement data management practices that reduce the provisioned storage required to support your workload. Use lifecycle capabilities to move data to more efficient, less performant storage when requirements decrease, and delete data that’s no longer required.\n\nAnalyze hardware patterns to identify opportunities that reduce workload sustainability impacts by minimizing the amount of hardware needed to provision and deploy. Select the most efficient hardware for your individual workload.\n\nIn your development and deployment process, identify opportunities to reduce your sustainability impact by making changes, such as updating systems to gain performance efficiencies and manage sustainability impacts. Use automation to manage the lifecycle of your development and test environments, and use managed device farms for testing.\n\nNext Steps\n\nLearn more about the AWS Well-Architected Framework by taking our self-paced training that provides pillar-specific design principles and examples of AWS Well-Architected best practices. The training is free, and takes approximately 90 minutes to complete.\n\nRegister and launch customer training >>\n\nRegister and launch AWS Partner training >>"
    }
}