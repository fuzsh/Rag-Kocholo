{
    "id": "correct_subsidiary_00130_0",
    "rank": 88,
    "data": {
        "url": "https://patents.google.com/patent/US8495007B2/en",
        "read_more_link": "",
        "language": "en",
        "title": "US8495007B2 - Systems and methods for hierarchical aggregation of multi-dimensional data sources - Google Patents",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://patentimages.storage.googleapis.com/ef/57/04/02592564df0955/US08495007-20130723-D00000.png",
            "https://patentimages.storage.googleapis.com/02/5f/a1/75f078a76eb154/US08495007-20130723-D00001.png",
            "https://patentimages.storage.googleapis.com/7c/31/d7/e0c857a24515a3/US08495007-20130723-D00002.png",
            "https://patentimages.storage.googleapis.com/6d/3b/ad/ac33a5b4f556f0/US08495007-20130723-D00003.png",
            "https://patentimages.storage.googleapis.com/d9/22/83/d15b9658abd58a/US08495007-20130723-D00004.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2008-08-28T00:00:00",
        "summary": "",
        "meta_description": "Embodiments relate to systems and methods for aggregating data from data sources according to a hierarchical mapping generated from dimensions of the data sources. A set of applications such as online analytical processing (OLAP) applications can access the combined data of a set of multi-dimensional data sources via a transform engine. The set of data sources can be configured with diverse dimensions and associated data, which in general do not reflect a strictly hierarchical structure. In embodiments, the transform engine can combine or aggregate the set of data sources using common dimensions or data points, and build an index into a transform table reflecting the hierarchical level of dimension from each data source in a combined hierarchical mapping. An OLAP or other application can therefore perform searches, sorts, and/or other operations on the combined hierarchical mapping based on the resulting ordering of data, even when the original multi-dimensional data sources do not contain an explicit common hierarchy.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://patents.google.com/patent/US8495007B2/en",
        "text": "Systems and methods for hierarchical aggregation of multi-dimensional data sources Download PDF\n\nInfo\n\nPublication number\n\nUS8495007B2\n\nUS8495007B2 US12/200,101 US20010108A US8495007B2 US 8495007 B2 US8495007 B2 US 8495007B2 US 20010108 A US20010108 A US 20010108A US 8495007 B2 US8495007 B2 US 8495007B2\n\nAuthority\n\nUS\n\nUnited States\n\nPrior art keywords\n\ndata sources\n\ndimensional data\n\nhierarchical\n\nidentified\n\ndata\n\nPrior art date\n\n2008-08-28\n\nLegal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)\n\nActive, expires 2029-10-29\n\nApplication number\n\nUS12/200,101\n\nOther versions\n\nUS20100057700A1 (en\n\nInventor\n\nEric Williamson\n\nCurrent Assignee (The listed assignees may be inaccurate. Google has not performed a legal analysis and makes no representation or warranty as to the accuracy of the list.)\n\nRed Hat Inc\n\nOriginal Assignee\n\nRed Hat Inc\n\nPriority date (The priority date is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the date listed.)\n\n2008-08-28\n\nFiling date\n\n2008-08-28\n\nPublication date\n\n2013-07-23\n\n2008-08-28 Application filed by Red Hat Inc filed Critical Red Hat Inc\n\n2008-08-28 Priority to US12/200,101 priority Critical patent/US8495007B2/en\n\n2008-08-28 Assigned to RED HAT, INC. reassignment RED HAT, INC. ASSIGNMENT OF ASSIGNORS INTEREST (SEE DOCUMENT FOR DETAILS). Assignors: WILLIAMSON, ERIC\n\n2010-03-04 Publication of US20100057700A1 publication Critical patent/US20100057700A1/en\n\n2013-07-23 Application granted granted Critical\n\n2013-07-23 Publication of US8495007B2 publication Critical patent/US8495007B2/en\n\nStatus Active legal-status Critical Current\n\n2029-10-29 Adjusted expiration legal-status Critical\n\nLinks\n\nUSPTO\n\nUSPTO PatentCenter\n\nUSPTO Assignment\n\nEspacenet\n\nGlobal Dossier\n\nDiscuss\n\n238000000034 method Methods 0.000 title claims abstract description 14\n\n238000004220 aggregation Methods 0.000 title description 12\n\n230000002776 aggregation Effects 0.000 title description 12\n\n230000004931 aggregating effect Effects 0.000 claims abstract description 8\n\n238000013507 mapping Methods 0.000 abstract description 38\n\n238000013506 data mapping Methods 0.000 description 2\n\n238000005516 engineering process Methods 0.000 description 2\n\n238000013528 artificial neural network Methods 0.000 description 1\n\n238000007405 data analysis Methods 0.000 description 1\n\n230000008520 organization Effects 0.000 description 1\n\n230000004044 response Effects 0.000 description 1\n\nImages\n\nClassifications\n\nG—PHYSICS\n\nG06—COMPUTING; CALCULATING OR COUNTING\n\nG06F—ELECTRIC DIGITAL DATA PROCESSING\n\nG06F16/00—Information retrieval; Database structures therefor; File system structures therefor\n\nG06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data\n\nG06F16/28—Databases characterised by their database models, e.g. relational or object models\n\nG06F16/283—Multi-dimensional databases or data warehouses, e.g. MOLAP or ROLAP\n\nDefinitions\n\nthe present teachings relate to hierarchical aggregation of multi-dimensional data sources, and more particularly to systems and techniques for aggregating multiple data sources having different dimensions into a unified hierarchical mapping for use by online analytic processing or other applications.\n\nMiddleware platforms in general are known which allow a single application to access diverse or incompatible data sources, by commonizing the data schema used by those separate sources for use by the application.\n\nOLAP online analytic processing\n\nOLAP applications are known which are configured to receive data in standardized formats.\n\nOLAP applications in general manipulate data which is stored in a multi-dimensional format, and manipulate multi-dimensional data to generate reports, statistics, and other outputs.\n\nMiddleware platforms which attempt to combine multiple data sources for purposes of feeding data to one or more OLAP application can encounter difficulties, however. Those issues include the fact that the diverse data sources will typically not be built with completely common or consistent dimensions.\n\nAn OLAP application which wishes to attempt, for example, a sort of multi-dimensional data that is merged from multiple sources may find it impossible to locate the desired data at the correct dimension or hierarchy within the combined set of data.\n\nan OLAP application configured to analyze sales data may not be able to sort sales of a given item on a given date, if for example date is not an explicit dimension of all data sources. It may be desirable to provide methods and systems for the hierarchical aggregation of data sources which permit diverse data sources having different defined dimensions to be mapped to or combined on common dimensions for OLAP or other uses, while preserving the data of the original data sources.\n\nFIG. 1 illustrates an overall system for hierarchical aggregation of multi-dimensional data sources, according to various embodiments\n\nFIG. 2 illustrates an illustrative hierarchical mapping of data combined from different data sources, according to various embodiments\n\nFIG. 3 illustrates an illustrative hardware configuration of hardware that can implement a transform engine, according to various embodiments.\n\nFIG. 4 illustrates overall data aggregation processing to generate hierarchical mappings from different data sources, according to various embodiments.\n\nEmbodiments of the present teachings relate to systems and methods for hierarchical aggregation of multi-dimensional data sources. More particularly, embodiments relate to platforms and techniques for accessing a set of OLAP or other data sources which can be configured in independent multi-dimensional schema, combining those data sources according to a hierarchical transform, and generating output based on that hierarchical aggregation. According to embodiments, the OLAP or other multi-dimensional data sources can be accessed to extract component data into an aggregate hierarchal mapping which demonstrates a hierarchical organization, combining common dimensions and elements of the original data sources. An OLAP application or other application can therefore perform sorting, searching, or other operations on the aggregate hierarchical object, without a need to perform any format manipulations on the source data.\n\nthe resulting hierarchical mapping can be recorded or represented in a hierarchical transform table containing entries for each dimension available in each data source, along with an index to a hierarchical level or position of that dimension in the combined hierarchal mapping.\n\nthe original data sources can be preserved and not overwritten by the generation of the hierarchical transform table.\n\nthe hierarchical mapping can be generated on the fly when an OLAP or other application presents a request for access to combined data from a set of data sources.\n\nFIG. 1 illustrates an overall system 100 in which systems and methods for hierarchical aggregation of multi-dimensional data sources can operate, according to various embodiments.\n\na set of applications 102 can communicate with a transform engine 106 via one or more network 130 .\n\nSet of applications 102 can be or include, for example, a set of online analytical processing (OLAP) applications, such as database applications, statistical applications, spreadsheet applications, or other applications.\n\nOne or more network 130 can be or include, for example, the Internet or other public or private networks.\n\nTransform engine 106 can be, include, or be hosted by a server with associated memory, storage, and other resources configured to receive data requests from one or more application in set of applications 102 , and interpret that request to build a hierarchical data mapping or structure to respond to that request.\n\ntransform engine 106 can communicate with a set of data sources 104 which host data which set of applications 102 wishes to access.\n\nthe set of data sources 104 can be or include online analytic processing (OLAP) data sources, such as databases or other data stores.\n\nOLAP online analytic processing\n\nthe set of data sources 104 can be multi-dimensional data sources.\n\nOLAP online analytic processing\n\nthe data sources can be configured in a three-dimensional âcubeâ format. In embodiments, other numbers, types, or configurations of multi-dimensional data can be used.\n\nTransform engine 106 can receive a data request from one or more application in set of applications 102 , and identify which data source or sources in set of data sources 104 contain data corresponding to the data request. Transform engine 106 can then communicate with data sources having corresponding data, and extract that data from the data sources. For example, one or more dimension of each data source can be read out or retrieved by transform engine 106 . When all data corresponding to the data request is extracted from set of data sources 104 , transform engine 106 can aggregate that data into a combined, hierarchical data mapping or data structure that can be accessed by the requesting application(s).\n\ntransform engine 106 can generate a transform table 108 containing entries mapping the dimensions and/or fields extracted from the data sources in set of data sources 104 to a node or level in a tree or other hierarchical representation of the subject data.\n\ntransform table 108 can contain fields including a data source field 110 identifying the data source which contributes a dimension, field, or other data.\n\nTransform table 108 can also include a dimension field 112 representing the original dimension of the extracted data in its host data source.\n\nTransform table 108 can further include a hierarchical index 114 , representing a level at which the extracted dimension, field, or other data is placed in the resulting hierarchical data structure produced by transform engine 106 .\n\nthe hierarchical mapping 116 encoding the information extracted from set of data sources 104 can comprise a multiple-level hierarchical network.\n\nthe hierarchical mapping 116 can, for instance, be configured as a set of linked nodes, in a descending or tree-type configuration.\n\na hierarchical mapping 116 representing all book sales collected from retail, online, mail order, or other retail publishers or other sources can contain a number of distinct levels characterizing the inventory, sales, and other data for book transactions.\n\nthe first level of hierarchical mapping 116 can be indicated by a hierarchical index 114 of 1, representing a media type of âbook.â\n\nthe second level of hierarchical mapping 116 can be indicated by a hierarchical index 114 of 2, representing categories of âfictionâ or ânon-fictionâ book inventory.\n\nthe third level of hierarchical mapping 116 can be indicated by a hierarchical index 114 of 3, representing differing topic categories in each of fiction and non-fiction categories, such as novel, short story, history, biography, science, and so forth.\n\nhierarchical mapping 116 can, for instance, include a root or top most node at level 1 indicating a corporate entity as a âparentâ in a corporate tree, beneath which lower-level nodes record subsidiary, division, joint venture partner, or other business relationships or affiliations, which inter-relationships can be defined by transform able 108 and associated hierarchical mapping 116 .\n\nOther types, configurations, and levels of hierarchical mapping 116 are possible.\n\neach node at a different level of hierarchical mapping 116 can encode or represent one dimension extracted from a data source in set of data sources 104 .\n\nother mappings of dimensions to hierarchical mapping 116 can be used. It may be noted that by aggregating two or more dimensions from set of data sources 104 into a hierarchical mapping 116 , hierarchical and other relationships can be established or encoded between dimensions, even if the original multi-dimensional data source did not include an explicit or implicit definition of the hierarchical position of a given dimension or its data fields to other dimensions or fields.\n\nTransform engine 106 can, for example, build hierarchical mapping 116 in one regard by identifying common dimensions, fields, or data between data sources in set of data sources 104 .\n\nthe relationships or presumed relationships between other dimensions can be generated or projected using, for example, a set of lookup tables defining presumed hierarchical relationships between different keywords or other definitions of source dimensions.\n\na dimension identified as âdomestic salesâ can be placed at a lower level in hierarchical mapping 116 than âoverall salesâ in a mapping of sales or financial data sources.\n\nrelationships or presumed relationships between other dimensions can also be generated or projected using statistical inferences, or using neural networks or other self-learning logic.\n\ntransform engine 106 can store hierarchical mapping 116 for further reference, for instance to a data store.\n\ntransform engine 106 can generate hierarchical mapping 116 , and not store that data to a permanent data store.\n\ntransform engine 106 can extract data from set of data sources 104 and generate hierarchical mapping 116 , without altering or destroying the original data contained in the data sources.\n\nFIG. 3 illustrates an exemplary configuration of transform server 118 which can be used in systems and methods for hierarchical aggregation of multi-dimensional data sources, according to embodiments.\n\nTransform server 118 can, for instance, support or host transform engine 106 in part or whole.\n\ntransform server 118 can comprise a processor 120 communicating with memory 122 , such as electronic random access memory, operating under control of or in conjunction with operating system 126 .\n\nOperating system 126 can be, for example, a distribution of the LinuxTM operating system, the UnixTM operating system, or other open-source or proprietary operating system or platform.\n\nProcessor 120 also communicates with data store 128 , such as a database stored on a local hard drive.\n\nProcessor 120 further communicates with network interface 124 , such as an Ethernet or wireless data connection, which in turn communicates with one or more network 130 , such as the Internet or other public or private networks.\n\nnetwork interface 124 such as an Ethernet or wireless data connection\n\nProcessor 120 can, for example, communicate with set of applications 102 and set of data sources 104 via one or more network 130 .\n\nProcessor 120 also communicates with transform engine 106 and other resources to control the processing of set of data sources 104 , including to extract the dimensional data from those sources, locate common dimensions and/or fields, and build transform table 108 reflecting the hierarchical aggregation of the data sources.\n\nOther configurations of transform server 118 , associated network connections, and other hardware and software resources are possible.\n\nFIG. 4 illustrates overall aggregation processing of multi-dimensional data sources, according to various embodiments.\n\nprocessing can begin.\n\na data access request can be generated by one or more application in set of applications 102 .\n\nthe data access request can be received in transform engine 106 .\n\nmulti-dimensional data corresponding to the data request can be extracted from set of two or more data sources in set of data sources 104 by transform engine 106 .\n\ntransform engine 106 can identify one or more dimensions, fields, or other data structures in common between the two or more data sources in set of data sources 104 supplying data in response to the data request. For example, transform engine 106 can discover that the data sources share a dimension of âbookâ which can be used to order or align common dimensions of the subject data sources.\n\ntransform engine 106 can generate a hierarchical mapping 116 representing a tree-type or other hierarchical ordering of the combined dimensions and/or other data of set of data sources 104 responsive to the data request.\n\ntransform engine 106 can generate a transform table 108 reflecting the top-to-bottom or other ordering of the extracted dimensions of the data sources in set of data sources 104 related to the data request.\n\none or more application in set of applications 102 can perform a search, sort, or other operation or type of processing on hierarchical mapping 116 generated by transform table 106 .\n\ntransform table 108 can be stored, for example, stored as a table, tree, or other data structure or format to data store 128 , or other data store or repository.\n\nprocessing can repeat, return to a prior processing point, jump to a further processing point, or end.\n\ntransform engine 106 generates and maintains a hierarchical mapping 116 by way of a transform table 108\n\nother structures for establishing and storing the relationship between source dimensions, data, and hierarchical mapping 116 or other aggregate output can be used.\n\nset of data sources 104 consist of or contain explicit OLAP databases\n\nother types or categories of data sources can be included in set of data sources 104 .\n\nset of applications 102 consist of or contain OLAP-based applications\n\nother types or categories of applications can access hierarchical mapping 116 and other data.\n\nLandscapes\n\nEngineering & Computer Science (AREA)\n\nDatabases & Information Systems (AREA)\n\nTheoretical Computer Science (AREA)\n\nData Mining & Analysis (AREA)\n\nPhysics & Mathematics (AREA)\n\nGeneral Engineering & Computer Science (AREA)\n\nGeneral Physics & Mathematics (AREA)\n\nInformation Retrieval, Db Structures And Fs Structures Therefor (AREA)\n\nAbstract\n\nEmbodiments relate to systems and methods for aggregating data from data sources according to a hierarchical mapping generated from dimensions of the data sources. A set of applications such as online analytical processing (OLAP) applications can access the combined data of a set of multi-dimensional data sources via a transform engine. The set of data sources can be configured with diverse dimensions and associated data, which in general do not reflect a strictly hierarchical structure. In embodiments, the transform engine can combine or aggregate the set of data sources using common dimensions or data points, and build an index into a transform table reflecting the hierarchical level of dimension from each data source in a combined hierarchical mapping. An OLAP or other application can therefore perform searches, sorts, and/or other operations on the combined hierarchical mapping based on the resulting ordering of data, even when the original multi-dimensional data sources do not contain an explicit common hierarchy.\n\nDescription\n\nFIELD\n\nThe present teachings relate to hierarchical aggregation of multi-dimensional data sources, and more particularly to systems and techniques for aggregating multiple data sources having different dimensions into a unified hierarchical mapping for use by online analytic processing or other applications.\n\nBACKGROUND OF RELATED ART\n\nIn networked data technologies, the introduction and expanded use of middleware platforms has enabled a wider range of applications access to a wider range of data sources. Middleware platforms in general are known which allow a single application to access diverse or incompatible data sources, by commonizing the data schema used by those separate sources for use by the application.\n\nIn the realm of data analysis, online analytic processing (OLAP) applications are known which are configured to receive data in standardized formats. OLAP applications in general manipulate data which is stored in a multi-dimensional format, and manipulate multi-dimensional data to generate reports, statistics, and other outputs. Middleware platforms which attempt to combine multiple data sources for purposes of feeding data to one or more OLAP application can encounter difficulties, however. Those issues include the fact that the diverse data sources will typically not be built with completely common or consistent dimensions. An OLAP application which wishes to attempt, for example, a sort of multi-dimensional data that is merged from multiple sources may find it impossible to locate the desired data at the correct dimension or hierarchy within the combined set of data. Thus, for example, an OLAP application configured to analyze sales data may not be able to sort sales of a given item on a given date, if for example date is not an explicit dimension of all data sources. It may be desirable to provide methods and systems for the hierarchical aggregation of data sources which permit diverse data sources having different defined dimensions to be mapped to or combined on common dimensions for OLAP or other uses, while preserving the data of the original data sources.\n\nDESCRIPTION OF THE DRAWINGS\n\nThe accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate embodiments of the present teachings and together with the description, serve to explain the principles of the present teachings. In the figures:\n\nFIG. 1 illustrates an overall system for hierarchical aggregation of multi-dimensional data sources, according to various embodiments;\n\nFIG. 2 illustrates an illustrative hierarchical mapping of data combined from different data sources, according to various embodiments;\n\nFIG. 3 illustrates an illustrative hardware configuration of hardware that can implement a transform engine, according to various embodiments; and\n\nFIG. 4 illustrates overall data aggregation processing to generate hierarchical mappings from different data sources, according to various embodiments.\n\nDESCRIPTION OF EMBODIMENTS\n\nEmbodiments of the present teachings relate to systems and methods for hierarchical aggregation of multi-dimensional data sources. More particularly, embodiments relate to platforms and techniques for accessing a set of OLAP or other data sources which can be configured in independent multi-dimensional schema, combining those data sources according to a hierarchical transform, and generating output based on that hierarchical aggregation. According to embodiments, the OLAP or other multi-dimensional data sources can be accessed to extract component data into an aggregate hierarchal mapping which demonstrates a hierarchical organization, combining common dimensions and elements of the original data sources. An OLAP application or other application can therefore perform sorting, searching, or other operations on the aggregate hierarchical object, without a need to perform any format manipulations on the source data.\n\nIn embodiments, the resulting hierarchical mapping can be recorded or represented in a hierarchical transform table containing entries for each dimension available in each data source, along with an index to a hierarchical level or position of that dimension in the combined hierarchal mapping. In embodiments, the original data sources can be preserved and not overwritten by the generation of the hierarchical transform table. In embodiments, the hierarchical mapping can be generated on the fly when an OLAP or other application presents a request for access to combined data from a set of data sources. These and other embodiments described herein address the various noted shortcomings in known online analytic technology, and provide a user or network operator with enhanced OLAP compatibility and data manipulation capabilities.\n\nReference will now be made in detail to exemplary embodiments of the present teachings, which are illustrated in the accompanying drawings. Where possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.\n\nFIG. 1 illustrates an overall system 100 in which systems and methods for hierarchical aggregation of multi-dimensional data sources can operate, according to various embodiments. A set of applications 102 can communicate with a transform engine 106 via one or more network 130. Set of applications 102 can be or include, for example, a set of online analytical processing (OLAP) applications, such as database applications, statistical applications, spreadsheet applications, or other applications. One or more network 130 can be or include, for example, the Internet or other public or private networks. Transform engine 106 can be, include, or be hosted by a server with associated memory, storage, and other resources configured to receive data requests from one or more application in set of applications 102, and interpret that request to build a hierarchical data mapping or structure to respond to that request.\n\nMore particularly, and as shown in FIG. 1, transform engine 106 can communicate with a set of data sources 104 which host data which set of applications 102 wishes to access. The set of data sources 104 can be or include online analytic processing (OLAP) data sources, such as databases or other data stores. According to embodiments, the set of data sources 104 can be multi-dimensional data sources. For online analytic processing (OLAP) data sources within set of data sources 104, as understood by persons skilled in the art, the data sources can be configured in a three-dimensional âcubeâ format. In embodiments, other numbers, types, or configurations of multi-dimensional data can be used.\n\nTransform engine 106 can receive a data request from one or more application in set of applications 102, and identify which data source or sources in set of data sources 104 contain data corresponding to the data request. Transform engine 106 can then communicate with data sources having corresponding data, and extract that data from the data sources. For example, one or more dimension of each data source can be read out or retrieved by transform engine 106. When all data corresponding to the data request is extracted from set of data sources 104, transform engine 106 can aggregate that data into a combined, hierarchical data mapping or data structure that can be accessed by the requesting application(s). More particularly, in embodiments transform engine 106 can generate a transform table 108 containing entries mapping the dimensions and/or fields extracted from the data sources in set of data sources 104 to a node or level in a tree or other hierarchical representation of the subject data. In embodiments, transform table 108 can contain fields including a data source field 110 identifying the data source which contributes a dimension, field, or other data. Transform table 108 can also include a dimension field 112 representing the original dimension of the extracted data in its host data source. Transform table 108 can further include a hierarchical index 114, representing a level at which the extracted dimension, field, or other data is placed in the resulting hierarchical data structure produced by transform engine 106.\n\nAs shown, for example, in FIG. 2, the hierarchical mapping 116 encoding the information extracted from set of data sources 104 can comprise a multiple-level hierarchical network. The hierarchical mapping 116 can, for instance, be configured as a set of linked nodes, in a descending or tree-type configuration. In illustrative embodiments as shown, for example, a hierarchical mapping 116 representing all book sales collected from retail, online, mail order, or other retail publishers or other sources can contain a number of distinct levels characterizing the inventory, sales, and other data for book transactions. The first level of hierarchical mapping 116 can be indicated by a hierarchical index 114 of 1, representing a media type of âbook.â The second level of hierarchical mapping 116 can be indicated by a hierarchical index 114 of 2, representing categories of âfictionâ or ânon-fictionâ book inventory. The third level of hierarchical mapping 116 can be indicated by a hierarchical index 114 of 3, representing differing topic categories in each of fiction and non-fiction categories, such as novel, short story, history, biography, science, and so forth. As another illustration, hierarchical mapping 116 can, for instance, include a root or top most node at level 1 indicating a corporate entity as a âparentâ in a corporate tree, beneath which lower-level nodes record subsidiary, division, joint venture partner, or other business relationships or affiliations, which inter-relationships can be defined by transform able 108 and associated hierarchical mapping 116. Other types, configurations, and levels of hierarchical mapping 116 are possible.\n\nIn embodiments, each node at a different level of hierarchical mapping 116 can encode or represent one dimension extracted from a data source in set of data sources 104. In embodiments, other mappings of dimensions to hierarchical mapping 116 can be used. It may be noted that by aggregating two or more dimensions from set of data sources 104 into a hierarchical mapping 116, hierarchical and other relationships can be established or encoded between dimensions, even if the original multi-dimensional data source did not include an explicit or implicit definition of the hierarchical position of a given dimension or its data fields to other dimensions or fields. Transform engine 106 can, for example, build hierarchical mapping 116 in one regard by identifying common dimensions, fields, or data between data sources in set of data sources 104.\n\nIn embodiments, the relationships or presumed relationships between other dimensions can be generated or projected using, for example, a set of lookup tables defining presumed hierarchical relationships between different keywords or other definitions of source dimensions. Thus, for instance, a dimension identified as âdomestic salesâ can be placed at a lower level in hierarchical mapping 116 than âoverall salesâ in a mapping of sales or financial data sources. In embodiments, relationships or presumed relationships between other dimensions can also be generated or projected using statistical inferences, or using neural networks or other self-learning logic. In embodiments, transform engine 106 can store hierarchical mapping 116 for further reference, for instance to a data store. In embodiments, transform engine 106 can generate hierarchical mapping 116, and not store that data to a permanent data store. In embodiments, transform engine 106 can extract data from set of data sources 104 and generate hierarchical mapping 116, without altering or destroying the original data contained in the data sources.\n\nFIG. 3 illustrates an exemplary configuration of transform server 118 which can be used in systems and methods for hierarchical aggregation of multi-dimensional data sources, according to embodiments. Transform server 118 can, for instance, support or host transform engine 106 in part or whole. In embodiments as shown, transform server 118 can comprise a processor 120 communicating with memory 122, such as electronic random access memory, operating under control of or in conjunction with operating system 126. Operating system 126 can be, for example, a distribution of the Linuxâ¢ operating system, the Unixâ¢ operating system, or other open-source or proprietary operating system or platform. Processor 120 also communicates with data store 128, such as a database stored on a local hard drive. Processor 120 further communicates with network interface 124, such as an Ethernet or wireless data connection, which in turn communicates with one or more network 130, such as the Internet or other public or private networks. Processor 120 can, for example, communicate with set of applications 102 and set of data sources 104 via one or more network 130. Processor 120 also communicates with transform engine 106 and other resources to control the processing of set of data sources 104, including to extract the dimensional data from those sources, locate common dimensions and/or fields, and build transform table 108 reflecting the hierarchical aggregation of the data sources. Other configurations of transform server 118, associated network connections, and other hardware and software resources are possible.\n\nFIG. 4 illustrates overall aggregation processing of multi-dimensional data sources, according to various embodiments. In 402, processing can begin. In 404, a data access request can be generated by one or more application in set of applications 102. In 406, the data access request can be received in transform engine 106. In 408, multi-dimensional data corresponding to the data request can be extracted from set of two or more data sources in set of data sources 104 by transform engine 106. In 410, transform engine 106 can identify one or more dimensions, fields, or other data structures in common between the two or more data sources in set of data sources 104 supplying data in response to the data request. For example, transform engine 106 can discover that the data sources share a dimension of âbookâ which can be used to order or align common dimensions of the subject data sources.\n\nIn 412, transform engine 106 can generate a hierarchical mapping 116 representing a tree-type or other hierarchical ordering of the combined dimensions and/or other data of set of data sources 104 responsive to the data request. In 414, transform engine 106 can generate a transform table 108 reflecting the top-to-bottom or other ordering of the extracted dimensions of the data sources in set of data sources 104 related to the data request. In 416, one or more application in set of applications 102 can perform a search, sort, or other operation or type of processing on hierarchical mapping 116 generated by transform table 106. For example, in a retail sales context, a sorting of the top ten or other number of best-selling books in fiction, non-fiction, or other categories can be sorted for a given sales period. In 418, transform table 108, hierarchical mapping 116, and/or other data produced by the hierarchical aggregation of set of data sources 104 can be stored, for example, stored as a table, tree, or other data structure or format to data store 128, or other data store or repository. In 420, processing can repeat, return to a prior processing point, jump to a further processing point, or end.\n\nThe foregoing description is illustrative, and variations in configuration and implementation may occur to persons skilled in the art. For example, while embodiments have been described in which transform engine 106 generates and maintains a hierarchical mapping 116 by way of a transform table 108, in embodiments other structures for establishing and storing the relationship between source dimensions, data, and hierarchical mapping 116 or other aggregate output can be used. For further example, while embodiments have been described in which set of data sources 104 consist of or contain explicit OLAP databases, in embodiments other types or categories of data sources can be included in set of data sources 104. Similarly, while embodiments have been described in which set of applications 102 consist of or contain OLAP-based applications, in embodiments other types or categories of applications can access hierarchical mapping 116 and other data.\n\nYet further, while embodiments have been described in which a single transform engine 106 generates and manages transform table 108, in embodiments multiple transform engines, for example hosted on multiple servers, can cooperate to generate mappings between data sources and hierarchical mapping 116 and/or other output. Other resources described as singular or integrated can in embodiments be plural or distributed, and resources described as multiple or distributed can in embodiments be combined. The scope of the present teachings is accordingly intended to be limited only by the following claims.\n\nClaims (13)\n\nWhat is claimed is:\n\n1. A method comprising:\n\nreceiving, by a transform engine executed by a processor, a data request from at least one application, wherein the transform engine is in communication with a set of multi-dimensional data sources;\n\nidentifying, by the transform engine, multiple multi-dimensional data sources from the set of multi-dimensional data sources that contain data that corresponds to the data request;\n\nextracting, by the transform engine, the data corresponding to the data request from the identified multi-dimensional data sources;\n\nidentifying, by the transform engine, multiple dimensions of the extracted data, wherein hierarchical relationships exist between ones of the identified dimensions within each of the identified multi-dimensional data sources;\n\nexamining, by the transform engine, a lookup table defining presumed relationships between the identified dimensions to generate a new hierarchical relationship between ones of the identified dimensions from separate ones of the identified multi-dimensional data sources, wherein the separate ones of the identified multi-dimensional data sources do not explicitly or implicitly include a definition of the new hierarchical relationship;\n\ngenerating, by the transform engine, a hierarchical structure for the identified dimensions based on the existing hierarchical relationships and the new hierarchical relationship, wherein the hierarchical structure maps each one of the identified dimensions to one of multiple levels within the existing hierarchical relationships and the new hierarchical relationship, wherein the hierarchical structure comprises a set of ordered nodes, wherein each node in the set of ordered nodes corresponds to a dimension from the identified dimensions of the extracted data and a level from the levels in the hierarchical structure; and\n\naggregating, by the transform engine, the extracted data into the hierarchical structure, wherein aggregating the extracted data comprises generating a transform table that stores, for each node in the set of ordered nodes, the dimension and the level of the node.\n\n2. The method of claim 1, wherein the at least one application comprises multiple applications.\n\n3. The method of claim 1, wherein the at least one application comprises an online analytical processing (OLAP) application.\n\n4. The method of claim 1, wherein the set of multi-dimensional data sources comprises a set of online analytical processing (OLAP) data sources.\n\n5. The method of claim 1, wherein the set of multi-dimensional data sources comprises a set of structured three-dimensional data sources.\n\n6. A system comprising:\n\nan interface to receive a data request from at least one application, wherein the transform engine is in communication with a set of multi-dimensional data sources;\n\na processor to execute a transform engine, in communication with the interface, the transform engine to:\n\nidentify multiple multi-dimensional data sources from the set of multi-dimensional data sources that contain data that corresponds to the data request,\n\nextract the data corresponding to the data request from the identified multi-dimensional data sources,\n\nidentify multiple dimensions of the extracted data, wherein hierarchical relationships exist between ones of the identified dimensions within each of the identified multi-dimensional data sources,\n\nexamine a lookup table defining presumed relationships between the identified dimensions to generate a new hierarchical relationship between ones of the identified dimensions from separate ones of the identified multi-dimensional data sources, wherein the separate ones of the identified multi-dimensional data sources do not explicitly or implicitly include a definition of the new hierarchical relationship,\n\ngenerate a hierarchical structure for the identified dimensions based on the existing hierarchical relationships and the new hierarchical relationship, wherein the hierarchical structure maps each one of the identified dimensions to one of multiple levels within the existing hierarchical relationships and the new hierarchical relationship, wherein the hierarchical structure comprises a set of ordered nodes, wherein each node in the set of ordered nodes corresponds to a dimension from the identified dimensions of the extracted data and a level from the levels in the hierarchical structure, and\n\naggregate the extracted data into the hierarchical structure, wherein aggregating the extracted data comprises generating a transform table that stores, for each node in the set of ordered nodes, the dimension and the level of the node.\n\n7. The system of claim 6, wherein the at least one application comprises multiple applications.\n\n8. The system of claim 6, wherein the at least one application comprises an online analytical processing (OLAP) application.\n\n9. The system of claim 6, wherein the set of multi-dimensional data sources comprises a set of online analytical processing (OLAP) data sources.\n\n10. The system of claim 6, wherein the set of multi-dimensional data sources comprises a set of structured three-dimensional data sources.\n\n11. A non-transitory computer readable medium comprising executable program code which, when executed by a processor, causes the processor to perform a method comprising:\n\nreceiving, by a transform engine executed by the processor, a data request from at least one application, wherein the transform engine is in communication with a set of multi-dimensional data sources;\n\nidentifying, by the transform engine, multiple multi-dimensional data sources from the set of multi-dimensional data sources that contain data that corresponds to the data request;\n\nextracting, by the transform engine, the data corresponding to the data request from the identified multi-dimensional data sources;\n\nidentifying, by the transform engine, multiple dimensions of the extracted data, wherein hierarchical relationships exist between ones of the identified dimensions within each of the identified multi-dimensional data sources;\n\nexamining, by the transform engine, a lookup table defining presumed relationships between the identified dimensions, to generate a new hierarchical relationship between ones of the identified dimensions from separate ones of the identified multi-dimensional data sources, wherein the separate ones of the identified multi-dimensional data sources do not explicitly or implicitly include a definition of the new hierarchical relationship;\n\ngenerating, by the transform engine, a hierarchical structure for the identified dimensions based on the existing hierarchical relationships and the new hierarchical relationship, wherein the hierarchical structure maps each one of the identified dimensions to one of multiple levels within the existing hierarchical relationships and the new hierarchical relationship, wherein the hierarchical structure comprises a set of ordered nodes, wherein each node in the set of ordered nodes corresponds to a dimension from the identified dimensions of the extracted data and a level from the levels in the hierarchical structure; and\n\naggregating, by the transform engine, the extracted data into the hierarchical structure, wherein aggregating the extracted data comprises generating a transform table that stores, for each node in the set of ordered nodes, the dimension and the level of the node.\n\n12. The non-transitory computer readable medium of claim 11, wherein the at least one application comprises an online analytical processing (OLAP) application.\n\n13. The non-transitory computer readable medium of claim 11, wherein the set of multi-dimensional data sources comprises a set of online analytical processing (OLAP) data sources.\n\nUS12/200,101 2008-08-28 2008-08-28 Systems and methods for hierarchical aggregation of multi-dimensional data sources Active 2029-10-29 US8495007B2 (en)\n\nPriority Applications (1)\n\nApplication Number Priority Date Filing Date Title US12/200,101 US8495007B2 (en) 2008-08-28 2008-08-28 Systems and methods for hierarchical aggregation of multi-dimensional data sources\n\nApplications Claiming Priority (1)\n\nApplication Number Priority Date Filing Date Title US12/200,101 US8495007B2 (en) 2008-08-28 2008-08-28 Systems and methods for hierarchical aggregation of multi-dimensional data sources\n\nPublications (2)\n\nPublication Number Publication Date US20100057700A1 US20100057700A1 (en) 2010-03-04 US8495007B2 true US8495007B2 (en) 2013-07-23\n\nFamily\n\nID=41726814\n\nFamily Applications (1)\n\nApplication Number Title Priority Date Filing Date US12/200,101 Active 2029-10-29 US8495007B2 (en) 2008-08-28 2008-08-28 Systems and methods for hierarchical aggregation of multi-dimensional data sources\n\nCountry Status (1)\n\nCountry Link US (1) US8495007B2 (en)\n\nCited By (9)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title WO2015135067A1 (en) * 2014-03-11 2015-09-17 A4 Innovation Inc. Obtaining produced content from a database US9547834B2 (en) 2014-01-08 2017-01-17 Bank Of America Corporation Transaction performance monitoring CN107562946A (en) * 2017-09-26 2018-01-09 åäº¬åå¢ä¿¡æ¯ç§ææéå ¬å¸ A kind of method that concordance list is created in big data system US9935964B2 (en) 2014-10-08 2018-04-03 Oracle Financial Services Software Limited Access control for objects having attributes defined against hierarchically organized domains containing fixed number of values US9992090B2 (en) 2014-01-08 2018-06-05 Bank Of America Corporation Data metrics analytics US10223421B2 (en) * 2015-12-30 2019-03-05 Sap Se Virtual Aggregation US10341459B2 (en) 2015-09-18 2019-07-02 International Business Machines Corporation Personalized content and services based on profile information US10489225B2 (en) 2017-08-10 2019-11-26 Bank Of America Corporation Automatic resource dependency tracking and structure for maintenance of resource fault propagation US10938950B2 (en) 2017-11-14 2021-03-02 General Electric Company Hierarchical data exchange management system\n\nFamilies Citing this family (44)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US8463739B2 (en) * 2008-08-28 2013-06-11 Red Hat, Inc. Systems and methods for generating multi-population statistical measures using middleware US9020882B2 (en) 2008-11-26 2015-04-28 Red Hat, Inc. Database hosting middleware dimensional transforms US8452755B1 (en) * 2009-05-12 2013-05-28 Microstrategy Incorporated Database query analysis technology US8930487B2 (en) * 2009-05-29 2015-01-06 Red Hat, Inc. Object-based modeling using model objects exportable to external modeling tools US9009006B2 (en) 2009-05-29 2015-04-14 Red Hat, Inc. Generating active links between model objects US8606827B2 (en) 2009-05-29 2013-12-10 Red Hat, Inc. Systems and methods for extracting database dimensions as data modeling object US9105006B2 (en) 2009-05-29 2015-08-11 Red Hat, Inc. Generating floating desktop representation of extracted model object US9292592B2 (en) 2009-05-29 2016-03-22 Red Hat, Inc. Object-based modeling using composite model object having independently updatable component objects US8417739B2 (en) * 2009-05-29 2013-04-09 Red Hat, Inc. Systems and methods for object-based modeling using hierarchical model objects US9292485B2 (en) 2009-05-29 2016-03-22 Red Hat, Inc. Extracting data cell transformable to model object US8365195B2 (en) * 2009-08-31 2013-01-29 Red Hat, Inc. Systems and methods for generating sets of model objects having data messaging pipes US9152944B2 (en) 2009-08-31 2015-10-06 Red Hat, Inc. Generating rapidly rotatable dimensional view of data objects US20110054854A1 (en) * 2009-08-31 2011-03-03 Eric Williamson Systems and methods for generating dimensionally altered model objects US8417734B2 (en) * 2009-08-31 2013-04-09 Red Hat, Inc. Systems and methods for managing sets of model objects via unified management interface US9152435B2 (en) * 2009-08-31 2015-10-06 Red Hat, Inc. Generating a set of linked rotational views of model objects US9031987B2 (en) * 2009-09-30 2015-05-12 Red Hat, Inc. Propagation of data changes in distribution operations in hierarchical database US8909678B2 (en) * 2009-09-30 2014-12-09 Red Hat, Inc. Conditioned distribution of data in a lattice-based database using spreading rules US20110078199A1 (en) * 2009-09-30 2011-03-31 Eric Williamson Systems and methods for the distribution of data in a hierarchical database via placeholder nodes US8996453B2 (en) * 2009-09-30 2015-03-31 Red Hat, Inc. Distribution of data in a lattice-based database via placeholder nodes US8984013B2 (en) * 2009-09-30 2015-03-17 Red Hat, Inc. Conditioning the distribution of data in a hierarchical database US8396880B2 (en) * 2009-11-30 2013-03-12 Red Hat, Inc. Systems and methods for generating an optimized output range for a data distribution in a hierarchical database US8589344B2 (en) * 2009-11-30 2013-11-19 Red Hat, Inc. Systems and methods for generating iterated distributions of data in a hierarchical database US8315174B2 (en) * 2009-12-31 2012-11-20 Red Hat, Inc. Systems and methods for generating a push-up alert of fault conditions in the distribution of data in a hierarchical database US8650218B2 (en) * 2010-05-20 2014-02-11 International Business Machines Corporation Dynamic self configuring overlays US9342793B2 (en) 2010-08-31 2016-05-17 Red Hat, Inc. Training a self-learning network using interpolated input sets based on a target output US10353891B2 (en) 2010-08-31 2019-07-16 Red Hat, Inc. Interpolating conformal input sets based on a target output US9355383B2 (en) 2010-11-22 2016-05-31 Red Hat, Inc. Tracking differential changes in conformal data input sets US8364687B2 (en) 2010-11-29 2013-01-29 Red Hat, Inc. Systems and methods for binding multiple interpolated data objects US8346817B2 (en) 2010-11-29 2013-01-01 Red Hat, Inc. Systems and methods for embedding interpolated data object in application data file US10366464B2 (en) 2010-11-29 2019-07-30 Red Hat, Inc. Generating interpolated input data sets using reduced input source objects US8768942B2 (en) 2011-02-28 2014-07-01 Red Hat, Inc. Systems and methods for generating interpolated data sets converging to optimized results using iterative overlapping inputs US8290969B2 (en) 2011-02-28 2012-10-16 Red Hat, Inc. Systems and methods for validating interpolation results using monte carlo simulations on interpolated data inputs US9489439B2 (en) 2011-02-28 2016-11-08 Red Hat, Inc. Generating portable interpolated data using object-based encoding of interpolation results US8862638B2 (en) 2011-02-28 2014-10-14 Red Hat, Inc. Interpolation data template to normalize analytic runs US10235441B1 (en) * 2012-06-29 2019-03-19 Open Text Corporation Methods and systems for multi-dimensional aggregation using composition US10169442B1 (en) * 2012-06-29 2019-01-01 Open Text Corporation Methods and systems for multi-dimensional aggregation using composition US9430453B1 (en) 2012-12-19 2016-08-30 Emc Corporation Multi-page document recognition in document capture US20150370882A1 (en) 2014-06-20 2015-12-24 Amazon Technologies, Inc. Use of dependency graphs to dynamically update n-dimensional cubes JP6410932B2 (en) 2014-06-20 2018-10-24 ã¢ãã¾ã³ ãã¯ãã­ã¸ã¼ãº ã¤ã³ã³ã¼ãã¬ã¤ããã Embedded cloud analytics US9824133B1 (en) * 2014-06-20 2017-11-21 Amazon Technologies, Inc. Cloud analytics marketplace US11868372B1 (en) * 2014-06-20 2024-01-09 Amazon Technologies, Inc. Automated hierarchy detection for cloud-based analytics US9882949B1 (en) 2014-06-20 2018-01-30 Amazon Technologies, Inc. Dynamic detection of data correlations based on realtime data US9817876B2 (en) * 2015-06-29 2017-11-14 Planisware SAS Enhanced mechanisms for managing multidimensional data CN108334554B (en) * 2017-12-29 2021-10-01 ä¸æµ·è·¬æºä¿¡æ¯ææ¯æéå ¬å¸ Novel OLAP pre-calculation model and construction method\n\nCitations (111)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US5649180A (en) * 1993-11-19 1997-07-15 Hitachi, Ltd. Method for generating hierarchical specification information from software US5890167A (en) 1997-05-08 1999-03-30 Oracle Corporation Pluggable tablespaces for database systems US5890151A (en) * 1997-05-09 1999-03-30 International Business Machines Corporation Method and system for performing partial-sum queries on a data cube US5978796A (en) * 1997-06-30 1999-11-02 International Business Machines Corporation Accessing multi-dimensional data by mapping dense data blocks to rows in a relational database US6161103A (en) * 1998-05-06 2000-12-12 Epiphany, Inc. Method and apparatus for creating aggregates for use in a datamart US6189004B1 (en) * 1998-05-06 2001-02-13 E. Piphany, Inc. Method and apparatus for creating a datamart and for creating a query structure for the datamart US6212524B1 (en) * 1998-05-06 2001-04-03 E.Piphany, Inc. Method and apparatus for creating and populating a datamart US6301579B1 (en) 1998-10-20 2001-10-09 Silicon Graphics, Inc. Method, system, and computer program product for visualizing a data structure US20010049678A1 (en) * 1997-06-19 2001-12-06 Fujitsu Limited Data display apparatus and method for displaying data mining results as multi-dimensional data US20020029207A1 (en) * 2000-02-28 2002-03-07 Hyperroll, Inc. Data aggregation server for managing a multi-dimensional database and database management system having data aggregation server integrated therein US6360188B1 (en) 1998-10-27 2002-03-19 Brixx Limited Time-based modeling US20020035562A1 (en) 2000-06-06 2002-03-21 Keith Roller DataMart US6366905B1 (en) * 1999-06-22 2002-04-02 Microsoft Corporation Aggregations design in database services US6366922B1 (en) * 1998-09-30 2002-04-02 I2 Technologies Us, Inc. Multi-dimensional data management system US20020059195A1 (en) * 2000-04-03 2002-05-16 Jean-Yves Cras Analytical reporting on top of multidimensional data model US20020083034A1 (en) * 2000-02-14 2002-06-27 Julian Orbanes Method and apparatus for extracting data objects and locating them in virtual space US20020087516A1 (en) * 2000-04-03 2002-07-04 Jean-Yves Cras Mapping of an RDBMS schema onto a multidimensional data model US20020089550A1 (en) * 2000-02-14 2002-07-11 Julian Orbanes Method and apparatus for organizing hierarchical screens in virtual space US6434435B1 (en) 1997-02-21 2002-08-13 Baker Hughes Incorporated Application of adaptive object-oriented optimization software to an automatic optimization oilfield hydrocarbon production management system US6434544B1 (en) * 1999-08-04 2002-08-13 Hyperroll, Israel Ltd. Stand-alone cartridge-style data aggregation server providing data aggregation for OLAP analyses US20020169658A1 (en) 2001-03-08 2002-11-14 Adler Richard M. System and method for modeling and analyzing strategic business decisions US20020194196A1 (en) * 2000-12-12 2002-12-19 Weinberg Paul N. Method and apparatus for transforming data US20020194163A1 (en) * 2001-05-30 2002-12-19 Hopeman Albert A. Methods and apparatus for aggregating sparse data US20030004938A1 (en) * 2001-05-15 2003-01-02 Lawder Jonathan Keir Method of storing and retrieving multi-dimensional data using the hilbert curve US20030014417A1 (en) * 2001-06-14 2003-01-16 International Business Machines Corporation Selecting a function for use in detecting an exception in multidimensional data US20030115207A1 (en) * 2001-09-25 2003-06-19 Bowman David M. Hierarchical hybrid OLAP analytics generators US20030115194A1 (en) 2001-08-01 2003-06-19 Pitts Theodore H. Method and apparatus for processing a query to a multi-dimensional data structure US20030114950A1 (en) * 2000-07-18 2003-06-19 Ruth Joseph D. System, method and computer program product for mapping data of multi-database origins US20030126114A1 (en) 2001-12-27 2003-07-03 Tedesco Michael A. Method and apparatus for implementing and using an alternate database engine with existing database engine US20030126143A1 (en) 2001-06-12 2003-07-03 Nicholas Roussopoulos Dwarf cube architecture for reducing storage sizes of multidimensional data US6594672B1 (en) * 2000-06-01 2003-07-15 Hyperion Solutions Corporation Generating multidimensional output using meta-models and meta-outlines US20030154443A1 (en) * 2002-02-13 2003-08-14 Ncr Corporation Visual discovery tool US6609123B1 (en) * 1999-09-03 2003-08-19 Cognos Incorporated Query engine and method for querying data using metadata model US20030184585A1 (en) 2002-03-29 2003-10-02 George Lin Method for dynamically generating a user interface from XML-based documents US20030195897A1 (en) * 1996-11-04 2003-10-16 Agrafiotis Dimitris K. Method, system and computer program product for non-linear mapping of multi-dimensional data US20030200191A1 (en) 2002-04-19 2003-10-23 Computer Associates Think, Inc. Viewing multi-dimensional data through hierarchical visualization US20030200221A1 (en) * 1999-08-04 2003-10-23 Reuven Bakalash Stand-alone cartridge-style data aggregation server US20040015507A1 (en) * 2002-07-19 2004-01-22 Amir Netz System and method for analytically modeling data organized according to related attributes US20040039736A1 (en) 2001-03-01 2004-02-26 Lawson Software, Inc. OLAP query generation engine US6735590B1 (en) * 1997-05-29 2004-05-11 Oracle Corporation Method, article of manufacture, and apparatus for generating a multi-dimensional record management index US20040133552A1 (en) * 2000-08-01 2004-07-08 David Greenfield System and method for online analytical processing US20040139061A1 (en) * 2003-01-13 2004-07-15 International Business Machines Corporation Method, system, and program for specifying multidimensional calculations for a relational OLAP engine US20040236767A1 (en) * 2003-05-07 2004-11-25 Oracle International Corporation Efficient SQL access to multidimensional data US20050004904A1 (en) * 2003-05-07 2005-01-06 Oracle International Corporation Exposing multidimensional calculations through structured query language US20050010566A1 (en) * 2003-05-27 2005-01-13 David Cushing System and method of multidimensional query results processing US20050060300A1 (en) * 2003-09-16 2005-03-17 Chris Stolte Computer systems and methods for visualizing data US20050060382A1 (en) 2003-09-15 2005-03-17 Alex Spector On-Demand Electronic Documents Processing and Sharing US6898560B1 (en) * 1999-06-02 2005-05-24 Solidworks Corporation Maintaining a computer-generated design model US6931418B1 (en) * 2001-03-26 2005-08-16 Steven M. Barnes Method and system for partial-order analysis of multi-dimensional data US20050262108A1 (en) * 2004-05-07 2005-11-24 Interlace Systems, Inc. Methods and apparatus for facilitating analysis of large data sets US20050289119A1 (en) * 2002-06-04 2005-12-29 Weinberg Paul N Method and apparatus for generating and utilizing qualifiers and qualified taxonomy tables US20060004833A1 (en) * 2004-06-30 2006-01-05 Vishal Trivedi Method and system for data extraction from a transaction system to an analytics system US20060004816A1 (en) 2004-06-16 2006-01-05 Martin Diewald Compiling values that relate to aggregate data US20060026189A1 (en) * 2004-07-29 2006-02-02 International Business Machines Corporation Method and system for reconstruction of object model data in a relational database US20060031187A1 (en) 2004-08-04 2006-02-09 Advizor Solutions, Inc. Systems and methods for enterprise-wide visualization of multi-dimensional data US20060036707A1 (en) 2004-08-13 2006-02-16 Pawan Singh Method and apparatus for routing images US20060116976A1 (en) * 2004-11-30 2006-06-01 Thomas Legault Generation of aggregatable dimension information within a multidimensional enterprise software system US20060116975A1 (en) * 2004-11-30 2006-06-01 Michael Gould Automated default dimension selection within a multidimensional enterprise software system US20060136462A1 (en) 2004-12-16 2006-06-22 Campos Marcos M Data-centric automatic data mining US20060179061A1 (en) 2005-02-07 2006-08-10 D Souza Roy P Multi-dimensional surrogates for data management US20060206512A1 (en) * 2004-12-02 2006-09-14 Patrick Hanrahan Computer systems and methods for visualizing data with generation of marks US20060262145A1 (en) * 2005-05-18 2006-11-23 Microsoft Corporation System and method for interactively displaying multi-dimensional data US7152062B1 (en) 2000-11-21 2006-12-19 Actuate Corporation Technique for encapsulating a query definition US20070022093A1 (en) * 2005-03-07 2007-01-25 Nat Wyatt System and method for analyzing and reporting extensible data from multiple sources in multiple formats US20070027904A1 (en) * 2005-06-24 2007-02-01 George Chow System and method for translating between relational database queries and multidimensional database queries US20070027930A1 (en) 2005-08-01 2007-02-01 Billy Alvarado Universal data aggregation US20070088757A1 (en) 2001-06-01 2007-04-19 Ward Mullins System, method and software for creating, maintaining, navigating or manipulating complex data objects and their data relationships US20070094236A1 (en) * 2005-10-24 2007-04-26 Wolfgang Otter Combining multi-dimensional data sources using database operations US20070156634A1 (en) * 2005-12-31 2007-07-05 Martin Michael W Multidimensional dynamic clustering (MDDC) US20070162472A1 (en) 2005-12-23 2007-07-12 Seatab Software, Inc. Multi-dimensional data analysis US20070208721A1 (en) * 2003-12-01 2007-09-06 Zaman Kazi A Modeling multidimensional data sources US20070250524A1 (en) * 2006-04-19 2007-10-25 Jian Le Method and apparatus for workload and model based materialized query table or view recommendation technique US7299241B2 (en) 2002-11-22 2007-11-20 Accenture Global Services Gmbh Building analytical models with standardized virtual flat files US7340476B2 (en) * 2002-10-18 2008-03-04 International Business Machines Corporation Method for online analytical processing (OLAP) US20080140696A1 (en) 2006-12-07 2008-06-12 Pantheon Systems, Inc. System and method for analyzing data sources to generate metadata US20080162562A1 (en) * 2007-01-03 2008-07-03 Claria Corporation System for Database Reporting US20080172405A1 (en) * 2006-12-05 2008-07-17 Tim Feng Method and system to process multi-dimensional data US20080222189A1 (en) * 2007-03-06 2008-09-11 Microsoft Corporation Associating multidimensional data models US20080243778A1 (en) * 2007-03-30 2008-10-02 International Business Machines Corporation Cube faceted data analysis US20080294596A1 (en) * 2007-05-23 2008-11-27 Business Objects, S.A. System and method for processing queries for combined hierarchical dimensions US20080320023A1 (en) 2005-02-03 2008-12-25 Fong Joseph S P System and method of translating a relational database into an xml document and vice versa US20090037440A1 (en) * 2007-07-30 2009-02-05 Stefan Will Streaming Hierarchical Clustering US20090193039A1 (en) 2008-01-28 2009-07-30 Apollo Data Technologies, Llc Data driven system for data analysis and data mining US20090217147A1 (en) * 2005-03-15 2009-08-27 Hyperion Solutions Corp., A Delaware Corporation Multidimensional data visualization using four or more dimensions US20090222470A1 (en) * 2002-12-10 2009-09-03 Stephen John Kemp Data model development tool US7660822B1 (en) * 2004-03-31 2010-02-09 Google Inc. Systems and methods for sorting and displaying search results in multiple dimensions US20100057777A1 (en) 2008-08-28 2010-03-04 Eric Williamson Systems and methods for generating multi-population statistical measures using middleware US20100131456A1 (en) 2008-11-26 2010-05-27 Eric Williamson Systems and methods for middleware database hosting dimensional transforms US7739224B1 (en) * 1998-05-06 2010-06-15 Infor Global Solutions (Michigan), Inc. Method and system for creating a well-formed database using semantic definitions US20100169299A1 (en) 2006-05-17 2010-07-01 Mitretek Systems, Inc. Method and system for information extraction and modeling US7761407B1 (en) * 2006-10-10 2010-07-20 Medallia, Inc. Use of primary and secondary indexes to facilitate aggregation of records of an OLAP data cube US20100306340A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for object-based modeling using model objects exportable to external modeling tools US20100306272A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for object-based modeling using hierarchical model objects US20100306281A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for extracting database dimensions as data modeling object US20100306255A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for extracting data cell transformable to model object US20100306682A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for generating floating desktop representation of extracted model object US20100306254A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for object-based modeling using composite model object having independently updatable component objects US20100305922A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for generating active links between model objects US20110050728A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for generating rapidly rotatable dimensional view of data objects US20110054854A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for generating dimensionally altered model objects US20110055761A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for managing sets of model objects via unified management interface US20110055850A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for generating sets of model objects having data messaging pipes US20110055680A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for generating a set of linked rotational views of model objects US20110078199A1 (en) 2009-09-30 2011-03-31 Eric Williamson Systems and methods for the distribution of data in a hierarchical database via placeholder nodes US20110078200A1 (en) 2009-09-30 2011-03-31 Eric Williamson Systems and methods for conditioning the distribution of data in a hierarchical database US20110131176A1 (en) 2009-11-30 2011-06-02 Eric Williamson Systems and methods for generating iterated distributions of data in a hierarchical database US20110131220A1 (en) 2009-11-30 2011-06-02 Eric Williamson Systems and methods for generating an optimized output range for a data distribution in a hierarchical database US20110158106A1 (en) 2009-12-31 2011-06-30 Eric Williamson Systems and methods for generating a push-up alert of fault conditions in the distribution of data in a hierarchical database US20110161378A1 (en) 2009-09-30 2011-06-30 Eric Williamson Systems and methods for automatic propagation of data changes in distribution operations in hierarchical database US20110161282A1 (en) 2009-09-30 2011-06-30 Eric Williamson Systems and methods for distribution of data in a lattice-based database via placeholder nodes US20110161374A1 (en) 2009-09-30 2011-06-30 Eric Williamson Systems and methods for conditioned distribution of data in a lattice-based database using spreading rules\n\nFamily Cites Families (1)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US20060031887A1 (en) * 2004-04-30 2006-02-09 Sparrell Carlton J Centralized resource manager\n\n2008\n\n2008-08-28 US US12/200,101 patent/US8495007B2/en active Active\n\nPatent Citations (116)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US5649180A (en) * 1993-11-19 1997-07-15 Hitachi, Ltd. Method for generating hierarchical specification information from software US20030195897A1 (en) * 1996-11-04 2003-10-16 Agrafiotis Dimitris K. Method, system and computer program product for non-linear mapping of multi-dimensional data US6434435B1 (en) 1997-02-21 2002-08-13 Baker Hughes Incorporated Application of adaptive object-oriented optimization software to an automatic optimization oilfield hydrocarbon production management system US5890167A (en) 1997-05-08 1999-03-30 Oracle Corporation Pluggable tablespaces for database systems US5890151A (en) * 1997-05-09 1999-03-30 International Business Machines Corporation Method and system for performing partial-sum queries on a data cube US20050262120A1 (en) * 1997-05-29 2005-11-24 Randall Shoup Method, article of manufacturing, and apparatus for generating a multi-dimensional record management index US6735590B1 (en) * 1997-05-29 2004-05-11 Oracle Corporation Method, article of manufacture, and apparatus for generating a multi-dimensional record management index US20010049678A1 (en) * 1997-06-19 2001-12-06 Fujitsu Limited Data display apparatus and method for displaying data mining results as multi-dimensional data US5978796A (en) * 1997-06-30 1999-11-02 International Business Machines Corporation Accessing multi-dimensional data by mapping dense data blocks to rows in a relational database US6212524B1 (en) * 1998-05-06 2001-04-03 E.Piphany, Inc. Method and apparatus for creating and populating a datamart US6189004B1 (en) * 1998-05-06 2001-02-13 E. Piphany, Inc. Method and apparatus for creating a datamart and for creating a query structure for the datamart US6161103A (en) * 1998-05-06 2000-12-12 Epiphany, Inc. Method and apparatus for creating aggregates for use in a datamart US7739224B1 (en) * 1998-05-06 2010-06-15 Infor Global Solutions (Michigan), Inc. Method and system for creating a well-formed database using semantic definitions US6366922B1 (en) * 1998-09-30 2002-04-02 I2 Technologies Us, Inc. Multi-dimensional data management system US6301579B1 (en) 1998-10-20 2001-10-09 Silicon Graphics, Inc. Method, system, and computer program product for visualizing a data structure US6360188B1 (en) 1998-10-27 2002-03-19 Brixx Limited Time-based modeling US6898560B1 (en) * 1999-06-02 2005-05-24 Solidworks Corporation Maintaining a computer-generated design model US6366905B1 (en) * 1999-06-22 2002-04-02 Microsoft Corporation Aggregations design in database services US20030200221A1 (en) * 1999-08-04 2003-10-23 Reuven Bakalash Stand-alone cartridge-style data aggregation server US6434544B1 (en) * 1999-08-04 2002-08-13 Hyperroll, Israel Ltd. Stand-alone cartridge-style data aggregation server providing data aggregation for OLAP analyses US6609123B1 (en) * 1999-09-03 2003-08-19 Cognos Incorporated Query engine and method for querying data using metadata model US20020089550A1 (en) * 2000-02-14 2002-07-11 Julian Orbanes Method and apparatus for organizing hierarchical screens in virtual space US20020083034A1 (en) * 2000-02-14 2002-06-27 Julian Orbanes Method and apparatus for extracting data objects and locating them in virtual space US20020029207A1 (en) * 2000-02-28 2002-03-07 Hyperroll, Inc. Data aggregation server for managing a multi-dimensional database and database management system having data aggregation server integrated therein US20030225736A1 (en) * 2000-02-28 2003-12-04 Reuven Bakalash Enterprise-wide resource planning (ERP) system with integrated data aggregation engine US20070130116A1 (en) * 2000-04-03 2007-06-07 Business Objects, S.A. Mapping of an rdbms schema onto a multidimensional data model US20050015360A1 (en) * 2000-04-03 2005-01-20 Jean-Yves Cras Mapping of an RDBMS schema onto a multidimensional data model US20020059195A1 (en) * 2000-04-03 2002-05-16 Jean-Yves Cras Analytical reporting on top of multidimensional data model US20020087516A1 (en) * 2000-04-03 2002-07-04 Jean-Yves Cras Mapping of an RDBMS schema onto a multidimensional data model US6594672B1 (en) * 2000-06-01 2003-07-15 Hyperion Solutions Corporation Generating multidimensional output using meta-models and meta-outlines US20020035562A1 (en) 2000-06-06 2002-03-21 Keith Roller DataMart US20030120372A1 (en) * 2000-07-18 2003-06-26 Ruth Joseph D. System, method and computer program product for mapping data of multi-database origins US20030114950A1 (en) * 2000-07-18 2003-06-19 Ruth Joseph D. System, method and computer program product for mapping data of multi-database origins US20040133552A1 (en) * 2000-08-01 2004-07-08 David Greenfield System and method for online analytical processing US7152062B1 (en) 2000-11-21 2006-12-19 Actuate Corporation Technique for encapsulating a query definition US20020194196A1 (en) * 2000-12-12 2002-12-19 Weinberg Paul N. Method and apparatus for transforming data US20040039736A1 (en) 2001-03-01 2004-02-26 Lawson Software, Inc. OLAP query generation engine US20020169658A1 (en) 2001-03-08 2002-11-14 Adler Richard M. System and method for modeling and analyzing strategic business decisions US6931418B1 (en) * 2001-03-26 2005-08-16 Steven M. Barnes Method and system for partial-order analysis of multi-dimensional data US20030004938A1 (en) * 2001-05-15 2003-01-02 Lawder Jonathan Keir Method of storing and retrieving multi-dimensional data using the hilbert curve US20020194163A1 (en) * 2001-05-30 2002-12-19 Hopeman Albert A. Methods and apparatus for aggregating sparse data US20070088757A1 (en) 2001-06-01 2007-04-19 Ward Mullins System, method and software for creating, maintaining, navigating or manipulating complex data objects and their data relationships US20030126143A1 (en) 2001-06-12 2003-07-03 Nicholas Roussopoulos Dwarf cube architecture for reducing storage sizes of multidimensional data US20030014417A1 (en) * 2001-06-14 2003-01-16 International Business Machines Corporation Selecting a function for use in detecting an exception in multidimensional data US20030115194A1 (en) 2001-08-01 2003-06-19 Pitts Theodore H. Method and apparatus for processing a query to a multi-dimensional data structure US20030115207A1 (en) * 2001-09-25 2003-06-19 Bowman David M. Hierarchical hybrid OLAP analytics generators US20030126114A1 (en) 2001-12-27 2003-07-03 Tedesco Michael A. Method and apparatus for implementing and using an alternate database engine with existing database engine US20030154443A1 (en) * 2002-02-13 2003-08-14 Ncr Corporation Visual discovery tool US20030184585A1 (en) 2002-03-29 2003-10-02 George Lin Method for dynamically generating a user interface from XML-based documents US20030200191A1 (en) 2002-04-19 2003-10-23 Computer Associates Think, Inc. Viewing multi-dimensional data through hierarchical visualization US20050289119A1 (en) * 2002-06-04 2005-12-29 Weinberg Paul N Method and apparatus for generating and utilizing qualifiers and qualified taxonomy tables US20040015507A1 (en) * 2002-07-19 2004-01-22 Amir Netz System and method for analytically modeling data organized according to related attributes US7340476B2 (en) * 2002-10-18 2008-03-04 International Business Machines Corporation Method for online analytical processing (OLAP) US7299241B2 (en) 2002-11-22 2007-11-20 Accenture Global Services Gmbh Building analytical models with standardized virtual flat files US20090222470A1 (en) * 2002-12-10 2009-09-03 Stephen John Kemp Data model development tool US20040139061A1 (en) * 2003-01-13 2004-07-15 International Business Machines Corporation Method, system, and program for specifying multidimensional calculations for a relational OLAP engine US20040236767A1 (en) * 2003-05-07 2004-11-25 Oracle International Corporation Efficient SQL access to multidimensional data US20050004904A1 (en) * 2003-05-07 2005-01-06 Oracle International Corporation Exposing multidimensional calculations through structured query language US20050010566A1 (en) * 2003-05-27 2005-01-13 David Cushing System and method of multidimensional query results processing US20050060382A1 (en) 2003-09-15 2005-03-17 Alex Spector On-Demand Electronic Documents Processing and Sharing US20050060300A1 (en) * 2003-09-16 2005-03-17 Chris Stolte Computer systems and methods for visualizing data US20070208721A1 (en) * 2003-12-01 2007-09-06 Zaman Kazi A Modeling multidimensional data sources US7660822B1 (en) * 2004-03-31 2010-02-09 Google Inc. Systems and methods for sorting and displaying search results in multiple dimensions US20050262108A1 (en) * 2004-05-07 2005-11-24 Interlace Systems, Inc. Methods and apparatus for facilitating analysis of large data sets US20060004816A1 (en) 2004-06-16 2006-01-05 Martin Diewald Compiling values that relate to aggregate data US20060004833A1 (en) * 2004-06-30 2006-01-05 Vishal Trivedi Method and system for data extraction from a transaction system to an analytics system US20060026189A1 (en) * 2004-07-29 2006-02-02 International Business Machines Corporation Method and system for reconstruction of object model data in a relational database US20060031187A1 (en) 2004-08-04 2006-02-09 Advizor Solutions, Inc. Systems and methods for enterprise-wide visualization of multi-dimensional data US20060036707A1 (en) 2004-08-13 2006-02-16 Pawan Singh Method and apparatus for routing images US20060116975A1 (en) * 2004-11-30 2006-06-01 Michael Gould Automated default dimension selection within a multidimensional enterprise software system US20060116976A1 (en) * 2004-11-30 2006-06-01 Thomas Legault Generation of aggregatable dimension information within a multidimensional enterprise software system US20060206512A1 (en) * 2004-12-02 2006-09-14 Patrick Hanrahan Computer systems and methods for visualizing data with generation of marks US20060136462A1 (en) 2004-12-16 2006-06-22 Campos Marcos M Data-centric automatic data mining US20080320023A1 (en) 2005-02-03 2008-12-25 Fong Joseph S P System and method of translating a relational database into an xml document and vice versa US20060179061A1 (en) 2005-02-07 2006-08-10 D Souza Roy P Multi-dimensional surrogates for data management US20070022093A1 (en) * 2005-03-07 2007-01-25 Nat Wyatt System and method for analyzing and reporting extensible data from multiple sources in multiple formats US20090217147A1 (en) * 2005-03-15 2009-08-27 Hyperion Solutions Corp., A Delaware Corporation Multidimensional data visualization using four or more dimensions US20060262145A1 (en) * 2005-05-18 2006-11-23 Microsoft Corporation System and method for interactively displaying multi-dimensional data US20070027904A1 (en) * 2005-06-24 2007-02-01 George Chow System and method for translating between relational database queries and multidimensional database queries US20070027930A1 (en) 2005-08-01 2007-02-01 Billy Alvarado Universal data aggregation US20070094236A1 (en) * 2005-10-24 2007-04-26 Wolfgang Otter Combining multi-dimensional data sources using database operations US20070162472A1 (en) 2005-12-23 2007-07-12 Seatab Software, Inc. Multi-dimensional data analysis US20070156634A1 (en) * 2005-12-31 2007-07-05 Martin Michael W Multidimensional dynamic clustering (MDDC) US20070250524A1 (en) * 2006-04-19 2007-10-25 Jian Le Method and apparatus for workload and model based materialized query table or view recommendation technique US20100169299A1 (en) 2006-05-17 2010-07-01 Mitretek Systems, Inc. Method and system for information extraction and modeling US7761407B1 (en) * 2006-10-10 2010-07-20 Medallia, Inc. Use of primary and secondary indexes to facilitate aggregation of records of an OLAP data cube US20080172405A1 (en) * 2006-12-05 2008-07-17 Tim Feng Method and system to process multi-dimensional data US20080140696A1 (en) 2006-12-07 2008-06-12 Pantheon Systems, Inc. System and method for analyzing data sources to generate metadata US20080162562A1 (en) * 2007-01-03 2008-07-03 Claria Corporation System for Database Reporting US20080222189A1 (en) * 2007-03-06 2008-09-11 Microsoft Corporation Associating multidimensional data models US20080243778A1 (en) * 2007-03-30 2008-10-02 International Business Machines Corporation Cube faceted data analysis US20080294596A1 (en) * 2007-05-23 2008-11-27 Business Objects, S.A. System and method for processing queries for combined hierarchical dimensions US20090037440A1 (en) * 2007-07-30 2009-02-05 Stefan Will Streaming Hierarchical Clustering US20090193039A1 (en) 2008-01-28 2009-07-30 Apollo Data Technologies, Llc Data driven system for data analysis and data mining US20100057777A1 (en) 2008-08-28 2010-03-04 Eric Williamson Systems and methods for generating multi-population statistical measures using middleware US20100131456A1 (en) 2008-11-26 2010-05-27 Eric Williamson Systems and methods for middleware database hosting dimensional transforms US20100306340A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for object-based modeling using model objects exportable to external modeling tools US20100306272A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for object-based modeling using hierarchical model objects US20100306281A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for extracting database dimensions as data modeling object US20100306255A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for extracting data cell transformable to model object US20100306682A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for generating floating desktop representation of extracted model object US20100306254A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for object-based modeling using composite model object having independently updatable component objects US20100305922A1 (en) 2009-05-29 2010-12-02 Eric Williamson Systems and methods for generating active links between model objects US20110055850A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for generating sets of model objects having data messaging pipes US20110054854A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for generating dimensionally altered model objects US20110055761A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for managing sets of model objects via unified management interface US20110050728A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for generating rapidly rotatable dimensional view of data objects US20110055680A1 (en) 2009-08-31 2011-03-03 Eric Williamson Systems and methods for generating a set of linked rotational views of model objects US20110078199A1 (en) 2009-09-30 2011-03-31 Eric Williamson Systems and methods for the distribution of data in a hierarchical database via placeholder nodes US20110078200A1 (en) 2009-09-30 2011-03-31 Eric Williamson Systems and methods for conditioning the distribution of data in a hierarchical database US20110161378A1 (en) 2009-09-30 2011-06-30 Eric Williamson Systems and methods for automatic propagation of data changes in distribution operations in hierarchical database US20110161282A1 (en) 2009-09-30 2011-06-30 Eric Williamson Systems and methods for distribution of data in a lattice-based database via placeholder nodes US20110161374A1 (en) 2009-09-30 2011-06-30 Eric Williamson Systems and methods for conditioned distribution of data in a lattice-based database using spreading rules US20110131176A1 (en) 2009-11-30 2011-06-02 Eric Williamson Systems and methods for generating iterated distributions of data in a hierarchical database US20110131220A1 (en) 2009-11-30 2011-06-02 Eric Williamson Systems and methods for generating an optimized output range for a data distribution in a hierarchical database US20110158106A1 (en) 2009-12-31 2011-06-30 Eric Williamson Systems and methods for generating a push-up alert of fault conditions in the distribution of data in a hierarchical database\n\nNon-Patent Citations (23)\n\n* Cited by examiner, â Cited by third party Title A new OLAP aggregation based on the AHC technique, Massaoud et al, DOLAP'04 Nov. 12-13, 2004. * ASPFAQ.com, \"What Are the Valid Styles for Converting Datetime to String?,\" (2006) http://database.aspfaq.com/database/what-are-the-valid-styles-for-converting-datetime-to-string.html. E. Pourabbas and A. Shoshani, \"Answering Joint Queries from Multiple Aggregate OLAP Databases\", in Proc. DaWaK, 2003, pp. 24-34. Improving OLAP Performance by Multidimensional Hierarchical CLustering, Markl et al, Proceedings of the 1999 International Symposium on Database Engineering & Applications, pp. 165, 1999. * Interactive hierarchical dimension ordering, spacing and filtering for exploration of high dimension datasets, Yang et al, IEEE symposium on information visualization 2003. * Management of Multidimensional aggregates for Efficient Online Analytical Processing, Albrecht et al, Proceedings of the 1999 International Symposium on Database Engineering & Applications, pp. 156, 1999. * Using OLAP and Multi-dimensional data for decision making, Hasan et al, IEEE 2001. * USPTO, Office Action for U.S. Appl. No. 12/200,194, mailed Dec. 28, 2010. USPTO, Office Action for U.S. Appl. No. 12/200,194, mailed May 8, 2012. USPTO, Office Action for U.S. Appl. No. 12/200,194, mailed May 9, 2011. Williamson, \"Systems and Methods for Generating Interpolation Data Sets Converging to Optimized Results Using Iterative Overlapping Inputs,\" U.S. Appl. No. 13/037,341, filed Feb. 28, 2011. Williamson, \"Systems and Methods for Generating Interpolation Data Template to Normalize Analytic Runs,\" U.S. Appl. No. 13/037,332, filed Feb. 28, 2011. Williamson, \"Systems and Methods for Generating Portable Interpolated Data Using Object-Based Encoding of Interpolated Results,\" U.S. Appl. No. 13/037,322, filed Feb. 28, 2011. Williamson, \"Systems and Methods for Interpolating Conformal Input Sets Based on a Target Output,\" U.S. Appl. No. 12/872,779, filed Aug. 31, 2010. Williamson, \"Systems and Methods for Interpolating Conformal Input Sets Based on a Target Output,\" U.S. Appl. No. 12/951,881, filed Nov. 22, 2010. Williamson, \"Systems and Methods for Tracking Differential Changes in Conformal Data Input Sets,\" U.S. Appl. No. 12/951,937, filed Nov. 22, 2010. Williamson, \"Systems and Methods for Training a Self-Learning Network Using Interpolated Input Sets Based on a Target Output,\" U.S. Appl. No. 12/872,935, filed Aug. 31, 2010. Williamson, \"Systems and Methods for Validating Interpolation Results Using Monte Carlo Simulations on Interpolated Data Inputs,\" U.S. Appl. No. 13/037,344, filed Feb. 28, 2011.\n\nCited By (16)\n\n* Cited by examiner, â Cited by third party Publication number Priority date Publication date Assignee Title US9992090B2 (en) 2014-01-08 2018-06-05 Bank Of America Corporation Data metrics analytics US9547834B2 (en) 2014-01-08 2017-01-17 Bank Of America Corporation Transaction performance monitoring WO2015135067A1 (en) * 2014-03-11 2015-09-17 A4 Innovation Inc. Obtaining produced content from a database US10645090B2 (en) 2014-10-08 2020-05-05 Oracle Financial Services Software Limited Access control for objects having attributes defined against hierarchically organized domains containing fixed number of values US9935964B2 (en) 2014-10-08 2018-04-03 Oracle Financial Services Software Limited Access control for objects having attributes defined against hierarchically organized domains containing fixed number of values US10341459B2 (en) 2015-09-18 2019-07-02 International Business Machines Corporation Personalized content and services based on profile information US11165881B2 (en) 2015-09-18 2021-11-02 International Business Machines Corporation Personalized content and services based on profile information US10223421B2 (en) * 2015-12-30 2019-03-05 Sap Se Virtual Aggregation US10489225B2 (en) 2017-08-10 2019-11-26 Bank Of America Corporation Automatic resource dependency tracking and structure for maintenance of resource fault propagation US11321155B2 (en) 2017-08-10 2022-05-03 Bank Of America Corporation Automatic resource dependency tracking and structure for maintenance of resource fault propagation CN107562946A (en) * 2017-09-26 2018-01-09 åäº¬åå¢ä¿¡æ¯ç§ææéå ¬å¸ A kind of method that concordance list is created in big data system US10938950B2 (en) 2017-11-14 2021-03-02 General Electric Company Hierarchical data exchange management system US11323544B2 (en) * 2017-11-14 2022-05-03 General Electric Company Hierarchical data exchange management system US20220256013A1 (en) * 2017-11-14 2022-08-11 General Electric Company Hierarchical data exchange management system US11683397B2 (en) * 2017-11-14 2023-06-20 General Electric Company Hierarchical data exchange management system US20230275978A1 (en) * 2017-11-14 2023-08-31 General Electric Company Hierarchical data exchange management system\n\nAlso Published As\n\nPublication number Publication date US20100057700A1 (en) 2010-03-04\n\nSimilar Documents\n\nPublication Publication Date Title US8495007B2 (en) 2013-07-23 Systems and methods for hierarchical aggregation of multi-dimensional data sources US8463739B2 (en) 2013-06-11 Systems and methods for generating multi-population statistical measures using middleware US20230084389A1 (en) 2023-03-16 System and method for providing bottom-up aggregation in a multidimensional database environment US11341263B2 (en) 2022-05-24 Efficient data query and utilization through a semantic storage model US9020882B2 (en) 2015-04-28 Database hosting middleware dimensional transforms CN103164507B (en) 2018-04-17 Mixing connection of the row and column database table on primary direction JP5833406B2 (en) 2015-12-16 Data management architecture related to generic data items using references JP4222947B2 (en) 2009-02-12 Method, program, and system for representing multimedia content management objects US20170116313A1 (en) 2017-04-27 System and method for supporting large queries in a multidimensional database environment US20170116311A1 (en) 2017-04-27 System and method for use of automatic slice merge in a multidimensional database environment US9146948B2 (en) 2015-09-29 Hilbert ordering of multidimensional tuples within computing systems US20170116312A1 (en) 2017-04-27 System and method for supporting queries having sub-select constructs in a multidimensional database environment US20090157666A1 (en) 2009-06-18 Method for improving search engine efficiency WO2005057365A2 (en) 2005-06-23 System to automatically regenerate software code US11216516B2 (en) 2022-01-04 Method and system for scalable search using microservice and cloud based search with records indexes CN104750776A (en) 2015-07-01 Accessing information content in a database platform using metadata CN112765117A (en) 2021-05-07 Industrial internet identification analysis system based on micro-service architecture US9600597B2 (en) 2017-03-21 Processing structured documents stored in a database CN111611448A (en) 2020-09-01 Knowledge-driven joint big data query and analysis platform US10628421B2 (en) 2020-04-21 Managing a single database management system de Souza Baptista et al. 2014 NoSQL geographic databases: an overview WO2014144033A1 (en) 2014-09-18 Multiple schema repository and modular data procedures US8250024B2 (en) 2012-08-21 Search relevance in business intelligence systems through networked ranking US11556398B2 (en) 2023-01-17 Centralized data management Staring 2020 CityJSON in combination with MongoDB, PostgreSQL and GraphQL\n\nLegal Events\n\nDate Code Title Description 2008-08-28 AS Assignment\n\nOwner name: RED HAT, INC.,NORTH CAROLINA\n\nFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:WILLIAMSON, ERIC;REEL/FRAME:021457/0509\n\nEffective date: 20080827\n\nOwner name: RED HAT, INC., NORTH CAROLINA\n\nFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:WILLIAMSON, ERIC;REEL/FRAME:021457/0509\n\nEffective date: 20080827\n\n2013-07-03 STCF Information on status: patent grant\n\nFree format text: PATENTED CASE\n\n2017-01-12 FPAY Fee payment\n\nYear of fee payment: 4\n\n2020-09-16 MAFP Maintenance fee payment\n\nFree format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY\n\nYear of fee payment: 8"
    }
}