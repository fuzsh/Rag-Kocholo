{
    "id": "dbpedia_2919_2",
    "rank": 19,
    "data": {
        "url": "https://ieeexplore.ieee.org/document/9891727",
        "read_more_link": "",
        "language": "en",
        "title": "Flight Software Development for a CubeSat Application",
        "top_image": "https://ieeexplore.ieee.org/assets/img/ieee_logo_smedia_200X200.png",
        "meta_img": "https://ieeexplore.ieee.org/assets/img/ieee_logo_smedia_200X200.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Yassine Bouslimani",
            "Mohsen Ghribi"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "This article presents a development of a CubeSat mission software running on an STM32-based on-board computer (OBC). This was conducted under the Canadian CubeSat Project, initiated by the Canadian Space Agency in 2018 to support the development of 15 CubeSats across Canada. The proposed mission software has a multilayered architecture and is divided into five layers from a low layer dedicated to the peripherals to the top layer dedicated to the Mission Applications. The CubeSat protocol (CSP) is used at the communication layer for easing connectivity between subsystems and to communicate with the ground segment. The mission software running on the OBC is built to meet many requirements defined for this satellite, such as version control, classifications, margins, etc. The CubeSat will be able to accomplish two scientific missions related to the study of space weather once the satellite is put into orbit from the International Space Station. An overview of the software running on the OBC is presented, written in C Language, and includes the implementation of the CSP. FreeRTOS used as an operating system for the OBC is also presented. A Command Line Interface was designed for testing purposes to ensure software efficiency and some results are discussed in this article. The flight software consists of three main tasks and subtasks. Of the 1024 kB of flash memory, only 240 kB was used which represents less than 20% of the total memory. The CPU load is 34% for normal, manual, and maintenance modes and 16% for failure modes.",
        "meta_lang": "",
        "meta_favicon": "/assets/img/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://ieeexplore.ieee.org/document/9891727",
        "text": ""
    }
}