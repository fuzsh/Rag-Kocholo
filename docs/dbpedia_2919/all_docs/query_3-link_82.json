{
    "id": "dbpedia_2919_3",
    "rank": 82,
    "data": {
        "url": "https://community.libre.space/t/spacecan-reliable-and-space-ready-can-bus-for-cubesats/1086",
        "read_more_link": "",
        "language": "en",
        "title": "SpaceCAN - Reliable and space-ready CAN Bus for CubeSats",
        "top_image": "https://community.libre.space/uploads/default/original/2X/1/1ff2602fc9c0a2ed3825df04d595d22029d966a4.png",
        "meta_img": "https://community.libre.space/uploads/default/original/2X/1/1ff2602fc9c0a2ed3825df04d595d22029d966a4.png",
        "images": [
            "https://sdfestaticassets-eu-west-1.sciencedirectassets.com/shared-assets/13/images/favSD.ico",
            "https://ars.els-cdn.com/content/image/1-s2.0-S0273117718X00234-cov150h.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "canbus",
            "ecss"
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2017-06-14T21:11:36+00:00",
        "summary": "",
        "meta_description": "There is a fairly recent standard published by ECSS that specifies the use of CAN bus and CANopen protocol for space applications (ECSS-E-ST-50-15C). It provides a reliable and fast bus that is feasible to be used in Cub&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://community.libre.space/uploads/default/optimized/2X/4/4bddea765c6fb46416a678fe6b703b80e9cd29c9_2_32x32.png",
        "meta_site_name": "Libre Space Community",
        "canonical_link": "https://community.libre.space/t/spacecan-reliable-and-space-ready-can-bus-for-cubesats/1086",
        "text": "There is a fairly recent standard published by ECSS that specifies the use of CAN bus and CANopen protocol for space applications (ECSS-E-ST-50-15C). It provides a reliable and fast bus that is feasible to be used in CubeSats, and makes a much better alternative to the commonly used I2C bus.\n\nThere are currently Micropython and C prototype implementation being developed under the LibreCube framework. For example, the Micropython implementation can be found here: https://gitlab.com/librecube/WP-1005.\n\nPlease feel free to provide your comments or feedback to this.\n\nNote that we are revising the ECSS-CAN implementation into “SpaceCAN”. That one uses ECSS concept for redundancy management but does not include the bulky and complicated Object Dictionary. Instead, it uses the ISO-TP protocol for transfering larger messages between nodes.\n\nFind the documentation here: https://vault.dediserve.com/s/r2yM6NWfQLa9Dtj\n\nAnd the micropython implementation here: https://gitlab.com/librecube/prototypes/micropython-space-can"
    }
}