{
    "id": "dbpedia_2919_1",
    "rank": 36,
    "data": {
        "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/",
        "read_more_link": "",
        "language": "en",
        "title": "Review and Evaluation of MAC Protocols for Satellite IoT Systems Using Nanosatellites",
        "top_image": "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/pmc-card-share.jpg?_=0",
        "meta_img": "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/pmc-card-share.jpg?_=0",
        "images": [
            "https://www.ncbi.nlm.nih.gov/coreutils/uswds/img/favicons/favicon-57.png",
            "https://www.ncbi.nlm.nih.gov/coreutils/uswds/img/icon-dot-gov.svg",
            "https://www.ncbi.nlm.nih.gov/coreutils/uswds/img/icon-https.svg",
            "https://www.ncbi.nlm.nih.gov/coreutils/nwds/img/logos/AgencyLogo.svg",
            "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/logo-sensors.png",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g001.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g002.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g003.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g004.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g005.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g006.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g007.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g008.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g009.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g010.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g011.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g012.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g013.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/bin/sensors-19-01947-g014.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Tomás Ferrer",
            "Sandra Céspedes",
            "Alex Becerra"
        ],
        "publish_date": "2019-04-27T00:00:00",
        "summary": "",
        "meta_description": "Extending the internet of things (IoT) networks to remote areas under extreme conditions or for serving sometimes unpredictable mobile applications has increased the need for satellite technology to provide effective connectivity. However, existent medium ...",
        "meta_lang": "en",
        "meta_favicon": "https://www.ncbi.nlm.nih.gov/coreutils/nwds/img/favicons/favicon.ico",
        "meta_site_name": "PubMed Central (PMC)",
        "canonical_link": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6515444/",
        "text": "Sensors (Basel). 2019 Apr; 19(8): 1947.\n\nPMCID: PMC6515444\n\nPMID: 31027250\n\nReview and Evaluation of MAC Protocols for Satellite IoT Systems Using Nanosatellites\n\n,1 ,1,2,* and 3\n\nTomás Ferrer\n\n1Department of Electrical Engineering, Universidad de Chile, Av. Tupper 2007, Santiago 8370451, Chile; lc.elihcu.gni@rerref.samot\n\nFind articles by Tomás Ferrer\n\nSandra Céspedes\n\n1Department of Electrical Engineering, Universidad de Chile, Av. Tupper 2007, Santiago 8370451, Chile; lc.elihcu.gni@rerref.samot\n\n2NIC Chile Research Labs, Universidad de Chile, Santiago 8370403, Chile\n\nFind articles by Sandra Céspedes\n\nAlex Becerra\n\n3Aurora Space, Santiago 7750053, Chile; lc.ecapsarorua@arreceba\n\nFind articles by Alex Becerra\n\n1Department of Electrical Engineering, Universidad de Chile, Av. Tupper 2007, Santiago 8370451, Chile; lc.elihcu.gni@rerref.samot\n\n2NIC Chile Research Labs, Universidad de Chile, Santiago 8370403, Chile\n\n3Aurora Space, Santiago 7750053, Chile; lc.ecapsarorua@arreceba\n\nCopyright © 2019 by the authors.\n\nLicensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n\nAbstract\n\nExtending the internet of things (IoT) networks to remote areas under extreme conditions or for serving sometimes unpredictable mobile applications has increased the need for satellite technology to provide effective connectivity. However, existent medium access control (MAC) protocols deployed in commercial satellite networks were not designed to offer scalable solutions for the increasing number of devices predicted for IoT in the near future, nor do they consider other specific IoT characteristics. In particular, CubeSats—a low-cost solution for space technology—have the potential to become a wireless access network for the IoT, if additional requirements, including simplicity and low demands in processing, storage, and energy consumption are incorporated into MAC protocol design for satellite IoT systems. Here we review MAC protocols employed or proposed for satellite systems and evaluate their performance considering the IoT scenario along with the trend of using CubeSats for IoT connectivity. Criteria include channel load, throughput, energy efficiency, and complexity. We have found that Aloha-based protocols and interference cancellation-based protocols stand out on some of the performance metrics. However, the tradeoffs among communications performance, energy consumption, and complexity require improvements in future designs, for which we identify specific challenges and open research areas for MAC protocols deployed with next low-cost nanosatellite IoT systems.\n\nKeywords: CubeSats, internet of things, medium access control, nanosatellites, sensor networks, wireless access networks\n\n1. Introduction\n\nFrom the beginnings of space exploration, satellites were large objects that took years to construct and cost billions of dollars for a single unit. With more advanced and smaller technologies, cheaper spacecraft (stand alone satellites and constellations of satellites) have evolved for diverse applications, telecommunication applications being most prominent. Commercial satellite companies like Iridium, Intelsat, O3b, and others offer a portfolio of products, including voice services, broadband, and sensor data collection, with extensive coverage of the Earth’s surface. For example, shows the approximate coverage of just one geostationary satellite located at a longitude of 91∘ W.\n\nWith the internet of things (IoT), the paradigm that promises to revolutionize our world with the collection of enormous quantities of data, the connectivity demands are being increased around the globe. It is estimated that the IoT communications market will have an impact in the economy close to three to 11 trillion dollars per year in 2025 [1]. Nonetheless, terrestrial technologies do not fully cover the Earth’s surface yet. It is in such a scenario that satellite technology seems to offer the critical solution to the problem of global connectivity. However, traditional satellites are expensive—Iridium’s NEXT constellation of 75 satellites costs three billion dollars [2]—and thus novel, cheaper satellite solutions have become the focus of growing interest.\n\nWith the need for more coverage of the IoT networks and the search for cheaper solutions, nanosatellites may be the best answer for the global connectivity that the IoT demands. The nanosatellite standard, the CubeSat with a volume of less than one liter and a weight of less than one kilogram, also offers access to space and satellite development for countries that previously had no experience in space sciences. Nevertheless, the performance of such a solution will largely depend on the low-level protocols selected for the network architecture.\n\nAt the core of network architecture are the medium access control (MAC) protocols. Given the broadcast nature of channels in satellite communications, a MAC protocol ensures the proper coordination of frame transmissions, together with the logic for retransmissions and the recovery of data in case of collisions. In the past, there have been comprehensive reviews related to MAC protocols for satellite technology and also in the context of IoT. Peyravi [3] compiled a thorough revision and evaluation of MAC protocols for satellite communications. Although the study includes an evaluation with objective metrics such as throughput, buffer occupancy, scalability, stability, and reconfigurability, these metrics have been defined in the context of a constellation of geostationary satellites, which highly differ from the network conditions provided by smaller satellites deployed in lower orbits. Other similar surveys that focus on resource allocation and MAC protocol comparisons in conventional satellite systems are presented in Gaudenzi et al. [4] and Herrero et al. [5].\n\nA more recent survey by De Sanctis et al. [6] makes the case of applicability of satellite communications for IoT and machine to machine (M2M) systems, also mentioning the potential of employing CubeSats within this context. Although the authors do provide a review of MAC protocols, no quantitative or comparative evaluation is provided for the MAC protocols reviewed in the work. Other works discussing the applicability of (small/nano) satellites in broadband internet access, IoT, and M2M communications can be found in [6,7,8,9,10]. The mentioned works, however, do not cover specific evaluations related to MAC protocols. Reviews devoted to the IoT, the enabling technologies, and services are also found in [11,12,13,14]. The focus of such works is more general except for the revision of MAC protocols for IoT presented by Oliveira et al. [14]; nevertheless, besides the fact that the mentioned works do not include a quantitative performance evaluation and comparison, a good part only discuss terrestrial IoT wireless technologies; hence, the discussion is oriented to different channel and network conditions from the ones addressed in this survey.\n\nThe contributions of this paper are threefold: (1) we review MAC protocols employed or proposed for satellite systems from a novel viewpoint that considers the restricted characteristics of CubeSat technology for wireless communications together with the particular requirements of IoT services and applications; (2) we provide a comparative quantitative and qualitative evaluation of the current protocols with metrics including communications performance (i.e., throughput, channel load, packet loss), dependency of network topology, implementation complexity, and energy consumption; and (3) we discuss the open research and implementation challenges to address by the next generation of nanosatellite networks for IoT environments.\n\nThe remainder of this paper is organized into seven sections. In Section 2 we present the fundamental aspects of satellites, space communication systems, and nanosatellites technology. It also includes a discussion about the IoT requirements. In Section 3 we introduce the specifics about the proposed IoT scenario served by a constellation of CubeSats. In Section 4 we provide the backgrounds on MAC layer protocols and introduce the metrics for evaluation. Section 5 presents a detailed review of MAC protocols designed and developed for satellite systems and other IoT-related technologies. It also includes a performance evaluation with objective metrics relevant to the IoT study scenario. In Section 6 we discuss the advantages and shortcomings of the existent protocols and identify the open challenges. Section 7 presents the final remarks.\n\n2. Overview of Space and Communications Systems\n\n2.1. Satellites Evolution\n\nIn the 1950s, the Soviet Union launched Sputnik I, the first artificial satellite that orbited the Earth. This milestone marked the beginning of a competition between two powerful countries that had, as one of its consequences, an accelerated technological development in aerospace sciences. Satellites created in the decades after the beginning of this competition were designed for very specific missions, and each development had its own subsystems—energy, command and data handling, attitude control, etc.—which allowed the particular requirements of a given project to be met. Such a design methodology involved an extremely expensive process due to the constant iterations necessary to create a new device, and the difficulties in reusing previous versions and designs.\n\nOne early shift occurred when, due to the use of modular systems, the main bus was designed to be flexible and reconfigurable according to the goal of each mission. As a result of reducing the costs in developing one unit, constellations of these spacecraft began to be feasibly designed and used by those countries and companies that could afford the still enormous cost of development. Depending on the configuration, these formations could increase the instantaneous global coverage and reducing revisiting times, among others benefits.\n\nA large number of satellites now dot the skies for diverse applications such as navigation, imaging, meteorology, and communications. Some of the most significant applications are the following:\n\nPositioning systems: constellation of satellites located in medium height orbits (approximately 20,000 km) that make it possible to determine the position of an object on the Earth’s surface in a given coordinate system. There are several systems belonging to different countries, namely: GPS (USA—24 satellites), global orbiting navigation satellite system (GLONASS) (Russia—24 operational satellites), GALILEO (European Union—24 satellites), BEIDOU (China—17 operational satellites).\n\nEarth observation: Several satellites with a wide variety of cameras in different spectral bands have been sent to space. Defense and security, cartography, and meteorology are some of the disciplines that have benefited from these types of missions.\n\nCommunications: Satellite systems that provide voice services, satellite television service, and narrowband/broadband connectivity through standalone satellites or constellations.\n\nThe Union of Concerned Scientists (UCS) maintains a count of operational satellites orbiting the Earth. In we illustrate the distribution, according to the country of origin and the type of orbit, for the 1957 active satellites reported up to 30th November 2018 [15].\n\n2.2. Communication Satellite Systems\n\nOne of the areas in which satellites have been relevant is in communication networks. Due to the innate capacity of these spacecraft to cover the whole terrestrial surface, satellite systems are able to provide connectivity to remote or isolated areas that by other means are almost impossible to connect.\n\nThere are three main types of architecture used in satellite communication systems: store and forward, bent-pipe, and crosslink [8]. In the first, the satellite retrieves data from one point, stores it for some time, and then downloads it to the first ground station it establishes a connection with. In the second case, the satellite acts as a relay, collecting data and retransmitting it to another point on Earth. In the crosslink architecture, the data is transmitted immediately through a satellite network via inter-satellite links.\n\nSatellite communication systems can be deployed in different orbits, offering a different set of services according to the channel/network conditions derived from the characteristics of the orbit of deployment. The types of orbits are the following:\n\nGeosynchronous equatorial orbit (GEO): This corresponds to an orbit whose rotation period is the same as the Earth’s. Consequently, the satellite seems to “stand still” to an observer at one point on the planet. To achieve this effect, the satellites are placed at a distance of approximately 35,786 km from Earth. Given such a long distance, the communication delays are considerable, in the order of 120 ms, in the satellite-ground direction or vice versa, for the best scenario; also, the transmission power required to establish effective links is high. Nevertheless, these systems have an excellent and broad coverage, reaching a 30% of the Earth’s surface. The placement process of a satellite into this orbit is an expensive task, and in order to remain at that position, the crew on the ground must perform orbital maneuvers from time to time.\n\nLow Earth orbit (LEO): Most of the satellites in space today are placed in this type of orbit. Its height ranges from 300–2000 km and, therefore, the delay in communications is low, in the order of tens of milliseconds for the worst case. The transmission power required to establish the links from this orbit are as low as hundreds of milliwatts [16]. Satellites in this orbit have low temporal and spatial coverage. Because of the speed—about 7.5 km per second for a satellite in a 500 km orbit—the Doppler effect has to be considered in these systems.\n\nMedium Earth orbit (MEO): Heights are between the low and geostationary orbits—2000–35,786 km. One example system, the O3b network, is placed at a height of 8000 km and has a theoretical minimum delay of 26 ms satellite-ground, or vice versa. All global navigation satellite systems (GNSS) constellations are placed in this orbit.\n\nHighly elliptical orbit (HEO): Orbits with a large apogee and a small perigee. The most famous of this kind is the Molniya orbit, which offers large coverage for high latitudes. Another example is the Tundra orbit. In Molniya, the apogee is greater than a geostationary—about 40,000 km. Satellites in this particular orbit have an approximate period of 12 h. The Soviet Union was the first country to use it to provide communication services throughout its territory and also to obtain meteorological images.\n\nThe classical services provided by satellite communication systems are the following:\n\nBroadband communications: The commercial satellite networks providing this service offer connectivity with broadband data rates. For example, the new Iridium’s NEXT constellation offers connectivity at 1.5 Mbps [17], whereas the Inmarsat’s BGAN HDR offers connections at 800 kbps [18]. Generally, stations on the ground require a large antenna along with a high transmission power to establish effective links. Satellites serving broadband communications usually operate in the Ka, Ku, L, and C bands.\n\nVoice services: Using small devices such as satellite telephones, these satellite systems offer voice connectivity on almost any part of the planet.\n\nSignaling services: In this area, some of the highlight services are the reception of automatic identification system (AIS) and automatic dependent surveillance broadcast (ADS-B) signals, which can track the path of vessels and aircraft, respectively.\n\nSensor data collection: These satellite systems offer services at low data transfer rates, which allow data to be retrieved from small sensors placed on the ground.\n\nprovides a list of some of the commercial constellations providing communication services in different orbits.\n\nTable 1\n\nCompanyNumber of SatellitesOrbitServicesInmarsat13GEOBroadbandViasat4GEOBroadbandIntelsat52GEOBroadbandO3b16MEOBroadbandIridium66LEOVoice, broadbandGlobalstar24LEOVoice, broadband\n\n2.3. CubeSats\n\nTraditionally, most of the projects for designing and building satellites have been excessively expensive. They involved complex designs and, consequently, long development time spans. However, starting in the 1980s, a new paradigm was established that significantly reduced the size of some satellites, leading to the appearance of microsatellites and, in the 2000s, the creation of nanosatellites or CubeSats: aircraft whose weight is equal to or less than one kilogram.\n\nThe CubeSat standard was created in 1999 at the California Polytechnic State University in conjunction with the Stanford University’s Space Systems Development Lab. The development of this standard aimed at improving access to space by providing opportunities for satellite development, design, and construction to institutions that could not do so with the classical paradigm. shows the number of Cubesats launched and operational to date.\n\nThe basic design of a CubeSat consists of a 10-cm cube—called 1U—which must contain the primary subsystems for the operation: an onboard computer, batteries, transmitters and receivers for communication, and attitude determination and control system (ADCS), among others. The cubic shape and volume defined for this new standard considerably reduce launching costs, but, at the same time, incorporate restrictions regarding availability of computational resources, energy, and volume, among others.\n\nInitially, the development of nanosatellites was intended to test components and study their behavior in the space environment. Nowadays, applications have spread widely with projects led by universities, governments, and commercial entities. Moreover, and of interest to the authors, this technology represents an excellent opportunity for developing countries to exploit space resources in addition to providing a tool to democratize the use of space [20].\n\nIn South America, for example, several countries have taken advantage of nanosatellite technology to promote educational initiatives within universities, including, the Libertad-1 in Colombia (Sergio Arboleda University) [21], PUCPSAT in Peru (Catholic University of Peru) [22], SUCHAI-1 in Chile (University of Chile) [20], to mention just a few. In the commercial field, new companies have appeared in the market for developing and selling CubeSat parts and pieces; other companies make use of CubeSats for applications such as satellite imaging collection. Government agencies, such as NASA and ESA, developed nanosatellite-related missions. One of the most notable examples is the experimental use of two CubeSats—Mars Cube One (MarCO) A and B—as communication relays for the InSight-1 probe that landed on Mars in November 2018.\n\n2.4. IoT and M2M Requirements\n\nCisco forecasts that by the year 2020 the number of devices connected to the internet will exceed 50 billion [23], an increase that raises a connectivity challenge for these new massive networks. It is in this field that the capabilities of the new low-cost nanosatellite networks could be instrumental in achieving a global connectivity, as demanded by the fifth generation networks.\n\nThe IoT and machine-to-machine networks are characterized by their intention to meet one or more of the following requirements:\n\nEfficient performance against explosive traffics\n\nLow data rates in terminals\n\nEnergy efficiency\n\nLow cost terminals\n\nMobility and scalability\n\nMinimization in the use of spectrum\n\nMinimum signaling\n\nData security\n\nData integrity\n\nReliability\n\nRobustness\n\nFlexibility\n\nIn the case of terrestrial wireless access networks, various solutions have been developed to meet the above requirements. For low consumption sensor arrays deployed across extensive areas, technologies such as LoRaWAN [24] and Sigfox [25] are available; for sensors and actuators networks deployed in urban environments, there are Wi-Sun [26] and NB-IoT [27], to mention some of the available technologies. There are also autonomous sensor networks interconnected to provide solutions to specific applications involving short-range technologies, such as IEEE 802.15.4 [28]. Despite the advances with the introduction of these new technologies, there are scenarios for which existing networks do not offer feasible solutions. Remote places without connectivity still exist; also, some monitoring applications in isolated places require devices with high and unpredictable mobility to collect information on-the-move (e.g., monitoring of wild animals in areas of difficult access). Considering the scenarios mentioned above, microsatellites and CubeSats appear as viable alternatives to cover the gap in providing fully connected global communications networks for the IoT [6,10]. An example scenario of a CubeSat providing IoT connectivity is illustrated in .\n\nOne of the challenges of these new massive networks is to enable the many terminals to share a physical resource—the broadcast communications channel—in an efficient and orderly manner. Such a challenge would necessarily make use of the medium access control layer, which corresponds to a sub-layer of the link layer of the open system interconnection (OSI) model and is responsible for coordinating frame transmissions in broadcast links. The specific MAC protocol used for IoT applications will need to fulfil a number of requirements including increased average throughput, to meet a minimum level of fairness as well as to comply with the resources, requirements, and limitations of the access technology in use. Another critical aspect to consider in the choice of a MAC protocol is the network topology and how much knowledge the nodes have or need about that topology.\n\nTo examine the fulfillment of the IoT and M2M networks requirements, from a MAC layer perspective in the case of this study, together with the restrictions imposed by the capabilities of the CubeSats, will shed light about the viability to provide IoT connectivity using nanosatellites. The reviews and discussion presented in the coming sections address all of the IoT and M2M requirements listed above, except the ones related to data security and data integrity. Whilst security aspects are of paramount importance in the IoT ecosystem, we direct the interested reader to specialized works on this subject discussing security threats and mitigations for a variety of IoT technologies and architectures [29,30,31,32] and specifically for satellite communications [33,34,35].\n\n3. IoT Scenario of Study\n\nIn order to exploit the full capabilities of the IoT, connectivity is a major issue to be solved in the task of recovering the amount of data generated by the—expected—billions of sensors forecasted to be deployed in coming years. Although some existent IoT technologies, like LoRa and SigFox, claim to have large coverage—40 and 20 km in rural environments, respectively [36]—they are not even close to the coverage that satellite systems can provide. Nevertheless, satellite connectivity is still considered very expensive and poor in terms of energy efficiency. It is in this context that researchers consider that the CubeSat standard could be a feasible solution to mitigate the above mentioned disadvantages of traditional satellite networks, lowering the costs of satellite systems and making it a viable alternative to current wireless technologies for IoT connectivity.\n\nIn this context, the scenario to be considered in this review corresponds to a CubeSat constellation, with no inter-satellite connectivity, whose main purpose is retrieving small amounts of data from sensors placed on the ground at a low data rate. The constellation will be deployed in several orbital planes belonging to the Low Earth orbit; each orbit with a height ranging between 500–600 km and with an inclination close to 97∘. Each nanosatellite from the constellation will face the same problem: as it orbits around the planet, it will have to recover data from a network on Earth whose number of nodes and geographic distribution is unknown and (possibly) changing continuously. Analyzing the case for one satellite—the master—and several ground sensors—the slaves—will be representative of the problem to be faced by the complete fleet.\n\nThe satellite communication system uses the 400 MHz band, which has low propagation losses compared with the typical bands employed by commercial companies offering satellite broadband services. Such frequencies are in the range of the amateur frequency band used and proven to work by most of the CubeSat projects deployed to date [16]. The communications are half-duplex and have an expected maximum data transmission rate of 100 kbps, which is similar to the rate offered by commercial developments of transceivers for nanosatellites [37]. It is assumed that the antennas in use, as well as the transmission power and the receivers’ sensitivity, are adequate to establish effective data links for most nodes under the coverage area of the nanosatellite. However, it is expected that the furthest nodes from the nanosatellite are less likely to generate a correct link due to the greater distances to be covered.\n\nAs mentioned above, the sensors are distributed randomly in any geographical area on Earth. A sensor node is not aware of the network topology, and the spacecraft does not know in advance how many devices needs to serve in an area of coverage. Each sensor generates a quantity of data independent of the others. It is also assumed there is no temporal synchronization among the sensors nodes, nor between the sensor nodes and the nanosatellite.\n\n4. Background on MAC Protocols\n\nMAC layer groups a set of protocols and mechanisms in order to distribute the resources for the nodes to make an effective (and efficient) use of the communications channel. The resources are typically distributed in terms of time assignment, frequency assignment or code assignment. In the particular case of broadcast links, a MAC protocol is in charge of coordinating the frame transmission.\n\nEach MAC protocol is designed to cover different requirements, and its performance can be quantified with different metrics. In some cases, the priority is set to the performance concerning data transmission rate, for which the normalized offered load and the normalized throughput are measured. Other priorities may include measurements of delays in sending data or the packet loss ratio (PLR). In the particular case of IoT applications, there may be limitations regarding processing capabilities, available storage, hardware complexity, and energy consumption.\n\nIn this section, the authors provide a set of metrics that can quantify the fulfillment of the different requirements objectively. We also present the traditional categorization employed to classify the existent MAC protocols for broadcast channels.\n\n4.1. Evaluation Metrics\n\n4.1.1. Normalized Offered Load (C)\n\nThe normalized offered load (C) is the quotient between all the data injected into the network and the maximum data that could be sent at the transmission rate of the link. The latter corresponds to the product of the transmission rate and the total transmission time. The normalized offered load is calculated according to the following formula:\n\nC=∑DiTx·tt,\n\n(1)\n\nwhere Di is the data sent to the satellite by sensor i, Tx is the link transmission rate, and tt is the total transmission time.\n\n4.1.2. Normalized Throughput (S)\n\nThe normalized throughput is the quotient between the data received by the satellite in a given time and all the data that could be sent continuously at the transmission rate of the link. It can be interpreted as how effective is the use of the channel. It is always true that S≤C. The normalized throughput is calculated according to the following equation:\n\nS=DrTx·t,\n\n(2)\n\nwhere Dr is the amount of data received by the satellite, Tx is the link transmission rate, and t is an arbitrary time.\n\n4.1.3. Packet Loss Ratio (PLR)\n\nPLR corresponds to the proportion of data lost or received with errors due to miscoordinations of frame transmissions, and that cannot be recovered over the total amount of data sent. The PLR is calculated as follows:\n\nPLR=PlPs,\n\n(3)\n\nwhere Pl is the number of lost packets and Ps is the number of packets sent. This ratio turns out to be important when energy efficiency is required, since a high PLR may trigger a high number of retransmissions when implementing a reliable link layer, which may mean more waste of energy. In general, the channel performance is analyzed by examining the supported channel load for a target PLR, which is commonly considered on the order of 10−3 in the literature. In some cases, the normalized load achieved with a target PLR=10−3 is very low, making it necessary to consider worse PLR values in the analysis, e.g., PLR=10−2.\n\nThe relation among the three metrics presented above is described by the following equation:\n\nS=C(1−PLR).\n\n(4)\n\n4.1.4. Energy Consumption\n\nFrom the point of view of MAC protocols, energy consumption is directly affected by the length of time in which data is being sent and received; to a lesser degree, energy consumption is also affected by the amount of processing required by the protocol. To evaluate the energy consumption, the length of time the transceiver is in transmission, reception, and idle modes should be compared. The consumption on each state depends specifically on the model of transmitter/receiver that is being used and the chosen MAC protocol. For example, in SigFox, the current consumption is 11 mA in reception mode and 125 mA in transmission mode [38]. The peak current consumption is about 32 mA and a range from 120 mA to 300 mA, in the cases of LoRa and NB-IoT, respectively [39].\n\nIn general scenarios, the main energy limitation is found in the terminal nodes, since in most cases the receiving station has a virtually infinite energy source (e.g., a base station in a cellular network, a WiFi access point, etc.). In our study scenario, the case is different since CubeSats may also have energy limitations. Nevertheless, it is expected that energy limitation in the sensor nodes will be considerably higher than in the spacecraft.\n\n4.1.5. Complexity of Implementation\n\nIn the context of CubeSats and low-cost satellite solutions, the complexity of implementation turns out to be a relevant factor. For this reason, aspects such as the need of high processing availability, the presence of very specialized hardware, and large amounts of required storage, should be considered as directly impacting the complexity of a given MAC protocol.\n\nUsually, on-board computers (OBC) employed on CubeSats are microcontrollers such as the Microchip PIC24 or the Texas Instruments MSP430, which are very limited in terms of computational resources. Newer OBCs using the ARM Cortex family or ATMEL devices are already available in the market for nanosatellites, but they still are in the category of modest processors.\n\n4.2. MAC Protocols Categories\n\nA brief categorization of the MAC protocols is provided as follows [3]:\n\nFixed Assignment: Protocols in this category are characterized by assigning a limited resource equitably and fixedly between different interlocutors. The resource can be a frequency channel, a time interval or a code, deriving in the well-known mechanisms frequency division multiple access (FDMA), time division multiple access (TDMA), and code division multiple access (CDMA). These protocols are characterized by being easy to implement, as well as being efficient in link usage when they occupy all or most of their resources. However, protocols following a fixed assignment are not very flexible to changes in data rates, nor are they tolerant to variations in the number of stations since they require a coordinated allocation among all the stations involved.\n\nRandom Access: These protocols are characterized by having a non-fixed number of users that, without prior coordination, make use of the same channel (i.e., contention-based protocols). Since the allocation of resources is random, more than one device may win the right to use the channel at the same time, causing frame collisions. Therefore, protocols in this category cannot guarantee the successful arrival of frames. Depending on the scenario, these protocols may waste system capacity in failed transmissions (and retransmissions). However, they have a fundamental role in networks whose previous characteristics (number of nodes, nature of traffic, etc.) are not known in advance.\n\nOn-demand: These protocols are designed for scenarios in which the terminals require sending an unequal and variable amount of data; in that case, on-demand protocols can vary the allocation of resources depending on the nodes requirements. For example, a TDMA-based protocol may assign additional time-slots to nodes with higher requirements regarding data rate. To manage the variable assignment of resources, these protocols usually require extra control signaling, such as the incorporation of the packet generation rate of each terminal as additional control information in every message.\n\nAdaptive: These correspond to protocols designed to manage variable network conditions. These protocols are intended to change the MAC logic dynamically. For example, when communication is carried out among a few terminals, the MAC employs a random access scheme; conversely, when the number of devices increases, it uses a fixed allocation scheme.\n\nReservation: The goal of these protocols is to achieve a collision-free allocation of resources. A typical way to achieve the collision-free scheme is the use of a subchannel dedicated to the coordination of access for each station, in such a way that only one station transmits at a given time. In that subchannel, the devices may rotate a testimony (i.e., a token) that indicates who has the right to transmit on the channel. Most of these protocols make use of TDMA or variations of Aloha to assign the token.\n\nThe last three categories are, in a general way, hybrids of the first two. This is mainly because the network characteristics—number of nodes, data generation rates, network explosiveness, etc.—have a nature that is essentially either random or deterministic. In this way, the dominant categories that match the network characteristics are either random access or fixed assignment protocols.\n\nIn this work, the MAC protocols selected for review corresponded mainly to random access and its derivations. These schemes were selected because, in the study scenario, it is infeasible to predict the state of channel congestion at all times, which and how many nodes are within nanosatellite coverage, and the amount of data each node wants to transmit.\n\n5. MAC Protocols for Satellite IoT and M2M\n\nThe early satellite solutions traditionally employed protocols mainly based on fixed assignment (e.g., CDMA, FDMA, and TDMA). In some cases, the protocol was combined with a random access scheme to perform the adaptive assignment according to the demand of the nodes. An example of an early protocol is the demand assignment multiple access [40]. Nonetheless, as mentioned before, considering the nature of our study scenario, protocols in the random access category are more relevant and suitable for the comparative evaluation.\n\nThe protocols selected in this section included several descendants of the well-known Aloha protocol, since such derivations are present in current satellite systems and modern IoT technologies such as LoRa and Sigfox. The selection also included other significant—and more modern—random access protocols that were considered suitable for the IoT scenario described in Section 3, all applicable to satellite environments and other IoT technologies. Such protocols make use of advanced techniques like interference cancellation, and adaptiveness, among others.\n\n5.1. Aloha-Based Protocols\n\nThe most representative random access protocol—and the inspiration for many other MAC protocols—is Aloha, developed in 1970. Although this protocol is quite old and simple, in current IoT developments Aloha plays a fundamental role. For example, leading IoT technologies that use variations of this protocol are LoRa and SigFox. Furthermore, there are several applications and modifications to Aloha reported for satellite environments in the literature. Some of them can be found in [41,42,43,44] for the interested reader.\n\nIn Pure Aloha, nodes send data when they have data to send, hoping that a collision does not occur. When the reception of a packet is successful, the receiver sends an acknowledgement (ACK); otherwise, nodes retransmit the same packet after a random time [45,46]. The performance of this protocol is quite modest. It achieves a maximum normalized throughput of S=0.18 when C=0.5. In terms of packet loss rate, it achieves a PLR=10−3 for an extremely low normalized load of C<10−3. The advantage of this protocol lies in its simplicity of implementation, since it does not require pre-coordination or extra access control signaling [47]. When there is low load in the channel, the energy consumption of Aloha is efficient, since it only requires sending data and the reception of an ACK, so the active consumption due to transmission and reception is proportional to the data and ACKs transmission delays. Nevertheless, for high channel loads, the packet losses due to collisions become high, which causes more retransmissions, overloading the channel with the associated wasting of energy.\n\n5.1.1. Slotted Aloha (S-Aloha)\n\nThe most similar version to Aloha is S-Aloha. It consists of discretizing the channel, where each time slot has the duration of a packet transmission time [46]. The purpose of discretizing is to avoid partial collisions among packets. S-Aloha is used, for example, in the sending of short packets and requests to initiate communications in the DVB-RCS standard [48].\n\nS-Aloha achieves a low normalized throughput of S=0.368 when the normalized load is C=1. Similar to the case of pure Aloha, a channel load of C<10−3 is supported when the PLR=10−3. In the case of a higher packet loss, PLR=10−2, the normalized load is increased to C≃0.01. Regarding the complexity of implementation, it can be said that S-Aloha adds additional complexity since it requires all the nodes to be synchronized, both on the ground and also on the satellite. Such a synchronization requires us to consider the time margins in order to align the time-slots among nodes that have different delays. Similar to pure Aloha, this protocol proves to be quite inefficient for high channel loads due to the need for retransmissions.\n\nFor IoT aplications, S-Aloha is a good option in scenarios where the offered load is low and the delays between nodes and base station do not have a large variation, but it becomes impractical if the delays imposed on a satellite link are considered. An application of this protocol on the recent Weightless-N IoT technology is reported in [49].\n\n5.1.2. Diversity Aloha/Slotted Aloha (DA/DSA)\n\nThis protocol is considered for systems that have large transmission delays (e.g., satellites in GEO orbits) and for which confirmations of packet reception are impractical [50]. In the diversity Aloha/slotted Aloha (DA/DSA) protocol each terminal sends two or more copies of a packet at different randomly selected times, without waiting for the reception of an ACK. The idea is to increase the probability of packet reception and to avoid retransmissions; however, the consequence is an overloaded channel. An application of this protocol in satellite environments is observed in the IP-over-Satellite system for sending short packets and registration [51,52].\n\nThe maximum performance of this protocol is reported to be lower than for slotted Aloha. In DSA, a maximum normalized throughput of S≃0.3 is achieved for a C≃0.6. However, when C<0.5, the performance of DSA is slightly better. In the case of a PLR=10−2, the protocol supports a normalized load of C≃0.05 (compared to a C≃0.01 in S-Aloha). DSA is similar in behavior to S-Aloha in terms of implementation complexity and energy efficiency.\n\nDA/DSA is suitable for links with large delays and offered loads less than C=0.5. Nonetheless, in IoT scenarios the channel load will tend to increase progressively with time, consequently DA/DSA may not meet the scalability requirement, a crucial aspect in an IoT system like the one described in the study scenario.\n\n5.1.3. Spread Spectrum Aloha (SS-Aloha)\n\nThe protocol is proposed to provide random multiple access over an unsynchronized channel. SS-Aloha uses spread spectrum techniques to send messages; it is similar to a CDMA protocol where each terminal uses the same code to spread the signal and accesses the channel without coordination (like in Aloha) [53]. The multiple access capability is given by the large bandwidth employed instead of the assignment of different codes. In , we illustrate the responses of a correlator detector (at the satellite’s receiver) applied to signals from one terminal (see a) and four terminals (see b). In this example, a spreading factor SF=60 is used, in consequence, 60 chips are placed between two consecutive bits from the same terminal. In order to achieve multiple access, spread spectrum Aloha (SSA) makes use of the offset in chips between two signals, so in b, the messages from the four terminals are still decodable. Previous evaluations of the SS-Aloha protocol in a satellite environment are reported in [54].\n\nRegarding the performance of SS-Aloha, thanks to the use of proper error correction codes, the protocol achieves a maximum normalized throughput close to S≃0.6 for a given load of C≃0.7. In the case of PLR=10−3, the system supports a load of C≃0.5 [5]. This protocol has a reduced level of complexity because it does not require synchronization. However, the spread spectrum technique has a strong dependency on the signal to noise plus interference ratio (SNIR) threshold in the demodulator to operate correctly. SS-Aloha shows to be efficient in terms of energy consumption; similar to Aloha, SS-Aloha only requires the sending of data packets with no need to send extra control signaling or synchronization information.\n\nThe simplicity required in transmitters in addition to the good performance of SS-Aloha, compared to previous protocols, may make this protocol suitable for IoT scenarios. However, when employed in LEO satellite links, where the expected power imbalance is high, the performance of this protocol drops drastically, behaving similarly to S-Aloha.\n\n5.1.4. Enhanced Aloha (E-Aloha)\n\nWhen sensor nodes of a telemetry application transmit data readings, they are usually configured to send packets in a periodical way, with a fixed time interval between messages. In this scenario, the E-Aloha protocol has been proposed as a simplified version of Aloha. At the time of sending, nodes simply initiate transmission, with no additional control to avoid collisions; a confirmation of reception is also not considered in the protocol. For some applications, nodes may end up with the same time interval between packets, in which case the nodes will collide permanently, with no effective communication. To avoid this situation, E-Aloha defines a time window—considerably longer than the packet transmission time—located around the fixed sending time. Within this window, each node selects randomly a new sending time, thus reducing the chances of permanent collisions among nodes using the same time interval.\n\nillustrates the behavior of the protocol for nodes originally colliding over the same time interval (see a), and the corrections made through the use of a time window around the fixed sending times (see b). E-Aloha was introduced in [43] for use in satellite systems devoted to telemetry such as Argos.\n\nThe performance evaluation of this protocol considered the periodic traffic characteristic of typical telemetry systems [43]. The reported results indicate that for a PLR=10−1, the protocol achieves a normalized throughput of S=0.091, considering a channel load C=0.101. The performance is, then, very similar to the one reported for S-Aloha (C=0.1 for a PLR=10−1), with the advantage that E-Aloha does not require time synchronization. Furthermore, there is less complexity in implementing E-Aloha than for Aloha, in particular since E-Aloha does not require a specific logic implemented at the receiver. By not requiring ACK, this protocol is energy efficient when the load on the channel is very low (C∼0.1). For higher loads, the performance of the protocol drastically decreases due to the high number of collisions.\n\nThe simplicity of this protocol is desirable for the implementation on the IoT terminal node. It actually behaves well for the reported channel loads found in the systems where the protocol has been implemented. However, E-Aloha may lack the necessary scalability to support the future IoT networks.\n\n5.1.5. Random Frequency Time Division Multiple Access (RFTDMA)\n\nDespite not being reported in satellite environments, this protocol has an important relevance in low power wide area (LPWA) technologies, more precisely for its use in SigFox. Considering the ultra narrowband (UNB) technology, this protocol acquires prominence when low cost transmitters that do not require expensive oscillators are required to perform a precise adjustment of the carrier frequency. Taking this into account, random frequency time division multiple access (RFTDMA) uses the time and frequency to send messages without discretization (as in pure Aloha) [38]. illustrates the process of a transmitter selecting a frequency according to the protocol, a representation of the channel resulting from many nodes transmitting at the same time and, finally, the receiver’s architecture to retrieve the data out of the composite signal.\n\nThe performance of this protocol is calculated in [56]. Its maximum normalized throughput is lower than 0.1 for C≃0.25, and the PLR results are not reported as a function of C.\n\n5.2. Reservation and Adaptive Protocols\n\n5.2.1. Reservation Aloha (R-Aloha)\n\nThis protocol divides the time into m slots, each with the duration of a packet transmission time. The slots are grouped in frames, and the nodes randomly choose one slot per frame to send a packet. If a node successfully sends a packet, it proceeds to reserve the same slot in future frames. At the end of each frame, the receiver responds with an ACK, also indicating what the available slots for the next cycle are. An example of the operation of reservation Aloha (R-Aloha) is shown in . The R-Aloha protocol was proposed for incorporating satellite communications in the ARPA network [57].\n\nThe throughput of this protocol depends mainly on the number of packets sent by each node during a reservation. In the worst case, the performance of R-Aloha is similar to the S-Aloha. When the protocol holds reservations for a large number of frames, the normalized throughput S approaches to 1 [58].\n\nAlthough R-Aloha reports having a normalized throughput that tends to 1, it may not meet the requirements of IoT scenarios: the protocol has a good performance when the nodes disputing the channel resemble the number of slots in each frame, and also when the reservations made by each terminal last a large number of frames. However, when the scenario does not comply with these assumptions, R-Aloha turns out to be an unscalable protocol. Moreover, for IoT applications where nodes typically have small and/or infrequent amounts of data to send, the reservation mechanism of R-Aloha may result impractical.\n\n5.2.2. Carrier Sense Multiple Access with Collision Avoidance (CSMA/CA) with RTS/CTS\n\nA classical protocol in wireless network, the carrier sense multiple access with collision avoidance (CSMA/CA) defines the monitoring of the channel before sending a message. If a node senses the channel is busy, it refrains from transmitting and enters an exponential backoff stage; otherwise, it issues a reservation request by means of a small broadcast message (i.e., the request-to-send (RTS) packet). When there are no collisions and the receiver decodes the RTS correctly, another broadcast message granting the reservation (i.e., the clear-to-send [CTS] packet) is sent by the receiver. Upon reception of the CTS, the sender proceeds to send the data packet [59]. illustrates the exchange of packets when a successful reservation is placed in CSMA/CA with RTS/CTS. The protocol has been evaluated in a LEO satellite environment considering different back-off distribution functions [60].\n\nThe maximum performance regarding throughput of this protocol varies between S≃0.5 and S≃0.8, since its performance depends on factors such as the packet length, number of nodes, and the number of hidden terminals, among others. As reported in [59], for an example network with 10 stations and no hidden terminals, the protocol achieves a normalized throughput of S=0.75 when the load is C=0.8. In the presence of hidden terminals—a common scenario for a satellite system with ground terminals distributed over a large area—if there is a 5% probability of hidden terminals for a total of 10 stations on ground, the normalized throughput is S=0.65. By increasing the number of stations to 50 in the same case, the normalized throughput falls to S=0.57. PLR values for this protocol are not reported since packet losses are avoided when using the reservation mechanism.\n\nIn terms of complexity, CSMA/CA is still a simple protocol: it does not impose high processing demands on the nodes beyond the ability to transmit and receive. Conversely, the power consumption of CSMA/CA is high, since each node must permanently listen and monitor the channel.\n\nCSMA/CA is widely used in wireless IoT technologies, such as ZigBee, D7AP, and other short-range wireless sensor networks [49,61]. However, for the protocol to be implemented on a satellite IoT network, it may be impractical for two reasons: first, the probability of hidden nodes in a satellite scenario is high due to a wide geographic distribution area; and second, the long delays of the different devices on ground make the channel sensing ineffective even when there are no hidden terminals.\n\n5.2.3. Fixed Competitive TDMA (FC-TDMA)\n\nSimilar to R-Aloha, the fixed competitive TDMA (FC-TDMA) protocol defines a set of m slots grouped in frames. In each frame, the nodes select a slot for transmission in a pseudo-random manner [62]. To calculate the allocated slot for packet transmission, nslot, a node employs its ID—a previously assigned integer number—and follows the calculation shown in (5). The receiver has to estimate the number of stations on the ground based on the colliding slots and those with successful transmissions; the frame is further divided according to that estimation. An example of the operation of FC-TDMA is illustrated in . The authors in [62] have suggested this MAC protocol for LEO satellite systems.\n\nID%m=nslot.\n\n(5)\n\nThe theoretical maximum normalized throughput of the protocol is S=1 with a load of C=1. This performance corresponds to a scenario with a number of slots in the frame equal to the number of devices on the ground, and all the devices having an assigned ID such that there are no collisions. The complexity of this protocol is related to the TDMA functionality and the variable slot lengths. In addition, the algorithm for estimating the number of terminals on the ground may impact both the energy performance and the complexity. However, the details of this algorithm are not provided in the literature.\n\nSimilar to R-Aloha, the maximum normalized throughput of FC-TDMA is achieved under very specific conditions: (a) when the number of devices is constant; and (b) when there are no conflicting IDs among all users. However, FC-TDMA could potentially match the traffic characteristics of an IoT application as long as the estimation of the number of nodes under its coverage is accurate and fast.\n\n5.3. Interference Cancellation-Based Protocols\n\n5.3.1. Contention Resolution Diversity Slotted Aloha (CRDSA)\n\nAs the name indicates, contention resolution diversity slotted Aloha (CRDSA) is based on the DSA protocol. In addition to sending two or more copies of a packet, CRDSA iteratively resolves the collisions that occur at the receiver through the use of a successive interference cancellation (SIC) mechanism [51]. For a given frame, nodes send two or three copies of the packet in different slots. The entire frame is then stored in a digital memory at the receiver. Furthermore, each packet includes control data that indicates in what slot the “twin” packet has been sent. In this way, when a packet is decoded correctly by the receiver, the latter retrieves the information regarding the arriving slot for the “twin” packet. With this information, the receiver is able to perform the interference cancellation method. The CRDSA protocol has been developed and included in the DVB-S2/RCS standard [63].\n\nIn terms of communication performance, when CRDSA uses two copies per packet, it achieves a maximum performance of S=0.52 for a given load of C=0.65. In the case of a PLR=10−3, the supported channel load is C≃0.05, improving to C≃0.26 when the PLR=10−2. Note that CRDSA achieves a high normalized throughput performance for a low PLR; consequently, the protocol is also considered energy efficient: although each node must send each packet two times, no further retransmissions are required. Nevertheless, protocols based on interference cancellation have a high dependency on a good channel estimation, which adds complexity to the implementation. In addition, CRDSA also reports high demands regarding processing and storage capabilities at the receiver, together with requiring synchronization among nodes.\n\nTo address the drawbacks reported for CRDSA, the protocol has evolved with adaptations such as multi-frequency CRDSA (MF-CRDSA) and spread spectrum CRDSA (SS-CRDSA) [64]. The former deals with the problem of requiring power peaks to send complete messages over small time slots. By dividing the available spectrum in multiple channels, the time slots in MF-CRDSA can be longer, thus avoiding very high power peaks but at the expense of the protocol’s performance. The latter protocol, SS-CRDSA, addresses the problem of “loops” in the original CRDSA. A loop occurs when two different sources send replicas of their packets over the same slot, making it impossible to apply a successful interference cancellation (see for example users three and four in ). To avoid the loop, SS-CRDSA uses spread spectrum techniques and randomly associates codes to each packet.\n\n5.3.2. Irregular Repetition Slotted Aloha (IRSA)\n\nThis protocol represents an improvement over CRDSA. Although it also requires the nodes to send copies of packets in randomly chosen slots, the difference lies in that the number of duplicates for each packet varies depending on an optimized distribution probability. The protocol is intended to improve the performance over uplink satellite channels [65].\n\nIrregular repetition slotted Aloha (IRSA) achieves a maximum performance of S=0.8 for a given load of C=0.85. In the case of a PLR=10−3, the supported normalized offered load rises to C≃0.7. The complexity of this protocol is similar to the complexity of CRDSA, but it adds the difficulty of calculating the different number of repetitions per packet. Given its performance, IRSA is considered an energy efficient protocol for normalized offered loads near C=0.7, because of its low PLR.\n\n5.3.3. Coded Slotted Aloha (CSA)\n\nA protocol inspired by IRSA and CRDSA in which the nodes divide packets before transmission into k parts of the same length. Each one of these sub-packets is then encoded with an error correction code and sent through the discrete channel [66]. Upon reception, if all the sub-packets from a sender are received with no collisions, the recovery of other packets coming from the same sender can be achieved by applying a maximum-a-posteriori (MAP) decoding scheme. In addition, the receiver also employs the interference cancellation scheme for reception from other senders. The work in [66] identifies the satellite network as a potential application for coded slotted Aloha (CSA).\n\nThe communications performance of the CSA protocol indicates a normalized throughput of S≃0.8 for a channel offered load of C≃0.84. The normalized load supported for a PLR=10−3 is not reported in the literature.\n\nSimilar to CRDSA and other interference cancellation-based protocols, CSA is also energy efficient due to its low PLR for high channel loads. In terms of complexity, CSA is very similar to CRDSA, but it adds the difficulty of coding and decoding each packet with the model introduced in [66].\n\n5.3.4. Multi-Slots Coded Aloha (MuSCA)\n\nThis protocol generalizes the CRDSA protocol. By employing adequate error correction codes given a proper SNIR, multi slot coded Aloha (MuSCA) is able to decode packets even when there are collisions for all the transmissions in a frame [67]. In the example provided for CRDSA in , MuSCA would have been able to successfully decode packets sent by users three and four, and received at slots two and five. The MuSCA protocol is designed for uplinks shared among a number of users in satellite systems [67].\n\nMuSCA achieves a maximum normalized throughput of S=1.4 when the normalized channel load does not exceed 1.42. When the PLR=10−3, MuSCA supports an offered load of C=1.22. Considering the very high efficiency of this protocol for normalized offered loads close to one, there are no need for retransmissions. In terms of complexity, MuSCA is very similar to CSA, since the difference between them is mainly in the coding mechanism.\n\n5.3.5. Enhanced Spread Spectrum Aloha (E-SSA)\n\nThis protocol is similar to SSA on the transmitter side. On the receiver side, enhanced spread spectrum Aloha (E-SSA) employs an iterative soft interference cancellation (ISIC) algorithm with a sliding window that captures the messages received on an unsynchronized channel. The main difference with the previous protocols is that E-SSA does not require sending multiple copies of packets, nor synchronization; thus, achieving a greater efficiency with a reduced complexity. The E-SSA protocol has been designed for integrated satellite/terrestrial mobile systems [5,68]. shows the operation of this protocol.\n\nIn terms of performance, the maximum normalized throughput reported for this protocol is S=1.2 for a channel load of C=1.25. When the PLR=10−3, E-SSA is able to operate with a normalized load of C=1.12, assuming that the power imbalance of the transmitting nodes is equivalent. As opposed to SSA, in E-SSA, if a power imbalance of σ=3 dB is assumed among nodes, the performance improves considerably, achieving a normalized load of C=1.9 under a PLR=10−3.\n\nThe interference-cancellation protocols presented in this section are designed mostly to solve the multiple access for the uplink of satellite systems. However, most of the control information required by the protocols is actually acquired/exchanged on the downlink. For example, a correct channel estimation is a key element for the proper operation of E-SSA. Such an estimation takes place over the downlink. Similarly, the code sharing process of CSA also takes place on the downlink. In half-duplex systems, the interference-cancellation based protocol’s feasibility requires careful examination.\n\nRegarding the suitability of this category for IoT services, it can be mentioned that despite the great performance reported for these protocols, the complexity of their correct implementation makes them hard to adapt given the capabilities of CubeSats in a LEO orbit. Among the reviewed protocols, E-SSA stands out in performance compared to the others, and significantly reduces the complexity at the ground terminal; however, it is still highly demanding of resources on the nanosatellite side.\n\n5.4. Hybrid Protocols\n\nThis category corresponds to protocols whose MAC mechanisms are based on a mix of protocols belonging to the other categories previously discussed in this section. The ones already mentioned and that also match this category are SS-CRDSA, MF-CRDSA, FC-TDMA, and R-Aloha; all of them employ a mix of fixed allocation techniques in conjunction with random access mechanisms.\n\nAloha-LoRa\n\nDespite not being reported in satellite environments, another protocol that is worth mentioning due to its wide use in LPWA technologies is the one employed in LoRa. In this technology, the bandwidth is divided into several channels, where the number is dependent on the regulation (e.g., 13 channels for the industrial, scientific and medical (ISM) 902–928 MHz band under federal communications commission (FCC) regulation). In these channels, nodes transmit modulating the signal with the chirp spread spectrum (CSS) and make use of different spreading factors (SF). The channels are further divided into 6 subchannels (from SF = 7 to SF = 12). The MAC behavior depends on the LoRa class of device:\n\nClass A: The lowest power consumption type of device. Transmits data when is necessary using Pure Aloha. To receive messages from the gateway, a listening window is open after each transmission.\n\nClass B: For these devices there is a schedule to transmit, which is defined through beacons.\n\nClass C: These nodes are always in reception mode, except during transmission.\n\nIn the case of Class A nodes, the MAC protocol performs a fixed allocation of resources (in bandwidth and code) together with a random access scheme [14].\n\nTo summarize our review, presents a taxonomy elaborated with the MAC protocols under study. Furthermore, the main characteristics and performance metrics when the MAC protocols are evaluated in a satellite environment are presented in .\n\nTable 2\n\nProtocols Smax CSmax CPLR=10−3 ComplexityEnergy EfficiencyTopology Impact *MuSCA1.41.421.22highhighdifferent delays (−)E-SSA1.21.251.12highhighpower imbalance (+)FC-TDMA11-mediummediumvariability in number of nodes (−),different delays (−)R-Aloha11-mediummediumdifferent delays (−)CSA0.80.84-highhighdifferent delays (−)IRSA0.80.850.7highhighdifferent delays (−)CSMA/CA0.750.8-lowlowhidden nodes (−),different delays (−)SS-Aloha0.60.70.5mediummediumpower imbalance (−)CRDSA0.520.650.05highmediumpower imbalance (+),different delays (−)S-Aloha0.3681<10−3lowmediumpower imbalance (+),different delays (−)DSA0.30.6<10−3lowmediumpower imbalance (+),different delays (−)E-Aloha0.090.1<10−3lowmediumpower imbalance (+)\n\n6. Discussion and Open Research Challenges\n\nIn this section, we discuss the performance evaluation provided in Section 5 together with additional characteristics of the IoT scenario described in Section 3. Of the protocols reviewed, although several options offer a high throughput in terms of communications performance, such a good result is associated with a medium to high cost in terms of implementation complexity and energy consumption (see the first four protocols in ). Our comparative analysis of protocols suggests that the Aloha-based are good candidates for the MAC layer in nanosatellites devoted to IoT connectivity. This is mainly due to their simplicity of implementation and their minimum hardware requirements. These protocols also report having a low sensitivity to delay.\n\nIn terms of network topology, the Aloha-based protocols can benefit from the power imbalance among nodes because of the so-called capture effect. In such a case, the receiver can correctly receive a packet with a high signal strength despite the existence of interference with other transmissions with lower power levels. Among the protocols in this category, the E-Aloha is the current solution for commercial telemetry satellite systems, has been extensively tested, and is operative. The performance of E-Aloha is similar to that of S-Aloha, with no need of synchronization. However, the main problem with E-Aloha is it may lack scalability for massive applications, due to its poor performance even for moderate traffic loads, as shown in . SS-Aloha, on the other hand, has much better performance than other Aloha-based protocols. However, this mechanism does not benefit from the capture effect; on the contrary, its performance falls to values similar to S-Aloha in a situation of power imbalance.\n\nWhen examining the protocols based on interference cancellation (e.g., CRDSA and E-SSA in ), the limitations in processing capacity in CubeSats, together with the adverse conditions to perform correct channel estimation in LEO orbits, make employing such protocols in the IoT study scenario infeasible. Other protocols in this category, such as MuSCA, CSA, and E-SSA, require the exchange of coordination or channel estimation information delivered in advance or through a separated channel, making it more demanding regarding channel resources.\n\nAs for protocols that require the carrier sensing mechanism, i.e., CSMA/CA, they have been shown to be highly inefficient given a topology with a moderate to a high number of hidden nodes, which will be a reasonably common scenario given the random distributions of ground sensors and devices serving a variety of IoT applications’ requirements. The performance of such protocols also decreases when the delays in transmissions among the nodes are highly uneven. In fact, the uneven delays are also critical for the operation of TDMA-inspired protocols such as R-Aloha and FC-TDMA. The reason is that each slot, to synchronize the channel, must incorporate a guard time of the order of the inequalities among the delays, which may result in a considerable waste of channel resources when the variability among delays is large. Moreover, despite the good performance reported for the throughput in FC-TDMA, it requires a specialized algorithm that varies dynamically the number of slots in each frame, which has not been determined in the definition of the protocol provided in [62]. In the case of R-Aloha, although it seems to have excellent performance, that only holds when reservations duration are such that the channel is always occupied; nevertheless, in the case of a large number of nodes, and short reservation times, the scalability of the protocol falls rapidly.\n\nAs can be seen through comparative analysis, MAC protocol performance varies widely when examined in the context of CubeSats together with the characteristics of the IoT networks (number of nodes, nature of traffic, geographical distribution, etc.). A visual evaluation of the suitability of each protocol derived from our comparative analysis is shown in . In the figure, the protocols are placed according to: (1) their fulfillment of IoT-related requirements such as the scalability (the x-axis), which relates to the communications performance when serving networks composed of a large number of nodes, the topology dependency (a larger-sized geometric figure enclosing each protocol indicates a larger dependency on terminal nodes locations and knowledge of network topology); and the energy efficiency (darker colors correspond to higher power consumption in the execution of the MAC protocol); and (2) their adaptation to the constraints of nanosatellite technology, in which case we evaluate their implementation complexity (the y-axis). A level of high complexity signifies the need of costly resources such as dynamic channeling, advanced channel estimation mechanisms, synchronization, etc.; and (once again) energy efficiency, since it is important to maintain the energy consumption on the spacecraft side within the nanosatellite capabilities.\n\nTo address the specific challenges derived from the utilization of nanosatellites for providing effective and cost-efficient IoT connectivity, we envision open research and implementation aspects from three perspectives: from the network protocols perspective, from the integration capabilities of CubeSats and from the evolution of the nanosatellites industry.\n\n6.1. From the Network Protocols Perspective\n\nWhen existing network protocols are evaluated in the context of nanosatellites technology for IoT connectivity, it is common to encounter difficulties in finding one protocol that meets all the requirements. In the case of MAC protocols, shows how an ideal performance zone, derived from the IoT scenario together with the CubeSat restrictions, is not yet met by any of the reviewed protocols, even though many had good performance in more traditional satellite scenarios. Additional research for MAC protocol design is needed to integrate aspects which can operate with low processing capacity demands and adapt to a variable and dynamic number of ground sensors and devices. Moreover, mitigation mechanisms should be considered for managing the high power imbalance conditions over the network links, the unequal delays derived from uneven link lengths, and the inability to provide high-quality channel estimations.\n\n6.2. From the Integration Capabilities of CubeSat Connectivity with Other Wireless Technologies\n\nThe IoT ecosystem will benefit from a more integrated communications platform. In many cases, a global nanosatellite network integrated to an LPWA technology would boost the possibilities for improving connectivity at reduced costs. In recent years, there have been proposals for such a hierarchical architecture: the connected devices send data to an LPWA gateway, which in turn forwards data via the satellite network [9,69]. However, such an integration has not been explored with constellations of nanosatellites instead of traditional satellite networks. Additional research is needed to explore the requirements of compatibility in terms of MAC protocols, network architecture and united service patterns [10]. Another innovative line studied the behavior of an LPWA link to enable connectivity from the nanosatellite to a gateway on Earth [70,71]. Further research and experimentation will help understand and design an integrated platform that takes advantage of the different wireless technologies involved in these hybrid solutions.\n\n6.3. From the Evolution of the Nanosatellites Industry\n\nThe enormous growth foreseen for the IoT market is highly related to the rapid evolution of low-cost wireless access technologies. In particular, with the introduction of LPWA technologies such as LoRa, Sigfox, and NB-IoT, to mention some, the massification of connected devices seems more plausible in the near future. Although nanosatellite connectivity is being identified as part of the IoT technologies ecosystem [6,7,8,9], it is still not considered as low-cost as to become part of the LPWA category [72,73]. The industry of nanosatellite construction and launching needs to keep evolving, and to evolve fast, to reduce costs even more and become another key player in the LPWA market.\n\n7. Conclusions\n\nThe evolution of satellite systems and the introduction of CubeSats as low-cost satellite technology has made it possible to provide massive communications services for IoT applications, opening the opportunity for countries with no experience in space science and small corporations to participate competitively in the growing satellite communications market. However, the existent protocols in satellite technology, in particular for medium access control, were not designed with the IoT scenario, nor the low-cost technology constraints in mind.\n\nThis paper has presented a thorough review of MAC protocols designed for satellite environments, considering the specific characteristics of the IoT networks and applications together with the conditions of a wireless network served by CubeSats deployed in a low earth orbit. The study has shown that many of the reviewed protocols are not suitable for deployment in the scenario of interest, although they have been successfully implemented and deployed in other satellite systems. From the comparative evaluation, the protocols employing interference cancellation techniques are shown to have the best communications performance, but they behave poorly with regards to the demands of processing/channel resources and energy consumption. Furthermore, the Aloha-based protocols are good candidates for the MAC layer in nanosatellites devoted to IoT connectivity due to their simplicity of implementation and their minimum hardware requirements. However, these protocols report having poor communications performance when the traffic load—related to the growing number of expected nodes in the IoT—increases, and also when the delays vary greatly due to variable link lengths.\n\nFrom our analysis, a better balance among performance, complexity, energy consumption, and sensitivity to topology should drive the design of future MAC protocols for nanosatellite IoT solutions. Aspects related to the network protocol design, the integration capabilities of CubeSat connectivity with other wireless technologies, and the evolution of the nanosatellites industry are some of the open challenges identified and discussed in this review.\n\nAcknowledgments\n\nThe authors would like to thank the technical support from the Space and Planetary Exploration Laboratory (SPEL) at Universidad de Chile.\n\nAbbreviations\n\nThe following abbreviations are used in this manuscript:\n\nACKAcknowledgementADCSAttitude determination and control systemADS-BAutomatic dependent surveillance broadcastAISAutomatic identification systemCDMACode division multiple accessCRDSAContention resolution diversity slotted AlohaCSACoded slotted AlohaCSMACarrier sense multiple accessCSMA/CACSMA with collision avoidanceCSSChirp spread spectrumCTSClear-to-sendDADiversity AlohaDSADiversity slotted AlohaE-SSAEnhanced spread spectrum AlohaESAEuropean Space AgencyFCCFederal communications commissionFC-TDMAFixed competitive TDMAFDMAFrequency division multiple accessGEOGeosynchronous equatorial orbitGLONASSGlobal orbiting navigation satellite systemGNSSGlobal navigation satellite systemGPSGlobal positioning systemHEOHighly elliptical orbitISICIterative soft interference cancellationIRSAIrregular repetition slotted AlohaIoTInternet of thingsISMIndustrial, scientific and medicalLEOLow Earth orbitLPWALow power wide areaM2MMachine to machineMarCOMars Cube OneMACMedium access controlMEOMedium Earth orbitMF-CRDSAMulti-frequency CRDSAMuSCAMulti slot coded AlohaNASANational Agency for Space AdministrationOBCOn-board computerOSIOpen system interconnectionPLRPacket loss ratioRFTDMARandom frequency time division multiple accessRTSRequest-to-sendSNIRSignal to noise plus interference ratioSSASpread spectrum AlohaSS-CRDSASpread spectrum CRDSASICSuccessive interference cancellationTDMATime division multiple accessUCSUnion of Concerned ScientistsUNBUltra narrowband\n\nAuthor Contributions\n\nConceptualization, T.F., S.C., and A.B.; Methodology, S.C. and A.B.; Investigation, T.F. and A.B.; Data curation, T.F. and A.B.; Formal analysis, T.F.; Visualization, T.F., S.C., and A.B.; Supervision, S.C. and A.B.; Funding acquisition, S.C. and A.B.; Writing—original draft, T.F. and A.B.; Writing—review & editing, S.C. and A.B.\n\nFunding\n\nThis work has been funded in part by the Complex Engineering Systems Institute, ISCI (CONICYT: FB0816) and in part by the NIC Labs Chile.\n\nConflicts of Interest\n\nThe authors declare no conflict of interest.\n\nReferences\n\n1. McKinsey Global Institute The Internet of Things: Mapping the Value Beyond the Hype. [(accessed on 14 January 2019)];2015 Available online: https://www.mckinsey.com/~/media/McKinsey/Business%20Functions/McKinsey%20Digital/Our%20Insights/The%20Internet%20of%20Things%20The%20value%20of%20digitizing%20the%20physical%20world/Unlocking_the_potential_of_the_Internet_of_Things_Executive_summary.ashx\n\n2. SpaceX Completes Iridium Next Constellation—SpaceNews.com. [(accessed on 14 January 2019)]; Available online: https://spacenews.com/spacex-completes-iridium-next-constellation/\n\n3. Peyravi H. Medium access control protocols performance in satellite communications. IEEE Commun. Mag. 1999;37:62–71. doi: 10.1109/35.751497. [CrossRef] [Google Scholar]\n\n4. Gaudenzi R.D., del Rio Herrero O. Advances in Random Access protocols for satellite networks; Proceedings of the 2009 International Workshop on Satellite and Space Communications; Tuscany, Italy. 9–11 September 2009; pp. 331–336. [CrossRef] [Google Scholar]\n\n5. Herrero O.D.R., De Gaudenzi R. High efficiency satellite multiple access scheme for machine-to-machine communications. IEEE Trans. Aerosp. Electron. Syst. 2012;48:2961–2989. doi: 10.1109/TAES.2012.6324672. [CrossRef] [Google Scholar]\n\n6. De Sanctis M., Cianca E., Araniti G., Bisio I., Prasad R. Satellite communications supporting internet of remote things. IEEE Internet Things J. 2016;3:113–123. doi: 10.1109/JIOT.2015.2487046. [CrossRef] [Google Scholar]\n\n7. Kramer H.J., Cracknell A.P. An overview of small satellites in remote sensing. Int. J. Remote Sens. 2008;29:4285–4337. doi: 10.1080/01431160801914952. [CrossRef] [Google Scholar]\n\n8. Alvarez J., Walls B. Constellations, clusters, and communication technology: Expanding small satellite access to space; Proceedings of the IEEE Aerospace Conference; Big Sky, MT, USA. 5–12 March 2016; [CrossRef] [Google Scholar]\n\n9. Iot UK Satellite Technologies for IoT Applications. [(accessed on 29 January 2019)];2017 Available online: https://iotuk.org.uk/wp-content/uploads/2017/04/Satellite-Applications.pdf\n\n10. Qu Z., Zhang G., Cao H., Xie J. LEO satellite constellation for Internet of Things. IEEE Access. 2017;5:18391–18401. doi: 10.1109/ACCESS.2017.2735988. [CrossRef] [Google Scholar]\n\n11. Atzori L., Iera A., Morabito G. The Internet of Things: A survey. Comput. Netw. 2010;54:2787–2805. doi: 10.1016/j.comnet.2010.05.010. [CrossRef] [Google Scholar]\n\n12. Gubbi J., Buyya R., Marusic S., Palaniswami M. Internet of Things (IoT): A vision, architectural elements, and future directions. Future Gener. Comput. Syst. 2013;29:1645–1660. doi: 10.1016/j.future.2013.01.010. [CrossRef] [Google Scholar]\n\n13. Ahmed E., Yaqoob I., Gani A., Imran M., Guizani M. Internet-of-things-based smart environments: State of the art, taxonomy, and open research challenges. IEEE Wirel. Commun. 2016;23:10–16. doi: 10.1109/MWC.2016.7721736. [CrossRef] [Google Scholar]\n\n14. Oliveira L., Rodrigues J.J., Kozlov S.A., Rabêlo R.A., Albuquerque V.H.C.d. MAC Layer Protocols for Internet of Things: A Survey. Future Internet. 2019;11:16. doi: 10.3390/fi11010016. [CrossRef] [Google Scholar]\n\n15. UCS Satellite Database | Union of Concerned Scientist. [(accessed on 10 January 2019)]; Available online: https://www.ucsusa.org/nuclear-weapons/space-weapons/satellite-database\n\n16. Cubesat Communications System Table. [(accessed on 14 January 2019)]; Available online: https://www.klofas.com/comm-table/\n\n17. Iridium NEXT | Iridium Satellite Communications. [(accessed on 12 January 2019)]; Available online: https://www.iridium.com/file/24033/\n\n18. BGAN HDR | High Data Rate Broadcasting | Inmarsat. [(accessed on 12 January 2019)]; Available online: https://www.inmarsat.com/service/bgan-hdr/\n\n19. Kulu E. Nanosatellite & Cubesat Database | Missions, Constellations, Companies, Technologies and More. [(accessed on 10 January 2019)]; Available online: https://www.nanosats.eu/index.html#database\n\n20. Diaz M., Zagal J., Falcon C., Stepanova M., Valdivia J., Martinez-Ledesma M., Diaz-Pena J., Jaramillo F., Romanova N., Pacheco E., et al. New opportunities offered by Cubesats for space research in Latin America: The SUCHAI project case. Adv. Space Res. 2016;58:2134–2147. doi: 10.1016/j.asr.2016.06.012. [CrossRef] [Google Scholar]\n\n21. Portilla J.G. La órbita del satélite Libertad 1. Rev. Acad. Colomb. Cienc. Exactas Fís. Nat. 2012;36:491–500. [Google Scholar]\n\n22. Roman-Gonzalez A., Vargas-Cuentas N.I. Aerospace technology in Peru; Proceedings of the 66th International Astronautical Congress-IAC 2015; Jerusalem, Israel. 12–16 October 2015; p. 6. [Google Scholar]\n\n23. Evans D. The internet of things: How the next evolution of the internet is changing everything. CISCO White Pap. 2011;1:1–11. [Google Scholar]\n\n24. De Carvalho Silva J., Rodrigues J.J., Alberti A.M., Solic P., Aquino A.L. LoRaWAN—A low power WAN protocol for Internet of Things: A review and opportunities; Proceedings of the 2017 2nd International Multidisciplinary Conference on Computer and Energy Science (SpliTech); Split, Croatia. 12–14 July 2017; pp. 1–6. [Google Scholar]\n\n25. Raza U., Kulkarni P., Sooriyabandara M. Low power wide area networks: An overview. IEEE Commun. Surv. Tutor. 2017;19:855–873. doi: 10.1109/COMST.2017.2652320. [CrossRef] [Google Scholar]\n\n26. Okumura R., Mizutani K., Harada H. A Broadcast Protocol for IEEE 802.15.4e RIT Based Wi-SUN Systems; Proceedings of the 2017 IEEE 85th Vehicular Technology Conference (VTC Spring); Sydney, Australia. 4–7 June 2017; pp. 1–5. [CrossRef] [Google Scholar]\n\n27. Ratasuk R., Vejlgaard B., Mangalvedhe N., Ghosh A. NB-IoT system for M2M communication; Proceedings of the 2016 IEEE Wireless Communications and Networking Conference; Doha, Qatar. 3–6 April 2016; pp. 1–5. [CrossRef] [Google Scholar]\n\n28. IEEE Std 802.15.4-2011 (Revision of IEEE Std 802.15.4-2006) IEEE; Piscataway, NJ, USA: 2011. IEEE Standard for Local and metropolitan area networks—Part 15.4: Low-Rate Wireless Personal Area Networks (LR-WPANs) pp. 1–314. [CrossRef] [Google Scholar]\n\n29. Granjal J., Monteiro E., Silva J.S. Security for the internet of things: A survey of existing protocols and open research issues. IEEE Commun. Surv. Tutor. 2015;17:1294–1312. doi: 10.1109/COMST.2015.2388550. [CrossRef] [Google Scholar]\n\n30. Zou Y., Zhu J., Wang X., Hanzo L. A Survey on Wireless Security: Technical Challenges, Recent Advances, and Future Trends. Proc. IEEE. 2016;104:1727–1765. doi: 10.1109/JPROC.2016.2558521. [CrossRef] [Google Scholar]\n\n31. Soni A., Upadhyay R., Jain A. Internet of Things and Wireless Physical Layer Security: A Survey. In: Satapathy S.C., Bhateja V., Raju K.S., Janakiramaiah B., editors. Computer Communication, Networking and Internet Security. Springer; Singapore: 2017. pp. 115–123. [Google Scholar]\n\n32. Frustaci M., Pace P., Aloi G., Fortino G. Evaluating critical security issues of the IoT world: Present and future challenges. IEEE Internet Things J. 2018;5:2483–2495. doi: 10.1109/JIOT.2017.2767291. [CrossRef] [Google Scholar]\n\n33. Roy-Chowdhury A., Baras J.S., Hadjitheodosiou M., Papademetriou S. Security issues in hybrid networks with a satellite component. IEEE Wirel. Commun. 2005;12:50–61. doi: 10.1109/MWC.2005.1561945. [CrossRef] [Google Scholar]\n\n34. Wang R., Taleb T., Jamalipour A., Sun B. Protocols for reliable data transport in space internet. IEEE Commun. Surv. Tutor. 2009;11:21–32. doi: 10.1109/SURV.2009.090203. [CrossRef] [Google Scholar]\n\n35. Jiang C., Wang X., Wang J., Chen H., Ren Y. Security in space information networks. IEEE Commun. Mag. 2015;53:82–88. doi: 10.1109/MCOM.2015.7180512. [CrossRef] [Google Scholar]\n\n36. Mekki K., Bajic E., Chaxel F., Meyer F. A comparative study of LPWAN technologies for large-scale IoT deployment. ICT Express. 2018 doi: 10.1016/j.icte.2017.12.005. [CrossRef] [Google Scholar]\n\n37. GOMspace | NanoCom AX100. [(accessed on 13 January 2019)]; Available online: https://gomspace.com/shop/subsystems/communication-(1)/nanocom-ax100.aspx\n\n38. Goursaud C., Gorce J.M. Dedicated networks for IoT: PHY/MAC state of the art and challenges. EAI Endorsed Trans. Internet Things. 2015;1:150597. doi: 10.4108/eai.26-10-2015.150597. [CrossRef] [Google Scholar]\n\n39. Sinha R.S., Wei Y., Hwang S.H. A survey on LPWA technology: LoRa and NB-IoT. ICT Express. 2017;3:14–21. doi: 10.1016/j.icte.2017.03.004. [CrossRef] [Google Scholar]\n\n40. Maral G., Bousquet M. Satellite Communications Systems: Systems, Techniques And Technology. John Wiley & Sons; Chichester, UK: 2011. [Google Scholar]\n\n41. Abramson N. The Throughput of Packet Broadcasting Channels. IEEE Trans. Commun. 1977;25:117–128. doi: 10.1109/TCOM.1977.1093713. [CrossRef] [Google Scholar]\n\n42. Ren W., Liu E., Ward J., Hodgart S., Sweeting M. A control-centralised framed-ALOHA with capture for LEO satellite communications; Proceedings of the Second IFIP International Conference on Wireless and Optical Communications Networks (WOCN 2005); Dubai, UAE. 6–8 March 2005; pp. 496–500. [CrossRef] [Google Scholar]\n\n43. Ma H., Cai L. Performance analysis of randomized MAC for satellite telemetry systems; Proceedings of the 2010 5th International ICST Conference on Communications and Networking in China; Beijing, China. 25–27 August 2010; pp. 1–5. [Google Scholar]\n\n44. Lipke D., Swearingen D., Parker J., Steinbrecher E., Calvit T., Dodel H. MARISAT - A maritime satellite communications system. COMSAT Tech. Rev. 1977;7:351–391. [Google Scholar]\n\n45. Abramson N. THE ALOHA SYSTEM: Another alternative for computer communications; Proceedings of the Fall Joint Computer Conference; Houston, TX, USA. 17–19 November 1970; pp. 281–285. [CrossRef] [Google Scholar]\n\n46. Rom R., Sidi M. Multiple Access Protocols: Performance and Analysis. Springer Science & Business Media; New York, NY, USA: 2012. [Google Scholar]\n\n47. De Gaudenzi R., Del Rio Herrero O., Gallinaro G., Cioni S., Arapoglou P.D. Random access schemes for satellite networks, from VSAT to M2M: A survey. Int. J. Satell. Commun. Netw. 2018;36:66–107. doi: 10.1002/sat.1204. [CrossRef] [Google Scholar]\n\n48. Rinaldo R., Ginesi A., De Gaudenzi R., Del Rio O., Flo T., Rislow B., Lexow H. Advanced Physical and MAC Layer Techniques for DVB-based Interactive Satellite Terminals; Proceedings of the IET Seminar on Digital Video Broadcasting over Satellite: Present and Future; London, UK. 28 November 2006; pp. 1–13. [CrossRef] [Google Scholar]\n\n49. Montori F., Bedogni L., Di Felice M., Bononi L. Machine-to-machine wireless communication technologies for the Internet of Things: Taxonomy, comparison and open issues. Pervasive Mob. Comput. 2018;50:56–81. doi: 10.1016/j.pmcj.2018.08.002. [CrossRef] [Google Scholar]\n\n50. Choudhury G., Rappaport S. Diversity ALOHA -A random access scheme for satellite communications. IEEE Trans. Commun. 1983;31:450–457. doi: 10.1109/TCOM.1983.1095828. [CrossRef] [Google Scholar]\n\n51. Casini E., De Gaudenzi R., Herrero O.D.R. Contention resolution diversity slotted ALOHA (CRDSA): An enhanced random access schemefor satellite access packet networks. IEEE Trans. Wirel. Commun. 2007;6:1408–1419. doi: 10.1109/TWC.2007.348337. [CrossRef] [Google Scholar]\n\n52. Coe S. Internet Protocol over Satellite: Insights for telecommunications systems managers; Proceedings of the 2009 International Conference on Wireless Communications Signal; Nanjing, China. 13–15 November 2009; pp. 1–5. [CrossRef] [Google Scholar]\n\n53. Abramson N. Multiple access in wireless digital networks. Proc. IEEE. 1994;82:1360–1370. doi: 10.1109/5.317082. [CrossRef] [Google Scholar]\n\n54. Herrero O.R., Foti G., Gallinaro G. Spread-spectrum techniques for the provision of packet access on the reverse link of next-generation broadband multimedia satellite systems. IEEE J. Sel. Areas Commun. 2004;22:574–583. doi: 10.1109/JSAC.2004.823440. [CrossRef] [Google Scholar]\n\n55. Abramson N. Spread Aloha CDMA Data Communications. 5,537,397. US Patent. 1996 Jul 16;\n\n56. Goursaud C., Mo Y. Random unslotted time-frequency aloha: Theory and application to iot unb networks; Proceedings of the 2016 23rd International Conference on Telecommunications (ICT); Thessaloniki, Greece. 16–18 May 2016; pp. 1–5. [CrossRef] [Google Scholar]\n\n57. Crowther W., Rettberg R., Walden D., Ornstein S., Heart F. A system for broadcast communication: Reservation-ALOHA; Proceedings of the International Conference on Systems Sciences; Honolulu, HI, USA. 9–11 January 1973; pp. 371–374. [Google Scholar]\n\n58. Lam S.S. Packet Broadcast Networks? A Performance Analysis of the R-ALOHA Protocol. IEEE Trans. Comput. 1980;C-29:596–603. doi: 10.1109/TC.1980.1675630. [CrossRef] [Google Scholar]\n\n59. Bianchi G., Fratta L., Oliveri M. Performance evaluation and enhancement of the CSMA/CA MAC protocol for 802.11 wireless LANs; Proceedings of the PIMRC ’96—7th International Symposium on Personal, Indoor, and Mobile Communications; Taipei, Taiwan. 18 October 1996; pp. 392–396. [CrossRef] [Google Scholar]\n\n60. Cawood A.D., Wolhuter R. Comparison and optimisation of CSMA/CA back-off distribution functions for a low earth orbit satellite link; Proceedings of the AFRICON 2007; Windhoek, South Africa. 26–28 September 2007; pp. 1–8. [CrossRef] [Google Scholar]\n\n61. Demirkol I., Ersoy C., Alagoz F. MAC protocols for wireless sensor networks: A survey. IEEE Commun. Mag. 2006;44:115–121. doi: 10.1109/MCOM.2006.1632658. [CrossRef] [Google Scholar]\n\n62. Luan P., Zhu J., Gao K. An improved TDMA access protocol in LEO satellite communication system; Proceedings of the 2016 IEEE International Conference on Signal Processing, Communications and Computing (ICSPCC); Hong Kong, China. 5–8 August 2016; pp. 1–4. [CrossRef] [Google Scholar]\n\n63. Morlet C., Alamanac A.B., Gallinaro G., Erup L., Takats P., Ginesi A. Introduction of mobility aspects for DVB-S2/RCS broadband systems. Space Commun. 2007;21:5–17. [Google Scholar]\n\n64. Mengali A., De Gaudenzi R., Arapoglou P.D. Enhancing the physical layer of contention resolution diversity slotted ALOHA. IEEE Trans. Commun. 2017;65:4295–4308. doi: 10.1109/TCOMM.2017.2696952. [CrossRef] [Google Scholar]\n\n65. Liva G. Graph-based analysis and optimization of contention resolution diversity slotted ALOHA. IEEE Trans. Commun. 2011;59:477–487. doi: 10.1109/TCOMM.2010.120710.100054. [CrossRef] [Google Scholar]\n\n66. Paolini E., Liva G., Chiani M. Coded slotted ALOHA: A graph-based method for uncoordinated multiple access. IEEE Trans. Inf. Theory. 2015;61:6815–6832. doi: 10.1109/TIT.2015.2492579. [CrossRef] [Google Scholar]\n\n67. Bui H.C., Lacan J., Boucheret M.L. An enhanced multiple random access scheme for satellite communications; Proceedings of the Wireless Telecommunications Symposium 2012; London, UK. 18–20 April 2012; pp. 1–6. [CrossRef] [Google Scholar]\n\n68. De Gaudenzi R., del Rio Herrero O., Gallinaro G. Enhanced spread Aloha physical layer design and performance. Int. J. Satell. Commun. Netw. 2014;32:457–473. doi: 10.1002/sat.1078. [CrossRef] [Google Scholar]\n\n69. Jamali-Rad H., Campman X. Internet of Things-based wireless networking for seismic applications. Geophys. Prospect. 2018;66:833–853. doi: 10.1111/1365-2478.12617. [CrossRef] [Google Scholar]\n\n70. Verspieren Q., Obata T., Nakasuka S. Innovative approach to data gathering in remote areas using constellations of store and forward communication cubesats; Proceedings of the 31st International Symposium on Space Technology and Science; Matsuyama, Japan. 3–6 June 2017. [Google Scholar]\n\n71. Doroshkin A., Zadorozhny A., Kus O., Prokopyev V., Prokopyev Y. Laboratory testing of LoRa modulation for CubeSat radio communications. MATEC Web Conf. 2018;158:01008. doi: 10.1051/matecconf/201815801008. [CrossRef] [Google Scholar]\n\n72. Sanchez-Iborra R., Cano M.D. State of the art in LP-WAN solutions for industrial IoT services. Sensors. 2016;16:708. doi: 10.3390/s16050708. [PMC free article] [PubMed] [CrossRef] [Google Scholar]\n\n73. Akpakwu G.A., Silva B.J., Hancke G.P., Abu-Mahfouz A.M. A survey on 5G networks for the Internet of Things: Communication technologies and challenges. IEEE Access. 2018;6:3619–3647. doi: 10.1109/ACCESS.2017.2779844. [CrossRef] [Google Scholar]\n\nArticles from Sensors (Basel, Switzerland) are provided here courtesy of Multidisciplinary Digital Publishing Institute (MDPI)"
    }
}