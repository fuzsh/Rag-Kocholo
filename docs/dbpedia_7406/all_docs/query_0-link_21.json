{
    "id": "dbpedia_7406_0",
    "rank": 21,
    "data": {
        "url": "https://wiki.opendaylight.org/display/ODL/P4%2BPlugin%2BProposal",
        "read_more_link": "",
        "language": "en",
        "title": "P4 Plugin Proposal",
        "top_image": "https://wiki.opendaylight.org/s/-c3rhs9/9103/1q7egw3/1/_/favicon.ico",
        "meta_img": "https://wiki.opendaylight.org/s/-c3rhs9/9103/1q7egw3/1/_/favicon.ico",
        "images": [
            "https://wiki.opendaylight.org/download/attachments/330224/ODL?version=1&modificationDate=1626799891130&api=v2",
            "https://wiki-archive.opendaylight.org/images/6/6b/PISA.png",
            "https://wiki-archive.opendaylight.org/images/d/d9/P4-ODL.png",
            "https://wiki-archive.opendaylight.org/images/5/57/P4-Plugin.png",
            "https://wiki-archive.opendaylight.org/images/d/d5/P4_Plugin_Workflow.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Manish Kumar Barnwal"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/s/-c3rhs9/9103/1q7egw3/1/_/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://wiki.opendaylight.org/display/ODL/P4+Plugin+Proposal",
        "text": "Name\n\nP4 Plugin\n\nRepo Name\n\np4plugin\n\nDescription\n\nWhat's P4?\n\nP4 is a high-level language for expressing how packets are processed by the pipeline of a network forwarding element such as a switch, network processing units, software switches (bmv2) and etc. P4 itself is protocol independent but allows for the expression of forwarding plane protocols. It is based upon an abstract forwarding model called PISA (Protocol Independent Switch Architecture) as shown in the figure below. A machine that can run a P4 program is called target.\n\nP4 targets and Controller\n\nHow P4 targets work in conjunction with SDN controller? The channel between controller and P4 targets must be standardized and protocol independent. But currently, the channel haven't been standardized. Fortunately, a P4 API work group will be announced, they will standardize the API across P4 targets and use gRPC as the transport between controller and switch. But at the moment it is still a work in progress. The relationship between P4 target and controller is shown in the figure below.\n\nThe gRPC server translates the protobuf messages into PI(program-independent) library calls. PI is a control plane framework and tools for the P4 programming language. All of the P4 related code is available on Github at github.com/p4lang under Apache 2.0 license.\n\nP4 Plugin Architecture\n\nUtil now, the ODL controller is unable to manage P4 targets. The purpose of P4 Plugin project is to provide basic functions for P4 targets, such as common channel between controller and P4 targets, device management, table population, packet-in and packet-out process and etc. The architecture of P4 Plugin is illustrated in detail by the following figure .\n\nAll components are described in the following table.\n\nP4 Plugin Based Workflow\n\nAs the progress of the standardization is underway, the progress of our work is related to this standardization. We will use bmv2 software switch as P4 target due to the chips that support P4 are not commercially available. But in the future, the project can also be applied to devices. An example workflow is shown in the figure below.\n\nScope\n\nThe scope of this project is mostly about implementing an plugin in ODL, making controller be able to work in conjunction with P4 targets and populating tables, handling pack-in and packet-out and etc. Remember that P4 Plugin is focus on the functions in ODL controller, the gRPC server and PI library are not in the scope of P4 Plugin.\n\nResources Committed (developers committed to working)\n\nhuan.linying@zte.com.cn Username:Huanlinying\n\nding.rui@zte.com.cn Username:dingrui\n\nhan.jie@zte.com.cn Username:HanJie\n\nli.guosheng6@zte.com.cn Username:Aimingoo991\n\nchen.mingling@zte.com.cn Username:MerlinChan\n\nwang.senxiao@zte.com.cn Username:Wsx25289\n\ndingrui37@163.com Username:Magina\n\nInitial Committers\n\nhuan.linying@zte.com.cn Username:Huanlinying\n\nding.rui@zte.com.cn Username:dingrui\n\nVendor Neutral\n\nThe project is made from scratch, no vendor code, logos nor is anything included.\n\nMeets Board Policy (including IPR)\n\nNew Project. No Inbound Code Review required"
    }
}