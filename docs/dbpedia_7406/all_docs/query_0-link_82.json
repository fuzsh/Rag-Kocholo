{
    "id": "dbpedia_7406_0",
    "rank": 82,
    "data": {
        "url": "https://www.infoq.com/news/2019/09/apachecon-gosling-open-source/",
        "read_more_link": "",
        "language": "en",
        "title": "ApacheCon 2019 Keynote: James Gosling's Journey to Open Source",
        "top_image": "https://cdn.infoq.com/statics_s1_20240815071826/styles/static/images/logo/logo-big.jpg",
        "meta_img": "https://cdn.infoq.com/statics_s1_20240815071826/styles/static/images/logo/logo-big.jpg",
        "images": [
            "https://imgopt.infoq.com/fit-in/100x100/filters:quality(80)/presentations/bbc-micro/en/smallimage/JeremyRuston-small-1719922442759.jpg",
            "https://imgopt.infoq.com/fit-in/100x100/filters:quality(80)/presentations/architect-lessons/en/smallimage/GregorHohpe-small-1719839714642.jpg",
            "https://imgopt.infoq.com/fit-in/100x100/filters:quality(80)/presentations/incremental-data-processing/en/smallimage/SakethBhavani-small-1722860452431.jpg",
            "https://imgopt.infoq.com/fit-in/100x100/filters:quality(80)/podcasts/inclusive-leadership-sofware-engineering/en/smallimage/engineering-culture-podcast-logo-1722608555302.jpeg",
            "https://imgopt.infoq.com/fit-in/100x100/filters:quality(80)/presentations/platforms-empathy/en/smallimage/DavidStenglein-small-1721113746848.jpg",
            "https://imgopt.infoq.com/eyJidWNrZXQiOiAiYXNzZXRzLmluZm9xLmNvbSIsImtleSI6ICJ3ZWIvaGVhZGVyL2NvbmZlcmVuY2VzLzIwMjQvaWRzLW11bmljaC1kYXRlLndlYnAiLCJlZGl0cyI6IHsianBlZyI6IHsgInF1YWxpdHkiOjgwfX19",
            "https://imgopt.infoq.com/eyJidWNrZXQiOiAiYXNzZXRzLmluZm9xLmNvbSIsImtleSI6ICJ3ZWIvaGVhZGVyL2NvbmZlcmVuY2VzLzIwMjQvU0YtdG9wLmpwZyIsImVkaXRzIjogeyJqcGVnIjogeyAicXVhbGl0eSI6ODB9fX0=",
            "https://imgopt.infoq.com/eyJidWNrZXQiOiAiYXNzZXRzLmluZm9xLmNvbSIsImtleSI6ICJ3ZWIvaGVhZGVyL2NvbmZlcmVuY2VzLzIwMjUvbG9uZG9uLXRvcC5qcGciLCJlZGl0cyI6IHsianBlZyI6IHsgInF1YWxpdHkiOjgwfX19",
            "https://imgopt.infoq.com/eyJidWNrZXQiOiAiYXNzZXRzLmluZm9xLmNvbSIsImtleSI6ICJ3ZWIvaGVhZGVyL25ld3NsZXR0ZXItY292ZXIuanBlZyIsImVkaXRzIjogeyJqcGVnIjogeyAicXVhbGl0eSI6ODB9fX0=",
            "https://imgopt.infoq.com//fit-in/218x500/filters:quality(100)/filters:no_upscale()/sponsorship/topic/023c0dd1-e419-4b4b-b9aa-6db688843747/CamundaLogoRSB-1713370450059.png",
            "https://cdn.infoq.com/statics_s1_20240815071826/styles/static/images/ui/footer/infoq-podcast-small.jpg",
            "https://cdn.infoq.com/statics_s1_20240815071826/styles/static/images/ui/footer/engineering-culture-podcast-small.jpg",
            "https://cdn.infoq.com/statics_s1_20240815071826/styles/static/images/ui/footer/architects-newsletter-small.jpg",
            "https://www.facebook.com/tr?id=842388869148196&ev=PageView&noscript=1"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "apachecon gosling open source",
            "Development",
            "Architecture & Design",
            "Java",
            "Apache",
            "Open Source",
            ""
        ],
        "tags": null,
        "authors": [
            "Anthony Alford"
        ],
        "publish_date": "2019-09-12T00:00:00",
        "summary": "",
        "meta_description": "At the recent ApacheCon North America 2019 in Las Vegas, James Gosling delivered a keynote talk on his personal journey to open-source. Gosling's Key takeaways were: open source allows programmers to",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.infoq.com/statics_s1_20240815071826/favicon.ico",
        "meta_site_name": "InfoQ",
        "canonical_link": "https://www.infoq.com/news/2019/09/apachecon-gosling-open-source/",
        "text": "At the recent ApacheCon North America 2019 in Las Vegas, James Gosling delivered a keynote talk on his personal journey to open-source. Gosling's main takeaways were: open source allows programmers to learn by reading source code, developers must pay attention to intellectual property rights to prevent abuse, and projects can take on a life of their own.\n\nGosling, the inventor of the Java programming language, recounted a series of events in his career where he dealt with open-source issues before the concept was formalized and the use of open-source licensing became commonplace. His first encounter with software that was clearly open-source was at the University of Calgary in the 1970s. The university had received a magnetic tape from Nicholas Wirth that contained a Pascal compiler's binary and source code. The source was a single file: \"It was literally one function,\" according to Gosling. It was Gosling's first experience with a large program \"written by somebody who actually knew what they were doing.\" Wirth's code was simple, but understandable. Gosling was eventually hired to port Pascal to the Multics operating system, which he described as:\n\na fabulous operating system destroyed by corporate stupidity...if Multics had been open-source and not handled by clowns, Linux wouldn't have happened and Unix wouldn't have happened.\n\nThe next point along Gosling's journey was Simula, the world's first object-oriented programming language. Gosling had a copy of the Simula binary on tape, but the source was printed out on \"a stack of paper about 8 inches thick,\" written in assembler. Using Simula, he \"fell in love\" with OOP, and reading the source code helped him understand how it worked; for example, what a virtual function table was and how it worked. According to Gosling, these things were poorly documented; the first PhD thesis involving OOP, by Ivan Sutherland, contained one paragraph describing OOP. Gosling's own PhD thesis was \"a macro expansion of one half of one paragraph of [Sutherland's] thesis.\"\n\nGosling moved on to Carnegie Mellon University (CMU), which he described as \"an amazing place.\" While at CMU, Gosling coded a version of Emacs, because he had become familiar with the editor when working on Multics, and discovered in graduate school that \"vi sucks.\" With the adoption of BSD, Emacs grew in popularity, and Gosling began distributing his software on magnetic tape. Arpanet did exist, but the high-speed \"backbone\" links were 50kb/s.\n\nIf you've got a big piece of source code or a binary...a mag-tape and US Mail [would] beat the network every time.\n\nGosling didn't mind sharing his work but didn't want the generosity to be abused. He recounted a time when he was contacted by a business that wanted to ship Emacs with their mini-computers. \"Their letter was almost literally, 'You'll get famous and we'll get rich.'\" Eventually, Gosling decided that he had to find someone else to maintain Emacs so he could graduate. He found two coders to take it over, but they needed income. Gosling agreed that they could charge commercial customers, but universities must have it for free; again, he wanted his code to be shared, but he also wanted to protect maintainers from be abused.\n\nWhile working on his PhD, Gosling built a spreadsheet calculator called sc as an experiment to understand and improve the evaluation rules of Visicalc. Gosling spent a week on it and \"threw it over the wall\". The program is still available with Linux; the latest version was released in 2018. Gosling noted that sometimes projects like this disappear, but sometimes they find a life; it all depends on who finds them valuable.\n\nGosling eventually came to Sun Microsystems. Gosling said, \"In many ways, Sun was built on open-source, although getting the corporate lawyers happy with the whole concept was difficult.\" Sun's Solaris operating system was based on BSD, but at first Sun did not release their own software contributions under similar terms. Gosling described Java as a \"rocky road\" from the point of view of open-source. Java was released with source code \"from day 1,\" but the license was complex and messy. The license was an attempt to balance platform providers' desire to differentiate themselves (really, Gosling says, to become \"sticky\"), with developers' desire for their code to run.\n\nEventually, Java adopted the Gnu Public License (GPL). Gosling says this was \"a leap of faith for Sun,\" but in the end it was a success. Sun learned that the \"service and support\" revenue model could work, and that the marketing leverage of open-source was more important than licensing revenue. Sun eventually open-sourced everything, except Solaris. Gosling claims that Solaris \"couldn't make the leap\" due to people problems. It was making progress toward open-source, until the Oracle acquisition. Java, which was open-source, survived the transition; Solaris did not."
    }
}