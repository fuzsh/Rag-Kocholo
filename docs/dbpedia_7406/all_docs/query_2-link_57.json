{
    "id": "dbpedia_7406_2",
    "rank": 57,
    "data": {
        "url": "https://www.jrebel.com/blog/what-is-apache-tomcat",
        "read_more_link": "",
        "language": "en",
        "title": "What Is Apache Tomcat?",
        "top_image": "https://www.jrebel.com/sites/default/files/styles/social_preview_image/public/image/2020-08/image-blog-apache-tomcat.jpg?itok=HeOOrOBD",
        "meta_img": "https://www.jrebel.com/sites/default/files/styles/social_preview_image/public/image/2020-08/image-blog-apache-tomcat.jpg?itok=HeOOrOBD",
        "images": [
            "https://www.jrebel.com/sites/default/files/styles/teaser_image/public/image/2024-03/pr-jrebel-2024-report-600-400.jpg?itok=HgiKDni4",
            "https://www.jrebel.com/sites/default/files/image/2020-08/image-blog-apache-tomcat.jpg",
            "https://www.jrebel.com/sites/default/files/image/2024-05/Screenshot%202024-05-09%20at%204.04.35%E2%80%AFPM.png",
            "https://www.jrebel.com/sites/default/files/image/2022-03/install-Screenshot-2022-03-17-at-13.jpg",
            "https://www.jrebel.com/sites/default/files/image/2022-03/Screenshot-2022-03-17-at-13.50.jpg",
            "https://www.jrebel.com/sites/default/files/image/2020-07/Pavel_Fol_headshot_3_250x250.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "what is tomcat",
            "what is tomcat apache",
            "what is tomcat server"
        ],
        "tags": null,
        "authors": [
            "Pavel Fol"
        ],
        "publish_date": "2024-01-18T04:31:00-06:00",
        "summary": "",
        "meta_description": "In this blog, we answer \"What is Apache Tomcat,\" and explain how it works, and how it compares to WebLogic, Jetty, and Wildfly.",
        "meta_lang": "en",
        "meta_favicon": "/sites/rebel/themes/custom/rebel/images/favicons/favicon.ico",
        "meta_site_name": "JRebel by Perforce",
        "canonical_link": "https://www.jrebel.com/blog/what-is-apache-tomcat",
        "text": "Apache Tomcat is one of the top technologies in Java developers‚Äô tech stacks‚Äîand for good reason. According to the 2024 Java Developer Productivity Report, 36% of Java developers use Apache Tomcat as their application server.\n\nBut why is Apache Tomcat still popular in 2024, and how does the technology stack up against other application servers like Jetty, WebLogic, and Wildfly? In this blog, we give an overview of Apache Tomcat, including what it is, how it works, and why it continues to be a popular choice for Java users today.\n\nWhat Is Apache Tomcat?\n\nApache Tomcat is an open-source web server and Servlet container for Java code. It's a production-ready Java development tool used to implement many types of Jakarta EE (formerly known as Java EE) specifications. Apache Tomcat 10.1.18 is the current Tomcat release and is still undergoing active development.\n\nHistory of Apache Tomcat\n\nAs the reference implementation of Java Servlet and Java Server Pages (JSP), Tomcat was started at Sun Microsystems, which later donated the code base to the Apache Software Foundation in 1999.\n\nSince then, multiple volunteers from Sun and other organizations have contributed to the product, which then led to a top-level Apache project designation. Nowadays, Apache Tomcat is widely used by many companies as it implements many of the Jakarta EE specifications, such as:\n\nJava Servlet\n\nJavaServer Pages\n\nJava Expression Language\n\nJava WebSockets\n\nIs Tomcat an Application Server or a Web Server?\n\nTomcat is considered a web server instead of an application server because it functions as a web server and Servlet container. It doesn‚Äôt provide the full feature set from Jakarta EE, but that isn't necessarily a disadvantage.\n\nMany applications require the same set of features that Tomcat provides, so it doesn't make sense to select heavier tools. In any case, Tomcat is a production-ready tool.\n\nIs Tomcat Still Popular in 2024?\n\nAccording to our 2024 Java Developer Productivity Report, Apache Tomcat is used by 36% of Java teams. See the full data by downloading the report today.\n\nSource: 2024 Java Developer Productivity Report\n\nThis high usage rate is due to the fact that Apache Tomcat is a very lightweight tool‚Äîbut more importantly, it‚Äôs free. Apache Tomcat offers most of the basic functionality needed by many applications, has a fast startup time, and can be run in a number of different environments with minimal impact on resources.\n\nWant to know what your peers are using in their Java tech stacks? Find the answers in the 2024 Java Developer Productivity Report. Download your free copy today.\n\nGet the report\n\nIf you ever run into an issue with Apache Tomcat, the extensive documentation produced by the Apache Software Foundation will likely help you find a solution. And if you can‚Äôt find it there, the Java community more than likely will be able to help figure out the solution because it is an open-source tool. It's also important to note that Tomcat isn't a one size fits all solution for Java applications. Picking the right application server always depends on the needs presented by the application.\n\nHow Does Tomcat Work?\n\nTomcat is a platform-independent tool, and, as long there is Java installed, the installation is a straightforward process. You just need to download the desired version from the official website and then unpack it on your file system. You can verify that Tomcat is installed properly by running the server using a startup script in the $CATALINA_BASE/bin folder.\n\nOnce you start the server open your internet browser and navigate to URL http://localhost:8080 (if the default configuration is used). If you see a similar page as on the picture below, that means Tomcat was properly installed.\n\nDeploying the application on to the server is easy. Tomcat supports deployment on the startup, which means you copy compressed (.WAR) or non-compressed (exploded web application) to the right directory, which is $CATALINA_BASE/webapps/.\n\nIf you prefer deploying the application on the fly, you can deploy the application to a running Tomcat server in the Tomcat Web Application Manager GUI. All the deployed applications can be managed via the Manager App in the Tomcat.\n\nDeploying the application to the server is easy. Apache Tomcat supports deployment on the startup, which means you copy compressed (.WAR) or non-compressed (exploded web application) to the right directory, $CATALINA_BASE/webapps/.\n\nIf you prefer deploying the application on the fly, you can deploy the application to a running Tomcat server in the Tomcat Web Application Manager GUI. All the deployed applications can be managed via the Manager App in the Tomcat.\n\nüìï Related Resource: Need Tomcat Support? Talk to an Expert\n\nComparing Lightweight Servers: Tomcat vs. Jetty\n\nWhen it comes to lightweight servers, Apache Tomcat is most often compared to Jetty. Jetty is an HTTP server and Servlet container that is often used as an embedded server. For a long time, Jetty was the only tool capable of running in embedded mode. As of now, Tomcat is already capable of running in the embedded mode as well.\n\nBoth Apache Tomcat and Jetty are open source: Tomcat was developed under the Apache 2.0 open source license and the Jetty license was managed by the Eclipse Foundation and available with Apache 2.0 and Eclipse Public License 1.0.\n\nTomcat vs. Jetty\n\nWhile Apache Tomcat has a large market share and robust documentation, Jetty may be the better choice for applications with a low memory footprint.\n\nComparing Lightweight Servers: Tomcat vs. WebLogic Server\n\nThe full implementation of Jakarta EE standards is available in Oracle WebLogic Server. WebLogic is a commercial project currently developed by Oracle Corporation and thus requires a license to be used for commercial purposes.\n\nWebLogic has several benefits over Tomcat, in that it supports distributed transactions using transaction managers, supports Enterprise Java Beans, and offers other functionalities that make it a good choice for commercial and enterprise applications. In addition, WebLogic comes with a great administration console that makes the management of the server a seamless process.\n\nTomcat vs. Weblogic\n\nIf your application requires most or all the features of Jakarta EE and you need commercial support, WebLogic is the way to go despite the cost.\n\nComparing Lightweight Servers: Tomcat vs. Wildfly\n\nTomcat vs. Wildfly\n\nTomcat Benefits\n\nWildFly Benefits\n\nOpen source\n\nFull Java EE application server for free (WildFly)\n\nQuick start and redeploys\n\nCommercial support (JBoss EAP\n\nJava EE 8 certified\n\nFinal Thoughts on Apache Tomcat\n\nChoosing the right application server can be a tough decision for Java development teams. Consider the needs of the application‚Äînow and in the future‚Äîso you don‚Äôt select a tool that offers more than the application needs. This can add unwanted loads to memory, startup times, and configuration.\n\nIf you‚Äôre not sure which application server is sufficient for your Java development environment, you can start with Tomcat and see if it meets the needs of your application.\n\nWhile Apache Tomcat is not really a ‚Äúpure‚Äù application server, comparing it with the other tools mentioned above should give you insight into how each tool should be applied. Looking for further efficiency in your Java development practice? Try JRebel. By eliminating redeploys, your team could save a month of Java development time annually.\n\nSee how much time your team could save during your 14-day free trial.\n\nTry free\n\nEditor's Note: This blog was originally published in March 2022 and has been updated for clarity and relevance."
    }
}