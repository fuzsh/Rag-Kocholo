{
    "id": "dbpedia_4518_3",
    "rank": 40,
    "data": {
        "url": "http://web.stanford.edu/class/cs101/bits-bytes.html",
        "read_more_link": "",
        "language": "en",
        "title": "Bits and Bytes",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://web.stanford.edu/class/cs101/hardware-letter-byte.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "At the smallest scale in the computer, information is stored as bits and bytes. In this section, we'll learn how bits and bytes encode information.\n\nBit\n\na \"bit\" is atomic: the smallest unit of storage\n\nA bit stores just a 0 or 1\n\n\"In the computer it's all 0's and 1's\" ... bits\n\nAnything with two separate states can store 1 bit\n\nIn a chip: electric charge = 0/1\n\nIn a hard drive: spots of North/South magnetism = 0/1\n\nA bit is too small to be much use\n\nGroup 8 bits together to make 1 byte\n\nEverything in a computer is 0's and 1's. The bit stores just a 0 or 1: it's the smallest building block of storage.\n\nByte\n\nOne byte = collection of 8 bits\n\ne.g. 0 1 0 1 1 0 1 0\n\nOne byte can store one character, e.g. 'A' or 'x' or '$'\n\nHow Many Patterns With N Bits? (demo)\n\nHow many different patterns can be made with 1, 2, or 3 bits?\n\nNumber of bits Different Patterns 1 0 1 2 00 01 10 11 3 000 001 010 011\n\n100 101 110 111\n\n3 bits vs. 2 bits\n\nConsider just the leftmost bit\n\nIt can only be 0 or 1\n\nLeftmost bit is 0, then append 2-bit patterns\n\nLeftmost bit is 1, then append 2-bit patterns again\n\n3-bits has twice as many patterns as 2-bits\n\nNumber of bits Different Patterns 1 0 1 2 00 01 10 11 3 000 001 010 011\n\n100 101 110 111\n\nIn general: add 1 bit, double the number of patterns\n\n1 bit - 2 patterns\n\n2 bits - 4\n\n3 bits - 8\n\n4 bits - 16\n\n5 bits - 32\n\n6 bits - 64\n\n7 bits - 128\n\n8 bits - 256 - one byte\n\nMathematically: n bits yields 2n patterns (2 to the nth power)\n\nOne Byte - 256 Patterns (demo)\n\n1 byte is group of 8 bits\n\n8 bits can make 256 different patterns\n\nHow to use the 256 patterns?\n\nHow to store a number in a byte?\n\nStart with 0, go up, one pattern per number, until run out of patterns\n\n0, 1, 2, 3, 4, 5, ... 254, 255\n\nOne byte can hold a number between 0 and 255\n\ni.e. with 256 different patterns, we can store a number in the range 0..255\n\nReally good for storing characters/letters.\n\nBytes\n\n\"Byte\" - unit of information storage\n\nA document, an image, a movie .. how many bytes?\n\n1 byte is enough to hold about 1 typed character, e.g. 'b' or 'X' or '$'\n\nAll storage is measured in bytes, despite being very different hardware\n\nKilobyte, KB, about 1 thousand bytes Megabyte, MB, about 1 million bytes Gigabyte, GB, about 1 billion bytes Terabyte, TB, about 1 trillion bytes (rare)\n\nBytes and Characters - ASCII Code\n\nASCII is an encoding representing each typed character by a number\n\nEach number is stored in one byte (so the number is in 0..255)\n\nA is 65\n\nB is 66\n\na is 96\n\nspace is 32\n\n\"Unicode\" is an encoding for mandarin, greek, arabic, etc. languages, typically 2-bytes per \"character\"\n\nTyping, Bytes, and You\n\nEach letter is stored in a byte, as below\n\n100 typed letters takes up 100 bytes\n\nWhen you send, say, a text message, the numbers are sent\n\nText is quite compact, using few bytes, compared to images etc.\n\nNumbers in Computers"
    }
}