{
    "id": "dbpedia_4810_1",
    "rank": 91,
    "data": {
        "url": "https://www.mailersend.com/help/how-to-start-sending-emails",
        "read_more_link": "",
        "language": "en",
        "title": "How to Start Sending Emails With MailerSend",
        "top_image": "https://www.mailersend.com/img/asset/Z2NzL3NvY2lhbF9pbWFnZXMvaG93LXRvLXN0YXJ0LXNlbmRpbmctZW1haWxzLW9nLTE2NTI0NTMzMTUucG5n?w=1200&h=630&fit=crop&s=a6d9a3d9c1aedf2ca5d1f178c1205e7d",
        "meta_img": "https://www.mailersend.com/img/asset/Z2NzL3NvY2lhbF9pbWFnZXMvaG93LXRvLXN0YXJ0LXNlbmRpbmctZW1haWxzLW9nLTE2NTI0NTMzMTUucG5n?w=1200&h=630&fit=crop&s=a6d9a3d9c1aedf2ca5d1f178c1205e7d",
        "images": [
            "https://www.mailersend.com/images/logo.svg",
            "https://storage.googleapis.com/mailersend-website/icons/box.svg",
            "https://storage.googleapis.com/mailersend-website/icons/mail.svg",
            "https://storage.googleapis.com/mailersend-website/icons/smile.svg",
            "https://storage.googleapis.com/mailersend-website/icons/inbound-emails.svg",
            "https://storage.googleapis.com/mailersend-website/icons/check-circle.svg",
            "https://storage.googleapis.com/mailersend-website/icons/users.svg",
            "https://storage.googleapis.com/mailersend-website/icons/globe.svg",
            "https://storage.googleapis.com/mailersend-website/icons/shield-check.svg",
            "https://storage.googleapis.com/mailersend-website/icons/chart.svg",
            "https://storage.googleapis.com/mailersend-website/icons/ios-app.svg",
            "https://storage.googleapis.com/mailersend-website/icons/darg-n-drop.svg",
            "https://storage.googleapis.com/mailersend-website/icons/grid.svg",
            "https://storage.googleapis.com/mailersend-website/icons/file-list.svg",
            "https://storage.googleapis.com/mailersend-website/icons/wallet.svg",
            "https://storage.googleapis.com/mailersend-website/icons/smartphone.svg",
            "https://storage.googleapis.com/mailersend-website/icons/cloud.svg",
            "https://storage.googleapis.com/mailersend-website/icons/shopping-cart.svg",
            "https://storage.googleapis.com/mailersend-website/icons/bank.svg",
            "https://storage.googleapis.com/mailersend-website/icons/smartphone.svg",
            "https://storage.googleapis.com/mailersend-website/icons/discuss.svg",
            "https://storage.googleapis.com/mailersend-website/icons/folders-2.svg",
            "https://storage.googleapis.com/mailersend-website/icons/notification-badge.svg",
            "https://storage.googleapis.com/mailersend-website/icons/file.svg",
            "https://storage.googleapis.com/mailersend-website/icons/inbound-emails.svg",
            "https://storage.googleapis.com/mailersend-website/icons/webhook.svg",
            "https://storage.googleapis.com/mailersend-website/icons/book.svg",
            "https://storage.googleapis.com/mailersend-website/icons/help.svg",
            "https://storage.googleapis.com/mailersend-website/icons/file-list.svg",
            "https://storage.googleapis.com/mailersend-website/icons/file.svg",
            "https://storage.googleapis.com/mailersend-website/icons/user.svg",
            "https://storage.googleapis.com/mailersend-website/icons/file-mark.svg",
            "https://storage.googleapis.com/mailersend-website/icons/box.svg",
            "https://storage.googleapis.com/mailersend-website/icons/integrations.svg",
            "https://storage.googleapis.com/mailersend-website/icons/server.svg",
            "https://storage.googleapis.com/mailersend-website/icons/map-pin.svg",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvc210cC5wbmc=?fm=webp&s=36a1fa61f5ca42c090417fda9aed55b4",
            "https://www.mailersend.com/img/asset/Z2NzL2hlbHAva2ItdXBkYXRlL3N0YXJ0LWZpbGVtLWRrLmpwZw==?fm=webp&s=233d90e3175c816f8c0e9ec0fd3d03ba",
            "https://www.mailersend.com/img/asset/Z2NzL2hlbHAva2ItdXBkYXRlL3N0YXJ0LXRlbXBsYXRlLWRrLmpwZw==?fm=webp&s=71798cfc1243aba0009cc48e3f763e85",
            "https://www.mailersend.com/img/asset/Z2NzL2hlbHAva2ItdXBkYXRlL3N0YXJ0LXRlbXBsYXRlLWRldGFpbC1kay5qcGc=?fm=webp&s=1d24b0c060b98d47ad57bbd06530a89a",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2U0LTE2MzU0OTE2NzQucG5n?fm=webp&s=15e2cb5e64efe3a7a169db10f5365335",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2UxLTE2MzU0OTE3NDIucG5n?fm=webp&s=5e2f5ddeb03b66560115331ff0654a97",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2UxMS0xNjM1NDkxNzgyLnBuZw==?fm=webp&s=7e96c3058bc48d535bc5d7b6a3298ed6",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2UxMC0xNjM1NDkxODUwLnBuZw==?fm=webp&s=4737cd86cf3e402a18a731196c66e09b",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2U2LTE2MzU0OTE5NDYucG5n?fm=webp&s=91ae0608f893079382430cd77404ef6b",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2U5LTE2MzU0OTIwMTMucG5n?fm=webp&s=947992d7a0a82874aea3377316c5377f",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2UyLTE2MzU0OTIxMTMucG5n?fm=webp&s=e21756b0c3114737ebb57a1dd2e7f934",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2UzLTE2MzU0OTIyMDcucG5n?fm=webp&s=bc459b958b9a3dfb2d118bcfbddae8c7",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2U1LTE2MzU0OTIzNTQucG5n?fm=webp&s=031e580d913065dd10d5658e22ac7fc6",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2U4LTE2MzU0OTI0MjEucG5n?fm=webp&s=5e76143eee9d11998d3a808d49e28541",
            "https://www.mailersend.com/img/asset/Z2NzL2Jsb2cvaW1hZ2U3LTE2MzU0OTI0NjYucG5n?fm=webp&s=e7336f43926875bddc60504c6e422cb5",
            "https://track.mailerlite.com/webforms/o/1728856/x4y7u4?v4a60e9ef938a7fa0240ac9ba567062cb",
            "https://www.mailersend.com/images/footer-secure-payments-1.png",
            "https://www.mailersend.com/images/footer-secure-payments-2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "how to start sending transactional emails"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Learn how to start sending emails with MailerSend. Find information on how to configure your SMTP settings, create an API token and more.",
        "meta_lang": "en",
        "meta_favicon": "/favicon/favicon.svg",
        "meta_site_name": "MailerSend",
        "canonical_link": "https://www.mailersend.com/help/how-to-start-sending-emails",
        "text": "When testing MailerSend for the first time, you can send emails using the trial domain or any verified domain you have added on your account. Check our article on How to verify and authenticate a sending domain for further instructions.\n\nMake sure you check our developer documentation, where you can find all available parameters that help you send better and more complex emails through MailerSend.\n\nSend emails using the API\n\nOnce you have verified your domain in MailerSend, follow these steps:\n\nNavigate to the Domains page and click Manage next to the desired domain.\n\nCreate an API token.\n\nWhen your API token is ready, and scroll down to the Advanced settings section of the page. Under API instructions, you’ll find a few examples of how to send your emails using cURL, PHP, Laravel, Java, Ruby, Node.js, Go and Python.\n\nThe easiest way to start sending emails is by copying and pasting the cURL command into your terminal by sending a POST request to https://api.mailersend.com/v1/email.\n\nAdditionally, any email has to be sent with a FROM address matching the verified domain or an associated subdomain.\n\nOnce you send your first email, you can check the status of your message in the Activity tab.\n\nHow to send emails using SMTP\n\nCheck that your domain is verified in MailerSend, then follow these steps:\n\nNavigate to the Domains page.\n\nFind the domain from which you want to send emails via SMTP and click Manage.\n\nScroll down to SMTP\n\nClick Generate new user.\n\nBy creating SMTP users, the following information will be automatically generated:\n\nUsername\n\nPassword\n\nYou will be required to enter this information into your content management system either directly or via a plugin. Either way, all systems will require you to enter your Server (SMTP host), Port, Username and Password.\n\nFind more information about sending emails with the SMTP relay.\n\nAfter sending your first email, you can check the status of your message in the Activity tab.\n\nAdditionally, any email has to be sent with a FROM address matching the verified domain or an associated subdomain.\n\nHow to add CC and BCC recipients\n\nCC and BCC recipients can be included in emails sent both via API or SMTP.\n\nTo include CC and BCC recipients in your sending, simply copy the recipients' block:\n\n\"to\": [ { \"email\": \"info@mailersend.com\" } ]\n\nand replace “to” with one of the following parameters.\n\nJSON parameter\n\nType\n\nRequired\n\nFree, Starter, Professional accounts\n\nEnterprise accounts\n\ncc\n\nobject [ ]\n\nNo\n\nMax 10\n\nMax 50\n\nbcc\n\nobject [ ]\n\nNo\n\nMax 10\n\nMax 50\n\nCC and BCC example\n\n\"from\": { \"email\": \"hello@example.com\" }, \"to\": [ { \"email\": \"recipient1@gmail.com\" } ], \"cc\": [ { \"email\": \"recipient2@gmail.com\" }, { \"email\": \"recipient3@gmail.com\" }, { \"email\": \"recipient4@gmail.com\" }, { \"email\": \"recipient5@gmail.com\" } ], \"bcc\": [ { \"email\": \"recipient6@gmail.com\" } ]\n\n\"To\" recipients are able to see each other\n\nTransactional emails are messages that are automatically sent to users in response to specific actions, such as signing up for a service, making a purchase, or resetting a password.\n\nThe “to” parameter specifies the recipient(s) of the transactional email. Since these emails are often sent one at a time, it's common to have a single recipient specified in the “to” field. However, it's also possible to specify multiple recipients, for example, if you're sending a notification to a group of users.​\n\nWhen multiple recipients are specified in the “to” field, each recipient will be able to see the email addresses of the other recipients. This is because MailerSend is designed for transactional emailing, where it's common and expected for recipients to see each other's email addresses.\n\nIf you wish to send an email where recipients can't see each others' addresses, add them as BCC recipients.\n\nDuplicated recipients\n\nYou may have received this error when sending an email: “{recipient email} is being duplicated in the to recipients list.”\n\nTo avoid this error in the future, please ensure any unique recipient email address is added just once to the 'to' recipients list. If you want to send more than one copy of an email to the same recipient, you can use the CC and BCC fields.\n\nYou can find more information on the available request parameters for our email endpoint here.\n\nAlternatively, you can enable the Ignore duplicated recipients setting in MailerSend. Once turned on, this will prevent emails from being sent to duplicated recipients in your API request(s). You can enable this by:\n\n1. Navigating to your domain in MailerSend (https://app.mailersend.com/domains) and hitting Manage\n\n2. Scrolling towards the bottom till you come across the Advanced settings pane and hitting the More settings button.\n\n3. Toggle on Ignore duplicated recipients.\n\nHow to add media and attachment files\n\nThere are 4 different JSON parameters that you can use to add media and attachment files into your emails sent via API, which you can find on our Developer documentation.\n\nYou can send attachments such as PDF files, Office documents, images, zip files, video files, and more. The attachment file must be less than 25MB in size.\n\nTo send an attachment, you can:\n\nUpload a file to your File manager (or host your file on any other server) and use its URL in the response body of the API call. This would redirect the recipients to open a new tab where the file can be downloaded.\n\nTo open your File manager, open the account menu in the bottom left of the screen and select the respective option.\n\nUse Base64 to encode your file and include it within a JSON parameter.\n\nHere is an example of how a JSON parameter could look in the response body of an API call:\n\n{ \"attachments\": [ { \"content\": \"iVBORw0KGgoAAAANSUhEUgAAC0AAAAcICAYAAACv5EAVAAAEGWlDQ1\", \"filename\": \"logo.png\", \"id\": \"logo.png\" } ] }\n\nHow to add triggers and automations via Zapier\n\nZapier is a web-based application that allows you to connect hundreds of different applications with one another.\n\nIn MailerSend, you can use both API and webhooks to connect to Zapier, which you can find on the management page of each Domain. Zapier uses our API to execute action events and webhooks to create trigger events.\n\nTo create an API token, head to Domains and select the domain you want to use. On the domain’s page, you will find the API section where you can create and manage each entry.\n\nThere are 7 trigger events:\n\nEmail is sent\n\nEmail is delivered\n\nEmail is opened\n\nEmail is clicked\n\nEmail is soft-bounced\n\nEmail is hard-bounced\n\nRecipient has unsubscribed\n\nThere are 2 action events:\n\nSend an email\n\nSend a template-based email\n\nFor a more detailed exploration of what you can do with MailerSend, check the How to create automations with Zapier article.\n\nHow to personalize your emails\n\nYou can generate dynamic content for each recipient when sending emails using the Email API endpoint to personalize your emails in the subject, html, and text fields.\n\nKeep in mind that:\n\nAdvanced personalization only compiles the template if personalization data is passed via Email API\n\nIt is cached server-side, but the hash is calculated based on content, so it will reset with every change\n\nVariables\n\nVariables should begin with double curly brackets {{ followed by the name of the variable and closed with double opposite curly brackets }} as so: {{variable}}\n\nWhen using a variable, keep in mind that:\n\nIt must be enclosed within double curly brackets {{variable}}\n\nIt may contain alphanumeric characters and underscores (_)\n\nIt must not start with a number or underscore\n\nIt is case-sensitive, which means that {{VAR}} is different from {{var}}\n\nConditional statement\n\nYou can show different content to each recipient if they meet a specific condition.\n\nThe conditional statement should always be included between the {% %} block. It should start with the if keyword, followed by the statement being tested, and end with the endif keyword.\n\nIt’s also possible to nest if statements inside one another, including the use of the elseif and else keywords before endif, although not necessary.\n\nFor example, let’s say you’re letting your recipients know you’re having a sale of a specific item and only have limited stock. To point out whether the item is still available for sale or not, you could write the following piece of code:\n\n{% if boolean == true %} Available {% elseif number > 0 %} Only {{number}} left! {% else %} Sold-out! {% endif %}\n\nThe output of this code would show Available if there’s enough stock, Only number left if there’s a shortage of items, or Sold-out! if there aren’t any items left in stock.\n\nYou can also use filters, which modify something in the value of the variable. They are separated from the variable by the pipe symbol |.\n\nThe filters you can use are escape, length, lower, upper, and keys.\n\nAn example of using the length filter could be:\n\n{% if users|length > 10 %} ... {% endif %}\n\nForeach\n\nYou can print the data of an array, or a collection of data, by looping through each of its items.\n\nThe loop should be included between the {% %} block, start with the for keyword and end with the endfor keyword.\n\nYou can also use filters, which modify something in the value of the variable. They are separated from the variable by the pipe symbol |.\n\nThe filters you can use are escape, length, lower, upper, and keys.\n\nFor example, let’s say you want to print out a grocery shopping list. You could use the following piece of code:\n\n{% if array|length > 0 %} <ul> {% for value in array %} <li>{{value}}</li> {% endfor %} </ul> {% endif %}\n\nThe final result would render:\n\nPotatoes\n\nRice\n\nBeans\n\nHow to use MailerSend templates\n\nTo explore the pre-made templates or create your own:\n\nHead to Templates.\n\nClick Create template.\n\nChoose whether you want to write or import your HTML template, use our Rich-text editor or our Drag & drop editor.\n\nOnce you are satisfied with the email design, name the template and click on Save changes.\n\nYou can find the Sending instructions at the bottom of the template's page, for which cURL, PHP, Laravel, Java, Ruby, Node, Go, and Python can be used.\n\nEach template has its own ID, which you can find in 2 places:\n\nOn the main Templates page, under the template’s name\n\nIn the right-side column of the Template page\n\nThe template ID is already included within the sending instructions; copy the ones for your language of choice.\n\nHow to use custom fonts in templates\n\nTo use a custom font in your email template using the drag & drop editor or HTML editor:\n\nPick a web safe font or a web font, for example, from Google Fonts.\n\nIf using Google Fonts, click + Select this style next to the font to open a side panel.\n\nDrag & drop editor\n\nTo use a custom font with the drag & drop editor:\n\nIn Google Fonts, select <link> and copy the code.\n\nIn MailerSend, insert a code block below the Block Preheader and paste the code in the Custom HTML code field.\n\nAdd the following code to the one that you just pasted:\n\n<style>p { !important }</style>\n\nGo back to the Google Fonts page and copy the code under CSS rules to specify families.\n\nPaste the code between the curly brackets { } and before !important like this:\n\n<style>p {font-family: 'Roboto', sans-serif; !important } </style>\n\nTo use the custom font throughout the template—including the text, headings, and buttons—replace the p with an asterisk * like this:\n\n<style>* {font-family: 'Roboto', sans-serif; !important }</style>\n\nWrite the text for your email template, enclosing them in <p> tags.\n\nHTML editor\n\nFor the HTML editor, you can either use the <link> or @import tags from Google Fonts.\n\nIf you’re using the <link> tag:\n\nCopy the <link> tag from Google Fonts and paste it inside the <head> part of your template in MailerSend.\n\nThen define the font family by adding the following code to the <style> tag:\n\n<style type=”text/css”>body {font-family: 'Roboto', sans-serif;}</style>\n\nYour template will now display the custom font for the body of your email.\n\nIf you’re using the @import tag:\n\nCopy the @import tag from Google Fonts and paste inside the <head> part of your template in MailerSend.\n\n2. Then define the font family by adding the following code to the <style> tag:\n\nbody {font-family: 'Roboto', sans-serif;}\n\nYour template will now display the custom font for the body of your email.\n\nHow to troubleshoot emails not sending\n\nWhen trying to send an email via an API request or an SMTP relay server, you may come across an error that prevents the email from being sent or received.\n\nTo start troubleshooting both API and SMTP connections:\n\nCheck the FROM email you're sending from. It must match the verified domain that the API token or SMTP credentials belong to\n\nCheck your credentials. Your API token or your SMTP credentials must be valid and authorized before you can start sending emails\n\nTo start troubleshooting API requests:\n\nMake sure you're providing either a valid HTML, a text version, or a template ID. One of these three parameters has to be included in your API request\n\nVerify that you’re using the correct API request, which should be POST https://api.mailersend.com/v1/email\n\nCheck that all of the JSON parameters in the body are properly enclosed and there aren’t any typos\n\nREST API response codes\n\nIf there’s an issue with successfully submitting an API request, you will get a numbered response code, which is specific to a client-side error. See all API response codes you might encounter on the Developers' documentation.\n\nThe most common ones are:\n\n400\n\nBad request\n\n401\n\nUnauthorized\n\n403\n\nForbidden\n\n405\n\nMethod not allowed\n\n408\n\nRequest timeout\n\n422\n\nUnprocessable entity - validation error\n\n422 - unprocessable entity\n\n422 errors can encompass multiple errors types, the most common include:\n\nRejected emails\n\nYou can also verify the status of the email by using the GET request with the ID of the email sent.\n\nWhat are MailerSend’s rate limits?\n\nRate limits restrict the number of requests a user can make per minute. They exist to protect shared servers from being abused by spammers—protecting the sender's reputation of all that server’s users.\n\nMailerSend rate limits\n\nMailerSend has a default rate limit on all endpoints. If you exceed that rate limit, you will receive a 429 error response with a “Too Many Attempts.” message. See all rate limits here.\n\nNeed more info?"
    }
}