{
    "id": "dbpedia_4810_1",
    "rank": 59,
    "data": {
        "url": "https://www.tiny.cloud/docs/tinymce/latest/upload-images/",
        "read_more_link": "",
        "language": "en",
        "title": "Handling image uploads",
        "top_image": "https://www.tiny.cloud/docs/_/img/favicon-32x32.png",
        "meta_img": "https://www.tiny.cloud/docs/_/img/favicon-32x32.png",
        "images": [
            "https://www.tiny.cloud/docs/_/img/tiny-white.svg",
            "https://www.tiny.cloud/docs/_/img/tiny-white-sm.png",
            "https://www.tiny.cloud/docs/_/img/banners/promo-box.svg",
            "https://www.tiny.cloud/docs/_/img/banners/roadmap-banner.svg",
            "https://www.tiny.cloud/docs/_/img/tiny-footer.svg",
            "https://www.tiny.cloud/docs/_/img/SOC2-compliance.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "uploader",
            "uploadImages",
            "image",
            "handler",
            "asynchronous",
            "async",
            "paste_data_images",
            "image",
            "cors"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "How to manage asynchronous image uploads.",
        "meta_lang": "en",
        "meta_favicon": "../../../_/img/apple-touch-icon.png",
        "meta_site_name": "",
        "canonical_link": "https://www.tiny.cloud/docs/tinymce/latest/upload-images/",
        "text": "This option lets you specify a URL for the server-side upload handler. Upload will get triggered whenever you call editor.uploadImages() or - automatically, if automatic_uploads option is enabled. Upload handler should return a new location for the uploaded file in the following format:\n\nBe sure to checkout a demo implementation of the server-side upload handler here (written in PHP).\n\nThis option allows you to specify a function that is used to replace TinyMCEâ€™s default JavaScript upload handler function with custom logic.\n\nand returns a Promise that will resolve with the uploaded image URL or reject with an error. The error can be either a string or an object containing the following properties:\n\nWhen this option is not set, TinyMCE utilizes an XMLHttpRequest to upload images one at a time to the server and resolves the Promise with the JSON location property for the remote image returned by the server.\n\nThis option lets you specify a basepath to prepend to URLs returned from the configured images_upload_url page.\n\nThe images_upload_credentials option specifies whether calls to the configured images_upload_url should pass along credentials (such as cookies, authorization headers, or TLS client certificates) for cross-domain uploads. When set to true, credentials will be sent to the upload handler, similar to the withCredentials property of XMLHttpRequest.\n\nBy default TinyMCE will generate unique filename for each uploaded file (for details refer to Upload Images). Sometimes this might have undesirable side-effects. For example, when automatic_uploads is enabled, every manipulation on the image done with the Image Editing plugin, results in file upload and each time under a different filename, despite the fact that the image stays the same.\n\nSetting images_reuse_filename to true tells TinyMCE to use the actual filename of the image, instead of generating a new one each time. Take into account that src attribute of the corresponding <img> tag gets replaced with whatever filename you send back from the server (see images_upload_url). It can be the same filename or something else, but the next time that filename is used for the upload."
    }
}