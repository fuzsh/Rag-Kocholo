{
    "id": "dbpedia_4810_1",
    "rank": 86,
    "data": {
        "url": "https://www.siteguru.co/seo-academy/wildcard-redirect",
        "read_more_link": "",
        "language": "en",
        "title": "What is Wildcard redirect?",
        "top_image": "https://www.siteguru.co/img/logo.png",
        "meta_img": "https://www.siteguru.co/img/logo.png",
        "images": [
            "https://www.siteguru.co/img/rocket-logo.svg",
            "https://siteguru.imgix.net/images/rick.jpg?q=70&w=50&fit=max&auto=format",
            "https://media.siteguru.co/images/cpanel-redirect.png",
            "https://media.siteguru.co/images/cPanel-Redirects.png",
            "https://media.siteguru.co/images/cPanel-Main.png",
            "https://media.siteguru.co/images/cPanel-File-Manager.png",
            "https://siteguru.imgix.net/images/rick.jpg?q=70&w=100&fit=max&auto=format",
            "https://www.siteguru.co/img/flags/en.svg",
            "https://www.siteguru.co/img/flags/nl.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "international clients",
            "owner of SiteGuru"
        ],
        "publish_date": "2020-08-11T21:22:43+00:00",
        "summary": "",
        "meta_description": "Learn how to optimize your website with wildcard redirects. Redirect all URLs in a folder on your site with wildcard redirects. Find out what wildcard means and why it's important.",
        "meta_lang": "en",
        "meta_favicon": "favicon.ico",
        "meta_site_name": "Siteguru",
        "canonical_link": "https://www.siteguru.co/seo-academy/wildcard-redirect",
        "text": "Wildcard redirect: What it is and why use it\n\nThere are moments when moving your site is inevitable. This could be due to a rebranding that involved a new domain name, a new CMS that uses a different URL structure or redirecting traffic to updated content.\n\nBut how do you make this process a breeze? How do you make sure the performance of your website on search engine results is not affected? How do you make sure your users never get the 404 errors?\n\nThis article explains how to move your site, or parts of your site, using a wildcard redirect.\n\nMore information about redirects in general\n\nWhat is a wildcard redirect?\n\nAlso commonly known as a \"catch-all subdomain\" or \"wildcard subdomain\", it is a redirecting option that allows browsers to reach your website no matter what subdomain they requested (www.yourdomain.tld, yourdomain,.tld or even anyname.yourdomain.tld) without having to set up specific directories for those requests in advance.\n\nCatch-all subdomains also allow browsers to redirect their request for a mistyped, non-existent, or random subdomain to a valid page on your site.\n\nFree SiteGuru trial\n\nRun a full SEO audit on your website\n\nStart free trial\n\nHow to do a wildcard redirect?\n\nHere are a few different ways that you can use wildcard redirects.\n\nUsing .htaccess for wildcard redirect\n\nThe .htaccess file is a configuration file for Apache servers. This file can contain many different settings like compression, caching, and can also be used for setting up wildcard redirects. Edit the file from your IDE, or using cPanel.\n\nThis method comes in handy when looking to do major redirects. For example, when planning to redirect a whole domain to another. It allows you to add redirects by directly modifying the .htaccess file manually.\n\nRedirecting individual files\n\nTo redirect seo.com/news.htm to seo.com/media.htm. below is the 301 redirect to use:\n\nRedirect 301 /news.htm /media.htm\n\nRedirecting entire folders\n\nExample: we've moved the /news section of our site to the /blog section. The structure within that folder remains the same. Here's how you redirect all traffic to the new location:\n\nRewriteEngine on\n\nRewriteRule ^old-folder/(.*)$ /new-folder/$1 [L,NC,R=301]\n\nThis will not only redirect /old-folder to /new-folder, but also /old-folder/article to /new-folder/article.\n\nThe R=301 command makes this a permanent redirect.Redirecting an old domain to a new domainRedirecting an old domain to a new domain\n\nRedirecting an old domain to a new domain\n\nExample: we want to redirect all traffic from our old domain old-seo.com to seo.com. It is good to note that doing this will move your entire website. Include the following code in the seo.com .htaccess:\n\nRewriteEngine on\n\nRewriteCond %{HTTP_HOST} ^seo.com [NC,OR]\n\nRewriteCond %{HTTP_HOST} www.seo.com [NC]\n\nRewriteRule ^(.*)$ http://seo.co/$1 [L, R=301,NC]\n\nRedirecting a specific file to another domain\n\nExample: we have moved a specific page to a new domain, and want to redirect all traffic to seo.com/news.htm to seo-new.com/media.htm. Below is the 301 redirect to use:\n\nRedirect 301 /news.htm http://seo-new.com/media.htm\n\nForcing the use of a www. version\n\nSearch engines see seo.com and www.seo.com as two different sites. It is recommended to choose one and use a 301 redirect to the one you pick. Here is the code you will use to force the www version:\n\nRewriteEngine on\n\nRewriteCond %{HTTP_HOST} ^seo.com [NC]\n\nRewriteRule ^(.*)$ https://www.seo.com/$1 [L, R=301,NC]\n\nForcing the use of a non-www. version\n\nIf instead of using the www version of a site, you want to use the non-www version, use this code:\n\nRewriteEngine on\n\nRewriteCond %{HTTP_HOST} ^www.seo.com [NC]\n\nRewriteRule ^(.*)$ https://seo.com/$1 [L, R=301,NC]\n\nRedirecting all files with a certain extension\n\nLet’s assume you want to redirect all files with a .php extension, from seo.com/file.php to seo.com/file.htm. Use this code:\n\nRewriteEngine on\n\nRewriteCond %{REQUEST_URI} .php$\n\nRewriteRule ^(.*).php$ /$1.htm [R=301,L]\n\nRedirecting files to SSL\n\nIn case you have added an SSL certificate to your website, it is a good idea to include 301 redirects that will send all HTTP traffic to HTTPS. By doing this, you make sure your users access non-duplicate and secure content.\n\nUse this code to redirect files to SSL:\n\nRewriteEngine On\n\nRewriteCond %{HTTPS} off\n\nRewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]\n\nRedirects and status codes\n\nAs you've seen in the lines of code above, you can specify the redirect status code (301 for Moved Permanently, 302 for Moved Temporarily) in the redirect code. If the move is permanent, always use the 301 status code. This helps search engines understand that this is the new URL, so they'll use that one from now on. It also means that the SEO value of the old URL is carrier over to the new URL.\n\nMore about status codes\n\nHow to use cPanel to perform wildcard redirect\n\nUsing cPanel is a great idea when you want to redirect traffic from one domain to another. This can be done at both the webpage level (seo.com/about.html to seo.com/about-us/htm) and domain level (seo.com to seo.co).\n\nNote that when you create a redirect in cPanel, a redirect rule is automatically included in the .htaccess file.\n\nRedirecting a full domain to a new one\n\nHere is what you need to do:\n\nLogin to cPanel\n\nGo to the “Domains” section\n\nTap the redirect button. This will open the Add Redirect page\n\nTap the “Type” dropdown\n\nSelect a permanent or temporary redirect\n\nTap the next dropdown menu\n\nChoose the domain you want to redirect\n\nYou can add essential folder names under the slash (/) field\n\nGo to the “redirects to” section and key in the address to which you want to redirect to\n\nChoose the desired redirect option (“only redirect with www”, “do not redirect www.”, and “redirect with or without www”\n\nTo create a wildcard redirect, check the box\n\nThe wildcard includes the file/folder name after the redirected URL, for instance, abc.com/tests.php redirects to ab.com/tests.php\n\nTap add when you are done.\n\nThe details of your redirect will pop up\n\nHow to use cPanel to change your .htaccess file\n\nIf you're using cPanel, here's how you can change the .htaccess file\n\nLog in to your cPanel\n\nGo to Files then File manager\n\nChoose website root folder\n\nIn the folder you can right-click and select \"Edit\"\n\nIf you do not have .htaccess file, already, you need to create one. Here is how to create it:\n\nTap “New File” on the top-left side\n\nName the file. Make sure the file is named .htaccess (don’t forget to add the dot at the beginning and to write the filename in lower case)\n\nSet the directory of the new .htaccess file to /public_html/ or your website’s document root\n\nIf your text editor displays an encoding dialog box, hit “edit.”\n\nOnce you have access to .htaccess file (or after creating a new one), here are some 301 redirects that you can implement to realize different goals.\n\nMaking a smooth transition\n\nWith those code snippets, you can accomplish a lot of redirection needs but to make everything clean (and avoid running around in a lot of circles), consider following these guidelines when setting up redirects:\n\nAvoid “stacking” redirects when possible. Doing that is slower, and is not recommended for SEO. Instead, redirect to the correct URL directly.\n\nBefore testing, make sure your hosting caches and local caches are cleared. Using a Chrome Incognito window is a good idea at this time because your browser will often cache redirects behind the scenes, hence preventing you from seeing changes to existing redirects instantly. If you are using a caching plugin, host-based cache, or Cloudflare cache, make sure that is clear too.\n\nIf you are getting too many redirect loops with the Redirection plugin, contact your host about redirecting with .htaccess. The regular expression formatting is similar, but using .htaccess can ensure the annoying redirects are executed before the WordPress ones, which usually resolve any pending issues.\n\nWrapping up\n\nMoving a website or domain can be tricky, and when not done correctly, significantly affect your SEO. It is a task that needs to be done cautiously and strategically, to avoid losing traffic and affecting your ranking on Google.\n\nUsing wildcard redirects makes this a breeze. They also come in handy when rebranding, not changing domains, or anything that may require a redirect. Most notably, wildcard SSL certificates will keep your website secure, especially after doing a wildcard subdomain redirect."
    }
}