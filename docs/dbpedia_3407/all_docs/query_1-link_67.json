{
    "id": "dbpedia_3407_1",
    "rank": 67,
    "data": {
        "url": "https://elifesciences.org/articles/57116",
        "read_more_link": "",
        "language": "en",
        "title": "shinyDepMap, a tool to identify targetable cancer genes and their functional connections from Cancer Dependency Map data",
        "top_image": "https://elifesciences.org/assets/images/social/icon-600x600@1.52e87ee6.png",
        "meta_img": "https://elifesciences.org/assets/images/social/icon-600x600@1.52e87ee6.png",
        "images": [
            "https://elifesciences.org/assets/patterns/img/patterns/organisms/elife-logo-xs@1x.f9b97bde.png",
            "https://elifesciences.org/assets/patterns/img/icons/corresponding-author@1x.075234c5.png",
            "https://iiif.elifesciences.org/lax/57116%2Felife-57116-fig1-v3.tif/full/617,/0/default.jpg",
            "https://iiif.elifesciences.org/lax/57116%2Felife-57116-fig2-v3.tif/full/617,/0/default.jpg",
            "https://iiif.elifesciences.org/lax/57116%2Felife-57116-fig3-v3.tif/full/617,/0/default.jpg",
            "https://iiif.elifesciences.org/lax/57116%2Felife-57116-fig4-v3.tif/full/617,/0/default.jpg",
            "https://iiif.elifesciences.org/lax/57116%2Felife-57116-fig5-v3.tif/full/617,/0/default.jpg",
            "https://iiif.elifesciences.org/lax/57116%2Felife-57116-fig6-v3.tif/full/617,/0/default.jpg",
            "https://elifesciences.org/assets/patterns/img/icons/orcid.e0a7f9de.png",
            "https://elifesciences.org/assets/patterns/img/icons/orcid.e0a7f9de.png",
            "https://elifesciences.org/assets/patterns/img/icons/orcid.e0a7f9de.png",
            "https://elifesciences.org/assets/patterns/img/icons/orcid.e0a7f9de.png",
            "https://elifesciences.org/assets/patterns/img/patterns/organisms/elife-logo-xs@1x.f9b97bde.png",
            "https://elifesciences.org/assets/images/investors/hhmi@1x.739f96c8.png",
            "https://elifesciences.org/assets/images/investors/wellcome@1x.b38198be.png",
            "https://elifesciences.org/assets/images/investors/max@1x.71f18cc3.png",
            "https://elifesciences.org/assets/images/investors/kaw@1x.d11d4f95.png",
            "https://elifesciences.org/assets/patterns/img/patterns/molecules/carbon-neutral.706efe6d.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Kenichi Shimada",
            "John A Bachman",
            "Jeremy L Muhlich",
            "Timothy J Mitchison"
        ],
        "publish_date": "2021-02-08T00:00:00",
        "summary": "",
        "meta_description": "shinyDepMap helps users explore the essentiality, selectivity, and function of the genes across hundreds of cancer cell lines and identify cancer drug targets.",
        "meta_lang": "en",
        "meta_favicon": "/assets/favicons/apple-touch-icon-57x57.c2b7763c.png",
        "meta_site_name": "eLife",
        "canonical_link": "https://elifesciences.org/articles/57116",
        "text": "The DepMap project (https://depmap.org/) provides two separate preprocessed genome-wide genetic perturbation datasets for hundreds of cell lines using either shRNA or CRISPR (Meyers et al., 2017; McFarland et al., 2018). In both datasets, the preprocessed scores represent the growth effects of knocking the gene down or out, with a strongly negative value in a particular cell line indicating essentiality. Though the preprocessing algorithms for the shRNA data take ‚Äòoff-target‚Äô genes into account when generating essentiality scores, we nevertheless expected that the essentiality profiles would differ somewhat between shRNA and CRISPR due to their distinct mechanisms of reducing gene expression.\n\nTo assess the consistency between CRISPR and shRNA dependency scores, we first compared the gene/cell line combinations tested with both methods (15,847 genes in 423 cell lines, Figure 1‚Äîsource data 1) and computed essentiality thresholds for each distribution such that a dependency score more negative than the threshold is considered essential (Figure 1A; 'Materials and methods'). These thresholds define the subsets of cell line/gene combinations that are determined to be essential by either CRISPR or shRNA but not both (areas A and B in Figure 1A). The two methods were somewhat consistent on average, with both methods yielding approximately normal dependency score distributions with mean zero and a left-skewing tail corresponding to the subset of essential genes (Pearson correlation 0.456, Spearman correlation 0.201).\n\nFigure 1\n\nFigure 1‚Äîsource data 1\n\nInformation of the 423 cell lines in which both CRIPSR and shRNA screening were tested.\n\nhttps://cdn.elifesciences.org/articles/57116/elife-57116-fig1-data1-v3.xlsx\n\nDespite this concordance, the comparison highlighted differences between the two methods at the individual gene level. First, CRISPR tends to detect weak to moderate gene deletion effects more sensitively, as evidenced by the greater density of CRISPR-essential genes above the diagonal in the joint distribution plot (Figure 1A). For example, while both methods identify RAN, CRISPR identifies CCND1 as more essential (Figure 1B). Second, some genes were shown essential only by CRISPR or shRNA, but not by the other method (e.g., FOXD4 and EIF5B; Figure 1B).\n\nTo better understand these inconsistent dependencies, we used Fisher‚Äôs exact test to determine which genes, across their perturbations in all 423 cell lines, were enriched for inconsistent dependencies. We found that 958 and 20 genes were claimed commonly essential only by CRISPR or shRNA, respectively (Figure 1C). Notably, these two sets of inconsistently essential genes are enriched for involvement in distinct pathways: for example, tRNA metabolic process and mitochondrial translation are overrepresented in the CRISPR-only set, whereas cytosolic translation initiation is overrepresented in the shRNA-only set (Figure 1D). This suggests that CRISPR and shRNA have distinct biases in assessing some genes‚Äô essentiality, affecting different classes of genes. While CRISPR is considered to be less susceptible to off-target effects (Smith et al., 2017) and thus now generally preferred over shRNA, the results and their therapeutic relevance may also depend on the genes of interest. For example, EIF5B, a gene involved in translation initiation, is highly conserved throughout Bacteria, Archaea, and Eukarya, suggesting that it may be essential for most human cells (S√∏rensen et al., 2001). However, only shRNA, but not CRISPR, highlighted it as an essential gene. A method that can combine the two dependency scores would compensate for each other's artifacts and give more robust scores.\n\nWe used the combined CRISPR-shRNA gene dependency scores to identify genes that are either commonly or selectively essential in the cell line panel. This distinction is important for identifying therapeutic targets because inhibition of commonly essential genes may be toxic to both cancer cells and normal cells, whereas genes that are selectively essential to particular cancers may allow for a greater therapeutic window. To capture the therapeutic potential of selectively essential genes, we characterized gene dependency effects with two parameters: the efficacy, which defines the strength of the effect in a sensitive cell line, and the selectivity, which describes the variation of the effect across cell lines.\n\nWe defined the efficacy ‚Ñ∞G,XŒ∏ as the X-th percentile of the distribution of combined dependency scores SŒ∏ for gene G across all cell lines, denoted SGŒ∏. For a given X, we defined a gene as essential when ‚Ñ∞G,XŒ∏ is lower than the essentiality threshold TŒ∏, which is determined from the distribution of SŒ∏ for all genes in all cell lines (Figure 2C, top panel). Smaller values of X (lower percentiles) lead to more extreme efficacy values ‚Ñ∞G,XŒ∏ and identify more essential genes in smaller subsets of cell lines (Figure 2C, bottom panel). We selected X=1 for most of our analysis. This is equivalent to claiming a gene essential when roughly 5 out of 423 cell lines show dependence on the gene (p=7.8e-5, binomial test). We discovered from 3621 to 5094 commonly and selectively essential genes from SŒ∏ with different Œ∏ (Figure 2D). Reflecting the inconsistencies between CRISPR and shRNA, only 56% (2037 genes) of the essential genes overlapped between SC and SR (Figure 2D). As for the 958 and 20 genes claimed commonly essential only by CRISPR or shRNA (Figure 1C), the essential genes discovered with the same method naturally included all of them; however, the essential genes discovered with the other method included only 40‚Äì60% of them, highlighting the inconsistencies between them (Figure 2E). On the other hand, the combined dependency scores SŒ∏, particularly when Œ∏=0.2, 0.4, and 0.6, provide a more sensitive measure, discovering most of the essential genes claimed by either method. The first principal component line between SC and SR was parallel to the line with Œ∏=0.66 in Figure 2A, which maximizes the variance of (SC, SR). Among the six lines, Œ∏=0.6 (CRISPR: shRNA=60:40) is most similar to this principal component line. Therefore, we chose Œ∏=0.6 or the corresponding SŒ∏ primarily for the rest of the analysis and compare the performance of different Œ∏ later.\n\nWe next defined selectivity, a measure of the cell line dependence of the response to the loss of a gene. Selectivity implies that gene loss has a widely varying effect across the population of cell lines, such that the dispersion of the score distribution for a selectively essential gene would be greater than that for a commonly essential gene. We defined the dispersion of gene G, ùíüG,XŒ∏, as the difference between the X-th and (100-X)-th percentiles of SGŒ∏, or ùíüG,XŒ∏=‚Ñ∞G,100‚àíXŒ∏‚àí‚Ñ∞G,XŒ∏. We found that ‚Ñ∞G,XŒ∏ and ‚Ñ∞G,100‚àíXŒ∏ were related linearly for the majority of genes, corresponding to non-essential and commonly essential genes, while some genes had large positive residuals, corresponding to selectively essential genes (e.g., green vs. orange in Figure 3A, B). We therefore defined the selectivity ùíÆG,XŒ∏ using the residuals of the (100-X)-th percentile values for ‚Ñ∞G,100‚àíXŒ∏ relative to the red regression line (Figure 3A), which we denote ‚ÑõG,XŒ∏:\n\nùíÆG,XŒ∏=‚ÑõG,XŒ∏/ùíüG,XŒ∏^=(‚Ñ∞G,100‚àíXŒ∏‚àí‚Ñ∞G,100‚àíX^Œ∏)/ùíüG,XŒ∏^=(ùíüG,XŒ∏‚àíùíüG,XŒ∏^)/ùíüG,XŒ∏^\n\nFigure 3\n\nFigure 3‚Äîsource data 1\n\nEfficacy and selectivity for 15,847 genes for the six Œ∏ and five X: X=1, 2.5, 5, 10, 25.\n\nhttps://cdn.elifesciences.org/articles/57116/elife-57116-fig3-data1-v3.xlsx\n\nFigure 3‚Äîsource data 2\n\nGO/KEGG pathways overrepresented by genes with strongly negative efficacy, high selectivity, or strongly negative efficacy and high selectivity for six Œ∏ and X=1.\n\nhttps://cdn.elifesciences.org/articles/57116/elife-57116-fig3-data2-v3.xlsx\n\nwhere ùíü^G,XŒ∏ is the expected dispersion of dependency scores based on the robust linear regression of ‚Ñ∞G,100‚àíXŒ∏ given ‚Ñ∞G,XŒ∏, or\n\nùíüG,XŒ∏^=‚Ñ∞G,100‚àíXŒ∏^‚àí‚Ñ∞G,XŒ∏.\n\nThe expected dispersion ùíüG,XŒ∏^ increases for more strongly negative efficacy scores ‚Ñ∞G,XŒ∏, indicating greater variances in dependency effects for commonly or selectively essential genes (e.g., greater variance for RAN vs. ZCWPW1 in Figure 3B). This could be a result of experimental noise (e.g., fewer sequencing reads for negatively selected genes) or greater biological variability in dependency effects for these genes. To better distinguish whether genes have dispersion greater than would be expected simply based on their efficacy scores, we normalize the residual values ‚ÑõG,XŒ∏ by dividing by the expected dispersion ùíüG,XŒ∏^ to obtain a measure of selectivity that accounts for the variation of ùíüG,XŒ∏^ with the X-th percentile efficacy, ‚Ñ∞G,XŒ∏. Both the efficacy and selectivity of all the genes across different Œ∏ are available to download (Figure 3C‚Äîsource data 1).\n\nCells in different lineages tend to depend on distinct essential genes compared to cells in the same lineage. We examined the extent to which lineage-specific dependence contributes to selectivity. For each gene, we assessed the relationship between the number of cell lines dependent on the gene and the gene‚Äôs efficacy and selectivity, and confirmed that lower selectivity and more negative efficacy and are associated with a greater number of dependent cell lines (Figure 4A).\n\nFigure 4\n\nFigure 4‚Äîsource data 1\n\nLineage-dependent essentiality of 17 lineages and common essentiality computed using the Adaptive Daisy Model (ADaM) for six Œ∏.\n\nhttps://cdn.elifesciences.org/articles/57116/elife-57116-fig4-data1-v3.xlsx\n\nWe computed the number of distinct lineages dependent on each gene using the Adaptive Daisy Model (ADaM), a permutation-based statistical model reported previously (Behan et al., 2019). As with dependent cell lines, a greater number of dependent lineages was associated with more negative efficacy and lower selectivity (Figure 4B). Overall, we found that 1050 genes are commonly essential across all the lineages, 670 genes are essential in at least one lineage, and 2581 essential genes were not lineage-dependent (Figure 4B, C, Figure 4‚Äîsource data 1). Unsurprisingly, the number of dependent cell lines is strongly associated with the number of dependent lineages (Figure 4C).\n\nUsing an independent CRISPR screening dataset, Behan et al. also proposed candidate drug targets based on selectively essential genes they identified for each lineage. We found that most genes with high selectivity scores were also identified as targets for one or more lineages in their analysis (Figure 4D). On the other hand, targets proposed for multiple lineages in Behan et al. (orange and red points in Figure 4D) tended to show moderate efficacy scores, but not necessarily high selectivity scores.\n\nThough we saw a strong relationship between lower selectivity and a greater number of dependent cell lines and lineages (Figure 4A, B), we note that lineage specificity is not the only cause of high selectivity. Conventionally, high selectivity is interpreted as being commonly essential within a few lineages but non-essential in others. Some genes do manifest this type of selectivity (e.g., broad dependence on CTNNB1 in colorectal cancer, MYB in leukemia, IRF4 in multiple myeloma, KRAS in pancreatic cancer, and SOX10 in skin cancer, Figure 4E), but such common essentiality within a lineage is relatively unusual. In many more cases, a gene that shows high selectivity is selectively essential within each lineage (e.g., only partial dependence on CTNNB1 in liver, lung, and pancreatic cancers, or on IRF4 in skin cancer). CDK4 is a particularly strong example of this pattern as it is not commonly essential in any lineages, but is selectively essential in many. While more negative efficacy ‚Ñ∞G,XŒ∏ is strongly correlated with larger dispersion ùíüG,XŒ∏ (e.g., PSMA1 vs. ISL1, Figure 4E; see also Figure 3A, B), some commonly essential genes that show similar efficacy have substantially higher selectivity than others (e.g., the selective PSMB5 vs. the non-selective PSMA1) (Figure 4E; see also Figure 4A, C). These genes that are essential in many lineages but nevertheless have high selectivity could be promising drug targets given appropriate biomarkers to characterize sensitive cell lines.\n\nThe dependency profile of a gene carries information about the functions of the gene that make it essential in certain cellular contexts. When a set of genes comprise a functional unit (e.g., a pathway or a complex) that regulates cell viability, these genes would be expected to have similar dependency profiles. Gene-wise cluster analysis of the dependency data should therefore reveal functional units that connect essential genes into pathways or protein complexes. It may also be easier to relate the essentiality of pathways to cancer genotypes than to interpret the essentiality of individual genes. Pathway analysis can help identify druggable vulnerabilities at the pathway level that might be missed by single-gene analysis.\n\nWe clustered essential genes based on the similarity of the combined CRISPR-shRNA dependency scores across 423 cell lines. Our approach is based on a related pair of popular algorithms, t-distributed stochastic neighbor embedding (t-SNE), and density-based spatial clustering and noise (DBSCAN) (van der Maaten and Hinton, 2008; van der Maaten, 2014; Ester et al., 1996). t-SNE is a technique that reduces the dimensionality of multidimensional data while preserving the pairwise distances between data points at high dimensions as much as possible. It has been widely used for visualizing high-dimensional data, such as single-cell RNA-seq data (Mass et al., 2016). DBSCAN is a clustering algorithm that detects regions where the data points are gathered at high density and clusters them; it is often used to cluster data points based on their coordinates in the t-SNE plot. The combination of t-SNE and DBSCAN (expressed as ‚Äòt-SNE + DBSCAN‚Äô hereafter) is a powerful clustering algorithm for high-dimensional data, such as single-cell transcriptomes (Haber et al., 2017).\n\nOne limitation of this approach is that the t-SNE algorithm is stochastic, producing different results and clusters with different initial seeds. However, when we compared clusters yielded by t-SNE + DBSCAN from multiple runs, we found that strongly positively correlated points are always clustered together while weakly positively correlated points are less consistently so. To obtain robust cluster assignments from t-SNE + DBSCAN, we therefore used a workflow we call ensemble clustering with hierarchy over DBSCAN on t-SNE with Spearman distance matrix (ECHODOTS).\n\nBriefly, ECHODOTS consists of four steps (Figure 5A, Figure 5‚Äîfigure supplement 1): it (1) computes the pairwise Spearman distance matrix among essential genes, (2) feeds the distance matrix as input to run t-SNE with different initial seeds 200 times, (3) clusters data points based on their coordinates in the t-SNE plot with DBSCAN, and (4) identifies the sets of genes assigned to the same cluster consistently across the 200 sets of clusters using a technique called ensemble clustering (Hornik, 2005). ECHODOTS produces more reliable clusters than a single run of t-SNE + DBSCAN by seeking data points that are consistently clustered together.\n\nFigure 5‚Äîsource data 1\n\nCluster membership of essential genes and probability of their assignment to clusters for six Œ∏.\n\nhttps://cdn.elifesciences.org/articles/57116/elife-57116-fig5-data1-v3.xlsx\n\nFigure 5‚Äîsource data 2\n\nPathways overrepresented in large clusters for six Œ∏.\n\nhttps://cdn.elifesciences.org/articles/57116/elife-57116-fig5-data2-v3.xlsx\n\nWe ran ECHODOTS against the combined dependency score SŒ∏ of the 4301 essential genes (Œ∏=0.6, X=1) and assigned them into 879 small, 608 medium, and 338 large clusters (Figure 5‚Äîsource data 1). Genes in the same cluster tended to be close to each other on t-SNE maps from individual runs, and some clusters were enriched for genes known to be members of specific biological pathways or complexes (Figure 5B, Figure 5‚Äîsource data 2). The median efficacy and selectivity of the clusters varied widely, suggesting that some represent more promising sets of drug targets than others (Figure 5C, D).\n\nIn examining the clusters, we found that they often included genes that were not all mutually correlated with one another. While strongly positively correlated genes tend to be located in the same neighborhood on the t-SNE map and subsequently clustered together in ECHODOTS (Figure 5B), for a gene to be added to a cluster it only needs to be correlated with at least one other gene in the cluster. The structure of the correlations among the genes within a cluster can therefore highlight subtle functional relationships. For example, we plotted the correlations among six highly essential genes in cluster S152, with an edge between genes indicating a Spearman correlation greater than 0.1 (Figure 5E). In this cluster, KEAP1 and KCTD10 are both strongly correlated with the E3 ubiquitin ligase CUL3 (with correlations of 0.387 and 0.29, respectively), but have no correlation with each other (correlation ‚àí0.002). This is likely due to the fact that KEAP1 and KCTD10 interact with CUL3 in a mutually exclusive manner: both serve as adaptor proteins binding the same site on CUL3 but the resulting complexes degrade distinct target proteins (NFE2L2 and RHOB, respectively) (Cullinan et al., 2004; Kovaƒçeviƒá et al., 2018).\n\nPerhaps more intriguing are clusters that appear to show a connection between specific cellular processes and genes not otherwise known to be involved in that process. We offer two examples. One is cluster L119 (Figure 5F), which comprises three small clusters. Clusters S369 and S745 contain the core MAP kinase (MAPK) pathway proteins, including KRAS, RAF1, BRAF, and MAPK1, while cluster S641 consists of CTNNB1 (Œ≤-catenin) and TCF7L2, which form a bipartite transcription factor complex that is a key effector of the Wnt signaling pathway (Jin and Liu, 2008). These small clusters are within the same large cluster, suggesting that MAPK and Wnt signaling are functionally related in dependent cancer cell lines (Jeong et al., 2018). Cluster L119 also contains SHOC2, which was positively correlated to KRAS, RAF1, BRAF, and MAPK1. Multiple KRAS-mutant cancers were recently shown to be vulnerable to the loss of SHOC2 in the context of MEK inhibition, confirming the link between SHOC2 and MAP kinase pathway-driven cancers (Sulahian et al., 2019).\n\nA final example is the cluster L91 (Figure 5G), also consisting of multiple smaller clusters. Cluster S154 contains the selenoprotein GPX4. GPX4 encodes glutathione peroxidase 4, an antioxidant enzyme, that reduces cytotoxic lipid peroxides and protects cells from a non-apoptotic cell death, called ferroptosis. Intriguingly, we found that the other genes in cluster S154 were involved in selenoprotein synthesis (SEPHS2, SEPSECS, PSTK, EFFSEC) (Squires and Berry, 2008), suggesting that the primary role of these genes in dependent cell lines is to synthesize GPX4. S572 contains another selenoprotein TXNRD1 and its substrate, TXNDC17 (Espinosa and Arn√©r, 2019), both of which are also strongly correlated with four selenoprotein synthesis genes. Overall, L91 seems to represent a gene set related to the sensitivity to ferroptosis (Abdalkader et al., 2018; Ingold et al., 2018).\n\nWe have so far computed the efficacy, selectivity, and clusters of essential genes using SŒ∏ with the fixed mixing ratio, Œ∏ = 0.6, since this SŒ∏ retains the largest variance of the original CRISPR and shRNA scores (Figure 2A). Here we compare the performance of different Œ∏.\n\nFor efficacy, larger Œ∏ (i.e., with a larger contribution of SC to SŒ∏) gave more genes with strongly negative efficacy (Figure 5‚Äîfigure supplement 2A). Consistently, the number of dependent cell lines and the number of dependent lineages per gene increased with larger Œ∏ (Figure 5‚Äîfigure supplement 2B‚ÄìF). For selectivity, larger Œ∏ gave more genes with high selectivity (Figure 5‚Äîfigure supplement 2G). We showed earlier that essential (i.e., negative efficacy), selective (i.e., high selectivity), and both selective and essential genes overrepresent different pathways when Œ∏ = 0.6 (Figure 3D). Similar pathways were overrepresented by selective and both selective and essential genes when Œ∏ = 0.8 and 1. However, no pathways were associated with selective or both selective and essential genes when Œ∏ < 0.5, suggesting that a high selectivity was given to genes more randomly (Figure 5‚Äîfigure supplement 2H). Since it is more likely that selective genes represent certain pathways such as the ones shown in Figure 2D, SŒ∏ with Œ∏ > 0.5 are more reasonable ones to choose.\n\nNext, we compared the clusters of the essential genes using ECHODOTS. Since the number of discovered essential genes varies with different Œ∏ (Figure 2D), we expect the number of clusters to be different. Therefore, we did not fix the number of clusters across Œ∏. Instead, we sought the upper bound of the neighborhood threshold Œµ (termed Œµ0) in DBSCAN for each Œ∏ because as Œµ gets larger than a certain value, Œµ0, most points on the t-SNE plot would start to merge to form a single large cluster (see ‚ÄòMaterials and methods‚Äô). We can detect incorrect merging by measuring the ratio between the first and second largest cluster sizes (Figure 5‚Äîfigure supplement 3A, B). We found that Œµ0 is particularly small for Œ∏ = 0.8 and 1 compared to the rest of Œ∏, and more clusters were discovered for these Œ∏ consequently (Figure 5‚Äîfigure supplement 3C, D). We compared cluster memberships of the 2008 genes identified as essential among all Œ∏ and found that Œ∏ > 0.5 and Œ∏ < 0.5 gave substantially different clusters (Figure 5‚Äîfigure supplement 3E). Through the comparison, we concluded that our initial choice of Œ∏ = 0.6 was a reasonable one since the combined dependency score is more informative with more weight on CRISPR than shRNA (Œ∏ > 0.5, Figure 5‚Äîfigure supplement 3) while having some contribution from shRNA is more beneficial than CRISPR alone (Figure 2E).\n\nThis app allows a user to explore the essentiality of all the genes tested in the DepMap genetic perturbation experiments. Its output has two panels. A scatterplot in the middle displays efficacy and selectivity scores for all genes (3, bold numbers correspond to the panels in Figure 6B, C). By hovering over the plot points with the cursor, one can find the genes corresponding to each point. When a gene name to search is provided in the input text box (1), corresponding genes will be highlighted in orange/red in the efficacy‚Äìselectivity plot (3). Genes matched with the query will be listed on the ‚ÄòMatched genes‚Äô tab in the right (4), in which, by clicking a gene‚Äôs name, the description of a gene in GeneCards (https://www.genecards.org/) will open on a new page. By further selecting a matched gene from the dropdown menu (2), one can see the combined dependency scores of the gene in 423 cell lines in the ‚ÄòDependency scores‚Äô tab on the right (5). The definition of combined dependency scores, efficacy, and selectivity can be changed by tuning the mix ratio (equivalent to Œ∏; 6) and efficacy threshold (X-th percentile, 7) from the input panel. We set them Œ∏ = 0.6 and X = 1 by default.\n\nThis app allows a user to explore gene clusters among the essential genes. When a user first selects an essential gene from the top-left dropdown menu (8), genes clustered with the query gene will be shown on the output panels. There are three output panels in the app. The top-center is the efficacy‚Äìselectivity plot for the essential genes (9). The bottom-center shows the t-SNE plot, indicating the similarity of the dependency scores among essential genes (10). The list of ‚ÄòClustered genes‚Äô will be shown in the right panel (11). ‚ÄòConnectivity‚Äô tab will show how the clustered genes are connected (i.e., strongly correlated) (12). The graphs can be downloaded in the GraphML format. ‚ÄòCorrelation‚Äô tab shows the Spearman correlation coefficients between the selected gene and other essential genes grouped by the clusters (13). While all the genes in the small cluster are shown by default, one can change it by tuning the ‚Äòcluster size‚Äô parameter (14) and the probability threshold (15) in the left input panel. In ECHODOTS, we computed a probability at which each gene belongs to the assigned cluster. By setting the probability threshold close to one, one can show only genes that are assigned to the same clusters consistently across many runs of t-SNE + DBSCAN. This app allows the users to tune the mix ratio (16) and efficacy threshold (17) like the Gene essentiality app. Essential genes were defined based on these two parameters. Consequently, modifying these parameters affects the clusters.\n\nTo compute the lineage specificity, we utilized ADaM. ADaM calculates the minimum number of dependent cell lines that are required for a gene to be considered as commonly essential among the cell lines in question (Behan et al., 2019). It is implemented in the ADAM2 R package (https://github.com/DepMap-Analytics/ADAM2). The dependency score matrix, S‚àô,‚àôŒ∏, contains the information of 423 cell lines representing 28 lineages. We focused on a subset of 387 cell lines in 17 lineages that includes 10 or more cell lines. We computed the binary essentiality matrix for each G and L, where 1 if SG,LŒ∏<TŒ∏ and 0 otherwise. We then provided a subset of the matrix attributed to each lineage as input and calculated the minimum number of dependent cell lines for the lineage. Each lineage is considered dependent on G when the number of dependent cell lines in the lineage is equal to or greater than the minimum number of dependent cell lines. To compute universally essential genes utilizing ADaM, we calculated the binary essential matrix for the 17 lineages instead of cell lines and the minimum number of dependent lineages providing the matrix as input.\n\nBehan et al. also provide a list of genes that are good targets for chemotherapies for each lineage. We counted the number of lineages they suggested was a good target for each gene and mapped them onto the efficacy/selectivity plot (Figure 4D).\n\nWe implemented a new cluster algorithm, ECHODOTS, extending the combination of t-SNE and DBSCAN. It is graphically summarized in Figure 5A, and its pseudocode is provided in Figure 5‚Äîfigure supplement 1.\n\nFirst, we computed the Spearman distance matrix or 1-Spearman correlation coefficient across all pairs of essential genes (line (1) in Figure 5‚Äîfigure supplement 1). This matrix was provided as input, and the coordinates of each data point in a 2D plane were computed with t-SNE (line (2)). Next, we clustered data points based on their coordinates with DBSCAN such that any two points whose distance is smaller than the neighborhood threshold Œµ are assigned into the same cluster (line (4)). We note that the range of the coordinates, L, varies among different runs of t-SNE. It is more reasonable to make the denominator d constant rather than to make Œµ constant; therefore, we determined Œµ relative to L: Œµ=L/d (line (3)). The resulting cluster set C was computed by DBSCAN using Œµ derived from the preset parameter d (line (4)), which we set an integer ranging from 30 to 200. We ran t-SNE and DBSCAN to compute C 200 times using different initial seeds.\n\nNext, we computed consistent clusters CC across 200 cluster sets C for each d (or equivalently Œµ) using ensemble clustering available in clue R package (line (5)). When d is too small, (Œµ is too large), most of the points are erroneously connected. The mean size and total number of consistent clusters depend on the neighborhood threshold Œµ. The smallest Œµ yields the largest number of small clusters, in which data points within each cluster are most tightly connected. The largest Œµ yields the smallest number of large clusters, in which data points within each cluster are most loosely connected. When Œµ is too large (correspondingly, d was too small), most genes form one massive cluster in an extreme case. To avoid this, we set a lower bound for d or equivalently upper bound for Œµ such that Œµ=L/d‚â§L/d0=Œµ0 (line (6)). We determined d0 by looking at the ratio between the sizes of the first and second largest clusters (Figure 5‚Äîfigure supplement 3A). When Œµ gets smaller (d gets larger), clusters get smaller and tighter. With smaller Œµ, some genes are not clustered with any other genes. We called these genes forming clusters only by themselves ‚Äònoise‚Äô and distinguished them from other clusters containing more than one gene. Eventually, all the genes become isolated or noise, but we stopped our analysis far ahead (d = 200). When Œ∏ = 0.6, we chose three different values of d (d = 65, 100, 141), which discovered 338, 608, and 879 clusters (line (7)). Most of the smaller clusters derived with larger d were contained in the larger clusters derived with smaller d. Therefore, we constructed a hierarchical relationship between the three sets of clusters. There were a few cases where a gene belongs to distinct clusters with different d, but the smaller cluster is not a part of the larger cluster and thus the hierarchy is not constructed.\n\nNote that DBSCAN is a hard clustering algorithm that assigns each gene into only one cluster. Once clustered, both strongly and weakly correlated genes become indistinguishable in hard clusters. On the other hand, ECHODOTS performs a soft clustering that can assign each gene to more than one cluster. It conducts the ‚Äòmajority vote‚Äô among 200 runs of the clustering and computes the probability of a point being assigned to each cluster, which provides us with the strength of evidence for the cluster assignment of each gene. Thus, ECHODOTS produces more reliable clusters than a single run of t-SNE + DBSCAN by seeking data points that are consistently clustered together."
    }
}