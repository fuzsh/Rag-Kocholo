{
    "id": "dbpedia_1869_0",
    "rank": 86,
    "data": {
        "url": "https://www.mdpi.com/2072-4292/11/16/1886",
        "read_more_link": "",
        "language": "en",
        "title": "ℓp-ICP Coastline Inflection Method for Geolocation Error Estimation in FY-3 MWRI Data",
        "top_image": "https://pub.mdpi-res.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-ag-550.jpg?1566895373",
        "meta_img": "https://pub.mdpi-res.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-ag-550.jpg?1566895373",
        "images": [
            "https://pub.mdpi-res.com/img/design/mdpi-pub-logo-black-small1.svg?da3a8dcae975a41c?1723031622",
            "https://pub.mdpi-res.com/img/design/mdpi-pub-logo-black-small1.svg?da3a8dcae975a41c?1723031622",
            "https://pub.mdpi-res.com/img/journals/remotesensing-logo.png?33ab614e9661caf2",
            "https://www.mdpi.com/bundles/mdpisciprofileslink/img/unknown-user.png",
            "https://www.mdpi.com/bundles/mdpisciprofileslink/img/unknown-user.png",
            "https://www.mdpi.com/bundles/mdpisciprofileslink/img/unknown-user.png",
            "https://pub.mdpi-res.com/img/design/orcid.png?0465bc3812adeb52?1723031622",
            "https://www.mdpi.com/bundles/mdpisciprofileslink/img/unknown-user.png",
            "https://www.mdpi.com/bundles/mdpisciprofileslink/img/unknown-user.png",
            "https://pub.mdpi-res.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-ag-550.jpg?1566895373",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g001-550.jpg",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g001.png",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g002-550.jpg",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g002.png",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g003-550.jpg",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g003.png",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g004-550.jpg",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g004.png",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g005-550.jpg",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g005.png",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g006-550.jpg",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g006.png",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g007-550.jpg",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g007.png",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g008-550.jpg",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g008.png",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g009-550.jpg",
            "https://www.mdpi.com/remotesensing/remotesensing-11-01886/article_deploy/html/images/remotesensing-11-01886-g009.png",
            "https://www.mdpi.com/img/table.png",
            "https://www.mdpi.com/img/table.png",
            "https://www.mdpi.com/img/table.png",
            "https://www.mdpi.com/img/table.png",
            "https://pub.mdpi-res.com/img/design/mdpi-pub-logo-white-small.png?71d18e5f805839ab?1723031622"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Xinghui Zhao",
            "Na Chen",
            "Weifu Li",
            "Jiangtao Peng",
            "Lijun Shen"
        ],
        "publish_date": "2019-08-12T00:00:00",
        "summary": "",
        "meta_description": "Known as input in the Numerical Weather Prediction (NWP) models, Microwave Radiation Imager (MWRI) data have been widely distributed to the user community. With the development of remote sensing technology, improving the geolocation accuracy of MWRI data are required and the first step is to estimate the geolocation error accurately. However, the traditional method, such as the coastline inflection method (CIM), usually has the disadvantages of low accuracy and poor anti-noise ability. To overcome these limitations, this paper proposes a novel     ℓ p     iterative closest point coastline inflection method (    ℓ p    -ICP CIM). It assumes that the field of views (FOVs) across the coastline can degenerate into a step function and employs an      ℓ p   ( 0 ≤ p < 1 )      sparse regularization optimization model to solve the coastline point. After estimating the coastline points, the ICP algorithm is employed to estimate the corresponding relationship between the estimated coastline points and the real coastline. Finally, the geolocation error can be defined as the distance between the estimated coastline point and the corresponding point on the true coastline. Experimental results on simulated and real data sets show the effectiveness of our method over CIM. The accuracy of the geolocation error estimated by     ℓ p    -ICP CIM is up to     0.1     pixel, in more than     90 %     of cases. We also show that the distribution of brightness temperature near the coastline is more consistent with the real coastline and the average geolocation error is reduced by     63 %     after geolocation error correction.",
        "meta_lang": "en",
        "meta_favicon": "https://pub.mdpi-res.com/img/mask-icon-128.svg?c1c7eca266cd7013?1723031622",
        "meta_site_name": "MDPI",
        "canonical_link": "https://www.mdpi.com/2072-4292/11/16/1886",
        "text": "by\n\nXinghui Zhao\n\n1,2,\n\nNa Chen\n\n1,\n\nWeifu Li\n\n1,2 ,\n\nJiangtao Peng\n\n1 and\n\nLijun Shen\n\n2,*\n\n1\n\nHubei Key Laboratory of Applied Mathematics, Faculty of Mathematics and Statistics, Hubei University, Wuhan 430062, China\n\n2\n\nNational Laboratory of Pattern Recognition, Institute of Automation, Chinese Academy of Sciences, Beijing 100190, China\n\n*\n\nAuthor to whom correspondence should be addressed.\n\nRemote Sens. 2019, 11(16), 1886; https://doi.org/10.3390/rs11161886\n\nSubmission received: 14 June 2019 / Revised: 4 August 2019 / Accepted: 7 August 2019 / Published: 12 August 2019\n\n(This article belongs to the Special Issue Hyperspectral Imagery Intelligent Processing for Coastal Environmental Studies)\n\nAbstract\n\n:\n\nKnown as input in the Numerical Weather Prediction (NWP) models, Microwave Radiation Imager (MWRI) data have been widely distributed to the user community. With the development of remote sensing technology, improving the geolocation accuracy of MWRI data are required and the first step is to estimate the geolocation error accurately. However, the traditional method, such as the coastline inflection method (CIM), usually has the disadvantages of low accuracy and poor anti-noise ability. To overcome these limitations, this paper proposes a novel ℓ p iterative closest point coastline inflection method ( ℓ p -ICP CIM). It assumes that the field of views (FOVs) across the coastline can degenerate into a step function and employs an ℓ p ( 0 ≤ p < 1 ) sparse regularization optimization model to solve the coastline point. After estimating the coastline points, the ICP algorithm is employed to estimate the corresponding relationship between the estimated coastline points and the real coastline. Finally, the geolocation error can be defined as the distance between the estimated coastline point and the corresponding point on the true coastline. Experimental results on simulated and real data sets show the effectiveness of our method over CIM. The accuracy of the geolocation error estimated by ℓ p -ICP CIM is up to 0.1 pixel, in more than 90 % of cases. We also show that the distribution of brightness temperature near the coastline is more consistent with the real coastline and the average geolocation error is reduced by 63 % after geolocation error correction.\n\nGraphical Abstract\n\n1. Introduction\n\nFY-3 satellites are the second generation of Chinese polar orbital series meteorological satellites. Up to now, four satellites of the FY-3 series, i.e., FY-3A, FY-3B, FY-3C and FY-3D have been launched, where the last three satellites are still in orbit [1]. FY-3 series satellites are equipped with various instruments in the visible, infrared and microwave bands, which provide abundant information for global climate prediction and weather prediction. The Microwave Radiation Imager (MWRI) is an important remote sensor onboard the FY-3 meteorological satellite, including 10 channels in five frequency bands: 10.65, 18.7, 23.8, 36.5 and 89.0 GHz V/H. The MWRI radiometer weighs 175 kg and consumes 125 W of power. It consists of an offset parabolic main reflector of size 977.4 mm × 897.0 mm and four independent feed horns. The MWRI calibration system is designed as an end-to-end all-optical calibration system. Two quasi-optical mirrors with a diameter of 860 mm and 1300 mm installed in the heat source and cold air observation positions are used to obtain cold/thermal calibration observation data. MWRI acquired six cold/heat source observations and 254 observations from Earth scenes within 1.8 s of each scan cycle. The MWRI frequencies, polarization, ground resolution, bandwidth, beamwidth, and noise-equivalent temperature sensitivity ( N E Δ T ) are provided in Table 1. The main task of MWRI is to provide multi-purpose imagery with emphasis on precipitation. According to the characteristics of MWRI, a variety of engineering functions have been developed, including precipitation intensity at surface (liquid or solid), sea-ice cover, wind speed over the surface (horizontal), sea surface temperature, cloud liquid water (CLW) total column, snow cover and so on [2,3].\n\nThe MWRI data can be used in quantitative remote sensing applications, such as disastrous weather detection and numerical weather prediction. In these quantitative applications, high-precision geolocation and radiometric calibration are the primary conditions. However, due to the instability of satellite attitude, the observation position of satellite in orbit will be inconsistent with the actual position. It is called geolocation error, which is one of the most important factors affecting the quantitative application of satellite remote sensing data [4,5,6,7,8].\n\nUp to now, several methods have been proposed for the geolocation error estimation of MWRI, such as coastline inflection point method (CIM) [9,10,11,12] and node differential method (NDM) [13,14,15,16]. The NDM estimates satellite attitude angle error and corrects geolocation error by minimizing the brightness temperature difference between ascending and descending orbit data in the same region. The CIM assumes that the brightness temperature of four continuous field of views (FOVs) across the coastline satisfy the cubic curve equation, and the inflection point of the cubic curve is set as the coastline point. As shown in Figure 1a, four FOVs (blue circles) are first selected and then used to fit a cubic polynomial curve (blue line). The inflection point of the fitted cubic curve is set as the coastline point denoted as a red circle. When the coastline point is estimated, the vertical distance between the estimated coastline point and the real coastline is taken as the geolocation error [14], which is shown as a green arrow in the right enlarged image of Figure 1b.\n\nDue to the simplicity and efficiency, the CIM has attracted considerable attention and been widely applied on many satellites. For example, it has been applied to the Earth Radiation Budget Experiment (ERBE) scanner on the Earth Radiation Budget Satellite (ERBS) and the NOAA-9 spacecraft [14], the Clouds and the Earth’s Radiant Energy System (CERES) scanner [9], the Atmospheric Infrared Sounder (AIRS) on Aqua [10], and the Cloud-Aerosol Lidar Infrared Pathfinder Satellite Observations (CALIPSO) [17]. Recently, Tang applied the CIM to estimate the geolocation error and adjusted the attitude angle of FY-3C according to the geolocation error on FY-3C MWRI data [11].\n\nDespite great success in practical applications, CIM still has some problems to solve. First, the cubic curve cannot show the sudden change of brightness temperature near the coastline well and is also prone to being affected by noise, as shown in Figure 1a. Second, the vertical distance between the coastline point and the real coastline cannot depict the geolocation error accurately. When the coastline is not completely straight, taking the vertical distance from the detected coastline point to the real coastline as geolocation error will lead to wrong results. These two problems are the main factors limiting the accuracy of CIM.\n\nPresently, some advanced algorithms have been proposed to improve the accuracy of CIM. For example, Li et al. [18] proposed an ℓ 0 sparse approximation model for geolocation error estimation. They use the jump point of the step function to estimate the true coastline point. Although it improves the geolocation accuracy, it does not solve the problems mentioned above. Therefore, the ℓ p -ICP CIM algorithm was proposed in order to further improve the accuracy. To solve the first problem, we increase the number of FOVs used in solving the coastline point to alleviate the effect of noise, and propose a novel ℓ p ( 0 ≤ p < 1 ) sparse regularization optimization model to estimate the original brightness temperature curve. Considering that the temperature on both sides of the coastline point should have a step change, the original ideal brightness temperature curve is modeled as a step function (black line in Figure 1a). By assuming that the observed brightness temperature curve is the convolution of the original ideal brightness temperature curve (i.e., a step function) with an unknown kernel function, the step function can be solved according to an ℓ p ( 0 ≤ p < 1 ) sparse regularization optimization model [18,19,20,21,22], and the step point of the step function is considered the coastline point.\n\nTo solve the second problem, we consider the neighborhood information or contour information of the estimated coastline point (neighboring points are shown as red hollow points in Figure 1b), and assume that there is a rigid transformation [23] between the real coastline and the estimated coastline. Here, the Iterative Closest Point (ICP) algorithm [24,25] is used to estimate the rigid transformation. When the rigid transformation is estimated, the corresponding points of neighboring coastline points can be obtained, as shown in blue forks in Figure 1b). For the detected coastline point (red solid point), we can find the corresponding point by the ICP algorithm. Note that the corresponding point does not necessarily coincide with the real coastline. Thus, we find a point on the real coastline that is closest to the corresponding point, which is denoted as the corresponding point on the real coastline. Finally, the distance between the detected coastline point and the corresponding point on the real coastline is defined as geolocation error, which is shown as a light blue arrow in the right enlarged image of Figure 1b.\n\nThe main contributions of this paper are as follows:\n\nAccording to the characteristics of FY-3 MWRI data, we model the observed brightness temperature curve as the convolution of a step function with an unknown kernel function and propose a novel ℓ p sparse regularization optimization model to solve the step function and locate the coastline point. In addition, we provide a fast solution based on the fast Fourier transform (FFT).\n\nWe propose a new definition of geolocation error by introducing the contour information of the coastline and employing the ICP algorithm to estimate the rigid transformation between the real coastline and the estimated coastline points.\n\nThis paper is organized as follows: Section 2 introduces the method proposed in this paper in detail. Section 3 provides the experimental results and analysis, while Section 4 provides a discussion. The summary and conclusions are given in Section 5.\n\n2. Proposed Method\n\nThe proposed method includes the following two parts: (1) locating the coastline point by the ℓ p sparse regularization optimization model; and (2) finding the corresponding points between the coastline point and the real coastline and calculating the geolocation error.\n\nTo accurately describe the variation of brightness temperature near the coastline, we increase the number of FOVs per group from 4 to 12. These FOVs should satisfy the following conditions [14]:\n\n(1)\n\nNo unusual terrain features, such as lakes and mountains, next to the coastline.\n\n(2)\n\nProbable high thermal contrast between land and water, and the maximum temperature difference is obtained between the 6th and 7th FOV.\n\n(3)\n\nInteresting coastline. A coastline with regular curves, peninsulas, and bays is most useful.\n\n(4)\n\nCloudless disturbance.\n\n2.1. Data Interpolation\n\nIn order to improve the accuracy, it is necessary to interpolate the 12 selected FOVs before calculating the coastline point. In this paper, an interpolation scheme is designed according to the characteristics of MWRI data. The latitude, longitude and brightness temperature of 12 selected FOVs are recorded as L a t 0 , L n g 0 , g 0 . According to the required interpolation accuracy, the original longitude and latitude are interpolated linearly, and recorded as L a t 1 , L n g 1 . The brightness temperature is interpolated by 0 and reshaped to a column vector as g 1 . Let g be the brightness temperature value to be interpolated with the same dimension as g 1 . The following optimization model is established:\n\narg min g ∥ A g − g 1 ∥ 2 2 + μ ∥ K g ∥ 2 2 ,\n\n(1)\n\nwhere A is a sparse matrix formed by zeroing the position on the diagonal line of the unit matrix corresponding to the position, where g 1 is zero. ∥ · ∥ 2 represents 2 norm. K is a sparse matrix with the same dimension as A: K = [ 1 , − 2 , 1 , 0 , … , 0 ; 0 , 1 , − 2 , 1 , 0 , … , 0 ; … ] . μ is a regularization parameter for balance [26]. The first term in Equation (1) is the data fidelity term, which ensures the similarity between g and the original observed data [20,27]. The second part is the smoothing term. When the resolution of g is improved, it guarantees the smoothness of g (non-smoothness means low resolution). The solution of model (1) is given by the following equation:\n\ng = [ A T A + μ K T K ] − 1 A T g 1 .\n\n(2)\n\nGiven 12 FOVs, we can use the interpolation method to generate many points. It should be noted that 12 selected FOVs refer to the brightness temperature values across the coastline rather than the point on the coastline. The temperature variation curve around the coastline can be considered as a smooth curve.\n\n2.2. ℓ p Sparse Regularization Optimization Model\n\nIn this paper, we assume that the observed brightness temperature signal is convoluted by a step function and an unknown Equation (convolution kernel). The step point (where the value of step function mutates) of the step function is considered to be the coastline point. The ℓ p sparse regularization optimized model is used to restore the step function. The previous interpolation results are brought into this model to solve the coastline point.\n\nLet the observed signal (interpolation fitting curve) be g, the original signal be f, and the convolution kernel be h. The subscript n represents the n-th sample. Because the derivative of f is highly sparse, we use ℓ p ( 0 ≤ p < 1 ) norm to restrict its sparsity. Based on the above assumptions, the ℓ p sparse regularization model was proposed:\n\nmin f , h ∑ n ( f ⊗ h ) n − g n 2 + φ ∥ ∂ h ∥ 2 2 + λ ∥ ∂ f ∥ p p ,\n\n(3)\n\nwhere ⊗ represents convolution operator, ∂ represents gradient operator, and ∥ · ∥ p represents p norm. The first part of Equation (3) guarantees the structural similarity between f ⊗ h and g. The second part guarantees the smoothness of h, and φ is the regularization parameter. The third part restricts the sparsity of the gradient of f, and λ is a regularization parameter [28].\n\nSince the original h and f are both unknown, we use the iterative blind deconvolution (IBD) algorithm [29,30,31] to solve the regularization model. The optimization problem involves two variables, f and h, which can be solved by alternating optimization the following two equations:\n\nh j = min h ∑ n ( f j ⊗ h ) n − g n 2 + φ ∥ ∂ h ∥ 2 2\n\n(4)\n\nand\n\nf j + 1 = min f ∑ n ( f ⊗ h j ) n − g n 2 + λ ∥ ∂ f ∥ p p ,\n\n(5)\n\nwhere j denotes the number of iterations. To speed up the convergence speed, λ is set as a variable parameter. Initially, λ is set to a small value λ 0 . Given a step size κ 1 , and λ is updated after each iteration: λ j + 1 = λ j × κ 1 . When step size κ 1 > 1 , λ will increase with iterations. Given a threshold λ max , the iteration stops until λ > λ max . In our experiment, λ 0 , λ max , κ 1 , φ are set to 0.09 , 100, 1.5 , 5, respectively. This method has been proved to be effective in accelerating convergence [31,32,33,34]. In the following, we focus on solving models (4) and (5).\n\n2.2.1. Minimizing Model (4)\n\nBecause the model (4) is convex, it has a global optimal solution. Considering the existence of gradient operator and convolution operator in model (4), the computational process can be accelerated through the FFT [28]. Fixed f j , h j can be solved by:\n\nh j = F − 1 F ( g ) ∘ F * ( f j ) + φ F ( ∂ ) ∘ F * ( ∂ ) F ( f j ) ∘ F * ( f j ) + φ F ( ∂ ) ∘ F * ( ∂ ) ,\n\n(6)\n\nwhere F , F − 1 , * and ∘ denote the FFT operator, the inverse FFT operator, the complex conjugate and the componentwise multiplication, respectively. Note that the addition and division in Equation (6) are also component-wise operators; the calculation speed is much faster than that in the original space.\n\n2.2.2. Minimizing Model (5)\n\nIt should be noted that model (5) is non-convex [30] and is difficult to be optimized directly. To date, a number of algorithms have been proposed for solving this problem [33,35,36,37,38,39,40,41]. In this paper, we apply the Generalized Iterated Shrinkage algorithm (GISA) [35] to solve model (5). For this purpose, a new variable d = ∂ f is introduced and the model (5) is rewritten as:\n\nmin f , d ∑ n ( f ⊗ h j ) n − g n 2 + η λ 2 ∥ ∂ f − d ∥ 2 2 + λ ∥ ∂ f ∥ p p ,\n\n(7)\n\nwhere η is a variable parameter. When η → ∞ , model (7) is equivalent to model (5). Note that model (7) contains two variables f and d, an alternating optimization of f and d is introduced as follows:\n\nStep 1:\n\nfixed f j , i , solving d i .\n\nFixing f j , i , and denoting d r e f = ∂ f , d i can be solved by the following sub-problem:\n\nmin d η 2 ∥ d − d r e f ∥ 2 2 + ∥ d ∥ p p .\n\n(8)\n\nThe generalized soft-thresholding (GST) function can be used to solve the sub-problem (8), and the corresponding solution d i is:\n\nd i = T p G S T d i r e f ; 1 η ,\n\n(9)\n\nwhere T p G S T is a soft threshold function:\n\nT p G S T ( y ; λ ) = 0 , i f | y | ≤ τ p G S T ( λ ) , s g n ( y ) S p G S T ( | y | ; λ ) , i f | y | > τ p G S T ( λ ) ,\n\n(10)\n\nwhere τ p G S T ( λ ) is defined by:\n\nτ p G S T ( λ ) = 2 λ ( 1 − p ) 1 2 − p + λ p 2 λ ( 1 − p ) p − 1 2 − p\n\n(11)\n\nand S p G S T can be solved by:\n\nS p G S T ( y ; λ ) − y + λ p S p G S T ( y ; λ ) p − 1 = 0 .\n\n(12)\n\nLike the soft-thresholding function [42], the GST function also involves a thresholding rule T p G S T ( y ; λ ) = 0 when | y | ≤ τ p G S T ( λ ) and a shrinkage rule T p G S T ( y ; λ ) = s g n ( y ) S p G S T ( | y | ; λ ) , when | y | > τ p G S T ( λ ) . Compared with the thresholding function in [33], the GST function adopted a different thresholding value τ p G S T ( λ ) and can always find the correct solution to the simple ℓ p -minimization problem. Thus, GST can be regarded as a better generalization of soft-thresholding for ℓ p -minimization.\n\nStep 2:\n\nfixed d i , solving f j , i .\n\nFor each fixed d i , f j , i can be solved by the following sub-problem:\n\nmin f ∑ n ( f ⊗ h j ) n − g n 2 + η λ 2 ∥ ∂ f − d i ∥ 2 2 .\n\n(13)\n\nSimilar to model (4), the solving process of model (13) can be transformed into the Fourier domain. With fixed d i , f j , i can be solved by:\n\nf j , i = F − 1 F ( η λ 2 ∂ d ) + F * ( h ) ∘ F ( g ) η λ 2 F ( ∂ T ∂ ) + F * ( h ) ∘ F ( h ) .\n\n(14)\n\nStep 3:\n\nback to step 1 until convergence.\n\nThe solution of model (7) can be obtained by alternatively updating f and d. Similar to the parameter setting of λ , η is also set as a variable parameter to accelerate convergence. Let η 0 , η max , κ 2 be the initial value, threshold and step size, respectively. In the experiment, η 0 , η max , κ 2 are set as 1.4 , 2 18 , 1.1 , respectively.\n\nAlgorithm 1 gives an overview of the proposed ℓ p sparse regularization optimization model. It will output a step function which can be considered as an ideal brightness temperature signal and the step point of step function is taken as the coastline point.\n\nAlgorithm 1 ℓ p Sparse Regularization Optimization ModelInput: 12 FOVs data, parameters φ , λ 0 , λ max , η 0 , η max , and rates κ 1 , κ 2 .\n\nOutput: Step function f.\n\n1:\n\nFit interpolation curve g by Equation (2);\n\n2:\n\nInitialization: f 1 ← f 0 , λ ← λ 0 , j ← 1 ;\n\n3:\n\nrepeat\n\n4:\n\nWith f j , solve h j by Equation (6);\n\n5:\n\nInitialization: f j , 1 ← f j , β ← β 0 , i ← 1 ;\n\n6:\n\nrepeat\n\n7:\n\nWith f j , i , solve for d i in Equation (9);\n\n8:\n\nWith d i , solve for f j , i + 1 in Equation (14);\n\n9:\n\nSet η ← κ 2 × η , i ← i + 1 ;\n\n10:\n\nuntil η ≥ η max\n\n11:\n\nSet f j + 1 ← f j , i , λ ← κ 1 × λ , j ← j + 1 ;\n\n12:\n\nuntil λ > λ max\n\n2.3. Correspondence Point Estimation and Error Calculation\n\nThe purpose of this subsection is to find the corresponding points of the detected coastline points on the real coastline. The neighborhood information of detected coastline point is considered in the calculation process. We assume that there are only rotation and displacement transformations (rigid transformations) [23] between the real coastline and the estimated coastline. Thus, the key is to estimate the rigid transformation.\n\nIn fact, the real coastline and estimated coastline are composed of two point sets. Let the real coastline be the target point set Q m , the estimated coastline be the source point set P n (m, n are not necessarily equal) and there is a transformation H between the two point sets. Since we assume that there is only a rigid transformation between them, H can be expressed by the following formula:\n\nH = R 2 × 2 T 2 × 1 0 1 × 2 1 ,\n\n(15)\n\nwhere the rotation matrix R 2 × 2 and translation matrix T 2 × 1 can be expressed by the following formulas:\n\nR 2 × 2 = cos θ − sin θ sin θ cos θ ,\n\n(16)\n\nT 2 × 1 = t x t y T ,\n\n(17)\n\nwhere θ denote the rotation angle. t x , t y represent displacements along x- and y-axes, respectively. The coordinate transformation of P i and Q i in two different coordinate systems can be achieved by the following formulas:\n\nP i = R 2 × 2 × Q i + T 2 × 1 ,\n\n(18)\n\nwhere P i = [ x i , y i ] T , Q i = [ x i ′ , y i ′ ] T . Submit P i and Q i into Equation (18):\n\nx i ′ y i ′ = cos θ − sin θ sin θ cos θ x i y i + t x t y\n\n(19)\n\nIn this paper, the ICP algorithm is used to estimate the rigid transformation due to its simplicity and low computational complexity [24,43,44,45]. The ICP algorithm is an optimal matching method based on a least square method essentially [46,47]. It repeats the process of “determining the set of corresponding points—calculating the optimal rigid body transformation” until a convergence criterion representing the correct matching is satisfied. The purpose of the ICP algorithm is to find the rotation ( R 2 × 2 ) and translation ( T 2 × 1 ) transformation between the target point set and the source point set, so as to minimize the error function E:\n\nE ( R , T ) = 1 n ∑ i = 1 n ∥ Q i − ( R × P i + T ) ∥ 2 ,\n\n(20)\n\nwhere n is the number of nearest point pairs, Q i is a point in the target point set Q, P i is the nearest point corresponding to Q i in the source point set P, R is the rotation matrix, and T is the translation vector. The specific steps of ICP algorithm are as follows:\n\n(1)\n\nCalculate the corresponding nearest points of each point in P in the point set Q.\n\n(2)\n\nThe rigid transformation that minimizes the average distance between the corresponding points mentioned above is obtained, and the translation and rotation parameters are obtained.\n\n(3)\n\nFor P, the translation and rotation parameters obtained in the previous step are used to obtain a new set of transformation points.\n\n(4)\n\nIf the average distance between the new transformation point set and the reference point set is less than a given threshold, the iteration will be stopped, otherwise the new transformation point set will continue to iterate as a new P until it meets the requirements of the objective function.\n\nIn the experiment, we use Global Self-consistent, Hierarchical, High-resolution Shoreline (GSHHS) fine-resolution database (∼40 m resolution) [48] to define the truth coastline. Note that the x-axis and y-axis coordinates of two point sets P , Q are determined by their geographical location. When the rigid transformation is estimated, the corresponding point of the detected coastline point on the GSHHS can be found, and then the geolocation error can be obtained by the distance between them. The detailed process is as follows:\n\n(1)\n\nDenote an estimated coastline point as a, define a neighborhood near a and compute the extreme points of the brightness temperature gradient within the neighborhood, record the extreme points as A. Find the true coastline points corresponding to the neighborhood from the GSHHS and denote them as B. Here, A and B are the estimated and real coastlines, respectively.\n\n(2)\n\nEstimate the rigid transform T from A to B by the ICP algorithm.\n\n(3)\n\nLet A be transformed into C by T, and c is the corresponding point of a in C. Let d ∈ B be the point with the closest distance to c, and the distance between a and d is taken as the geolocation error.\n\n(4)\n\nRepeat until geolocation error for all points are calculated.\n\n3. Experiments and Results\n\nIn this section, we first analyze the causes of geolocation errors, then give the experimental results, and finally show the results of geolocation error correction.\n\n3.1. Geolocation Error Analysis\n\nThe geolocation error of MWRI is closely related to the uncertainty of basic measurement data used in the calculation. Satellite position deviation, satellite attitude angles (e.g., pitch, roll, and raw) deviation and instrument installation error are the main sources of geolocation errors. In general, the geolocation error can be classified into dynamic and static errors. Dynamic error sources include thermal deformation and structural deformation of instruments, thermal deformation and structural deformation of satellites, attitude angles and position measurement deviation of satellites. These dynamic errors vary all the time and are difficult to simulate. Static error sources include antenna scanning angle deviation, installation deviation of detector, antenna and instrument, and systematic error of star tracker (stellar position deviation). These static errors are invariable and can be reduced or eliminated by the processing of ground application systems [49,50].\n\nIn order to measure geolocation errors, two basic performance indicators (i.e., cross-track error and along-track error) are adopted in this paper [14]. The conversion equation from latitude and longitude coordinates to cross-track and along-track coordinates is:\n\nε c ε a = ± sin η cos η − cos η ± sin η ε Λ ε Φ ,\n\n(21)\n\nwhere η , ε c , ε a , ε Λ , ε Φ represent the spacecraft heading angle, cross-track error, along-track error, longitude error and latitude error, respectively. The upper sign ‘+’ in Equation (21) is used when the scan direction is left to right; otherwise, the lower sign ‘−’ is used. The transformation from latitude and longitude coordinates to cross-track and along-track coordinates is also shown in Figure 2.\n\n3.2. Experimental Results\n\nIn experiment, the FY-3C MWRI data covering four geographical regions with unique coastline orientations are selected to produce a database of crossing errors, including Libya, South America, Australia and Arabian peninsula as shown in Table 2. Their geographical location is shown in Figure 3. These four regions are selected for the following reasons:\n\nThere are obvious temperature differences between ocean and land. For example, in summer, the temperature on land at night is lower than that on water surface, while in the daytime it is just the opposite.\n\nThe selected area should always be in a clear sky because the long-wave radiation value of land and water surface will be very small under the influence of clouds, which should be excluded in the calculation.\n\nThe coastline of the selected area should be regularly distributed, diversified and representative, and the land surface should be uniform. The cloud-free FOV at MWRI 89 GHz data was defined by FY-3C Medium Resolution Spectrum Imager (MERSI) data [11].\n\nFirstly, in order to give the results of geolocation qualitatively, we retrieve the types of land and water according to the results of geolocation calculation in the land and water template database, then superimpose the water-land boundary on the MWRI image, and judge the accuracy of geolocation by the coincidence between the calculated water-land boundary and the actual MWRI image. The overlay maps of the water-land boundary and MWRI images in the Arabian Peninsula at 6:13 p.m. UTC 18 February 2016 and the western coast of Australia at 2:31 p.m. UTC 19 February 2016 are shown in Figure 4. The red points in Figure 4 represent the land-sea boundary. It can be found that the geolocation accuracy of FY-3 MWRI is about one pixel, but there are still geolocation errors at the sub-pixel level.\n\nBy using the proposed method, the geolocation errors expressed by latitude and longitude are detected. Note that each geolocation error can only represent the coastline point used to solve the geolocation error rather than the geolocation error of 12 FOVs used to solve the coastline point. Then, the cross- and along-track errors can be calculated by the Equation (21) easily. We compare CIM with our method in terms of mean and standard deviation of geolocation error.\n\nFirstly, the mean and standard deviation of the cross- and along-track errors of each data are calculated, and then the results belonging to the same region are averaged to get the mean and standard deviation of the geolocation errors in each region. Note that there are geolocation errors for each FOV of MWRI data. On average, each MWRI data will get dozens of geolocation errors after applying ℓ p -ICP CIM. The mean and standard deviation of geolocation errors in four geographical regions are given in Table 3. It can be seen that the geolocation errors in both directions of along-track and cross-track estimated by the two methods are approximately the same. They are greater than zero, except for the cross-track errors estimated by our method at the South America data. At the same time, the along-track errors are greater than the cross-track errors. It shows that both methods can reflect the real geolocation error roughly. However, the value of the geolocation error obtained by the two methods are quite different. In the along-track direction, the geolocation errors estimated by ℓ p -ICP CIM are much larger than those estimated by the CIM, while, in the cross-track direction, the geolocation errors of our method are less than the errors of CIM. Overall, the estimated geolocation errors of ℓ p -ICP CIM are greater than those of CIM: an averaged increase of 60 % for each region. This is mainly due to the fact that the CIM uses the vertical distance between the estimated coastline point and GSHHS as the geolocation error. It is conservative and often causes the underestimation of the geolocation error [5]. In ℓ p -ICP CIM, we consider the neighborhood information of the coastline point when calculating the geolocation error, and measure the geolocation error by the ICP algorithm. Although the mean value of geolocation errors estimated by ℓ p -ICP CIM are relatively larger than CIM, they are true geolocation errors.\n\nFigure 5 shows the standard deviations of the cross- and along-track errors of 25 selected MWRI data (as shown in Table 2), respectively. In Figure 5, the circle represents the standard deviation of the geolocation error estimated by ℓ p -ICP CIM, and the fork represents the standard deviation of the geolocation error estimated by CIM. It is clear that the standard deviation of the geolocation errors obtained by ℓ p -ICP CIM is much lower than that of CIM: an average reduction of 28 % . It demonstrates that ℓ p -ICP CIM is much more stable than CIM. The reasons are:\n\nCompared with the CIM, ℓ p sparse regularization optimization algorithm utilizes more pixel information in solving coastline point, which improves the robustness of the method in estimating the real coastline point when the coastline has irregular distribution and is corrupted by random noise.\n\nWe use the ICP algorithm to measure the geolocation error, which makes it possible to estimate the geolocation error stably and accurately when the coastline is indented.\n\nFurthermore, since the true geolocation error of the operational MWRI data are unknown, it is difficult to measure the accuracy of the estimated geolocation error directly. In this paper, a method is used to evaluate the accuracy of ℓ p -ICP CIM: we give the operational geolocation results (latitude and longitude) a fixed offset artificially, and then use ℓ p -ICP CIM and CIM to estimate the geolocation error, respectively. The original geolocation of MWRI can be understood as follows:\n\noriginal geolocation = correct geolocation + original geolocation error.\n\nAfter giving an offset, the original geolocation results change:\n\noriginal geolocation + offset = correct geolocation + original geolocation error + offset.\n\nTherefore,\n\noriginal geolocation error = geolocation error − offset.\n\nIf the estimated geolocation error is accurate, it should be close to the geolocation error. Therefore, the difference between the estimated geolocation error and offset should be close to the original geolocation error, i.e.,\n\nestimated geolocation error - offset ≈ original geolocation error.\n\nBased on the above equation, the computed difference between the estimated geolocation error and offset should be equal to the original geolocation error. This means that, for different offsets, the corresponding differences should be ideally equal.\n\nThe FY-3C MWRI data over the coastal region of the Arabian Peninsula at 6:13 p.m. UTC 18 February 2016 is used in this experiment. As shown in Table 4, we give offsets of −0.1, −0.5, 0, 0.5 and 0.1 degrees in the longitude and latitude directions and show the mean geolocation errors measured by the CIM and ℓ p -ICP CIM, respectively. Note that the estimated geolocation error cannot be compared with the given offsets directly, due to the existence of the geolocation error at original MWRI data. Fixing the longitude (latitude) offset and changing the latitude (longitude) offset, the geolocation errors estimated by ℓ p -ICP CIM can remain stable in the longitude (latitude) direction and change accurately in the latitude (longitude) direction. However, the geolocation errors estimated by the CIM are inconsistent with the real changes of latitude and longitude. The CIM wrongly estimates the direction of the geolocation error.\n\nFigure 6 shows the differences between the estimated geolocation error and the given offsets intuitively. In principle, the difference between the estimated geolocation error and the given offset should be equal to the original geolocation error of the MWRI data, if the estimated geolocation error is accurate. As shown in Figure 6, for the ℓ p -ICP CIM, the differences between estimated geolocation errors and the given offsets always remain near the original geolocation error (about 0.045 ∘ in latitude, − 0.085 ∘ in longitude). However, for the CIM, the differences fluctuate dramatically. This is because CIM does not accurately respond to the change of geolocation when the offset is given on the original geolocation. From the mechanism of CIM, the estimated geolocation error is defined as the nearest distance between the estimated coastline point and the real coastline point. The nearest distance is an overoptimistic metric as shown in Figure 1 and it can easily be affected by noise. Because the estimated geolocation error is inaccurate, the difference between the estimated geolocation error of CIM and offset varies.\n\nIt should be noted that Figure 6 shows the difference between the estimated geolocation error and the given offset. Table 4 shows the estimated geolocation error (latitude error, longitude error) when the offset in the longitude or latitude direction changes. Intuitively, when fixing the longitude offset and changing the latitude offset, the estimated longitude error should be unchanged and the latitude error will change. From the lower part of Table 4, for our ℓ p -ICP CIM algorithm, for each row (latitude offset fixed), the estimated latitude errors are almost unchanged when the longitude offset changes. Meanwhile, we can see that the estimated longitude errors decrease as the decrease of longitude offset and the difference between the estimated longitude error and offset keeps stable at value − 0.085 ∘ . Similarly, for each column (longitude offset fixed), the estimated longitude errors are almost unchanged when the latitude offset changes, and the difference between the estimated latitude error and offset keeps stable at value 0.045 ∘ . The longitude error − 0.085 ∘ and the latitude error 0.045 ∘ can be considered as the original geolocation error in the MWRI data. However, for the CIM, both the estimated latitude and longitude errors do not show these characteristics. The CIM misestimates the value of the geolocation error in both latitude and longitude directions.\n\n3.3. Geolocation Error Correction\n\nThis subsection shows the results of geolocation error correction. Moradi [15] proposed that the geolocation errors of satellite data caused by various factors can be corrected by adjusting the satellite attitude angle. When the geolocation error is obtained, it needs to be converted into a satellite attitude angle error. This process involves the transformation between several coordinate systems. The specific information can be referred to [2]. After adjusting the satellite attitude angle, the MWRI data are relocated. The relocation algorithm provided by the National Satellite Meteorological Center, China Meteorological Administration is used in the process of geolocation error correction. In order to analyze the effect of geolocation error correction comprehensively, the qualitative and quantitative results are given in Figure 7 and Figure 8. The brightness temperature distribution of FY-3C MWRI 89 GHz corresponding to four regions are given in Figure 7 and the black curves represent real coastlines. In detail, Figure 7a shows the brightness temperature distribution over the coastal region of the Libyan at 8:22 p.m. UTC 5 January 2016. Figure 7b shows the brightness temperature distribution over the coastal region of the South American at 3:07 a.m. UTC 22 January 2016. Figure 7c shows the brightness temperature distribution over the coastal region of Australia at 2:26 p.m. UTC 29 January 2016. Figure 7d shows the brightness temperature distributions over the coastal region of the Arabian Peninsula at 6:13 p.m. UTC 18 February 2016. It can be seen from Figure 7 before geolocation errors’ correction that there is a geolocation error towards the southwest in each region. At the same time, the geolocation error in the north–south direction is greater than that in the east–west direction. It is consistent with our previous experimental results. After applying the geolocation error correction to the FY-3C MWRI, the brightness temperature transition is much more natural, with the sharpest gradient occurring at the coastline. It indicates that the geolocation accuracy of MWRI data has been improved.\n\nThe quantitative results on the mean geolocation errors before and after correction are given in Figure 8. Blue and red bars denote the cross-track error and along-track error before the correction of geolocation errors, while green and yellow bars denote the cross-track error and along-track error after the correction, respectively. As shown, the geolocation errors are mainly concentrated in the along-track direction: the along-track errors of the four regions are between 0.08 ∘ and 0.11 ∘ , and the cross-track errors are about 0.02 ∘ . After correction, the geolocation errors have been greatly reduced: in the along-track direction, the geolocation errors of Libya, South America and Australia have been significantly reduced, while that of the Arabian Peninsula is relatively small; in the cross-track direction, the geolocation errors of Australia and the Arabian Peninsula have been significantly reduced. Overall, the average geolocation error of each region was reduced by 63 % after correction. It demonstrates the superiority of ℓ p -ICP CIM from a quantitative point of view.\n\n4. Discussion\n\nThis paper improves the original CIM and applies it to estimate the geolocation error of FY-3C MWRI. The CIM used four FOVs crossing the coastline to solve the coastline points. However, the information of four FOVs could not describe the variation of brightness temperature near the coastline very well. It will have a greater impact on the final results, if any FOV data fluctuates due to cloud interference, topographic change or random noise. At the same time, CIM regards the nearest distance from the estimated coastline point to the real coastline as geolocation error, which will lead to underestimation of geolocation error. Therefore, when the coastline is not completely straight and noise exists (which is almost inevitable), the geolocation error estimated by CIM will be less than the real error and the variance is larger. We greatly improve the accuracy of geolocation error estimation through the following two ways: (1) Increasing the number of FOVs per group from 4 to 12 and using an ℓ p ( 0 ≤ p < 1 ) sparse regularization optimization model to improve the stability of an estimated geolocation error; (2) Using an ICP algorithm to determine the ‘corresponding point’ instead of the ‘nearest point’ of the estimated coastline point on the real coastline.\n\nHowever, the estimated geolocation error’s accuracy is uncertain as the real geolocation error is usually unknown. In Section 3, we compare ℓ p -ICP CIM with CIM using the strategy of artificially setting offsets on the original location data. In this section, we will continue to use this method to verify the accuracy of our algorithm. The error between the given and estimated latitude and longitude offsets is taken as the criterion to measure the accuracy of the algorithm. The small differences between them indicate a higher accuracy of ℓ p -ICP CIM. In this section, the MWRI data over the coastal region of the Arabian Peninsula at 6:13 p.m. UTC 18 February 2016 is used in experiments. At the same time, we give the offset from − 0.1 ∘ to 0.1 ∘ in longitude and latitude respectively in the unit of 0.01 ∘ , so that we can get 441 pieces of error data. Figure 9 shows the absolute value of the estimated latitude and longitude offset error in a given range as a percentage of all data. The red line in Figure 9 represents ℓ p -ICP CIM. As shown in Figure 9, the error of longitude and latitude offset estimated by ℓ p -ICP CIM is very small, and most of the errors are less than 0.015 ∘ . Specifically, about 90 % of the error is less than 0.005 ∘ , 93 % of the error is less than 0.01 ∘ , and 99 % of the error is less than 0.02 ∘ . This shows that ℓ p -ICP CIM can estimate the given offset accurately. At the same time, we estimate the accuracy of CIM in the same way. The result is shown by the blue line in Figure 9. It can be seen that the error of CIM is very large, and only about 10 % of the estimated offset error does not exceed 0.02 ∘ . It shows that the accuracy of ℓ p -ICP CIM is much higher than that of the CIM algorithm.\n\nIn order to display the algorithm accuracy more intuitively, we transform the longitude and latitude errors into the pixel errors. The resolution of MWRI image is 9 km × 12 km, and its corresponding latitude and longitude range is about 0.09 ∘ × 0.11 ∘ in the Arabian Peninsula. More than 90 % of the latitude and longitude offset errors estimated by our algorithm are less than 0.009 ∘ , as can be seen from the above analysis. Therefore, the accuracy of the geolocation error estimated by ℓ p -ICP CIM is up to 0.1 pixel, in more than 90 % of cases.\n\nAlthough our algorithm has achieved a high accuracy in geolocation error estimation, there are still some problems in the process of testing:\n\nAlthough the accuracy has been effectively improved, the complexity of our algorithm is higher than CIM. The experiments are performed on a personal computer with an i5-7200U 2.50 GHz Intel processor and 4 GB of RAM. On average, the time required for our algorithm to process a data are 31 s, while the time required for CIM is 3 s in the same running environment. The shortage of computational efficiency leads to obvious disadvantage of our algorithm in dealing with large-scale data.\n\nWhen there is no obvious noise, the difference between the coastline points located by ℓ p ( 0 ≤ p < 1 ) sparse regularization optimization model and located by CIM is not obvious (which is natural because they are all sub-pixel level operations), and the difference between the geolocation error estimated by ℓ p -ICP CIM and CIM is mainly reflected in the process of finding corresponding point.\n\n5. Conclusions\n\nIn this paper, we have proposed a novel geolocation error correction method: ℓ p -ICP CIM for the FY-3 MWRI data. The proposed method mainly includes two parts: the detection of coastline point and the determination of geolocation error. To obtain a robust estimation of coastline point, a novel ℓ p sparse regularization optimization model is proposed to solve the coastline point with the use of more FOVs. In the determination of geolocation error, rather than using the vertical distance between the estimated coastline point and the real coastline as the geolocation error, the neighborhood information of the estimated coastline points are considered, and the ICP algorithm is employed to estimate the rigid transformation between the real coastline and the estimated coastline. Finally, the distance between the estimated coastline point and the corresponding point on the true coastline is considered geolocation error.\n\nIn the experiment, we compare ℓ p -ICP CIM with the CIM algorithm. Experimental results demonstrate that our proposed method is more accurate and stable than traditional CIM in the geolocation error estimation of MWRI data. At the same time, we prove that the accuracy of our algorithm is higher than 0.1 pixels in most cases (more than 90 % ), through the designed experiment. Although the accuracy has been improved, the complexity of ℓ p -ICP CIM has been greatly improved due to the existence of iterative operations, which makes it difficult for us to process a large number of MWRI data. The future work will focus on reducing the complexity of the algorithm and the analysis of geolocation error of a long time series of FY-3 MWRI data, which can help us to better understand the variation of MWRI geolocation error and to correct the geolocation error more accurately [16,51].\n\nAuthor Contributions\n\nConceptualization, X.Z., and N.C.; investigation, X.Z., and W.L.; methodology, X.Z., and N.C.; software, X.Z., and W.L.; writing—original draft preparation, X.Z.; writing—review and editing, X.Z., N.C., W.L., J.P., and L.S.\n\nFunding\n\nThis research study is supported by the National Key Research and Development Problem under Grant 2018YFB0504900 (2018YFB0504905), in part by the National Science Foundation of China under Grant Nos. 11771130, 61871177, in part by the Scientific Instrument Developing Project of Chinese Academy of Sciences under Grant YZ201671, and in part by the Bureau of International Cooperation, CAS under Grant 153D31KYSB20170059.\n\nAcknowledgments\n\nThe authors would like to thank reviewers for their valuable comments and suggestions that helped improve the original version of this paper, thank Hua Han, Qiwei Xie (Institute of Automation, CAS) for their guidance in the writing process.\n\nConflicts of Interest\n\nThe authors declare no conflict of interest.\n\nAbbreviations\n\nThe following abbreviations are used in this manuscript:\n\nFY-3FengYun-3MWRIMicrowave Radiation ImagerCIMCoastline Inflection MethodNDMNode Differential MethodFOVsField of ViewsIBDIterative Blind DeconvolutionICPIterative Closest PointFFTFast Fourier TransformGISAGeneralized Iterated Shrinkage AlgorithmGSHHSGlobal Self-consistent, Hierarchical, High-resolution ShorelineLATLatitudeLNGLongitudeUTCCoordinated Universal Time\n\nReferences\n\nTang, S.H.; Qiu, H.; Ma, G. Review on progress of the Fengyun meteorological satellite. J. Remote Sens. 2016, 15, 842–849. [Google Scholar]\n\nYang, H.; Zou, X.L.; Li, X.Q.; Li, N.; You, R.; Wu, S.L. Environmental data records from FengYun-3B Microwave Radiation Imager. IEEE Trans. Geosci. Remote Sens. 2012, 50, 4986–4993. [Google Scholar] [CrossRef]\n\nYang, H.; Weng, F.Z.; Lv, L. The FengYun-3 Microwave Radiation Imager on-orbit verification. IEEE Trans. Geosci. Remote Sens. 2011, 49, 4552–4560. [Google Scholar] [CrossRef]\n\nGuan, M.; Yang, Z.D. Geolocation method for FY-3 MWRI’s remote sensing image. J. Remote Sens. 2009, 13, 463–474. [Google Scholar]\n\nWang, L.; Tremblay, D.A.; Han, Y.; Esplin, M.; Hagan, D.E.; Predina, J.; Suwinski, L.; Jin, X.; Chen, Y. Geolocation assessment for CrIS sensor data records. J. Geophys. Res. Atmos. 2013, 118, 12690–12704. [Google Scholar] [CrossRef]\n\nPoe, G.A.; Uliana, E.A.; Gardiner, B.A.; von Rentzell, T.E.; Kunkee, D.B. Geolocation error analysis of the special sensor microwave imager/sounder. IEEE Trans. Geosci. Remote Sens. 2008, 46, 913–922. [Google Scholar] [CrossRef]\n\nWolfe, R.E.; Lin, G.; Nishihama, M.; Tewari, K.P.; Tilton, J.C.; Isaacman, A.R. Suomi NPP VIIRS prelaunch and on-orbit geometric calibration and characterization. J. Geophys. Res. Atmos. 2013, 118, 11508–11521. [Google Scholar] [CrossRef]\n\nGuan, M.; Yang, Z.D. Application of on-board GPS data and high-precision orbit model to polar satellites orbits calculation. J. Appl. Meteor. Sci. 2007, 18, 748–753. [Google Scholar]\n\nSmith, G.L.; Priestley, K.J.; Hess, P.C.; Currey, C.; Spence, P. Validation of geolocation of measurements of the Clouds and the Earth’s Radiant Energy System (CERES) scanning radiometers aboard three spacecraft. J. Atmos. Ocean. Technol. 2009, 26, 2379–2391. [Google Scholar] [CrossRef]\n\nGregorich, D.T.; Aumann, H.H. Verification of AIRS boresight accuracy using coastline detection. IEEE Trans. Geosci. Remote Sens. 2003, 41, 298–302. [Google Scholar] [CrossRef]\n\nTang, F.; Zou, X.L.; Yang, H. Estimation and Correction of Geolocation Errors in FengYun-3C Microwave Radiation Imager Data. IEEE Trans. Geosci. Remote Sens. 2016, 54, 407–420. [Google Scholar] [CrossRef]\n\nPurdy, W.; Gaiser, P.; Poe, G.; Uliana, E.; Meissner, T.; Wentz, F. Geolocation and pointing accuracy analysis for the WindSat sensor. IEEE Trans. Geosci. Remote Sens. 2006, 44, 496–505. [Google Scholar] [CrossRef] [Green Version]\n\nTang, F.; Dong, H.J.; Li, N.; Liu, C.H. Geolocation errors and correction of FY-3B microwave radiation imager measurement. J. Remote Sens. 2016, 20, 1342–1351. [Google Scholar]\n\nHoffman, L.H.; Weaver, W.L.; Kibler, J.F. Calculation and Accuracy of ERBE Scanner Measurement Locations; Technical Report; NASA/TP-2670; NASA Langley Research Center: Hampton, VI, USA, 1987; 34p.\n\nMoradi, I.; Meng, H.; Ferraro, R.R.; Bilanow, S. Correcting geolocation errors for microwave instruments aboard NOAA satellites. IEEE Trans. Geosci. Remote Sens. 2013, 15, 3625–3637. [Google Scholar] [CrossRef]\n\nBers, W.S.M. Improved geolocation and earth incidence angle information for a fundamental climate data record of the SSM/I sensors. IEEE Trans. Geosci. Remote Sens. 2013, 51, 1504–1513. [Google Scholar]\n\nCurrey, J.C. Geolocation Assessment Algorithm for CALIPSO Using Coastline Detection; Technical Report; NASA/TP-2002-211956; National Aeronautics and Space Administration (NASA) Langley Research Center: Hampton, VA, USA, 2002; 27p.\n\nLi, W.F.; Luo, Z.C.; Liu, C.B.; Liu, J.Z.; Shen, L.J.; Xie, Q.W.; Han, H.; Yang, L. ℓ0 Sparse Approximation of Coastline Inflection Method on FY-3C MWRI Data. IEEE Geosci. Remote Sens. Lett. 2019, 16, 85–89. [Google Scholar] [CrossRef]\n\nSun, W.W.; Tian, L.; Xu, Y. Fast and robust self-representation method for hyperspectral band selection. IEEE J. Sel. Top. Appl. Earth Observ. Remote Sens. 2017, 10, 5087–5098. [Google Scholar] [CrossRef]\n\nSun, W.W.; Du, Q. Graph-regularized fast and robust principal component analysis for hyperspectral band selection. IEEE Trans. Geosci. Remote Sens. 2018, 56, 3185–3195. [Google Scholar] [CrossRef]\n\nPeng, J.; Li, L.; Tang, Y.Y. Maximum likelihood estimation based joint sparse representation for the classification of hyperspectral remote sensing images. IEEE Trans. Neural Netw. Learn. Syst. 20019, 30, 1790–1802. [Google Scholar] [CrossRef]\n\nPeng, J.; Sun, W.; Du, Q. Self-paced joint sparse representation for the classification of hyperspectral images. IEEE Trans. Geosci. Remote Sens. 2019, 57, 1183–1194. [Google Scholar] [CrossRef]\n\nYu, C.; Chen, X.; Yin, L.; Shu, C.; Zhao, L.; Han, H. Image deformation based on contour using moving integral least squares. IET Image Process. 2019, 12, 152–160. [Google Scholar] [CrossRef]\n\nChen, Y.; Medioni, G. Object Modeling by Registration of Multiple Range Images. Image Vis. Comput. 1992, 10, 145–155. [Google Scholar] [CrossRef]\n\nBesl, P.J.; Mckay, N.D. A Method for registration of 3D shapes. Nat. Rev. Neurosci. 1992, 14, 239–256. [Google Scholar]\n\nPeng, J.T.; Du, Q. Robust joint sparse representation based on maximum correntropy criterion for hyperspectral image classification. IEEE Trans. Geosci. Remote Sens. 2017, 55, 7152–7164. [Google Scholar] [CrossRef]\n\nXie, Q.W.; Mita, S. Integration of optical flow and Multi-Path-Viterbi algorithm for stereo vision. Int. J. Wavelets Multiresolut. Inf. Process. 2017, 15, 1750022. [Google Scholar] [CrossRef]\n\nXie, Q.W.; Long, Q.; Mita, S. Image fusion based on multi-objective optimization. Int. J. Wavelets Multiresolut. Inf. Process. 2014, 12, 1450017. [Google Scholar] [CrossRef]\n\nShalvi, O.; Weinstein, E. Super-exponential methods for blind deconvolution. IEEE Trans. Infrom. Theory 1993, 39, 504–519. [Google Scholar] [CrossRef]\n\nKrishnan, D.; Tay, T.; Fergus, R. Blind deconvolution using a normalized sparsity measure. IEEE CVPR 2011, 42, 233–240. [Google Scholar]\n\nWang, Y.L.; Yang, J.F.; Yin, W.T.; Zhang, Y. A new alternating minimization algorithm for total variation image reconstruction. SIAM J. Imaging Sci. 2008, 1, 248–272. [Google Scholar] [CrossRef]\n\nXie, Q.W.; Ma, C.; Guo, C. Image fusion based on the △−1 − TV0 energy function. Trends Cell Biol. 2014, 16, 6099–6115. [Google Scholar]\n\nShe, Y. Thresholding-based iterative selection procedures for model selection and shrinkage. Electron. J. Stat. 2009, 384–415. [Google Scholar] [CrossRef]\n\nSun WeiWei, D.Q. Hyperspectral Band Selection: A Review. IEEE Geosci. Remote Sens. Mag. 2019, 2, 118–139. [Google Scholar] [CrossRef]\n\nZou, W.M.; Meng, D.Y.; Zhang, L. A Generalized Iterated Shrinkage Algorithm for Non-convex Sparse Coding. In Proceedings of the IEEE International Conference on Computer Vision (ICCV), Sydney, Australia, 1–8 December 2013; pp. 217–224. [Google Scholar]\n\nCho, T.; Zitnick, C.; Joshi, N.; Kang, S.; Szeliski, R.; Freeman, W. Image restoration by matching gradient distributions. IEEE T-PAMI 2012, 34, 683–694. [Google Scholar]\n\nShe, Y.Y. An iterativeal gorithm for fitting nonconvex penalized generalized linear models with grouped predictors. Comput. Stat. Data Anal. 2012, 56, 2976–2990. [Google Scholar] [CrossRef]\n\nChartrand, R. Exact reconstruction of sparse signals via nonconvex minimization. IEEE Signal Process. Lett. 2007, 14, 707–710. [Google Scholar] [CrossRef]\n\nChartrand, R.; Yin, W. Iteratively reweighted algorithms for compressive sensing. In Proceedings of the 2008 IEEE International Conference on Acoustics, Speech and Signal Processing, Las Vegas, NV, USA, 31 March–4 April 2008; pp. 3869–3872. [Google Scholar]\n\nKrishnan, D.; Fergus, R. Fast image deconvolution using hyper-laplacian priors. In Advances in Neural Information Processing Systems 22, Proceedings of the 23rd Annual Conference on Neural Information Processing Systems (NIPS 2009), Vancouver, BC, Canada, 7–10 December 2009; Curran Associates Inc.: Red Hook, NY, USA, 2009; pp. 1033–1041. [Google Scholar]\n\nLv, Q.; Lin, Z.; She, Y.; Zhang, C. A comparison of typical ℓp minimization algorithms. Neurocomputing 2013, 413–424. [Google Scholar]\n\nDonoho, D.L. De-noising by soft-thresholding. IEEE Trans. Inf. Theory 1995, 41, 613–627. [Google Scholar] [CrossRef]\n\nYang, J.L.; Li, H.D.; Jia, Y.D. Go-ICP: Solving 3D registration efficiently and globally optimally. In Proceedings of the IEEE International Conference on Computer Vision (ICCV), Sydney, Australia, 1–8 December 2013; pp. 1457–1464. [Google Scholar]\n\nHe, S.J.; Zhao, S.T.; Bai, F.; Wei, J. A Method for Spatial Data Registration based on PCA-ICP algorithm. Adv. Mater. 2013, 718, 1033–1036. [Google Scholar] [CrossRef]\n\nMyronenko, A.; Song, X. Point set registration: Coherent point drift. IEEE Trans. Pattern Anal. Mach. Intell. 2010, 32, 2262–2275. [Google Scholar] [CrossRef]\n\nSharp, G.C.; Lee, S.W.; Wehe, D.K. ICP registration using invariant features. IEEE Trans. Pattern Anal. Mach. Intell. 2002, 24, 90–102. [Google Scholar] [CrossRef]\n\nYang, J.; Li, H.; Campbell, D.; Jia, Y. Go-ICP: A globally optimal solution to 3D ICP point-set registration. IEEE Trans. Pattern Anal. Mach. Intell. 2016, 38, 2241–2254. [Google Scholar] [CrossRef]\n\nWessel, P.; Smith, W.H.F. A global self-consistent, hierarchical, high-resolution shoreline database. Geophys. Res. 1996, 101, 8741–8743. [Google Scholar] [CrossRef]\n\nWolfe, R.E.; Nishihama, M. Achieving sub-pixel geolocation accuracy in support of MODIS land science. Remote Sens. Environ. 2002, 188, 31–49. [Google Scholar] [CrossRef]\n\nQiao, M.; Yang, H.; He, J.K.; Lv, L.Q. On-orbit performance stability analysis of microwave radiometer imager onboard FY-3 Satellite. J. Remote Sens. 2012, 16, 1246–1261. [Google Scholar]\n\nWang, W.H.; Cao, C.Y.; Bai, Y.; Blonski, S. Assessment of the NOAA S-NPP VIIRS Geolocation Reprocessing Improvements. Remote Sens. 2017, 9, 974. [Google Scholar] [CrossRef]\n\nFigure 1. The estimation of coastline point and determination of geolocation error based on the CIM. (a) the estimation of coastline point. Black circles are the original FOVs, blue line denotes the fitted cubic curve based on the four chosen FOVs (blue circles), the inflection point of cubic curve is the estimated coastline point denoted as red circle, and black line denotes the step function that is the assumption of the ℓ p -ICP CIM algorithm; (b) the determination of geolocation error. The red solid point denotes the detected coastline point, red hollow points are the edge information near the detected coastline point, and blue forks denote the correspondences between red hollow points and actual coastline. In the ℓ p -ICP CIM, the geolocation error is set to be the distance between the estimated coastline point and its corresponding point, i.e., blue arrow in the right enlarged image. In the CIM, the geolocation error is set to be the vertical distance between the estimated coastline point and the actual coastline, i.e., green arrow in the right enlarged image.\n\nFigure 2. Geometry of transformations from latitude and longitude coordinates to cross-track and along-track coordinates.\n\nFigure 3. Baseline areas for geolocation analysis.\n\nFigure 4. (a) location results of an MWRI image in the Arabian Peninsula region; (b) location results of an MWRI image in the west coast of Australia.\n\nFigure 5. (a) standard deviation of cross-track error; (b) standard deviation of along-track error. In Figure 5, a point represents the standard deviation of a MWRI data geolocation error. There are 25 data sets as shown in Table 2, i.e., five points for Libya, five points for South America, six points for Australia, and nine points for Arabian Peninsula. Black, blue, red and green points represent the coastal region of Libyan, South America, Australia and the Arabian Peninsula, respectively.\n\nFigure 6. The difference between the mean of detection error and the given offset. (a) the first, second, third, fourth and fifth point correspond to the latitude difference in the case of longitude offset of −0.1, −0.05, 0, 0.05, 0.1, respectively; (b) the first, second, third, fourth and fifth point correspond to the longitude difference in the case of latitude offset of −0.1, −0.05, 0, 0.05, 0.1, respectively.\n\nFigure 7. The MWRI brightness temperature distributions before (left) and after (right) correction. (a) Libyan coast; (b) South American coast; (c) Australia coast; (d) Arabian Peninsula coast.\n\nFigure 8. Mean error before and after geolocation error correction. Blue bar and red bar represent the cross-track and along-track error before geolocation error correction, green bar and yellow bar represent the cross-track and along-track error after geolocation error correction.\n\nFigure 9. The proportion of data whose absolute error of the estimated latitude and longitude offset is less than a given range (represented by the x-axis) in all data. The red line and blue line represent ℓ p -ICP CIM and CIM, respectively.\n\nTable 1. FY-3C MWRI instrument characteristics.\n\nFrequency (GHz)10.6518.723.836.589PolarizationV/HV/HV/HV/HV/HBandwidth (MHz)1802004004003000Sensitivity (K)0.50.50.50.50.8Samples/scan254Beam Width 2.3 ∘ 1.35 ∘ 1.22 ∘ 0.81 ∘ 0.41 ∘ Ground Resolution (km) 51 × 85 30 × 50 27 × 45 18 × 30 9 × 15 Scan ModeConical scanningOrbit Width1400 kmViewing Angle ( ∘ )45Integration time (ms)15.010.07.55.02.5Sampling Interval2.08 msSampling angle 0.4111 ∘ Scan period1.8s\n\nTable 2. Coordinated Universal Time (UTC) times of FY-3C MWRI data used in the experiment.\n\nRegionLibyaSouth AmericaAustraliaArabian PeninsulaDate and UTC Time201601052022201601040346201601061458201601051840201601121950201601110314201601081420201601101847201601152034201601210326201601121445201601121808201601272008201601260332201601221458201601171814201602112026201602060325201601221458201602111845201602081438201602131807201602171832201602181813201602191754\n\nTable 3. Mean and standard deviations of along- and cross-track errors on four geographical regions.\n\nRegionLibyaSouth AmericaError DirectionCross-TrackAlong-TrackCross-TrackAlong-TrackCIMMean error0.01300.02580.00110.0635Standard deviation0.03420.03440.03150.0288 ℓ p -ICP\n\nCIMMean error0.01800.0916−0.00330.1025Standard deviation0.02680.03380.02590.0239RegionAustraliaArabian PeninsulaError DirectionCross-TrackAlong-TrackCross-TrackAlong-TrackCIMMean error0.00300.03570.04520.0516Standard deviation0.03620.03700.03300.0282 ℓ p -ICP\n\nCIMMean error0.00220.07320.02360.0981Standard deviation0.02410.04080.02290.0263\n\nTable 4. The mean error measured by the CIM and ℓ p -ICP CIM when there are different offsets in the longitude and latitude directions.\n\nLng−0.1−0.0500.050.1Lat−0.1(0.0429, −0.0349)(0.0197, −0.0458)(0.0124, −0.0272)(0.0429, −0.0349)(0.0090, 0.0147)−0.05(0.0660, −0.0413)(0.0533, −0.0502)(0.0353, −0.0410)(0.0176, −0.0161)(0.0060, 0.0033)0(0.0852, −0.0380)(0.0636, −0.0525)(0.0551, −0.0510)(0.0373, −0.0307)(0.0271, −0.0088)0.05(0.0336, −0.0857)(0.0478, −0.0686)(0.0556, −0.0586)(0.0585, −0.0406)(0.0493, −0.0249)0.1(−0.0041, −0.1178)(−0.0023, −0.0864)(0.0261, −0.0579)(0.0491, −0.0471)(0.0453, −0.0341)Lng−0.1−0.0500.050.1Lat−0.1(−0.0586, −0.1864)(−0.0596, −0.1376)(−0.0591, −0.0875)(−0.0599, −0.0361)(−0.0588, 0.0105)−0.05(−0.0096, −0.1884)(−0.0096, −0.1381)(−0.0096, −0.0884)(−0.0109, −0.0363)(−0.0109, 0.0115)0(0.0351, −0.1840)(0.0404, −0.1384)(0.0404, −0.0881)0.0391, −0.0363)(0.0391, 0.0119)0.05(0.0766, −0.1801)(0.0904, −0.1381)(0.0876, −0.0879)(0.0891, −0.0363)(0.0891, 0.0119)0.1(0.1163, −0.1666)(0.1290, −0.1326)(0.1376, −0.0879)(0.1391, −0.0363)(0.1391, 0.0119)\n\n© 2019 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (http://creativecommons.org/licenses/by/4.0/).\n\nShare and Cite\n\nMDPI and ACS Style\n\nZhao, X.; Chen, N.; Li, W.; Peng, J.; Shen, L. ℓp-ICP Coastline Inflection Method for Geolocation Error Estimation in FY-3 MWRI Data. Remote Sens. 2019, 11, 1886. https://doi.org/10.3390/rs11161886\n\nAMA Style\n\nZhao X, Chen N, Li W, Peng J, Shen L. ℓp-ICP Coastline Inflection Method for Geolocation Error Estimation in FY-3 MWRI Data. Remote Sensing. 2019; 11(16):1886. https://doi.org/10.3390/rs11161886\n\nChicago/Turabian Style\n\nZhao, Xinghui, Na Chen, Weifu Li, Jiangtao Peng, and Lijun Shen. 2019. \"ℓp-ICP Coastline Inflection Method for Geolocation Error Estimation in FY-3 MWRI Data\" Remote Sensing 11, no. 16: 1886. https://doi.org/10.3390/rs11161886\n\nNote that from the first issue of 2016, this journal uses article numbers instead of page numbers. See further details here.\n\nArticle Metrics\n\nNo\n\nNo\n\nArticle Access Statistics\n\nFor more information on the journal statistics, click here.\n\nMultiple requests from the same IP address are counted as one view."
    }
}