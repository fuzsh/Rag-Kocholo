{
    "id": "dbpedia_4546_0",
    "rank": 10,
    "data": {
        "url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9420891/",
        "read_more_link": "",
        "language": "en",
        "title": "Games-as-a-service: Conflicted identities on the new front-line of video game development",
        "top_image": "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/pmc-card-share.jpg?_=0",
        "meta_img": "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/pmc-card-share.jpg?_=0",
        "images": [
            "https://www.ncbi.nlm.nih.gov/coreutils/uswds/img/favicons/favicon-57.png",
            "https://www.ncbi.nlm.nih.gov/coreutils/uswds/img/icon-dot-gov.svg",
            "https://www.ncbi.nlm.nih.gov/coreutils/uswds/img/icon-https.svg",
            "https://www.ncbi.nlm.nih.gov/coreutils/nwds/img/logos/AgencyLogo.svg",
            "https://www.ncbi.nlm.nih.gov/corehtml/pmc/pmcgifs/logo-sageopen.png",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9420891/bin/10.1177_1461444821995815-fig1.jpg",
            "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9420891/bin/10.1177_1461444821995815-img1.jpg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Louis-Etienne Dubois",
            "Johanna Weststar"
        ],
        "publish_date": "2022-10-14T00:00:00",
        "summary": "",
        "meta_description": "As creative industries begin to experiment with service and subscriptions models, prior research suggests that such changes in production and consumption carry important implications for workers. Using the theoretical lens of occupational communities, ...",
        "meta_lang": "en",
        "meta_favicon": "https://www.ncbi.nlm.nih.gov/coreutils/nwds/img/favicons/favicon.ico",
        "meta_site_name": "PubMed Central (PMC)",
        "canonical_link": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9420891/",
        "text": "Introduction\n\nVideo game developers (VGDs) form a tightly knit, industry-wide group of highly qualified and intrinsically motivated creative workers (Deuze et al., 2007; Weststar, 2015). As is often the case in creative sectors, professional identities, and reputations—and the opportunities that come with them—are largely determined by the portfolio of games that developers have worked on and, more importantly, “shipped” to market (Legault and Weststar, 2017).\n\nHowever, the industry is moving away from shipping “box” product games to instead operate “live” service games. This is a global trend with South Korean and Chinese developers or publishers (i.e. Tencent) as early adopters. Under this model, studios indeterminately support and periodically release content incrementally for existing games instead of developing new games or stand-alone sequels. While this generates more stable revenues, it also results in fewer new games since the focus switches to catering to the current player base. As the CEO of Ubisoft put it, “there is a change in the way games are exploited (in which content) released on a steadier clip can now go longer between instalments while still contributing to the bottom line” (Sinclair, 2017).\n\nThe rise of “Games as a Service” (GaaS) draws similarities with the “servitization” trend observed in manufacturing (e.g. Gebauer et al., 2005; Vandermerwe and Rada, 1988). Yet, such transition towards services in the video game industry presents a particular problem for workers; if identity is based on one’s past accomplishments in developing and shipping games, what does it mean to be a developer on a new model that does not imply working towards shipping a finished product?\n\nAs different creative sectors increasingly turn to service offerings (Parry et al., 2012; Viljakainen and Toivonen, 2014), it is fitting to study servitization in the video games industry whose impact on 21st-century cultural capitalism is said to be the same as that of the automobile industry on 20th-century industrial capitalism (Cadin et al., 2006). For one, servitization implies a cultural shift towards customer centricity that challenges existing values and norms for media organizations (Parry et al., 2012; Viljakainen and Toivonen, 2014). Research indicates that opportunities for achievement and recognition as well as professional identities (Christopherson, 2008) in the creative industries are impacted by trends in production and consumption. Yet, the prevailing assumption that creatives will merely satisfy themselves with producing creative offerings that meet customers’ needs do not account for these profound shifts (Elsbach, 2009).\n\nAgainst this backdrop, we investigate how the occupational roles and identities of VGDs, as constructed within their occupational community (e.g. Salaman, 1971; Van Maanen and Barley, 1982), might be impacted by servitization. We examine this question in the North American context by conducting a case study of a studio undergoing a shift to GaaS. In doing so, this article answers calls for research on identity in less recognized industries (Lysova and Khapova, 2019), as well as for identity research grounded in organizational settings (Van Maanen, 2010). It also contributes to the scant literature on the micro-foundations of servitization (Lenka et al., 2018) and expands servitization research into non-manufacturing domains (Kowalkowski et al., 2017).\n\nTo do so, we first provide a theoretical background on servitization, identity, and occupational communities, with a focus on creative workers and recent changes in the video game industry. We then describe both the methodology and the research site. Empirical evidence suggests that servitization’s impact on worker identity manifests in the following five themes: different developer profile, growing internal misunderstandings, deeper external relationships, redefined performance criteria, and shifting reputational drivers. We then discuss these themes in light of the relevant literature and conclude by highlighting implications for creative organizations contemplating or undergoing a service transition, as well as some limitations and directions for future research.\n\nLiterature review\n\nServitization and the video game industry\n\nWith annual global sales of US$150 billion (Newzoo, 2019), video games have experienced significant economic and cultural success over the last three decades, elevating their social status from basement hobby to “entertainment juggernaut” (Mirza, 2019). Yet, despite its size and enduring growth, the industry continues to experience regular technological, demographic, legal, and economic disruptions that challenge existing business models, distribution and consumption patterns, development processes, and management practices (Zackariasson and Wilson, 2012).\n\nOne such change is the ascent of Downloadable Live Content (DLC) which has become a widespread industry feature and a dominant development strategy, especially in the Massively Multiplayer Online Game (MMOG) and Multiplayer Online Battle Arena (MOBA) segments (Campbell, 2015; Kerr, 2017). DLC is a service-like form of maintenance where periodic new content is sold to supplement a “base” game. Exemplary North American titles include World of Warcraft (Blizzard Entertainment), League of Legends (Riot Games), Rainbow Six Siege (Ubisoft), and Fortnite (Epic Games). Case in point, Activision-Blizzard, the world’s largest video game publisher, announced that new Internet Protocols (IPs) were now only one-quarter of its future, opting instead to focus on “monetizing” existing games (Strickland, 2019). While most video games are now intangible and can be downloaded, only those with a long-term iteration strategy of periodic content increments qualify as service games. GaaS marks a departure from the studio-centric “Game as a Product” (GaaP) model focused on the release of new titles, towards a player-centric model based on updates, recurring revenues and player retention. While a franchise may have yielded multiple games (e.g. Final Fantasy 1 through 15), each of these are discrete releases, providing developers with regular exit opportunities and unique project credits. A service game like World of Warcraft (WoW), however, has not had a stand-alone sequel in over 15 years. Rather, WoW developers release downloadable “expansions” to the original base game every few years that introduce new game modes, gameplay improvements and other features to keep players engaged.\n\nGaaS projects also follow a different development process to a standard personal computer (PC) or console games (Kerr, 2017). In lieu of a linear process with discrete stages ending at game launch—design and prototype, pre-production, production, testing, distribution, and retail (Kerr, 2006) —GaaS emphasizes post-launch activities, during which new content development and player retention and feedback operations overlap ( ). Releasing a game to market is no longer the end but rather the beginning of ongoing service operations in which regular content updates, game optimization, support, and community management are key to enduring success (Kerr, 2017).\n\nSimilar business model shifts have been theorized before. Coined by Vandermerwe and Rada (1988), the term “servitization” refers to the process by which firms offer services in addition to or instead of products. In manufacturing, where most of the existing servitization research originates, services have historically referred to basic “after-sale” offerings such as maintenance, repair, and insurance (Gebauer et al., 2005), but increasingly include sophisticated “product-service systems” that focus on the entire product lifecycle (Rabetino et al., 2017). Services are said to yield higher margins, provide greater engagement opportunities with customers and create competitive advantage (Gebauer et al., 2011; Oliva and Kallenberg, 2003), even though running resource-intensive services can also prove to be too costly and inefficient (Gebauer et al., 2005).\n\nThe transition towards service-like models is also occurring in other creative industries. For instance, print media has embraced a service-dominant logic in response to a dispersing customer base, new media use habits, and an erosion of the product business (Viljakainen and Toivonen, 2014). Furthermore, Parry et al. (2012) explain how the digitalization of music has given way to a “pay monthly” model on platforms like Spotify, whose responsive algorithms have profoundly impacted “how music is released, and even what it sounds like” (Pierce, 2017). In film and television, streaming services disrupt production and consumption by making content development flow between information gathering and creation (Jenner, 2016). Screenwriters, for instance, have even changed the way they create stories to account for “binge watching” behaviors (Edwards, 2017).\n\nThe turn towards a service model challenges received characteristics of work in the video game industry: longer project tenure instead of a series of temporary assignments, “outside-in” development driven by players instead of “inside-out” creative masterpieces, and steady, proactive maintenance instead of a model of “overtime heroes” (Kowalkowski et al., 2017). Lasting effects of past disruptions suggest further identity implications for game workers and studio dynamics. For instance, the rise of characters in the 1980s, as opposed to ball or war games, brought an emphasis on storytelling skills, much like the introduction of the CD-ROM in the 1990s put graphic design at the forefront and elevated the status of designers (Aoyama and Izushi, 2003). In the case of GaaS, new roles such as data analysts, community managers, and digital marketers already play a key role alongside traditional content creators (Kerr, 2017).\n\nBaines and Lightfoot (2014) find that service model workers need to be better at relationship building, and more flexible, authentic, and resilient. Given such important implications on individual and collective work experiences, servitization often runs into resistance that stems from ambiguous processes, lack of internal capabilities, and lack of buy-in from employees who feel threatened by new responsibilities and heightened interactions with customers (Bailey and Raelin, 2015). Employees also experience role ambivalence and confusion when the organization’s servitization strategy does not fully remove product-focused activities (Lenka et al., 2018).\n\nThus, the inability to properly plan, communicate, execute, and support a servitization strategy can lead to financial and interpersonal consequences (Kowalkowski et al., 2017). Such transition implies accounting for technical and procedural details but also human resources issues, particularly when employees identify with product-based models (Rabetino et al., 2017). Arguably, these considerations are more central when dealing with employees whose attachment to their work runs deep, and whose emotional and personal investment in the success of projects is greater than the norm (Fahey, 2010; Mumford et al., 2002). Such is the case in the video game industry.\n\nIdentity in the creative industries\n\nAccording to Elsbach (2009), creatives’ professional identity refers to various “person-based and role-based self-categorizations” (p. 1044). This includes professional and creative goals, values, and beliefs, but also personal traits and abilities (Ashforth, 2000; Sluss and Ashforth, 2008). Inflected within this definition, although not explicitly named as such, is Bourdieu’s (1977) habitus; goals, values, and beliefs are created in and through the dynamic interchange of subjective and objective perceptions of various social worlds that we inhabit. As these experiences solidify, it forms the basis for how we navigate various social fields that are themselves inflected with power dynamics, other agents (individuals), and social scripts. For example, individual creative identities are often externally constructed through peer recognition and in relation to specific others, or the acquisition of “social capital” (Bourdieu, 1984). Bain (2005) explains that artists seek to cultivate an idealist, yet professionally grounded image by presenting in galleries and exhibitions, while those in corporate settings affirm their identity by developing some sort of “signature” (Elsbach, 2009).\n\nIndividual efforts to reconcile internal identity with social identity is known as identity work (Mallett and Wapshott, 2012), which is said to be particularly challenging. For one, workers have to arbitrate between the autonomy required for self-expression and the productivity demanded by their employers (DeFillippi, 2009; Hotho and Champion, 2011). Attempts at balancing artistic and commercial identities have been studied in a range of creative sectors, such as music (Beech et al., 2016), design (Gotsi et al., 2010), television (Christopherson, 2008; Wei, 2012), video games or software (Deuze et al., 2007; Marks and Scholarios, 2007), and the performing arts (Beech et al., 2012). Bourdieu (1969) is again useful here: by exploring the various “fields” in which creatives exist and operate, tensions emerge between the expectations of the employer (and the sector) and the agency of the individual as they struggle for increased social capital. Fields are the arenas in which individual agents compete for the acquisition of power—or in our context, social capital. Fields intersect and overlap; as we will demonstrate below, there are many individuals beyond just game developers who participate in, and become valued for, the creation of a game. In addition, identity work in creative project-based settings often implies internalizing the job’s (poor) conditions for being “the way it is” and to lay claim to the positive or distinctive elements to fuel self-efficacy and legitimize one’s life choices (Hesmondhalgh and Baker, 2011; Lindgren and Packendorff, 2007). As an example, Red Dead Redemption 2’s head writer publicly bragged about 100-hour work weeks (Schreier, 2018) and 30% of respondents to the 2019 Developer Satisfaction Survey thought unlimited hours were necessary (Weststar et al., 2019). The normalization of such harmful environments is foundational to understanding habitus within the video game industry.\n\nPrior research has noted a managerial trend towards efficiency at the cost of the preservation of artistic freedom, yet the impact of these changes on identity remains unclear. According to Christopherson (2008) “while the idea that work is constructed in conjunction with changes in technology and industrial structure is well established [. . .] the analysis of temporal change and industrial context has been neglected in creative work” (p. 91). Likewise, Elsbach (2009) argues that the ways workers adapt their identity in creative productions has received very little attention to date.\n\nWhat is known, however, is that creative workers cope with these pressures through identity differentiation, or “separating disparate roles that underlie conflicting identities,” and by calling upon different roles “explicitly in different phases of the creative process” (Gotsi et al., 2010: 789). They also substitute it with other moral identities such as authenticity in response to market imperatives (Wei, 2012), or separate their creative from their organizational identity, making their occupational commitment more salient than any organizational commitment (DeFillippi, 2009; Tam et al., 2002). Marks and Scholarios (2007) also argue creatives are more likely to identify with a profession over an organizational identity. For VGDs, it is fitting to approach identity from an occupational angle as they are more than a collection of individual creatives, and amount to a “community of communities” (Cohendet and Simon, 2007: 598), a broader identity akin to both imagined (Anderson, 1983) and occupational (Van Maanen and Barley, 1982) communities.\n\nOccupational communities and video game developers\n\nAccording to Van Maanen and Barley (1982), occupational communities (OCs) possess four key dimensions. First, clear professional boundaries defined by specific knowledge, expertise, and language create an interpretative frame of status and legitimacy. Members rely on these connotative dimensions to set themselves apart and separate “insiders” from “outsiders” (Trice and Beyer, 1993). This conscious distinction explains why members seek maximum control over their tasks and resist “illegitimate” outside influence on their work (Trice, 1993).\n\nWeststar (2015) shows that VGDs share complex technical jargon, rely on a specific canon of past games as conversational reference points and have developed their own stories centered around extreme work (“crunch”) generally leading up to game ship deadlines. However, these intrinsic motives also reinforce industry norms of poor job security and long work hours (Nieborg, 2014).\n\nSecond, OC members’ social identity, that is how they present themselves outside of work, is determined by their professional identity (Lammers and Garcia, 2009), which is reinforced by the persistent stigma—a teenager’s hobby, not a real job—and lack of recognition that comes with their career choice (Caza et al., 2018). This is made evident by shared symbols and values, as well as unique ways of dressing up or talking, that serve to reinforce collective norms. Consequently, OCs demand high involvement and unwavering commitment, often exemplified by the members’ passion for their craft and common responses to—as well as justificatory discourses for—job-related risks. These are likewise constitutive elements of an individual’s habitus and demonstrate key components of an imagined community that are the bases of the very real, collegial communities that VGDs (perhaps unknowingly) create and inhabit. While they may start by playing games just for fun, many VGDs are socialized into the industry as they become interested in making them (Wimmer and Sitnikova, 2012). Over time, they also become acquainted with a distinctive jargon inaccessible to outsiders (O’Donnell, 2009). This, in addition to shared successes and failures, eventually leads to a common sense of identity (Cohendet and Simon, 2007) upon which their collective communities exist.\n\nThird, members of an OC look to a reference group who share values, beliefs, and norms—which then become standards to guide their actions and differentiate “good” work from “bad” work (Trice and Beyer, 1993)—and serve normative and comparative functions (Singer, 1981) as well as supportive functions (Grote and Hall, 2013). Beyond camaraderie and feedback on each other’s work, support also manifests in solidarity between members and influences with whom they choose to engage (Lawrence, 2006). VGDs value artistically and culturally relevant games over commercial success and signal their worth by shipping quality games over time (Weststar, 2015). As such, their identity is inseparable from the projects on which they work and explains why they often care more about creative quality than salaries or job security (Deuze et al., 2007). They regard as heroes those who go the extra mile to ship bigger and better games (Cicmil et al., 2016).\n\nFourth, members of a given OC exhibit close relationships and sustained interactions outside of the workplace, socialize with other developers outside of work, and invest personal time in work-related activities such as playing games or attending industry events (Legault and Weststar, 2017; Weststar, 2015). Members socialize with like-minded people and engage in work-related activities as a hobby (Sluss and Ashforth, 2008). Unconventional work schedules also limit the activities members can partake in and contribute to fostering strong social relations between those who share the same reality (Marschall, 2012). Cohendet and Simon (2007) have also shown how developers “play across” organizational boundaries not just by passion, but also by necessity, as growing a professional network is vital to finding future employment opportunities in “boundaryless” project-based sectors (Sullivan and Arthur, 2006). Yet, this particular industry is persistently homogeneous; surveys consistently report the prototypical worker as being a 30-something-year-old White male with a university degree who does not have children (Weststar et al., 2019). A growing body of research points to video games’ gendered nature (e.g. Gray et al., 2018) and to the contested spaces regarding identity and inclusion (e.g. De Peuter and Young, 2019).\n\nAs permeating as they can be, professional identities, like many other axes of identity, remain fluid. Disruptions have been known to alter OCs and to generate new ones “whose members possess new forms of esoteric skill” (Van Maanen & Barley, 1982: 12). Ashforth et al. (2008) also point to a dynamic construction process in which identities respond to discontinuities in their environment. Thus, we posit that investigating the identity-related impacts of servitization in this particular sector is necessary to understand the implications of the service turn for workers in the creative industries, as well as on the social and cultural forces at play within the industry. Although this is not the focus of this article, the gendered aspects of “passion work” (Harvey and Shepherd, 2017) and the feminization and devaluing of service-based work are also relevant to how servitization might impact the VGD OC, complicate or resolve existing professional identities, and differentially impact groups of workers (e.g. Kerr and Kelleher, 2015).\n\nMethodology\n\nWe approached this study with a broad question: “What impact does the games as a service model have on occupational roles, dynamics and identities?” Through professional relationships we secured access to a large North American studio that develops “triple-A” (big budget blockbusters requiring significant player investment) and casual (simple and short to play) games for both console or PC and mobile markets. While committed to maintaining traditional projects, the studio is also ramping up its GaaS activities and, as such, lent itself perfectly for an exploratory case study (Yin, 2009). Early discussions with representatives from the studio reinforced our question by expressing challenges in understanding, managing, and supporting live teams. The rarity of such a research site cannot be overstated as game development remains vastly understudied because of the “difficulties researchers have in their ability to access field sites” (O’Donnell, 2014: 272).\n\nIn collaboration with the studio’s management, we identified a list of “core” VGD positions, and recruited respondents in both GaaS (mostly MOBA games) and GaaP (mostly sequels of “shooter” franchises) projects. The boundaries between GaaS and GaaP projects are not porous; games are conceived under one model. We decided to include the latter to contrast the former’s experience and to understand servitization’s impact on internal dynamics. In all, we conducted 52 semi-structured interviews (38 GaaS and 14 GaaP developers) each lasting approximately 60 minutes, which were audio-recorded and transcribed. The questions focused on individual and collective workplace experiences and probed for identity and career implications of servitization.\n\nAs per Lincoln and Guba (1985), we took steps to enhance the credibility of our results, such as having two investigators involved throughout data collection and analysis, as well as holding regular “peer-debriefings” in which early interpretations were presented to colleagues and representatives from the host studio. Seeing that our emerging conceptualization resonated with experts allowed us to steer clear of our own biases and to seek out alternative explanations. We also strived to provide a rich account of the interviews to further facilitate the transferability of our findings to other creative settings undergoing a service transition (Lincoln and Guba, 1985).\n\nThe analysis followed a grounded theory methodology (Strauss and Corbin, 1998), in which we first independently reviewed the data and used open coding to produce a first-order scheme of 28 “in-vivo” codes (Corbin and Strauss, 2008). NVIVO’s intercoder reliability function showed that 77% of nodes had an initial “fine” or better Kappa coefficient (⩾0.4), at which point we conducted an intercoder agreement session to reconcile discrepancies (Campbell et al., 2013). Next, we sought commonalities within the first-order codes, which yielded five second-order themes. We moved back and forth between the data and the emerging theory, until we felt that the themes were sufficiently developed and representative of VGDs’ changing identity (Corbin and Strauss, 2008).\n\nResults\n\nOur analysis uncovered evidence of a changing or diverging identity for those who work on live service games relative to the documented professional identity and occupational community of GaaP developers reviewed above. We identified five themes which conceptualize this emerging professional identity: different developer profile, growing internal misunderstandings, deeper external relationships, redefined performance criteria, and shifting reputational drivers. Together, they suggest that the rise of GaaS resulted in an important shift in how live service developers work, define themselves, envision their career, and interact with fellow workers and players.\n\nDifferent developer profile\n\nThis first theme refers to the type of developer whose competency profile and personal preferences are deemed compatible with the work requirements introduced by the new model. Relative to GaaP, working on a live service game requires a temporal shift in orientation to focus on the “post-launch” game experience. From a competency standpoint, team members must be more open to working in an environment where the ideas, team, and processes are continuously changing and evolving in response to external data. Taken together, our results suggest that what constitutes a “good” developer is defined differently on a live service game than for GaaP and that team members rooted in a GaaP mentality and temporality are perceived as a hindrance to the new way.\n\nIndeed, GaaS developers refer to their indeterminate and “always-on” workflow as the main distinguishing feature of their work. Where in GaaP, the work largely ends when the game ships, in GaaS: “It’s like running a marathon and being told to run another 5KM once you see the finish line. You run that extra 5KM, only to find that 2KM was added” (GAAS_DEV_1). This distinguishing feature creates a sense of separation from GaaP that is prevalent among GaaS developers who believe that not everyone is cut out for or has the stamina to thrive in this perpetual environment. As one explained, “most people will find working with no endings difficult. Some will never be able to survive on live projects because they need an end date, I am fine without one” (GAAS_DEV_7). Developers are expected to have a competency profile that suits the new model; staying calm when “putting out fires” (i.e. unexpected glitches), diligently responding to urgent requests or data from players, and working in a much more communicative, transparent, and responsive manner both within the team and towards the players. A GaaS developer summed up the distinction with an analogy: “you wouldn’t ask the same engineer who built the apartment tower to rent it or operate it, it is a different expertise” (GAAS_DEV_21). This analogy is true in GaaP, but in GaaS, the team is both the builder or developer and the operator.\n\nWhen describing this different breed of developers, respondents mentioned the importance of being comfortable with ambiguity and constant feedback, as well as displaying poise, initiative, and flexibility to account for an ever-changing work reality: “key words are: ability to adapt. You can’t say ‘this isn’t my job’ or wait until someone tells you what to do on a live game” (GAAS_DEV_33). They should also be driven by a desire to always improve—themselves, the game, and the player experience—and be interested in a long-haul commitment. This suggests that developers may be able to pick the “right” project for them or at the very least that management ought to be mindful that some developers have no desire to run a game after it goes live when staffing a project. Likewise, some GaaS workers believe they only fit a live model: “those are two different mindsets; one is not better than the other, but one is better for live and one is better for traditional” (GAAS_DEV_3). In this way, GaaS is not seen as a matter of flexibility in one’s approach, but of permanent difference that precludes moving back to GaaP.\n\nThose working on live games also argue that the true expertise in monetization, LiveOps and customer service, can only be gained on the job. The fact that not all developers have had this opportunity explains why the few “seasoned” GaaS VGDs are adamant about retaining a high level of control over the micro elements of their roles, which can be understood as an act of occupational closure: “Nobody tells me what to do in details, I just do the best I can. But due to past experience on live projects, I know what the games need, and what the players want” (GAAS_DEV_14). This is not a statement of individualism as all game production work is heavily team-based within which developers have relative creative autonomy in carrying out the details of their work (Bulut, 2020; O’Donnell, 2014). But, as will be explored more below, this statement of boundary delineation was echoed across our GaaS respondents who seemed to dismiss GaaP developers, managers and those at central HQ alike who failed to fully appreciate the emerging GaaS profile.\n\nGrowing internal misunderstandings\n\nThis second theme suggests that the differences between GaaP and GaaS are great enough to cause developers to feel like they are no longer “speaking the same language” or doing the same work. This leads to growing misunderstandings across projects and the development of new boundaries.\n\nLive developers delineate such boundaries by referring to their work experiences as relative to traditional developers and reinterpreting common jargon. For instance, due to never-ending updates and fixes, GaaS VGDs consider themselves more susceptible to burnout and extreme work situations than their GaaP peers. They point to specific instances of the development process—the moment the game goes live, the release of new DLCs, and so on—as being particularly challenging, more so than the known issues of GaaP game development such as “crunch.” In fact, GaaS developers believe that approaching live service game projects with a traditional product mentality exacerbates those risks: “the difficulty comes when you’re trying to run a live service with the mentality of a box product, because you end up pushing too hard, too fast, which then only stresses and burns people more” (GAAS_DEV_5). This illustrates the feeling that GaaS projects are inherently more stressful, but also that management has failed to understand that the threats differ in nature, scope, and temporality.\n\nSome GaaS developers even suggest that the practices of senior people steeped in GaaP work against them: “they don’t know live and the constraints that come with it. They are focused on a box product, and don’t understand how to run a live game, or how to deal with it” (GAAS_DEV_26). There are problems with reassigning developers to other projects once the game ships or replacing senior developers with junior employees at the end with the assumption that only “cleaning up” tasks remain. But on a live game, this is the point where the work really begins, and trying to convey new principles to those without firsthand experience leads to frustration and feeling separate and misunderstood.\n\nThe real and perceived differences between the models explain why some GaaS VGDs find it harder to interact with those on traditional games: “we used to give ourselves tips. Thing is, people on this [GaaP] project all have their struggles as I have my struggles, but they are too different now” (GAAS_DEV_17). Furthermore, when explaining what GaaS entails—and why they chose to work (stay) in that model—our respondents systematically referred to a handful of successful live games as evidence, effectively circumscribing their professional experience and reference group. Indeed, GaaS VGDs believe that their model is the future and the rest no longer worthwhile, which impacts professional interactions with their peers who are seen as having yet to fully grasp the “inevitability” of the shift. This feeling of a divide is felt among GaaP developers as well. As one explains, “people on a live game look at us as if we are dinosaurs -they say that we can’t understand what they’re doing” (GAAP_DEV_9). Those respondents believe that such negative perceptions regarding the “old” model further inhibit knowledge exchange across projects and make it harder for the studio to staff its different projects when VGDs become so entrenched.\n\nDeeper external relationships\n\nUnlike traditional games, live service games often launch with less content and then expand based on player data and feedback. Historically, game developers are fairly insulated from the community; it is unfortunate if a game does not perform, but those in GaaP are never directly accountable to players. This third theme focuses on the new developer–player interface as a key driver in the emergent GaaS identity. Indeed, developers in GaaS projects now find themselves on the front-line engaging with players, enabling co-creation, and building much deeper relationships.\n\nInterestingly, while a boundary seems to be emerging between GaaS and GaaP developers, there is increased porosity between GaaS developers and players. In fact, developers on such projects have come to embrace co-creation with external contributors and to open up their development process to them: “players are actually really skilled, so it redefines the job and creates dialogue between us and the community. Some people aren’t used to being so close to players. It’s different and changes the reality of those in development” (GAAS_DEV_8). In some way, players may be less of an outsider to GaaS developers than actual GaaP colleagues. Even if they do not directly build live games, the fact that they engage with them so deeply gives players legitimacy.\n\nThus, development has gone from “not giving much thought about how consumers are going to react, to the complete opposite where every single day depends on how the community is feeling” (GAAS_DEV_15). While not unanimously in favor of this form of influence, GaaS developers feel that these interactions allow for increased “value-in-use” and keep them motivated over time.\n\nFurthermore, many GaaS VGDs take pride in looking after players: “we are very good at listening to our players community and we respond to that. And that’s a huge difference with a live game versus a traditional game” (GAAS_DEV_10). The focus is on creating a good game and ensuring players are having a positive experience on their own terms. Such constant feedback allows for bugs to be fixed faster, prompting one GaaS respondent to describe his role as one of a “re-developer.” It also provides a critical second chance to pivot if the game initially misses the mark, a point that GaaS respondents often made to highlight the model’s benefits. Nevertheless, this new reality in which “developers on live games cannot wait for a year to respond to players” (GAAS_DEV_19) or that projects now “launch with minimal content and expand solely based on feedback” (GAAS_DEV_8) runs counter to notions of insularity in traditional game development. In GaaS, iterations are not just developer-planned content (i.e. continuing to ship a completely envisaged game over time). Rather, they come from looking at players and adapting the game on that basis. The creative process of GaaS teams is completely exposed and their autonomy circumscribed by real-time service to the player community. By contrast, the GaaP process is one of secrecy where developers build a stand-alone game and then give it to the world fully formed.\n\nRedefined performance criteria\n\nUnder the first theme, we suggested that what constitutes a “good” developer seems to vary across the two models. In this fourth theme, we see that what constitutes a “good” game also appears to vary. Indeed, results show that GaaS developers value different performance criteria for their games. This impacts their technical and artistic approach, causing them to consciously eschew GaaP’s ways of working because they result in poor live game experiences.\n\nFor instance, unlike in traditional games, stable software, not breathtaking visuals, is a key in a live model: “it’s not so much as having big cinematic as much as making sure that controls are really good, or that user interfaces are clear versus having impressive bombastic graphics” (GAAS_DEV_21). It is not to say that visuals are not important, but simply that functionality, stability, and the ability to continuously add new content onto a stable core framework without resorting to “hacks” or breaking the build is essential for GaaS and ensuring a long-lived product. GaaS projects are built around risk reduction and longevity and value developer performance that delivers on those goals. For instance, to maximize the ability to change the game over time the code must be “clean” and readable and interdependencies between elements of code must be visible and, ideally, minimal. This allows everyone on the current team and any future team to understand quickly what each piece does and how it impacts other pieces so that changes can be made to the game without compromising its integrity. In GaaP, as long as the feature works, less attention can be paid to the quality and documentation of the code because it will not be revisited in the future.\n\nThinking small and safe is somewhat of a departure in the big budget game development world where expectation for realism and spectacle continue to mount. The divergent rationale here is that additional features increase the risk of “bugs” being introduced, which may ultimately lead to player dissatisfaction and come back to haunt them. Thus, throughout their work, GaaS VGDs denote a notably more conservative approach: “we take the time to test everything a few times. I prefer live projects quality vs. quantity philosophy” (GAAS_DEV_12). Not surprisingly, they look at GaaP practices, seen as more obscure and risky, with a more critical eye: “often at the end of traditional games, they take shortcuts, ship it and then it’s done, but we can’t do that because it will come back” (GAAS_DEV_12; emphasis ours to highlight the “us” vs “them” language).\n\nSome even mentioned that GaaP titles designed for limited game play often hold together with “duct tape” at completion, which they believe is to be expected when developers do not have to support it for years onwards. Thus, GaaS developers are adamant about any future implications which create a shared accountability for the total success of a game. Indirectly, this also suggests that commercial success, as opposed to cultural relevance, may not be as much of a taboo on live games, especially when tied to financial incentives. As one of the developers explains, “Money is a good motivator, just look at what Fortnite makes. I’m sure most would be okay with GaaS after their first bonus, and knowing they would be getting these every year” (GAAS_DEV_27).\n\nShifting reputational drivers\n\nThe four themes earlier identify how perceptions of what constitutes a “good” developer and a “good” game differ between the GaaP and GaaS models. Perhaps unsurprisingly, our results also show a change in what makes and what is required for a “good” career. This fifth theme suggests that while reputation remains very important to a successful career in game development, the reputational drivers in GaaS are rooted at the team level as opposed to the industry level and are longer term. New competencies and emerging roles in GaaS also point to new reputational drivers. As such, status and career building differ for developers who work on live games.\n\nIn GaaS, everybody is in it together, but also, in it for the long run; this runs completely counter to reputations built on a short-term project-based system of shipped game titles. As one GaaS developer explains, “everything in traditional games is temporary: new game, new team, everything erased after ship. But in a live game, everything creates a legacy” (GAAS_DEV_4). This implies that reputation and status are no longer about adding lines to a resume, but about showing and proving longevity:\n\nI’m going to stick with those people longer, whereas usually, when you ship the game, you go on another project. To stay longer is amazing, but then you have to prove yourself constantly, as opposed to selling yourself every three years. (GAAS_DEV_15)\n\nGaaS developers may also be less constrained by proscriptive occupational subdisciplines that are steeped in a system of hierarchy and status within the GaaP environment. Monetization, data analytics, usability, and community management are now increasingly driving decisions. Disciplinary silos and occupational hierarchies (with technical and design roles on top) are flattening in the face of a need for rapid cross-disciplinary communication and collaboration. As a result, expanded responsibilities for some GaaS workers, alter teams’ dynamics: who is “core” changes when success depends as much on operations as on art and gameplay. It also means that those in strategic roles now take a back seat to “reactive” front-line work: “I have less influence because my role is a rational one, whereas on live games, the level of urgency put the onus on those that are reactive” (GAAS_DEV_22). This inevitably crowds out planning and creative roles, along with those who built their career pitching elaborate plots. However, we observed that job titles with “live” still face stigmatization, especially within a studio built on the incumbent model.\n\nLikewise, GaaS VGDs reject more than just the management approach or the performance criteria; they also reject the long-established industry networks tied to GaaP, and suggest new comparisons and reference groups: “People I know worked on a game at Blizzard for seven years without shipping. But they’ll say what they did and people will see value in that and give them a job” (GAAS_DEV_15). More importantly, this also signals that shipping may not be as strong of a reputational marker in GaaS: “if they start a new service game, I am infinitely more appealing than someone who hasn’t done that. It’s not just about titles, it’s really about what you can do” (GAAS_DEV_12). In fact, working on a game that creates a deep relationship with players, is technologically stable and experiences market longevity now seems to matter more. Shipping as a metric of success may become secondary: “that’s an old-school way of looking at it. You’re going to tell me that someone who worked on World of Warcraft and is now looking for a job is going to have trouble finding one?” (GAAS_DEV_15). Servitization is also seen as this unstoppable broader disruption that puts GaaS workers in a more desirable position career-wise: “it’s not going to fade away. It reflects the consumption across the media industry, including televisions and movies. So yes, working on a project with clear live ambitions is good for me” (GAAS_DEV_15).\n\nDiscussion\n\nWhile previous studies have shed light on the complex and permeating identity of VGDs, the industry has since experienced production and consumption changes in the shift away from traditional “box” games. While this is a global trend, this article focused on a studio in the North American context. Our results show that servitization impacts the professional identity of live game developers in five areas: different developer profile, growing internal misunderstandings, deeper external relationships with players, redefined performance criteria, and shifting reputational drivers. We theorize that the changes to the labour process has disrupted existing elements of the collective VGD professional identity, as conceptualized by an occupational community—particularly regarding professional boundaries, social identity, and reference groups. Whether these impacts are universally for the best is unclear, as many go against received dimensions of VGDs’ collective identity, but the shift does have significant implications. We also hypothesize that the emergence of this new identity is political in that GaaS developers are motivated to ‘champion’ and heavily differentiate the new model to protect their emerging roles and mitigate against the risks of being devalued and under resourced if their model is not understood.\n\nHowever, many speak positively about GaaS and have seemingly bought into or prefer this model. This reflects their positive belief in what live games might bring career-wise and through the connection with players. But identities are not neutral—they are co-constructed within a social field laden with different power dynamics and a contested space of meanings. Much of GaaS is an unknown. Industry practices and processes still squarely value the GaaP model and the discourse of servitization carries a strong efficiency and player maximization agenda that is rejected by many in a creative setting. Our research reveals that the identity work for GaaS developers is not merely about balancing individual artistic and commercial motives, but an attempt to advantageously locate themselves in the emergent space that has overlapping communities and fields.\n\nAs such, workers “buy into” their environments and into its values to manage cognitive dissonance: “not only are individuals reinforcing established notions of project work while working on projects—they also at the same time construct their own professional identities, reinforcing notions about themselves as professional [. . .] enough to endure hardships” (Lindgren and Packendorff, 2007: 355). Results suggest that GaaS developers are engaged in crafting a narrative to legitimize GaaS relative to the norms and identities of GaaP. They have internalized their vested interest, and while aware of the challenges, elect to paint it as an exciting departure. We argue that the creation of an identity has a protective purpose—not dissimilar to the theoretical concepts of collective occupational closure (Van Maanen and Barley, 1982) —to elevate their roles and to make their efforts worthwhile.\n\nThe rise of new “war stories” from the post-launch trenches and widespread use of model-specific analogies show how GaaS VGDs collectively construct their identity through storytelling (Bayerl et al., 2018). The distinction from GaaP is a conscious one for GaaS developers, whose identity is further constructed by contrasting their challenges with those of the incumbents (Grote and Hall, 2013). Although this can be theorized as a survival mechanism, a hardening boundary between the two models raises contradictory broader implications. Specifically, only referring to live games as examples of “good” work is antithetical to an industry where inspiration is sought from everywhere.\n\nAs GaaS VGDs choose to limit interactions with GaaP colleagues and point out flaws in their work, they create barriers to knowledge sharing and career mobility and disrupt the imagined communities upon which the entire industry was built. The narrative of who is suited to GaaS—a certain kind of person who can hack it—is regressive in light of the movement to improve working conditions in the industry (i.e. Weststar and Legault, 2019). Likewise, how GaaS developers talk about a different mind-set and claim responsibility for players also point to a new identity (Ashmore et al., 2004). Distinctive development principles and values further hint at a distinct reference group (Van Maanen, 2010), which in turn holds implications for human resource practices within studios and across the industry. For instance, GaaS developers might enter and be socialized into the industry differently, and as such might display unique training needs.\n\nWe also see clear distinctions in the ways that VGDs from each side of the design divide understand and accumulate social capital. When these different value systems clash, there is potential for disruption to productivity and workflow. As well, the community in which social fields emerge include different actors, most notably the absence of players in a GaaP model but their presence in a GaaS model. Opening up to the community fosters greater connections and the capacity for players to see themselves reflected in a game’s development. Such participatory component engenders new behaviors for VGDs (i.e. communication skills needed for engaging players), as they are essentially not only directly reporting to the studio but also to the community.\n\nOur results also show that servitization is not simply a matter of doing things differently; it is also about seeing oneself and one’s role differently and about entering into, if not completely creating, communities through new shared social norms. It could be an opportunity for workers to redefine their “perception of self, their voice and their influence in shaping their own social roles and place” (Cicmil & Hodgson, 2006: 119), provided they are granted agency in that redefinition, as well as participatory spaces to determine a new, sustainable meaning of project success. Performance in GaaP is not the same as GaaS and it is worthwhile to acknowledge that workers can play a role in redefining a more holistic definition of success. While studios cannot simply flop GaaP meanings onto GaaS projects, our data also reveal that the “GaaS as the future” rhetoric is generally driven by people who have a vested interest in making this work and is therefore not uncontested.\n\nSimilar challenges have been highlighted in the servitization literature but appear to preclude such worker agency. For instance, Kowalkowski et al. (2017) call for management to “inculcate” a service culture, while Lenka et al. (2018) argue that changes ought to “trickle down” from the top. Our results suggest the need for a much more bottom-up process, in which the alignment between strategy and workers is driven organically by developers who have embraced, for better and for worse, and laid claim to new role territory. Although the turn to GaaS has come as managerial dictate, it is the workers within these projects who are shaping its terms and advocating upwards.\n\nAlthough not the focus of this article, the emergence of a GaaS identity and the potential valuation of new roles also has gendered implications in a male-dominated industry that forefronts technical skills. Whether it creates new opportunities for underrepresented workers is yet to be seen, as is how these roles are ultimately valued in the hierarchy of game development. In addition, heightened interactions with players are bound to introduce identity dilemmas (DeFillippi, 2009); for instance, the service-work of community managers for games has been shown to be gendered and devalued (Kerr, 2016). While our results suggest a positive relationship between invested live developers and players, experts have begun to see co-creation as a threat (Lifshitz-Assaf, 2018). This is even more relevant for creative workers, who are typically known to be very protective of their creative autonomy and for pushing back against competing organizational logics (e.g. Hotho and Champion, 2011). As such, a fully “coupled” dynamic in which developers are never freed to pursue their own creative expression is hardly tenable (Cohendet and Simon, 2007). Studios do not want to squash the developer’s voice entirely, while also ensuring that they understand that they now operate in a service business. Yet, in the end, Lysova and Khapova (2019: 36) rightfully remind us that developers’ calling stems primarily from “an enduring, compelling, and meaningful urge to engage in creative work,” and thus, rarely from just wanting to provide customer service."
    }
}