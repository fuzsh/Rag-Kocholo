{
    "id": "dbpedia_4551_1",
    "rank": 91,
    "data": {
        "url": "http://smoothieware.github.io/Webif-pack/documentation/web/html/arduino.html",
        "read_more_link": "",
        "language": "en",
        "title": "Wikipedia, the free encyclopedia",
        "top_image": "",
        "meta_img": "",
        "images": [
            "http://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Arduino_Logo.svg/50px-Arduino_Logo.svg.png",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Arduino_Uno_-_R3.jpg/220px-Arduino_Uno_-_R3.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Ambox_current_red.svg/42px-Ambox_current_red.svg.png",
            "http://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/6/6c/Arduino316.jpg/220px-Arduino316.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/9/9d/UnoConnections.jpg/220px-UnoConnections.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Arduino_Diecimila_6.jpg/120px-Arduino_Diecimila_6.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Arduino_Duemilanove_2009b.jpg/120px-Arduino_Duemilanove_2009b.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Arduino_UNO_unpacked.jpg/120px-Arduino_UNO_unpacked.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Arduino_Leonardo.jpg/120px-Arduino_Leonardo.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/0/01/Arduino_Mega.jpg/120px-Arduino_Mega.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Arduino_MEGA_2560_R3%2C_front_side.jpg/120px-Arduino_MEGA_2560_R3%2C_front_side.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/Arduino_MEGA_2560_R3%2C_back_side.jpg/120px-Arduino_MEGA_2560_R3%2C_back_side.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/Arduino_Nano.jpg/55px-Arduino_Nano.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/3/36/ArduinoDue_Front.jpg/120px-ArduinoDue_Front.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/LilyPad_Arduino_Main_Board.JPG/120px-LilyPad_Arduino_Main_Board.JPG",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/ArduinoYun.jpg/120px-ArduinoYun.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Arduino_Protoboard_Shields.jpg/120px-Arduino_Protoboard_Shields.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/7/72/Wingshield_on_Arduino_-_ARSH-05-WI.jpg/120px-Wingshield_on_Arduino_-_ARSH-05-WI.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Adafruit_Motor_Shield_-_ARSH-02-MS_01.jpg/120px-Adafruit_Motor_Shield_-_ARSH-02-MS_01.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/e/ee/ARSH-09-DL_03.jpg/120px-ARSH-09-DL_03.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Fabric_Shield_for_Arduino_Nano.JPG/120px-Fabric_Shield_for_Arduino_Nano.JPG",
            "http://upload.wikimedia.org/wikipedia/en/thumb/d/d9/Arduino_1.0_IDE%2C_Ubuntu_11.10.png/220px-Arduino_1.0_IDE%2C_Ubuntu_11.10.png",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Power_and_Pin13_LED_on_Arduino_Compatible_Board.jpg/220px-Power_and_Pin13_LED_on_Arduino_Compatible_Board.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/6/66/Arduino-compatible_R3_UNO_Sku066313-01.jpg/220px-Arduino-compatible_R3_UNO_Sku066313-01.jpg",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Free_and_open-source_software_logo_(2009).svg/28px-Free_and_open-source_software_logo_(2009).svg.png",
            "http://upload.wikimedia.org/wikipedia/commons/thumb/8/8d/Nuvola_apps_ksim.png/28px-Nuvola_apps_ksim.png",
            "http://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/30px-Commons-logo.svg.png",
            "http://upload.wikimedia.org/wikipedia/en/thumb/d/db/Symbol_list_class.svg/16px-Symbol_list_class.svg.png",
            "http://en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/wikimedia-button.png",
            "https://en.wikipedia.org/w/resources/assets/poweredby_mediawiki_88x31.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://en.wikipedia.org/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Arduino",
        "text": "For other uses, see Arduino (disambiguation).\n\nArduino\n\n\"Arduino Uno\" SMD Revision 3\n\nType Single-board microcontroller Operating system None CPU AVR, ARM Cortex, Intel Quark Memory SRAM Storage Flash Memory, EEPROM Graphics None Website www .arduino .cc\n\nArduino is a software company, project, and user community that designs and manufactures computer open-source hardware, open-source software, and microcontroller-based kits for building digital devices and interactive objects that can sense and control physical devices.[1]\n\nThe project is based on microcontroller board designs, produced by several vendors, using various microcontrollers. These systems provide sets of digital and analog I/O pins that can interface to various expansion boards (termed shields) and other circuits. The boards feature serial communication interfaces, including Universal Serial Bus (USB) on some models, for loading programs from personal computers. For programming the microcontrollers, the Arduino project provides an integrated development environment (IDE) based on a programming language named Processing, which also supports the languages C and C++.\n\nThe first Arduino was introduced in 2005, aiming to provide a low cost, easy way for novices and professionals to create devices that interact with their environment using sensors and actuators. Common examples of such devices intended for beginner hobbyists include simple robots, thermostats, and motion detectors.\n\nArduino boards are available commercially in preassembled form, or as do-it-yourself kits. The hardware design specifications are openly available, allowing the Arduino boards to be produced by anyone. Adafruit Industries estimated in mid-2011 that over 300,000 official Arduinos had been commercially produced,[2] and in 2013 that 700,000 official boards were in users' hands.[3]\n\nHistory[edit]\n\nColombian student Hernando Barragán created the development platform Wiring as his Master's thesis project in 2004 at the Interaction Design Institute Ivrea in Ivrea, Italy. Massimo Banzi and Casey Reas (known for his work on Processing) were supervisors for his thesis. The goal was to create low cost, simple tools for non-engineers to create digital projects. The Wiring platform consisted of a hardware PCB with an ATmega128 microcontroller, an integrated development environment (IDE) based on Processing and library functions to easily program the microcontroller.[4]\n\nIn 2005, Massimo Banzi, with David Mellis (then an IDII student) and David Cuartielles, added support for the cheaper ATmega8 microcontroller to Wiring. But instead of continuing the work on Wiring, they forked (or copied) the Wiring source code and started running it as a separate project, called Arduino.[4]\n\nThe Arduino's initial core team consisted of Massimo Banzi, David Cuartielles, Tom Igoe, Gianluca Martino, and David Mellis.[5]\n\nThe name Arduino comes from a bar in Ivrea, where some of the founders of the project used to meet. The bar was named after Arduin of Ivrea, who was the margrave of the March of Ivrea and King of Italy from 1002 to 1014.[6]\n\nFollowing the completion of the Wiring platform, its lighter, lower cost versions[7] were created and made available to the open-source community. Associated researchers, including David Cuartielles, promoted the idea.[5]\n\nHardware[edit]\n\nAn Arduino board historically consists of an Atmel 8-, 16- or 32-bit AVR microcontroller (although since 2015 other makers' microcontrollers have been used) with complementary components that facilitate programming and incorporation into other circuits. An important aspect of the Arduino is its standard connectors, which let users connect the CPU board to a variety of interchangeable add-on modules termed shields. Some shields communicate with the Arduino board directly over various pins, but many shields are individually addressable via an I²C serial bus—so many shields can be stacked and used in parallel. Before 2015, Official Arduinos had used the Atmel megaAVR series of chips, specifically the ATmega8, ATmega168, ATmega328, ATmega1280, and ATmega2560. In 2015, units by other producers were added. A handful of other processors have also been used by Arduino compatible devices. Most boards include a 5 V linear regulator and a 16 MHz crystal oscillator (or ceramic resonator in some variants), although some designs such as the LilyPad run at 8 MHz and dispense with the onboard voltage regulator due to specific form-factor restrictions. An Arduino's microcontroller is also pre-programmed with a boot loader that simplifies uploading of programs to the on-chip flash memory, compared with other devices that typically need an external programmer. This makes using an Arduino more straightforward by allowing the use of an ordinary computer as the programmer. Currently, optiboot bootloader is the default bootloader installed on Arduino UNO.[9]\n\nAt a conceptual level, when using the Arduino integrated development environment, all boards are programmed over a serial connection. Its implementation varies with the hardware version. Some serial Arduino boards contain a level shifter circuit to convert between RS-232 logic levels and transistor–transistor logic (TTL) level signals. Current Arduino boards are programmed via Universal Serial Bus (USB), implemented using USB-to-serial adapter chips such as the FTDI FT232. Some boards, such as later-model Uno boards, substitute the FTDI chip with a separate AVR chip containing USB-to-serial firmware, which is reprogrammable via its own ICSP header. Other variants, such as the Arduino Mini and the unofficial Boarduino, use a detachable USB-to-serial adapter board or cable, Bluetooth or other methods, when used with traditional microcontroller tools instead of the Arduino IDE, standard AVR in-system programming (ISP) programming is used.\n\nThe Arduino board exposes most of the microcontroller's I/O pins for use by other circuits. The Diecimila[a], Duemilanove[b], and current Uno[c] provide 14 digital I/O pins, six of which can produce pulse-width modulated signals, and six analog inputs, which can also be used as six digital I/O pins. These pins are on the top of the board, via female 0.1-inch (2.54 mm) headers. Several plug-in application shields are also commercially available. The Arduino Nano, and Arduino-compatible Bare Bones Board[10] and Boarduino[11] boards may provide male header pins on the underside of the board that can plug into solderless breadboards.\n\nMany Arduino-compatible and Arduino-derived boards exist. Some are functionally equivalent to an Arduino and can be used interchangeably. Many enhance the basic Arduino by adding output drivers, often for use in school-level education, to simplify making buggies and small robots. Others are electrically equivalent but change the form factor, sometimes retaining compatibility with shields, sometimes not. Some variants use different processors, of varying compatibility.\n\nOfficial boards[edit]\n\nThe original Arduino hardware was produced by the Italian company Smart Projects.[12] Some Arduino-branded boards have been designed by the American companies SparkFun Electronics and Adafruit Industries.[13] As of 2016 , 17 versions of the Arduino hardware had been commercially produced.\n\nExample Arduino boards\n\nArduino Diecimila in Stoicheia\n\nArduino Duemilanove (rev 2009b)\n\nArduino UNO\n\nArduino Leonardo\n\nArduino Mega\n\nArduino MEGA 2560 R3 (front side)[d]\n\nArduino MEGA 2560 R3 (back side)[d]\n\nArduino Nano\n\nArduino Due\n\n(ARM Cortex-M3 core)\n\nLilyPad Arduino (rev 2007)\n\nArduino Yun\n\nShields[edit]\n\nArduino and Arduino-compatible boards use printed circuit expansion boards called shields, which plug into the normally supplied Arduino pin headers. Shields can provide motor controls, Global Positioning System (GPS), Ethernet, liquid crystal display (LCD), or breadboarding (prototyping). Several shields can also be made do it yourself (DIY).[15][16][17]\n\nExample Arduino shields\n\nMultiple shields can be stacked. In this example the top shield contains a solderless breadboard.\n\nScrew-terminal breakout shield in a wing-type format\n\nAdafruit Motor Shield with screw terminals for connection to motors\n\nAdafruit Datalogging Shield with a Secure Digital (SD) card slot and real-time clock (RTC) chip\n\nHackARobot Fabric Shield – designed for Arduino Nano to hook up motors and sensors such as gyroscope or GPS, and other breakout boards such as WiFi, Bluetooth, RF, etc.\n\nSoftware[edit]\n\nArduino Software IDE\n\nScreenshot of the Arduino IDE showing the Blink simple beginner program\n\nDeveloper(s) Arduino Software Stable release 1.6.8 / 9 March 2016; 2 months ago ( )[18] Written in Java, C and C++ Operating system Cross-platform Type Integrated development environment License LGPL or GPL license Website arduino .cc\n\nArduino programs may be written in any programming language with a compiler that produces binary machine code. Atmel provides a development environment for their microcontrollers, AVR Studio and the newer Atmel Studio.[19][20]\n\nThe Arduino project provides the Arduino integrated development environment (IDE), which is a cross-platform application written in the programming language Java. It originated from the IDE for the languages Processing and Wiring. It is designed to introduce programming to artists and other newcomers unfamiliar with software development. It includes a code editor with features such as syntax highlighting, brace matching, and automatic indentation, and provides simple one-click mechanism to compile and load programs to an Arduino board. A program written with the IDE for Arduino is called a \"sketch\".[21]\n\nThe Arduino IDE supports the languages C and C++ using special rules to organize code. The Arduino IDE supplies a software library called Wiring from the Wiring project, which provides many common input and output procedures. A typical Arduino C/C++ sketch consist of two functions that are compiled and linked with a program stub main() into an executable cyclic executive program:\n\nsetup(): a function that runs once at the start of a program and that can initialize settings.\n\nloop(): a function called repeatedly until the board powers off.\n\nAfter compiling and linking with the GNU toolchain, also included with the IDE distribution, the Arduino IDE employs the program avrdude to convert the executable code into a text file in hexadecimal coding that is loaded into the Arduino board by a loader program in the board's firmware.\n\nSample program[edit]\n\nA typical program for a beginning Arduino programmer blinks a light-emitting diode (LED) on and off. This program is usually loaded in the Arduino board by the manufacturer. In the Arduino environment, a user might write such a program as shown:[22]\n\n#define LED_PIN 13 void setup() { pinMode(LED_PIN, OUTPUT); // Enable pin 13 for digital output } void loop() { digitalWrite(LED_PIN, HIGH); // Turn on the LED delay(1000); // Wait one second (1000 milliseconds) digitalWrite(LED_PIN, LOW); // Turn off the LED delay(1000); // Wait one second }\n\nMost Arduino boards contain an LED and a load resistor connected between pin 13 and ground which is a convenient feature for many tests.[22]\n\nDevelopment[edit]\n\nArduino is an open-source hardware. The hardware reference designs are distributed under a Creative Commons Attribution Share-Alike 2.5 license and are available on the Arduino website. Layout and production files for some versions of the hardware are also available. The source code for the IDE is released under the GNU General Public License, version 2.[23]\n\nAlthough the hardware and software designs are freely available under copyleft licenses, the developers have requested that the name \"Arduino\" be exclusive to the official product and not be used for derived works without permission. The official policy document on use of the Arduino name emphasizes that the project is open to incorporating work by others into the official product.[24] Several Arduino-compatible products commercially released have avoided the Arduino name by using -duino name variants.[25]\n\nApplications[edit]\n\nXoscillo, an open-source oscilloscope[26]\n\nScientific equipment[27] such as the Chemduino[28]\n\nArduinome, a MIDI controller device that mimics the Monome\n\nOBDuino, a trip computer that uses the on-board diagnostics interface found in most modern cars\n\nArdupilot, drone software and hardware\n\nArduinoPhone, a do-it-yourself cellphone[29][30]\n\nGertDuino, an Arduino mate for the Raspberry Pi[31]\n\nWater quality testing platform[32]\n\nHomemade CNC using Arduino and DC motors with close loop control by Homofaciens[33]\n\nDC motor control using Arduino and H-Bridge[34]\n\nRecognitions[edit]\n\nThe Arduino project received an honorary mention in the Digital Communities category at the 2006 Prix Ars Electronica.[35]\n\nTrademark dispute[edit]\n\nIn early 2008, the five cofounders of the Arduino project created a company, Arduino LLC,[36] to hold the trademarks associated with Arduino. The manufacture and sale of the boards was to be done by external companies, and Arduino LLC would get a royalty from them. The founding bylaws of Arduino LLC specified that each of the five founders transfer ownership of the Arduino brand to the newly formed company.[citation needed]\n\nAt the end of 2008, Gianluca Martino's company, Smart Projects, registered the Arduino trademark in Italy and kept this a secret from the other cofounders for about two years. This was revealed when the Arduino company tried to register the trademark in other areas of the world (they originally registered only in the US), and discovered that it was already registered in Italy. Negotiations with Gianluca and his firm to bring the trademark under control of the original Arduino company failed. In 2014, Smart Projects began refusing to pay royalties. They then appointed a new CEO, Mr. Musto, who renamed the company to Arduino SRL and created a website named arduino.org, copying the graphics and layout of the original Arduino.cc. This resulted in a rift in the Arduino development team. All Arduino boards are still available to consumers, and the designs are open source, so the implications of this are uncertain.[37][38][39]\n\nIn May 2015, \"Genuino\" was created around the world as another trademark, held by Arduino LLC, and is currently being used as Arduino LLC's brand name outside of the US.[40]\n\nSee also[edit]\n\nComparison of single-board computers\n\nIntel Edison\n\nList of Arduino boards and compatible systems\n\nIOIO\n\nNotes[edit]\n\nReferences[edit]\n\nFurther reading[edit]\n\nGetting Started with Arduino; Massimo Banzi, Michael Shiloh; 262 pages; 2014; ISBN 1-4493-6333-4.\n\nMake: Sensors; Tero Karvinen, Kimmo Karvinen, Ville Valtokari; 400 pages; 2014; ISBN 978-1-4493-6810-4.\n\nArduino For Dummies; John Nussey; 446 pages; 2013; ISBN 978-1118446379.\n\nProgramming Arduino Next Steps: Going Further with Sketches; Simon Monk; 2013; ISBN 978-0071830256.\n\nExploring Arduino: Tools and Techniques for Engineering Wizardry; Jeremy Blum; 384 pages; 2013; ISBN 978-1118549360.\n\nArduino Workshop: A Hands-On Introduction with 65 Projects; John Boxall; 392 pages; 2013; ISBN 978-1593274481.\n\nBeginning C for Arduino: Learn C Programming for the Arduino and Compatible Microcontrollers; Jack Purdum; 280 pages; 2012; ISBN 978-1430247760.\n\nProgramming Arduino: Getting Started With Sketches; Monk Simon; 162 pages; 2011; ISBN 978-0071784221.\n\nMake: Electronics (Learning by Discovery); Charles Platt; 352 pages; 2009; ISBN 978-0596153748.\n\n[edit]"
    }
}