{
    "id": "dbpedia_3950_3",
    "rank": 9,
    "data": {
        "url": "https://aws.amazon.com/comprehend/pricing/",
        "read_more_link": "",
        "language": "en",
        "title": "Amazon Comprehend – Pricing",
        "top_image": "https://a0.awsstatic.com/libra-css/images/logos/aws_logo_smile_1200x630.png",
        "meta_img": "https://a0.awsstatic.com/libra-css/images/logos/aws_logo_smile_1200x630.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "With Amazon Comprehend natural language processing, you only pay for the text you process.",
        "meta_lang": "en",
        "meta_favicon": "https://a0.awsstatic.com/libra-css/images/site/fav/favicon.ico",
        "meta_site_name": "Amazon Web Services, Inc.",
        "canonical_link": "https://aws.amazon.com/comprehend/pricing/",
        "text": "Amazon Comprehend pricing examples\n\nLet us assume you have built an application using Amazon Comprehend to analyze customer comments on your online store. You have received 10,000 customer comments that are 550 characters each, and you are in the second year of your use of the service.\n\nTotal charge calculation:\n\nSize of each request = 550 characters\n\nNumber of units per request = 6\n\nTotal Units: 10,000 (requests) x 6 (units per request) = 60,000\n\nPrice per unit = $0.0001\n\nTotal cost = [No. of units] x [Cost per unit] = 60,000 x $0.0001 = $6.00\n\nExample 2 - Categorizing Documents by Topics\n\nLet us say you have a set of research documents totaling 240 MB in size that you want to categorize by topic and recommend documents to your customers based on their area of interest. Let us also assume that you are in the second year of your use of the service and are not eligible for the free tier offering.\n\nTotal charge calculation:\n\nTotal megabytes processed = 240\n\nMegabytes billed at a flat rate of $1 = 100\n\nMegabytes billed at $0.004/MB = 140 [240-100]\n\nTotal cost of the job = $1.00 + [140 x $0.004] = $1.00 + $0.56 = $1.56\n\nExample 3 - Classifying Customer Feedback using the Custom Classification API\n\nLet us say you want to train a classifier to automatically organize new customer feedback that comes in from your website. 10 customers enter feedback every minute, and each piece of feedback is 300 characters. It takes one hour to train the custom model, and you are planning to keep this model for a month. So, model training costs will be $3 and model storage costs will be $0.5 for the month. Let us also assume that you are in the second year of your use of the service and are not eligible for the free tier offering.\n\nTo classify the feedback asynchronously you pay by number of characters in your documents. To classify in real time you provision an endpoint with enough throughput to handle your use case and pay for the time that the end point is up.\n\nInference cost calculation for asynchronous classification:\n\nSize of each request per day = 4,320,000 characters [300 characters * 10 docs * 1,440 minutes]\n\nNumber of units per request = 43,200 units [432,000 characters ÷ 100 character per unit]\n\nPrice per unit = $0.0005\n\nTotal inference cost for units = $21.60 [43,200 units x $0.0005]\n\nTotal cost = $25.10 [$21.60 inference + $3 model training + $0.50 model storage]\n\nTotal charge calculation for synchronous classification:\n\nFirst, let’s calculate the required throughput. Every minute we’re classifying 10 documents of 300 character each. So that’s:\n\n50 characters per second [300 characters x 10 documents ÷ 60 seconds]\n\nSo, you will need to provision an endpoint with 1 Inference Unit (IU), which gives a throughput of 100 characters/second.\n\nPrice for 1 IU = $0.0005 per second\n\nYou will incur costs depending on how long you’re keeping your real time classification endpoint active, regardless of how many inference calls are made.\n\nIf you’re running your real time classification endpoint for 12 hours per day:\n\nTotal inference cost = $21.60 [$0.0005 x 3600 seconds x 12 hours]\n\nTotal cost = $25.10 [$21.60 inference + $3 model training + $0.50 model storage]\n\nNote that you incur cost for the throughput provisioned and for the amount of time the endpoint is active. If you needed to provision more throughput, the price would be:\n\nPrice for 2 IU = $0.001 per second [$0.0005 x 2]\n\nPrice for 3 IU = $0.0015 per second [$0.0005 x 3]\n\nLet us say you want to train a custom entity model to automatically extract custom terms from customer feedback that comes in from your website. The training job takes 1.5 hours, and you analyze 10,000 pieces of customer feedback that are 550 characters each. You are planning to keep this model for a month. Let us also assume that you are in the second year of your use of the service and are not eligible for the free tier offering.\n\nTotal charge calculation:\n\nSize of each request = 5,500,000 characters\n\nNumber of units per request = 55,000 units [5,500,000 characters ÷ 100 character per unit]\n\nPrice per unit = $0.0005\n\nTotal cost for units = $27.5 [55,000 units x $0.0005]\n\nTotal hours for model training = 1.5 hours\n\nPrice per hour = $3\n\nTotal cost for model training = $4.5 [1.5 hours x $3]\n\nNumber of months for model management = 1 month\n\nPrice per month = $0.50\n\nTotal cost for model management = $0.50 [1 month x $0.50]\n\nTotal cost = $37 [$27.5 + $4.5 + $0.50]\n\nExample 5 – Extracting events and the associated information using Event Detection\n\nLet’s assume you want to extract 3 event types from 3,000 articles of 500 characters each and you are in the second year of your use of the service.\n\nTotal charge calculation:\n\nNumber of characters processed = 1,500,000 characters [3,000 articles x 500 characters]\n\nNumber of units processed = 45,000 units [1,500,000 x 3 event types ÷ 100 characters per unit]\n\nPrice per unit = $0.003\n\nTotal cost for units = $135 [45,000 units x $0.003]\n\nExample 6 – Identifying documents with PII using Contains PII API\n\nLet us assume you have built an application using Amazon Comprehend to analyze customer comments on your online store. You have received 10,000 customer comments that are 550 characters each, and you need to identify which documents contain PII so that they can be stored in a secure location. Let us assume you are in the second year of your use of the service.\n\nTotal charge calculation:\n\nSize of each request = 550 characters\n\nNumber of units per request = 6\n\nTotal Units = 60,000 [10,000 requests x 6 units per request]\n\nPrice per unit = $0.000002\n\nTotal cost = $0.12 [60,000 units x $0.000002]\n\nExample 7 – Redacting PII from documents using Detect PII API\n\nLet us assume you have built an application using Amazon Comprehend to analyze customer comments on your online store. You have received 10,000 customer comments that are 550 characters each, and you need to create redacted versions of the documents before they are archived. Let us assume you are in the second year of your use of the service.\n\nTotal charge calculation:\n\nSize of each request = 550 characters\n\nNumber of units per request = 6\n\nTotal Units = 60,000 [10,000 requests x 6 units per request]\n\nPrice per unit = $0.0001\n\nTotal cost = $6 [60,000 units x $0.0001]\n\nExample 8 – Extracting Mortgage Application Entities using the Custom Entity API\n\nLet us say you want to train a custom entity extraction model to extract 10 custom entities from a mortgage application. One hundred customers apply every day, each providing a 10-page scanned PDF document containing 2,500 characters per page. Using Amazon Textract, let’s assume we need to extract the text from every single page processed before extracting entities using Detect Document Text API. It takes one hour to train the custom model, and you are planning to keep this model for a month. So, model training costs will be $3 and model storage costs will be $0.50 for the month. Let us also assume that you are in the second year of your use of the service and are not eligible for the free tier offering. To extract custom entities asynchronously you pay by number of characters in your documents. To extract entities in real time you provision an endpoint with enough throughput to handle your use case and pay for the time that the end point is up.\n\nExample 9 – Analyzing Employee Survey Responses\n\nLet us assume you have built an application using Amazon Comprehend Targeted Sentiment to analyze employee survey responses for your corporation. You have received 100,000 survey responses that are 350 characters each, and you are in the second year of your use of the service.\n\nLet us assume you have built an application using Amazon Comprehend to detect toxicity in comments on your website. You have received 100M customer comments that are 100 characters each, and you need to identify which comments are toxic in nature and should be redacted. Let us assume you are in the second year of your use of the service.\n\nTotal charge calculation:\n\nSize of each request = 100 characters\n\nNumber of units per request = 1 Total\n\nUnits= 100M IUs [100M comments x 1 unit per request]\n\nPrice per unit = $0.0001 [from 0 - 10M IUs] + $0.00005 [from 10M - 50M IUs] + $0.000025 [from 50M – 100M IUs]\n\nTotal cost = [No. of units] x [Cost per unit]\n\n= [10MX$0.001]+[40MX$0.00005]+[50MX$0.000025]\n\n= $1,000 + $2,000 + $1,250\n\n= $4,250\n\nExample 11 - Detecting unsafe prompts in generative AI application\n\nLet us assume you have built an application using Amazon Comprehend to detect unsafe input prompts when your users interact with your generative AI product. You have received 10M input prompts that are 500 characters each, and you need to identify which prompts are unsafe. Let us assume you are in the second year of your use of the service.\n\nTotal charge calculation:\n\nSize of each request = 500 characters\n\nNumber of units per request = 5\n\nTotal Units= 50M IUs [10M comments x 5 unit per request]\n\nPrice per unit = $0.0001 [from 0 - 10M IUs] + $0.00005 [from 10M - 50M IUs] + $0.000025 [from 50M – 100M IUs]\n\nTotal cost = [No. of units] x [Cost per unit]\n\n= [10M X $0.001]+[40M X $0.00005]\n\n= $1,000 + $2,000\n\n= $3,000"
    }
}