{
    "id": "yago_31588_2",
    "rank": 63,
    "data": {
        "url": "https://catonmat.net/donald-knuths-first-computer",
        "read_more_link": "",
        "language": "en",
        "title": "Donald Knuth's First Computer",
        "top_image": "https://catonmat.net/images/catonmat-preview-image.png",
        "meta_img": "https://catonmat.net/images/catonmat-preview-image.png",
        "images": [
            "https://catonmat.net/images/catonmat-logo-clean.png",
            "https://catonmat.net/wp-content/uploads/2010/02/young-donald-knuth-ibm-650-1958.jpg",
            "https://catonmat.net/images/this-space-reserved-for-jelly-stains.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "I was reading Knuth's \"Selected Papers on Computer Science\" and in chapter 13 \"The IBM 650: An Appreciation from the Field\" he had included a photo of a young himself from 1958 at his first computer. Young Donald Knuth, age 20, at his first IBM 650 computer in 1958. Don Knuth's first computer, as the chapter's title...",
        "meta_lang": "en",
        "meta_favicon": "/favicon.png",
        "meta_site_name": "",
        "canonical_link": "https://catonmat.net/donald-knuths-first-computer",
        "text": "I was reading Knuth's \"Selected Papers on Computer Science\" and in chapter 13 \"The IBM 650: An Appreciation from the Field\" he had included a photo of a young himself from 1958 at his first computer.\n\nYoung Donald Knuth, age 20, at his first IBM 650 computer in 1958.\n\nDon Knuth's first computer, as the chapter's title suggests, was the IBM 650. At that time Knuth had a part-time job helping the statisticians at Case Institute of Technology to draw graphs and do keypunching. Soon a strange new machine was installed across the hall, that the student newspaper called a \"giant brain\". It was actually an IBM 650.\n\nOne afternoon someone at the institute explained some of the machine's internal code to a bunch of freshmen, including Knuth. It all sounded mysterious to him, but it seemed to make a bit of sense, so he got ahold of some manuals. His first chance to try the machine came a few weeks later, when one of the upperclassmen at the fraternity needed to know the five roots of a particular fifth degree equation. Knuth decided to compute the roots using the 650. This was his first program on the 650.\n\nLater Knuth realized how lucky he was to have had such a good first encounter with computers. The polynomial problem was well matched to his mathematical knowledge and interests, and he had a chance for hands-on experience, pushing buttons on the machine and seeing it punch the cards containing the answers.\n\nKnuth's first large program was a tic-tac-toe that learned to play by remembering the relative desirability or undesirability of each position that it had ever encountered. The hardest part, as Knuth writes, was figuring out how to keep one digit of memory for each possible configuration of the board. The machine had just 2000 words of memory, each 10 digits long, plus a sign bit.\n\nNext Knuth proceeded to writing a program that would find prime factors. The idea was that a person could set up any 10-digit number in the console switched and start his program, which would punch the corresponding prime factors on a card and stop. Knuth spent several weeks on this problem, rewriting his program several times. The final program took 11 minutes to determine that the number 9999999967 was prime.\n\nThe next major Knuth's program was the improvement of SOAP (Symbolic Optimal Assembly Program) and SOAP II assembly languages. He wrote SOAP III and learned about \"creeping featurism,\" where each of his friends would suggest different things they wanted in an assembler. The program used all 2000 words of memory. Knuth doesn't think he could have gotten by with only 1999 words, because he had spent considerable time finding every last bit of space by using terrible tricks, such as using a single instruction on a specific address that would cause 4 side effects.\n\nAlong the way Knuth wrote a lot fun programs. One of the competitions between the students was to do as much as possible with programs that would fit on a single punch card - which had room for only eight instructions. One of the unsolved problems was to take the 10-digit number on the console and to reverse its digits from left to right, then display the answer and stop; nobody could figure out how to do this on a signle card. But one day Knuth proudly marched up to the machine and made a demonstration: he read in a card, then dialled the number 0123456789 on the console, and started the machine. Sure enough, it stopped, displaying the number 9876543210. Everybody applauded. He didn't explain until later that his card would display the number 9876543210 regardless of what number appeared on the console switches. :)\n\nBut there is more to the story. One day the IBM 650 machine got an extra set of console switches, that were called register 8004 (top row of switches in the picture). It turned out that nine instructions on an extended 650 were sufficient to reverse the digits of a number, and the ninth instruction could be put into the switches. Therefore he was able to solve the problem without cheating.\n\nKnuth was very close with IBM 650. One night he missed a date with his wife-to-be, because he was so engrossed in debugging that he had forgotten all about the time.\n\nThe 650 provided Knuth with solid instruction in the art of programming. It was directly related to the topics of the first two technical articles he ever submitted for publication. Therefore it's not surprising at all that he decided to dedicate The Art of Computer Programming books to the IBM 650 computer. \"This series of books is affectionately dedicated to the Type 650 computer once installed at Case Institute of Technology, in remembrance of many pleasant evenings.\"\n\nThe End."
    }
}