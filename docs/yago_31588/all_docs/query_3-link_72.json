{
    "id": "yago_31588_3",
    "rank": 72,
    "data": {
        "url": "https://computinged.wordpress.com/2021/11/26/computer-science-was-always-supposed-to-be-taught-to-everyone-but-not-about-getting-a-job-a-historical-perspective/",
        "read_more_link": "",
        "language": "en",
        "title": "Computer Science was always supposed to be taught to everyone, and it wasn’t about getting a job: A historical perspective",
        "top_image": "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage.png",
        "meta_img": "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage.png",
        "images": [
            "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage.png",
            "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage-1.png",
            "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage-2.png",
            "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage-3.png",
            "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage-4.png",
            "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage-5.png",
            "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage-6.png",
            "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage-7.png",
            "https://computinged.wordpress.com/wp-content/uploads/2021/11/draggedimage-8.png",
            "https://1.gravatar.com/avatar/dbac86f5142c9dce5717804b4885068c7a5cb9870bc301d73d99531c37ce1865?s=23&d=identicon&r=G",
            "https://2.gravatar.com/avatar/83468ab15c0064f9605c5c72e3cd2069faeb55152fbfd6e835032995ed10892a?s=23&d=identicon&r=G",
            "https://1.gravatar.com/avatar/dbac86f5142c9dce5717804b4885068c7a5cb9870bc301d73d99531c37ce1865?s=23&d=identicon&r=G",
            "https://dougpete.files.wordpress.com/2018/04/cropped-cropped-mecolleen1.jpg?w=23",
            "https://dougpete.files.wordpress.com/2018/04/cropped-cropped-mecolleen1.jpg?w=23",
            "https://1.gravatar.com/avatar/716a9a59bf3bed081d5fc941ba3b78c9d1301584293c0f82514c27f0ada98e1e?s=23&d=identicon&r=G",
            "https://dougpete.files.wordpress.com/2018/04/cropped-cropped-mecolleen1.jpg?w=23",
            "https://1.gravatar.com/avatar/43701b0cdf297720457631967b907b6c65020e1fb23b15d412f3aa4ccf9d7dc3?s=23&d=identicon&r=G",
            "https://2.gravatar.com/avatar/e416df17408c1594cc73ff79a0238e0c448c3d1aa2859b041fe27ec57c464f0c?s=23&d=identicon&r=G",
            "https://acdalal.files.wordpress.com/2023/07/cropped-img_8282.jpg?w=23",
            "https://1.gravatar.com/avatar/a0f38966f47862ee3ad522916e316a500c5d15eeabc04b32d6327f06ad84c91b?s=23&d=identicon&r=G",
            "https://0.gravatar.com/avatar/33403aa1d49698f77bd5ab2267d7633f5bf2692ac88b54f7ce776d7b9a32ecf6?s=23&d=identicon&r=G",
            "https://0.gravatar.com/avatar/6625f1db8ca068496c06c41c5a83c29430dd2daf34c8a4e9fdc8b6ab868f031f?s=23&d=identicon&r=G",
            "https://2.gravatar.com/avatar/e02f4334d2fe77ce449647c65a547b9efc9416ab623b77c039976752aecfd5ce?s=23&d=identicon&r=G",
            "https://0.gravatar.com/avatar/390ab3b3fcc0e77cf7fbca298ece7dfa5bfc9dd425e0fdafaceee78c5ea7745c?s=23&d=identicon&r=G",
            "https://0.gravatar.com/avatar/68df2dea8a7a291a3a89f45440a5be815f8a148748ff9221a591ea554e1a7356?s=23&d=identicon&r=G",
            "https://secure.gravatar.com/blavatar/bc2fbce8b69169c201a94a4e850b366e347435c39a530b70cc1f08cbcda0df3d?s=23",
            "https://secure.gravatar.com/blavatar/bc2fbce8b69169c201a94a4e850b366e347435c39a530b70cc1f08cbcda0df3d?s=23",
            "https://secure.gravatar.com/blavatar/bc2fbce8b69169c201a94a4e850b366e347435c39a530b70cc1f08cbcda0df3d?s=23",
            "https://secure.gravatar.com/blavatar/bc2fbce8b69169c201a94a4e850b366e347435c39a530b70cc1f08cbcda0df3d?s=48",
            "https://secure.gravatar.com/blavatar/bc2fbce8b69169c201a94a4e850b366e347435c39a530b70cc1f08cbcda0df3d?s=48",
            "https://secure.gravatar.com/blavatar/bc2fbce8b69169c201a94a4e850b366e347435c39a530b70cc1f08cbcda0df3d?s=48",
            "https://1.gravatar.com/avatar/19be24fde91e85d5358b9c7b61fc44565ddfa911e3a31e5f4316c467793bf326?s=48&d=identicon&r=G",
            "https://secure.gravatar.com/blavatar/bc2fbce8b69169c201a94a4e850b366e347435c39a530b70cc1f08cbcda0df3d?s=50&d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png",
            "https://secure.gravatar.com/blavatar/bc2fbce8b69169c201a94a4e850b366e347435c39a530b70cc1f08cbcda0df3d?s=50&d=https%3A%2F%2Fs2.wp.com%2Fi%2Flogo%2Fwpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2021-11-26T00:00:00",
        "summary": "",
        "meta_description": "I gave four keynote talks in the last two months, at SIGITE, Models 2021 Educators’ Symposium, VL/HCC, and CSERC. I’m honored to be invited to them, but I do suspect that four keynotes in six weeks suggest some “personal issues” in planning and saying “No.” Some of these were recorded, but I don’t believe that…",
        "meta_lang": "en",
        "meta_favicon": "https://secure.gravatar.com/blavatar/bc2fbce8b69169c201a94a4e850b366e347435c39a530b70cc1f08cbcda0df3d?s=32",
        "meta_site_name": "Computing Ed Research - Guzdial's Take",
        "canonical_link": "https://computinged.wordpress.com/2021/11/26/computer-science-was-always-supposed-to-be-taught-to-everyone-but-not-about-getting-a-job-a-historical-perspective/",
        "text": "November 26, 2021 at 10:00 am\n\nI gave four keynote talks in the last two months, at SIGITE, Models 2021 Educators’ Symposium, VL/HCC, and CSERC. I’m honored to be invited to them, but I do suspect that four keynotes in six weeks suggest some “personal issues” in planning and saying “No.” Some of these were recorded, but I don’t believe that any of them are publicly available\n\nThe keynotes had a similar structure and themes. (A lot easier than four completely different keynotes!) My activities in computing education these days are organized around two main projects:\n\nDefining computing education for undergraduates in the University of Michigan’s College of Literature, Science, and Arts (see earlier blog post referencing this effort);\n\nParticipatory design of Teaspoon languages (mentioned most recently in this blog post).\n\nMy goal was to put both of these efforts in a historical context. My argument is that computer science was originally invented to be taught to everyone, but not for economic advantage. I see the LSA effort and our Teaspoon languages connected to the original goals for computer science. The talks were similar to my SIGCSE 2019 keynote (blog post about that talk here, and video version here), but puts some of the early history in a different perspective. I’m not going to go into the LSA Computing Education effort or Teaspoon languages here. I’m writing this up because I hope that it’s a perspective on the early history that might be useful to others.\n\nI start out with C.P. Snow.\n\nMy PhD advisor, Elliot Soloway, would have all of his students read this book, “The Two Cultures.” Snow was a scientist who bemoaned the split between science and humanities in Western culture. Snow mostly blamed the humanities. That wasn’t Elliot’s point for having us read his book. Elliot wanted us to think about “Who could use what we have to teach, but might not even enter our classroom?”\n\nThis is George Forsythe. Donald Knuth claims that George Forthye first published the term “computer science” in a paper in the Journal of Engineering Education in 1961. Forsythe argued (in a 1968 article) that the most valuable parts of a scientific or technical education were facility with natural language, mathematics, and computer science.\n\nIn 1961, the MIT Sloan School held a symposium on “Computers and the World of the Future.” It was an amazing event. Attendees included Gene Amdahl, John McCarthy, Alan Newell, and Grace Hopper. Martin Greenberger’s book in 1962 included transcripts of all the lectures and all the discussants’ comments.\n\nC.P. Snow’s chapter (with Norbert Wiener of Cybernetics as discussant) predicted a world where software would rule our lives, but the people who wrote the software would be outside the democratic process. He wrote, “A handful of people, having no relation to the will of society, having no communication with the rest of society, will be taking decisions in secret which are going to affect our lives in the deepest sense.” He argued that everyone needed to learn about computer science, in order to have democratic control of these processes.\n\nIn 1967, Turing laureate Peter Naur made a similar argument (quoting from Michael Caspersen’s paper): “Once informatics has become well established in general education, the mystery surrounding computers in many people’s perceptions will vanish. This must be regarded as perhaps the most important reason for promoting the understanding of informatics. This is a necessary condition for humankind’s supremacy over computers and for ensuring that their use do not become a matter for a small group of experts, but become a usual democratic matter, and thus through the democratic system will lie where it should, with all of us.” The Danish computing curriculum explicitly includes informing students about the risks of technology in society.\n\nAlan Perlis (first ACM Turing Award laureate) made a different argument in his chapter. He suggested that everyone at University should learn to program because it changes how we understand everything else. He argued that you can’t think about integral calculus the same after you learn about computational iteration. He described efforts at Carnegie Tech to build economics models and learn through simulating them. He was foreshadowing modern computational science, and in particular, computational social science.\n\nPerlis’s discussants include J.C.R. Licklider, grandfather of the Internet, and Peter Elias. Michael Mateas has written a fascinating analysis of their discussion (see paper here) which he uses to contextualize his work on teaching computation as an expressive medium.\n\nIn 1967, Perlis with Herb Simon and Alan Newell published a definition for computer science in the journal Science. They said that CS was “the study of computers and all the phenomena surrounding them.” I love that definition, but it’s too broad for many computer scientists. I think most people would accept that as a definition for “computing” as a field of study.\n\nThen, we fast forward to 2016 when then-President Obama announced the goal of “CS for All.” He proposed:\n\nComputer science (CS) is a “new basic” skill necessary for economic opportunity and social mobility.\n\nI completely buy the necessity part and the basic skill part, and it’s true that CS can provide economic opportunity and social mobility. But that’s not what Perlis, Simon, Newell, Snow, and Forsythe were arguing for. They were proposing “CS for All” decades before Silicon Valley. There is value in learning computer science that is older and more broadly applicable than the economic benefits.\n\nThe first name that many think of when talking about teaching computing to everyone is Seymour Papert. Seymour believed, like Alan Perlis, “that children can learn to program and learning to program can affect the way that they learn everything else.”\n\nThe picture in the lower right of this slide is important. On the right is Gary Stager, who kindly shared this picture with me. On the left is Wally Feurzeig who implemented the programming language Logo with Danny Bobrow, when Seymour was a consultant to their group at BBN. In the center is Cynthia Solomon who collaborated with Seymour on the invention of the Turtle (originally a robot, seen at the top) and the development of Logo curriculum.\n\nCynthia was the lead author of a recent paper describing the history of Logo (see link here), which included the example of early Logo use on the upper right of this slide, which generates random sentences. Logo is named for the Greek word logos for “word.” The first examples of Logo were about manipulating natural language. Logo has always been used as an expressive medium (music, graphics, storytelling, and animation), as well as for learning mathematics (see the great book Turtle Geometry).\n\nThis is the context in which I think about the work with the LSA Computing Education Task Force. Our question was: At an R1 University with a Computer Science & Engineering undergraduate degree and an undergraduate BS in Information (with tracks in information analysis and user experience (UX) design), what else might undergraduates need? What are the purposes for computing that are broader and older than the economic advantages of professional software development? We ended up defining three themes of what LSA faculty do with computing and what they want their students to know:\n\nComputing for Discovery – LSA computational scientists create models and simulate them (not just analyze data that already exists), just as Alan Perlis suggested in 1961.\n\nComputing for Expression – Computing has created new ways for humans to express themselves, which is important to study and to use to explore, invent, and create new forms of expression, as the Logo community did starting in the 1960’s.\n\nComputing for Justice – LSA scholars investigate how computing systems can encode and exacerbate inequities, which requires some understand of computing, just as C.P. Snow talked about in 1961.\n\nWe develop our Teaspoon languages to meet the needs of teachers in teaching non-CS and even non-STEM classes. We argue that there are computing education learning objectives that we address with Teaspoon languages, even if they don’t include common languages features like for, while, and if statements. A common argument against our work in Teaspoon languages is that we’re undertaking a Sisyphean task. Computing is what it is, programming languages are what they are, and education is not going to be a driving force for changing anything in computing.\n\nAnd yet, that’s exactly how the desktop user interface was invented.\n\nAlan Kay (another Turing laureate in this story), Adele Goldberg, and Dan Ingalls led the development of Smalltalk in Xerox PARC in the 1970’s. The goal for Smalltalk was to realize Alan’s vision of a Dynabook, using the computer as a tool for learning. The WIMP (overlapping Windows, Icons, Menus, and mouse Pointer) interface was invented in order to achieve computing education goals. For the purposes of education, the user interface that you are using right now was invented.\n\nThe Smalltalk work tells us that we don’t have to accept computing as it is. Computing education today focuses mostly on preparing students to be professional software developers, using the tools of professional software development. That’s important and useful, but often eclipses other, broader goals for learning computing. The earliest goals for computing education are different from those in most of today’s computing education. We should question our goals, our tools, and our assumptions. Computing for everyone is likely going to look different than the computing we have today which has been defined for a narrow set of goals and for far fewer people than “all.”"
    }
}