{
    "id": "dbpedia_7737_3",
    "rank": 64,
    "data": {
        "url": "https://sourceforge.net/p/gnuplot/mailman/message/10153318/",
        "read_more_link": "",
        "language": "en",
        "title": "Re: Thoughts about gnuplot license and copyrights",
        "top_image": "https://a.fsdn.com/con/img/sandiego/logo-180x180.png",
        "meta_img": "https://a.fsdn.com/con/img/sandiego/logo-180x180.png",
        "images": [
            "https://a.fsdn.com/con/images/sandiego/sf-logo-full.svg",
            "https://a.fsdn.com/con/images/sandiego/sf-logo-full.svg",
            "https://a.fsdn.com/con/images/sandiego/sf-logo-full.svg",
            "https://a.fsdn.com/con/images/sandiego/github-sync.png",
            "https://a.fsdn.com/allura/p/gnuplot/icon?1513717478&w=90",
            "https://a.fsdn.com/con/images/sandiego/sf-logo-full.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://a.fsdn.com/con/img/sandiego/logo-180x180.png",
        "meta_site_name": "",
        "canonical_link": "https://sourceforge.net/p/gnuplot/mailman/message/10153318/",
        "text": "Daniel J Sebald wrote: > Timoth=E9e Lecomte wrote: > >> I understand your point about defining legally this group. As Ethan >> explained, it's what the pine license does, and in this case the group >> which authorizes releases is the University of Washington. You can not= e >> that there are major differences between pine and gnuplot : 'pine' is = a >> trademark (as 'firefox' is for an other example), and there is a >> powerful and long-standing legal entity behind pine, the university. >> >> To remain pragmatic, I think that we can't reach the same conditions f= or >> gnuplot. > > > Why not? I know the common belief now days is that only \"big\" > entities have or can afford rights, representation, etc. But the law > isn't restricted to them. In fact, a lot of these legal concepts > probably were originally intended to protect the individual. Ok, it is possible, but personnaly I don't want > >> As Hans-Bernhard Broeker also explained, a trademark would be needed t= o >> protect the name 'gnuplot'. To remain pragmatic, nobody will provide t= he >> money to have a 'gnuplot' trademark. > > > I'm not assuming that. International trademark looks to be $500 (it's > in swiss currency) for ten years. Not unreasonable. But that's an > aside. (Might make it easy though to recover www.gnuplot.com from > that person who gobbled it up.) > > Let's put it this way. You mentioned having a little assurance that > work doesn't get wasted. Well, take the work of the number of people > who have contributed and add up their time as though it were charged > an hourly rate. Wow, that would be one damn big monetary gift; > intended, I think, for science. It wouldn't kill me to contribute > monetarily to solidifying a license so long as it's reasonable. I completely agree with you : the work already done deserves a monetary contribution. But solidifying the license can also be done without any money. It's just a matter of what we want to protect, and how far we are ready to go. >> And if we define a \"maintainers group\", it would still be a list of >> named individuals who can disappear one day. > > > Hence, why I propose that if a member of the group goes silent for a > year, someone else is allowed to take over. If it gets to the point > where there isn't a dozen or so people who could be a pool for just a > few maintainers then nobody cares anymore. Or do a D. Knuth thing and > freeze it for good. Well, as we should probably not freeze it ;-), I find the first proposal a valid solution. > >> The solution would be a >> sort of foundation, but I can't imagine such a complex legal entity fo= r >> just gnuplot. > > > Not complex. Keep it simple. Nobody is attempting to collect royaltie= s. Royalties, no, but signatures, yes. I don't like paper work, but I admit it is feasible. >> That's why I just propose to use a slightly more permissive license >> about release conditions. Thus we preserve simplicity : no need to >> legally define a maintainer group if the license does not mention it. > > > That's one alternative I'm saying leave on the table. > > I guess my feeling is that gnuplot has had some license now for a long > time. If out of the blue it changes to a different license it would > be good, I think, to have it made clear that T.W. has signed off on > that. Certainly an email from T.W. wouldn't hold much water.=20 > (Someone could claim the email was made up by someone else.)=20 > Something he can sign (notarized) that can be put in a safe deposit > box would be nice. To change the license without there being a clear > understanding of that intention would just add more confusion. > > Dan Yes, if there's a change, we should be able to prove that TW has approved it. I have wondered how things go for other projects. Indeed, instead of trying to resolve the gnuplot's license disadvantage ourselves, we can get the inspiration from others (that's not copyrighted !). So I have made a compilation of information on famous scientific open-source software. Let's see : * octave ( numerical computations): GPL, \"octave\" doesn't seem to be a trademark, octave is a GNU product, so it is proctected by the Free Software Foundation, which takes good care of copyrights (see http://www.gnu.org/prep/maintain/maintain.html : the FSF asks for a plain paper from each important contributor that gives his copyright to the FSF, as for each GNU software) * the R project (statistical language): GPL, no trademark, backed by the R foundation for general guidelines and the Free Software Foundation as it is a GNU project. The statutes of the R foundation are available here : http://www.r-project.org/foundation/Rfoundation-statutes.pdf * Maxima (computer algebra system) : GPL, no trademark (\"maxima\" is already the trademark of a fishing lines company), no organization behind. Maxima comes from DOE-Macsyma, written by the department of Energy (as far as I understand) and was officially donated to the community under the GPL. Here is the letter which proves it : http://maxima.sourceforge.net/misc/maxima-doe-auth.png * Pari/GP (computer algebra system) : GPL, no trademark, no foundation Was formally a proprietary project, and switched to the gpl. Here is a related entry in the FAQ : \"Why use such a \"restrictive\" license as the GPL? Will you change it? The short answer to the second question is no. We are quite happy with the GPL. The original license (up to version 2.0) was proprietary, too casually worded, and lead to various conflicts. Starting from version 2.0, we wanted a well known license for the whole PARI/GP package, that would leave contributors secure with the future use of their code and, as far as possible, not prevent anyone from helping out. It was soon agreed that PARI/GP should become free software. The GPL was a natural choice. It is certainly well-known, and it satisfied every developer involved in the project, as well as their respective employers. For the latter, the alternatives would have been more restrictive, certainly not closer to the LGPL, BSD, or the Artistic license. Most free Computer Algebra Systems also use the GPL, presumably for related reasons.\" * Axiom (computer algebra system ) : BSD-style, no trademark (\"axiom\" is already the trademark of an automotive company), no foundation but the devs seem to think of it (see http://wiki.axiom-developer.org/AxiomFoundation , its role would be to promote axiom development). Axoim was an IBM software, then sold to \"NAG\", which stoped to sell it (not a financial success), and released it under a BSD-style license. * Ginac ( \"ginac is not a computer algebra system\") : GPL, no trademark, no organization * Scilab ( numerical computations ) : open source custom license described as non-free by the FSF, as it does not allow commercial distribution of the modified code. \"Scilab\" is a trademark, the Scilab Consortium controls its development. * Jacal (computer algebra system ) : GPL, no trademark, no organization * Boinc (distributed computing ) : LGPL, no trademark, copyright holder is the University of California And now other more general software : * the linux kernel : GPL, \"linux\" is a tradermark, a non-profit corporation is there to protect the trademark (http://www.linuxmark.org/), the rest is self-organized around Linus Torvalds * Gnome : LGPL (can be linked to proprietary code), \"gnome\" is a tradermark, the Gnome foundation is behind it * KDE : GPL (as Qt), \"kde\" is a tradermark, the KDE.e.v is a non-profit organization behind it (http://ev.kde.org/) * Xfce ( desktop environment ): GPL/LGPL/BSD depending on files, no trademark, no foundation * Xorg : original X11 license, very permissive, non-copyleft (ie allow to impose further restrictions on a distributed code), \"xorg\" doesn't seem to be a trademark, there is limited-liability-company, the Xorg foundation, that supervises the development * XFree86 : modified X11 license (gpl incompatible, that causes the fork), \"xfree86\" is a trademark, XFree86 Project Inc. is a company behind= it * firefox, thunderbird : MPL (gpl incompatible due to a few restrictions), \"firefox\", \"thunderbird\", \"mozilla\" are trademarks, protected by the Mozilla Foundation, a non-profit organization * wxWidgets : modified LGPL (more permissive), \"wxWidgets\" is not a trademark (they already changed from wxWindows due to trademark problems with Microsoft), there used to be a \"wxWindows foundation\", but it disappeared due to the lack of consensus and fears about copyrights that were given to the foundation (I quote http://www.wxwidgets.org/sf/ : \"However, assignment was perceived by some to have serious disadvantages, such as the problem of what to do with the IP should the Foundation be dissolved.\" ) =3D=3D>That's interesting ! * FFmpeg ( audio/video toolkit ) : LGPL (+ GPL modules), \"FFmpeg\" is a trademark of the author of the project, no organization * amarok ( music player ): GPL, no trademark, copyright is protected by the KDEev as it is part of KDE * Stellarium ( planetarium ) : GPL, no trademark, no organization * Celestia ( space simulation ) : GPL, no trademark, no organization * Inkscape ( svg graphics ) : GPL, no trademark, no organization That's already a long list, although I must be forgetting important ones. The important points are : - some have a trademark, even individuals have (FFmpeg) - some don't have, and don't seem to suffer too much (Octave, Maxima, etc= .) - some have a legal organization behind them, which has often the role to 'supervise' development by defining global directions (R Foundation, Mozilla Foundation...), mostly to verify that copyrights and trademarks are respected (FSF, KDEev, Mozilla Foundation, Linuxmark...), sometimes to control all of the development process (Scilab) - some had an organization, but lost it as it was not that efficient (wxWidgets) ! - many are GPL or LGPL and seem to be fine with it ! - Interestingly enough, some projects come from proprietary products and became GPLed (Pari/GP - decision explained above, Maxima ) - the FSF has a strong policy regarding copyrights : it asks for signed paper for each important contributor - if we want to define a legal board of maintainers, we could have ideas from the R foundation (see statutes above) - if Thomas Williams was to accept a change in the license, we can have an idea of the corresponding paper for Maxima (see link above) What do I conclude ? We could be fine with the GPL. Even the linux kernel is GPLed, although I honestly find that it represents a lot more work as gnuplot ! So the GPL can protect gnuplot reliably. We could be fine without a trademark. It seems possible to protect the name 'gnuplot', but that's a different problem, and should probably be adressed after the license is. We can be fine without a legal organization. We can also define an organization that supervises the development, but taking complete control on releases for example would makes gnuplot look like Scilab which is still sometimes criticized for its almost closed development. What do you conclude ? Timoth=E9e"
    }
}