{
    "id": "dbpedia_7737_3",
    "rank": 6,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Comparison_of_open-source_and_closed-source_software",
        "read_more_link": "",
        "language": "en",
        "title": "Comparison of open",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Free_and_open-source_software_logo_%282009%29.svg/28px-Free_and_open-source_software_logo_%282009%29.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/e/e2/Symbol_portal_class.svg/16px-Symbol_portal_class.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/96/Symbol_category_class.svg/16px-Symbol_category_class.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2005-06-08T14:40:25+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Comparison_of_open-source_and_closed-source_software",
        "text": "Free/open-source software – the source availability model used by free and open-source software (FOSS) – and closed source are two approaches to the distribution of software.\n\nBackground\n\n[edit]\n\nUnder the closed-source model source code is not released to the public. Closed-source software is maintained by a team who produces their product in a compiled-executable state, which is what the market is allowed access to. Microsoft, the owner and developer of Windows and Microsoft Office, along with other major software companies, have long been proponents of this business model, although in August 2010, Microsoft interoperability general manager Jean Paoli said Microsoft \"loves open source\" and its anti-open-source position was a mistake.[1]\n\nThe FOSS model allows for able users to view and modify a product's source code, but most of such code is not in the public domain. Common advantages cited by proponents for having such a structure are expressed in terms of trust, acceptance, teamwork and quality.[2]\n\nA non-free license is used to limit what free software movement advocates consider to be the essential freedoms. A license, whether providing open-source code or not, that does not stipulate the \"four software freedoms\",[3] are not considered \"free\" by the free software movement. A closed source license is one that limits only the availability of the source code. By contrast a copyleft license claims to protect the \"four software freedoms\" by explicitly granting them and then explicitly prohibiting anyone to redistribute the package or reuse the code in it to make derivative works without including the same licensing clauses. Some licenses grant the four software freedoms but allow redistributors to remove them if they wish. Such licenses are sometimes called permissive software licenses.[4] An example of such a license is the FreeBSD License which allows derivative software to be distributed as non-free or closed source, as long as they give credit to the original designers.\n\nA misconception that is often made by both proponents and detractors of FOSS is that it cannot be capitalized.[5] FOSS can and has been commercialized by companies such as Red Hat, Canonical, Mozilla, Google, IBM, Novell, Sun/Oracle, VMware and others.[6]\n\nCommercialization\n\n[edit]\n\nClosed-source software\n\n[edit]\n\nMain article: Proprietary software\n\nThe primary business model for closed-source software involves the use of constraints on what can be done with the software and the restriction of access to the original source code.[6] This can result in a form of imposed artificial scarcity on a product that is otherwise very easy to copy and redistribute. The result is that an end-user is not actually purchasing software, but purchasing the right to use the software. To this end, the source code to closed-source software is considered a trade secret by its manufacturers.\n\nFOSS\n\n[edit]\n\nFOSS methods, on the other hand, typically do not limit the use of software in this fashion. Instead, the revenue model is based mainly on support services. Red Hat Inc. and Canonical Ltd. are such companies that give its software away freely, but charge for support services. The source code of the software is usually given away, and pre-compiled binary software frequently accompanies it for convenience. As a result, the source code can be freely modified. However, there can be some license-based restrictions on re-distributing the software. Generally, software can be modified and re-distributed for free, as long as credit is given to the original manufacturer of the software. In addition, FOSS can generally be sold commercially, as long as the source-code is provided. There are a wide variety of free software licenses that define how a program can be used, modified, and sold commercially (see GPL, LGPL, and BSD-type licenses). FOSS may also be funded through donations.\n\nA software philosophy that combines aspects of FOSS and proprietary software is open core software, or commercial open source software. Despite having received criticism from some proponents of FOSS,[7] it has exhibited marginal success. Examples of open core software include MySQL and VirtualBox. The MINIX operating system used to follow this business model, but came under the full terms of the BSD license after the year 2000.\n\nHandling competition\n\n[edit]\n\nThis model has proved somewhat successful, as witnessed in the Linux community. There are numerous Linux distributions available, but a great many of them are simply modified versions of some previous version. For example, Fedora Linux, Mandriva Linux, and PCLinuxOS are all derivatives of an earlier product, Red Hat Linux. In fact, Red Hat Enterprise Linux is itself a derivative of Fedora Linux. This is an example of one vendor creating a product, allowing a third-party to modify the software, and then creating a tertiary product based on the modified version. All of the products listed above are currently produced by software service companies.\n\nOperating systems built on the Linux kernel are available for a wider range of processor architectures than Microsoft Windows, including PowerPC and SPARC. None of these can match the sheer popularity of the x86 architecture, nevertheless they do have significant numbers of users; Windows remains unavailable for these alternative architectures, although there have been such ports of it in the past.\n\nThe most obvious complaint against FOSS revolves around the fact that making money through some traditional methods, such as the sale of the use of individual copies and patent royalty payments, is much more difficult and sometimes impractical with FOSS. Moreover, FOSS has been considered damaging to the commercial software market, evidenced in documents released as part of the Microsoft Halloween documents leak.[8][9][10]\n\nThe cost of making a copy of a software program is essentially zero, so per-use fees are perhaps unreasonable for open-source software. At one time, open-source software development was almost entirely volunteer-driven, and although this is true for many small projects, many alternative funding streams have been identified and employed for FOSS:\n\nGive away the program and charge for installation and support (used by many Linux distributions).\n\n\"Commoditize complements\": make a product cheaper or free so that people are more likely to purchase a related product or service you do sell.\n\nCost avoidance / cost sharing: many developers need a product, so it makes sense to share development costs (this is the genesis of the X Window System and the Apache web server).\n\nDonations\n\nCrowd funding\n\nIncreasingly, FOSS is developed by commercial organizations. In 2004, Andrew Morton noted that 37,000 of the 38,000 recent patches in the Linux kernel were created by developers directly paid to develop the Linux kernel. Many projects, such as the X Window System and Apache, have had commercial development as a primary source of improvements since their inception. This trend has accelerated over time.[citation needed]\n\nThere are some[who?] who counter that the commercialization of FOSS is a poorly devised business model because commercial FOSS companies answer to parties with opposite agendas. On one hand commercial FOSS companies answer to volunteers developers, who are difficult to keep on a schedule, and on the other hand they answer to shareholders, who are expecting a return on their investment. Often FOSS development is not on a schedule and therefore it may have an adverse effect on a commercial FOSS company releasing software on time.[11]\n\nInnovation\n\n[edit]\n\nGary Hamel counters this claim by saying that quantifying who or what is innovative is impossible.[12]\n\nThe implementation of compatible FOSS replacements for proprietary software is encouraged by the Free Software Foundation to make it possible for their users to use FOSS instead of proprietary software, for example they have listed GNU Octave, an API-compatible replacement for MATLAB, as one of their high priority projects. In the past this list contained free binary compatible Java and CLI implementations, like GNU Classpath and DotGNU. Thus even \"derivative\" developments are important in the opinion of many people from FOSS. However, there is no quantitative analysis, if FOSS is less innovative than proprietary software, since there are derivative/re-implementing proprietary developments, too.\n\nSome of the largest well-known FOSS projects are either legacy code (e.g., FreeBSD or Apache) developed a long time ago independently of the free software movement, or by companies like Netscape (which open-sourced its code with the hope that they could compete better), or by companies like MySQL which use FOSS to lure customers for its more expensive licensed product. However, it is notable that most of these projects have seen major or even complete rewrites (in the case of the Mozilla and Apache 2 code, for example) and do not contain much of the original code.\n\nInnovations have come, and continue to come, from the open-source world:\n\nPerl, the pioneering open-source scripting language, made popular many features, like regular expressions and associative arrays, that were unusual at the time. The newer Python language continues this innovation, with features like functional constructs and class-dictionary unification.\n\ndcraw is an open-source tool for decoding RAW-format images from a variety of digital cameras, which can produce better images than the closed-source tools provided by the camera vendors themselves.\n\nA number of laptop models are available with a particular emphasis on multimedia capabilities. While these invariably come preinstalled with a copy of Microsoft Windows, some of them[13][14] also offer an alternative \"fast-boot\" mode (such as Phoenix HyperSpace) based on Linux. This gets around the long time it can take to boot up Windows.\n\nVLC media player, Songbird, and Amarok are FOSS music players that integrate internet-based data sources to an unprecedented degree, taking song information from MusicBrainz, related track information from last.fm, album cover art from Amazon and displaying an artist's Wikipedia page within the player.\n\nWhile admittedly inspired by Mac OS X's Quartz graphics layer, Compiz Fusion has pioneered the concept of \"plug in\" window decorators and animation effects. Users can develop their own creative and unique effects.\n\nOpen-source telecommunication products, such as the Asterisk PBX, have revolutionized the ICT industry.[15]\n\nThere are substantial efforts towards the implementation of a semantic desktop in FOSS communities.\n\nToday's desktop environments are innovating regarding their unique idea of a Social Desktop.\n\nMany academic research projects release their results as FOSS.\n\nCode quality\n\n[edit]\n\nIn 2008, the Department of Management Science and Technology in the Athens University of Economics and Business published an analysis of the FreeBSD, Linux, Solaris, and Windows operating system kernels which looked for differences between code developed using open-source and proprietary processes. The study collected metrics in the areas of file organization, code structure, code style, the use of the C preprocessor, and data organization. The aggregate results indicated that they scored comparably to each other.[16] Another study conducted by Synopsys published in 2014 found open source code to be of better quality.[17]\n\nSecurity\n\n[edit]\n\nA study done on seventeen open-source and closed-source software showed that the number of vulnerabilities existing in a piece of software is not affected by the source availability model that it uses. The study used a very simple metrics of comparing the number of vulnerabilities between the open-source and closed-source software.[18] Another study was also done by a group of professors in Northern Kentucky University on fourteen open-source web applications written in PHP. The study measured the vulnerability density in the web applications and shown that some of them had increased vulnerability density, but some of them also had decreased vulnerability density.[19]\n\nBusiness models\n\n[edit]\n\nSee also: Microsoft and open source\n\nIn its 2008 Annual Report, Microsoft stated that FOSS business models challenge its license-based software model and that the firms who use these business models do not bear the cost for their software development[clarification needed]. The company also stated in the report:[20][21]\n\nSome of these [open source software] firms may build upon Microsoft ideas that we provide to them free or at low royalties in connection with our interoperability initiatives. To the extent open source software gains increasing market acceptance, our sales, revenue and operating margins may decline. Open source software vendors are devoting considerable efforts to developing software that mimics the features and functionality of our products, in some cases on the basis of technical specifications for Microsoft technologies that we make available. In response to competition, we are developing versions of our products with basic functionality that are sold at lower prices than the standard versions.\n\nThere are numerous business models for open source companies which can be found in the literature.[6]\n\nSee also\n\n[edit]\n\nFree and open-source software portal\n\nLinux adoption\n\nGNU Project\n\nOpen system\n\nVendor lock-in\n\nNetwork effect"
    }
}