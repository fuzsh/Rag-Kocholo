{
    "id": "dbpedia_1055_1",
    "rank": 31,
    "data": {
        "url": "https://github.com/SansGuidon/bookmarks",
        "read_more_link": "",
        "language": "en",
        "title": "SansGuidon/bookmarks: :warning: Mirrored from https://gitea.zoemp.be/sansguidon/bookmarks ! +5K awesome resources for geeks and software crafters",
        "top_image": "https://opengraph.githubassets.com/da6d533641398684e6e9a5dcd036d6adefafce74f42e19dd64246d88a2a03841/SansGuidon/bookmarks",
        "meta_img": "https://opengraph.githubassets.com/da6d533641398684e6e9a5dcd036d6adefafce74f42e19dd64246d88a2a03841/SansGuidon/bookmarks",
        "images": [
            "https://camo.githubusercontent.com/8693bde04030b1670d5097703441005eba34240c32d1df1eb82a5f0d6716518e/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667",
            "https://camo.githubusercontent.com/93ca07ea63e4649ae72b87de86d82eedeab50e744fa6e07ee95e5344779fb930/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667",
            "https://github.githubassets.com/images/icons/emoji/trollface.png",
            "https://github.githubassets.com/images/icons/emoji/octocat.png",
            "https://github.githubassets.com/images/icons/emoji/trollface.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": ":warning: Mirrored from https://gitea.zoemp.be/sansguidon/bookmarks ! :bookmark: +5K awesome resources for geeks and software crafters :beer:  - GitHub - SansGuidon/bookmarks: :warning: Mirrored from https://gitea.zoemp.be/sansguidon/bookmarks ! +5K awesome resources for geeks and software crafters",
        "meta_lang": "en",
        "meta_favicon": "https://github.com/fluidicon.png",
        "meta_site_name": "GitHub",
        "canonical_link": "https://github.com/SansGuidon/bookmarks",
        "text": "Bookmarks 🔖\n\nA collection of resources for geeks and software crafters 🍺\n\nI spend a lot of time on internet, losing myself in lot of topics. I choose GitHub to list my findings and bookmarks in a central location for productivity, to avoid losing my findings, and also to share them with the world.\n\nContributions are more than welcome. Read the contribution guidelines.\n\nby MorganGeek\n\n⭐ Resources I like so much.\n\n🔥 Resources I keep revisit again and again.\n\n🦄 Resources proving the more useful through time\n\nAnime\n\nArchitecture / Design / Patterns\n\nArchiving & Backups management\n\nArt 🎨\n\nBooks / Reading\n\nComplete books\n\nBook summaries, notes and reviews\n\nBook tools\n\nBook suggestions\n\nBusiness & Economics\n\nCryptocurrency\n\nCLI Tools\n\nCoffee ☕\n\nCollaboration & Problem solving\n\nCommunication\n\nDocumentation\n\nOnboarding\n\nCreativity 💡\n\nCRM\n\nCulture\n\nData\n\nDevOps / CICD\n\nAnsible\n\nAnsible Vault\n\nArgo CD\n\nAWS\n\nContainers\n\nKubernetes\n\nMicroservices\n\nOpenShift\n\nSecOps\n\nSite Reliability Engineering\n\nTerraform\n\nVault (by HashiCorp)\n\nDigital marketing\n\nEcology 🌱\n\nFinding content 🔍\n\nApp discovery\n\nEvent discovery\n\nFreelancing\n\nFree online tools 🆓\n\nBookmarklets\n\nGaming 🎮\n\nBoard games 🎲\n\nChess ♟️\n\nRole-playing 🐉\n\nHealth and Work-Life Balance\n\nRemote work\n\nHobbies\n\nHumor\n\nImages / Wallpapers\n\nLinux / Unix 🐧\n\nEmacs\n\nLinux for fun\n\nRaspberry Pi\n\nTuning\n\nVim\n\nMac\n\nCode signing\n\nManga\n\nMath\n\nMovies\n\nMusic 🎶\n\nNetworking\n\nNews ❗\n\nNix\n\nOperations / IT OPS\n\nApache\n\nInfrastructure\n\nLogging\n\nMonitoring\n\nNginx\n\nParenting 👶\n\nPerformance\n\nPhilosophy 💭\n\nPhotography\n\nPodcasts 📻\n\nPrepping\n\nPrinciples\n\nPrivacy\n\nPrivacy tools\n\nProcrastinating 🐖 🐕\n\nProductivity ⏩\n\nProductivity tips\n\nProductivity tools\n\nProgramming\n\nProgramming challenges\n\nAPI\n\nAssembly\n\nC/C++\n\nCalm programming / Slow programming\n\nClean code and best practices\n\nNaming conventions\n\nConferences\n\nCorrectness\n\nDatabase\n\nDebugging\n\nElixir\n\nErlang\n\nGamedev\n\nGit\n\nDotfiles / Aliases\n\nGitHub\n\nGolang / Go\n\nGroovy\n\nHaskell\n\nJava\n\nJava EE\n\nJavaScript\n\nLisp\n\nMachine learning\n\nMobile development 📱\n\nPHP\n\nProductivity 💻\n\nProgrammer humor\n\nProlog\n\nPython\n\nReverse engineering\n\nRuby\n\nRust\n\nPsychology 💭\n\nQuotes\n\nRobots\n\nShell scripting\n\nShell aliases\n\nSecurity / Infosec\n\nGPG\n\nOpenSSL\n\nWeb\n\nSociety\n\nSports\n\nClimbing\n\nTesting and Compliance 👌\n\nTransportation 🚆 🚘\n\nTravel ✈️\n\nRelocation & moving & living elsewhere & expating\n\nTroubleshooting\n\nUX / UI\n\nAccessibility (a11y)\n\nDesign humor\n\nWeb oldies / Nostalgia\n\nWeb development\n\nWeb development checklists / best practices\n\nWeb development tools\n\nWindows\n\nWordpress\n\nWriting ✏️\n\nAnime 🇯🇵\n\nanime-planet - one of the most complete manga and anime database for finding recommended content, or cataloging and reviewing your collection\n\nArchitecture / Design / Patterns\n\nNews\n\nHigh Scalability - Building bigger, faster, more reliable websites\n\nAbduzeedo - Design Inspirations\n\nCoding the Architecture - news & presentations on software architecture\n\nLearn\n\nDavid Alia - [FR] 🇫🇷 Les Patterns des Grands du Web – Design for failure\n\nMathieu Poignant - [FR] 🇫🇷 Les Patterns des Géants du Web – Zero Downtime Deployment\n\nBenoit Lafontaine - [FR] 🇫🇷 Les Patterns des Grands du Web – Continuous Deployment\n\nOlivier Mallassi, Rudy Krol - [FR] 🇫🇷 Les Patterns des Grands du Web – DevOps\n\nDon MacAskill - (2011) How SmugMug survived the Amazonpocalypse\n\nKrishnan Subramanian - Designing For Failure: Some Key Facts\n\nMartin Fowler - MonolithFirst\n\nPrinciples of Chaos Engineering\n\nDaniel Miessler - Stop Being Proud of Complexity\n\nDerek Greer - (2008) The Art of Separation of Concerns\n\nMarty Madrid - (2014) [IMG] How to build an MVP (Minimum Viable Product)\n\nChristian Neumanns - (2014) Why We Should Love 'null' / + the Null Object Pattern\n\nChris Wheeler - (2005) My Favourite Smells / about primitive obsession\n\n⭐ The Twelve-Factor App - is a methodology for building software-as-a-service apps of great quality\n\nFred Hébert - (2015) Queues Don't Fix Overload\n\nFred Hébert - (2015) Lessons Learned while Working on Large-Scale Server Software\n\nStackExchange - Amazing presentation of Stack Exchange infrastructure. All about performance\n\nAdam Pittenger - Love what you build. Build what you love.\n\nR0ml - Why are objects so hard to debug?\n\nJohn D. Cook - (2008) What to make flexible // about art of good design\n\nScott McCarty - (2016) Container Tidbits: When Should I Break My Application into Multiple Containers?\n\nUmer Mansoor - (2017) YAGNI, Cargo Cult and Overengineering - the Planes Won't Land Just Because You Built a Runway in Your Backyard\n\nTzvi Freeman - (1997) Creating A Great Design Document\n\nBrian Kelly - (2013) UX, Then Architecture, Then Tools\n\nBrian Kelly - (2012) The Web APIs You Use Will Fail\n\nBrian Kelly - Building Resilient Microservices from the Fallacies of Distributed Computing\n\nQueues - Job queues, message queues and other queues listed and compared in one place\n\nComposition over inheritance - Choose Composition over inheritance\n\ndastergon/awesome-chaos-engineering - list of awesome Chaos Engineering resources\n\nJonas Downey - (2017) Move Slowly and Fix Things | Ruminations on the heavy weight of software design\n\nDan McKinley - (2015) [Slides] Choose Boring Technology\n\nBen Stopford - (2016) The Data Dichotomy: Rethinking the Way We Treat Data and Services\n\nrobinstickel/awesome-design-principles - A curated list of good design and experience principles.\n\nYegor Bugayenko - (2014) Anti-Patterns in OOP\n\nClément Delafargue - (2015) Why Auto Increment Is A Terrible Idea | interesting debate in the comments\n\nAdrian Colyer - (2017) Analyzing software requirements errors in safety-critical embedded systems\n\nmmcgrana/services-engineering - A reading list for services engineering, with a focus on cloud infrastructure services.\n\nmanuzhang/awesome-streaming - a curated list of awesome streaming frameworks, applications, etc\n\nScott McCarty - (2015) Architecting Containers Part 1: Why Understanding User Space vs. Kernel Space Matters\n\nMichael Bernstein - (2014) 5 Reasons to Use Protocol Buffers Instead of JSON For Your Next Service\n\nJ. B. Rainsberger - (2009) The Four Elements of Simple Design\n\nBrian Geihsler - (2014) Why I Don't Teach SOLID\n\nMichal Ciurus - (2015) Drawing clear lines in software architecture\n\nMichal Ciurus - (2014) Your code sucks - things you need to know about clean code and architecture\n\nMichal Ciurus - (2015) The Clean Code Trap\n\nSarah Mei - (2015) [Slides] Is Your Code Too SOLID? (with transcript)\n\nBrian Geihsler - (2014) Beyond SOLID: The Dependency Elimination Principle\n\nAnthony Williams - (2013) Duplication in Software\n\nBig Design Up Front (BDUF)\n\nGregg Caines - (2009) The Lost Art of Prototyping\n\nSteve McConnell - (1996) Teach Programming Principles, Not “Tools and Tips”\n\nSteve McConnell - (1996) Keep It Simple\n\nMartin Fowler - (2011) Command Query Responsibility Segregation (CQRS)\n\nLaura Klein - (2009) 6 Reasons Users Hate Your New Feature\n\nAdam Pittenger - (2013) Love what you build. Build what you love.\n\nKenneth N. Lodding, Nasa - (2004) Hitchhiker's Guide to Biomorphic Software | The natural world may be the inspiration we need for solving our computer problems.\n\nManisha Sahasrabudhe - (2017) 7 things to consider while moving to a microservices architecture\n\n⭐ donnemartin/system-design-primer - Learn how to design large-scale systems. Prep for the system design interview.\n\nGreg Williams - (2017) Diagrams as Software Documentation – When a Picture Says it Best\n\nHigh Scalability - Building bigger, faster, more reliable websites\n\nHigh Scalability - Here are some of the favorite posts on HighScalability...\n\nDan North - [Slides] (2016) Why Every Element of SOLID is Wrong by\n\nLieven Vaneeckhaute (denshade) - (2015) NoSQL and the responsibility shift | about data quality\n\nSteven A. Lowe - (2018) Big benefits from tiny types: How to make your code's domain concepts explicit\n\nAbduzeedo - Design Inspiration for the perfect office\n\nNick Babich - (2018) 10 Tips to Develop Better Empathy Maps\n\nDella Anjeh aka Black Queen of Tech - (2017) How to Write Awesome Tech Specs\n\nFred Hébert - (2017) Tout est Terrible | a very cynical view of technology\n\nJoël Spolsky - (2001) Don’t Let Architecture Astronauts Scare You | about productivity\n\nJim Leonardo - (2017) Don't Repeat Yourself x3\n\nThomas Wedell-Wedellsborg - (2017) Are You Solving the Right Problems? via Jim Leonardo's article titled \"Export to PDF: A Tale in Understanding the Business Need\"\n\nSimon Brown - (2014) Software architecture and the C4 model | context, container, component, class diagrams\n\nJoshua Kerievsky - (2015) Evolutionary Design | agile's most valuable practice?\n\nGojko Adzic - (2012) Splitting user stories -- the hamburger method\n\nBill Wake - (2016) Evolution, Cupcakes, and Skeletons: Changing Design\n\nFagner Brack - (2016) Why Small Modules Matter | Big projects are what, if not the composition of small pieces\n\nJoe Forshaw - (2017) Message-Oriented Programming\n\nSimon Brown - (2018) Today's software developers are the ivory tower architects of tomorrow\n\nThe C4 model - The C4 model for software architecture : Context, Containers, Components and Code\n\nBen Northrop - (2018) The Reality of Reuse | we're hard-wired to want to make decisions quickly and we take too many shortcuts\n\nJoshua Kerievsky - (2010) Sufficient Design\n\nwe need high design quality for stuff that is critical to our products and less design quality for stuff that isn't critical.\n\nLuu Duong - (2009) Applying the \"80-20 Rule\" with The Standish Group’s Statistics on Software Usage | 80% of users only use 20% of features.\n\nJoshua Kerievsky - (2010) What’s Wrong With Clean Code? | When Cleaning Is Not Enough\n\nClean frequently and remodel occasionally to produce an excellent design.\n\nKristof Kovacs - The Death Star Design Pattern\n\nSimon Wardley - (2015) On Pioneers, Settlers, Town Planners and Theft.\n\nFred Hébert - (2018) The Hitchhiker's Guide to the Unexpected | about clean architecture, and making things easier\n\nGraham Lee - (2018) It’s about the thinking\n\nThoughtWorks - How to build your ThoughtWorks Radar\n\nZhamak Dehghani - (2018) How to break a Monolith into Microservices | What to decouple and when\n\nMark Heath - (2017) STABLE tactics for writing SOLID code\n\nTodd Hoff - (2018) What Do You Believe Now That You Didn't Five Years Ago? Centralized Wins. Decentralized Loses.\n\nDustin Barnes - (2017) Increasing Software Transparency with Lightweight Architectural Decision Records\n\nVijini Mallawaarachchi - (2017) 10 Common Software Architectural Patterns in a nutshell\n\nKai Niklas - (2018) 38 Actions and Insights to Become a Better Software Architect\n\nArchitectural Katas - small-group exercises for practicing being software architect\n\nThe C4 model - consists of a hierarchical set of software architecture diagrams for context, containers, components, and code.\n\nAlberto Brandolini - (2013) Introducing Event Storming | EventStorming is a workshop format for quickly exploring complex business domains.\n\nJeppe Cramon - (2015) [Slides] Event storming\n\nJesse Weaver - (2015) A Simple Framework for Designing Choices | No design is neutral\n\nJerry Hargrove - AWS | Cloud Diagrams & Notes\n\nGordon Brander - Patterns : \"This is my bag of tricks — loose notes, design patterns, rules-of-thumb, methods of enquiry, tools, cheatsheets, gimmicks, leverage points, descriptions of systems, key questions, risks, and unknowns.\"\n\nJames Somers - (2017) The Coming Software Apocalypse A small group of programmers wants to change how we code—before catastrophe strikes.\n\n“Computing is fundamentally invisible,” Gerard Berry said in his talk. “When your tires are flat, you look at your tires, they are flat. When your software is broken, you look at your software, you see nothing.” “So that’s a big problem.”\n\nZdenek Nemec (Z, zdne) - (2018) API Maturity\n\nRich Archbold - (2018) Run less software\n\nChoose standard technology 2. Outsource Undifferentiated Heavy Lifting 3. Create enduring competitive advantage\n\nSandi Metz - (2016) The Wrong Abstraction\n\nduplication is far cheaper than the wrong abstraction\n\nprefer duplication over the wrong abstraction\n\nGordon Brander - Second System Syndrome | a simple system is doomed to be replaced by an excessively abstract, over-engeered, or bloated successor.\n\nStacy Warden - (2015) 10 things tech pros can learn from \"Star Wars\"\n\nJames Somers - (2019) The three-page paper that shook philosophy : “Is Justified True Belief Knowledge?” : “the Gettier cases”\n\nDaniel Lebrero - (2017) Documenting your architecture: Wireshark, PlantUML and a REPL to glue them all.\n\nDaniel Lebrero - (2019) Architecture decisions: the belligerent contrarian and the rule of three\n\nDavid Futcher - (2019) You Don’t Need All That Complex/Expensive/Distracting Infrastructure\n\nSimon Wardley - (2015) An introduction to Wardley 'Value Chain' Mapping. Bonus : See also Wardley map\n\nmilo-minderbinder/AWS-PlantUML - PlantUML sprites, macros, and other includes for AWS components.\n\nRicardoNiepel/C4-PlantUML - C4-PlantUML includes macros, stereotypes, and other goodies (like VSCode Snippets) for creating C4 diagrams with PlantUML.\n\nThe Architecture of Open Source Applications - Useful resources of information, because most software developers only ever get to know a handful of large programs well—usually programs they wrote themselves—and never study the great programs of history. As a result, they repeat one another's mistakes rather than building on one another's successes.\n\nChecklist Design - A collection of the best UX and UI practices.\n\nprinciples.design - a place to learn about and create Design Principles\n\nGilles Scokart - [Slides] (2016) Stop testing start designing\n\nDavid Gilbert - (2013) Why Japanese Web Design Is So… Different\n\nWorse is better - It is the subjective idea that quality does not necessarily increase with functionality—that there is a point where less functionality (\"worse\") is a preferable option (\"better\") in terms of practicality and usability. Software that is limited, but simple to use, may be more appealing to the user and market than the reverse.\n\nSane software manifesto - While very opinionated, it's an interesting list of practices for software developers, about safe code, collaboration, reproducible builds, modularity, architecture, testability, etc.\n\nPetter Måhlén - (2014) Qualities of Quality | Spotify Labs\n\nBystroushaak - (2020) Programmer's critique of missing structure of operating systems | Original (2018) Programátorova kritika chybějící struktury operačních systémů\n\nMike Crittenden - (2020) The “You Get One Diagram” approach to architecture documents\n\nCantlin Ashrowan - (2020) Coherent and complex\n\nCollaboration, it turns out, gets harder in proportion to two things: the level of coherence you demand from the output, and the complexity of the processes that create it.\n\nCollaboration that creates incoherence is easy. You all just do whatever you want. Equally, collaboration on things that are not complex is easy. You can all see whether the log has been chopped or not, there is limited room for debate.\n\nOn the other hand, lets say that instead we first come up with a clear overarching plan for what we’re doing. This makes it much more likely the outcome will be coherent. But the price we pay is having to handle the complexity of the entire challenge all at once.\n\nFred Hébert - (2020) Complexity Has to Live Somewhere\n\nWhen dealing with build tools, a few things become apparent:\n\nif you make the build tool simple, it won't handle all the weird edge cases that exist out there\n\nif you want to handle the weird edge cases, you need to deviate from whatever norm you wanted to establish\n\nif you want ease of use for common defaults, the rules for common defaults must be shared between the tool and the users, who shape their systems to fit the tool's expectations\n\nif you allow configuration or scripting, you give the users a way to specify the rules that must be shared, so the tool fits their systems\n\nif you want to keep the tool simple, you have to force your users to only play within the parameters that fit this simplicity\n\nif your users' use cases don't map well to your simplicity, they will build shims around your tool to attain their objectives\n\nSteve Yegge - (2007) The Pinocchio Problem | Great systems :\n\nshould never reboot (Rebooting is Dying).\n\nmust be able to grow without rebooting.\n\nHave a command shell.\n\nAlways have an extension language and a plug-in system (mods).\n\nAre introspective.\n\nHave to be a killer app, or they need one.\n\nKamil Grzybek - (2018) Feature Folders | on codebase design\n\nNing T. - (2015) 10 Uniquely Beautiful Coffee Makers\n\nPrinciples.dev - Open-source Software Engineering and Leadership principles | Make better decisions using principles - For Software Engineers and technical leaders who want better results.\n\nUnix Sheikh - (2022) Is the madness ever going to end?\n\nBen Hoyt - (2021) The small web is beautiful\n\nFewer moving parts. It’s easier to create more robust systems and to fix things when they do go wrong.\n\nSmall software is faster. Fewer bits to download and clog your computer’s memory.\n\nReduced power consumption. This is important on a “save the planet” scale, but also on the very local scale of increasing the battery life of your phone and laptop.\n\nThe light, frugal aesthetic. That’s personal, I know, but as you’ll see, I’m not alone.\n\nJeff Huang - (2019) This Page is Designed to Last : A Manifesto for Preserving Content on the Web\n\nGoogle Cloud Architecture Center - Patterns for scalable and resilient apps\n\ntldraw - A tiny little drawing app.\n\nThingiverse - sharing of user-created digital design files to be used for 3D printers, laser cutters, milling machines and many other technologies.\n\nyeggi - Search Engine for 3D printable Models\n\nCults - Find out the best paid and free 3D models of 3D printing. Share in open source or sell your 3D print files.\n\nThe 512KB Club - The 512KB Club | The internet has become a bloated mess. Massive JavaScript libraries, countless client-side queries and overly complex frontend frameworks are par for the course these days. [...] But we can make a difference - all it takes is some optimisation. [...] The 512KB Club is a collection of performance-focused web pages from across the Internet. GitHub repository kevquirk/512kb.club\n\nBrandon Rhodes - (2018) Python Design Patterns | evolving guide to design patterns in the Python programming language.\n\nTools\n\nMermaid Live Editor - Online FlowChart & Diagrams Editor\n\nArt 🎨\n\nNews\n\nToggl Blog - Fun articles from Toggl, with good posters / comics\n\nPixelation - A standalone forum dedicated which hosts lots of studies and deeper discussions of pixel art.\n\nLa boite verte - 🇫🇷 [FR] Site de découverte sur la photographie, la science, les arts et tout ce qui est insolite.\n\nRetronator Magazine - Pixel Art, Gaming & Saturated Colors\n\nMisc\n\nPierre Debatty - 🇧🇪 [BE] art of Pierre Debatty, a belgian painter\n\nKevin Smith - (2014) [IMG] It costs nothing to encourage an artist\n\nKelton Sears - (2016) How Two Brothers From Silverdale Made The World’s Most Complex Video Game | about Dwarf Fortress\n\nCartooning for Peace - [IMGS] Cartoons about censorship, freedom of expression, human rights, environment, inequality, war, religion, migrations, etc\n\nProgramming Puzzles StackExchange - Tweetable Mathematical Art\n\nChristelle Mozzati - (2013) [FR] 🇫🇷 Un graphiste, pourquoi c’est cher ?\n\nDr. Tom Murphy VII, Ph.D. - [PDF] A C89 compiler that produces executables that are also valid ASCII text files\n\nJaime Jasso - gallery of Jaime Jasso, Digital Matte Artist working for the film Industry, fan of sci-fi, Cyberpunk, visual effects in general, matte painting, concept art and compositing. old gallery on devianart\n\nAmanda Sopkin - (2018) Fantastic Personal Websites and How to Make Them | tips for good portfolio\n\nawesome-portfolios - Awesome Creative Portfolio Websites\n\nAnne Quito - (2018) Drawing is the best way to learn, even if you’re no Leonardo da Vinci\n\nDwitter.net - is a challenge to see what awesomeness you can create when limited to only 140 characters of javascript and a canvas.\n\nPixel Joint - Highest Rated Pixel Art | Pixel Joint is all about the pixel art community. The site was started in September 2004\n\nLa boite verte - 🇫🇷 [FR] Les illustrations en pixel art de Octavi Navarro\n\nPixels Huh - Pixel Art paintings by Octavi Navarro\n\nMatej ‘Retro’ Jan - (2017) #artistsontwitter by Retronator\n\nBlake Reynolds - (2015) A Pixel Artist Renounces Pixel Art\n\nAzgaar's Fantasy Map Generator - Web application generating interactive and customizable maps\n\nNeoGaf - (2016) How where when Metal slug sprites made? | Interesting thread on NeoGAF\n\nSmooth Sailing with Kubernetes - An online comic to learn about Kubernetes and how you can use it for continuous integration and delivery.\n\n7DRL Challenge 2019 - In 2005, the roguelike community established a yearly event, the 7DRL Challenge, in which developers are challenged to create a roguelike in seven days. This allows one to have the shared misery of knowing you are not the only one tracking down a bad pointer at the 167th hour. The annual event occurs during a week in early March.\n\nLOWREZJAM 2019 - The goal of the jam is to create a game with a resolution of 64x64 pixels or less. You can use whatever programming language or tools that you wish.\n\nCSS Zen Garden - is a World Wide Web development resource \"built to demonstrate what can be accomplished visually through CSS-based design.\".\n\nRedbubble - Awesome design products designed by independent artists | clothing, stickers, art, masks, accessories, home & living, kids & babies, gifts, ...\n\nSeth Godin - (2021) Folk typography | Why is type getting so bad?\n\nGoomics - Comics about life at Google\n\nINeedCoffee - Life is Coffee Comics\n\nThingiverse - sharing of user-created digital design files to be used for 3D printers, laser cutters, milling machines and many other technologies.\n\nyeggi - Search Engine for 3D printable Models\n\nCults - Find out the best paid and free 3D models of 3D printing. Share in open source or sell your 3D print files.\n\nPARCOURS Street Art de la Ville de Bruxelles - 🇫🇷 🇧🇪 [FR] [BE] Vous y découvrirez toutes les fresques produites ou coproduites par le PARCOURS sur notre commune (codes postaux : 1000, 1020, 1120 et 1130). Mais aussi des informations sur les artistes, collectifs, descriptions des œuvres, nos appels à projets ou aux propriétaires ainsi que des parcours thématiques ou géographiques.\n\nAnmol Wadhwa - (2022) 15 Inspiring 3D Websites\n\nTools\n\nFeedArt - a chrome extension that replaces the ads you see on your Facebook feed by cool pieces of art\n\nGraphviz Docs - [PDF] (2015) Drawing graphs with dot / dot User's Manual\n\nToolpic - Free Photoshop Online Alternative\n\nPlantText - an online tool that quickly generates images (mostly UML diagrams) without the use of a mouse because it relies on a text-based language called PlantUML.\n\nHive Plots - Rational Network Visualization - Farewell to Hairballs | Linear Layout for Network Visualization - Visually Interpreting Network Structure and Content Made Possible\n\nBioFabric - displays a network where nodes are depicted as horizontal lines, not as points! Take a look at the Super-Quick Demo to see how it works in under 60 seconds. Example : Simple BioFabric Rendered\n\nmaxogden/biofabric - a client side module for generating biofabric graphs in svg using d3\n\nMode Analytics - example of Hive plot\n\nPlantUML - Drawing UML with PlantUML : PlantUML Language Reference Guide\n\nCharacter Generator - Create a character sprite sheet for your game using 100% open art.\n\nTurtletoy - Create your generative art online using a minimalistic Turtle graphics API.\n\nDeepAI - Image Colorization API\n\nLogo Lab - Test your logo | Put your logo to the test and find out where it succeeds and where improvements could be made.\n\nChart.xkcd - is a chart library plots “sketchy”, “cartoony” or “hand-drawn” xkcd styled charts.\n\njwilber/roughViz - Reusable JavaScript library for creating sketchy/hand-drawn styled charts in the browser.\n\nExcalidraw - is a virtual collaborative whiteboard tool that lets you easily sketch diagrams that have a hand-drawn look & feel to them. Bonus : Extensions & libraries\n\nSlazzer - is an AI powered tool that uses advanced computer vision algorithms to remove bg from any image online and replace background automatically with the best detailing in just a few seconds.\n\nBooks / Reading 📚\n\nfake o'reilly books on Google - [IMG] fake o'reilly books.\n\nMaggie Stiefvater - a story about piracy by a book writer\n\nJohn Allspaw - (2017) Dialogue: The Art Of Thinking Together\n\nAndrew Hatch - (2017) Why We Don’t Need a DevOps Team | Rename your DevOps Team\n\nAustin Kleon - (2018) Reading with a pencil | Full ownership of a book only comes when you have made it a part of yourself, and the best way to make yourself a part of it — which comes to the same thing — is by writing in it.\n\nFarnam Street - A Helpful Guide to Reading Better\n\nNate Hoffelder - (2015) How to Download Your Kindle Notes and Highlights and Export Them\n\nOpentrackers.org - (2017) A guide to help people find ebooks & textbooks\n\nNDTV Gadgets360 - (2015) The 6 Best Places to Legally Download Ebooks for Free\n\nQuora - What is a good website for free books?\n\nJeff Atwood - (2007) Do Not Buy This Book\n\nFarnam Street - (2017) How to Remember What You Read\n\nAndy Matuschak - (2019) Why books don’t work\n\nPicture some serious non-fiction tomes. The Selfish Gene; Thinking, Fast and Slow; Guns, Germs, and Steel; etc. Have you ever had a book like this—one you’d read—come up in conversation, only to discover that you’d absorbed what amounts to a few sentences?\n\nRobert DiYanni - (2021) How to gain more from your reading | There’s more to words than meets the eye. Deepen your appreciation of literature through the art of slow, attentive reading\n\nComplete books\n\n🔥 Library Genesis - ebooks and scientific articles. Bonus : Mirror #1, Mirror #2 with nice UI, Mirrors list\n\n🔥 ZLibrary - The world's largest ebook library.\n\nProject Gutenberg - over 54,000 free eBooks, especially older works for which copyright has expired.\n\nThe Pragmatic Programmers - [PDF] Pragmatic Project Automation Summary Road Map / good one-page summary of Pragmatic Project Automation book\n\nMarco de Saint-Hilaire - [FR] 🇫🇷 [Book] L'art de payer ses dettes et de satisfaire ses créanciers sans débourser un sou\n\nGoogle - [Book] Site Reliability Engineering | free book about how SRE at Google build, deploy, monitor, and maintain some of the largest software systems in the world.\n\nDZone - (2018) [Book] [PDF] DZone's free 50 pages Guide to DevOps: Culture and Process\n\nThe Hidden Wiki - [TOR] a list of websites that have free ebooks.\n\nImperial Library - [TOR] online library with +100.000 books\n\nDeep web sites links - [TOR] Deep Web Books Link | Dark Web Books Sites\n\nPubMed - +27 million content in biomedical literature from MEDLINE, life science journals, and online books.\n\nFox eBook - ebooks site\n\nSmashwords - ebooks from independent authors and publishers\n\nSteve Losh - Free book : Learn Vimscript the Hard Way, learn how to customize vim\n\nInfoQ - news, videos, books for software developers\n\nBrian Kelly - (2011) [Book] The Greatest Software Stories Ever Told\n\nErik Helin and Adam Renberg - [Book] The little book about OS development\n\nMiran Lipovača - [Book] Learn You a Haskell for Great Good! and for free\n\nMarkus Triska - [Book] The Power of Prolog. Bonus : git repo triska/the-power-of-prolog\n\nHumans vs Computers - a book about wrong assumptions, computer bugs, and people caught in between\n\nLaurens Van Houtven - Crypto 101 is an introductory course on cryptography, freely available for programmers of all ages and skill levels. Bonus : GitHub repo\n\nThe Cathedral and the Bazaar - [Book] Musings on Linux and Open Source by an Accidental Revolutionary\n\nLaunch School - Open Book Shelf for developers | some beginner friendly readings about programming, git, command line, etc\n\nLearn You Some Erlang - Online book. Reading this tutorial should be one of your first steps in learning Erlang\n\nOgre - Free Kindle Book Listings\n\nReddit - Free Ebooks\n\nOpenShift - DevOps with OpenShift\n\nMorganGeek - (2015) Design of a support system for modelling gene regulatory networks. Bonus : Download in PDF\n\nInternet Archive - eBooks and Texts : The Internet Archive offers over 15,000,000 freely downloadable books and texts. There is also a collection of 550,000 modern eBooks that may be borrowed by anyone with a free archive.org account.\n\n⭐ Terraform Best Practices - [Book] free book with most of best-practices and recommendations for Terraform users. Bonus : Source code examples\n\nMagazineLib - Free Pdf & interactive e-magazines\n\nebpok3000 - Download PDF Magazines, eBooks, PDF for Free\n\nPDF Giant - a place where you can download magazines in digital PDF format. Save trees.\n\npdf-magazines.me - PDF Magazines and ebook, variety of categories, fast search.\n\nWorldMags.net - Magazines from all over the world\n\nfreemagazinepdf.com - Magazines PDF download free\n\niggredible/Learn-Vim - A book for learning the Vim editor the smart way.\n\nRead Comics Online - Website to read DC and Marvel Comics Online for FREE.\n\nBouquineux - 🇫🇷 [FR] Livres numériques gratuits et libres de droits\n\nEbooks Libres et Gratuits - 🇫🇷 [FR] Ebooks gratuits, la plupart très vieux puisque tombés dans le domaine public | Free ebooks in french. Most of them are old since they are in the public domain.\n\nNos livres - 🇫🇷 [FR] Catalogue de livres électroniques du domaine public francophone\n\nMobilism - Your Source for Apps & Books | Login available via BugMeNot\n\n⭐ 📚 Freely available programming books - List of Free Learning Resources In Many Languages. Source code : EbookFoundation/free-programming-books\n\nWikisource - is an online digital library of free-content textual sources on a wiki, operated by the Wikimedia Foundation. Wikisource is the name of the project as a whole and the name for each instance of that project (each instance usually representing a different language).\n\nOpen Library - is an open, editable library catalog, building towards a web page for every book ever published. Read, borrow, and discover million books for free.\n\nBook summaries, notes and reviews\n\nMorganGeek - My own highlights of favorite - mostly software engineering related - books.\n\nWikiSummaries - A listing of free book summaries in English by category and alphabetically.\n\nActionable Books - 1134 business book summaries with personality. Insights you can apply in five minutes.\n\ncsabapalfi/release-it - notes for the book titled 'Release It!' by Michael T. Nygard\n\nFree Summarizer - Summarize any text Copy and paste your loooong text (even a copy of a book)\n\nO'reilly - contributions appearing in book 97 Things Every Programmer Should Know\n\nonaclov2000/PassionateProgrammer - a list of the tips from the book \"Passionate Programmer\"\n\nsfrapoport/daily-pragmatic-tip - notes from book \"Pragmatic Programmer\"\n\nbraydie/PragProgTips - some tips from pragmatic programmer book\n\nSome GitHub resources on clean coding practices, mostly based on book 'Clean Code: A Handbook of Agile Software Craftsmanship' by Robert C. Martin : Wojtek Lukaszuk, Deniz Ozger/clean-code, Jose Angel Barroso/clean-code, harry830622/clean-code-notes, thebentern/clean-code-study, JuanCrg90/Clean-Code-Notes, timkendall/clean-code\n\njbelmont/pragmatic-programmer-and-clean-code - principles from Pragmatic Programmer and Clean Code books\n\nAlex Ott - books review on Erlang\n\nAlex Ott - books review on Haskell\n\nHugo Matilla/Effective-JAVA-Summary - Summary of the book Effective Java 2nd Edition by Joshua Bloch\n\nAlex Ott - books review on Lisp\n\nAlex Ott - Functional programming books overview\n\nAlex Ott - books review on Prolog\n\nSam Harris - (2017) The Hard Thing About Hard Things — Summary of book\n\nFarnam Street - (2012) The Best Summary of Dale Carnegie's How to Win Friends and Influence People\n\nJo Meenen - The Art Of Non-Conformity Book Summary\n\nJo Meenen - The ONE Thing Book Summary\n\nJo Meenen - Switch Book Summary | How to Change Things When Change Is Hard | good tips here\n\nJo Meenen - 7 Habits Of Highly Effective People Summary\n\nrondy - Effective Engineer - Book Notes. Bonus see also The Effective Engineer website and Effective Engineer Blog\n\nA random quote - Short summaries of books / Great books summarized in 5 quotes or less\n\nAyooluwa Isaiah - (2021) Book summary: A Philosophy of Software Design\n\nHugo Matilla/Refactoring-Summary - Summary of \"Refactoring: Improving the Design of Existing Code\" by Martin Fowler\n\nBookstash - Top books recommended by famous folk, in 3m or less.\n\n“‘I read it on Bookstash’, or how to pretend you’re smart while actually being smart.” - Alberto Heinstein\n\nJohn Arundel - (2021) Review: 'Let's Go Further'\n\nJohn Arundel - (2022) Best Go books for 2022\n\nDerek Sivers - (2020) A Guide to the Good Life: The Ancient Art of Stoic Joy - by William Irvine\n\nusefulchess - (2005) Chess books\n\nBook tools\n\nEPUB Converter - Free EPUB to MOBI Converter. Alternative : Convert Files\n\nEPUB to MOBI Converter - Convert your epub files to mobi online & free\n\nGoogle Books - Search the world's most comprehensive index of full-text books\n\nCloudConvert - EPUB to PDF Converter | with support for EPUB, PDF, AZW and CBZ amongst many others.\n\nBookstash - Top books recommended by famous folk, in 3m or less.\n\n“‘I read it on Bookstash’, or how to pretend you’re smart while actually being smart.” - Alberto Heinstein\n\n⭐ iLovePDF - Split PDF files online\n\nConverter App - DjVu to PDF\n\nOnline Converter - Compress EPUB File Size\n\n⭐ iLovePDF - Compress PDF file. Same PDF Quality less file size\n\n⭐ iLovePDF - Online PDF Editor and Form Filler\n\nBook suggestions\n\nTasteKid - get recommendations for music but also tv shows, films, games, books...\n\nLearn by Reading - Discover your next favorite learnable (Non-fiction) book from Amazon Book\n\nGnod - Discover new books based on what you like\n\n⭐ Goodreads - a home for you books, to manage your collection and discover new books\n\n⭐ LibraryThing - a home for your books, to manage your library and discover new books. | Recommendations are numerous and usually relevant to me for every book I tried\n\nWhichbook - a tool for selecting what book to read next\n\nWhat Should I Read Next? - another tool to discover new books based on what you like\n\nAllReaders - book search engine, get details and recommendations about books you like\n\nReadgeek - Let Readgeek get to know your book taste to get recommendations\n\nCommunity Picks - recommended books for hacker subreddits\n\nBook Suggestions Ninja - books suggestions based on book / author or genre\n\nReading Stash - Just a book recommender\n\nKooba - an interactive graph for finding new books\n\ndev-books - top of most mentioned books on stackoverflow\n\nGoodreads - Popular Reddit Top 200 Books\n\nAmazon - Top 100 Free Amazon Best Sellers\n\nJeff Atwood - (2015) Recommended Reading for Developers\n\nhackerkid/Mind-Expanding-Books - 📚 Books that will blow your mind. Bonus : Beta website\n\nAsk HN - (2018) Which books describe modern devops?\n\nFavobooks - famous people's favourite books : explore book recommendations of great thinkers, entrepreneurs, pioneers and visionaries.\n\nThe Book Seer - What should I read next ?\n\nReddit Favorites - What are reddit's favorite Books? | From 3.5 billion comments (number from Sept. 13, 2021)\n\nLibrel - 🇫🇷 🇧🇪 [FR] [BE] La plus grande librairie de Belgique | Les librairies indépendantes. See also Carte interactive\n\nBusiness & Economics\n\nNews\n\nCollaborative Fund - About information, collaboration and investments\n\nPaul Graham - Essays by Paul Graham\n\nLearn\n\nJean-Luc - (2013) [FR] 🇫🇷 Les confessions d’un mineur de bitcoin\n\nSEO'Brien - Why Do Startups Work in Silicon Valley?\n\nCapitalism & Competitiveness (2014) [IMG] [FR] 🇫🇷 Competitivity\n\nAdam Pittenger - Love what you build. Build what you love.\n\nSacha Greif - (2014) The Spiderweb Strategy : Why it’s OK if some of your projects don’t make money\n\nAndy Adams - (2014) How to talk yourself into charging more\n\nDoug Tedder - (2017) The Seven Silent Killers of the IT Organization\n\nGreg Kogan - (2017) Reject the First Ideas\n\nGreg Kogan - (2017) Progression | Finding errors in your past decisions and ideas means you’re progressing\n\nMaggie Stiefvater - a story about piracy by a book writer\n\nGreg Rosalsky - (2017) The Economics of the Office: Why Do We Still Commute?\n\nKevin Pezzi MD - (2015) The irony of Silicon Valley\n\nDean Baker - (2017) The problem of doctors’ salaries\n\nDaniel Miessler - (2017) The New Luxury of Having Good Information\n\nYevgeniy Brikman - (2017) The Truth About Startups\n\nmezod/awesome-indie - Resources for independent developers to make money\n\nJoël Spolsky - (2006) A Field Guide to Developers : what they’re looking for, what they like and dislike in a workplace, and what it’s going to take to be a top choice for top developers.\n\nJoël Spolsky - (2007) How to demo software\n\nDavid McRaney - (2010) Fanboyism and Brand Loyalty\n\nAndrew Orlowski - (2017) Break up Google and Facebook if you ever want innovation again | Jonathan Taplin against the tech giants\n\nGoogle Finance - brings together stories from the many of the best financial news sites + all the market and portfolio data\n\nData Gueule (DTG) - [Videos] [FR] 🇫🇷 #Datagueule, l'émission qui décode les mécanismes de notre société... avec des chiffres ! Datagueule is a french youtube program that decrypts how society functions and provide actual figures\n\nLee Rainie - (2017) 10 facts about jobs in the future\n\nBob Reselman - (2018) Why the promise of low-code software platforms is deceiving\n\nLow-code/no-code platforms mean anyone can code, right? Wrong. This is a dangerous thought for enterprises.\n\nMike Fisher - (2018) Selecting a Cloud Provider\n\nJim Bird - (2015) Don’t Blame Bad Software on Developers – Blame it on their Managers\n\nItamar Turner-Trauring - (2016) Why living below your means can help you find a better job\n\nJohn Cutler - (2017) Faster. Faster. Faster.\n\nShan - (2015) Things I hated About Being a Renter for 15 years\n\nMorgan Housel - (2017) Great Products vs. Great Businesses\n\nMorgan Housel - (2017) Never Do That Again | about confusion & learning from failure\n\nSophie Bakalar - (2018) How to Beat Amazon\n\nMorgan Housel - (2017) The Best Simple Business Models\n\nThe three best business models: Make boring things exciting. Make complicated things simple. Make intimidating things painless.\n\nMorgan Housel - (2017) The Full Reset | understand the power of starting clean\n\nMorgan Housel - (2017) How To Read Financial News\n\numair haque - (2017) The Dopamine Economy\n\nJohn B. Sparks - Histomap: Visualizing the 4,000 Year History of Global Power\n\nPaul Graham - (2014) Mean People Fail\n\nScott Santens - (2017) Why we should all have a basic income\n\nDavid Rotman - (2017) The Relentless Pace of Automation\n\nErik Dietrich - (2017) Side Hustle Ideas for Software Developers\n\nGary Klein - (2007) Performing a Project Premortem\n\nThomas Wedell-Wedellsborg - (2017) Are You Solving the Right Problems? via Jim Leonardo's article titled \"Export to PDF: A Tale in Understanding the Business Need\"\n\nWard Cunningham - (2014) Analyzing Xp With Options Pricing | in XP, you should consider the Option to abandon, option to switch, option to defer investment and take advantage of possible future opportunity\n\nJoshua Kerievsky - (2009) Do What You Love in a Down Economy\n\nDavid Brown - (2017) How to Stay Grounded and Maintain Your Vision at Your Company | There are four fundamental elements of running a business, and not only is vision the first, it's also the one that the others are built on. | As startup businesses start to scale, the vision can easily get lost.\n\nHicham Amine - (2017) How to Grow A Startup: The 5 Best Tips I’ve ever learned.\n\nEric Jorgenson - (2017) Why Growing Past 20 Employees is so Damn Hard (and what you can do about it)\n\nEric Jorgenson - (2015) Secrets to Perfecting Organizational Communication—Evergreen Business Weekly 3: Internal Communication | If the members of the team cannot communicate, isolation limits their potential.\n\nOvercommunicate in all ways, all the time. There is no such thing as too much communication. When you think you’ve communicated something too much, you’re probably just beginning to get through.\n\nEric Jorgenson - (2015) How Not to Hire Like a Clownshow—Evergreen Business Weekly 2: Hiring\n\nNick Cassella - (2018) Ask Your Coworkers What They Make. You’ll Earn More.\n\nSam Harris - (2017) The Hard Thing About Hard Things — Summary of book\n\nTriin Linamagi - (2015) The Most Common Reasons Startups Fail\n\nKevin J. Delaney - (2016) Something weird happens to companies when they hit 150 people\n\nIsaac Park - (2017) Founder Problem: I’m The Reason My Startup Doesn’t Grow\n\nShoshanna Solomon - (2018) As startups grow, founders need to learn to let go\n\nAs your company grows you have to get used to the fact that you cannot be involved in all the aspects of the company. To delegate is hard Delegating, he said, is another tough thing to do. “The key is to hire people who are more intelligent than you, to find people who are super, super smart, ”\n\nDavid NiuMark Roberge - (2017) How Morale Changes as a Startup Grows | how company's culture changes\n\nKristof Kovacs - The Death Star Design Pattern\n\nDunbar's number - is a suggested cognitive limit to the number of people with whom one can maintain stable social relationships—relationships in which an individual knows who each person is and how each person relates to every other person.\n\nHype Cycle - a branded graphical presentation developer by Gartner, for representing the maturity, adoption and social application of specific technologies\n\nSimon Wardley - (2015) On Pioneers, Settlers, Town Planners and Theft.\n\nHugo Lassiège - (2013) [FR] Travailler autrement | sur les crises et court-termisme entre autres\n\nGabe Hicks - (2017) 6 Ways to Control Cloud Costs\n\nMike Ensor - (2018) Containers: The Software Development Life Cycle’s Last Mile\n\nBeau Lyddon - (2018) Stop Wasting Your Beer Money | Why are engineers so bad at paying other engineers for their work?\n\nRobert Greene, Joost Elffers - The 48 Laws of Power\n\nSam Altman - (2018) How to Avoid Distractions and Start the Right Company: Startup Tips from Sam Altman\n\nJesse Weaver - (2015) A Simple Framework for Designing Choices | No design is neutral\n\nRich Archbold - (2018) Run less software\n\nChoose standard technology 2. Outsource Undifferentiated Heavy Lifting 3. Create enduring competitive advantage\n\nReed Hastings - [Slides] (2009) Netflix culture. Bonus : new version here\n\nMeredith Somers - (2018) The 20-year-old entrepreneur is a lie | Data from the Census Bureau and the IRS show the average age of successful business founders is 42.\n\nWHY IT MATTERS Good ideas come at any age, but it takes experience to turn them into success stories. Steve Jobs was 21 when he helped found Apple, but he was a 43-year-old CEO when the company created the iMac.\n\nIan Miell - (2018) Why Are Enterprises So Slow?\n\nPatrick Louis - (2019) Time On The Internet\n\nMike Jarvis - (2018) How to Save a Fortune On Cloud Infrastructure\n\nGrille de Salaires anonyme des startupers - 🇫🇷 [FR] Tu bosses en startup ? Découvre les salaires pratiqués, ou partage ton salaire. Tout ceci est anonyme. | salaries for french startups\n\nSimon Wardley - (2015) An introduction to Wardley 'Value Chain' Mapping. Bonus : See also Wardley map\n\nHourly rate calculator - A calculator for freelancers to use as a guide to costs, billable hours and desired profit. Takes 10-15 min to complete.\n\nMartin Fowler - (2019) Is High Quality Software Worth the Cost?\n\nFreelance.tv - Videos about freelancing\n\nFarnam Street - (2018) The Surprising Power of The Long Game\n\nKristijan Ristovski aka Kitze - (2019) GitHub stars won’t pay your rent\n\nSolve your own problem, everything else will follow However, most developers make zero money off open source. Zero. Show your solution to other people as soon as possible Package it and distribute it as soon as possible (note to self) Don’t be scared, ashamed, or discouraged to make it paid Don’t let anyone tell you how much you should charge for your work value your work and believe that despite the fact that haters are loud, you’re still gonna get a lot of customers who would gladly pay for what you made.\n\nDaniel Miessler - (2019) Job Losses from Automation Are Being Actively Engineered and Funded\n\nSeth Godin - (2009) Ignore sunk costs\n\nWhen making a choice between two options, only consider what’s going to happen in the future, not which investments you’ve made in the past. The past investments are over, lost, gone forever. They are irrelevant to the future.\n\nSeth Godin - (2007) How to be remarkable. Via The Guardian\n\nSeth Godin - (2021) The easy way down\n\nPetra De Rouck - 🇧🇪 [BE] (2018) Quels sont les frais professionnels les plus courants? | Guide Impôts 2018\n\nBX1 - 🇧🇪 [BE] (2021) Déclaration d’impôt 2021 : voici tout ce qu’il faut savoir\n\nPetra De Rouck - 🇧🇪 [BE] (2020) Pas de restos ni de bureau en 2020: comment déclarer vos frais professionnels?\n\nDevOps Salaries - Let's make global salaries in DevOps a bit more open and transparent\n\nRichard Dern - 🇫🇷 [FR] (2016) Alphabet, une entreprise pas comme les autres\n\nBitcoin Obituaries - \"Bitcoin is Dead\" Declared 400+ Times (2022)\n\nBitcoin Is Dead - The #1 Database of Notable Bitcoin Skeptics.\n\nIn fact, Bitcoin is very much alive. See the activity on the Bitcoin network - market price, average block size, transactions per day, mempool size, total circulation, market capitalization, exchange trade volume, blockchain size, average transaction per block, average payments per block, confirmation times, etc. - here.\n\nJakob Greenfeld - (2022) The simple system I’m using to stay in touch with hundreds of people\n\nMike Crittenden - (2021) Lose touch with people\n\nMike Crittenden - (2021) I schedule my friendships like I schedule my meetings\n\nTools\n\nNintendo eShop price comparator - Find the cheapest price for your favourite game, all prices are in Euro.\n\nSave Coins - helps you save money when you make a purchase at Nintendo Switch eShop.\n\nadiGuba - 🇫🇷 [FR] Les jeux pour Nintendo Switch au meilleur prix !\n\nDeku Deals - tracks the prices of Nintendo Switch games on the eShop and at major retailers in order to find the best deals. Add items to your wishlist, and Deku Deals sends you an email as soon as they go on sale.\n\nKeepa - This Amazon price tracker will enhance your Amazon shopping experience as they provide price history charts, price drop alerts, price watches, daily drops and browser addons.\n\nPSprices - Game price notifications. Automatically monitor 8 platforms in 48 countries.\n\n⭐ Xerius - 🇫🇷 🇧🇪 [FR] [BE] Devenir indépendant : Simulez votre tarif journalier en tant qu'indépendant / Calculateur de Brut-Net / Freelance rate simulator\n\nLogo Lab - Test your logo | Put your logo to the test and find out where it succeeds and where improvements could be made.\n\nCompanyweb - 🇧🇪 [BE] Know who you’re dealing with | Companyweb specialises in company information in Belgium. Its services allow you to understand the risks, the survival rates, the payment capacity, the profitability, the stability and other key factors of every Belgian company.\n\nEd Zitron - (2021) The Work-From-Home Future Is Destroying Bosses' Brains | a critique of managers and business owners\n\nL'Echo - 🇧🇪 [BE] Frais professionnels\n\nMy Tax on Web - 🇧🇪 [BE] Forfait légal ou frais réels ?\n\nopenthebox - 🇧🇪 [BE] Discover your business network | Look inside the web of connections between companies, individuals and politicians in Belgium. See also : slide show - A view of corporate networks in belgium\n\nfincheck - 🇧🇪 [BE] Financial information at a glance : Check the financial situation of any Belgian company in seconds | it is at least as useful as openthebox\n\nStaatsblad monitor - 🇧🇪 [BE] Base de données ouverte des données des entreprises, des comptes annuels et des publications au journal officiel des entreprises belges (gratuit) ! Exemple plusieurs sociétés à la même adresse\n\nB2Bhint - Get any company financial, juridical and historical data with international connections from the official sources\n\nThatCoupon - Tired of clipping coupons and scouring the internet for deals and promotional codes? So are we. This website makes it easy for shoppers to find and share the best deals and coupons. No hunting, no hassle, and no scissors required.\n\nvpnMentor - 79 VPN Coupons, Promo Codes & Discounts - Updated Daily\n\n⭐ Mozilla - (2020) Privacy not included* | Be Smart. Shop Safe. | How creepy is that smart speaker, that fitness tracker, those wireless headphones? We created this guide to help you shop for safe, secure connected products.\n\nnamae - Grab a slick name for your new app | Check availability for your new app name ideas across major registries at once.\n\nKey Values - Find engineering teams that share your values. Select your top values and find teams you'll click with.\n\nKey Values - Culture Queries - The perfect questions to ask in your job interview. Want to stand out from other candidates and find your dream job?\n\nAndy Cook - (2018) Culture Codes: All the Best Culture Decks and How to Create One\n\nFreelancer's Hourly Rate Calculator - provides an hourly rate based on your business expenses, personal expenses, billable hours and desired savings.\n\nr/personalfinance/tools - Personal Finance Tools : Redditor-created Spreadsheets\n\nNews\n\nCoinMarketCap - Cryptocurrency Market Capitalizations\n\nCrypto Lite - A quick way to check the top-100 cryptocurrencies price\n\nCyptocurrency News - Cyptocurrency news updates\n\nWorldCoinIndex - Cryptocoin price index and market cap\n\nHacker Noon - Bitcoin related news\n\n99cryptocoin - Top CryptoCurrency by 24 Hour Trading Volume\n\nAshton Kemerling - (2018) No, You Probably Don't Need a Blockchain | On Bitcoins and Blockchains\n\nBittrex.com - Bitcoin markets\n\nBitcoincharts - provides financial and technical data related to the Bitcoin network\n\nBrave New Coin - Bitcoin Price, Charts, Research, Cryptocurrency Insights\n\nSlofile - Slack channels on cryptocurrency\n\nCSVShare - Blockchain & Crypto Slack Communities\n\nWalletInvestor - Cryptocurrency Forecast (Bitcoin & Altcoin, ICO Prediction, Prognosis 2018, 2019)\n\nBitcoin Obituaries - \"Bitcoin is Dead\" Declared 400+ Times (2022)\n\nBitcoin Is Dead - The #1 Database of Notable Bitcoin Skeptics.\n\nIn fact, Bitcoin is very much alive. See the activity on the Bitcoin network - market price, average block size, transactions per day, mempool size, total circulation, market capitalization, exchange trade volume, blockchain size, average transaction per block, average payments per block, confirmation times, etc. - here.\n\nLearn\n\ncoinpride/CryptoList - Curated collection of blockchain & cryptocurrency resources.\n\nChia Network - blockchain based on proofs of space and time to make a cryptocurrency which is less wasteful, more decentralized, and more secure.\n\nBruce Hunt - (2018) The Art Of Hodling Crypto: Can’t Make this Sh*t Up\n\nIf you took 5 of the cryptocurrencies and if you invested $1,000 in each on Jan 1st 2017… you would have : $655,527 for $5,000 invested.\n\nWalletGenerator - Paper Wallet Generator for BitCoins and other cryptocurrencies. Create, Print & Fold\n\nBruce Hunt - (2017) Due Diligence Checklist for Investing in Cryptocurrency\n\nBruce Hunt - (2017) How Cryptocurrency Market Behaves, It’s a Damn Cycle.\n\nBruce Hunt - (2018) How to Crush the Crypto Market, Quit Your Job, Move to Paradise and Do Whatever You Want the Rest of Your Life\n\nCoin and Crypto - (2018) Bitcoin is outdated tech. These 3 alternatives should be on your radar.\n\nLinda Xie - (2018) Tips for crypto newcomers\n\nBitcoin Regret Club - satirical site for people who want to calculate all the money they you could’ve made.\n\nThe HODLer manifesto - What is HODL?\n\nFederico Gambarelli (fede93g) - (2018) The HODLer Manifesto: what does \"being a Bitcoin HODLer\" mean?\n\nBest Bitcoin Exchange Reviews - Best Bitcoin Exchange Comparison\n\nCryptoCompare - Compare all Bitcoin exchanges, reviews, live streaming bitcoin prices, fees, deposit methods\n\nGamerZ - 🇫🇷 [FR] GamerZ discussion forum about Bitcoin / Cryptocurrencies\n\nAnne Gaviola - (2018) Bitcoin's gender divide could be a bad sign, experts say\n\nLucca Runger-Field - (2018) Blockchain In: Politics\n\nNathaniel Whittemore - (2018) We Talk About Blockchain Governance, So Why Not Blockchain Politics?\n\nJoseph Lubin - (2016) Is Blockchain Technology Going To Disrupt Our Political System: We Hope So\n\nDavid Ernst - (2016) What is Liquid Democracy?\n\nDanny Crichton - (2018) Liquid democracy uses blockchain to fix politics, and now you can vote for it\n\nCLI Tools\n\nSee also Shell scripting\n\nJan Ivar Beddari - (2016) Building a Team CLI with Python: One Alternative to ChatOps\n\nlusarz/jira-node-cli - JIRA command line interface written in NodeJS\n\nkeepcosmos/terjira - Terjira is a very interactive and easy to use CLI tool for Jira, more complete than jira-node-cli\n\njoshuathompson/baton - CLI to manage Spotify playback | You are using Spotify and would love to use it via terminal / CLI tools ? try baton ;-)\n\nChristophe Porteneuve - 30 Git CLI options you should know about\n\nAlex Ellis - 5 keys to create a killer CLI in Go\n\nRemy Sharp - (2018) CLI: improved | presentation of several powerful CLI tools\n\nk4m4/terminals-are-sexy - list of Terminal frameworks, plugins & resources for CLI lovers\n\nGnuPG Docs - CLI options for using gpg gen-key from a script (aka unattended GPG key generation). Discovered via Stack Overflow\n\nRoland Wolters - (2016) Useful command line options for ansible-playbook\n\nJeroen Janssens - Data Science at the Command Line\n\ndonnemartin/saws - A supercharged AWS command line interface (CLI).\n\noperable/cog - Bringing the power of the command line to chat : Via Choosing a Chatbot:From Hubot to Yetibot, What You Need to Know\n\nCog is engineered to be more of a framework that addresses a number of concerns many teams have, such as security. With built-in access control and audit logging functionality, Cog allows teams to collaborate on sensitive tasks with higher confidence. Taking inspiration from the command-line interface, Cog has a “pipe” operator that allows users to run a command and use that output as the input for another command in a process.\n\ntransfer.sh - Easy file sharing from the command line\n\nTerminus - [FR] 🇫🇷 funny in browser role playing game to learn the basic of linux command line. NSFW. Bonus : Source + Original version in english with Sources\n\n⭐ Command line fu - a place to find those command-line gems that you return to again and again.\n\nTuxRadar - Command line tricks for smart geeks\n\nagarrharr/awesome-cli-apps - A curated list of command line apps\n\nRamkumar Kuppuchamy - (2015) Top 15 Best Unix Command Line Tools\n\nSeco Max - (2017) Most Useful Linux Command Line Tricks\n\nGuillermo Garron - (2012) Set Time, Date Timezone in Linux from Command Line or Gnome | Use ntp\n\nJohn Goerzen - (2013) I Raised My Kids On the Command Line...and They Love It\n\nOS X Daily - (2011) Command line : Extract .pkg Files Without Installing Them\n\nOS X Daily - (2013) Mount * OS X Daily - Mount & Unmount Drives from the Command Line in Mac OS X Unmount Drives from the Command Line in Mac OS X\n\nEnrico Maria Crisostomo - (2014) OS X: Creating Packages from the Command Line - Tutorial and a Makefile - Part I\n\nmas-cli/mas - 📦 Mac App Store command line interface\n\nThe Goose-bearing bash shell - (2016) How to get your IP address from the command line. TLDR; type curl ident.me to know your public ip\n\ndonnemartin/haxor-news - Browse Hacker News like a haxor: A Hacker News command line interface (CLI).\n\nmichael-lazar/rtv - Browse Reddit from your terminal\n\nAndrew Morton - (2010) Using cURL and the host header to bypass a load balancer | command line tips & tricks\n\nDonne Martin/gitsome - gitsome : A supercharged Git/GitHub command line interface (CLI)\n\nWhitson Gordon - Become a Command Line Ninja With These Time-Saving Shortcuts\n\n⭐ alebcay/awesome-shell - A curated list of awesome command-line frameworks, toolkits, guides and gizmos.\n\nCommand Line Heroes - podcast about the people who transform technology from the command line up. Presented by Red Hat.\n\nSS64.com - An A-Z Index of the Bash command line for Linux.\n\nBoris Huisgen - [FR] 🇫🇷 various and interesting linux / sysadmin / devops tips & tricks with command line examples\n\n⭐ jlevy/the-art-of-command-line - Master the command line, in one page\n\nherrbischoff/awesome-osx-command-line - Use your OS X terminal shell to do awesome things.\n\nfish shell - Finally, a command line shell for the 90s\n\nLinuxCommand.org - An excellent place to learn the command line and Bash shell scripting.\n\nRemy van Elst - Encrypt and decrypt files to public keys via the OpenSSL Command Line\n\nLaunch School - Open Book Shelf for developers | some beginner friendly readings about programming, git, command line, etc\n\nVitaly Belman - My favorite command-line utilities / How I stopped worrying about GUI and learned to love the terminal\n\n⭐ alexanderepstein/Bash-Snippets - A collection of small bash scripts for heavy terminal users\n\nBash-Oneliner - A collection of handy Bash One-Liners and terminal tricks for data processing and Linux system maintenance. Bonus : GitHub repository\n\nSilver Moon - 20 amusing Linux commands to have fun with the terminal\n\nmps-youtube - Terminal based YouTube player and downloader\n\nkitty - the fast, featureful, GPU based terminal emulator, designed for power keyboard users\n\nPradeep Kumar - (2018) How to capture and analyze packets with tcpdump command on Linux\n\nJordan Merrick - 40 Terminal Tips and Tricks You Never Thought You Needed\n\nMarkus Wein - macOS Terminal cheat sheet\n\nLucas Fernandes da Costa - (2019) How I'm still not using GUIs in 2019: A guide to the terminal. Bonus : author's dotfiles\n\nNick Janetakis - Who Else Wants to Boost Their Terminal Productivity With tmux?\n\nAwesome-Windows/awesome-windows-command-line - cool stuffs you can do with windows terminal\n\nCMD commands - A-Z of windows terminal commands\n\nPowerShell commands - A-Z of windows powershell commands\n\noperable/cog - Bringing the power of the command line to chat : Via Choosing a Chatbot:From Hubot to Yetibot, What You Need to Know\n\nCog is engineered to be more of a framework that addresses a number of concerns many teams have, such as security. With built-in access control and audit logging functionality, Cog allows teams to collaborate on sensitive tasks with higher confidence. Taking inspiration from the command-line interface, Cog has a “pipe” operator that allows users to run a command and use that output as the input for another command in a process.\n\nGareth Anderson - (2006) GNU/Linux Command-Line Tools Summary\n\n⭐ sferik/t - A command-line power tool for Twitter\n\nclvv/fasd - Command-line productivity booster, offers quick access to files and directories, inspired by autojump, z and v.\n\nchrisallenlane/cheat - cheat allows you to create and view interactive cheatsheets on the command-line. You can obviously improve the existing ones with your own content. It's also inspiring for shell aliases creation\n\n⭐ explainshell.com - write down a command-line to see the help text that matches each argument\n\nkoalephant/shell-script-library - Koalephant Shell Script Library | simplifies building portable command-line tools using shell scripts, and provides tools to assist with building self-contained scripts, and documentation.\n\nPaul Heinlein - OpenSSL cookbook / command-line howto\n\ncommand-not-found.com - Install any command on any operating system.\n\nderailed/k9s - 🐶 Kubernetes CLI To Manage Your Clusters In Style!\n\nKotlin/kotlinx.cli - Pure Kotlin implementation of a generic CLI parser.\n\nClikt - Simple, powerful command line parser for Kotlin | Clikt (pronounced “clicked”) is a Kotlin library that makes writing command line interfaces simple and intuitive. It is the “Command Line Interface for Kotlin”. | better alternative to kotlinx.cli ?\n\nb4b4r07/gomi - 🗑️ Replacement for UNIX rm command!\n\nSandro Cirulli - (2019) How to Validate a Jenkinsfile\n\nTLDR\n\ncurl --user username:password -X POST -F \"jenkinsfile=<Jenkinsfile\" http://jenkins-url/pipeline-model-converter/validate\n\nMorganGeek - (2020) Validating Jenkinsfile in Vim and/or using CLI / terminal\n\ntwpayne/chezmoi - Manage your dotfiles across multiple machines, securely. | I'm using it for a while, it's a powerful and fast tool for managing dotfiles, easy to use, transparent and secure, with support of Bitwarden, Vault, pass, LastPass, 1Password, gopass, Keepass, GnuPG, Keychain etc.\n\nHoria Coman - (2020) Jupiter Dev Log 3 - Lint All The Things\n\nec2.shop - Hacker way to compare ec2 instances price\n\nLib.rs - Command line utilities | List of Rust applications/libraries/crates\n\nunixorn/awesome-zsh-plugins - A collection of ZSH frameworks, plugins, tutorials & themes\n\nGuido Socher - (2015) AWK one-liner collection\n\nasdf-vm/asdf - Extendable version manager for multiple languages | Manage multiple runtime versions with a single CLI tool, extendable via plugins\n\nEdouard Kachelmann and Anthony Pasquariello - (2020) Enhance programmatic access for IAM users using a YubiKey for multi-factor authentication\n\nTextualize/rich-cli - Rich-cli is a command line toolbox for fancy output in the terminal\n\nlocalstack/awscli-local - 💲 \"awslocal\" - Thin wrapper around the \"aws\" command line interface for use with LocalStack\n\npeco/peco - Simplistic interactive filtering tool\n\nJSON\n\njq Docs - online manual for jq (a lightweight and flexible command-line JSON processor)\n\nantonmedv/fx - Command-line tool and terminal JSON viewer 🔥\n\ntomnomnom/gron - Make JSON greppable!\n\nCoffee ☕\n\nNews\n\nINeedCoffee - Life is Coffee Comics\n\nMethodical Coffee - Coffee Culture Blog\n\nCoffeeGeek - The world's most read coffee and espresso resource\n\nCoffeeGeek Daily Blog - The world's most read coffee and espresso resource\n\nDelishably - Coffee articles and recipes from around the world written by home chefs and foodistas\n\nReddit - Coffee on Reddit\n\nReddit - Espresso on Reddit\n\nReddit - Barista on Reddit\n\nReddit - James Hoffman related posts on Reddit\n\nClive Coffee - Blog posts about Coffee\n\nSerious Eats - Posts about Coffee & Tea\n\nJavaPresse - Blog posts about coffee\n\nNoGarlicNoOnions - Posts tagged with coffee\n\nLatte Art Guide - Coffee Blog\n\nLe Café de Clara - 🇫🇷 [FR] Clara partage sa passion du café\n\nLearn\n\nLe Pharmachien - [FR] 🇫🇷 Caféine : toxique et délicieuse / Coffee : good and bad parts ☕\n\nDavid McRaney - (2010) Coffee stimulation or addiction ? ☕\n\nBrandur Leach - Caffeine | An experiment of Brandur in seriously throttling back its caffeine intake for the first time in years.\n\nThe Coffee Compass - Brew a coffee. Taste it. Adapt and repeat until you find the coffee you prefer.\n\nMike Crittenden - (2021) 10% of us are barely affected by caffeine\n\nRonan Petillon - [FR] 🇫🇷 (2020) L'AeroPress est une Machine à Café à Moins de 40€ qui a Remplacé ma Nespresso\n\nAlliance For Coffee Excellence - COE (Cup of Excellence) Auction Results | They reward exceptional quality coffee farmers. See also National Winner program results which sells the semi-finalist to the Cup of Excellence program. Tip : pick only coffee scoring at least 80.\n\nSébastien Kardinal - [Video] [FR] 🇫🇷 Coffee Time | Une playlist de vidéos sur le thème du café de spécialité\n\nSasha Pavlovich - (2021) 39 Types of Coffee Drinks\n\nNing T. - (2015) 10 Uniquely Beautiful Coffee Makers\n\nReddit Favorites - What are reddit's favorite Espresso Machines? | From 3.5 billion comments (number from Sept. 13, 2021)\n\nHome-Barista.com - Quotable Quotes | Memorable quotes and quips about espresso from the forums\n\nCoffeeGeek - (2021) An Espresso Glossary - Originally published on CoffeeGeek back in 2003, and updated several times, this glossary has become a reference point for several books on coffee and espresso, and has been widely copied across the internet. We’re updating this for the launch of the new version of CoffeeGeek in 2021.\n\nMark Prince - (2015) Real Espresso Myths that Need Busting | Inspired (sort of) by some questionable myth busting in an espresso education series online, we tackle some real, genuine espresso myths, including caffeine levels, bold coffee and more.\n\nBrian Lam - (2020) Making Espresso at Home Is Kind of a Nightmare—But If You Insist, Here’s How to Do It Well\n\nJasmin Andrews - (2021) Which Coffee Is Better – Washed, Unwashed Or Semi-Washed?\n\nOKCoffee - Interviews\n\nReddit - Coffee recipes\n\nOpen Culture - articles about coffee\n\nGarrett Oden - (2019) Is Nespresso Real Espresso? spoiler Not exactly.\n\nJames Hoffman - (2021) [Video] The Bizarre And Surprising Coffee Of The Nespresso Vertuo\n\nNot so special now, Nespresso Jump to the quote from the video\n\nNoGarlicNoOnions - (2018) 5 Lies: We Need to Stop Telling About Coffee\n\nAaron Rice - (2021) 8 Best Coffee Movies Ever Made\n\nEuropean Coffee Trip - [Video] (2020) Top 8 Coffee Documentaries To Watch Online (for free)\n\nSon of Coffee - (2019) Retro style coffee makers\n\nTips\n\nDave Mosher - (2018) How to Stay Alert Without Caffeine - Try These Science-Based Tricks Next Time You're Tired ☕\n\nRonan Petillon - [FR] 🇫🇷 (2020) Comment Faire un Bon Café à la Maison, Comme un Barista\n\nDaniel Miessler - A Coffee Primer ☕\n\nCaffin8 Coffee - (2021) Easily set up the Barista Express to make the BEST coffee (Sage/Breville)\n\nFull Coffee Roast - Avoid These 32 Common Coffee Brewing Mistakes\n\nINeedCoffee - Coffee Brewing Guide : several tutorials on how to brew coffee.\n\nKevin & Amanda - (2019) How To Use the Breville Barista Express — Tips & Tricks\n\nHome-Barista.com - (2014) Breville Barista Express 870/870XL grinder mod\n\nHome-Barista.com - How-Tos\n\nCoffee Research - Maximizing espresso potential | Found via Home-Barista.com\n\nHome-Barista.com - Resources\n\nCoffeeGeek - How Tos | \"The bread and butter of CoffeeGeek’s website and core mission is education, and our How To section is at the core of that. This is our entire collection of How Tos, written, maintained and updated over the last two decades. More are added often!\"\n\nMatthew De Angelis - (2016) French Press\n\nKawai - (2020) 5 Simple Things You Can Do to Get Barista-Style Coffee\n\nReddit - AeroPress tips & tricks\n\nHomegrounds - (2017) The Last Coffee Grind Size Chart You’ll Ever Need\n\nArlette Kabore - 🇫🇷 [FR] (2021) Conservez mieux le café avec ces 12 conseils\n\nMister Barish - 🇫🇷 [FR] Mousse de lait\n\nMister Barish - 🇫🇷 [FR] Réglage de la Sage Barista Express\n\nJust Coffee And Me - 7 Tips To Brew Better Coffee With The Breville Barista Express\n\nTools\n\nCafé Mag - 🇫🇷 [FR] La carte du café de spécialité | Une carte interactive et collaborative référençant les adresses qui torréfient et/ou proposent du café de spécialité en France et pays francophones.\n\nBarista Hustle - (2021) The Coffee Compass | The Coffee Compass is a simple tool that makes it easy to improve your filter coffee brewing. If your coffee tastes anything less than perfect, the Coffee Compass shows you exactly what direction you need to go in to achieve smooth, rich, and balanced brews.\n\nBlue Coffee Box - is a father-and-son business, frequently rated as one of the UK's best coffee subscription services\n\nOKCoffee - Map of Coffee Bars\n\nProducts\n\nThe Astrology Coffee - was born out of two people’s passions. The Scorpio founder has been obsessed with Astrology and all things hidden in life- working in an office job but daydreaming of something bigger to bring their passion into reality. The Sagittarius founder was fortunate enough to befriend and apprentice under roast master and former coffee picker from Costa Rica, learning the craft from hands-on approach.\n\nCollaboration & Problem solving\n\nNews\n\nTED - [Videos] Ideas worth spreading, usually in the form of short, powerful talks (18 minutes or less)\n\nCollaborative Fund - About information, collaboration and investments\n\nwikiHow - How to instructions you can trust, aka How to do anything. However, if you take a look at sections such as Family Life it can be creepy.... (I mean, do we need a site to learn what is family about ?) See also 🇫🇷 [FR] the french version\n\nLearn\n\nJason Fried - (2016) Is group chat making you sweat?\n\nDale Emery - (2005) model of motivation : Motivation = Ability × Results × Preferences\n\nJ. B. Rainsberger - What If We Forget To Write the Tests?\n\nPaul Kaye - Control stifles creativity and growth\n\nCorinna Baldauf - (2017) Glasl’s Stages of Conflict Escalation\n\nWall-Skills - Great 1-pagers to share in your company\n\nCorinna Baldauf - (2016) Team Self-Selection Kit\n\nCorinna Baldauf - (2016) Silence a Room in 5 Seconds\n\nCorinna Baldauf - (2016) Tuckman’s Stages of Team Development\n\nJason Fried - Depend less on each other\n\nVaidehi Joshi - Crafting Better Code Reviews\n\nKarl E. Wiegers - Humanizing Peer Reviews\n\nDr. Deborah Mowshowitz - (2009) How to Explain\n\nJoe Landsberger - Defining a problem; identifying causes; gathering information\n\nMike Walker - Your team's differentiator isn't its tech\n\nJohn Allspaw - (2017) Dialogue: The Art Of Thinking Together\n\nMindTools - Assertiveness : Working WITH People, Not Against Them\n\nGregg Caines - (2013) A Requiem for a Team\n\nJulie Zhuo - How to Work with Engineers : A Cheat Sheet for Designers\n\nJulie Zhuo - How to Work with Designers : A Cheat Sheet for Engineers and PMs\n\nJulie Zhuo - How to Work with PMs : A Cheat Sheet for Designers\n\nRaúl Ávila - My Experience with Pair Programming\n\nBen Hilburn - What mature engineers do and don't do / what it means to be a mature engineer.\n\nMart Virkus - (2017) The Seven Circles of Developer Hell [Infographic]\n\nDavid Mytton - How to do code reviews\n\nSelect International - There is No Shortcut to Safety\n\nRajesh Setty - (2010) Why MANY smart people take shortcuts and how you can avoid that trap\n\nMarc Chernoff - (2013) 7 Shortcuts You Will Regret Taking in Life\n\nJessica Kerr - Growing Your Tech Stack: When to Say No\n\nChris Parnin - (2013) Programmer Interrupted\n\nDaniel Miessler - How to Build a Strong Argument\n\nDaniel Miessler - (2013) Three Questions Successful People Ask\n\nWhat do I want to achieve?\n\nWhat are my obstacles?\n\nWho has solved this already?\n\nAnthony Panozzo - (2016) How to Actually Publish More Things\n\nSam Knuth - A 3-step process for making more transparent decisions\n\nLauri Apple - (2017) documentation : a maturity model for READMEs | Your step-by-step guide to more effective documentation\n\nChastity Blackwell - 7 deadly sins of documentation\n\nMuriel Lefevre - [FR] 🇫🇷 Stanislav Petrov, l'homme qui sauva le monde en ne faisant rien\n\nAnthony Panozzo - (2015) If Something Is Hard, Do It More Often\n\nJohn D. Cook - (2009) Do you really want to be indispensable?\n\nTobias Fors - (2014) [IMG] The project paradox: making the biggest decisions when knowledge is at it's absolute lowest.\n\nKevin Smith - (2014) [IMG] It costs nothing to encourage an artist\n\nAlex Calderon - (2014) [IMG] Are You a Boss or a Leader ?\n\nWesley Moore - (2017) Pair Programming\n\nJacob Shriar - 13 Scary Statistics on Employee Engagement\n\nFred Hébert - Don't be a Jerk: Write Documentation\n\nAndrew Bosworth - Say No\n\nShubhro Saha - (2014) Software engineers should write\n\nShubhro Saha - (2017) Two sentences for better meetings\n\nJ. B. Rainsberger - (2014) Change Your Life One Habit At A Time\n\nLin Taylor - (2017) How I hacked my imposter syndrome using personal tracking\n\nMike Cannon-Brookes - An amateur’s guide to turning impostor syndrome into an asset\n\nChris Parnin - (2014) Notes on Interruption for Programmers\n\n⭐ Write the Docs - Documentation Guide : a best practice handbook for building, structuring, and writing software documentation, for creating more wonderful documentation in the world\n\nUmer Mansoor - (2017) Fix Employee Weaknesses or Focus on Their Strengths?\n\nUmer Mansoor - (2016) Effective Code Reviews\n\nBrian Kelly - (2013) UX, Then Architecture, Then Tools\n\nTom Preston-Werner - (2010) Readme Driven Development\n\nOblique Strategies - How to break creative blocks by encouraging lateral thinking.\n\nJeff Wainwright - (2017) Code Review Etiquette\n\nDoug Tedder - (2017) The Seven Silent Killers of the IT Organization\n\nDoug Tedder - (2017) The CAB is Dead. Long Live the CAB.\n\nDaniel Doubrovkine - (2015) Connecting People to Enable Magic\n\nGreg Kogan - (2017) Reject the First Ideas\n\nKirsten Pickworth - (2017) How to Avoid the Best Practices Trap\n\nCarl Hembrough - (2017) When programming was no longer fun | another story about impostor syndrome\n\nCharles Duhigg - (2016) What Google Learned From Its Quest to Build the Perfect Team\n\nMetEdge - [IMG] Successful vs Unsuccessful People\n\nGreg Rosalsky - (2017) The Economics of the Office: Why Do We Still Commute?\n\nRobert Ecker - (2017) Give Up Perfection!\n\nJeff Goins - (2017) The Single Most Overlooked Secret To Influencing Other People\n\nJohn Cutler - (2016) company culture is…\n\nPhilippe Bourgau - (2015) From Zero to Pair Programming Hero\n\nErlend Hamberg - (2010) Code Reading as a Team Activity\n\nzalando/zalando-howto-open-source - How to Open Source at Zalando. Bonus : Zalando's README Template\n\nJoël Spolsky - (2000) Designing for People Who Have Better Things To Do With Their Lives\n\nJoël Spolsky - (2007) Evidence Based Scheduling\n\nJoël Spolsky - (2001) Human Task Switches Considered Harmful\n\nJoël Spolsky - (2000) Painless Bug Tracking\n\nDavid McRaney - (2010) Fanboyism and Brand Loyalty\n\nDavid McRaney - (2013) Survivorship Bias\n\nRachel Potvin & Josh Levenberg - Why Google stores billions of lines of code in a single repository\n\nMichael Lynch - (2017) How to Do Code Reviews Like a Human (Part One). Bonus : Part Two\n\nMichael Lynch - (2017) The Perils of Outsourcing Your MVP\n\nMaura Thomas - (2017) Your Team’s Time Management Problem Might Be a Focus Problem\n\nTanja Roth - (2017) 7 rules for avoiding documentation pitfalls\n\nGROWS Method - What is GROWS?\n\nCatherine Louis - (2017) 20 questions DevOps hiring managers should be prepared to answer\n\nDr. Travis Bradberry - (2015) How Successful People Overcome Toxic Bosses\n\nDominic Krimmer - (2015) 10 powerful tips on how to support a team-based learning culture\n\nDominic Krimmer - (2017) Why We Kicked Estimation Meetings (And Maybe You Should Too)\n\nOne on One Meeting Template - a template to support you while leading one on one meetings.\n\nSarah Cooper - How to Politely Tell Your Coworkers to Shut the F*ck up\n\nChris Ward - (2017) Distributing Operational Knowledge Across a Team\n\nAmar Singh - (2017) You’re working in the wrong place. (if you’re working in an open office)\n\nChanging minds - 5W1H - A simple set of question framings\n\nChanging minds - Socratic Questioning\n\nCrowdSync - (2018) 7 Tips for Creating a New Process\n\nCarmen Bourlon - Document like a Journalist\n\nKuba Niechcial - (2018) Assume good intent\n\nKuba Niechcial - (2018) Remember the names - it's your job\n\nSteve McConnell - (1998) Dealing With Problem Programmers\n\nSteve McConnell - (1996) How to Defend an Unpopular Schedule\n\nSteve McConnell - (1996) Classic Mistakes\n\n⭐ Gregg Caines - (2014) In Defence of the Office\n\nGregg Caines - (2015) Reclaiming Value From Bugs and Outages: Thoughts on Post-Mortems\n\nMike Cottmeyer - (2008) One Team\n\nZach Holman - (2012) Unsucking Your Team's Development Environment\n\nMarkus Harrer - (2017) Extreme Reduction | how to fit the whole learning subject of one class into a half a dozen tweets. Bonus : see also bulimic learning and Cramming\n\nIwein Fuld - (2010) Practical Styles of Pair Programming\n\nDave Nicolette - (2018) In Favor of Pairing\n\nSami Honkonen - (2011) The Responsibility Process\n\nDan Milstein - [Slides] (2012) How To Run a 5 Whys (With Humans, Not Robots)\n\nDATAGUEULE - 🇫🇷 [FR] [Video] (2018) La démocratie comme patron - #DATAGUEULE 79\n\nZach Holman - (2015) Opt-in Transparency | your employees need context\n\nFagner Martins Brack (fagnerbrack) - (2016) Pair Programming | A technique that if done correctly has the potential for delivering software faster with lower cost\n\nKate Matsudaira - (2016) Bad Software Architecture is a People Problem | When people don't work well together they make bad decisions.\n\nKode Vicious - (2010) Broken Builds | Frequent broken builds could be symptomatic of deeper problems within a development project.\n\nKate Matsudaira - (2016) Delegation as Art | Be someone who makes everyone else better.\n\nGitHub - Great for new contributors | What open source projects can I contribute to?\n\nYan-David Erlich - [Slides] (2017) Six page cheat-sheet for the book Never Split the Difference, by Chris Voss\n\nJerome Kehrli - (2017) Periodic Table of Agile Principles and Practices\n\nFarnam Street - Mental Models: The Best Way to Make Intelligent Decisions (113 Models Explained) | How do you think the most rational people in the world operate their minds? How do they make better decisions?\n\nCulture Codes - Employee Handbox Examples | A collection of company handbooks, employee manuals, and more from real companies.\n\nfolkswhocode/awesome-diversity - A curated list of amazingly awesome articles, websites and resources about diversity in technology.\n\nItamar Turner-Trauring - (2017) Technical skills alone won’t make you productive\n\nGreg Williams - (2017) Diagrams as Software Documentation – When a Picture Says it Best\n\nItamar Turner-Trauring - (2016) Don’t get stuck: 6 ways to get unstuck and code faster\n\nItamar Turner-Trauring - (2016) From 10x programmer to 0.1x programmer: creating more with less\n\nGregg Caines - (2015) We're in the Stone Age of Software Engineering Management\n\nMarcus Blankenship - (2017) Why your programmers just want to code\n\nJohn Cutler - (2018) Yes, But…\n\nJuliet Lara - (2018) You’re doing Stories wrong!\n\nLieven Vaneeckhaute (denshade) - (2017) Solving complex problems using a problem-solution mind map\n\nLieven Vaneeckhaute (denshade) - (2016) Abbreviations are your (false) friend!\n\nJakub Holý - (2016) It Is OK to Require Your Team-mates to Have Particular Domain/Technical Knowledge\n\nFarnam Street - (2017) The Difference Between Amateurs and Professionals\n\nAshton Kemerling - (2014) Managing Is a Craft Too\n\nAshton Kemerling - (2012) The Myth of the Lone Hacker | without the effort of countless other engineers, part and full time, their projects would have never made it off the ground.\n\nMichael Hoffman - (2013) How to be Stuck - Learning to learn to code on the internet\n\nJulia Evans - (2018) Working remotely, 4 years in\n\nRobert Ecker - (2015) Boosting the Quality of Team Decisions | pros and cons of voting, consensus and strong leadership\n\nArlo Belshee - (2012) Is Pair Programming for Me?\n\nChristian Maioli Mackeprang - (2018) How terrible code gets written by perfectly sane people\n\nOded Zilinsky - (2018) How to use ChatOps to boost business engagement across teams | Go cross-silo with chatbots\n\nJames Wade - (2017) What's involved in a code review?\n\nMike Bursell - (2018) Tackling the most important issue in a DevOps transformation | Why culture is the most important issue in a DevOps transformation\n\n⭐ Ian Miell - (2018) Five Things I Did to Change a Team’s Culture\n\nMorgan Housel - (2017) Solving Hard Problems With Simple Ideas\n\nMorgan Housel - (2017) Conflicting Skill Sets\n\nMorgan Housel - (2017) Never Do That Again | about confusion & learning from failure\n\nMorgan Housel - (2017) Skills vs. Behavior\n\nMorgan Housel - (2017) How To Read Financial News\n\nNir Cohen - (2016) Trained Engineers - Overnight Managers (or, The Art Of Not Destroying Your Company)\n\nPaul Graham - (2014) Mean People Fail\n\nChris Mague - (2017) Things you need to know about giving tech talks\n\nAmy M Haddad - (2017) Effective Tips for Working Remotely\n\nNick Babich - (2018) 10 Tips to Develop Better Empathy Maps\n\nSrinivas Rao - (2018) Professionals vs Amateurs\n\nWhen we are amateurs our life was about drama, denial, and distraction — Steven Pressfield\n\nThe XY problem - (2014) is asking about your attempted solution rather than your actual problem. This leads to enormous amounts of wasted time and energy, both on the part of people asking for help, and on the part of those providing help.\n\nEric Steven Raymond, Rick Moen - (2001) How To Ask Questions The Smart Way\n\nJosh Johnson - (2015) DevOps Is Bullshit: Why One Programmer Doesn’t Do It Anymore\n\nHacker News - (2018) Building an Engineering Culture from scratch?\n\nThomas Wedell-Wedellsborg - (2017) Are You Solving the Right Problems? via Jim Leonardo's article titled \"Export to PDF: A Tale in Understanding the Business Need\"\n\nJoshua Kerievsky - (2015) Evolutionary Design | agile's most valuable practice?\n\nTim Ottinger - (2017) Taking Breaks in a Disciplined Way | Take breaks otherwise pairing will drain your energy\n\nwe don't take breaks because we are tired, we take breaks so that we are never tired.\n\nTim Ottinger - (2015) Stop Per-Person Swimlanes in Kanban\n\nPeople will not work together to complete stories if they each have \"their own work\" to do.\n\nTim Ottinger - (2015) Individual Work Assignments: Neither Agile Nor Team\n\nTeresa Amabile and Steven J. Kramer - (2011) The Power of Small Wins | making progress in meaningful work | Managers can help employees see how their work is contributing.\n\nTim Ottinger - (2014) Avoid Rework Through Behavior-Driven Development | eXamples and features specification should be written in a formal way that is easily automated / increasing the signal-to-noise ratio in your communication:\n\nEric Jorgenson - (2015) The Power of Network Effects: Why they make such Valuable Companies, and how to Harness them\n\nEric Jorgenson - (2015) How Not to Hire Like a Clownshow—Evergreen Business Weekly 2: Hiring\n\nKevin J. Delaney - (2016) Something weird happens to companies when they hit 150 people\n\nRobin Dunbar - (2011) Friends to count on | The perfect number for a human social group is 150. The challenge is maintaining a real sense of community\n\nShoshanna Solomon - (2018) As startups grow, founders need to learn to let go\n\nAs your company grows you have to get used to the fact that you cannot be involved in all the aspects of the company. To delegate is hard Delegating, he said, is another tough thing to do. “The key is to hire people who are more intelligent than you, to find people who are super, super smart, ”\n\nJoshua Kerievsky - (2017) The Day We Stopped Sprinting\n\nOur new approach felt more natural and we became more responsive to our customer's needs. We spent less time trying to predict how much work we could get done in a rigid time box, and instead allowed ourselves to work on items that ranged from a few hours to a few days.\n\nBen Northrop - (2018) The Reality of Reuse | we're hard-wired to want to make decisions quickly and we take too many shortcuts\n\nNaresh Jain - (2011) Impact of Continuous Integration on Team Culture\n\n⭐ Bridget Kromhout - (2018) Containers Will Not Fix Your Broken Culture (and Other Hard Truths) | Complex socio-technical systems are hard;\n\nDunbar's number - is a suggested cognitive limit to the number of people with whom one can maintain stable social relationships—relationships in which an individual knows who each person is and how each person relates to every other person.\n\nSimon Wardley - (2015) On Pioneers, Settlers, Town Planners and Theft.\n\nXiao Ma - (2015) Code • Life | We are already doing these things to our code, why not do them to ourselves?\n\nMatthieu Lesne aka coreight - 🇫🇷 [FR] (2016) Les bonnes habitudes de développeurs à appliquer dans sa vie quotidienne\n\nJeff Atwood - (2004) We Make Shitty Software.. With Bugs! | Software is a process, it's never finished, it's always evolving.\n\nFred Hébert - (2018) The Hitchhiker's Guide to the Unexpected | about clean architecture, and making things easier\n\nIsaac Asimov - (1989) The Relativity of Wrong\n\nJo Meenen - The Art Of Non-Conformity Book Summary\n\nJason Palmer - (2018) You don’t need standup\n\nDerek Sivers - (2016) I’m a very slow thinker\n\nDerek Sivers - (2010) [Video] First Follower: Leadership Lessons from a Dancing Guy | a Lesson of leadership\n\nDerek Sivers - [Video] Obvious to you. Amazing to others.\n\nChesterton's fence - the principle that reforms should not be made until the reasoning behind the existing state of affairs is understood.\n\nSatyandra Vadavalli - (2012) Paralysis by Analysis\n\nSteve Losh - (2013) Teach, Don't Tell | about documentation\n\nSacha Labourey, Nigel Willie - (2018) DevOps Technician Training: Think Requirements, Not Solutions\n\nDustin Barnes - (2017) Increasing Software Transparency with Lightweight Architectural Decision Records\n\nBeau Lyddon - (2018) Stop Wasting Your Beer Money | Why are engineers so bad at paying other engineers for their work?\n\nLibby Sander - (2018) Open offices make people talk less and email more\n\nJan Mewes - (2018) How to pick up a new technology in minimal time?\n\nAlicia Liu - (2018) Go Slow to Go Fast — Part 1: You, Part 2: Team, Part 3: World\n\nTim Denning - (2018) Why You’re Not Happy With Your Career\n\nRonald Jeffries - (2018) Developers Should Abandon Agile\n\nAlberto Brandolini - (2013) Introducing Event Storming | EventStorming is a workshop format for quickly exploring complex business domains.\n\nJeppe Cramon - (2015) [Slides] Event storming\n\nSean Kane - (2018) 6 creative ways to solve problems with Linux containers and Docker\n\nJesse Weaver - (2015) A Simple Framework for Designing Choices | No design is neutral\n\nLolly Daskal - (2017) Dumb Rules That Make Your Best People Want to Quit | TL;DR — Trust employees like the adults they are\n\nGordon Brander - Patterns : \"This is my bag of tricks — loose notes, design patterns, rules-of-thumb, methods of enquiry, tools, cheatsheets, gimmicks, leverage points, descriptions of systems, key questions, risks, and unknowns.\"\n\nTed Dziuba - (2011) Who Needs Process?\n\nGet rid of your prioritized list of tasks. Stop having your daily stand-ups. No more status report e-mails. Just stop doing that stuff, and get rid of anyone who can't cope. Nothing terrible will happen.\n\nTed Dziuba - (2011) Devops Is a Poorly Executed Scam\n\nYou need to change the culture the hard way, or replace people as necessary until the culture works.\n\nHugo Sharman-Firth - (2018) The dangers of best practices | Best is the enemy of better\n\nMat Lawrence - (2017) How to facilitate successful offsite meetings: it’s all about the team\n\nSarah Goff-Dupont - (2018) Running effective meetings: a guide for humans\n\nSarah Goff-Dupont - (2018) 6 types of meetings that are actually worthwhile and meetings you can do without\n\nSarah Goff-Dupont - (2018) Avoid these 5 mistakes for an amazing kick-off meeting\n\nBernie Ferguson - (2017) How to manage meetings like an expert facilitator\n\nmatiassingers/awesome-readme - A curated list of awesome READMEs\n\nAkash Nimare - (2016) A Beginners Guide to writing a Kickass README ✍\n\nJo Meenen - Switch Book Summary | How to Change Things When Change Is Hard | good tips here\n\nRich Archbold - (2018) Run less software\n\nChoose standard technology 2. Outsource Undifferentiated Heavy Lifting 3. Create enduring competitive advantage\n\nAytekin Tank - (2018) The power of culture: how to hire and attract amazing people\n\nReed Hastings - [Slides] (2009) Netflix culture. Bonus : new version here\n\nThe No Asshole Rule\n\nAfter encountering the person, do people feel oppressed, humiliated or otherwise worse about themselves?\n\nDoes the person target people who are less powerful than him/her?\n\nBrendan D. Gregg - (2017) Brilliant Jerks in Engineering\n\nThe Life Coach School - [Podcast] Ep #212: Simple Solutions | About the importance of defining the problem and finding its root cause, + other tips\n\nCatherine Louis - (2018) 8 tips for better agile retrospective meetings\n\nRetromap - Inspiration & plans for (agile) retrospectives : Planning your next agile retrospective? Start with a random plan, change it to fit the team's situation, print it and share the URL. Or browse around for new ideas!\n\nJohn Allspaw - (2017) Taking Human Performance Seriously\n\nA proper treatment of the human element requires the human to be the focus\n\nwikiHow - (2018) How to Make a QR Code to Share Your WiFi Password.\n\nVadim Kravcenko - (2018) Growing your interns | eventually you will become Senior Developers and will need to nurture your own interns.\n\nGreg Kamradt - (2018) How awesome people have taught me to make things happen\n\nVadim Kravcenko - (2018) Dealing with complex projects\n\nIf you fail - you learn, if you succeed – even better. And never forget the importance of communication.\n\nDaniel Lebrero - (2019) Architecture decisions: the belligerent contrarian and the rule of three\n\nLisaDziuba/Awesome-Design-Tools - The best design tools for everything\n\nMichelle Venetucci Harvey - (2017) A research roundup to show that your office layout is toxic (and some tips for making it better)\n\nDavid R. MacIver - (2019) How to do hard things\n\nSimon Wardley - (2015) An introduction to Wardley 'Value Chain' Mapping. Bonus : See also Wardley map\n\nBryan Cantrill - (2018) Assessing software engineering candidates\n\nRaph Lee - (2019) Understand, Design, Build: A Framework for Problem-Solving\n\nGuesstimate - free models and tools for modeling things that aren't certain. You can forecast your earnings from a new venture, predict the amount of time completing a big project will take, or experiment with scientific theories. People have used it to optimize video games, understand lottery payoffs, and estimate the costs of childcare.\n\nMarie Prokopets - (2019) 11 Best Practices for Working Remotely\n\nJulia Evans - (2019) Get your work recognized: write a brag document\n\nFarnam Street - (2018) The Surprising Power of The Long Game\n\nFarnam Street - (2018) The Decision Matrix: How to Prioritize What Matters\n\nRemote Mob Programming - A summary of the essentials of successful Remote Mob Programming\n\nJason Fried - (2016) Status meetings are the scourge.\n\nJoe Casabona - (2019) Eliminating Slack as a Distraction to Work Better\n\nGergely Orosz - (2019) Talk First, Code Later\n\nthe \"talk first, code later\" approach is an un-intuitive tool that speeds development up and leads to better communication between engineers and teams. Everyone would have saved so much time, if only we communicated first and wrote code only after.\n\nAndy Johns - (2019) Why Standups are Useless and How to Run Great Product Team Meetings\n\nWorld Clock Meeting Planner - Need to make a call to someone far away or arrange a web or video conference across different time zones? Find the best time across time zones with this Meeting Planner.\n\nMyMeetingTime - Find the best time to talk to people located in other time zones\n\nMike Crittenden - (2021) “Don’t bring problems, bring solutions” is bull crap\n\nCantlin Ashrowan - (2020) Coherent and complex\n\nCollaboration, it turns out, gets harder in proportion to two things: the level of coherence you demand from the output, and the complexity of the processes that create it.\n\nCollaboration that creates incoherence is easy. You all just do whatever you want. Equally, collaboration on things that are not complex is easy. You can all see whether the log has been chopped or not, there is limited room for debate.\n\nOn the other hand, lets say that instead we first come up with a clear overarching plan for what we’re doing. This makes it much more likely the outcome will be coherent. But the price we pay is having to handle the complexity of the entire challenge all at once.\n\nAsync Manifesto - (2014) Manifesto for Async Software Development | Principles of Async Software Development\n\nBrandolini's law - also known as the bullshit asymmetry principle, is an internet adage which emphasizes the difficulty of debunking bullshit: \"The amount of energy needed to refute bullshit is an order of magnitude larger than to produce it.\"\n\nAllen Holub - (2018) The improvement board\n\nImprovement is something we should do all the time, not once every two weeks in a retrospective. When a problem emerges, don't wait. Fix it. Do everything you can to instill a culture of continuous improvement throughout the organization. An improvements board is one way to do that in the small.\n\nJason Fried - (2012) Give it five minutes\n\nThe faster you react, the less you think. Not always, but often.\n\nIt’s fine to disagree, it’s fine to push back, it’s great to have strong opinions and beliefs, but give my ideas some time to set in before you’re sure you want to argue against them.\n\nThere’s also a difference between asking questions and pushing back. Pushing back means you already think you know. Asking questions means you want to know. Ask more questions.\n\nSo next time you hear something, or someone, talk about an idea, pitch an idea, or suggest an idea, give it five minutes. Think about it a little bit before pushing back, before saying it’s too hard or it’s too much work. Those things may be true, but there may be another truth in there too: It may be worth it.\n\nSeth Godin - (2021) The easy way down\n\nMike Crittenden - (2021) Beware of exception debt\n\nMike Crittenden - (2021) Be a better coworker\n\nOrganization. Don't lose crap, ever. Passwords, dates, files, emails, notes, links, whatever.\n\nResponsiveness. Be easy to reach and quick to respond (but protect your focused deep work time).\n\nReliability. If you said you'll do it, then freaking do it, no matter how tiny it is. People notice.\n\nWarmth. Maybe you can't be funny or charming, but you can be warm.\n\nMike Crittenden - (2021) The art of booking a meeting just to force you to do a thing\n\nGandalf Hudlow - (2020) Developers can't fix bad management\n\nMike Crittenden - (2021) Don’t mistake the lack of your pet solution as the problem itself\n\nEd Zitron - (2021) The Work-From-Home Future Is Destroying Bosses' Brains | a critique of managers and business owners\n\nJustin Garrison - (2021) The Document Culture of Amazon\n\nMike Crittenden - (2021) Resistance increases exponentially with the size of a change.\n\nMike Crittenden - (2021) You have to standardize before you can standardize\n\nFirst Round Review - (2019) Empathy-Driven Development: How Engineers Can Tap into This Critical Skill. See also Empathy-Driven Development\n\n“You can’t say the word ‘empathy’ at a software company. No one will take you seriously.”\n\nYossi Kreinin aka wetware - (2016) Evil tip: avoid \"easy\" things\n\nTo a very large extent, your productivity is a result of what you choose to work on. Keep things perceived as easy out of that list. When you can't, postponing an \"easy\" thing can make it both \"harder\" and smaller.\n\nYossi Kreinin aka wetware - (2013) 10x more selective\n\nSo I believe, having authored a lot of code that went down the toilet, that you don't get productive by working as much as by not working – not on stuff that is likely to get thrown away.\n\nClive Thompson - (2021) Hundreds of Ways to Get S#!+ Done—and We Still Don’t | You want to be productive. Software wants to help. But even with a glut of tools claiming to make us all into taskmasters, we almost never master our tasks. | to-do apps failed us\n\nDr. Travis Bradberry - (2015) How Successful People Overcome Toxic Bosses\n\nChantal Gautier - (2015) Why do teams fail?\n\nMatthieu Lesne aka coreight - 🇫🇷 [FR] (2015) 5 étapes pour trouver des solutions créatives à ses problèmes\n\nCA Technologies - [Slides] (2015) The Five Hidden Dangers of IT Complexity\n\nPoor visibility\n\nDifficult technology\n\nNarrow focus\n\nInconsistent process\n\nPoor morale\n\nMichael Lopp - (2014) The Old Guard\n\nPrioritize - Built by a PM for PMs. Use this tool to create, visualize, and prioritize tasks on a drag and drop interface with different priority boards.\n\nStéphane Deschamps - 🇫🇷 [FR] (2022) Les handicapés vous disent merde | Inclusion, piège à cons.\n\nKey Values - Find engineering teams that share your values. Select your top values and find teams you'll click with.\n\nKey Values - Culture Queries - The perfect questions to ask in your job interview. Want to stand out from other candidates and find your dream job?\n\nAndy Cook - (2018) Culture Codes: All the Best Culture Decks and How to Create One\n\nJakob Greenfeld - (2022) The simple system I’m using to stay in touch with hundreds of people\n\nMike Crittenden - (2021) Lose touch with people\n\nMike Crittenden - (2021) I schedule my friendships like I schedule my meetings\n\nDamien Leloup - (2019) 🇫🇷 [FR] Festival international des jeux de Cannes : le grand essor des jeux de société coopératifs | Les jeux comme « The Mind » ou « Spirit Island », dans lesquels tous les participants gagnent ou perdent ensemble, se sont multipliés ces dernières années.\n\nUntools - Tools for better thinking | Collection of thinking tools and frameworks to help you solve problems, make decisions and understand systems.\n\nBohm Dialogue - (also known as Bohmian Dialogue or \"Dialogue in the Spirit of David Bohm\") is a freely flowing group conversation in which participants attempt to reach a common understanding, experiencing everyone's point of view fully, equally and nonjudgementally.[1] This can lead to new and deeper understanding. The purpose is to solve the communication crises that face society,[2] and indeed the whole of human nature and consciousness.\n\nEric Jorgenson - (2017) Why Growing Past 20 Employees is so Damn Hard (and what you can do about it)\n\nEric Jorgenson - (2015) Secrets to Perfecting Organizational Communication—Evergreen Business Weekly 3: Internal Communication | If the members of the team cannot communicate, isolation limits their potential.\n\nOvercommunicate in all ways, all the time. There is no such thing as too much communication. When you think you’ve communicated something too much, you’re probably just beginning to get through.\n\nEser Gozcu - (2018) DevOps and Behind the Scenes | BEST EFFORT != BEST PRACTICE | DevOps starts with a real communication. Moving towards a common goal requires social engineering\n\nNonviolent Communication - an approach to nonviolent living based on the idea that all human beings have the capacity for compassion and only resort to violence or behavior that harms themselves and others when they do not recognize more effective strategies for meeting needs\n\nAlex Naoumidis - (2018) Elon Musk reveals his productivity rules in a letter he sent to Tesla employees\n\nGet of all large meetings, unless you’re certain they are providing value to the whole audience, in which case keep them very short.\n\nAlso get rid of frequent meetings\n\nWalk out of a meeting or drop off a call as soon as it is obvious you aren’t adding value.\n\nDon’t use acronyms or nonsense words for objects\n\nCommunication should travel via the shortest path necessary to get the job done\n\nA major source of issues is poor communication between depts. The way to solve this is allow free flow of information between all levels\n\nIf following a “company rule” is obviously ridiculous in a particular situation, such that it would make for a great Dilbert cartoon, then the rule should change.\n\nJon Cairns - Communication: how to be a better software developer\n\nSoftware Engineering Tips - (2010) Communication Tips\n\nBen Balter - (2014) 15 rules for communicating at GitHub\n\nJason Davis - (2015) Effective Communication in a Remote Engineering Setting\n\nLenny Zeltser - Tips for Troubleshooting Human Communications | Human Communications Cheat Sheet\n\nVadim Kravcenko - (2018) Dealing with complex projects\n\nIf you fail - you learn, if you succeed – even better. And never forget the importance of communication.\n\nCurse of knowledge - a cognitive bias that occurs when someone assumes that the others have the same background to understand.\n\nYegor Bugayenko - (2018) Speaker Cheat Sheet\n\nChris Mague - (2017) Things you need to know about giving tech talks\n\nJulia Evans - (2019) Get your work recognized: write a brag document\n\nJoe Casabona - (2019) Eliminating Slack as a Distraction to Work Better\n\nGergely Orosz - (2019) Talk First, Code Later\n\nthe \"talk first, code later\" approach is an un-intuitive tool that speeds development up and leads to better communication between engineers and teams. Everyone would have saved so much time, if only we communicated first and wrote code only after.\n\nAndy Johns - (2019) Why Standups are Useless and How to Run Great Product Team Meetings\n\nKo"
    }
}