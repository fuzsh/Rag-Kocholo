{
    "id": "dbpedia_45_2",
    "rank": 9,
    "data": {
        "url": "https://www.reddit.com/r/kde/comments/176jzrc/wayland_is_just_bad_and_needs_to_be_scrapped_and/",
        "read_more_link": "",
        "language": "en",
        "title": "Dive into anything",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://www.redditstatic.com/shreddit/assets/favicon/64x64.png",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Devs found X11 old and difficult to work with? It no longer reflects modern standards? Fine. Make a new window system protocol that is designed to be easily extensible, interchangeable with any DE out of the box (without having to write your own implementation of everything), \"backwards compatible\" with old X11 protocols if possible. None of this has wayland done, and will probably end up more hacked together than X11 ever was. In the end, the program is for the user using it, not for your own glorification or \"philosophy\" that you want to push at the detriment of everyone else. Or should I say, there has to be one underlying \"philosophy\" - it has to be usable for the majority of users on the platform (in this case, linux).\n\nThe decision to make Wayland non-interchangeable where every DE has to write their own implementation for everything, coupled with the arrogance of the devs, with the constant fighting with hardware/graphic vendors over every little detail rather than embracing existing hardware solutions (like Nvidia) makes Wayland an absolute travesty of a protocol. (yes, Nvidia is partially at fault too, but we cannot ignore the sheer obstinance of wayland devs to accept Nvidia merge requests for Wayland, thus holding up progress in this direction).\n\nEvery DE has to write their own implementation of everything anyway while the Wayland devs spend their time \"debating\" and providing bare bones APIs rather than a working solution and relying on DE's to do the majority of the work for them. To write implementations of Wayland protocols within a DE requires talented devs with a good understanding of the underlying technologies. So this means that current Wayland devs are not the only ones with \"exclusive\" knowledge of the needed technologies to write a window system protocol. At this point, it may be easier just to assign devs working for KDE/GNOME/XFCE/others to work on the window display manager so they will be able to work together to come up with a modern solution that works well for every DE out of the box. In addition, this new team could get input from every hardware vendor for features and ways to help it work better with the corresponding hardware - rather than trying to coerce and arm twist vendors to change their drivers, leaving half the population on the \"old and outdated\" software solution.\n\nJust because these are volunteer devs working during their spare time (somewhat questionable assertion but lets assume its true), there are multiple examples of successful volunteer projects like KDE, blender and krita. If a similar approach was taken, with each DE assigning a few devs to work together to work on a window system protocol with a clearly defined set of principles and roadmap for development, I am certain they can do a better job and faster than the mess that is Wayland that is taking 15 years to make (and probably another 4 years to complete if not more).\n\nLook at KDE, it has been able to effectively project manage their devs to crush bugs, implement many new features (including developing support for many Wayland protocols from scratch). Blender devs have been able to make a program that is almost an industry standard, while Krita devs have made an excellent painting app that has replaced photoshop and other solutions.\n\nPoor project management, even with volunteer devs is not an excuse, as there are many examples of success projects as I mentioned above.\n\nMy point is this - lets as a collective agree to scrap Wayland as a failed project and ask the developers (and help them financially as well) to work together to create something new and better than Wayland?"
    }
}