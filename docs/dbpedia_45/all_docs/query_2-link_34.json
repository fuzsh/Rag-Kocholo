{
    "id": "dbpedia_45_2",
    "rank": 34,
    "data": {
        "url": "https://stackoverflow.com/questions/54951027/how-to-share-the-wayland-display-connection-between-unrelated-code-parts",
        "read_more_link": "",
        "language": "en",
        "title": "How to share the wayland display connection between unrelated code parts",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://www.gravatar.com/avatar/160d117143a58baa428415e4aa55ae95?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/0f4feb2f85e72d6af14d274ecb82f590?s=64&d=identicon&r=PG",
            "https://stackoverflow.com/posts/54951027/ivc/606f?prg=a2cd37a3-4288-4092-9a46-2725246e988c",
            "https://stackoverflow.com/js-false.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2019-03-01T19:20:15",
        "summary": "",
        "meta_description": "I am currently writing a library that can be used by a wayland client software. The library is intended to be mostly independent of the client toolkit (currently only Qt, but other wayland-enabled",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/54951027/how-to-share-the-wayland-display-connection-between-unrelated-code-parts",
        "text": "I am currently writing a library that can be used by a wayland client software. The library is intended to be mostly independent of the client toolkit (currently only Qt, but other wayland-enabled toolkits should be able to use it as well). It requires only a wl_display pointer passed to the initialization routine, which is retrieved from the GUI toolkit. After the initialization is done, the library should be able to work without contact to the toolkit to make it cross-toolkit compatible.\n\nThe problem arises when my library requires a couple of global object proxies (ie. wl_output). The library uses a custom wl_registry to bind custom proxies to required global objects. However, from the server's perspective all proxies to these objects are equivalent. When events that contain object proxies are sent by the server, they may contain either toolkit's or library's proxy reference. This leads to problems because there is no easy way to differentiate these. When the toolkit receives such events, it blindly assumes that the user data of the proxy belongs to the toolkit and uses it, even if the proxy it received belongs to my library.\n\nIs there any way to reconcile such unrelated code, or is such use beyond the scope of the wayland library/protocol and I should re-design my solution?"
    }
}