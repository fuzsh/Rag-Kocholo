{
    "id": "dbpedia_45_2",
    "rank": 20,
    "data": {
        "url": "https://pointieststick.com/2023/12/26/does-wayland-really-break-everything/",
        "read_more_link": "",
        "language": "en",
        "title": "Does Wayland really break everything?",
        "top_image": "https://s0.wp.com/i/blank.jpg",
        "meta_img": "https://s0.wp.com/i/blank.jpg",
        "images": [
            "https://1.gravatar.com/avatar/a27e4933d28aaef98157b6da384cf5463f5472b692ebf48e8c45790a62028c58?s=80&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fmu.gif&r=G",
            "https://1.gravatar.com/avatar/7d7833d838fbcc65311e73b345990f2558752aa6e71cb0be775c9428454e598f?s=48&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fmu.gif&r=G",
            "https://2.gravatar.com/avatar/22a8943df57bcb8a357ee91d9cb433e0ec7933ef911c1f80ab277af67cd38a51?s=48&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fmu.gif&r=G",
            "https://1.gravatar.com/avatar/a27e4933d28aaef98157b6da384cf5463f5472b692ebf48e8c45790a62028c58?s=48&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fmu.gif&r=G",
            "https://2.gravatar.com/avatar/22a8943df57bcb8a357ee91d9cb433e0ec7933ef911c1f80ab277af67cd38a51?s=48&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fmu.gif&r=G",
            "https://0.gravatar.com/avatar/9b017aa78d25ec1f4d7596ff868a7ef19c4aa3c53acccf6267a86eb5ed548dc2?s=48&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fmu.gif&r=G",
            "https://2.gravatar.com/avatar/24e59e300754cd42eff04d9776c85d65faa5cdd3f60083a6c4f164042449b6ea?s=48&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fmu.gif&r=G",
            "https://0.gravatar.com/avatar/f4f1c809d4bc2ba68cac3fe8027c14106ea888e0828fd1211289e13fadf5cbc3?s=48&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fmu.gif&r=G",
            "https://liberapay.com/assets/widgets/donate.svg",
            "https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif",
            "https://i0.wp.com/pointieststick.com/wp-content/uploads/2024/08/image-5.png?resize=40%2C40&ssl=1",
            "https://i0.wp.com/pointieststick.com/wp-content/uploads/2024/07/image-2.png?resize=40%2C40&ssl=1",
            "https://i0.wp.com/pointieststick.com/wp-content/uploads/2024/06/screenshot_20240614_103255.jpeg?resize=40%2C40&ssl=1",
            "https://1.gravatar.com/avatar/a27e4933d28aaef98157b6da384cf5463f5472b692ebf48e8c45790a62028c58?s=40&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fmu.gif&r=G",
            "https://i0.wp.com/pointieststick.com/wp-content/uploads/2023/06/20230613_115659.jpg?resize=40%2C40&ssl=1",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://s2.wp.com/i/logo/wpcom-gray-white.png",
            "https://pixel.wp.com/b.gif?v=noscript"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2023-12-26T00:00:00",
        "summary": "",
        "meta_description": "I've written some other posts on Wayland recently, and it's time for another one! Feel free to skip it it you aren't interested in a discussion of Wayland and platforms. Many may be familiar with the now semi-famous \"Wayland breaks everything!\" document written by Probonopd--one of the core AppImage developers--panning Wayland because it isn't a‚Ä¶",
        "meta_lang": "en",
        "meta_favicon": "https://s1.wp.com/i/favicon.ico",
        "meta_site_name": "Adventures in Linux and KDE",
        "canonical_link": "https://pointieststick.com/2023/12/26/does-wayland-really-break-everything/",
        "text": "I‚Äôve written some other posts on Wayland recently, and it‚Äôs time for another one! Feel free to skip it it you aren‚Äôt interested in a discussion of Wayland and platforms.\n\nMany may be familiar with the now semi-famous ‚ÄúWayland breaks everything!‚Äù document written by Probonopd‚Äìone of the core AppImage developers‚Äìpanning Wayland because it isn‚Äôt a drop-in replacement for X11. And he‚Äôs in the news again for a new Github repo with the aspiration of creating protocols for functionality not currently available to Wayland-native apps that are intentionally missing in Wayland‚Äôs standardized protocols‚Äìwhich won‚Äôt work because lacking standardization means they won‚Äôt become a part of the platform that app developers can reliably target.\n\nThere‚Äôs a bit of chuckling and jeering over this in developer circles, but to regular people, the whole ‚ÄúWayland breaks everything‚Äù charge might ring true, or at least seem like it contains a kernel of truth. Because from a certain perspective, he‚Äôs right: Wayland really does break everything that directly uses X11 functionality!\n\nIt‚Äôs just that this is the wrong perspective.\n\nLook, if I said, ‚ÄúLinux breaks Photoshop; you should keep using Windows!‚Äù I know how you‚Äôd respond, right? You‚Äôd say ‚ÄúWait a minute, the problem is that Photoshop doesn‚Äôt support Linux!‚Äù And you‚Äôd be right. It‚Äôs a subtle but important difference that puts the responsibility in the right place. Because there‚Äôs nothing Linux can do to ‚Äòun-break‚Äô Photoshop; Adobe needs to port their software, and they simply haven‚Äôt done so yet.\n\nAnd it‚Äôs much the same with X11 and Wayland. Wayland wasn‚Äôt designed to be a drop-in replacement for X11 any more than Linux was designed to replace Windows. Expectations need to be adjusted to reflect the fact that some changes might be required when transitioning from one to the other.\n\nNow, even though Wayland wasn‚Äôt designed to be a drop-in replacement for X11, it was certainly intended to eventually replace it. But this implies that it was intended from the start to do less than X11, and and that would be correct.\n\nX11 was a bad platform\n\nIn ye olden days, X11 was a whole development platform. Your app that targeted X11 could use X11 to draw its UI with a built-in widget toolkit; print documents with an included print server; record the screen; set global keyboard shortcuts; and so on. This is all way before my time, but I get the sense that X11 was either originally envisioned to be a development platform for app developers, or else quickly morphed into one during its early days.\n\nIt didn‚Äôt work out. The built-in UI toolkit looked horrendous, even for the standards of the time. Apps that requested the same resources could stomp on one another and break each others‚Äô functionality in ways that were impossible to fix short of uninstalling one of the apps. Features like printing withered because a window manager was really the wrong place to put that functionality and its later maintainers lacked the needed expertise or interest to maintain it. And so on.\n\nUI toolkits like Qt and GTK quickly rose up to take over most of this sort of app platform middleware in a way that worked much better for users and was easier to target for app developers. We‚Äôre talking about the mid 90s here; it was a long time ago.\n\n(Of course this is slightly unfair; lacking a print server isn‚Äôt what people complain about being missing from Wayland. It‚Äôs more like things like apps able to set custom window icons and move their own windows. These are the really hard cases; they aren‚Äôt present on Wayland because they were commonly abused by apps on X11 to cause unsolvable problems. It‚Äôs not an easy thing and there are trade-offs involved in bringing them to Wayland.)\n\nLinux isn‚Äôt a platform\n\nAnyway, the rise of UI toolkits necessarily fragmented the app landscape. Instead of developing for one target (X11), a FOSS app developer now developed for Qt, or GTK, or whatever, so we ended up with a lot of ‚ÄúKDE apps‚Äù and ‚ÄúGNOME apps.‚Äù Yes, these apps still probably worked elsewhere, but it was obvious what platform and toolkit they been developed to work best in. They might look and feel weird when run elsewhere, or certain features might not work well or at all.\n\nAnd that‚Äôs where we remain today. Absolutely nobody writes an ‚ÄúX11 app‚Äù; their app may use functionality in X11 for something that there‚Äôs no better way to do, but the app will use Qt, GTK, KDE Frameworks, or whatever for 99.9% of its functionality.\n\nIt brings us to a potentially thorny topic: Linux isn‚Äôt really a platform either, any more than X11 succeeded at being one. Almost nobody writes a ‚ÄúLinux app‚Äù; making raw Linux kernel system calls is generally unnecessary because whatever UI toolkit you‚Äôre using wraps this functionality and abstracts it to all the different platforms that the toolkit supports. The toolkit ensures that it just happens to work on Linux too.\n\nThe real platform\n\nSo is all hope lost for cross-desktop interoperability? No. In fact prospects are better than they have been in a long time! Because today there is in fact an emerging platform; something that abstracts away even the app toolkits if you want to roll that way. I‚Äôm talking about Portals, PipeWire, and Wayland protocols.\n\nProbonopd pans these as bolt-ons that you shouldn‚Äôt have to have running on your system, but I think this isn‚Äôt realistic. The model of the monolithic window server that offers all functionality failed decades ago. In its place, we have libraries and APIs that every FOSS developers can reasonably expect a modern system to be running.\n\nThe portal system offers a standardized way to present platform-native open or save dialogs, send notifications, open documents in other apps, print documents, take screenshots, record the screen, handle drag-and-drop, see if the user‚Äôs active theme is light or dark, and much more. The portal system uses PipeWire under the hood for a lot of this stuff, so you can expect that to be installed as well. And you can also expect most Wayland compositors‚Äìmost notably the two most important ones KWin and Mutter‚Äìto support pretty much all publicly standardized Wayland protocols.\n\nI think this is the platform: Portals-and-Wayland-and-PipeWire. Clearly we need to come up with a better name. üôÇ Maybe PW2. But if your app targets these, it will run on pretty much every modern Linux system. And the big two FOSS toolkits of Qt and GTK both have cutting-edge support for all of it. So use whatever UI toolkit you like.\n\nWhy now?\n\nWe‚Äôre hearing more about this recently because the transition is picking up steam. X11‚Äôs maintainers have announced an end to its maintenance. Plasma is going Wayland by default, following GNOME. Fedora is dropping X11 support entirely. We‚Äôre in the part of the transition where people who haven‚Äôt thought about it at all are starting to do so and realizing that 100% of the pieces needed for their specific use cases aren‚Äôt in place yet. This is good! Them being heard is how stuff happens. I wish it had happened sooner, but we are where we are, and there are a lot of recent proposals and work around things like remote control, color management, drawing tablet support, and window positioning. There will probably be an awkward period before all of these pieces are in place for all of the people. And for the those who really do suffer from showstopping omissions, I say keep using X11 until it‚Äôs resolved. No one‚Äôs stopping you (well, except for Fedora, so if this is you, don‚Äôt use Fedora. üôÇ The cutting edge should be fun! If it isn‚Äôt, try something else).\n\nWrapping up\n\nIn this context, ‚Äúbreaking everything‚Äù is another perhaps less accurate way of saying ‚Äúnot everything is fully ported yet‚Äù. This porting is necessary because Wayland is designed to target a future that doesn‚Äôt include 100% drop-in compatibility with everything we did in the past, because it turns out that a lot of those things don‚Äôt make sense anymore. For the ones that do, a compatibility layer (XWayland) is already provided, and anything needing deeper system integration generally has a path forward (Portals and Wayland protocols and PipeWire) or is being actively worked on. It‚Äôs all happening!"
    }
}