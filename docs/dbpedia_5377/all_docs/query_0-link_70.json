{
    "id": "dbpedia_5377_0",
    "rank": 70,
    "data": {
        "url": "https://www.librarything.com/topic/341561",
        "read_more_link": "",
        "language": "en",
        "title": "Who Really Wrote the Works of the British Renaissance? thread 2",
        "top_image": "https://www.librarything.com/favicon_lt_32.ico",
        "meta_img": "https://www.librarything.com/favicon_lt_32.ico",
        "images": [
            "https://image.librarything.com/pics/lt1wordmark_150w.png",
            "https://image.librarything.com/pics/ltlogo_square_fff_trans.png",
            "https://image.librarything.com/pics/sbar_4.png",
            "https://i.imgur.com/cABhg0z.jpg2",
            "https://i.imgur.com/PqJrbo3.jpg",
            "https://i.imgur.com/tJPSOZx.jpg",
            "https://i.imgur.com/uGGDJtZ.jpg",
            "https://keeline.com/pics/1908-07-23-Lincoln(NE)DailyStar-p04-Methods_of_New_York_Ghost_Writer.png",
            "https://i.imgur.com/7dnqVbe.jpg",
            "https://i.imgur.com/nmlSuH1.jpg",
            "https://i.imgur.com/OWJJ6a3.jpg",
            "https://i.imgur.com/4161Hub.jpg",
            "https://i.imgur.com/wVtBcLR.jpg",
            "https://i.imgur.com/pVoPdH2.jpg",
            "https://i.imgur.com/MmGD5XL.jpg",
            "https://i.imgur.com/3ugzHra.jpg",
            "https://i.imgur.com/RpCH0Am.jpg",
            "https://i.imgur.com/kqo4XVH.jpg",
            "https://i.imgur.com/lbdH0s2.jpg",
            "https://i.imgur.com/Ws8LBEw.jpg",
            "https://i.imgur.com/XKYhJ9Y.jpg",
            "https://i.imgur.com/1mBmJxX.jpg",
            "https://i.imgur.com/Iqhpf0w.jpg",
            "https://keeline.com/pics/TS17-CLAWS5-vertical-2_sample_sentences.png",
            "https://keeline.com/pics/TS17-CLAWS5-counts.png",
            "https://i.imgur.com/sft3YHj.jpg",
            "https://i.imgur.com/uCVwCig.jpg",
            "https://i.imgur.com/MlPGr66.jpg",
            "https://i.imgur.com/8YwwkOD.jpg",
            "https://i.imgur.com/RoRkKNn.jpg",
            "https://i.imgur.com/MXmzeHG.jpg",
            "https://i.imgur.com/IWvX2mz.jpg",
            "https://imgs.xkcd.com/comics/compiling.png",
            "https://pics.cdn.librarything.com//picsizes/9d/cd/9dcd0cbf5c86651637568387a6742674357414a_v5.jpg",
            "https://i.imgur.com/P8gGCVT.jpeg",
            "https://keeline.com/pics/THE_in_TS.png",
            "https://keeline.com/pics/Top_7_in_TS.png",
            "https://keeline.com/pics/TS-list.png",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://pics.cdn.librarything.com//picsizes/85/fa/85fad190b8428506368306631414377424c4145_v5.jpg",
            "https://pics.cdn.librarything.com//picsizes/5d/d8/5dd840a2618cd786368676631414377424c4145_v5.jpg",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://keeline.com/pics/Whistler-Library.jpg",
            "https://imgs.xkcd.com/comics/rounding.png",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://image.librarything.com/pics/msgflag.gif",
            "https://pics.cdn.librarything.com//picsizes/57/63/5763acb5390a0eb636f59564177424741414141_v5.jpg",
            "https://image.librarything.com/pics/loading9.gif",
            "https://image.librarything.com/pics/loading9.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "librarything",
            "library",
            "thing",
            "catalog your books",
            "catalogue your books",
            "book cataloging",
            "library",
            "free book catalog",
            "catalogue"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "LibraryThing catalogs yours books online, easily, quickly and for free.",
        "meta_lang": "",
        "meta_favicon": "/favicon_lt_32.ico",
        "meta_site_name": "LibraryThing.com",
        "canonical_link": "https://www.librarything.com",
        "text": ">139 faktorovich: Re: dictionary definitions of \"normalization\".\n\nYou can't have looked very hard or very carefully. Possibly just enough to make yourself feel in the right and vindicated and whatnot.\n\nFrom Collins Cobuild English Dictionary:\n\nNormalize\n\nin British English\n\n{...}\n\n2. to bring into conformity with a standard\n\n{...}\n\nin American English\n\n1. to make normal; specif.,\n\n{...}\n\nb. to bring into conformity with a standard, pattern, model, etc.\n\nDerived forms: normalization: noun.\n\nFrom Merriam-Webster:\n\nNormalize\n\n2. mathematics: to make (something) normal (as by a transformation of variables)\n\nThe page at the link behind normal has this as the relevant definition:\n\n3 a: approximating the statistical average or norm\n\nOr even #6:\n\n6: of a subgroup: having the property that every coset produced by operating on the left by a given element is equal to the coset produced by operating on the right by the same element\n\nTherefore, as per Merriam-Webster, dividing the number of commas in both Mansfield and in Northanger by (# sentences / 100) entails normalizing them to per 100 sentences.\n\nQuod Erat Dictionariandum?\n\n>296 faktorovich:\n\nMy corpus has 284 texts with 7.8 million words. A comparison of all of these texts against all others on the frequency of each of the words would be approximately = 284 * 283 * 7.8 million = 629 billion comparisons. If you try imagining the size of this 3D table that would fit all of these comparison scores on each of these words for each of the texts, you will notice why the idea of measuring all words in all texts for frequency is an absurd idea.\n\nOther than showing you can use a calculator to multiply some large numbers to get even bigger numbers, what is the purpose of this? What does it really mean?\n\nFor example, if you had a text of 46,418 words (a real example in my corpus) and overall there are 1,607,892 in 39 works, I don't have to compare 1.6 million words. I need to know which words are unique to each text. In this case for the one story it is 3,909 words for the longest text, not 46,418.\n\nText file manipulation has been refined for more than 50 years in Unix type system (yes, since 1970). There are many tools of varying levels of sophistication and complexity that can be used, one after another in a pipeline, to get answers.\n\nLet's say you have files with these names:\n\n% ls\n\nTS01 TS04 TS07 TS10 TS13 TS16 TS19 TS22 TS25 TS28 TS31 TS34 TS38\n\nTS02 TS05 TS08 TS11 TS14 TS17 TS20 TS23 TS26 TS29 TS32 TS35 TS39\n\nTS03 TS06 TS09 TS12 TS15 TS18 TS21 TS24 TS27 TS30 TS33 TS36 TS40\n\nand you want to know how many words are in each (and sort them from largest to smallest for the illustration):\n\n% wc -w * | sort -rn\n\n46418 TS34\n\n45695 TS35\n\n45556 TS22\n\n45208 TS36\n\n44939 TS23\n\n44823 TS19\n\n44517 TS29\n\n43945 TS13\n\n43763 TS18\n\n43742 TS31\n\n43460 TS11\n\n43360 TS28\n\n43265 TS38\n\n43121 TS04\n\n43112 TS20\n\n43088 TS33\n\n42935 TS30\n\n42665 TS02\n\n42651 TS03\n\n42436 TS16\n\n42369 TS24\n\n41892 TS05\n\n41723 TS26\n\n41706 TS01\n\n41690 TS27\n\n41564 TS08\n\n41526 TS14\n\n41482 TS12\n\n41402 TS25\n\n41337 TS32\n\n41308 TS10\n\n41135 TS07\n\n41041 TS21\n\n40986 TS15\n\n40442 TS09\n\n40411 TS06\n\n40310 TS17\n\n14469 TS40\n\n12400 TS39\n\n1607892 total\n\nBut now you want to know how many unique words in one of those files. I'll pick the largest and store the result in another directory to avoid too much clutter:\n\ncat TS34 | tr -cd \"\\:alpha:\\\\:space:\\-'\" |\n\ntr ' \\:upper:\\' '\\n\\:lower:\\' |\n\ntr -s '\\n' |\n\nsed \"s/^\\'-\\*//;s/\\'-\\$//\" |\n\nsort |\n\nuniq -c > ../ts_uniq/TS34u\n\nThis puts all of the unique words and counts in a file (uniq -c). It is alphabetical by the word because of the sort command. I manually set the destination file path and name but this could be done with variables but I did not want to give too complex an example. There are leading spaces that LT Talk won't show but the first few lines look like this:\n\n% head TS34u\n\n1020 a\n\n1 aback\n\n4 ability\n\n11 able\n\n9 aboard\n\n158 about\n\n12 above\n\n1 absent\n\n1 absently\n\n1 absolutely\n\nBut maybe it is more helpful to have a sorted list by the frequency of a word in the text:\n\n% sort -rn TS34u > TS34us\n\nThat new file TS34us has these for the top lines:\n\n% head TS34us\n\n2721 the\n\n1454 to\n\n1060 and\n\n1020 a\n\n998 of\n\n831 tom\n\n815 i\n\n721 in\n\n667 he\n\n635 was\n\nand these for the bottom lines:\n\n1 accommodations\n\n1 accommodated\n\n1 accommodate\n\n1 accidentrear\n\n1 accessories\n\n1 accepting\n\n1 absolutely\n\n1 absently\n\n1 absent\n\n1 aback\n\nI see that Tom is used 831 times in this story and is the 6th most common word in this work. It is context-specific and these works routinely give the name of the character when referring to them. It is part of the style for this genre. The other words are ones that are common in English.\n\nLooking at the bottom lines I see something unexpected accidentrear which is not a word but is probably a case of a typo in the source text. So I can look to have it tell me where the word appears in the file in my corpus directory:\n\n% grep \"accident—rear glider\" TS34\n\naccident—rear glider cut loose and is falling—hope they make a safe\n\nI did not find it with \"accidentrear\". By looking at \"accident\" I found all of the occurrences of the word (52) and could spot the troublesome line. In this case, the Gutenberg typesetters put an em-dash that was not one of my characters for separating the words. I can edit the source text or change the lines of code to produce the lists of unique words.\n\nLet's consider aback and I want to know how common that word is used in the other texts of the corpus:\n\n% grep aback *\n\nTS32:“Oh, did you?” Tom was rather taken aback by this reply.\n\nTS32:“CUNNINGHAM!” gasped Tom Swift, taken aback as much by the boldness of\n\nTS34:This seemed to take the angry man aback. He swallowed his feelings with\n\nSo it was used twice in TS32 and only once in the longest text TS34.\n\nFor a list of the file names and number of occurrences of aback I could:\n\n% ls | xargs grep -c aback | grep -v ':0'\n\nTS32:2\n\nTS34:1\n\nI could write a small loop to take the 100 (or 1,000) most common words and find out which works have those words.\n\nThe investigator needs to decide what questions to ask and learn how to get the results. After performing some sanity checks, you then have to be sure they are meaningful and can't occur from other things that are unrelated to the question being asked.\n\nDoes the weather in Buffalo, NY influence the weather in San Diego, CA? Perhaps. A little. But generally you want to focus on weather elements within 100 miles and the larger-scale systems like storms from the Gulf of Alaska that are carried south along the Jet Stream. Solar activity, including sunspots as an indicator of same are factors but probably not \"Mercury in retrograde.\" Just because you can measure something does not mean it is significant for the question at hand.\n\nUsing the right tool for the job is important. A screwdriver might be used as a hammer but it is not as good as using an actual hammer. The complaints raised about your free website tools come down to whether they can do the job they claim to do — accurately identify and count certain parts of speech, punctuation, etc. If they have problems, anything that relies on them also falls apart.\n\nBased on your posts in this two-part thread about your experience with Stylo for R, I don't for a moment believe that you used it enough to determine that it is filled with bugs as you claim. It requires spending more than 30 to 120 minutes before giving up and declaring it a failure. If you wrote a novel with Microsoft Word and did not manage to sell it to a publisher, is it the fault of Word?\n\nJames"
    }
}