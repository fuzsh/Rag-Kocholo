{
    "id": "dbpedia_3282_2",
    "rank": 88,
    "data": {
        "url": "https://dl.acm.org/doi/10.1145/233557.233558",
        "read_more_link": "",
        "language": "en",
        "title": "The Vesta parallel file system",
        "top_image": "https://dl.acm.org/pb-assets/head-metadata/favicon-32x32-1574252172003.png",
        "meta_img": "https://dl.acm.org/pb-assets/head-metadata/favicon-32x32-1574252172003.png",
        "images": [
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/acm-dl-logo-white-1ecfb82271e5612e8ca12aa1b1737479.png",
            "https://dl.acm.org/doi/10.1145/specs/products/acm/releasedAssets/images/acm-logo-1-ad466e729c8e2a97780337b76715e5cf.png",
            "https://dl.acm.org/pb-assets/icons/DOs/default-profile-1543932446943.svg",
            "https://dl.acm.org/action/showDoPubAsset?doi=10.1145/contrib-81100468805&format=rel-imgonly&assetId=cartoon.gif",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/footer-logo1-45ae33115db81394d8bd25be65853b77.png",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/computing-reviews-9fcf4f505a6a4bf80e6d62e3450bd1c6.png",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/computing-reviews-mobile-8496510aedd04b1d40076575b8412644.png",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/Default_image_lazy-0687af31f0f1c8d4b7a22b686995ab9b.svg",
            "https://dl.acm.org/action/showDoPubAsset?doi=10.1145/contrib-81100218877&format=rel-imgonly&assetId=pictureofme.jpg",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/loader-7e60691fbe777356dc81ff6d223a82a6.gif",
            "https://dl.acm.org/pb-assets/icons/DOs/default-profile-1543932446943.svg",
            "https://dl.acm.org/action/showDoPubAsset?doi=10.1145/contrib-81100468805&format=rel-imgonly&assetId=cartoon.gif",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/acm-logo-dl-8437178134fce530bc785276fc316cbf.png",
            "https://dl.acm.org/specs/products/acm/releasedAssets/images/acm-logo-3-10aed79f3a6c95ddb67053b599f029af.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "data partitioning",
            "parallel computing",
            "parallel file system"
        ],
        "tags": null,
        "authors": [
            "Yorktown Heights",
            "NY View Profile",
            "Peter F. Corbett",
            "Dror G. Feitelson",
            "CorbettPeter F",
            "FeitelsonDror G"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "The Vesta parallel file system is designed to provide parallel file access to application\nprograms running on multicomputers with parallel I/O subsystems. Vesta uses a new\nabstraction of files: a file is not a sequence of bytes, but rather it can be ...",
        "meta_lang": "en",
        "meta_favicon": "/pb-assets/head-metadata/apple-touch-icon-1574252172393.png",
        "meta_site_name": "ACM Transactions on Computer Systems",
        "canonical_link": "https://dl.acm.org/doi/10.1145/233557.233558",
        "text": "Abstract\n\nThe Vesta parallel file system is designed to provide parallel file access to application programs running on multicomputers with parallel I/O subsystems. Vesta uses a new abstraction of files: a file is not a sequence of bytes, but rather it can be partitioned into multiple disjoint sequences that are accessed in parallel. The partitioning—which can also be changed dynamically—reduces the need for synchronization and coordination during the access. Some control over the layout of data is also provided, so the layout can be matched with the anticipated access patterns. The system is fully implemented and forms the basis for the AIX Parallel I/O File System on the IBM SP2. The implementation does not compromise scalability or parallelism. In fact, all data accesses are done directly to the I/O node that contains the requested data, without any indirection or access to shared metadata. Disk mapping and caching functions are confined to each I/O node, so there is no need to keep data coherent across nodes. Performance measurements shown good scalability with increased resources. Moreover, different access patterns are show to achieve similar performance.\n\nReferences\n\n[1]\n\nBATCHER, K.E. 1968. Sorting networks and their applications. In the AFIPS Spring Joint Computer Conference. AFIPS, Montvale, N.J., 307-314.]]\n\n[2]\n\nBORDAWEKAR, R., CHOUDHARY, A., AND DEL ROSARIO, J. M. 1993. An experimental performance evaluation of Touchstone Delta Concurrent File System. In the International Conference on Supercomputing. ACM, New York, 367-376.]]\n\n[3]\n\nBREWER, E. A. AND KUSZMAUL, B.C. 1994. How to get good performance from the CM-5 data network. In the 8th International Parallel Processing Symposium. IEEE Computer Society Press, Los Alamitos, Calif., 858-867.]]\n\n[4]\n\nBREZANY, P., GERNDT, M., MEHROTRA, P., AND ZIMA, H. 1992. Concurrent file operations in a high performance FORTRAN. In Supercomputing '92. IEEE Computer Society Press, Los Alamitos, Calif., 230-237.]]\n\n[5]\n\nCORBETT, P., FEITELSON, D., FINEBERG, S., HSU, Y., NITZBERG, B., FROST, J.-P., SNIR, M., TRAVERSAT, B., AND WONG, P. 1995a. Overview of the MPI-IO parallel I/O interface. In the IPPS '95 Workshop on I/O in Parallel and Distributed Systems. IEEE Computer Society, Washington, D.C., 1-15.]]\n\n[6]\n\nCORBETT, P. F. AND FEITELSON, D. a. 1994. Vesta File System programmer's reference, version 1.01. Res. Rep. RC 19898 (88058), IBM T. J. Watson Research Center, Yorktown Heights, N.Y.]]\n\n[7]\n\nCORBETT, P. F. AND SCHERSON, I.D. 1992. Sorting in mesh connected multiprocessors. IEEE Trans. Parallel Distrib. Syst. 3, 5 (Sept.), 626-632.]]\n\n[8]\n\nCORBETT, P. F., BAYLOR, S. J., AND FEITELSON, D.G. 1993a. Overview of the Vesta parallel file system. In Proceedings of the IPPS '93 Workshop on I~ 0 in Parallel Computer Systems. IEEE Computer Society, Washington, D.C., 1-16. Reprinted in Comput. Arch. News 21, 5, 7-14.]]\n\n[9]\n\nCORBETT, P. F., FEITELSON, D. G., FROST, J.-P., ALMASI, G. S., BAYLOR, S. J., BOLMARCICH, A. S., HSU, Y., SATRAN, J., SNIR, M., COLAO, R., HERR, B. D., KAVAKY, J., MORGAN, T. R., AND ZLOTEK, A. 1995b. Parallel file systems for the IBM SP computers. IBM Syst. J. 34, 2, 222-248.]]\n\n[10]\n\nCORBETT, P. F., FEITELSON, D. G., FROST, J.-P., AND BAYLOR, S.J. 1993b. Parallel access to files in the Vesta file system. In Supercomputing '93. IEEE Computer Society Press, Los Alamitos, Calif., 472-481.]]\n\n[11]\n\nDEBENEDICTIS, E. AND DEL ROSARIO, J.M. 1992. nCUBE parallel I/O software. In the 11th International Phoenix Conference on Computers and Communications. IEEE Computer Society Press, Los Alamitos, Calif., 117-124.]]\n\n[12]\n\nDEL ROSARIO, J. M., BORDAWEKAR, R., AND CHOUDHARY, A. 1993. Improved parallel I/O via a two-phase run-time access strategy. In Proceedings of the IPPS '93 Workshop on I/O in Parallel Computer Systems. IEEE Computer Society, Washington, D.C., 56-70. Reprinted in Comput. Arch. News 21, 5, 31-38.]]\n\n[13]\n\nDIBBLE, P. C., SCOTT, M. L., AND ELLIS, C.S. 1988. Bridge: A high-performance file system for parallel processors. In the 8th International Conference on Distributed Computer Systems. IEEE Computer Society Press, Los Alamitos, Calif., 154-161.]]\n\n[14]\n\nFEITELSON, D. G. 1994. Terminal I/O for massively parallel systems. In the Scalable High-Performance Computer Conference. IEEE Computer Society Press, Los Alamitos, Calif., 263-270.]]\n\n[15]\n\nFEITELSON, D. G., CORBETT, P. F., BAYLOR, S. J., AND HSU, Y. 1993. Satisfying the I/O requirements of massively parallel supercomputers. Res. Rep. RC 19008 (83016), IBM T. J. Watson Research Center, Yorktown Heights, N.Y.]]\n\n[16]\n\nFEITELSON, D. G., CORBETT, P. F., AND FROST, J.-P. 1995. Performance of the Vesta parallel file system. In the 9th International Parallel Processing Symposium. IEEE Computer Society Press, Los Alamitos, Calif.]]\n\n[17]\n\nFRENCH, g. C., PRATT, T. W., AND DAS, M. 1993. Performance measurement of the Concurrent File System of the Intel iPSC/2 hypercube. J. Parallel Distrib. Comput. 17, 1-2 (Jan./Feb.), 115-121.]]\n\n[18]\n\nHOLLAND, M. AND GIBSON, G. A. 1992. Parity declustering for continuous operation in redundant disk arrays. In the 5th International Conference on Architectural Support for Programming Language and Operating Systems. ACM, New York, 23-35.]]\n\n[19]\n\nINTEL. 1994. Paragon User's Guide. Order no. 312489003. Intel Supercomputer Systems Division, Mount Prospect, Ill.]]\n\n[20]\n\nKATZ, R. H., GIBSON, G. A., AND PATTERSON, D.A. 1989. Disk system architectures for high performance computing. Proc. IEEE 77, 12 (Dec.), 1842-1858.]]\n\n[21]\n\nKOTZ, D. 1994. Disk-directed I/O for MIMD multiprocessors. In the 1st Symposium on Operating Systems Design and Implementation. USENIX Assoc., Berkeley, Calif., 61-74.]]\n\n[22]\n\nKOTZ, D. AND ELLIS, C.S. 1993. Caching and writeback policies in parallel file systems. J. Parallel Distrib. Comput. 17, 1-2 (Jan./Feb.), 140-145.]]\n\n[23]\n\nKOTZ, D. AND NIEUWEJAAR, N. 1994. Dynamic file-access characteristics of a production parallel scientific workload. In Supercomputing '94. IEEE Computer Society Press, Los Alamitos, Calif., 640-649.]]\n\n[24]\n\nKOTZ, D. F. AND ELLIS, C.S. 1990. Prefetching in file systems for MIMD multiprocessors. IEEE Trans. Parallel Distrib. Syst. 1, 2 (Apr.), 218-230.]]\n\n[25]\n\nLEVY, E. AND SILBERSCHATZ, A. 1990. Distributed file systems: Concepts and examples. ACM Comput. Surv. 22, 4 (Dec.), 321-374.]]\n\n[26]\n\nLOVEMAN, D.B. 1993. High performance Fortran. IEEE Parallel Distrib. Tech. 1, 1 (Feb.), 25-42.]]\n\n[27]\n\nLOVERSO, S. J., ISMAN, M., NANOPOULOS, A., NESHEIM, W., MILNE, E. D., AND WHEELER, R. 1993. sfs: A parallel file system for the CM-5. In Proceedings of the Summer USENIX Conference. USENIX Assoc., Berkeley, Calif., 291-305.]]\n\n[28]\n\nMILLER, E. L. AND KATZ, R.H. 1991. Input/output behavior of supercomputing applications. In Supercomputing '91. IEEE Computer Society Press, Los Alamitos, Calif., 567-576.]]\n\n[29]\n\nNELSON, M. N., WELCH, B. B., AND OUSTERHOUT, J.K. 1988. Caching in the Sprite network file system. ACM Trans. Comput. Syst. 6, 1 (Feb.), 134-154.]]\n\n[30]\n\nNODINE, M. H. AND VITTER, J.S. 1991. Large-scale sorting in parallel memories. In the 3rd Symposium on Parallel Algorithms and Architectures. IEEE Computer Society Press, Los Alamitos, Calif., 29-39.]]\n\n[31]\n\nPATT, Y.N. 1994. The I/O subsystem: A candidate for improvement. Computer 27, 3 (Mar.), 15-16.]]\n\n[32]\n\nPATTERSON, R. H. AND GIBSON, G. A. 1994. Exposing I/O concurrency with informed prefetching. In the 3rd International Conference on Parallel and Distributed Information Systems. IEEE Computer Society Press, Los Alamitos, Calif., 7-16.]]\n\n[33]\n\nPIERCE, P. 1989. A concurrent file system for a highly parallel mass storage subsystem. In the 4th Conference on Hypercubes, Concurrent Computing and Applications. Vol. 1. 155-160.]]\n\n[34]\n\nPURAKAYASTHA, A., ELLIS, C. S., KOTZ, D., NIEUWEJAAR, N., AND BEST, M. 1995. Characterizing parallel file-access patterns on a large-scale multiprocessor. In the 9th International Parallel Processing Symposium. IEEE Computer Society Press, Los Alamitos, Calif.]]\n\n[35]\n\nRoY, P. J. 1993. Unix file access and caching in a multicomputer environment. In the USENIX Mach III Symposium. USENIX Assoc., Berkeley, Calif., 21-37.]]\n\n[36]\n\nSALMON, J. 1987. CUBIX: Programming hypercubes without programming hosts. In Hypercube Multiprocessors 1987, M. T. Heath, Ed. SIAM, Philadelphia, Pa., 3-9.]]\n\n[37]\n\nSANDBERG, R., GOLDBERG, D., KLEIMAN, S., WALSH, D., AND LYON, B. 1985. Design and implementation of the Sun network filesystem. In Proceedings of the Summer USENIX Technical Conference. USENIX Assoc., Berkeley, Calif., 119-130.]]\n\n[38]\n\nSTUNKEL, C. B., SHEA, D. G., GRICE, D. G., HOCHSCHILD, P. H., AND TSAO, M. 1994. The SP1 high-performance switch. In the Scalable High-Performance Computer Conference. IEEE Computer Society Press, Los Alamitos, Calif., 150-157.]]\n\n[39]\n\nTORRELLAS, J. AND ZHANG, Z. 1994. The performance of the Cedar multistage switching network. In Supercomputing '94. IEEE Computer Society Press, Los Alamitos, Calif., 265-274.]]\n\n[40]\n\nVITTER, J. S. AND SHRIVER, E. A.M. 1990. Optimal disk I/O with parallel block transfer. In the 22nd Annual Symposium on the Theory of Computing. ACM, New York, 159-169.]]\n\nCited By\n\nView all\n\nHuang XGao YZhou XGao XChen GAn Adaptive Metadata Management Scheme Based on Deep Reinforcement Learning for Large-Scale Distributed File SystemsIEEE/ACM Transactions on Networking10.1109/TNET.2023.326640031:6(2840-2853)\n\nDai HWang YKent KZeng LXu CThe State of the Art of Metadata Managements in Large-Scale Distributed File Systems — Scalability, Performance and AvailabilityIEEE Transactions on Parallel and Distributed Systems10.1109/TPDS.2022.317057433:12(3850-3869)\n\nSingh HBawa SLaMeta: An efficient locality aware metadata management technique for an ultra-large distributed storage systemJournal of King Saud University - Computer and Information Sciences10.1016/j.jksuci.2022.08.01234:10(8323-8335)\n\nShow More Cited By\n\nIndex Terms\n\nThe Vesta parallel file system\n\nComputer systems organization\n\nArchitectures\n\nParallel architectures\n\nComputing methodologies\n\nParallel computing methodologies\n\nParallel programming languages\n\nInformation systems\n\nInformation storage systems\n\nRecord storage systems\n\nSoftware and its engineering\n\nSoftware notations and tools\n\nGeneral programming languages\n\nLanguage types\n\nParallel programming languages\n\nSoftware organization and properties\n\nContextual software domains\n\nOperating systems\n\nCommunications management\n\nInput / output\n\nFile systems management\n\nMemory management\n\nDistributed memory\n\nProcess management\n\nConcurrency control\n\nSoftware system structures\n\nDistributed systems organizing principles\n\nTheory of computation\n\nDesign and analysis of algorithms\n\nData structures design and analysis\n\nSorting and searching\n\nRecommendations\n\nOverview of the Vesta parallel file system\n\nSpecial issue on input/output in parallel computer systems\n\nThe Vesta parallel file system provides parallel access from compute nodes to files distributed across I/O nodes in a massively parallel computer. Vesta is intended to solve the I/O problems of massively parallel computers executing numerically ...\n\nPerformance of the Vesta parallel file system\n\nIPPS '95: Proceedings of the 9th International Symposium on Parallel Processing\n\nVesta is an experimental parallel file system implemented on the IBM SPI. Its main features are support for parallel access from multiple application processes to file, and the ability to partition and re-partition the file data among these processes. ...\n\nA high-performance distributed parallel file system for data-intensive computations\n\nOne of the challenges brought by large-scale scientific applications is how to avoid remote storage access by collectively using sufficient local storage resources to hold huge amounts of data generated by the simulation while providing high-performance ...\n\nInformation & Contributors\n\nInformation\n\nPublished In\n\n86 pages\n\nISSN:0734-2071\n\nEISSN:1557-7333\n\nDOI:10.1145/233557\n\nEditor:\n\nKenneth P. Birman\n\nCornell Univ., Ithaca, NY\n\nIssue’s Table of Contents\n\nCopyright © 1996 ACM.\n\nPermission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from [email protected]\n\nPublisher\n\nAssociation for Computing Machinery\n\nNew York, NY, United States\n\nPublication History\n\nPublished: 01 August 1996\n\nPublished in TOCS Volume 14, Issue 3\n\nPermissions\n\nRequest permissions for this article.\n\nCheck for updates\n\nAuthor Tags\n\ndata partitioning\n\nparallel computing\n\nparallel file system\n\nQualifiers\n\nArticle\n\nContributors\n\nOther Metrics\n\nBibliometrics & Citations\n\nBibliometrics\n\nArticle Metrics\n\n142\n\nTotal Citations\n\nView Citations\n\n1,231\n\nTotal Downloads\n\nDownloads (Last 12 months)93\n\nDownloads (Last 6 weeks)8\n\nOther Metrics\n\nCitations\n\nCited By\n\nView all\n\nHuang XGao YZhou XGao XChen GAn Adaptive Metadata Management Scheme Based on Deep Reinforcement Learning for Large-Scale Distributed File SystemsIEEE/ACM Transactions on Networking10.1109/TNET.2023.326640031:6(2840-2853)\n\nDai HWang YKent KZeng LXu CThe State of the Art of Metadata Managements in Large-Scale Distributed File Systems — Scalability, Performance and AvailabilityIEEE Transactions on Parallel and Distributed Systems10.1109/TPDS.2022.317057433:12(3850-3869)\n\nSingh HBawa SLaMeta: An efficient locality aware metadata management technique for an ultra-large distributed storage systemJournal of King Saud University - Computer and Information Sciences10.1016/j.jksuci.2022.08.01234:10(8323-8335)\n\nBibliographyStorage Systems10.1016/B978-0-32-390796-5.00023-1(641-693)\n\nThomasian AStorage technologies and their dataStorage Systems10.1016/B978-0-32-390796-5.00011-5(89-196)\n\nZheng QCranor CGanger GGibson GAmvrosiadis GSettlemyer BGrider Gde Supinski BHall MGamblin TDeltaFSProceedings of the International Conference for High Performance Computing, Networking, Storage and Analysis10.1145/3458817.3476148(1-15)\n\nXiao YShen CTransition‐Metal Borides (MBenes) as New High‐Efficiency Catalysts for Nitric Oxide Electroreduction to Ammonia by a High‐Throughput ApproachSmall10.1002/smll.20210077617:24\n\nWu MMi ZXia YA Survey on Serverless Computing and Its Implications for JointCloud Computing2020 IEEE International Conference on Joint Cloud Computing10.1109/JCC49151.2020.00023(94-101)\n\nLiu JMi ZHuang ZHua ZXia YHCloud: A Serverless Platform for JointCloud Computing2020 IEEE International Conference on Joint Cloud Computing10.1109/JCC49151.2020.00022(86-93)\n\nWang YChen YShao XChen JYuan LXu YHSM$$^{2}$$2: A Hybrid and Scalable Metadata Management Method in Distributed File SystemsParallel Architectures, Algorithms and Programming10.1007/978-981-15-2767-8_19(195-206)\n\nShow More Cited By\n\nView Options\n\nView options\n\nPDF\n\nView or Download as a PDF file.\n\nPDF\n\neReader\n\nView online with eReader.\n\neReader\n\nGet Access\n\nLogin options\n\nCheck if you have access through your login credentials or your institution to get full access on this article.\n\nSign in\n\nFull Access\n\nMedia\n\nFigures\n\nOther\n\nTables\n\nShare\n\nShare\n\nShare this Publication link\n\nCopied!\n\nCopying failed.\n\nShare on social media\n\nAffiliations\n\nPeter F. Corbett\n\nIBM T. J. Watson Research Center, Yorktown Heights, NY\n\nDror G. Feitelson\n\nIBM T. J. Watson Research Center, Yorktown Heights, NY\n\nRequest permissions Authors Info & Affiliations"
    }
}