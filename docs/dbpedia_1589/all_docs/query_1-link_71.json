{
    "id": "dbpedia_1589_1",
    "rank": 71,
    "data": {
        "url": "https://www.nearshore-it.eu/articles/the-complete-guide-to-agile-project-management/",
        "read_more_link": "",
        "language": "en",
        "title": "The Complete Guide to Agile Project Management",
        "top_image": "https://www.nearshore-it.eu/wp-content/uploads/2022/01/nearshore_2022.01.05_social.jpg",
        "meta_img": "https://www.nearshore-it.eu/wp-content/uploads/2022/01/nearshore_2022.01.05_social.jpg",
        "images": [
            "https://www.nearshore-it.eu/wp-content/themes/nearshore/assets/images/logo-inetum.svg",
            "https://www.nearshore-it.eu/wp-content/uploads/2023/02/Nearshore_inetum_2021.12.05_graphic_1.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2023/02/Nearshore_inetum_2021.12.05_graphic_5.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2023/02/Nearshore_inetum_2021.12.05_graphic_4.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2023/02/Nearshore_inetum_2021.12.05_graphic_6.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2022/01/NS_2021.12.05_graphic_6_mobile.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2023/02/Nearshore_inetum_2021.12.05_graphic_7.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2022/01/agile-manifesto_612px.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2022/01/agile-manifesto_mobile-1.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2023/02/Nearshore_inetum_2021.12.05_graphic_2.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2023/02/Nearshore_inetum_2021.12.05_graphic_3.png",
            "https://www.nearshore-it.eu/wp-content/uploads/2024/06/BigCTA_MarekCzachorowski.jpg",
            "https://www.nearshore-it.eu/wp-content/themes/nearshore/assets/images/logo-inetum.svg",
            "https://px.ads.linkedin.com/collect/?pid=4085410&fmt=gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Nie pokazuj autora"
        ],
        "publish_date": "2022-01-05T12:41:28+01:00",
        "summary": "",
        "meta_description": "Read how agile project management compares to other project management methodologies, and the key benefits it brings to your business.",
        "meta_lang": "en",
        "meta_favicon": "https://www.nearshore-it.eu/wp-content/uploads/2023/01/cropped-inetum-favicon-300x300-1-32x32.png",
        "meta_site_name": "Nearshore Software Development Company - IT Outsourcing Services",
        "canonical_link": "https://www.nearshore-it.eu/articles/the-complete-guide-to-agile-project-management/",
        "text": "You’ve probably heard of Agile Project Management if you’re delivering software development projects. If so, you’ll know that running agile projects is a great way to bring team members together, maximize value, and optimize the way you deliver working solutions.\n\nIf you’re new to agile project management, or you’re just a bit rusty, our complete guide is for you. We’ll cover a range of topics, including exactly what agile project management is, how it compares to other project management methodologies, and the key benefits it brings to your business.\n\nTo finish off, we’ll also run through a deeper guide on how to run an agile project using Scrum.\n\nReady? Let’s get started!\n\nIn this article you will learn:\n\nWhat Exactly is Agile Project Management?\n\nAgile Project Management vs. Traditional Project Management (e.g., PMP)\n\nThe Benefits of Agile Project Management\n\n4 Different Types of Agile Frameworks\n\nScrum\n\nKanban\n\nLean\n\nExtreme Programming\n\nHow to Run Agile Projects For Agile Teams Using Scrum\n\nThe Agile Mindset\n\nThe Agile Core Values & Principles\n\nScrum – The Framework, Team Roles & Ceremonies\n\nWhat Exactly is Agile Project Management? – Definition & Explanation\n\n“Agile project management is an iterative approach to delivering a project throughout its life cycle. Iterative or agile life cycles are composed of several iterations or incremental steps towards the completion of a project.”\n\nAssociation for Project Management.\n\nAgile project management is an iterative framework for delivering projects, whereby the planning, development, and testing are broken down into small cycles of effort (sometimes known as iterations/sprints).\n\nThe agile methodology allows a development team to deliver small packages of valuable, working software to customers at regular intervals rather than waiting for the entire product to be developed and put live.\n\nWhile we’ll cover the benefits of the agile methodology in more detail later on, working in an agile way allows team members to quickly deploy new ideas, deliver value to customers, and learn from mistakes.\n\nFor business leaders, running an agile project enables them to break the delivery down into smaller chunks meaning they can deliver ROI faster and more frequently. For development teams, the agile methodology gives them more autonomy to create sustainable development solutions.\n\nAgile Project Management vs. Traditional Project Management (e.g., Waterfall, PMP)\n\nAgile project management is still a relatively new concept and is heavily tied to the rise of software development. When comparing agile project management to traditional project management, we’re actually comparing agile against the ‘waterfall’ methodology.\n\nThe waterfall methodology is a framework for delivering a project in a linear way. Rather than working in fast, regular cycles of work (as with agile), waterfall projects move from phase to phase only once all of the work in each phase is completed. E.g., all requirements are gathered for the entire solution before progressing to design.\n\nThe waterfall methodology, depicted by frameworks such as PMP and PRINCE2®, was founded and implemented in the late 1900s, mainly for construction and manufacturing projects. Because these projects needed tight control, a linear waterfall approach helped minimize risk and lock in the project scope.\n\nBut, which methodology should you use on your project?\n\nNowadays, good business leaders know how and when to use either the waterfall or agile methodology. Choosing the correct methodology largely depends on the project’s type, its level of complexity, and its risk tolerance.\n\nIn short, if you’re working in software development, you’re creating something new, and you have complex problems to solve, shoot for the agile methodology.\n\nIf instead, you’re working on traditional construction, manufacturing, or IT infrastructure projects, with high levels of risk, you should consider waterfall.\n\nThe Benefits of Agile Project Management\n\nAgile project management is proven to deliver outstanding results. In fact, over 53% of innovative companies now use some form of agile methodology within their delivery.\n\nIf you’re still unsure, here are just some of the benefits agile project management brings to organizations.\n\nFaster Value Delivery\n\nFirst and foremost, breaking projects up into chunks and managing them in cycles allows you to deliver value sooner. Getting a new product, feature, or upgrade out to customers fast is the key to success in a competitive world. Agile methodologies allow you to deliver small pieces of value much more frequently than with waterfall.\n\nGreater Customer Collaboration\n\nAgile delivery is built on gaining feedback and acting upon it fast. Working in this way helps you put your customer at the heart of what you do and ensures you’re continually focused on what they want. This helps you deliver the right thing and keeps your customers happy and engaged.\n\nImproved Team Morale\n\nWhen we look at the Agile Manifesto, later on, you’ll know that working in an agile way is all about empowerment and autonomy. Agile teams love working autonomously, giving team members freedom to express themselves and their ideas.\n\nReduced Project Risk\n\nBecause agile delivers value iteratively, you don’t spend ages going down rabbit holes. By delivering little and often, you reduce the risk of your delivery being incorrect, as well as give yourself regular opportunities to stop, assess, and review. This is backed up by data, too, with only 8% of agile deliveries failing compared to 21% of waterfall ones.\n\nOrganizational Flexibility\n\nBecause of the iterative nature of an agile team, they can be more flexible to accommodate changing customer demands. Especially if your business operates in a competitive market, adapting to changes quickly is key for staying ahead. The agile project management methodology gives you a framework to deliver change flexibly and transparently.\n\n4 Different Types of Agile Frameworks\n\nMuch like waterfall project management, there is a range of different Agile project management frameworks available. As a project manager, you’ll want to choose the best framework for you and your teams to ensure you deliver agile changes in the most efficient way.\n\nScrum\n\nBy far the most common and popular of the agile project management methods is Scrum. Scrum is an adaptive, lightweight framework that combines a small number of team roles, ceremonies, and standards to deliver rapid software development.\n\nScrum is super popular because of its simplicity, meaning project teams can easily pick it up and re-form into a scrum team. It’s one of the best and well-recognized ways to deliver valuable software, achieve technical excellence, and build a truly agile team.\n\nWe’ll take a look at Scrum in more detail later, where we’ll show you exactly how it builds upon the agile manifesto to deliver excellent working software.\n\nKanban\n\nKanban is another popular way to deliver agile software development. Rather than working in set intervals, Kanban is a style of continuous workflow management, where teams ‘pull’ work through a visualized system as and when they have capacity.\n\nKanban has its routes in Kaizen, the Japanese lean manufacturing principle, and is a great way to bring teams together around a common objective.\n\nThe whole framework runs through a central Kanban board, which has three key components: tasks (shown on cards), stages (shown in columns), and a Work in Progress (team capacity) limit.\n\nMuch like Scrum, the beauty of Kanban comes in its simplicity. A team member simply looks at the board to see which task is up next. They then complete it, pass it onto the next stage of the process, and repeat for the next task! The kanban board gives the entire development team visibility of what’s been completed, what’s in progress, and what’s coming up in the future.\n\nIf you’d like to hear more about Kanban, check out our recent blog on Scrum vs. Kanban. If you are interested in the Scrumban approach, get familiar with our guide!\n\nLean\n\nAnother commonly used agile framework is Lean. Rather than focusing directly on project delivery, Lean focuses on identifying, assessing, and fixing areas of inefficiency within an organization’s agile processes.\n\nIdentifying Value – First, you must identify how your organization delivers value to the customer. This might be a feature of your software, a product you sell, or a service that you offer.\n\nValue Mapping – Next, assess the steps your organization takes to deliver that value. The goal is to ‘map out’ and visualize all of the steps in the process. Next, the team reflects on each step to identify those which don’t directly contribute value and then removes them.\n\nBuilding Flow – With these wasteful steps eliminated, you and your team want to create the optimum level of flow to ensure value is delivered quickly. This includes removing bottlenecks, disruption, and delays.\n\nImplementing a Pull System – Like with Kanban, your entire team then looks to implement a pull system, whereby you pull work from a task list as and when you have capacity. By only doing this as and when the system allows, you further reduce waste and optimize performance.\n\nFocusing on Continuous Improvement – The process repeats itself to continually look for ways to become leaner. This requires software teams to constantly be on the lookout for opportunities to grow, learn, and develop both as individuals and as a collective.\n\nYou can learn more about Lean by reading this article from EasyAgile.\n\nExtreme Programming\n\nLastly, if you’re running an agile project that’s heavily focused on quick releases of complex software, we’d recommend checking out Extreme Programming.\n\nCommonly known as XP, Extreme Programming is built upon a rigid set of values, principles, and practices to optimize the software development process.\n\nWhile it’s fairly prescriptive for development teams, XP’s primary goal is to enable the production of high-quality software in a world where frequently changing requirements are commonplace.\n\nTo give you a flavor of XP, here’s a list of the core values and principles the framework lays down to software developers:\n\nValues:\n\nCommunication\n\nSimplicity\n\nFeedback\n\nRespect\n\nCourage\n\nPrinciples:\n\nIncremental Changes\n\nAssumed Simplicity\n\nRapid Feedback\n\nEmbracing Change\n\nQuality Work\n\nIf you’re looking for a framework that provides structure and purpose to your development process, you can read more about Extreme Programming here.\n\nHow to Run Agile Projects For Agile Teams Using Scrum\n\nNow that you know all about Agile, the benefits it brings, and the different ways it can work, you’re probably itching to get started. Next, we’ll dive into the detail of how to run an agile project using the most popular framework, Scrum, as our guide.\n\nThe Agile Mindset\n\nWhen building a truly agile team, the first thing to think about is adopting an agile mindset. For many organizations, setting the foundation for agile working is one of the key enablers of success. This is especially true if your organization’s culture is quite traditional, with employees keen to do things ‘the way they’ve always done it.’\n\nAn agile mindset is the set of attitudes, underpinned by a core philosophy, which supports agile project management. While the exact list of traits varies, these are the three core traits those with an agile mindset possess:\n\nThey Embrace Change – Those with an agile mindset don’t just accept that change is a part of life, they actively embrace change. They champion new ways of working and seek out ways to make things better.\n\nThey Collaborate – Agile methodologies put the customer first and focus on the power of the team. To have a truly agile mindset, you must be a great collaborator and be open to other people’s ideas, opinions, and beliefs.\n\nThey Demand Quality – Despite the agile methodology focusing on quick iterations and fast-paced change, this never comes at the expense of great quality. To adopt an agile mindset, you have to ensure everything you do for your organization and your customer is of the best quality.\n\nWith the agile mindset in place, you and your team are well-placed to begin embodying the agile principles.\n\nThe Agile Core Values & Principles\n\nYou’ll remember that earlier on, we mentioned the Agile Manifesto. During the birth of Agile, the founders came up with a range of values and principles to help guides teams on their agile journey.\n\nThese came together to form the Agile Manifesto, which many see as the bible for all agile project management methodologies. If you’re looking to adopt agile, these are the fundamental ways of working you and your team members need to sign up to.\n\nThe Agile Values\n\nWe value… Individuals and interactions over processes and tools\n\nWe value… Working software over comprehensive documentation\n\nWe value… Customer collaboration over contract negotiation\n\nWe value… Responding to change over following a plan\n\nThe Agile Principles\n\nOur highest priority is to satisfy the customer through early and continuous delivery of valuable software.\n\nWelcome changing requirements, even late in development. Agile processes harness change for the customer’s competitive advantage.\n\nDeliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.\n\nBusiness people and developers must work together daily throughout the project.\n\nBuild projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.\n\nThe most efficient and effective method of conveying information to and within a development team is face-to-face conversation.\n\nWorking software is the primary measure of progress.\n\nAgile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.\n\nContinuous attention to technical excellence and good design enhances agility.\n\nSimplicity the art of maximizing the amount of work not done is essential.\n\nThe best architectures, requirements, and designs emerge from self-organizing teams.\n\nAt regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.\n\nDo you want to ensure you’ve fully mastered the agile project management practices? We’d recommend exploring the birthplace of Agile on the Agile Alliance website.\n\nScrum – The Framework, Team Roles & Events\n\nNow you’ve got the underpinning knowledge of agile, its values, and its principles, you’re ready to put the Scrum framework into action. As mentioned previously, Scrum is the most popular agile framework thanks to its lightweight design and focus on self-organizing teams.\n\nScrum Teams are made up of Scrum Master, Product Owner and Developers, with the overall size of the team sitting between 7-12 people. Stakeholders are not strictly part of a Scrum Team, they provide important insight and feedback on the project/product delivery and usually act on behalf of an organization’s customers.\n\nScrum Team Roles:\n\nThe Product Owner defines the product/solution, including who it is for, what it does, and why it does it. Product owners own a product in its entirety; they define requirements and have the final word on strategic and tactical product decisions.\n\nA Scrum Master ensures the team operates in line with the Scrum Guide. They spend their time coaching and facilitating the rest of the team to improve their efficiency.\n\nThe Scrum Team Members/Developers are the team members who develop the solution. As a team, they will be cross-functional and have all the skills needed to create the entire solution, including testing.\n\nNote – You may notice Project Managers don’t exist in Scrum. Because teams are self-organizing, Project Managers aren’t required, with many traditional PMs taking on Scrum Master roles instead.\n\nScrum Events\n\nNow you have your team established, it’s time to learn the Scrum ways of working.\n\nScrum is based on agile’s iterative approach, breaking project delivery down into ‘Sprints.’ Depending on the nature of your business, sprints are usually 1-4 weeks long but never exceed four weeks.\n\nEach sprint contains a number of formal events to help plan, deliver, and assess the latest work cycle. These events are:\n\nSprint Planning – Sprint Planning initiates the sprint by laying out the work to be performed and creating a Sprint Goal. This is collaborative between the entire Scrum Team, with the Product Owner preparing a list of backlog work items to be selected from.\n\nDaily Scrum – The purpose of the Daily Scrum is to inspect progress toward the Sprint Goal. This happens every day, is no more than 15 minutes long, and allows Developers to share what they’re up to and raise any issues.\n\nSprint Review – Here, the team inspects the outcome of the sprint, presenting the results of their work to key stakeholders for review and feedback.\n\nProject/Sprint Retrospective – The team uses the Sprint Retrospective to plan ways to increase quality and effectiveness. Specifically, they review the effectiveness of the individuals, interactions, processes, and tools used in the previous sprint.\n\nHopefully, you see how the different Scrum roles and events come together to deliver an Agile project. We’ve only scratched the surface of Scrum – if you’d like to find out more, check out our detailed guide on Scrum and Agile Methodologies in Software Development.\n\nSummary\n\nThere’s a reason that over 53% of companies use agile project management methodologies. Agile project management could be for you if you’re looking for a way to deliver faster project value through well-motivated teams that strive for continuous improvement.\n\nWhether that’s through Kanban, Lean, XP, or Scrum, there are bound to be agile project management methods that are perfect for you and your teams.\n\nSo, what are you waiting for? It’s time to get on and deliver some agile projects!"
    }
}