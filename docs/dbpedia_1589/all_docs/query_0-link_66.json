{
    "id": "dbpedia_1589_0",
    "rank": 66,
    "data": {
        "url": "https://www.agile-scrum.be/agile-software-development/",
        "read_more_link": "",
        "language": "en",
        "title": "What is Agile Software Development?",
        "top_image": "https://www.agile-scrum.be/wordpress/wp-content/uploads/2014/07/What-is-agile-software-development-Agile-Scrum-Belgium.png",
        "meta_img": "https://www.agile-scrum.be/wordpress/wp-content/uploads/2014/07/What-is-agile-software-development-Agile-Scrum-Belgium.png",
        "images": [
            "https://www.agile-scrum.be/wordpress/wp-content/plugins/sitepress-multilingual-cms/res/flags/en.png",
            "https://www.agile-scrum.be/wordpress/wp-content/uploads/2024/05/Primary_Classic@3x-2.png",
            "https://www.agile-scrum.be/wordpress/wp-content/uploads/2014/07/What-is-agile-software-development-Agile-Scrum-Belgium-1024x636.png",
            "https://www.agile-scrum.be/wordpress/wp-content/uploads/2014/07/Agile-Development-Scrum-Belgium-Training-1024x793.png",
            "https://www.agile-scrum.be/wordpress/wp-includes/images/rss.png",
            "https://www.agile-scrum.be/wordpress/wp-content/uploads/2024/05/Primary_Classic@3x-2-300x161.png",
            "https://px.ads.linkedin.com/collect/?pid=617754&fmt=gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2014-07-31T15:33:43+00:00",
        "summary": "",
        "meta_description": "What is Agile Software Development ?",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "Agile Scrum",
        "canonical_link": "https://www.agile-scrum.be/agile-software-development/",
        "text": "I think that the best way to describe Agile software development is that it’s a reaction to the waterfall development method that isn’t really suitable for software projects.\n\nIf you’ve ever been part of a software development project, you know that the main problem with the traditional management approach is that the product needs changes done so many times that a lot of work gets undone through the morass of invalid code and client changes. Agile software development seeks to eliminate those problems and instead create a methodology that is responsive, cuts costs, wastes less and delivers early since you’re always developing an already-working product.\n\nSo what are the values that Agile software development adheres to? Here they are:\n\nIndividuals and interactions over Processes and tools\n\nInstead of being caught up on how things are supposed to be done in books and SOP manuals, Agile software development values self-organization and motivation much more.\n\nWorking software over Comprehensive documentation\n\nWhen presenting work to clients or product owners, Agile software development requires teams to show working products already instead of documentation and images. While documentation is important, the clients should see the software working already.\n\nCustomer collaboration over Contract negotiation\n\nTo avoid the changes that can jeopardize the whole project, it’s important that you meet with stakeholders and clients as soon and as frequent as possible. Knowing all the product requirements at the beginning is impossible so constant meeting is important.\n\nResponding to change over Following a plan\n\nThe main reason it’s called Agile software development is because it needs to be dynamic and respond quickly to small changes. You’re developing a working product continuously instead of putting the pieces together and seeing if it works in the end.\n\nSo how do you implement these Agile software development values? Here’s how:\n\nUse senior developers instead of junior ones. When you want a working product that can respond to changes, this means you need developers who know what they’re doing.\n\nExpect requirements to change often. Essentially, you’re letting clients change the specifications at any time. So work with this in mind and keep communications open with the clients.\n\nSmall number of developers. You may think that this makes the work too much for a small team. But you’re also banking on their expertise and a smaller team can communicate more effectively.\n\nInstil a culture that responds to change. Although your client wants quality work, knowing that you’re using Agile software development means that they prefer quick changes that come with their requests instead of extremely high-quality. Refinement can happen anytime but changing functions is something that should be done all the time.\n\nWhat are the groups of methods that fall under Agile software development? You may recognize some of them right here:\n\nAdaptive Software Development (ASD)\n\nAgile Modeling\n\nAgile Unified Process (AUP)\n\nCrystal Methods (Crystal Clear)\n\nDisciplined Agile Delivery\n\nDynamic Systems Development Method (DSDM)\n\nExtreme Programming (XP)\n\nFeature Driven Development (FDD)\n\nLean Startup\n\nLean software development\n\nKanban\n\nScrum\n\nScrum-ban\n\nKeep in mind that implementing Agile may mean adhering to one of these or developing a special framework that works best for your team.\n\nWhat all these methods have in common since they’re all part of Agile’s methodology is their focus on the different aspects of software development lifecycles. Some methods focus on one aspect of the lifecycle while others can cover all the aspects. Sometimes, you can use one method for a certain phase and another method for the next phase.\n\nMaterial on Agile software development is extensive but implementing it can be tricky and sometimes complicated. Make sure that you have an expert guiding the team."
    }
}