{
    "id": "dbpedia_1589_0",
    "rank": 60,
    "data": {
        "url": "https://dl.acm.org/doi/fullHtml/10.1145/3571697.3571701",
        "read_more_link": "",
        "language": "en",
        "title": "Use of software and project management metrics in agile software development methodologies",
        "top_image": "https://dl.acm.org/cms/attachment/html/10.1145/3571697.3571701/assets/html/images/image2.png",
        "meta_img": "",
        "images": [
            "https://dl.acm.org/cms/attachment/html/10.1145/3571697.3571701/assets/html/images/image1.png",
            "https://dl.acm.org/cms/attachment/html/10.1145/3571697.3571701/assets/html/images/image2.png",
            "https://dl.acm.org/cms/attachment/html/10.1145/3571697.3571701/assets/html/images/image3.png",
            "https://dl.acm.org/cms/attachment/html/10.1145/3571697.3571701/assets/html/images/image4.png",
            "https://dl.acm.org/cms/attachment/html/10.1145/3571697.3571701/assets/html/images/image5.png",
            "https://dl.acm.org/cms/attachment/html/10.1145/3571697.3571701/assets/html/images/image6.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Dimitrios Chloros",
            "Department of Digital Systems",
            "University of Thessaly",
            "dichloros@uth.gr",
            "Vassilis C. Gerogiannis",
            "vgerogian@uth.gr",
            "George Kakarontzas",
            "gkakaron@uth.gr"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "1 INTRODUCTION\n\nDuring the 90s, many people in the software development field realized that things had somehow changed in terms of software development standards. The need for more flexibility arose in a turbulent business environment. There were software engineers interested in developing software methodologies that better fit changing needs of new business environments. These methodologies belong to the group of agile software development methods [1]. Despite the great benefits that agile development offers, it is perceived by some to be at odds with traditional plan-based methods that use metrics [2] for project guidance and decision making. Emphasis on new values leads these methods to provide different processes for software development. For example, unlike traditional methods, agile methods should support changing user requirements at all stages of software development [3].\n\nAgile software development is a point of interest for the academic community and according to [25], from the beginning of the emergence of agile practices to 2015, there have been 28 SLRs researching the following ten fields: Agile adoption, Agile human & social aspects, Agile methods, Agile practices, Agile and CMMI, Agile and usability, Agile and global software engineering, Agile and the organization, Agile and embedded systems, Agile product line engineering. Our research is aimed at the field of using measurements which belongs to the category of \"Agile Practices\". In this particular field, in Alperowitz et al. [24] the metrics used, the reasons and results of using metrics, and the metrics that are highly influential in industrial Lean and Agile software development are presented. We focused on software product and project management metrics in agile development and included literature after 2015.\n\nThe aim of the paper is to present the reasons of usage of software and project management metrics in agile software development methodologies. Because there are many metrics, which can also be modified in each case to better represent what each company wants to measure, the research will try to identify and group the purposes of using such metrics to give a clearer picture of the situation. A systematic mapping study is conducted for the needs of this research. The structure of the paper is as follows: Section 2. The systematic mapping protocol is defined. Section 3. The results of the research are presented. Section 4. The conclusions of the research are drawn.\n\n2 STUDY DESIGN\n\nThis section presents the process of searching for primary studies following the search process of a systematic mapping research protocol. A protocol is a predetermined plan that specifies the research questions and how the mapping study has been conducted. The research protocol is presented according to the guidelines proposed by [4].\n\n2.1 Definition of Research Questions\n\nAccording to the aim of the research, the following research questions were defined in the paper:\n\nRQ1: Why are software metrics leveraged in agile development methodologies?\n\nRQ2: Why are project management metrics leveraged in agile development methodologies?\n\n2.2 Conduct Search for Primary Studies\n\nThe search strategy was defined considering the objectives and research questions of the paper. Specifically, it was chosen to conduct searches manually, on the Google scholar website, for primary research. Google scholar was chosen because it aggregates a number of sources including “academic publishers, professional societies, online repositories, universities and other web sites” . It is, therefore, suitable for our mapping study since the purpose of a mapping study is to provide a broad understanding of the research area and to uncover possible research gaps. In the future we plan to expand this article to a systematic literature review, in which more sources shall be included. The search was performed on the full text of the publication and not just on the title.\n\n2.3 Define search strings - Identify studies\n\nThe goal of this step was to identify studies related to the use of software and project management metrics in agile software development. To perform the search, based on the objectives of this study, four (4) individual strings were created (two (2) for each research question of the paper) and four (4) searches were made: the first and the second are related to the use of software metrics in agile software development methodologies, while the third and fourth with the use of project management metrics in agile software development methodologies. The search strings are shown in Table 1.\n\nStrings “Software metrics in agile development’’ ‘‘Software measurements in agile development’’ ‘‘Project management metrics in agile development’’ ‘Project management measurements in agile development’’\n\n2.4 Screening of studies for inclusion and exclusion\n\nThe next step in the process was to identify all primary studies relevant to the paper's research questions. For this purpose, several inclusion and exclusion criteria were set, applying a systematic procedure. The definition of the inclusion criteria has been based on the aim of the study: first, it was mandatory to evaluate the paper as relevant using software metrics (IC1) or project management metrics (IC2). Second, the use of metrics had to be implemented in the context of agile software development practices (IC3) in each prospective primary study. The definition of exclusion criteria followed the most classic examples from the literature. Studies to be included in the final data set had to satisfy the third, fourth and at least one of the first two Inclusion Criteria (IC), while at the same time they had to satisfy no Exclusion Criteria (EC) as shown in Table 2.\n\nInclusion function (IC1 OR IC2) AND IC3 AND IC4 AND NOT (EC1 OR EC2)\n\nThe inclusion criteria of the systematic study are:\n\nIC1: The study is related to the utilization of software metrics.\n\nIC2: The study is related to leveraging project management metrics.\n\nIC3: The study relates to use of metrics in agile development methodologies\n\nIC4: The metrics presented in the study were used by a research group, an organization or a company\n\nThe exclusion criteria in our mapping study are:\n\nEC1: The study is written in a language other than English\n\nEC2: The study is an editorial, invited/position/opinion paper, keynote, tutorial, poster or panel.\n\n2.5 Search process overview\n\nIn Figure 1, an overview of the search and filtering process is presented along with the number of studies in each phase. Ultimately, 18 primary studies were included in this mapping study and then the data collection process began.\n\n2.6 Data collection\n\nAs part of data extraction, for all studies considered, a set of variables describing each primary research was defined. Thus, for each study, the values of the following variables were recorded:\n\n[V1] Publication Title\n\n[V2] Author: List of authors\n\n[V3] Year: Publication year\n\n[V4] Type of Paper: Conference or journal\n\n[V5] Publication Venue: Name of the conference or journal\n\n[V7] Software Metric(s) usage\n\n[V8] Project management Metric(s) usage\n\n[V9] Development methodologies, providing the context on the use of discussed metrics (e.g., XP, Scrum)\n\n2.7 Data analysis\n\nVariables [V1] – [V5] have been used for literature references. The remaining variables combined with full reading of the articles have been used to answer the research questions of this study. For reporting purposes, common visualization methods (e.g., bar graphs, pie charts, etc.), as well as frequency tables were used. Synthesis of themes from the data was carried out in accordance to the guidelines in [5].\n\n3 RESULTS\n\nIn this section the results of the research are presented. First, some descriptive statistics (using frequencies) are provided for the data set of the primary studies. Based on the selection process, 18 primary studies have been selected. Figure 2 illustrates the number of studies published per 5-year period: it is observed that after 2010 the number of studies has increased. Over the last decade, researchers have been trying to explore the use of software and project management metrics in agile software development methodologies. In addition, Table 3 shows the numbers for each publication venue, and Figure 3 shows the distribution of research by type of publication venue (e.g., Conference, Journal). Of the 18 primary studies, 4 studies were published in journals, 12 in conferences and one each in a workshop and a symposium. The 18 studies have been published in publication venues (e.g., journals, conferences, workshops, and symposia) relevant to various subareas of software engineering, suggesting that the topic is not limited to an exclusive community, but is considered important to the entire software engineering community.\n\nPublication channel Type # % CS&I Journal 1 5.55 JSS Journal 1 5.55 TSE Journal 1 5.55 IEEE Access Journal 1 5.55 PROFES Conference 3 16.65 EUROMICRO Conference 1 5.55 C3S2E Conference 1 5.55 ADC Conference 1 5.55 ICSE-C Conference 1 5.55 RCIS Conference 1 5.55 UKAIS Conference 1 5.55 XP Conference 1 5.55 MERCon Conference 1 5.55 SSBSE Symposium 1 5.55 WETSoM Workshop 1 5.55\n\nTable 4 presents the metric usage categories which will be described in more detail in the subsections of this Section. Figure 4 shows the distribution of agile methods in studies. Table 5 shows the distribution of studies in the metric use categories and Figures 5, 6 shows publication frequency by metric usage category. It is observed that the categories \"improving software quality during development\" and \" Improving the quality of source code\" only concern the use of software metrics, and the categories \"improving processes\" and \"complying with protocols in agile methods\" concern only the use of project management metrics. Also, there are the \"improve estimation & planning\" and \"increase productivity\" categories that involve the use of both types of metrics.\n\nCategories Papers Improving estimation & planning [6] [13] [14] [17] [21] [23] Improving processes [6] [9] [11] [12] [14] [16] [17] Improving software quality during development [14] [15] [17] [19] [20] [22] [23] Improving the quality of source code [18][22] Complying with protocols in agile methods [8][10] Increase productivity [6] [7] [23]\n\nCategories Papers Software metrics Project management metrics Num of papers with s. metrics Num of papers with p.m. metrics Total Num of papers Improving estimation & planning [6] [13] [14] [17] [21] [23] [6] [13] [6] [14] [17] [21] [23] 2 5 6 Improving processes [6] [9] [11] [12] [14] [16] [17] - [6] [9] [11] [12] [14] [16] [17] - 7 7 Improving software quality during development [14] [15] [17] [19] [20] [22] [23] [14] [15] [17] [19] [20] [22] [23]\n\n- 7 - 7 Improving the quality of source code [18] [22] [18][22] - 2 - 2 Complying with protocols in agile methods\n\n[8] [10] - [8] [10]\n\n- 2 2 Increase productivity [6] [7] [23] [23] [6] [7] [23]\n\n1 3 3\n\n3.1 Improving process\n\nIn this subsection, the contribution of metrics to managing and improving development processes is presented.\n\nIn Ilieva et al. [6] a development method, based on extreme programming, is proposed by changing some processes and exploiting metrics by making continuous measurements in each process. The changes proved to have a positive effect on the conduct of the various processes and the achievement of the project's objectives.\n\nIn Alperowitz et al. [9] presented a way to support the teaching efforts of instructors of project-based courses using metrics, which allowed instructors to better monitor development processes but also to intervene when problems arose.\n\nIn Staron et al. [11] a measurement system was presented with a series of metrics that can indicate the existence of bottlenecks in the workflow of the project.\n\nIn Ram et al. [12] it was found that all the companies studied were interested in metrics, which could be used to evaluate processes related to project implementation, testing and planning. These metrics are presented in the survey.\n\nCheng et al. [14] presents a list of metrics and a list of interventions that must be done so that software development managers can successfully manage the processes in a project that uses agile development practices.\n\nIn Oza et al. [16], specific proposals are presented for the selection of metrics but also for the improvement of the measurement process in agile methodologies.\n\nIn Choras et al. [17] a list of metrics was presented to effectively monitor and improve the performance of each process in software development.\n\nIn the development life cycle, there are many processes. According to the articles above, these processes can be optimized and better managed using metrics, to improve the development process as a whole. In particular, it has been shown that measurements can help make a process run smoother and perform better, manage students and learning processes in project-based courses, identify and resolve process bottlenecks, improve the measurement process itself, and also in project management, implementation, testing and planning.\n\n3.2 Complying with protocols in agile methodologies\n\nSometimes is challenging to comply with protocols in agile methodologies. In this subsection, the ways that metrics can contribute to that is presented.\n\nAlleman et al. [8] present the use of the Earn Value metric as a substitute for “Velocity”, in EIA-748 compliant software projects, to enable the use of agile methodologies similar to extreme programming in such project.\n\nIn Mas et al. [10], it is shown how by defining and using a set of metrics and charts in agile development, companies can also comply with certain ISO process standard practices.\n\nIt turns out that measurements, if chosen right or modified appropriate, can contribute to compliance with EIA-748 and ISO standards. This is an indication that the measurements can potentially contribute to compliance with other standards as well.\n\n3.3 Improving software quality during development\n\nImproving the quality of software during development is very critical to the overall success of the project. Here are the relevant findings on how metrics can improve code quality during development.\n\nIn Olague et al. [15], software metrics are used to predict the degree of fault-proneness for a class. In particular, the development of quality classification models to predict defects for both the initial delivery and multiple, successive releases is presented, which contributes to quality assurance processes.\n\nIn Cheng et al. [14] argued that certain metrics can provide useful information and help the company monitor and manage software quality issues during agile software development.\n\nSome of the metrics defined in studies [17] [23] were used to ensure the quality and to improve software stability [23].\n\nThe articles [19] and [20] used software metrics and presented the positive effect their application has on software quality. Also, in [20] it is argued that the impact of traditional metrics is equally positive in both agile and traditional development methodologies.\n\nFinally, [22] presents a method in which the variation of quality metrics and attributes can be observed over time, which is claimed to not only lead to selective improvements, but also to automated \"Quality Gates\" for continuous maintain improvements.\n\nIt has been shown that metrics can improve software quality during development in many ways, such as predicting the degree to which a class is prone to errors, quality assurance and management, and improving software stability, and finally with ongoing maintenance and improving software quality.\n\n3.4 Improving the quality of source code\n\nRefactoring is part of the agile software lifecycle and can also be done after a software product is developed. Here are ways metrics help in this process according to the literature.\n\nIn Mahouachi et al. [18], a set of possible refactorings is gathered and by using software metrics and a genetic algorithm the best refactoring can be selected.\n\nIn addition, [22] presents a method that can be used to improve the quality of refactorings.\n\nSo metrics can be used to improve the quality of the source code basically by providing better refactoring options.\n\n3.5 Improvement of estimation and planning\n\nEstimating and planning are very critical to the success of a project. It was found that metrics can contribute in improving estimation and planning in the ways describe below.\n\n3.5.1 Project management metrics. In Ilieva et al. [6] a method is proposed, mainly utilizing project management metrics, which is claimed to lead to the improvement of project estimation and planning.\n\nIn [14] using metrics to derive insights about a team's capabilities and capability, which is argued to lead to more accurate estimates and planning.\n\nIn [17] and [23] some of the metrics used lead to better estimation and planning by those involved in the project.\n\nIn Huijgens et al. [21] an attempt is made to reveal predictive metrics and specific suggestions are made that may increase the predictability of delivery.\n\n3.5.2 Software metrics. The eXPERT method [6] provides means to improve project estimation and planning. One of its main propositions is to replace speed with productivity, and one of its proposed ways of calculating it involves measuring software LOC (Lines of Code).\n\nIn [13] it is concluded that the System Design Instability metric can be used for estimate and replan software projects in agile processes similar to extreme programming."
    }
}