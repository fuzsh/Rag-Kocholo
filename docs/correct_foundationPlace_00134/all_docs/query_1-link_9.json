{
    "id": "correct_foundationPlace_00134_1",
    "rank": 9,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Comparison_of_version-control_software",
        "read_more_link": "",
        "language": "en",
        "title": "Comparison of version",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/40px-Edit-clear.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Revision_controlled_project_visualization-2010-24-02.svg/80px-Revision_controlled_project_visualization-2010-24-02.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2006-05-27T18:02:41+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Comparison_of_version-control_software",
        "text": "This is a dynamic list and may never be able to satisfy particular standards for completeness. You can help by adding missing items with reliable sources.\n\nThe following tables describe attributes of notable version control and software configuration management (SCM) software systems that can be used to compare and contrast the various systems.\n\nFor SCM software not suitable for source code, see Comparison of open-source configuration management software.\n\nGeneral information[edit]\n\nThe following table contains relatively general attributes of version-control software systems, including:\n\nRepository model, the relationship between copies of the source code repository\n\nClient–server, users access a master repository via a client; typically, their local machines hold only a working copy of a project tree. Changes in one working copy must be committed to the master repository before they are propagated to other users.\n\nDistributed, repositories act as peers, and users typically have a local repository with version history available, in addition to their working copies.\n\nConcurrency model, how changes to the working copy are managed to prevent simultaneous edits from causing nonsensical data in the repository.\n\nLock, changes are disallowed until the user requests and receives an exclusive lock on the file from the master repository.\n\nMerge, users may freely edit files, but are informed of possible conflicts upon checking their changes into the repository, whereupon the version control system may merge changes on both sides, or let the user decide when conflicts arise. Distributed version control systems usually use a merge concurrency model.\n\nSoftware Maintainer Development status Repository model Concurrency model License Supported platforms Financial cost AccuRev SCM Micro Focus International Active Client–server Merge or lock Proprietary Most Java Platforms (Unix-like, Windows, macOS) $350 per seat, quoted on an individual basis. Azure DevOps Microsoft Active Client–server, Distributed Merge or lock Proprietary Windows, cross-platform via Azure DevOps Services Free for up to 5 users in the Azure DevOps Services or for open source projects; else at cost, licensed through MSDN subscription or direct buy. GNU Bazaar Canonical Ltd. last release from 2016, forked as Breezy Distributed and Client–server Merge GPL-2.0-or-later Unix-like, Windows, macOS Free BitKeeper BitMover Inc. unmaintained; last updated December 29, 2018 Distributed Merge Apache-2.0 Unix-like, Windows, macOS Free IBM DevOps Code ClearCase IBM Rational Active Client–server Merge or lock[nb 1] Proprietary Linux, Windows, AIX, Solaris, HP UX, IBM i, OS/390, z/OS, $4600 per floating license (held automatically for 30 minutes minimum per user, can be surrendered manually) Code Co-op Reliable Software Active Distributed Merge MIT Windows $150 per seat CVS The CVS Team[1] maintained but new features not added; last release from 2008 Client–server Merge GPL-1.0-or-later Unix-like, Windows, macOS Free CVSNT March Hare Software[2] and community members Active Client–server Merge or lock GPL or proprietary Unix-like, Windows, macOS, IBM i £425 distribution fee for older version or £85 commercial license for latest version of CVS Suite or Change Management Server darcs The Darcs team Active Distributed Merge GPL-2.0-or-later Unix-like, Windows, macOS Free Dat The Dat team Active Distributed Merge BSD-3-Clause Unix-like, Windows, macOS Free Dimensions CM Serena Software Active Client–server Merge or lock Proprietary Windows, Linux, Solaris, AIX, HP UX, z/OS Paid Fossil D. Richard Hipp Active Distributed Merge BSD-2-Clause POSIX, Windows, macOS, Other Free Git Junio Hamano Active Distributed Merge GPL-2.0-only POSIX, Windows, macOS Free GNU arch Andy Tai unmaintained Distributed Merge GPL Unix-like, Windows, macOS Free IC Manage IC Manage Inc. Active Client–server Merge or lock Proprietary Unix-like, Windows, macOS Paid PTC Integrity PTC Active Client–server Merge or lock Proprietary Unix-like, Windows Paid Mercurial Mercurial Community Active Distributed Merge GPL-2.0-or-later Unix-like, Windows, macOS Free Monotone Nathaniel Smith, Graydon Hoare Active Distributed Merge GPL-2.0-or-later Unix-like, Windows, macOS Free Perforce Helix Core Perforce Software Inc. Active Client–server and Distributed Merge or lock Proprietary Unix-like, Windows, macOS Available as perpetual license and subscriptions; prices vary based on configurations and options[3] Plastic SCM Codice Software Active Client–server and Distributed Merge or lock Proprietary Linux, Windows, macOS Free for up to 3 users, else starting at $7 per user per month for server-hosted, or $23 per user per month for on-premises edition. No perpetual licenses.[4] PVCS Serena Software Active Client–server Lock Proprietary Windows, Unix-like Paid Rational Team Concert IBM Rational Active Client–server[nb 2][5][6] Merge or lock Proprietary Linux, Windows, AIX, Solaris, HP UX, IBM i, OS/390, z/OS, macOS Free for up to 10 users, else paid Revision Control System Thien-Thi Nguyen Active local Merge or lock GPL-3.0-or-later Unix-like Free Source Code Control System (SCCS) Jörg Schilling[nb 3] Active local lock[nb 4] CDDL – proprietary[nb 5] Unix-like, macOS Free CDDL-licensed versions or paid in some UNIX distributions. StarTeam Borland (Micro Focus) Active Client–server Merge or lock Proprietary Windows and Cross-platform via Java based client Paid Subversion (SVN) Apache Software Foundation[7] Active Client–server Merge or lock[nb 6] Apache-2.0 Unix-like, Windows, macOS Free Surround SCM Perforce Software Inc. Active Client–server Merge or lock Proprietary Linux, Windows, macOS $595 per user; $29/month subscription Synergy IBM Rational Active Client–server and Distributed Merge or lock Proprietary Linux, Windows, Unix-like Paid[8] Vault SourceGear LLC Active Client–server Merge or lock Proprietary Unix-like, Linux, Windows $300 per user Vesta Kenneth Schalk; Tim Mann,[9][10] web site not updated since 2006; latest release February 15, 2009 ( ) Distributed NFS-protocol-emulation choice to optionally confederate clients and/or servers lock on branch; merge branch-to-branch LGPL Tru64, Linux Free Visual SourceSafe (VSS) Microsoft serious bug fixes only Shared Folder Merge or lock Proprietary Windows $500 per license approximately, or single license included with each MSDN subscription. Software Maintainer Development status Repository model Concurrency model License Supported platforms Financial cost\n\nTechnical information[edit]\n\nThe subsequent table shows technical details of some well-known version-control software. These are classified based on following headers:\n\nTable explanation\n\nSoftware: The name of the application that is described.\n\nProgramming language: The coding language in which the application is being developed\n\nStorage Method: Describes the form in which files are stored in the repository. A snapshot indicates that a committed file(s) is stored in its entirety—usually compressed. A changeset, in this context, indicates that a committed file(s) is stored in the form of a difference between either the previous version or the next.\n\nScope of change: Describes whether changes are recorded for individual files or for entire directory trees.\n\nRevision IDs: are used internally to identify specific versions of files in the repository. Systems may use pseudorandom identifiers, content hashes of revisions, or filenames with sequential version numbers (namespace). With Integrated Difference, revisions are based on the Changesets themselves, which can describe changes to more than one file.\n\nNetwork protocols: lists the protocols used for synchronization of changes.\n\nSource code size: Gives the size of the source code in megabytes.\n\nSoftware Programming language Storage method Scope of change Revision IDs Network protocols Source code size AccuRev SCM C++, Java Changeset File Number pair NN/NN custom Un­known Azure DevOps C++ and C# Changeset File and Tree Numbers SOAP over HTTP or HTTPS, Ssh Un­known GNU Bazaar Python 2, Pyrex (optional), C[nb 7] Snapshot Tree Pseudorandom custom, custom over ssh, custom over HTTP, HTTP, SFTP, FTP, email bundles,[nb 8] WebDAV (with plugin) 4.1 MB BitKeeper C Changeset Tree Changeset keys, numbers custom, HTTP, rsh, ssh, email 99 MB CA Software Change Manager C, C++, Java, HTML Changeset and Snapshot File and Tree[citation needed] Numbers HTTP, TCP/IP Un­known IBM DevOps Code ClearCase C, Java, Perl Changeset File and Tree [11] Numbers custom (CCFS), custom (MVFS filesystem driver), HTTP Un­known Code Co-op C++ Changeset Un­known User ID-Ordinal e-mail (MAPI, SMTP/POP3, Gmail), LAN Un­known CVS C Changeset File Numbers pserver, ssh 10.3 MB CVSNT C++ Changeset File and Tree[12] Numbers custom over ssh, sspi, sserver, gserver, pserver 55 MB darcs Haskell Changeset (Patch)[nb 9] Tree n/a custom over ssh, HTTP, email 1.7 MB Dimensions CM C, C++, Java, C# Snapshot or changeset File and Tree Numbers Custom, HTTP/HTTPS Un­known Fossil C Snapshot or changeset [13] Tree SHA-1 or SHA-3 hashes [14] HTTP/HTTPS, custom over ssh 7.2 MB[nb 10] Git C, shell scripts, Perl Snapshot Tree SHA-1 hashes custom (git), custom over ssh,[15] HTTP/HTTPS, rsync, email, bundles 23 MB [16] GNU arch C, shell scripts Changeset Tree Numbers HTTP, WebDAV Un­known IC Manage C++, C Changeset Un­known Numbers custom Un­known Mercurial Python, C Changeset Tree Numbers,[nb 11] SHA-1 hashes custom over ssh, HTTP, email bundles (with standard plugin) 20 MB MKS Integrity C, Java Changeset File Numbers custom, HTTP Un­known Monotone C++ Hybrid[nb 12] Tree SHA-1 hashes custom (netsync), custom over ssh, file system 4.4 MB Perforce Helix Core C++, C Changeset Tree Numbers custom Un­known PVCS C++, C Changeset File Numbers Un­known Un­known Rational Team Concert Java Changeset Tree Numbers REST services over HTTP/HTTPS Un­known Revision Control System C Changeset File Numbers File system 5.3 MB Source Code Control System C Changeset File Numbers NFS 1.3 MB StarTeam C++, C, Java Snapshot File and Tree MD5 hashes custom, TCP/IP Un­known Subversion C Changeset and Snapshot Tree Numbers custom (svn), custom over ssh, HTTP and SSL (using WebDAV) 41 MB Surround SCM C++ Changeset File and Tree Numbers TCP/IP Un­known Synergy Java Changeset (text), Snapshot(binary) File Numbers custom, custom over ssh, HTTP Un­known Vault C# Changeset File and Tree Numbers HTTP, HTTPS Un­known Vesta C++ Snapshot Tree Un­known NFS 15.8 MB Visual SourceSafe C Snapshot File Numbers SMB, DCOM Un­known Software Programming language Storage method Scope of change Revision IDs Network protocols Source code size\n\nFeatures[edit]\n\nThe following table classifies some well-known software on the basis of its features and capabilities.\n\nTable explanation\n\nSoftware: The name of the application that is described.\n\nAtomic commits: refers to a guarantee that all changes are made, or that no change at all will be made.\n\nFile renames: describes whether a system allows files to be renamed while retaining their version history.\n\nMerge file renames: describes whether a system can merge changes made to a file on one branch into the same file that has been renamed on another branch (or vice versa). If the same file has been renamed on both branches then there is a rename conflict that the user must resolve.\n\nSymbolic links: describes whether a system allows revision control of symbolic links as with regular files. Versioning symbolic links is considered by some people a feature and some people a security breach (e.g., a symbolic link to /etc/passwd). Symbolic links are only supported on select platforms, depending on the software.\n\nPre-/post-event hooks: indicates the capability to trigger commands before or after an action, such as a commit, takes place.\n\nSigned revisions: refers to integrated digital signing of revisions, in a format such as OpenPGP.\n\nMerge tracking: describes whether a system remembers what changes have been merged between which branches and only merges the changes that are missing when merging one branch into another.\n\nEnd of line conversions: describes whether a system can adapt the end of line characters for text files such that they match the end of line style for the operating system under which it is used. The granularity of control varies. Subversion, for example, can be configured to handle EOLs differently according to the file type, whereas Perforce converts all text files according to a single, per-client setting.\n\nTags: indicates if meaningful names can be given to specific revisions, regardless of whether these names are called tags or labels.\n\nInternational support: indicates if the software has support for multiple language environments and operating system\n\nUnicode filename support: indicates if the software has support for interoperations under file systems using different character encodings.\n\nSupports large repos: Can the system handle repositories of around a gigabyte or larger effectively?\n\nSoftware Atomic commits File renames Merge file renames Symbolic links Pre-/post-event hooks Signed revisions Merge tracking End of line conversions Tags International support Unicode filename support Supports large repos AccuRev SCM Yes Yes Partial[nb 13] Yes Yes Yes Yes Yes — Yes Yes[17] Yes[18][19] Azure DevOps Yes Yes Yes Yes Yes No Yes Yes Yes Yes Yes Yes GNU Bazaar Yes Yes Yes Yes Yes Yes Yes Yes[20] Yes Yes Yes Un­known BitKeeper Yes Yes Yes Yes Yes Un­known Yes Yes Yes Un­known Un­known Yes CA Software Change Manager Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Un­known IBM DevOps Code ClearCase Partial[nb 14] Yes Yes Yes Yes Yes Yes Yes Yes Yes[21] Un­known Yes Code Co-op Yes Yes Yes No Partial No No No Yes Un­known Un­known Un­known CVS No No No No Partial No No Yes Yes Un­known No Yes CVSNT Yes Yes Yes Yes Yes No Yes Yes Yes Yes Yes Yes darcs Yes Yes Yes No[nb 15] Yes Yes —[nb 16] No Yes No Yes[nb 17] Un­known Dimensions CM Yes Yes Yes No Yes Un­known Yes Yes Yes [nb 18] No [nb 19] Yes Yes Fossil Yes Yes Yes Yes No Yes Yes Yes[nb 20] Yes Yes Yes Un­known Git Yes Partial[nb 21] Yes Yes Yes Yes[nb 22] Yes Yes Yes Yes Yes[nb 23] Partial[nb 24] GNU arch Yes Yes Un­known Yes Yes Yes Un­known Un­known Yes Un­known Un­known Un­known IC Manage Yes Yes No Yes Yes Yes Yes Yes Yes Yes Un­known Un­known MKS Integrity Yes Yes Yes No Yes Yes[nb 25] Yes[nb 26] Yes Yes Yes Yes Un­known Mercurial Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes[nb 27] Partial[nb 28] Yes[22] Monotone Yes Yes Yes No[nb 29] Yes Yes, mandatory Yes Yes Yes Un­known Yes Un­known Perforce Helix Core Yes Yes[23] Yes[24] Partial[nb 30] Yes No Yes[25] Yes Yes Yes[26] Yes[27] Yes Rational Team Concert Yes Yes Yes Yes Yes[nb 31] Yes Yes Yes Yes Yes Yes Un­known Source Code Control System Yes No — — No No Yes No No Partial[nb 32] Yes Yes StarTeam Yes[nb 33] Yes Un­known Yes No No Yes Yes Yes Yes Un­known Yes Subversion Yes Yes[nb 34] Partial[nb 35] Yes Yes No[nb 36] Yes.[nb 37] Yes Partial[nb 38] Yes Yes Yes Surround SCM Yes Yes Yes Yes Yes Yes Yes Yes Yes[28] Yes Yes Yes Synergy Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes Yes[nb 39] Yes Vault Yes Yes Yes No Yes No No Yes Yes Un­known Un­known Un­known Vesta Yes Yes Un­known Un­known Yes No No No Yes No Un­known Yes Visual SourceSafe No No[nb 40] Un­known No Yes No No Un­known Yes Yes Un­known Un­known Software Atomic commits File renames Merge file renames Symbolic links Pre-/post-event hooks Signed revisions Merge tracking End of line conversions Tags International support Unicode filename support Supports large repos\n\nAdvanced features[edit]\n\nThe following are few more advanced features and capabilities few version-control softwares:\n\nTable explanation\n\nKeyword expansion: supports automatic expansion of keywords such as file revision number.\n\nInteractive commits: interactive commits allow the user to cherrypick common lines of code used to anchor files (patch-hunks) that become part of a commit (leaving unselected changes as changes in the working copy), instead of having only a file-level granularity.\n\nExternal references: embedding of foreign repositories in the source tree\n\nPartial checkout/clone: ability to check out or clone only a specified subdirectory from a repository.\n\nPermissions: tracks file permission bits in the revision history.\n\nTimestamp preservation: overwrites the last modified filesystem attribute with the commit time upon checkout.\n\nCustom automatic merge tool: automatic merging can be attempted by any tool of the user's choice (hopefully configurable on a per-file basis)\n\nSupported formats: either read/write support or read-only (conversion, potentially repeated)\n\nShared build cache of derived objects: the ability to automatically substitute (wink-in) derived-objects that were built by other confederated clients that share exactly the same dependencies instead of rebuilding them locally\n\nSoftware Keyword expansion Interactive commits External references Partial checkout/clone Permissions Timestamp preservation Custom automatic merge tool Supported formats Shared build cache of derived objects AccuRev SCM Yes Un­known Yes Yes execution bit only Yes Yes git (bi-dir)[29] No Azure DevOps No Yes Un­known Yes Yes Un­known Yes Un­known Un­known GNU Bazaar Yes[30] Yes[31] Yes[32] No execution bit only No[nb 41] Yes[33] bzr, subversion,[34] git,[35] hg,[36] any that has a fastexporter No BitKeeper POSIX and RCS Yes Yes Yes Yes Yes Yes bitkeeper No CA Software Change Manager No Yes No Yes execution bit only Yes Yes CA Software Change Manager No IBM DevOps Code ClearCase Yes[37] No No Yes Yes Yes[nb 42] Yes ClearCase Yes CVS RCS No Yes Yes[nb 43] Partial[nb 44] Yes No cvs No CVSNT RCS Yes[nb 45] Yes[nb 46] Yes[nb 47] Yes Yes No cvs Yes[nb 48] darcs No Yes No No[nb 49] Partial[nb 50] No conflicts only darcs No Dimensions CM Yes No Yes[nb 51] Yes Yes Yes Yes Migration from ClearCase, Subversion, CVS, PVCS, ChangeMan DS Un­known Fossil No Yes Yes[nb 52] No execution bit only[38] No No fossil (uses sqlite), any that has a fastexporter;[39] migration from git and svn[40] No Git No[nb 53] Yes[nb 54] Yes[41] Yes[42] execution bit only No[nb 55] Yes git, cvs, subversion, hg, any that has a fastexporter No Mercurial Yes[43] Yes[44] Yes[45] Yes[46] execution bit only through (alpha) extension[47] Yes[48] hg, subversion,[49] lossless two-way push to and pull from git,[50] migration from any other format supported by the Convert extension:[51] CVS, Darcs, Bazaar, Monotone, GNU Arch, and Perforce[52] No Perforce Helix Core Yes[53] No No Yes Yes Yes[53] Yes[53] Perforce No Rational Team Concert No Yes Yes Yes Yes Un­known Yes N/A No Source Code Control System Yes No — Yes execution bit only some variants[citation needed] No sccs No Surround SCM Yes No No Yes No Yes Yes[nb 56] Surround No Subversion Yes[54] Partial[nb 57] Yes[55] Yes execution bit only Partial[nb 58] Yes[nb 59] subversion No Vesta No No Yes via SDL No Un­known Yes No Vesta Yes Visual SourceSafe Yes Un­known Un­known Yes Yes Un­known Yes Un­known No Software Keyword expansion Interactive commits External references Partial checkout/clone Permissions Timestamp preservation Custom automatic merge tool Supported formats Shared build cache of derived objects\n\nBasic commands[edit]\n\nThis table gives further insights about commands provided in the version-control softwares.\n\nTable explanation\n\nRepository init: Create a new empty repository (i.e., version control database)\n\nclone: Create an identical instance of a repository (in a safe transaction)\n\npull: Download revisions from a remote repository to a local repository\n\npush: Upload revisions from a local repository to a remote repository\n\nLocal branches: Create a local branch that does not exist in the original remote repository\n\ncheckout: Create a local working copy from a (remote) repository\n\nupdate: Update the files in a working copy with the latest version from a repository\n\nlock: Lock files in a repository from being changed by other users\n\nadd: Mark specified files to be added to repository at next commit\n\nremove: Mark specified files to be removed at next commit (note: keeps cohesive revision history of before and at the remove.)\n\nmove: Mark specified files to be moved to a new location at next commit\n\ncopy: Mark specified files to be copied at next commit\n\nmerge: Apply the differences between two sources to a working copy path\n\ncommit: Record changes in the repository\n\nrevert: Restore working copy file from repository\n\ngenerate bundle file: Create a file that contains a compressed set of changes to a given repository\n\nrebase: Forward-port local commits to the updated upstream head\n\nNote: Commands in green rectangles that are not surrounded by [square brackets] are at an interactive command-line prompt. Text in [square brackets] is an explanation of where to find equivalent functionality.\n\nSoftware Repository init clone pull push Local branches checkout update lock add remove move copy merge commit revert generate bundle file rebase AccuRev SCM mkdepot N/A N/A N/A mkstream mkws update anchor add defunct move cp [then] add – incl -s – ln merge keep – promote purge – revert N/A chstream Azure DevOps using Git clone using Git get commit shelveset checkout get lock add delete rename using Git merge commit undo using Git get GNU Bazaar init – init –no-tree[nb 60] – init-repo – init-repo –no-trees[nb 61] branch – branch –no-tree[nb 62] pull push init – branch checkout – checkout –lightweight[nb 63] update N/A add rm mv N/A merge commit revert send rebase[nb 64] BitKeeper setup clone pull -R push clone co pull Un­known add rm mv cp pull commit undo makepatch collapse IBM DevOps Code ClearCase init N/A N/A N/A N/A checkout update lock – unlock mkelem rmname mv N/A merge checkin uncheckout – rmver N/A findmerge CVS init N/A N/A N/A N/A checkout update Un­known add rm N/A N/A update -j commit remove [then] update N/A N/A CVSNT init N/A N/A N/A N/A checkout update edit add rm rename N/A update -j commit update -C N/A N/A darcs init clone pull [56] push N/A[nb 65] clone pull[56] Un­known add remove move N/A pull – push record revert send -o[nb 66] rebase Fossil new – open clone pull push branch – commit –branch clone/open update N/A add rm/del mv/rename N/A merge commit revert Fossil's repository is single sqlite file itself N/A Git init – init –bare clone – clone –bare fetch push branch checkout pull N/A add rm mv cp [then] git add[nb 67] merge commit reset –hard bundle rebase Mercurial init clone pull push bookmark[nb 68] update – up – checkout – co pull -u N/A add remove – rm move – mv copy – cp merge commit – ci revert bundle rebase[57] Monotone init clone pull push N/A checkout update Un­known add drop rename N/A merge commit revert N/A N/A Perforce Helix Core p4 client && p4 sync p4 sync p4 sync p4 submit Requires migration to recent streams feature edit sync lock – unlock add delete move copy integrate submit revert Un­known N/A Source Code Control System create N/A N/A N/A admin -fb get (readonly) – edit get (readonly) – edit N/A[nb 69] create N/A N/A N/A edit -i delta get -r N/A edit -i Subversion svnadmin create svnadmin hotcopy [work-around]: svnadmin load [work-around]: svnadmin dump N/A checkout – co update – up lock add delete – del – remove – rm move – mv – rename – ren copy – cp merge commit – ci revert N/A N/A Surround SCM mkmainline N/A N/A N/A mkbranch checkout get checkout add rm move N/A merge checkin voidcheckout N/A rebase Vesta vcreate vrepl vrepl vrepl N/A vcheckout vadvance vcheckout [… then] vcheckin[nb 70] vrm mv [then] vcheckin[nb 71] cp [then] vcheckin[nb 72] vdiff vcheckin vcheckin -c 0 vmake [or] vesta vadvance Visual SourceSafe ? Un­known Un­known Un­known N/A Get Latest Get Latest Check Out Add Files Delete ? Un­known ? Check In Undo Check Out Un­known Un­known Software Repository init clone pull push Local branches checkout update lock add remove move copy merge commit revert generate bundle file rebase\n\nAdvanced commands[edit]\n\nThe table shows the commands to execute common tasks and functionalities of few version-control softwares.\n\nTable explanation\n\nCommand aliases: create custom aliases for specific commands or combination thereof\n\nLock/unlock: exclusively lock a file to prevent others from editing it\n\nShelve/unshelve: temporarily set aside part or all of the changes in the working directory\n\nRollback: remove a patch/revision from history\n\nCherry-picking: move only some revisions from a branch to another one (instead of merging the branches)\n\nBisect: binary search of source history for a change that introduced or fixed a regression\n\nIncoming/outgoing: query the differences between the local repository and a remote one (the patches that would be fetched/sent on a pull/push)\n\nGrep: search repository for lines matching a pattern\n\nRecord: include only some changes to a file in a commit and not others\n\nNote: Commands in green rectangles that are not surrounded by [square brackets] are at an interactive command-line prompt. Text in [square brackets] is an explanation of where to find equivalent functionality.\n\nSoftware Command aliases Lock/unlock Shelve/unshelve Rollback Cherry-picking Bisect Incoming/outgoing Grep Record AccuRev SCM No enable file locking No revert – purge promote No No No Un­known Azure DevOps Yes lock/unlock shelve/unshelve rollback merge No Un­known Un­known No GNU Bazaar [in '.bazaar/bazaar.conf' file] No shelve/unshelve uncommit merge (non-tracking) bisect (bisect plugin) missing –theirs-only/missing –mine-only grep (grep plugin) No BitKeeper Un­known Un­known park/unpark undo Un­known bisect changes -R/-L grep Un­known CVSNT [in '.cvsrc' file] edit -x/unedit[nb 73] No admin -o[nb 74] yes[nb 75] annotate[nb 76] No no[58] No Darcs No No revert/unrevert unrecord yes[nb 77] test –bisect pull/push –dry-run No record Fossil No No stash pop/stash apply[nb 78] merge –rollback merge –cherrypick bisect No search No Git [in '.gitconfig' file] No stash/stash pop[nb 79] reset HEAD^ cherry-pick bisect cherry grep add -p Mercurial [in '.hgrc' file] No shelve/unshelve (bundled extension[59]) strip (bundled extension[60]) graft(core[61]) or transplant(bundled extension[62]) bisect incoming/outgoing grep commit –interactive Monotone [in monotonerc] No No kill_rev_locally[nb 80] pluck bisect No No Un­known Perforce Helix Core via broker[63] lock/unlock shelve/unshelve obliterate integ[64] Un­known interchanges grep Un­known Subversion No lock/unlock shelve/unshelve[nb 81] No svnmerge cherry-picking Third party tool[nb 82] status -u[nb 83] No No Surround SCM No checkout shelf rollback duplicatechanges No diff search No Software Command aliases Lock/unlock Shelve/unshelve Rollback Cherry-picking Bisect Incoming/outgoing Grep Record\n\nUser interfaces[edit]\n\nThe table gives Web, GUI and IDE Interface specification of few version-control softwares.\n\nTable explanation\n\nSoftware: The name of the application that is described.\n\nWeb Interface: Describes whether the software application contains a web interface. A web interface could allow the software to post diagnostics data to a website, or could even allow remote control of the software application.\n\nGUIs: A GUI is a graphical user interface. If a software product features a GUI its functionality can be accessed through application windows as opposed to accessing functionality based upon typing commands at the command prompt such as a DOS interface.\n\nPlug-ins: functions are available through an integrated development environment. Minimum function should be to list the revision state of a file and check in/check out files.\n\nSoftware Web interfaces Stand-alone GUIs Integration and/or Plug-ins for IDEs AccuRev SCM Yes Windows (incl. Explorer integration), Linux, Unix, macOS, BeOS available IntelliJ IDEA, Eclipse, Visual Studio Azure DevOps included (SharePoint Server used for web services) Windows included; macOS, Unix available Visual Studio. Java client for Eclipse IDE and IntelliJ IDEA (standard in Ultimate Edition) GNU Bazaar can use a plain webserver Olive, bzr-gtk (GTK+), Bazaar Explorer (Qt), QBzr (Qt), TortoiseBzr (Windows) Eclipse (BzrEclipse, QBzrEclipse), Visual Studio (bzr-visualstudio), TextMate (TextMateBundle), Komodo IDE, Wing IDE BitKeeper included included (bkd) Un­known CA Software Change Manager included Eclipse-based GUI Eclipse, MS Visual Studio IBM DevOps Code ClearCase included, Clearcase Web Interface older: MS Windows native, Motif-based GUI for Unix-like systems, TSO client for z/OS. Emacs, Eclipse ( IBM Proprietary, Eclipse-CCase ), Visual Studio (IBM proprietary), KDevelop (standard?), IntelliJ IDEA (standard in Ultimate Edition) Code Co-op Not necessary since entire project is replicated locally Windows Un­known CVS cvsweb, ViewVC, others TortoiseCVS (Windows Explorer), TkCVS (Tcl/Tk), WinCVS, macOS, GTK, Qt available Eclipse (Team), KDevelop (standard), IntelliJ IDEA (standard in Community and Ultimate Editions), Emacs (standard VC), Komodo IDE, BBEdit, Wing IDE CVSNT cvsweb, ViewVC, others Windows, macOS, OS/400, GTK, Qt available All those that support CVS, plus commercial plugins for SCCI, Bugzilla, Build darcs darcs.cgi included; darcsweb, Trac under development; TortoiseDarcs (Windows Explorer), macOS (alpha), Eclipse (eclipsedarcs), Emacs (vc-darcs.el) Dimensions CM Yes Windows (incl. explorer integration) Eclipse, Visual Studio, IntelliJ IDEA, XCode, Powerbuilder Fossil Embedded webserver included (ui/server mode), ability to run multiple repositories via CGI mode fuel-scm Un­known Git Gitweb, wit, cgit, GitLab, GitHub, gitorious, Trac, Kallithea, Bitbucket, Stash, Springloops, Bonobo Git Server, Gitea, Gogs gitk, git-gui (Tcl/Tk), tig, Gitbox (macOS), TortoiseGit, qgit, gitg (GNOME/GTK), (h)gct (Qt), git-cola (Qt), Git Extensions (Windows), GitEye, SmartGit/Hg, Tower, SourceTree (macOS/Windows), Sprout (macOS), GitX (macOS), GitUp (macOS), GitKraken, Sublime Merge Aptana 3 Beta (Aptana Studio 3 with Git Integration); Atom; Eclipse (JGit/EGit); Helix TeamHub; Netbeans (NbGit); KDevelop; Visual Studio (Git Extensions); Emacs (extension for standard VC); SAP Web IDE; TextMate (Git TextMate Bundle); Vim (VCSCommand plugin and fugitive plugin); IntelliJ IDEA >8.1 (standard in Community and Ultimate Editions); Komodo IDE; Anjuta; XCode, Wing IDE; PyCharm GNU arch ArchZoom ArchWay (GTK2), TlaLog Emacs (standard VC) IC Manage included Windows, Linux, Unix, macOS Emacs, Cadence Design Framework, Synopsys Custom Designer MKS Integrity Yes Windows, Linux, Unix, Solaris, AIX, Eclipse, Microsoft Visual Studio, Perforce and others. Also provides support for the industry standard Source Code Control (SCC) interface[65] Mercurial included,[nb 84] Trac, Kallithea Hgk (Tcl/Tk), (h)gct (Qt), TortoiseHg (Windows Explorer, Nautilus), MacHg,\n\nMacMercurial, Murky, SourceTree (Windows/macOS), TortoiseHg, SmartGit/Hg\n\nIntelliJ IDEA (hg4idea 3rd party plugin), Eclipse (Mercurial Eclipse), NetBeans, Visual Studio 2008, Emacs, Vim (VCSCommand plugin), Komodo IDE, Eric Python IDE, Wing IDE Monotone ViewMTN, TracMonotone, Monotone-Viz (GTK+), Guitone (Qt), Monotone Browser (GTK+, Perl) Un­known Perforce Helix Core included, P4Web, P4FTP Windows, Linux, Mac macOS Eclipse, Visual Studio, Matlab; Game Engines: Unity, Unreal, Amazon Lumberyard; Graphics: Autodesk Maya, 3ds max, Adobe PS Rational Team Concert Yes Eclipse-based GUI Eclipse integration; MS Visual Studio integration(Limited) StarTeam included Windows, Java, Eclipse, Visual Studio, BDS2006 integration, plus Java command-line IntelliJ IDEA (standard in Ultimate Edition), Visual Studio, JBuilder, Eclipse Subversion Apache 2 module included, WebSVN, ViewSVN, ViewVC, Trac, SharpForge, sventon, Springloops Java, KDESVN, macOS[66] (including Finder integration), Nautilus, Qt, RabbitVCS, RapidSVN, SourceTree (macOS), TortoiseSVN (Windows Explorer) Anjuta, BBEdit, Eclipse (Subclipse, Subversive), Emacs (standard VC), IntelliJ IDEA (standard in Community and Ultimate Editions), KDevelop (standard), Komodo IDE, MonoDevelop (standard), Netbeans, RabbitVCS (for GEdit), TextMate (SVNMate plugin), Visual Studio (AnkhSVN, VisualSVN), Wing IDE. See also Comparison of Subversion clients Surround SCM Yes Windows, macOS, Linux Eclipse, IntelliJ IDEA, JDeveloper, NetBeans, Visual Studio, WebStorm Synergy via Telelogic Change interface Windows (incl. explorer integration), Linux, Unix Eclipse (Telelogic proprietary), Visual Studio (Telelogic proprietary), IntelliJ IDEA (Telelogic proprietary) Vault included Windows, Unix-like, macOS Visual Studio 2003 and higher, Eclipse 3.2 and higher Vesta VestaWeb No No Visual SourceSafe none included; SSWI, VSS Remoting Windows included; Linux, macOS and Solaris using SourceOffSite; any Java VM using Sourceanywhere for VSS Visual Studio, IntelliJ IDEA (standard in Ultimate Edition) Software Web interfaces Stand-alone GUIs Integration and/or plug-ins for IDEs\n\nHistory and adoption[edit]\n\nHere is few meta-data and historic background of few version-control softwares\n\nTable explanation\n\nSoftware: The name of the application that is described.\n\nHistory: briefly describes the software's origins and development.\n\nNotable current users: is a list of well known projects using the software as their primary revision control system, excluding the software itself, followed by a link to a full list if available.\n\nSoftware History Notable current users AccuRev SCM First publicly released in 2002 Azure DevOps Server First publicly released in March, 2006 as Visual Studio Team System, renamed to Team Foundation Server in 2010 and Azure DevOps Server in 2019. Microsoft Azure DevOps Services First publicly released in 2012 as Team Foundation Service, renamed to Visual Studio Online in 2013, Visual Studio Team Services in 2015 and Azure DevOps in 2018. Microsoft GNU Bazaar Initial release March 26, 2005. Loosely related to baz. Sponsored by Canonical Ltd. BitKeeper Initial release May 4, 2000. Influenced by Sun WorkShop TeamWare CA Software Change Manager Original company founded in 1977; CA SCM (then called CCC/Harvest) first released in 1995. IBM DevOps Code ClearCase Developed beginning in 1990 by Atria Software, following concepts developed by Apollo Computer in DSEE during the 1980s. The most recent version is 9.0.0, released in March 2016. Code Co-op The first distributed VCS, demoed in 1997,[67] released soon after. CVS First publicly released July 3, 1986; based on RCS NetBSD, OpenBSD CVSNT First publicly released 1998; based on CVS. Started by CVS developers with the goal adding support for a wider range of development methods and processes. darcs First announced on April 9, 2003 Dimensions CM Developed by SQL Software under the name \"PCMS Dimensions\" during the late 1980s (PCMS standing for Product Configuration Management). Through number of company acquisitions the product was released under names \"PVCS Dimensions\" (1990s, Intersolv), \"Dimensions\" (early 2000s, Merant), \"ChangeMan Dimensions\" (2004, Serena Software) and finally \"Dimensions CM\" (since 2007, Serena Software). Fossil Fossil and SQLite have used Fossil since 21 July 2007. Git Started by Linus Torvalds in April 2005, following the BitKeeper controversy.[68] Linux kernel, Android, OpenJDK, Bugzilla, DragonFly BSD, FreeBSD, gcc,[69] GNOME, GNU Emacs, GnuPG,[70] GRUB2, KDE, MySQL, Perl 5,[71] PostgreSQL, Python,[72] X.Org, Cairo, Qt Development Frameworks, Samba, OpenEmbedded, Ruby, Ruby on Rails, Wine, Fluxbox, Openbox, Compiz Fusion, XCB, Xen, ELinks, XMMS2, e2fsprogs, GNU Core Utilities, DokuWiki, Drupal, LibreOffice, MediaWiki,[73] Mono, ASP.NET MVC, ADO.NET Entity Framework, NuGet, jQuery and many of its plugins, OpenCV, Twitter, Netflix, LinkedIn, Wireshark, Django, many companies like Eclipse Foundation, Ericsson, Microsoft,[74] Huawei, Apple, Amazon, LG GNU arch Started by Tom Lord in 2001, it later became part of the GNU project. Lord resigned as maintainer in August 2005. IC Manage Developed by IC Manage, Inc which was founded in 2003 by Shiv Sikand and Dean Drako. PTC Integrity Originally developed by MKS Software. Purchased by PTC in May 2011[75] Mercurial Started April 6, 2005 by Matt Mackall, following the BitKeeper controversy.[68] First released on April 19, 2005 Monotone First released in April 2003 Perforce Helix Core Developed by Perforce Software, Inc which was founded in 1995 by Christopher Seiwald. Rational Team Concert Version 1.0 released in June, 2008 Revision Control System July 1985 Source Code Control System Started by Marc Rochkind in 1972 (binary history files, written in Snobol on IBM-370,[76] SCCSv4 with text history files was published February 18, 1977.[77] The same history file format is still used in SCCS 5.0.[78] StarTeam Version 1.0 1995;[79] Developed by StarBase software, acquired by Borland(which was acquired by Micro Focus). Synergy Developed beginning in 1988 by Caseware, as AmplifyControl. The company was renamed Continuus in 1994, where the product became better known as Continuus/CM. Continuus was acquired by Telelogic in 1999 shortly after going public; the product was renamed Telelogic Synergy. IBM acquired Telelogic in 2008 for integration into their Rational tool suite. The product is now known as IBM Rational Synergy. Visual SourceSafe originally created by a company called One Tree Software, version 3.1. Company was bought by Microsoft which released version 4.0 of VSS around 1995 Software History Notable current users\n\nSee also[edit]\n\nComparison of source-code-hosting facilities\n\nList of version-control software\n\nNotes[edit]\n\nReferences[edit]\n\n[edit]"
    }
}