As an open source project gathers momentum and the possibility of corporate engagement beckons, developers can frequently be heard saying they need to start a foundation for their project.

But do they? Ask many of the people who have gone down that path, and they’re likely to advise against it. The bureaucracy is daunting, the skills needed to run such an organization are similar to those of any other business, and there’s a very real risk the IRS will refuse to grant tax-exempt status.

Software foundations (and other legal structures colloquially described by that term) play a key role in today’s open source environment. When an open source project reaches an advanced stage, it needs to consider how best to protect itself from a legal standpoint — as well as how to protect the interests of its individual contributors — but forming a foundation is just one of several options.

Smaller projects are often best served by joining an organization like the Apache Software Foundation or the Eclipse Foundation to benefit from their proven approaches to governance and fiscal stewardship. Alternatively, a fiscal steward such as the Software Freedom Conservancy or Software in the Public Interest may provide the best solution if your project is a bit larger and your needs a bit more specific.

Starting a foundation should be the recourse only of the exceptional. A large, widely known project with unique legal and business needs and sustaining significant revenues will require its own entity. Today’s foundations feature a wide range of attributes, often holding shared assets such as money, trademarks, and copyrights; providing infrastructure; and sometimes even employing staff.

The recent paper “The Rise and Evolution of the Open Source Software Foundation,” by Paula Hunter and Stephen Walli, looks at the way these organizations have grown and cites the increasing need for effective software foundations. Hunter and Walli outline the functions of foundations and explain why different types of foundations have arisen to meet varied needs. Their discussion provides a useful guide for those wishing to create a state-of-the-art open source organization.

But it’s worth remembering that forming a foundation isn’t a cure-all for community problems within a project. Instead, it solidifies the solutions you devise together in your community, guaranteeing the trust and governance to which you have all agreed for future generations of your community. You need to solve community problems before committing to a foundation or risk making those problems a permanent part of your community governance. A foundation is not a magic wand — or it could become one, with unintended consequences. Remember “The Sorcerer’s Apprentice?”

Suppose, however, that your project is a good candidate: large, high-profile, and accumulating significant revenue. You’ve found solutions to your community issues, checked out available fiscal stewards, and feel that no existing group quite fits the needs your project. Before you create a new foundation, though, you’ll need to confront a truckload of questions. Which country to incorporate in? Where in that country? Which model to use: public benefit, cooperative, or collective benefit? What about staffing? Raising money?

All those questions have been fully considered by many before you. A diverse collection of open source foundations already exists, and the leaders of some of the best known will be joining me to deliver a tutorial on the essentials of open source community foundations — Community Foundations 101 — at the Open Source Convention in Portland, Ore., at the end of July.