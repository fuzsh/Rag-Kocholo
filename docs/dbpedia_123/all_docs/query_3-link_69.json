{
    "id": "dbpedia_123_3",
    "rank": 69,
    "data": {
        "url": "http://www.adventureclassicgaming.com/index.php/site/features/105/",
        "read_more_link": "",
        "language": "en",
        "title": "Adventure Classic Gaming",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "adventure game",
            "interactive fiction",
            "graphic adventure",
            "text adventure",
            "adventure gaming",
            "classic gaming",
            "retro gaming",
            "classic game",
            "classic adventure game",
            "review",
            "preview",
            "interview",
            "feature",
            "gallery",
            "screenshot",
            "forum",
            "cheat",
            "walkthrough",
            "faq",
            "hint",
            "guide",
            "spoiler",
            "help",
            "solution",
            "computer game",
            "video game",
            "pc game",
            "console game"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "What is an ideal adventure game? The answer to this question has eluded adventure game designers, developers, and players. Many so-called adventure games of today have blurred the line that, in the past, has so clearly defined the adventure genre of yesteryear. Recently, I have taken an interest in the issue, mostly to see if it is possible to reestablish this missing line. The goal of this article is to outline the elements that I think are required to create the ideal adventure game. Although this topic is obviously very subjective, I hope to share with you something that I think you can at least accept as good guidelines for designing adventure games.\n\nDefining the adventure game\n\nBefore we can consider what makes an ideal adventure, we must first lay down some ground rules as to just what constitutes an adventure.\n\nThere seem to be fewer adventure games being produced lately, even from the traditional adventure producing companies such as LucasArts and Sierra On-Line. Furthermore, many of the games being called adventure today are very different from the games to which the term has traditionally been applied. While we can accept a boarder definition of adventure, such generalization simply makes the term useless for future discussion. A useful definition must establish relatively sharp boundaries. Otherwise, the scope of gameplay becomes too large to even consider talking about what an ideal adventure game should be.\n\nAny definition should be based on the games that have originally defined the medium. These include titles such as Adventure, Zork and other Infocom games, as well as King's Quest and other early 1980s adventures from Sierra On-Line. The definition should also be exclusive, in order to distinguish adventures from other currently accepted genres like First Person Shooters (FPS), Role-Playing Games (RPG), Real-Time Strategy (RTS), and puzzle games. We should not fear a definition that excludes games such as Quest for Glory, Alone in the Dark, and System Shock. Whether or not we decide that they qualify as adventure, they still remain great games.\n\nStoryline\n\nStory is an important aspect of an adventure. This prerequisite allows us to exclude purely puzzle based gams, such as Sokoban, Sherlock, or the daily crossword. However, story must not be the sole defining characteristic. Books and movies are not adventure games, since they have no game aspect and no problem solving. Neither is any game that includes only primitive story elements, such as Wolfenstein, X-COM, and Alpha Centauri that have some elements of story but are clearly not adventure games.\n\nProblem solving\n\nMaybe an adventure is simply problem solving in the context of a story. This is a good first approximation, but we can quickly see boundary problems. First Person Shooters require problem solving, although the problems there are often solved by blowing someone to smithereens. Similarly, there are many run and dodge games where the problems are solved by nimble jumping or ducking at the right time and place. These types of games can also include varying amount of story. Clearly, a meaningful definition of adventure must exclude Doom and Mario. We must therefore restrict our problem solving to the intellectual realm. The solutions to problems in an adventure game should be difficult to conceive but not difficult to execute. This gives us a reasonably narrow border between adventure and the various action genres.\n\nDeterministic or stochastic\n\nThis still leaves us needing a line between adventure and role-playing. Games in these two genres share many characteristics, although they usually lean in different directions on the emphasis thereof. Adventures usually stress on story and puzzle content. In contrast, Role-Playing Games emphasize interaction with a larger and more randomly behaving virtual world. These differences in emphasis are not definitional, however, since a game clearly in either genre can be designed with either or both of these elements.\n\nCharacter development is a tempting characteristic to use to divide these two genres. Unfortunately, it falls a bit short. It is not unreasonable for an adventure protagonist to acquire new abilities, such as lock picking or increased dexterity, during the quest. The difference is not in whether character development is used, but in the reasons behind using it. In adventure, the development is needed to solve a particular problem. In role-playing, the development is needed to improve the character's chances to solve nonspecific problems that may arise randomly from the virtual world.\n\nIn essence, the fundamental distinction between role-playing and adventure games is the stochastic nature of the former s as opposed to the deterministic nature of the latter. It is the random presentation of obstacles that makes Role-Playing Games character statistics so important. Adventure games seldom play with a significant rolling of the die. In other words, an adventure game plays out the same every time you run through it if you take the same actions. Role-Playing Games rely heavily on rolling the die for determining combat and other event outcomes, whereby the player must court Lady Luck and develop stronger character statistics to improve the odds of survival.\n\nDefinition\n\nWith these insights, we now have a workable definition of an adventureâ€”an adventure is the \"deterministic, intellectual problem solving in the context of a story\".\n\nProperties of an adventure game\n\nStory/Plot\n\nThere are different aspects of the story. The back story, or background story, is the history of the game world prior to the player gaining control. This includes the history of the player's character, the protagonist. It may be revealed early by accompanying documentation or introductory segments of the game, or it may be fleshed out during the course of play by interacting with non-player characters, reading notes, and so on. In contrast, the other aspect of story is one created by the protagonist during play. This journal of play is referred as the plot.\n\nGameplay\n\nPeople often talk of gameplay, but what they mean by it varies. Here it means the semantic actions performed by the protagonist. This is distinct from the syntax used to express those actions. Whether you type \"pour pitcher into bowl\" or click the pitcher icon on the bowl, the effect is the same. The difference is one of result versus one of method.\n\nChallenge\n\nThe player must overcome many obstacles to complete a game. Examples of these obstacles include inventory based problems, dialog trees, machine twiddling, sliders, timed sequences, and others. More appropriately, these obstacles should be called challenges, and the collective aggregate of these obstacles is known the challenge. The term puzzles should, instead, be reserved for self-contained obstacles like sliders and Rubik's cubes.\n\nLinearity\n\nPeople frequently talk about linearity, but confusion exists regarding its definition. In one sense, linearity refers to the geographic path the player takes through the game. In this case, a game is said to be nonlinear if the player is free to roam widely about the game world. This may not be a very interesting quality. Exploring might be fun, but wandering back and forth gets old, fast. The other sense of linearity refers to the sequence of gameplay, that is, the order in which the challenges can be solved. If there is only one order in which the challenges can be overcome, then the game is completely linear. If all of the game's challenges can be overcome at any time, then the game is said to be nonlinear.\n\nLinearity is caused by a relationship between challenges. The solution of a challenge typically gives you a reward, such as access to new parts of the game world, objects, abilities, and information. These connections create a gameplay graph where the challenges are the nodes. Technically, in graph theory, this gameplay construct is a directed acyclic graph, and it functions similar to a Petrie network.\n\nFew (if any) games are completely linear or completely nonlinear. Many have a linear introductory series of challenges, and most have a linear finale. In between, there are some common shapes in the constructs. Adventures are frequently split into chapters, each to be completed in a linear sequence. This segmentation gives the author control over the plot, but at the same time allows the player to have nonlinear freedom within each segment. It is also common to see the game split into independent branches, whereby the player can complete the branches in any order. A branch is, in effect, a mini-adventure within the larger one.\n\nRelevancy\n\nRelevancy describes the relationship between the challenges and the game. Specifically, it describes the believability of the challenges as part of the game world and as part of the story. As an example of irrelevance, how many real world doors have you seen that are opened by a slider puzzle? However, relevancy is not always clear cut. Very odd things may just make sense when done by Wile E. Coyote.\n\nConstraint\n\nConstraint can either be in time or geography. Many adventures include time constraints in theirs challenges. These constraints may vary in duration. In the broadest form, the player may have several minutes or hours to complete a set of challenges, such as fiddling about in the laboratory with the mad scientist is off for lunch. In a narrower form, the player may have several seconds or minutes to solve a particular challenge, such as defusing a bomb. With even tighter constraints, a challenge may require some action within a window of only a few seconds, such as throwing a grenade after pulling the pin. At the extreme end of the real-time continuum is the arcade challenge, which is an actual physical challenge to the player. Geographic constraints are commonly used by the designer to impose some linearity in an adventure. Typically, at the beginning of a game, the player has access to only a restricted part of the game world. Completion of challenges during gameplay may then allow the player to access a greater part of the world previously not accessible.\n\nThe ideal adventure game\n\nGame world\n\nThe ideal adventure starts with a well defined world. It should be a place with history and personality, not just a coffee table to lay the puzzles onto. It should be populated with characters that live there, that clearly have a reason to be there other than to help or hinder the protagonist. The history of this world should not stop with the commencement of play. There should be a strong plot to propel the player through the game. The player should help paint the picture, not just uncover it.\n\nLinearity\n\nMany people talk of linearity as though it is an inherently bad thing in an adventure. This view is too simplistic. Linearity gives the author more control over the plot, usually allowing for a stronger one. It has the danger of giving the player the feeling of being dragged through the game, a passenger rather than a driver. In contrast, non-linearity gives the player the feeling of being in control of the plot, and a greater sense of immersion in the game. However, it can also leave the player lost, not knowing what to do. The linearity of an adventure is thus a tradeoff, and good adventures can be made anywhere along the linearity spectrum. A game that combines both aspects is probably the best approach using, for example, a series of chapters, each of which is fairly nonlinear. Some chapters can be placed in parallel with others, in the form of branches that are playable in whichever order the player likes.\n\nRelevancy\n\nThe individual challenges should be relevant. They should be natural parts of the game world and natural parts of the story. For example, there should be no door locks by Rubik or power systems by Escher. If we are to have puzzles (which can be fun), they should be integrated into the game world by appropriate dressing. For example, Myst, unlike so many of its copycats, does a good job of dressing up puzzles as natural parts in the locale. However, there should be a broader ranges of challenges than just puzzles.\n\nThe game world should work consistently according to some physical principles. For example, if you have to cut a string, the knife and scissors should both work, and any other strings that can be cut should also be able to be cut by these objects. This does not mean that the virtual world has to follow our rules. Cartoon worlds like Toonstruck and dream worlds like Sanitarium can be bizarre, but they should be understandable by the player.\n\nReasonable challenges\n\nThe solutions to the various challenges should be reasonable. While it is fine to create a difficult game to stump the player, the player should be at least able to understand the solutions in hindsight. The player should feel that he should have been able to find the solution, that he has had all the necessary information to deduce the correct action or at least to try the correct experiment. For example, if throwing an ice cube at a unicorn turns the animal into a pair of pliers, then there should be some prior indication that throwing cubes at magical creatures turns them into tools. If the game is not reasonable, if it is silly, then it devolves into the logical equivalent of a big mazeâ€”the player must exhaustively try every possible action until progress is made. This is trivial, but tedious and boring.\n\nReal-time challenges\n\nChallenges can have real-time components, but they should be used only to frame an intellectual problem. They should be a test of the player's wits, not of reflexes. Once the player knows how to overcome the challenge, it should only require a few mouse clicks or keystrokes to effect, and with a wide time window. Stated again, it should be a test of conception, not of execution. Furthermore, failure of a real-time challenge should not require the player to restore and replay an unassociated segment of the game, that is, the broader game state should remain unchanged. If there is any dexterity or perceptivity required, the game should adapt to the player, easing the challenge until it ceases to exist. The player should also be able to set the difficulty level directly.\n\nDeath\n\nDeath can be an annoying part of an adventure, but its absence can be equally jolting. If I pull the pin on a grenade and sit on it, I expect more than a little constipation. A great adventure can be designed without mortal danger, and in the game the player can be reasonably restricted from death. The point in this state, however, is the suspense of a dangerous situation. Still, death should never catch the player unawares. Any fatal action that the player takes should be reasonably deducible as a fatal action beforehand, giving the player a chance to save the game. Even better, the game should do this itself, and automatically restore the player to a point just before the fatal action.\n\nIn an adventure, death is not the only way to die. The player may reach a state where it is impossible to win the game, yet still be aliveâ€”a dead-end. The function of death and auto-recovery is to avoid requiring that the player to replay large segments of the game; in the death case, this means not having to replay from the most recent of the player's saved games. For similar reasons, the game should not allow the player to unwittingly remain in a dead-end for a long time. The action (or lack of action) that leads to a dead-end should be treated as if an action leading to death. It should be reasonably expected to be a questionable act, so the player knows to save in advance, and it is even better if there is auto-recovery. Once a player does wander into a dead-end, the game should soon make it clear that the player has done so.\n\nDifficulty\n\nThere is no ideal difficulty level for an adventure. Some games should be geared towards novices, and some towards grizzled spelunkers. Within a game, however, the challenges should get more difficult the farther into the game you get. A hard challenge at the beginning can cause a player to just give up. By the end of the game, the player has enough interest in the story and enough investment of time into the game to try a little harder rather than give up in frustration. Even if the player does get completely stumped, at least a larger portion of the game has been enjoyed.\n\nUser interface\n\nSo far I have only discussed the semantics of game design, but an ideal adventure should also have a good user interface. You might think of high resolution graphics, directional sound, 3D engines (which acquires a new definition every few years), and so on. These technologies, however, are just means to an end, and any specification eventually becomes obsolete. The goal is to present the world clearly to the player, to establish the atmosphere, and to make it easy for the player to play the game. The artists and designers must work within the technology of the day to achieve this; if they are successful, the level of that technology is irrelevant.\n\nThe graphic and sound design should clearly indicate what is important to the player. The player should never wonder what those few smudgy pixels are supposed to be, nor should the player wonder what that character has just mumbled (subtitling should always be an option). Any object that the player needs should be clearly presented and not be a needle lost in a haystack of other objects. That is not to say that there should be no red herrings, only that they should not drown out the necessary objects. Similarly, an important character should not be a face lost in a crowd.\n\nThe game should have a good save facility. Players should be able to save where they want to save, not only where the game's programmers would like them to save. It should also save the game as it is played. Some games have been known to make assumptions, which turn out to be false if the player does things different from the designer's intent. There should be no fixed limit on the number of saved games, either; leave that to the player's file system.\n\nThe interface should be easy to use, intuitive, and economical of input. Common actions should require a minimum of clicks or keystrokes.\n\nA problem with many recent games is that the interface has gotten so economical that the player no longer has to think of the solution, it just happens. The problem is that designers have streamlined the mouse interface so that the player has no choice as to how to interact with objects and characters. Some games, such as Callahan's Crosstime Saloon, have tried to get around this by offering a large menu of actions for every interaction, contextual with the objects and characters involved. This works well by expanding the search space beyond what is feasible by exhaustive search, but still has the problem that the player is frequently presented with the solution, rather than having to construct it. Other games, such as Leisure Suit Larry: Love for Sail!, get around this by allowing the player to specify the interaction by typing in a word, in addition to a menu of obvious interactions such as topics for dialogs. This approach maintains much of the flexibility of design of the old text parser, yet also retains the ease of use of the mouse interface.\n\nFinal thoughts\n\nObviously, there is more to an ideal adventure game than the above. For starters, there should be no bugs. The challenges should be clever. You should be proud to have solved them, and you should want to kick yourself for having had such a hard time once you have seen the solution. The story should be interesting and engrossing. Humorous games should be funny, and horror games should be scary. Unfortunately and fortunately, there are no guidelines for creativity."
    }
}