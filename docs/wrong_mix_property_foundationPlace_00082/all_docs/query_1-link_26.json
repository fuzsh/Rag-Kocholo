{
    "id": "wrong_mix_property_foundationPlace_00082_1",
    "rank": 26,
    "data": {
        "url": "https://www.johngibbon.com/blog",
        "read_more_link": "",
        "language": "en",
        "title": "Product Frameworks: Strategy and Execution",
        "top_image": "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/51fitext1ol.jpg?1704771337",
        "meta_img": "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/51fitext1ol.jpg?1704771337",
        "images": [
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/51fitext1ol.jpg?1704771337",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/elephant-gap_orig.jpg",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/editor/book-svpg-empowered.jpeg?1657980265",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/empowered-companies_orig.png",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/svpg-team.jpeg?1658082800",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/defistack_orig.jpeg",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/defiloans_orig.jpeg",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/network-nodes-red.jpg?1565045090",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/istock-614703888.jpg?1564871878",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/viral-growth.jpg?1564871958",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/api-model-canvas-developer-experience_orig.jpg",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/honeycomb-scale.jpg?1625269566",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/ansoff-w-fish_orig.jpg",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/sw-strategy-blog-tdown-bup.jpg?1591485592",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/stuffing-6june.jpg?1591449801",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/arr-bookings_orig.jpg",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/editor/marketing-funnel.jpg?1558228226",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/arrow-held_1_orig.jpg",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/porters.jpg?1556596415",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/blue-ocean.jpg?1556596494",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/bcg.jpg?1556595032",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/ansoff-w-fish.jpg?1556633831",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/published/lean-startup-pyramid.jpg?1556641736",
            "https://www.johngibbon.com/uploads/1/3/0/5/1305170/lean-startup_orig.jpg",
            "https://cdn2.editmysite.com/images/old/bg_feed.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "Product Management",
            "SaaS"
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "As I try to become a better listener, the book that has been most helpful is  \" How to Know a Person \" by David Brooks. The top insights that I took from this book are: One fundamental skill that...",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "john gibbon",
        "canonical_link": "https://www.johngibbon.com/blog.html",
        "text": "As I try to become a better listener, the book that has been most helpful is \"How to Know a Person\" by David Brooks. The top insights that I took from this book are:\n\nOne fundamental skill that lies at the heart of any healthy person is the ability to see someone else deeply and make them feel seen - to accurately know another person, to let them feel valued, heard, and understood. Life goes a lot better if you can see things from other people's points of view, as well as your own.\n\nDiminishers make people feel small and unseen with their egotism, anxiety, naive realism, objectivism (detached and dispassionate), essentialism (making generalizations), and their propensity towards the lesser-minds problem (like many people, they think that they are more complicated and deeper thinkers than others).\n\nIlluminators are practiced in the craft of understanding others, they have a persistent curiosity about other people. They show tenderness, receptivity, active curiosity, affection, generosity, and a holistic attitude (knowing people have a spectrum of strengths and weaknesses).\n\nA diminisher makes you think he is interesting; an illuminiator makes you think you are interesting. One illuminator once asked the author about his ultimate goals (what does he want to offer the world?), his skills (what is he doing when you feel most alive?), and his schedule (how does he fill his day? and how well that is aligned with the first two?)\n\nTips on how to pay attention to a person or how to accompany a person:\n\nbe aware of the other person's timetable, playfulness, & other-centeredness\n\ntreat attention as an on/off switch not a dimmer\n\nbe a loud listener\n\nfavor familiarity (people don't favor the unfamiliar)\n\nmake other people the actors, not the witnesses\n\ndon't fear the pause\n\ndo the looping (repeat what people say)\n\nassist people in their creation (the midwife model)\n\nkeep the gem statement at the center\n\nfind the disagreement under the disagreement\n\ndon't be a topper\n\nWise people possess a compassionate understanding of other people, they don't necessarily possess information. Wise people don’t tell us what to do; they start by witnessing our story; more like coaches than philosopher kings.\n\nThe author Studs Terkel wrote, \"Listen, listen, listen, listen, and if you do people will talk. They always talk. Why? Because no one has ever listened to them before in all their lives. Perhaps they've not ever even listened to themselves.\"\n\nIf you want to thrive in the age of AI, you better become exceptionally good at connecting with others\n\nWe are generally only 20% accurate when perceiving what others are thinking in our first conversation with them; and that only raises to 35% accurate with close friends and family. For people who are very good it is high as 55%, but those of us who aren't very good still think we are very good at reading other people.\n\n“Moral formation” is about helping people learn how to restrain their selfishness and incline their heart to care more about others. It’s also about helping people find a purpose, so their life has stability, direction, and meaning. It’s about teaching the basic social and emotional skills so you can be kind and considerate to the people around you.\n\nBefore entering into any hard conversation, it’s important to think about conditions before you think about content. Also, for members of dominant or majority groups, there’s usually little or no gap between how others see you and how you see yourself. For people from marginalized or historically oppressed groups, there’s usually a chasm between who you are and how you are perceived.\n\nConversation take place on two levels: the official conversation (words about the nominal topic at hand) and the actual conversation (ebb and flow of underlying emotions). In a conversation consider its frame: what is the purpose of the conversation and what are the goals.\n\nBad questions evaluate (I'm about to judge you) and are closed (limit how they can be answered). Sometimes a broad, dumb question is better than a smart question, especially one meant to display how well-informed you are. When you are asking a good question, you are adopting a posture of humility. You're confessing that you don't know and you want to learn. You are honoring a person.\n\nBig questions interrupt daily routines:\n\nWhat crossroads are you at?\n\nWhat would you do if you aren't afraid?\n\nIf you died tonight, what would you regret not doing?\n\nIf we were meet a year from now, what will we be celebrating?\n\nIf the next five years is a chapter in your life, what is that chapter about?\n\nCan you be yourself where you are and still fit in?\n\nQuestions about the positive side of life include:\n\nTell me about a time you adapted to change\n\nWhat's working really well in your life?\n\nWhat are you most self-confident about?\n\nWhich of your five sense is strongest?\n\nHave you ever been solitary without feeling lonely?\n\nWhat has become clearer to you as you have been aged?\n\nThe real act of building a friendship is disagreeing without poisoning a relationship, releasing vulnerability at an appropriate pace, being a good listener, knowing how to end a conversation gracefully, knowing hot to ask for and offer forgiveness, knowing how to let someone down without breaking their heart.\n\nIt’s not only the epic acts of heroism and altruism that define a person’s character; it’s the everyday acts of encounter. It is the simple capacity to make another person feel seen and understood—that hard but essential skill that makes a person a treasured co-worker, citizen, lover, spouse, and friend.\n\nOverview of SaaS Partnerships\n\n​from when I worked at enterprise Software as a Service companies\n\nTechnology Providers: Supply capabilities used in SaaSCo's offering\n\nProvide services required for a specific market or product\n\nDatabase technology providers\n\nHosting / cloud providers\n\nInformation / data providers\n\nOwned by Technology and Operations organizations\n\nNon exclusive relationships\n\nService Providers: Implementation, support, etc. for a specific market\n\nSystem Integrators (SI) for a specific region or for a specific software package\n\nSupport services for a given market (such as a language / country where SaaSCo's in-house support not available)\n\nMSP - managed service providers (overlap with technology providers as could be outsourced IT)\n\nOwned by the department at SaaSCo that usually provides this service such as implementation or support team\n\nRelying on expertise in market or product type so exclusivity unlikely unless referral or resell involved\n\nGo-to-Market Referral or Distribution Resell Channel Partners:\n\nAssist in selling SaaSCo's offering in given market (region or segment) or channel\n\nAffiliate marketing\n\nReferral partner\n\n(Value Added) Resellers\n\nOnline marketplaces\n\nOwned by Marketing and Sales teams; and specifically Channel Sales & Marketing\n\nMost likely involves exclusivity for SaaSCo’s market\n\nProduct Partners (ISV - Independent Software Vendor)\n\nEnhance client offering\n\nProvides key capability or offering that is needed to help sell SaaSCo’s offering for given market or segment\n\nHelps create an ecosystem which is a broader value proposition to the client​\n\nFor one SaaS company approximately 3/4 of clients said presence of a partner ecosystem and the promise that a wider base of solutions than just SaaSCo's solution was a principle reason they picked the (higher priced) SaaSCo offering. According to CrossBeam, one company had 34% higher annual contract value (ACV) on deals done with product partners.\n\nOwned by Product organization\n\nExclusivity in resell model but less likely in referral model\n\nAlthough! Often there are overlaps across these categories\n\nSystem Integrators (especially Global System Integrator GSIs) can also refer or resell products which they integrate.\n\nProduct partners can also be referral partners encouraging clients who do not already have SaaSCo’s product to use it as it makes their offering more compelling and valuable. In this case the channel sales team will own or at least dictate the terms of the referral agreement with the Product Partner, even if the product partnership team is the lead.\n\nDistribution partners can be white label partners integrating SaaSCo's solution with their own offering; but partnership must be enabled in conjunction with product teams market offering strategy.\n\nTwo Distinct Product Partnership Business Models for SaaS Companies\n\nThere is a big gap between these two product partnership models because in the resell model SaaSCo owns the revenue and the risk!\n\nReferral\n\nEnables solutions and sales for SaaSCo especially with regional / vertical opportunities; drives some revenue\n\nPercentage (with minimums) of what partner charges for a “connector” to the SaaS company’s services or data\n\nand / or a portion (maybe roughly 1/4) of the total offering that the partner charges - depending on how much SaaSCo needs the client's solution to more effectively sell their own (for example a partner's compliance offering that is required to sell SaaSCo's offering in a certain market).\n\nAlso a one-time referral fee for a partner offering purchased by SaaSCo clients.\n\nAccess to basic marketing mostly focused around SaaSCo’s marketplace or “App Store” listing\n\nLimited sales support into SaaSCo sales organization and client base\n\nMinimum support other than integration\n\nNo/minimal influence on partner's product development roadmap\n\nPremium Referral program could involve additional fees from partner for specific additional marketing and sales opportunities\n\nMinimum risk vetting since not on SaaSCo paper (not a SaaS company contract); although realizing SaaSCo brand still takes some risk if there is referral\n\nResell\n\nNew product offering for SaaSCo; driving significant revenue\n\nNegotiated percentage of partner core offering list price (very roughly in 50% range although this could vary widely depending on which party is responsible for which activities - such as support; and which party more needs the other party - who has the power!)\n\nAspects of deal may include certain exclusivity (regions, accounts), sales channel conflict avoidance strategies such as double commission, list price discounts, and SaaSCo committed volumes.\n\nNegotiated co-marketing; and SaaSCo marketing like other SaaSCo’s products.\n\nSold like other SaaSCo product with customer / market restrictions and minimum volumes negotiated as part of deal.\n\nSupport negotiated but generally Level 1 and Level 2 support by SaaSCo and detailed Level 3 support by partner.\n\nInfluence on partner's product development roadmap potentially negotiated as part of deal.\n\nPremium resell may be white labelled where SaaSCo has exclusivity across larger markets and owns more of partner roadmap.\n\nSince on SaaSCo paper, need to do full risk review and create processes across entire operations between partner and SaaSCo\n\nAs a reminder!\n\nPartners want access to data and functionality and access to brand, marketing, sales teams, and clients.\n\n​Platform & Product Partnerships Organization and Functions\n\nProduct and Partner Development\n\nProduct Management: Building business models and APIs and other product offerings needed to deliver on identified partner enabled use cases. Working with Technology organization and other product managers.\n\nBusiness Development: Recruitment and contract negotiation of targeted partners and categories. Working with Corporate business development and corporate partnerships. Can also work with corporate M&A group as a partnership pipeline is being created: referral partners are good candidates to become resell partners; and resell partners are good candidates for potential acquisition.\n\nTechnical Enablement:​ Helping partners build the identified integrations and applications. Working with global support.\n\nPartner Success and Partner Revenue\n\nMarketing: Helping clients, prospects, and sales teams understand the value proposition of partner solutions. Working with corporate and regional marketing.\n\nAlliance and Sales: Partner account management; and advocating for partner solutions to be sold to specific customers and to be integrated with specific SaaSCo prospect opportunities. Working with regional sales.\n\nServices: Application implementations and partner customer support; also billing and revenue tracking. Working with global support and operations\n\nRecently I heard Marty Cagan speak as part of the McKinsey Product Academy Series. In the past Marty has spoken at my class and I have reviewed his book Inspired, my favorite book on product management.\n\nTherefore I thought it was finally time for me to read the book he wrote with Chris Jones in 2021, Empowered. It can easily be used as a reference book when considering any one of a range of topics about how companies create extraordinary software products. However there are a few central themes which I thought would be helpful to describe here.\n\nTwo of the main messages around creating empowered product teams are:\n\nGive product teams problems to solve, rather than features to build. Empower them to solve those problems in the best way they see fit.\n\nLeadership is about recognizing that there's a greatness in everyone, and your job is to create an environment where that greatness can emerge. - Bill Campbell\n\nFeature vs Empowered Teams (solve customer problems, achieve outcomes):\n\nA central theme in the book is the distinction between feature product teams and empowered product teams. A feature team implements features and projects (output), and as such isn’t empowered or held accountable to results. In contrast, an empowered team is accountable for solving a customer problem or achieving a specific outcome, and is empowered to do so in the best way they see fit.\n\nDifference Between Strongest Product Companies and the Rest\n\n1. Role of Technology (it is the business, not an expense):\n\nSo many companies still have the old IT mindset when it comes to technology. It's viewed as a necessary cost rather than the core business enabler it needs to be. The people who work on the technology teams are literally there “to serve the business.\" In these scenarios, the product and technology teams are disconnected from the real customers—in fact, they're encouraged to think of their stakeholders as their customers. For strong product companies, technology is not an expense, it is the business.\n\n2. Role of Product Leaders (coaching, strategy, managing to results, deep business and product knowledge):\n\nMost product leaders are responsible for staffing the in-house feature factory, and keeping the trains running on time. The best product leaders are staffing and coaching product teams, creating product strategy, putting strategy into action, and managing to results\n\nYou need to be very specific when identifying the most important business problems a product team should solve.\n\nYour role as a leader is in helping everyone on the team achieve the competence necessary to solve those problems.\n\nProduct Leaders need to have a deep business and product knowledge (and frequent customer interactions)\n\nData (how the product is actually used)\n\nIndustry and domain knowledge\n\nBusiness and company knowledge\n\nProduct operational knowledge (how the product actually works)\n\n(most importantly) Users & customer knowledge\n\nCagan recommends a minimum of three, one‐hour customer interactions each week. During weekly one-on-ones he likes asking about these customer interactions to see what the product person has learned. He also encourages the product person to share stories of what they experienced during these visits, and then to share these stories widely around the company. One reason for this is for the product person to establish their reputation as someone who has a deep and personal knowledge of the company's users and customers.\n\n3. The purpose of product teams (product managers, product designers, and engineers)\n\nConsistent with the central theme of the book, Cagan believes that in strong product companies teams are given problems to solve, rather than features to build, and most importantly they are empowered to solve those problems in the best way they see fit and are then held accountable to the results.\n\n​Importance of Product Vision, Strategy, & Discovery\n\nIn empowered product teams:\n\nProduct vision describes the future we are trying that improves the lives of our customers\n\nProduct strategy helps us decide what problems to solve\n\nProduct discovery helps us figure out the tactics that can actually solve the problems\n\nProduct vision keeps us focused on the customer and serves as a North Star\n\nIt provides the product organization with a common understanding of what we are hoping to accomplish together. A good product vision inspires ordinary people to create extraordinary products. A good product vision provides us with meaningful work.\n\nWhen a company has grown to the point where there are multiple product teams—supporting many customers with their constant needs. It is very easy for each product team to get caught up in their own problems and their own work, losing sight of the overarching goal. The product vision represents the common goal and constantly reminds us of the larger purpose.\n\nProduct Strategy: Based on insights, it is how we make the product vision a reality while meeting the needs of the company as we go\n\nWhile product strategy starts with focus, it then depends on insights. Insights come only after you spend hours studying your data, your customers, the enabling technologies, and your industry. Insights can come from anyone or anywhere – salesperson, new technology, random comment from a customer, or an academic paper. They might pertain to the dynamics of our business, our capabilities, new enabling technologies, the competitive landscape, how the market is evolving, or our customers. The foundation for significant insights is the strategic context found in the company objectives, the company scorecard/dashboard, and the product vision. Insights are both quantitative and qualitative insights; and they need to be shared and communicated.\n\nMany companies have a stakeholder‐driven roadmap process, where they basically are trying to find a way to “fairly” divide up the engineering capacity across the different business stakeholders. But by not picking your battles and focusing on the few truly critical problems, most of the product team's work does not make an impact.\n\nProduct Discovery finds product market fit by considering value, usability, feasibility, viability (as discussed in Inspired)\n\nValue – will users buy and use it (Product Mgr)\n\nUsability – can they figure out how to use it (UX)\n\nFeasibility – can we build it (tech arch)\n\nViability – part of our overall business\n\n(Product Market Fit is the essential component for any successful product.)\n\nDiscovery can’t be done by stakeholders, customers and prospects; they don’t know what is possible and they don’t know what solutions work\n\nOften customers try to discuss solutions but they really are discussing problems. It is natural for a prospect to try to dictate requirements for features, but a product manager's job is to work to understand their underlying issues and constraints, and then work collaboratively with your prospective customers to determine if there's a general solution that will meet their needs. This form of collaboration is at the heart of the customer discovery program technique mentioned above and discussed in Inspired.\n\n​\n\nMarty (upper right) and the Silicon Valley Product Group look like a collaborative team that knows how to evangelize\n\nCollaborative Product Teams\n\nYour company is probably accustomed to feature teams that exist very clearly to serve the business, and it can be difficult to replace them with empowered product teams that exist to serve our customers in ways that work for the business. Your product organization is moving from a subservient model to a collaborative model.\n\nPart of this is done by product leaders establishing a direct relationship with the CEO (or general manager in a large company) and the other key executives (sales, marketing, service, finance, legal, business development.) The basis of this relationship is for the executives to believe that the product leaders have a deep understanding of the business and are committed to ensuring that the solutions provided will work for the various aspects of the business. This should be table stakes for the product leaders. Beyond that, there are three aspects the product leaders will be judged on: business results, product strategy, product teams\n\nAll of this may be Tougher in Larger Companies (Evangelism will help)\n\nPersonally, I think Marty’s suggestions seem to be better suited or maybe more straightforward to implement in small companies with more greenfield products. However, Marty does provide at least one key to being a strong (empowered) product leader in a medium-sized to large‐sized company, evangelism. Evangelism in this context means marketing to your own organization (e.g., product marketing, marketing, and sales). Some techniques used to help communicate the value of your product or what you’re proposing to your product teams, executives, key stakeholders, and investors include\n\nusing prototypes\n\nsharing the customer pain\n\nexplaining the product vision\n\nsharing your learnings\n\ngiving great demos\n\nsharing the credit\n\ndetailing the market opportunity\n\nshowing your enthusiasm for your product\n\nCheck out more information from Marty Cagan at SVPG.\n\nMy favorite overview of DeFi that I have read so far is Decentralized Finance: On Blockchain- and Smart Contract-Based Financial Markets written by Fabian Schar and published by the St. Louis Fed. (Although a few things seem a bit out-of-date since it is a year old and Whiteboard Crypto on YouTube is a tad bit more accessible.)\n\nHere are a few of my takeaways from reading this article.\n\nDeFi replicates existing financial services in a more open and transparent way. In particular, DeFi does not rely on intermediaries and centralized institutions. Instead, it is a blockchain-based financial infrastructure with open protocols and decentralized applications (DApps). Besides a rich instruction set DApps or smart contracts can also acts as custodian for crypto assets.\n\n(DApps or smart contract theoretically could be any arbitrary computer program since they run on Turing complete blockchains (all but Bitcoin); although they are very inefficient. The ability to run more complex smart contracts is one of the biggest differences between Bitcoin and Ethereum block chains. Blockchains like Solana are designed to address the inefficiency or scalability problems of blockchains like Ethereum).\n\nNative protocol crypto assets (BTC, ETH or cryptocurrencies ) are used to operate the blockchain.\n\nCrypto assets that are tokens are units of value that blockchain based organizations or projects develop on top of existing block chain networks. Token standards include ERC-20 for tokens which can interoperate with Ethereum's ecosystem of decentralized apps. ERC-720 are non-fungible tokens (NFTs) used to tokenize ownership of any arbitrary data. For example they can be the digital representation of a physical object such as a piece of art.\n\nThis means that tokens can serve a variety of purposes: including governance tokens for decentralized autonomous organizations (DAO), tokens that allow the holder to perform specific actions in a smart contract, tokens that resemble shares or bonds, and even synthetic tokens that can track the price of any real-world asset.\n\nAs you can see above, besides settlement layer (blockchain native protocols) and asset layer (including tokens) there is a protocol layer containing decentralized exchanges used by other DApps, an application layer, and aggregation layer to connect several applications and protocols\n\nIn decentralized exchanges, users do not need to deposit their funds which is the case with centralized exchange. Instead, users maintain control of their assets until the trade is executed. Trade execution happens atomically through a smart contract, meaning that both sides of the trade are performed in one indivisible transaction, mitigating the counterparty credit risk. Depending on the exact implementation, the smart contract may assume additional roles, effectively making many intermediaries such as escrow services and central counterparty clearing houses (CCPs) obsolete.\n\n​Decentralized lending platforms and loans are an essential part of the DeFi ecosystem. Defi loans do not need to rely on trusted relationships via one of two methods. One method is credit being provided under the condition that the loan must be repaid atomically, meaning that the borrower receives the funds, uses, and repays them—all within the same blockchain transaction. A second way is loans can be fully secured with collateral. The collateral is locked in a smart contract and only released once the debt is repaid.\n\nOne type of collateralized loan platforms allow the user to create collateralized debt positions; in other words the user gets new tokens back by collateral locked in smart contract (or in the example below, just USD). For example MakerDAO is a decentralized protocol that is used to issue the USD-pegged Dai stablecoin. First, the user deposits ETH in a smart contract classified as a collateralized debt position (CDP) (or vault). Subsequently, they call a contract function to create and withdraw a certain number of Dai and thereby lock the collateral.\n\nThere are also collateralized debt markets. Instead of creating new tokens, it is also possible to borrow existing cryptoassets from someone else - either pooled (subject to supply and demand) or P2P (person to person).\n\nDecentralized derivatives are tokens that derive their value from an underlying asset's performance (tokenized versions of stocks, precious metals, alternative crypto assets), the outcome of an event, or the development of any other observable variable.\n\nFor on-chain asset management whenever someone invests in an on-chain fund, the corresponding smart contract issues fund tokens and transfers them to the investor's account. These tokens represent partial ownership of the fund and allow token holders to redeem or liquidate their share of the assets.\n\nIn summary, the opportunities of DeFi are based on\n\nEfficiencies: While much of the traditional financial system is trust based and dependent on centralized institutions, DeFi replaces some of these trust requirements with smart contracts. The contracts can assume the roles of custodians, escrow agents, and CCPs.\n\nTransparency: All transactions are publicly observable and smart contract code can be analyzed on chain.\n\nAccessibility: Theoretically open to anyone, the risk of discrimination is almost inexistent due to lack of identities.\n\nComposability: Any two or more pieces can be integrated, forked, or rehashed to create something entirely new. Anything that has been created before can be used by an individual or by other smart contracts. This flexibility allows for an ever-expanding range of possibilities and unprecedented interest in open financial engineering.\n\nThe risks include:\n\nSmart contract execution: Users have to be aware that the protocol is only as secure as the smart contracts underlying it; leaving it vulnerable to coding errors or exploration (by analyzing the transparent underlying code). Most users won't be able to read contract code, understand its potential security concerns, or understand the data payload - and there is no central administration to adjudicate issues or risks (although there are insurance and other similar services).\n\nOperational security: While blockchains are permissionless and not reliant on a central government or authority; ironically governance and some control is often held by a small groups of people (usually the project's core team) and smart contracts are reliant on external data.\n\nIllicit activity: Pseudonymity can be abused by actors with dishonest intentions. Regulators can (or should) regulate a decentralized infrastructure, there are two areas that deserve special attention, namely, fiat on- and off-ramps and the decentralization theater.\n\nScalability: (This is why I am intrigued since by Solana which is built with native parallelism; Solana scalability >> Ethereum scalability)\n\nDeFi has unleashed a wave of innovation. On the one hand, developers are using smart contracts and the decentralized settlement layer to create trustless versions of traditional financial instruments. On the other hand, they are creating entirely new financial instruments that could not be realized without the underlying public blockchain. Atomic swaps, autonomous liquidity pools, decentralized stablecoins, and flash loans are just a few of many examples that show the great potential of this ecosystem.\n\n​​More and more companies are trying to become platform companies. Even if you are sure what that means and why it is important; how you get there still isn’t easy. (This update is based on a few things I have learned since writing the original blog post in 2019.)\n\n​\n\nWHAT\n\nWhile the term \"platform\" can have a broad range of meanings in just the technology market, the focus of this article is API-centric cloud platforms or platforms as a service (PaaS). These provide software functionality that enable other developers to build complementary technologies, products, or services.\n\nPlatforms and their specific APIs can be used to integrate and extend the capabilities of distinct SaaS offerings. Often this involves a client giving permissions to another provider to use their data in the SaaS platform. For example, these integrations or extensions can be seen in B2B application marketplaces such as Salesforce App Exchange, SAP Concur App Center, or Cisco AppHub.\n\n​They can also be used just to provide functionality for other applications and may be white labelled and not listed in the platform provider's marketplace. There are many API-first or developer-first companies whose primary offering is API-based or platform-based such as Stripe, Plaid, or Twilio.\n\nThe targeted developers can be internal to your company, can be part of a partner organization, can be working for a customer already using your SaaS offering, or can be a completely new client just interested in using the API’s functionality. They can build capabilities that interface to and impact the UX (user experience), business processes or workflows, underlying data, or infrastructure (such as IaaS providers like AWS) of a platform and associated SaaS offering; or again the functionality can be used just to augment the client’s offering.\n\n(As described in Wikipedia, the \"platform economy\" includes these “innovation” or SaaS integration platforms along with B2C transactional platforms such as Uber, Amazon, and AirBnB - not to mention the data / advertising model of companies like Facebook and Google.)\n\n​WHY\n\nPlatforms enable companies to create more value and even new business models by digitizing their services and connecting with other similarly enabled entities. For example you can connect with other platforms and/or different channels where your customers are consuming digital services: AWS, Salesforce, Uber, Square, Microsoft (O365), SAP, WeChat, Slack, etc.\n\n​These business models can include direct revenue from the customers and partners using these externalized services, for example based on the volume of API calls. This would be the case for developer-first companies like Stripe or Twilio. For customers extending your SaaS offering that they already subscribe to, it could also just be an up-charge to the cost of your core products. For integration partners, it could or maybe should be based on the value of the specific use cases that are enabled by using your APIs and the associated data. (Here is more information on SaaS pricing models)\n\n​\n\nWhat is often overlooked or at least undervalued is the indirect revenue impact of extending the overall value of your offering, it will now be made up of both your products and services and the complementary products and services of your partners. This can lead to benefits such as a higher competitive barrier and a higher base cost of your core products.\n\nThe biggest mistake I have seen across a variety of companies is not coming to agreement on the value they want to create with a platform.\n\n​Is it:\n\nDirect revenue (often emphasized too much too soon)?\n\nIndirect revenue (expanding the offerings a customer can build or get from a platform-based ecosystem increases the possibility a customer will buy and not attrite)?\n\nPR/marketing around becoming a platform company?\n\nPlatforms and platform partners ecosystem also enable viral growth by creating a network effect: the more APIs being exposed and the more data that is accessible\n\nleads to more paying partners creating more applications, integrations, and value\n\nwhich leads to more customers using (and paying for) your platform and generating more data (and you externalizing more APIs)\n\nwhich leads to more paying partners creating more applications, integrations, and value.\n\nPlatform and APIs can also lead to happier or at least more easily retained customers (leaving you may also mean leaving or at least changing how they interact with vendors from your partner ecosystem) and a lower cost and higher win rate for big prospects. The customization afforded in an on-premise world can be more easily replicated for SaaS when there is a platform. Often you have to say \"no, that is not on our roadmap\" to a big prospect who needs some specific capability (often for big enterprise prospects it is an integration into a legacy system). However if you have a platform your answer can more likely be \"yes, you can do that via our APIs, let's show you how or introduce you to a third party integrator.\" (This is certainly one of the few times you'd say \"wow, the cloud is finally catching up to on-prem.\")\n\n​Later technologies such as blockchain could usher in new era of api-driven business models as Joe Liebkind contends. However much like the same way that 25 years ago we couldn’t imagine the value and capabilities the web delivers today; we have little ability to understand how the proliferation of blockchain’s distributed, trusted, transactional capabilities will impact our economy (more on this in an upcoming blog post).\n\nHOW\n\nWhether building from scratch or undertaking the long, difficult journey to transform current (often on-premise often monolith) software to being services and API based; it's going to be tough.\n\nIn short, you need to consider your platform business offering like any other business offering\n\nWhat are the objectives or strategy\n\nHow are you going to design, build, test and deliver it\n\nHow will your customer use it\n\nHow will you manage and maintain it throughout its lifecycle\n\n​(Themes emphasized by Carol Russell and Forrester’s Randy Heffner)\n\nAnother way to consider the business plan for an API or platform is the API Model Canvas (created by Manfred Bortenschlager based on the Lean Canvas).\n\nPlatform strategy can also be considered through the lens of developer experience. In an often quoted 2012 speech by John Musser at the O’Reilly Open Source Convention, he said that the\n\n​5 Keys to a Great API are\n\nProvide a valuable service\n\nHave a plan and a business model\n\nMake it simple and flexible\n\nIt should be managed and measured\n\nProvide great developer support\n\nEvery platform requires developers; here are a few tips to provide great developer support and build a vibrant developer community\n\nDevelop inbound SEO acquisition and brand to attract developers\n\nCreate scalable content (tutorials, guides, API references)\n\nBuild community and boost champions\n\nHave a dedicated developer support and onboarding team (You need people focused on the success of the big partners that your PM and BD team recruited to expand your offering.)\n\nUnderstand your audience (and not all of them will be developers. The decision makers and stakeholders in partner companies will include CROs, business development executives, and CEOs!)\n\n​Platforms and Product Led Growth\n\nPlatforms can help you expand or build your offering and your company in a variety of ways: by organically or inorganically becoming a multi-product line company (good luck doing this without being a platform company), by enabling system integrators (SIs) and value-added resellers (VARs) to implement or extend your SaaS offering, by enabling product partners to provide integrated related functionality, and by allowing you to more easily integrate with supplier partners that provide functionality.​​\n\nTo be a successful product-led company, you need to have a view on the ecosystem in which you compete and how you use your platform to build, buy, or partners your way towards more growth and providing more value. ​ This may be the most important job of product owners and GMs. However unfortunately many of us just think about what we can build next and even worse what is the next incremental improvement to what we have already built (10% faster, 10% less bugs).\n\n(or at least just listen to a select few when considering long term SaaS product strategy)\n\nSHORT TERM SAAS PRODUCT STRATEGY\n\nYou should definitely be listening to clients, partners, internal stakeholders, prospects, and product metrics when considering what to do next with your current products - your short term product strategy. As discussed in SaaS Product Metrics, the KPIs for these products could include win rate, customer adoption, customer NPS, short term revenue, and alignment with the your company's (short term) KPIs and metrics.\n\nHowever your short term SaaS product strategy is often focused on market penetration; it is usually a bottom's up view of how to maximize the value of your current products in your current market (your current customers and customers like them). The Ansoff Matrix, one of the frameworks mentioned in Notes on Software Product Strategy, illustrates that there are other perspective you can consider for your SaaS product strategy.\n\nLONG TERM SAAS PRODUCT STRATEGY\n\nYou can consider what future products you can sell into your current markets by creating a (future) product development strategy. Also you can consider how to modify your current products to sell into future markets as part of your market development plans. (Both of these strategies are easier if you are a platform company; API-centric cloud platforms enable developers to more quickly build complementary products).\n\nAs part of this longer term product strategy you should consider\n\nCompany vision and longer term company strategy\n\nMarket forces (For example conside Porter's Five Forces framework which is discussed in Notes on Software Product Strategy: competitive rivalries, power of suppliers, power of customers, threat of new entrants, threat of substitute products).\n\nCompetitors in these new markets and for these new products\n\nIdeas from a few of your best and most visionary customers about\n\nhow your core capabilities can provide value in other parts of their business (future product development)\n\nhow modified versions of your products can help these customers grow in other geographic / vertical markets.\n\nIn other words, you need to build your perspective on a given market and how your offerings and distinct value proposition fits into this ecosystem.\n\nAnd remember you need short term deliverables for longer term strategic goals agreed upon across your company as there will always be pressure to use that capacity to accommodate short term revenue requests. There will always be an inherent tension between the Sales team who is paid to deliver monthly and quarterly results and the Product team who is paid to consider quarterly and yearly impact.\n\nAnd there will always be less capacity than you think."
    }
}