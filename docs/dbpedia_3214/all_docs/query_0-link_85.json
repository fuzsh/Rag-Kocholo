{
    "id": "dbpedia_3214_0",
    "rank": 85,
    "data": {
        "url": "https://forum.unity.com/threads/64bit-precision.435994/",
        "read_more_link": "",
        "language": "en",
        "title": "64bit precision",
        "top_image": "https://europe1.discourse-cdn.com/unity/original/3X/a/a/aaeab82727497b6f37f4312dcd57be21e6cd25e8.png",
        "meta_img": "https://europe1.discourse-cdn.com/unity/original/3X/a/a/aaeab82727497b6f37f4312dcd57be21e6cd25e8.png",
        "images": [
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/neoshaman/48/107376_2.png",
            "https://avatars.discourse-cdn.com/v4/letter/b/6bbea6/48.png",
            "https://emoji.discourse-cdn.com/google/smile.png?v=12",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/neginfinity/48/239480_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/kiwasi/48/351502_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/kiwasi/48/351502_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/kiwasi/48/351502_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://dub2.discourse-cdn.com/unity/user_avatar/discussions.unity.com/arowx/48/570918_2.png",
            "https://avatars.discourse-cdn.com/v4/letter/a/aca169/48.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Rodolfo-Rubens"
        ],
        "publish_date": "2016-10-12T16:01:59+00:00",
        "summary": "",
        "meta_description": "Did you guys saw the latest gameplay vids for star citizen? \n\n  \n    \n  \n\n\nI couldn’t believe when I saw the space station at 12:36, how cool is that?",
        "meta_lang": "en",
        "meta_favicon": "https://europe1.discourse-cdn.com/unity/optimized/3X/5/d/5d3b1bfc21f0dea8ce3730e22d85cbf4072b7c02_2_32x32.png",
        "meta_site_name": "Unity Discussions",
        "canonical_link": "https://discussions.unity.com/t/64bit-precision/642767",
        "text": "Development has been very transparent with frequent videos released showing what they have been working on and there are playable demos available for those who crowdfunded the game. Chris Roberts has experience developing space games.\n\nAt the very least it stands a very good chance of being a quality space game which is what we really need on the market.\n\nI think it looks great and it would no doubt be a fun game to play. That said, for all it’s magnificent graphics it always has struck me as lacking a little bit of something - I always feel disappointed by the lack of sophistication in the gameplay compared to the visuals. The demos always seem boringly straightforward, the animations a bit lackluster and the ease with which the players swim around from one ship to the other, or just land on a tiny platform in deep space and step out and run around like they’re in their mum’s backyard, makes the space experience lose a lot of its awe imo. There’s no feeling of pressure or danger or apprehension from being outside an airlock.\n\nBut anyway about 64 bit precision, I would definitely like to see it but I can hardly imagine Unity doing something that none of the other mainstream engines have already, especially when it’s a ‘hardcore’ feature. From watching the talk from the guys doing Kerbal I would rather not fiddle around with multiple cameras and layers and custom 32-64 bit vector transitions and so on just to make everything look right, but for now it’s the only way to go.\n\nYou really don’t want this project to be finished scope or density, even with their budget, will always be a problem. I can’t imagine the nightmare of making all these system works together.\n\nAs a designer I cringe more about the way they translate reference frame from one to another (the smaller ship parking into the bigger ship in a previous demo), a small design adjustment (like tractor beam and other signal) to signal the shift of reference, would have been more useful and still enhance the fantasy (we have tech irl that does that) and allow to correctly feedback state to player, the game is full of soft shift like that, it potentially weaken the design by creating potential confusion (which state are we in, are we still inside the reference? did the object was acquired correctly? what happen if I accelerate will a the incoming ship left behind? etc …)\n\nThis sentence right here makes it apparent you don’t know what you’re talking about. You can use 64-bit floating point numbers with a 32-bit CPU/OS. The width of the processor’s architecture was never a limiting factor.\n\nYes and no. Most modern games simply do not need 64-bit for the majority of their tasks and thus it is not focused on by the hardware manufacturers. A GTX 1080, for example, is still 32 times faster with single precision than it is with double precision floating point numbers.\n\nThat being said it doesn’t truly hold our games back because both the engine developers and the game developers can implement workarounds that allow you to have worlds with more precision than 32-bit floating point numbers offer.\n\nOtherwise you wouldn’t see engines like Unigine offering it.\n\nOnce again graphics hardware is simply not focusing on double precision math. Your processor is more than capable.\n\nI don’t think primarily 64-bit graphics cards are ever going to make sense. With 32-bits you can already render far more precision then the human eye can see. And sending an entire 64-bit universe to the graphics card then having the graphics card do the culling strikes me as very inefficient. What would be the point of rendering a mesh that one million miles away to the precision of one micron? The human eye can’t see one micron even at an optimal viewing distance. Current 32-bit systems can render an object 1 km away to a precision of 1 mm. That’s more then enough to do anything you might ever need on screen.\n\nThe physics API is the same, do you really need 1 mm precision of an object 1 km away from your main game area?\n\nA 64-bit transform is closer to what you are after. So you can position objects in 64-bit space, and the engine automagically takes care of switching it down to 32-bit space for physics and rendering. As well as doing some fancy LOD stuff for you.\n\nEdit: Fixed up some numbers\n\nPhysics would at least be understandable as we’re already seeing games where an entire solar system is kept in memory and simulated. Recent releases of PhysX do have support for origin shifting implemented but it’s expensive and doesn’t eliminate all of the necessary work.\n\nFor those games though it may be better to choose a more appropriate engine that supports it out of the box. Like Unigine."
    }
}