{
    "id": "dbpedia_3038_0",
    "rank": 73,
    "data": {
        "url": "https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-pig-latin/16039",
        "read_more_link": "",
        "language": "en",
        "title": "freeCodeCamp Challenge Guide: Pig Latin",
        "top_image": "https://global.discourse-cdn.com/freecodecamp/original/3X/2/0/206c254cf9e405bcddf6caea7f882dca146dcd3c.png",
        "meta_img": "https://global.discourse-cdn.com/freecodecamp/original/3X/2/0/206c254cf9e405bcddf6caea7f882dca146dcd3c.png",
        "images": [
            "https://forum.freecodecamp.org/images/emoji/twitter/rotating_light.png?v=5",
            "https://sea1.discourse-cdn.com/freecodecamp/user_avatar/forum.freecodecamp.org/camperbot/48/18364_2.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "dem-s"
        ],
        "publish_date": "2020-05-22T11:59:32+00:00",
        "summary": "",
        "meta_description": "Pig Latin\n\nProblem Explanation\nYou need to create a program that will translate from English to Pig Latin. Pig Latin takes the first consonant (or consonant cluster) of an English word, moves it to the end of the word an&hellip;",
        "meta_lang": "en",
        "meta_favicon": "https://global.discourse-cdn.com/freecodecamp/optimized/3X/2/0/206c254cf9e405bcddf6caea7f882dca146dcd3c_2_32x32.png",
        "meta_site_name": "The freeCodeCamp Forum",
        "canonical_link": "https://forum.freecodecamp.org/t/freecodecamp-challenge-guide-pig-latin/16039",
        "text": "Pig Latin\n\nProblem Explanation\n\nYou need to create a program that will translate from English to Pig Latin. Pig Latin takes the first consonant (or consonant cluster) of an English word, moves it to the end of the word and suffixes an “ay”. If a word begins with a vowel you just add “way” to the end. It might not be obvious but you need to remove all the consonants up to the first vowel in case the word does not start with a vowel.\n\nRelevant Links\n\nPig Latin\n\nJS String Prototype Match\n\nHints\n\nHint 1\n\nYou will probably want to use regular expressions. This will allow you to convert the words easily.\n\nHint 2\n\nIf the first character is a vowel, then take that whole word and add ‘way’ at the end. Otherwise comes the tricky part, take the consonant(s) before the first vowel and move it to the end and add ‘ay’. This might be confusing but, it is not just the first consonant but all of them before the first vowel.\n\nHint 3\n\nYou will need to use everything you know about string manipulation to get the last part right. However, it can be done with substr alone.\n\nSolutions\n\nSolution 1 (Click to Show/Hide)\n\nfunction translatePigLatin(str) { let consonantRegex = /^[^aeiou]+/; let myConsonants = str.match(consonantRegex); return myConsonants !== null ? str .replace(consonantRegex, \"\") .concat(myConsonants) .concat(\"ay\") : str.concat(\"way\"); } translatePigLatin(\"consonant\");\n\nCode Explanation\n\nstart at beginning and get longest match of everything not a vowel (consonants)\n\nif regex pattern found, it saves the match; else, it returns null\n\nif regex pattern found (starts with consonants), it deletes match, adds the match to the end, and adds “ay” to the end\n\nif regex pattern not found (starts with vowels), it just adds “way” to the ending\n\nRelevant Links\n\nRegex Match\n\nTernary Operator\n\nconcat()\n\nSolution 2 (Click to Show/Hide)\n\nfunction translatePigLatin(str) { // Create variables to be used var pigLatin = \"\"; var regex = /[aeiou]/gi; // Check if the first character is a vowel if (str[0].match(regex)) { pigLatin = str + \"way\"; } else if (str.match(regex) === null) { // Check if the string contains only consonants pigLatin = str + \"ay\"; } else { // Find how many consonants before the first vowel. var vowelIndice = str.indexOf(str.match(regex)[0]); // Take the string from the first vowel to the last char // then add the consonants that were previously omitted and add the ending. pigLatin = str.substr(vowelIndice) + str.substr(0, vowelIndice) + \"ay\"; } return pigLatin; } // test here translatePigLatin(\"consonant\");\n\nCode Explanation\n\nMake an empty string to hold your Pig Latin word.\n\nAssign your appropriate regular expression to a variable.\n\nIf the first character is a vowel, just add way to end of string and return it.\n\nIf the first character is not a vowel:\n\nFind number of consonants before first vowel with help of indexOf(), match() and regex.\n\nStart Pig Latin string with first vowel till the end.\n\nAdd letters before first vowel to end of string.\n\nsubstr() is used for string manipulation here.\n\nAdd ay to end of string and return it.\n\nRelevant Links\n\nJS Regex Resources\n\nJS String Prototype IndexOf\n\nJS String Prototype Substr\n\nSolution 3 (Click to Show/Hide)\n\nfunction translatePigLatin(str) { if (str.match(/^[aeiou]/)) return str + \"way\"; const consonantCluster = str.match(/^[^aeiou]+/)[0]; return str.substring(consonantCluster.length) + consonantCluster + \"ay\"; } // test here translatePigLatin(\"consonant\");\n\nCode Explanation\n\nFirst, check to see if the string begins with a vowel.\n\nThe regex looks at the beginning of the string ^ for one of the specified characters [aeiou]\n\nIf it does, you only need to return the original string with “way” appended on the end.\n\nIf the string does not start with a vowel, we want to build a string which contains every consonant before the first vowel in the provided string.\n\nTo do this, look at the beginning of a string ^ for one or more characters + NOT specified [^aeiou].\n\nIf there is a match (and in this case, there always will be), match() returns an Array with the matched string as the first element, which is all we want. Grab it with [0].\n\nNow, we can start building our Pig Latin string to return. This can be built in three parts:\n\nThe first part contains all of the characters in the original string, starting from the first vowel. We can easily get these characters by creating a substring of the original string, with its starting index being the first vowel.\n\nThe second part contains the consonant string we just built. (If you add the second and first parts of this string together, you will get the original string.)\n\nThe final part contains “ay”.\n\nRelevant Links\n\nJS Regex Resources\n\nString.prototype.match()\n\nJS String Prototype Substr\n\nSolution 4 (Click to Show/Hide)\n\nfunction translatePigLatin(str) { return str .replace(/^[aeiou]\\w*/, \"$&way\") .replace(/(^[^aeiou]+)(\\w*)/, \"$2$1ay\"); } // test here translatePigLatin(\"consonant\");\n\nCode Explanation\n\nUse replace() on the string, using a regular expression to check if the first letter is a consonant and adding way at the end in this case. If the first letter is a consonant nothing will happen at this point.\n\nUse replace() again to check for consonants at the beginning of the word and to move it or them to the end of the word and add ay at the end.\n\nRelevant Links\n\nRegular Expressions Reference\n\nRegular Expressions Resources\n\nSolution 5 (Click to Show/Hide)\n\nfunction translatePigLatin(str, charPos = 0) { return ['a', 'e', 'i', 'o', 'u'].includes(str[0]) ? str + (charPos === 0 ? 'way' : 'ay') : charPos === str.length ? str + 'ay' : translatePigLatin(str.slice(1) + str[0], charPos + 1); }\n\nMy solution is ultra-basic so I appreciate these threads so I can take notes for improving my approach for later exercises.\n\nThat said, I have to point out that none of the solutions I’ve read in this thread so far appear to address the ‘y’ character; i.e., the word ‘dynamic’ in pig latin should be ‘ynamicday’ but unless I’m missing something, every solution here would return ‘amicdynay’. Again, unless I’m missing something.\n\nIn any case, here’s my red-headed stepchild:\n\nfunction translatePigLatin(str) { var vowels = ['a', 'e', 'i', 'o', 'u', 'y']; var str1 = \"\"; if(vowels.indexOf(str.charAt(0)) !== -1 && str.charAt(0) !== \"y\") { str1 += str + \"way\"; } else if(str.charAt(0) === \"y\") { str1 += str.slice(1) + \"yay\"; } else { for(var i = 0; i < str.length; i++) { if(vowels.indexOf(str.charAt(i)) !== -1) { return str1 += str.slice(i) + str.slice(0, i) + \"ay\"; } } } str = str1; return str; }\n\nLadies and Gentlemen, as a long time reader but a first time poster on this forum I present to you the world most inelegant code that solve the pigLatin algorithm.\n\nfunction translatePigLatin(str) { var chr = \"\"; for (var i = 0; i < str.length; i++) { chr = str.charAt(i); if (chr == \"a\" || chr == \"e\" || chr == \"i\" || chr == \"o\" || chr == \"u\") { break; } } //console.log(str.indexOf(chr)); //this gives the position of the first vowel in the word. if (chr === str[0]) { str = str + \"way\"; console.log(str); //use return on FCC } else { str = str.split(\"\"); //the consonant or consonant clusters are stored in removed var removed = str.slice(0, str.indexOf(chr)).join(\"\"); //the rest of the word starting with the vowel is stored in vowelInitial var vowelInitial = str.slice(str.indexOf(chr)).join(\"\"); var allTogether = vowelInitial + removed + \"ay\"; console.log(allTogether); //use return on FCC }\n\n}"
    }
}