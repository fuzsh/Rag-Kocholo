{
    "id": "correct_subsidiary_00059_2",
    "rank": 10,
    "data": {
        "url": "https://www.linkedin.com/pulse/confessions-relational-bigot-my-journey-from-oracle-part-vaidyanatha",
        "read_more_link": "",
        "language": "en",
        "title": "Confessions of a Relational Bigot – My Journey from Oracle to NoSQL : Part II – The Growth Years (1998 - 2003)",
        "top_image": "https://media.licdn.com/dms/image/C5112AQHCcBJARcFvnQ/article-cover_image-shrink_720_1280/0/1559542163815?e=2147483647&v=beta&t=HcFk86NzEYQnUPA4awTckvTs1I9v_KzBgSwpkUMKZlo",
        "meta_img": "https://media.licdn.com/dms/image/C5112AQHCcBJARcFvnQ/article-cover_image-shrink_720_1280/0/1559542163815?e=2147483647&v=beta&t=HcFk86NzEYQnUPA4awTckvTs1I9v_KzBgSwpkUMKZlo",
        "images": [
            "https://media.licdn.com/dms/image/C5112AQHCcBJARcFvnQ/article-cover_image-shrink_720_1280/0/1559542163815?e=2147483647&v=beta&t=HcFk86NzEYQnUPA4awTckvTs1I9v_KzBgSwpkUMKZlo"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Gaja Krishna Vaidyanatha"
        ],
        "publish_date": "2017-08-09T14:37:45+00:00",
        "summary": "",
        "meta_description": "Recapitulate: My formative years as an Oracle software engineer and a Database Administrator, that set me on the path to become a data practitioner was captured here - Confessions of a Relational Bigot - My Journey from Oracle to NoSQL : Part I - Prelude & Early Days (1992 - 1997). In this article,",
        "meta_lang": "en",
        "meta_favicon": "https://static.licdn.com/aero-v1/sc/h/al2o9zrvru7aqj8e1x2rzsrca",
        "meta_site_name": "",
        "canonical_link": "https://www.linkedin.com/pulse/confessions-relational-bigot-my-journey-from-oracle-part-vaidyanatha",
        "text": "Recapitulate:\n\nMy formative years as an Oracle software engineer and a Database Administrator, that set me on the path to become a data practitioner was captured here - Confessions of a Relational Bigot - My Journey from Oracle to NoSQL : Part I - Prelude & Early Days (1992 - 1997). In this article, I will share with you the events of the 2nd half of the first decade of my work-life. A lot happened in the industry as well as in my own relational journey.\n\nChapter 4 — Relational Databases, The Internet Bubble, Proprietary Hardware, Unix & Procurement\n\nRelational Databases & The Internet Bubble\n\nThe 1990s was a transformation period for computing, as the glory days of the mainframe ended and client-server/open-systems took center-stage in every IT organization. The PC market was going gangbusters. There were quite a few people who became Dellionaires (either working for Dell Corporation or playing their stock). Others made their riches on Oracle, Sun Microsystems, Cisco, Microsoft and International Business Machines (IBM), to name a few. The relational database market was defined and dominated by 5 players — Oracle, Sybase, Informix, DB2 UDB & SQL*Server.\n\nTo this day, I believe that Informix had quite possibly the best database technology (based on version 7–9). Informix defined and drove the object-relational space (with the Illustra acquisition) and boasted groundbreaking functionality. It was a great database that provided time-series and spatial extensions for the usual relational fare, in high-transaction rate applications. At the time, it was very evident that Oracle and Microsoft were both playing catch-up to Informix’s innovations. One cannot forget the ‘Billboard Wars’ of the 1990s on Highway 101 along the Marine World Parkway exit. If Informix Corporation had gotten their act together, the relational market would be quite different today. But they were plagued with a lot of internal issues — ineffective marketing, lack of corporate governance and executive wrongdoing. Informix unable to stay in business on their own and was acquired by IBM for USD $1 billion in July 2001. In April 2017, IBM outsourced the future development of Informix to the Indian services company HCL, through a 15-year partnership agreement.\n\nSimilarly, Sybase had one of the best database replication technology and was deployed in many high-transaction rate environments (some of large logistics companies of the world used Sybase for their package tracking systems). It had a very loyal customer base but lacked the staying power in an ever-changing market. They too could not hold it together on their own. SAP eventually acquired them for USD $5.8 billion in 2010.\n\nIn comparison, Oracle did really well, continuously delivering a solid database product in the market. It demonstrated relentless power to be a market leader. During my early years, Oracle had approximately 40–48% of the relational database market. Although it was initially perceived as ‘weak’ in the applications segment, the re-launch of Oracle Apps as a 100% Java product and the M&A activities from 2002 changed that perception. The acquisition of PeopleSoft, Siebel and a slew of other companies, gave Oracle the foothold and dominant position in the applications space.\n\nThe mid-to-late 1990s was also the era when relational databases were perceived as one of the coolest technologies to work with. Oracle was considered the flagship database product and dominated the market during the ‘internet boom’. One was aggressively headhunted with multiple offers in the job market, if one could just spell Oracle (Today’s Talent Acquisition = Yesterday’s Headhunting). Oracle skills were in such high demand that people started to move into this space in droves. This high demand created a false sense of job security. The stock market saw excessive speculation on anything that had the word ‘Internet’ or the ‘e/E/i/I’ prefix or suffix. This hype caused stock prices to rise to artificial and dizzy heights. The fundamentals of finance and business went out the window. This false sense of prosperity made the future look very ominous. The market eventually came to its senses and crashed. The false sense of job security quickly vanished when the ‘bubble burst’ and ‘dotcom’ companies fell by the wayside. Unemployment suddenly skyrocketed and that meant a very hard landing for many people.\n\nProprietary Hardware & Unix\n\nThe Unix server market was dominated by Sun Microsystems (Sun), Hewlett-Packard (HP), Digital Equipment Corporation (DEC) & IBM. They all had their own proprietary chip architectures, and their own flavors of Unix (Solaris, HP-UX, Digital UNIX/Tru64 & AIX respectively). This technically-hand-cuffed a customer whenever a single-vendor decision was made. Companies that went the route of a single-vendor, called themselves an ‘IBM shop, a Sun shop, an HP shop…and so on’. The larger companies, whose pockets were deep, had the luxury of playing with multiple vendors and then deciding which one best suited their needs. Dell Corporation & COMPAQ Corporation dominated the Windows Server market. Most corporate entities aligned themselves with a primary server vendor.\n\nOne other Unix-based server vendor requires an honorable mention here — Sequent Computer Systems. Sequent had a symmetric multiprocessing computing platform and a Non-Uniform Memory Architecture (NUMA-Q) based computing paradigm. It was considered state-of-the-art for the time. Sequent’s version of Unix was called DYNIX. I had the pleasure of working on a Sequent system in 1998, during one of my consulting projects. But then again, with the market rapidly changing and commodity hardware becoming the norm, Sequent was forced to shut its doors in 1998, when IBM bought it for USD $810 million. I will write about Silicon Graphics Inc. (SGI), another hardware vendor in the next chapter, as it played a bigger part in my journey.\n\nProcurement — Then & Now\n\nGiven the focus on hardware and servers in this chapter, let’s talk about the 1990s method of hardware procurement and systems deployment. During this period, project planning for systems always involved an on-site visit from one’s favorite hardware sales team. They took your requirements during your planning phase and came back with a quote for a server. The entire process of hardware procurement took anything up to 16–24 weeks. It all depended on the size of the company one worked for, the budget and purchasing power, level of influence with the vendor and other geo-political factors. Not to mention the many weeks that one spent after the system was delivered installing all of the software and making it ready for use. You were stuck with the system that you procured, regardless of how it worked or was sized.\n\nCompare that to today’s world, where one can procure and deploy an enterprise-class server (albeit a virtual one) on Amazon Web Services (AWS), Microsoft Azure or Google Cloud Platform (GCP), installed with one’s choice of the OS and database in a matter of minutes. You also get to shrink and expand your system, pretty much at will. It is amazing how Cloud Computing has truly transformed the way hardware procurement and systems deployment is done. This is great progress! If hardware provisioning at your company still takes 16 weeks, it is my humble opinion that the clock in your company has stopped in the 1990s.\n\nChapter 5 — RAID, My Love for DEC & SGI, Breaking Free\n\nRAID — More than an insecticide!\n\nFor the first 7 years of my life in the US (1990–1997), the only RAID I knew was insecticide found it in the aisles of the grocery store. The term Redundant Array of Inexpensive/Independent Disks (the other RAID) came into my vocabulary in early 1998. I was working for Stonebridge Technologies as an Oracle consultant in Austin, Texas and the hardware vendor at our customer site, introduced me to RAID and the different flavors — RAID 0–7 (not counting RAID-S and AutoRAID). The popular ones were 0, 1, 0+1, 1+0 & 5.\n\nThe distributed parity of RAID 5 (in lieu of mirroring) and the overhead it posed worried me from the first time I read about it. I just could not fathom how this significant overhead, both during writes and during ‘rebuilding from partial failures in degraded mode’, would contribute positively, to the performance of write-intensive applications. Yes, it worked well for a predominantly read workload, but was marketed as less expensive when compared to RAID 10 (mostly without including the cost of the cache). Storage vendors at the time did everything to mask the performance problem of RAID 5. They allocated large amounts of cache to their storage systems to mask the problem. More often than not, the Oracle performance issues encountered in a RAID 5 storage environment, stemmed from inadequate storage performance capacity (IOPS & transfer rate), which then resulted in very high ‘service-times’. The parity overhead ‘stuck out like a sore thumb’.\n\nMy Love for DEC & SGI\n\nDuring a project with Stonebridge Technologies in 1997, the customer had Oracle 8 running on a DEC Alpha 8500 series with Digital UNIX. In the 12+ months that I was involved in the project, neither the OS nor the server had a single hiccup. Oracle also seemed to be a lot more stable (fewer issues when compared to its predecessor on HP-UX). And it was fast, with a discernible difference in elapsed times across all of the SQL in our core workload. It was a fantastic OS housed inside a fabulous server. Digital UNIX/Tru64 was my first taste of a 64-bit operating system. I absolutely loved it!\n\nIn early 1998 while still with Stonebridge, an SGI consultant introduced me to the Origin 2000 server — https://en.wikipedia.org/wiki/SGI_Origin_2000, at one of our customer sites. I was in absolute awe, as I listened to him raving about its capabilities as a true high performance computing platform that scaled for the needs of the time — It had its own flavor of UNIX called IRIX; it was also a true 64-bit OS; based on a node-based architecture; up to 512 processors and 512 GB of memory; the nodes were linked with a Non Uniform Memory Architecture (NUMA) interconnect; had a Crossbow (XBOW) architecture for its I/O sub-system that could support a ton of I/O. Remember the timeframe — 1998 — This was a server and a half!\n\nAs part of the 1TB data warehouse that we were deploying in 1998, we looked at the available RAID options that the Origin 2000 offered. RAID 3 (striped volume with a dedicated bit-level parity disk) caught our attention. In all of our comparison tests between RAID 5 and RAID 3, the latter won by a significant margin (measured in elapsed time of the jobs, IOPS, average service time and transfer rate). Armed with the results and solid performance data, we made the decision to implement the storage layer in RAID 3. We then re-factored the code to leverage this great throughput capacity of the Origin 2000. We parallelized relevant operations within the Oracle database and optimized the code. There were batch jobs that previously did not finish in 3 days, that completed in 45 minutes. This mega-project, which was originally in ‘red’ status, went to ‘green’ in a matter of 45 days. The project went live on time! Thank you, Paul Scott and Kevin Embree, for giving me the freedom to express myself at work. I thoroughly enjoyed our time together in Austin and it was a pleasure working for both of you.\n\nSGI’s incredible media-streaming server from the 1990s had all the traits of a supercomputer and could have made a killing as THE preferred platform for Very Large DataBases (VLDBs). In my mind they had the perfect server for data warehousing. They missed that HUGE opportunity and did not evolve when the X86-based commoditization began. Instead, they tried launching Windows NT workstations with their expensive hardware. Beats me as to why that made any business sense to anyone, when Dell was selling cheaper commodity Windows NT PCs like hotcakes. At the time of the writing of this article the remains of SGI is owned by Rackable Systems. SGI filed for bankruptcy in 2009. Sigh!\n\n1998 remained a terrible year with the fall of another computing giant. It was the beginning of the end for DEC, as they sold bulk of their products, IP and assets to COMPAQ. DEC was first sold to COMPAQ, followed by COMPAQ getting acquired by HP. Digital UNIX and SGI IRIX were some of the best flavors of UNIX that I have worked on. At the time, they were miles ahead compared to HP-UX, Solaris, AIX & DYNIX. I will go on record and state that they were even better than any flavor of Linux I have worked on.\n\nBreaking Free\n\nThe underlying reasons why so many well-established hardware companies fell one after another were the same — commoditization of hardware, the role of Intel in the chip market and the surge of X86 as an industry standard. X86 and all of its successors became a viable alternative for expensive and proprietary chip architectures. It is human nature to seek freedom when we are shackled. It was only a matter of time before we broke free from proprietary architectures. This quest for freedom is the fundamental reason why the ‘hardware bloodbath’ occurred in the first place. And it reinforces the importance of two facts that are still relevant:\n\n1) The need for continuous technical evolution\n\n2) Voluntary embracing of mandatory market factors\n\nIn hindsight, IBM had the foresight to play their cards right and embrace the X86 revolution and Linux. They still stand strong after all these years. To a large extent, HP also has stood the test of time with its dominance in the blade server market. Sun, the darling server company of the dotcom age, does not exist in its original form anymore. Goes to show that the hardware vendors who evolved and opened their doors to commodity hardware & open source UNIX (Linux) have thrived. As for the others, they have made the annals of computing with historians writing about them. In the software space, clear messaging and marketing that are congruent with the market forces is important. Of course, credibility and integrity are required elements in business. When legal boundaries are pushed in pursuit of profits or personal greed, the consequences will be pretty dire.\n\nChapter 6 — You’ve Got Mail, Oracle Performance Management, Storage Management, Floating Points & Back to the Mothership\n\nYou’ve Got Mail\n\nIf you haven’t done already, go ahead and watch this movie from 1998, which qualifies as the early Internet days. It features Meg Ryan & Tom Hanks. And those 3 words are what people loved hearing. The internet service provider — America On Line (AOL) announced that you have e-mail in your Inbox, each time you logged in. You will get a kick out of this one and will also appreciate how far we have come in 20+ years :)\n\nGetting on the ‘Information Superhighway’ and accessing the World Wide Web was a fashionable thing to do in the late 1990s. One to check e-mail and browse this world of information and marketing (The Internet). Thus began the era of dial-up modems with speeds up to 56 Kbps. The crackling sound of a dial-up modem became part of every household. Check this out for old times’ sake — https://www.youtube.com/watch?v=abapFJN6glo. Digital Subscriber Line (DSL) and its successors soon followed suit, supporting much higher bandwidth and speeds. I also remember my first mobile phone, a Nokia 5110 released in 1998 — https://parade.com/5457/iraphael/the-evolution-of-the-cell-phone/, which now looks like an ancient space gadget.\n\nWe browsed the Web using Yahoo Search, Excite, AltaVista (a DEC contribution) or AskJeeves. Google came into my life in 2000, when a co-worker showed me the power of a ‘simple search box’ without any unnecessary marketing content. I have never looked back since then. Netscape Navigator was the competitive offering to Internet Explorer (IE). It was first released in 1994 and was considered the cooler browser. There were ‘browser wars’ between IE & Netscape, each competing to outdo the other in every new release. Mozilla Firefox came much later in 2002 and Google Chrome even later in 2008.\n\nOracle Performance Management — Time for some Oracle Geek Speak!\n\nIn 1999, I had the pleasure of re-reading the Yet Another Performance Profiler (YAPP) paper written by Anjo Kolk. It changed my perspective (and many others) who worked on Oracle Database Performance. The paper talked about the importance of the mantra — Response Time = Service Time + Wait Time. This made a huge impression on me and I felt the need to re-engineer my own thought processes in the space of Oracle performance tuning. I embraced the Oracle Wait Interface (v$system_event, v$session_event & v$session_wait & the 10046-diagnostic event) with both arms and started engaging in Oracle tuning engagements very differently. I started to focus primarily on the application problem (SQL), on step-level execution plan inefficiencies (thanks to ROWSTATS in Oracle 9i) and less on instance configuration. Yes, certain Oracle parameters when set incorrectly can cause performance issues, but SQL is 90% or more of most application performance problems. This was the inflection point, when I totally moved into the area of Oracle Performance. In hindsight, what I taught in the Oracle 7/8 Performance Tuning classes for Oracle Education (1995–1997), was unnecessarily focused on the various init.ora parameters and cache-hit ratios, instead of ‘what resources is the SQL consuming and waiting for’. We need to continually filter the noise and pay enough attention to the important aspects of our lives.\n\nThe huge potential of the Oracle Wait Interface got me to author a paper and presentation titled ‘Oracle Performance Management’, which I then presented at the International Oracle Users Group-Americas (IOUG-A) in 2000. Along with my peers at the Oaktable Network, I embarked on a 2-year journey, where we extensively spoke about this alternate method at every possible conference. I even got my audiences to chant ‘Cache-hit ratios are for losers’, at the beginning of the talk :) Jokes aside, I wanted them to focus on ‘SQL waits’ & Logical I/O (Oracle’s foreground CPU time is spent mostly here). Everything else was secondary. Those were exciting times. We made an impact and people saw the benefit of this approach. This laid the foundation for my first literary project — ‘Oracle Performance Tuning 101’ published by Oracle Press in 2001.\n\nStorage Management for Oracle — The Israel Connection!\n\nMy interest in the performance of Oracle combined with its interplay with the OS and storage continued, as I delved deeper in the area of systems performance management. It was during one of those IOUG-A conferences in San Diego, CA that I met Eyal Aronoff, the CTO of Quest Software, at the time. He was considered a product visionary in the Oracle tools market. He provided the vision for many products at Quest Software, including Space Manager, LiveReorg, Spotlight on Oracle, Quest-Central and SharePlex to name a few. After one of my Oracle on RAID presentations, we chatted and that resulted in an offer for me to work at Quest Software. My role was to head up the Storage Management Products Group and to provide technical and strategic direction for a new product line. This was my first stint at Product Management and the year was 2000. Although I still lived in Dallas, Texas at the time, I was most definitely transported to the moon and back!\n\nOn my first visit to Tel Aviv, Israel in 2000 (at the height of the Israeli-Palestinian Conflict), I met the StorageXpert engineering team. I have some very interesting stories to tell you on how I did StorageXpert product demos, for the Israeli Security Forces at Ben Gurion airport at 3:00 a.m. on the day(s) of my departure(s). But that is for another time. Quest Software Israel was located in Or Yehuda, one of the Tel Aviv’s suburbs. Apart from learning a little Hebrew and savoring Mediterranean cuisine (Chatzileem, Baba Ghanoush, Tahini and more), I got to know 2 incredible guys really well — Eyal Kalderon & Shlomo Urbach. They were senior engineers in the team. I have met some really smart guys in my work-life, but these guys were from a different zone. They took me on a deep dive into the internals of some Unix system calls including (but not limited to) wstop. This system call allowed one to stop a system call, capture the parameters in the call and let it proceed all within a fraction of a microsecond. Cool…huh?\n\nIn the latter half of 2001, we brought to market, the first ever object-level I/O bottleneck detection tool — StorageXpert for Oracle; StorageXpert was supported on Oracle 7.3, 8.0 and 8i across all relevant Unix flavors (Solaris, HP-UX, Digital UNIX, AIX & Windows NT). As a software vendor in the early 2000s, one was required to support the various flavors of the operating systems (OS) that the server vendors supported. Porting software across multiple flavors of Unix had a plethora of issues, primarily due to the lack of a standard or a core OS code-set in UNIX-land. Although IEEE released Portable Operating System Interface (POSIX) standard in 1988, not all hardware vendors embraced this immediately and the different flavors of Unix had varying degrees of POSIX compliance over the years.\n\nStorageXpert was a revolutionary product as it visually exposed block-level hot spots within a table or index. The identification of hot tables and indexes allowed an administrator to take the necessary action from an optimization standpoint (i.e., tune the SQL, reduce block-level contention and so on). Administrators were also able to perform relevant tier-based storage provisioning for the colder objects. When one moved colder objects out of Tier1 storage, one created more ‘capacity’ (both space and performance) for the primary hot objects (usually a smaller sub-set).\n\nThis was especially true for ERP applications that boasted tens of thousands of tables and even more indexes. Tier1 storage was still very expensive those days and StorageXpert helped companies maximize and leverage the Tier1 storage investment for much longer time periods. It was also a period of recession (after the Internet Bubble burst) and IT spending was cut across the board, making the value proposition unquestionable. The movement of objects from one tablespace to another (Tier1 to Tier2) was integrated with LiveReorg. I wish someone would lend me a time machine, so that I may go back to those days. I truly was in techie heaven!\n\nFloating Points with Oracle & Orcas!\n\nIn June 2001, I had the pleasure of presenting at a very special conference. Let’s just say that it gave a new meaning to the term ‘floating point’. The presentation room swayed from side to side during my talks and it depended on a variety of geo-climatic factors. I was aboard a Holland America cruise ship — MS Veendam, on a Geek Cruise titled — Database Discovery 2001. The cruise took us through ‘The Inside Passage’ from Vancouver, British Columbia to Seward, Alaska, making port calls at Ketchikan, Sitka and Juneau. The cruise lasted 7 days and it was a fantastic experience. I got to do 3 Oracle talks at the conference and in exchange got to see nature like never before. Alaska was stunningly beautiful. I was fortunate enough to learn more about the Native American culture at Sitka and interact with a ‘school of Orcas’ during a shore excursion in Juneau. I also got to share a meal one evening, with my dear friend Tim Gorman, who was radiating whilst wearing a Scottish kilt! I couldn’t have asked for more out of a technical conference! Thank you, Neil Bauman, for enriching my life with this wonderful experience.\n\nBack to the Mothership\n\nI rejoined Oracle Corporation at Redwood Shores, CA in the System Management Products Group in June 2002. I was initially asked to build functionality in Oracle Enterprise Manager (OEM) that competed with StorageXpert. But the Universe had different plans for me. As it would turn out, Kyle Hailey, John Beresniewicz, James Morle, Graham Wood and I got together to re-architect the ‘performance pages’ of OEM (renamed as Oracle GridControl) in Oracle 10g. Graham was already working on Active Session History (ASH) and Automatic Database Diagnostic Monitor (ADDM) and our collaboration (between System Management Products & Server Technologies) was deemed perfect. The foundation of the performance screens in Oracle GridControl 10g revolved around 3 things — SQL, Waits & Sessions. I called it the ‘Triangle of Performance’ (ToP). We used Scalar Vector Graphics (SVG), an Adobe plugin for rendering the real-time graphs. And with that, we changed Oracle’s offering in the database performance tools market.\n\nTo be continued…"
    }
}