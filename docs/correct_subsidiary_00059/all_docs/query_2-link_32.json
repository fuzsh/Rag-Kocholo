{
    "id": "correct_subsidiary_00059_2",
    "rank": 32,
    "data": {
        "url": "http://www.catb.org/~esr/halloween/halloween9.html",
        "read_more_link": "",
        "language": "en",
        "title": "Halloween IX: It Ain't Necessarily SCO",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Rob Landley",
            "Eric Raymond"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Nature of This Action\n\n1. UNIX is a computer operating system program and related software originally developed by AT&T Bell Laboratories (“AT&T”). UNIX is widely used in the corporate, or “enterprise,” computing environment.\n\n2. Through a series of corporate acquisitions, SCO presently owns all right, title and interest in and to UNIX and UnixWare operating system source code, software and sublicensing agreements, together with copyrights, additional licensing rights in and to UNIX and UnixWare, and claims against all parties breaching such agreements. Through agreements with UNIX vendors, SCO controls the right of all UNIX vendors to use and distribute UNIX. These restrictions on the use and distribution of UNIX are designed to protect the economic value of UNIX.\n\n3. A variant or clone of UNIX currently exists in the computer marketplace called “Linux.” Linux is, in material part, based upon UNIX source code and methods, particularly as related to enterprise computing methods found in Linux 2.4.x releases and the current development kernel, Linux 2.5.x. Significantly, Linux is distributed without a licensing fee and without proprietary rights of ownership or confidentiality.\n\n4. The UNIX software distribution vendors, such as IBM, are contractually and legally prohibited from giving away or disclosing proprietary UNIX source code and methods for external business purposes, such as contributions to the Linux community or otherwise using UNIX for the benefit of others. This prohibition extends to derivative work products that are modifications of, or based on, UNIX System V source code or technology. IBM and certain other UNIX software distributors are violating this prohibition, en masse, as though no prohibition or proprietary restrictions exist at all with respect to the UNIX technology. As a result of IBM's wholesale disregard of its contractual and legal obligations to SCO, Linux 2.4.x and the development Linux kernel, 2.5.x, are filled with UNIX source code, derivative works and methods. As such, Linux 2.4.x and Linux 2.5.x are unauthorized derivatives of UNIX System V.\n\n5. As set forth in more detail below, IBM has breached its obligations to SCO, induced and encouraged others to breach their obligations to SCO, interfered with SCO's business, and engaged in unfair competition with SCO, including by:\n\na) misusing UNIX software licensed by SCO to IBM and Sequent;\n\nb) inducing, encouraging, and enabling others to misuse and misappropriate SCO's proprietary software; and\n\nc) incorporating (and inducing, encouraging, and enabling others to incorporate) SCO's proprietary software into Linux open-source software offerings.\n\n6. As a result of these breaches, SCO sent a notice of termination to Mr. Sam Palmisano, the Chief Executive Officer of IBM on March 6, 2003. The termination notice specified that, pursuant to SCO's contractual rights under controlling agreements, IBM's right to use or distribute any software product based on UNIX System V technology, including its own version of UNIX known as “AIX,” would be terminated on June 13, 2003, unless such breaches were reasonably cured prior to that time.\n\n7. The termination notice was based, in part, on IBM's self-proclaimed contributions of AIX source code to Linux, and use of UNIX/AIX methods for accelerating the development of Linux in contravention of IBM's contractual obligations to SCO.\n\n8. Pursuant to its rights under the controlling agreements, IBM was entitled to 100 days to cure its underlying contractual breaches, provided it was willing and able to do so. Both parties were contractually required to “exert their mutual good faith best efforts to resolve any alleged breach short of termination.”\n\n9. To that end, SCO did everything reasonably in its power to exert a good faith effort to resolve the termination of IBM's UNIX contract rights. Conversely, during the 100-day period, IBM did not set forth a single proposal or idea for cure.\n\n10. SCO has therefore terminated IBM's right to use any part of the UNIX System V source code, including its derivative AIX, effective as of June 13, 2003 (the “AIX Termination Date”).\n\n11. As of the AIX Termination Date, IBM is contractually obligated to discontinue use of and return or destroy any and all copies of the Software Products defined in the controlling agreements, which include UNIX System V source code and all its derivatives, including AIX.\n\nBackground Facts\n\nThe UNIX Operating System\n\n18. UNIX is a computer software operating system. Operating systems serve as the link between computer hardware and the various software programs (“applications”) that run on the computer. Operating systems allow multiple software programs to run at the same time and generally function as a “traffic control” system for the different software programs that run on a computer.\n\n19. By way of example, in the personal computing market, Microsoft Windows is the best-known operating system. The Windows operating system was designed to operate on computer processors (“chips”) built by Intel. Thus, Windows serves as the link between Intel-based processors and the various software applications that run on personal computers.\n\n20. In the business computing environment for the Fortune 1000 and other large corporations (often called the “enterprise” environment), UNIX is widely used.\n\n21. The UNIX operating system was originally built by Dennis Ritchie, Ken Thompson and other software engineers at AT&T Bell Laboratories. After successful in-house use of the UNIX software, AT&T began to license UNIX as a commercial product for use in enterprise applications by other large companies.\n\n22. Over the years, AT&T Technologies, Inc., a wholly owned subsidiary of AT&T, and its related companies licensed UNIX for widespread enterprise use. IBM, Hewlett-Packard, Inc. (“HP”), Sun Microsystems, Inc. (“Sun”), Silicon Graphics, Inc. (“SGI”) and Sequent became some of the principal United States-based UNIX licensees, among many others.\n\n23. IBM, HP, Sun, SGI and the other major UNIX vendors each modified UNIX to operate on their own processors. Thus, for example, the operating system known as “HP-UX” is HP's version of UNIX. HP-UX is a modification of and derivative work based on UNIX System V source code.\n\n24. Similarly, the operating system known as Solaris is Sun's version of UNIX. Solaris is a modification of, and derivative work based on, UNIX System V source code.\n\n25. SGI's UNIX-based operating system is known as “IRIX.” IRIX is a modification of, and derivative work based on, UNIX System V source code.\n\n26. IBM's UNIX-based operating system is known as “AIX.” AIX is a modification of, and derivative work based on, UNIX System V source code.\n\n27. Sequent's UNIX-based operating system is known as “DYNIX/ptx.” DYNIX/ptx is a modification of, and derivative work based on, UNIX System V source code.\n\n28. The various identified versions of UNIX are sometimes referred to as UNIX “flavors.” All commercial UNIX “flavors” in use today are modifications of and derivative works based on the UNIX System V Technology (“System V Technology”). Were it not for UNIX System V, there would be no UNIX technology or derivative works available for IBM and others to copy into Linux.\n\n29. SCO is the sole and exclusive owner of all Software and Sublicensing Agreements that control use, distribution and sublicensing of UNIX System V and all modifications thereof and derivative works based thereon. SCO is also the sole and exclusive owner of copyrights related to UNIX System V source code and documentation and peripheral code and systems related thereto.\n\n30. During the 1990s the enterprise computing market for high-performance workstation computers came to be dominated by UNIX and the primary UNIX vendors identified above, each supplying its own version of the UNIX operating system based on UNIX System V Technology. UNIX became synonymous with “workstation” computers that typically operated on a RISC processing platform.\n\n31. The RISC processing platform provides high-power computing capabilities at a relatively higher price for “workstation” computing. The alternative to “workstation” computing is commonly known as “desktop” computing on personal computers. The operating system market for “desktop” personal computers is dominated by Microsoft Corporation and its various Windows-based operating system products. The reason for this distinction is that most desktop computers (PC's) are designed to operate on Intel and Intel-compatible computing platforms. Most workstations are designed to operate on variants of RISC processing platforms and RISC-compatible computing platforms. PC systems and RISC systems are not compatible with each other. Thus, most versions of UNIX will not operate on Intel-based PC's for desktop computing; and Windows will not operate on RISC-based workstations for enterprise computing.\n\n32. Most of the primary UNIX vendors identified above did not attempt to develop a UNIX “flavor” to operate on an Intel-based processor chip set. This is because the earlier Intel processors were considered to have inadequate processing power for use in the more demanding enterprise market applications.\n\nSCO's Creation of a Market for Intel - The Genesis of SCO OpenServer\n\n33. As computers grew in popularity to perform business functions, the processing power of Intel-based processor chips also began to increase dramatically. Consistent with Intel founder Gordon Moore's prediction, computer chips remained inexpensive while exponentially increasing in power and performance.\n\n34. Seeing this emerging trend, it became evident to SCO that Intel chips would gradually gain widespread acceptance for use in the enterprise marketplace.\n\n35. Therefore, while other major UNIX vendors modified UNIX for their own respective RISC-based computing platforms, SCO developed and licensed the UNIX-based operating system for Intel-based processors for enterprise use that is now known as “SCO OpenServer.”\n\n36. SCO's early engineers faced difficult design challenges in modifying UNIX for effective use on an Intel processing platform. The principal design constraint centered around the limited processing power the Intel chip possessed in the early 1980's. The Intel chip (designed as it was for personal computers) was not nearly as powerful as the enterprise chips used by IBM, Sun, SGI and others in their respective UNIX offerings.\n\n37. Based on the early design constraint of Intel's limited processing power, SCO found an appropriate enterprise market niche for the early versions of SCO OpenServer—single-purpose applications such as point-of-sale control, inventory control and transactions processing, with the highest possible reliability. Intel processors were fully capable of performing these relatively simple, repetitive tasks, and could do so at a lower cost and as reliably as the more powerful enterprise processing platforms sold by the other UNIX vendors, such as Sun and IBM.\n\n38. One example of a customer well suited to the earlier version of SCO OpenServer software is McDonald's Corp. McDonald's has thousands of stores worldwide and needs all stores to operate on an integrated computing platform for ease of use, immediate access to information and uniformity. However, the actual computing requirements for each individual McDonald's location are functionally simple—sales need to be tracked and recorded, and inventory functions need to be linked to sales. SCO OpenServer reliably fulfills McDonald's computing requirements at reduced cost.\n\n39. SCO's business model for SCO OpenServer provides enterprise customers the reliability, extensibility (ease of adding or changing functionality), scalability (ease of adding processors or servers to increase processing power) and security of UNIX—but on inexpensive Intel processor chips. This combination allowed customers to perform an extremely high number of transactions and, at the same time, gather and present the information from those transactions in an economical and useful way for enterprise decision makers.\n\n40. The simplicity and power of this “UNIX on Intel” business model helped SCO grow rapidly. SCO gained other large enterprise customers such as CitiGroup, K-Mart, Cendant, Target Stores, Texas Instruments, Walgreens, Merck, Sherwin Williams, Radio Shack, Auto Zone, British Petroleum, Papa John's Pizza, Costco and many others.\n\n41. As Intel's prominence grew in the enterprise computing market, SCO's early version of OpenServer also grew into the operating system of choice for enterprise customers who wanted an Intel-based computing solution for a high volume of repetitive, simple computing transactions.\n\n42. SCO OpenServer is based on the original UNIX Software Code developed by AT&T, but was modified by SCO for the functionality described above. Thus, while performing single-function applications, SCO OpenServer did so, and continues to do so, with the 99.999% reliability of UNIX.\n\n43. Over 4,000 separate applications have been written by developers around the world specifically for SCO OpenServer. Most of these applications are vertical applications for targeted functions, such as point-of-sale control for specific industries, inventory control for specific industries, and related functions.\n\nThe SCO OpenServer Libraries\n\n44. Much of the functionality of an operating system is made available to application developers by means of “libraries” of code that are supplied by the operating system vendor. These libraries contain many “functions” or “routines” which can be used by application developers to perform various common tasks such as reading or writing a file or opening a new window on the screen.\n\n45. SCO OpenServer, as with many other operating systems such as Microsoft Windows, makes use of a special kind of library called a “shared library.” The code for all of the routines in a particular shared library is stored in a separate file, and this code is loaded into memory “on demand” when an application needs to make use of it. There are several benefits that come from using “shared libraries” - applications can be smaller and use less memory because a single copy of the library code is “shared” by all of the applications that make use of it, and system vendors can easily update the library code in order to fix problems or provide enhanced functionality. A side effect of this is that it is also very easy to make a copy of a shared library.\n\n46. In creating the thousands of SCO OpenServer Applications, each designed for a specialized function in a vertical industry, software developers wrote software code which specifically made use of the SCO OpenServer shared libraries (hereinafter the “SCO OpenServer Shared Libraries”), and thus the presence of the SCO OpenServer Shared Libraries on a particular system is required in order for these applications to be able to run and function correctly.\n\n47. Linux offers a “SCO emulation module,” originally called “iBCS” and now known as “linux-abi” which enables applications which were originally developed to run on SCO OpenServer to be run on Linux. However, in order for these applications to function, the SCO OpenServer Shared Libraries must also be copied onto the Linux system. The SCO OpenServer Shared Libraries are the proprietary and confidential property of SCO. SCO OpenServer has been licensed to numerous customers subject to restrictions on use that prohibit unauthorized use of any of its software code, including without limitation, the SCO OpenServer Shared Libraries. SCO does not give permission for copying of the Shared Libraries for use outside OpenServer without payment of separate licensing fees.\n\nSCO's Development of UnixWare on Intel\n\n48. While the original SCO OpenServer operating system performs with all the reliability and dependability of other UNIX systems, it was originally designed for the initially low processing power of Intel chips. Therefore, SCO OpenServer does not offer the same level of multiprocessor capabilities that other versions of UNIX offer.\n\n49. During or about 1992, SCO's predecessor in interest, Novell, Inc. (“Novell”), acquired from AT&T all right, title and interest in and to the UNIX software code, the AT&T Software and Sublicensing Agreements, the copyrights and related and ancillary products for $750 million in Novell stock. For branding purposes, Novell renamed UNIX as “UnixWare.”\n\n50. On or about September 19, 1995 the Santa Cruz Operation acquired all right, title and interest in and to UNIX and UnixWare source code, the AT&T Software and Sublicensing Agreements, the copyrights, claims arising after the closing date against any party and all related and ancillary products and rights from Novell, excepting only the right to certain existing ongoing royalty payments which was retained by Novell.\n\n51. From and after September 1995, SCO dedicated significant amounts of funding and a large number of UNIX software engineers, many of whom were original AT&T UNIX software engineers, to upgrade UnixWare for high-performance computing on Intel processors.\n\n52. By approximately 1998, SCO had completed the majority of this task. That is to say, UnixWare had largely been modified, tested and “enterprise hardened” to use Intel-based processors in direct competition against IBM and Power PC chips, the Sun SPARC chip and all other high-performance computing UNIX platforms for all complex computing demands. The term “enterprise hardened” means to assure that a software product is fully capable of performing under the rigorous demands of enterprise use.\n\n53. SCO was ready to offer large enterprise customers a high-end UNIX computing platform based on inexpensive Intel processors. Given the rapid growth of Intel's performance capabilities and Intel's popularity in the marketplace, SCO found itself in a highly desirable market position. In addition, SCO still had its SCO OpenServer business for retail and inventory-targeted functions, with its 4,000 applications in support.\n\n54. Prior to the events complained of in this action, SCO was the undisputed global leader in the design and distribution of UNIX-based operating systems on Intel-based processing platforms.\n\nProject Monterey\n\n55. As SCO was poised and ready to expand its market and market share for UnixWare targeted to high-performance enterprise customers, IBM approached SCO to jointly develop a 64-bit UNIX-based operating system for a new 64-bit Intel platform. This joint development effort was widely known as Project Monterey.\n\n56. Prior to this time, IBM had not developed any expertise to run UNIX on an Intel processor and instead was confined to its Power PC processor.\n\n57. SCO, on the other hand, had over 15 years of expertise in adapting UNIX to Intel based systems. Moreover, SCO had spent the previous 18 months working closely with Intel to adapt its existing UnixWare product to work on the new 64-bit Intel processor. That project, known as \"Gemini-64,\" was well underway when work on Project Monterey was started. In furtherance of, and in reliance on, IBM's commitment to Project Monterey, SCO ceased work on the Gemini-64 Project and expended substantial amounts of money and dedicated a significant portion of SCO's development team to Project Monterey. Specifically, plaintiff and plaintiff's predecessor provided IBM engineers with valuable information and trade secrets with respect to architecture, schematics, and design of UnixWare and the UNIX source code for both 32- and 64-bit Intel-based processors.\n\n58. By about May 2001, all technical aspects of Project Monterey had been substantially completed. The only remaining tasks of Project Monterey involved marketing and branding tasks to be performed substantially by IBM.\n\n59. On or about May 2001, IBM notified plaintiff that it refused to proceed with Project Monterey, and that IBM considered Project Monterey to be “dead.”\n\nThe AT&T UNIX Agreements\n\n60. AT&T Technologies originally licensed the UNIX operating system software code to hundreds of software licensees, including defendant IBM, for the UNIX operating system software source code, object code and related schematics, documentation and derivative works (collectively, the “UNIX Source Code”). To protect the confidential and proprietary source code information, these license agreements, as detailed below, contained strict limitations on use and distribution of UNIX source and binary code.\n\n61. When SCO acquired the UNIX assets from Novell in 1995, it acquired all right, title and interest in and to the UNIX operating system technology, including all claims against any parties relating to any right, property or asset used in the business of developing UNIX and UnixWare. As a result of this acquisition, SCO became the authorized successor in interest to the original position of AT&T Technologies with respect to all licensed UNIX software products.\n\n62. There are two primary types of software licensing agreements between AT&T Technologies and its various licensees:\n\na) The AT&T-related software agreements are collectively referred to hereinafter as the “AT&T UNIX Software Agreements.”\n\nb) The AT&T-related sublicensing agreements are collectively referred to hereinafter as the “AT&T UNIX Sublicensing Agreements.”\n\nThe AT&T UNIX Software Agreements and the AT&T UNIX Sublicensing Agreements are sometimes collectively referred to hereinafter as the “AT&T UNIX Agreements.”\n\n63. Plaintiff is successor in interest to, and owner of, all contractual rights arising from and related to the AT&T UNIX Agreements.\n\nThe IBM Related Agreements\n\n64. On February 1, 1985, AT&T and IBM entered into certain AT&T UNIX Agreements:\n\na) Software Agreement Number Soft-00015 (“AT&T / IBM Software Agreement” attached hereto and incorporated herein as Exhibit A);\n\nb) Sublicensing Agreement Number Sub-00015A (“AT&T / IBM Sublicensing Agreement” attached hereto and incorporated herein as Exhibit B).\n\n65. AT&T and IBM have entered into a side letter on that date (“AT&T / IBM Side Letter” attached hereto and incorporated herein as Exhibit C).\n\n66. In addition, AT&T and IBM have entered into nearly 400 supplemental agreements over the years, including Supplement No. 170 (Supplement No. 170 is attached hereto and incorporated herein as Exhibit D). Supplement No. 170 is the document that specifies the royalty amounts and computer CPUs upon which royalty amounts were due to be paid by IBM.\n\n67. Thereafter, Amendment X to Software Agreement SOFT-00015, as amended, was executed on or about October 16, 1996 by and among IBM, The Santa Cruz Operation, Inc. (“SCO”) and Novell, Inc. (“IBM Amendment X” attached hereto and incorporated herein as Exhibit E). Among other things, Amendment X effectuated a royalty buy-out by IBM pursuant to the royalty terms and amounts specified in Supplement No. 170.\n\n68. Collectively these agreements, side letter and amendment are referred to hereinafter as the “IBM Related Agreements.”\n\nThe Sequent Agreements\n\n69. On January 28, 1986, AT&T and Sequent (now an operating division of IBM) entered into certain AT&T UNIX Agreements:\n\na) Software Agreement Number SOFT-000321 (“Sequent Software Agreement” attached hereto and incorporated herein as Exhibit F);\n\nb) Sublicensing Agreement Number SUB-000321A (“Sequent Sublicensing Agreement” attached hereto and incorporated herein as Exhibit G).\n\n70. The Sequent Software Agreement and the Sequent Sublicensing Agreement are sometimes collectively referred to hereinafter as the “Sequent Agreements.”\n\nMarketplace Value of UNIX\n\n71. UNIX's value in the enterprise marketplace is largely a function of its reliability, extensibility, and robust performance capability. That is to say, it virtually never needs repair, it performs well under a wide variety of adverse circumstances, and it can be extended throughout an enterprise and across multiple processors to perform unified or disparate tasks in a seamless computing environment. Because of these features, UNIX-based equipment has replaced mainframe computers for all but the most demanding computing tasks. And, because UNIX-based equipment is far cheaper than mainframe computing equipment, a customer who cannot otherwise justify the cost of mainframe computers can otherwise gain the advantages of “supercomputing” operations through use of UNIX-based equipment.\n\n72. One or more of the different versions of UNIX-based operating systems sold by Sun, IBM, SCO, SGI, and others, is the operating system of choice for large enterprise computing operations in virtually 100% of the Fortune 1000 companies.\n\n73. UNIX gained this prominence in the computing marketplace because of twenty years of development and over one billion dollars invested by plaintiff and its predecessors to create a stable, reliable operating system to perform the mission critical work required by large enterprises.\n\n74. The recent rise of the global technology economy has been powered in large part by UNIX. Virtually every mission critical financial application in the world is powered by UNIX, including electronic transfers of funds. Real time stock trades are powered by UNIX. Inventory controls and distributions are powered by UNIX. All major power grids and all major telecommunications systems are powered by UNIX. Many satellite control and defense control systems are powered by UNIX. Virtually every large corporation in the world currently operates part or all of its information technology systems on a UNIX operating system.\n\n75. Based on its value in the marketplace, UNIX has become the most widely used and widely accepted operating system for enterprise, institutional and manufacturing applications throughout the world.\n\n76. Linux, or “GNU/Linux,” is an operating system variant or clone of UNIX System V Technology. According to leaders within the Linux community, Linux is not just a “clone,” but is intended to be a successor to UNIX System V. Linux, unlike UNIX, is distributed without a fee to its users.\n\n77. As long as the Linux development process lacked central coordination, its direction was primarily aimed at meeting the computing needs of the Linux programmers themselves. As such, it posed little or no practical threat to SCO or to other UNIX vendors since the Linux developers did not have access to sophisticated high-end enterprise class multiprocessor systems, nor did they have any particular interest in supporting such systems.\n\n78. The entire direction of Linux development changed with IBM's entry into the open-source community and its concerted efforts to control the community for its own economic benefit.\n\n79. In furtherance of its plan to destroy its UNIX competitors, IBM has announced its intention to make Linux, distributed to end users without a fee, the successor to all existing UNIX operating systems used by Fortune 1000 companies and other large companies in the enterprise computing market.\n\n80. However, as IBM executives know, a significant flaw of Linux is the inability and/or unwillingness of the Linux process manager, Linus Torvalds, to identify the intellectual property origins of contributed source code that comes in from those many different software developers. If source code is code copied from protected UNIX code, there is no way for Linus Torvalds to identify that fact.\n\n81. As a result, a very significant amount of UNIX protected code is currently found in Linux 2.4.x and Linux 2.5.x releases in violation of SCO's contractual rights and copyrights.\n\nIf the entire operating system based on the Linux kernel is considered, the number grows even worse. Red Hat Linux 7.1, an older representative Linux distribution, has over 30 million lines of code, so SCO is discussing code that is less than 0.01% of the entire system.\n\nThe Functional Limitations of Linux Before IBM's Involvement\n\n82. The first versions of Linux evolved through bits and pieces of various contributions by numerous software developers using single processor computers. Virtually none of these software developers and hobbyists had access to enterprise-scale equipment and testing facilities for Linux development. Without access to such equipment, facilities and knowledge of sophisticated development methods learned in many years of UNIX development it would be difficult, if not impossible, for the Linux development community to create a grade of Linux adequate for enterprise use.\n\n83. As long as the Linux development process remained uncoordinated and random, it posed little or no practical threat to SCO or to other UNIX vendors since the original Linux developers did not have access to multiprocessor code or multi-processor development methods needed to achieve high-end enterprise functionality.\n\n84. To make Linux of necessary quality for use by enterprise customers, it needed to be re-designed and upgraded to accommodate complex multi-processor functionality that has taken UNIX nearly 20 years to achieve. This re-design is not technologically feasible or even possible at the enterprise level without (a) a high degree of design coordination, (b) access to expensive and sophisticated design and testing equipment; (c) access to UNIX code and development methods; (d) UNIX architectural experience; and (e) a very significant financial investment.\n\nIBM's Scheme\n\n85. As market awareness of Linux evolved, IBM initiated a course of conduct with the purpose and effect of using Linux to unfairly compete in the enterprise market. At that point in time, four important events were occurring simultaneously in the enterprise software computing marketplace:\n\na) Intel chips were becoming widely demanded by enterprise customers since Intel's processing power had increased and its cost had remained low;\n\nb) SCO's market power in the enterprise marketplace was increasing based on the combined capabilities of SCO OpenServer, SCO UnixWare and SCO's unique position as UNIX on Intel;\n\na) Free Linux had carved a niche in not-for-profit and non-business uses; and\n\nb) IBM was in the process of evolving its business model from products to services.\n\n86. In the process of moving from product offerings to services offerings, IBM dramatically increased its staff of systems integrators to 120,000 strong under the marketing brand “IBM Global Services.” By contrast, IBM's largest historic competitor as a seller of UNIX software, Sun Microsystems, has a staff of approximately 12,000 systems integrators. With ten times more services-related personnel than its largest competitor, IBM sought to move the corporate enterprise computing market to a services model based on free software on Intel processors.\n\n87. By making the Linux operating system free to end users, IBM could undermine and destroy the ability of any of its competitors to charge a fee for distribution of UNIX software in the enterprise market. Thus, IBM, with its army of Global Services integrators who earn money by selling services, would gain a tremendous advantage over all its competitors who earn money by selling UNIX licenses.\n\n88. To accomplish the end of transforming the enterprise software market to a services-driven market, IBM set about to deliberately and improperly destroy the economic value of UNIX and particularly the economic value of UNIX on Intel-based processors.\n\n89. Among other actions, IBM misappropriated the confidential and proprietary information from SCO in Project Monterey. IBM thereafter misused its access to the UNIX source code.\n\n90. On or about August 17, 2000, IBM and Red Hat Inc. issued a joint press release through M2 Presswire announcing, inter alia, as follows:\n\nIBM today announced a global agreement that enables Red Hat, Inc. to bundle IBM's Linux-based software.\n\nIBM said it would contribute more than 100 printer drivers to the open source community. With these announcements, IBM is making it easier for customers to deploy e-business applications on Linux using a growing selection of hardware and software to meet their needs. The announcements are the latest initiative in IBM's continuing strategy to embrace Linux across its entire product and services portfolio.\n\nHelping build the open standard, IBM has been working closely with the open source community, contributing technologies and resources.\n\n91. Thereafter, on December 20, 2000, IBM Vice President Robert LeBlanc disclosed IBM's improper use of confidential and proprietary information learned from Project Monterey to bolster Linux as part of IBM's long term vision, stating:\n\nProject Monterey was actually started before Linux did. When we started the push to Monterey, the notion was to have one common OS for several architectures. The notion actually came through with Linux, which was open source and supported all hardware. We continued with Monterey as an extension of AIX [IBM UNIX] to support high-end hardware. AIX 5 has the best of Monterey. Linux cannot fill that need today, but over time we believe it will. To help out we're making contributions to the open source movement like the journal file system. We can't tell our customers to wait for Linux to grow up.\n\nIf Linux had all of the capabilities of AIX, where wecould put the AIX code at runtime on top of Linux, then we would.\n\nRight now the Linux kernel does not support all the capabilities of AIX. We've been working on AIX for 20 years. Linux is still young. We're helping Linux kernel up to that level. We understand where the kernel is. We have a lot of people working now as part of the kernel team. At the end of the day, the customer makes the choice, whether we write for AIX or for Linux.\n\nWe're willing to open source any part of AIX that the Linux community considers valuable. We have open-sourced the journal file system, print driver for the Omniprint. AIX is 1.5 million lines of code. If we dump that on the open source community then are people going to understand it? You're better off taking bits and pieces and the expertise that we bring along with it. We have made a conscious decision to keep contributing.\n\n92. IBM, however, was not and is not in a position legally to “open source any part of AIX that the Linux community considers valuable.” Rather, IBM is obligated not to open source AIX because it contains SCO's confidential and proprietary UNIX source code, derivative works and methods.\n\n93. Over time, IBM made a very substantial financial commitment to improperly put SCO's confidential and proprietary information into Linux, the free operating system. On or about May 21, 2001 IBM Vice President Richard Michos, stated in an interview to Independent Newspapers, New Zealand, inter alia:\n\nIBM will put US $1 billion this year into Linux, the free operating system.\n\nIBM wants to be part of the community that makes Linux successful. It has a development team that works on improvements to the Linux kernel, or source code. This includes programmers who work in the company's Linux technology center, working on making the company's technology Linux-compatible.\n\nThat team of IBM programmers is improperly extracting and using SCO's UNIX technology from the same building that was previously the UNIX Technology Center.\n\n94. In a news article issued by e-Business Developer on or about August 10, 2001, the following conduct was attributed to IBM regarding participation in the open-source software movement:\n\nAnother example is when IBM realized that the open-source operating system (OS) Linux provided an economical and reliable OS for its various hardware platforms. However, IBM needed to make changes to the source to use it on its full range of product offerings.\n\nIBM received help from the open-source community with these changes and in return, released parts of its AIX OS to open source. IBM then sold its mainframes running Linux to Banco Mercantile and Telia Telecommunications, replacing 30 Windows NT boxes and 70 Sun boxes respectively - obviously a win for IBM, which reduced its cost of maintaining a proprietary OS while increasing its developer base. IBM's AIX contributions were integrated into the standard Linux source tree, a win for open source.\n\n95. Again, “IBM's AIX contributions” consisted of the improper extraction, use, and dissemination of SCO'S UNIX source code, derivative works and methods.\n\n96. In a news article issued by IDC on or about August 14, 2001, the following was reported:\n\nIBM continued its vocal support of the Linux operating system Tuesday, saying the company will gladly drop its own version of UNIX from servers and replace it with Linux if the software matures so that it can handle the most demanding tasks.\n\nIBM executives speaking here at the company's solutions developer conference outlined reasons for the company's Linux support, pointing to features in the operating system that could push it past UNIX for back-end computing. While they admit that Linux still has a way to go before it can compete with the functions available on many flavors of UNIX, IBM officials said that Linux could prove more cost-effective and be a more user-friendly way to manage servers.\n\n'We are happy and comfortable with the idea that Linux can become the successor, not just for AIX, but for all UNIX operating systems,' said Steve Mills, senior vice president and group executive of the IBM Software Group, during a news conference.\n\n97. Continuing with its “happy and comfortable” idea that Linux succeeds at the expense of UNIX, on or about January 23, 2003, IBM executive Steve Mills gave a keynote speech at LinuxWorld, a trade show, which was reported by Computer Reseller News, IBM's Mills: Linux Will be on Par with UNIX in No Time, January 23, 2003, inter alia, as follows:\n\nIBM will exploit its expertise in AIX to bring Linux up to par with UNIX, an IBM executive said Thursday.\n\nDuring his keynote at LinuxWorld here, IBM Senior Vice President and group executive Steve Mills acknowledged that Linux lags behind UNIX in scalability, SMP support, fail-over capabilities and reliability—but not for long.\n\nâThe pathway to get there is an eight-lane highway,' Mills said, noting that IBM's deep experience with AIX and its 250-member open-source development team will be applied to make the Linux kernel as strong as that of UNIX. âThe road to get there is well understood.'\n\n* * *\n\nMills hinted that the company's full development capabilities will be brought to bear in engineering the Linux kernel to offer vastly improved scalability, reliability and support for mixed workloads—and to obliterate UNIX.\n\n98. The only way that the pathway is an “eight-lane highway” for Linux to achieve the scalability, SMP support, fail-over capabilities and reliability of UNIX is by the improper extraction, use, and dissemination of the proprietary and confidential UNIX source code, derivative works and methods. Indeed, UNIX was able to achieve its status as the premiere operating system only after decades of hard work, beginning with the finest computer scientists at AT&T Bell Laboratories, plaintiff's predecessor in interest.\n\n99. Based on other published statements, IBM currently has over 7,000 employees involved in the transfer of UNIX knowledge into the Linux business of IBM, Red Hat, Inc. and SuSE Linux AG (the largest European Linux distributor). On information and belief, a large number of the said IBM employees currently working in the transfer of UNIX to Linux have, or have had, access to the UNIX Software Code.\n\nIBM's Coordination of Linux Development Efforts\n\n100. On information and belief, IBM has knowingly induced, encouraged, and enabled others to distribute proprietary information in an attempt to conceal its own legal liability for such distributions:\n\nWhat is wrong about this [Linux] distribution, is basically the millions of lines of code that we never have seen. We don't know if there are any patent infringements [in this code] with somebody we don't know. We don't want to take the risk of being sued for a patent infringement. That is why we don't do distributions, and that's why we have distributors. Because distributors are not so much exposed as we are. So that's the basic deal as I understand it.\n\nKarl-Heinz Strassemeyer, IBM The Register, 11/19/2002, www.theregister.co.uk/content/4/28183.html\n\n101. IBM is affirmatively taking steps to destroy all value of UNIX by improperly extracting and using the confidential and proprietary information it acquired from UNIX and dumping that information into the open-source community. As part of this effort, IBM has heavily invested in the following projects to further eliminate the viability of UNIX:\n\na) The Linux Technology Center was launched in 2001 with the advertised intent and foreseeable purpose of transferring and otherwise disposing of all or part of UNIX, including its derivative works, modifications and methods, into an open-source Linux environment;\n\nb) The IBM Linux Center of Competency was launched to assist and train financial services companies in an accelerated transfer of UNIX to Linux with the advertised intent and foreseeable purpose of transferring and otherwise disposing of all or part of UNIX, including its derivative works, modifications and methods into open source.\n\nc) A carrier-grade Linux project has been undertaken to use UNIX source code, derivative works, modifications and methods for the unlawful purpose of transforming Linux into an enterprise-hardened operating system;\n\nd) A data center Linux project has been undertaken to use UNIX source code, derivative works, modifications and methods for the unlawful purpose of transforming Linux into an enterprise-hardened operating system; and\n\ne) Other projects and initiatives have been undertaken or supported that further evidence the improper motive and means exercised by IBM in its efforts to eliminate UNIX and replace it with free Linux.\n\n102. But for IBM's coordination of the development of enterprise Linux, and the misappropriation of UNIX to accomplish that objective, the Linux development community would not have timely developed enterprise quality software or customer support necessary for widespread use in the enterprise market."
    }
}