{
    "id": "correct_subsidiary_00059_2",
    "rank": 56,
    "data": {
        "url": "https://retrocomputing.stackexchange.com/questions/13611/how-much-better-was-dec-alpha-than-contemporaneous-x86",
        "read_more_link": "",
        "language": "en",
        "title": "How much better was DEC Alpha than contemporaneous x86?",
        "top_image": "https://cdn.sstatic.net/Sites/retrocomputing/Img/apple-touch-icon@2.png?v=6b27f39a6023",
        "meta_img": "https://cdn.sstatic.net/Sites/retrocomputing/Img/apple-touch-icon@2.png?v=6b27f39a6023",
        "images": [
            "https://cdn.sstatic.net/Img/teams/overflowai.svg?v=d706fa76cdae",
            "https://i.sstatic.net/L9NB3.png?s=64",
            "https://i.sstatic.net/GsA7S.jpg?s=64",
            "https://www.gravatar.com/avatar/a935dafe246dd0e2c216542f50073cbe?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/d8962238339d771f0348967be6f97b1b?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/2a78361dab1fe57c1b1d943d75bdb6e0?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/acYd0.png?s=64",
            "https://www.gravatar.com/avatar/72853d2b57e37aab89afe61af4f74c62?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/756558c332612f8e5513aba1209dd9b3?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/acYd0.png?s=64",
            "https://www.gravatar.com/avatar/a227b1c9ed1f70655b32840a7a39f9b8?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/LrH0d.jpg?s=64",
            "https://www.gravatar.com/avatar/699a9b2caefb52530d1c872bb2932d21?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/809ae0f58a4da26b8b1968c5088e8dce?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/acYd0.png?s=64",
            "https://www.gravatar.com/avatar/fa0374c94601e5594d11c30bdb6cca84?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/a8d63377824449cc8627aae609579f50?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/51a17aabc1be7dc90438644dc8ee7d96?s=64&d=identicon&r=PG",
            "https://retrocomputing.stackexchange.com/posts/13611/ivc/44ab?prg=d8e0b284-94b4-4c66-bcf1-bf0e7e9b4670"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2020-02-06T13:44:22",
        "summary": "",
        "meta_description": "The DEC Alpha, released in 1992, seems like an early implementation of a fully 64-bit microprocessor architecture. Its release led to quite a bit of both marketing hype and genuine vendor support i...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/retrocomputing/Img/favicon.ico?v=9b6f1e4fd156",
        "meta_site_name": "Retrocomputing Stack Exchange",
        "canonical_link": "https://retrocomputing.stackexchange.com/questions/13611/how-much-better-was-dec-alpha-than-contemporaneous-x86",
        "text": "The Alpha team set out to create a high-performance architecture, planned to last for 25 years and allow for 1000-fold performance increase over those 25 years. So they placed some long bets, starting with the 64-bit design (which cost performance but ensured long-term viability). It wasn’t designed to compete with x86 (which wasn’t perceived as a viable long-term architecture at the time of the 486, at least not from the point of view of RISC manufacturers), but rather to be the best possible CPU for Digital, from workstations to high-end servers. Digital did understand early on that Intel’s Pentium and later CPUs would end up competing, and tried to adjust their strategy to address that, but the competitive landscape at the time was much more complex than Alpha versus x86 (see this famous issue of PC Magazine).\n\nHere are some features present in Alpha CPUs before competing Intel x86 CPUs (Alpha wasn’t necessarily the first architecture to implement these):\n\n64-bit architecture (64-bit ALU, registers, pointers, etc.) — 2007 in Intel x86 CPUs (but the first 64-bit x86 CPU was the Opteron in 2003; other 64-bit-capable architectures were MIPS III in 1991, SPARCv9 in 1994, PA-RISC 2.0 in 1996, PowerPC 620 in 1997)\n\nhigh clock rates (enabled by the typical RISC design, with a simplified register file, split register files, fixed instruction size, and very careful layout), 192MHz in 1992 — Intel caught up with Alpha clock rates in 1999 with the Coppermine Pentium III\n\nmulti-issue (superscalar) — the first Pentium was also multi-issue, but had unbalanced pipes\n\nbuilt-in multiprocessor support (albeit with a famously weak memory model) — this is difficult to compare, since Alpha and x86 have very different multiprocessing models; Intel’s CPUs supported bus sharing as early as the 8080 and locking with the 8086, multiprocessor systems using Intel CPUs have existed for a long time, and the P54C included hardware to support two-way multiprocessing in 1994\n\nbuilt-in secondary cache (starting with the 21164) — Coppermine Pentium III\n\nout-of-order execution at high frequencies (starting with the 21264) — Pentium Pro\n\nbuilt-in memory controller (starting with the 21006 and 21364) — Nehalem in 2008\n\nThe instruction set was designed with many of these goals in mind, in particular high clock rates, multi-issue (the instruction set avoids instructions which typically cause dependencies), and multiprocessor support (atomic updates etc.). Intel could never replicate this with a backwards-compatible instruction set, at least not on the surface.\n\nThe amount of engineering effort which went into all the details of the architecture is easy to underestimate. For example the layout engineers used to spend ages planning simulation runs which would take days if not weeks to complete, to calculate the optimal layout for portions of the CPU (using what would be called machine learning nowadays).\n\nAt the time, Alpha systems had more of everything, even compared to competing workstations and servers, let alone PCs, in particular higher clock rates, and support for more memory (I saw the first motherboard-sized memory boards with a full gigabyte of memory in the Digital factory in Scotland), albeit for more dollars (at least compared to PCs). For some time, the fastest computers for running Windows NT x86 binaries were Alpha workstations!\n\nMost of the Alpha niceties made it to x86, many through AMD rather than Intel (follow the engineers after Digital’s breakup). Some that didn’t include fixed-size instructions, and PALcode.\n\nThe Alpha is extensively documented; see for example this BYTE article by one of the Alpha architects, Richard L. Sites; Paul V. Bolotoff’s Alpha: The History in Facts and Comments; and Digital technical journal, in particular volume 4 number 4.\n\n(If you want to try to get a feel for what typical PC users experienced when they spent some time on an Alpha system in the mid-90s, try to spend some time on a high-end POWER system nowadays. The price difference is also similar now to what it was then...)\n\nStephen Kitt has done what seems to me an excellent job of outlining features and when they were introduced. I'll take a slightly different tack, instead picking a single point in time, and pointing out differences between the two at that time.\n\nI'm going to choose the 21164 as the Alpha to compare. It came out in January of 1995. It had a 266 MHz clock speed, and a quad-issue pipeline (i.e., could issue 4 instructions per clock). That was balanced between integer and floating point, so you could issue 2 integer instructions per clock and 2 floating point instructions per clock.\n\nIntel's fastest processor at that time was the P54C Pentium. I believe at the time, it had a maximum clock speed of 75 MHz. It had dual pipelines, so it could issue (at best) two instructions per clock. The second pipeline was fairly restricted, and scheduling was static, so in a given clock cycle, the first instruction (almost) always went to the the first pipeline, and then the second instruction issued to the second pipeline if and only if it was one of the specific instructions that the second pipeline supported.\n\nTo get an idea of performance (well, okay, my aim was a bit more selfish: to try to justify buying an Alpha workstation) I did some simulations of running Alpha code for a program I had at the time. It averaged around 1.6 instructions per clock.\n\nI had a Pentium at the time (a 66 MHz P5). The same code running on it ran at about 1.1 instructions per clock.\n\nThe Alpha instruction set was rather simpler, so you needed to execute more instructions to carry out a particular task with it than with the Pentium. If memory serves, this was about a 2:1 difference, but varied a fair amount.\n\nSo, at least at that point in time, the Alpha was effectively about 3 times the speed of the fastest Pentium.\n\nI feel obliged to address one more point though. You said:\n\nIn the late 1990's, Alpha fizzled in the face of the HP/Intel partnership pushing their Itanium 64-bit architecture.\n\nIn my opinion, this is basically wrong. It wasn't Alpha that fizzled. It was DEC that fizzled. Continuing from the performance comparison outlined above: my numbers were convincing enough that I eventually got permission to buy a DEC Alpha workstation, and got funds allocated for it.\n\nSo, I went through the DEC catalog, and picked out exactly the workstation I wanted. Then I contacted DEC. The first guy I talked to was very enthused right up until he heard the size of company I worked for - we were too small a company, so he couldn't sell me anything. He gave me somebody else to talk to. So I talked to them. They were very helpful until they heard what I wanted - they weren't allowed to sell that workstation.\n\nThis went on for over a month. I spent weeks calling different people at DEC, and an almost bewildering number of VARs and VADs and god only knows what else. On essentially every call, I was very clear about exactly what I wanted, and that I had funds available to buy exactly that, immediately. I also made clear that assuming this worked out, my boss and his boss were both probably going to buy similar machines soon (there was no way a mere peon like me was going to have the fastest machine in the company for very long!).\n\nIn the end, I simply had to give up. I had the money. I had permission to spend it. But no matter how hard I tried, I couldn't get DEC to take the money.\n\nAt least in my opinion, that's why the Alpha died. I don't claim to know sales particularly well, but I'm pretty sure an effective sales strategy does not include refusing to sell your product, even when you have a legitimate customer who's not only ready and willing, but in fact downright eager to buy your product.\n\nI was working at the time porting a large system from Unix to Windows NT, we had a few Intel Windows NT machines and a DEC Alpha running Windows NT. (Along with Sun, Dec, IBM, etc Unix workstations)\n\nWe started thinking Alpha was better than Pentium as that's what the benchmarks said, but Windows NT felt slower on Alpha. When we ported the Unix software to Alpha from Sun it ran a lot slower than expected, other processors were just better at coping with code that was not written in the best possible way.\n\nThen we needed Internet Explorer, and it turned out that Windows NT on Alpha was not fully supported by Microsoft. The PentiumPro Windows NT machines we got the next year were clearly faster than the Alpha (and our Sun workstations) but cost less than the maintenance contract on the Alpha.\n\nIt was still true that with unlimited money Alpha and Sun was faster than a top-end PC, but we could buy new PCs each year compared to having to keep Sun/Alpha machines for 3 to 5 years due to their high cost. The rate of improvement of PCs made buying a new machine each year a good option.\n\nAt the time RAM was so costly that none of our customers would consider more RAM than a 32-bit CPU could address, 128MB was a very large system.\n\nThe much higher sales of Intel PC resulted in a faster improvement cycle for all the related hardware, along with it being much quicker/easier to get PCs repaired. When we needed a new PC we could get it from a company over the road within 2 weeks, it took much longer than that to even get a price from Dec.\n\n(Windows NT on Power PC was much the same)\n\nI'm uniquely positioned to answer this question, as I briefly had a DEC Alpha while having a PC with the same software on it!\n\nI worked at the University Surplus and mostly we'd get thousands of Gateways and Dells. But in the early-mid 2000s I ended up throwing Linux on an old DEC MIPS, a DEC Alpha, a DEC VAX*, SGI (but I put Irix back on that), HP PA-RISC and of course an old PowerPC Mac or two.\n\nI had a 400 MHz Alpha, which at the time was probably 6 or 7 years old (had Gentoo on there and it was a bone-standard VGA adapter like a Matrox G400 or something so X came right up...) had Gentoo on my desktop (900 MHz Duron which was maybe a year old at that point.) The Alpha destroyed it, like probably double the performance. And at video decoding it was absurd, like 20x the performance or so; Alphas had a \"Motion Video Instruction\" instruction set that must have had ridiculous speedups for both MPEG-2 and MPEG-4 even compared to the MMX and 3DNow I would have had on my Duron.\n\nWhy was it so fast? DEC planned on having 33% speed-up per generation from clock speed increases, 33% from design improvements to increase instructions per clock, and 33% from compiler improvements (that may even get you speed-ups on your existing chip). They would have the compiler writers and chip designers talk, so they followed RISC principles of design simplicity so it could run at very fast clock speeds for the time, while going ahead and adding some \"various\" instructions if the compiler team showed they'd get a nice fat speed-up from it. VERY effective! And hell, since I was running Linux I was using GCC; maybe the DEC compiler would have run stuff even faster. HP (through buying Compaq who had bought DEC) had the two fastest chips on the market, PA-RISC and Alpha, and discontinued both lines to pursue Itanium! (Alpha was also 64-bit from the start, over 10 years before the first AMD-64 CPUs came out, and PA-RISC went 64-bit in the mid 1990s too for that matter.) Alpha and PA-RISC also hit 1 GHz quite a while before any other CPU designs got there, they'd hit a clock speed a good year and a half or two years before Intel & AMD would get there just because the RISC design let them clock them up easier.\n\n*Vaxstation 3100, a diskless one that they actually sold as an X terminal (it'd netboot and pull a VAX X server over the Ethernet with a not-quite-tftp deal that it used, but for Linux you'd netboot a kernel and ramdisk, then it'd do NFS root just like you can do on a diskless Intel box.\n\nI actually built Gimp on this thing; it ran \"a tad slow\" as the 12 MHz VAX CPU ran about even with a ~66 MHz Pentium or so. The VAX got crazy \"instructions per clock\" but was the epitome of CISC (Complex Instruction Set Computing), the CPU was huge and they only ever got them up to about 50 MHz. (Edit: well, it got high \"work per clock\", the instructions per clock may have been rather low since it had plenty of complex instructions to use.)\n\nIgnoring the extensions (of which VAX accumulated several over the years), you could have a SINGLE VAX instruction that was like \"add a+b, put value in c.... but a, b, and c are 'get the value from a first register x, an offset from a second register y, look at data at location x offset y, use THAT value as a pointer to the memory location to actually get/put the value from'\". So you had instructions that ran in something like 1-2000 cycles."
    }
}