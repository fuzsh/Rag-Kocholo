{
    "id": "dbpedia_5008_2",
    "rank": 0,
    "data": {
        "url": "https://www.qt.io/product/features",
        "read_more_link": "",
        "language": "en",
        "title": "Qt Features, Framework Essentials, Modules, Tools & Add-Ons",
        "top_image": "https://www.qt.io/hubfs/Japan/Qt_Creator_SoMe.jpg",
        "meta_img": "https://www.qt.io/hubfs/Japan/Qt_Creator_SoMe.jpg",
        "images": [
            "https://www.qt.io/hubfs/Frame%206762.svg",
            "https://www.qt.io/hubfs/Frame%206762.svg",
            "https://www.qt.io/hubfs/Frame%206762.svg",
            "https://www.qt.io/hubfs/Frame%206762.svg",
            "https://www.qt.io/hubfs/Frame%206762.svg",
            "https://www.qt.io/hubfs/Frame%206762.svg",
            "https://www.qt.io/hubfs/qa-logo-squish.svg",
            "https://www.qt.io/hubfs/QA_ProductIcon_Coco.svg",
            "https://www.qt.io/hubfs/qa-logo-test-center.svg",
            "https://www.qt.io/hubfs/axivion-static-code.svg",
            "https://www.qt.io/hubfs/axivion-architecture.svg",
            "https://www.qt.io/hubfs/new_webshop_nav_banner%20(1).webp",
            "https://www.qt.io/hubfs/Qt-logo-neon-small.png",
            "https://www.qt.io/hubfs/raw_assets/public/qtv3/assets/images/g2_summer_24.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "See the features of the latest Qt version to see new functionality, which development platforms, operating systems and coding languages are supported.",
        "meta_lang": "en",
        "meta_favicon": "https://www.qt.io/hubfs/QtGroup_Favicon_32.ico",
        "meta_site_name": "",
        "canonical_link": "https://www.qt.io/product/features",
        "text": "Note that the open-source license does not restrict running the tools. For example, GPLv3 affirms unlimited permission to run unmodified software. The license sets conditions to create and distribute derivate works. Using GPL v3-licensed Qt Creator does not imply that your software becomes GPL v3-licensed unless your software modifies existing software, which you are going to distribute and which is licensed under GPL v3.\n\nDesign Tools\n\nEverything you need for designing an amazing user interface and the ultimate user experience.\n\nQt Design Studio\n\nA UI design and development environment for creating animated user interfaces.\n\nQt Widgets Designer\n\nA tool for designing and building graphical user interfaces (GUIs) using Qt Widgets. Integrated into Qt Creator.\n\nQt Shader Tools\n\nTools for the cross-platform Qt shader pipeline. These enable processing graphics and compute shaders to make them usable for Qt Quick and other components in the Qt ecosystem.\n\nQMLLive\n\nProvides a live reloader environment for rapid development of Qt Quick applications, dramatically reducing the time it takes to deploy and test changes in the UI design.\n\nQML Runtime\n\nA utility to load and display QML documents.\n\nQt Quick Effect Maker\n\nA standalone tool for creating high-performance shader effects for Qt Quick. Provides both a node and code editor to maximize productivity.\n\nDevelopment Tools\n\nQt has it's own cross-platform IDE and is chock-full of tools designed for developing applications and UIs once and deploying them across multiple operating systems\n\nQt Creator\n\nA cross-platform, complete integrated development environment (IDE) for application developers to create applications for multiple desktop, embedded, and mobile device platforms.\n\nQt Linguist\n\nA set of tools for translating Qt C++ and Qt Quick applications into local languages.\n\nqmake\n\nQt's build automation tool that simplifies the build process across different platforms. Although qmake is still supported, the official build tool for Qt is CMake and we recommend developers to use CMake in new projects.\n\nCMake\n\nCMake is a tool to simplify the build process for development projects across different platforms. CMake automatically generates build systems, such as Makefiles and Visual Studio project files.\n\nmakeqpf\n\nA tool to generate pre-rendered fonts for embedded Linux.\n\nMeta-Object Compiler (moc)\n\nGenerates meta-object information for QObject subclasses.\n\nUser Interface Compiler (uic)\n\nGenerates C++ code from user interface files.\n\nResource Compiler (rcc)\n\nEmbeds resources into Qt applications during the build process.\n\nQt D-Bus XML compiler (qdbusxml2cpp)\n\nConverts D-Bus interface descriptions to C++ source code.\n\nD-Bus Viewer\n\nIntrospection tool for D-Bus objects and messages.\n\nQt Visual Studio Tools\n\nIntegrates the Qt development tools into Microsoft Visual Studio.\n\nQt Distance Field Generator\n\nGenerates distance fields to improve load times of text-heavy Qt Quick user interfaces.\n\nQt Installer Framework\n\nProvides a set of tools and utilities to create installers for the supported desktop platforms.\n\nQt Assistant\n\nA tool for viewing Qt documentation.\n\nOn-device Deployment and Debugging\n\nOn-device debugging and deployment of Qt applications via Qt Creator.\n\nQDB\n\nA tool for controlling Boot2Qt devices.\n\nAndroid Deploy Qt (androiddeployqt)\n\nThis tool automates the Qt application deployment on Android.\n\nWindows Deploy Qt (windowdeployqt)\n\nThis tool automates the Qt application deployment on Windows.\n\nTools for Active Qt\n\nEnables Qt integration with the ActiveX components. Includes Interface Description Compiler (IDC), dumpcpp, and dumpdoc tools.\n\nQDoc\n\nA tool used by Qt Developers to generate documentation for software projects.\n\nqmllint\n\nA tool, verifying the syntax validity of QML files.\n\nqmlformat\n\nA tool, automatically formatting the QML files in accordance with the QML Coding Conventions.\n\nQML Profiler\n\nEnables you to get the necessary diagnostic information, allowing you to analyze the application code for performance issues.\n\nQt Configuration Tool (qtconfig-gui)\n\nA tool, providing features and tools for creating and building smaller Qt binaries.\n\nPython Shiboken Wizard\n\nA binding generator tool, which can be used to expose C++ projects to Python.\n\nQt Quick Compiler\n\nLets you process QML and JavaScript code at compile time, rather than at run time. This allows faster application startup and faster evaluation of bindings and functions.\n\nQt Quick Ultralight Compiler\n\nCompiles QML files and graphical resources into C++ classes optimized for resources-constrained target platforms such as MCUs.\n\nQt Quick Ultralight Project Exporter\n\nExports Qt Quick Ultralight projects to project files for embedded IDEs such as Green Hills MULTI or IAR Embedded Workbench.\n\nFramework Essentials\n\nThese are the APIs and libraries that provide the backbone of Qt. Qt contains a rich set of fundamental enablers,which provide higher-level UI and application development components.\n\nQt Core\n\nCore non-graphical classes used by other modules.\n\nQt GUI\n\nBase classes for graphical user interface components. Includes OpenGL.\n\nQt Network\n\nClasses to make network programming easier and more portable.\n\nQt QML\n\nClasses for QML and JavaScript languages.,All,All,C++\n\nQt Quick Dialogs\n\nTypes for creating and interacting with system dialogs from a Qt Quick application.\n\nQt Quick Layouts\n\nLayouts are items that are used to arrange Qt Quick 2 based items in the user interface.\n\nQt D-Bus\n\nClasses for inter-process communication over the D-Bus protocol.\n\nQt Quick\n\nA declarative framework for building highly dynamic applications with custom user interfaces.\n\nQt Quick Controls\n\nProvides lightweight QML types for creating performant user interfaces for desktop, embedded, and mobile devices. These types employ a simple styling architecture and are very efficient.\n\nQt Quick Test\n\nA unit test framework for QML applications, where the test cases are written as JavaScript functions.\n\nQt Test\n\nClasses for unit testing Qt applications and libraries.\n\nQt Widgets\n\nClasses to extend Qt GUI with C++ widgets.\n\nFramework Add-Ons\n\nQt is an unbelievably comprehensive framework full of features beyond the essentials all designed to provide you with a truly professional development experience."
    }
}