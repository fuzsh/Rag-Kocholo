{
    "id": "dbpedia_5008_1",
    "rank": 48,
    "data": {
        "url": "https://subscription.packtpub.com/book/programming/9781800204584/2/ch02lvl1sec04/introducing-qt",
        "read_more_link": "",
        "language": "en",
        "title": "Platform Development with Qt 6 and Modern C++",
        "top_image": "https://subscription.packtpub.com/favicon.ico",
        "meta_img": "https://subscription.packtpub.com/favicon.ico",
        "images": [
            "https://subscription.packtpub.com/images/logo-new.svg",
            "https://content.packt.com/B16231/cover_image_small.jpg",
            "https://content.packt.com/B16231/cover_image_small.jpg",
            "https://content.packt.com/B16231/cover_image_small.jpg",
            "https://content.packt.com/B16231/cover_image_small.jpg",
            "https://content.packt.com/B13284/cover_image_small.jpg",
            "https://content.packt.com/B20976/cover_image_small.jpg",
            "https://content.packt.com/B08328/cover_image_small.jpg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-up-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/lock-close.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg",
            "https://subscription.packtpub.com/images/reader/lhs/chevron-down-grey.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Nibedit Dey",
            "Ray Rischpater",
            "Lee Z Eng",
            "Mr. Lee Zhi Eng"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Qt is a cross-platform application development framework widely used for developing applications that can run on a wide range of hardware platforms with little to no change in the underlying codebase. If you have basic knowledge of C++ and want to build desktop or mobile applications with a modern graphical user interface (GUI), Qt is the right choice for you. Cross-Platform Development with Qt 6 and Modern C++ helps you understand why Qt is one of the favorite GUI frameworks adopted by industries worldwide, covering the essentials of programming GUI apps across a multitude of platforms using the standard C++17 and Qt 6 features.\nStarting with the fundamentals of the Qt framework, including the features offered by Qt Creator, this practical guide will show you how to create classic user interfaces using Qt Widgets and touch-friendly user interfaces using Qt Quick. As you advance, you'll explore the Qt Creator IDE for developing applications for multiple desktops as well as for embedded and mobile platforms. You will also learn advanced concepts about signals and slots. Finally, the book takes you through debugging and testing your app with Qt Creator IDE.\nBy the end of this book, you'll be able to build cross-platform applications with a modern GUI along with the speed and power of native apps.",
        "meta_lang": "en",
        "meta_favicon": "/images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://subscription.packtpub.com/book/programming/9781800204584/2/ch02lvl1sec04/introducing-qt",
        "text": "Qt is a cross-platform software development framework for desktop, embedded, and mobile platforms. It follows the philosophy of code less, create more, and deploy everywhere. It supports platforms such as Windows, Linux, macOS, VxWorks, QNX, Android, iOS, and so on. The software also supports several microcontroller units (MCUs) from NXP, Renesas, and STMicroelectronics running on bare metal or FreeRTOS.\n\nQt was born as an attempt to provide a uniform graphical user interface (GUI) with the same look, feel, and functionality across different platforms. Qt accomplishes that by providing a framework to write code once and ensure that it runs on other platforms with minimal or no modifications. It is not a programming language, but rather a framework written in C++. The Qt framework and tools are dual-licensed under open source and commercial licenses.\n\nQt uses a modular approach to group related functionalities together. Qt Essentials are the foundation of Qt on all platforms. These modules are general and useful for most Qt-based applications. Essential modules are available for open source usage. Examples of Qt Essentials modules are Qt Core, Qt GUI, Qt QML, Qt Widgets, and so on. There are also special-purpose add-on modules that provide specific functionalities and come with certain license obligations. Examples of add-on modules are Qt 3D, Qt Bluetooth, Qt Charts, Qt Data Visualization, and more. As well as this, there are value-added modules such as Qt Automotive Suite, Qt for Device Creation, and Qt for MCUs, among others available under the commercial license.\n\nTo find out more about different Qt modules, visit https://doc.qt.io/qt-6/qtmodules.html.\n\nQt was released for public use in 1995. Since then, there have been many improvements and major changes. Qt 6 is the new major version of Qt. Its main goals are to remain prepared for the requirements coming in 2020 and beyond, remove obsolete modules, and be more maintainable. With this focus, there are architectural changes in Qt 6 that may break some level of backward compatibility with earlier versions.\n\nSome essential modifications in Qt 6 are outlined here:\n\nIntroduction of strong typing\n\nJavaScript as an optional feature of Qt Modeling Language (QML)\n\nRemoval of QML versioning\n\nRemoval of the duplicate data structures between QObject and QML\n\nAvoidance of the creation of runtime data structures\n\nCompilation of QML into efficient C++ and native code\n\nSupport for hiding implementation details\n\nBetter integration of tools\n\nNow that we've covered the basics, let's look at the main reasons for using Qtâ€¦"
    }
}