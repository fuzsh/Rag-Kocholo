{
    "id": "dbpedia_5008_1",
    "rank": 74,
    "data": {
        "url": "https://vakoms.com/blog/3-cases-to-choose-qt-over-a-web-framework/",
        "read_more_link": "",
        "language": "en",
        "title": "3 cases to choose Qt over a Web framework",
        "top_image": "https://vakoms.com/wp-content/uploads/2021/11/cover_img.png",
        "meta_img": "https://vakoms.com/wp-content/uploads/2021/11/cover_img.png",
        "images": [
            "https://vakoms.com/wp-content/uploads/2023/02/logo-1.svg",
            "https://vakoms.com/wp-content/uploads/2021/06/logo.svg",
            "https://vakoms.com/wp-content/uploads/2021/06/logo.svg",
            "https://vakoms.com/wp-content/uploads/2021/11/cover_img.png",
            "https://vakoms.com/wp-content/uploads/2021/11/cover_img.png",
            "https://vakoms.com/wp-content/uploads/2019/05/Andriy-150x150.webp",
            "https://vakoms.com/wp-content/uploads/2019/05/Andriy-150x150.webp",
            "https://vakoms.com/wp-content/uploads/2021/11/1-1.png",
            "https://vakoms.com/wp-content/uploads/2021/11/1-1.png",
            "https://vakoms.com/wp-content/uploads/2021/11/2-1024x656.png",
            "https://vakoms.com/wp-content/uploads/2021/11/2-1024x656.png",
            "https://vakoms.com/wp-content/uploads/2021/11/3-1024x656.png",
            "https://vakoms.com/wp-content/uploads/2021/11/3-1024x656.png",
            "https://vakoms.com/wp-content/themes/vakoms/assets/images/subscription-image.png",
            "https://vakoms.com/wp-content/themes/vakoms/assets/images/subscription-image.png",
            "https://vakoms.com/wp-content/uploads/2022/07/iot-energy-featured-300x107.jpg",
            "https://vakoms.com/wp-content/uploads/2022/07/iot-energy-featured-300x107.jpg",
            "https://vakoms.com/wp-content/uploads/2024/06/7-python-uses-300x108.jpg",
            "https://vakoms.com/wp-content/uploads/2024/06/7-python-uses-300x108.jpg",
            "https://vakoms.com/wp-content/uploads/2024/06/main-300x108.png",
            "https://vakoms.com/wp-content/uploads/2024/06/main-300x108.png",
            "https://vakoms.com/wp-content/uploads/2024/07/iso-certificat-bottom-location.svg",
            "https://vakoms.com/wp-content/uploads/2024/07/iso-certificat-bottom-location.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Andriy"
        ],
        "publish_date": "2021-11-04T11:50:09+00:00",
        "summary": "",
        "meta_description": "Consider choosing Qt for your software development project if it matches at least one case from our list.",
        "meta_lang": "en",
        "meta_favicon": "https://vakoms.com/wp-content/uploads/2022/12/icon.png",
        "meta_site_name": "Vakoms",
        "canonical_link": "https://vakoms.com/blog/3-cases-to-choose-qt-over-a-web-framework/",
        "text": "Choosing the right technology for software development may seem not a big deal at the beginning of the project. Especially, when there are so many other things to consider: budgets, markets, target audiences, deadlines, and other business-side stuff.\n\nOn the one hand, a client can underrate the importance of choosing the relevant technology for their project. On the other hand, initially small projects can grow and require additional functionality that was overlooked or wasn’t meant to be implemented, to begin with.\n\nAt some point, a client can find the initially chosen technology not enough for completing current project goals. The reason for the issue is a lack of information about technology capabilities, pros, cons, and alternatives.\n\nWeb technologies are often chosen because they are platform-independent and are widely used overall. However, they are not always relevant and able to meet the needs of the project. Based on our experience with Qt, we’ll consider 3 cases where it’s better to opt for Qt instead of web development technologies.\n\nCase 1. Cross-platform app with high performance and fast startup\n\nPerformance is a concern when the cross-platform app should process big amounts of data, it should work properly on low-end hardware or both. For such cases, web technologies aren’t enough to provide high-level functionality.\n\nThe reason is the difference in system resources allocated for the web apps and Qt apps. Web apps are limited to web browser performance which uses a small part of the hardware resources. It feels like an app is executed on a virtual machine.\n\nQt can use system interfaces directly and it is executed by the processor. This means that a Qt application has fewer layers for data transmission, resulting in better and faster performance.\n\nBesides, a web application has a longer startup time. Web apps run on a higher software level, so they need to wait for the complete operating system loading first, then for the complete web browser loading. Only after this step, the web app can launch.\n\nThe Qt app can start faster due to fewer layers of data processing. It runs on the system level, so its performance doesn’t depend on the web browser’s speed.\n\nCase 2. An app with access to low-level functions: file system, sensors, etc.\n\nFor instance, if you need to develop software for an IoT device, the app will need to collect and process data from sensors. To accomplish this, the application will need to have access to the system interfaces and hardware.\n\nWeb browsers have restricted access to the system, so do the web frameworks. To implement the hardware data collection, web frameworks will require a workaround. As a rule, it will be a library written in C++, a low-level programming language. Still, even this workaround doesn’t always result in satisfactory performance of the app.\n\nQt is a C++ framework: it has access to the system-level functions out-of-the-box. This way, Qt has no problem accessing data from sensors and using system interfaces. If you’re planning to develop an app with low-level functions using a web framework, you’ll most likely need to use C++. So, why not consider using the C++ framework from the start and save time.\n\nUse case\n\nA good illustration for this case is our Qt app development for UpReach, a Berlin company that offers photo-marketing B2B solutions. The project is an IoT solution: a photo booth featuring a low-end computer, cameras, printers, and software for processing photos and data.\n\nThe company had legacy code written in the web framework Electron. Despite the web app failing to process the data fast enough, Electron couldn’t be abandoned completely. The project was already in production and the client couldn’t wait for the complete re-writing of the software.\n\nVakoms was hired to optimize the performance of the photo booth. After analyzing the existing code, our development team created a separate module using Qt. The module worked with the hardware directly, so the performance of the entire system improved significantly. The Qt module has solved the initial issue with low performance. Still, it’s a kind of a patch and the client wouldn’t need to resort to additional solutions if Qt was chosen initially.\n\nCheck out the full case study of professional Qt development for UpReach\n\nCase 3. Software with high-performance GUI for embedded and IoT systems\n\nSay, you have an embedded system and you need software for processing and visualizing data collected from sensors. Usually, embedded systems don’t feature powerful hardware specs, yet they have to quickly process big amounts of information. Data visualization adds to the system workload.\n\nIt’s important that the interface reacts to the changes fast. To make this possible, both data processing and data visualization should be quick enough. A delay in data visualization will affect the performance of the entire application, making it laggy.\n\nIn this case, a web framework is not a relevant choice due to its working algorithm. Roughly speaking, a web application works like a virtual machine. Web frameworks cannot access system interfaces directly so they interpret the HTML, CSS, and JavaScript code into the system commands. The interpretation takes place directly while executing the app, making it longer to process and display the data.\n\nQt, as a C++ framework, directly uses system interfaces like OpenGL, DirectX, Vulkan, or Metal to “draw” the interface. Before the app launches, the code is already interpreted into machine-readable commands. This way, the application can be executed right away and the performance speed is higher in this case.\n\nUse case\n\nFor one of the projects, we were to develop a graphical user interface for an embedded system. The system was aimed at monitoring and controlling the gas supply and ratio in the hospital gas pipeline. The requirement was to animate the process of data change.\n\nThe client initially wanted to build the application with a web framework, as their team had previous experience with web technologies. We completed the first demo version of the Angular app and conducted testing with emulated data. After launching the app on the device prototype, the client realized that FPS is too low and poor frame rate needs to be optimized.\n\nOptimization required either giving up on the animation effects or switching to another technology. Since the client’s initial request was to include the animation, the only acceptable solution was to rewrite the app.\n\nAfter considering the options, we agreed on choosing Qt. Our Qt team developed GUI with animated gauges that displayed the data changes in real-time. The Qt app performance was significantly better than the web app and it was okay for the client. We continued Qt development for this project.\n\nBottom line\n\nConsulting is an important step for the software development strategy. Understanding the pros and cons of technology helps choose the most optimal development strategy. For software that should perform well on low-end hardware, it’s better to choose — or at least consider choosing — Qt over a web technology. Qt is a C++ framework that runs closer to hardware, resulting in a faster performance overall.\n\nHave a question or need advice? Ask our specialist."
    }
}