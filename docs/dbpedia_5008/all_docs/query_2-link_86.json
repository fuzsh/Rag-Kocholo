{
    "id": "dbpedia_5008_2",
    "rank": 86,
    "data": {
        "url": "https://developers.arcgis.com/qt/install-and-set-up/",
        "read_more_link": "",
        "language": "en",
        "title": "Install and set up",
        "top_image": "https://developers.arcgis.com/qt/static/thumbnail-45d6d823fb8081dc961cbf6e338407af.png",
        "meta_img": "https://developers.arcgis.com/qt/static/thumbnail-45d6d823fb8081dc961cbf6e338407af.png",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Use the Qt framework with the latest version of ArcGIS Maps SDK for Qt to build cross-platform desktop and mobile apps that incorporate features such as mapping, geocoding, routing, spatial analysis.",
        "meta_lang": "en",
        "meta_favicon": "/qt/favicon-32x32.png?v=cc73a1016b830b97008ac5ee12a80774",
        "meta_site_name": "ArcGIS Maps SDK for Qt",
        "canonical_link": "https://developers.arcgis.com/qt/install-and-set-up/",
        "text": "ArcGIS Maps SDK for Qt has APIs for developing desktop apps for Windows, Linux, and macOS, and mobile apps for iOS and Android. You can install the API on Windows, macOS, or Linux.\n\nBefore installing the API, make sure your development machine meets the System requirements.\n\nInstall on Windows\n\nYou will install the following components on your Windows development machine:\n\nMicrosoft Visual Studio C++ compiler\n\nThe Qt Framework for Windows: this framework is available from The Qt Group for developing cross-platform apps. This is not an Esri product.\n\nThe Qt Framework for Android: (for Android developers) this framework is available from The Qt Group for developing Android apps. This is not an Esri product.\n\nQt Creator: the IDE for Qt app development available from The Qt Group automatically included when you download Qt Framework for Windows. This is not an Esri product.\n\nCMake: only required if building with CMake instead of qmake. This is not an Esri product.\n\nArcGIS Maps SDK for Qt for Windows\n\nInstall Visual Studio\n\nThe Microsoft Visual Studio compiler is used to build apps with ArcGIS Maps SDK for Qt. It is recommended that you uninstall previous versions of Visual Studio and any previous Visual Studio redistributables before installing Visual Studio, or conflicts can occur during installation. Be sure to install the C++ compiler. One way to do this is to select the Visual Studio installation option to use the C++ programming language as your default development environment.\n\nDownload the Qt Framework for Windows and Qt Creator\n\nTo build an app using the ArcGIS Maps SDK for Qt, you need the Qt Framework designed to work with your compiler. You can install Qt Frameworks for multiple target platforms on your development machine, side-by-side.\n\nClick Get Qt to download and install the appropriate Qt Framework for Windows. This download includes Qt Creator.\n\nInstall a debugger. See the Qt documentation for Setting Up Debugger.\n\nInstall prerequisites for Android app development\n\nInstall the prerequisite software for Android app development, including the Java Development Kit (JDK), Android SDK Tools, Android Platform Tools, the Android NDK, and a USB driver to communicate with a mobile device. See Qt for Android for more information on developing for Android with Qt. Also, be sure to install software versions that conform to the system requirements.\n\nBrowse to Getting Started with Qt for Android. Follow the instructions to download and install the prerequisite software. It is suggested that you create a new staging folder to store the prerequisite software, such as C:\\Android. This folder is referred to in the download and install instructions as a <staging folde r >.\n\nAccess the settings for Environment variables on your development machine. You can find this in the Control Panel > Advanced System Settings. If the following system environment variables were not previously established, define them as follows:\n\nCreate a system environment variable called JAVA _ H OME, and set its location to the Java\\JDK folder, for example C:\\Program Files\\Java\\jd k < versio n >.\n\nCreate a system environment variable called ANDROID _ N DK _ R OOT, and put it in your NDK folder <staging folde r > \\android-ndk-<versio n >.\n\nClick Get Qt to locate and download the Qt Framework for Android (on Windows).\n\nRun the Qt for Android installer, accepting all installer defaults.\n\nIn Qt Creator, click Tools > Options > Devices > Android and fill in the paths. Paths should be similar to the following:\n\nJDK Location: C:\\Program Files\\Java\\jd k < versio n >\n\nAndroid SDK Location: <staging folde r > \\adt-bundle-windows-<platfor m > -<dat e > \\sdk\n\nAndroid NDK Location: <staging folde r > \\android-ndk-<versio n >\n\nTell Qt Creator where to find your Qt Framework(s)\n\nIt is typical to use one Qt Creator IDE with multiple Qt Frameworks, such as one Framework for desktop development and another to build and deploy to a mobile device. Qt Creator needs to know where to find the Qt Frameworks you want to use. By default, it looks for Qt Frameworks on your development machine, but might not detect all the Qt Frameworks you want to use if you have multiple Qt Frameworks on your development machine or if you later install another Qt Framework.\n\nFollow these steps to tell Qt Creator about additional Qt Frameworks:\n\nClick Tools > Options > Build & Run > Qt Versions, and then click Add.\n\nBrowse to the qmake.exe file in the installation folder.\n\nProvide a suitable name for this Qt Framework.\n\nClick Apply.\n\nAfter completing these steps, the Qt Framework you specified will be shown under the heading Manual. You can now use this Qt Framework to configure kits and projects.\n\nInstall ArcGIS Maps SDK for Qt\n\nMake sure you have read/write access to your desired download and extraction location and that your account has administrative privileges, as installing ArcGIS Maps SDK for Qt on Windows requires administrative privileges.\n\nGo to the downloads page, and select the Windows download for the most recent version of ArcGIS Maps SDK for Qt. Note that you can download older versions as well as other development platforms.\n\nRun the extraction wizard, which asks you to choose an extraction location.\n\nRun setup.exe from your chosen extraction location.\n\nAfter the setup program finishes, the post-installer script runs. This integrates ArcGIS Maps SDK for Qt with your installation of the Qt Framework and Qt Creator. Please note that the post-installer script needs read/write access to the User Profile's AppData folder.\n\nConfigure Qt Creator kits\n\nIn Qt Creator, a kit defines how to build an app for a target device. Set up a kit for each target device to which you will deploy your app so that you can develop and test for that device. Each kit must include references to the compiler, the Qt Framework, and the debugger. At minimum, you should set up a desktop kit.\n\nRun Qt Creator.\n\nClick Tools > Options > Build & Run > Kits.\n\nExamine the existing kits. If no existing kit has the settings you want, click Add to create a new kit.\n\nGive the kit an appropriate name.\n\nSet the Device type to to match your target device, such as Desktop.\n\nChoose the appropriate compiler to match the target device.\n\nChoose the Qt Version.\n\nClick OK or Apply to finish creating the kit.\n\nRepeat these steps to add an Android kit if you installed the Qt Framework for Android.\n\nInstall CMake\n\nArcGIS Maps SDK for Qt applications can be built with qmake or CMake. Qmake is installed by default with the Qt Framework. CMake must be installed separately from the CMake website. See the Qt CMake Manual for more information.\n\nConfigure a Qt Creator project\n\nCreate a project in Qt Creator for your ArcGIS Maps SDK for Qt app. You can use a provided project template to create a new project.\n\nComplete the Display a map tutorial to verify your development environment is properly configured.\n\nWhen you open a Qt Creator project file for the first time, Qt Creator prompts you to configure the project, which requires choosing the kits to use with the project. Choose the kit(s) you created in the previous step, and then click Configure Project.\n\nYou can now build your project in Qt Creator on Windows.\n\nInstall on macOS\n\nYou will install the following components on your macOS development machine:\n\nApple Xcode\n\nThe Qt Framework for macOS: this framework is available from The Qt Group for developing cross-platform applications. This is not an Esri product.\n\nThe Qt Framework for iOS: (for iOS developers) this framework is available from The Qt Group for developing iOS applications. This is not an Esri product.\n\nThe Qt Framework for Android: (for Android developers) this framework is available from The Qt Group for developing Android applications. This is not an Esri product.\n\nQt Creator: the IDE for Qt application development available from The Qt Group bundled with Qt Framework for macOS. This is not an Esri product.\n\nCMake: only required if building with CMake instead of qmake. This is not an Esri product.\n\nArcGIS Maps SDK for Qt for macOS\n\nInstall Xcode\n\nInstall Xcode and the Xcode command line tools from the App Store or Apple's developer web site. An Apple developer account is required to log in. Follow the documentation at Apple's accounts web site.\n\nDownload the Qt Framework for macOS and Qt Creator\n\nTo build an application using ArcGIS Maps SDK for Qt, you need the Qt Framework designed to work with your compiler. You can install Qt Frameworks for multiple target platforms on your development machine, side-by-side.\n\nDownload and install the Qt Framework for macOS from The Qt Group. Make sure that you also install Qt Creator along with the Qt Framework.\n\nInstall prerequisites for iOS development\n\nIf you plan to develop applications for the iOS platform, you must install Xcode for iOS. See Qt for iOS for more information on Qt for iOS.\n\nStart Xcode.\n\nClick Xcode > Preferences.\n\nOn the Downloads tab, click Component, and download the iOS simulator.\n\nConfigure your Xcode for Distribution by following the documentation at Apple's web site.\n\nDownload and install the Qt Framework for iOS (on Mac) from The Qt Group.\n\nInstall prerequisites for Android development\n\nInstall the prerequisite software for Android app development, including the Java Development Kit (JDK), Android SDK Tools, Android Platform Tools, and the Android NDK. See Qt for Android for more details on developing for Android with Qt. Be sure to install software versions that conform to the system requirements.\n\nBrowse to Getting Started with Qt for Android. Follow the instructions there to download and install the prerequisite software. It is suggested that you create a new staging folder to store all the prerequisite software, such as ~/Android. This folder is referred to in the download and install instructions as a <staging folde r >.\n\nDownload the Qt Framework for Android (on Mac) from The Qt Group.\n\nRun the Qt Framework for Android installer, accepting all installer defaults.\n\nIn Qt Creator, click Qt Creator > Preferences > Devices > Android, and fill in the paths. Paths should be similar to the following:\n\nJDK Location: <staging folde r > /Curren t J DK/Home\n\nAndroid SDK Location: <staging folde r > /adt-bundle-mac-x86_64-<dat e > /sdk\n\nAndroid NDK Location: <staging folde r > /android-ndk-<versio n >\n\nInstall ArcGIS Maps SDK for Qt\n\nMake sure you have read/write access to your desired download and extraction location.\n\nGo to the downloads page, and select the macOS download for the most recent version of ArcGIS Maps SDK for Qt. Note that you can download older versions as well as other development platforms.\n\nRun the installer app.\n\nAfter the installer app finishes, the post-installer script runs. This integrates ArcGIS Maps SDK for Qt with your installation of the Qt Framework and Qt Creator. Note that the post-installer script needs read/write access to ~/.config.\n\nConfigure Qt Creator kits\n\nIn Qt Creator, a kit defines how to build an app for a target device. Set up a kit for each target device on which you will deploy your app to so that you can develop and test for that device. A kit includes references to the compiler, the Qt Framework, and the debugger. At minimum, you should set up a desktop kit.\n\nRun Qt Creator.\n\nClick Qt Creator > Preferences > Build & Run > Kits.\n\nExamine the existing kits. If no existing kit has the settings you want, click Add to create a new kit.\n\nGive the kit an appropriate name.\n\nSet Device type to to match your target device, such as Desktop.\n\nChoose the Qt Version.\n\nClick OK or Apply to finish creating the kit.\n\nRepeat these steps to add an iOS or Android kit if you installed those Qt Frameworks.\n\nInstall CMake\n\nArcGIS Maps SDK for Qt applications can be built with qmake or CMake. Qmake is installed by default with the Qt Framework. CMake must be installed separately from the CMake website. See the Qt CMake Manual for more information.\n\nConfigure a Qt Creator project\n\nCreate a project in Qt Creator for your ArcGIS Maps SDK for Qt app. You can use a provided project template to create a new project.\n\nComplete the Display a map tutorial to verify that your development environment is properly configured.\n\nWhen you open a Qt Creator project file for the first time, Qt Creator prompts you to configure the project, which requires choosing the kits to use with the project. Choose the kit(s) you created in the previous step, and then click Configure Project.\n\nYou can now build your project in Qt Creator on macOS.\n\nInstall on Linux\n\nYou will install the following components on your Linux development machine:\n\nThe Qt Framework for Linux: this framework is available from The Qt Group for developing cross-platform applications. This is not an Esri product.\n\nThe Qt Framework for Android: (for Android developers) this framework is available from The Qt Group for developing Android applications. This is not an Esri product.\n\nQt Creator: the IDE for Qt application development available from The Qt Group bundled with The Qt Framework for Linux. This is not an Esri product.\n\nCMake: only required if building with CMake instead of qmake. This is not an Esri product.\n\nArcGIS Maps SDK for Qt for Linux\n\nDownload the Qt Framework for Linux and Qt Creator\n\nTo build an application using the ArcGIS Maps SDK for Qt , you will need the Qt Framework designed to work with your compiler. You can install Qt Frameworks for multiple target platforms on your development machine, side-by-side.\n\nDownload and install the appropriate Qt Framework for Linux from The Qt Group. Make sure that you also install Qt Creator along with the Qt Framework.\n\nInstall prerequisites for Android development\n\nInstall the prerequisite software for Android app development, including the Java Development Kit (JDK), Android SDK Tools, Android Platform Tools, and the Android NDK. See Qt for Android for details about developing for Android with Qt. Be sure to install software versions that conform to the System requirements.\n\nBrowse to Getting Started with Qt for Android. Follow the instructions there to download and install the prerequisite software. Consider creating a new staging folder to store all the prerequisite software, such as ~/Android. This folder is referred to in the download and install instructions as a <staging folde r >.\n\nDownload the Qt Framework for Android (on Linux) from The Qt Group.\n\nRun the Qt Framework for Android installer, accepting all the installer defaults.\n\nIn Qt Creator, click Tools > Options > Devices > Android, and fill in the paths. Paths should be similar to the following:\n\nJDK Location: <staging folde r > /jdkl.<versio n >\n\nAndroid SDK Location: <staging folde r > /android-sdk-linux\n\nAndroid NDK Location: <staging folde r > /android-ndk-<versio n >\n\nInstall ArcGIS Maps SDK for Qt\n\nMake sure you have read-write-execute access to your desired ArcGIS installation location.\n\nGo to the downloads page, and select the Linux download for the most recent version of ArcGIS Maps SDK for Qt . Note that you can download older versions as well as other development platforms.\n\nSave the file to an installation location large enough to hold the extracted content from the gzip and tar files.\n\nUnzip the ArcGIS Maps SDK for Qt gzip file to get the tar file. At the prompt, type % gunzip .tar.gz.\n\nExtract the product tar file to create the installation directory: % tar xvf .tar.\n\nRun the script ./Setup from the installation location. Do not double-click on the file in the file browser and select Run in Terminal, or the post-installer will start and then exit as soon as the terminal window closes.\n\nAfter the setup program finishes, the post-installer script runs. The post-installer integrates the ArcGIS Maps SDK for Qt with your installation of the Qt Framework and Qt Creator. Please note that the post-installer script needs read / write access to ~/.config.\n\nAdd the path to the ArcGIS Maps SDK for Qt library files to the environment variable LD _ L IBRARY _ P ATH. The path is <install locatio n > /arcgis/map s _ sdk/<sdk versio n > /sdk/linux/<platfor m > /lib. You can do this in your Qt Creator project settings, or by setting the LD _ L IBRARY _ P ATH environment variable before starting Qt Creator.\n\nConfigure Qt Creator kits\n\nIn Qt Creator, a kit defines how to build an app for a target device. Set up a kit for each target device on which you will deploy your app to so that you can develop and test for that device. A kit includes references to the compiler, the Qt Framework, and the debugger. At minimum, you should set up a desktop kit.\n\nRun Qt Creator.\n\nClick Tools > Options > Build & Run > Kits.\n\nExamine the existing kits. If no existing kit has the settings you want, click Add to create a new kit.\n\nGive the kit an appropriate name.\n\nSet the Device type to to match your target device, such as Desktop.\n\nChoose the appropriate compiler for your development platform.\n\nChoose the appropriate debugger. If there is no appropriate debugger, you will need to install one. Refer to your operating system documentation.\n\nChoose the Qt Version.\n\nClick OK or Apply to finish creating the kit.\n\nRepeat these steps to add an Android kit if you installed the Qt Framework for Android.\n\nInstall CMake\n\nArcGIS Maps SDK for Qt applications can be built with qmake or CMake. Qmake is installed by default with the Qt Framework. CMake must be installed separately from the CMake website. See the Qt CMake Manual for more information.\n\nConfigure a Qt Creator project\n\nCreate a project in Qt Creator for your ArcGIS Maps SDK for Qt app. You can use a provided project template to create a new project.\n\nComplete the Display a map tutorial to verify that your development environment is properly configured.\n\nWhen you open a Qt Creator project file for the first time, Qt Creator prompts you to configure the project. This means choosing the kits to use with the project. Choose the kit(s) you created in the previous step, and then click Configure Project.\n\nYou can now build your project in Qt Creator on Linux.\n\nAdditional downloads\n\nAdditional sources of sample code, data, and tools are available to enhance your development projects. You can even download this guide as stand-alone developer documentation.\n\nSample code\n\nBrowse the comprehensive list of samples in the documentation or download sample code from the GitHub repository. Interact with live samples using the sample viewer app, which can be downloaded from ArcGIS Online for your target platform (Windows, macOS, Linux, or Android).\n\nArcGIS Maps SDK for Qt Toolkit\n\nThe open source ArcGIS Maps SDK for Qt Toolkit contains UI components and utilities that will help simplify your Qt app development.\n\nArcGISArView: A scene view that integrates with ARKit/ARCore features for augmented reality on mobile devices.\n\nAuthenticationView Dialog: A wrapper view that will automatically display the proper authentication view for any of the supported authentication types (OAuth, Token, HTTP Basic, HTTP Digest, SAML, PKI).\n\nClientCertificateView Dialog: A dialog for handling PKI authentication.\n\nOAuth2View Dialog: A dialog for handling OAuth authentication.\n\nSslHandshakeView Dialog: A dialog for allowing/blocking SSL Handshake related issues.\n\nUserCredentialsView Dialog: A generic dialog for handling username/password authentication.\n\nCallout Control: A view for displaying information at a geographic location on the map.\n\nPopupView Control: A view for displaying attributes and attachments for features.\n\nTimeSlider Control: A control for visualizing temporal data by changing the currently visible time extent.\n\nCompass Control: (C++ only) A compass (aka north arrow) control for indicating which direction is north.\n\nCoordinate Conversion Control: (C++ Only) A tool for assisting in converting coordinates from one format to another.\n\nLocal Server\n\nLocal Server enables you to run offline geoprocessing tasks to provide advanced spatial analysis and data manipulation in your applications. These tasks work in the same way as geoprocessing tasks running on ArcGIS Enterprise. If you want to run offline geoprocessing tasks in your app, install Local Server following the steps in Local Server.\n\nStand-alone developer documentation\n\nYou can download the developer documentation as an archive from the downloads page. The archive contains instructions to serve the documentation from a local web server so you can access it without a connection to the internet. The stand-alone documentation includes the developer guide, API reference, tutorials, and samples documentation. This documentation is designed to run on a local stand-alone computer or on an internal network and not on the public internet.\n\nTo serve the documentation locally:\n\nDownload the documentation for the SDK you want to use. The downloaded files are in a .zip archive format.\n\nExtract the archive to a local folder. The extracted archive has two subfolders: public and install.\n\nOpen the README.md file in the install folder and follow the instructions for your chosen web server.\n\nSupplemental data\n\nStreetMap Premium\n\nStreetMap Premium delivers a high-quality, multiscale cartographic map display with enriched street data. In addition, it provides accurate geocoding, optimized routing, easy to follow directions, and powerful network analysis. StreetMap Premium maps can simultaneously fulfill the need for an address locator, street network dataset, and basemap in your apps. They are consistent across all regions of the world and are available for both online, connected scenarios and for use in offline, disconnected scenarios in the form of mobile map packages.\n\nIf you want to use StreetMap Premium data (the StreetMap Premium extension), download the demonstration data from the downloads page for development and testing. Please contact Esri Customer Service for access to a region of your choice for development and testing or to license StreetMap Premium data for deployment.\n\nProjection Engine data\n\nDatum transformations are used when geometries must be projected from one spatial reference to another when there is a difference in the datum that underlies the two spatial references. Datum transformations can be mathematically defined (equation-based transformations), or may rely on external supporting files (grid-based transformations). Certain Projection Engine data files must be present when you use a grid-based transformation in your app; attempting to use a transformation with missing Projection Engine files will cause an error. The API can detect whether the necessary files are available on the local file system.\n\nIf your app requires grid-based transformations, you can download supporting Projection Engine files from the downloads page. See the Spatial references topic for more information about working with coordinate systems, projections, and datum transformations.\n\nElectronic Navigational Charts (ENC)\n\nElectronic navigational charts (ENCs) are georeferenced vector datasets for the visualization and analysis of hydrographic and maritime information. This SDK supports ENCs that conform to the International Hydrographic Organization (IHO) S-57 standard.\n\nIf you want to work with Electronic Navigational Charts (ENC) download the hydrography directory from the downloads page.\n\nSee the Display electronic navigational charts topic for more information about working with ENC data.\n\nSupport\n\nIf you have questions or difficulty getting set up, ask for help on the ArcGIS Maps SDK for Qt developer community. Visit the support page for other ways to ask for help.\n\nNext steps"
    }
}