{
    "id": "dbpedia_5008_2",
    "rank": 50,
    "data": {
        "url": "https://stackoverflow.com/questions/8440751/is-c-in-qt-different-from-the-ansi-c",
        "read_more_link": "",
        "language": "en",
        "title": "Is c++ in Qt different from the ANSI c++?",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://www.gravatar.com/avatar/d22164b2f3535bf852eb9a3c2086714c?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/379ae669ce4096c239984ed10f0799c7?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/180951122f7cacd632da53088781a484?s=64&d=identicon&r=PG",
            "https://stackoverflow.com/posts/8440751/ivc/093f?prg=c5d27ba7-b944-4a86-84ee-cb9047962af2"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2011-12-09T03:37:12",
        "summary": "",
        "meta_description": "I'm learning c++ and at the moment though using Qt creator. I have heard here and there that the Qt framework is different or C++ Qt isn't the same as the standard ANSI C++. Can someone tell me a l...",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/8440751/is-c-in-qt-different-from-the-ansi-c",
        "text": "Qt Framework\n\nQt is a C++-based framework that extends the capabilities of C++ through custom compilation steps. Qt-based classes derive from QObject and can take advantage of additional functionality not present in the standard C++ language.\n\nThe key advantages of the framework are that it supports a more advanced type of callback function (signals and slots) and it has multi-platform support.\n\nhttp://qt.nokia.com/products\n\nSignals and Slots\n\nSource: http://doc.qt.nokia.com/4.7/signalsandslots.html:\n\nSignals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks.\n\nCross-Platform Compatibility Layer\n\nThe Qt toolchain allows you to utilize the same tools to build applications that run on multiple platforms - such as Windows, Linux, and OS X. Qt abstracts platform-dependent differences so that you can compile the same program for multiple platforms. You can think of it like inverse Java - instead of writing one application to run on a virtual machine that can run on any platform you write one application that is compiled to native code for the platform(s) you need to support.\n\nThe advantage to Qt's approach is primarily performance - it should require less memory at run-time because there's no virtual machine between your application and the OS like there would be with Java or an interpreted language.\n\nThe downside is that you have to maintain builds for each platform and there are always grey areas that aren't supported. So inevitably you'll wind up writing some amount of platform-specific code in any decently-complex application.\n\nC++11 Standard\n\nIf you want to study standard C++, take a look at C++11:"
    }
}