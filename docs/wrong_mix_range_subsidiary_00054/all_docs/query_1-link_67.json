{
    "id": "wrong_mix_range_subsidiary_00054_1",
    "rank": 67,
    "data": {
        "url": "https://www.science.gov/topicpages/c/computer%2Bsoftware%2Bapplications",
        "read_more_link": "",
        "language": "en",
        "title": "computer software applications: Topics by Science.gov",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://www.science.gov/scigov/desktop/en/images/SciGov_logo.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "High Performance Computing Software Applications for Space Situational Awareness\n\nNASA Astrophysics Data System (ADS)\n\nGiuliano, C.; Schumacher, P.; Matson, C.; Chun, F.; Duncan, B.; Borelli, K.; Desonia, R.; Gusciora, G.; Roe, K.\n\nThe High Performance Computing Software Applications Institute for Space Situational Awareness (HSAI-SSA) has completed its first full year of applications development. The emphasis of our work in this first year was in improving space surveillance sensor models and image enhancement software. These applications are the Space Surveillance Network Analysis Model (SSNAM), the Air Force Space Fence simulation (SimFence), and physically constrained iterative de-convolution (PCID) image enhancement software tool. Specifically, we have demonstrated order of magnitude speed-up in those codes running on the latest Cray XD-1 Linux supercomputer (Hoku) at the Maui High Performance Computing Center. The software applications improvements that HSAI-SSA has made, has had significant impact to the warfighter and has fundamentally changed the role of high performance computing in SSA.\n\nBringing Legacy Visualization Software to Modern Computing Devices via Application Streaming\n\nNASA Astrophysics Data System (ADS)\n\nFisher, Ward\n\n2014-05-01\n\nPlanning software compatibility across forthcoming generations of computing platforms is a problem commonly encountered in software engineering and development. While this problem can affect any class of software, data analysis and visualization programs are particularly vulnerable. This is due in part to their inherent dependency on specialized hardware and computing environments. A number of strategies and tools have been designed to aid software engineers with this task. While generally embraced by developers at 'traditional' software companies, these methodologies are often dismissed by the scientific software community as unwieldy, inefficient and unnecessary. As a result, many important and storied scientific software packages can struggle to adapt to a new computing environment; for example, one in which much work is carried out on sub-laptop devices (such as tablets and smartphones). Rewriting these packages for a new platform often requires significant investment in terms of development time and developer expertise. In many cases, porting older software to modern devices is neither practical nor possible. As a result, replacement software must be developed from scratch, wasting resources better spent on other projects. Enabled largely by the rapid rise and adoption of cloud computing platforms, 'Application Streaming' technologies allow legacy visualization and analysis software to be operated wholly from a client device (be it laptop, tablet or smartphone) while retaining full functionality and interactivity. It mitigates much of the developer effort required by other more traditional methods while simultaneously reducing the time it takes to bring the software to a new platform. This work will provide an overview of Application Streaming and how it compares against other technologies which allow scientific visualization software to be executed from a remote computer. We will discuss the functionality and limitations of existing application streaming\n\nComputer software.\n\nPubMed\n\nRosenthal, L E\n\n1986-10-01\n\nSoftware is the component in a computer system that permits the hardware to perform the various functions that a computer system is capable of doing. The history of software and its development can be traced to the early nineteenth century. All computer systems are designed to utilize the \"stored program concept\" as first developed by Charles Babbage in the 1850s. The concept was lost until the mid-1940s, when modern computers made their appearance. Today, because of the complex and myriad tasks that a computer system can perform, there has been a differentiation of types of software. There is software designed to perform specific business applications. There is software that controls the overall operation of a computer system. And there is software that is designed to carry out specialized tasks. Regardless of types, software is the most critical component of any computer system. Without it, all one has is a collection of circuits, transistors, and silicone chips.\n\nSoftware environment for implementing engineering applications on MIMD computers\n\nNASA Technical Reports Server (NTRS)\n\nLopez, L. A.; Valimohamed, K. A.; Schiff, S.\n\n1990-01-01\n\nIn this paper the concept for a software environment for developing engineering application systems for multiprocessor hardware (MIMD) is presented. The philosophy employed is to solve the largest problems possible in a reasonable amount of time, rather than solve existing problems faster. In the proposed environment most of the problems concerning parallel computation and handling of large distributed data spaces are hidden from the application program developer, thereby facilitating the development of large-scale software applications. Applications developed under the environment can be executed on a variety of MIMD hardware; it protects the application software from the effects of a rapidly changing MIMD hardware technology.\n\nEnhancement of computer system for applications software branch\n\nNASA Technical Reports Server (NTRS)\n\nBykat, Alex\n\n1987-01-01\n\nPresented is a compilation of the history of a two-month project concerned with a survey, evaluation, and specification of a new computer system for the Applications Software Branch of the Software and Data Management Division of Information and Electronic Systems Laboratory of Marshall Space Flight Center, NASA. Information gathering consisted of discussions and surveys of branch activities, evaluation of computer manufacturer literature, and presentations by vendors. Information gathering was followed by evaluation of their systems. The criteria of the latter were: the (tentative) architecture selected for the new system, type of network architecture supported, software tools, and to some extent the price. The information received from the vendors, as well as additional research, lead to detailed design of a suitable system. This design included considerations of hardware and software environments as well as personnel issues such as training. Design of the system culminated in a recommendation for a new computing system for the Branch.\n\nWildlife software: procedures for publication of computer software\n\nUSGS Publications Warehouse\n\nSamuel, M.D.\n\n1990-01-01\n\nComputers and computer software have become an integral part of the practice of wildlife science. Computers now play an important role in teaching, research, and management applications. Because of the specialized nature of wildlife problems, specific computer software is usually required to address a given problem (e.g., home range analysis). This type of software is not usually available from commercial vendors and therefore must be developed by those wildlife professionals with particular skill in computer programming. Current journal publication practices generally prevent a detailed description of computer software associated with new techniques. In addition, peer review of journal articles does not usually include a review of associated computer software. Thus, many wildlife professionals are usually unaware of computer software that would meet their needs or of major improvements in software they commonly use. Indeed most users of wildlife software learn of new programs or important changes only by word of mouth.\n\nTrends in computer hardware and software.\n\nPubMed\n\nFrankenfeld, F M\n\n1993-04-01\n\nPreviously identified and current trends in the development of computer systems and in the use of computers for health care applications are reviewed. Trends identified in a 1982 article were increasing miniaturization and archival ability, increasing software costs, increasing software independence, user empowerment through new software technologies, shorter computer-system life cycles, and more rapid development and support of pharmaceutical services. Most of these trends continue today. Current trends in hardware and software include the increasing use of reduced instruction-set computing, migration to the UNIX operating system, the development of large software libraries, microprocessor-based smart terminals that allow remote validation of data, speech synthesis and recognition, application generators, fourth-generation languages, computer-aided software engineering, object-oriented technologies, and artificial intelligence. Current trends specific to pharmacy and hospitals are the withdrawal of vendors of hospital information systems from the pharmacy market, improved linkage of information systems within hospitals, and increased regulation by government. The computer industry and its products continue to undergo dynamic change. Software development continues to lag behind hardware, and its high cost is offsetting the savings provided by hardware.\n\nFree and open-source software application for the evaluation of coronary computed tomography angiography images.\n\nPubMed\n\nHadlich, Marcelo Souza; Oliveira, GlÃ¡ucia Maria Moraes; FeijÃ³o, RaÃºl A; Azevedo, Clerio F; Tura, Bernardo Rangel; Ziemer, Paulo Gustavo Portela; Blanco, Pablo Javier; Pina, Gustavo; Meira, MÃ¡rcio; Souza e Silva, Nelson Albuquerque de\n\n2012-10-01\n\nThe standardization of images used in Medicine in 1993 was performed using the DICOM (Digital Imaging and Communications in Medicine) standard. Several tests use this standard and it is increasingly necessary to design software applications capable of handling this type of image; however, these software applications are not usually free and open-source, and this fact hinders their adjustment to most diverse interests. To develop and validate a free and open-source software application capable of handling DICOM coronary computed tomography angiography images. We developed and tested the ImageLab software in the evaluation of 100 tests randomly selected from a database. We carried out 600 tests divided between two observers using ImageLab and another software sold with Philips Brilliance computed tomography appliances in the evaluation of coronary lesions and plaques around the left main coronary artery (LMCA) and the anterior descending artery (ADA). To evaluate intraobserver, interobserver and intersoftware agreements, we used simple and kappa statistics agreements. The agreements observed between software applications were generally classified as substantial or almost perfect in most comparisons. The ImageLab software agreed with the Philips software in the evaluation of coronary computed tomography angiography tests, especially in patients without lesions, with lesions < 50% in the LMCA and < 70% in the ADA. The agreement for lesions > 70% in the ADA was lower, but this is also observed when the anatomical reference standard is used.\n\nHigh Energy Physics Forum for Computational Excellence: Working Group Reports (I. Applications Software II. Software Libraries and Tools III. Systems)\n\nDOE Office of Scientific and Technical Information (OSTI.GOV)\n\nHabib, Salman; Roser, Robert; LeCompte, Tom\n\n2015-10-29\n\nComputing plays an essential role in all aspects of high energy physics. As computational technology evolves rapidly in new directions, and data throughput and volume continue to follow a steep trend-line, it is important for the HEP community to develop an effective response to a series of expected challenges. In order to help shape the desired response, the HEP Forum for Computational Excellence (HEP-FCE) initiated a roadmap planning activity with two key overlapping drivers -- 1) software effectiveness, and 2) infrastructure and expertise advancement. The HEP-FCE formed three working groups, 1) Applications Software, 2) Software Libraries and Tools, and 3)moreÂ Â» Systems (including systems software), to provide an overview of the current status of HEP computing and to present findings and opportunities for the desired HEP computational roadmap. The final versions of the reports are combined in this document, and are presented along with introductory material.Â«Â less\n\nHigh Energy Physics Forum for Computational Excellence: Working Group Reports (I. Applications Software II. Software Libraries and Tools III. Systems)\n\nDOE Office of Scientific and Technical Information (OSTI.GOV)\n\nHabib, Salman; Roser, Robert\n\nComputing plays an essential role in all aspects of high energy physics. As computational technology evolves rapidly in new directions, and data throughput and volume continue to follow a steep trend-line, it is important for the HEP community to develop an effective response to a series of expected challenges. In order to help shape the desired response, the HEP Forum for Computational Excellence (HEP-FCE) initiated a roadmap planning activity with two key overlapping drivers -- 1) software effectiveness, and 2) infrastructure and expertise advancement. The HEP-FCE formed three working groups, 1) Applications Software, 2) Software Libraries and Tools, and 3)moreÂ Â» Systems (including systems software), to provide an overview of the current status of HEP computing and to present findings and opportunities for the desired HEP computational roadmap. The final versions of the reports are combined in this document, and are presented along with introductory material.Â«Â less\n\n48 CFR 227.7202 - Commercial computer software and commercial computer software documentation.\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... software and commercial computer software documentation. 227.7202 Section 227.7202 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7202 Commercial computer software and commercial computer software documentation. ...\n\n48 CFR 227.7203 - Noncommercial computer software and noncommercial computer software documentation.\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... software and noncommercial computer software documentation. 227.7203 Section 227.7203 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203 Noncommercial computer software and noncommercial computer software documentation. ...\n\n48 CFR 227.7203 - Noncommercial computer software and noncommercial computer software documentation.\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... software and noncommercial computer software documentation. 227.7203 Section 227.7203 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203 Noncommercial computer software and noncommercial computer software documentation. ...\n\n48 CFR 227.7203 - Noncommercial computer software and noncommercial computer software documentation.\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... software and noncommercial computer software documentation. 227.7203 Section 227.7203 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203 Noncommercial computer software and noncommercial computer software documentation. ...\n\n48 CFR 227.7202 - Commercial computer software and commercial computer software documentation.\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... software and commercial computer software documentation. 227.7202 Section 227.7202 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7202 Commercial computer software and commercial computer software documentation. ...\n\n48 CFR 227.7203 - Noncommercial computer software and noncommercial computer software documentation.\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... software and noncommercial computer software documentation. 227.7203 Section 227.7203 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203 Noncommercial computer software and noncommercial computer software documentation. ...\n\n48 CFR 227.7202 - Commercial computer software and commercial computer software documentation.\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... software and commercial computer software documentation. 227.7202 Section 227.7202 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7202 Commercial computer software and commercial computer software documentation. ...\n\n48 CFR 227.7202 - Commercial computer software and commercial computer software documentation.\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... software and commercial computer software documentation. 227.7202 Section 227.7202 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7202 Commercial computer software and commercial computer software documentation. ...\n\n48 CFR 227.7202 - Commercial computer software and commercial computer software documentation.\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... software and commercial computer software documentation. 227.7202 Section 227.7202 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7202 Commercial computer software and commercial computer software documentation. ...\n\n48 CFR 227.7203 - Noncommercial computer software and noncommercial computer software documentation.\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... software and noncommercial computer software documentation. 227.7203 Section 227.7203 Federal Acquisition... REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203 Noncommercial computer software and noncommercial computer software documentation. ...\n\n48 CFR 227.7203-14 - Conformity, acceptance, and warranty of computer software and computer software documentation.\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n..., and warranty of computer software and computer software documentation. 227.7203-14 Section 227.7203-14... GENERAL CONTRACTING REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-14 Conformity, acceptance, and warranty of computer software and computer...\n\n48 CFR 227.7203-14 - Conformity, acceptance, and warranty of computer software and computer software documentation.\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n..., and warranty of computer software and computer software documentation. 227.7203-14 Section 227.7203-14... GENERAL CONTRACTING REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-14 Conformity, acceptance, and warranty of computer software and computer...\n\nSoftware Attribution for Geoscience Applications in the Computational Infrastructure for Geodynamics\n\nNASA Astrophysics Data System (ADS)\n\nHwang, L.; Dumit, J.; Fish, A.; Soito, L.; Kellogg, L. H.; Smith, M.\n\n2015-12-01\n\nScientific software is largely developed by individual scientists and represents a significant intellectual contribution to the field. As the scientific culture and funding agencies move towards an expectation that software be open-source, there is a corresponding need for mechanisms to cite software, both to provide credit and recognition to developers, and to aid in discoverability of software and scientific reproducibility. We assess the geodynamic modeling community's current citation practices by examining more than 300 predominantly self-reported publications utilizing scientific software in the past 5 years that is available through the Computational Infrastructure for Geodynamics (CIG). Preliminary results indicate that authors cite and attribute software either through citing (in rank order) peer-reviewed scientific publications, a user's manual, and/or a paper describing the software code. Attributions maybe found directly in the text, in acknowledgements, in figure captions, or in footnotes. What is considered citable varies widely. Citations predominantly lack software version numbers or persistent identifiers to find the software package. Versioning may be implied through reference to a versioned user manual. Authors sometimes report code features used and whether they have modified the code. As an open-source community, CIG requests that researchers contribute their modifications to the repository. However, such modifications may not be contributed back to a repository code branch, decreasing the chances of discoverability and reproducibility. Survey results through CIG's Software Attribution for Geoscience Applications (SAGA) project suggest that lack of knowledge, tools, and workflows to cite codes are barriers to effectively implement the emerging citation norms. Generated on-demand attributions on software landing pages and a prototype extensible plug-in to automatically generate attributions in codes are the first steps towards reproducibility.\n\nSoftware Systems for High-performance Quantum Computing\n\nDOE Office of Scientific and Technical Information (OSTI.GOV)\n\nHumble, Travis S; Britt, Keith A\n\nQuantum computing promises new opportunities for solving hard computational problems, but harnessing this novelty requires breakthrough concepts in the design, operation, and application of computing systems. We define some of the challenges facing the development of quantum computing systems as well as software-based approaches that can be used to overcome these challenges. Following a brief overview of the state of the art, we present models for the quantum programming and execution models, the development of architectures for hybrid high-performance computing systems, and the realization of software stacks for quantum networking. This leads to a discussion of the role that conventionalmoreÂ Â» computing plays in the quantum paradigm and how some of the current challenges for exascale computing overlap with those facing quantum computing.Â«Â less\n\nSoftware For Computing Reliability Of Other Software\n\nNASA Technical Reports Server (NTRS)\n\nNikora, Allen; Antczak, Thomas M.; Lyu, Michael\n\n1995-01-01\n\nComputer Aided Software Reliability Estimation (CASRE) computer program developed for use in measuring reliability of other software. Easier for non-specialists in reliability to use than many other currently available programs developed for same purpose. CASRE incorporates mathematical modeling capabilities of public-domain Statistical Modeling and Estimation of Reliability Functions for Software (SMERFS) computer program and runs in Windows software environment. Provides menu-driven command interface; enabling and disabling of menu options guides user through (1) selection of set of failure data, (2) execution of mathematical model, and (3) analysis of results from model. Written in C language.\n\n48 CFR 227.7203-10 - Contractor identification and marking of computer software or computer software documentation to...\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... and marking of computer software or computer software documentation to be furnished with restrictive... Rights in Computer Software and Computer Software Documentation 227.7203-10 Contractor identification and marking of computer software or computer software documentation to be furnished with restrictive markings...\n\n48 CFR 227.7203-10 - Contractor identification and marking of computer software or computer software documentation to...\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... and marking of computer software or computer software documentation to be furnished with restrictive... Rights in Computer Software and Computer Software Documentation 227.7203-10 Contractor identification and marking of computer software or computer software documentation to be furnished with restrictive markings...\n\n48 CFR 227.7203-10 - Contractor identification and marking of computer software or computer software documentation to...\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... and marking of computer software or computer software documentation to be furnished with restrictive... Rights in Computer Software and Computer Software Documentation 227.7203-10 Contractor identification and marking of computer software or computer software documentation to be furnished with restrictive markings...\n\n48 CFR 227.7203-10 - Contractor identification and marking of computer software or computer software documentation to...\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... and marking of computer software or computer software documentation to be furnished with restrictive... Rights in Computer Software and Computer Software Documentation 227.7203-10 Contractor identification and marking of computer software or computer software documentation to be furnished with restrictive markings...\n\n48 CFR 227.7203-10 - Contractor identification and marking of computer software or computer software documentation to...\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... and marking of computer software or computer software documentation to be furnished with restrictive... Rights in Computer Software and Computer Software Documentation 227.7203-10 Contractor identification and marking of computer software or computer software documentation to be furnished with restrictive markings...\n\nArchitecture independent environment for developing engineering software on MIMD computers\n\nNASA Technical Reports Server (NTRS)\n\nValimohamed, Karim A.; Lopez, L. A.\n\n1990-01-01\n\nEngineers are constantly faced with solving problems of increasing complexity and detail. Multiple Instruction stream Multiple Data stream (MIMD) computers have been developed to overcome the performance limitations of serial computers. The hardware architectures of MIMD computers vary considerably and are much more sophisticated than serial computers. Developing large scale software for a variety of MIMD computers is difficult and expensive. There is a need to provide tools that facilitate programming these machines. First, the issues that must be considered to develop those tools are examined. The two main areas of concern were architecture independence and data management. Architecture independent software facilitates software portability and improves the longevity and utility of the software product. It provides some form of insurance for the investment of time and effort that goes into developing the software. The management of data is a crucial aspect of solving large engineering problems. It must be considered in light of the new hardware organizations that are available. Second, the functional design and implementation of a software environment that facilitates developing architecture independent software for large engineering applications are described. The topics of discussion include: a description of the model that supports the development of architecture independent software; identifying and exploiting concurrency within the application program; data coherence; engineering data base and memory management.\n\n48 CFR 227.7203-8 - Deferred delivery and deferred ordering of computer software and computer software documentation.\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... deferred ordering of computer software and computer software documentation. 227.7203-8 Section 227.7203-8... GENERAL CONTRACTING REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-8 Deferred delivery and deferred ordering of computer software and computer...\n\n48 CFR 227.7203-8 - Deferred delivery and deferred ordering of computer software and computer software documentation.\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... deferred ordering of computer software and computer software documentation. 227.7203-8 Section 227.7203-8... GENERAL CONTRACTING REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-8 Deferred delivery and deferred ordering of computer software and computer...\n\n48 CFR 227.7203-8 - Deferred delivery and deferred ordering of computer software and computer software documentation.\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... deferred ordering of computer software and computer software documentation. 227.7203-8 Section 227.7203-8... GENERAL CONTRACTING REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-8 Deferred delivery and deferred ordering of computer software and computer...\n\n48 CFR 227.7203-8 - Deferred delivery and deferred ordering of computer software and computer software documentation.\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... deferred ordering of computer software and computer software documentation. 227.7203-8 Section 227.7203-8... GENERAL CONTRACTING REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-8 Deferred delivery and deferred ordering of computer software and computer...\n\n48 CFR 227.7203-8 - Deferred delivery and deferred ordering of computer software and computer software documentation.\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... deferred ordering of computer software and computer software documentation. 227.7203-8 Section 227.7203-8... GENERAL CONTRACTING REQUIREMENTS PATENTS, DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-8 Deferred delivery and deferred ordering of computer software and computer...\n\nSoftware Safety Risk in Legacy Safety-Critical Computer Systems\n\nNASA Technical Reports Server (NTRS)\n\nHill, Janice; Baggs, Rhoda\n\n2007-01-01\n\nSafety-critical computer systems must be engineered to meet system and software safety requirements. For legacy safety-critical computer systems, software safety requirements may not have been formally specified during development. When process-oriented software safety requirements are levied on a legacy system after the fact, where software development artifacts don't exist or are incomplete, the question becomes 'how can this be done?' The risks associated with only meeting certain software safety requirements in a legacy safety-critical computer system must be addressed should such systems be selected as candidates for reuse. This paper proposes a method for ascertaining formally, a software safety risk assessment, that provides measurements for software safety for legacy systems which may or may not have a suite of software engineering documentation that is now normally required. It relies upon the NASA Software Safety Standard, risk assessment methods based upon the Taxonomy-Based Questionnaire, and the application of reverse engineering CASE tools to produce original design documents for legacy systems.\n\nComputer Software Reviews.\n\nERIC Educational Resources Information Center\n\nHawaii State Dept. of Education, Honolulu. Office of Instructional Services.\n\nIntended to provide guidance in the selection of the best computer software available to support instruction and to make optimal use of schools' financial resources, this publication provides a listing of computer software programs that have been evaluated according to their currency, relevance, and value to Hawaii's educational programs. Theâ¦\n\n48 CFR 227.7203-3 - Early identification of computer software or computer software documentation to be furnished to...\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... computer software or computer software documentation to be furnished to the Government with restrictions on..., DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-3 Early identification of computer software or computer software documentation to be furnished to the Government with...\n\n48 CFR 227.7203-3 - Early identification of computer software or computer software documentation to be furnished to...\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... computer software or computer software documentation to be furnished to the Government with restrictions on..., DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-3 Early identification of computer software or computer software documentation to be furnished to the Government with...\n\n48 CFR 227.7203-3 - Early identification of computer software or computer software documentation to be furnished to...\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... computer software or computer software documentation to be furnished to the Government with restrictions on..., DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-3 Early identification of computer software or computer software documentation to be furnished to the Government with...\n\n48 CFR 227.7203-3 - Early identification of computer software or computer software documentation to be furnished to...\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... computer software or computer software documentation to be furnished to the Government with restrictions on..., DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-3 Early identification of computer software or computer software documentation to be furnished to the Government with...\n\n48 CFR 227.7203-3 - Early identification of computer software or computer software documentation to be furnished to...\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... computer software or computer software documentation to be furnished to the Government with restrictions on..., DATA, AND COPYRIGHTS Rights in Computer Software and Computer Software Documentation 227.7203-3 Early identification of computer software or computer software documentation to be furnished to the Government with...\n\n48 CFR 12.212 - Computer software.\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... 48 Federal Acquisition Regulations System 1 2012-10-01 2012-10-01 false Computer software. 12.212... software. (a) Commercial computer software or commercial computer software documentation shall be acquired... required toâ (1) Furnish technical information related to commercial computer software or commercial...\n\n48 CFR 12.212 - Computer software.\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... 48 Federal Acquisition Regulations System 1 2011-10-01 2011-10-01 false Computer software. 12.212... software. (a) Commercial computer software or commercial computer software documentation shall be acquired... required toâ (1) Furnish technical information related to commercial computer software or commercial...\n\n48 CFR 12.212 - Computer software.\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... 48 Federal Acquisition Regulations System 1 2014-10-01 2014-10-01 false Computer software. 12.212... software. (a) Commercial computer software or commercial computer software documentation shall be acquired... required toâ (1) Furnish technical information related to commercial computer software or commercial...\n\n48 CFR 12.212 - Computer software.\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... 48 Federal Acquisition Regulations System 1 2010-10-01 2010-10-01 false Computer software. 12.212... software. (a) Commercial computer software or commercial computer software documentation shall be acquired... required toâ (1) Furnish technical information related to commercial computer software or commercial...\n\n48 CFR 12.212 - Computer software.\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... 48 Federal Acquisition Regulations System 1 2013-10-01 2013-10-01 false Computer software. 12.212... software. (a) Commercial computer software or commercial computer software documentation shall be acquired... required toâ (1) Furnish technical information related to commercial computer software or commercial...\n\nProceedings, Conference on the Computing Environment for Mathematical Software\n\nNASA Technical Reports Server (NTRS)\n\n1981-01-01\n\nRecent advances in software and hardware technology which make it economical to create computing environments appropriate for specialized applications are addressed. Topics included software tools, FORTRAN standards activity, and features of languages, operating systems, and hardware that are important for the development, testing, and maintenance of mathematical software.\n\nApplication of software technology to a future spacecraft computer design\n\nNASA Technical Reports Server (NTRS)\n\nLabaugh, R. J.\n\n1980-01-01\n\nA study was conducted to determine how major improvements in spacecraft computer systems can be obtained from recent advances in hardware and software technology. Investigations into integrated circuit technology indicated that the CMOS/SOS chip set being developed for the Air Force Avionics Laboratory at Wright Patterson had the best potential for improving the performance of spaceborne computer systems. An integral part of the chip set is the bit slice arithmetic and logic unit. The flexibility allowed by microprogramming, combined with the software investigations, led to the specification of a baseline architecture and instruction set.\n\nMore About Software for No-Loss Computing\n\nNASA Technical Reports Server (NTRS)\n\nEdmonds, Iarina\n\n2007-01-01\n\nA document presents some additional information on the subject matter of \"Integrated Hardware and Software for No- Loss Computing\" (NPO-42554), which appears elsewhere in this issue of NASA Tech Briefs. To recapitulate: The hardware and software designs of a developmental parallel computing system are integrated to effectuate a concept of no-loss computing (NLC). The system is designed to reconfigure an application program such that it can be monitored in real time and further reconfigured to continue a computation in the event of failure of one of the computers. The design provides for (1) a distributed class of NLC computation agents, denoted introspection agents, that effects hierarchical detection of anomalies; (2) enhancement of the compiler of the parallel computing system to cause generation of state vectors that can be used to continue a computation in the event of a failure; and (3) activation of a recovery component when an anomaly is detected.\n\nTraining Programs in Applications Software.\n\nERIC Educational Resources Information Center\n\nModianos, Doan T.; Cornwell, Larry W.\n\n1988-01-01\n\nDescription of training programs for using business applications software highlights implementing programs for Lotus 1-2-3 and dBASE III Plus. The amount of computer experience of the users and the difference in training methods needed are discussed, and the use of a Macintosh computer for producing notes is explained. (LRW)\n\nSoftware Support for Transiently Powered Computers\n\nDOE Office of Scientific and Technical Information (OSTI.GOV)\n\nVan Der Woude, Joel Matthew\n\nWith the continued reduction in size and cost of computing, power becomes an increasingly heavy burden on system designers for embedded applications. While energy harvesting techniques are an increasingly desirable solution for many deeply embedded applications where size and lifetime are a priority, previous work has shown that energy harvesting provides insufficient power for long running computation. We present Ratchet, which to the authors knowledge is the first automatic, software-only checkpointing system for energy harvesting platforms. We show that Ratchet provides a means to extend computation across power cycles, consistent with those experienced by energy harvesting devices. We demonstrate themoreÂ Â» correctness of our system under frequent failures and show that it has an average overhead of 58.9% across a suite of benchmarks representative for embedded applications.Â«Â less\n\nApplication Reuse Library for Software, Requirements, and Guidelines\n\nNASA Technical Reports Server (NTRS)\n\nMalin, Jane T.; Thronesbery, Carroll\n\n1994-01-01\n\nBetter designs are needed for expert systems and other operations automation software, for more reliable, usable and effective human support. A prototype computer-aided Application Reuse Library shows feasibility of supporting concurrent development and improvement of advanced software by users, analysts, software developers, and human-computer interaction experts. Such a library expedites development of quality software, by providing working, documented examples, which support understanding, modification and reuse of requirements as well as code. It explicitly documents and implicitly embodies design guidelines, standards and conventions. The Application Reuse Library provides application modules with Demo-and-Tester elements. Developers and users can evaluate applicability of a library module and test modifications, by running it interactively. Sub-modules provide application code and displays and controls. The library supports software modification and reuse, by providing alternative versions of application and display functionality. Information about human support and display requirements is provided, so that modifications will conform to guidelines. The library supports entry of new application modules from developers throughout an organization. Example library modules include a timer, some buttons and special fonts, and a real-time data interface program. The library prototype is implemented in the object-oriented G2 environment for developing real-time expert systems.\n\nImage-Processing Software For A Hypercube Computer\n\nNASA Technical Reports Server (NTRS)\n\nLee, Meemong; Mazer, Alan S.; Groom, Steven L.; Williams, Winifred I.\n\n1992-01-01\n\nConcurrent Image Processing Executive (CIPE) is software system intended to develop and use image-processing application programs on concurrent computing environment. Designed to shield programmer from complexities of concurrent-system architecture, it provides interactive image-processing environment for end user. CIPE utilizes architectural characteristics of particular concurrent system to maximize efficiency while preserving architectural independence from user and programmer. CIPE runs on Mark-IIIfp 8-node hypercube computer and associated SUN-4 host computer.\n\nA Software Rejuvenation Framework for Distributed Computing\n\nNASA Technical Reports Server (NTRS)\n\nChau, Savio\n\n2009-01-01\n\nA performability-oriented conceptual framework for software rejuvenation has been constructed as a means of increasing levels of reliability and performance in distributed stateful computing. As used here, performability-oriented signifies that the construction of the framework is guided by the concept of analyzing the ability of a given computing system to deliver services with gracefully degradable performance. The framework is especially intended to support applications that involve stateful replicas of server computers.\n\nArchiving Software Systems: Approaches to Preserve Computational Capabilities\n\nNASA Astrophysics Data System (ADS)\n\nKing, T. A.\n\n2014-12-01\n\nA great deal of effort is made to preserve scientific data. Not only because data is knowledge, but it is often costly to acquire and is sometimes collected under unique circumstances. Another part of the science enterprise is the development of software to process and analyze the data. Developed software is also a large investment and worthy of preservation. However, the long term preservation of software presents some challenges. Software often requires a specific technology stack to operate. This can include software, operating systems and hardware dependencies. One past approach to preserve computational capabilities is to maintain ancient hardware long past its typical viability. On an archive horizon of 100 years, this is not feasible. Another approach to preserve computational capabilities is to archive source code. While this can preserve details of the implementation and algorithms, it may not be possible to reproduce the technology stack needed to compile and run the resulting applications. This future forward dilemma has a solution. Technology used to create clouds and process big data can also be used to archive and preserve computational capabilities. We explore how basic hardware, virtual machines, containers and appropriate metadata can be used to preserve computational capabilities and to archive functional software systems. In conjunction with data archives, this provides scientist with both the data and capability to reproduce the processing and analysis used to generate past scientific results.\n\nComputer Software for Life Cycle Cost.\n\nDTIC Science & Technology\n\n1987-04-01\n\n34 111. 1111I .25 IL4 jj 16 MICROCOPY RESOLUTION TEST CHART hut FILE C AIR CoMMNAMN STFF COLLG STUJDET PORTO i COMpUTER SOFTWARE FOR LIFE CYCLE CO879...obsolete), physical life (utility before physically wearing out), or application life (utility in a given function).\" (7:5) The costs are usually\n\nStudent Computer Attitudes, Experience and Perceptions about the Use of Two Software Applications in Building Engineering\n\nERIC Educational Resources Information Center\n\nChiner, Esther; Garcia-Vera, Victoria E.\n\n2017-01-01\n\nThe purpose of this study was to examine students' computer attitudes and experience, as well as students' perceptions about the use of two specific software applications (Google Drive Spreadsheets and Arquimedes) in the Building Engineering context. The relationships among these variables were also examined. Ninety-two students took part in thisâ¦\n\nFinal Report. Center for Scalable Application Development Software\n\nDOE Office of Scientific and Technical Information (OSTI.GOV)\n\nMellor-Crummey, John\n\n2014-10-26\n\nThe Center for Scalable Application Development Software (CScADS) was established as a part- nership between Rice University, Argonne National Laboratory, University of California Berkeley, University of Tennessee â Knoxville, and University of Wisconsin â Madison. CScADS pursued an integrated set of activities with the aim of increasing the productivity of DOE computational scientists by catalyzing the development of systems software, libraries, compilers, and tools for leadership computing platforms. Principal Center activities were workshops to engage the research community in the challenges of leadership computing, research and development of open-source software, and work with computational scientists to help them develop codesmoreÂ Â» for leadership computing platforms. This final report summarizes CScADS activities at Rice University in these areas.Â«Â less\n\n48 CFR 212.212 - Computer software.\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... 48 Federal Acquisition Regulations System 3 2013-10-01 2013-10-01 false Computer software. 212.212... Acquisition of Commercial Items 212.212 Computer software. (1) Departments and agencies shall identify and... technology development), opportunities for the use of commercial computer software and other non...\n\n48 CFR 212.212 - Computer software.\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... 48 Federal Acquisition Regulations System 3 2011-10-01 2011-10-01 false Computer software. 212.212... Acquisition of Commercial Items 212.212 Computer software. (1) Departments and agencies shall identify and... technology development), opportunities for the use of commercial computer software and other non...\n\n48 CFR 212.212 - Computer software.\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... 48 Federal Acquisition Regulations System 3 2012-10-01 2012-10-01 false Computer software. 212.212... Acquisition of Commercial Items 212.212 Computer software. (1) Departments and agencies shall identify and... technology development), opportunities for the use of commercial computer software and other non...\n\n48 CFR 212.212 - Computer software.\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... 48 Federal Acquisition Regulations System 3 2010-10-01 2010-10-01 false Computer software. 212.212... Acquisition of Commercial Items 212.212 Computer software. (1) Departments and agencies shall identify and... technology development), opportunities for the use of commercial computer software and other non...\n\n48 CFR 212.212 - Computer software.\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... 48 Federal Acquisition Regulations System 3 2014-10-01 2014-10-01 false Computer software. 212.212... Acquisition of Commercial Items 212.212 Computer software. (1) Departments and agencies shall identify and... technology development), opportunities for the use of commercial computer software and other non...\n\nCloud computing geospatial application for water resources based on free and open source software and open standards - a prototype\n\nNASA Astrophysics Data System (ADS)\n\nDelipetrev, Blagoj\n\n2016-04-01\n\nPresently, most of the existing software is desktop-based, designed to work on a single computer, which represents a major limitation in many ways, starting from limited computer processing, storage power, accessibility, availability, etc. The only feasible solution lies in the web and cloud. This abstract presents research and development of a cloud computing geospatial application for water resources based on free and open source software and open standards using hybrid deployment model of public - private cloud, running on two separate virtual machines (VMs). The first one (VM1) is running on Amazon web services (AWS) and the second one (VM2) is running on a Xen cloud platform. The presented cloud application is developed using free and open source software, open standards and prototype code. The cloud application presents a framework how to develop specialized cloud geospatial application that needs only a web browser to be used. This cloud application is the ultimate collaboration geospatial platform because multiple users across the globe with internet connection and browser can jointly model geospatial objects, enter attribute data and information, execute algorithms, and visualize results. The presented cloud application is: available all the time, accessible from everywhere, it is scalable, works in a distributed computer environment, it creates a real-time multiuser collaboration platform, the programing languages code and components are interoperable, and it is flexible in including additional components. The cloud geospatial application is implemented as a specialized water resources application with three web services for 1) data infrastructure (DI), 2) support for water resources modelling (WRM), 3) user management. The web services are running on two VMs that are communicating over the internet providing services to users. The application was tested on the Zletovica river basin case study with concurrent multiple users. The application is a state\n\nPedagogy and Related Criteria: The Selection of Software for Computer Assisted Language Learning\n\nERIC Educational Resources Information Center\n\nSamuels, Jeffrey D.\n\n2013-01-01\n\nComputer-Assisted Language Learning (CALL) is an established field of academic inquiry with distinct applications for second language teaching and learning. Many CALL professionals direct language labs or language resource centers (LRCs) in which CALL software applications and generic software applications support language learning programs andâ¦\n\nTired of Teaching Software Applications?\n\nERIC Educational Resources Information Center\n\nLippert, Susan K.; Granger, Mary J.\n\nMany university business schools have an instructor-led course introducing computer software application packages. This course is often required for all undergraduates and is a prerequisite to other courses, such as accounting, finance, marketing, and operations management. Knowledge and skills gained in this course should enable students not onlyâ¦\n\nOpen-source meteor detection software for low-cost single-board computers\n\nNASA Astrophysics Data System (ADS)\n\nVida, D.; ZuboviÄ, D.; Å egon, D.; Gural, P.; Cupec, R.\n\n2016-01-01\n\nThis work aims to overcome the current price threshold of meteor stations which can sometimes deter meteor enthusiasts from owning one. In recent years small card-sized computers became widely available and are used for numerous applications. To utilize such computers for meteor work, software which can run on them is needed. In this paper we present a detailed description of newly-developed open-source software for fireball and meteor detection optimized for running on low-cost single board computers. Furthermore, an update on the development of automated open-source software which will handle video capture, fireball and meteor detection, astrometry and photometry is given.\n\nSoftware Application for Computer Aided Vocabulary Learning in a Blended Learning Environment\n\nERIC Educational Resources Information Center\n\nEssam, Rasha\n\n2010-01-01\n\nThis study focuses on the effect of computer-aided vocabulary learning software called \"ArabCAVL\" on students' vocabulary acquisition. It was hypothesized that students who use the ArabCAVL software in blended learning environment will surpass students who use traditional vocabulary learning strategies in face-to-face learningâ¦\n\nSeeing beyond Computer Science and Software Engineering\n\nNASA Astrophysics Data System (ADS)\n\nNori, Kesav Vithal\n\nThe boundaries of computer science are defined by what symbolic computation can accomplish. Software Engineering is concerned with effective use of computing technology to support automatic computation on a large scale so as to construct desirable solutions to worthwhile problems. Both focus on what happens within the machine. In contrast, most practical applications of computing support end-users in realizing (often unsaid) objectives. It is often said that such objectives cannot be even specified, e.g., what is the specification of MS Word, or for that matter, any flavour of UNIX? This situation points to the need for architecting what people do with computers. Based on Systems Thinking and Cybernetics, we present such a viewpoint which hinges on Human Responsibility and means of living up to it.\n\nOffice Computer Software: A Comprehensive Review of Software Programs.\n\nERIC Educational Resources Information Center\n\nSecretary, 1992\n\n1992-01-01\n\nDescribes types of software including system software, application software, spreadsheets, accounting software, graphics packages, desktop publishing software, database, desktop and personal information management software, project and records management software, groupware, and shareware. (JOW)\n\nA design methodology for portable software on parallel computers\n\nNASA Technical Reports Server (NTRS)\n\nNicol, David M.; Miller, Keith W.; Chrisman, Dan A.\n\n1993-01-01\n\nThis final report for research that was supported by grant number NAG-1-995 documents our progress in addressing two difficulties in parallel programming. The first difficulty is developing software that will execute quickly on a parallel computer. The second difficulty is transporting software between dissimilar parallel computers. In general, we expect that more hardware-specific information will be included in software designs for parallel computers than in designs for sequential computers. This inclusion is an instance of portability being sacrificed for high performance. New parallel computers are being introduced frequently. Trying to keep one's software on the current high performance hardware, a software developer almost continually faces yet another expensive software transportation. The problem of the proposed research is to create a design methodology that helps designers to more precisely control both portability and hardware-specific programming details. The proposed research emphasizes programming for scientific applications. We completed our study of the parallelizability of a subsystem of the NASA Earth Radiation Budget Experiment (ERBE) data processing system. This work is summarized in section two. A more detailed description is provided in Appendix A ('Programming Practices to Support Eventual Parallelism'). Mr. Chrisman, a graduate student, wrote and successfully defended a Ph.D. dissertation proposal which describes our research associated with the issues of software portability and high performance. The list of research tasks are specified in the proposal. The proposal 'A Design Methodology for Portable Software on Parallel Computers' is summarized in section three and is provided in its entirety in Appendix B. We are currently studying a proposed subsystem of the NASA Clouds and the Earth's Radiant Energy System (CERES) data processing system. This software is the proof-of-concept for the Ph.D. dissertation. We have implemented and measured\n\nAdaptable Computing Environment/Self-Assembling Software\n\nDOE Office of Scientific and Technical Information (OSTI.GOV)\n\nOsbourn, Gordon C.; Bouchard, Ann M.; Bartholomew, John W.\n\nComplex software applications are difficult to learn to use and to remember how to use. Further, the user has no control over the functionality available in a given application. The software we use can be created and modified only by a relatively small group of elite, highly skilled artisans known as programmers. \"Normal users\" are powerless to create and modify software themselves, because the tools for software development, designed by and for programmers, are a barrier to entry. This software, when completed, will be a user-adaptable computing environment in which the user is really in control of his/her own software,moreÂ Â» able to adapt the system, make new parts of the system interactive, and even modify the behavior of the system itself. Som key features of the basic environment that have been implemented are (a) books in bookcases, where all data is stored, (b) context-sensitive compass menus (compass, because the buttons are located in compass directions relative to the mouose cursor position), (c) importing tabular data and displaying it in a book, (d) light-weight table querying/sorting, (e) a Reach&Get capability (sort of a \"smart\" copy/paste that prevents the user from copying invalid data), and (f) a LogBook that automatically logs all user actions that change data or the system itself. To bootstrap toward full end-user adaptability, we implemented a set of development tools. With the development tools, compass menus can be made and customized.Â«Â less\n\nA Review of the Suitability of Available Computer Aided Software Engineering (CASE) Tools for the Small Software Development Environment\n\nDTIC Science & Technology\n\n1989-07-11\n\nLITERATURE CITED [Boeh73] Boehm, Barry W., \"Software and its Impact: A Quantitative Assessment,\" Datamation, 19, 5, (May 1973), pp 48-59. [Boeh76...Boehm, Barry W., \"Software Engineering,\" IEEE Transactions on Computers, C-25, 12, (December 1976), pp 1226-1241. [Boeh81a] Boehm, Barry W., Software...Engineering Economics, Prentice-Hall, Inc., Englewood Cliffs, NJ, (1981). [Boeh8lb] Boehm, Barry W., \"An Experiment in Small Scale Application Software\n\nSoftware development for safety-critical medical applications\n\nNASA Technical Reports Server (NTRS)\n\nKnight, John C.\n\n1992-01-01\n\nThere are many computer-based medical applications in which safety and not reliability is the overriding concern. Reduced, altered, or no functionality of such systems is acceptable as long as no harm is done. A precise, formal definition of what software safety means is essential, however, before any attempt can be made to achieve it. Without this definition, it is not possible to determine whether a specific software entity is safe. A set of definitions pertaining to software safety will be presented and a case study involving an experimental medical device will be described. Some new techniques aimed at improving software safety will also be discussed.\n\nA Software Development Platform for Wearable Medical Applications.\n\nPubMed\n\nZhang, Ruikai; Lin, Wei\n\n2015-10-01\n\nWearable medical devices have become a leading trend in healthcare industry. Microcontrollers are computers on a chip with sufficient processing power and preferred embedded computing units in those devices. We have developed a software platform specifically for the design of the wearable medical applications with a small code footprint on the microcontrollers. It is supported by the open source real time operating system FreeRTOS and supplemented with a set of standard APIs for the architectural specific hardware interfaces on the microcontrollers for data acquisition and wireless communication. We modified the tick counter routine in FreeRTOS to include a real time soft clock. When combined with the multitasking features in the FreeRTOS, the platform offers the quick development of wearable applications and easy porting of the application code to different microprocessors. Test results have demonstrated that the application software developed using this platform are highly efficient in CPU usage while maintaining a small code foot print to accommodate the limited memory space in microcontrollers.\n\nControls Over Copyrighted Computer Software\n\nDTIC Science & Technology\n\n1993-02-19\n\nThe Army Audit Agency issued five installation reports as a result of one multilocation audit . The audit found that 41 percent of the computers...ARMY AUDIT AGENCY REPORTS ON COMPUTER SOFTWARE MANAGEMENT The U.S. Army Audit Agency conducted three multilocation audits from March 1988 through...December 1990, covering the acquisition, use, control, and accountability of commercial software. One multilocation audit resulted in five\n\nComputer and control applications in a vegetable processing plant\n\nUSDA-ARS?s Scientific Manuscript database\n\nThere are many advantages to the use of computers and control in food industry. Software in the food industry takes 2 forms - general purpose commercial computer software and software for specialized applications, such as drying and thermal processing of foods. Many applied simulation models for d...\n\nAffordable Emerging Computer Hardware for Neuromorphic Computing Applications\n\nDTIC Science & Technology\n\n2011-09-01\n\nDATES COVERED (From - To) 4 . TITLE AND SUBTITLE AFFORDABLE EMERGING COMPUTER HARDWARE FOR NEUROMORPHIC COMPUTING APPLICATIONS 5a. CONTRACT NUMBER...speedup over software [3, 4 ]. 3 Table 1 shows a comparison of the computing performance, communication performance, power consumption...time is probably 5 frames per second, corresponding to 5 saccades. III. RESULTS AND DISCUSSION The use of IBM Cell-BE technology (Sony PlayStation\n\nThe MUSOS (MUsic SOftware System) Toolkit: A computer-based, open source application for testing memory for melodies.\n\nPubMed\n\nRainsford, M; Palmer, M A; Paine, G\n\n2018-04-01\n\nDespite numerous innovative studies, rates of replication in the field of music psychology are extremely low (Frieler et al., 2013). Two key methodological challenges affecting researchers wishing to administer and reproduce studies in music cognition are the difficulty of measuring musical responses, particularly when conducting free-recall studies, and access to a reliable set of novel stimuli unrestricted by copyright or licensing issues. In this article, we propose a solution for these challenges in computer-based administration. We present a computer-based application for testing memory for melodies. Created using the software Max/MSP (Cycling '74, 2014a), the MUSOS (Music Software System) Toolkit uses a simple modular framework configurable for testing common paradigms such as recall, old-new recognition, and stem completion. The program is accompanied by a stimulus set of 156 novel, copyright-free melodies, in audio and Max/MSP file formats. Two pilot tests were conducted to establish the properties of the accompanying stimulus set that are relevant to music cognition and general memory research. By using this software, a researcher without specialist musical training may administer and accurately measure responses from common paradigms used in the study of memory for music.\n\nComputer Software & Intellectual Property. Background Paper.\n\nERIC Educational Resources Information Center\n\nCongress of the U.S., Washington, DC. Office of Technology Assessment.\n\nThis background paper reviews copyright, patent, and trade secret protections as these issues are related to computer software. Topics discussed include current issues regarding legal protection for computer software including the necessity for defining intellectual property, determining what should or should not be protected, commerical piracy,â¦\n\nKnowledge and utilization of computer-software for statistics among Nigerian dentists.\n\nPubMed\n\nChukwuneke, F N; Anyanechi, C E; Obiakor, A O; Amobi, O; Onyejiaka, N; Alamba, I\n\n2013-01-01\n\nThe use of computer soft ware for generation of statistic analysis has transformed health information and data to simplest form in the areas of access, storage, retrieval and analysis in the field of research. This survey therefore was carried out to assess the level of knowledge and utilization of computer software for statistical analysis among dental researchers in eastern Nigeria. Questionnaires on the use of computer software for statistical analysis were randomly distributed to 65 practicing dental surgeons of above 5 years experience in the tertiary academic hospitals in eastern Nigeria. The focus was on: years of clinical experience; research work experience; knowledge and application of computer generated software for data processing and stastistical analysis. Sixty-two (62/65; 95.4%) of these questionnaires were returned anonymously, which were used in our data analysis. Twenty-nine (29/62; 46.8%) respondents fall within those with 5-10 years of clinical experience out of which none has completed the specialist training programme. Practitioners with above 10 years clinical experiences were 33 (33/62; 53.2%) out of which 15 (15/33; 45.5%) are specialists representing 24.2% (15/62) of the total number of respondents. All the 15 specialists are actively involved in research activities and only five (5/15; 33.3%) can utilize software statistical analysis unaided. This study has i dentified poor utilization of computer software for statistic analysis among dental researchers in eastern Nigeria. This is strongly associated with lack of exposure on the use of these software early enough especially during the undergraduate training. This call for introduction of computer training programme in dental curriculum to enable practitioners develops the attitude of using computer software for their research.\n\nComputer systems and software engineering\n\nNASA Technical Reports Server (NTRS)\n\nMckay, Charles W.\n\n1988-01-01\n\nThe High Technologies Laboratory (HTL) was established in the fall of 1982 at the University of Houston Clear Lake. Research conducted at the High Tech Lab is focused upon computer systems and software engineering. There is a strong emphasis on the interrelationship of these areas of technology and the United States' space program. In Jan. of 1987, NASA Headquarters announced the formation of its first research center dedicated to software engineering. Operated by the High Tech Lab, the Software Engineering Research Center (SERC) was formed at the University of Houston Clear Lake. The High Tech Lab/Software Engineering Research Center promotes cooperative research among government, industry, and academia to advance the edge-of-knowledge and the state-of-the-practice in key topics of computer systems and software engineering which are critical to NASA. The center also recommends appropriate actions, guidelines, standards, and policies to NASA in matters pertinent to the center's research. Results of the research conducted at the High Tech Lab/Software Engineering Research Center have given direction to many decisions made by NASA concerning the Space Station Program.\n\nService-oriented Software Defined Optical Networks for Cloud Computing\n\nNASA Astrophysics Data System (ADS)\n\nLiu, Yuze; Li, Hui; Ji, Yuefeng\n\n2017-10-01\n\nWith the development of big data and cloud computing technology, the traditional software-defined network is facing new challenges (e.g., ubiquitous accessibility, higher bandwidth, more flexible management and greater security). This paper proposes a new service-oriented software defined optical network architecture, including a resource layer, a service abstract layer, a control layer and an application layer. We then dwell on the corresponding service providing method. Different service ID is used to identify the service a device can offer. Finally, we experimentally evaluate that proposed service providing method can be applied to transmit different services based on the service ID in the service-oriented software defined optical network.\n\nAnalysis of Software Systems for Specialized Computers,\n\nDTIC Science & Technology\n\ncomputer) with given computer hardware and software . The object of study is the software system of a computer, designed for solving a fixed complex of...purpose of the analysis is to find parameters that characterize the system and its elements during operation, i.e., when servicing the given requirement flow. (Author)\n\nAnalytical exploration of the thermodynamic potentials by using symbolic computation software\n\nNASA Astrophysics Data System (ADS)\n\nHantsaridou, Anastasia P.; Polatoglou, Hariton M.\n\n2005-09-01\n\nThermodynamics is a very general theory, based on fundamental symmetries. It generalizes classical mechanics and incorporates theoretical concepts such as field and field equations. Although all these ingredients are of the highest importance for a scientist, they are not given the attention they perhaps deserve in most undergraduate courses. Nowadays, powerful computers in conjunction with equally powerful software can ease the exploration of the crucial ideas of thermodynamics. The purpose of the present work is to show how the utilization of symbolic computation software can lead to a complementary understanding of thermodynamics. The method was applied to first and second year physics students in the Aristotle University of Thessaloniki (Greece) during the 2002-2003 academic year. The results indicate that symbolic computation software is appropriate not only for enhancing the teaching of the fundamental principles in thermodynamics and their applications, but also for increasing students' motivation for learning.\n\nA computationally efficient software application for calculating vibration from underground railways\n\nNASA Astrophysics Data System (ADS)\n\nHussein, M. F. M.; Hunt, H. E. M.\n\n2009-08-01\n\nThe PiP model is a software application with a user-friendly interface for calculating vibration from underground railways. This paper reports about the software with a focus on its latest version and the plans for future developments. The software calculates the Power Spectral Density of vibration due to a moving train on floating-slab track with track irregularity described by typical values of spectra for tracks with good, average and bad conditions. The latest version accounts for a tunnel embedded in a half space by employing a toolbox developed at K.U. Leuven which calculates Green's functions for a multi-layered half-space.\n\n77 FR 50726 - Software Requirement Specifications for Digital Computer Software and Complex Electronics Used in...\n\nFederal Register 2010, 2011, 2012, 2013, 2014\n\n2012-08-22\n\n... Computer Software and Complex Electronics Used in Safety Systems of Nuclear Power Plants AGENCY: Nuclear...-1209, ``Software Requirement Specifications for Digital Computer Software and Complex Electronics used... Electronics Engineers (ANSI/IEEE) Standard 830-1998, ``IEEE Recommended Practice for Software Requirements...\n\n48 CFR 27.405-3 - Commercial computer software.\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... software. 27.405-3 Section 27.405-3 Federal Acquisition Regulations System FEDERAL ACQUISITION REGULATION... Commercial computer software. (a) When contracting other than from GSA's Multiple Award Schedule contracts for the acquisition of commercial computer software, no specific contract clause prescribed in this...\n\n48 CFR 27.405-3 - Commercial computer software.\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... software. 27.405-3 Section 27.405-3 Federal Acquisition Regulations System FEDERAL ACQUISITION REGULATION... Commercial computer software. (a) When contracting other than from GSA's Multiple Award Schedule contracts for the acquisition of commercial computer software, no specific contract clause prescribed in this...\n\n48 CFR 27.405-3 - Commercial computer software.\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... software. 27.405-3 Section 27.405-3 Federal Acquisition Regulations System FEDERAL ACQUISITION REGULATION... Commercial computer software. (a) When contracting other than from GSA's Multiple Award Schedule contracts for the acquisition of commercial computer software, no specific contract clause prescribed in this...\n\n48 CFR 27.405-3 - Commercial computer software.\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... software. 27.405-3 Section 27.405-3 Federal Acquisition Regulations System FEDERAL ACQUISITION REGULATION... Commercial computer software. (a) When contracting other than from GSA's Multiple Award Schedule contracts for the acquisition of commercial computer software, no specific contract clause prescribed in this...\n\n48 CFR 27.405-3 - Commercial computer software.\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... software. 27.405-3 Section 27.405-3 Federal Acquisition Regulations System FEDERAL ACQUISITION REGULATION... Commercial computer software. (a) When contracting other than from GSA's Multiple Award Schedule contracts for the acquisition of commercial computer software, no specific contract clause prescribed in this...\n\nDental application of novel finite element analysis software for three-dimensional finite element modeling of a dentulous mandible from its computed tomography images.\n\nPubMed\n\nNakamura, Keiko; Tajima, Kiyoshi; Chen, Ker-Kong; Nagamatsu, Yuki; Kakigawa, Hiroshi; Masumi, Shin-ich\n\n2013-12-01\n\nThis study focused on the application of novel finite-element analysis software for constructing a finite-element model from the computed tomography data of a human dentulous mandible. The finite-element model is necessary for evaluating the mechanical response of the alveolar part of the mandible, resulting from occlusal force applied to the teeth during biting. Commercially available patient-specific general computed tomography-based finite-element analysis software was solely applied to the finite-element analysis for the extraction of computed tomography data. The mandibular bone with teeth was extracted from the original images. Both the enamel and the dentin were extracted after image processing, and the periodontal ligament was created from the segmented dentin. The constructed finite-element model was reasonably accurate using a total of 234,644 nodes and 1,268,784 tetrahedral and 40,665 shell elements. The elastic moduli of the heterogeneous mandibular bone were determined from the bone density data of the computed tomography images. The results suggested that the software applied in this study is both useful and powerful for creating a more accurate three-dimensional finite-element model of a dentulous mandible from the computed tomography data without the need for any other software.\n\nFreely available compound data sets and software tools for chemoinformatics and computational medicinal chemistry applications\n\nPubMed Central\n\nBajorath, Jurgen\n\n2012-01-01\n\nWe have generated a number ofÂ compound data sets and programsÂ for different types of applications in pharmaceutical research. These data sets and programs were originally designed for our research projects and are made publicly available. Without consulting original literature sources, it is difficult to understand specific features of data sets and software tools, basic ideas underlying their design, and applicability domains. Currently, 30 different entries are available for download from our website. In this data article, we provide an overview of the data and tools we make available and designate the areas of research for which they should be useful. For selected data sets and methods/programs, detailed descriptions are given. This article should help interested readers to select data and tools for specific computational investigations. PMID:24358818\n\nSoftware designs of image processing tasks with incremental refinement of computation.\n\nPubMed\n\nAnastasia, Davide; Andreopoulos, Yiannis\n\n2010-08-01\n\nSoftware realizations of computationally-demanding image processing tasks (e.g., image transforms and convolution) do not currently provide graceful degradation when their clock-cycles budgets are reduced, e.g., when delay deadlines are imposed in a multitasking environment to meet throughput requirements. This is an important obstacle in the quest for full utilization of modern programmable platforms' capabilities since worst-case considerations must be in place for reasonable quality of results. In this paper, we propose (and make available online) platform-independent software designs performing bitplane-based computation combined with an incremental packing framework in order to realize block transforms, 2-D convolution and frame-by-frame block matching. The proposed framework realizes incremental computation: progressive processing of input-source increments improves the output quality monotonically. Comparisons with the equivalent nonincremental software realization of each algorithm reveal that, for the same precision of the result, the proposed approach can lead to comparable or faster execution, while it can be arbitrarily terminated and provide the result up to the computed precision. Application examples with region-of-interest based incremental computation, task scheduling per frame, and energy-distortion scalability verify that our proposal provides significant performance scalability with graceful degradation.\n\nComputer Software Configuration Item-Specific Flight Software Image Transfer Script Generator\n\nNASA Technical Reports Server (NTRS)\n\nBolen, Kenny; Greenlaw, Ronald\n\n2010-01-01\n\nA K-shell UNIX script enables the International Space Station (ISS) Flight Control Team (FCT) operators in NASA s Mission Control Center (MCC) in Houston to transfer an entire or partial computer software configuration item (CSCI) from a flight software compact disk (CD) to the onboard Portable Computer System (PCS). The tool is designed to read the content stored on a flight software CD and generate individual CSCI transfer scripts that are capable of transferring the flight software content in a given subdirectory on the CD to the scratch directory on the PCS. The flight control team can then transfer the flight software from the PCS scratch directory to the Electronically Erasable Programmable Read Only Memory (EEPROM) of an ISS Multiplexer/ Demultiplexer (MDM) via the Indirect File Transfer capability. The individual CSCI scripts and the CSCI Specific Flight Software Image Transfer Script Generator (CFITSG), when executed a second time, will remove all components from their original execution. The tool will identify errors in the transfer process and create logs of the transferred software for the purposes of configuration management.\n\nComputer-assisted qualitative data analysis software.\n\nPubMed\n\nCope, Diane G\n\n2014-05-01\n\nAdvances in technology have provided new approaches for data collection methods and analysis for researchers. Data collection is no longer limited to paper-and-pencil format, and numerous methods are now available through Internet and electronic resources. With these techniques, researchers are not burdened with entering data manually and data analysis is facilitated by software programs. Quantitative research is supported by the use of computer software and provides ease in the management of large data sets and rapid analysis of numeric statistical methods. New technologies are emerging to support qualitative research with the availability of computer-assisted qualitative data analysis software (CAQDAS).CAQDAS will be presented with a discussion of advantages, limitations, controversial issues, and recommendations for this type of software use.\n\n48 CFR 212.7003 - Technical data and computer software.\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... computer software. 212.7003 Section 212.7003 Federal Acquisition Regulations System DEFENSE ACQUISITION... data and computer software. For purposes of establishing delivery requirements and license rights for technical data under 227.7102 and for computer software under 227.7202, there shall be a rebuttable...\n\n48 CFR 212.7003 - Technical data and computer software.\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... computer software. 212.7003 Section 212.7003 Federal Acquisition Regulations System DEFENSE ACQUISITION... data and computer software. For purposes of establishing delivery requirements and license rights for technical data under 227.7102 and for computer software under 227.7202, there shall be a rebuttable...\n\n48 CFR 212.7003 - Technical data and computer software.\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... computer software. 212.7003 Section 212.7003 Federal Acquisition Regulations System DEFENSE ACQUISITION... data and computer software. For purposes of establishing delivery requirements and license rights for technical data under 227.7102 and for computer software under 227.7202, there shall be a rebuttable...\n\n48 CFR 212.7003 - Technical data and computer software.\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... computer software. 212.7003 Section 212.7003 Federal Acquisition Regulations System DEFENSE ACQUISITION... data and computer software. For purposes of establishing delivery requirements and license rights for technical data under 227.7102 and for computer software under 227.7202, there shall be a rebuttable...\n\n48 CFR 212.7003 - Technical data and computer software.\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... computer software. 212.7003 Section 212.7003 Federal Acquisition Regulations System DEFENSE ACQUISITION... data and computer software. For purposes of establishing delivery requirements and license rights for technical data under 227.7102 and for computer software under 227.7202, there shall be a rebuttable...\n\nComputer Software for Intelligent Systems.\n\nERIC Educational Resources Information Center\n\nLenat, Douglas B.\n\n1984-01-01\n\nDiscusses the development and nature of computer software for intelligent systems, indicating that the key to intelligent problem-solving lies in reducing the random search for solutions. Formal reasoning methods, expert systems, and sources of power in problem-solving are among the areas considered. Specific examples of such software areâ¦\n\nCurrent trends in hardware and software for brain-computer interfaces (BCIs)\n\nNASA Astrophysics Data System (ADS)\n\nBrunner, P.; Bianchi, L.; Guger, C.; Cincotti, F.; Schalk, G.\n\n2011-04-01\n\nA brain-computer interface (BCI) provides a non-muscular communication channel to people with and without disabilities. BCI devices consist of hardware and software. BCI hardware records signals from the brain, either invasively or non-invasively, using a series of device components. BCI software then translates these signals into device output commands and provides feedback. One may categorize different types of BCI applications into the following four categories: basic research, clinical/translational research, consumer products, and emerging applications. These four categories use BCI hardware and software, but have different sets of requirements. For example, while basic research needs to explore a wide range of system configurations, and thus requires a wide range of hardware and software capabilities, applications in the other three categories may be designed for relatively narrow purposes and thus may only need a very limited subset of capabilities. This paper summarizes technical aspects for each of these four categories of BCI applications. The results indicate that BCI technology is in transition from isolated demonstrations to systematic research and commercial development. This process requires several multidisciplinary efforts, including the development of better integrated and more robust BCI hardware and software, the definition of standardized interfaces, and the development of certification, dissemination and reimbursement procedures.\n\nSoftware Accelerates Computing Time for Complex Math\n\nNASA Technical Reports Server (NTRS)\n\n2014-01-01\n\nAmes Research Center awarded Newark, Delaware-based EM Photonics Inc. SBIR funding to utilize graphic processing unit (GPU) technology- traditionally used for computer video games-to develop high-computing software called CULA. The software gives users the ability to run complex algorithms on personal computers with greater speed. As a result of the NASA collaboration, the number of employees at the company has increased 10 percent.\n\nTransfer of Learning: The Effects of Different Instruction Methods on Software Application Learning\n\nERIC Educational Resources Information Center\n\nLarson, Mark E.\n\n2010-01-01\n\nHuman Resource Departments (HRD), especially instructors, are challenged to keep pace with rapidly changing computer software applications and technology. The problem under investigation revealed after instruction of a software application if a particular method of instruction was a predictor of transfer of learning, when other risk factors wereâ¦\n\nDevelopment and application of a complex numerical model and software for the computation of dose conversion factors for radon progenies.\n\nPubMed\n\nFarkas, ÃrpÃ¡d; BalÃ¡shÃ¡zy, Imre\n\n2015-04-01\n\nA more exact determination of dose conversion factors associated with radon progeny inhalation was possible due to the advancements in epidemiological health risk estimates in the last years. The enhancement of computational power and the development of numerical techniques allow computing dose conversion factors with increasing reliability. The objective of this study was to develop an integrated model and software based on a self-developed airway deposition code, an own bronchial dosimetry model and the computational methods accepted by International Commission on Radiological Protection (ICRP) to calculate dose conversion coefficients for different exposure conditions. The model was tested by its application for exposure and breathing conditions characteristic of mines and homes. The dose conversion factors were 8 and 16 mSv WLM(-1) for homes and mines when applying a stochastic deposition model combined with the ICRP dosimetry model (named PM-A model), and 9 and 17 mSv WLM(-1) when applying the same deposition model combined with authors' bronchial dosimetry model and the ICRP bronchiolar and alveolar-interstitial dosimetry model (called PM-B model). User friendly software for the computation of dose conversion factors has also been developed. The software allows one to compute conversion factors for a large range of exposure and breathing parameters and to perform sensitivity analyses. Â© The Author 2014. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com.\n\nCartographic applications software\n\nUSGS Publications Warehouse\n\n,\n\n1992-01-01\n\nThe Office of the Assistant Division Chief for Research, National Mapping Division, develops computer software for the solution of geometronic problems in the fields of surveying, geodesy, remote sensing, and photogrammetry. Software that has been developed using public funds is available on request for a nominal charge to recover the cost of duplication.\n\nAsynchronous Replica Exchange Software for Grid and Heterogeneous Computing.\n\nPubMed\n\nGallicchio, Emilio; Xia, Junchao; Flynn, William F; Zhang, Baofeng; Samlalsingh, Sade; Mentes, Ahmet; Levy, Ronald M\n\n2015-11-01\n\nParallel replica exchange sampling is an extended ensemble technique often used to accelerate the exploration of the conformational ensemble of atomistic molecular simulations of chemical systems. Inter-process communication and coordination requirements have historically discouraged the deployment of replica exchange on distributed and heterogeneous resources. Here we describe the architecture of a software (named ASyncRE) for performing asynchronous replica exchange molecular simulations on volunteered computing grids and heterogeneous high performance clusters. The asynchronous replica exchange algorithm on which the software is based avoids centralized synchronization steps and the need for direct communication between remote processes. It allows molecular dynamics threads to progress at different rates and enables parameter exchanges among arbitrary sets of replicas independently from other replicas. ASyncRE is written in Python following a modular design conducive to extensions to various replica exchange schemes and molecular dynamics engines. Applications of the software for the modeling of association equilibria of supramolecular and macromolecular complexes on BOINC campus computational grids and on the CPU/MIC heterogeneous hardware of the XSEDE Stampede supercomputer are illustrated. They show the ability of ASyncRE to utilize large grids of desktop computers running the Windows, MacOS, and/or Linux operating systems as well as collections of high performance heterogeneous hardware devices.\n\nFeatures of commercial computer software systems for medical examiners and coroners.\n\nPubMed\n\nHanzlick, R L; Parrish, R G; Ing, R\n\n1993-12-01\n\nThere are many ways of automating medical examiner and coroner offices, one of which is to purchase commercial software products specifically designed for death investigation. We surveyed four companies that offer such products and requested information regarding each company and its hardware, software, operating systems, peripheral devices, applications, networking options, programming language, querying capability, coding systems, prices, customer support, and number and size of offices using the product. Although the four products (CME2, ForenCIS, InQuest, and Medical Examiner's Software System) are similar in many respects and each can be installed on personal computers, there are differences among the products with regard to cost, applications, and the other features. Death investigators interested in office automation should explore these products to determine the usefulness of each in comparison with the others and in comparison with general-purpose, off-the-shelf databases and software adaptable to death investigation needs.\n\nSoftware and resources for computational medicinal chemistry\n\nPubMed Central\n\nLiao, Chenzhong; Sitzmann, Markus; Pugliese, Angelo; Nicklaus, Marc C\n\n2011-01-01\n\nComputer-aided drug design plays a vital role in drug discovery and development and has become an indispensable tool in the pharmaceutical industry. Computational medicinal chemists can take advantage of all kinds of software and resources in the computer-aided drug design field for the purposes of discovering and optimizing biologically active compounds. This article reviews software and other resources related to computer-aided drug design approaches, putting particular emphasis on structure-based drug design, ligand-based drug design, chemical databases and chemoinformatics tools. PMID:21707404\n\nComputer Center: Software Review.\n\nERIC Educational Resources Information Center\n\nDuhrkopf, Richard, Ed.; Belshe, John F., Ed.\n\n1988-01-01\n\nReviews a software package, \"Mitosis-Meiosis,\" available for Apple II or IBM computers with colorgraphics capabilities. Describes the documentation, presentation and flexibility of the program. Rates the program based on graphics and usability in a biology classroom. (CW)\n\nCloud Computing for the Grid: GridControl: A Software Platform to Support the Smart Grid\n\nDOE Office of Scientific and Technical Information (OSTI.GOV)\n\nNone\n\nGENI Project: Cornell University is creating a new software platform for grid operators called GridControl that will utilize cloud computing to more efficiently control the grid. In a cloud computing system, there are minimal hardware and software demands on users. The user can tap into a network of computers that is housed elsewhere (the cloud) and the network runs computer applications for the user. The user only needs interface software to access all of the cloudâs data resources, which can be as simple as a web browser. Cloud computing can reduce costs, facilitate innovation through sharing, empower users, and improvemoreÂ Â» the overall reliability of a dispersed system. Cornellâs GridControl will focus on 4 elements: delivering the state of the grid to users quickly and reliably; building networked, scalable grid-control software; tailoring services to emerging smart grid uses; and simulating smart grid behavior under various conditions.Â«Â less\n\nComputer-Aided Software Engineering - An approach to real-time software development\n\nNASA Technical Reports Server (NTRS)\n\nWalker, Carrie K.; Turkovich, John J.\n\n1989-01-01\n\nA new software engineering discipline is Computer-Aided Software Engineering (CASE), a technology aimed at automating the software development process. This paper explores the development of CASE technology, particularly in the area of real-time/scientific/engineering software, and a history of CASE is given. The proposed software development environment for the Advanced Launch System (ALS CASE) is described as an example of an advanced software development system for real-time/scientific/engineering (RT/SE) software. The Automated Programming Subsystem of ALS CASE automatically generates executable code and corresponding documentation from a suitably formatted specification of the software requirements. Software requirements are interactively specified in the form of engineering block diagrams. Several demonstrations of the Automated Programming Subsystem are discussed.\n\nLaboratory and software applications for clinical trials: the global laboratory environment.\n\nPubMed\n\nBriscoe, Chad\n\n2011-11-01\n\nThe Applied Pharmaceutical Software Meeting is held annually. It is sponsored by The Boston Society, a not-for-profit organization that coordinates a series of meetings within the global pharmaceutical industry. The meeting generally focuses on laboratory applications, but in recent years has expanded to include some software applications for clinical trials. The 2011 meeting emphasized the global laboratory environment. Global clinical trials generate massive amounts of data in many locations that must be centralized and processed for efficient analysis. Thus, the meeting had a strong focus on establishing networks and systems for dealing with the computer infrastructure to support such environments. In addition to the globally installed laboratory information management system, electronic laboratory notebook and other traditional laboratory applications, cloud computing is quickly becoming the answer to provide efficient, inexpensive options for managing the large volumes of data and computing power, and thus it served as a central theme for the meeting.\n\nProtecting software agents from malicious hosts using quantum computing\n\nNASA Astrophysics Data System (ADS)\n\nReisner, John; Donkor, Eric\n\n2000-07-01\n\nWe evaluate how quantum computing can be applied to security problems for software agents. Agent-based computing, which merges technological advances in artificial intelligence and mobile computing, is a rapidly growing domain, especially in applications such as electronic commerce, network management, information retrieval, and mission planning. System security is one of the more eminent research areas in agent-based computing, and the specific problem of protecting a mobile agent from a potentially hostile host is one of the most difficult of these challenges. In this work, we describe our agent model, and discuss the capabilities and limitations of classical solutions to the malicious host problem. Quantum computing may be extremely helpful in addressing the limitations of classical solutions to this problem. This paper highlights some of the areas where quantum computing could be applied to agent security.\n\n48 CFR 52.227-19 - Commercial Computer Software License.\n\nCode of Federal Regulations, 2014 CFR\n\n2014-10-01\n\n... Software License. 52.227-19 Section 52.227-19 Federal Acquisition Regulations System FEDERAL ACQUISITION... Clauses 52.227-19 Commercial Computer Software License. As prescribed in 27.409(g), insert the following clause: Commercial Computer Software License (DEC 2007) (a) Notwithstanding any contrary provisions...\n\n48 CFR 52.227-19 - Commercial Computer Software License.\n\nCode of Federal Regulations, 2011 CFR\n\n2011-10-01\n\n... Software License. 52.227-19 Section 52.227-19 Federal Acquisition Regulations System FEDERAL ACQUISITION... Clauses 52.227-19 Commercial Computer Software License. As prescribed in 27.409(g), insert the following clause: Commercial Computer Software License (DEC 2007) (a) Notwithstanding any contrary provisions...\n\n48 CFR 52.227-19 - Commercial Computer Software License.\n\nCode of Federal Regulations, 2013 CFR\n\n2013-10-01\n\n... Software License. 52.227-19 Section 52.227-19 Federal Acquisition Regulations System FEDERAL ACQUISITION... Clauses 52.227-19 Commercial Computer Software License. As prescribed in 27.409(g), insert the following clause: Commercial Computer Software License (DEC 2007) (a) Notwithstanding any contrary provisions...\n\n48 CFR 52.227-19 - Commercial Computer Software License.\n\nCode of Federal Regulations, 2012 CFR\n\n2012-10-01\n\n... Software License. 52.227-19 Section 52.227-19 Federal Acquisition Regulations System FEDERAL ACQUISITION... Clauses 52.227-19 Commercial Computer Software License. As prescribed in 27.409(g), insert the following clause: Commercial Computer Software License (DEC 2007) (a) Notwithstanding any contrary provisions...\n\n48 CFR 52.227-19 - Commercial Computer Software License.\n\nCode of Federal Regulations, 2010 CFR\n\n2010-10-01\n\n... Software License. 52.227-19 Section 52.227-19 Federal Acquisition Regulations System FEDERAL ACQUISITION... Clauses 52.227-19 Commercial Computer Software License. As prescribed in 27.409(g), insert the following clause: Commercial Computer Software License (DEC 2007) (a) Notwithstanding any contrary provisions...\n\nSoftware Tools on the Peregrine System | High-Performance Computing | NREL\n\nScience.gov Websites\n\nDebugger or performance analysis Tool for understanding the behavior of MPI applications. Intel VTune environment for statistical computing and graphics. VirtualGL/TurboVNC Visualization and analytics Remote Tools on the Peregrine System Software Tools on the Peregrine System NREL has a variety of\n\nComputer software documentation\n\nNASA Technical Reports Server (NTRS)\n\nComella, P. A.\n\n1973-01-01\n\nA tutorial in the documentation of computer software is presented. It presents a methodology for achieving an adequate level of documentation as a natural outgrowth of the total programming effort commencing with the initial problem statement and definition and terminating with the final verification of code. It discusses the content of adequate documentation, the necessity for such documentation and the problems impeding achievement of adequate documentation.\n\nFault-tolerant software - Experiment with the sift operating system. [Software Implemented Fault Tolerance computer\n\nNASA Technica"
    }
}