{
    "id": "dbpedia_7708_3",
    "rank": 63,
    "data": {
        "url": "https://web.math.princeton.edu/math_alive/Crypto/Lab2/ModArithm.html",
        "read_more_link": "",
        "language": "en",
        "title": "Math Alive Crypto 2",
        "top_image": "",
        "meta_img": "",
        "images": [],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "ToC | Next Labs: Cryptography. Part 2. Math Alive\n\nModular Arithmetic\n\nRSA cryptography (named for its inventors Rivest, Shamir, and Adelman) exploits properties and interrelations of humongous numbers, constructed as large powers of huge numbers. Through a neat mathematical trick called modular arithmetic, the computer avoids working with the humongous numbers themselves. Let's first learn about modular arithmetic before tackling RSA itself.\n\nThe number X (mod Y) is the remainder when X is divided by Y. (Remember X (mod Y) is pronounced X modulo Y.)\n\nFor example: 7 modulo 3 is 1 because: 7 = 2 * 3 + 1\n\nThat is, when you divide 7 by 3, you get a remander of 1.\n\nThe \"modulo Y\" terminology can also be used in the following way: Z = X (mod Y), meaning that Z and X have the same remainder when divided by Y.\n\nFor example: 7 = 25 (mod 3) because: 7 = 2 * 3 + 1\n\n25 = 8 * 3 + 1\n\nToC | Next Last Modified: August 2008"
    }
}