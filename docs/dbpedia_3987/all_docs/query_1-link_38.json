{
    "id": "dbpedia_3987_1",
    "rank": 38,
    "data": {
        "url": "https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow",
        "read_more_link": "",
        "language": "en",
        "title": "Atlassian Git Tutorial",
        "top_image": "https://www.atlassian.com/favicon-32x32.png",
        "meta_img": "https://www.atlassian.com/favicon-32x32.png",
        "images": [
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/AtlassianHeaderLogo.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Confluence.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Service-Management.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Trello.svg",
            "https://wac-cdn-bfldr.atlassian.com/K3MHR9G8/at/k5xhw8hpqxghzb55nfktt4/logo-light_Rovo_mark_brand_RGB.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Product-Discovery.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Compass.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Guard.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Loom.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Bitbucket.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Compass.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Confluence.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Product-Discovery.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Service-Management.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Guard.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Confluence.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Trello.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Loom.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira-Align.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Jira.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Confluence.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/prod-icon-Loom.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-software.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-software-hover.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-marketing.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-marketing-hover.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-it.svg",
            "https://wac-cdn.atlassian.com/misc-assets/adg4-nav/nav-it-hover.svg",
            "https://wac-cdn.atlassian.com/dam/jcr:7816f6da-4c53-46c3-8df3-c125249a4f87/collaborating-workflows-cropped.png?cdnVersion=2143",
            "https://wac-cdn.atlassian.com/dam/jcr:03116c1f-27e5-4a82-9b9b-806786578fb2/logos-bitbucket-icon-gradient-blue-121x109@2x.png?cdnVersion=2143",
            "https://wac-cdn.atlassian.com/dam/jcr:a13c18d6-94f3-4fc4-84fb-2b8f1b2fd339/01%20How%20it%20works.svg?cdnVersion=2143",
            "https://wac-cdn.atlassian.com/dam/jcr:34c86360-8dea-4be4-92f7-6597d4d5bfae/02%20Feature%20branches.svg?cdnVersion=2143",
            "https://wac-cdn.atlassian.com/dam/jcr:8f00f1a4-ef2d-498a-a2c6-8020bb97902f/03%20Release%20branches.svg?cdnVersion=2143",
            "https://wac-cdn.atlassian.com/dam/jcr:cc0b526e-adb7-4d45-874e-9bcea9898b4a/04%20Hotfix%20branches.svg?cdnVersion=2143",
            "https://wac-cdn.atlassian.com/dam/jcr:2642fbab-a771-4961-9648-806c2fff25e5/bitbucket-blog-resized.png?cdnVersion=2143",
            "https://wac-cdn.atlassian.com/dam/jcr:d1f1a28b-11fc-4e22-b6c8-d47832b39d53/devops-learning-path-resized.png?cdnVersion=2143",
            "https://wac-cdn.atlassian.com/dam/jcr:73c6bd92-448f-4ae7-a6c1-5f4695f78692/demo-den-resized.png?cdnVersion=2143",
            "https://wac-cdn.atlassian.com/dam/jcr:9c4bf443-5045-4ff9-a48d-36ae466f3ced/logos-atlassian-mini-icon-onecolor-blue.svg?cdnVersion=2143"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "A deep dive into the Gitflow Workflow. Learn if this Git workflow is right for you and your team with this comprehensive tutorial.",
        "meta_lang": "en",
        "meta_favicon": "/favicon-16x16.png",
        "meta_site_name": "Atlassian",
        "canonical_link": "https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow",
        "text": "Gitflow is an alternative Git branching model that involves the use of feature branches and multiple primary branches. It was first published and made popular by Vincent Driessen at nvie. Compared to trunk-based development, Gitflow has numerous, longer-lived branches and larger commits. Under this model, developers create a feature branch and delay merging it to the main trunk branch until the feature is complete. These long-lived feature branches require more collaboration to merge and have a higher risk of deviating from the trunk branch. They can also introduce conflicting updates.\n\nGitflow can be used for projects that have a scheduled release cycle and for the DevOps best practice of continuous delivery. This workflow doesn’t add any new concepts or commands beyond what’s required for the Feature Branch Workflow. Instead, it assigns very specific roles to different branches and defines how and when they should interact. In addition to feature branches, it uses individual branches for preparing, maintaining, and recording releases. Of course, you also get to leverage all the benefits of the Feature Branch Workflow: pull requests, isolated experiments, and more efficient collaboration.\n\nInstead of a single main branch, this workflow uses two branches to record the history of the project. The main branch stores the official release history, and the develop branch serves as an integration branch for features. It's also convenient to tag all commits in the main branch with a version number.\n\nThe first step is to complement the default main with a develop branch. A simple way to do this is for one developer to create an empty develop branch locally and push it to the server:\n\nOnce develop has acquired enough features for a release (or a predetermined release date is approaching), you fork a release branch off of develop. Creating this branch starts the next release cycle, so no new features can be added after this point—only bug fixes, documentation generation, and other release-oriented tasks should go in this branch. Once it's ready to ship, the release branch gets merged into main and tagged with a version number. In addition, it should be merged back into develop, which may have progressed since the release was initiated.\n\nUsing a dedicated branch to prepare releases makes it possible for one team to polish the current release while another team continues working on features for the next release. It also creates well-defined phases of development (e.g., it's easy to say, “This week we're preparing for version 4.0,” and to actually see it in the structure of the repository).\n\nMaking release branches is another straightforward branching operation. Like feature branches, release branches are based on the develop branch. A new release branch can be created using the following methods.\n\nWithout the git-flow extensions:\n\nOnce the release is ready to ship, it will get merged it into main and develop, then the release branch will be deleted. It’s important to merge back into develop because critical updates may have been added to the release branch and they need to be accessible to new features. If your organization stresses code review, this would be an ideal place for a pull request.\n\nTo finish a release branch, use the following methods:\n\nWithout the git-flow extensions:\n\nMaintenance or “hotfix” branches are used to quickly patch production releases. Hotfix branches are a lot like release branches and feature branches except they're based on main instead of develop. This is the only branch that should fork directly off of main. As soon as the fix is complete, it should be merged into both main and develop (or the current release branch), and main should be tagged with an updated version number.\n\nHaving a dedicated line of development for bug fixes lets your team address issues without interrupting the rest of the workflow or waiting for the next release cycle. You can think of maintenance branches as ad hoc release branches that work directly with main. A hotfix branch can be created using the following methods:\n\nWithout the git-flow extensions:"
    }
}