{
    "id": "dbpedia_8583_3",
    "rank": 13,
    "data": {
        "url": "https://www.osnews.com/story/10155/autopackage-10-the-now-and-the-next/",
        "read_more_link": "",
        "language": "en",
        "title": "Autopackage 1.0, the now and the next – OSnews",
        "top_image": "https://www.osnews.com/icons/favicon-32x32.png",
        "meta_img": "https://www.osnews.com/icons/favicon-32x32.png",
        "images": [
            "https://www.osnews.com/wp-content/uploads/2022/02/osnews-ukraine.png",
            "https://www.osnews.com/img/10155/screenshot1-small.png",
            "https://www.osnews.com/img/10155/screenshot2-small.png",
            "https://www.osnews.com/img/10155/possible-ui-3-small.png",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/a1d6e45d8e46ab7983b3366ed0cd496b?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/0a603248a07efbe4f38b7a5e841dcb88?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/3570743af1609a2e61f860cbdb787ba8?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/e824dbbb01949639d2f015cab3d391f6?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/wink.gif",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/c9c7151bd0e3cbacbccaeee56652b4b1?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/c9c7151bd0e3cbacbccaeee56652b4b1?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/1b6f80505ba3aa10eaf536e60988cd07?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/fd0453bb9f84a2460b6426f994ca721c?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/5de44b11c196b0bd05da7d400efd2300?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/a378c9895c828f6e78ec9c5fdd480848?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/wink.gif",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/804db7fd53b79fb53d3e9f1b4e32b7ef?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/b5cbaaa6cfae9e033aaeddaacf69735d?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/357a20e8c56e69d6f9734d23ef9517e8?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/e3b25911cdff12ab93de4e24bc97b725?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/5f07dbd0ffbad7fbec50bf8e099a9953?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/f20d99da5b764d8d76f1c86e32ad3b8c?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/b5cbaaa6cfae9e033aaeddaacf69735d?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/f20d99da5b764d8d76f1c86e32ad3b8c?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/d5d98fbec56bece3fbd8d9653ee3755b?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/b5cbaaa6cfae9e033aaeddaacf69735d?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/cffb45fd6c54ea9c6d954168b4e9d20c?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/c9c7151bd0e3cbacbccaeee56652b4b1?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/wink.gif",
            "https://www.osnews.com/images/emo/sad.gif",
            "https://secure.gravatar.com/avatar/0ec411c5bf8b1d18e30ac8de117fc25a?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/769084f2da2ebbc1e483af3f0e72adaa?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/c9c7151bd0e3cbacbccaeee56652b4b1?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/b5cbaaa6cfae9e033aaeddaacf69735d?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/cae32151a1ab8fca9ec07ad4f30e7099?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/c9c7151bd0e3cbacbccaeee56652b4b1?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/0c1f8a066a57c3d64fdce6c39a2fe7d5?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/b5cbaaa6cfae9e033aaeddaacf69735d?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/b5cbaaa6cfae9e033aaeddaacf69735d?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/b5cbaaa6cfae9e033aaeddaacf69735d?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/smile.gif",
            "https://secure.gravatar.com/avatar/c9c7151bd0e3cbacbccaeee56652b4b1?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://www.osnews.com/images/emo/sad.gif",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r",
            "https://secure.gravatar.com/avatar/?s=68&d=identicon&r=r"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Mike Hearn"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/icons/apple-touch-icon.png",
        "meta_site_name": "",
        "canonical_link": "https://www.osnews.com/story/10155/autopackage-10-the-now-and-the-next/",
        "text": "After two and a half years of work, autopackage 1.0 has finally escaped into the wild. It has a fundamentally new design, and offers an alternative system of software distribution and management on Linux. This article will talk about what this means for the Linux community, and what new directions and possibilities it opens up. It’ll talk about problems remaining to be solved, and finally it will propose solutions for them. If you just want to see what autopackage is like, check out the screenshots or the Flash demo, available from the website.\n\nWhat is autopackage?\n\nAt heart, it’s about allowing developers\n\nto provide binary packages that can be used by every Linux user,\n\nregardless of what distribution or desktop they run. While not\n\nperfect, its success rate is already high and will become higher\n\nin future. Though young, there are already autopackages of Gaim, Inkscape and\n\nAbiWord\n\n. It is also being used by much smaller projects such as the\n\nGtkQt engine or Lincity which otherwise\n\nwould have no packages for most distributions, rendering them\n\ndifficult and awkward to install for many users.\n\nIt has several interesting features apart from working on any\n\ndistribution: it understands dependencies and\n\ncan resolve them. It supports multiple frontends,\n\nwith both textual and GUI frontends coming out of the box. It\n\nships with a manager application that lets you uninstall\n\n3rd party software installed using autopackage (and in future,\n\nthis will develop into a generic tool that works for all\n\npackages). Most importantly, it’s been designed with usability in\n\nmind from the ground up.\n\n“What idiots, a new package format is the last thing we need!”\n\nTo do things like support dependency resolution without depending\n\non particular distributions or package managers, a new dependency\n\nmodel had to be devised and implemented. To provide binaries that\n\nwould run reliably on a rainbow of machines, new tools such\n\nas apbuild and relaytool were written. To provide\n\nthe flexibility needed to deal with a wide range of systems, a\n\ncompletely script/API based approach was used. To provide an\n\naesthetically pleasing experience GTK+ and Qt frontends were\n\ndeveloped. And finally, to make it simple even for non-technical\n\nusers, the ability to bootstrap the whole thing just by running\n\nthe packages themselves was added. To meet these requirements it\n\nwould not have been possible to adapt existing formats.\n\nThere was an additional, psychological reason. By providing a new\n\nformat, users who have been failed by the existing system have a\n\nconcrete feature request to make of the developers – rather than\n\nbeing limited to vague expressions of dissatisfaction, users can\n\nask developers for something specific to help them. As developers\n\nlearn how to build autopackages, we can show them how to make\n\ntheir software easier to install by evaluating dependencies for\n\nstability, penetration (how many systems it’s installed on) and so\n\non. We can also teach them how to use programs like relaytool to relax\n\ndependencies. They can then begin to improve their software to be\n\neasier to install, for ease of installation – like usability – is\n\nnot something that can be slapped on in five minutes. It must be\n\nconsidered while the software is built.\n\nWhat’s wrong with depsolvers like apt?\n\nNow apt and friends are fine tools for sure, but they do not solve\n\nthe developers problem of how to get the latest version of their\n\nprogram to their users now, and not in six months time when\n\nit finally gets packaged and integrated into the repositories of\n\nall the distributions out there. The apt model of centralised\n\nrepositories is the polar opposite of the decentralised model of\n\nsoftware distribution as used by Windows, MacOS X and BeOS. What\n\nmakes sense for the packages comprising the operating system\n\nitself doesn’t make much sense for third party applications. Even\n\nif it was possible to provide an apt repository in which\n\neverything was packaged and everything was up to date, the\n\nusability problems would be crippling. Synaptic offers\n\nunmanageable lists of choice and solutions such as\n\ngnome-app-install simply lessen the problem but do not eliminate\n\nit. Even search-oriented rather than list-oriented interfaces have\n\nproblems: no matter how smart your searching is, you’ll never beat\n\nGoogle. Other problems, which you can read about in the FAQ, slam\n\nthe nails into the coffin of this model.\n\nMoving to a decentralised model for distributing applications\n\nraises fundamental questions about the structure and design of\n\nLinux. It’s no longer enough to guarantee source code portability\n\n– instead, binary portability must be provided too. It’s no longer\n\nenough to check for optional libraries in a configure script and\n\ncompile the code to use them out when missing, instead the\n\nlibraries must be linked to at runtime and the fallback path used\n\nif the library is missing. It’s no longer enough to have to guess\n\nwhat is on your users systems: instead a large and solid platform\n\nis required on which developers can build.\n\nDuring the development of autopackage, we have considered and\n\naddressed many of these problems. Binary portability problems have\n\nbeen tackled with an easy to use GCC wrapper, called apbuild. The\n\nPOSIX dlopen interface is awkward to work with, so relaytool was\n\nwritten to make weak linkage a snap. It makes it easy to fall\n\nback to the old GTK+ file chooser if the new one is not available,\n\nor disable spell checking if gtkspell isn’t installed. Finally\n\nbinreloc is a toolkit for making programs installable to any\n\nprefix at runtime: this allows users without root to install\n\nsoftware to their home directory, and administrators can install\n\nprograms to network mounts and additional hard disks without\n\nneeding union mounts or LVM. It’s a rule that autopackages must be\n\nrelocatable.\n\nLooking towards the future\n\nThere are lots of ideas and plans for what happens now. Probably\n\nthe most important is native package manager integration. Right\n\nnow, autopackages integrate well with a variety of desktop\n\nenvironments. However, it doesn’t integrate much with the\n\nunderlying package management technology. In future, it will do\n\nso.\n\nThat means registering with the RPM database when a package is\n\ninstalled so you can list its files and metadata, so it can\n\nfulfil dependencies for other RPMs and so it’s possible to\n\nsmoothly upgrade a package from RPM to an autopackage or\n\nvice-versa. It means using apt-get, yum or emerge to resolve\n\ndependencies as well as autopackages own built-in dep\n\nresolution. Finally, it means a way to put autopackages inside apt\n\nrepositories to aid deployment on managed networks.\n\nDependency hell is a difficult problem to solve, as you may have\n\nguessed by the fact that it still plagues Linux as late as\n\n2005. Nothing in the design of autopackage stops a developer\n\ndepending on extremely new, rare or unstable libraries – the\n\nprimary cause. While autopackages check the system directly for\n\nwhat they need (so avoiding the problem of inconsistent metadata\n\nand package managers that don’t recognise source installs) if you\n\nactually don’t have the necessary code then the install will\n\nfail. To solve this, it is essential to provide developers with a\n\nbroad base of functionality that can be depended upon with only\n\none expressed dependency: a base set\n\nor platform.\n\nThe user interface provided by both autopackage and traditional\n\npackage managers isn’t best of breed. What should be seamless and\n\ntransparent is not: the user is still expected to understand the\n\ndistinction between a program and a package, and has to comprehend\n\nthe purpose of installation. This means users need to think about\n\nnon-obvious questions “Do I keep the package I downloaded around?\n\nDo I still need it after installing it? Can I send it to other\n\npeople?”. Drag and drop is not supported. Support for upgrades and\n\nuninstallation is crude and not integrated with the desktop. Many\n\nof these issues affect other platforms like Windows and MacOS X\n\ntoo, but we should aim high. Solving this means integrating\n\npackage management with the desktop so applications become\n\nfirst-class objects that the user can manipulate just like\n\ndocuments. The concept of “installation” should fade away and\n\neventually disappear thanks to seamless desktop integration not\n\nonly with autopackage but with all package managers."
    }
}