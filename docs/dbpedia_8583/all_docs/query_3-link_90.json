{
    "id": "dbpedia_8583_3",
    "rank": 90,
    "data": {
        "url": "https://kb.filewave.com/books/integrations/page/autopkgr-with-filewave/revisions/2084",
        "read_more_link": "",
        "language": "en",
        "title": "Page Revision for AutoPkgr with FileWave",
        "top_image": "https://kb.filewave.com/uploads/images/system/2023-05/3vXzHFO4tOFXnYtk-background-icon.png",
        "meta_img": "https://kb.filewave.com/uploads/images/system/2023-05/3vXzHFO4tOFXnYtk-background-icon.png",
        "images": [
            "https://kb.filewave.com/uploads/images/system/2023-05/e8lgDo0RggBlNe0J-background-icon.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/lG1mRWHlm9Fy4ugr-embedded-image-12xgqzjj.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/jhHpOGWDTVMnwE47-embedded-image-qxfa9ywm.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/iBhNoPaEA9UTjRTC-embedded-image-kgwixjud.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/SpmbsEtfYVAZv6zT-embedded-image-m5jcx2pi.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/8ahAlVJpNt2ceIMu-embedded-image-ibkalvix.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/S2GxWdgSc712TnmN-embedded-image-dvigwnst.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/FITABVICZE8o3Qy7-embedded-image-oadwcwql.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/NkJyyyFr2Ex6JIZF-embedded-image-gtl8h4xv.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/rrCfZfMeIAuPD6sx-embedded-image-namahxei.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/OPDTTmHgYGSyMGly-embedded-image-hqxzerk5.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/6J7cTXyzNk2Y3JmF-embedded-image-kjcvpixb.png",
            "https://bbb.filewave.com/uploads/images/gallery/2023-07/QF68F7207evKjx6L-embedded-image-bzpjxb9a.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "https://kb.filewave.com/uploads/images/system/2023-05/3vXzHFO4tOFXnYtk-background-icon.png",
        "meta_site_name": "",
        "canonical_link": "https://kb.filewave.com/books/integrations/page/autopkgr-with-filewave/revisions/2084",
        "text": "AutoPkgr with FileWave\n\nDescription\n\nAutoPkg is an automation framework for macOS software packaging and distribution, oriented toward the tasks one would normally perform manually to prepare third-party software for mass deployment to managed clients. An important use in conjunction with FileWave is to provide a way to turn 3rd party software updates into Filesets on an automated basis.\n\nIngredients\n\nFW Admin\n\nAutoPkgr Installer\n\nAn 'always on' computer\n\nDirections\n\nComplementing the below setup, there is also a Foundry video demonstrating setup, additional configuration and typical stumbling blocks: FileWave and AutoPkg\n\nSetup FileWave\n\nGo to FileWave Admin -> Assistants -> Manage Administrators\n\nClick on the + button to add a new Administrator\n\nSelect Local Account, (for example autopkg and the password autopkg as well)\n\nGo to Permissions tab and click on Select None\n\nAllow the autopkg user to 'Modify Filesets' and 'Set Permissions' as per the above screenshot.\n\nClick Apply\n\nConfirm with OK\n\nSetup AutoPkgr\n\nGo to https://github.com/lindegroup/autopkgr/releases/latest\n\nDownload, install and launch AutoPkgr\n\nLaunch AutoPkgr, Click on \"Install AutoPkg\" , and \"Install Git\"\n\nGo to Folders & Integration and click on Install FileWaveImporter:\n\nClick on Configure FileWaveImporter:\n\nEnter your FileWave Server Hostname\n\nFileWave Server Port is already set to 20016\n\nUsername is e.g. autopkg\n\nPassword is e.g. autopkg\n\nClick on Verify to validate the setup\n\nClick on Save and Close\n\nGo to Repos & Recipes and verify that https://github.com/autopkg/recipes.git and https://github.com/autopkg/filewave/git are checked\n\nMake sure that 'Active recipe list' has added com.github.autopkg.filewave:\n\nNow You can run a Recipe for example Java8. To find it quickly enter filewave on search bar and check the Java8 recipe:\n\nSecurity and Trust Relationship\n\nRunning recipes directly from a cloned repo will bypass AutoPkg's security mechanism. As such an Override recipe should always be created and run. This builds a local recipe with a trust relationship between this and any linked 'parent' recipes, see below. For additional information on Override recipes and more, please view the Foundry video: FileWave and AutoPkg\n\nCongratulations ! Your AutoPkgr setup is now complete. Choose the recipes you would like to run on a regular basis , and then schedule AutoPkgr to run every 24 hours.\n\nOverride Recipes & Trust Relationship\n\nFor security, a trust relationship was added between recipes. The idea is the child recipe is made to trust it's parent recipes. If an updated version of a parent recipe is pulled from a repository, then this parent will no longer be trusted by that child, until the trust relationship is manually updated. AutoPkgr does not offer the ability to change trust and so this must be done via the command line.\n\nWith no trust, when a recipe is run that relies on parent recipes you will see an error similar when running the recipe from Terminal:\n\n$ autopkg run -v OracleJava8.filewave.local Processing OracleJava8.filewave.local... Failed local trust verification. Receipt written to /tmp/receipts/OracleJava8.filewave-receipt-20180409-141621.plist The following recipes failed: OracleJava8.filewave.local No trust information present. Nothing downloaded, packaged or imported.\n\nIn this example, Creating a Recipe Override will create a recipe that has trust added for us. Using the above Java8 example, first make an Override recipe. The Override recipe and initial trust can be created in either AutoPkgr or using the command line. The Java 8 override recipe will be called \"Java8.filewave.override\". The last entry is reference to the parent recipe to be overridden (this can be either be recipe name or it's identifier, recipe name used in this example):\n\n$ autopkg make-override -n Java8.filewave.override Java8.filewave\n\nBy making the override file in this way, the trust relationship has been added automatically to the Override recipe. Now there is a trust relationship, the override file can be used to run the recipe (either through Terminal or AutoPkgr):\n\n$ autopkg run -v OracleJava8.filewave.override Processing OracleJava8.filewave.override... [lines removed] The following fileset was imported: Fw Fileset Id Fw Fileset Group Fw Fileset Name ------------- ---------------- --------------- 194266 Root Java - 1.8.161.12 The following packages were copied: Pkg Path -------- /Users/Shared/Autopkg/Cache/local.override.filewave.OracleJava8/Java-1.8.161.12.pkg The following new items were downloaded: Download Path ------------- /Users/Shared/Autopkg/Cache/local.override.filewave.OracleJava8/downloads/Java.dmg\n\nIf after updating repos, the trust relationship error is flagged against any recipes, this indicates that a parent has been updated and trust is no longer in place. At this point, the parent should be reviewed to observe the changes made. Changes to a recipe can easily be viewed by navigating to the relevant recipe on GitHub and viewing the 'History'.\n\nOnce confirmation has been made that the changes are acceptable, a new trust relationship should be created. As an override file already exits, the trust will need to be updated for the Java 8 override recipe; as such re-trusting all parents:\n\nAlthough it is possible to disable trust relationship, this should not be recommended for security reasons. Current status can be seen by running the following and checking the value of 'FAIL_RECIPES_WITHOUT_TRUST_INFO':\n\n$ autopkg info\n\nIt is possible to temporarily override the trust relationship, such that it is ignored:\n\n$ autopkg run --ignore-parent-trust-verification-errors [name of recipe]\n\nImportant\n\nFOR SECURITY REASONS, IT IS ALWAYS RECOMMENDED THAT RECIPES ARE CHECKED BEFORE INGESTING INTO YOUR FILEWAVE SERVER AND CREATED FILESETS ARE SUBSEQUENTLY CHECKED ON TEST MACHINES BEFORE DEPLOYING TO LARGER GROUPS OF MACHINES\n\nFileWave & AutoPkg Instructions - https://github.com/autopkg/filewave\n\nThe primary site for AutoPkg - http://autopkg.github.io/autopkg\n\nGithub Site for AutoPkg - https://github.com/autopkg/autopkg\n\nAutoPkgr website - http://www.lindegroup.com/autopkgr\n\nAutoPkg Trust - https://github.com/autopkg/autopkg/wiki/AutoPkg-and-recipe-parent-trust-info\n\nAutopkg(r) FAIL_RECIPES_WITHOUT_TRUST_INFO\n\nDescription\n\nAutopkg provides security through trust relationship. Each recipe is set to trust any parents. If those parents change, the trust will be broken until the recipe is informed to trust these updated parent recipes. Message may read as follows with no exit status error:\n\nWARNING: com.github.autopkg.filewave.OracleJava8 is missing trust info and FAIL_RECIPES_WITHOUT_TRUST_INFO is not set. Proceeding...\n\nThis is a generic Autopkg(r) message and details on Trust Info configuration to address this may be found at AutoPkg and recipe parent trust info\n\nTypical parent updates are due to URL changes in a download recipe.\n\nFileWave 13\n\nAfter to upgrading to FileWave 13, the following errors may be experienced:\n\nExit Status 108:\n\nWARNING: com.github.autopkg.filewave.OracleJava8 is missing trust info and FAIL_RECIPES_WITHOUT_TRUST_INFO is not set. Proceeding... Command '['/Applications/FileWave/FileWave Admin.app/Contents/MacOS/FileWave Admin', '-u', u'autopkg', '-p', u'autopkg', '-H', u'filewave.server.com', '-P', '20016', '--listFilesets']' returned non-zero exit status 108\n\nor\n\nExit Status 109:\n\nWARNING: com.github.autopkg.filewave.Evernote is missing trust info and FAIL_RECIPES_WITHOUT_TRUST_INFO is not set. Proceeding... Error in com.github.autopkg.filewave.Evernote: Processor: com.github.autopkg.filewave.FWTool/FileWaveImporter: Error: Error importing the folder '/Users/username/Library/AutoPkg/Cache/com.github.autopkg.filewave.Evernote/Evernote/Evernote.app' into FileWave as a fileset called 'Evernote - 7.7'. Reason: Command '['/Applications/FileWave/FileWave Admin.app/Contents/MacOS/FileWave Admin', '-u', u'autopkg', '-p', u'autopkg', '-H', u'filewave.server.com', '-P', '20016', '--importFolder', u'/Users/username/Library/AutoPkg/Cache/com.github.autopkg.filewave.Evernote/Evernote/Evernote.app', '--name', u'Evernote - 7.7', '--root', u'/Applications/Evernote.app']' returned non-zero exit status 109\n\nFileWave 13 has increased security and the server certificate is part of this security. There are also changes and additional options for FileWave Administrator Preferences. As such, some configuration changes will be necessary.\n\nFileWave Admin\n\nAdditionally, if using a self-signed certificate, please observe the necessary steps for FileWave Admin in the following article to ensure you have a local copy of the certificate: Self-Signed SSL Certificates Going Forward\n\nDirections\n\nExit Status 108\n\nThis is likely to be one of the following:\n\nServer Certificate\n\nAutopkg(r) setting - Server Name\n\nAutopkg(r) setting - User/Password\n\nAn old expired certificate is in the Keychain\n\nServer Certificate\n\nConfirm that your server meets necessary requirements. For example:\n\nServer Common Name matches Server Name\n\nCertificate has not expired\n\nFurther details on certificates can be seen at: Root Trusted SSL Certificate (Using and Renewing)\n\nServer Name\n\nThe following preference for server name, configured for Autopkg(r), needs to match the server address/common name and may not be, for example, IP or \"localhost\".\n\nThe following command may be use to confirm the current server settings of Autopkg(r). This should be run as the user and not root:\n\ndefaults read com.github.autopkg FW_SERVER_HOST\n\nIf the response of the server does not match the server's address/common name, then the value will need to be amended to match. Using the example above, server address/common name \"filewave.server.com\", the command should be:\n\ndefaults write com.github.autopkg FW_SERVER_HOST filewave.server.com\n\nUser settings\n\nPrior to FileWave 13, the settings for the user, e.g password, could be left blank and the default password would be used. They must now be filled in.\n\nThe following command may be used to set the user and password (example username and password of autopkg): This should be run as the user and not root:\n\ndefaults write com.github.autopkg FW_ADMIN_USER autopkg defaults write com.github.autopkg FW_ADMIN_PASSWORD autopkg\n\nNote, both the above may be observed and set through Autopkgr: 'Folders & Integration' > 'Configure FileWaveImporter'\n\nExpired Certificate\n\nRemove old expired certificates from the keychain. Check to ensure they are removed from both:\n\nlogin\n\nSystem\n\nExit Status 109\n\nManage Administrators\n\nFileWave 13 has additional options and amended default settings for Administrator Preferences. If exit status 109 is seen, this may indicate that the settings for the 'autopkg' Administrator account need addressing.\n\nEnsure the 'autopkg' user has permissions to modify Filesets:\n\nTest\n\nOnce any of the above have been amended, re-run the recipes."
    }
}