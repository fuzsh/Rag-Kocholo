{
    "id": "dbpedia_8583_3",
    "rank": 71,
    "data": {
        "url": "https://simplemdm.com/blog/munki-integration/",
        "read_more_link": "",
        "language": "en",
        "title": "Hosted Munki integration guide: Why use Munki with an MDM?",
        "top_image": "https://images.ctfassets.net/wijwqldy5f7q/66iu8cxSMRmIyOXIXzlmba/126789eb7f6509eccdbd5e0c94742c6a/Product_V2.png",
        "meta_img": "https://images.ctfassets.net/wijwqldy5f7q/66iu8cxSMRmIyOXIXzlmba/126789eb7f6509eccdbd5e0c94742c6a/Product_V2.png",
        "images": [
            "https://images.ctfassets.net/wijwqldy5f7q/1QBPjKzEUcwbUqTs36BHim/8cf802b3bc97bdeffb9a08adf3a4306a/SMDM_Logo.svg",
            "https://images.ctfassets.net/wijwqldy5f7q/7DCeq1Fhnuvqj98BOXGJvY/2a7ee6591ec8c2e5a0a33cdabce5fefe/SMDM_Blog__2_.svg",
            "https://images.ctfassets.net/wijwqldy5f7q/1x2RzdlWO9Bwpw2IFCIvvz/a8f5fed95ebb83c42c0eaaaba060a919/Favicon.svg",
            "https://images.ctfassets.net/wijwqldy5f7q/2emswN5gPBcgiyORQX8RiE/20a46dc8c93199395bd4de3cdcf4d956/Product.png?w=900&fl=png8&fm=png",
            "https://images.ctfassets.net/wijwqldy5f7q/2emswN5gPBcgiyORQX8RiE/20a46dc8c93199395bd4de3cdcf4d956/Product.png?w=450&fl=png8&fm=png",
            "https://images.ctfassets.net/wijwqldy5f7q/5XjxGu0KOrNQwWxrl46wNk/819cf5e8c2363a93f75f203844360789/Frame_1__1_.png",
            "https://images.ctfassets.net/wijwqldy5f7q/Rqfwovtfr1LdARFFbK6jq/72640655a2a0f4d55110b2ed79e3132a/Frame_2__1_.png",
            "https://images.ctfassets.net/wijwqldy5f7q/3BMfhFjNQpSLPWZbIY56OM/6434962270ae5dbfe0d42bad68dd92a9/Frame_3.png",
            "https://images.ctfassets.net/wijwqldy5f7q/2pm05U4NrjzXBmhCHyrmYz/8e28d247578f4a5792a5c950248052a7/Frame_4.png",
            "https://images.ctfassets.net/wijwqldy5f7q/cCmSZGJoAKzRg7p9V9hpO/73ebd39c54b62b178700504d3cfbe869/Frame_5.png",
            "https://images.ctfassets.net/wijwqldy5f7q/1x2RzdlWO9Bwpw2IFCIvvz/a8f5fed95ebb83c42c0eaaaba060a919/Favicon.svg",
            "https://images.ctfassets.net/wijwqldy5f7q/5fPhCU9Yb1ddck9EgSyIf1/7970c760dcbc999230754a6ebd5c6de1/newhero.png?q=80&w=2000&h=1000&fm=png&fl=png8",
            "https://images.ctfassets.net/wijwqldy5f7q/1Pdhei74V8T0ln5I0lEFpX/4aec154ed00451cb9b3337ff369db779/Michigan_Software_Labs.png?q=80&w=2000&h=1000&fm=png&fl=png8",
            "https://images.ctfassets.net/wijwqldy5f7q/7BmCsnCZQINRia14BkVV9N/00dae74468c5a8e69aed37fddda85cb2/VIP-IT-casestudy.png?q=80&w=2000&h=1000&fm=png&fl=png8",
            "https://images.ctfassets.net/wijwqldy5f7q/78SXQWbjGA9u6Cw6wgMben/493b92c29fa17f1ce3ca73806084f101/Mask_group__12_.png",
            "https://images.ctfassets.net/wijwqldy5f7q/6wTF9wXH0AGM8zA6Jov9vc/69f8c04c796c9caed182f31db707744f/logo.svg",
            "https://images.ctfassets.net/wijwqldy5f7q/6OpVxYpXBlS3zAz3rzpzUP/184d582acfba8fc75bc58e2145186141/icon-facebook-grey.svg",
            "https://images.ctfassets.net/wijwqldy5f7q/7KVTDIGqbHL9PQdQQ63T3K/75704592c67a3696b63604596f48aa19/icon-linkedin-grey.svg",
            "https://images.ctfassets.net/wijwqldy5f7q/2cmiP07mBUfnP82ULukZlG/909281f004f2c9178b6cedf966b75ebd/icon-twitter-grey.svg",
            "https://images.ctfassets.net/wijwqldy5f7q/42LzzseENHvUXRGMT614jS/b4690636407b8942c0409afc58d094b3/youtube.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "Discover how using SimpleMDM with Munki reduces cost and administrative effort to configure, maintain, and secure the Munki client software.",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": "https://simplemdm.com/blog/munki-integration/",
        "text": "Munki traditionally requires additional cost and administrative effort to configure, maintain, and secure the Munki client software and a repository server. With the SimpleMDM Munki Integration, a hosted Munki deployment is now available out-of-the-box for SimpleMDM admins.\n\nWhereas MDM supports installing a subset of macOS package formats, Munki supports a much wider range of software, including the common .dmg (Apple Disk Image) format. Additionally, Munki provides a private, self-serve app store. Employees may view the software library, install the applications that they need, and receive automatic updates as they become available.\n\nAs a testament to Munki, many admins use it even when their MDM already includes a similar offering. It’s that good. The Munki codebase is maintained by an extensive roster of leading MacAdmins and is considered the best macOS software management solution available today.\n\nMunki app deployment is configured using the same interface used to deploy MDM apps. Administrators are able to upload custom apps, assign them to devices, and install with a click. In this manner, an admin can view DEP PreStage, MDM device and user channel, and Munki app deployments from a single interface. No additional command line tooling nor third-party hosting services required.\n\nThe Munki client benefits from SimpleMDM’s distributed, hardened infrastructure. Communications are authenticated using per-device PKI, device attestation, and of course, MDM. Requests are served by SimpleMDM’s cloud infrastructure and content delivery network (CDN), ensuring that software downloads are quick and reliable. Maintenance, security reviews, and investment associated with in-house infrastructure are eliminated.\n\nSimpleMDM accounts get immediate access to the Shared Apps directory: a growing collection of commonly used macOS software. Apps from this directory, such as Google Chrome or Zoom, for instance, can be added to your catalog and distributed to devices without any additional work on your part. SimpleMDM maintains these apps to ensure they remain up to date.\n\nPerhaps you have an in-house application or custom build that you would like to distribute. Apps can be uploaded to SimpleMDM using the admin UI or via API. SimpleMDM processes each upload and determines whether it can be distributed via MDM, Munki, or both.\n\nPlease note that macOS requires that binaries distributed via MDM are signed and review the process. Binaries delivered via Munki do not need to be signed.\n\nDoes your business use AutoPkg or Munki command line tools, like munkiimport? The SimpleMDM Munki repo plugin allows AutoPkg and Munki to publish software directly to your SimpleMDM account. Any AutoPkg .munki recipe can be configured to upload to your SimpleMDM account and distribute to your fleet with just a couple of additional command line or recipe arguments. No refactoring is needed.\n\nPkgInfo files, which are traditionally generated with makepkginfo tool, contain metadata about the apps being installed, as well as installation behavior controls. SimpleMDM's Munki integration automatically generates the PkgInfo for apps by default, but it also offers the ability to customize them as needed.\n\nWith custom PkgInfo, admins have more control over that behavior as well as the end users’ experience when apps are being installed via the Managed Software Center. Customize the PkgInfo files, upload your own, or edit the existing file for your Munki apps all within the admin interface.\n\nNoPkgs are great for running scripts and automatically checking for changes in the installed state. They can also provide self-service scripts via the Managed Software Center. To use a NoPkg with SimpleMDM, you can create your own and upload it or copy an existing one and paste it into the text editor. See the official Munki documentation for examples of NoPkgs and instructions on how to create one.\n\nAfter generating your NoPkg, use Munki-type assignment groups to assign and deploy your NoPkg. Combined with custom attributes, NoPkg support extends script execution capabilities beyond the current Scripts features already included in the admin interface.\n\nSoftware assignment for Munki distribution works similarly to distribution using MDM. Assignment groups are created that associate software titles to devices. With the Munki Integration, you may create two different types of Munki assignment groups:\n\nA powerful feature of the Shared Apps directory is that app titles are automatically updated. While this is a boon in many cases, your business may require a specific version of a software title, or you may wish to test new software titles before releasing them to your fleet.\n\nTo accommodate for this, SimpleMDM assignment groups support version pinning for Shared Apps. Within the assignment group, you may select a specific version of the software title. This version will not change without your intervention. Always want the most recent? Select “latest” and your fleet will automatically receive new versions as they are released.\n\nThe SimpleMDM Munki Integration relies on the same configuration files and binaries as most Munki deployments. Attempting to use both the Munki Integration and an in-house Munki deployment on the same macOS device will likely result in an overwritten or broken Munki configuration.\n\nAs a result, SimpleMDM only installs the Munki client on devices that you have designated to receive software using Munki. It is possible to use the SimpleMDM Munki Integration for one subset of devices and an in-house Munki deployment for a different subset of devices. We recommend being careful to avoid assigning the devices using the in-house deployment to any Munki assignment groups."
    }
}