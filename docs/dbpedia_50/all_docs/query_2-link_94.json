{
    "id": "dbpedia_50_2",
    "rank": 94,
    "data": {
        "url": "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/data_seeding.htm",
        "read_more_link": "",
        "language": "en",
        "title": "Data Seeding",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/dcommon/gifs/toc.gif",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/dcommon/gifs/leftnav.gif",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/dcommon/gifs/rightnav.gif",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/img/ds_iniatialdataload.png",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/img/ds_initialexecpanel.png",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/img/ds_initialexecdetails.png",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/img/ds_flow.png",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/dcommon/gifs/leftnav.gif",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/dcommon/gifs/rightnav.gif",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/dcommon/gifs/oracle.gif",
            "https://docs.oracle.com/cd/E97588_01/siocs/pdf/2213010/html/eics_administration_guide/dcommon/gifs/toc.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2022-10-04T17:19:15+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Data Seeding Modules\n\nData seeding modules are grouped into 5 data groups:\n\nTable 2-5 Initial Data Loading Groups\n\nData Group Module Description\n\nItem\n\nItem\n\nItem data.\n\nItem CFA\n\nItem custom flexible attribute data.\n\nItem Component\n\nPack item component data.\n\nItem Description\n\nItem description data.\n\nItem Hierarchy\n\nItem merchandise hierarchy data, for example, department, class and subclasses.\n\nItem Image\n\nItem image URL data.\n\nItem UDA\n\nItem user defined attribute data.\n\nRelated Item\n\nRelated item detail data.\n\nRelated Item Type\n\nRelated item type data.\n\nMiscellaneous\n\nDifferentiator\n\nItem differentiation data.\n\nDifferentiator Type\n\nItem differentiation type data, such as style, color, size, and so on.\n\nTransfer Zone\n\nTransfer zone data.\n\nUDA\n\nUser defined attribute data.\n\nUDA LOV\n\nUser defined attribute list of values data.\n\nUOM Class\n\nUnit of measure class data.\n\nUOM Conversion\n\nUnit of measure conversion data.\n\nStore\n\nStore\n\nStore data.\n\nStore Address\n\nStore address data.\n\nStore Item\n\nStore item data.\n\nStore Item CFA\n\nStore item custom flexible attribute data.\n\nStore Item Price\n\nStore item price data.\n\nStore Item Price History\n\nStore item price history data.\n\nStore Item Stock\n\nStore item stock record data.\n\nStore UIN Admin Item\n\nStore UIN (Unique Identification Number) admin item data.\n\nSupplier\n\nPartner\n\nPartner data.\n\nPartner Address\n\nPartner address data.\n\nPartner Item\n\nPartner item data.\n\nSupplier\n\nSupplier data.\n\nSupplier Address\n\nSupplier address data.\n\nSupplier CFA\n\nSupplier custom flexible attribute data.\n\nSupplier Item\n\nSupplier item data.\n\nSupplier Item Country\n\nSupplier item country data.\n\nSupplier Item Country Dimension\n\nSupplier item country dimension data.\n\nSupplier Item Manufacturer\n\nSupplier item country manufacture data.\n\nSupplier Organization\n\nSupplier organization unit data.\n\nSupplier UOM\n\nSupplier UOM data.\n\nWarehouse\n\nWarehouse\n\nWarehouse data.\n\nWarehouse Address\n\nWarehouse address data.\n\nWarehouse Item\n\nWarehouse item data.\n\nThe data for the Miscellaneous, Item, Supplier and Warehouse data group modules are imported by the Initial Foundation Data File Import batch job. The data for the Store data group modules are imported by the Initial Store Data File Import batch job. All foundation data should be imported prior to importing any store data. Due to referential integrity constraints (see File Layouts) the batch jobs process the data in the order shown above (for example, the Supplier Item module cannot be imported prior to the Supplier and Item modules, and the Item module cannot be imported prior to the Item Hierarchy module); as such the files for each module should be uploaded to Object Storage and imported in a similar order (or all at the same time). To import data for a group of Stores, upload all the data for those Stores to Object Storage, then run the Initial Store Data File Import batch job. To import data for a single Store, upload all the data for that Store to Object Storage, then run the Initial Store Data File Import batch job. Alternatively, the Initial Store Data File Import batch job can be run for a single Store by entering the Store ID in the Job Admin UI and adding the Store ID to the corresponding filename(s) (vide infra).\n\nFile Layouts\n\nAll files should be in CSV (comma-separated values) format, with either a \".csv\" or \".dat\" filename extension. The batch jobs also support zipped files which will be extracted upon download and processed individually. Empty or blank fields within a record will be considered null. String fields containing a comma or double quote must be quoted (with double quotes), a double quote in a field must be represented by 2 double quote characters. Line breaks within quoted fields are not supported. The filename format is IDL-[MODULENAME]-XXXX.csv(/dat/zip). Files contained within .zip files must adhere to the same filename format. To run the Initial Store Data File Import batch job for a particular Store, the filename format is IDL-[MODULENAME]-[STOREID]-XXXX.csv(/dat/zip). Any files which do not adhere to the filename format will not be downloaded or processed. Files > 500MB will be rejected: the file should be split into smaller files and uploaded as a .zip file. It is recommended to not edit the .csv files in Excel as this can lead to formatting issues.\n\nThe file layout for each module is described below:\n\nDifferentiator Type File\n\nTable 2-6 Differentiator Type File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-DIFFERENTIATORTYPE-*.csv\n\n1,DESCRIPTION FOR DIFFERENTIATOR TYPE 1\n\nItem Hierarchy File\n\nTable 2-7 Item Hierarchy File Layout\n\nField Name Description Required Type\n\nThe unique key comprises the DEPARTMENT_ID, CLASS_ID and SUBCLASS_ID fields.\n\nExample CSV File\n\nIDL-ITEMHIERARCHY-*.csv\n\n1,Department 1,1,Class 1,1,Subclass 1,A\n\nPartner File\n\nTable 2-8 Partner File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-PARTNER-*.csv\n\n1,Partner 1,GBP,1,A,Contact Name 1,Contact Phone 1,Contact Fax 1,Contact Telex 1,Contact Email 1,Manufacturer ID 1,GB,123456789012345678,Payment Terms 1,US,Y,Org Unit ID 1,VAT Region 1,Transfer Entity ID 1\n\nSupplier File\n\nTable 2-9 Supplier File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-SUPPLIER-*.csv\n\n1,1111,Supplier 1,A,en,GB,GBP,Y,N,Y,Y,12345678.1234,Parent Of 1,CA,1234,0\n\nTransfer Zone File\n\nTable 2-10 Transfer Zone File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-TRANSFERZONE-*.csv\n\n1,DESCRIPTION FOR TRANSFER ZONE 1\n\nUDA File\n\nTable 2-11 UDA File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-UDA-*.csv\n\n1,FF,DESCRIPTION FOR 1,Y,Y\n\nUOM Class File\n\nTable 2-12 UOM Class File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-UOMCLASS-*.csv\n\ng,MASS,DESCRIPTION FOR 'GRAM'\n\nWarehouse Class File\n\nTable 2-13 Warehouse File Layout\n\nField Name Description Required Type\n\nAll records in this file will be used to populate the WAREHOUSE_VIRTUAL (Virtual Warehouse) table. Records where the ID and PHYSICAL_WH match will be used to populate the WAREHOUSE (Physical Warehouse) table with a subset of the fields: ID, NAME, ORGANIZATION_UNIT_ID, LOCALE_COUNTRY and CURRENCY_CODE.\n\nExample CSV File\n\nIDL-WAREHOUSE-*.csv\n\n1,Virtual Warehouse 1,Org Unit ID 1,GB,GBP,1,11,Secondary Name 1,Y,D&B NUM 1,LOC1,1234567890,96,1234,CHANNEL 1234,N,warehouse1@abc.com\n\nDifferentiator File\n\nTable 2-14 Differentiator File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-DIFFERENTIATOR-*.csv\n\n1,DESCRIPTION FOR DIFFERENTIATOR 1,1\n\nItem File\n\nTable 2-15 Item File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-ITEM-*.csv\n\n1,0,1,1,1,SHORT_DESC,LONG_DESC,1,2,3,4,A,N,4,1,3,Y,N,kg,12345678.1234,kg,1,UPCA,22,TT,1,SL,33.33,16.66,Y,RETAIL_ZONE_ID,N,BRAND,4.99,GBP,Y,N,BRAND_DESC\n\nPartner Address File\n\nTable 2-16 Partner Address File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-PARTNERADDR-*.csv\n\n1,1,01,Y,Line 1,Line 2,Line 3,City,MN,USA,Postcode,Contact Name,Contact_Phone,Contact_Fax,Contact_Email,County\n\nSupplier Address File\n\nTable 2-17 Supplier Address File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-SUPPLIERADDR-*.csv\n\n1,1,01,Y,Line 1,Line 2,Line 3,City,MN,USA,Postcode,Contact Name,Contact_Phone,Contact_Fax,Contact_Email,County\n\nSupplier CFA File\n\nTable 2-18 Supplier CFA File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-SUPPLIERCFA-*.csv\n\n2,Name 2,Value 2,\n\n3,Name 3,,2021-10-06\n\nSupplier Organization File\n\nTable 2-19 Supplier Organization File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-SUPPLIERORGANIZATION-*.csv\n\n1,Org 1\n\nUDA LOV File\n\nTable 2-20 UDA LOV File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-UDALOV-*.csv\n\n3,LOV_1,DESCRIPTION FOR LOV_1\n\nUOM Conversion File\n\nTable 2-21 UOM Conversion File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-UOMCONVERSION-*.csv\n\ng,lb,453.592\n\nWarehouse Address File\n\nTable 2-22 Warehouse Address File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-WAREHOUSEADDR-*.csv\n\n1,1,01,Y,Line 1,Line 2,Line 3,City,MN,USA,Postcode,Contact Name,Contact_Phone,Contact_Fax,Contact_Email,County\n\nItem CFA File\n\nTable 2-23 Item CFA File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-ITEMCFA-*.csv\n\n2,Name 2,Value 2,\n\n3,Name 3,,2021-10-06\n\nItem Component File\n\nTable 2-24 Item Component File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-ITEMCOMPONENT-*.csv\n\n1,11,1.11\n\nItem Description File\n\nTable 2-25 Item Description File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-ITEMDESCRIPTION-*.csv\n\n1,1,Description 1,Short Description 1,Secondary Description 1,en,English\n\nItem Image File\n\nTable 2-26 Item Image File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-ITEMIMAGE-*.csv\n\n1,99,http://somewhere.com/someimage1.gif,Image1.gif,T\n\nItem UDA File\n\nTable 2-27 Item UDA File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-ITEMUDA-*.csv\n\n1,1,2021-10-01 12:34:56,FF1,LOV1\n\nPartner Item File\n\nTable 2-28 Partner Item File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-PARTNERITEM-*.csv\n\n1,1,A\n\nRelated Item Type File\n\nTable 2-29 Related Item Type File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-RELATEDITEMTYPE-*.csv\n\n1,1,Related,RLTD,N\n\nSupplier Item File\n\nTable 2-30 Supplier Item File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-SUPPLIERITEM-*.csv\n\n1,1,1,Y\n\nWarehouse Item File\n\nTable 2-31 Warehouse Item File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-WAREHOUSEITEM-*.csv\n\n1,1,A,12345678.9012,34567890.1234,56789012.3456,78901234.5678,kg\n\nRelated Item File\n\nTable 2-32 Related Item File Layout\n\nField Name Description Required Type\n\nThe primary key comprises the ITEM_ID, RELATIONSHIP_ID_EXTERNAL and RELATED_ITEM_ID fields.\n\nExample CSV File\n\nIDL-RELATEDITEM-*.csv\n\n1,1,Related,RLTD,N,11,9999,2021-10-01 12:34:56,2021-11-01 12:34:56\n\nSupplier Item Country File\n\nTable 2-33 Supplier Item Country File Layout\n\nField Name Description Required Type\n\nThe primary key comprises the ITEM_ID, SUPPLIER_ID and COUNTRY_ID fields.\n\nExample CSV File\n\nIDL-SUPPLIERITEMCOUNTRY-*.csv\n\n1,1,GB,12345678.9012,GBP,11111111.1111\n\nSupplier Item Manufacture File\n\nTable 2-34 Supplier Item Manufacture File Layout\n\nField Name Description Required Type\n\nThe primary key comprises the ITEM_ID, SUPPLIER_ID and COUNTRY_ID fields.\n\nExample CSV File\n\nIDL-SUPPLIERITEMMANUFACTURE-*.csv\n\n1,1,GB,Y\n\nSupplier Item UOM File\n\nTable 2-35 Supplier Item UOM File Layout\n\nField Name Description Required Type\n\nThe primary key comprises the ITEM_ID, SUPPLIER_ID and UNIT_OF_MEASURE fields.\n\nExample CSV File\n\nIDL-SUPPLIERITEMUOM-*.csv\n\n1,1,g,1234567890123456.7890\n\nSupplier Item Country Dimension File\n\nTable 2-36 Supplier Item Country Dimension File Layout\n\nField Name Description Required Type\n\nThe primary key comprises the ITEM_ID, SUPPLIER_ID, COUNTRY_ID and DIMENSION_OBJECT fields.\n\nExample CSV File\n\nIDL-SUPPLIERITEMCOUNTRYDIM-*.csv\n\n1,1,GB,CASE,BARE,1,1,1,M,1.1,1.01,KG,0.1,ML,1\n\nStore File\n\nTable 2-37 Store File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-STORE-*.csv\n\n1,Store 1,Org Unit ID,en,GB,2001-01-01,2030-12-31,20,10,GBP,1,Y,GMT,Y\n\nStore Address File\n\nTable 2-38 Store Address File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-STOREADDR-*.csv\n\n1,1,01,Y,Line 1,Line 2,Line 3,City,MN,USA,Postcode,Contact Name,Contact_Phone,Contact_Fax,Contact_Email,County\n\nStore Item File\n\nTable 2-39 Store Item File Layout\n\nField Name Description Required Type\n\nExample CSV File\n\nIDL-STOREITEM-*.csv\n\n1,1,0,Short Desc 1,Long Desc 1,A,2022-01-14,GBP,1,2022-01-31,N,SO,N,Y,Y,N,10\n\nStore Item CFA File\n\nTable 2-40 Store Item CFA File Layout\n\nField Name Description Required Type\n\nITEM_ID\n\nThe unique identifier of the item - this references the ITEM_ID column in the ITEM table.\n\nYes\n\nVARCHAR2 (25)\n\nSTORE_ID\n\nThe unique identifier of the store - this references the ID column in the STORE table.\n\nYes\n\nNUMBER (10, 0)\n\nNAME\n\nThe name of the custom flex attribute.\n\nYes\n\nVARCHAR2 (30)\n\nVALUE\n\nThe value of the custom flex attribute.\n\nNo\n\nVARCHAR2 (250)\n\nVALUE_DATE\n\nThe date value of the custom flex attribute in \"yyyy-MM-dd\" format.\n\nNo\n\nDATE\n\nThe primary key comprises the ITEM_ID, STORE_ID and NAME fields.\n\nExample CSV File\n\nIDL-STOREITEMCFA-*.csv\n\n2,1,Name 2,Value 2,\n\n3,1,Name 3, ,2021-10-06\n\nStore Item Stock File\n\nTable 2-41 Store Item Stock File Layout\n\nField Name Description Required Type\n\nITEM_ID\n\nThe unique identifier of the item - this references the ITEM_ID column in the STORE_ITEM table.\n\nYes\n\nVARCHAR2 (25)\n\nSTORE_ID\n\nThe unique identifier of the store - this references the STORE_ID column in the STORE_ITEM table and forms the primary key together with the ITEM_ID field.\n\nYes\n\nNUMBER (10, 0)\n\nQUANTITY_TOTAL\n\nThe total quantity of the item that is sellable.\n\nYes\n\nNUMBER (12, 4)\n\nQUANTITY_RESERVED\n\nThe reserved quantity of the item.\n\nYes\n\nNUMBER (12, 4)\n\nQUANTITY_CUSTOMER_RESERVE\n\nThe quantity of the item reserved for customers.\n\nYes\n\nNUMBER (12, 4)\n\nQUANTITY_IN_TRANSIT\n\nThe in transit quantity of the item.\n\nYes\n\nNUMBER (12, 4)\n\nQUANTITY_VENDOR_RETURN\n\nThe vendor return quantity of the item.\n\nYes\n\nNUMBER (12, 4)\n\nQUANTITY_NON_SELLABLE\n\nThe non-sellable quantity of the item.\n\nYes\n\nNUMBER (12, 4)\n\nAll records in this file will be used to populate the STORE_ITEM_STOCK table. Records where the QUANTITY_NON_SELLABLE field is non-zero will be used to populate the STORE_ITEM_STOCK_NONSELL table.\n\nExample CSV File\n\nIDL-STOREITEMSTOCK-*.csv\n\n1,1,1.1,1.2,1.3,1.4,1.5,1.6\n\nStore Item Price File\n\nTable 2-42 Store Item Price File Layout\n\nField Name Description Required Type\n\nITEM_ID\n\nThe unique identifier of the item - this references the ITEM_ID column in the STORE_ITEM table.\n\nYes\n\nVARCHAR2 (25)\n\nSTORE_ID\n\nThe unique identifier of the store - this references the STORE_ID column in the STORE_ITEM table.\n\nYes\n\nNUMBER (10, 0)\n\nEFFECTIVE_DATE\n\nThe date that the item price becomes effective in 'yyyy-MM-dd HH:mm:ss' format.\n\nNo\n\nDATE\n\nEND_DATE\n\nThe date that the item price is no longer valid in 'yyyy-MM-dd HH:mm:ss' format.\n\nNo\n\nDATE\n\nPRICE_TYPE\n\nThe item price type - 202 (Permanent/Regular), 201 (Promotional) or 200 (Clearance).\n\nYes\n\nNUMBER (3, 0)\n\nSTORE_REQUESTED\n\nFlag indicating if the item price was requested by the store - Y or N.\n\nYes\n\nVARCHAR2 (1)\n\nSTATUS\n\nThe status of the item price - 0 (New), 1 (Pending), 2 (Approved), 3 (Completed), 4 (Rejected), 5 (Ticket List), 6 (Active), 7 (Extract Failed), 9 (Deleted) or 99 (Default).\n\nYes\n\nNUMBER (2, 0)\n\nPROMOTION_ID\n\nThe identifier of the promotion.\n\nNo\n\nNUMBER (10, 0)\n\nPROMOTION_COMP_ID\n\nThe identifier of the promotion component.\n\nNo\n\nNUMBER (10, 0)\n\nMULTI_UNITS\n\nThe number of units involved in the multi-unit pricing of the item price.\n\nNo\n\nNUMBER (12, 4)\n\nMULTI_UNIT_RETAIL_CURRENCY\n\nThe ISO 4217 currency code of the multi-unit price.\n\nNo\n\nVARCHAR2 (3)\n\nMULTI_UNIT_RETAIL\n\nThe value of the multi-unit price.\n\nNo\n\nNUMBER (20, 4)\n\nMULTI_UNIT_UOM\n\nThe unit of measure of the multi-unit price.\n\nNo\n\nVARCHAR2 (4)\n\nMULTI_UNIT_CHANGE\n\nFlag indicating if the multi-unit price has changed - Y or N.\n\nYes\n\nVARCHAR2 (1)\n\nSELLING_UNIT_CHANGE\n\nFlag indicating if the item price has changed - Y or N.\n\nYes\n\nVARCHAR2 (1)\n\nPROMOTION_NAME\n\nThe name of the promotion.\n\nNo\n\nVARCHAR2 (160)\n\nPROMOTION_DESCRIPTION\n\nThe description of the promotion.\n\nNo\n\nVARCHAR2 (640)\n\nPROMOTION_COMP_NAME\n\nThe name of the promotion component.\n\nNo\n\nVARCHAR2 (160)\n\nRESET_CLEARANCE_ID\n\nThe clearance reset identifier.\n\nNo\n\nNUMBER (15, 0)\n\nPROMO_COMP_TYPE\n\nThe promotion component type - 0 (Complex), 1 (Simple), 2 (Threshold), 3 (Credit) or 4 (Threshold).\n\nNo\n\nNUMBER (2, 0)\n\nREGULAR_PRICE_CHANGE_ID\n\nThe identifier of the regular price change.\n\nNo\n\nNUMBER (15, 0)\n\nCLEARANCE_ID\n\nThe identifier of the clearance price change.\n\nNo\n\nNUMBER (15, 0)\n\nPROMO_COMP_DTL_ID\n\nThe identifier of the promotion component detail.\n\nNo\n\nNUMBER (15, 0)\n\nPROMO_DURATION_TYPE\n\nThe promotion duration type - 1 (All Day), 2 (Partial Day) or 3 (Multiple Day).\n\nNo\n\nNUMBER (2, 0)\n\nPRICE_VALUE\n\nThe value of the item price.\n\nYes\n\nNUMBER (20, 4)\n\nPRICE_CURRENCY\n\nThe ISO 4217 currency code of the item price.\n\nNo\n\nVARCHAR2 (3)\n\nPRICE_UNIT_OF_MEASURE\n\nThe unit of measure of the item price.\n\nNo\n\nVARCHAR2 (4)\n\nEXT_PRICE_EVENT_ID\n\nThe external price event identifier.\n\nNo\n\nNUMBER (12, 0)\n\nFor Permanent/Regular (202) Item Prices the unique key comprises the ITEM_ID, STORE_ID, PRICE_TYPE and REGULAR_PRICE_CHANGE_ID fields. For Promotional (201) Item Prices the unique key comprises the ITEM_ID, STORE_ID, PRICE_TYPE, PROMOTION_ID, PROMOTION_COMP_ID and PROMO_COMP_DTL_ID fields. For Clearance (200) Item Prices the unique key comprises the ITEM_ID, STORE_ID, PRICE_TYPE and CLEARANCE_ID fields.\n\nExample CSV File\n\nIDL-STOREITEMPRICE-*.csv\n\n1,1,2021-10-06 12:34:56,2021-10-06 12:34:56,202,N,6,,,1,GBP,2469,kg,Y,N,,,,,,1,,,,1234.5678,GBP,kg,1111\n\n1,1,2021-10-07 12:34:56,2021-10-07 12:34:56,201,N,6,1,1,1,GBP,2469,g,Y,N,Promo Name,Promo Desc,Promo Comp Name,,1,,,1,3,1234.5678,GBP,g,3333\n\n1,1,2021-10-08 12:34:56,2021-10-08 12:34:56,200,N,6,,,1,GBP,2469,lb,Y,N,,,,1,,,1,,,1234.5678,GBP,lb,5555\n\nStore Item Price History File\n\nTable 2-43 Store Item Price History File Layout\n\nField Name Description Required Type\n\nITEM_PRICE_ID\n\nThe identifier of the item price.\n\nNo\n\nNUMBER (12, 0)\n\nITEM_ID\n\nThe unique identifier of the item.\n\nYes\n\nVARCHAR2 (25)\n\nSTORE_ID\n\nThe unique identifier of the store.\n\nYes\n\nNUMBER (10, 0)\n\nEFFECTIVE_DATE\n\nThe date that the item price becomes effective in 'yyyy-MM-dd HH:mm:ss' format.\n\nNo\n\nDATE\n\nEND_DATE\n\nThe date that the item price is no longer valid in 'yyyy-MM-dd HH:mm:ss' format.\n\nNo\n\nDATE\n\nPRICE_TYPE\n\nThe item price type - 202 (Permanent/Regular), 201 (Promotional) or 200 (Clearance).\n\nYes\n\nNUMBER (3, 0)\n\nSTORE_REQUESTED\n\nFlag indicating if the item price was requested by the store - Y or N.\n\nYes\n\nVARCHAR2 (1)\n\nPROMOTION_ID\n\nThe identifier of the promotion.\n\nNo\n\nNUMBER (10, 0)\n\nPROMOTION_COMP_ID\n\nThe identifier of the promotion component.\n\nNo\n\nNUMBER (10, 0)\n\nMULTI_UNITS\n\nThe number of units involved in the multi-unit pricing of the item price.\n\nNo\n\nNUMBER (12, 4)\n\nMULTI_UNIT_RETAIL_CURRENCY\n\nThe ISO 4217 currency code of the multi-unit price.\n\nNo\n\nVARCHAR2 (3)\n\nMULTI_UNIT_RETAIL\n\nThe value of the multi-unit price.\n\nNo\n\nNUMBER (20, 4)\n\nMULTI_UNIT_UOM\n\nThe unit of measure of the multi-unit price.\n\nNo\n\nVARCHAR2 (4)\n\nMULTI_UNIT_CHANGE\n\nFlag indicating if the multi-unit price has changed - Y or N.\n\nYes\n\nVARCHAR2 (1)\n\nSELLING_UNIT_CHANGE\n\nFlag indicating if the item price has changed - Y or N.\n\nYes\n\nVARCHAR2 (1)\n\nPROMOTION_NAME\n\nThe name of the promotion.\n\nNo\n\nVARCHAR2 (160)\n\nPROMOTION_DESCRIPTION\n\nThe description of the promotion.\n\nNo\n\nVARCHAR2 (640)\n\nPROMOTION_COMP_NAME\n\nThe name of the promotion component.\n\nNo\n\nVARCHAR2 (160)\n\nRESET_CLEARANCE_ID\n\nThe clearance reset identifier.\n\nNo\n\nNUMBER (15, 0)\n\nPROMO_COMP_TYPE\n\nThe promotion component type - 0 (Complex), 1 (Simple), 2 (Threshold), 3 (Credit) or 4 (Threshold).\n\nNo\n\nNUMBER (2, 0)\n\nREGULAR_PRICE_CHANGE_ID\n\nThe identifier of the regular price change.\n\nNo\n\nNUMBER (15, 0)\n\nCLEARANCE_ID\n\nThe identifier of the clearance price change.\n\nNo\n\nNUMBER (15, 0)\n\nPROMO_COMP_DTL_ID\n\nThe identifier of the promotion component detail.\n\nNo\n\nNUMBER (15, 0)\n\nPROMO_DURATION_TYPE\n\nThe promotion duration type - 1 (All Day), 2 (Partial Day) or 3 (Multiple Day).\n\nNo\n\nNUMBER (2, 0)\n\nPRICE_VALUE\n\nThe value of the item price.\n\nYes\n\nNUMBER (20, 4)\n\nPRICE_CURRENCY\n\nThe ISO 4217 currency code of the item price.\n\nNo\n\nVARCHAR2 (3)\n\nPRICE_UNIT_OF_MEASURE\n\nThe unit of measure of the item price.\n\nNo\n\nVARCHAR2 (4)\n\nFor Permanent/Regular (202) Item Prices the unique key comprises the ITEM_ID, STORE_ID, PRICE_TYPE and REGULAR_PRICE_CHANGE_ID fields. For Promotional (201) Item Prices the unique key comprises the ITEM_ID, STORE_ID, PRICE_TYPE, PROMOTION_ID, PROMOTION_COMP_ID and PROMO_COMP_DTL_ID fields. For Clearance (200) Item Prices the unique key comprises the ITEM_ID, STORE_ID, PRICE_TYPE and CLEARANCE_ID fields.\n\nExample CSV File\n\nIDL-STOREITEMPRICEHIST-*.csv\n\n1,1,1,2021-10-06 12:34:56,2021-10-06 12:34:56,202,N,,,1,GBP,2469,kg,Y,N,,,,,,1,,,,1234.5678,GBP,kg\n\n3,1,1,2021-10-07 12:34:56,2021-10-07 12:34:56,201,N,1,1,1,GBP,2469,g,Y,N,Promo Name,Promo Desc,Promo Comp Name,,1,,,1,3,1234.5678,GBP,g\n\n5,1,1,2021-10-08 12:34:56,2021-10-08 12:34:56,200,N,,,1,GBP,2469,lb,Y,N,,,,1,,,1,,,1234.5678,GBP,lb\n\nStore UIN Admin Item File\n\nTable 2-44 Store UIN Admin Item File Layout\n\nField Name Description Required Type\n\nITEM_ID\n\nThe unique identifier of the item - this references the ITEM_ID column in the ITEM table.\n\nYes\n\nVARCHAR2 (25)\n\nSTORE_ID\n\nThe unique identifier of the store - this references the ID column in the STORE table and forms the primary key together with the ITEM_ID field.\n\nYes\n\nNUMBER (10, 0)\n\nUIN_TYPE\n\nThe UIN (Unique Identification Number) type - 1 (Serial Number) or 2 (Auto-generated Serial Number).\n\nYes\n\nNUMBER (2, 0)\n\nUIN_LABEL_ID\n\nThe UIN label identifier - SN (Serial Number), IM (IMEI), LN (License Number), PN (Plate Number) or SIN (SIN).\n\nYes\n\nVARCHAR2 (3)\n\nCAPTURE_TIME_ID\n\nThe time to capture the UIN - 1 (Sales) or 2 (Store Receiving).\n\nNo\n\nNUMBER (2, 0)\n\nEXTERNAL_CREATE_ALLOWED\n\nFlag to indicate if the UIN can be created externally - Y or N.\n\nNo\n\nVARCHAR2 (1)\n\nTICKET_FORMAT_ID\n\nThe ticket format identifier.\n\nNo\n\nNUMBER (10, 0)\n\nExample CSV File\n\nIDL-STOREUINADMINITEM-*.csv\n\n1,1,1,SN,1,N,1"
    }
}