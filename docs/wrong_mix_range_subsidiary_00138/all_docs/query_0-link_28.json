{
    "id": "wrong_mix_range_subsidiary_00138_0",
    "rank": 28,
    "data": {
        "url": "https://www.idevnews.com/stories/7067/Oracle-API-Platform-Cloud-Service-Lets-Front-End-Developers-Design-Build-and-Test-APIs-Without-Any-Backend-Help%3Fprint%3D1",
        "read_more_link": "",
        "language": "en",
        "title": "Oracle API Platform Cloud Service Lets Front-End Developers Design, Build and Test APIs –Without Any Backend Help",
        "top_image": "https://www.idevnews.com/views/images/uploads/articles/oracle api platform cloud service.jpg",
        "meta_img": "https://www.idevnews.com/views/images/uploads/articles/oracle api platform cloud service.jpg",
        "images": [
            "https://www.idevnews.com/images/photos/Oracle_Vikas Anand_ev.jpg",
            "https://www.idevnews.com/images/logos/Oracle_150.png",
            "https://www.idevnews.com/mailers/00-show-ads/soa1.jpg",
            "https://www.idevnews.com/views/images/uploads/general/Oracle API Platform Cloud Service.jpg",
            "https://ws.zoominfo.com/pixel/W5p4fWaDZdCaN5dRw86r"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            "APIs",
            "Apiary",
            "CI",
            "cloud",
            "DevOps",
            "lifecycle",
            "Oracle",
            ""
        ],
        "tags": null,
        "authors": [
            "Vance McCarthy"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "Oracle, with its acquisition of Apiary, is changing the game for API workflows.  The just-launched Oracle API Platform Cloud Service sports new tools that let front-end developers quickly design, build and test APIs – all without help from backend IT. IDN speaks with Oracle’s Vikas Anand.",
        "meta_lang": "",
        "meta_favicon": "/views/themes/default/images/favicon.ico",
        "meta_site_name": "",
        "canonical_link": "https://www.idevnews.com/",
        "text": "Oracle is flipping the script on API workflows to speed results and improve business outcomes.\n\nThe Oracle API Platform Cloud Service provides front-end developers new tools designed to let them easily design, prototype, document, secure, analyze, deploy and even test APIs – all without backend implementation.\n\nOracle’s latest API success recipe looks to be a savvy blend of Oracle’s existing cloud and API management technologies, along with API design and governance features from Apiary, which was acquired by Oracle earlier this year.\n\nWith Oracle API Platform Cloud Service, Oracle is taking ‘API-first’ a step further to let developers use APIs to deliver a ‘business-outcomes-first’ approach,’ Vikas Anand, vice president, product management for Oracle’s integration products portfolio told IDN.\n\n“With so many business transformation projects driven by APIs, users need to be able to work with APIs in a ‘business-outcomes-first’ approach,” Anand said. “So, our focus was to give developers more powerful tools so they could work with business to define a business outcome, then design against that. The goal of this is to help minimize project risk, ensuring the right product is delivered on the right timeline.”\n\n“The toolsets Oracle has assembled in Oracle API Platform Cloud Service lets front-end developers design, built, test, automatically generate documentation and even set governance policies – all before the backend writes one line of code or exposes anything from backend systems,” Anand said. “Design and governance was a big gap in the API space. We’re filling that gap,” he stated.\n\nOracle API Platform Cloud Service also simplifies life for the backend teams as well. “On the backend we have modernized backend interfaces,” Anand said. “In addition, our tool is deeply integrated with GitHub and CI. So, when customers are looking for ‘release early / release often’ we can quickly deliver.”\n\nA key there is that Oracle lets teams quickly isolate design and move APIs through CI/CD tools.\n\nKey lifecycle capabilities in the Oracle API Platform Cloud Service include a range of features, including:\n\nDesign: Collaborate company and customer requirements via API Descriptions and Build API style guides for governance and control.\n\nBuild: Create APIs on top of existing services to enable access to data formerly locked inside legacy apps and data stores.\n\nConsume: Register third-party apps easily to allow them the same seamless API utilization as pre-loaded Oracle SaaS APIs.\n\nHybrid Deployment: Choose to deploy the gateway on-premises, in Oracle Cloud or through third-party clouds with the ease of a single-click. Create API policy once, deploy everywhere—a rich lifecycle management tool.\n\nGovern: Users can create API policy once, and deploy everywhere. With simple-to-use stylesheets, users can set access/use policies and rules. Users can also assign security and threat protection to APIs with no coding, including OAuth 2.0, IP filtering, and rate limiting.\n\nMonitor: View operational API metrics on a single dashboard to take action quickly.\n\nPublish: Browse a comprehensive list of proven APIs from within the enterprise or trusted partners and third-party providers (including Oracle). Users can deploy, activate, deprecate, and remove APIs with simple mouse-click controls.\n\nSecure: Assign industry-standard security and threat protection to APIs with no coding, including OAuth 2.0, IP filtering, and rate limiting. To manage access, users can also integrate with their existing enterprise identity management systems.\n\nBecause Oracle API Platform Cloud runs on the Oracle Cloud Service, it can deliver API management as part of a comprehensive and unified PaaS solution to simplify the use of API-related tools including identity management, process management, content management, integration and applications development.\n\nOracle’s New Business-Focused API Lifecycle - A Case Study Example\n\nOracle is not simply providing a full suite of API lifecycle capabilities. Oracle is actually flipping on its head the way front end / backend teams work on APIs today, by putting the folks who build and design the solution in the driver’s seat – rather than make them ask backend IT for access or APIs (and maybe even wait longer for second or third revisions).\n\n“With Oracle API Platform Cloud Service, now the front end can ask for specific pieces of information, rather than say to the backend what do you offer?” Anand said. “So, instead of front end and backend teams going back and forth for hours – maybe days – talking about how many data fields, which data fields, can you return, we say the front end should just be able to describe which fields they need – and give the backend a quick way to deliver just those.”\n\n“We empower the front-end developer to do his job and build business-driven solutions much more quickly. Without any support from the backend [IT], Oracle API Platform Cloud Service lets front end developers:\n\nDesign the APIs he needs,\n\nCreate documentation (automatically),\n\nWrite and apply style guides (for governance) and even\n\nMock their APIs (prior to implementation) using their favorite language.\n\nA lot of this power to flip the script, giving the front end developer more control comes as a direct result of the inclusion of Apiary in the Oracle API Platform Cloud Service. “So, in a real sense, Apiary fills the gap in traditional API management space,” Anand told IDN. “The API designer / developer was dependent on the backend teams. He would basically expose a backend service as an API without focusing on the business outcome. The paradigm shift we’ve achieved with Apiary is that the developer can design the API first without being restricted by the backend implementation.”\n\nAnand walked IDN through how Oracle API Platform Cloud Service allows the front-end developer to design and build what they want — without having to wait for backend developers or IT to write or provide them an API.\n\nThink of a customer who is providing transportation for a specific region. They want to offer an Uber-like experience, so when they are using bus or rail, and see the stop time for the public, people have a much better experience. This front-end developer would build a mobile app to target the consumer of the bus or train.\n\nThe mobile design would need 3-4 things:\n\nwhere the user is\n\nwhere the user is going\n\navailable transit routes and\n\ntimes the bus (train, etc.) would stop at various locations.\n\nSo, the API designer is looking for the front-end developer to define the APIs that will provide this information.\n\nI can write the API definition, create the resource for the JSON payloads and even generate the documentation automatically. With Oracle’s approach, I have an API definition for JSON objects I need -- for the bus, the bus routes and even predictive response. I also can even define methods (gets) to get info from backend system.\n\nI can also provide governance to other developers who might also want to use these APIs using a style sheet. This will enforce governance on the front end for what the spec is that you need to follow. (There is supported for Open API (aka Swagger) or API Blueprint).\n\nThese APIs can be designed using the tooling within the Oracle API Platform Cloud Service. That tooling is a web-based user experience for the designer.\n\nOnce the API is defined, I can then push it from the developer portal to let developers build an app against it, even in its mock form. Oracle API Platform Cloud Service lets me generate a client (in any code language of my choice – Swift, JavaScript, Node JS, etc.) needed for the test.\n\nThe Mock Server lets the front-end team see the business outcomes first – without the need to work anything at the backend. Once the mock tests are successful, I can replace the mock API with an implementation service. With the mock test you are creating a representative backend interface that fills the gap between the front end developer and the backend developer. And all the while the developers can use test tools to ensure the back end implementation meets the spec already agreed.\n\nAlso, while writing the API we automatically generate the reference documentation for the API, and the client generates a stub which can be used to implement the backend code. I can take the code and say this is what I need from the backend, and (Node JS – a microservice) then I can add to it. That’s the power of this tool.\n\nSo, bottom line, the API lifecycle is streamlined, and has the added benefit of knowing the business goal has been kept in mind from the beginning.\n\nAnand summarized it this way: Developers use design tools, all based on API standards (API Blueprint, OpenAPI). Then they can automatically generate a mock service with no backend implemented. Developers can design their APIs and know they will be successful – all before they implement the detailed work in the backend.\n\nAt the backend, Oracle has also made it easier to build and implement. “We have built-in capabilities with GitHub and branching. This is really powerful because the backend [developer] now already has an API design or an API blueprint in place – so now they implement a microservice to run against that at the backend after,” he said.\n\nAnand notes the Oracle API Platform Cloud Service offers important benefits to all stakeholders -- developers, IT and business. “The end result is not a just a spec for the backend to build against. It is a real API,” Anand said. “This speeds up things enormously and makes it much clearer to backend IT what is needed.”\n\nAlso because Oracle API Platform Cloud Service provides output that is real work product – not just spec sheets – there’s more and deeper communication and teamwork among tech and business.\n\n“We’ve seen during the rollout, this approach generates much more collaboration – and less finger-pointing,” Anand told IDN. “Now, the backend developer who writes a microservice to expose the data for routes knows how to work better with the front end designer. And business stakeholders get to see an outcome much earlier in the process, and can step in to ask for changes before a lot of the deep coding happens.”\n\n“Oracle API Platform Cloud Service now brings ‘fail fast’ to the whole API lifecycle – front-end developers, backend IT, DevOps teams and business owners,” Anand told IDN. “All can play a bigger role in coming up with ways to innovate with APIs. It’s exciting times.”"
    }
}