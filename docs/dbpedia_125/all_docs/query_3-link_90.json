{
    "id": "dbpedia_125_3",
    "rank": 90,
    "data": {
        "url": "https://wiki.sogpf.com/index.php/Radio_Support",
        "read_more_link": "",
        "language": "en",
        "title": "Savage Game Design Wiki",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://wiki.sogpf.com/resources/assets/poweredby_mediawiki_88x31.png"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/favicon.ico",
        "meta_site_name": "",
        "canonical_link": null,
        "text": "Radio Support Module\n\nThis page will guide you through adding the Radio Support module to your mission.\n\nThis module allows players to request radio support to assist them with taking out enemies.\n\nMission creators can set up their own call signs including custom names, icons, descriptions, conditions, and more.\n\nEden Editor\n\nTo add the module to your mission all you need to do is place the module Radio Support into your mission.\n\nConfiguration Files\n\nThis module works off a single config class, this can either be one located in the CDLC, or one located in the missions description.ext.\n\nUse the default CDLC config as a starting point for your own config.\n\nBe aware, the #define\\'s listed at the top of the file are used later in the config to reduce duplication.\n\nStarting from the top of the example config there are nine values which can be changed,\n\ncost_variable\n\nThis is the name of a number variable which can be used to make players 'pay' for each request, each callsign will have a 'cost' value which players will need to have a higher or equal cost variable to request successfully.\n\navailability\n\nThis is the main availability array, this lets you quickly and easily determine how players should have access to the radio support action.\n\nEach item in the array can either be true '1' or false '0', each index in the array will change when the action is shown\n\n{Action will always be avaliable, Unit's backpack is in the `radio_backpacks` array, Unit's vehicle is in the `radio_vehicles` array, Unit's classname is in the `player_types` array, Unit has the `vn_artillery` unit trait}\n\ndanger_distance\n\nThis is the minimum distance to respawn markers that a request can be called. Requests that fall within this distance will not be completed.\n\ndelay_max\n\nMaximum delay for the support to arrive, regardless of the time calculated from distance to support module.\n\ncaptive\n\nDetermines if the support planes/helicopters will be set to captive.\n\nunit_trait_required\n\nSet this to 1 to only show the option to units that have the vn_artillery unit trait, does the same thing as setting the last value in the availability array to 1.\n\nradio_backpacks\n\nThis is a list of backpacks which will be considered radio backpacks for the availability array above.\n\nradio_vehicles\n\nThis is a list of vehicles which will be considered vehicles with radios for the availability array above.\n\nplayer_types\n\nThis is a list of unit class names which will be given the action when setup in the availability array above.\n\nAfter these options there are four child classes, aircraft, artillery, resupply, and transport, these child classes will contain the options that will be available to players.\n\nClasses in the aircraft class will be shown to players when they select the \"Air Support\" option on the radio.\n\nClasses in the artillery class will be shown to players when they select the \"Fire Support\" option on the radio.\n\nClasses in the resupply class will be shown to players when they select the \"Resupply\" option on the radio.\n\nClasses in the transport class will be shown to players when they select the \"Transport\" option on the radio.\n\nInside these classes there are sub category classes, these classes will be the option on the left hand side of the radio support menu.\n\nEach sub category class needs a displayname attribute which will be the name of the category.\n\nWithin the sub category class you can add the options that will be available to players.\n\nArtillery Attributes\n\nEach artillery option can have the following attributes,\n\ndisplayname\n\nThis is the name of the option that will be shown to the user\n\nicon\n\nThis is the icon which will be shown beside the option, can be left empty if you don't want an icon for this option.\n\ndescription\n\nThis is the description of the option, this will usually consist of a sentence which goes into detail about the weapons and vehicle used in the option.\n\nammo\n\nThis is an array of ammo classes which will be spawned and then explode when hitting the ground\n\ndivergence\n\nThis is the distance for in both x & y directions that the position can differ from the users selected position\n\ndelay_max\n\nMaximum delay for the support to arrive, regardless of the time calculated from distance to support module. Overwrites main config.\n\nallow_double\n\nThis will allow the user to fire the ammo twice, doubling the amount of explosives\n\ncount\n\nThis is how many times each ammo class will be spawned\n\ncooldown\n\nThis is how long users will need to wait before requesting this again\n\ntickets\n\nThis is how many times the user can call this before it cannot be called again\n\ncost\n\nThis is the cost of this option if using the cost variable\n\nillumination\n\nIs this an illumination round, affects the voice when requesting\n\nfunction\n\nIf a function is defined then the function will run instead of any explosive being spawned\n\ncondition\n\nThe condition which must return true for this option to be shown in the list\n\nspeed\n\nThis is the speed of the request, used to determine how long the user should wait before the ammo starts to explode.\n\nAircraft Attributes\n\nEach aircraft option can have the following attributes,\n\ndisplayname\n\nThis is the name of the option that will be shown to the user\n\nicon\n\nThis is the icon which will be shown beside the option, can be left empty if you don't want an icon for this option.\n\ndescription\n\nThis is the description of the option, this will usually consist of a sentence which goes into detail about the weapons and vehicle used in the option.\n\nvehicleclass\n\nThis is the classname of the vehicle which will be used to complete the request, should be either a helicopter or a plane\n\ndivergence\n\nThis is the danger distance for the request, used to let users know how large of an area will be hit by the aircraft\n\nallow_double\n\nThis will allow the user to request two aircraft at the same time\n\ncooldown\n\nThis is how long users will need to wait before requesting this again\n\ntickets\n\nThis is how many times the user can call this before it cannot be called again\n\ncost\n\nThis is the cost of this option if using the cost variable\n\nillumination\n\nIs this an illumination request, affects the voice when requesting\n\nfunction\n\nIf a function is defined then the function will run instead of any vehicles being spawned\n\ncondition\n\nThe condition which must return true for this option to be shown in the list\n\nmagazines\n\nThis is the array of pylon magazines which will be added to the vehicles pylons\n\nResupply Attributes\n\nEach resupply option can have the following attributes,\n\ndisplayname\n\nThis is the name of the option that will be shown to the user\n\nicon\n\nThis is the icon which will be shown beside the option, can be left empty if you don't want an icon for this option.\n\ndescription\n\nThis is the description of the option, this will usually consist of a sentence which goes into detail about the container and aircraft used in the option.\n\nvehicleclass\n\nThis is the classname of the vehicle which will be used to complete the request, should be either a helicopter or a plane.\n\ncontainerclass\n\nThis is the classname of the container which will be used to complete the request, should be a container either with or without items.\n\nitems\n\nThis is the array of items which will be added to the container, can be left empty if you want to use the items alraedy in the container.\n\ncooldown\n\nThis is how long users will need to wait before requesting this again\n\ncost\n\nThis is the cost of this option if using the cost variable\n\nTransport Attributes\n\nEach transport option can have the following attributes,\n\ndisplayname\n\nThis is the name of the option that will be shown to the user\n\nicon\n\nThis is the icon which will be shown beside the option, can be left empty if you don't want an icon for this option.\n\ndescription\n\nThis is the description of the option, this will usually consist of a sentence which goes into detail about the vehicle used in the option.\n\nvehicleclass\n\nThis is the classname of the vehicle which will be used to complete the request, should be a helicopter with spare seats for transport.\n\nhook\n\nThis is an old attribute which is no longer used, does not need to be included.\n\ncooldown\n\nThis is how long users will need to wait before requesting this again\n\ncost\n\nThis is the cost of this option if using the cost variable\n\nDuring Gameplay\n\nPlayers can access the radio support menu through the scroll wheel action menu.\n\nThe radio at the top of the menu has an interactable knob which switches between \"Air Support\", \"Fire Support\", \"Transport\", and \"Resupply\"."
    }
}