{
    "id": "dbpedia_610_0",
    "rank": 34,
    "data": {
        "url": "https://computerscience.fandom.com/wiki/List_of_computer_scientists",
        "read_more_link": "",
        "language": "en",
        "title": "List of computer scientists",
        "top_image": "https://static.wikia.nocookie.net/computerscience/images/e/e6/Site-logo.png/revision/latest?cb=20210719143148",
        "meta_img": "https://static.wikia.nocookie.net/computerscience/images/e/e6/Site-logo.png/revision/latest?cb=20210719143148",
        "images": [
            "https://static.wikia.nocookie.net/computerscience/images/e/e6/Site-logo.png/revision/latest?cb=20210719143148",
            "https://static.wikia.nocookie.net/ff185fe4-8356-4b6b-ad48-621b95a82a1d",
            "https://static.wikia.nocookie.net/f3fc9271-3d5e-4c73-9afc-e6a9f6154ff1",
            "https://static.wikia.nocookie.net/464fc70a-5090-490b-b47e-0759e89c263f",
            "https://static.wikia.nocookie.net/f7bb9d33-4f9a-4faa-88fe-2a0bd8138668"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Computer-science Wiki"
        ],
        "publish_date": null,
        "summary": "",
        "meta_description": "This is a list of computer scientists, people who do work in computer science, in particular researchers and authors. Some persons notable as programmers are included here because they work in research as well as program. A few of these people pre-date the invention of the digital computer; they...",
        "meta_lang": "en",
        "meta_favicon": "https://static.wikia.nocookie.net/computerscience/images/4/4a/Site-favicon.ico/revision/latest?cb=20210719143150",
        "meta_site_name": "Computer-science Wiki",
        "canonical_link": "https://computerscience.fandom.com/wiki/List_of_computer_scientists",
        "text": "This is a list of computer scientists, people who do work in computer science, in particular researchers and authors.\n\nSome persons notable as programmers are included here because they work in research as well as program. A few of these people pre-date the invention of the digital computer; they are now regarded as computer scientists because their work can be seen as leading to the invention of the computer. Others are mathematicians whose work falls within what would now be called theoretical computer science, such as complexity theory and algorithmic information theory.\n\nA[]\n\nWil van der Aalst – business process management, process mining, Petri nets\n\nScott Aaronson – quantum computing and complexity theory\n\nHal Abelson – intersection of computing and teaching\n\nSerge Abiteboul – database theory\n\nSamson Abramsky – game semantics\n\nLeonard Adleman – RSA, DNA computing\n\nManindra Agrawal – polynomial-time primality testing\n\nLuis von Ahn – human-based computation\n\nAlfred Aho – compilers book, the 'a' in AWK\n\nFrances E. Allen – compiler optimization\n\nGene Amdahl – supercomputer developer, founder of Amdahl Corporation\n\nDavid P. Anderson – volunteer computing\n\nAndrew Appel – compiler of text books\n\nCecilia R. Aragon – inventor of the treap, human-centered data science\n\nBruce Arden – programming language compilers (GAT, MAD), virtual memory architecture, MTS\n\nSanjeev Arora – PCP theorem\n\nWinifred \"Tim\" Alice Asprey – established the computer science curriculum at Vassar College\n\nJohn Vincent Atanasoff – computer pioneer, creator of ABC or Atanasoff Berry Computer\n\nB[]\n\nCharles Babbage (1791–1871) – invented first mechanical computer called the supreme mathematician\n\nCharles Bachman – American computer scientist, known for Integrated Data Store\n\nRoland Carl Backhouse – mathematics of program construction\n\nJohn Backus – FORTRAN, Backus–Naur form, first complete compiler\n\nDavid F. Bacon – Programming languages, garbage collection\n\nDavid A. Bader\n\nVictor Bahl\n\nAnthony James Barr – SAS System\n\nJean Bartik (1924–2011) – one of the first computer programmers, on ENIAC (1946), one of the first Vacuum tube computers, back when \"programming\" involved using cables, dials, and switches to physically rewire the machine; worked with John Mauchly toward BINAC (1949), EDVAC (1949), UNIVAC (1951) to develop early \"stored program\" computers\n\nAndrew Barto\n\nRudolf Bayer – B-tree\n\nJames C. Beatty (1934–1978) – compiler optimization,[1] super-computing[2]\n\nGordon Bell (born 1934) – computer designer DEC VAX, author: Computer Structures\n\nSteven M. Bellovin – network security\n\nTim Berners-Lee – World Wide Web\n\nDaniel J. Bernstein – qmail, software as protected speech\n\nPeter Bernus\n\nAbhay Bhushan\n\nDines Bjørner – Vienna Development Method (VDM), RAISE\n\nGerrit Blaauw – one of the principal designers of the IBM System 360 line of computers\n\nSue Black\n\nDavid Blei\n\nDorothy Blum – National Security Agency\n\nLenore Blum – complexity\n\nManuel Blum – cryptography\n\nBarry Boehm – software engineering economics, spiral development\n\nCorrado Bohm – author of the structured program theorem\n\nKurt Bollacker\n\nJeff Bonwick – inventor of slab allocation and ZFS\n\nGrady Booch – Unified Modeling Language, Object Management Group\n\nGeorge Boole – Boolean logic\n\nAndrew Booth – developed the first rotating drum storage device\n\nKathleen Booth – developed the first assembly language\n\nAnita Borg (1949–2003) – American computer scientist, founder of Anita Borg Institute for Women and Technology\n\nBert Bos – Cascading Style Sheets\n\nMikhail Botvinnik – World Chess Champion, computer scientist and electrical engineer, pioneer of early expert system AI,inventor of Computer chess\n\nJonathan Bowen – Z notation, formal methods\n\nStephen R. Bourne – Bourne shell, portable ALGOL 68C compiler\n\nHarry Bouwman (born 1953) – Dutch Information systems researcher, and Professor at the Åbo Akademi University\n\nRobert S. Boyer – string searching, ACL2 theorem prover\n\nKarlheinz Brandenburg – Main mp3 contributor\n\nJack E. Bresenham – early computer-graphics contributions, including Bresenham's algorithm\n\nSergey Brin – co-founder of Google\n\nDavid J. Brown – unified memory architecture, binary compatibility\n\nPer Brinch Hansen (surname \"Brinch Hansen\") – concurrency\n\nSjaak Brinkkemper – methodology of product software development\n\nFred Brooks – System 360, OS/360, The Mythical Man-Month, No Silver Bullet\n\nRod Brooks\n\nMichael Butler – Event-B\n\nC[]\n\nLee Calcote – cloud computing\n\nTracy Camp – wireless computing\n\nMartin Campbell-Kelly – history of computing\n\nRosemary Candlin\n\nBryan Cantrill – inventor of DTrace\n\nLuca Cardelli – objects\n\nEdwin Catmull – computer graphics\n\nVinton Cerf – Internet, TCP/IP\n\nGregory Chaitin\n\nZhou Chaochen – duration calculus\n\nPeter Chen – entity-relationship model, data modeling, conceptual model\n\nLeonardo Chiariglione, founder of MPEG\n\nAlonzo Church – mathematics of combinators, lambda calculus\n\nAlberto Ciaramella - speech recognition, patent informatics\n\nEdmund M. Clarke – model checking\n\nJohn Cocke – RISC\n\nEdgar F. Codd (1923–2003) – formulated the database relational model\n\nJacques Cohen – computer science professor\n\nSimon Colton – computational creativity\n\nAlain Colmerauer – Prolog\n\nPaul Justin Compton – Ripple Down Rules\n\nGordon Cormack – co-inventor of dynamic Markov compression\n\nStephen Cook – NP-completeness\n\nJames Cooley – Fast Fourier transform (FFT)\n\nDanese Cooper – Open Source Software\n\nFernando J. Corbató – Compatible Time-Sharing System (CTSS), Multics\n\nKit Cosper - Open Source Software\n\nPatrick Cousot – abstract interpretation\n\nIngemar Cox – digital watermarking\n\nSeymour Cray – Cray Research, supercomputer\n\nNello Cristianini – machine learning, pattern analysis, artificial intelligence\n\nJon Crowcroft – networking\n\nW. Bruce Croft\n\nGlen Culler – interactive computing, computer graphics, high performance computing\n\nHaskell Curry\n\nD[]\n\nLuigi Dadda – designer of the Dadda multiplier\n\nOle-Johan Dahl – Simula\n\nRyan Dahl – founder of node.js project\n\nAndries van Dam – computer graphics, hypertext\n\nSamir Das – Wireless Networks, Mobile Computing, Vehicular ad hoc network, Sensor Networks, Mesh networking, Wireless ad hoc network\n\nChristopher J. Date – proponent of database relational model\n\nJeff Dean – Bigtable, MapReduce, Spanner of Google\n\nErik Demaine – computational origami\n\nTom DeMarco\n\nRichard DeMillo – computer security, software engineering, educational technology\n\nDorothy E. Denning – computer security\n\nPeter J. Denning – identified the use of an operating system's working set and balance set, President of ACM\n\nMichael Dertouzos – Director of Massachusetts Institute of Technology (MIT) Laboratory for Computer Science (LCS) from 1974 to 2001\n\nAlexander Dewdney\n\nVinod Dham – P5 Pentium processor\n\nJan Dietz (born 1945) (decay constant) – information systems theory and Design & Engineering Methodology for Organizations\n\nWhitfield Diffie (born 1944) (linear response function) – public key cryptography, Diffie–Hellman key exchange\n\nEdsger Dijkstra – algorithms, Goto considered harmful, semaphore (programming)\n\nAlan Dix – literally wrote the book on human–computer interaction\n\nJack Dongarra – linear algebra high performance computing (HCI)\n\nMarco Dorigo – ant colony optimization\n\nPaul Dourish – human computer interaction\n\nCharles Stark Draper (1901–1987) – designer of Apollo Guidance Computer, \"father of inertial navigation\", MIT professor\n\nSusan Dumais – information retrieval\n\nE[]\n\nPeter Eades – graph drawing\n\nAnnie J. Easley\n\nWim Ebbinkhuijsen – COBOL\n\nJohn Presper Eckert – ENIAC\n\nBrendan Eich – JavaScript, Mozilla\n\nPhilip Emeagwali – supercomputing\n\nE. Allen Emerson – model checking\n\nDouglas Engelbart – tiled windows, hypertext, computer mouse\n\nDavid Eppstein\n\nAndrey Ershov\n\nDon Estridge (1937–1985) – led development of original IBM Personal Computer (PC); known as \"father of the IBM PC\"\n\nOren Etzioni – MetaCrawler, Netbot\n\nChristopher Riche Evans\n\nDavid C. Evans – computer graphics\n\nShimon Even\n\nF[]\n\nScott Fahlman\n\nEdward Feigenbaum – intelligence\n\nEdward Felten – computer security\n\nTim Finin\n\nRaphael Finkel\n\nDonald Firesmith\n\nGary William Flake\n\nTommy Flowers – Colossus computer\n\nRobert Floyd – NP-completeness\n\nSally Floyd – Internet congestion control\n\nLawrence J. Fogel – Evolutionary programming\n\nJames D. Foley\n\nKen Forbus\n\nLance Fortnow\n\nMartin Fowler\n\nHerbert W. Franke\n\nEdward Fredkin\n\nYoav Freund\n\nDaniel P. Friedman\n\nPing Fu\n\nG[]\n\nRichard Gabriel\n\nV. K. Govindan\n\nZvi Galil\n\nBernard Galler – MAD (programming language)\n\nHector Garcia-Molina\n\nMichael Garey – NP-completeness\n\nHugo de Garis\n\nBill Gates – co-founder of Microsoft\n\nDavid Gelernter\n\nCharles Geschke\n\nZoubin Ghahramani\n\nSanjay Ghemawat\n\nJuan E. Gilbert – Human-Centered Computing\n\nLee Giles – CiteSeer\n\nSeymour Ginsburg – formal languages, automata theory, AFL theory, database theory\n\nRobert L. Glass\n\nKurt Gödel – computability – not a computer scientist per se, but his work was invaluable in the field\n\nJoseph Goguen\n\nAdele Goldberg – Smalltalk\n\nAndrew V. Goldberg -- algorithms, algorithm engineering\n\nIan Goldberg – cryptographer, off-the-record messaging\n\nOded Goldreich – cryptography, computational complexity theory\n\nShafi Goldwasser – cryptography, computational complexity theory\n\nGene Golub – Matrix computation\n\nMartin Charles Golumbic – algorithmic graph theory\n\nGastón Gonnet – co-founder of Waterloo Maple Inc.\n\nJames Gosling – NeWS, Java\n\nPaul Graham – Viaweb, On Lisp, Arc\n\nRobert M. Graham – programming language compilers (GAT, MAD), virtual memory architecture, Multics\n\nSusan L. Graham – compilers, programming environments\n\nJim Gray – database\n\nSheila Greibach – Greibach normal form, AFL theory\n\nRalph Griswold – SNOBOL\n\nBill Gropp – Message Passing Interface, PETSc\n\nTom Gruber\n\nRamanathan V. Guha – RDF, Netscape, RSS, Epinions\n\nNeil J. Gunther – computer performance analysis, capacity planning\n\nPeter G. Gyarmati – adaptivity in operating systems and networking\n\nH[]\n\nPhilipp Matthäus Hahn – mechanical calculator\n\nEldon C. Hall – Apollo Guidance Computer\n\nWendy Hall\n\nJoseph Halpern\n\nMargaret Hamilton – ultra-reliable software design\n\nRichard Hamming – Hamming code, founder of the Association for Computing Machinery\n\nJiawei Han – data mining\n\nJuris Hartmanis – computational complexity theory\n\nJohan Håstad – computational complexity theory\n\nLes Hatton – software failure and vulnerabilities\n\nIgor Hawryszkiewycz, (born 1948), American computer scientist and organizational theorist\n\nHe Jifeng – provably correct systems\n\nEric Hehner – predicative programming, formal methods, quote notation\n\nMartin Hellman – encryption\n\nGernot Heiser – development of L4 and founder of OK Labs\n\nJames Hendler – Semantic Web\n\nJohn L. Hennessy – computer architecture\n\nAndrew Herbert\n\nCarl Hewitt\n\nDanny Hillis – Connection Machine\n\nGeoffrey Hinton\n\nJulia Hirschberg\n\nC. A. R. Hoare – logic, rigor, Communicating sequential processes (CSP)\n\nBetty Holberton – ENIAC programmer, developed the first Sort Merge Generator\n\nJohn Henry Holland – genetic algorithms\n\nHerman Hollerith (1860–1929) – invented recording of data on a machine readable medium, using punched cards\n\nGerard Holzmann – software verification, logic model checking (SPIN)\n\nJohn Hopcroft – compilers\n\nAdmiral Grace Hopper (1906–1992) – developed early compilers: FLOW-Matic, COBOL; worked on UNIVAC; gave speeches on computer history, where she gave out nano-seconds\n\nEric Horvitz – artificial intelligence\n\nAlston Householder\n\nPaul Hudak (1952–2015) – Haskell programming language design\n\nDavid A. Huffman (1925–1999) – Huffman coding, used in data compression\n\nJohn Hughes – structuring computations with arrows; QuickCheck randomized program testing framework; Haskell programming language design.\n\nWatts Humphrey (1927–2010) – Personal Software Process (PSP), Software quality, Team Software Process (TSP)\n\nI[]\n\nJean Ichbiah – Ada\n\nDan Ingalls – Smalltalk, BitBlt, Lively Kernel\n\nMary Jane Irwin\n\nKenneth E. Iverson – APL, J\n\nJ[]\n\nIvar Jacobson – Unified Modeling Language, Object Management Group\n\nAnil K. Jain (born 1948)\n\nRamesh Jain\n\nJonathan James\n\nDavid S. Johnson\n\nStephen C. Johnson\n\nCliff Jones – Vienna Development Method (VDM)\n\nMichael I. Jordan\n\nMathai Joseph\n\nAravind K. Joshi\n\nBill Joy (born 1954) – Sun Microsystems, BSD UNIX, vi, csh\n\nDan Jurafsky – Natural language processing\n\nK[]\n\nWilliam Kahan – numerical analysis\n\nRobert E. Kahn – TCP/IP\n\nAvinash Kak – digital image processing\n\nPoul-Henning Kamp – inventor of GBDE, FreeBSD Jails, Varnish cache\n\nDavid Karger\n\nRichard Karp – NP-completeness\n\nNarendra Karmarkar – Karmarkar's algorithm\n\nMarek Karpinski – NP optimization problems\n\nAlan Kay – Dynabook, Smalltalk, overlapping windows\n\nNeeraj Kayal – AKS primality test\n\nJohn George Kemeny – BASIC\n\nKen Kennedy – compiling for parallel and vector machines\n\nBrian Kernighan (born 1942) – Unix, the 'k' in AWK\n\nCarl Kesselman – grid computing\n\nGregor Kiczales – CLOS, reflection, aspect-oriented programming\n\nPeter T. Kirstein – Internet\n\nStephen Cole Kleene – Kleene closure, recursion theory\n\nDan Klein – Natural language processing, Machine translation\n\nLeonard Kleinrock – ARPANET, queueing theory, packet switching, hierarchical routing\n\nDonald Knuth – The Art of Computer Programming, MIX/MMIX, TeX, literate programming\n\nAndrew Koenig – C++\n\nDaphne Koller – Artificial intelligence, bayesian network\n\nMichael Kölling – BlueJ\n\nAndrey Nikolaevich Kolmogorov – algorithmic complexity theory\n\nJanet L. Kolodner – case-based reasoning\n\nDavid Korn – Korn shell\n\nKees Koster – ALGOL 68\n\nRobert Kowalski – logic programming\n\nJohn Koza – genetic programming\n\nJohn Krogstie – SEQUAL framework\n\nJoseph Kruskal – Kruskal's algorithm\n\nThomas E. Kurtz (born 1928) – BASIC programming language; Dartmouth College computer professor\n\nL[]\n\nMonica S. Lam\n\nLeslie Lamport – algorithms for distributed computing, LaTeX\n\nButler W. Lampson\n\nPeter J. Landin\n\nTom Lane\n\nBörje Langefors\n\nChris Lattner – creator of Swift (programming language) and LLVM compiler infrastructure\n\nSteve Lawrence\n\nEdward D. Lazowska\n\nJoshua Lederberg\n\nManny M Lehman\n\nCharles E. Leiserson – cache-oblivious algorithms, provably good work-stealing, coauthor of Introduction to Algorithms\n\nDouglas Lenat – artificial intelligence, Cyc\n\nYann LeCun\n\nRasmus Lerdorf – PHP\n\nMax Levchin – Gausebeck-Levchin test and PayPal\n\nLeonid Levin – computational complexity theory\n\nKevin Leyton-Brown – artificial intelligence\n\nJ.C.R. Licklider\n\nDavid Liddle\n\nJohn Lions – Lions Book\n\nRichard J. Lipton – computational complexity theory\n\nBarbara Liskov – programming languages\n\nDarrell Long – Computer data storage\n\nPatricia D. Lopez – broadening participation in computing\n\nGillian Lovegrove\n\nAda Lovelace – first programmer\n\nEugene Luks\n\nNancy Lynch\n\nM[]\n\nNadia Magnenat Thalmann – computer graphics, virtual actor\n\nTom Maibaum\n\nZohar Manna – fuzzy logic\n\nJames Martin – information engineering\n\nRobert C. Martin (Uncle Bob) – software craftsmanship\n\nJohn Mashey\n\nYuri Matiyasevich – solving Hilbert's tenth problem\n\nYukihiro Matsumoto – Ruby (programming language)\n\nJohn Mauchly (1907–1980) – designed ENIAC, first general-purpose electronic digital computer, as well as EDVAC, BINAC and UNIVAC I, the first commercial computer; worked with Jean Bartik on ENIAC and Grace Murray Hopper on UNIVAC\n\nDerek McAuley – ubiquitous computing, computer architecture, networking\n\nJohn McCarthy – Lisp (programming language), artificial intelligence\n\nAndrew McCallum\n\nDouglas McIlroy – pipes\n\nChris McKinstry – artificial intelligence, Mindpixel\n\nMarshall Kirk McKusick – BSD, Berkeley Fast File System\n\nLambert Meertens – ALGOL 68, ABC (programming language)\n\nBertrand Meyer – Eiffel (programming language)\n\nSilvio Micali – cryptography\n\nRobin Milner – ML (programming language)\n\nJack Minker – database logic\n\nMarvin Minsky – artificial intelligence, perceptrons, Society of Mind\n\nTom M. Mitchell\n\nPaul Mockapetris – Domain Name System (DNS)\n\nCleve Moler – numerical analysis, MATLAB\n\nJohn P. Moon – inventor, Apple Inc.\n\nCharles H. Moore – Forth programming language\n\nEdward F. Moore – Moore machine\n\nGordon Moore – Moore's law\n\nJ Strother Moore – string searching, ACL2 theorem prover\n\nHans Moravec – robotics\n\nCarroll Morgan\n\nRobert Tappan Morris – Morris worm\n\nJoel Moses – Macsyma\n\nRajeev Motwani – randomized algorithm\n\nStephen Muggleton – Inductive Logic Programming\n\nAlan Mycroft – programming languages\n\nN[]\n\nMihai Nadin – anticipation research\n\nMakoto Nagao – machine translation, natural language processing, digital library\n\nFrieder Nake – pioneered computer arts\n\nPeter Naur – BNF, ALGOL 60\n\nRoger Needham – computer security\n\nJames G. Nell – GERAM\n\nBernard de Neumann – massively parallel autonomous cellular processor, software engineering research\n\nKlara Dan von Neumann (1911-1963) – early computers, ENIAC programmer and control designer\n\nJohn von Neumann (1903–1957) – early computers, von Neumann machine, set theory, functional analysis, mathematics pioneer, linear programming, quantum mechanics\n\nAllen Newell – artificial intelligence, Computer Structures\n\nMax Newman – Colossus, MADM\n\nAndrew Ng – artificial intelligence, machine learning, robotics\n\nNils Nilsson – artificial intelligence\n\nG.M. Nijssen – NIAM\n\nTobias Nipkow – proof assistance\n\nJerre Noe – computerized banking\n\nPeter Nordin – artificial intelligence, genetic programming, evolutionary robotics\n\nDonald Norman – user interfaces, usability\n\nPeter Norvig – artificial intelligence, Director of Research at Google\n\nGeorge Novacky – Assistant Department Chair and Senior Lecturer in Computer Science, Assistant Dean of CAS for Undergraduate Studies at University of Pittsburgh\n\nKristen Nygaard – Simula\n\nO[]\n\nT. William Olle – Ferranti Mercury\n\nSteve Omohundro\n\nJohn Ousterhout – Tcl programming Language\n\nMark Overmars – game programming\n\nMartin Odersky – Scala programming Language\n\nSevero Ornstein\n\nJohn O'Sullivan- wifi\n\nP[]\n\nLarry Page – co-founder of Google\n\nSankar Pal\n\nParitosh Pandya\n\nChristos Papadimitriou\n\nDavid Parnas – information hiding, modular programming\n\nYale Patt – Instruction-level parallelism, speculative architectures\n\nDavid A. Patterson\n\nMihai Pătraşcu – data structures\n\nLawrence Paulson – ML\n\nRandy Pausch (1960–2008) – Human-Computer interaction, Carnegie professor, \"Last Lecture\"\n\nJuan Pavón – software agents\n\nJudea Pearl – artificial intelligence, search algorithms\n\nDavid Pearson – CADES, computer graphics\n\nAlan Perlis – Programming Pearls\n\nRadia Perlman – spanning tree protocol\n\nPier Giorgio Perotto – designer of Programma 101, arguably the first personal computer\n\nRózsa Péter – recursive function theory\n\nSimon Peyton Jones – functional programming\n\nRoberto Pieraccini – Speech technologist, technical director at Jibo Inc.\n\nGordon Plotkin\n\nAmir Pnueli – temporal logic\n\nWillem van der Poel – computer graphics, robotics, geographic information systems, imaging, multimedia, virtual environments, games\n\nEmil Post – mathematics\n\nJon Postel – Internet\n\nFranco Preparata – computer engineering, computational geometry, parallel algorithms, computational biology\n\nWilliam H. Press – numerical algorithms\n\nR[]\n\nRapelang Rabana\n\nRoberto Ierusalimschy – Lua (programming language)\n\nMichael O. Rabin – nondeterministic machine\n\nDragomir R. Radev – Natural language processing, Information Retrieval\n\nT. V. Raman – accessibility, Emacspeak\n\nBrian Randell – dependability\n\nRaj Reddy – AI\n\nDavid P. Reed\n\nTrygve Reenskaug – Model-view-controller (MVC) software architecture pattern\n\nJohn C. Reynolds\n\nJoyce K. Reynolds – Internet\n\nBernard Richards – medical informatics\n\nMartin Richards – BCPL\n\nAdam Riese\n\nC. J. van Rijsbergen\n\nDennis Ritchie – C (programming language), UNIX\n\nRon Rivest – RSA, MD5, RC4\n\nColette Rolland – REMORA methodology, meta modelling\n\nAzriel Rosenfeld\n\nDouglas T. Ross – Structured Analysis and Design Technique\n\nGuido van Rossum – Python (programming language)\n\nWinston W. Royce – Waterfall model\n\nRudy Rucker – mathematician, writer, educator\n\nSteven Rudich – complexity theory, cryptography\n\nJeff Rulifson\n\nJames Rumbaugh – Unified Modeling Language, Object Management Group\n\nPeter Ružička – Slovak computer scientist and mathematician\n\nS[]\n\nGeorge Sadowsky\n\nGerard Salton – information retrieval\n\nJean E. Sammet – programming languages\n\nClaude Sammut – artificial-intelligence researcher\n\nCarl Sassenrath – operating systems, programming languages, Amiga, REBOL\n\nMahadev Satyanarayanan – file systems, distributed systems, mobile computing, pervasive computing\n\nWalter Savitch – discovery of complexity class NL, Savitch's theorem, natural language processing, mathematical linguistics\n\nJonathan Schaeffer\n\nWilhelm Schickard – one of the first calculating machines\n\nSteve Schneider – formal methods, security\n\nBruce Schneier – cryptography, security\n\nFred B. Schneider – concurrent and distributed computing\n\nDana Scott – domain theory\n\nMichael L. Scott – programming languages, algorithms, distributed computing\n\nRavi Sethi – compilers, 2nd Dragon Book\n\nNigel Shadbolt\n\nAdi Shamir – RSA, cryptanalysis\n\nClaude Shannon – information theory\n\nDavid E. Shaw – computational finance, computational biochemistry, parallel architectures\n\nCliff Shaw – systems programmer, artificial intelligence\n\nScott Shenker – networking\n\nBen Shneiderman – human-computer interaction, information visualization\n\nEdward H. Shortliffe – MYCIN (medical diagnostic expert system)\n\nJoseph Sifakis – model checking\n\nHerbert A. Simon – artificial intelligence\n\nMunindar P. Singh – multiagent systems, software engineering, artificial intelligence, social networks\n\nRamesh Sitaraman – helped build Akamai's high performance network\n\nDaniel Sleator – splay tree, amortized analysis\n\nAaron Sloman – artificial intelligence and cognitive science\n\nArne Sølvberg – information modelling\n\nBrian Cantwell Smith – reflection (computer science), 3lisp\n\nSteven Spewak – Enterprise architecture planning\n\nCarol Spradling\n\nRobert Sproull\n\nRohini Kesavan Srihari – Information Retrieval, Text Analytics, Multilingual Text Mining\n\nSargur Srihari – Pattern Recognition, Machine learning, Computational criminology, CEDAR-FOX\n\nMaciej Stachowiak – GNOME, Safari, WebKit\n\nRichard Stallman (born 1953) – GNU Project\n\nRonald Stamper\n\nRichard E. Stearns – computational complexity theory\n\nGuy L. Steele, Jr. – Scheme, Common Lisp\n\nThomas Sterling – creator of Beowulf clusters\n\nW. Richard Stevens (1951–1999) – author of books, including TCP/IP Illustrated and Advanced Programming in the Unix Environment\n\nLarry Stockmeyer – computational complexity, distributed computing\n\nSalvatore Stolfo - computer security, machine learning\n\nMichael Stonebraker – relational database practice and theory\n\nOlaf Storaasli – finite element machine, linear algebra, high performance computing\n\nChristopher Strachey – denotational semantics\n\nBjarne Stroustrup – C++\n\nMadhu Sudan – computational complexity theory, coding theory\n\nGerald Jay Sussman – Scheme\n\nBert Sutherland – graphics, Internet\n\nIvan Sutherland – graphics\n\nMario Szegedy – complexity theory, quantum computing\n\nIrvan Smith (Mr. Vero) - artificial intelligence\n\nT[]\n\nRoberto Tamassia – computational geometry, computer security\n\nAndrew S. Tanenbaum – operating systems, MINIX\n\nBernhard Thalheim – conceptual modelling foundation\n\nÉva Tardos\n\nGábor Tardos\n\nRobert Tarjan – splay tree\n\nValerie Taylor\n\nMario Tchou – italian engineer, of Chinese descent, leader of Olivetti Elea project\n\nJaime Teevan\n\nShang-Hua Teng – analysis of algorithms\n\nLarry Tesler – human-computer interaction, graphical user interface, Apple Macintosh\n\nAvie Tevanian – Mach kernel team, NeXT, Mac OS X\n\nCharles P. Thacker – Xerox Alto, Microsoft Research\n\nDaniel Thalmann – computer graphics, virtual actor\n\nKen Thompson – Unix\n\nSebastian Thrun – AI researcher and inventor of autonomous driving\n\nWalter F. Tichy – RCS\n\nSeinosuke Toda – computation complexity, recipient of 1998 Gödel Prize\n\nLinus Torvalds – Linux kernel, Git\n\nGodfried Toussaint – computational geometry – computational music theory\n\nGloria Townsend\n\nEdwin E. Tozer – business information systems\n\nJoseph F Traub – computational complexity of scientific problems\n\nJohn Tukey – founder of FFT algorithm, Box plot, Exploratory Data Analysis and Coining the term 'bit'\n\nMurray Turoff – computer-mediated communication\n\nAlan Turing (1912–1954) – British computing pioneer, Turing machine, algorithms, cryptology, computer architecture\n\nU[]\n\nJeffrey D. Ullman – compilers, databases, complexity theory\n\nUmar Saif\n\nV[]\n\nLeslie Valiant – computational complexity theory, computational learning theory\n\nVladimir Vapnik – pattern recognition, computational learning theory\n\nMoshe Vardi – professor of computer science at Rice University\n\nDorothy Vaughan\n\nUmesh Vazirani\n\nVijay Vazirani\n\nManuela M. Veloso\n\nFrançois Vernadat – enterprise modeling\n\nRichard Veryard – enterprise modeling\n\nPaul Vitanyi – Kolmogorov complexity, Information distance, Normalized compression distance, Normalized Google distance\n\nAndrew Viterbi – Viterbi algorithm\n\nJeffrey Scott Vitter – external memory algorithms, compressed data structures, data compression, databases\n\nPaul Vixie – DNS, BIND, PAIX, Internet Software Consortium, MAPS, DNSBL\n\nW[]\n\nDavid Wagner – security, cryptography\n\nLarry Wall – Perl programming language\n\nDavid Waltz\n\nJames Z. Wang\n\nSteve Ward\n\nManfred K. Warmuth – computational learning theory\n\nDavid H. D. Warren – AI, logic programming, Prolog, the 'w' in WAM\n\nKevin Warwick – artificial intelligence\n\nJan Weglarz\n\nPeter Wegner – object-oriented programming, interaction (computer science)\n\nPeter J. Weinberger – programming language design, the 'w' in AWK\n\nMark Weiser – ubiquitous computing\n\nJoseph Weizenbaum – artificial intelligence, ELIZA\n\nDavid Wheeler – EDSAC, subroutines\n\nFranklin H. Westervelt – use of computers in engineering education, conversational use of computers, MTS, ARPANET, distance learning\n\nSteve Whittaker – human computer interaction, computer support for cooperative work, social media\n\nJennifer Widom – nontraditional data management\n\nGio Wiederhold – database management systems\n\nNorbert Wiener – Cybernetics\n\nAdriaan van Wijngaarden – Dutch pioneer; ARRA, ALGOL\n\nMary Allen Wilkes – LINC developer, assembler-linker designer\n\nMaurice Vincent Wilkes – microprogramming, EDSAC\n\nYorick Wilks – computational linguistics, artificial intelligence\n\nJames H. Wilkinson – numerical analysis\n\nSophie Wilson – ARM architecture\n\nShmuel Winograd – Coppersmith–Winograd algorithm\n\nTerry Winograd – artificial intelligence, SHRDLU\n\nPatrick Winston – artificial intelligence\n\nNiklaus Wirth – Pascal, Modula, Oberon (programming language)\n\nNeil Wiseman – computer graphics\n\nDennis E. Wisnosky – Integrated Computer-Aided Manufacturing (ICAM), IDEF\n\nStephen Wolfram – Mathematica\n\nMike Woodger – Pilot ACE, ALGOL 60, Ada (programming language)\n\nBeatrice Helen Worsley – wrote the first PhD dissertation involving modern computers; was one of the people who wrote Transcode\n\nSteve Wozniak – engineered first generation personal computers at Apple Computer\n\nJie Wu – computer networks\n\nWilliam Wulf – compilers\n\nY[]\n\nMihalis Yannakakis\n\nAndrew Chi-Chih Yao\n\nJohn Yen\n\nEdward Yourdon – Structured Systems Analysis and Design Method\n\nMoti Yung\n\nZ[]\n\nLotfi Zadeh – fuzzy logic\n\nHans Zantema – termination analysis\n\nArif Zaman – pseudo-random number generator\n\nShlomo Zilberstein – artificial intelligence, anytime algorithms, automated planning, and decentralized POMDPs\n\nKonrad Zuse – German pioneer of hardware and software\n\nMark Zuckerberg – Founder of Facebook"
    }
}