{
    "id": "yago_13869_3",
    "rank": 22,
    "data": {
        "url": "https://stackoverflow.com/questions/338768/python-error-importerror-no-module-named",
        "read_more_link": "",
        "language": "en",
        "title": "Python error \"ImportError: No module named\"",
        "top_image": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "meta_img": "https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded",
        "images": [
            "https://i.sstatic.net/rb7ih.jpg?s=64",
            "https://www.gravatar.com/avatar/ba0f0fba9f47084b6a292a63aca16d72?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/cdca0dc45085388c1b753104ce4c8648?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/93s1DAKN.png?s=64",
            "https://www.gravatar.com/avatar/9ff190466c53c8352db34547ed022ed6?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/kZ9kN.jpg?s=64",
            "https://i.sstatic.net/RIZKi.png?s=64",
            "https://www.gravatar.com/avatar/c6202c2569ebda32705040fae1380396?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/aPIhh.jpg?s=64",
            "https://i.sstatic.net/EDw6M.jpg?s=64",
            "https://lh5.googleusercontent.com/-HcKtiretO2g/AAAAAAAAAAI/AAAAAAAAAH0/IXGAL7MX8sQ/photo.jpg?sz=64",
            "https://i.sstatic.net/UxXtL.jpg?s=64",
            "https://i.sstatic.net/RIZKi.png?s=64",
            "https://www.gravatar.com/avatar/ba0f0fba9f47084b6a292a63aca16d72?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/nTL9N.jpg?s=64",
            "https://i.sstatic.net/RHjE5.png?s=64",
            "https://i.sstatic.net/SQZLn.png?s=64",
            "https://i.sstatic.net/UIrGI.jpg?s=64",
            "https://www.gravatar.com/avatar/9c52ad00ba2f2602661c49f896733229?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/d69c5905ecf42d68241c000a99b9703b?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/b723ebfee6f288ce0da796a3773765f0?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://www.gravatar.com/avatar/681e3955c0fbd1b331d85cade3d92399?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/313a517a47d3bcf4091e397204facec9?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/oHpHx.jpg",
            "https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/e9afcf11d81904cdb5677c13d249b6c5?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/6574f92ea9801f61647367fc814cd7eb?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/WuV65.jpg?s=64",
            "https://i.sstatic.net/M03fh.jpg?s=64",
            "https://i.sstatic.net/RIZKi.png?s=64",
            "https://www.gravatar.com/avatar/30750dfdd4d7294dae9e4268e669cd5f?s=64&d=identicon&r=PG",
            "https://i.sstatic.net/SFpY9.png",
            "https://lh4.googleusercontent.com/-triDFH1RN3o/AAAAAAAAAAI/AAAAAAAAAC4/eEwLD4rmuWs/photo.jpg?sz=64",
            "https://www.gravatar.com/avatar/f567b0e4816b24631a0e80dbd20e21df?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/3505905a0cbbee9c69593e9decf5f993?s=64&d=identicon&r=PG",
            "https://www.gravatar.com/avatar/0775a6b141ee411594eddd37b5572e8d?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/NF7JG.jpg?s=64",
            "https://www.gravatar.com/avatar/de79730b3034f671dd389e8801572a40?s=64&d=identicon&r=PG&f=y&so-version=2",
            "https://i.sstatic.net/ryx4t.jpg?s=64",
            "https://i.sstatic.net/nY7TU.png?s=64",
            "https://i.sstatic.net/IgFWj.png?s=64",
            "https://i.sstatic.net/51EOK.jpg?s=64",
            "https://i.sstatic.net/PaonW.png?s=64",
            "https://i.sstatic.net/HEDFv.jpg?s=64",
            "https://lh3.googleusercontent.com/-0sNYSTvrlfo/AAAAAAAAAAI/AAAAAAAAAZo/xf67s9oYNtU/photo.jpg?sz=64",
            "https://stackoverflow.com/posts/338768/ivc/5def?prg=271f84bd-39d2-45c0-a0e7-b14cfb3b89e3",
            "https://stackoverflow.com/js-false.gif"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": "2008-12-03T21:26:28",
        "summary": "",
        "meta_description": "Python is installed in a local directory.  \n\nMy directory tree looks like this:\n\n(local directory)/site-packages/toolkit/interface.py\r\nMy code is in here:\n\n(local directory)/site-packages/toolkit/",
        "meta_lang": "en",
        "meta_favicon": "https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196",
        "meta_site_name": "Stack Overflow",
        "canonical_link": "https://stackoverflow.com/questions/338768/python-error-importerror-no-module-named",
        "text": "I ran into something very similar when I did this exercise in LPTHW; I could never get Python to recognise that I had files in the directory I was calling from. But I was able to get it to work in the end. What I did, and what I recommend, is to try this:\n\n(NOTE: From your initial post, I am assuming you are using an *NIX-based machine and are running things from the command line, so this advice is tailored to that. Since I run Ubuntu, this is what I did)\n\nChange directory (cd) to the directory above the directory where your files are. In this case, you're trying to run the mountain.py file, and trying to call the toolkit.interface.py module, which are in separate directories. In this case, you would go to the directory that contains paths to both those files (or in other words, the closest directory that the paths of both those files share). Which in this case is the toolkit directory.\n\nWhen you are in the toolkit directory, enter this line of code on your command line:\n\nexport PYTHONPATH=.\n\nThis sets your PYTHONPATH to \".\", which basically means that your PYTHONPATH will now look for any called files within the directory you are currently in, (and more to the point, in the sub-directory branches of the directory you are in. So it doesn't just look in your current directory, but in all the directories that are in your current directory).\n\nAfter you've set your PYTHONPATH in the step above, run your module from your current directory (the toolkit directory). Python should now find and load the modules you specified.\n\nOn *nix, also make sure that PYTHONPATH is configured correctly, especially that it has this format:\n\n.:/usr/local/lib/python\n\n(Mind the .: at the beginning, so that it can search on the current directory, too.)\n\nIt may also be in other locations, depending on the version:\n\n.:/usr/lib/python .:/usr/lib/python2.6 .:/usr/lib/python2.7 and etc.\n\nYou are reading this answer says that your __init__.py is in the right place, you have installed all the dependencies and you are still getting the ImportError.\n\nI was facing a similar issue except that my program would run fine when ran using PyCharm but the above error when I would run it from the terminal. After digging further, I found out that PYTHONPATH didn't have the entry for the project directory. So, I set PYTHONPATH per Import statement works on PyCharm but not from terminal:\n\nexport PYTHONPATH=$PYTHONPATH:`pwd` (OR your project root directory)\n\nThere's another way to do this using sys.path as:\n\nimport sys sys.path.insert(0,'<project directory>') OR sys.path.append('<project directory>')\n\nYou can use insert/append based on the order in which you want your project to be searched.\n\nI solved my own problem, and I will write a summary of the things that were wrong and the solution:\n\nThe file needs to be called exactly __init__.py. If the extension is different such as in my case .py.bin then Python cannot move through the directories and then it cannot find the modules. To edit the files you need to use a Linux editor, such as vi or nano. If you use a Windows editor this will write some hidden characters.\n\nAnother problem that was affecting it was that I had another Python version installed by the root, so if someone is working with a local installation of python, be sure that the Python installation that is running the programs is the local Python. To check this, just do which python, and see if the executable is the one that is in your local directory. If not, change the path, but be sure that the local Python directory is before than the other Python.\n\nIf you have tried all methods provided above but failed, maybe your module has the same name as a built-in module. Or, a module with the same name existing in a folder that has a high priority in sys.path than your module's.\n\nTo debug, say your from foo.bar import baz complaints ImportError: No module named bar. Changing to import foo; print foo, which will show the path of foo. Is it what you expect?\n\nIf not, Either rename foo or use absolute imports.\n\nTo all those who still have this issue. I believe Pycharm gets confused with imports. For me, when i write 'from namespace import something', the previous line gets underlined in red, signaling that there is an error, but works. However ''from .namespace import something' doesn't get underlined, but also doesn't work.\n\nTry\n\ntry: from namespace import something except NameError: from .namespace import something\n\nMy two cents:\n\nSpit:\n\nTraceback (most recent call last): File \"bash\\bash.py\", line 454, in main import bosh File \"Wrye Bash Launcher.pyw\", line 63, in load_module mod = imp.load_source(fullname,filename+ext,fp) File \"bash\\bosh.py\", line 69, in <module> from game.oblivion.RecordGroups import MobWorlds, MobDials, MobICells, \\ ImportError: No module named RecordGroups\n\nThis confused the hell out of me - went through posts and posts suggesting ugly syspath hacks (as you see my __init__.py were all there). Well turns out that game/oblivion.py and game/oblivion was confusing python which spit out the rather unhelpful \"No module named RecordGroups\". I'd be interested in a workaround and/or links documenting this (same name) behavior -> EDIT (2017.01.24) - have a look at What If I Have a Module and a Package With The Same Name? Interestingly normally packages take precedence but apparently our launcher violates this.\n\nEDIT (2015.01.17): I did not mention we use a custom launcher dissected here.\n\nIn my case, because I'm using PyCharm and PyCharm create a 'venv' for every project in project folder, but it is only a mini env of python. Although you have installed the libraries you need in Python, but in your custom project 'venv', it is not available. This is the real reason of 'ImportError: No module named xxxxxx' occurred in PyCharm. To resolve this issue, you must add libraries to your project custom env by these steps:\n\nIn PyCharm, from menu 'File'->Settings\n\nIn Settings dialog, Project: XXXProject->Project Interpreter\n\nClick \"Add\" button, it will show you 'Available Packages' dialog\n\nSearch your library, click 'Install Package'\n\nThen, all you needed package will be installed in you project custom 'venv' folder.\n\nEnjoy.\n\nIf you are using a setup script/utility (e.g. setuptools) to deploy your package, don't forget to add the respective files/modules to the installer.\n\nWhen supported, use find_packages() or similar to automatically add new packages to the setup script. This will absolutely save you from a headache, especially if you put your project aside for some time and then add something later on.\n\nimport setuptools setuptools.setup( name=\"example-pkg\", version=\"0.0.1\", author=\"Example Author\", author_email=\"[email protected]\", description=\"A small example package\", packages=setuptools.find_packages(), classifiers=[ \"Programming Language :: Python :: 3\", \"Operating System :: OS Independent\", ], python_requires='>=3.6', )\n\n(Example taken from setuptools documentation)\n\nI had the same problem (Python 2.7 Linux), I have found the solution and i would like to share it. In my case i had the structure below:\n\nBooklet -> __init__.py -> Booklet.py -> Question.py default -> __init_.py -> main.py\n\nIn 'main.py' I had tried unsuccessfully all the combinations bellow:\n\nfrom Booklet import Question from Question import Question from Booklet.Question import Question from Booklet.Question import * import Booklet.Question # and many othet various combinations ...\n\nThe solution was much more simple than I thought. I renamed the folder \"Booklet\" into \"booklet\" and that's it. Now Python can import the class Question normally by using in 'main.py' the code:\n\nfrom booklet.Booklet import Booklet from booklet.Question import Question from booklet.Question import AnotherClass\n\nFrom this I can conclude that Package-Names (folders) like 'booklet' must start from lower-case, else Python confuses it with Class names and Filenames.\n\nApparently, this was not your problem, but John Fouhy's answer is very good and this thread has almost anything that can cause this issue. So, this is one more thing and I hope that maybe this could help others.\n\nAfter just suffering the same issue I found my resolution was to delete all pyc files from my project, it seems like these cached files were somehow causing this error.\n\nEasiest way I found to do this was to navigate to my project folder in Windows explorer and searching for *.pyc, then selecting all (Ctrl+A) and deleting them (Ctrl+X).\n\nIts possible I could have resolved my issues by just deleting the specific pyc file but I never tried this\n\nI faced the same problem: Import error. In addition the library've been installed 100% correctly. The source of the problem was that on my PC 3 version of python (anaconda packet) have been installed). This is why the library was installed no to the right place. After that I just changed to the proper version of python in the my IDE PyCharm."
    }
}