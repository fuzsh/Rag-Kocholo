{
    "id": "dbpedia_8305_1",
    "rank": 31,
    "data": {
        "url": "https://support.zivid.com/api-reference/changelog.html",
        "read_more_link": "",
        "language": "en",
        "title": "SDK Changelog â€” ZIVID KNOWLEDGE BASE documentation",
        "top_image": "",
        "meta_img": "",
        "images": [
            "https://support.zivid.com/_static/zivid-logo-light.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [],
        "publish_date": null,
        "summary": "",
        "meta_description": "",
        "meta_lang": "",
        "meta_favicon": "../_static/zivid.ico",
        "meta_site_name": "",
        "canonical_link": "https://support.zivid.com/api-reference/changelog.html",
        "text": "Added support for perpendicular patterns (twice the amount of patterns: horizontal + vertical). Use enablePerpendicularPatterns() in API (or toggle it via preferences in GUI). IMPORTANT: Due to limitations in the current hardware, the projector exposure time must be increased to above approx. 33000 microseconds for this to be stable.\n\nAdded reflection filter which can detect and remove outliers due to reflections. Note that the reflection filter works best when perpendicular patterns are used (see Preferences). Turn it on via enableReflectionFilter() in API.\n\nShapeCrafterGUI: Support for LGGC (Large Gap Gray Code) error correcting pattern mode via Edit->Preferences, or via enableErrorCorrectingCode() in the API.\n\nSaturated pixels can now be detected and removed. Should improve fusion of HDR measurements. Enable it via Preferences in the GUI (or call enable) or call setMaskSaturated in API.\n\nAdded function getFirmwareLabel to get firmware revision (C++ and .NET API).\n\nShapeCrafterAPI: Added support for revision 2 of PCB. Note that it has a different pinning for e.g. the iris (hence the setProductRevision function).\n\nSelect product revision in preferences dialog of GUI (handles differences between Rev. 0 (PoC), Engineering Model Rev. 1 and Engineering Model Rev. 2.\n\nAdded setProductRevision() function to API. Please call this function before initializing ShapeCrafter.\n\nAdded isConnected() functions to C++ and .NET API.\n\nFunction initialize() now returns a boolean flag that tells whether both camera and projector could be successfully connected.\n\nFirmware update: Zivid nows starts with a 7-second splash image and then turns itself off. This requires a firmware update. Please download and install associated firmware: ZIVID_v0_9_10_ROM_v300_splash.bin.\n\nShapeCrafterNET: Added Logger.setLogCallback() function. Allows clients of .NET API to receive log callback messages from underlying C++ API.\n\nShapeCrafterNET: Improved StringSettings and StringSetting classes. Now behaves more like in C++ (can be read/written via indexing).\n\nShapeCrafterNET: Attempted to fix a bug which sometimes resulted in a crash at exit when using the .NET API.\n\nShapeCrafterNET: Added getVersionInfoForModule() function, which returns version information for a given DLL.\n\nShapeCrafterGUI: See version numbers of all DLLs via the Help->About dialog box.\n\nShapeCrafterGUI: Support for viewing of the point cloud in monochrome color (disable RGB) via a button in the toolbar.\n\nShapeCrafterGUI: Mesh view now updates visualization instantaneously.\n\nShapeCrafterGUI: Fixed bug related to making uncalibrated measurements.\n\nShapeCrafterGUI: Clicking apply in preferences dialog should now re-initialize the system (i.e. load new calibration files etc.).\n\nCloudViewer: New application for visualizing point clouds that is no longed based on PCL (not it is based on DirectX) Can also be associated with W3P files.\n\nShapeCrafterAPI: An exception is now thrown if the camera cannot be initialized.\n\nPython API: Added support for controlling the iris.\n\nZividCalibrationApp: New Qt-based calibration application. The application attempts to detect the image corners in projector/camera before images can be saved."
    }
}