{
    "id": "dbpedia_111_0",
    "rank": 57,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Substitute_character",
        "read_more_link": "",
        "language": "en",
        "title": "Substitute character",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2005-12-05T09:44:40+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Substitute_character",
        "text": "Non-printing computer data item\n\n\"␦\" redirects here. For the Arabic question mark, see ؟. For the rhetorical question or irony mark, see ⸮.\n\n\"Ctrl+Z\" redirects here. For the \"undo\" function, see Undo.\n\nIn computer data, a substitute character (␚) is a control character that is used to pad transmitted data in order to send it in blocks of fixed size, or to stand in place of a character that is recognized to be invalid, erroneous or unrepresentable on a given device. It is also used as an escape sequence in some programming languages.\n\nIn the ASCII character set, this character is encoded by the number 26 (1A hex). Standard keyboards transmit this code when the Ctrl and Z keys are pressed simultaneously ( Ctrl+Z, often documented by convention as ^Z).[1] Unicode inherits this character from ASCII, but recommends that the replacement character (�, U+FFFD) be used instead to represent un-decodable inputs, when the output encoding is compatible with it.\n\nUses\n\n[edit]\n\nEnd of file\n\n[edit]\n\nMain article: End-of-file\n\nHistorically, under PDP-6 monitor,[2] RT-11, VMS, and TOPS-10,[3] and in early PC CP/M 1 and 2 operating systems (and derivatives like MP/M) it was necessary to explicitly mark the end of a file (EOF) because the native filesystem could not record the exact file size by itself; files were allocated in extents (records) of a fixed size, typically leaving some allocated but unused space at the end of each file.[4][5][6][7] This extra space was filled with 1A16 (hex) characters under CP/M. The extended CP/M filesystems used by CP/M 3 and higher (and derivatives like Concurrent CP/M, Concurrent DOS, and DOS Plus) did support byte-granular files,[8][9] so this was no longer a requirement, but it remained as a convention (especially for text files) in order to ensure backward compatibility.\n\nIn CP/M, 86-DOS, MS-DOS, PC DOS, DR-DOS, and their various derivatives, the SUB character was also used to indicate the end of a character stream,[citation needed] and thereby used to terminate user input in an interactive command line window (and as such, often used to finish console input redirection, e.g. as instigated by the command COPY CON: TYPEDTXT.TXT).\n\nWhile no longer technically required to indicate the end of a file, as of 2017, many text editors[which?] and program languages still support this convention, or can be configured to insert this character at the end of a file when editing, or at least properly cope with them in text files.[citation needed] In such cases, it is often termed a \"soft\" EOF, as it does not necessarily represent the physical end of the file, but is more a marker indicating that \"there is no useful data beyond this point\". In reality, more data may exist beyond this character up to the actual end of the data in the file system, thus it can be used to hide file content when the file is entered at the console or opened in editors. Many file format standards (e.g. PNG or GIF) include the SUB character in their headers to perform precisely this function. Some modern text file formats (e.g. CSV-1203[10]) still recommend a trailing EOF character to be appended as the last character in the file. However, typing Control+Z does not embed an EOF character into a file in either DOS or Windows, nor do the APIs of those systems use the character to denote the actual end of a file.\n\nSome programming languages (e.g. Visual Basic) will not read past a \"soft\" EOF when using the built-in text file reading primitives (INPUT, LINE INPUT etc.),[citation needed] and alternate methods must be adopted, e.g. opening the file in binary mode or using the File System Object to progress beyond it.\n\nCharacter 26 was used to mark \"End of file\" even though ASCII calls this character Substitute, and has other characters to indicate \"End of file\". Number 28 which is called \"File Separator\" has also been used for similar purposes.\n\nOther uses\n\n[edit]\n\nIn Unix-like operating systems, this character is typically used in shells as a way for the user to suspend the currently executing interactive process.[11] The suspended process can then be resumed in foreground (interactive) mode, or be made to resume execution in background mode, or be terminated. When entered by a user at their computer terminal, the currently running foreground process is sent a \"terminal stop\" (SIGTSTP) signal, which generally causes the process to suspend its execution. The user can later continue the process execution by using the \"foreground\" command (fg) or the \"background\" command (bg).\n\nThe Unicode Security Considerations report[12] recommends this character as a safe replacement for unmappable characters during character set conversion.\n\nIn many GUIs and applications, Control+Z (⌘ Command+Z on macOS) can be used to undo the last action. In many applications, earlier actions than the last one can also be undone by pressing Control+Z multiple times. Control+Z was one of a handful of keyboard sequences chosen by the program designers at Xerox PARC to control text editing.\n\nRepresentation\n\n[edit]\n\nASCII and Unicode representation of \"substitute\":\n\nOctal code: 32\n\nDecimal code: 26\n\nHexadecimal code: 1A, U+001A\n\nMnemonic symbol: SUB\n\nBinary value: 11010\n\nSee also\n\n[edit]\n\nC0 and C1 control codes (ISO 646)\n\nU+FFFD (Unicode replacement character �)\n\nAccess key\n\nControl-C\n\nControl-G\n\nControl-V\n\nControl-X\n\nControl-\\\n\nKeyboard shortcut\n\nList of file signatures\n\n.notdef, a symbol (sometimes called by the slang term tofu) used to represent a missing character\n\nNoto fonts, a Google project to eliminate missing characters\n\nReferences\n\n[edit]\n\nFurther reading\n\n[edit]"
    }
}