{
    "id": "dbpedia_111_0",
    "rank": 62,
    "data": {
        "url": "https://en.wikipedia.org/wiki/Email_address",
        "read_more_link": "",
        "language": "en",
        "title": "Email address",
        "top_image": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "meta_img": "https://en.wikipedia.org/static/favicon/wikipedia.ico",
        "images": [
            "https://en.wikipedia.org/static/images/icons/wikipedia.png",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-wordmark-en.svg",
            "https://en.wikipedia.org/static/images/mobile/copyright/wikipedia-tagline-en.svg",
            "https://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/40px-Edit-clear.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/Crystal_Clear_app_linneighborhood.svg/28px-Crystal_Clear_app_linneighborhood.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Noun-technology.svg/29px-Noun-technology.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/16px-Wikibooks-logo-en-noslogan.svg.png",
            "https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/16px-Wikibooks-logo-en-noslogan.svg.png",
            "https://upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/12px-Commons-logo.svg.png",
            "https://login.wikimedia.org/wiki/Special:CentralAutoLogin/start?type=1x1",
            "https://en.wikipedia.org/static/images/footer/wikimedia-button.svg",
            "https://en.wikipedia.org/static/images/footer/poweredby_mediawiki.svg"
        ],
        "movies": [],
        "keywords": [],
        "meta_keywords": [
            ""
        ],
        "tags": null,
        "authors": [
            "Contributors to Wikimedia projects"
        ],
        "publish_date": "2003-08-12T20:52:01+00:00",
        "summary": "",
        "meta_description": "",
        "meta_lang": "en",
        "meta_favicon": "/static/apple-touch/wikipedia.png",
        "meta_site_name": "",
        "canonical_link": "https://en.wikipedia.org/wiki/Email_address",
        "text": "Identifier of the destination where email messages are delivered\n\nAn email address identifies an email box to which messages are delivered. While early messaging systems used a variety of formats for addressing, today, email addresses follow a set of specific rules originally standardized by the Internet Engineering Task Force (IETF) in the 1980s, and updated by RFC 5322 and 6854. The term email address in this article refers to just the addr-spec in Section 3.4 of RFC 5322. The RFC defines address more broadly as either a mailbox or group. A mailbox value can be either a name-addr, which contains a display-name and addr-spec, or the more common addr-spec alone.\n\nAn email address, such as john.smith@example.com, is made up from a local-part, the symbol @, and a domain, which may be a domain name or an IP address enclosed in brackets. Although the standard requires the local-part to be case-sensitive,[1] it also urges that receiving hosts deliver messages in a case-independent manner,[2] e.g., that the mail system in the domain example.com treat John.Smith as equivalent to john.smith; some mail systems even treat them as equivalent to johnsmith.[3] Mail systems often limit the users' choice of name to a subset of the technically permitted characters; with the introduction of internationalized domain names, efforts are progressing to permit non-ASCII characters in email addresses.\n\nDue to the ubiquity of email in today's world, email addresses are often used as regular usernames by many websites and services that provide a user profile or account.[4] For example, if a user wants to login to their Xbox Live video gaming profile, they would use their Microsoft account in the form of an email address as the username ID, even though the service in this case is not email.\n\nAn email address consists of two parts, a local-part (sometimes a user name, but not always) and a domain; if the domain is a domain name rather than an IP address then the SMTP client uses the domain name to look up the mail exchange IP address. The general format of an email address is local-part@domain, e.g. jsmith@[192.168.1.2], jsmith@example.com. The SMTP client transmits the message to the mail exchange, which may forward it to another mail exchange until it eventually arrives at the host of the recipient's mail system.\n\nThe transmission of electronic mail from the author's computer and between mail hosts in the Internet uses the Simple Mail Transfer Protocol (SMTP), defined in RFC 5321 and 5322, and extensions such as RFC 6531. The mailboxes may be accessed and managed by applications on personal computers, mobile devices or webmail sites, using the SMTP protocol and either the Post Office Protocol (POP) or the Internet Message Access Protocol (IMAP).\n\nWhen transmitting email messages, mail user agents (MUAs) and mail transfer agents (MTAs) use the domain name system (DNS) to look up a Resource Record (RR) for the recipient's domain. A mail exchanger resource record (MX record) contains the name of the recipient's mailserver. In absence of an MX record, an address record (A or AAAA) directly specifies the mail host.\n\nThe local-part of an email address has no significance for intermediate mail relay systems other than the final mailbox host. Email senders and intermediate relay systems must not assume it to be case-insensitive, since the final mailbox host may or may not treat it as such. A single mailbox may receive mail for multiple email addresses, if configured by the administrator. Conversely, a single email address may be the alias to a distribution list to many mailboxes. Email aliases, electronic mailing lists, sub-addressing, and catch-all addresses, the latter being mailboxes that receive messages regardless of the local-part, are common patterns for achieving a variety of delivery goals.\n\nThe addresses found in the header fields of an email message are not directly used by mail exchanges to deliver the message. An email message also contains a message envelope that contains the information for mail routing. While envelope and header addresses may be equal, forged email addresses (also called spoofed email addresses) are often seen in spam, phishing, and many other Internet-based scams. This has led to several initiatives which aim to make such forgeries of fraudulent emails easier to spot.\n\nThe format of an email address is local-part@domain, where the local-part may be up to 64 octets long and the domain may have a maximum of 255 octets.[5] The formal definitions are in RFC 5322 (sections 3.2.3 and 3.4.1) and RFC 5321—with a more readable form given in the informational RFC 3696 (written by J. Klensin, the author of RFC 5321) and the associated errata.\n\nAn email address also may have an associated \"display-name\" (Display Name) for the recipient, which precedes the address specification, now surrounded by angled brackets, for example: John Smith <john.smith@example.org>.[6] Email spammers and phishers will often use \"Display Name spoofing\" to trick their victims, by using a false Display Name, or by using a different email address as the Display Name.[7]\n\nEarlier forms of email addresses for other networks than the Internet included other notations, such as that required by X.400, and the UUCP bang path notation, in which the address was given in the form of a sequence of computers through which the message should be relayed. This was widely used for several years, but was superseded by the Internet standards promulgated by the Internet Engineering Task Force (IETF).\n\nThe local-part of the email address may be unquoted or may be enclosed in quotation marks.\n\nIf unquoted, it may use any of these ASCII characters:\n\nuppercase and lowercase Latin letters A to Z and a to z\n\ndigits 0 to 9\n\nprintable characters !#$%&'*+-/=?^_`{|}~\n\ndot ., provided that it is not the first or last character and provided also that it does not appear consecutively (e.g., John..Doe@example.com is not allowed).[8]\n\nIf quoted, it may contain Space, Horizontal Tab (HT), any ASCII graphic except Backslash and Quote and a quoted-pair consisting of a Backslash followed by HT, Space or any ASCII graphic; it may also be split between lines anywhere that HT or Space appears. In contrast to unquoted local-parts, the addresses \".John.Doe\"@example.com, \"John.Doe.\"@example.com and \"John..Doe\"@example.com are allowed.\n\nThe maximum total length of the local-part of an email address is 64 octets.[9]\n\nSpace and special characters \"(),:;<>@[\\] are allowed with restrictions (they are only allowed inside a quoted string, as described in the paragraph below, and in that quoted string, any backslash or double-quote must be preceded once by a backslash);\n\nComments are allowed with parentheses at either end of the local-part; e.g., john.smith(comment)@example.com and (comment)john.smith@example.com are both equivalent to john.smith@example.com.\n\nIn addition to the above ASCII characters, international characters above U+007F, encoded as UTF-8, are permitted by RFC 6531 when the EHLO specifies SMTPUTF8, though even mail systems that support SMTPUTF8 and 8BITMIME may restrict which characters to use when assigning local-parts.\n\nA local-part is either a Dot-string or a Quoted-string; it cannot be a combination. Quoted strings and characters, however, are not commonly used.[citation needed] RFC 5321 also warns that \"a host that expects to receive mail SHOULD avoid defining mailboxes where the Local-part requires (or uses) the Quoted-string form\".\n\nThe local-part postmaster is treated specially—it is case-insensitive, and should be forwarded to the domain email administrator. Technically all other local-parts are case-sensitive, therefore johns@example.com and JohnS@example.com specify different mailboxes; however, many organizations treat uppercase and lowercase letters as equivalent. Indeed, RFC 5321 warns that \"a host that expects to receive mail SHOULD avoid defining mailboxes where ... the Local-part is case-sensitive\".\n\nDespite the wide range of special characters which are technically valid, organisations, mail services, mail servers and mail clients in practice often do not accept all of them. For example, Windows Live Hotmail only allows creation of email addresses using alphanumerics, dot (.), underscore (_) and hyphen (-).[10] Common advice is to avoid using some special characters to avoid the risk of rejected emails.[11]\n\nAccording to RFC 5321 2.3.11 Mailbox and Address, \"the local-part MUST be interpreted and assigned semantics only by the host specified in the domain of the address\". This means that no assumptions can be made about the meaning of the local-part of another mail server. It is entirely up to the configuration of the mail server.\n\nInterpretation of the local-part is dependent on the conventions and policies implemented in the mail server. For example, case sensitivity may distinguish mailboxes differing only in capitalization of characters of the local-part, although this is not very common.[12] For example, Gmail ignores all dots in the local-part of a @gmail.com address for the purposes of determining account identity.[13]\n\nSome mail services support a tag included in the local-part, such that the address is an alias to a prefix of the local-part. Typically the characters following a plus and less often the characters following a minus, so fred+bah@domain and fred+foo@domain might end up in the same inbox as fred+@domain or even as fred@domain. For example, the address joeuser+tag@example.com denotes the same delivery address as joeuser@example.com. RFC 5233[14] refers to this convention as subaddressing, but it is also known as plus addressing, tagged addressing or mail extensions. This can be useful for tagging emails for sorting, and for spam control.[15]\n\nAddresses of this form, using various separators between the base name and the tag, are supported by several email services, including Andrew Project (plus),[16] Runbox (plus),[17] Gmail (plus),[15] Rackspace (plus), Yahoo! Mail Plus (hyphen),[18] Apple's iCloud (plus), Outlook.com (plus),[19] Proton Mail (plus),[20] Fastmail (plus and Subdomain Addressing),[21] postale.io (plus),[22] Pobox (plus),[23] MeMail (plus),[24] and MTAs like MMDF (equals), Qmail and Courier Mail Server (hyphen).[25][26] Postfix and Exim allow configuring an arbitrary separator from the legal character set.[27][28]\n\nThe text of the tag may be used to apply filtering,[25] or to create single-use, or disposable email addresses.[29]\n\nThe domain name part of an email address has to conform to strict guidelines: it must match the requirements for a hostname, a list of dot-separated DNS labels, each label being limited to a length of 63 characters and consisting of:[8]: §2\n\nUppercase and lowercase Latin letters A to Z and a to z;\n\nDigits 0 to 9, provided that top-level domain names are not all-numeric;\n\nHyphen -, provided that it is not the first or last character.\n\nThis rule is known as the LDH rule (letters, digits, hyphen). In addition, the domain may be an IP address literal, surrounded by square brackets [], such as jsmith@[192.168.2.1] or jsmith@[IPv6:2001:db8::1], although this is rarely seen except in email spam. Internationalized domain names (which are encoded to comply with the requirements for a hostname) allow for presentation of non-ASCII domains. In mail systems compliant with RFC 6531 and RFC 6532 an email address may be encoded as UTF-8, both a local-part as well as a domain name.\n\nComments are allowed in the domain as well as in the local-part; for example, john.smith@(comment)example.com and john.smith@example.com(comment) are equivalent to john.smith@example.com.\n\nRFC 2606 specifies that certain domains, for example those intended for documentation and testing, should not be resolvable and that as a result mail addressed to mailboxes in them and their subdomains should be non-deliverable. Of note for e-mail are example, invalid, example.com, example.net, and example.org.\n\nsimple@example.com\n\nvery.common@example.com\n\nFirstName.LastName@EasierReading.org (case is always ignored after the @ and usually before)\n\nx@example.com (one-letter local-part)\n\nlong.email-address-with-hyphens@and.subdomains.example.com\n\nuser.name+tag+sorting@example.com (may be routed to user.name@example.com inbox depending on mail server)\n\nname/surname@example.com (slashes are a printable character, and allowed)\n\nadmin@example (local domain name with no TLD, although ICANN highly discourages dotless email addresses[30])\n\nexample@s.example (see the List of Internet top-level domains)\n\n\" \"@example.org (space between the quotes)\n\n\"john..doe\"@example.org (quoted double dot)\n\nmailhost!username@example.org (bangified host route used for uucp mailers)\n\n\"very.(),:;<>[]\\\".VERY.\\\"very@\\\\ \\\"very\\\".unusual\"@strange.example.com (include non-letters character AND multiple at sign, the first one being double quoted)\n\nuser%example.com@example.org (% escaped mail route to user@example.com via example.org)\n\nuser-@example.org (local-part ending with non-alphanumeric character from the list of allowed printable characters)\n\npostmaster@[123.123.123.123] (IP addresses are allowed instead of domains when in square brackets, but strongly discouraged)\n\npostmaster@[IPv6:2001:0db8:85a3:0000:0000:8a2e:0370:7334] (IPv6 uses a different syntax)\n\n_test@[IPv6:2001:0db8:85a3:0000:0000:8a2e:0370:7334] (begin with underscore different syntax)\n\nI❤️CHOCOLATE@example.com (emoji are only allowed with SMTPUTF8)\n\nabc.example.com (no @ character)\n\na@b@c@example.com (only one @ is allowed outside quotation marks)\n\na\"b(c)d,e:f;g<h>i[j\\k]l@example.com (none of the special characters in this local-part are allowed outside quotation marks)\n\njust\"not\"right@example.com (quoted strings must be dot separated or be the only element making up the local-part)\n\nthis is\"not\\allowed@example.com (spaces, quotes, and backslashes may only exist when within quoted strings and preceded by a backslash)\n\nthis\\ still\\\"not\\\\allowed@example.com (even if escaped (preceded by a backslash), spaces, quotes, and backslashes must still be contained by quotes)\n\n1234567890123456789012345678901234567890123456789012345678901234+x@example.com (local-part is longer than 64 characters)\n\ni.like.underscores@but_they_are_not_allowed_in_this_part (underscore is not allowed in domain part)\n\nEmail addresses are often requested as input to website as validation of user existence. Other validation methods are available, such as cell phone number validation, postal mail validation, and fax validation.\n\nAn email address is generally recognized as having two parts joined with an at-sign (@), although technical specification detailed in RFC 822 and subsequent RFCs are more extensive.[31]\n\nSyntactically correct, verified email addresses do not guarantee that an email box exists. Thus many mail servers use other techniques and check the mailbox existence against relevant systems such as the Domain Name System for the domain or using callback verification to check if the mailbox exists. Callback verification is an imperfect solution, as it may be disabled to avoid a directory harvest attack, or callbacks may be reported as spam and lead to listing on a DNSBL.\n\nSeveral validation techniques may be utilized to validate a user email address. For example,[32]\n\nVerification links: Email address validation is often accomplished for account creation on websites by sending an email to the user-provided email address with a special temporary hyperlink. On receipt, the user opens the link, immediately activating the account. Email addresses are also useful as means of delivering messages from a website, e.g., user messages, user actions, to the email inbox.\n\nFormal and informal standards: RFC 3696 provides specific advice for validating Internet identifiers, including email addresses. Some websites instead attempt to evaluate the validity of email addresses through arbitrary standards, such as by rejecting addresses containing valid characters, such as + and /, or enforcing arbitrary length limitations. Email address internationalization provides for a much larger range of characters than many current validation algorithms allow, such as all Unicode characters above U+0080, encoded as UTF-8.\n\nAlgorithmic tools: Large websites, bulk mailers and spammers require efficient tools to validate email addresses. Such tools depend upon heuristic algorithms and statistical models.[33]\n\nSender reputation: An email sender's reputation may be used to attempt to verify whether the sender is trustworthy or a potential spammer. Factors that may be incorporated into an assessment of sender reputation include the quality of past contact with or content provided by, and engagement levels of, the sender's IP address or email address.\n\nBrowser-based verification: HTML5 forms implemented in many browsers allow email address validation to be handled by the browser.[34]\n\nSome companies offer services to validate an email address, often using an application programming interface, but there is no guarantee that it will provide accurate results.\n\nThe IETF conducts a technical and standards working group devoted to internationalization issues of email addresses, entitled Email Address Internationalization (EAI, also known as IMA, Internationalized Mail Address).[35] This group produced RFC 6530, 6531, 6532 and 6533, and continues to work on additional EAI-related RFCs.\n\nThe IETF's EAI Working group published RFC 6530 \"Overview and Framework for Internationalized Email\", which enabled non-ASCII characters to be used in both the local-parts and domain of an email address. RFC 6530 provides for email based on the UTF-8 encoding, which permits the full repertoire of Unicode. RFC 6531 provides a mechanism for SMTP servers to negotiate transmission of the SMTPUTF8 content.\n\nThe basic EAI concepts involve exchanging mail in UTF-8. Though the original proposal included a downgrading mechanism for legacy systems, this has now been dropped.[36] The local servers are responsible for the local-part of the address, whereas the domain would be restricted by the rules of internationalized domain names, though still transmitted in UTF-8. The mail server is also responsible for any mapping mechanism between the IMA form and any ASCII alias.\n\nEAI enables users to have a localized address in a native language script or character set, as well as an ASCII form for communicating with legacy systems or for script-independent use. Applications that recognize internationalized domain names and mail addresses must have facilities to convert these representations.\n\nSignificant demand for such addresses is expected in China, Japan, Russia, and other markets that have large user bases in a non-Latin-based writing system.\n\nFor example, in addition to the .in top-level domain, the government of India in 2011[37] got approval for \".bharat\", (from Bhārat Gaṇarājya), written in seven different scripts[38][39] for use by Gujrati, Marathi, Bangali, Tamil, Telugu, Punjabi and Urdu speakers. Indian company XgenPlus.com claims to be the world's first EAI mailbox provider,[40] and the Government of Rajasthan now supplies a free email account on domain राजस्थान.भारत for every citizen of the state.[41] A leading media house Rajasthan Patrika launched their IDN domain पत्रिका.भारत with contactable email.\n\nThe example addresses below would not be handled by RFC 5321 based servers without an extension, but are permitted by the UTF8SMTP extension of RFC 6530 and 6531. Servers compliant with this will be able to handle these:\n\nLatin alphabet with diacritics: éléonore@example.com\n\nGreek alphabet: δοκιμή@παράδειγμα.δοκιμή\n\nTraditional Chinese characters: 我買@屋企.香港\n\nJapanese characters: 二ノ宮@黒川.日本\n\nCyrillic characters: медведь@с-балалайкой.рф\n\nDevanagari characters: संपर्क@डाटामेल.भारत\n\ninternet portal\n\ntechnology portal\n\nAnti-spam techniques\n\nEmail client\n\nEmail box\n\nEmail authentication\n\nNon-Internet email address\n\nInternational email\n\nRFC 821 Simple Mail Transfer Protocol (Obsoleted by RFCs 2821 and 5321)\n\nRFC 822 Standard for the Format of ARPA Internet Text Messages (Obsoleted by RFC 2822) (Errata)\n\nRFC 1035 Domain names, Implementation and specification (Errata)\n\nRFC 1123 Requirements for Internet Hosts, Application and Support (Updated by RFC 2821, RFC 5321) (Errata)\n\nRFC 2142 Mailbox Names for Common Services, Roles and Functions (Errata)\n\nRFC 2821 Simple Mail Transfer Protocol (Obsoletes RFC 821, Updates RFC 1123, Obsoleted by RFC 5321) (Errata)\n\nRFC 2822 Internet Message Format (Obsoletes RFC 822, Obsoleted by RFC 5322) (Errata)\n\nRFC 3696 Application Techniques for Checking and Transformation of Names (Errata)\n\nRFC 4291 IP Version 6 Addressing Architecture (Updated by RFC 5952) (Errata)\n\nRFC 5321 Simple Mail Transfer Protocol (Obsoletes RFC 2821, Updates RFC 1123) (Errata)\n\nRFC 5322 Internet Message Format (Obsoletes RFC 2822, Updated by RFC 6854) (Errata)\n\nRFC 5598 Internet Mail Architecture\n\nRFC 5952 A Recommendation for IPv6 Address Text Representation (Updates RFC 4291) (Errata)\n\nRFC 6530 Overview and Framework for Internationalized Email (Obsoletes RFC 4952, 5504, 5825)\n\nRFC 6531 SMTP Extension for Internationalized Email (Obsoletes RFC 5336)\n\nRFC 6854 Update to Internet Message Format to Allow Group Syntax in the \"From:\" and \"Sender:\" Header Fields (Updates RFC 5322)"
    }
}